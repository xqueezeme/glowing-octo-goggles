{
    "title": "Secret Smiles and Three Little Words Pt. 43",
    "pages": [
        "Chapter 59 \n\n\"You're late,\" Royce complained the moment Elizabeth sat down. \n\n\"I'm sorry,\" she frowned. \"Traffic was bad.\" \n\n\"You should plan ahead,\" he continued angrily. \n\n\"I know,\" she agreed. \n\nShe didn't know why he was upset. It was not like he was going to wait for her anyway. The wine bottle on the table was half gone already. He swirled the burgundy liquid around in his glass. \n\n\"I've ordered already,\" he said downing the last bit in his glass. He then reached out and filled his glass again, never bothering to offer her any. She finally had to fill her own glass. The waiter came and took her order as they sat in silence. She could feel the anger radiate off him and knew the meeting with his father went poorly. \n\nShe was growing tired of Royce's temper tantrums. They reminded her of why she didn't want kids. She never knew how to approach him. It was always a guessing game. There would be the good days where he would spend his time pleasuring her. Then there would be the days he was aloof, preferring her to leave and go elsewhere while he went about his business. Then there were the days he met with his father or the man his father put in charge of Royce's soon to be presidential campaign. \n\nThose days left him bitter and angry and he usually took it out on her. Either with harsh words meant to cut at her. Or spankings that left her unable to sit. Then there were the really bad days when he would flog her, harshly, so harshly she felt abused rather than cherished. \n\n\"Guess what I heard today,\" Royce's smile ticked up at the corners. \n\n\"What's that Master?\" \n\n\"It seems your replacement has the Super Dom, Gavin, wrapped around her finger!\" Royce laughed derisively. Elizabeth cocked her head and waited for him to explain. \n\n\"It seems not only did she manage to get him to pop the question, but now they have taken in her niece!\" Royce chuckled as he shook his head. \n\n\"Gavin with a child?\" Elizabeth smiled. \n\n\"Yes,\" Royce shook his head. \"So much for his Dom days!\" \n\n\"I think you can be both a father and a Dom!\" Elizabeth disagreed. \n\n\"My point is, he was supposed to be this perfect Dom! All the women want him, and lots of the men hold him in high esteem, but that little slut you picked out for him has converted him to a little bitch!\" Royce mocked. \n\n\"Gavin is not a bitch,\" Elizabeth rolled her eyes. \n\n\"Well then, I guess you aren't the sub you thought you were,\" Royce told her, his voice and eyes going cold. \"She managed to at least to get him to pop the question, something you could never do!\" \n\nElizabeth turned her eyes from him and his ridicule. Now he was hitting too close to home! She had thought the same thing. She always assumed Gavin had no interest in marriage as he never gave off the signals of anything but a Dom. The idea was never broached at any point in their relationship. \n\n\"Perhaps I chose the wrong woman to steal from him,\" Royce continued. \"I mean, she must fuck like a hurricane to make a man convert that quickly!\" \n\n\"I've been with her,\" Elizabeth growled back. \"She isn't all that, I had to teach her how to be a proper sub!\" \n\n\"Well, it seems the student has surpassed the teacher!\" Royce laughed as his meal was brought to him. \"I mean, first she manages to last longer than a year, then marriage, now she is making him take in her family? Must be one fabulous fuck!\" \n\n\"Why do you do this?\" Elizabeth asked him. \n\n\"Do this?\" \n\n\"Take your anger out on me?\" She complained. \"You meet with your father, then get pissed off and I have to take the brunt of it! If you would man up and stand up to him, you wouldn't be angry all the damn time!\" \n\n\"Are you questioning my manhood?\" he dared her. \n\n\"You think I'm afraid of anything you can do to me?\" she laughed. \"Trust me, I can handle much better than you can give!\" \n\n\"You think I won't strike you in this restaurant?\" he growled pushing his plate to the side. \n\n\"You think hitting me is going bother me?\" she threw back. \"I'm a fucking slave, I love the rough stuff!\" \n\nThey ate in silence, the people around them enjoying their meal. Unlike her. The meal they were enjoying had laughter with friends or family. Several couples looking into each other's eyes lustfully, passing time at dinner but wanting to get home to indulge in their sexual desires. \n\nThe table she was at had no laughter. It had no conversation. It most definitely didn't have the lustful looks. That had long since passed. Now they just fought with one another. The sex was infrequent and infuriating. She never came anymore unless she did it herself. Their sex life had fallen into a rut of two minutes of Royce gruffly fucking her without foreplay until he came. There were no sessions like she had enjoyed with Gavin. No intrigue in wondering what was in store for her. \n\nWith Gavin, he always kept her guessing, and that was half the fun. How was he going to please her? Was he going to fuck her roughly? Was he going to tie her up in one of his intricate knots? She never really knew. With Royce, that wasn't the case. She knew what was in store for her...utter disappointment. \n\nShe longed for the days with Gavin, the sessions that took hours and left her exhausted and satisfied. She longed for the spoiling Gavin always doled out. Soft baths, pleasurable massages. Pampering. Cooking for her, serving her dinner, opening her car door. Making sure she always took care of herself. \n\nShe thought of Alexandria. The first day she saw her there in the coffee shop she was turned on by her. The way she was looking at her through the top of her eyelashes as she drew her. Nothing made her feel as sexy as having someone steal looks at her to draw her. She didn't know why that simple situation struck her the way it did, but the idea she intrigued someone enough to spend multiple hours just drawing her made her feel important. \n\nAt the time, she felt Alexandria was a way out. A way to a better life. A more satisfying life, that is why she stopped her that day. She knew Gavin would like her, that was without question. She knew what he liked, what he liked to look at. She knew what his previous subs looked like. He liked the girl next door look. He liked a girl that could dress up and stun a crowd one night, then the next day throw a ball cap on and drink a beer with his friends watching a ballgame. \n\nElizabeth could do the wowing, but the beer with friends wasn't her. The more she learned about Alexandria the more she knew that Alexandria was the one to replace her. There would be no way Gavin could turn her down. Not sweet innocent Alexandria who was so eager to learn the life! \n\nNow she regretted it. If she had known then what she knew now, she would have let the blue eyed girl next door walk on by. She missed the old lifestyle. Yes, at first she liked the rougher sex, being taken by force. But the newness and the excitement of that soon waned. Now it was disappointing. He didn't fuck her roughly to her satisfaction, he didn't take that type of time. \n\nHe was also having erection problems and he was too proud to go to a doctor to get Viagra. The one time she suggested it he whipped her to the point it hurt to put a shirt on. Now it also seemed her trip to the White House was also in jeopardy. Royce's father was constantly complaining about her. Cutting her down. Suggesting other women, sometimes right in front of her. At least Royce didn't back down, but she doubted it was because he was committed to her. It was more he refused to bow to his father about everything. \n\nThey were planning her wedding. Something quick and private so it didn't look like Royce just ran off and got married for appearances, which is exactly what it was. She heard through the grapevine that Alexandria's wedding was going to be elaborate and expensive. She had also heard that the wedding dress alone was five figures. A custom made dress by one of the preeminent dress designers. That struck a jealous bone that caused her to begin to hate Alexandria. She was getting the life Elizabeth wanted. \n\n\"Well, I have another meeting set,\" Royce said standing up. \"I'll see you later.\" He walked away briskly without touching her. No gentle kiss the way Gavin always did. No soft fingers to the shoulder or her available skin. Hell, she would have taken a gritty, dirty sexual comment in her ear. \n\n\"How do you know that man?\" \n\nThe voice brought her out of her doldrums to look upon a young woman, perhaps in her early twenties. Elizabeth looked her over. Her milk chocolate skin was tight and wrinkle free showing she was young. Time had not begun its brutal assault on her fragile skin. \n\n\"He is my fianc\u00e9,\" Elizabeth told her warily. The look on the woman's face said it all. \n\n\"Oh God,\" the woman hung her head. \n\n\"He's fucking you,\" Elizabeth stated not overly surprised even if the young beauty before her was. \n\n\"He said he was single!\" the young woman defended. \"I'm so sorry!\" \n\n\"It's not your fault,\" Elizabeth said softly as she stood up and took hold of her purse. \"Men are pigs...my advice? Don't get mixed up with Royce...he can be abusive.\" \n\n\"You're not angry with me?\" the woman asked her surprised the dark headed woman didn't launch into a tirade like she wanted to when she saw Royce with her. \n\n\"No,\" Elizabeth shook her head. \"He's a user, he uses people to get what he wants then he moves on.\" \n\n\"If you know this then why are you with him?\" the woman asked. \n\n\"Because using people is what I used to do for a living, I'm better at it than anyone. Royce may use girls like you for gratification, but I'm using him to get what I want!\" Elizabeth left the woman there, her jaw dropped open in disbelief at what Elizabeth had said. \n\nStorming into their apartment twenty minutes later the anger hadn't subsided in her. Things were spiraling beyond her control now. She needed to tilt the balance back in her favor. She went to the window and stared out of it. She saw the reflection of Royce's desk in the glass. She spun and saw it. His laptop. He never went anywhere without his computer. \n\n\"Royce?\" she called out. She searched the apartment but he wasn't home. She came back to his desk and sat down. Pulling open the computer she typed in his password to gain access. \n\nScrolling through the files she found what she was looking for. Royce had told her that he had blackmail on his father that he could use to make his father go away. Once Royce got his Senate seat anyway. \n\nThe file was generic and Royce detailed the names for the rest of his files. This one only said \"keeper stuff\". She opened it. She scrolled through it. There were photocopies of lab reports, bills for hospitals and a copy of a blood test. There were also copies of memos sent to Royce's father, Limon, that detailed payoffs to women that Limon had slept with to keep them from going to the papers. There were several. \n\nThere were also copies of receipts and bank transfers to and from his campaign account to various other offshore accounts. In all, it appeared that Limon Rentrom had taken twenty million dollars from his campaign fund and hid it in overseas account. It was from that account that he paid off these women. \n\nThe DNA test confirmed that Limon was actually the father of his sister in law's baby, Royce's cousin. She slipped her jump drive into the port on the side of the computer and began downloading files. She would go through them all later, when she was sure Royce wouldn't walk in on her. \n\nNow if she was tossed aside like Limon wanted, she could not only bring Royce down with his drug use and the rape she endured in New Orleans, but she could take the father as well. Wire fraud, campaign finance misappropriations were a big deal in politics. It was one of the few things that was still taboo in the world of politics, one of the very few things. \n\nShe wouldn't just take out Royce and Limon, she would take apart the entire Rentrom family. She now had the power to destroy the most powerful family in America. She could rip them apart piece by piece if she wanted. \n\n*** \n\nAlex lifted her head and looked about her, Nora's laugh had woken her. She looked about her and found that the sun had longs since disappeared. She dropped her head and laughed. \n\n\"Well he did say he was going to use you to the point of exhaustion!\" Alex laughed into the pillow. She rolled over and the rawness of her sex caused her to flinch. She shivered in remembrance of what Gavin had done to her. \n\nShe got up quickly from bed, she had slept through picking up Nora from school! She threw a robe on and left the bedroom quickly. She found Gavin and Nora on the floor playing a board game. \n\n\"Hey sleepy head!\" Nora teased. \n\n\"Hey there!\" Alex smiled as she dropped to the floor to sit with them. \n\n\"Feeling better?\" Gavin asked as he rolled the dice. \n\n\"Yes,\" she answered unsure what he was talking about but assuming he had covered for her with Nora. \n\n\"Migraine gone?\" he smiled as he moved his piece. \n\n\"It came on pretty strong, so thank you for having the medicine I needed!\" Alex blushed out. \n\n\"I'm a doctor, that's my job,\" Gavin winked at her. \n\n\"And you are oh soooo good at it!\" Alex told him leaning into him to kiss him. \n\n\"Gross!\" Nora complained. \n\n\"How was your first day?\" Alex asked her as she pulled the girl into her lap. \n\n\"It was ok,\" Nora said pushing her hair back from her eyes. \"Some of the people are real nice but there is one boy who is real mean.\" \n\n\"Well, they say that if a boy is mean to you that means he likes you,\" Alex told her. \n\n\"That doesn't make any sense!\" Nora pointed out. \n\n\"Yep,\" Gavin nodded as he moved his piece around the board. \"When I first met your Aunt, to show her I liked her, I was mean to her.\" \n\n\"How?\" \n\n\"I spanked her,\" Gavin smiled causing Alex to widen her eyes and blush that he would just blurt out the spanking she receives from time to time. \n\n\"What did you do?\" Nora asked her. \n\n\"When a guy likes you, you don't have to do anything!\" Alex smiled. \n\n\"If a guy spanks me, I'm going to punch him in the nose!\" Nora said forcefully. This caused Gavin and Alex to burst into laughter. \n\n\"Hey,\" Gavin said changing the subject. \"After you drop Nora off at school tomorrow meet me here.\" \n\nHe handed Alex a slip of paper with an address on it. \n\n\"What's this?\" Alex asked him. \n\n\"Wedding stuff,\" Gavin exhaled deeply. \n\n\"I thought that was on hold?\" Alex asked him. \n\n\"Do you think, for one second, Madelyn put things on hold?\" Gavin cocked an eyebrow at her. \n\n\"Damn that woman!\" Alex growled and laughed at the same time. \n\n*** \n\nThe next morning, Alex followed the turn by turn voice navigation and it took her into the suburbs north of Chicago. Turning her final corner, she saw Gavin standing next to his car with a woman in her mid-forties. Attractive and physically fit and for some reason her jealous bone twanged. \n\nShe pulled her Mercedes up behind Gavin's car and he came around to open her door. \n\n\"Morning Beautiful,\" he smiled as he kissed her. \n\n\"Morning,\" she smiled as any thoughts of jealousy left her the moment his lips were on her. \n\n\"Alex this is Shirley Palyoon,\" Gavin said introducing them. \"Shirley this is my beautiful fianc\u00e9 Alex.\" \n\n\"Good morning Alex,\" Shirley smiled. \"I think you are going to love this!\" \n\n\"Love what?\" Alex asked looking to Gavin. \n\n\"This neighborhood has a lot of kids,\" Gavin grinned. Alex snapped her head around and saw the \"For Sale\" sign in the yard. \n\n\"We're house shopping?\" Alex gasped her smile broadening. \n\n\"The condo has zero kids for Nora,\" Gavin pointed out. \"It's time we find a place to raise a family.\" \n\n\"Holy shit,\" Alex croaked. \"HOLY SHIT!\" she jumped into Gavin's arms and kissed him deeply. \n\nShirley waited patiently for the couple to finish their affection before walking up the walkway. \n\n\"We have about six places to see today, so don't fall in love with anything right of the bat,\" Gavin told her. \n\nAlex was lost in looking at the area on the outside of the house. The yard was fairly large, the house was two story and looked to have a basement. Large bay windows flanked a double door in the front with large glass window all the way to the roof above the door showing off a large chandelier in the entry way that was visible from the outside. \n\n\"Ok,\" Shirley smiled as she unlocked the door. \"Now, as you can see you have a large entry way, just to the left here is the main office and to the right the living room. Take a look at the dual staircases! Isn't that a beautiful chandelier? It also retracts up so you can put a very large Christmas tree here!\" \n\n\"There are four bedrooms upstairs and of course the master bedroom is downstairs, per your request,\" Shirley pointed out to Gavin. \n\n\"What did you ask for?\" Alex asked him. \n\n\"I asked for a family home in a neighborhood with young children, a master bedroom away from the other bedrooms and a large yard,\" Gavin shrugged. \n\n\"He also said he needed a room with lots of natural light for your studio!\" Shirley told her. \"This has a great sunroom! It could easily be converted and used for you painting!\" \n\n\"You are absolutely beyond words!\" Alex told him as they toured the lower level of the home. \"When did you decide we needed a new place?\" \n\n\"As soon as Mike told me there were no kids in the building,\" Gavin shrugged. \n\nGavin and Alex spent the day going through homes in the area. Each one was large, elaborate and expensive. Shirley giving the prices of each home as they went, showing the highlights. \n\n\"What do you think?\" Gavin asked as they finished the last house. \n\n\"Honestly?\" Alex smiled. \"I really like that first one...it was so perfect! With the treehouse and all in the back yard? I think Nora would love that!\" \n\n\"God I would have loved a treehouse when I was a kid!\" Gavin smiled as he opened her door. \"What do you say we pick her up and bring her here to look at it?\" \n\n\"Can we get back in?\" Alex asked him. He held a small key ring up with six keys. \n\n\"I told her Nora would have to see them as well before we decide,\" Gavin winked. \"I do think we should narrow it down to one or two though. Not burden her with all six.\" \n\n\"I agree,\" Alex nodded. \"Let's show her the first one, see what she thinks?\" Gavin nodded and closed the door and went to the passenger side and got in. \n\n\"Do you want to drive?\" Alex asked him. \n\n\"No, I have to work a bit here,\" he said showing her his phone. \"You drive and let me check in with my patients and make sure all is ok.\" She nodded. \n\nTwenty minutes later they were sitting in front of St. Timothy waiting for Nora. Gavin was going over test results that had come back for a patient. The bell ringing had him shutting his phone down and looking towards the door. \n\nA security guard walked down the row of cars waiting to pick up their child, he was talking into a hand held radio as he went, obviously calling out the names of the parents there to pick up their child. He stopped at the bumper of Alex's Mercedes and looked in at them. Alex waved and he smiled at her and moved on. \n\nNora came out, her Steelers backpack standing out. It seemed that most girls had pink backpacks and most of the boys had Chicago Bears or Cubs backpacks if they had sports teams. Nora's black and gold color scheme drew Gavin's smile. He hopped out and opened the back door for her. She handed him her backpack and climbed in. \n\n\"Hey baby!\" Alex called out happily. \n\n\"Hey,\" Nora said softly. The smile she put on was forced and neither adult missed it. \n\n\"How was your day?\" Gavin asked. Nora shrugged. \"That good, huh?\" Nora tossed her eyes at him at his tease. \n\n\"I hate math!\" she told him. \n\n\"Math?\" Gavin laughed. \"Well, I'm not bad at math, maybe I can help.\" Nora nodded. \n\n\"Do we have to go straight home?\" Nora asked Alex. ",
        "\"Well, actually,\" Alex smiled. \"We have a couple of stops to make anyway, so no, we aren't going home.\" \n\n\"Ok,\" Nora smiled. Alex looked to Gavin who smiled. They knew why she didn't want to go to the condo. There wasn't anyone or anything to play with. \n\nPulling back up in front of the house they just left, Gavin let Nora out of the backseat before walking around to let Alex out. They came around holding hands. \n\n\"Uncle Gavin, there is a car just like yours!\" She pointed out. \n\n\"That's because it is mine,\" he teased. \"We left it here to come get you.\" \n\nNora looked around and saw several kids already outside playing and Nora watched them. She turned back to Alex. \n\n\"What are we doing here?\" she asked. \n\n\"Well, we wanted your opinion on this house,\" Alex nodded with her head. Nora turned and looked at it. \n\n\"This house? Why?\" the little girl asked looking at the small girl next door looking at her. \n\n\"We are thinking of buying it...if you like it,\" Gavin told her. \n\n\"We are?\" Nora smiled. \n\n\"Well, there are no kids to play with where we are now, that's because it is set up for single people. We are a family now, so we need a family home,\" Gavin explained. \n\nNora smiled at the idea of playing with kids. They walked up to the house and Gavin unlocked the door. They let Nora go in first. \n\n\"Wow, look at the lights!\" she said craning her head to look up at the chandelier as she stood under it. She ran from one room to the next before sprinting up the stairs to the rooms upstairs. \n\n\"Which one is mine?\" she yelled as she ran from room to room. \n\n\"Well you can have any room on the top floor,\" Gavin told her as he and Alex waited for her to sprint the entire top floor. \n\nShe flew by them and back downstairs. \n\n\"Did you see that?\" Gavin joked. \n\n\"Nope, too fast!\" Alex laughed as she put her arm around his waist and they went back down the stairs. \n\n\"OH MY GOSH THEY HAVE A TREEHOUSE!\" Nora's voice echoed out in the empty home. \n\n\"Guess we know her vote,\" he said as they turned towards the back where the patio door was that led to the back yard. \n\n\"This place is huge!\" Alex told him. \"Do we need a house this big?\" \n\n\"Well,\" Gavin shrugged. \"We need a place to put six kids.\" \n\n\"Six?\" Alex gasped. \n\n\"Well seven if you count Nora,\" he laughed. \n\n\"You want six more kids?\" Alex stopped him. The look on his face told her he was joking. \n\n\"Thank God!\" Alex huffed. \"I love kids and all but being pregnant six times does not sound all that appealing!\" \n\n\"Well, let's start off with one,\" Gavin told her pulling her into him. \"Go from there.\" \n\n\"Two,\" she smiled. \"Three kids sounds good, then they can each have their own room with a guest room.\" \n\n\"Two? How far apart?\" he asked kissing her neck. \n\n\"Your choice,\" she whispered as she shivered with the soft manipulations. \n\nStepping outside they found Nora talking with another girl who was peering through the slats on the fence separating the two yards. They looked over to see a mother standing on her back porch watching as well. She gave a soft wave and they waved back. \n\nThe mother walked towards the fence and they went as well. \n\n\"Hello,\" she greeted them. \"I'm Reese.\" \n\n\"I'm Alex and this is my fianc\u00e9 Gavin,\" Alex said shaking her hand. \n\n\"Thinking of buying?\" Reese asked them. They both nodded as a short scream from the girls caught their attention. They were engrossed with something on the fence. \n\n\"Kari would love that!\" Reese told them. \"The last family that lived here had a little boy and they didn't get along.\" \n\n\"No?\" Alex asked. \n\n\"No, he was always into trouble, breaking windows with rocks, stealing mail...he even killed the Moscaro's cat!\" Reese whispered after looking to see if the girls could hear them. \n\n\"How did he do that?\" Alex gasped. \n\n\"Ran the poor thing over with his go cart,\" Reese shrugged. \n\n\"Mom!\" Kari called out as she ran up. \"Can I go over and see the tree house with Nora?\" \n\nReese looked to Alex and Gavin. \n\n\"The front door is open honey, come on back,\" Gavin told her. \n\n\"Be there in a second Nora!\" Kari called out. She ran to the back gate and ran around the house. Within a few seconds she was flying off the back deck and running with Nora towards the tree house. \n\n\"She will be thrilled!\" Reese told them. \"She was never allowed to see the tree house with the boy, he wouldn't let her, because he thought girls were a pain,\" Reese mimicked. \"And we wouldn't let her go over there with him afraid he would tie her to the go kart in some sort of Mad Max: Beyond Thuderdome stunt!\" \n\n\"Don't blame you!\" Gavin chuckled. \n\n\"So you said fianc\u00e9?\" Reese asked. \n\n\"Yes,\" Alex nodded. \"We are getting married. No firm date set yet as Nora was just placed with us.\" \n\nThe look on Reese's face told Alex she didn't understand. \n\n\"My sister passed away,\" Alex explained. \"We got custody.\" \n\n\"I'm sorry,\" Reese said softly. \n\n\"Thank you,\" Alex nodded. \n\n\"Mom!\" Kari called out as the girls waved from the window of the tree house. The three adults waved back. \"Can I spend the night here with Nora?\" \n\n\"First off, it's a school night. Second, the temperature is supposed to be in the mid-forties,\" Reese told her shaking her head. \n\n\"It would probably be helpful if we actually owned the house,\" Alex called out. \n\n\"Aunt Alex!\" Nora called out. \"We have to buy this house!\" \n\nGavin started chuckling and walked away pulling his phone out. \n\n\"What do you guys do for a living?\" Reese laughed and shook her head. \n\n\"I'm an artist, Gavin is a doctor,\" Alex told her. \"You?\" \n\n\"I'm a lawyer,\" Reese told her. \"The soon to be ex-husband is a professor at the University of Chicago. He has an affinity for college co-eds!\" Alex tried to control her surprise. \n\n\"Note the amount of venom I spew anytime I talk about the two timing bastard and you can tell it is fairly recent,\" Reese laughed at herself. \n\n\"Didn't notice,\" Alex laughed with her. \n\n\"Uncle Gavin!\" Nora called out. \"Can we stay here tonight? Kari and I want to sleep up here! It's really warm!\" \n\n\"There is about a thousand pieces of paper to sign, then we have to come up with the money to buy it...how much money do you have?\" Gavin teased. \n\n\"Uncle Gavin! I can't afford a place like this!\" Nora told him. \n\n\"Well, what makes you think I can?\" Gavin continued his teasing. \n\n\"You could sell your car!\" Nora suggested. \n\n\"I'm not selling my car! I'd sell you before I sold my car!\" Gavin deadpanned as he rolled his eyes. \n\n\"Uncle Gavin! Puulleeese?\" Nora begged putting on her most desperate plea face. \n\n\"Good God,\" Gavin smiled shaking his head. \"Do you think that is actually going to work with me?\" He asked her in disbelief she would try such a ploy. \n\n\"Yes,\" Nora and Alex said at the same time. \n\n\"I'm that easy?\" Gavin asked her. Nora laughed as she ducked back into the tree house. He looked to Alex and shrugged. \n\n*** \n\nChapter 60 \n\nAlex directed the moving men as they brought the furniture in from the condo. It was an unseasonably warm spring day, the winter passed slowly as they waited for the paperwork to make its way through the channels to officially put the house in their name. They would sometimes take night drives out to it to keep Nora happy. She would play with Kari and Alex and Reese would enjoy the company of each other. \n\nNow with the movers Alex was swamped with work. Directing traffic, trying to keep Nora from being underfoot and unpacking boxes as they came in. Gavin showed up by mid-afternoon and saw Alex stuffing her hair back in her bandana. \n\n\"I'm just going to run out to the treehouse and play with Nora,\" Gavin suggested. \"I would just be in the way here!\" \n\n\"You make one move towards that treehouse, and that will be your permanent address!\" Alex threatened with a smile. \n\n\"Is that a fact?\" Gavin laughed as he set his bag down and came into the living room where she was putting things up. \"Can I change my clothes or should I just ruin a couple thousand dollar suit?\" \n\n\"Only if I can come up with you!\" Alex teased as he kissed her. \n\n\"If you come up, you will be tied up for some time,\" Gavin winked with his innuendo. \n\n\"Can't think of a better way to be!\" Alex told him. \n\n\"I'm going to change,\" Gavin told her. \"But hold that thought!\" \n\n\"Yes, Sir,\" Alex smiled. \n\nGavin and Alex spent hours unpacking, taking time out only to direct the movers or to check on Nora who was playing in the backyard with Kari. Taking a couple cans of soda out back for the girls he found them sitting on the bottom step of the tree house engrossed in a magazine. \n\nAs he got closer he realized what they were looking at. \n\n\"Whoa!\" he called out with a laugh snatching it from Nora's hands. \"Where did you get that?\" Gavin asked them. \n\n\"It was in the cabinet in the tree house,\" Nora told him. \n\n\"Dr. Gavin,\" Kari said to him. \"Why were all those men and women naked?\" \n\n\"Uh,\" Gavin's brain scrambled as he put the adult magazine behind his back. \"It's a medical magazine that helps doctors learn about bodies!\" Gavin struggled with his laugh. \"It's for doctors only!\" Gavin scolded. \"Do either of you have a medical degree?\" He asked them. They shook their heads as one. \n\n\"Then, you have no business looking at this,\" Gavin told them. \"This is for an advanced class, first you have to do four years of college before you even get to look at these!\" \n\n\"College?\" Nora gasped. \"I'm hoping to pass fourth grade!\" \n\n\"Are there any more of these up there?\" Gavin asked them. \n\nThe two girls looked to each other and smiled. \n\n\"Go inside, pizza is here,\" Gavin said with a shake of his head. \"I'll get the rest of the medical journals and put them with my old college books.\" \n\n\"Do you know all that stuff in there?\" Kari asked. \n\n\"I'm pretty sure I do,\" Gavin laughed with some embarrassment. \"Go. Eat.\" \n\nThe girls ran towards the house and disappeared inside. Gavin went into the treehouse and gathered the rest of the magazines. Most were hard core porn with men and women in various scenes of sex. Gavin shook his head in disbelief. \n\n\"The boy must have been the anti-Christ!\" Gavin laughed. \"Killing cats, breaking windows and into hardcore porn!\" \n\n\"The girls said there was some medical books out here?\" Alex's voice called up to him. He stuck his head out the window and saw Reese with her. Gavin rolled his eyes and tossed her one of the magazines. Both women gasped and looked up at him. \n\n\"What kind of kid was this?\" he asked Reese. \"I mean for the love of God! I didn't see my first Playboy until Jr. High! These are so hard core I probably didn't see anything like them until college!\" \n\n\"How many are up there?\" Alex asked him. \n\n\"Uh, ten or twelve?\" Gavin said ducking back inside. \n\n\"Medical journals?\" Reese asked with a laugh as he came out stooped over to get out the small door. \n\n\"It was the best I could come up with!\" Gavin explained. \"Let me tell you, the last thing I expected was to find our girls looking at a porno mag when I came out here!\" \n\nReese was flipping through the pages. Alex looked to Gavin then to Reese. \n\n\"Want to take it home?\" Alex teased. \n\n\"I don't think that position is even possible!\" Reese complained showing Alex. \"Why do these slut magazines show women as some sort of bendy 'I take it in all holes like a pro' fashion?\" She asked closing the magazine. \n\n\"You mean there are women out there that actually do that?\" Gavin asked snatching the magazine back. \n\n\"No,\" Reese and Alex laughed. \n\n\"Bummer,\" Gavin laughed as he walked towards the trash can and found an open bag to dump the magazines in and tied it off again. \n\nThe five of them ate pizza and laughed at all the work still needed to be done. \n\n\"Hey,\" Gavin began as his smiled tipped at the corners. \"I gotta patient I just remembered I needed to see tomorrow!\" he teased after Alex listed all the things left to do. \n\n\"Again, try that and the treehouse will become your permanent home!\" Alex laughed with the other girls. \n\n\"Well, I better get my medical journals out of the can then!\" Gavin shrugged as he took a drink of his beer. \n\nAlex and Reese threw pieces of pizza crust at him that he had to fend off with his hands. \n\n*** \n\nLying in bed that night in the safe position they listened to the silence in the house. There were no sirens of the city going off. It was eerily quiet. \n\n\"That will take some getting used to,\" Gavin told her in the dark. \n\n\"The quiet?\" \n\n\"Yeah,\" Gavin nodded in the dark. \"I mean the condo was quiet but you could still hear the sirens from time to time!\" \n\n\"This reminds me of back home,\" Alex admitted. \"Small town quiet.\" \n\nShe felt his cock twitch slightly in his shorts. \n\n\"How tired are you?\" she smiled in the dark. \n\n\"I'm not that tired!\" he replied. \n\n\"Please?\" \n\nHe moved to push her up to where she was lying on the pillows. He kissed her gently and began to kiss his way down. Soon she arched her back involuntarily as he found her sacred space between her legs. She bit her lip to keep from crying out. \n\nGavin slowly used the tip of his tongue to trace the outside of her lips, the soft feel of his hot tongue caused her to lift her hips slightly as he moved his mouth over her. He suckled her sex into his mouth and let it go, only to bring it back in again. With each flick of his tongue across her clit she convulsed slightly. Her hands took hold of his hair and pulled him in tighter and she smiled. \n\n\"What am I going to say?\" he asked her from within the folds of her sex. \n\n\"Fuck!\" Alex coughed out as she let go and wrapped her fingers in the sheets to keep from making the same mistake again. \n\n\"Better,\" he laughed as his voice reverberated off her soft, sensitive flesh. \n\nHer body began to twist under his manipulations, she began to turn so much he finally had to run one of his hands up her body to push her flat again. She came with a soft cry that had her body flopping back on the bed. \n\nHe moved his body to where they were laying side by side, in a sideways '69' position. Alex wasted no time in taking his cock out and devouring it. He continued to work her with his tongue, sometimes matching her ferocity on her sex making her cum. When Alex came she couldn't continue sucking, she would just hold his cock in her mouth and moan around the sides of it. \n\nHe pulled his cock out after her third orgasm making her protest with a soft whimper. He flipped her over and pulled her hips up. He moved between her legs and guided his cock into her heat easily, causing her to toss her head back and her eyes to close as she moaned out her pleasure. \n\nGavin smiled as he took hold of her hair and held her there, her neck craned as he started to thrust into her from behind. Fucking her with long slow thrusts making her body shake with his force. With his weight he pushed her flat after a while and then brought his legs up on either side of her hips, diving his cock deeper into her. \n\nHe pulled her hair to the side and kissed her mouth hard, letting their tongues dance as he continued to thrust his cock into her, making her grunt with every forward thrust due to its depth. In this position he always seemed to be hitting spots never before touched. It sometimes brought a small wisp of pain as he bottomed out in her, but it was always fleeting. \n\nHis hips increased their speed and soon he was deep within her, his mouth suckling on the back of neck as he shot pulsating streams of hot cum deep within her causing her to sigh blissfully as he laid on top of her, covering her body with his. Leaving his cock within her. \n\n\"I love this,\" she whispered. \"And I adore you.\" \n\nGavin said nothing as he continued to kiss her neck and cheek gently. Nuzzling her ear and nibbling from time to time. \n\n*** \n\nShe woke the next morning alone in bed, she hadn't heard his phone go off and she hoped he wasn't on a call. Walking out of her new bedroom she was a bit disoriented at first as the new home was not as open as the condo. \n\nShe found Nora already at the breakfast table eating cereal. \n\n\"Morning baby,\" Alex said hugging the child from behind and kissing her head. \n\n\"Morning,\" Nora laughed as Alex gave her a quick tickle. \n\n\"Have you seen Uncle Gavin?\" Alex asked as she put a cup in the Keurig and pushed the button to start a brew. \n\n\"He's in the basement,\" Nora told her pointing towards the door. \n\n\"What's he doing down there?\" Alex asked her going to the door and looking down the stairs. Nora shrugged and Alex went down the stairs. She found Gavin standing in the middle of the basement just staring at the rafters. \n\n\"Morning,\" she called out. \n\n\"Morning Beautiful,\" he said still deep in thought. He reached up and hung on the wood rafter above his head. \n\n\"What's up?\" she asked him when he let go. \n\n\"Just wondering how much weight the rafters will hold,\" Gavin said giving them a shake. \n\n\"Thinking of hanging a punching bag up or something?\" Alex asked him. \n\nHe had mentioned making the basement a workout room. Now that they were out of the condo they wouldn't be able to use the building's gym. They would either have to join a gym or make their own. \n\n\"No,\" Gavin smiled. \"I was thinking of hanging you from the ceiling!\" He smiled. \n\n\"I have always wanted a 'red room',\" he teased referencing a popular BDSM book. Alex shook her head. \n\n\"That man was not a Dom,\" Alex told him. \"You are a Dom, he was a joke.\" \n\n\"Still,\" Gavin shrugged. \"I think I will stop by the hardware store and pick a few things. This basement may give us a chance to expand our playground a bit!\" \n\n\"Are you serious?\" Alex blushed. \n\n\"Can't you see yourself in one of those sex swings you have been wanting to try?\" Gavin asked her. Alex covered her mouth in disbelief then nodded when he looked at her. \n\n\"I am up for anything you want!\" Alex said when his eyes closed slightly. She looked around and then shrugged as she started to go back upstairs leaving Gavin to his planning. \n\n\"And to think I used to be scared of basements!\" Alex laughed. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "oral",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-43"
}