{
    "title": "Blueprints Ch. 04",
    "pages": [
        "Author's Note \n\n<ul> <li> Thank you for all the encouraging emails and comments. I apologise this chapter took so long. \n\n</li>\n\n<li> Special thank you to Maonaigh for editing (I tinkered post edit). \n\n</li>\n\n<li> Enjoy and please, please let me know what you think. \n\n</li> </ul>\n\n**************************** \n\n\"Zara, two o'clock is the earliest I can manage, sorry hen,\" the man apologised in his strong Edinburgh accent. \n\n\"It's all right Andy,\" she sighed, her hand already moving the mouse to an appointment in her calendar. \"But since the clocks went back we're only going to have a couple of hours of daylight.\" \n\n\"Aye, I know, I know. But one of my boys has hurt himself and I'll need to go to the scene.\" \n\n\"Well, that takes priority,\" the young woman conceded, swapping a meeting with the revised site visit. \n\nIn truth, it wasn't throwing her schedule off too badly and as long as they had an hour of daylight, Andy, one of the building contractors Zara used regularly, could do his job. What was concerning the architect was having to change Joanna's plans. She'd scheduled the visit for the morning, knowing Joanna was available, and whilst the young woman's trepidation of the professor had quelled over the past few weeks, she didn't want to seem incompetent. \n\n\"Cheers, Zara. Hope it doesn't disrupt your day too much.\" \n\n\"No worries and I hope your guy's alright. See you at two.\" Zara hung up but kept the phone in her hand as she stood. Although the call she was about to place was of a professional nature, she had no desire to make it in front of her colleagues. Moving through the open-plan office, past whitewashed walls peppered with photos of the company's portfolio, Zara made her way to the back door. \n\nBuchan and Bruce, Zara's employer, occupied the ground and first floor of a former post office and whilst its guts resembled any modern work place, there was no denying the building's character, an element of which was the substantial yard space to the rear of the premises. However, over the course of the property's evolution someone had lain a lawn, planted shrubs and generally tried to promote outdoor living. \n\nDespite the plummeting temperature it was a nice day and the sun, which spilled onto her face, still had an autumnal glow; so long as Scotland's East Coast stayed relatively dry, winter was Zara's favourite time of the year. \n\nHer breath condensed on the exhale as she listened to the familiar tone of Joanna's phone ringing. \"Hello?\" came the answer. Zara was almost sure a smile was tugging at Joanna's mouth, the thought of which caused her to grin. \n\n\"Hi,\" she beamed, before reminding herself of the reason for the call; better get it over with. \"Look, Joanna, I'm sorry but I've had to reschedule this morning. There's been an incident at another-\" \n\n\"To what time?\" she didn't snap, but wasn't overjoyed by the revelation as Zara explained. \"Fine,\" Joanna sighed, \"But I'm at work this afternoon until about half two,\" she paused briefly. \"Tell you what, I'll drop the keys round at your office. I don't suppose I have to be there for most of it anyway; I'd just like to meet the man that'll be ripping apart my house.\" \n\n\"Of course. We'll probably be there until about three-ish?\" Zara estimated as she watched a blackbird hop rhythmically amongst the baring branches. \"Thanks for being so understanding.\" \n\n\"Oh, can you not tell?\" Joanna husked. \"I'm absolutely furious.\" \n\n\"I'm sure I can make it up to you\" the young woman's stomach jolted at the prospect. \n\n\"I'd expect nothing less,\" Joanna purred before leaving Zara shivering, and not from the icy morning air. \n\nHours later Zara was standing, tablet in hand, as she manipulated a 3D drawing. Her efforts were projected onto a large screen, being regarded closely by Robbie. \"What software are you using just now?\" she asked, glancing at the placement student. \n\n\"Sketch Up, mostly,\" he replied sheepishly. \n\n\"The free version's pretty good, isn't it?\" she said, giving him a knowing smile. \"Don't worry about it; I remember what my spending priorities were when I was studying. But,\" she continued, glancing back to the technical drawing, \"you want to be learning to use Revit as soon as possible. In fact,\" she glanced at her watch, \"we still have ten minutes; I can show you how to get started and then I'm sure you can find a tutorial online?\" The nineteen-year-old nodded enthusiastically and she began. \n\n\"Zara?\" the young woman's head snapped up from showing Robbie how to alter blueprint dimensions. \"These were dropped off for you.\" Stephanie, her boss, said before entering the room and tossing the keys into Zara's reactive grasp. \"I literally bumped into the owner on my way in.\" \n\n\"Oh right. She, eh, happy enough with how things are proceeding?\" Zara asked in what she hoped was a casual tone. \n\n\"Well, she's pretty frosty. Said she was happy, but then again it was early days to say how satisfied she really was.\" \n\nZara glanced back to the screen as she attempted to alter her creeping smile into the appropriate frown. Early days to say how satisfied she was. Really, had she expected anything less from Joanna? \n\n\"She's fine. Just has high standards,\" Zara shrugged, her eyes meeting Stephanie's once more. \n\n\"Regardless, I'm glad you're on the receiving end of her and not me.\" \n\nYou have no idea, the thought causing the young woman to smirk yet again. \"Actually,\" Zara swallowed, desperate to change the subject as warmth crept up her neck, \"Robbie, we'll have to finish this up another day. You here next week?\" \n\n\"With us for two weeks, aren't you, Robbie?\" Stephanie asked, but without waiting for the boy to answer looked back to her subordinate, \"Are you going to the McKenzie property now, Zara?\" \n\n\"Yeah, the builder's coming for a look, so we'll hopefully get quotes pulled together next week. Perhaps even get the work penciled in for the New Year.\" \n\n\"Excellent. You can take Robbie with you; be good for him to see the process.\" \n\n\"What?\" Zara snapped, unable to hide her dismay at the suggestion. \"I mean,\" she began, trying to dig her way out of the hole she'd fallen into, \"I mean it's fine. It's just an extension. Hardly anything exciting. Anyway, the contractor had an incident on-site today, so he'll most likely be late and I don't want to keep Robbie past five.\" \n\n\"I really don't mind. It would be great to see the process,\" the student interjected, showing far too much diligence for Zara's liking. Why wasn't he being stereotypical and leaping at the chance to get to the pub? \n\n\"You see?\" Stephanie said, looking pointedly at her delegate. \"Plus, I dare say you were going to walk and it's pouring, so Robbie can give you a lift. Can't you Robbie?\" \n\nTrue to Stephanie's observation it had begun to rain, hard; perfect timing for Zara, Andy and the tag-along, to traipse around 12 Albert Street. Not that the young woman minded the downpour, she was cocooned in a company branded Berghaus, however the thick cloud meant they had lost yet more daylight. \n\n\"So, I take it here is where the L-shape will come to?\" Andy asked as the three of them stood in the spacious back garden. \n\n\"Roundabout there,\" Zara squinted before retrieving her distance meter. Pointing the laser at the wall she took a measured step backwards, her boots sinking into the damp grass as she did so. \"To here, Andy,\" she confirmed upon seeing the desired reading. \n\n\"Ok good. We should be able to tie into the original foundations in that case; never a bad thing. Do you have the layout of where the gas and water pipes are?\" \n\n\"Yes, but let's look at them in the house,\" she shivered. \"If you've seen enough out here?\" \n\nAlthough Zara had spent at least half her time over the past few weeks in Joanna's home, letting herself in was an alien sensation. Furthermore, despite being here for work, she couldn't dispel the sneaking suspicion that Joanna rarely let just anyone into her space unaccompanied. \n\nHaving entered the kitchen they went through the changes that would be required internally, then Zara took Robbie through the detailed plans as Andy wondered around muttering to himself. \"It's a decent size space already, Zara. What's the owner - you said she was on her own - needing to extend it for?\" the balding man asked, scribbling some final notes down. \n\nThe question hit Zara; Joanna had mentioned she was moving but there had been no further discussion on the subject. \"Maybe to sell?\" Zara shrugged, \"In fact, you can ask her yourself, I think that's her now.\" \n\nSure enough, a faint glimpse of headlights danced across the kitchen's far wall. \"I'll go unlock the front door, save her fighting with it in the rain.\" Zara said in what she hoped was nonchalance, for even the sound of Joanna's car had her pulse quicken and she wanted a moment, brief as it maybe, alone with the woman. \"Andy, could you tell Robbie how you pull your quote together, please? Would be good for him to know that there's more to it than just pulling a price out at random,\" she smiled at the man before exiting the room. \n\n\"Well, son,\" Zara could hear him begin in a fatherly tone, \"it all depends on what the property's like. A posh joint like this and you add an extra twenty percent.\" \n\nZara chuckled as she padded down the corridor. The front door of Joanna's home was solid oak but the architect could see the security light flick on through the transom window. Knowing Joanna was mere feet away caused butterflies to whirl in her stomach and she quickly unlocked the door. \n\nPulling back the barrier, Zara was greeted by a bemused figure, keys poised to let herself in. The young woman trailed her dark eyes up Joanna's svelte body; even with her short blonde hair dampened by the fat rain drops the professor still managed to look like she'd stepped from a fashion shoot. \n\n\"Hi,\" Zara greeted, her pretty face splitting into a ravishing smile. The young woman leant against the door and drank the professor in, loving the way her emerald green eyes glinted as Joanna attempted to control her own elation. \n\n\"Hello,\" Joanna purred back, her lips finally spreading uncontrollably as she took in the young woman. They visually consumed each other for several moments before Joanna brought them back to reality, \"Are you planning on letting me in, Zara?\" \n\n\"Oh, sorry,\" she stammered, breaking from her giddy trance as she moved out of the way. \n\nJoanna made her way over the threshold and shut the door behind her. \"Is the build-\" She began, but Zara silenced her with a firm press of her lips as she moved her warm body into the cool damp cashmere of Joanna's coat. \n\nThe woman's handbag instantly fell to the floor with a thud and Zara suppressed a groan as she was pushed up against the wall. The young woman's hands went to either side of Joanna's striking face as their tongues rolled over one another's in a kiss that bypassed all polite introduction. \n\nZara felt that ever-familiar scorching grip move from her hips and up her sides as the older woman bore down on her. It took all of Zara's resolve to stop the searching fingers and tear her lips from Joanna's to whisper, \"They're in there,\" nodding in the direction of the kitchen as her chest rose and fell against her companion's. \n\nJoanna nodded, regaining her poise as she stood back from the young woman. Shrugging off her jacket, it was Zara's turn to wear a predatory smile as she watched the woman reveal herself. Joanna was wearing a form-fitting deep-green dress which matched her eyes and Zara marvelled at the way it clung to her body before stopping abruptly at knee line. \n\nJoanna hung up her coat and turned to the young woman, catching the lust-fuelled look on her face. \"Zara, could you stop staring at me like that, please?\" Joanna muttered, trying to keep a firmness in her voice. \n\n\"You always look at me like this,\" Zara pointed out quietly. \n\n\"Get through there, you little perv,\" Joanna hissed, turning the girl and giving her a gentle shove towards the kitchen. \"You're so unprofessional.\" \n\n\"Andy McNabb,\" the builder smiled, offering his hand as Joanna strode into the room. \n\n\"Joanna McKenzie,\" she replied and Zara watched enviously as the muscles in their wrists contracted in a firm handshake. \n\n\"This is Robbie Jackson, he's a placement student with us,\" Zara said, giving the boy a nod, encouraging him over. His eyes didn't quite meet the professor's during their brief exchange and Zara could see the colour rise up the young man's acne-scarred neck. \n\n\"So,\" Joanna began in a brisk no-nonsense tone, \"has Zara showed you enough for you to come up with a timescale?\" \n\nWith military precision Joanna outlined what she wanted and asked both Zara and Andy a series of sensible, albeit pointed, questions. How can they minimise the disruption to her day-to-day life? How many labourers would be on the job? Zara was to have final say on the materials used. They were to be done by late March should the work start in January. \n\nZara loved watching Joanna work. The way her mind keenly absorbed every detail of the conversation; she could recite exact measurements, knew terms of the trade and easily took total control of the discussion without being overbearing. \n\n\"Well, I think I've got all the information I need, ladies.\" the balding man smiled, putting a pencil, stereotypically, behind his ear. \"Joanna, nice to meet you, it's going to really improve what's already a cracking home. Zara,\" Andy turned to the architect, \"pleasure as always. I'll be in touch.\" And with that Joanna walked him to the back door he'd came in. \n\n\"Oh,\" he added, puffing slightly as he pulled on a stubborn boot. \"I hear of plenty of folks after a nice place like this and with a modern extension it'll be in demand. Should you be selling, let me know.\" \n\n\"I'll keep that in mind,\" Joanna replied politely before closing the door behind the contractor. \n\nWhat Zara should have done was leave at the same time as Andy, taking Robbie with her. After all, it was only three-thirty; she should go back to the office where there was plenty to do. However, the pull Joanna had on her made the ever-conscientious young woman extremely reluctant to do so. \n\nLosing her internal battle, Zara thought of the plethora of overtime she'd built up, not to mention that by the time she returned to the office it would hardly be worth her while, would it? Deciding on a plan, the architect opened her mouth to tell Robbie to return to work without her, however, Joanna got there first. \n\n\"Zara, you seem to have set a trend with this extension; a friend of mine sent me through some ideas on the off chance I'd pass them on to you. Would you be free for five minutes to take a look?\" Joanna asked, cocking an eyebrow. \n\n\"Eh,\" her eye's flitted in Robbie's direction. \"Robbie, would you like to head back to the office and I'll-\" \n\n\"It will only take five minutes, Zara. Follow me,\" Joanna ordered. \n\n\"Just five minutes?\" Zara frowned, disappointed. \"Are you sure? I'd be happy to stay for longer?\" \n\n\"Nope,\" Joanna replied, turning on her heel, \"Five minutes shall suffice.\" \n\n\"I'll just be a sec,\" Zara muttered to the boy before following Joanna to her study, pondering what could be achieved in the short time. \n\nJoanna's office was a room Zara was yet to see. The space wasn't in keeping with the rest of the house, not that the handsome room wasn't tasteful. As usual, the traditional character of the building was balanced with stylish furnishings; an elegant teak desk, a chrome and brown leather couch and shelf upon floating shelf peppered an entire wall. However, the difference in this room was the flecks of Joanna's personal life shining through. Although the house was well-appointed, Joanna's space was exactly that, a mostly faceless house rather than a home. \n\nHere, on the other hand, evidenced at a signal glance, was much about Joanna Zara had taken weeks to extrapolate. There was a shelf dedicated to Legal Business, which looked to Zara like the dullest magazine one could subscribe to. Another reserved for Joanna's own publications; ominous looking hardback books with the professor's name embossed on the spines stacked beside white glossy copies of Journal of Corporate Law Studies she'd contributed to. \n\nAlthough, it wasn't all relating to her profession. In amongst the shelves were several colourful scribbles, framed so well that they could have mascaraed as small abstract expressionist studies. Zara was about to comment on them, when her eyes fell on a shelf of battered hardbacks; Austin, Browning, Blake, Bronte. The impressive, obviously alphabetised, collection of Romantic novels caused the smile that was already tugging at Zara's mouth to spread. \n\nTurning to Joanna who had moved closer to her, Zara nodded to the classics, \"Now that is quite unexpected.\" \n\n\"Not when you consider they were inherited,\" Joanna sighed with a casual shrug. \n\n\"So you're not an admirer of the Romantic movement?\" Zara smirked. \n\n\"I didn't say that,\" Joanna side-stepped. \"Besides, Wuthering Heights is my utmost favourite. Whilst other girls were lusting after Heathcliff for his rugged good looks, it was his almost demonesque qualities which spoke to me,\" she smirked, her eyes practically smouldering as she pulled Zara to her. \n\n\"'If you ever looked at me once with what I know is in you, I would be your slave.'\" Zara quoted smoothly as she draped her arms over the woman's shoulders. \"Hardly you're style, is it?\" \n\n\"Someone paid attention in school,\" Joanna whispered, her lips millimetres from Zara's. \"Speaking of school, why did you have to bring your boyfriend?\" \n\n\"Why, you going to go all Heathcliff on him?\" she asked, relishing in this new found foreplay. \n\n\"Who am I to stand in the way of young love?\" A hand slowly creeping down and over the swell of Zara's pert bum. \n\n\"I don't really go in for the whole young love thing anymore,\" Zara grinned, brushing her nose intimately against Joanna's, \"More a middle-aged kind of set up.\" \n\n\"You're just begging for a spanking, aren't you?\" but before Zara could confirm such, Joanna's lips were finally on hers. \n\nThe young woman groaned as she eagerly accepted Joanna's probing tongue into her mouth before chasing it back with her own. Becoming increasingly familiar with the older woman was doing nothing to quell Zara's need for her, in fact, the effect was quite the opposite. Joanna's touch burned into her with more intensity than ever and even this short exchange had Zara pressing herself into Joanna's thigh. \n\nSlender fingers crept into her companion's short hair, encouraging Joanna to somehow increase the ferocity of their passionate exchange. Joanna complied; one hand firmly grabbing Zara's backside, the other squeezing between their taut bodies to expertly undo the buttons of Zara's shirt, causing the young woman to shudder. \n\nCompletely lost in the professor, Zara had no heed of returning to work or, perhaps more importantly, to the pubescent student sitting in Joanna's kitchen. Her hands slunk down Joanna's trim waist and she began to tug the dress' material up. \n\n\"And, that's us at five minutes.\" Joanna panted, breaking away from her accomplice and glancing at her watch. \n\nZara's brain took several moments to comprehend the break in proceedings as she gaped at Joanna. Save from being somewhat breathless, the woman was the epitome of cool as she smoothed down her dress. \n\nStanding back, Joanna gave the young woman a superior smile as she drank in Zara's disheveled state; the architect was wearing a pair of fitted black trousers and the crisp sky blue shirt she had tucked into them was now hanging partially open to reveal a white bra, the lace so thin that there was no hiding her arousal. ",
        "\"You're serious, aren't you?\" \n\n\"As a judge, darling,\" Joanna nodded as she moved behind her desk. The way she sunk into the ergonomic chair and proceed to cross her long, boot clad legs did little to disperse the burning need coursing through the brunette. \"You know,\" she continued in a professional tone which, again, did nothing to make her less alluring, \"I need to finish reading an article and I have marking to authorise. I did have to change my plans today, Zara,\" she added pointedly. \n\n\"I said I'd make it up to you,\" Zara frowned as she started fastening the buttons of her blouse. \n\n\"What?\" Joanna purred, \"You think this,\" she waved a slender hand at the girl's flustered state, \"isn't you making it up to me?\" \n\n\"This is straight up punishment!\" Zara snapped, smoothing her long mahogany locks. \n\n\"Precisely.\" Joanna smirked in a self-satisfied way as she glanced from Zara back to the glowing monitor. \"You've missed a button by the way.\" The young woman let out an impatient noise as she began to redo the garment. \"What are you doing later?\" \n\n\"Going home to masturbate furiously after what you've just done to me,\" Zara said, not even attempting to keep the annoyance from her voice. \n\nDespite herself Joanna let out a throaty laugh, eyeing her victim as she did so. \n\n\"It's not funny,\" Zara said, trying to keep a straight face as their eyes met. Joanna was so beautiful when she laughed, the only expression which would rival it was that soft smile Zara was getting to see more and more of; the one that gave her a dull ache in her chest unlike anything the young woman had experienced. \"I could have got rid of Robbie, sent him back to the office,\" Zara sulked as she moved behind Joanna's desk. \n\n\"I'm serious,\" Joanna said in a softer tone, \"I need to finish this,\" she took Zara's hand, encouraging the young woman to her level. \"Come round when you're done, I'll make it up to you,\" the professor murmured in her ear before taking the lobe between her teeth, \"Bring an overnight bag.\" \n\n\"Joanna!\" Zara growled in frustration, pulling away from the dangerous embrace. \n\nFortunately, Zara's office was less than twenty minutes walk from Joanna's house. Unfortunately her flat was the other side of town, so it was after seven o'clock before the young woman, duffle bag in hand, was knocking the ever-familiar front door. \n\nFollowing another short but heated exchange, Zara followed her host into the kitchen. Swapping anecdotes about their day the pair fell, almost automatically, into preparing dinner. Preparation comprised Joanna ladling soup into bowls and Zara uncorking a bottle of wine. \n\n\"Looks like a good a one for a Tuesday night,\" Joanna nodded at the bottle as she sat a steaming bowl of minestrone in front of Zara. \n\n\"I have that nice wee bottle shop, you know Cask, just at the end of my street,\" picking up a spoon she added, \"This smells amazing, by the way.\" \n\n\"Thank you, but what were you doing down at Leith Walk?\" Joanna frowned. \n\n\"Getting my overnight bag?\" Zara said uncertainly, suddenly worried Joanna hadn't meant for her to stay. \n\n\"Oh, sorry, Zara. I just assumed you'd have one handy,\" she apologised. \n\n\"What? So I could be at your beck and call?\" Zara grinned in astonishment and proceeded to laugh at the blonde's raised eyebrow. \"I left the one I keep at the office at my other girlfriend's,\" she shot back, reaching for a slice of bread. \n\nThe older woman put down her spoon and turned to her guest. \"Am I your girlfriend, Zara?\" Joanna asked, intrigued, her eyes alight. \n\n\"Eh...\" To be fair, Zara had set an impressive record of being in the professor's home for twenty minutes without being reduced to a stammering mess. \"I... We... Are we?\" She asked, her voice raising an octave. \n\n\"I asked you,\" Joanna batted back with a nonchalant shrug. \n\n\"Maybe?\" Zara tried, her palms starting to sweat. \n\n\"Maybe?\" Joanna gasped in feigned incredulity. \"Really something you need to be sure of before you go brandishing such a term.\" \n\nZara winced, \"We spend a lot of time together, don't we?\" \n\n\"Very true, Zara, we do,\" Joanna said. \"And a lot of the time you're naked.\" She pondered as if weighing up the pros and cons of their arrangement. \"Would you like to be my girlfriend?\" \n\nA smile spread across Zara's face as she watched her expression impress upon Joanna. \"I think... I mean yes, Joanna. I would like to be your girlfriend,\" she took a drink of wine and although she wasn't unsurprised to feel the colour rise in her own cheeks, Zara was taken aback as Joanna's porcelain complexion rouged. \"Would you, eh, like to be mine?\" \n\n\"I'm hardly a girl, Zara.\" \n\n\"Well, womanfriend doesn't exactly have the same ring to it, does it?\" the young woman reasoned. \n\nJoanna smiled, \"No, I suppose girlfriend will have to do.\" \n\nThey regarded each other for a long moment, fighting the stupid grins about to split their faces. Eventually, Zara let hers win and looked away as soon as she'd flashed brilliant enamel. \"You're very special,\" Joanna said softly and Zara's heart thudded vigorously as she felt the older woman's fingers caress her cheek. \n\n\"So,\" Joanna sighed, before Zara could regain herself and return the complement. \"Have you had many?\" For whatever reason blood was still coursing the through the young woman and she struggled to grasp the question. \"Girlfriends, Zara. Have you had many? You don't need to answer if you'd rather not.\" \n\n\"Oh, eh, no I haven't. None in fact,\" she breathed, distracted. \n\n\"I am honoured. Only boyfriends?\" \n\nThe brunette gave a noncommittal shrug. \"Nothing too serious,\" Zara informed her... girlfriend, relieved the hammering in her chest had slowed. Noticing her countenance, Joanna asked if she was all right. \"Yes, fine thank you. I just had a weird sensation in my chest. Anyway, how about you?\" As if she didn't know a flippant answer was about to follow. \n\n\"Boyfriends?\" No!\" Joanna replied in horror. \"Women,\" she shrugged, \"No one for a while.\" It was only fair, Zara hadn't exactly gone into an in-depth breakdown of her conquests. \n\nThey fell into easy conversation regarding Joanna's research. Since the night at Tigerlily a few weeks ago Zara had found it increasingly easy to learn about Joanna's work and given the ever-changing political climate there was always something new to discuss. \n\n\"After that frightfully depressing explanation,\" Joanna sighed, having recounted some policy change, \"I have something that will cheer us right up. Do you like the theatre, Zara?\" The young woman nodded eagerly. \"Excellent. Do you fancy going to see Nineteen-Eighty-Four at the Queen's? My friend has tickets for Saturday but she can't go, so has offered them to me.\" \n\n\"That sounds gre-. Oh wait, this Saturday?\" Joanna confirmed. \"I can't, I'm sorry.\" Damn you, Steve. \"I have that running thing, the race.\" \n\n\"Yes, but you said it was in the morning. You'll be done in a couple of hours?\" \n\n\"Even so, and thank you for the vote of confidence, its up near Aviemore.\" \n\n\"Aviemore!\" Joanna exclaimed. \n\n\"Sorry, I thought I told you.\" Zara conceded. \"The race begins at twelve o'clock, so say it takes me an hour and a half and then I have to get back home. It'll be tight, especially seeing as the guy I'm going with lives out in Linlithgow, so I'll have to get the train back into the city centre. Sorry, I doubt I'll make it back in time.\" \n\n\"No, hang on,\" Joanna frowned impatiently, \"The reason you're doing this in the first place is beyond me. But nonetheless, you're going to go from your flat, up to Waverley Station, to Linlithgow, get picked up there and be driven three hours to run up a hill?\" \n\n\"Its bigger than a hill,\" Zara mumbled into her wine glass as she realised just how cumbersome her Saturday was going to be. \n\n\"I'll take you,\" Joanna sighed. \n\n\"Oh no, you really don't have to do that,\" Zara said hastily. As kind as the offer was, the last thing the young woman wanted was for Joanna to see her after such an undertaking. \"It's so far.\" \n\nJoanna shrugged. \"It'll be nice to drive up through the Cairngorms. I've not been to the national park for a while.\" \n\n\"Please,\" Zara begged. \"I'll be a mess after it, Joanna, really, fit for nothing,\" she tried to joke. \"It will be most unbecoming.\" \n\n\"As unbecoming as leaving my settee in such a state it needed professionally cleaned?\" Joanna queried pointedly. \n\nThe colour rushed to the brunette's high cheekbones as she opened her mouth to point out that that really wasn't her fault but swallowed the statement instead. Belatedly, she glanced at Joanna who was eying her expectantly. \"Still,\" she grumbled, toying with a crust of bread, \"you don't need to take me.\" \n\n\"Its settled Zara. I'm driving you!\" Joanna snapped in that no-nonsense tone as she stood. \"You could just be grateful and say thank you.\" \n\nMeekly, Zara rose from the table; water glasses chinking together as she carried them to the sink. Uncharacteristically, Joanna allowed her to assist and they cleaned up in uncomfortable silence. \"Thanks.\" Zara muttered as Joanna handed her a fresh dish towel before busying herself with another task. \n\n\"You know,\" the hairs on Zara's neck stood on end as hot breath tickled the back of her neck, \"there are positives to you being so dedicated to the cause, Zara.\" Joanna whispered in her ear before placing both hands on the young woman's arse. \n\nShe couldn't help it, instinctively Zara pushed herself into the grasp as an electric current began to throb through her body. \"What do you mean?\" she asked in a low rasp, sitting a now dry glass on the counter top as her gaze on the white tiles hazed. \n\n\"Well,\" Joanna considered and Zara shuddered as she felt dexterous fingers move to expertly undo her jeans before the tight material was tugged over her bum. \"I mean, just look at it,\" and Zara's breath hitched as she felt Joanna's hands run over the navy lace of her underwear. \"It's perfect,\" she sighed, slipping her hand under the panties and caressing the soft smooth skin. \n\nZara moaned quietly as a delicious heat crept over her body before wincing at the bite of Joanna's nails. It had only been two days since the older woman had rocketed her to dizzying heights, but it was two days too long. An enlighten addiction was no exaggeration. Zara yearned for Joanna; near enough everything the young woman had to do, think of, problem solve, fought for space in her Joanna-monopolised mind. \n\n\"Don't tease me Joanna, please,\" she pleaded, the frustration of their abrupt ending to their previous embrace resurfacing at an alarming rate. \n\n\"No?\" she purred in Zara's ear before slender fingers descended further into the lace. \n\n\"Oh fuck,\" the brunette shuddered as she felt Joanna's digits move down her ass to brush against her entrance. \n\n\"Why are you so wet already, darling?\" Joanna purred in her ear; hot breath combined with the exploratory touch causing the young woman to jolt. \n\n\"That would be anticipation,\" Zara said, trying to control her breathing, \"I need you to touch me, please Joanna.\" \n\nZara felt Joanna's lips press into her hair as the older woman inhale deeply. \"I am,\" she murmured and Zara bucked against Joanna's sudden and firm grip of her breast. \n\n\"I mean properly. I want, no, I need you to get me off. Please?\" The blunt utterance surprised both of them and Zara felt Joanna's fingers momentarily cease their toying motion. \n\n\"All right,\" Joanna complied softly, retracting the digits. \"Fancy a shower?\" \n\nIf Zara hadn't been prepared for that searing kiss, the girl's head would have knocked back against the tiles. However, she was ready, oh so ready and eagerly met Joanna with equal ferocity as the pair fell into a hungry exchange. \n\nHands slipped over wet skin as if neither could decide which portion of the other to caress, until eventually Joanna settled with one hand grasping the young woman's arse as the other gripped Zara's now wet hair, pulling the pair impossibly close. \n\nZara groaned into her accomplices mouth as their bodies slid together, causing a delicious friction. \"Jesus, Joanna,\" Zara moaned once more, so wanton she had already pushed her sex firmly against Joanna's thigh. However the throaty noise turned to a hiss as Joanna's nails dug into her backside yet again. \"Ahhh,\" the young woman flinched before panting, \"I've missed this.\" \n\n\"It's been forty-eight hours, Zara,\" Joanna tried to reason; however, her own reaction to the girl suggested the two days had dragged. \n\nZara felt that delicious grip in her hair as Joanna tilted her own head back before encouraging the young woman's mouth to her neck. The architect didn't waste any time complying as she mapped out the sensitive flesh, her chest tightening as soft lips pressed into that crevice below Joanna's jawline, where she could feel her pulse hammering. \n\n\"Oh God,\" Zara whined, broken from her trance by Joanna's roaming hand which had moved to caress her breast before tugging at the pebbled flesh. The electric current spurred Zara back to the fevered embrace; wet fingers trailing up the professor's body before her lips found Joanna's once more in a kiss which matched, if not exceeded that of the previous. \n\nWith every ounce of self-control, Zara shifted her concentration from Joanna's toying fingers, which were now intermittently circling and pinching her nipples, to run her hands from the woman's shoulders and down the top of her chest. Slender hands interrupted Joanna's delicious assault as Zara brushed them aside to caress the woman's chest. \n\nMaking a throaty noise, Joanna, momentarily, leaned into the caress, allowing the girl to indulge herself. However, it didn't last, Joanna pushed Zara's grasp aside, \"I don't think so,\" the professor growled before gripping Zara's tits with renewed vigour, causing the young woman to wince and recoil. \"Too sore?\" Joanna panted, her deep green eyes burning into Zara's in a way that made the architect's knees weaken. \n\n\"A little. Then again,\" Zara smirked, \"I liked it.\" And hearing the dominant woman's involuntary groan she cocked an eyebrow in a challenging expression. \n\nJoanna's gaze smouldered as she considered the girl standing a step away from her, as if weighing up her options. \"Take my hand.\" She eventually ordered. Having done so without hesitation, Zara was pulled to Joanna, who turned them before pushing Zara up against the cold damp tiles. \"I love that you like a bit of pain,\" Joanna snarled, her lips millimetres from the young woman's who could feel a hand press against her throat. \n\nButterflies crashed through Zara's stomach, making the taut skin quiver as she felt the professor grip her neck. She swallowed as Joanna pressed a little harder, feeling her oesophagus work under the pressure whilst a delicious anxiety rose within her. Aside from the sound of the cascading water the pair consumed one another in tangible silence until Zara eventually panted, \"What are you going to do?\" \n\nJoanna's head cocked to one side as she pondered the question. \"Well,\" she purred, fingers of her free hand trailing lightly up the front of the girl's thigh. The contact was enough to make her shudder and Joanna's lips curled as she continued to toy with her prey, inching towards the Zara's sex and causing the brunette's legs to almost weaken. \"Well, part of me wants to make you cum all over my hand. It wouldn't take much, would it?\" \n\n\"Oh God,\" Zara whined, her knees buckling as Joanna's grip tightened and her fingers reached the very top of her inner thigh. \"No... wouldn't take much at all,\" she eventually admitted through gritted teeth. \n\nJoanna kissed her lightly and Zara could feel that taunting smile against her lips as two fingers slid to her entrance. The young woman tensed and took a sharp breath, however nothing happened. She was so wet, so het up that despite herself she let out a high pitched beg. \n\n\"Oh darling, you really want it don't you?\" Joanna patronised, \"I take it it wouldn't help if I did this?\" And with that the professor lazily dragged her tongue over Zara's lips. \n\n\"Joanna,\" Zara groaned in frustration as her hips rocked against those forever teasing fingers. Between Joanna's tongue reminding her what the accomplished woman was capable of and the strong hand on her throat Zara ached, physically ached, to be taken. \n\n\"Beg for it, Zara.\" Joanna ordered, her voice as frosty as her stare; the countenance sending a pleasurable current through the young woman. \n\n\"Ple-\" \n\n\"Be more imaginative than please,\" Joanna scolded, her knuckles paling. \n\nZara nodded as she caught the subtle arch of Joanna's eyebrow, signifying she was all right before dropping her gaze. Under her lust-fuelled trance she struggled to concentrate on formulating an eloquent plea and stammered through a few failed attempts. What she wanted was fucked, hard, however she doubted please fuck me hard, was going to satisfy this beguiling woman. Plus, now she forced herself to think clearly, Zara didn't just want to get off. She adored the way Joanna teased her, educated her, brought her off in ways she'd never encountered before. That is what she wanted. \n\nWith every ounce of self control, she took a laboured breath as her eyes found Joanna's expectant gaze. \"I'd like...\" she panted, flexing her neck under the increasing pressure. \"Thank you,\" she said hoarsely as Joanna partially released her. \"I would like to...\" she began again, \"I'd like to try something new. Something I've never done before.\" \n\nInterest flashed across Joanna's face, chasing away the cold demeanour as her lips tugged approvingly. \"Good girl,\" she purred, \"What do you have in mind?\" \n\nZara hesitated, dropping her gaze momentarily, \"I... I'd like you to...\" She stammered, heat rising in her cheeks, \"I'd like you to surprise me.\" \n\n\"I'll see what I can do,\" she teased before pushing two fingers into Zara's wetness whilst simultaneously tightening her grip on the girl's throat once more. \n\nAt the delicious intrusion Zara almost lost all notion of holding off and it took every ounce of self control to gasp, \"I... Joanna...Joanna, please, I don't want to cum. Not yet. Please...\" she begged. \n\n\"Darling, if I had any intention of getting you off you would be shuddering on my hand as we speak,\" Joanna sighed nonchalantly as she extracted her fingers, but not before she thrust them so hard it made Zara emit a noise akin to taking a blow to the stomach. \"Open your mouth.\" Joanna snapped and without a second thought, Zara eagerly sucked the professor's soaking digits clean. \n\n\"Well done,\" Joanna praised, releasing the young woman's neck. \"You're so good to me,\" she breathed before her mouth fell to Zara's reddened neck. \n\n\"You know I enjoy it as much as you,\" Zara murmured as the woman's lips trailed across her sensitive skin. \n\n\"Very true,\" she smirked before stepping back from the brunette and turning off the shower. \"Come on. I want you on the bed.\" \n\nStanding before Zara in that dangerously elegant robe, Joanna nodded to the bed. \"Lie on your front, please,\" she instructed as Zara felt the plush cream towel being pulled from her slender frame. \n\n\"What are you going to do?\" Zara shuddered, as she watched the older woman fold the damp material with her usual precision. \n\n\"Well,\" Joanna began in that business-like tone as she draped the towel over a nearby chair. \"It really depends on you. Now,\" she nodded to the bed, \"on you get. Face down.\" \n\nThe young woman shuddered at the notion before taking one last look at the elegant figure standing before her. Even straight from the steamy shower she had a prowess about her that most people could only dream of emulating and the way the luxurious material of the dressing gown hung around her slender frame made Zara yearn for h- \n\n\"I said now, Zara!\" Joanna barked breaking the naked woman's reverie. ",
        "Doing as she was told, Zara lay on her stomach, sinking into the rich duvet as her mind raced with possibilities. However, she didn't have to wait long; the young woman felt Joanna's weight on the mattress beside her and proceeded to groan as the older woman straddled the small of her back. \n\nTo say Joanna worshipped her was an understatement; electric currents hummed through the young woman as her assailant, starting at the sensitive skin behind her ears mapped Zara out with her mouth. The older woman's tongue swirled around the nape of her neck and lips trailed across to her shoulder to bite at the muscle before continuing her descent. Joanna shimmied down Zara who squirmed as she felt the woman's sex graze her skin. \n\n\"You feel so good against me.\" Zara panted hard, eyes clenched shut, as she felt her own arousal coat the insides of her thighs. \n\nJoanna continued nipping, licking and kissing her way down Zara's spine in an assault that caused the young woman's hips to rock into the duvet as one hand, unknowingly, pulled at her own hair. \"You're driving me mad,\" she gasped into the soft bedding as Joanna's mouth traced the curve of her hip. \n\n\"You don't make it easy for me either.\" Joanna panted before moving her lips to the girls pert bottom and dragging her tongue across a smear of her own arousal. \n\n\"Fuck!\" Zara cursed, through gritted teeth. \"Did you just do what I think you did?\" \n\n\"And what would that be?\" Joanna husked, placing two hands on the girls buttocks to grope at the soft flesh. The young woman hesitated; it was difficult to form a sentence when trying to control a seemingly impossible - given Joanna's hands were no where near her pussy - orgasm. \n\nSmack. Zara hissed as the pleasurable sting of Joanna's palm on her bum reverberated through her. \"What do you think I did, Zara?\" Joanna demanded. \n\n\"I, I, I think you just licked your, eh, self, from me?\" She stammered, heat rising in her cheeks at the utterance. \n\n\"You need to work on your dirty talk,\" Joanna taunted smoothly, before returning her attention to Zara's arse, \n\nZara's breath heightened as her flesh was kneaded with a renewed vigour. \"Oh please, Joanna!\" she begged as she felt the woman's hand shift between her legs. \"Oh God, yes!\" she whimpered as, after briefly toying with her entrance, Joanna worked two fingers into her before trying a third. \"Oh fuck!\" Zara groaned before letting out a guttural groan as the third digit stretched her walls. However, the sensation was short lived and Joanna retracted her hand almost instantly, causing the young woman to cry out in frustration. \n\n\"Soon, darling,\" the older woman pacified. However, the soothing sentiment was betrayed by another swift whack to Zara''s bottom, causing the girl to jerk against the bed. \"I love your arse, Zara,\" Joanna panted, returning to that violent kneading in a way that caused the young woman's now burning skin such a delicious discomfort she could feel the sheets dampen beneath her. \n\nCeasing her frustrated writhing, Zara froze. Joanna's mouth had returned to her skin and she acutely felt the woman's tongue snake down her arse as that unyielding grip pulled her buttocks apart. Goosebumps prickled her forearms and the hairs on the back of her neck stood on end as Joanna's tongue crept lower until she felt it. The gentle lapping at the crinkled flesh was a sensation unlike anything Zara had felt before. \n\n\"Jesus, Joanna!\" she whined, her face buried in the bedding, \"That feels amazing.\" \n\n\"Well, relax then,\" Joanna panted before returning to the assault with renewed enthusiasm. She was relentless, as if lost in pleasuring Zara this way. \"Hold yourself open for me, darling,\" she panted, guiding one of the girl's hands to her buttocks. \"Good girl,\" she murmured before returning her attention to the bud and circling her tongue with such intensity the young woman cried out. \n\nHowever, the exclamation was nothing compared to when Joanna's fingers returned to her entrance. \"Please Joanna. Please fuck me!\" Zara babbled loudly as she ground herself against the older woman's taboo manipulations. \n\n\"I will, I promise,\" Joanna assured as she pushed her fingers into the young woman and returned her mouth to her arse. \n\n\"Jesus Joanna. Fuck me.\" the brunette demanded as Joanna stretched her walls, however the intrusion was again fleeting and a moment later Zara had been flipped on to her back. \"Why did you... Please don't stop.\" She gasped, a stricken expression on her face as Joanna, who merely smirked, knelt between her shaking legs. \"You're torturing me!\" Zara snapped, genuinely frustrated by the maddening woman. \n\nJoanna's lips curled further as she gazed at Zara's expression. \"Firstly,\" she scolded, the tone harsh as her smile faded, \"don't you dare order me to do anything,\" she forced the young woman's legs even further apart. \"And secondly, I am torturous! Hence why I am the best you have ever and most likely will ever have. Now, lose the attitude and relax. Go on,\" she encouraged, \"lie back.\" \n\nRelax, Zara thought scathingly, both at the notion of doing so and what was to come. However, she trusted Joanna. The quip about her being the best Zara had ever had was obvious, arrogant and completely factual. \n\n\"You're so wide for me,\" Joanna purred moments later, working her fingers in and out of the young woman at a teasing pace. \"And wet. Can you hear that?\" Zara grunted as Joanna pushed hard into her, causing a sopping noise. \n\n\"Yes,\" she gasped, arching her back, causing ribs to pale her smooth skin. \n\n\"You feel so good,\" Joanna moaned, deep green eyes transfixed between Zara's legs. \"Would you like another?\" she asked. The question may not have been rhetorical but there was no waiting for an answer and the young woman growled as she felt Joanna fill her. \n\nShe ached for Joanna, every inch of her wanted the professor, needed her, craved her and she moaned with pleasure as the woman pushed a third finger into her. \n\n\"Well done,\" Joanna encouraged, leaning over the young woman to kiss her, \"Are you all right?\" \n\n\"Yes, of course,\" she gasped, before emitting a high-pitched whine as Joanna's fingers rubbed against her sensitive inner walls. \"Joanna, please... I want another.\" Zara begged eventually, as butterflies whirred through her tummy at the thought of accommodating Joanna's fourth digit. \n\nJoanna smiled wickedly as she continued to slowly move her fingers in and out of the young woman. \"Are you sure?\" Upon Zara's nervous compliance, the professor bent forward to kiss her victim again. \"I'd like you to watch,\" she whispered. \n\nPropping herself on her elbows, Zara's slightly worried expression turned to that of panic and she cursed as she watched Joanna tuck her thumb into the palm of her hand. \n\n\"Its ok. Just stay calm, darling,\" Joanna assured in a soothing tone as her free hand caressed the young woman's shaking thigh. \n\n\"I thought, I thought I was at three!\" Zara exclaimed nervously, her eyes flashing to Joanna's. \n\n\"We can stop anytime, Zara,\" Joanna said softly, \"You know that.\" However, her four fingers began to move once more, reminding the young woman of how pleasurable the experience had been. \"Would you like me to stop?\" She purred as her hand moved from caressing Zara's thigh to brush her fingers lightly over the young woman's clit. \n\n\"Oh God!\" Zara groaned, her body jolting under the expert manipulations before muttering, \"I want you to try it.\" \n\n\"What was that?\" Joanna smirked, her hand slowly creeping into Zara. \n\n\"I want you to try it,\" she repeated more clearly, before sinking back into the bedding, balling the material in her hands as she did so. \n\n\"You'd like me to try what, Zara?\" Joanna pressed as she continued to push her slender fingers into Zara's wanton sex. \n\n\"To... to try... and put your hand in me,\" she said slowly between deep, calming breaths. It was terrifying. Terrifyingly arousing and suddenly everything Joanna had done to get her as wanton as she was made total sense. And it had worked; Joanna's fingers slowly moved into the young woman and as she began to gently fuck her, Zara could feel a pleasurably painful sensation burn throughout her glistening body. \n\nAt a maddeningly slow pace, Joanna began to work her hand in a twisting motion, causing a current to zap through the architect every time her knuckles nudged her open, wider and wider with each attempt. \n\n\"Come on, baby,\" the blonde encouraged after another try. \n\n\"Sorry,\" Zara gasped, her hips rocking to meet Joanna's gentle thrusts. \"I want to, it's just... ah!\" She winced as Joanna pushed harder. \n\n\"You're so close, Zara,\" Joanna frowned, twisting her hand. \"For me, baby, just take it.\" \n\n\"I want to.\" Zara said through gritted teeth before jolting as she felt Joanna circle her clit. She let out a guttural moan which then raised in pitch to a whine as the professor pushed in further. \n\n\"That's it, darling. Take my fist. That's it. That's it.\" Joanna groaned as her knuckles pushed apart Zara's walls before being enveloped by the young woman. \n\n\"Oh my God.\" Zara groaned, feeling Joanna push every inch of her apart. \"Fuck. Christ. This is so intense.\" She breathed quickly, her legs shaking as her body finally accepted the woman's hand. \n\n\"Oh my God.\" Joanna panted and Zara opened her eyes to catch the woman's lustful gaze fixed on what Zara could now see was Joanna's slender wrist pushed against her. \"Are you all right?\" Joanna asked, tearing her eyes from her handiwork to Zara, who could merely nod. \"Good girl,\" Joanna said hoarsely and Zara watched as the woman's eyes returned to their intimate joining. \"You're so special.\" she reassured, eyes meeting her victim's once more as her hand began to rock. \n\nEvery time Joanna's hand moved Zara could feel the most intense friction as she was stretched. The sensation caused that pressure to build in her stomach at such a rapid pace and her breath heaved as her began to legs tremble. \n\n\"Joanna?\" She whimpered as her whole body began to shake and in a series of animalistic noises a surprisingly quick orgasm wracked her body. \"Christ!\" She panted as it left as quickly as it arrived. \"I'm so sorry, Joanna,\" she apologised earnestly, feeling wetness seep down her buttocks and onto the duvet. \n\n\"Looks like you're into this,\" Joanna mused, continuing the subtle movements. \"You'll cum again, especially once I actually do something,\" she added and as if to prove a point Joanna's pace quickened, causing Zara to shriek and convulse. \n\nPerspiration jewelled on her crinkled brow as the young woman felt a monumental pressure build with every movement of Joanna's fist. The way the older woman claimed her, had her doing something she'd never even considered drove her to maddening heights of arousal. She groaned loudly as Joanna shifted position, causing an exquisite volt of pain to course through her body and the brunette soon felt Joanna's tongue on her clit. \n\n\"Jesus, Joanna,\" she managed through gritted teeth as her hips rocked against the woman's mouth and hand. Forcing herself not to topple from the precipice as quickly as before, Zara took a few deep breaths before glancing down at her assailant. \"Joanna?\" she gasped, noticing that the woman's other hand had snuck down her own body, disappearing into the robe's confines. \"Are you-\" \n\nThe muffled confirmation made the young woman's stomach jolt and her walls tightened around the intruding fist. The slight discomfort did nothing but increase that pressure which caused her entire body to tremble as, as if to keep herself grounded, Zara balled more of the bed sheets in her fist. \"Please,\" she cried in a shaky voice. \"Joanna, please... I'm... I can't hold off!\" \n\nThe revelation had Joanna moan onto her clit, sending vibrations through the young woman's throbbing pussy as she emitted a loud groan, which crept octave after octave higher as she felt Joanna's tongue swirl violently against her sensitive skin. \"OhmyGod, ohmyGod, ohmyGod! Joanna! Yes yes yes!\" she shrieked as she whole body shook in a violent, jerking orgasm. \n\nPerhaps it was the near screams of pleasure; the arousal seeping down Joanna's forearm; or maybe the way Zara's shining body convulsed on the bed? Whatever it was, had the professor, whilst continuing to press her tongue firmly into the girl, convulse under her own manipulations in a quiet, yet powerful orgasm. \n\n\"I can't believe you did that to me,\" Zara muttered groggily, her face buried in the confines of the pillow. \n\n\"I thought you were in some kind of sleep-induced shock,\" Joanna smiled softly, continuing to run her fingertips lightly up and down the young woman's spine. \n\n\"Nu-uh,\" she replied in a distant tone which would suggest otherwise before emitting a content sigh as she felt Joanna shift in the bed and proceed to press her lips into the girl's hair. \"Anyway.\" The girl said drowsily, \"You didn't get off, so-\" \n\nBut Joanna's hand pressed between her shoulder blades, encouraging the young woman to stay put. \"I took care of myself, you were just too preoccupied to notice.\" \n\n\"Was it all right?\" Zara murmured with no conviction to act should Joanna respond to the contrary. \n\n\"Well, of course. I'm the best lover we've ever had.\" \n\nThe young woman turned her head and swept her tousled hair from her pretty face. \"I don't know, Joanna, there's always room for improvement,\" she grinned mischievously. \n\n********************************** \n\n\"Come on, Zara. Stop fannying about. Push! No excuses.\" \n\nHer legs sped up as she helplessly watched the treadmill's speedometer hit a six-minute mile pace. \"At least put the the incline down.\" Had she had the breath, she would have completed the sentence with 'you son of a bitch'. \n\n\"Nope,\" he stated matter-of-factly before giving her a dazzling smile, \"Anyway, you've only been at it for thirty-three minutes, how can you be tired already?\" \n\nMuttering some choice words, Zara continued to batter against the speeding machine. She had every right to be a gasping, sweaty, nauseous mess. \"What the hell am I doing this for?\" she muttered, attempting to rationalise why, under the fellow architect's duress, she had agreed to one last interval session before Saturday's grave error. What had gone from 'I'll just turn up and do what I can' had turned into three weeks of hard exertion. She'd been fit enough to complete the trail race in the first place. However, Steve had failed to mention the high calibre of competitor, so upon seeing last years results the young woman ramped up her training. \n\n\"Your legs will feel better for it on Saturday; you'll be thanking me as you're pinging up that big hill.\" \n\n\"I can think of plenty of things I'll want to do to you and thanking isn't one of them!\" she gasped. \n\n\"Oh babes, you don't mean that,\" he said brightly before- \n\n\"Steve! Don't you dare!\" \n\n\"Just four more minutes and this is a great song to finish on,' he encouraged, increasing the pace. \n\n\"You're... such a... stereotype!\" she gasped as her feet battered the cushioned surface in time to a bad remix of The Weather Girls' classic. Annoyingly, her friend wasn't wrong, Raining Men was ideal for maintaining the fast pace required to reach the targeted five miles. \n\nEventually, the harmonic melody of beeps signified the completion of the gruelling workout and the machine finally slowed to a gentler pace. \"Thank God,\" she muttered, tipping her head backwards. \n\n\"Told you you'd manage it. That was even faster than me!\" her companion encouraged, before clapping her almost bare shoulder. \"Eugh!\" Steve grimaced in disgust as he retracted his now wet hand. \n\n\"What do you expect?\" she heaved, before wiping her soaking forearm against the man's stubbled cheek. His reaction causing an mischievous laugh to escape her lips. \n\n\"Urgh, Millar. You are vile!\" he exclaimed, pulling his t-shirt up to wipe away her perspiration. \"I'm going to work on my chest before you rub anything else on me!\" \n\nZara, now a good deal more composed, inhaled deeply into an attempted Heron Pose, feeling her hamstring stretch and then loosen. Shifting into a forward bend, the name of the pose she didn't know, she heard her phone chime, however ignored it to continue to stretch. \n\n\"Compromising,\" Steve commented as he materialised in front of her. \"Good to go?\" \n\n\"Nope,\" she said before lying back on the mat to stretch her glutes. \n\n\"What do you want for dinner?\" he asked, collapsing unceremoniously beside her as Zara suggested they eat at her place. \"Oh!\" he exclaimed, snatching her dinging phone. \"It's Cruella.\" \n\n\"Give me that!\" she said, breaking from her position to grab the device. \"And don't call her that.\" \n\n\"As if you don't relish her evil ways,\" Steve said dramatically, swiping the phone back out of Zara's grasp before she had time to read the message. \"Whoa!\" \n\n\"Steve, give me that!\" The brunette snapped, getting up and following the young man who was practically skipping through the gym. \"Given how arduous a day you will have on Saturday,\" he read aloud in a enunciated, proper tone, which given he'd never actually met Joanna was rather accurate. \"Not to mention how arduous an evening you'll be begging for!\" he teased, turning to her as he walked backwards amongst the exercise machines with a wicked glint in his eye. \n\n\"Steven McCally, you give me that phone!\" she said in a terse tone which would make her girlfriend proud. \n\n\"I think it would be best- Oh, I'm so sorry,\" he gasped, his attention diverted upon backing into a passing gym bunny. Zara flew at the opportunity and took her phone from her friend's grip before striding to the changing rooms. \n\n\"I don't see why you're being so up tight about this,\" Steve sighed, his breath misting against the freezing night air. Zara didn't respond as she struggled to zip the goose-down jacket over her multiple layers. \"Have you told her you're going?\" the young man persisted as they walked away from the health club. \n\nThe young woman could feel the chill nip through her Lycra training tights as an easterly wind coursed down Leith Street, causing the exhausts vapours caught in the taillights to billow. Zara fixated on the rising fumes, her face impassive, masking her absolute delight at Joanna's suggestion. \n\n\"Come off it Za-.\" \n\n\"I've told her I'd love to go,\" Zara snapped defensively. \n\n\"Well good, wouldn't want you to come across too eager,\" Steve said sarcastically, his voice partly muffled by the scarf he'd pulled up over his chiselled face. \"Anyway, I don't suppose you have to play it cool now she's your girlfriend and all,\" he sighed, draping his arm over her shoulders. \n\n\"Don't be jealous,\" she teased, looking up at him, \"You're still my number one.\" \n\n\"Not for long,\" Steve pouted as he steered them over the pedestrian crossing. \n\n\"Don't be daft. It'll take more than an overnight stay in the Cairngorms to knock you from the top spot,\" she smiled, referring to Joanna's recent correspondence. The professor had sent Zara a link to a country house about an hour's drive from where she'd be running this coming Saturday. According to Joanna it seemed a shame to drive all the way up to the beautiful National Park and have to leave within a couple of hours. The perfect remedy for which was an overnight stay, thus allowing the pair to enjoy a relaxed drive back on Sunday. \"I mean,\" Zara teased, \"you might be trumped if she buys me dinner as well.\" \n\n\"Hey!\" she protested as Steve attempted to ruffle her hair but instead knocked her beanie over her eyes as they entered the small supermarket. \n\n\"You should be thanking me for giving you my race spot,\" Steve said, comparing two almost identical bags of salad leaves. \"This trip is pretty ideal timing, honey.\" ",
        "\"Oh, as if I'd thank you. It's going to be hell!\" she scoffed, picking the rocket blend at random and dropping it into the basket. \"And why,\" she called back, moving down the aisle, \"is it perfect timing? If anything, it's a bit soon.\" \n\n\"Well, it's not really soon. You've been hankering after her for months. I mean, June, July,\" he counted the remaining months on a gloved hand, \"Five, almost six, months since you first met her. So, it's hardly surprising that in that time you've fallen in love with her.\" \n\n\"Don't be ridiculous,\" the young woman snapped without a second thought, \"I barely know her.\" \n\n\"No, but your face lights up like a Christmas tree when we talk about her,\" Steve reasoned, \"I mean you look like a total idiot, but it's, well, it's sort of nice to see you like that.\" \n\nZara reddened and handed Steve the shopping basket. She suddenly felt unbearably hot, clearly a base layer, zip-up hoodie and down jacket were not meant to be worn indoors, even in the refrigerated section. After unzipping both the jacket and the jumper, the young woman picked up a packet of chicken breasts. \"I mean,\" she began grudgingly, not meeting her friend's gaze, \"I like her, a lot. But I don't love her.\" Even thinking about the tall, elegant blonde made her heart pound with a force which betrayed the sentiment. \n\nShe turned to walk further down the aisle but Steve stood in her path, \"Are you thinking about her now?\" \n\n\"Well, yes, but I'm also thinking about how you are getting in the way of me and my dinner, so could you move, please?\" \n\nHe ignored the jibe and placed his strong hand firmly to the centre left of her chest; Zara could feel the pressure of his hand against the top of her ribcage, \"What are you doi-\" \n\n\"Think about her.\" \n\n\"Steve this is ridiculous,\" she blushed furiously, \"I'm not doing this. Not here least of all.\" \n\n\"Why? What are you afraid of?\" \n\n\"Oh, get off!\" she sighed impatiently, brushing his hand from between her breasts, \"I don't love her.\" However, as they continued their shopping her mind flitted to Joanna; the way her lips moved when she began to smile, subtle creases at the side of her mouth forming just before she flashed perfectly aligned enamel before expanding into that ravishing smile. The expression was usually fleeting before it settled into a fond, kind look which made her eyes glow and Zara's heart-. \n\n\"Zara!\" Steve called, snapping her from the trance he'd unknowingly encouraged. \"Just pick one!\" Holding one bottle of red wine in each hand, Zara blinked at him several times before regained her wherewithal and selecting the Cabernet before moving to the till. \"Chop chop!\" We've got a trip to Vietnam to plan.\" \n\n************************************* \n\n\"Come on,\" Joanna coaxed in an unsuccessful attempt to rouse the young woman who had snuggled further into the bed. \"Zara, come on,\" she repeated before a final, firmer attempt which was accompanied by a not so gentle shake of the girl's bare shoulder. \n\nThe brunette groaned defeatedly into the pillow as all sorts of excuses ran through her mind. However, none seemed plausible; she had agreed to this, trained for it and, most of all, she was being rewarded with a night away with Joanna. \"Why did I agree to this?\" she grumbled before cursing her stupidity. \n\n\"I have no idea,\" Joanna sighed, getting out of the bed, \"And, to add to your motivation, according to the forecast it snowed up there last night.\" \n\n\"So if I don't fall and break my neck, hypothermia will get me. Fabulous,\" Zara muttered darkly as she sat up, watching Joanna slink towards her in the dim light. \n\n\"Quite the ray of sunshine this morning, aren't you?\" she bent and kissed the top of the girl's head. \"Now move it, moaning about it isn't going to improve things.\" \n\n\"Well, it depends,\" Zara reasoned, her disgruntled expression shifting to a sly smile. \"If you could make me moan, then that would certainly improve my demeanour.\" Slender hands gripped Joanna's forearms, encouraging the older woman back to bed. \n\nJoanna moved with her, kissing the young woman's cheek before moving round to her ear. \"Nice try,\" she whispered before disentangling herself from the gentle grip. Moving towards the ensuite she warned, \"I'm leaving in forty minutes. And as much as I hope you can join me, I will happily have an evening in Dulnain House myself - a nice meal, bottle of red wine, get some writing done - what bliss.\" \n\n\"Are you sure you have everything you need?\" Joanna asked half-an-hour later as Zara loaded her holdall into the car's boot. \n\n\"I think so; I really just need my trail shoes and a couple of layers... Oh my watch!\" Zara tutted and proceeded to riffle through the sports bag. \n\n\"Zara,\" Joanna sighed, pulling up the sleeve of the young woman's jumper, causing the architect to reddened at the sight of her smart watch. \"Just go and get in the car and try and calm down. Getting all het up isn't going to do you any favours.\"  \n\nThe drive, were it not for the periodic nerves which jolted Zara's stomach, was pleasant. They watched the dawn light set the Firth of Forth ablaze, as Joanna's car sped across the iconic suspension bridge. It was a nice vehicle; luxury leather interior, a dashboard with every setting one could need and it tore along at a quiet purr. \n\nAs if noticing Zara's envious gaze Joanna asked, \"You don't drive, Zara?\" \n\n\"Yeah, I do,\" the young woman informed, tipping her features towards the professor. \"My car failed its MOT and I've haven't gotten round to replacing it.\" \n\n\"You need to get on with it; you can't be without a car for long.\" \n\n\"Well, it was four years ago,\" Zara said, stretching her long limbs lazily, \"I do have a look at them every now and then, but... I don't know, there're just better things to spend my money on.\" \n\n\"Like flights to Vietnam?\" Joanna offered. \n\n\"Eh, yeah,\" Zara replied sheepishly. \n\nThey fell into conversation regarding Zara's upcoming trip; she was meeting up with Steve following his cycle through South East Asia. \"So you'll do one week alone and one week with your friend?\" Joanna asked uneasily. Zara confirmed, explaining that she'd spend a week in the mountainous region of the country before meeting the fellow architect by the coast. \n\n\"It's a very safe country,\" the young woman assured, \"And I'm well versed in doing a bit of solo exploring.\" \n\n\"Mmm...\" Joanna hummed skeptically, however she didn't push the subject, \"And when are you flying?\" \n\n\"Next week.\" \n\nThe easy discussion continued as they devoured the miles. The route taking them through the quaint city of Perth, then into the burgh of Blairgowrie where they grabbed a coffee. Once crossing the threshold into the national park, identified by an eagle carved in granite, the scenery changed dramatically; snowcapped mountains sprang up as if from nowhere and Scotch pines lined the road like sentries. \n\n\"Do we need to put the sat nav on?\" Joanna asked, passing her coffee cup back to Zara. \n\n\"Probably for the best,\" Zara loved this part of the country and she knew it well, however, there were so many unmarked roads it made getting lost a very real possibility. She set the coordinates into the car's system and a cool voice told them they were about thirty minutes away, which prompted Zara to dig out her second breakfast. \n\n\"Didn't you have enough to eat this morning?\" Joanna smiled as she turned onto a minor road. \n\n\"It's ten miles, Joanna! Five of which are on a pretty steep incline,\" she said defensively as she tore open the Trek bar. \n\nAs much as Zara willed the minutes to creep by, they soon pulled into the Forestry Commission car park. \n\n\"Is your friend here?\" the professor asked, as she parallel-parked between a VW camper and a tree. \n\n\"Steve? No, to add insult to injury he's scored corporate hospitality for the rugby today.\" \n\n\"No, the boy that was going to give you a lift,\" Joanna replied, killing the engine and pulling on a pair of gloves. \n\n\"Oh, erm, I'm not sure. He's more a friend of Steve's really. I've just met him a couple of times. Besides...\" the young woman said, looking nervously at the hordes of mostly men, their legs so knotted in muscle that they could have been extensions of the tree roots surrounding them, \"I think I'll just keep my head down.\" \n\n\"You'll be fine,\" Joanna encouraged, squeezing the girl's tracksuit clad knee. \"I'll come with you to register. Let's go.\" \n\nWalking amongst the soft carpet of snow-dusted pine needles, Zara and Joanna found the registration point. \"I'm running under the name Steve McCally,\" Zara informed the elderly woman who preceded to rifle through the race numbers. \n\n\"You used to the roads, girl?\" she asked in a thick Highlands accent. \n\n\"Until recently, yes,\" Zara admitted begrudgingly as she accepted the paper number and pins. \n\nA wrinkled finger gestured to Zara's watch. \"May as well leave that thing in the car, can't afford to take your eyes off the track on this hill. Keep your head down and watch your feet; two broken ankles last year.\" And before Zara could respond the woman's attention turned to another competitor. \n\n\"Well, that filled me with confidence,\" Zara muttered. \n\n\"Just go get ready so you can warm up and put it out of your mind,\" Joanna encouraged as the pair made their way back to the car. \n\nThe young woman pulled off her tracksuit bottoms, changed her trainers and exchanged her jacket for a battered grey hoodie before jogging away from the car. \n\nJoanna frowned when Zara returned ten minutes later, \"You can't wear shorts, Zara, really.\" \n\n\"Having warmed up, I can barely feel the cold,\" Zara assured the professor who was frowning at her goose-bumped legs. \"Besides, everyone else is.\" \n\n\"Everyone else here is mad,\" Joanna said pointedly without lowering her voice. \"Actually, strike that - everyone here is mad, you included.\" She shivered. \n\nZara couldn't help but smile; Joanna looked like some Nordic model with her short blonde hair contrasting with the dark fur trim of the expensive looking parka that encased her svelte figure. \n\n\"What are you smiling at?\" Joanna asked suspiciously as she pinned Zara's race number to her sweater. \n\n\"You look nice,\" Zara shrugged, enjoying the closeness. \n\n\"Highland chic,\" she informed the younger woman dryly. She straightened up but remained standing close. \"You on the other hand look like you're about to freeze.\" \n\n\"You'll just have to warm me up later,\" Zara grinned as she took one of Joanna's now gloved hands in hers and leaned in. \n\n\"Eyes on the prize, Millar.\" Joanna smirked, quelling Zara's advanced with a gentle prod to the shoulder. \"Here...\" she guided Zara's hand before pulling up the jumper's sleeve. \"You should wear it; doesn't matter what some old crone says, just make sure you concentrate,\" Joanna urged as she refastened the watch Zara had discarded. \n\nA klaxon reverberated through the woodland signifying the start of the pre-race brief. \"I better go,\" she muttered, pointlessly toying with the watch strap as butterflies, and not the good kind, fluttered in her stomach. \n\n\"You'll be great,\" Joanna assured her, slender hands gripping Zara's shoulders, \"But please be careful,\" she urged before betrayed her own stance on public displays of affection to kiss the young woman. \"Well, go on,\" she urged a moment later, giving Zara a gentle shove, lifting her from her McKenzie-infused daze to trot towards the assembling group. \n\nThe briefing was more of the same inspiring encouragement. \"...ambulances are on hand...\"; \"...if you don't follow the markers it'll be easy to get lost...\"; \"...the snow has stopped... for now...\" \n\n\"Don't look so worried,\" an older man dressed in obscenely short shorts and a fluorescent vest advised, \"The club that organises this race are always trying to make their events out to be the toughest in the country. It's not half as bad as they are saying,\" his greying whiskers twitched in a heartening smile. \"Nae bother for a young lass like you.\" \n\nBut before Zara could respond to the much-needed kindness, the starting whistle blew and, in blur of goose-bumps and Lycra, the runners set off along the trail. It was an easy, almost pleasant, start; the thick blanket of pine needles and snow had Zara almost bouncing along at a sensible pace. The real competitors were already rounding a corner before her, but she maintained a respectable speed for the first mile, which warmed up her legs sufficiently to tackle the upcoming incline. \n\nDon't be scared to drop to a slow jog for the hill, otherwise you'll burn out, Steve had cautioned. She heeded his advice and her feet crunched on the now stoney path at a slower gait as a heat began to grow in her thighs and bum. For the first while, the burn was almost satisfying and Zara lost herself in the ascent. \n\nLeaving the woods behind, the young woman scaled the exposed hill as the scenery became yet more idyllic. Growing amongst the snow-dusted heather, pine trees peppered the hillside and a pair of Kestrels soared gracefully above. Furthermore, the runners had spread out, meaning there was less chance of tripping over each other. Shaking her head, Zara thought herself foolish for just how wound-up she'd gotten herself at what was turning out to be a pleasant workout. \n\nUnfortunately, the feeling of tranquility was short lived; no runner relishes steep inclines and although she'd been coping, this beast was now becoming the archest of her enemies. However, this was a race after all and where Zara would normally have slowed to a power walk she forced her legs to speed up. \n\n\"You're doing really well!\" the marshals called cheerily from the confines of their Jeep. Zara tried to smile, but it probably came across as an envious glare - the two women were wrapped in wool blankets, sipping some steaming hot drink. \"You're just another two miles to the top.\" \n\nJust two miles? Very good! Zara thought sarcastically as she rounded the bend which brought her to a bouldery section. Hopping up the slippery rock Zara was glad she'd recently replaced her trainers as she scaled the precarious incline. \n\nApproaching the top of the exposed hill the wind really picked up and Zara only heard the laboured breath and scuffing of rubber on rock when the individual was almost on her. Her head darted to see a pink clad figure lurching into her peripheral and the break in concentration had her misjudge a step, resulting in a scrape to her knee. \n\n\"Shit!\" she winced but maintained the pace, not bothering to look at the now burning flesh. \n\n\"It's hell isn't it?\" the woman who had distracted her panted, misconstruing the brunette's curse. \n\n\"Indeed!\" Zara gasped, annoyed at her break in concentration. \n\n\"You run this before?\" the woman, obviously much fitter than Zara given her ability to strike up a conversation at this stage in proceedings, asked. Zara merely shook her head as they continued scrambling up the poor excuse of a path. \"We're almost at the top,\" the woman assured, \"However, it's the descent you've got to worry about; people get silly and go careering down the slope; watch yourself.\" \n\n\"Thanks for that,\" Zara responded, watching the gazelle-like figure overtake her to leap away effortlessly. \n\nReaching the plateau, Zara allowed herself a few slow steps as she gulped for breath. The scenery was unique; a vast flat expanse of snow-covered brown foliage patched with granite. Ignoring the burn creeping into her back and shoulders the brunette headed towards two fluorescent clad marshals; at least they had the decency to look bitterly cold. \n\nIt took a while for the incline-induced ache to ease and when it finally did so Zara noticed what the passing woman had advised. Upon hitting the plateau and then the rocky decline, runners quickly picked up the pace and a dozen lean figures zipped past Zara at an impossible rate. Despite the temptation to hammer down the hill, Zara followed Steve's advice: don't be tempted to sprint all the way home, the decline is harder on your legs than going up. She struggled to believe this, then again she'd comply with any information that meant she could enjoy the view of the Cairngorm mountain range. \n\nWhen the burning in her legs dissipated Zara tentatively increased the pace as, after an eternity, the forest grew closer. The freezing air stung her throat as she took great ragged breaths, nonetheless she was motivated by the runners she was starting to reel in. Eventually, validating Steve's advice, she passed a familiar pink t-shirt. \n\nHer feet battered against the gravelly surface and she passed yet another runner; there was no doubt the hardcore competitors were already over the line, but Zara was heartened by the time on her watch. Rounding a corner the young woman took on one last rocky stretch before she'd be enveloped into the comforting forest once more. \n\n\"Move! Move! Move!\" came a shrill voice, practically in her ear. \n\nThe collision followed almost immediately; Zara went down, hard, sandwiched between the hard gravel and whomever had caused the blow. They tumbled, skidding in a haze of pink and grey along the path for several feet before coming to a halt. The young woman lay, in that beautiful, horrible, stretched out moment akin that of when one stubs their toe and the pain is delayed. How long until the pain comes and at what intensity? \n\nYet despite the skin tearing fall, Zara, flying on adrenaline, got to her feet almost instantaneously. She could almost ignore the pain in her skinned legs and elbows but, having had the wind knocked out of her, Zara now realised she was struggling to breathe. \n\n\"You... should really have... listened to... your own... advice...\" Zara gasped eventually as she turned to glare down at the heap before her. \n\nThe woman, heaving apologies as she did so, accepted Zara's hand. Standing unsteadily, she gawped, \"Your legs!\" \n\nZara glanced down but ignored the mess before looking to her counterpart as a runner tore by them, reminding her of the job in hand. \"You're not looking so hot yourself,\" she panted. \"Look, I'm going to keep going. Are you all right?\" the woman nodded, saying she'd catch her up. \"Just don't bowl me over if you do,\" Zara warned. \n\nAfter a few tentative steps the young woman, sure the damage was purely superficial, picked up the pace. Her stinging legs fell back into the ferocious gait and she was soon on the bouncy forest surface. Why couldn't I have taken the tumble here? she thought darkly, however the sentiment was pushed from her mind as someone shouted, \"Half a mile to go!\" \n\nZara twisted and turned downhill, round trees and over roots as fast as she could. The cars in the distance materialised at an agonising pace as her ragged breath scraped against her lungs and she felt stitches form in places she didn't think possible. \n\nWith this finish line in sight, she reeled in yet another runner who glanced at her and picked up his pace, Zara did the same and the pair pushed each other over the finish line; the relief only comparable to that Joanna could have her achieve. \n\nThe stranger she'd crossed the line with slowed to a jog beside her, \"Zara?\" He panted. Her brain wasn't really working and she gave him an unknowing look as they slowed to a jog. \"Steve's friend. Mark.\" \n\n\"Oh, of course,\" she barely wheezed. \n\n\"Steve said you were really nervous; had never run anything like this. Pretty decent effort though,\" he smiled, clapping her on the back. \"How did you get here? Need a lift back?\" \n\n\"No,\" she panted. \"Thanks though.\" \n\n\"Zara!\" Called that familiar voice which made her heart flip. \n\n\"That's my ride,\" she panted to Mark. \"Sorry, I'm not very loquacious just now. Catch you later?\" \n\n\"Sure, I'll be inhaling everything over at the cake stall when you're free,\" he smiled, clapping her on the back again before jogging off. ",
        "\"I'm so sorry. I missed you crossing the line. You were so much faster than-\" Joanna stopped in her tracks as Zara turned around, a horror struck look on the professor's face. \n\n\"What?\" Zara asked; despite the sensation that she'd left all her energy on the mountainside, a smile crept across her lips at the sight of Joanna. \n\n\"Look at your knees!\" Joanna exclaimed. \n\n\"Oh that,\" Zara waved off as she glanced down. \"That's noth- oh. I'm bleeding. Quite a bit.\" She said in dumb surprise. Now she took in the scraped flesh; the endorphin-masked pain began to throb in her knees, forearms and- \n\n\"Oh darling,\" Joanna moved to her, gingerly tilting Zara's face to one side. \n\n\"Is it bad?\" she groaned. \n\n\"Looks like a scrape, but it is on your temple. Are you dizzy?\" the look of concern in Joanna's eyes distracted the young woman. It was a new expression; a sympathetic frown which pinched her eyebrows whilst her eyes grew so bright they almost shone. \n\n\"Erm, no. No, I'm not,\" Zara stammered, breaking from her appreciation, \"I'm fine, really. It looks worse than it is. Anyway, I need to walk or else I'll stiffen up.\" She took a tentative step, her body already protesting. \n\nDismissing Joanna's encouragements to be seen by the paramedics, Zara pulled on a pair of tracksuit bottoms, wincing at the sting of raw flesh on Polyester before walking several laps of the car park. \n\n\"And what, she just careered into you?\" Joanna asked with venomous indignity whilst Zara recounted her ordeal. \n\n\"Pretty much,\" the brunette shrugged, resting a hand on Joanna's shoulder as she stretched her quads; the pose causing her to wince as the damaged skin stretched. \n\n\"Not that bad, huh?\" Joanna said, eying her with scolding suspicion. \"I don't know what you were thinking running that. Mind you,\" she sighed, \"you were bloody fast.\" \n\n\"It was great fun.\" Zara smiled, perking up as she looked at her watch for the dozenth time; ten miles in under an hour-and-a-half. \n\n\"Well, I'll take your word for it,\" Joanna said, as they turned back towards the car, \"But great or not, you're going to be in bits once your runner's high wears off, so sooner we get to the hotel the better.\" \n\n\"Can I just nip over and say goodbye to Mark - Steve's friend - please?\" Zara asked, stopping in her tracks. \"I said I'd catch him before I left.\" \n\nJoanna agreed, saying she would turn the car around and within five minutes Zara was, rather stiffly, sliding into the vehicle. Joanna checked once more that the young woman was all right before slipping the car into gear and descending the forest track. \n\n\"We should get there by,\" her green eyes flashed to the car's navigation, \"three-ish. So we can get checked in, you can have a soak and then see about some dinner.\" \n\n\"Sounds good,\" Zara murmured drowsily. \n\n\"We'll get some ice for your knees as well,\" the older woman sighed as concerned annoyance flitted across her face once more. \"I really think you should have got checked out.\" \n\nZara winced as she turned in the seat to look at Joanna's flawless profile. \"I bet,\" she yawned, ignoring Joanna's last observation, \"I bet you had different plans for me, a hotel room and some ice,\" she teased, enjoying the sight of Joanna's lips twitching into a smile before muttering something which involved the word 'shameless'. \n\nHaving awoken as the car crunched up the gravel drive way of Dulnain Country House, Zara stretched, her Lycra long-sleeve riding up to expose her scraped stomach. \"Oh for God sake, Zara!\" Joanna snapped, causing the brunette to jump and pull the top back down. \"Is there any bit of you that isn't bloodied?\" However she did not wait for an answer. \"I wouldn't have let you talk me out of you seeing the first-aiders had I known you were scraped all over!\" Zara tried to tell her she wasn't, but Joanna, more angry at herself than Zara, spoke over the top of her. \"Just get inside and we'll get you sorted.\" \n\nDulnain House, built circa 1850 by Zara's estimate, was a repurposed Victorian hunting lodge; one would have to have a party of at least forty to fill the grand space. As Joanna checked them in the architect marvelled at the original features in the entrance hall; marble fireplace, corniced ceilings and barley twist panelling. \n\n\"Room 104,\" Joanna informed her, gesturing for Zara to walk ahead. \n\n\"This is so nice, Joanna,\" Zara awed, as they climbed the tartan clad stairwell which boasted oil paintings of the original owners. \n\n\"Not a bit stuffy for you?\" she asked, as she glanced at an extensive collection of antlers on the far wall. \n\n\"Come on, you know my stance on traditional buildings,\" the young woman beamed. \n\nThe spacious bedroom was less ostentatious than the reception; although well-appointed, it was the impressive vista of the Cairngorm mountain range which really caught Zara's attention. \n\n\"Thanks for bringing me here, Joanna.\" Zara said genuinely, turning to the older woman who was making her way towards her. She'd stayed in similar places before with family or for friends' weddings, such as Morgan's. Befriending the Doctor was turning into one of the best decisions Zara had ever made. \n\n\"What are you looking so fondly reminiscent about?\" Joanna asked suspiciously. \n\nThe colour rose in Zara's cheeks as her girlfriend pushed an errant strand of hair from her face. \"I, eh, was just thinking how, how well-timed Morgan's introduction was,\" she muttered, glancing away from Joanna's gaze. However, the professor's fingers guided Zara's eyes back to hers; the young woman was glad she had because she was gifted with that adoring expression. \n\n\"Yes, she did well,\" Joanna agreed with a sly smile before her hand moved into the young woman's tousled hair. Zara's grip automatically went to Joanna's waist as they pressed their bodies and mouths together in that perfect way. However, where the ferocity would normally build at a rapid pace the embrace was slow, almost sensual. \n\nAs they kissed Zara's hands snuck under Joanna's jumper, the direct contact with her smooth skin causing the young woman's heart to hammer. \"You sure... you are... all right?\" Joanna asked, between passing her tongue into Zara's mouth. Ignoring her aching bruises, the architect confirmed she was as a scraped hand crept down to Joanna's bum. \n\nThe older woman's breath quickened and, as her mouth claimed Zara's, she ground herself into the young woman's thigh. Zara felt her burning need for the professor grow whilst they kissed, Joanna's teeth now tugging at Zara's bottom lip as her hands grasping the girl too firmly. \n\n\"Ahhh,\" Zara grimaced before she could stop herself. \n\n\"Oh, I'm so sorry!\" Joanna apologised, jumping away from Zara momentarily before her fingers tenderly brushed the young woman's scratched temple. \"Sorry, darling. I got carried away.\" \n\n\"Don't worry about it,\" Zara assured, guiding Joanna's hand from the marred skin to resume their exchange. \n\n\"Just hang on,\" Joanna cautioned, smiling in amusement at the young woman's frustrated groan. \"We need to get you cleaned up.\" Zara knew she was right; having spent almost two hours sweating and rolling around a hillside it was a real testament to Joanna that she'd even kissed her. \n\nMoving stiffly to the bathroom, Zara let out a impressed whistle upon flicking on the light. The marble room boasted a deep standalone bath, the brim of which came to the young woman's hip. \"I cannot wait to dive into you,\" she muttered as she secured the plug before pouring a bottle of herb scented bath soak into the now gushing water. \n\n\"You look sore,\" Joanna said, scrutinising Zara when she reappeared moments later. \n\n\"I was being so expertly distracted I hadn't noticed,\" she said, cocking an eyebrow at Joanna before turning her attention to her bag. She popped a couple of painkillers and retrieved her book before letting Joanna know she was going to get in the tub. \n\nAs the bath continued to fill Zara carefully peeled the clothing from her aching body. Having bared her torso, she looked down at her toned stomach; the layers of cotton and Lycra must have been pushed up during the tumble for there was a dirty red scrape running from just below her ribs to her navel. \n\n\"Here we go,\" she muttered, pulling the elastic waist of both the shorts and tracksuit. Even the material gliding down her legs, particularly over her knees, was enough to cause a sharp intake of breath. The runners high really had made her disregard what were several gnarly scrapes; her usually smooth thighs where cut where she'd skidded along the gravel leaving the skin sore, but it was her knees that, as Joanna had pointed out, were a real mess. Propping a foot up on the bath, Zara further inspected the damage; bruises the colour of a stormy sky darkened the lightly tanned flesh and where the rest of her body was lightly scraped, the grazes here were deeper, the blood having crusted in rusty smears around the bony flesh. \n\nThis is going to sting, she thought, now looking at the fragrant bath water with trepidation. Lowering herself into the deep bath, Zara grimaced as the hot water lapped at her throbbing skin. Gritting her teeth she fully submerged her legs along with the rest of her body leaving just head and neck unshrouded by the bubbly warmth. \n\nMeticulously, Zara washed the dirt and blood from her body and it wasn't until she had done so that she reached for her novel. \n\n\"Are you still reading that?\" \n\n\"Jesus!\" Zara jumped, causing water to slop against the porcelain. \"How are you always so quiet?\" she gasped, closing the copy of Fishnet that had very nearly taken a dip of its own. \"And yes, I ended up reading something for work, so this,\" she gestured at the garish cover, \"had to wait. Anyway, what have you been up to?\" \n\n\"Getting this,\" Joanna said, gesturing to the ice bucket as she moved to one of the sinks. Having busied herself for several moments, Joanna turned back to her girlfriend who had now sat up in the steaming water. \"You look better Zara, you were getting rather pale,\" she said sitting on the edge of the bath, her face wearing that same concerned expression which had melted Zara earlier. \n\n\"Really, Joanna,\" Zara sighed, \"I promise, I'm fine; hand on heart,\" she emphasised by placing slender fingers on her chest. The gesture drew Joanna's eyes to the area and Zara relished in the way the professor momentarily lost herself. \n\n\"Well,\" Joanna responded after a moment, dragging her eyes back to Zara's beautiful face, \"if I was in the same state as you, wouldn't you be worried?\" \n\n\"Oh, I'd be out of my mind,\" Zara responded without a second thought. \n\n\"Out of your mind?\" Joanna questioned with intrigue. \n\n\"Well... yes.\" At the albeit reluctant confirmation, she was gifted with that expression which softened Joanna's striking features and emphasised the amber flecks in her eyes. The sight made Zara's stomach flutter and her chest tighten simultaneously. \n\nJoanna eventually tore her eyes from her counterpart's and Zara's centre contracted as she watched the woman's hand and forearm disappear into the murky water between her legs. Although disappointed as the hand did not creep higher, she shuddered as Joanna gripped the underside of her knee, guiding the slender limb from the water. \n\nThe professor's features creased in an empathetic wince as she looked at the bruised flesh; now cleaned, it didn't look so bad, to Zara. However, when Joanna's free hand pressed a facecloth full of ice against the burning wound the young woman couldn't help the pained exclamation which escaped her lips \n\n\"Hand on heart you're fine, hmm?\" Joanna said before giving Zara another sceptical look. \n\n\"Mhmm...\" Zara grimaced, \"fine... look, Joanna, do we really need to do this? It was easing off.\" \n\nJoanna scoffed, \"We should have done this earlier before the swelling started.\" \n\n\"They are not swoll-\" \n\n\"They are bloody swollen, Zara!\" Joanna snapped before sighing, her tight mouth creeping to a sly smirk in the girl's direction. \"Here was me thinking we could expand your horizons yet again. Alas, having you on all fours tonight would just be cruel.\" \n\nEvery inch of young woman's body tightened at the thought and she emitted a throaty noise, \"Not as cruel as mentioning it with no plans to follow through.\" \n\nThe smile on Joanna's lips spread, making her eyes glint wickedly, \"I had plans, darling. It was you who went and got yourself into this mess.\" \n\n\"Look, Joanna,\" Zara replied, more tersely than she intended, \"I'm perfectly fine,\" she gripped either side of the bath to haul herself from its confines. \n\n\"Just stay put,\" Joanna advised in a tone which was not to be reckoned with, her free hand pushing the young woman back down. \"Zara?\" she asked, their eyes meeting, \"Just let me look after you. Please?\" She went to protest but Joanna spoke over the top of her. \"You just said you'd be out of your mind if I was hurt, even if it is just a couple of scrapes,\" the brunette's dark eyes flitted around the marble bathroom as she grudgingly agreed. \"God, and you say I'm a closed book,\" Joanna muttered before speaking more clearly, \"And why would you be so concerned for my welfare?\" \n\nJoanna's now soft patient voice coupled with the searching gaze and gentle caress had Zara's heart pounding and a tightness built in her chest yet again. \"Because I...\" she swallowed, she couldn't be; it was too soon. \"Because I care about you,\" she muttered before affirming the statement with, \"A lot.\" \n\nThe young woman could hear the blood rushing in her ears as Joanna's hand moved to her cheek, caressing it in that most tender way. \"Exactly,\" Joanna purred, her hand creeping to the back of Zara's head, entwining gently in her damp hair, \"Can't the feeling be mutual?\" Then she bent and pressed her lips to Zara's in another slow-paced exchange. \n\n\"Joanna?\" Zara breathed, pulling away from the embrace. \n\n\"Yes?\" \n\n\"I... I need to tell you something,\" Zara could feel a pounding beneath her ribcage as her eyes met the older woman's expectant gaze. \"I... I need to wash my hair...\" she muttered darkly, making some excuse about wanting to get out the bath soon. \n\n\"All right,\" Joanna nodded, but Zara caught a flicker of doubt cloud her flawless visage. \"You're sure you're all right?\" \n\nZara nodded but once the door was closed she submerged herself with a frustrated splash, holding her breath under the water for several moments. Re-emerging, water cascaded from her hair, face and shoulders, Zara felt suddenly overwhelmed; emotions crashed throughout her body and mind as she attempted to quell the overwhelming sensation. \n\nHow can I love her? she pondered bitterly; attacking her long mahogany hair with wonderfully scented shampoo. Until a month ago, the woman terrified her; terrified her in a exquisite fashion, but that was beside the point. Three weeks ago she practically had to pry a sentence from the stoic professor. But now? Okay, she wasn't gregarious, but now, the way she looked at her, kissed her, cared for her; it had all changed. Then again, she was so bloody blunt; should Joanna love her she'd tell her. It would more than likely be in some matter of fact statement, but at least she'd know where she stood. Why hadn't she said it? She took the lead on everything else, so surely she'd do the same in this instance. \n\nIrrational irritation grew within her, particularly when she bumped a knee upon stepping out of the ridiculously deep bath tub. \"Fucker,\" she muttered under her breath as she saw a renewed trickle of blood seep down her shin. \n\n\"Seven o'clock alright for dinner?\" Joanna asked from the other side of the door as Zara dried herself. \n\n\"Eh, yeah, just whenever; I'm not fussed,\" she said adjusting her towel as she stepped back into the bedroom; that pressure building right back up in her chest as she took in Joanna sitting crossed legged by the window. \n\n\"Zara, what is wrong with you?\" Joanna frowned, setting the menu aside. \"And don't give me the 'nothing, I'm fine' bullshit, please.\" \n\n\"I'm just tired,\" she lied, turning her back to Joanna and messing with her bag. \n\n\"You don't seem just tired.\" Joanna scolded, her patience clearly wearing thin. \"What is it? Because I really do think if you bumped your head we should get you to a doctor. I should never have let you talk me-\" \n\n\"I don't have a concussion!\" the young woman snapped, rounding on Joanna who had stood from the Bergere chair, now looking quite taken aback. \"I'm sorry...\" Zara murmured, \"I'm just feeling a little... a little overwhelmed.\" \n\n\"By what? The race? Here?\" Joanna questioned, a blunt edge to her voice. Zara shook her head and sat on the edge of the bed, staring at the plush ivory carpet. She heard Joanna sigh again, as if exhaling her impatience. \"Well, what is it?\" The older woman tried, crouching before the girl and forcing their gaze to meet. Zara tried to shirk from doing so, but Joanna caught her face, gently forcing her gaze. \"What is it? We have all night together and the drive back tomorrow, so holding it in isn't going to make the next sixteen hours very pleasant, is it?\" \n\n\"I suppose not,\" she mumbled. \n\n\"Well, come on, get it over with,\" Joanna said, a hint of trepidation creeping into her voice. \n\n\"It's nothing bad,\" Zara hastened to say. \n\n\"All the more reason to spit it out then.\" \n\nThat made the young woman's lips twitch. She'd never been infatuated, or whatever this was, with anyone, but she was pretty sure spitting such feelings out wasn't the done thing. \"You,\" she took a steadying breath and started again. \"I, no, you, you, no...\" another deep inhale. \"When I said I cared about you, Joanna, I really, really meant it. Like I really care about you.\" \n\n\"Well, I'm glad, but I fail to see why that's got you so upset.\" \n\n\"I'm not upset,\" she muttered, the tremor in her voice discrediting the sentiment. \"Its just, I've never felt like this before.\" \n\n\"Like what?\" \n\nAfter a moment of trying to form the appropriate sentence, Zara began, \"Like, it's stupid things like, if I see you've messaged me, my stomach actually jolts, like I really can feel it,\" she insisted, her hand subconsciously moving to her tummy, \"When I hear your voice for the first time in a wee while my breath, it like catches in my throat. And the way you look at me sometimes, most of the time, it makes my chest ache; a physical ache.\" \n\nZara chanced a glance at Joanna, who's expression was unreadable, \"Anything else?\" She asked quietly. \n\n\"Yes,\" she sniffed, \"When I'm not with you, I don't know, I crave you? Its so annoying, I never get anything done!\" she exclaimed in attempted mirth. \"And terrifying; I've gone from never needing anyone to... to... Jesus, Joanna, I'm actually sad that I'm going to Vietnam, a place I've always wanted to visit, because I'll miss you.\" \n\n\"I'll be here when you get back,\" her girlfriend assured, a hand gripping Zara's thigh. \n\nZara nodded and placed her hand on top of Joanna's, \"I just think about you all the time; it's maddening actually,\" she laughed weakly but anxiety clouded her expression once more. \"But, I don't want anything that I've said misconstrued as something else or if you don't-\" \n\n\"Zara,\" she said calmly, \"as someone who's experienced what you're feeling, would it help if I told you I loved you?\" \n\n\"It would, yes,\" the young woman said thickly. Joanna, who had evidently been in love, validating her feelings made her- Zara's mind froze in comprehension and her chest contracted vigorously as something swelled within her. For an age she replayed Joanna's revelation, the words causing her body to react in all sorts of ways; her eyes burned, hairs on the back of her neck stood on end and she was pretty sure if she were to move her hands they'd tremble. \n\n\"After all that, you're going to leave me in the lurch?\" Joanna questioned. ",
        "\"You love me?\" Zara said hoarsely, as her eyes found Joanna's, the green burning as rich a shade as the young woman had seen. \n\n\"Yes, Zara. I love you,\" Joanna confirmed, smiling up softly at the girl. \n\nThe younger woman's sudden grin could have split her face in two, \"I love you too, Joanna.\" \n\nThe professor exhaled, slender shoulders dropping a fraction as her smile spread to match Zara's. They drank each other in for a silent eternity, as if seeing the other in a whole new light. Eventually, Joanna shifted, rising from her crouching position to straighten just enough to lean into Zara. \n\nThe young woman moved with her, draping her arms over Joanna's shoulders as their lips met. Zara would never tire of being close to her; the way Joanna's soft skin brushed against her as they kissed, that subtle cedar wood essence she had, the way Joanna held her in a firm yet gentle fashion as their bodies slotted together. \n\nJoanna gingerly crawled onto the bed, her knees either side of Zara as they shifted further onto the soft surface. Zara hands cupped her face as their sensual kiss grew in ferocity, causing the pair to moan simultaneously. \"I love you so much, Joanna,\" Zara murmured into the woman's mouth. \n\n\"You sure now?\" Joanna smiled, placing her hands either side of Zara's shoulders. \n\nZara gazed up at her and nodded, smiling broadly as she did so. \"Definitely.\" \n\n\"I don't think I've ever heard you be more incontrovertible,\" Joanna beamed, fingertips lightly brushing through the girl's hair. \n\n\"Because I really do, you make everything make, well, sense,\" Zara said softly, her gaze fixed on Joanna's brightening eyes. \n\nThe older woman took a shuddering breath and glanced away, swallowing hard as she did so. Looking back at Zara, she went to speak but swallowed the sentiment, causing a moment of fleeting worry within the young woman. \"You could say something?\" Zara suggested uncertainly. Joanna did not, she merely nodded, an uncharacteristically weak expression on her face before smothering Zara's mouth in a kiss so firm her head was pushed back into the mattress. \n\n\"I really do,\" Joanna eventually managed thickly as her mouth trailed down the architect's. \"I really do love you, Zara.\" The revelation and Joanna's warm breath caused a shudder to reverberate through the young woman's body. \"I love the way your mind works,\" Joanna murmured between kisses, \"And how you see things differently from anyone I've ever met.\" Joanna's mouth continued roaming down Zara's throat as she spoke. \"I love how different you are to me. You're unique.\" \n\n\"I love what you do to me,\" Zara breathed as they both tugged at the towel she was encased in. \n\nJoanna, careful not to brush against the girl's sore skin, manoeuvred herself and Zara watched her lover sit up slightly to drink in the young woman's naked body. Joanna considered her with that lust-filled stare; eyes roaming over her torso, taking in her modest chest, protruding collarbones and scraped stomach. \n\n\"What I do to you?\" Joanna breathed, her eyes still fixed on Zara's body as she moved a knee between the girl's thighs. \"You have no idea what you do to me,\" she purred before pressing her lips to the young woman's and pushing her thigh into her centre, causing Zara to moan. \n\nZara's hands moved to peel Joanna's polo-neck over her head. The garment had barely hit the floor before the hook of her bra was unfastened; delicate material slipping down Joanna's body before joining the sweater. Joanna groaned as Zara's hands instantly took the place of the material, gently groping her, before both thumbs circled her hardening nipples. \n\n\"You're so good,\" Joanna breathed, her hips rocking to press her denim clad sex into the top of Zara's thigh. Instinctively, the brunette returned the action, pushing her wetness into Joanna's jeans as she did so. \n\n\"Lie on me,\" Zara begged, yearning for Joanna's body to press into her. \n\n\"I don't want to hurt you,\" Joanna murmured into Zara's mouth. \n\n\"You won't,\" Zara assured, hands moving from Joanna's breasts and onto her back, encouraging the woman. \n\nWith Joanna's hands free, dexterous fingers crept between their bodies to toy with Zara's chest, causing the young woman to jolt and proceed to whine as that firm touch moved from the soft flesh to her nipples. \n\n\"I love your body,\" Joanna gasped, breaking her mouth from Zara's to descend that ever familiar path of the girl's jawline, neck and collar bone. \"I love how strong you are,\" she breathed as she ran her lips over the young woman's defined shoulders before her tongue lazily trailed down Zara's biceps. \n\n\"Oh God,\" Zara gasped. Every touch, grasp, lick, word, anything Joanna did, caused an electric current to resonate through her. She should feel sore, tired, famished, after the day's efforts, but her craving for Joanna outshone all other needs; the professor consumed so much of her that there was little room for any other thoughts and feelings. \"Please, don't stop,\" Zara panted, entwining slender fingers in Joanna's short hair as her mouth claimed one of the young woman's nipples; that expert tongue swirling over the hard skin, intensifying the sensation. \"Yes!\" Zara whined, pushing herself into the woman's mouth. \n\nBy the time Joanna had kissed her way over to the left and bestowed the same maddening pleasure on her other breast, Zara was desperate. \"Please, Joanna,\" she panted, her hands running uncoordinated in Joanna's hair and over her shoulders. \n\n\"Please what, darling?\" Joanna asked, yet didn't wait for a response as she trailed her mouth down Zara's trim torso, her nose gently brushing down the young woman's ribcage. \"Oh, baby,\" Joanna sympathised as she descended further, her lips connecting with the burning scrapes on Zara's stomach. \n\nThe young woman's tummy fluttered at the press of Joanna's lips as, despite the injury, all she felt was a loving, pleasurable touch. \"Oh God,\" she groaned, feeling Joanna's fingers move to her inner thigh before ascending, at a slow, agonising pace, to caress her lips. \"Will you ever not tease me?\" she moaned, rocking her hips against the digits. \n\nJoanna sat up, now kneeling between Zara's legs, and looked down on the wanton woman, \"It's all about-\" \n\n\"Anticipation,\" Zara finished, a lustful smirk flitting across her face as she drank Joanna in; her bare torso contrasting wonderfully with her dark denim jeans. \"I don't love you when you tease me,\" she shuddered, as Joanna's fingers maintained their torturous explorations. \n\n\"Oh, come on now, Zara. I think that's the main reason you love me,\" she smirked, her fingers lowering to the young woman's entrance. \n\n\"You're probably right,\" Zara managed hoarsely as she felt two fingers creep into her wetness. \n\n\"I usually am,\" Joanna smirked, tearing her eyes from Zara's and watching as her fingers disappear. \"Oh baby, you're so wet.\" A shiver ran through Zara who could merely nod as she continued to watch Joanna kneeling between her legs, one hand on the flair of her hip, the other working back and forth as the professor began to fuck her. \n\nZara was soon panting and writhing under Joanna's manipulations and she jolted vigorously as the blonde's thumb swept over her clit, but she craved something else. Craved a closeness to the woman and with every ounce of willpower, Zara's hand snuck down her body to quell Joanna's efforts. \n\n\"What's wrong?\" Joanna frowned, concern flashing across her face as Zara sat up, pressing their torsos together in a delicious friction. \n\n\"Nothing,\" Zara assured, before kissing Joanna hard on the mouth. Her hands squeezing between their bodies to unfasten Joanna's jeans. \n\n\"We'll get to me,\" Joanna promised but Zara shook her head and undid the woman's trousers before pulling her back down onto the bed. \n\nZara winced as Joanna fell onto her sore body but continued to take control, turning herself and the older woman so they were on their sides, facing one another. \n\n\"Eh, Zara,\" Joanna breathed, pulling her mouth from her girlfriend's, regarding her quizzically. \"What do you think you're doing?\" \n\nThe young woman smirked, pulling at Joanna's jeans, \"What do you mean?\" \n\n\"You know perfectly well what I mean,\" Joanna said incredulously, her hand entwining with the young woman's hair, bringing their faces back together. \"I'm in control,\" she warned in a low tone. \n\nBut Zara shook her head, her mouth claiming Joanna's as she continued to fight with the denim. \"Just lose yourself, Joanna,\" she whispered, her hand creeping into the woman's underwear. \"Let go,\" she coaxed before flicking her tongue over the woman's lips whilst nimble fingers crept to Joanna's entrance. \n\n\"I don't let go,\" the professor breathed heavily before sucking her assailant's bottom lip. However, the verbal protest was all the fight she put up as Zara's finger tips brushed against Joanna's clit in the gentlest of touches, her other arm curling around her slender shoulders, pulling the pair together. \n\nZara's arousal hiked, both at taking the slightest command and at just how wet Joanna was. The young woman's fingers slid over the silky skin, savouring just how wanton she had made her girlfriend. Their tongues moved slowly over one another and Zara's stomach jolted as she felt Joanna's hand creep between them and descend down her tummy. Shifting her legs, she opened herself to the woman who matched the pace and technique Zara had established. \n\nThey moaned into one another's mouths, bodies shuddering periodically under simultaneous manipulations. \"I'm close,\" Zara eventually panted, burying her face in the crook of the woman's neck as her fingers increased their vigorous movements. \n\n\"Me too,\" Joanna gasped in Zara's ear before pulling the girl's hair, gently encouraging their gaze to meet. \"I love you, Zara. So much.\" Her voice shook as the tremors started to build within her body. \n\nZara's dark eye's drank in Joanna in an attempt to absorb every detail of her; the furrow of her brow as the tension grew, her deep green eyes burning with something more than just lust and the way her lips moved when she told the young woman she loved her. \n\nThat impossible pressure built within Zara and in that moment words caught in her throat and she could merely nod before resting her forehead on Joanna's as she gasped. \"I... I... Oh God.\" Whilst her legs began to shake as her sex convulsed. \n\n\"Jesus! Yes!\" Joanna groaned as Zara's own fingers intensified their circling motion, causing the woman to emit a guttural groan which the girl quickly quelled with a hard kiss. \n\nThey clung to one another, tumbling from the proverbial cliff in a heart-swelling, stomach jolting climax. The orgasm enhanced by the intimacy and closeness of the embrace as the couple remained locked together, fingers firmly pressed into one another until the tremors had ceased. \n\nCarefully, Zara extracted her digits from between Joanna's wet thighs and, still breathing heavily, draped an arm over the woman. In the close embrace she nuzzled into the crook of Joanna's neck and they held one another in contented silence. \n\n\"Have you ever done that before?\" Zara asked drowsily after a while. \n\n\"Hmm?\" Joanna murmured, turning so her cheek brushed against Zara's as she ran her fingers through the girl's tousled hair. \"Done what?\" \n\n\"Not being in total command of the situation,\" Zara replied, brushing her nose against Joanna's neck before kissing the soft skin. \n\nDespite their sleepy tones, Zara was sure Joanna's mind was formulating an answer to the seemingly simple query; evidently the question was being meticulously contemplated for Joanna stayed silent for so long that the young woman supposed she was avoiding it. \n\n\"Not for a long time,\" Joanna eventually murmured, in a tone which bordered upon the unsure. \n\nRemaining pressed up against Joanna's body, Zara laced her fingers lovingly into those of her companion's as her mind whirred. What made the stoic blonde crave control to the point she questioned someone she loved doing something as simple as rolling her on to her side? The dominance was arousing and the young woman relished every smack, nip and pinch she received for stepping over Joanna's unyielding line. However, Zara knew it was more than a game, more than an act. This compulsion for control, in Zara's opinion, wasn't what anyone really wanted, surely? She'd said it herself, she loved the young woman, in part because they were so different. Should Zara not at least attempt to impart even the slightest portion of this repose upon Joanna? \n\nGoing to speak, the young woman took a breath, but quelled the question, Why do you need control? at risk of pushing too hard. Instead, Zara intuitively asked, \"What was it like, not being in control?\" \n\nAfter a long slow sigh, Joanna responded. \"Alien. Odd. Like I was betraying myself,\" the professor paused again and Zara could feel her body tense but as much as she wanted to fill the silence, she stayed quiet. Although it pained to hear that their coupling had felt odd, Zara did not completely buy it, for no one could deny both women had enjoyed the situation. \"Then again,\" Joanna reasoned, lifting Zara's heart and causing her to smile against the older woman's neck. \"I'm with you, Zara. You, with your devil-may-care gregariousness, this presence that seems to make me want to-\" Joanna pulled up before continuing in a softer tone, \"You just made it feel natural. I just, for once, didn't need it, the control. I just didn't.\" \n\nDisentangling from Joanna, the young woman propped herself up on an elbow and gazed at the blonde, and as much as she wanted to kiss, caress and hold the almost vulnerable figure, Zara grappled the urge and spoke with gentle conviction. \"You don't always need to be in control. I mean I love it,\" she sighed, fighting the shudder at the mere idea, \"but I love you more. You can trust me, trust me enough to let your guard down, even just a little.\" \n\n\"I realise that, Zara and I love you it. Its jus-\" Joanna said quickly before she was interrupted. \n\n\"I don't think you do realise it though,\" Zara said gently, a crease forming on her brow. \"Whatever has made you so... disciplined...\" For a fleeting moment her lips betrayed her and twitched at the connotation. \"Just know,\" she continued, \"I don't want you to ever feel like you need to be like that. Not with me,\" Joanna made a reluctant, noncommittal noise as she tried to form the appropriate response but Zara pressed on. \"Please, Joanna, I want you, if its what you want, to be relax with me,\" she urged, her dark eyes unintentionally adding to the her plea. \n\n\"I think...\" Joanna began slowly, having absorbed the young woman's supplication, \"I think the fact we are even having this conversation shows that in terms of everything else in my life, when it comes to you, Zara, I do act differently. I was serious when I said I find you unique, beautifully so.\" she said, cupping the girl's cheek to reinforce the sentiment. \n\n\"Does that mean you'll ease off on how together you feel you need to be?\" \n\n\"Do you feel I control you?\" Joanna asked sharply, her countenance changing. \n\n\"No,\" Zara said simply. \n\n\"Well then, Zara, I fail to see your issue.\" \n\n\"You used the word need a moment ago,\" Zara stated plainly. \n\n\"Excuse me?\" Joanna chided, that harsh facade re-solidifying. \n\n\"You said, 'you just didn't need it, the control',\" Zara repeated, her body language and tone trying to coax Joanna from slipping behind that apathetic barrier. \"That's not the same as wanting something, Joanna. Needing is an obligation, it's-\" \n\n\"I know the difference,\" Joanna sighed before continuing to speak over whatever Zara was about to say. \"All right. Fine,\" she conceded reluctantly, \"Maybe I have got into a habit of having things done my way. But I like it, most of the time.\" \n\n\"Not all the time though?\" Zara tried. \n\n\"How about, for you, I relinquish somewhat?\" Joanna suggested, avoiding the previous question. \"Say, when I feel it would be more beneficial to compromise, I do so?\" \n\nIt wasn't quite what the young woman was going for, but she suspected the effort was quite the settlement for Joanna. \"I think that would be a good start,\" Zara nodded before Joanna quelled the motion with a press of her lips. \n\n\"I just want you to be happy, Zara,\" Joanna murmured against the young woman's mouth. \n\n\"You make me so happy,\" she replied, \"I don't think being too unyielding can make you happy.\" \n\n\"Perhaps not,\" Joanna sighed, resting her forehead on Zara's before withdrawing slightly to look at the young woman. \"That said, there are plenty of instances you'd like me to maintain my control, no?\" \n\n\"How magnanimous of you,\" Zara responded sarcastically, rolling her dark eyes at the notion. The pair looked at each other for a long moment. \n\n\"Seriously though,\" Zara added, her fingers caressing the woman's soft skin, \"let me in. Please?\" \n\nJoanna smiled softly and nodded, \"I will. I promise.\" \n\nEpilogue \n\n\"That was such a great weekend, Joanna, thank you.\" Zara smiled, turning to her lover once she'd retrieved her holdall from the car. \n\n\"It really was,\" Joanna purred, before leaning into the young woman and kissing her in what, given they were in public, was intended to be a soft brush of lips. However, Zara's free hand promptly gripped the back of her neck, pulling her into an eager exchange. \n\nWith every ounce of resolve Joanna fought the urge to push the svelte architect up against the car. However, as much as the professor claimed to be, she was not made of stone and when Zara's tongue rolled across hers, Joanna couldn't help but mimic the action before sucking on Zara's bottom lip, causing the girl to moan in that arousing, needy tone she enjoyed. Christ, what am I doing? As if I haven't had her at every opportunity over the weekend. I don't do this! I don't not stand in the street necking some woman nearly half her age. Yet, the sound of that throaty noise her girlfriend made pushed the internal conflict aside and Joanna couldn't stop her hands from creeping around Zara's waist, pulling their bodies firmly together. \n\nA sharp wolf-whistle shrieked from across the street, causing the two women to spring apart before Joanna glared and Zara smirked at the men who were now guffawing as continuing their walk down the road. \n\nTurning back to the brunette, Joanna's sullen expression was washed from her face; Zara had fallen into a fit of unrestrained laughter, the type which really lit up her striking face. The sight caused both mirth and awe to swell within Joanna and she could feel her lips tug into an uncontrollably broad smile. \n\n\"I'm sorry,\" Zara managed, before erupting in another fit of of giggles. \n\n\"You!\" Joanna laughed again at the young woman's outburst. \"You're more trouble than you're worth,\" she teased. \n\n\"You don't mean that,\" Zara retorted confidently. \n\n\"No?\" she challenged. \n\n\"No,\" the young woman beamed in that open, mischievous expression which caused Joanna's chest to tighten. \n\n\"Perhaps not,\" she mused before reluctantly adding, \"You'd better get in, you'll freeze.\" And Joanna felt bitter, irrational disappointment when the young woman complied. \n\nZara had asked her to stay for dinner upon their return to Edinburgh but Joanna had politely declined. Now, however, she felt a pang of anger at herself for doing so; the young woman would leave for Vietnam soon and as much as the professor did not care to admit it, she wanted to soak up as much time with Zara as possible. \n\n\"I'll see you before I go though?\" the brunette asked earnestly as she walked with Joanna to the driver's side door. \n\n\"Of course,\" Joanna assured, gripping the young woman gently. \"In fact,\" she said, her eyes lighting up with inspiration, \"I'll try and get some cover and take you to the airport.\" ",
        "\"Oh, eh, well...\" Zara stuttered awkwardly, her dark eyes dropping from Joanna's gaze. \"My, eh, my parents are going to come through the night before; we'll have some dinner, they'll stay here and drop me off in the morning.\" Zara explained in a quiet, apologetic tone, \"I'm sorry, its jus-\" \n\n\"I see,\" Joanna interrupted in a disappointed tone, uncharacteristically losing the ability to mask her feelings. \n\n\"I'm really sorry, Joanna,\" Zara said quickly before continuing her explanation in the same fast pace. \"I'd love you to come, really, its just they don't know about us and its not that they'll mind, its just I've never told them abou-\" \n\n\"Zara,\" the professor said calmly, regaining her cool as her slender hands cupped the young woman's reddening face, \"I understand.\" It wasn't a lie; she could appreciate that families banded together at even the simplest things such as a holiday. The concept was just rather... foreign? \"You do whatever feels right. We'll see each other during the week, all right?\" \n\n\"I could call and tell them you'll be-\" \n\n\"No!\" Joanna snapped, causing Zara to flinch. What was it about this maddening woman which had her unable to control her emotions? \"Sorry, I didn't mean it like that, Zara. I just don't want you telling them over the phone; its never a good idea,\" she continued smoothly, covering her tracks. \"Trust me,\" why should she? \"don't worry about saying anything, honestly.\" \n\n\"I want to tell them though,\" Zara pressed, the potential gravity of doing so hitting her for the first time. \"I'd like you to, you know, meet them at some point.\" \n\n\"There's no rush,\" Joanna shrugged, selfishly brushing off the gesture. \n\n\"If you're sure?\" the young woman said uncertainly, \"But we'll see each other before I go? Because, I'm really going to miss you.\" \n\n\"I know. I'll miss you too, darling,\" Joanna sighed, before kissing the young woman's forehead. \"Having said that,\" she smirked, opening the car door, \"you'll be having way too much fun to think about me.\" \n\nThe young woman granted Joanna an almost hurt, unconvinced look which tugged at the woman's heart. \"I love you, Jo.\" \n\n\"Jo?\" Joanna scoffed. \n\n\"Part of your relinquishing. You know, its less formal.\" Zara shrugged, a cocky smile now tugging at her lips. \"Plus, I like it.\" \n\n\"Well, if you like it, who am I to argue?\" Joanna smirked, the smile growing to split her face as the young woman bestowed another giddy expression upon her. \"I love you, Zara.\" \n\nHaving watched the young woman safely enter her home Joanna pressed the ignition, bringing the vehicle to life. \"What are you playing at?\" she muttered to herself as she sped down the quiet street."
    ],
    "authorname": "Camera Obscura",
    "tags": [
        "lesbian",
        "lesbian love",
        "romantic",
        "lesbian erotica",
        "fisting",
        "lesbian fisting",
        "scotland",
        "lesbian bdsm",
        "lesbian romance",
        "lesbian d/s"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/blueprints-ch-04"
}