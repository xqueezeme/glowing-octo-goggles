{
    "title": "Glory Beyond the Hole",
    "pages": [
        "Chapter 1: Pressure Valve\n\n\"Hey uh, Rose,\" a voice said from behind me. I swiveled my chair so that I was facing out of my cubicle. I had my no-nonsense face on and I raised my eyebrows as if to ask, \"what?\" I didn't recognize the person standing in front of me. I guess that wasn't much of a surprise, I worked at a place with a good deal of turnover and it wasn't unusual to see new and unpleasant faces. This particular face belonged to a man slightly younger than me, maybe 22. He had that shit-eating grin that all college graduates had when they first started working here, despite the fact that he was working entry-level in data-entry and was carrying about thirty extra pounds, mostly in his ass. \n\nDespite my best efforts to non-verbally encourage him to say whatever he was going to say, he just looked at me blankly. He briefly looked over his shoulder at a group of my co-workers. I looked down at my watch and saw that it was 5:15 on a Friday afternoon, so I knew what this was going to be about. I crossed my arms in front of my breasts and placed my hands on my knees.\n\n\"Yes new guy, how can I help you,\" I said brusquely. \n\n\"Oh, uh,\" he said. I saw his eyes move over my legs and then to my cleavage and I rolled my eyes. You'd think the company-mandated sexual harassment prevention video would be enough to keep a guy on his toes, but I often found the mouth-breathers in the office had a hard time keeping their eyes to themselves. But men had always looked at me, I suppose. At the time I was 26 years old and at the absolute peak of my bewitching (but cursed) powers. I was 5'3 and around 110lbs. I had very long brown, almost black, hair that I wore straight with short bangs. I had (and have) large dark brown eyes and a small nose. My lips were pouty and a deep red color. My skin was flawless, if a bit pale, and I had a long, delicate neck. My breasts were small, probably 32-B at the time, but they were very perky and fit my slight built. My hips flared slightly wider than my breasts and I had somewhat short and delicately constructed legs. That day I was wearing a white button-up blouse under a gray suit coat and a knee-length gray skirt that had bunch up a little as I'd sat in my chair all day. So I knew what the guy was looking at, even if I didn't appreciate it.\n\n\"Oh, uh?\" I said after letting him sputter for just a couple of seconds.\n\n\"So,\" he said, looking a bit embarrassed and jumping right in, \"A couple of us are going out for happy hour, you know, since it's Friday. And I just thought, I'd, you know, ask if you wanted to go out with us. I think we are going to Winston's but someone said something about Carter's...\" I lifted up my hand to stop him from speaking.\n\nI hated this. I had no desire to do what I was going to do next. But, it was what I had to do. They forced me into this shit, so this was what was going to happen.\n\n\"Listen...\" I said and looked at the guy inquisitively.\n\n\"Dan,\" he said. \n\n\"Listen Dan, you are new here I assume. So I am going to make this as painless as possible,\" a lie, \"If you and I and all of our friends here went out for dinner together we would have a great time. You all would get to know me: the sexy ice queen of the office. But what do I get out of it?\"\n\n\"I...uh,\" Dan started.\n\n\"Quiet Dan, a grown-up is talking. You see, you'd get to know me. But I wouldn't get anything, because I already know you. I knew you the instant you interrupted me from closing down my computer so I could go home. I looked up at saw an overweight man-child with tit-magnets in his eyes. But I saw more than that. I saw that you don't know that you can't wear black shoes with a brown belt. I saw that you put your clothes on for the day before you brush your teeth and then don't check to see if you drool all over yourself. I saw that you don't shave the corners of your mouth, giving you strange little whiskers. And I saw that you are an idiot, like most of the people who work here. I don't need a night out drinking while you awkwardly attempt to hit on me; I've already figured you out. You're a buffoon. I don't want to have a conversation with you about your favorite TV show, your favorite video game, your favorite fishing hole, or your favorite sexual position. Every instant I talk to you or one of the other morons who works here is an instant I don't get to do something better. So please, thank the people who put you up to this for making both of us feel shitty, and then kindly don't speak to me again,\" I said. \n\nA look of complete shock was plastered across Dan's face. He'd been relatively polite and felt he'd gotten put through the ringer for no reason. My stomach turned a little, because whatever wounded feeling he had was absolutely correct. I had gone over the line. But I had to. Suddenly, his features twisted into a scowl.\n\n\"Fuck you, you frigid...cunt!\" he spat at me, closing the circle. Then he turned around and walked into the waiting (and giggling) crowd standing at the door. It spun my chair back around to face my computer.\n\n\"Sorry to do that to you man, it is kind of a tradition,\" I heard another entry employee say, \"Rose is a fucking trip, so we unleash her on the uninitiated.\"\n\n\"I was just trying to be nice,\" I heard Dan say as they walked out the door.\n\n\"She might look good, but she is poison,\" another voice added.\n\n\"Some people are incapable of being decent,\" a woman's voice responded, \"Rose just wants to keep all of us out, she thinks she is better than everyone else.\" Then I heard them all pile into the elevators and soon I was alone in the office.\n\nThe girl who'd spoken last, Carol I think her name was, was only half right. I absolutely did not think I was better than anyone else, in fact, it was the opposite. But I certainly did have an almost obsessive desire to keep people out. I'd built a wall completely around my life and there was absolutely no way I was going to let anyone in. It was just... too dangerous.\n\nAs I turned off my computer and stood up from my chair, I thought about how I hadn't always been that way. In fact, I imagine my co-workers would have been very surprised to find that I was an absolute social butterfly in high school. I was class president, I joined clubs, and I was even voted homecoming queen my junior year. I hadn't figured out how important it was to be a raging bitch until after college.\n\nIt had actually started in college, my \"difficult\" personality. I'd gone to college as a virgin (trust me, this isn't completely out of left field, it will make sense). I wasn't a prude or anything. I'd done the normal teenage stuff, maybe a little less than most but not by a huge margin. I'd given a couple of guys handjobs in the backseats of cars or in basement rumpus rooms and I'd been felt up, but I'd never had sex. Part of it was that I wanted to wait for the freedom of college, away from the prying eyes of parents. The other reason, I suppose the bigger reason, though I didn't think of it much back then, was that I was (and am) transgendered.\n\nThat might not seem like a little detail to tuck into the end of a paragraph, but I swear, up until college it always seemed so...unimportant. I'd known I was a girl from the instant that the concept was possible in my mind. I just never considered myself anything else. My parents were very supportive and started me on hormone therapy at the youngest possible age. I developed just like all the other girls in my class: breasts, flared hips, delicate features, the whole nine yards. The only thing different was a small amount of flesh between my legs. And that never came up. Like I said, I had no interest in having sex before college, so I never had reason to expose anything beyond my breasts to my boyfriends. High school girls, little known fact, don't spend a whole lot of time discussing their genitals with one another. So, after 18 years of just being myself I went to college expecting that I guess got my first lesson regarding the grave consequences of my ignorance very early in my college career. It had been about two weeks into freshman year. I was living in the dorms at the time. It was a co-ed dorm, with alternating floors of boys and girls. I lived on the girl floor and never thought there was anything strange about it. There was a boy who lived on the floor below me. A cute boy who made me laugh every time we spoke. We had an intro to economics class together and we sat in the back of the room and he did impressions of the professor. One day he asked if I wanted to go out, so I said yes.\n\nI remember the date vividly. It was the high water mark of my social life; it was all downhill from there. Neither of us had a car, so we walked to a restaurant on campus and he bought my dinner. We didn't know each other too well so we talked about our families and he made jokes about the wait staff. Then we took a bus to a movie and made out the entire time. I don't even remember what it was. We held hands the whole way back on the bus.\n\nWe lived in the same building so it wasn't like I invited Dave (that was his name) up, we just happened to be on the elevator together. But when I got off at my floor, he followed me. I remember that I was excited. I wanted this to happen, I hadn't been saving myself for marriage, I was saving myself for college. And this was it. And he was cute and nice and we seemed good together. You might think I am crazy for saying this, but I wasn't even thinking about my \"unique\" gender situation at the time. I guess I just didn't think it would be an issue. We walked into my room and my roommate was gone (out with her boyfriend if I remember). And we started kissing and touching.\n\nWe were both overeager 18 year-old kids and it was only a couple of minutes before he was sitting on my bed in his boxers, his erection straining against the fabric. I was topless, enjoying the feeling of his hands on my bare breasts. I moaned and threw my head back. I wasn't looking as his hand slithered its way up my legs and I didn't notice as his knuckles pressed under the hem of my skirt. I barely felt it as his fingers slipped inside of my panties. But, I heard him.\n\n\"What the fuck?\" I he said. I stopped kissing his neck and looked down. My skirt was hiked up and my hard cock was pulled out from within my panties. For a second my cock rested on Dave's hand. He was looking down at it and then suddenly his hand spasmed like he was electrocuted and he dropped it. He even wiped his hands off on his jeans.\n\n\"What?\" I said, a little confused. I was quite worked up at the moment, my cheeks were flushed and I was so incredibly horny. I didn't know what to think, I just wanted to finally have sex.\n\n\"What the hell are you?\" He asked and he flipped my skirt back down and covered my exposed cock. He looked at me hurt and confused.\n\n\"What do you mean?\" I asked, pushing my knees together and feeling embarrassed.\n\n\"Rose, you have a...dick!\" Dave said. He quickly stood up from the bed and started to pace around the room.\n\n\"Yeah, but...\" I started. For a moment I wondered why this was such an issue. He thought I was pretty, he told me as much. I'd seen he had an erection, so he thought I was sexually attractive. Why was he going to let something silly, something I barely thought about, get us out of the mood.\n\n\"Yeah, but!\" he yelled back, \"That is more than just a little thing. You are a dude!\" he said. I felt like I'd been smacked.\n\n\"I am not, I am a girl. You can see with your eyes. You touched my breasts, you've kissed my lips!\" I yelled back.\n\n\"Shut up, you're making it worse!\" he shouted. Then he looked around, I guess wondering if anyone else on the floor heard him. \"You said you like me.\"\n\n\"I like girls, I don't like...cock!\" he said.\n\n\"I am what I am, you liked me. I am more than a cock. I don't understand.\"\n\n\"I thought I liked you,\" he said, suddenly stopping his pacing. He turned and looked at me, disgust on his face. \"But that was before I knew what you were. You're...repulsive.\" He said. I didn't even have time to register what he said, the tears started coming before I fully comprehended what he said. I suddenly felt stupid and na\u00efve. On top of feeling ugly and inhuman. I couldn't ever remember crying that hard in my life. Something inside of me had shattered. \n\nI felt Dave's hand on my shoulder. I remember thinking that I couldn't ever be attracted to him again, but at least he could apologize for the hurt he caused. I would learn that I expected too much. I looked up. His brow was furrowed.\n\n\"Listen,\" he said, \"I don't want anyone to know about this any more than you do. I will keep your secret so don't worry about that. I just...don't talk to me anymore okay. If anyone asks, we will both just say we aren't compatible and we had a fight and we don't want to talk about it. Okay?\" Secret? I thought, what secret? I'd never intended to keep a secret.\n\n\"I don't know what you are talking about.\"\n\n\"Don't be a dick, let's just pretend this never happened,\" he said. He looked at me pleadingly. I suddenly realized what was happening. He was afraid of people thinking he was gay. Because I had a dick. It didn't matter that everyone thought I was a pretty girl or that he thought I was fun. If people knew who I really was, that would be social disaster. I felt worse than before.\n\n\"Yeah, whatever,\" I said, \"I don't ever want to think about tonight again either.\" So much for that I guess. Dave released my shoulder and walked to the door. He turned and looked at me once, shook his head and walked out. That image is ingrained in my mind, the shame and disappointment I arouse in others, eloquently stated with a shake of the head and a hasty retreat.\n\nIt was about a year after my experience with Dave before I was able to get over the shock. He'd really scared me. Suddenly, the bubbling self-confidence of a high school homecoming queen was shaken and I didn't know what to think. I spent a lot of time thinking about what made me a girl and what made me different. I wondered if I truly was repulsive or if, maybe, it was just Dave. The fear that I was actually disgusting held me back. Guys still asked me out, quite often actually, but I rejected them. I still wanted sex though. I was so incredibly horny all the time, but I could never let that get the better of me.\n\nThen something changed. At the start of my second semester sophomore year, I was taking a psychology course. The professor was talking about sexuality (what else is a psychology course good for?), and she was explaining that in American culture, women in the late 20th and early 21st century were given more freedom to explore their homoerotic urges. Simply put, culture granted an indulgence to allow girls to \"experiment\" with girls in a way that was wholly inappropriate for boys. It was a simple, somewhat obvious observation, but it suddenly electrified my thinking. If Dave's problem was a little bit of homophobia then that would be common for men, but girls would be different. I'd always considered myself bisexual, but in high school (and in the first two weeks of college), I'd only dealt with boys. It was just easier that way. But in college, a lesbian relationship couldn't be too hard to find, it would be easier than at any other time in my life. I stopped looking inward, and started looking at the beautiful women around me. Dormant attraction burst out of me and suddenly I was seeing the sexual potential of all the women on campus.\n\nEventually, that sexual energy found a (seemingly) willing opposite. Her name was Rita and I met her when we both worked at a bar and grill near campus as waitresses. She was a cute little red-headed girl who didn't take shit from the customers and pretty much taught me everything I knew about waitressing. Sometimes after our shifts we'd stay at the bar and have a drink before we went home. During one of those evenings, we were talking about the cheerleaders we saw on the television and she confessed that she was a lesbian but asked that I not tell anyone. I agreed. \n\nThat was about three months before the psych lecture. I kept her secret for those three months and didn't think about it, I was too wrapped up in my own stuff. But that evening, I went to work and afterwards I asked if she wanted to get a drink. She agreed and I suggested that we get a booth. I didn't want to make the same mistake as I had with Dave, I would be up front. \n\n\"So Rita,\" I said as she took a sip of beer and looked at the television screen. I didn't say anything else.\n\n\"Yeah what?\" she asked, running her hand through her long, beautiful hair.\n\n\"Do you remember what we talked about a few months ago?\" I asked in the most circumspect manner possible. Rita laughed.\n\n\"I am going to be honest with you Rose, I have been told that I hardly ever shut up. So you are going to have to be a little more specific,\" she said and then took another sip of beer.\n\n\"About...sexual preference...\" I said in a very low voice. She quickly set down her beer and looked at me. Her eyes narrowed a bit, she was a bit nervous.\n\n\"What about it?\" she asked. I hadn't wanted her to feel strange, I knew how that felt. To be made to feel unworthy because of who you are, so I spoke again quickly.\n\n\"I was just wondering, well...Would you like to, I don't know...get dinner sometime instead of just drinks,\" I said. I hoped that I wasn't being too coy about it. Rita gave me a long look for a moment, and then set down her beer. For a second I thought she was actually going to be mad at me, but then a broad grin broke out on her face.\n\n\"Rose Malloy, you quiet little bitch!\" she said and she took another drink of beer, \"I can't believe you hid this from me all this time. I never for a second thought you were interested in me. I floated that out there like four months ago and you just nodded.\"\n\n\"You were hitting on me?\" I asked, incredulously.\n\n\"Did I pout when I spoke? Did I press my breasts together when I discussed it with you?\" she asked and then she laughed.\n\n\"I don't know!\" I started.\n\n\"Well I thought that maybe there was some attraction there, but then you totally didn't bite. I figured you didn't like me. But of course we can go out, I wanted to go out with you months ago. I just didn't know you were a lesbian.\" She said and I felt my chest tighten a bit. Dave, and all the self-doubt that came after Dave, taught me that this wasn't so easy. And Rita gave me the perfect opening.\n\n\"Well, I don't know if you can call me a lesbian,\" I started.\n\n\"Bi, whatever. The point is, you like girls,\" she said, \"where do you want to go?\"\n\n\"No not that,\" I said, although that was the case, \"I mean, some people won't consider me a lesbian at all.\"\n\n\"Why, are you virgin?\" she asked brusquely. It was that bold sort of talk that I liked about her and made gave me the strength to keep talking. I realized that I had to stop beating around the bush. I leaned forward and whispered in Rita's ear.\n\n\"I was born genetically a male. I have a penis. But I have always been, and have always lived as a girl. And I really like you,\" I said. Then I leaned back. \n\nI couldn't believe I'd actually said it. My heart was fluttering and I could barely keep my head up. I looked across the table at Rita. For a long while she just stared at me with a blank look on her face. I couldn't read it and the tension inside of me grew stronger and stronger. Finally she laughed once.\n\n\"Okay,\" she said, \"Good joke. So I guess you don't want to go out either. You were just fucking with me.\" She said. I gulped deeply and shook my head imperceptibly.\n\n\"No, I do.\" I said, my voice sounding weak. She looked at me again.\n\n\"You aren't joking,\" she said after another long pause. It wasn't a question. She snorted some air out of her nose and shook her head. I gulped down air like a fish out of water.\n\n\"I just want you to know the truth,\" I said, \"so where do you want to go out?\" I asked, hopeful, just trying to push past this. She snorted again and shook her head.",
        "\"Hey listen, as a lesbian I am as open as the next person is about LGBTQ stuff. I have no problems with transgendered girls. But I told you, I am lesbian. I like women.\"\n\n\"I am a woman,\" I said, but already my head was swimming.\n\n\"No. You're a man who wants to pretend you're a woman,\" she said and the tears came again. \"You know I am a woman, how can you say that?\" I asked. I had thought that a woman, especially my friend, a lesbian, would understand where I was coming from. But she didn't. If she couldn't accept me, then who could? Dave was right, I was absolutely repulsive.\n\n\"Listen, that was meaner than I meant it to be. We are still friends. And I am not going to say anything to anyone,\" she explained. Good, another reluctant secret keeper, \"But that is all. I am sorry.\" She said. Not sorry for her behavior or lack of compassion. Sorry I had a dick. I got up quickly from the table.\n\n\"Omar,\" I said, barely able to make my voice heard. The owner/bartender looked over at me, \"I quit.\" I said. And I ran out the door, and I never saw Rita again.\n\nIf only I had quit. Sure, I'd quit the job. But I hadn't quite given up on the idea of having a loving sexual relationship. I didn't know at the time that there were worse things than simple humiliation. I hated myself over Dave and Rita for another year or so. The same disgusts and fears as before crept into my brain, only this time they were confirmed. There was no doubt anymore. But I kept thinking that maybe there was someone out there for me, someone who, if given the time and effort, would understand me. I didn't think it would happen soon, but I thought it was possible.\n\nAnd I met another guy and it felt a little more than possible. He told me he was a devout Christian and didn't want to have sex before marriage. I thought he was cute and sweet. We kissed a lot, held hands. I kept my secret. It seemed like that was what everyone wanted me to do. One night we went out drinking together and had a good time. We went back to his place and we started fooling around. Our inhibitions dropped, he didn't care so much about his vow to God and I didn't want to think about the devil between my legs. Over twenty years of sexual frustration was bound up inside of me. I thought that dating someone for six months would mean that he loved me. I threw myself onto the mercy of passion.\n\nBlack eyes. Broken bones. A long stay in the hospital. The trial. A sentencing hearing (thankfully I guess). Being outed in front of an entire community. Transferring to a different college to finish my studies. I don't really want to get into the finer details of how that relationship ended. Suffice it to say, I learned my lesson. There is only so many time that the universe can tell you that you have to build walls before you just do it. I promised myself that I wouldn't be vulnerable again. I would build an emotional barrier around myself and go out into the world. \n\nWhen I first got out of (my second) college and got my current job, I thought it would be easy. My first wall was just avoidance. It was more of a picket fence really, not as stern and hard as a wall. I just got to work a little early so I was at my desk before the little morning conversations occurred, I stayed at work all day and avoided lunch engagements, then I went home. I acted like I was shy, but I was polite. I figured that eventually people would get the hint: I am not a social person. It was a lie, but that way I wouldn't have to interact with people. I knew myself. If I got to know people at work I would become friends with them, I would be attracted to some of them, and I would want to pursue a romantic relationship with a couple of them. There was no way around it other than to cut everyone out entirely.\n\nExcept I learned two things within the first year of working at my current job. The first was that when you are a pretty girl, everyone wants to save you from being shy. They will come up to you and offer to take you to lunch. You can blush and shake your head but they find it endearing. They promise they don't bite. You shake your head and say \"no thank you.\" And they say that it is going to be a big group, no pressure or anything. And it goes on like that. And I think that sort of brings us back to where we started. Shy Rose disappeared and unholy bitch Rose made her appearance. It took everything I had and was totally against my nature to lash out at people. But it was the only thing that kept people away and protected me from my urge to interact with people.\n\nHowever, I learned another thing about myself. I could bark at people who didn't deserve it, I could turn down dinner and lunch offers even when I desperately wanted to accept, and I could go home to my apartment by myself and find some small amount of comfort by myself. But I couldn't completely shut down my libido.\n\nIt seemed to be cyclical. I would repress any thoughts or feelings regarding sex. I would do anything to avoid even thinking about it. I took up knitting, I did puzzles, I read. But all the while images in my mind would start growing more and more graphic. I would feel myself getting flush, even at work. I would squirm uneasily in my seat at work. I would then start with watching porn. But as I did so, I would feel waves of anxiety and shame, leaving me completely unable to pleasure myself. But that would make me watch more. Finally, I would completely lose control of myself and do something crazy, something I was ashamed of.\n\nI don't want to get too deeply into the details, but I did some dangerous and stupid stuff. The first time, I was so fed up with my inability to have sex in college that I hired a male escort. He came to my house, he generally worked for homosexual men so it didn't really bother him that much. But it was hardly passionate and made me feel disgusting. He didn't want me. He wanted money. So yeah, that's how I lost my virginity. At least it gave me some pent up aggression to release on the unsuspecting people at work.\n\nAnother time I went to a public park and walked into a small wooded area and disrobed. I watched people run and a group of women in an outdoor yoga class while I masturbated and felt sick to my stomach. I don't even know why I did that, it just made me feel like I belonged in the world. But the only way to do that was to be in a place where no one could see me.\n\nI could go on I suppose, and describe some other actions from my early to mid-twenties that would make me shudder. But I think the point is made. I had successfully built my emotional wall, but there was a weakness in it, and I wasn't sure how to shore it up.\n\nI hit my lowest point with respect to my loss of sexual control and utter alienation from the world just two weeks before my experience dressing down Dan to the delight of my co-workers. I found a guy on craigslist who said he wanted a relationship with a \"shemale.\" He had a photo posted. Not great, but he seemed at least very open about it. I looked at his post for days, waiting to see if it disappeared. I wasn't particularly attracted to him and I knew that going to meet anyone would make me vulnerable. But I was nearing the fever pitch of my sexual frustration. One night, after work, I turned on my computer and, after telling myself I wouldn't do it for two hours, I'd agreed to meet him in at a bar located in the suburbs. \n\nIt was some chain place you've probably heard of. I walked in and saw him standing at the bar. He was about 20 years older and 50 pounds heavier than his picture. He had big, wrought iron arms. Suddenly, I felt absolutely certain that he was going to kill me. It was just instinct, but to this day I believe it was correct. What the hell was I thinking? Had I lost all sense? The danger I had just placed myself, as well as the overall pathetic nature of my mental state was almost overwhelming. I needed to get away from everything.\n\nI hadn't sent him a picture so I turned and ran out of the place. I sprinted across the parking lot and ran into the first place I found. A dirty old pet shop. The animals looked bedraggled and they screeched at me the instant I walked inside. I didn't see an attendant. Something made me think the guy from the bar was still behind me, so I was glad I was off the street, but I wanted more cover. I ran into a door in the back of the place, thinking it was a store room. Instead, I found myself in a unisex bathroom. It was much cleaner than the rest of the place and I sprinted into the middle stall. \n\nI sat down on the seat and put my hands in my head and just sort of rocked back and forth. This was my life? I'd left my parents' home when I was 18 full of optimism and a healthy sexual appetite. Now I was trying to hook up with craigslist creepers and crying in strange pet store bathrooms. I don't know how long I sat in the bathroom, it was longer than I think you'd believe. Near the end of my time there, I knocked my head three times on the wall of the stall. Then I paused for a few moments and hit my head harder one last time.\n\nI didn't intend anything by that, honestly. I was just trying to get myself together, trying to prevent myself from crying. But, apparently, I had stumbled onto something. I don't know if someone was in the stall next to me during my entire breakdown or if a person had arrived while I was crying. But the fact remains that someone was there. And I had signaled them. \n\nI leaned away from the stall wall just at the same time as a veiny cock poked through a hole located at about the same level as my breasts! I jumped in the seat but was too shocked to make a sound. I hadn't even noticed the hole there. It looked like it was carved with a pencil or something and the rough edges were covered in duct tape. The stall wall itself was very thin, not the inch thick piece of aluminum or plastic usually found, but like a thin sheet of steel. And there was a cock sticking through it! I could hear breathing. For a moment I just stared at the thing. Then I realized what was happening. I quickly stood up, bumping the cock as I did so. I heard a man groan. I ignored him and quickly opened the door. I ran out of the pet store, confused and vowing never to return.\n\nI didn't even think about the guy in the bar anymore. I stumbled, dazed, out to my car and started to drive. When I got home that night, I tried not to think about anything that had happened that day. I told myself it was a close call with some real danger and that I could put it in my past, a reminder on how important it was to never let my guard down in any way. But, every spare thought seemed to go back to that strange bathroom stall in the pet store. It became almost an obsession. I just couldn't stop considering the various angles of that place, the strange circumstances and...the opportunity. I of course knew what a glory hole was, but I'd never really thought about one before. If that place was what it seemed to be, wasn't it the sort of release I had been searching for? A place where I could indulge my sexual desires while being completely invulnerable? I could go there and no one would know who I was or what I looked like. I would still be me, but no one would have to know about it. Someone would want me, even if they didn't see the whole picture. And there was no pressure to reveal the full picture. Try as I might, I couldn't ignore the hold that place had one me.\n\nThis back and forth went on in my mind for the next two weeks. But finally, the relentless drumming of my libido overcame my defenses once more and I was going back. I didn't know if what I'd experienced was an aberration of if that pet shop was some sort of...hangout. But I had to find. (I would later look it up on the internet and confirm it was a well-known location for trysts, apparently it was the owner's actual purpose in opening the shop). Regardless, the interaction with Dan pushed me over the edge. Now it wasn't just my sexual anxiety, which, albeit, was intense. It was also the fact that every time I had to push the world away, it took an immense emotional toll on me. Despite what my co-workers might think, I did not like being an insufferable asshole. It ate away at me, it made me feel even less human. I couldn't stand the tension anymore; I needed some sort of release.\n\nSo, as soon as all of my co-workers were gone, I got up from my desk and hurried over to the elevator. I purposefully pushed all conscious thought and any apprehensions aside. Two weeks of internal wrangling convinced me that even the slightest doubt could push me away, send me back home for a quiet Friday night of intense frustration.\n\nI have no actual memory of driving to the pet shop. It was about fifteen miles from my office building, which in Friday rush-hour traffic would take around and hour. But I don't remember any of that. I had complete tunnel vision. I don't remember anything except parking in the lot in the somewhat abandoned strip mall area where the pet store was located.\n\nIt is hard to describe what I was feeling at that moment. My muscles felt like jelly, each movement felt like it was taking up three times the normal amount of energy. My head was spinning, my stomach was knotted up tighter than I'd ever felt it before, and I actually felt uncomfortable by how fast my heart was beating. But the urge to go inside, now that I was here, could not be denied. I had to go inside, I needed slip outside the prison I'd built around myself, even if just for a few minutes. I turned off my car and stepped out into the parking lot.\n\nI jogged inside. This time, there was an attendant sitting at the desk, a college-aged girl reading a romance novel. She looked up once and nodded, but didn't offer any assistance. I was happy about that. I looked around for a brief moment and didn't see anyone else in the store. When I was certain the girl at the counter wasn't paying attention, I slipped into the bathroom.\n\nIt looked just as it did two weeks earlier. I looked under the bottoms of the doors but then saw that they went all the way to the floor, which is sort of odd. My mouth felt dry and palms felt sweaty, but I pushed forward and entered a stall. Only now, I didn't enter the middle stall this time. The stall where my \"visitor\" had been hiding the last time. I quickly closed the door behind me. I locked it. I suddenly felt extremely peaceful, almost safe. My pulse slowed and my stomach loosened.\n\nFor a moment, I didn't know what to do. I knew from my own experience that the person in the middle was supposed to signal. But I tried anyway. I figured the sequence I'd tried before might work, so I tapped three times, paused, then once more.\n\nNothing happened. I didn't know if that was because no one was in the middle stall or if it was because that person was supposed to signal. I didn't have anywhere to be that night (the only benefit of having no friends), so I decided I would wait. If nothing else, it was exciting and naughty to just be here and ready.\n\nIn fact, standing in the stall, waiting for someone to knock was sort of a turn on. I felt my body start to react to the anticipation, the nervousness, and the anonymity. I didn't so much make a decision as start to act. I slipped my work jacket off of my shoulders and hung it up on the peg on the back of the door. There were actually several pegs, as though it was normal for someone to get completely disrobed in this stall. I started to open my blouse, my fingers slipping around buttons from excitement. In a few moments, my shirt was open and I pulled the bottom out from the waistband of my skirt. I slipped it off my shoulders as well and hung it on top of my coat. \n\nI reached behind my back, fiddling with the clasp of my bra. I almost giggled because of the trouble I had with it, I felt like a fumbling teenage boy. Finally, the hook came loose and I slid the bra down over my arms, catching it in my hand. I hung my bra up on one of the open pegs and looked down at my breasts. I always thought that I had beautiful breasts, they were my favorite feature. Back in the day when I allowed people to look at them, they had always commented that they were lovely. They were on the small side, as I said before, I but they looked perfect on my frame. They were shaped like teardrops, with a soft rounded bottom and a sloped top. The two angles met at my pink nipples. My areolas were around the size of quarters and my nipples were around a half inch long. \n\nI moved my hands over my breasts, kneading the flesh and tickling my fingers across my nipples. I felt the electrical thrill of sexual arousal rip through my body and I bit my lip to avoid moaning. It felt so lovely I squeezed again. I couldn't remember the last time I felt such carnal fire without the attendant guilt and fear. I wanted more.\n\nI started to sit down and then realized that I had no intention of slipping my shoes off. The floor was...less than pristine and besides, I am not that tall and the hole was kind of high. So I stayed standing and silently unzipped my skirt. It unzipped on the side and in a moment, I was pulling it around my high heels. I hung it up on top of my bra. \n\nNow I was standing in the bathroom wearing nothing but a pair of red boy-short panties and black high heels. I looked down at my legs and feet. I always liked that I had very small feet and they looked cute in my favorite shoes. My legs were silky smooth (I was naturally hairless below my eyebrows) and they looked longer than they actually were with the combination of my shoes and my cute panties.\n\nBut I wasn't quite done yet. I needed to feel completely free. I slipped my fingers into the waistband of my panties. For the first time since I'd stepped into the stall, I felt the slightest tinge of nervousness. I was about to eliminate the last shred of my cover. But I was too excited, and far too deep, into this to stop now. She pushed down on the hem of my panties and wiggled my hips as the fabric slid over my ass and pooled on my feet. I bent over, picked them up carefully and hung them on the door as well. Even as I did so, my hands reached down between my legs. \n\nI found the corner of the tape that I used to strap my cock down. It was something I'd done every single day since my long-ago date with Dan. I never wanted any accidental revelation. But now I picked at the tape until I got the corner up and then quickly pulled it away. As I said, I am naturally hairless so there wasn't pain. What there was a tingling feeling as my numb cock started to stir to life. My heart was pumping and blood started to flow to my member. I was so titillated that within a couple of seconds my cock was hard and standing up at full attention.\n\nI looked down on it. The source of all of my misery, but also something that seemed to offer an eternal opportunity for pleasure. I always thought to myself that I hated it. But, if that were the case why didn't I just get rid of it? Lots of women in my situation had done so. It would solve all of my problems. I guess there were two reasons I didn't. First, fuck everyone who wanted me to keep this a secret. I was part of who I was and even though all I felt about it was shame I knew that I shouldn't have to feel that way. Removing it would have been to make my identity a permanent secret. I could be bitter and hateful, but I couldn't just... give up. \n\nSecond, I liked the way it looked on me, as strange as that sounds. As I stood in the bathroom stall in my high heels, I looked down over my body. There was the top of my chest as it sloped gently down to my breasts, my flat stomach, every-so slightly outie bellybutton, and my narrow waist that flared out to wide, feminine hips. Then, between my legs was cock. About five inches long and circumcised, with a smooth tip that looked like a large, pink grape and a largely vein-less shaft. As I said, my body was naturally hairless and even my balls, which were small and hung just slightly below my shaft, were smooth. From there, my body flowed down my legs. It all just worked together. I liked how I looked, maybe because everyone else found the thought of it so repugnant.",
        "But I wasn't worried about any of that stuff now. I was completely naked in this placed and my entire body felt...sensual. I wasn't even thinking about the hole in the stall. Now I was just feeling the ability to have sexual thoughts and feelings outside the narrow confines of my computer room. My hands seemed to have a mind of their own. They flittered over my breasts, across my belly, down my legs, through my hair, over my ass. I squeezed myself, I stroked myself, and I just reveled in it. \n\nBut I never touched my cock, I just kept letting the tension build up high and higher in my body. My cock ached and my balls felt heavy against my legs. But I resisted. I just kept rubbing my body. I even took my breast in my hand and pulled it up to my mouth, sucking on it and loving the way the hot warmth of my mouth felt on my skin.\n\nI felt absolutely electric. I can't explain it; I know it doesn't make sense. Eventually, I even bit my lip to keep from moaning. I was so caught up in the excitement of being in this spot, being naked, enjoying my body, and finally feeling a sexual release of some sort after months of anxiety, that I almost forgot why I was actually there. Then I heard, clearly over the silence of my stall, three long taps on the bathroom stall. I stopped moving entirely, I didn't breathe. My eyes shot to the hole in the stall. Finally, after a pause, a fourth tap. The signal.\n\nFor a moment, I stayed completely frozen. My skin prickled and my heart rate picked up again. I looked at the dark hole in the dimly-lit bathroom wall. I didn't have any reservations mind you, I wanted this so badly. But, for a second, I didn't really know what I was supposed to do. I thought back to my experience before. Had the man that time signaled something to me? I couldn't remember, but I hadn't been paying attention. Was I sure I heard what I thought I heard? For what felt like an eternity, I debated my next move. Then, an extremely unpleasant thought occurred to me: If I wait too long, whoever is there will leave.\n\nThat was the final straw, I didn't care about etiquette. I needed this. I turned and face the glory hole. With my high heels on it was pretty much the perfect height. I took my hard, almost pulsing cock in my right hand. My fingers were shaking as I did so, from nervousness or excitement I couldn't say, probably both. I really didn't know what would happen. Finally I slid my cock through the hole and took a deep breath.\n\nI wanted to get my cock as far into the hole as possible, so I moved my hand from it and spread my arms wide. I placed my palms flat against the metal wall and pressed my body against it. It made a rumbling sound as I pressed into it. I almost gasped, the metal was so cold against my breasts and balls, but it felt invigorating. I closed my eyes and tried not to make any noise. My girly voice floating through the room my confuse my invisible partner and screw everything up.\n\nFor a second there was nothing and I wondered if I waited too long. The metal against my body started to warm and I moved my nipples against it. Just when I was about certain that the only pleasure I'd get was the thrill of sliding my cock into the hole, I felt something. My entire body trembled. A hand had brushed the tip of my cock. I felt blood rise in my cheeks and my whole body was shaking. The hand moved away. \n\nI felt despair. That little bit of contact was such a tease! I needed more. I thrust my hips a little against the wall, I heard the metal rumble and felt my cock rub against the tape-covered metal. I hadn't heard the door open. Whoever touched me was still there. I resisted the urge to whimper.\n\nMy patience paid off. After a few moments without contact, I felt the hand on my cock again. This time, it wasn't just an idle touch. A hand wrapped around my cock, squeezing it gently. My knees went weak. Then the hand started to stroke, up and down the length of my shaft, applying a little pressure as it did so. My mind was reeling. This was amazing. Someone was touching me and it felt amazing! And they weren't paid and they weren't disgusted, they seemed to like it too!\n\nI felt the hand slide all the way up on my cock, so that the person's hand was pressed against the barrier separating us. My skin was pulled taut over my cock and my partner squeezed me lovingly. Then, something amazing happened. At first, I didn't really know what it was. It was a sensation unlike anything I'd ever felt before. It was a hot, warm, wet feeling on the tip of my cock. I felt something swirling around on the tip, even probing at the opening of my urethra. Suddenly I realized what it was: someone was sucking my cock!\n\nI'd always wanted to know what this felt like and it was completely amazing in every way. I felt my partner's tongue whirl around my tip and felt them suck in, creating a vacuum that pulled on my cock. Finally, the person's hand released my cock and their mouth started to slide down my shaft. I could barely stay standing and almost fell off of my heels. The feeling was incredible.\n\nAfter a few second, I felt a chin against my balls and I could hear my partner's head press against the metal stall. My cock was entirely inside of someone's mouth. They kept it there for a second and I reveled in the feeling of having my cock bathed in someone's body. My partner's tongue seemed to be everywhere. It was wrapping around my shaft, tonguing at my balls, and flittering across the tip. I felt my cock press into the inside of my partner's cheek. Then, I felt my cock slowly slide out of my partner's mouth. The cool air felt naughty against my wet skin, but only for a moment, then my cock plunged back into my partner's mouth, faster and wetter than before. I tried to push hard into the stall, I wanted to get farther and farther inside of my lover's body.\n\nI was in heaven the entire time. I pressed my body hard against the barrier, which was now quite warm. My nipples were hard from arousal and as they pressed into the warm metal my eyes rolled back in my head. My hips seemed to move on their own, thrusting against the hole in the stall, pushing my cock further and further into my partner's mouth. The intensity of the feeling made me want to moan with pleasure. But, still fearing the sound of my voice, I plugged my index finger into my mouth. I sucked it hard, mimicking the motions my lover was making on my cock.\n\nPent up weeks without masturbation combined with years of intense sexual frustration conspired to ensure that I didn't last very long. I felt my lover's hand once against wrap around the base of my cock. I bit down on my finger, feeling that I was getting close. My lover pulled my cock out of their mouth, flicking their tongue against the tip while they started to vigorously stroke me. I felt my partner's lips seal around the tip of my cock as the stroking got faster and tighter.\n\nThen it happened. I bit down so hard for a moment I thought I'd draw blood. But then, the small amount of pain I felt in my finger was completely overwhelmed. It started with my balls seizing up, sort of pulsating. Then, I felt the laser-like jet of sperm move through my urethra, so backed up and over-stimulated that it felt like it was stretching me out and moving a million miles an hour. And I felt it burst through the tip of my cock, with my shaft now pulsing as well. And with this mechanical release of my ejaculate, I also felt a debilitating (and wonderful) sense of serenity and calm. It radiated out over my body, growing from my midsection to coat my brain in a fuzzy euphoria. I leaned forward against the wall to keep from falling.\n\nI heard a muffled noise on the other side of the stall, but my partner did not stop. The hand continued to pump on my hard cock, the lips maintained their seal, as my partner milked every last drop of my cum into their mouth. I felt the tongue, hot with my spunk, swirl around my tip and collect more and more of my sexual essence. Spurt after spurt of my sperm deposited in my lover's mouth and the intensity of the experience brought tears to my eyes.\n\nFinally, I'd deposited most of my seed, I felt my pace slacken and then stop. My cock still shook as the orgasm faded, but the cum stopped flowing. My balls even eased and I slipped my finger out of my mouth, breathing for the first time in nearly a minute. I felt light headed but comfortable. I couldn't ever remember feeling so content, not since high school at least. I felt no shame or discomfort. It felt like I'd always hope sex would feel.\n\nI heard my lover gulp through the divider and I knew they were drinking down my tremendous load of cum. My partner's hand was still on my cock. It stayed there for a moment, and then I felt one last little surprise. My cock was rapidly softening in my lover's hand. I felt my partner lifted the tip up one last time and felt a gentle kiss planted again the very tip of my cock. It felt lovely, almost better than the blow job. Then my partner dropped my cock. I heard the door open quickly and, whoever the person was, quickly shuffled out of the bathroom.\n\nFor a moment I stood in stunned silence. It had actually worked! I had come in with high hopes but also an almost certainty of failure. But here I was, sexually sated and completely dazed. After a few moments, I realized where I was and what I was doing. I carefully slid my cock out of the glory hole. I put my clothes back on absent-mindedly. I tried to think about the implications of what happened, but my brain wouldn't focus. The only thing I could do was slap a silly, satisfied smile on my face.\n\nSome long period of time after I entered the bathroom I walked back out into the pet shop. The girl was still reading a romance novel behind the counter. She didn't even look up as I walked out. Was it her? I had no idea. She gave no indication one way or the other. I walked towards the door. I felt like I was robbing the place, like any moment someone would stop me. But then, I walked outside in the evening air and let out a deep breath. I couldn't ever remember being so happy.\n\nChapter 2: A Breach in the Wall\n\n\"This won't be a regular thing,\" I told myself that night when I got home. The euphoria of the moment had worn off a bit. I couldn't deny that what I'd done had felt amazing, but now with my mind unclouded, I could see that I'd taken a tremendous risk. I'd taken my clothes off and performed a sex act essentially in public. The anonymity I found was nice, but it was largely illusory. I could've been caught. I promised myself that like my other risky behaviors before, that this would not become a habit.\n\nI told myself that, but even that first night I knew I was lying. I'd tasted something so close to perfect that I'd have to go back for a second helping. And a third. And more. But at first I held off, trying to convince myself that the risk was greater than the reward. I kept my walls up and my head down.\n\nBut, just like every other time I'd done something, within a few weeks the relief I felt was slipping away. Dan and his ilk continued to annoy me, my work remained stressful and unfulfilling, and, most of all, I felt the need to be wanted somewhere. The old tension, the desire for human contact, was coming back. About a month after my first experience at the glory hole I went back. I was almost as nervous as my first trip, but the result was just as lovely. And, as time past, I started to go more frequently and my guard got lower.\n\nEach time I went was a good experience. It always seemed to work, even though sometimes I had to wait longer than other times. This was clearly some sort of well-known place. In fact, there were times when I'd enter and find the place occupied and have to come back later. But I would always make my way back and get my opportunity. There apparently other people who needed what I needed and wanted...well, me. \n\nFurther, each time I went convinced me of the ultimate safety of my actions. And I learned, mostly through observing my various partners, the rules of etiquette around the glory hole. I learned that this kind of interaction really wasn't a breach of the wall I'd built around myself, but just a small outlet. I was convinced that there was no danger of being exposed and no chance that anyone would know my shameful secret. In fact, I became a stickler for the rules. If someone would speak or try to linger after we were done I would rudely re-buff them. That served to insulate me and convince me I was safe.\n\nI learned that as the person inserting my cock, I was not supposed to signal in any way. I learned that I was always supposed to wait for the other person to leave. I learned that I was not supposed to talk to the clerk of the pet store but that I should occasionally leave a tip, especially if I left a mess. I learned that no one ever talked and that absolutely secrecy was desired by everyone. In short, I learned that this was exactly the place I'd hoped it would be. Within a few months I was going after work every other week or so (though not on any fix schedule). I found that I was so content after these experiences that it was almost a challenge to remain a hard bitch at work. I had everything I wanted: security and sensuality. I imagined that I would continue in this way forever: quietly satisfying my sexual needs but maintaining my anonymity to protect my unsavory gender.\n\nIt was about a year after my first experience at the glory hole that I learned that I was wrong. Or, I guess that is the wrong way to put it. I didn't know at the time that my carefully constructed life was about to collapse (or to rise again from the ashes) but that's what was about to happen.\n\nIt was a Wednesday I recall. It had been nearly three weeks since the last time I'd been to the pet shop. I had been busy with work and, furthermore, had actually been in a relatively good mood. So I hadn't felt the need to go. But that Wednesday, it was like all the frustration and isolation I'd been owed for three weeks decided to hit me all at once.\n\nIt started in the morning. My tire had gone flat during the night and I hadn't noticed until I was about a mile from my house. I pulled over to put on a spare. It had rained the night before and there was a large pot hole in the room. When a semi-rumbled by, I was splashed with icy cold water and my hair became a muddy nightmare. A man in a pick-up pulled over and offered to give me a hand. But, after he also asked me out on a date, I told him I didn't want his help. I went home and got cleaned, changed my tired, and went to work. I was, of course, late. Despite the fact that I called in to explain the reason for my absence, I was in trouble. As punishment my boss, who did not like my \"attitude\" at work, had decided to put me in charge of training a new employee. Even if I wasn't generally unpleasant to people at work, it would have been difficult to train this girl! She was absolutely incompetent and, worse, did not take a hint. By the fifth time I failed to explain to her how Microsoft Excel worked, she believed we were good friends. I had to actually scream at her about her stupidity (putting me deeper onto the boss' shit list) to get out of a drink invitation that evening. \n\nBy the time I left the office (half an hour late) I was almost shaking with rage and social anxiety. I didn't so much decide to go to the pet shop as my body went on auto-pilot, pulling me out to the suburbs and towards relief. I made almost record time on my way to the pet shop. I was almost jittery and needed a chance to step outside the narrow confines of my life more desperately than ever before.\n\nThere was no clerk at the desk when I arrived (a common occurrence) and I quickly shuffled into the bathroom, sprinted to the open stall and closed the door behind me. In a matter of moments I was standing nude, my cock already hard from anticipation. The sexual tension was unbearable and I had to focus hard to prevent my hands from immediately flying to my cock. I didn't just want to jack myself off in the bathroom, though part of me wanted it desperately.\n\nIt felt like I waited for hours, but I doubt if it was even in the top five of my longest waits. I was actually pacing back and forth through the little bathroom stall, my heels clicking on the linoleum floor, when I heard three gentle raps on the wall of the stall. I sucked in my breath, waiting. There was an interminable pause and then, finally, a fourth little knock. I turned and looked at the glory hole.\n\nThis person was even more eager than most. Lips were pressed up against the hole, almost poking through to my side. I knew instantly that the lips belonged to a woman (usually I didn't see and didn't know). They were exceptionally thick and pouty, but natural. They had a gentle pink color but with absolutely no hint of lipstick. Her lips were somewhat open, almost a sly smile, revealing a small line of dazzlingly white teeth. There were no winkles at the corner of her mouth so I knew she was young. The only blemish, if you can call it that, on the light white skin around her lips was a beauty mark just above her lip on the left side of her nose. Honestly, it was the most attractive pair of lips I'd ever seen. I desperately wanted to slip my cock between them.\n\nI grasped my cock by the base and moved forward slowly. I felt the tip of my dick press into the woman's pillowy lips. She smiled further now and my cock pressed against her slick teeth. Stealthily, her tongue slipped out of the side of her mouth and then slowly and deliciously licked across my tip. I felt a shudder run down my spine. This girl knew what she was doing.\n\nHer lips and teeth parted now and her mouth opened around my cock. I pushed forward slightly, letting my bulbous head press into her mouth. Just as the mushroom tip slipped completely into her mouth, her lips closed around me, stopping me from pushing further. Her tongue was hot, wet, and incredibly thick. I felt her swirl it around my tip, bathing it and wetting it in her saliva. I had to stifle a groan. I'd had people do this to me before at the glory hole, but never with such skill!\n\nShe pressed the tip of my cock against the hard roof of her mouth and swirled her tongue on the bottom of my penis. Her tongue even slipped out of her mouth, gently sliding along the bottom of my shaft. When she had my cock extremely wet, she loosened her lips a bit. I felt a gentle suction and realized she was sucking on the tip. I assumed, correctly, that this was a signal. I pushed my cock forward again. Now my shaft started to disappear into her beautiful mouth.\n\nGenerally, when someone gave me a blowjob, they would grasp the bottom of my shaft and hold me in place. Then they would bob their head up and down on my cock. It felt lovely, but it left no doubt who was in control of the sexual action. This person was different. I felt my cock slipping deeper and deeper into her throat, but her hands never reached for me. I heard her leaning up against the separator, trying to take in more of me. It felt incredible.\n\nSoon I felt the tip of my cock pressing into the back of her throat. Rather than pull my cock out of her mouth, the girl on the far side of my bathroom stall repositioned herself, moving her neck out so that my cock would fit better in her throat. After she gagged, I felt thick spit well in her mouth. She bathed my cock in it, lubing me up to go deeper. This girl was special. I fell back on my old method of keeping myself quiet: I slipped my right index finger into my mouth, sucking on it sharply.\n\nWhen the girl seemed to be completely comfortable, I started to push my cock hard and farther into her mouth. I felt my hot, wet prick sliding over her still quivering tongue and pressing as deep as it would go into her throat. Then, surprisingly, I felt my belly brush against the cold metal of the bathroom stall and felt her tongue pressing, still stick out slightly, rubbing against my scrotum. I was completely inside of her throat! I couldn't believe how wonderful it felt. ",
        "I gave my hips a quick thrust just to see what would happen. I heard a little gurgling noise and my lover gagged again. But now I was much deeper in her throat that I'd been before. As she gagged, her muscles in her mouth and throat tightened, squeezing my cock and making my mind go blank. It was an incredible feeling, like my sex was wrapped in a warm, loving blanket. \n\nWhen her throat loosened, I pulled my cock back out and gave her a chance to breath. My cock felt almost as electric sliding out of her mouth as it had going in. Her tongue kept up its careful contact. She kept amazing pressure and control, even as she must've been desperate for air. Finally, she squeezed her lip together around my tip, willing me to stop. I heard her breathing deeply, but then she was sucking again. She wanted me to go back in! But she was sucking harder now. I thought I knew what she wanted.\n\nI slammed my cock hard through the little barrier between us. I don't know what I was expecting, but the woman on the far side was more than up for the task. I felt my cock slam all the way back into her throat. Her teeth never touched me, just the soft warmth of her lips, tongue, cheeks, and throat. I pulled my cock back out so just the tip remained and then slammed it in again. I could hear the woman on the far side, cooing slightly. But she seemed more than willing and capable of taking everything I had!\n\nIt didn't take any further hints, I knew what she wanted. She wanted me to fuck her throat with everything I had. I was happy to oblige. I pressed both of my hands up against the wall over my head, pushing in to give myself leverage. Then I started to rock my hips back and forth as hard and as fast as I could. My hips banged into the cool metal of the stall as my cock slipped effortlessly into my lover's throat. She didn't gag now, letting me pound into her over and over again. Her lips kept a tight lock on my tongue somehow kept providing lubrication and also gentle caresses while I pistoned in and out of her.\n\nThe feeling was indescribable. I don't know what to say other than that she knew exactly how to control her body and to give me exactly what I wanted. In fact, I wanted more. That is the only way to describe what happened next. My entire body felt like it was on fire and my mind was reeling. I took my hands away from the stall, but kept my hips pumping and my cock shooting into my lover's mouth. With my left hand, I grabbed my breast, kneading my skin and pulling on my nipple, trying desperately to get some relief but instead inflaming myself further.\n\nMy other hand seemed even more out of control. For a brief moment my right index finger again plunged into my mouth. I mimicked my lover actions, throwing my finger into my throat and coating it with thick saliva. I wasn't really thinking about what I was doing, it was completely on instinct now. I pulled my finger out of my mouth, dripping with spit, and moved it around behind my body. My hand found my shaking hips and my shaking ass and my fingers pulled my ass cheeks apart. \n\nI'd never done anything like it before, though I'd seen it in pornos. I'd never even really wanted to, but I didn't feel like I had any choice: I just had to do it. The sensation of having my cock slam into this woman's cock was too much, I need something to cut the tension. I needed relief. I slipped my sopping finger through the crack of my ass. I kept my wrist hard against my tail bone so that it held in place while my hips continued to pound into the stall, my cock slamming into my lover's throat. My fingertip pressed against the crinkled rosebud of my asshole. I swirled my finger around it once, just feeling soft ridges and spreading my saliva. A shiver ran down my spine and I squeezed my sensitive nipple tighter.\n\nI started to press my finger against the now-wet asshole. I gave a little bit of pressure, and felt my anus try to resist. I twisted my index finger a little, wiggling it. The pressure on my asshole built to a painful and wonderful crescendo. Finally, the tip of my finger popped into my asshole. My anus opened just like my lover's lips had taken my cock. It pulled my finger in up to the top knuckle. I spun my finger a bit, making sure my spit lubed my insides. Then I kept pressing. The tension was not quite as heavy now and now that I was inside my finger slipped deeper and deeper into my asshole. While the tension was lower, while my knuckles slipped inside of my body I soon I felt like I was completely full. My insides felt tight and my bowels had the feeling of invasion. There was no room left inside of me. \n\nNot that it was bad. In fact, the slight discomfort and the filling sensation were actually lovely. It was squeezing my finger wonderfully and also heightening all my other sensual sensations. After a few moments of pressing, I felt my hand press against my ass. My index finger was entirely inside my asshole. I spun my inside of my body and even curled my finger as best I could. I kept stroking my sensitive, rubbery insides with my finger while I continued to fuck my lover's throat.\n\nAfter a few moments of slamming my cock hard into her while my finger was buried in my ass, I pulled my cock out so that only my tip stayed inside her. I had been fucking her throat relentlessly for several minutes and I was afraid that she wouldn't be able to breath. I could hear her breathing as I stopped, but her tongue kept moving, lapping at the tip of my cock. She put the tip of my cock actually under her tongue, covering me with the softest part of the inside of her mouth. \n\nHer attention to my body was pushing me towards the edge. As she started to suck on my again, to pull me down into her throat, I realized I was closing in on the something intense. I swirled my finger in my asshole. I moved my other hand across my body, grabbing my other breast for the first time. My hand sunk into my flesh, and I felt my nipple against my palm. It was like every nerve in my body was on full alert. Each sensation was magnified and intensified. I wanted to cum inside this woman who made me feel so alive.\n\nI started to press my cock once more into her pillowy lips. I even looked down at her now. I watched as her cheeks puffed out and her lips stretched around my cock. Even her little beauty mark rose slightly. Now the bottom of my cock started to slide across my lover's tongue. She pressed her tongue hard up against my urethra and held it there, giving me the resistance I needed. I pushed slower now, driving my cock slowly into the back of her mouth. She pulled her cheeks in around me, making her mouth tight. But I kept pushing through. I pushed a little harder as I started to feel that familiar sensation coming on. I felt my hips against the wall again and my cock pressed against the back of my lover's throat. She gagged around me one last time. And that was all I could take.\n\nAs I said, the feeling was familiar. But it was also certainly different. Better. More intense. I felt it first as I always did in my testicles. I felt them seize up, sort of bounce ever-so slightly against my body as the cum started to pull out of my balls. After that small, mechanical sensation occurred, any awareness of my actual body started to fade away. I squeezed on my breast so hard that my skin turned white and I pressed my finger into my asshole as hard as I could. But I could barely feel those things. Instead there was an incomprehensible vibrating warmth that emanated out from my cock. \n\nAt first, I could only feel it at the tip. It was a feeling so intense that it was all I could focus on. Then, it started to flow out from my cock, up over my belly and down to my legs. The more areas it found, the faster it moved. With inexplicable speed it overwhelmed my feet and slipped down to my toes until I squeezed them tight. I couldn't feel my body in a normal sense. I could only sense the overwhelming electrical buzz. My asshole tightened around my finger and my nipples became so sensitive that I pulled away from the now-warm stall wall and dropped my breast from my hand. But these things happened beyond my conscious mind.\n\nSlowly, I began to again have normal sensation in my body. The first feeling I could recall was the feeling of high-pressure liquid shooting through my urethra. I'd already been coming for several seconds, but I could tell the amount had not slackened. Huge globs of cum were pouring out of my cock and into my lover's throat. My legs suddenly felt weak and I started to stumble back. I could hear her choking a bit and groaning on the far side of the wall now. I felt my cock start to pull out of her throat. I kept depositing sperm in her mouth, against her velvety tongue. My asshole seized as my balls started to run dry. I slipped my tired finger out of my anus. \n\nThe last big glob of cum shot out the instant my cock pulled from my lover's mouth. I looked down just in time to see a white blob of cum spray against my lover's mouth. It landed heavily on her upper lip, completely covering her beauty mark. I put my hands forward against the stall, my head felt light. But I kept my eyes on my lover. I saw her lips curl momentarily in a saucy smile. Then her tongue slipped out of her mouth, licking up the last drop of cum. I heard a low moaning sound and then, the lips disappeared from the stall.\n\nWith that, it was all I could take. My feet were no longer sturdy underneath of me, especially on my heels. I stumbled back once more. My leg clipped to toilet and I fell backward. My body was too loose and relaxed for me to feel tense as I fell. My shoulder bumped the back wall, but not too hard. I fell to the side, trying to catch my balance as my feet slipped from my shoes. I twisted as best I could as I fell and then, gracelessly, I sat down on the toilet lid with an audible thump. I let out a breath and realized I hadn't breathed since my orgasm started. My head was spinning and I placed my forehead in my hands.\n\nFor a long while, I just sat with a stupid smile plastered on my face, my forehead supported by my hands. The only reason my hands were strong enough to hold my head was because my elbows were resting on my knees. And the only reason my elbows weren't shaking was because my bare feet were solidly on the bathroom floor. It took nearly a minute before my mind was capable for coordinating actual thoughts. The first one? I just found the meaning of life! I could barely understand the pleasure I'd just felt. It was too enormous to get my mind the whole way around. It was like all my previous orgasms had been merely sneezes. As I had that thought, I heard the door to the bathroom open and I heard feet walking out.\n\nMy dazed and euphoria-addled mind instantly shot back to the image of those beautiful lips that had pressed through the gloryhole. That woman absolutely knew what she was doing. I'd thought that I'd experienced pleasure at this place before. But it was abundantly clear now that I'd felt nothing. Those were just hors d'oeuvres, something to whet the appetite for the actual main course. How could I ever go back to the other people who I'd interacted with in the past? For a brief moment I was about to jump up and run after this woman. I couldn't let her go.\n\nI was actually standing up before I suddenly remembered where I was, what I was doing, and, more importantly, who I was. I was at a fucking glory hole. I sat back down. This person didn't want to know who the hell I was. She got some sort of thrill out of sucking random cock. If I got up, naked no less, and tried to run after her I would simply annoy her and probably ruin my chances of ever coming back here. And what if I did meet her? What if she wasn't offended by my rule-breaking and what if she was open to having a relationship? She was here to suck cock. She wasn't interested in someone like me. Hell, the reason I was at a glory hole was because no one wanted a tranny.\n\nThe euphoria I'd felt started to cool. It had been glorious to step outside myself for just a moment. But it was also terrible as I crashed back into my life. I wondered for a moment if, in the afterglow of sex when my worries were completely overwhelmed, if that was the way I felt back in high school or how normal people felt.\n\nI leaned back on the toilet now that my body was starting to respond to me. I leaned back against the tank and took a deep breath. The swirling emotions and sudden changes in mood were a bit disorienting. I stared down at my lap. I saw my now flaccid cock, slightly reddened from my experience, lying limp against my thigh. There it was, the source of my problems. I reached down gently and cupped it in my hands. This was the thing that kept me trapped inside my own walls. I didn't understand this part of my body. I didn't understand my body in general. It had the power to make me feel that transcendent pleasure I'd had just a few minutes before but also the source of my isolation. My body was so mysterious and confusing, I could never really tell what it wanted or needed. I just knew that it was hateful to others and deeply conflicting to me.\n\nIt seemed that I understood less about my body even that the person who'd just given me so much pleasure. She seemed to know how to get pleasure from my body. She understood how I worked even if I didn't. That idea flashed in my mind like a 1,000 watt bulb. She could clearly sense, even just through our limited contact, the things I needed to feel comfortable and right inside of my own skin. What if, through that connection, she could teach me something, anything about how to find harmony within myself? I just felt an overwhelming need to talk to her. Not like before, when the wash of sexual release was still on me, when I wanted to run out naked and kiss her. Now, I just wanted to ask her what she understood about my body, so that I could understand it for myself. I know that doesn't make sense, but it felt so strong and so right. She had made me feel truly happy for a brief moment in time, she had to have some insight into the sensual contradiction of my body, or maybe bodies in general. For a brief moment she had made me forget about my walls. Not ignore them or wish them away like I had in other risky situations, but forget they existed at all. I needed to learn the key to understanding myself, and she held it.\n\nI stood up and quickly started to put my clothes back on. I was already rationalizing this decision to myself and make myself believe that his was not a breach of my protective barrier. I was just going to find this woman and speak with her, try to see if she had some knowledge that would help me to understand my own body and my desires. I wouldn't reveal who I was; there would be no way for her to know. And while I would be breaching the rules of the glory hole, I promised myself it was just this one time and it was to protect the glory hole as a place where I went for pleasure. If I let this woman get away without knowing what she knew about my body, then I'd never enjoy this place as well again. Plus, because I would never let the woman know who I was, it wasn't like anyone would know I was breaking the rule. I knew I was rationalizing, but I didn't care. \n\nI was dressed in record time and opened the door to the stall and ran out of the bathroom. There was still no clerk in the pet shop and, in fact, the entire place was open. There was no evidence of the girl I'd throat-fucked in the bathroom. I looked out the window and did not see her in the parking lot. I tried to think how long I'd been in the bathroom since she'd close the door and left. It had to be at least five minutes, probably a good deal more. There was a very good chance she was already gone. For a second I was upset, then I realized it might not have done much for my anonymity to have run into her as I walked out of the bathroom.\n\nI went outside, trying to distance myself from the pet shop. Once I was outside I felt better, I could pretend I came from somewhere else. It was started to get dark outside and I gazed around the parking lot. There weren't a lot of cars there and I didn't see anyone walking around. I walked down the strip mall, looking into stores and checking to see if anyone was there. I looked into cars that I thought might have people in them. And with each passing step I got more and more disheartened.\n\nFinally, after scouring the parking lot and the walkable areas around it for nearly 45 minutes I realized the futility of my search. There was just absolutely no way she was still there. She'd gotten in her car and was on her way somewhere else while I was still panting naked in the bathroom. And what if I had found her? My rationalizations started to fall apart. What would I have asked her? How could I have protected my anonymity? How could I break the rules that had protected me so well in the glory hole? I gave up my search and told myself I was lucky that it hadn't succeeded.\n\nI looked at my watch and saw that it was well past seven o'clock. My stomach rumbled. I hadn't eaten since noon. It would be a bit of a drive back to my house. I was tired, hungry, and I needed a drink. I decided I would dart into the bar in front of the pet shop and get a quick snack and a glass of wine before I went home. \n\nI trudged across the now dark parking lot and felt a crushing sadness hanging over me. I couldn't really explain it. I'd just had the best sexual experience of my life (not a particularly great list, but hey, this blew everything else out of the water), but I felt no joy. I felt more isolated and disgusting than ever. \n\nIt was warm and bright in the bar, it was more of a restaurant that a bar I guess. I pointed to the bar and the hostess just nodded. It was crowded with suburbanites that were blowing off some steam after a hard days commute. I found one seat over in the corner and sat down. The bartender was extremely busy, so I resigned myself to waiting. I tried to make myself look as unwelcoming as possible: bars tended to bring out come-ons. I sighed and looked up at the television over the bar. It was showing an ad for sexy lingerie, the camera almost zooming in to the smooth, tight area between the models legs. I looked down quickly, focusing on my shoes.\n\n\"Hey,\" a voice said a few minutes later, \"The bartender is absolutely swamped. My name is Michele, I am the waitress for the bar area. I can take care of you instead.\" The voice was a light, cheerful girlish thing. \n\nI was staring down at the waitresses small feet, clad in comfortable sneakers. My eyes slowly started to run up her body. She had very thin, almost girlish legs with slightly knobby knees and trim, tightly muscled thighs. She was wearing leggings under a skirt and I saw that, despite her small legs, her hips flared to a good proportion. She was standing sort of to the side of me and I saw her ass sticking out, toned and somewhat large given her small legs, but fitting her womanly hips. She was wearing a very tight polo shirt and I saw that her waist sucked back in after her wide hips. As my eyes traveled further up her body, I saw that stuff into her tight shirt were very large, probably C-cup breasts. They flared out perkily from her narrow waist. I'd never seen a woman with a more striking hourglass figure. The breasts themselves were very round and perfectly proportioned. Her arms were thin, but showed compact muscle. She had narrow shoulders and a long, elegant neck. Her hair cascaded down to her shoulders, a incredibly dark black (likely dyed) that accentuated the extreme paleness of her skin. The skin itself was alabaster. She had a narrow, but not pinched face with a somewhat long and gently upturned nose. Her eyes were extremely large and she had beautiful blue irises. Her face could only be described as stunning. She was the most beautiful woman I'd ever see who wasn't in a movie or on a magazine. But, what really caught my eyes, what I couldn't look away from, were her lips. They were big, pillowy pink lips. And right above the left side, a stunning beauty mark.",
        "Chapter 3: Crumbling Walls\n\nIt was one week later and I was sitting in my car in the parking lot between the pet shop and the bar. My car was turned off and I had already been sitting there for quite a while. I was stewing in self-doubt and extreme anxiety. What the hell was I doing? Was this legal? Would any of this work even if I pulled everything off? What did I want? Every few seconds, I thought about driving away, going home and never thinking about any of this stuff again. But I never moved. Any time I thought of turning my keys in the ignition, my mind flittered back to the previous week, there, in the bathroom stall, when I'd really felt alive.\n\nIt was the strength of that memory that had brought me here in the first place. It brought me here despite the fact that I'd already experienced bitter disappointment in trying to explore this connection before. The previous week when Michele, the waitress at the bar and, I was certain, my lover, had waited on me I'd been absolutely tongue-tied. Somehow, I'd managed to stammer out \"hamburger\" and \"red wine.\" And she had cheerfully gotten my food.\n\nThere was no doubt in my mind that she was my girl. Her lips were so unique and I'd known them so intimately. And, when she spoke to me, I was certain I could hear that same voice that I'd heard groaning and slurping on the far side of the stall separator. I know that sounds crazy, but I could just feel the connection. Despite that fact, I was never able to say much more beyond \"thank you\" to Michele as she served me. I don't know if I would have been able to talk when I was searching for her, but finding her in the bar had thrown me for a loop. I was much too taken by surprise to talk. And even if I could where would I start? I didn't know how to begin the conversation and, plus, she was far more beautiful that I'd ever thought possible. She was intimidating! Why was she going to a glory hole?\n\nI'd tried no fewer than four times to speak with her that evening, to just say anything, but it didn't happen. Finally, I just admitted defeat, paid for my meal and went home. Once again, I told myself I was lucky. It was better not to risk exposing myself. Exposing my true identity and exposing my inner vulnerability. And, for a brief period that night, I really believed it. What had I been thinking? My actions even as they had been were far too dangerous, let alone talking to Michele.\n\nBut, as time passed, my certainty that I dodged a bullet eroded further and further. In moments when my guard wasn't up, I would slip back to those precious few moments in the bar when Michele was right next to me, when all I had to do was speak to her and I could not. In my mind I would engage her in conversation and feel the depth of our connection and then, somehow, learn something about myself. But then, I would shake myself out of my dream. Then I would tell myself to keep up my barriers, to not give in to the temptation and invite scorn. But with each passing day my thoughts about Michele and idea of connection grew stronger and my fears and anxieties (while still intense) grew less persuasive. Then, on Tuesday night, I was sitting on my couch, zoning out while watching television, and daydreaming about the time I spent with Michele in the bathroom of the pet shop. And suddenly, inspiration struck. I had an idea, one that seemed full proof. A way to speak to Michele and really get down to the issue I wanted to talk about, but in a way that would absolutely maintain my anonymity and shore up my personal barrier. The more I thought about it, the more airtight it seemed. I spent the rest of the night fine tuning my idea, working out the angles, and preparing to put my plan into action.\n\nSo that was why I was sitting in my car the next night, watching the door to the bar and also to the pet shop, wondering if I would see Michele. I had come around the time I figured an afternoon waitress would get off. I'd been there about forty minutes when I saw the door open and I saw a head with black hair step out. My heart started to race and I had the almost uncontrollable urge to slouch down in my chair. I thought about the reasons I had avoided any kind of human contact for all these years. I thought about my last night of sexual innocence with Dave, I thought about my bond with another waitress in Rita, I thought about my shattered body in the hospital, and I thought about humiliation and self-hatred. Why was I trying to step back out?\n\nThe rest of the person came out from behind the long dark hair. It was not Michele. It was an older woman who was much less attractive. I let out a sigh of relief. But, I realized, I hadn't fled. I'd wanted to, but I'd stayed. I'd waited to see what would happen. I took that as an omen and felt my spine stiffen. My plan was solid, I would stay safe if I stuck to the plan. I took a deep breath and waited.\n\nAbout an hour later, I was starting to think that regardless of my new-found confidence, that Michele wasn't there. I had assumed that she worked the same nights every week, but that was sort of a silly supposition I guess. When I was a waitress I hadn't had consistent hours. My back was aching from sitting for so long. I resolved to leave now and come back some other day. I closed my eyes and stretched my arms out in front of me, letting my muscles tighten and then relax. Then I opened my eyes back up. And there was Michele.\n\nShe had walked out of either the bar or the pet shop while my eyes were closed. She was standing right between them. She was dressed the same as she had been the first time I saw her, I guessed it was a uniform. She was walking through the parking lot. I looked to see what car she was taking, but, as she crossed to the far corner of the lot I didn't see any cars around. Then I saw where she was head. Right in the corner of the lot was a bus stop. I thought for a moment. Should I follow her home in my car? What if she wasn't going home? \n\nI debated for a few moments longer, but then I saw a bus pulling up the street toward the stop. I saw Michele start to jog a bit. It was her bus. I made up my mind, grabbed my keys and my purse and ran from my car. I was about 100 yards from the bus stop and I had to sprint to get there in time. Michele was already inside when I stepped, panting into the bus. I looked into the bus and saw her sitting in the back. The bus didn't have a back door, so I sat near the front, so I could see when she got off.\n\nListen, I know now that you are thinking I am a total creeper and you are right. I admit it. But I wasn't planning anything evil or anything. It wasn't so much different than looking up someone's information on the internet. I promised myself I wasn't going to cross any lines and if she ever said anything or did anything that indicated she was uncomfortable that I would stop. \n\nWe rode on the bus for what felt like forever. I felt myself getting antsier and antsier the longer things went on. I didn't know when she was going to get off and I had to resist the urge at all time to look back at her. I wanted to see her again, I wanted to be sure she was as beautiful as she had been the first time I saw her. I don't know why, I just wanted to talk to her. But something about the beauty of her body and the fact that she, like me, visited the gloryhole at the pet shop made me feel like she really did have something to show me.\n\nIt felt like we had driven for hours. I had never been in this neighborhood before and didn't recognize where I was. I knew from the looks of things that it was not a great place to live. Lots of liquor stores and empty store fronts. This made me feel a little bit hopeful. I know that sounds terrible, but I was afraid that she might live with someone and that could made her reluctant to talk to me. The fact that she lived in a place where a waitress in an expensive city could afford to live alone was a good sign.\n\nAt the last stop before the end of the line at the bus depot I was starting to lose hope. I looked behind me to see if she had somehow disappeared. She was still sitting in the back, no one else was around now. As the bus stopped she rose. I was ecstatic, I couldn't take anymore driving. I waited for her to pass me and then got off the bus as well.\n\nNow I was a little worried. I had to follow her and I was afraid of how to do that inconspicuously. I guess I didn't have anything to worry about. As we stepped off of the bus we were at an intersection. There was a large red brick apartment building right on the corner near the bus stop. Michele immediately started walking towards it. My already speedy heart rate started to race. There was only about twenty yards between the bus stop and the front door. Michele was only a few steps away from making it inside, I needed to act now.\n\n\"Excuse me,\" I said, my voice barely above a whisper. She was getting closer to the door. I needed to get louder, \"Excuse me miss?\" I said. Michele hesitated for a moment then kept walking. I had to pull out the big guns, \"Um, Excuse me Michele?\" I said. Finally she stopped. She turned and looked at me. She was smiling awkwardly and looking a bit nervous.\n\n\"Um, hello,\" she replied. I jogged slightly to catch up with her. She was looking around now. Like I said, it was a bad neighborhood. I think I was making her nervous. I smiled brightly and tried to put her at ease, \"Do I know you,\" she asked as I reached her.\n\n\"Um, well yes,\" I said. I had practiced what I was going to say a million times the night before and during the day, I had planned every scenario, but now that she was there I was tongue tied.\n\n\"I am sorry, I don't remember you,\" she said after a long pause. This was about to get very uncomfortable if I didn't do something soon. I needed to get it together. I took a deep breath and spoke.\n\n\"Yes, well we met briefly last week at the bar, where you work,\" I said. She kept the same look on her face, but at least she wasn't trying to run.\n\n\"Oh, a customer?\" she asked and I nodded. She shrugged awkwardly, \"So what can I do for you then?\" Now was the time. I had to jump into my plan. \n\n\"My name is Dr. Rose Malloy,\" I said. I figured that I could use my actual name, just throw a 'doctor' on the front. \"I am psychologist at the state university in town. I am actually an expert on human sexuality.\" Michele reacted instantly. She sort of backed away from me and her pale cheeks turned a dark shade of red.\n\n\"Oh, I don't go to college, I think you have me confused with someone else. I need to go, I am sorry,\" she said. I could see the dread rising in her. This confirmed to me that Michele was really the person I was looking for. Not that I had any doubt before. She moved like she was going to walk to the door, but I knew I had her now.\n\n\"Michele,\" I said more loudly than she would have liked, \"I am doing research on people who engage in anonymous sex,\" I stated. I figured all night that this was my best chance to get her to talk. I'd pretend I had a dispassionate reason for doing so and she would never know the difference. She looked completely startled and moved closer to me. I felt bad that I was making her nervous, but I promised that I would make her comfortable and that I wouldn't do her any permanent damage.\n\n\"Shh!\" she said and moved close to me conspiratorially, \"Don't talk about this stuff out here. I have to live here,\" she said.\n\n\"Michele,\" I said now in a very low whisper, \"I know that you use the gloryhole in the bathroom of the pet shop. I learned about that place online and I have been observing people.\" Her eyes grew wide as saucers.\n\n\"You have the wrong person,\" she breathed sharply. I smiled and shook my head.\n\n\"There is nothing to be ashamed of Ms...?\"\n\n\"Harper,\" she said and I felt good that she felt like talking.\n\n\"Ms. Harper. I am not here to judge you. I just want to ask some questions. Let me be clear and up front,\" I said. Here was the moment where my little plan would sink or swim. Here was where I ensured that I didn't do anything I was ashamed of. I gave her an out, \"I would like for you to talk to me about your experiences. There is absolutely no obligation for you to do so. Tell me to leave and I will. However, if you choose to talk to me you should know that I will offer you complete anonymity. You will simply be referred to in the research as a 'woman in her 20s.' Furthermore, if you choose to speak with me I can offer you a one-time cash payment of $1,000.00.\" \n\nI watched as she relaxed a bit as she started to hear me out, then I saw her eyebrows rise as she heard about the money. I had cleared out my checking account to make the promised accurate. I had no idea if that was something that a social scientist could even do, but I didn't think Michele would ask questions. I knew she was a waitress and $1,000.00 is a lot of money. \n\n\"So if I talk to you, then you just keep it quiet and sort of just use me like statistics?\" she said and I smiled. It had worked? Just like I'd planned, it was working perfectly.\n\n\"In essence yes,\" I said.\n\n\"If there are things I don't want to answer I don't have to?\" she asked.\n\n\"No. If you feel uncomfortable you can decline.\"\n\n\"And you give me money and then you won't ever talk to me about this again?\" She asked. This was the kicker. I didn't speak, I just reached into my purse. I had a small envelop inside. I opened it slightly and fanned out several hundred dollar bills. I looked up at her and raised my eyebrows. She looked down at the money, her already big eyes bulging from her head. She looked around briefly, nervously like she was wondering if this was really a good idea. But the allure of the money was too much. \n\n\"Let's talk inside,\" she said finally. I felt my heart skip and I had to be very careful to control my excitement. It took all of the self-possession that I had developed over years of pretending to be something I was not to avoid smiling or giving anything away.\n\nMichele turned now quickly and walked over to the front door. I followed her now. She unlocked the front door and we walked in. The lobby was dingy but not in awful disrepair. The paint was peeling and the carpet looked old. We walked past an elevator with an \"out of order sign.\" I could tell why she wanted $1,000.00. We went to a stairwell and made our way up several flights of stairs. The stairwell was even dirtier and uglier than the lobby. She didn't speak or look back the entire time and I could tell she was nervous. Finally, we got off on the fourth floor and walked to the first door after the stairwell. \n\nShe opened the door and we walked inside. \"I hate wearing this stuff,\" she said, pointing to her uniform, \"I am going to change before we talk.\"\n\n\"Sounds good,\" I replied. She walked to a different room.\n\nHer apartment itself was surprisingly nice for the unpleasant wrapping. I had walked into a small living room with freshly painted walls and a new couch against one wall and a chair opposite it. I could see on the far side of the room a bar with a galley kitchen behind it. Michele had darted into a room to the right of the kitchen that I assumed was a bedroom. There was no bathroom, but I figured it was through the bedroom. I decided to make myself comfortable so I would be harder to kick out. I walked over to the couch and sat down.\n\nA few moments later Michele returned from the bedroom. She had changed into a loose fitting sweatshirt and a pair of yoga pants. Her long hair was now pushed back behind a headband. She looked cute. I tried to keep that out of my mind. I was here for information. \n\nShe still appeared nervous as she left her little galley kitchen and took a seat on the chair opposite me. For a moment we sat awkwardly in silence. I knew what I wanted to ask, but didn't really know how to get started. \"So,\" she said, \"Would you like anything to drink?\" she asked. I shook my head. For whatever reason, her talking kick started things and I was able to talk.\n\n\"I appreciate it, thank you, but I think we should just dive in. I know you are bit uncomfortable so I would like to get started. That way, you will see there is nothing to worry about.\"\n\n\"Okay,\" she said. She pulled her legs up into the chair, putting them against her chest in a sort of modified fetal position.\n\n\"So let's just start then, how old are you?\" I asked. I had a few preparatory questions to get her warmed up. \"Nineteen,\" she said and I was a bit surprised, I had thought she was closer to my age. But, now that I looked at her she appeared quite young.\n\n\"And are you from around here?\"\n\n\"Yes,\" she said then she turned her head to the side, \"Aren't you going to take notes?\" Notes! I hadn't even thought of that. Of course I should be taking notes. I tried to control my reaction and thought of a good lie.\n\n\"Oh, uh no. I mean, sometimes people will take notes. But, as I said I want to protect your anonymity. Direct quoting could give something away. If I go based on my memory, which is quite sharp, I think that I can get the information while protecting you,\" I said. She nodded solemnly. That seemed to work. With that we dived back in. I asked the remaining preparatory questions about her job (waitress!) and educational background. We zoomed through them. The more I asked, and the more she saw my professional demeanor, the more comfortable she became. Finally, I felt we were ready to get into the heart of things.\n\n\"How long have you been frequenting the glory hole,\" I said and she winced. I hadn't meant to come out of nowhere with that, but I didn't know how else to get into it. She paused a moment, blushing deeply. \"Since about a month after I started at the bar,\" she explained, \"So like 8 months ago. I heard someone at the bar talking about it so I checked it out.\"\n\n\"How many times have you visited the glory hole?\" I asked, leaning forward.\n\n\"I don't know, probably a dozen or so,\" she said. She bit her lip as she thought about it, her eyes shifting away from me. It was sexy. I shook my head. Talking about this was already starting to turn me on. I had to keep it together, that wasn't why I was here.\n\n\"What sort of sex act do you engage in there?\" I asked. I just needed to ask the kinds of questions a sex researcher would ask. She laughed uncomfortably when I said that and I could hear her breathing. She pulled her legs in tighter.\n\n\"I, uh, I give blowjobs. That's all,\" she explained. I wanted to let her know that what she did was far more than a blowjob, but I kept that to myself.\n\n\"Do you pleasure yourself when you do so?\" I asked.\n\n\"No,\" she replied quickly and without elaboration. I decided to stop with the purely mechanical questions. I wanted to know what she knew.\n\n\"Why do you go to this place and pleasure men in anonymity?\" I asked. She sighed slightly and shook her head. I wasn't sure, but I thought I saw her breath hitch in her throat and her eyes glisten slightly. \"I just, I just like for no one to know who I am when I do that,\" she said.\n\n\"Why is that?\" I asked. There was clearly something to this, I needed to dig into it. I wondered if she was going to talk about connections between bodies and the liberation of anonymity. Something to give me hope. \"Do you feel that you reach people on a different level when the appearance of the body is removed?\" I asked, hoping I wasn't leading so far. She looked at me, confused. I saw now that the glisten in her eye was a tear and it rolled down her cheek. She brushed it away rubbed her beautiful mouth with her hand.\n\n\"What? No,\" she said finally. I felt shocked. What was happening here? I started to become nervous. I had hoped to open her up, not to make her cry. Why was she upset? \"Let's talk about something different now, like something less about my thoughts.\" \n\n\"Why then?\" I pushed further and ignoring her request.\n\n\"I go there because it is the only place I can go. I get so lonely and... I just feel so... I don't know,\" she said, breaking down in the face of my questioning. I felt like my legs were taken out from underneath of me. She was lonely? How could someone with such beautiful knowledge of the body and the ability to give pleasure be lonely?",
        "\"If you don't mind me saying,\" I persisted, dropping a bit of my affected professionalism, \"You are an attractive young lady. I imagine you could easily get a date if you were so inclined. There must be some reason you go to have anonymous sex instead. What do you get out of it that you can't get in a date? What makes it better?\" She looked at me viciously. Her eyes were inflamed and her face was flushed.\n\n\"You don't know anything,\" she said, \"This was a mistake, you can't understand,\" she said. I became nervous that things were rushing out of control.\n\n\"What do you mean?\"\n\n\"There is nothing better about that place. It is just better than being completely alone. It is better than just cutting myself out of the world entirely. But it isn't better. You don't understand that I can't get a date. Or that I could get a date, but that it wouldn't go beyond that. It is my destiny to be alone. This is just something I do to numb the pain. It isn't better,\" she said. I was shocked. I hadn't expected this at all. She sounded like...me. \"You don't feel some sort of connection to the people there? Something that gives you hope?\"\n\n\"Hope?\" she asked incredulous, \"No I don't go there for that.\" The tears were flowing now and she buried her face in her hands, \"What did I expect? I can't believe I did this, I knew what would happen? For a little fucking money!\" she said, crying harder now. It was clear she was talking to herself.\n\n\"You don't feel anything good about going there?\"\n\n\"I feel like when I have a ton of anxiety, I go there and I feel okay for a minute. And then I just feel ashamed but I don't feel anxious for a while. It is not good, but it is less bad,\" she said. I could see her biting her finger after she spoke, like she was trying to release some anxiety right then. Her range of emotions felt incredibly familiar. I felt dizzy and confused.\n\n\"I...\" I started to ask another question but she cut me off.\n\n\"I go there because I want to feel a little bit like other people get to feel. To have a person in their life that they make feel good. And to have that person want me in a way that no one wants me outside of that room. To feel like I am desirable and sexy and loving and loved. Just for a minute. That is why I go.\" She started to cry harder now. I felt completely out of my depth. It was like I was speaking to myself. She was so beautiful. How could she think these things? What sort of connection had I felt with her? Mutual pity.\n\n\"Michele, I don't understand what is wrong. Please explain it to me,\" I stated. I stood now and walked hallway across her living room to be closer to her. She looked up now, her eyes were red and she looked desperate.\n\n\"You don't understand what it is like to be me. You don't know what it is like to know that you are supposed to be alone. That people, if they really knew everything about you, that they'd think you were disgusting. You don't know what it's like to feel like you're only way to get a connection with a person is to suck it out of a stranger's cock in a dirty bathroom. Didn't you say that I didn't have to talk to you? I am done, I don't want to talk anymore. Please leave and don't bother me again. Here, I will give you the complete answer to all of your questions before you go. Why do I do what I do? Because I hate myself but hate my loneliness more. And you see a pretty girl or something and you think I am a slut and you can't possibly understand what it is like to be me. But thanks for letting me know that my self-hatred and my loneliness make me some kind of object of intellectual curiosity, that really fucking helps.\" she said.\n\nThis had all happened so fast. This was nothing like anything I'd planned. I stood in the middle of her apartment completely dumbfounded. She was still curled on the chair, her eyes closed and her cheeks glistening with tears. I felt horrible. I turned and started to walk away, I wanted to give her back at least a little of the peace I'd just stolen from her. I'd never wanted to hurt her.\n\nI reached the door and put my hand on the knob. Then I looked back at her curled, beautiful body. I saw the pain that was trapped inside that body. I had made it worse. I hadn't intended it, but I had been negligent with her. I had been so intent on pumping her for information that I'd disregarded her feelings. I pushed through her discomfort with lies and deceit. I'd breached the wall she'd clearly built around her insecurities. I knew what that was like, that was the fear I had every day. How could I leave her like this? More importantly, how could I fix it instead?\n\nFor a moment I just stood at the door, wondering what I could do. I tried to think of words of reassurance I could say to make her feel better, but there was nothing there. Just like she had no wisdom for me I had none for her. Words were insufficient. I thought of going to her and comforting her and telling her that everything would be okay. But would that be more lying? I had to act, but it had to be honest and it had to treat her with respect.\n\nA thought burst into my mind. It was white hot with the intensity of the truth contained within. But, like anything white hot, it promised danger and I recoiled from the strength of that idea. I felt my stomach tie up in knots and my heart pound in my chest before the idea was even fully formed. My nerves were completely on edge as I realized the only honest thing I could do. I had come into Michele's life with lies and promises and I'd torn away her shields. The only way to make it right was to tell the truth and bare my own insecurities. To throw her a lifeline in her misery, even if all I could add was that I did understand.\n\nI knew what that meant, but I didn't know if I could do it. But as I looked at this frail girl crying on the couch, I realized something. She was a young woman on her own for the first time and she felt crushed. She was exactly like I was in college. What would I have given for someone at least tell me at that moment I was not alone? Even if my savior had been at least as screwed up as I was, it wouldn't have mattered. If I helped Michele, it would be like going back and helping myself as well. That gave me the strength to let go of the doorknob. I walked quietly back through the room until I was standing just a few feet from Michele's chair.\n\nI stood for a few moments, my chest rising and falling and looking at her. Finally, she realized I was still there. She looked up with her reddened eyes with confusion and some anger.\n\n\"Why are you still here? Just go, I don't want your money,\" she said as her thin, white fingers flipped tears out of her eyes. Her voluminous lips quivered as she looked at me. Suddenly, my nerves calmed and I felt that I could go forward.\n\n\"You said that I wouldn't understand what you feel like to be alone. That I wouldn't understand why you'd go to that place for anonymous liaisons. I lied to you when I came in,\" I said, taking a deep breath to keep going. Michele's eyebrows furrowed but she did not move, \"My name is Rose but I am not a sex researcher. I am not a doctor. I go to that place too. I just saw you there and wanted to know if...if you knew something I didn't. Because...\" \n\nI realized there was nothing more to say, it was time to act. Michele still said nothing, she looked dazed, like I'd flooded her with too much information. That day I'd dressed up as I thought a sex researcher might. My hair was up, I was wearing a white blouse under a gray sweater, a long black skirt, and wedge shoes. I kicked the shoes off and pulled the pins out of my hair first. As I shook out my hair, I unbuttoned my sweater and let it drop onto the floor. \n\nMichele was no longer crying. She was looking at me as if I'd gone insane. Perhaps I had. But I also knew that I had a connection with her. I'd been right all along. We weren't bound by her knowledge of what it would take to make me happy or her sexual acumen. We were bound as two lonely hearts who had come to same place to feel some small measure of compassion. So I didn't stop.\n\nI started to unbutton my blouse quickly. It sounds crazy, but now I wanted to be out of my clothes. When the blouse was undone I threw it on the ground and reached behind my back and quickly unhooked my black bra. I let my bra slide down my arms and dropped it as well. Finally, this seemed to wake up Michele. \"What are you doing?\" she said in a far-off and distant sort of way.\n\n\"I am done hiding. I am done hurting myself and others for the sake of hiding,\" I said. Michele's apartment was drafty and I immediately felt my nipples harden in the cool air. I felt her eyes go over my body. She stayed on the chair, not sure of how to take my last comment.\n\nI found the zipper on the side of my skirt and pulled it down far enough for the fabric to loosen. My skirt pooled on the floor at my feet and now I stood, topless and in my little red panties with my guard as low as it had been in years. A brief moment of panic swept through me, but I kept my eyes on Michele, and on my younger self as well. It was time to accept who I was.\n\nI slipped my fingers into the waistband of my panties and bent over slightly at the waist. I gently inched them down and over my ass. As I slipped them, I grabbed hold of the edge of the tape that held my cock up against my body. I winced as I pulled it off in one motion. I slid my panties down and dropped the tape on top of them on the floor. Then I stood facing Michele. I was completely nude now, I looked down at my limp cock hanging between my legs and then looked back at Michele.\n\n\"I understand exactly what you feel because I feel the same way every day. But I don't want to feel that way anymore,\" I said. Here I was exposed to a person for the first time in years. I felt a lump in my throat and tears were welling in my eye. It was so intense.\n\nMichele was sitting on the chair with her head tilted slightly to the side. Her eyes were like saucers and her mouth was slightly agape. I could not tell what her expression showed. I thought perhaps confusion and curiosity, but in my heart I feared what it truly was: disgust and hatred. I felt extremely cold now and more alone that I'd been in a long time. I was out there. I had done what I thought was right, but I thought I'd just done something horrible to myself again.\n\n\"I know you,\" Michele said, just barely above a whisper. I looked down at her and she was looking up at me. Her eyes looked so innocent and lovely.\n\n\"What do you mean?\"\n\n\"Your...cock. I recognize it. From last week, last Wednesday,\" she said, more shocked than anything. I hadn't expected this.\n\n\"How?\" was all I could ask.\n\n\"There is a little freckle or something on the bottom of the tip, on the right side. I recognize it,\" she said. I looked at her lips and wondered what any of this meant.\n\n\"Look, I have broken so many trusts with you,\" I said, feeling nervous now, \"I just wanted to show you why I go to that place. I don't know everything there is to know about you, I just wanted you to know that you aren't the only person who feels that way.\" Michele nodded slightly. At least she wasn't throwing up or attacking me I guess. But then she looked up at me and gave me the same sultry smile she'd given me once through the hole in the pet shop bathroom.\n\n\"You know more than you think,\" she said. And, without speaking further, she grabbed the bottom hem of her sweatshirt and quickly pulled it up over her head. She wasn't wearing a bra and as the shirt landed in a pile on the floor with mine I saw the top of her body exposed. Her breasts looked large out of her clothes, big white mounds of perky flesh. Her nipples were small and the same wonderful pink color of her lips. Now it was my turn to be dumbfounded. I hadn't expect this, though I didn't know what I was expecting. \n\nNow Michele stood up quickly, her breasts bouncing freely as she did so. She grabbed onto the waistband of her yoga pants and quickly started to slink them down off of her body. She bent over as I had done, pulling them down her calves and then stepping out of them. Then she stood up. My eyes traveled down from her perky breast to the dramatic synch of her hips and widening of her hips. Between her legs, waxed completely bare, was a flaccid cock, around the same size as my own. My head swam. I couldn't believe what I was seeing. Michele was...just like me.\n\nWe stood opposite one another for a few seconds, both of us too in shock to do anything more. I kept scanning my eyes over her body. I couldn't believe how much better I thought her body looked like that than if she'd looked like a genetic girl. It was just perfect on her. I felt her eyes on my body as well.\n\n\"I have been thinking about you since that day last week,\" she said carefully, blushing a bit. Another shock.\n\n\"Why?\"\n\n\"The same reason you apparently followed me,\" she said, \"You felt it didn't you?\"\n\n\"A connection?\" I asked and she nodded, \"That, unlike the other little fun experiences, that there was something passing between us at that moment. Something we shared?\"\n\n\"I didn't know what it meant, I didn't think you felt it. I thought I was crazy,\" she explained, new tears in her eyes now, less bitter. I felt them too, falling from my eyes.\n\n\"I saw your lips, so unique, and I used them to find you,\" was all I could say.\n\n\"I try so hard to keep people away from me,\" she said and it was like I was talking to myself, \"I didn't understand how you could get into my head when I never saw your face and you didn't know who I was.\"\n\n\"I don't understand it either,\" I said, \"But it was the same for me. The fact that you could get through all of my defenses, it has to mean something.\" I said. She smiled. Suddenly, the need for human contact, the need that I suppressed at all times with every fiber of my being, overcame the last of my fear and my resolve. I took two steps forward and wrapped my arms around Michele's neck.\n\n\"Rose,\" she breathed as I did so. Not to say anything of meaning, just to say my name. I felt her arms reach around my body just a few inches below my breasts. I felt her hands pull me in tightly. Our breasts were pressed together and I could feel the heat of her body against mine. I leaned back slightly, so that I was looking deeply into her doe-eyes.\n\n\"Michele,\" I said back and she grinned with those beautiful lips and sparkling teeth. Then her face grew more solemn.\n\n\"How do you feel about the way my body looks Rose?\" she asked. She knew the answer, but needed to hear me say it.\n\n\"It is beautiful, I wouldn't dare change a thing,\" I said and a shuddering breath ran through her body. She nodded sublimely, \"And me? What about my body?\" I asked, feeling just as she had. I had longed to hear what she was going to say next my entire life. I felt every disappointment lying heavily upon me. All those people from my past. Michele could cure me with just a few words.\n\n\"You are perfect. I love your body,\" she said. I felt almost a decade of anxiety wash out of my body. It drained in a flood from my mind, dropped to my feet, and slipped into the floor. We were both still crying and giggling slightly as we held one another. I felt Michele's nipples against my breast and I looked at her lips. Those beautiful lips that had let me to her. I closed my eyes and leaned towards her.\n\nMichele's neck craned forward to meet me. I felt my lips press into hers. They were just as soft and inviting as I'd remembered, though this felt more lovely that before. I tilted my head to the side and luxuriated in the pillowy embrace of her lips. For a while we just offered a passionate, but closed mouth kiss. I felt her arms squeeze me tighter and our breasts were now mashed together completely. Finally, I felt Michele's mouth open slightly and I felt her hot tongue slide across my lips. I trembled at the feeling, but opened my mouth in response. Michele drug her tongue against my lips again, this time sliding between them and licking my desperate tongue. Her mouth tasted sweet and heady. \n\nI opened my mouth wider now and licked her lower lip slightly. She giggled and then moved her tongue more deeply into my mouth. My tongue found hers. In the wide cavern we now shared as a single mouth her tongue played along my teeth and gums, rubbed my tongue, and tasted deeply of me. My tongue did the same, I explored the taste and feel of her mouth. I enjoyed the sandpapery feel of the top of her tongue and the way my own tongue slid slickly across her teeth. I grabbed hold of Michele's tongue, sucking it with my mouth, pulling her into me and tasting her sweet saliva.\n\nEven while I was kissing her my hands were moving. My left hand snaked down Michele's back, feeling her spine and her soft skin. My right hand rose up, slipping until her thin neck and into her thick hair. Michele's hands massaged all over my back, slowly and with intense concentration. As she rubbed my muscles, she pushed me farther and farther into her breasts.\n\nBut now I sensed a new sensations. Michele and I were holding one another so close that would legs were pressed flat together. Even as Michele began to suck on my tongue, I felt the blood rushing between my legs. I felt my cock rising up between our bodies and I didn't feel ashamed of it. I loved her body and was glad that mine was reacting to her. More exciting still, I could feel her cock hardening. I could feel its bulbous, hard head pressing against my thigh. \n\nI broke our kiss and looked at Michele. I pushed back a little, placing my hands on her shoulders. That put a little space between us and I looked down between our bodies. Our breasts were just a few inches apart and, down between us, my cock was crossed against hers. I could feel the velvety smooth skin of her cock against mine. I felt like my body was overheating. What had started as a sweet hug and a closed mouth kiss was getting stronger. I was no longer just relieved and gratified by Michele's attention; I could feel the animal need to have her rising inside of me. And I didn't feel bad or disgusting about it. I could see in her eyes that she wanted it as well.\n\n\"Do you want to come to my room?\" she asked sweetly. I nodded. We broke our hug and Michele took my hand and started to lead me through the kitchen. I was a step behind her and I watched her firm young ass as we walked. I was completely checked out of all of my insecurities now, I was thinking solely of sex. And it felt liberating. \n\nShe pulled me into her bedroom and swung me around so that I landed back first against the wall. It was a small room, there was a bed in the middle. I am going to be honest, those details didn't really matter to me at the time. Instead, I was focused as Michele walked up where I was standing against the wall and pressed her body up against me again. I could feel her cock throbbing against my hip and her breasts hot against my stomach. Her hands came up and grabbed my left breast. She lifted it slightly and then turned her eyes up so that she was staring up at me. She bit her lower lips.\n\n\"Suck on my nipples baby,\" I said and she immediately dropped her head. I watched as my nipple disappeared into her mouth and gasped at the sensation. I'd never had this done to me before and it felt divine. Her skilled tongue swirled around my nipple while her hands massaged both of my breasts. My knees buckled against the wall, but Michele held me up against the wall. \n\nShe continued to suck while I ran my hands through her long, beautifully dark hair. I breathed deeply, arching my back into Michele's face. My mind focused on her tongue scraping across my nipple and her cock, bobbing into my thigh. I reached forward now, underneath her working hands and found her breasts. I felt my hands sink into her flesh and even flipped my finger across her hard nipple. I'd never played with anyone else's breasts before, she felt so soft and so pure.",
        "After a few moments of this, we were both unbearably aroused. We needed more than this. Michele was the first to articulate her desires, \"I need you inside of me Rose. Please, I need you to need my body!\" she moaned around my nipple. \n\n\"I want you so badly,\" I said, in an uncontrolled squeal of desire. I pushed myself off the wall now and Michele slinked back away from me. I gave her a gentle nudge. She tripped over a loose shoe in the middle of the room and giggled as she fell backwards onto her bed. She landed on her back, her large breasts jiggling up towards her neck. I saw the bright slash of her smile. Her legs spread wide as she fell and her hard, girly cock stood up from her body. I'd never seen a person look more beautiful. As she settled onto the bed she bit her lip and gave me a sultry look that made my knees feel weak and my cock ache.\n\n\"Come and take me Rose,\" she said hooking her little index finger, \"There is lube in the bedside table,\" she said. She started to gently rub her breasts with her hands. I almost didn't want to look away. It was fun to find someone sexy and have them act sexy around me. But I wanted more. I walked over next to the table and crouched down. I opened up her bedside cabinet and several long dildos clattered out onto the floor.\n\n\"Wow!\" I said, I'd never really thought of getting one of those.\n\n\"Yeah,\" Michele said, giggling and turning a little bit red, \"I get lonely. But I don't need those now, I just need you.\" I quickly searched around in the pile of fake cocks and found a bottle of clear lube. My heart was racing so quickly and I wanted it so badly my hands were shaking. I was trying to find the way to open the cap when the bottle slipped out of my fingers and landed on the floor.\n\n\"Damn,\" I said. I felt so nervous. Then, I felt a hand reach out and grab mine. I stopped moving. Michele was leaning forward now and she had taken my hand. She was smiling.\n\n\"Relax. I'm not going anywhere. I want this to happen,\" she said and the nervousness passed. The excitement was still there, but I didn't feel like essentially a virgin anymore. I felt like I was ready for this. I bent down and grabbed the lube and quickly opened it. I poured a big glob onto the palm of my hand. It was somewhat cool and slippery. I moved my hand down between my legs. I jumped a little as my hand wrapped around my cock and the cold gel prickled my skin. I started to stroke the lube onto my cock. I looked at Michele's body while I did so. Her feminine curves and softness and the jarring, but beautiful appearance of her cock was so lovely. I was so excited that I was afraid I was going to finish myself off.\n\n\"I need some too,\" she said. She scooted towards the edge of her bed and then spread her legs even wider than before. She even used her hands to pull her knees wider. Now she was completely open to me, her legs spread so wide that her tight little asshole was exposed. It was a cute little bud, it fit perfectly with Michele's body and sort of reminded me of her lips, pouty and pink. \n\nI squirted more lube into my hand. I leaned forward towards Michele. I could hear her breathing and I saw her chest rising and falling where she was laying on the bed. I reached forward. I was about to handle her body in a way I'd never really had the chance to handle someone before. With my unlubed hand I gently cupped her scrotum. She moaned loudly and I took in a suck of air. She was completely smooth and her balls were heavy and warm to the touch. I smiled and squeezed them gently and Michele writhed on the bed. I lifted her balls up and exposed her anus. It was just as pretty close up. \n\nI took my lubed fingers and slowly moved them towards her asshole. I held my breath; I don't know what I expected. Then, I felt my finger press against her skin. Michele moaned again and her hips rocked slightly. Now I felt my fingers press against the soft ridges of her asshole. Her skin was warm and if felt pleasant as I swirled the lubricant around it. I look and saw that Michele's eyes were closed and she was squeezing one of her big breasts. I pushed a little in towards her asshole, feeling the pressure there. I worked my fingers towards her tight opening.\n\n\"Don't push in!\" Michele suddenly moaned. I stopped moving.\n\n\"I wanted to lube inside...\" I said. I didn't know much about sex, but I knew that anal sex demanded a lot of lube.\n\n\"I want the first thing inside of me to be your beautiful, freckled cock,\" Michele moaned.\n\n\"But...\" I started. I didn't want to hurt her.\n\n\"I know what I can take beautiful,\" she said. And that little nickname dissolved any concerns. I needed to be inside of her.\n\nI stood up immediately and tentatively placed my hands on her milky thighs. I put a little pressure, spreading her legs wider. I looked down at her beautiful face and she looked back at me with animal hunger. No more words were needed now.\n\nI moved my left hand from her leg and carefully grasped my lubed cock. I guided it down slowly and felt as it slipped against the wet, hot flesh of her thigh. I looked down and guided the tip of my cock so that it was up against her waiting asshole. I looked now at Michele. Her eyes were wide and she was almost panting already. She looked like sex personified. She just nodded her head.\n\nCarefully, I started to press my cock against Michele's asshole. I felt the lube greasing the wheels, but there was still a lot of pressure. The tip of my cock felt like it was going to explode. Michele grabbed at the blankets on the bed, releasing her legs. She stayed with her legs splayed wide, but her fingers dug into her mattress. I kept pressing into her as the pressure grew.\n\nSuddenly, I felt a pleasant slipping sensation and looked down to see that the mushroom head of my cock had popped into Michele's sweet anus. The press was much less now, but my lover was very tight. I felt her insides squeeze around the tip of my cock. It felt almost like she was sucking me in deeper. \n\n\"Oh fuck, that feels so good!\" Michele groaned. And it did. It was amazing and indescribable. It felt like acceptance and understanding and perfection and sex and love and everything all rolled into one. But we wanted more. Michele now wrapped her legs around my body, her heels landing on my ass. If I had any reluctance about pushing farther, Michele did not. She dug her heels into my ass, pushing me farther and farther into her body. I felt a delectable sliding sensation as my rigid cock pushed deeper into Michele's ass. She was so tight, but her body gave way as I pushed, allowing me to be squeezed but sink farther inside.\n\nAfter a few moments I was shocked to discover that I felt Michele's balls sitting against my belly and my own balls sitting against her ass. I was completely inside of her. I looked down and saw where my prick completely disappeared. I felt her squeeze her bowels and I swooned. \n\nI looked up now. I saw Michele's hard cock staring straight up at me, hard and dripping slightly with pre-cum. Every time I moved inside of her it shook slightly. My eyes followed up her body, up past her wide hips, narrow waist, and generous breasts. She was propped up on her elbows. I looked on her face, seeing those sexy lips curled in agony and ecstasy. She looked so perfect. \n\nShe looked into my eyes now and moaned slightly. Her whole body shook and I felt her shimmy on my cock in a particularly lovely fashion. Michele then pushed herself up with one hand and then wrapped her other hand languidly around my neck. Soon both of her hands were around my neck and she pulled herself into an awkward sitting position on the very edge of the bed. This put gravity on our side and my cock pushed harder and farther into her wet asshole than I ever thought possible. I put my hands down on the bed to keep balance, leaning over her slightly. \n\n\"Jesus!\" I groaned. Michele smiled and blew some of my now-wild hair out of my face.\n\n\"I had always heard that sex was a way to see God, I thought they were talking about the orgasm,\" she giggled. I smiled back. Her legs tightened around me and I stared deeply into her eyes.\n\n\"I love you,\" she whispered, \"I feel I've always known you.\" It should've seemed absurd. I'd just spend a week stalking her after getting an anonymous blowjob in a pet store bathroom. But I know what she felt. I felt it too. I knew her because we were so alike. It was like I'd met my own battered sexuality inhabited in the body of another.\n\n\"I love you too,\" I said. I closed my eyes and leaned forward. Michele's arms slipped around my neck to the elbow. I felt our lips meet and our mouths opened. Our tongues once again met, but it was different this time. Our naked bodies were completely entwined and my body was inside of hers. There was something magical about this kiss or at least about this moment. I felt the entire world fall away and even the separation between myself and Michele. I'd never felt so light or so consumed by the gentle pleasure. I finally felt in my place in the world by falling out of it, by creating a new world in which two lovers became one.\n\nSlowly my senses came back to me. I broke our kiss and I noticed first that I was crying slightly, though I saw that Michele was as well. She giggled at me and didn't say any words. We both knew we were feeling the same thing. Then I noticed that my hips were moving gently. I hadn't noticed, but sometime during our kiss, I'd started to fuck Michele! I looked down as we moved and saw my cock moving slowly and methodically in and out of Michele's body. I never moved the tip out, but I pulled back as far as I could and slid into her slowly. She continued to squeeze me and the pressure was intense. It felt even better to be moving inside of her than it had to be still.\n\n\"Oh God Rose, you're hitting exactly the right spot!\" Michele gasped. It was clear that she was feeling something incredibly intense. I could feel her body trembling and her arms felt loose around my neck. I figured that if she liked it, I would just keep moving in the same way. I put my hands on Michele's hips now, giving myself some stability. Her skin felt taut and sexy beneath my fingers.\n\n\"Michele, you're so tight,\" I moaned as I labored to press my cock inside of her one more time. \"Oh god, I am so close!\" Michele groaned. Her eyes were wide and I felt all of her muscles tighten. Her hands slipped off of my neck and she fell back on the bed. Her cock and breasts bounced slightly as she landed. Her hands instantly rushed to her breasts, grabbing her nipples tightly. \"Fuck!!\" she moaned loudly. She tensed even more tightly now and then she suddenly let out a low moan. I felt her balls seize up sharply against my belly as I pushed my cock in again. I looked down just as Michele's cock burst.\n\nBefore that moment I didn't know that someone could cum from getting fucked in the ass. I didn't believe such a thing was possible. But I got a graphic and delicious demonstration. A huge white blob of cum spurted out of Michele's hard cock. She had been so aroused (and apparently gone so long without cumming) that it burst out of her in unbelievable pressure. I was looking down so the first big spurt hit me directly in the face. It splashed again my lips and nose and bits of it landed on my eyes and even into my hair! I jerk back suddenly, surprised by the force. But I had to keep watching.\n\nMichele's cock flopped back now. More cum was spilling out of it, but it was no longer shooting up into the air. Instead it was pointed up toward her belly button and big, messy gobs of sperm were splashing all over Michele's body. It hit her breasts, her neck, her chin, and a little of it even splashed across her lips. As I watched, I licked my lips absent-mindedly. I hadn't even really been thinking, but as my tongue returned to my mouth I suddenly remembered that there was cum all over my face. Michele's sperm was now in my mouth! For a moment I was uncertain, but then the flavor registered. I had never tasted cum in my life (not even my own) and I had believed that it probably tasted bad. But Michele's cum, oh my god, it was incredible! It was salty and sweet and delectable. I swirled it around in my mouth, letting the aroma percolate into my nose. I couldn't believe how much I liked it. As I watched the last few drops of cum dribble out of Michele's cock, I licked more of the cum off of my lips, coating my mouth with it, and then swallowed it down.\n\nBut then a strange thing happened. As the last of Michele's cum dribbled into her bellybutton, the muscles in her lower body tightened one extra notch. This included her bowels. I was buried completely inside of her asshole at that moment and I felt her body squeeze me. I was so overwhelmed by the sights, smells, and sensations of sex that this little extra bit of pressure was enough to push me over the edge.\n\nIt started between my legs I suppose. The pressure built there and then I suddenly felt it release. But this release was different than anything I ever felt before. It wasn't just a normal orgasm where sexual tension is released. Instead, I felt all of my muscles go loose as a wave of infinite pleasure rolled over me. It was more than my mind could take. I felt completely blank, every fiber of my being was absolute actively engaged in the act of feeling perfection. It was the exact opposite of everything I'd felt for the last decade. It wasn't the momentary sexual tension released through sex but an orgasm that released all of the tension I felt about everything in my life. It was a living death, that is the only way to describe it. I saw God.\n\nAnd then the pleasure slowly ebbed, taking the last remnants of displeasure with it. I came back to the world, my mind fuzzy and at ease, a silly smile plastered on my face. I first became aware that I was lying down now. I was actually lying on top of Michele, my head resting carefully on her generous breast. I must've pulled out of her ass, I felt my cock against her hip (just as I felt hers against mine).\n\n\"What happened?\" I asked when I could summon the strength.\n\n\"I don't know, I kind of lost it there for a moment,\" she said, \"That was...\"\n\n\"Indescribable,\" I said and she giggled. I rolled over a little and felt sticky. I realized I'd laid on her body, which had been covered in her cum. Now it was on me as well.\n\n\"Sorry about that,\" she said, running her hand along my belly where the cum had left a streak. Her hand still felt lovely.\n\n\"Don't be,\" I said, \"I love it.\"\n\n\"Plus, I guess that just evened us up,\" she said. I looked at her, confused.\n\n\"What do you mean?\" I asked.\n\n\"You fill me up completely. I didn't know anyone could cum that much! It's still leaking out of me onto the bed!\" she said. I don't know what, but that made me feel so good. To have filled her, to have eliminated a void. I leaned forward and kissed her once.\n\n\"I don't know how to thank you,\" I said. It was true. This was the moment, a moment after sex in the arms of someone with real affection, that I'd wanted my entire life.\n\n\"You don't have to thank me,\" she blushed, \"That was everything I ever wanted.\" Suddenly her face brightened, \"But...\"\n\n\"What?\"\n\n\"Well, if you wanted to thank me, I do have one idea,\" she said coyly. Despite the fact that I'd just cum, something about the way she said that made my body stir. \n\n\"What?\" I asked, in a more sultry voice now.\n\n\"Well, I knew we had a connection at that place where we met,\" she explained, blushing, \"But I was still a little disappointed. I mean, not with what we did, it was amazing. But, I wanted it to be more... I wanted it to...\" she started and it was clear she didn't know what she wanted to say. She decided to just act. \n\nShe quickly got up on her knees on the bed. I rolled over onto my back and looked up at her. Her body glistened from our cum and also from her natural lightness. I felt closer her now, if that was even possible. I didn't know what she was up to, but Michele quickly threw one leg over my body. Now she was straddling me, her knees almost at my armpits. I moved my arms so that they went over her calves. Her round, beautiful ass (indeed dripping with cum) was now looking me in the face. I felt the tip of her cock against the top of my breast. Michele bent forward quickly her hands moving to my thighs. \n\n\"What...\" I started, but then I gasped. I felt Michele's hands moved around the shaft of my penis. It was rapidly becoming hard again. I felt her beautiful lips, so familiar now, press up against the tip of my cock.\n\n\"Wait,\" I said, realizing what was about to happen, \"That was in...\" I was going to say her asshole.\n\n\"Me. It was in me before and I wanted it again,\" Michele said, \"And, this is exactly what I wanted to do with you in the bathroom stall. I wanted me to be in you and you to be in me. I wanted us to give and receive pleasure at the same time.\" And with that her mouth quickly slipped over my cock. It was even better than before. Her tongue was just as nimble but now seemed to know exactly what I liked.\n\nBut I wanted what she wanted. I needed to keep my end of the bargain. I got one of my hands underneath her body and found her now still cock against my neck and breast. Michele lifted her hips now, driving my cock deep into her warm throat but also exposing her cock to me. Her smooth balls were around eye level and her shaft was reddened slightly and very hard. With my hand I guided it back. Michele moved her hips slightly, accommodating me as I moved into position.\n\nWithin a few seconds I was lips to tip with her cock. I'd never sucked a cock before, in fact my face had never been in the close to another person's dick before. But Michele's cock was just as beautiful as the rest of her body. I wanted it inside of me so badly. I opened my mouth and stuck out my tongue. I felt Michele's body shuddered (and her throat close around my cock) as I did so. She tasted salty and smooth. It opened my mouth wider and slid her cock into me. It felt strange, but wonderful to have her inside of my mouth. Her skin was hot and I could feel the strong, hard muscle just below the surface. I bathed Michele's cock with my tongue. My eyes watered as it pushed into my throat.\n\nNow we were exactly where Michele had wanted us. Our heads bobbing up and down in the same rhythm. My cock was sliding in and out of her mouth and her cock was sliding in and out of mine. My breasts were pressed against her stomach and her breasts were pressed against mine. The room filled with the smell of our arousal and the sounds of slurping and moaning. Our sensations, our sounds, our smells, and our emotions rolled together in one. Her pleasure was my pleasure and vice versa. It built together as we sucked one another's hard cocks.\n\nIt did not take very long. We were too inflamed with sexual desire and too synched with one another's needs. I could feel the orgasm building inside of me. I put my feet on the bed and thrust my hips up into Michele's mouth. She thrust down with the same force, driving her cock deep into my throat and making me gag. As I gagged, my throat closed around her cock (just as she had done for me a week before). Feeling me gag, she seemed to know what was going to happen, and pushed my cock farther into her own throat, gagging as well. Now both of our throats were squeezing on another's hard cocks.\n\nMichele's body went rigid and I heard her moan though it was muffled around my cock. I felt her cock seem to expand inside of my mouth and then I felt her hot, salty liquid spraying into my throat. I moved my head back so the rest of her delectable seed landed in my mouth, filling it rapidly and coating my teeth. This sensation, coupled with the fact that I felt Michele's fingers teasing my scrotum and fiddling with my testicles, put me over the edge. The orgasm wasn't the same transcendental event I'd felt the first time. But it was magical in a different way. I just felt the waves of my own pleasure spread out from my own body and sort of run into the pleasure in Michele's. Our bodies writhed together, the great release of tension expanding and flowing as once. Our pleasures melding in a single pleasure, just as Michelle had wished.",
        "Finally our orgasms subsided and we both collapsed onto Michele's little bed. Our bodies were hopelessly entangled and we were both far too relaxed and sated to care. She pulled her cock out of my mouth and I did the same. We lay panting. I had saved Michele's seed in my mouth to that point and as I wanted to taste her forever, to make sure I didn't forget it. But I knew that this moment would not last forever. All I could do was savor it now. I swallowed it down and promptly fell asleep under the warm body of my lover.\n\nChapter 4: Freedom\n\n\"Rose,\" a man's voice said as I was shooting off an e-mail. I waited to make sure that it went through, not turning yet, \"Are you going out tonight?\" \n\n\"Sorry Dan,\" I said, recognizing who it was, \"But they waited three months after Debra left before they finally decided to give me a promotion, they just let stuff back up. I am not getting out of here until late\" I turned now and looked at the door to my new office. Boxes were still stacked up everywhere but it was nice to be out of cubicle after so many years at the company. And a promotion with a big raise didn't hurt either.\n\n\"Yeah, I know things have been crazy,\" Dan sympathized. Crazy was an understatement. \n\n\"I really wish I could,\" I said and I truly meant it. Everyone from the office went out on Fridays and I always hated to miss it. At least, I'd hated to miss it for the last year. Since that incredible night at Michele's apartment.\n\n\"And you know I normally wouldn't bother you, especially since the promotion, but it is Andrea's birthday, and you know how she is about everyone getting together on Fridays. We even let her pick a place near where she lives,\" he explained. My ears perked up at that. I thought I remembered where Andrea lived.\n\n\"Where are you going?\" I asked.\n\n\"Oh some chain bar and grill near the old Stovington Mall,\" he explained. A wide grin spread across my face.\"\n\n\"Hey Dan, you're right, I need to be there for this,\" I said, \"Let me make a phone call and I will meet everyone there in a bit.\"\n\n\"Great!\" Dan said, \"see you soon.\" But I was already making my call.\n\nFive minutes later I was on the road heading out towards the restaurant. I hadn't made this drive in a while and I couldn't believe how much had changed in the last year. It had been a little weird at first and definitely nerve-wracking. I had started to try to integrate myself back into society. I'd started at work. At first people were resistant. I had really hurt some people in my desire to protect myself. But I found strength that I hadn't had before. I apologized to people. I let myself get hurt to show others that I was sincere. I won my way back into the real world. And the odd thing was, that while it hurt at times, in the long run it was less painful. Hell, there was no way I would've gotten this promotion without letting down my barriers and becoming a better person. It was like I was now a newer, better version of myself. Hence the party invite.\n\nIt was a little before six when I pulled into the parking lot of this once-familiar bar. I glanced briefly over at the pet shop. It was still there, looking as dark and dingy as ever. I smiled a little to myself, remembering the place I'd been, all those months ago when I'd first gone there. It seemed like something different from a memory, like it was a dream. I don't know if it was a good dream or a bad one. I shook my head and then got out of my car and shuffled into the bar.\n\nEveryone from work was already there. A couple of people turned as I walked in and said hello. I found a spot at an open table and sat down with my co-workers. They'd already ordered and someone said they'd gotten me a burger. It was a nice evening. I had long since learned that most of my co-workers were really nice people and I looked forward to going out with them. We ate together and I made light conversation with people. I milled around the restaurant, dropping into conversations, laughing at funny stories, and sharing things of my own. I had a few drinks and sang along when we wished Andrea a happy birthday. It wasn't the best party I'd ever been to, but I was fully involved in it and it made me feel good. Whole.\n\nSometime a little before nine, a couple of people had already started to leave. I had an engagement as well. I stood up to leave.\n\n\"Heading out?\" a woman who I supervised, Lisa, said. I looked at her and smiled.\n\n\"Yeah, I have to get to work,\" I said. She stuck out her tongue but smiled back.\n\n\"We have karaoke coming up, sure you don't want to stay?\" Someone else, Andy, asked seriously. I put up my hands.\n\n\"Oh absolutely not, I can't sing.\"\n\n\"I don't sing either,\" he said, \"But you have to hear Dan make an ass of himself.\" I laughed, trying to picture Dan singing. I was actually tempted.\n\n\"Some other time, I promise.\"\n\n\"Your loss,\" Andy said but in a good-natured way.\n\n\"Have a good night,\" Lisa said sincerely, \"See you Monday.\"\n\n\"See you Monday,\" I said and started to walk towards the door. I nodded at people and waved goodbye on my way out. I stepped outside and breathed in the cool evening air. I had a smile plastered on my face that I couldn't have dropped if I wanted to. Everything just felt so right. I looked to my side, over at the pet shop and then checked my watch. Nine o'clock.\n\nI moved towards the pet shop, the opposite direction of my car. The lights were still on. I knew from experience that the place didn't close until ten. I wondered for a moment if anyone from my office was leaving at the same time, if they would see me. I decided not to worry about it. I walked briskly across the blacktop and grabbed the handle on the door.\n\nI walked inside and smelled the familiar, musty scent of the pet shop. I looked at the register and saw a college-aged boy casually reading a car magazine. He didn't even look up as I walked in. The animals seemed equally bored. I ignored them all and quickly walked towards the bathroom. \n\nI stepped inside and saw that everything was as I had left it the last time I was there. Three stalls, a sterile smell, and a dirty floor. I looked at myself once in the mirror. My face was brighter than it had been the last time I was here, less pinched at the eyes and more likely to smile. I stuck my tongue out and then walked toward the stalls.\n\nThis time I did something different, something I hadn't done since my first trip to the pet shop. Instead of walking toward the side stall, I marched directly into the middle stall. I turned, shut the door and sat down on the toilet. I let out a deep breath.\n\nHere I was at the site of my absolute lowest point in my life. I thought back to that day, when I'd run out of the bar to flee a man I was certain was dangerous, climbed into this room and hid in terror and shame. The same walking route I'd taken that night, but a million miles away in terms of mental well-being. It hardly seemed possible. I put my head in my hands, as I had that night, but I simply shook my head in my hands. \n\nAfter a few moments of rumination, I leaned back against the tank of the toilet and glanced at my watch. It was five minutes after nine. I had an appointment to keep. I lifted my hand now and rapped three times in quick succession against the thin metal separator between the stalls. I paused a moment and then rapped on final time, slightly louder. \n\nI looked towards the narrow, taped hole in the separator that I'd been extremely familiar with, at least from the other side. I didn't have to wait very long. After a few moments, I saw a 5-inch cock with smooth white skin, and a pink rounded tip push through the opening. I could smell it as well, the thick musky scent of arousal. It filled my little stall and made my mouth water. In a moment, I heard the metal crinkle and I knew that the person on the other side was pressed all the way against the separator.\n\nI quickly slid off of the toilet seat and dropped to my knees on the dirty floor. I was looking the cock, essentially, in the face. It was twitching slightly and just the sight of it made my mouth water. I felt my own cock stiffening underneath my skirt, pressing against my tight panties. Now I breathed in deeply, pulling the deep sexual scent into my lungs.\n\nThe tension was already building inside of me. I didn't want to wait any longer. I reached my hand forward slowly and then carefully draped my hand across the top of the stiff cock. The skin felt smooth and hot against my fingers and I felt the person on the other side tremble. I curled my fingers all the way around the cock, feeling the tense muscles under the silky skin. I stroke the cock once, dragging my hand back towards my face. I watched the skin bunch up around the tip of the cock, then slid my hand back away again.\n\nThe person on the other side felt completely rigid, I could feel their tension through the cock. I could almost picture someone, standing on their tip toes, holding their breath. In fact, at that moment I head a small hiss of air push through someone's lungs. But I was just warming my partner up. I wanted a lot more.\n\nI licked my lips once as I continued to stroke the cock slowly. I started to lean forward. I closed my eyes and dropped my hand from the cock as I did so. I felt the tip of the penis press against my pursed lips and smiled. Then I slowly opened my mouth. The person on the other side of the barrier thrust harder, making the barrier between us shudder. I slid my tongue out and raked across the bottom of the cock. I bounced it once gently on my tongue and felt a shiver run through my partner. It felt incredibly smooth and tasted salty. Heavenly.\n\nI couldn't go slowly anymore, I felt my body reacting more and more to the stimulation. I opened my mouth wider and leaned farther in towards the gloryhole. I felt the cock sliding across the top of my tongue and against my lips. The flavor filled my mouth and the scent grew even more intense. I opened my throat and let the cock slide deeper and deeper inside of me. It filled my mouth and pushed back against my throat. I gagged a little and felt my eyes tear up. But it felt wonderful and dirty, just like when I'd been on the other side of that wall.\n\nMy lover seemed to understand exactly what I wanted. As the cock found resistance in my throat, it started to pull back sharply. Soon, only the wet tip was still in my mouth. I swirled my tongue around it briefly, tasting the salty pre-cum. But then the cock was slamming back into my throat, hard. My eyes were watering harder now and it hurt as the dick slammed into me. But felt lovely also.\n\nIn fact, as the cock started to slam in and out of my mouth I found myself becoming more and more aroused. Even the pain, while real, felt good. It added to the pleasure I felt, having that cock in my mouth. I needed more contact. My hands were free, as I was letting my lover pound at my throat without restraint. My eyes were watering so bad that I couldn't see, but those hands knew what to do. One hand instantly grabbed for my blouse. I popped a few buttons open, reaching into my shirt. I lifted one of my breasts out of my bra, feeling the cold air of the bathroom against my skin. I started to rub my nipple gently while I squeezed the soft flesh of my breasts. At the same time, my other hand hiked up my skirt. I reached my hand inside of my panties, reaching desperately for my own cock. I pulled it out of one of the leg holes, wrapping my fingers around it. \n\nI don't know how long I was like that, time didn't really apply. I had my lips close to the glory hole and a cock was pushed hard into my mouth. At the same pace as my longer was pounding at my throat, I was grabbing my breast and stroking my own cock. The room was filled with the sights, smells, and textures of animal sexuality. It felt electric.\n\nI guess my lover felt it as well. After some indeterminate about of time, I felt my lover's pace lessen slightly. I felt them push hard into my throat, pull back slightly and then stop. I heard a noise on the other side and then I felt the cock sort of swell in my mouth. I felt the urethra against my tongue, expand and then contract. Then, I felt a hot, wetness against my tongue. A familiar and lovely smell filled my nose and a thick globs of liquid started to fill my mouth. The cock shot wad after wad of sticky cum against my tongue and my teeth. Soon it was pooling in my cheeks and I had to swallow some of it down to keep it from drooling down my chin. But I kept most of it, letting my tongue sink into it.\n\nAfter a few moments, the pace started to slacken and the last few dribbles of cum poured into my mouth. I felt the cock slide out of from between my lips and pull back into its own stall. I knew the rules in this place, I knew that the temporary breach in the wall was over and I was supposed to leave. But I also knew that the restrictive rules didn't mean anything to me anymore.\n\nI stood up from the bathroom floor quickly and thrust open the door of my stall. I rushed out into the bathroom and turned towards the stall next to me. I quickly grabbed the handle and flung it open. I took one quick step inside.\n\n\"Hell baby, happy anniversary,\" Michelle said, smiling at me in a sultry way. She stood in the stall, completely naked facing me with her hands on her hips. Her cock was still twitching from her orgasm and her face looked absolutely relaxed and happy.\n\nI smiled but said nothing. Instead I took two steps towards my lover and wrapped my arms around her neck. I heard Michele groan slightly and watched her tilt her head. She threw her arms around my waist and pulled me in. My cock was still pulled out of my panties and was actually holding my skirt up oddly. I felt it brush against Michele's naked thigh as we pressed together. \n\nNow I pressed my lips against hers, melting into those pillowy lips that had first drawn me to her. I felt them part slightly and I pressed my advantage. I slid my hot tongue into her mouth and felt her familiar tongue meet it. Then, without offering her any warning, pushed the big glob of her cum and my spit into Michele's mouth. The liquid still felt hot in my mouth as it spilled between my lips. Michele moaned in surprise, but allowed the hot glob to land in her mouth.\n\nSoon our kiss was becoming more passionate. My tongue pressed deeply into her mouth and then she returned the favor. All the while the cum and saliva passed back forth between our mouth, coating our teeth and sliding down our throats. We kissed with such abandon that soon some of the cum was dripping out of our mouths and our chins glisten. A few bits even landed on my breasts. Finally, when each of us had about half the cum in our mouths, I broke our kiss. Then I swallowed down my half. I leaned back a little and looked at my lover.\n\n\"Happy anniversary beautiful,\" I said now that my mouth was no longer full. I watched as Michele swallowed down her share and then giggled. She wrapped her arms around me a little tighter.\n\n\"You are nasty!\" she said, giggling louder.\n\n\"Says the girl who agreed to meet me in a dirty pet store bathroom on short notice!\" I said and she threw her head back and laughed.\n\n\"I love you,\" she said as her laughs subsided. I looked at her more closely now, and the joking mood started to dissipate. I thought about the woman in my arms and everything we'd been through together.\n\n\"I love you too. Thanks for letting me choose how we celebrated our new year. It know it is kind of gross here, but I needed to remind us of how far we've come. I couldn't have imagined a year ago where my life would be now and I couldn't imagine that I would ever find someone to love and someone to love me that is as perfect as you,\" I said. She smiled again, wider now and I saw tears in the corners of her eyes. I felt them too.\n\n\"You are sweet,\" she said and kissed me once on the cheek, \"But you are still nasty.\" Now it was my turn to laugh. It made me love her even more. How had I gotten so lucky? How as this my life now?\n\n\"Oh yeah?\" I asked, \"Show me how nasty you are.\" I turned and leaned forward against the door. I stuck my ass out far and then looked back over my shoulder, \"Fuck me.\"\n\n\"There's my girl!\" Michele responded. In half a second she was down on her knees behind me. I watched her still-hard cock bouncing slightly as she did so. She quickly grabbed the hem of my panties and pulled them down around my ankles. I watched her pretty head with her long dark hair as she started to lean in towards me.\n\nThen I felt her hands on my ass cheeks, pulling them apart. We'd given up on lube a long time ago. We'd found other options to be more...fun. Michele's hair cascaded around my ass and I felt her hot breath against my anus and my scrotum. \n\nI shook all over as I felt her face sink into my ass and her tongue press out slowly against my anus. I felt her tongue swirling around my crinkled opening. It felt hot, wet, and naughty. I felt as she lapped her tongue against my anus, covering it in her saliva (and probably a little bit of her cum). Then I felt her tongue probing into my asshole, pressing inside and spreading me. I felt the deliciously uncomfortable sensation of being spread open and I grew more and more excited as I felt myself being lubed up. \n\nFinally, I felt a cold rush of air as Michele moved away from my asshole. She stood up quickly and leaned over my back. I felt her hair on my back and her breasts pressed against my ass. Suddenly, her hand was directly in front of my face, palm up.\n\n\"Little spit honey,\" she said and I spat into her hand. I looked over my shoulder and watched as she slathered my saliva all over her cock, lubing her up as well. Then I felt one of her hands on my ass again, spreading my cheeks and giving her access. \n\nHer other hand was at the base of her cock and in a few moments I felt its hard tip against my wet anus. She moved her hand from my ass to my hips and started to guide her cock into my asshole. At first I felt intense pressure as she started to press into me. Not a pinching pain, but a dull thrusting pain. Then, I felt the tip of her cock press into my aching asshole. She moved her hand so that they were both now on my hips. \n\nShe pressed slowly but steadily, driving her cock deeper and deeper into my asshole. I felt my body start to relax, allowing Michele to move with more ease. I felt myself filling up but now the pain was subsiding. Pleasure took its place. In just a few minutes I felt Michele's stomach against my ass, her balls against mine. She was completely inside of me.\n\nNow she started to fuck me. Her cock slid in and out of my body, alternatively filling me and letting me loose. Each time she moved, the pleasure became more and more intense. My cock ached as she fucked me. I braced myself with one hand against the door, and with the other I reached and grabbed my breast yet again. I wanted to stroke my cock, but I wanted Michele to get me off more, so I held back. I was moaning loudly now, no longer caring what noises I made in this place.\n\nMichele and I reached a perfect rhythm, her cock slamming into me with perfect speed and depth. My hips rocked back into her, my anus holding her tight. Her cock was held tightly in my soft insides. Our pace started to move faster and faster as we both felt we were reaching something. I felt Michele's body pressing the exact right spot, I could feel the tension building inside of me.\n\nFinally, I felt the tension build to an unbearably crescendo inside of me. Every muscle in my body tensed, including my anus, squeezing Michele tight and preventing her from moving. I clenched harder, milking her cock. At the exact same moment, my lover Michele and I came. I felt Michele's cum pumping into my asshole and it was like she pumping pleasure into my body. As my ass filled with her warm cum I felt the electrical warmth of an orgasm spread from there and out all over my body. I felt my balls seize and thick ropes of cum shot out of my own cock, spaying against my breasts and the door of the stall.",
        "I knew that Michele was experiencing an intense orgasm as well. Our moans and groans filled the room together. I felt her fingers digging into my ass cheeks as she did so. Finally, after an almost impossibly long time, I felt my orgasm subside. Michele's did as well and I felt her now-soft cock slid out of my ass and send a shiver through my spine.\n\nI stood against the wall now panting. I felt light headed and my breath was sharp in my chest. For a moment, I was disoriented, not sure where I was or, more importantly when. I know it sounds crazy, but for a half second I wondered if I was back in time to the first time I'd felt pleasure here, if it now meant that it was time for me to rebuild my walls. I felt a shadow of that former isolation, that had trapped me for nearly ten years. I looked at the gray walls of the bathroom and didn't see a fortress, I saw a prison.\n\nBut even as I thought this, I felt Michele's soft hands against my body. I could feel warmth flowing through from her hands. I caught my breath and slowly, my mind returned to where I was and who I was. The panic that had briefly gripped me started to slip away. I felt Michele's hands spin me around and into a standing position. I felt her arms wrap around me and pull me in.\n\n\"I love you, I love you, I love you,\" she chanted into my each, raining kisses on my cheek. Any fears or discomforts I might have felt melted out of me. I wrapped my arms around her as well. These now familiar arms, a far more secure and happy fortress. I felt content in the protection of my love.\n\nWe stood there for a long time, holding one another and professing our love in the afterglow of intense physical pleasure. And there was absolutely nothing between us.\n\nThe End\n\nI honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence. Consider that your payment for the free story. And if you liked this, I beg you to read my other stories. Thanks!\n\nYKN\n\nP.S. - I do one edit on my work and I try to be thorough. But I figure when it comes to handing out free pornography you all would be better served by getting it fast (if a little rough) then waiting for me to polish it like I was getting paid for my work. So, in short, I know there are some errors and I don't really care that much. Just try to enjoy the porn.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "tranny on tranny",
        "shemale on shemale",
        "gloryhole",
        "public",
        "translesbian",
        "anal",
        "oral",
        "blowjob",
        "anonymous",
        "romance"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/glory-beyond-the-hole"
}