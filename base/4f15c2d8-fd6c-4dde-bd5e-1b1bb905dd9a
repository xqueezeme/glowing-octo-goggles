{
    "title": "The Artist's Hands",
    "pages": [
        "I don't normally take the bus, I used to think public transport was purely for the great unwashed, and perhaps I still think that. \n\nBut beggars can't be choosers, so I get the bus, among the great unwashed. The rain is pelting against the windows, and even though its early afternoon, the sky is ominous.\n\nThe seats are cheap plastic, look-a-like leather, and my skirt has risen and now my arse is stuck to the filthy surface beneath me.\n\nI would move, but there is a young guy with a do-rag (it looks to be for show) staring at my lap, and I really don't want to give him any ideas.\n\nI wouldn't even have to take the bus if not for my own stupidity, but its more than that, its deeper than that.\n\nThe young guy straightens up, I think he is going to get off at the stop, but instead he unties the head scarf, his hair is jet, soft and springy, his eyes are incredibly intense, and I know he can see me staring even though he has stopped looking directly at me. \n\nI wonder if my skirt is dangerous. Have I chosen to laud my sexuality in too much show?\n\nEver so slowly he moves in his seat, so that only I can see his hands. He slides the flat of his palm across his crotch, and even from the other side of the bus I can see the outline beneath his jeans.\n\nI feel a rush in my own crotch, and purposefully turn away from him to look out the window at nothing.\n\nMen and their cocks are the sole reason I am riding the bus today, so he for one can take his rock-hard gift and fuck off with it.\n\nI can not believe it has been six weeks since my world was turned on its head, but the relentless and pointless swishing of the windscreen wipers journey me back.\n\nI had sold two pieces of art in the gallery, one, a painting by Jane Masterson, my commission on that alone was a in the heady range of numbers. \n\nThe other, a work of sculpture by a new artist Philip Wilton. He was relatively young, five years my junior, but such a talent, and I was so delighted he had allowed my gallery to handle his work.\n\nFor his first sale I took no commission, I have been doing this job since my 19th birthday, and I know who will make it and who will be a fad. Wilton will be a name to remember.\n\nHe was grateful, perhaps too puppy in his gratitude, but my PA Nicola was smitten with him, and he was a potential earner. \n\nI sent him champagne, and a note to thank him for choosing me. I hoped Nicola would not fuck him though, I hate complications like that.\n\nSo, I made my way home on a high, delighted I had left Cava in the fridge in the hope of happy news.\n\nEven though it was still early spring there was a chill in the air, and my fumbling to get out of my coat in the downstairs hallway must have surely made noise to alert my arrival, \n\nI had said I would be late, but there was no car in the driveway, so I figured I was alone, and it seemed there was no husband home to greet me. I took my phone from my pocket to call him, as I headed to the kitchen.\n\nI never got to make the call. \n\nMy husband, Gerrard, might not have heard the call even if I had rung. \n\nHis cock was buried to the hilt in some Blonde bitch's ass, while his business partner Robert semi squatted in front of her face, his incredibly huge cock ramming down her throat.\n\nNo one heard me enter.\n\nThey say for stuff like this, time stands still. Let me tell you, they are liars.\n\nNothing was still. \n\nThe sounds are as loud and clear in my ears now as they were in my kitchen - Former kitchen, six weeks ago. \n\nGerrard's balls smacking loudly against the blonde's ass, her arse cheeks pulled so wide apart she was in danger of being ripped in two. Her grunts were pure abandonment, Robert was gasping while trying not to collapse in front of her.\n\nHer anus grabbing onto my husbands' cock, clear hand-prints red and angry against her flawless skin bore testament to the party being in rather full swing. \n\nIt was Robert who became aware first. \n\nAs my husband professed how much of a slut the blonde was and how he only wanted to fuck her to infinity (how fucking original) she released Roberts cock from her hungry mouth.\n\nBut he was not ready to end this game. He was there too, just at explosion, he opened his eyes to direct his upset to the blonde, and his cock pivoted towards his belly, he grabbed it angrily trying to point it at her, but his face showed little control.  \n\nHis eyes met mine.\n\nAt first incredulity, then shock, then a tiny glint of something. \n\nHe slid his hand over the length of his cock, a smile playing at his lips, he jerked his cock, almost angrily, now focused on drowning blondies' mouth. \n\nHe jerked twice and forced the blonde's mouth to the end of his huge cock as the cum exploded from it.\n\nI felt sick to my stomach. \n\nMy knickers were drenched, and the heat between my legs was horrifying me. I moved then, as she moaned out some words, as my husband bellowed his orgasm into her tight asshole. \n\nI walked into the middle of my Matt grey kitchen with the dark teak counter tops, and the marbled grey tiles all the way from a tiny village on a mountaintop in Italy.\n\nGerrard saw me, but his eyes were not sending messages to his body. It was still in the throws, and the blonde was not finished.\n\nHis cock stood hard still, throbbing wanting to shove into the her waiting pussy for one last hurrah.\n\nIt was the blonde who made the last move, no pawn here, she rear ended her pussy onto his cock, grabbing the full length of it, while holding tight to Roberts cock, stretching her neck now to lick the rest of the dripping cum from his balls.\n\nMaybe her words broke the spell my husband was under, I don't for sure know, or really care.\n\nBut she lasted only two thrusts, then raised her hips, and her splendid pussy exploded, while she screamed: \"You fucking dirty bastards.\"\n\nRealization dawned slowly.\n\nShe had to turn her head to see me, but her body collapsed on my tiles.\n\nThe two men were not yet back to earth, each holding his cock; for security, or to grab the last remaining Nanoseconds of utopia, I will never know.\n\nThe fruit bowl was a gift; a stupidly expensive, pointless gift from Gerrard's mother.\n\nPurchased at Harrods, by an Artist, she claimed. I knew it was a challenge to my expertise, but I did not rise to the bait. Instead I went in one day and looked. It was by an artist; a guy who used to be a chef, now turned glass blower. A total blower if you ask me.\n\nShe paid \u00a3475 for the stupid thing. Made of glass, with two tiny brass mounts, and claw feet. Ugly as fuck, it screamed money, and oh by the way you can fit four apples and a bunch of grapes here.\n\nSadly, it missed Gerrard's head. Happily, it shattered into a bazillion, noisy, tiny, extremely dangerous (for naked people) pieces.\n\nThat's when it all gets weird. \n\nTwo grown men screaming. \"What the fuck Anna?\"\n\nAnd I lost it. \n\nWhat the fuck Anna, while they were screwing blondie like a porno shoot?\n\nWhile they were inhabiting the kitchen I designed?\n\nIn the house I had dreamed of since I was 10 years of age?\n\nSo, I lost it. \n\nEvery fucking thing I could lay my hands on was thrown.\n\nEventually, when three people ran from my house, there was blood on the floor, many smashed items of crockery, a broken art deco lamp, some candles, and the smell of a sex orgy.\n\nI married Gerrard because he made me laugh, and he was hot as fuck.\n\nHe came into the Gallery in Eglington in London, where I was finishing my time working for none other than Joseph Tindall, before opening my own gallery on his retirement.\n\nGerrard, I knew immediately, was a boy about town, with his dapper suit, his chiseled looks, his fuck me smile, and money to burn.\n\nDaddy left him a fortune; offshore, and safe; from what form of endeavor is anyone's guess. \n\nMommy ensured the money stayed there by providing for his every need; financially.\n\nI was not on Mommy's list of things to do when one is bored.\n\nAnd, to be fair, Gerrard did all the running. \n\nDon't get me wrong. The moment I saw him I knew I would fuck him.\n\nI was a relatively innocent 22-year-old. A good life, great income, free spirit, but I hadn't been born with a silver spoon with any spoon in fact, so, I believed, I was no push over.\n\nThis intrigued Gerrard.\n\nHe sent flowers, cards, a chauffeur to collect me from work. \n\nI was so fucking wet for him, I sometimes thought I would die.\n\nBut I did not give in.\n\nUntil the night he fell. It was a simple fall, as we walked through my local park, I had refused to use the limo service his mother sent with him to spy on us.\n\nAnd he tripped, right over the root of an old gnarled tree.\n\nI began to laugh, nerves and too much champagne at dinner.\n\nI tried to help him up, but I couldn't get it together, and then, just as hysteria was about to burst out of me, I realized he was crying. Actual man tears.\n\nWhat the fuck?\n\nI was gentle, but he could not, for the value of his life, tell me what was wrong with him.\n\nWe hobbled to my flat.\n\nI bandaged the swelling ankle and poured whiskey down this throat, for the ache in his sore heart.\n\nHe told me then that he would never be enough for me, that I would discard him, that he could not measure up to the man I wanted, and he was devastated to fail for the woman he loved so much.\n\nThe best line ever spoken.\n\nIn less than five minutes I was naked, and the rest you can imagine.\n\nHis mother, Hilda, hated me.\n\nBut, we married, and to be fair, we had a great five years; or so I thought.\n\nMaking changes\n\nAfter the orgy, I closed my gallery for one day.\n\nIn the five years since I opened, it was the only day I ever took off.\n\nI was, thankfully autonomous with my business. Never wanting Gerrard involved, I left him and Robert to their monopoly money bets, which, always fucking worked to their advantage.\n\nI spent the day after the orgy numb.\n\nI called a service, and they came and cleaned without asking questions while I soaked in my bath.\n\nFor two weeks I pretended nothing had happened.\n\nGerrard called, cajoled, sent flowers, sent cards, but I sent everything back un-opened.\n\nAnd then, he arrived at the house, with his mother, and a man in a suit so expensive it made my eyes water.\n\nIn no uncertain terms I was advised of my rights. Prenuptial agreements, and documents with my signature were foisted upon me. All the time Gerrard's eyes pleading for a chance.\n\nThe sports coupe Mercedes, the Christmas gift, four months old became the camel's back.\n\nAnd as its customized paint of Burgundy Aruba glinted in the sunlight, I decided on a final act of defiance which makes me eminently proud and stomach churningly sick, in equal measure.\n\nInitially, I left. I left with my four suitcases and 5 boxes of shit, to mark the five years of lying bastard marriage.\n\nBut something inside me snapped as the removal man yawned his way through filling the tiny van.\n\nI felt the shift, and I knew I had to have one final smash.\n\nI returned to the house, past the 'security detail' on the pretext of leaving my phone in the bathroom.\n\nI grabbed the first thing to hand in Gerrard's drawer, and a lighter he used to melt his stash of weed.\n\nAnd as I passed, MY car, I threw a burning pair of his Italian designer boxers into it.\n\nAnd the weeks have passed, and today, of all days, Philip Wilton wants to come to my gallery and chat to me.\n\nThe me, who five weeks ago, had her shit together.\n\nThe tall, slim redhead, with too many freckles, and too much attitude would have been so excited.\n\nThis me was palpably sick.\n\nWhen the taxi was a no show, I screamed down the phone looking for another, then lost that plot and ran out of my flat to the high street, but I live in a bustling city, and getting a taxi to stop for a flame haired woman losing her shit is tough.\n\nSo, the bus just happened past, and on it I jumped.\n\nEven though the bus journey was too long, I am still early, but the rain is hammering down, so I run from the bus, I am soaked, through skin almost, by the time I get to the gallery.\n\nNicola, my assistant is there hugging a mug of tea, and laughs at my appearance.\n\n\"The cat drag you?\"\n\nI have no time, I run to the bathroom to dry off, and pull my grey silk shirt over my head, thinking a spin under the hand dryer will do.\n\nMy bra is sodden too, and my boobs are too big for it, spilling over the edges of the damp course material, and fuck it, I just don't need this shit, so I pull if off violently, not at peace with myself for taking the memory lane journey today of all days, and just when I pull the zipper of my skirt I turn full circle.\n\nPhilip Wilton, is not just looking at me, he is drinking me in.\n\nAnd I am a mess. My hair plastered to my head, the wet skin with the motley freckles, the semi discarded skirt, and the suddenly erect nipples, does nothing to say I am the agent you need to stay with.\n\nI have no idea if he was here the whole time, or just stumbled upon me, but he does not look too much like he wants to leave, and I have yet to react.\n\nI cross my arms, slowly, I admit, over my boobs.\n\nI grab a blue towel from over the door and sort of shelf it on front of me.\n\nI know there is a droplet of water heading from my hairline down my nose, but I blow it away, and hope, I look less ridiculous.\n\nI try for casual.\n\n\"Philip?\"\n\nBut it sounds, even to me, wanton.\n\n'Anna', there is a melody to his voice.\n\nAnd it's a release.\n\nHe looks at me like he is unwrapping a gift, and I hope to fuck my nipples are not begging.\n\nI have no clue what to say, so I simply say 'Sorry.'\n\nHe shrugs and leaves the tiny space we have occupied for almost five minutes and I am bereft.\n\nIt takes far too long to dry off my hair, re-apply mascara, and get fucking dressed, but when, eventually I leave my hiding place, I can hear Nicola and Philip laughing.\n\nIts an innocent laugh, nothing sinister, so immediately I need her to fucking leave.\n\nMy confidence is back, almost, and as I walk into the gallery, I take a moment to observe him.\n\nHe is tall, more than a six-footer, and his hands, which I noticed the first time we met two years ago, are hard hands, big, ready to work, to quarry stones, or mold a breast.\n\nHis eyes are dark, not brown or green, but murky, as though they hide secrets.\n\nHe does not look like an artist, I realize. He looks like a construction worker, or a carpenter, he looks strong, he looks like he could make any material bend to his whim.\n\nHe turns his head slowly, a mock smile playing on his lips. His head is bald, but his features are dark, there will be a growth of hair in a few hours, and it will attest to a dark-haired youth.\n\nI look at my watch. Only 4pm, but fuck it, Nicola needs to go.\n\nThe bell chimes above the door, and like liquid Nicola is gone.\n\nI am alone with this younger man, and suddenly I don't feel so self-assured.\n\n\"Give me a sheet of paper\" the words are spoken too gently, and for a moment, I wonder who has said them.\n\n\"A sheet of paper\" he says. \"Get me a sheet of paper, I want to write it down.\"\n\nI have dealt with the Artistes, since a young age, I know they are prone to drama, so I move, thankful of purpose to the printer and take a sheet of paper and grab a pen from Nicolas desk.\n\nHe leans over and beckons me to lean in close.\n\nHe writes with precision, fluid lines, definite swirls, and his eyes on mine.\n\nI read the message, as he hands snakes out to slowly move up my leg. He keeps moving until he finds the response between my legs.\n\nThe message reads:\n\n'I am going to fuck you till you scream this fucking place down, so keep her or leave her, I don't much care. But this is happening.'\n\nHis hand is rough, and to be honest I don't even know if they are the actual words on the page, I don't need to know.\n\nHe can do whatever he wants, and he knows it.\n\nHe moves his hand as we hear Nicola returning to the general area with an older lady in tow.\n\n\"This is Doris Payton, Philip, the lady I was telling you about. She would love to meet the artist?\"\n\nI can't move, if I do my legs will buckle, I will fall to the floor and shudder my way to an orgasm that might deliver a heart attack, to me and to the audience.\n\nHe offers Doris the hand which must still be damp from between my legs, and she almost bows over it.\n\nDoris is an exceptionally wealthy woman, a diamond on each finger just so everyone knows, but she is also a smart lady, and something tells her that the artist is not fully in residence.\n\nShe hands him a card, there is small talk. Exclamations, and cheek kissing before she leaves, darting an inquiring glance in my direction.\n\nI tell Nicola that I need to chat to Philip, and she can leave early, but she is so eager to stay that it takes almost 20 minutes for her to leave.\n\n20 excruciating minutes where I can feel him ignoring me, and I start to worry if the idea has gone cold, have I matching underwear on, are my legs shaved, and a million other thoughts.\n\nThe door closes behind her, and I lock it and press the button for the security grills at the same time.\n\nWhen I turn, he is sitting with his back to me and I falter.\n\nDo I really need complicated?\n\n\"Come here.\" His voice is a command, and I am not going to fuck around with coy.\n\nHe turns as I reach him.\n\n\"The first time I met you I wanted to pull that crazy blue dress over your head to find out what was underneath. You were hidden in it.\" He smiles, but suddenly the temperature is lower, I can not see this smile in his eyes.\n\n\"Take off your clothes for me. Now.\"\n\nI feel suddenly very alone, and the fight or flight instinct is screaming shit in my ear.\n\nMy skirt is still damp, it does not glide off in made for movie fashion.\n\nBut I shimmy out of it, aware he is watching me, almost clinically.\n\nI leave my underwear on, secretly delighted it is a matching set, my sex Angels must have been watching over me.\n\n\"You, are fucking stunning.\" He tells me as his hand reaches out to trace a line from my shoulder all the way down my right arm.\n\nI have Goosebumps on my Goosebumps, and my throat is suddenly very dry.\n\nHis hand circles my wrist, and he moves to take both my wrists in his hands. \n\nOne move pulls me to him, and he unfolds from his stool perch to press me tightly against the wall, the full length of his body pressing against me.\n\n\"I have imagined every way I want to fuck you. Slowly, fast, wet, slick, with screams,\" He grins then, \"with ties, with toys, with silence, or words, but trust me, I have fantasied so many ways, you may never get to open the door again.\"\n\nMy arms are stretched above my head, I am exposed to this fully dressed man, and I am prepared to beg to be fucked, but he is leading this charge.\n\nHis lips meet mine and his kiss promises pain as his tongue forces past my lips, hungry and cruel. He pushes my legs apart with his leg so that he can shape his groin into me.\n\nI think he might just fuck me now, right against the wall without preamble, and suddenly I am so wet I wonder did I cum?\n\nHis mouth moves down my face, my neck, stopping to lick the delicate skin behind my ear, holding tight to my hands, he bites, hard enough to cause a sensation.\n\n\"Naked fuck, or keeping this thing on?\" He asks letting my hands go so he can travel his hands across the lace of my bra.\n\nMy arms feel weak without his support, but I manage to unclasp the front catch and drop the bra to the ground.\n\nHe smiles, \"Fuck.\" His mouth sucks one nipple greedily, his teeth nipping while he pinches the other.\n\nThe heat is a flash of lightening and my legs are not enough to hold me up.\n\nHe stops.\n\n\"Don't stop.\" I yelp, shocked that my voice is such a slut.\n\n\"I am going to make you scream, you need to tell me you are ok with that. Otherwise, I need a whiskey and a cold shower, and a new gallery.\"\n\nHis eyes are warm again, warm and murky and I know he could make me cum just by talking to me, and I am fucking terrified.",
        "\"I am ok, I am so ok with this.\" \n\nHe takes my hand and pulls me to the back of the gallery, the meet and greet spot when we have an artist in to meet potential buyers.\n\nIt has a grey velour sofa, a small table, a lamp, some other shit that now looks to be in my way.\n\nHe gently deposits me, still in my knickers onto the sofa.\n\nHe pulls his shirt over his head, and in one move loses his jeans and his underwear. \n\nI have a moment when I don't know where to look. I am suddenly mortified, and unsure, and I realize that this man, this younger man, has all the control and I have none.\n\nHe kneels before me, his thumbs hook my knickers and he pushes me back on the sofa and pulls them, ridiculously slowly down my legs.\n\nThe cold of the aircon hits the dampness between my legs.\n\nHe pushes my thighs wide apart, then with excruciating slowness he begins to lick from my knee to my waiting pussy.\n\nHis mouth is hot when in gets there, his forehead presses into my tummy while his tongue snakes from my pubic bone down, lower, a slow kiss, then his tongue darts out, and there is a shot of electricity that rips through me.\n\nHe sucks my clit into his mouth, noisily lapping, he pushes my legs even wider while his tongue explores the wetness, ramming into my waiting pussy.\n\nMy head is thrown back, my fingers are buried in the expensive fabric of my sofa, and this man is fucking me with his tongue.\n\nI want to ask him to stop, it is way too soon for me to orgasm, but I can not find the words, instead my hand holds his head in place as I arch and grind against his mouth as every nerve ending erupts on fire and I scream some words that make no sense as his thumb slips into my ass and the world stops and ends with his mouth, and my pussy, and I explode, and he is greedy, his fingers probe, his mouth sucks every thing it can get, his fingers parting my arse to burrow deeper.\n\nAnd when I think there is no way this orgasm can keep going, he slides his finger into my ass and my muscles trap it there while I spasm like I never have before.\n\nI think this must be it. The end of the line, this is the moment I die of ecstasy my body becomes just a vessel.\n\nHe lifts me like a rag doll, I am a fucking rag doll, and he lays me with such tenderness onto the sofa that I feel a tear slip from my emotionally overwrought eyes.\n\nHe slides into me, and it is the most intimate moment of my life; without exception.\n\nAnd I am fully alive, and my legs wrap around his waist, and I pull him tighter and deeper, and he is saying words that I can not understand, and he is pounding into me, his hands are everywhere, his mouth is greedy on mine, a clash of lips, but his strength is guiding me pining me beneath him.\n\nMy eyes are watching his, and he pauses, for just the tiniest of seconds, a split universe. \n\n\"Now.\" He says.\n\nIt is a command he doesn't need to utter because I could not stop the flood between my legs if I wanted as he buries himself so deeply inside me, I feel every glorified inch of his cock. And he pummels me, bare moves that tell me he has the control while he fucks every iota of doubt out of me, while I scream nonsense words and he fucks me to within an inch of my life and then he bellows and I can feel his cock spurting inside me, his mouth is buried in my neck, his hands burning across my arse and I meet his cum, drenching him, the bull and the fighter conjoined.\n\nIt takes way too long for either of us to speak, I have begun to wonder if he died? only his heart is a jackhammer beat on my chest.\n\nHe raises his head looking at me so intently I blush.\n\n\"Bit late for crimson face love.\" He says in a fake cockney rasp.\n\nAnd the laughter from my belly is a release too. I was so scared in those moments as our bodies subsided from orgasm or the next part, the after-sex bit, the bit where the performance can still be ongoing or just done, and it's time for the movie star cigarette.\n\n\"Is it too late to buy you a drink love? 'Cos there is no way I am letting you go home tonight.\" I tell him, my cockney as good as his, but my promise is implicit that there will be much more fucking on this night.\n\nHe moves with fluidity, he is so in control of his body, his energy is like that of a trained ballerina.\n\nHe walks away from me, in command of his layout, and my body misses the connection immediately.\n\nHis ass is so tight I could bounce stones off it, his thighs are rugbyish, and I wonder how I never noticed his physique to this extreme before.\n\nAnd then the laughter bubbles out of me.\n\n\"I fucking hope you are not laughing at my ass.\" He says, and it is back to that dark voice and I realize I am fucking loving that dark voice, that danger just beneath.\n\n\"Nope. I am laughing that you have just fucked me, and this was not how I saw this going, and that you have such a bloody hot body.\"\n\nHe turns, and his cock is starting to get hard again, so my pussy reacts to that, but I don't move, I want to know what he is doing. He walks like he owns my space, with a sense of autonomy, and I realize he is going for the fridge, where we had the conversation two weeks ago after the sale of his second piece, where we opened the expensive champagne, where I said I hoped life would not continue to be so difficult, and I hoped champagne would taste like fun again.\n\nAnd he bends and takes a bottle with no regard for its price tag, and I fucking love that. He knows there is liquid cheer, and it doesn't matter if the grapes where shod by dinosaurs or divas, the taste will be divine.\n\nHe uncorks it, without finesse, and strides to me.\n\nHe pulls me up, and shares from the bottle the sweet fizz of Dom Perignon.\n\n\"You know, the first time I met you, you were so cool. You said, other galleries will offer you the sun moon and stars, but to them you are just a pay cheque. Do you remember?\"\n\nI did, so I nod, not sure why we are getting into deep territory and not really wanting to.\n\n\"You said, I will do what it takes for your talent to be known, not your name.\" He puts the bottle against my mouth, and I take a slug.\n\n\"I knew, that you believed in me, but to hear you say it. Fuck, that was hot. Some fucking guy who makes shit.\"\n\nI don't know what to say, so I stay silent.\n\nHe is intense, as he passes the bottle to me, I drink greedily, because I am not sure if this night is about to end, and I need to be soothed by numbness if it is.\n\nThe silence stretches, and suddenly I am aware of every sound, every movement, every inch of my body and his.\n\nThe bottle is passed back and forth, and he takes my hand.\n\n\"Anna. I want to fuck you. I want to fuck you and make you scream. I want you to lose yourself and let me in while you do it.\"\n\nAnd the bottle is gone, and the floor is beneath my arse, and his cock is inches from my face, and I want to taste him so much, my hands guide him into my mouth. I can taste cum, its mine, and his, and its salty and sweet, and I swallow as much of his cock as I can, more, his cock is making me gag, but I don't fucking care, because this moment is my freedom.\n\nHe is surprised at my intensity, and I feel him trying to hold back, but I want a piece of the control here, and I slide my finger under his scrotum, slowly, feeling, waiting for the moment he will tense, and he does, and I know I have found the place where the control is mine, however briefly.\n\nMy tongue glides along his cock, and he is so full in my mouth and I know he does not like this loss of control, his hand in wound in my hair, he wants to be rough, but he is reluctant, and my teeth nip the head of his cock, while my finger slips deeper at the base, and I can feel the change, the throb of cock in my throat as I suck in deeper, and my pussy gets wetter, and his body arches more to my face, the hand in my hair pulling the tiny strands of hair in frustration and delight.\n\nAnd he is grinding, and his cock is bouncing in my mouth, and I am gagging but I want to take him, and taste him, but he pulls out, twists me in one move and I am pinned across the stupid coffee table, and his mouth is behind my ear, and its one word.\n\n\"Ass.\"\n\nAnd I comply because I can think of nothing else but to please him, and to explode again for him.\n\nAnd his cock is at my ass, and there should be a moment where I hesitate, or let him have control, but I don't, I slide my finger into my asshole wetting it first, and it doesn't need lubrication, every part of me is on fire for this man.\n\nHe presses against me, and I know he is steadying himself, the feel of his cock pushes, he uses a finger to spread the hole.\n\nIt is slow, my body stretching to meet him.\n\nThe first entry is sore, I feel pain. I feel momentarily unsure, his hands find my nipples and he squeezes them, one at a time, slowly, they are connected to my clit, to my asshole, and they are the passwords for entry, because he is sliding into my asshole, and I can feel every single nerve in my body on fire, reacting, and there is a rhythm, and he is fucking my ass.\n\nThose hands that make sculpture in innate detail, have my cheeks spread wide now and his cock is ramming into me and I can barely keep myself on all fours, my arms feel like they will not hold me up, and my muscles tighten, and he has found that place where my nerves are strung together, and my ass feels wide and powerful, and I can hear him grunting as his hands pull my body back to meet his cock as he slams me I scream.\n\nI scream as he impales me on his cock, as my whole body explodes, as his cock fires inside me, as the wetness seeps down my arse cheeks, as he screams my name over and over.\n\nAs his body fucks into mine, as I meet him every move on the way, as he gets so deep into my arse our bodies are a single unit, and he is true to his promise as I scream the fucking place down as my body buckles beneath him.\n\nThis kind of joy doesn't happen every day, but as our bodies cool, I know I will get to fuck this man again."
    ],
    "authorname": "LavaIce",
    "tags": [
        "ass fucking",
        "creampie",
        "cum",
        "oral sex",
        "orgasm",
        "pussy",
        "screaming",
        "threesome"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-artists-hands"
}