{
    "title": "Kelsey's World Ch. 40",
    "pages": [
        "Barb hung up her work clothes in a locker at the gym, wearing her usual gray sneakers, skintight black leggings and Victoria's Secret sports bra. Wendy arrived a few minutes later than usual. She stood in the doorway, silently watching Barb, admiring her smooth, curvy ass, thinking how amazingly sexy it was for a woman of her age, or a women of any age for that matter.\n\n\"Hi Barbi.\"\n\n\"Oh, Hi! I didn't hear you come in.\"\n\nWendy leaned against the door frame and smiled knowingly. \"That's a cute nickname.\"\n\n\"Oh,\" Barb said, blushing a little. \"Did they tell you? How was your weekend?\"\n\n\"Amazing. We're all in now, Matt and me. I hope you're happy.\"\n\n\"From the look on your face I can tell you are,\" Barb smiled. \"Get over here. Tell me everything.\"\n\nThe two women sat on a locker room bench and Wendy spilled the beans.\n\n\"So, you know it was supposed to be all about evening things up, letting Matt spend some time with Kelsey...\"\n\n\"Yeah. Did he love it? That's a stupid question. Of course he did.\"\n\n\"He did,\" Wendy said, \"but there was more. As usual it was all Kelsey's doing. That girl just loves to make things happen...\"\n\n\"What did she do this time?\" Barb asked.\n\n\"She invited Richie and Abby, without telling us.\"\n\nBarb looked at Wendy's blushing face and immediately knew the rest of the story. \"Oh my God, Richie? I guess we're sisters in this crazy new world now. Oh my God, Wendy. How was it?\"\n\n\"Way too good,\" Wendy said, blushing even pinker. Goosebumps covered her bare arms. \n\nBarb hugged her. \"Wow. Okay, this is good. All that wondering and worrying is gone now, right? How's Richie?\"\n\n\"Remarkably unfazed,\" Wendy said. \"What is it with kids these days? Were we like that when we were there age? So accepting of everything?\"\n\n\"I think I kinda was,\" Barb said. \"But nothing ever got to the level Austin and Richie are involved in.\"\n\n\"When I was their age I never even knew these kinds of things happened,\" Wendy said. \"Swinging. Family swinging. I guess maybe it's always been a thing. I was just naive.\"\n\nBarb smiled. \"So, six of you on a beach. Now I wish I'd tagged along. Was it as good as I'm picturing?\"\n\n\"Better.\"\n\n\"What did you think of Abby? She's a cutie, isn't she?\"\n\n\"Oh my God!\" Wendy said quietly. \"That girl! Matt was blown away by Kelsey, but I think Abby got to him even more. It worked both ways though. It was easy to see the boyfriend's father thing was really big for her. She still calls him Mr. Nanty. It's just too hot for words.\"\n\n\"Mr. Nanty?\" Barb smiled. \"Oh yeah, that sounds like her.\"\n\n\"She gave him a handjob he may never recover from, when we were all on our towels putting on sunscreen. That was their first...encounter.\"\n\n\"Wow.\"\n\n\"It was funny, though. After that it was like they were letting the anticipation build, all afternoon and evening. They didn't...fuck...until we were all in the tent.\"\n\n\"You were all in one tent?\"\n\n\"Yup. A big one with two huge air mattresses that filled the whole thing. The girls put up twinkle lights inside it, so it sort of glowed. Kelsey seems to make everything magical, doesn't she?\"\n\n\"She does.\"\n\n\"She said it was like an Arabian harem. It really felt that way, with the sand and the lights, and Kelsey and Abby even did some belly dancing in the tent. They even got me to join in. Abby was the only one of us who sort of knew what she was doing. She claimed she was just improvising, but...have you ever seen her dance?\"\n\n\"No. I'd love to. She said there'll be programs we can go to when she's back at school next semester.\"\n\n\"That little body of hers, when it gets moving, oh my God. I don't know if I've ever seen anything so sensual. The look on Matt's face was...he watched as long as he could, and then he just threw her down and...oh my God it was hot!\"\n\n\"Wow,\" Barb said. \n\n\"I never knew I enjoyed watching so much,\" Wendy said. \"Especially my husband! It's just crazy how it affects me. Crazy!\"\n\nBarb smiled. \"That's how it's supposed to be. Kay's talked about that. She says if you get off watching your spouse fuck someone else, you know you're in the right hobby.\"\n\n\"She's got that right!\" Wendy said. \"Good Lord, Matt just about ruined that little girl, and she had this look on her face like it was the best thing ever. I had to hold myself back from cheering them on!\"\n\n\"You should have, girl!\" Barb said. \"Let it out. Kelsey does, and it always makes me smile.\"\n\n\"She was cheering enough for the both of us!\" Wendy chuckled.\n\n\"So, you and Richie,\" Barb said, with her eyes softly smiling. \"Now you know why I find him so irresistible. You and me, we share a special love for him.\"\n\nWendy's eyes misted up with happy tears. \"Oh, Barb. I remember you trying to explain how it is with you and Austin. Now I...I get it. It's just extraordinary, isn't it? I mean...I'm at a loss for words...\"\n\n\"I know,\" Barb said, hugging Wendy again. \"I know.\"\n\n\"It's sad, in a way, that it's so...taboo,\" Wendy said. \"It sounds crazy to say this, but I wish every mother could experience it. Do you think it's as deeply meaningful for our boys as it is for us?\"\n\n\"I've talked about it with Austin a little,\" Barb said. \"He gets the depth of it, but it'll never be what it is for us mothers. There's just something so spiritual about it. Did you feel that, or is it too soon?\"\n\n\"No, I felt it right away. I've never had a really good handle on what God is, but yeah, when I'm with Richie in that way it...it gets me way closer than church ever did, that's for sure.\"\n\n\"It's so nice to hear you say that,\" Barb said. \"I was wondering if it was just me, or if I was delusional or something.\"\n\nWendy hugged Barb again, holding her even closer and tighter.\n\n\"So I guess I can talk about your son's cock now,\" Barb said. \"He and Matt, is it uncanny or what?\"\n\nWendy chuckled. \"It's pretty uncanny. I mean, I had an inkling, but until you see them both hard...\"\n\n\"I can't wait to see them side-by-side,\" Barb said, dreamy eyed. \"Identical twin cocks. It's enough to make me into a D.P. lover.\"\n\n\"What's D.P.?\" Wendy asked.\n\n\"Double penetration, girlfriend. One in the puss and one in the ass. At the same time.\"\n\n\"Jesus! I guess I've heard of that, but...Jesus, Barb! You've done that?\"\n\n\"Sure. It's intense. I wouldn't call it my favorite thing, but it's fun, and with those twin hunks of hard you've almost gotta do it, right?\"\n\n\"Has Richie...done that?\"\n\n\"My first time was with Bobby and Koop, at my first party at Bobby and Kay's house. I sort of lost my mind that night. God I was slutty. But yeah, Richie and Austin have snuck into me a couple of times that way. I wouldn't have said no, but...in the heat of the moment they just ended up there. It's pretty wild. I get really noisy.\"\n\n\"Fuck!\" Wendy said quietly.\n\n\"I'm surprised Koop and Matt didn't try it out on your birthday. Guys seem to dig it.\"\n\n\"Does Richie like...anal?\"\n\n\"He's not super into it. Austin's more of the anal guy. Kay got him hooked on it.\"\n\n\"But...God, Barb, he's so big!\"\n\n\"Yeah, he'll fill you up down there, that's for sure. If you get into it, though, you haven't lived until you let Bobby in that way.\"\n\n\"Oh my God! There's no way it would fit. Your hole's so little! Is...mine like that?\"\n\n\"Yeah, yours is tiny and cute. You've got the classic little pucker hole. What's mine look like?\"\n\n\"Sort of smooth,\" Wendy said, trying to picture it. \"It's like a ring of skin that's smoother than the rest.\"\n\n\"So it's not ugly or anything?\"\n\n\"No. There's not a single part of you that's even close to ugly.\"\n\nBarb smiled sweetly. \"You too, sweetheart. God, I'm so glad we can talk about all this. Our men, our boys, our bodies. I've never had a friend like you.\"\n\nWendy smiled too, wide and warm. She unbuttoned her shirt to get ready for their workout and was quickly down to her gym clothes.\n\n\"I've got some news, too,\" Barb said. \"I feel a little funny about telling you.\"\n\n\"Why?\"\n\n\"Because...it's about Koop and me, and...I know he's your fantasy man.\"\n\n\"My fantasy man?\" Wendy smiled. \"It's not like I'm lacking for those lately.\"\n\n\"He called right after you guys left for the lake Saturday morning and asked if I wanted to come to his house for a barbecue that night, with Happy and Sharron. He was so cute on the phone, nervous...like a teenager. Of course I said yes.\"\n\n\"A real date! Wow! I've been bugging him to call you.\"\n\n\"Have you? I guess I've got you to thank, then. We all had such a good time. Happy and Sharron didn't leave until Sunday morning. I think they would have stayed even longer but Happy wanted to get home to watch the Indy 500.\"\n\n\"And you, Honey?\" Wendy smiled. \"When did you leave?\"\n\n\"Monday afternoon. I think maybe I've...found my man. I mean it's way too soon to tell, but...\"\n\n\"It's not too soon to tell!\" Wendy said, shaking her head. \"You guys are perfect for each other! Oh, Barb! I'm so happy!\"\n\n\"I was worried about telling you. I know how you like Koop.\"\n\n\"You're crazy! You shouldn't have worried! That's such good news, Barb. Wow, what a weekend, huh? We're both into...new things.\"\n\nBarb looked at her watch. \"I've got to be at work in forty-five minutes,\" she said. \"Wanna skip straight to the showers? Half an hour in there together should burn a few calories...\"\n\nWendy's sports bra was off before Barb finished her thought. Both of them were out of their tights and down to their little thongs in record time. Barb went to the door to see if any other women had come into the gym.\n\n\"Jesus, Barb! There's men out there! If you can see out they can see you!\"\n\n\"Maybe they want to join us,\" Barb said, giggling as she boldly stepped out into the hallway. \"Oh poo, they don't even see me. Should I wave my arms around?\"\n\n\"Get back in here!\" Wendy said. \"You're crazy!\"\n\n\"That's what Koop said to me Sunday,\" Barb chuckled. \"After Happy and Sharron left I wanted to lay out in the sun, but all I had for underwear was my red lace thong. The neighbor lady next to him got a good eyeful. She's a nosy nellie, isn't she?\"\n\n\"Marylou saw you like that? Oh my God, the whole neighborhood will be talking.\"\n\n\"Koop thinks she was keeping tabs the whole weekend, and Sharron and I weren't even close to quiet. Jesus, Happy's got a big cock, doesn't he? I'd almost forgotten. He really makes me sing.\"\n\n\"Marylou heard all that? Wow,\" Wendy said, pondering things. \"Fuck it, I guess, right? Who cares what the neighbors think. Matt and I aren't married to that house anyway. Wouldn't it be nice to have something private, like Bobby and Kay?\"\n\n\"What, do you think the neighbors are gonna run you out because you're a slut? Fuck them.\"\n\n\"I'm not worried,\" Wendy said. \"I thought I would be, but I'm not. It feels good.\"\n\n\"That's the spirit,\" Barb said. \"Come on, let's play for half and hour.\"\n\nShe took off her thong, tossed it on her clothes and sashayed her sexy ass into the shower. Wendy followed, pulled the privacy curtain shut, and soon the water was steamy and they were soaping each other up. Wendy stood behind Barb, with their bodies pressed together. Barb's hands reached behind, soaping Wendy's hips, and Wendy's hands were on Barb's tits, sliding slippery and bubbly, raising hard nipples and goosebumps. Both the girls moaned softly.\n\nThe moans caught Gilda's ear the moment she walked into the locker room. She recognized Barb's open locker, with the familiar dentist's office uniform dress hanging inside, and she was pretty sure Wendy's open locker was the same one she saw on that surprising day when she caught Barb and Wendy with Austin. Just as she was putting it all together in her mind, Barb let out a deeper, sexier moan, one triggered by a soapy hand on her wet clit.\n\nGilda's eyes opened wide. He must be back, that Austin boy! He's in there with them! Should I leave? Should I tell the girl at the desk? Maybe this kind of thing goes on. I shouldn't be a prude about it. Hell no, that's not me. I wouldn't rat on them. Oh my God, he's just...I've never seen such a perfect young man. That cock! I've been dreaming of it and it's here again! Shit!\n\nGilda didn't open her locker. She didn't want to make any noise, she just wanted to listen. Barb moaned again, soft but guttural, the sweet sound floating out through the billowing curtain with the steam. Gilda's body was reacting, her breath short, her heart pounding. She stripped off her clothes, wondering what she was going to do. Just stand there naked and wait for them to come out? Another of Barb's sweet moans drew her toward it. I'll just walk in, she told herself. It's a public shower. I'm allowed to be in there.\n\nShe pushed the billowing curtain aside and walked in as casually as she could. Her eyes grew with surprise again when there was no Austin, just two women in the steam, one leaping to her feet after being caught with her mouth on the pussy of the other. \n\n\"Oh, sorry,\" Gilda said, taken aback by the girl on girl action. \"I thought...That young man's not here?...\"\n\nBarb smiled a dreamy smile. \"Hi,\" she said, sounding relaxed and neighborly. \"We seem to be on the same workout schedule. This is Wendy. You sort of met...before.\"\n\n\"Hi...Wendy...I'm Gilda.\"\n\n\"Don't you just love that name?\" Barb asked Wendy.\n\n\"Yeah,\" Wendy said, a bit stunned from being caught in such a blatantly sexual position.\n\n\"Did you think Austin was in here with us?\" Barb asked, finally realizing what was happening.\n\n\"That's kind of...what it sounded like.\"\n\nBarb smiled ear to ear when she put it all together. \"You're as naughty as we are, walking in here like that when you thought there was a boy.\" She winked at the nervous looking woman. \"Wanna share our soap with us?\"\n\n\"I didn't even do my workout yet.\"\n\n\"Neither did we, sister,\" Barb chuckled.\n\n\"I really should...go,\" Gilda said nervously. \"I don't know why I...I'm not...I've never...\"\n\n\"Girls, you mean? Neither one of us had either until not too long ago. If you're curious...we're very friendly.\"\n\nGilda stood silently, unsure if she should go or stay.\n\n\"You can watch, Honey,\" Barb said, squatting down in front of Wendy. \"See if it looks interesting.\"\n\nWendy thought about putting an end to things, but she didn't. The fog of hot steam rising from the tiled floor gave a strange feeling of cover, like a veil she and Gilda were both hiding behind, with just enough transparency to satisfy both the exhibitionist and the voyeur.\n\nWendy wondered how she looked though the steam, with the pleasure on her face showing as Barb got started down below. Gilda must think I'm a slut, she said to herself, as air huffed out of her open mouth and her soapy hands went to Barb's head, holding it tight against her pussy.\n\n\"Fuck!\" Wendy sighed. \n\nShe knew she would soon be a goner, the way she always was when she turned Barb loose on her clit. It felt even more magical than usual, with her eyes locked on Gilda's through the steam. Gilda was standing sideways to her, not ready for a full-frontal face-off, but not shying away from watching.\n\n\"Jesus Barb!\" Wendy gasped, trying to stay as quiet as she could. \"Fuck!\"\n\nBarb smiled into the wet, soapy tasting pussy. She knew she had her friend right where she wanted her. Wendy was putty in her hands when things got to the heading-for-an-orgasm stage. There was no turning back, not that Barb wanted to, or Wendy either for that matter. The launch sequence was underway, and...\n\n\"Oh my God,\" Gilda said under her breath as she watched Wendy's orgasm. It was an amazing sight \u2014 Wendy's body spasming out of control as she fought to keep silent. Her face and her mouth looked like they she was crying out in exquisite ecstasy, but there was only muffled grunts and gurgles. Barb kept up the tongue-lashing assault, taking Wendy to that deep place she loved, lost for the longest time, finally reduced to a whimpering, mindless stupor, too weak to stand up on her own. It was a big one.\n\n\"Jesus,\" Gilda said.\n\n\"Isn't she awesome?\" Barb asked Gilda, smiling with love in her eyes as she held Wendy's scrambled body in her arms.\n\n\"Fuck, Barb,\" Wendy said quietly. \"Fuck.\"\n\nBarb led her over to Gilda. \"Let's all get soapy,\" Barb said.\n\nGilda didn't say anything. Water cascaded down from all four shower heads. The steam was thick when she felt the first touch, almost like an electric jolt. It was Barb's hand, and then another, with a bar of soap gliding across warm, wet skin. Wendy's hands joined in. Gilda wasn't prepared for the assault, but it felt wonderful, like some kind of magical massage. She wanted to reach out and touch the two women, but her hands stayed at her sides. Her chest heaved as air huffed from her lungs. Slippery hands slid across her breasts, around her back, over her buttocks and...\n\n\"Oh, Jesus...\" she sighed, standing still, letting the sweet pleasure sweep her away.\n\n\"Want Wendy to lick you clean, Honey?\" Barb asked, fingering Gilda's pussy gently.\n\n\"Yes,\" she whispered.\n\nBarb kissed Wendy and fingered Gilda's wet pussy a little more, and then Wendy dropped to her knees. She angled Gilda into the hot water to rinse most of the soap off the front of her, and then she was on her. Gilda moaned loud.\n\n\"Shhhh,\" Barb shushed her. \"Quiet, Honey. We can play every time we're here as long as we're quiet. If you're a noisy cummer I'll kiss you. Want me to?\"\n\nGilda nodded. Wendy's skilled tongue had already found her puffy clit, and she could barely take it. She needed a muffler, and she need it now!\n\nBarb smiled and kissed her. Gilda moaned into her mouth. Barb's hands resumed the soapy massage, concentrating on Gilda's tits as the deep, tonguey kiss moaned on. It wasn't long before Gilda was hanging on for dear life. She grasped Wendy's head, forcing it tight against her orgasming pussy. Wendy sucked the oversized clit and flicked her tongue furiously over it. Gilda screamed into Barb's mouth as her body convulsed. And then it was over.\n\n\"Damn, girl!\" Barb said. \"I bet the boys heard that one. You needed that, huh?\"\n\n\"Oh my God,\" Gilda said, looking weak and shell-shocked. That's...better than any man ever did...\"\n\n\"Really?\" Barb said. \"We need to introduce you to some new men.\"\n\n\"That boy...Austin?\"\n\nBarb giggled. \"If you want. Maybe some others first, though.\"\n\nGilda looked bewildered, still trying to get her scrambled thoughts together. \"Others? How many...do you know? They wouldn't be interested in me...\"\n\n\"Leave it to us, girlfriend,\" Barb said. \"You gotta keep this to yourself, though, okay? Unless you've got, like, one friend who's not a blabbermouth.\"\n\n\"How do you know I'm not one?\"\n\n\"Because you didn't rat on us when Austin was here. And you've been nice since then. Believe me, a lot of women would have handled it differently. Holy shit, I've gotta get to work! You guys can wash, I gotta run.\"\n\nBarb rinsed off and hurried out to get dressed. Wendy and Gilda followed. Barb threw her work dress on over a sexy bra. She didn't even bother with panties. \"Gotta run. Love you guys...\" she said as she dashed out the door.\n\n\"Her boss is nice but her hates it when she's late,\" Wendy said. It was the first words she'd spoken since Gilda's big orgasm.\n\n\"Oh, yeah,\" Gilda said, sounding and looking shy. She tossed her towel on the bench and put on her bra and panties. Wendy lingered naked, drying herself thoroughly. \"So,\" Gilda said, \"Barb said you guys are...new at this?\"\n\n\"Sex with girls, you mean? Yeah, kind of. What did you think? Was it okay? I hope we didn't...pressure you...\"\n\n\"No,\" Gilda said, smiling a little. \"I...I've always been...curious. And yeah, it was more than okay. I'm serious, I've never gotten there with a man. It's always been hard for me.\"\n\n\"Orgasms, you mean?\"\n\n\"Yeah. You're...the winner,\" Gilda said, blushing a beautiful shade of pink. \"Maybe we can...do it again sometime?\"",
        "\"I'd like that,\" Wendy said, smiling, looking confident in her new role as mentor. What would Kelsey say, she wondered. \"Have you ever done a threeway?\"\n\n\"No!\" Gilda said. \"With men, you mean? I'm...not very experienced.\"\n\n\"Yeah, men, or a woman and a man. Couples like to bring in a nice woman sometimes.\"\n\n\"Really? Married couples, you mean?\"\n\n\"Yeah. You've heard of swinging, right? Open marriages?\"\n\n\"Yeah.\"\n\nWendy's heart pounded. \"Would you like to have dinner with my husband and me tonight, at my house?\"\n\nGilda looked surprised. \"You mean...you? You and your husband are...you have an open marriage?\"\n\n\"Would you be interested? It's okay if you're not. Let's just keep this between us, okay?\"\n\n\"Oh, sure, yeah. I wouldn't...talk about anything.\"\n\n\"I know this must seem crazy,\" Wendy said. \"You haven't even met my husband or anything, but...that's sort of what makes it so hot, right?\"\n\n\"Yeah, you're right, it is crazy,\" Gilda said. \"I can't believe I'm asking this, but...what's he like?\"\n\n\"Barb thinks he's really sexy, if that counts. He's our age. Really cute. Handsome cute. And he's really good in bed.\"\n\n\"I haven't been with a man in...it's been a while,\" Gilda said, smiling sadly. \"And the last one was...less than optimum.\"\n\n\"My Matt sounds like the perfect antidote,\" Wendy said. \"And you already know me pretty well.\"\n\nThe two women smiled sweetly, remembering the taste and the feel of what happened in the shower.\n\n\u2014\n\nMatt watched the head of his cock cleave through Gilda's dark, flower-petal-like pussy, disappearing into the pinkness inside.\n\n\"Oh, fuck Gilda!\" he gasped, as he went deeper. \"You feel incredible!\"\n\nGilda gasped, too, and the thrill of Matt's words took her to a better place. The situation was already plenty exciting for her \u2014 naked in a strange bedroom with her ass in the air and a stupidly handsome man's hands on her hips. His cock was gorgeous, as nice as any she'd ever seen in her limited experience, and the feel of it slipping so perfectly into her, combined with his breathless words, was...\n\n\"Oh!...Oh!...I'm...I'm!...\"\n\nGilda's body shuddered and her core tensed and released over and over, forcing tender little moans from her clenched throat.\n\n\"She's cumming, baby,\" Wendy said softly, bending low to kiss the deeply orgasmic woman's shoulders and the back of her neck. She scooped Gilda's tits into her hands, and Gilda's throat opened, letting out a long, guttural groan as the deep fucking drove any sense of the real world out of her hallucinating mind.\n\n\"Fuck!\" Matt hissed, thrusting steady and deep, trying to hang on through the blistering heat of the moment.\n\n\"Fuck her, baby,\" Wendy said. \"She'll cum again. I can feel it in her.\"\n\n\"Ohhhh!\" Matt groaned, picking up his effort, bottoming solidly with thudding slaps against Gilda's ass.\n\nGilda rose up on her arms, gasping for breath, her eyes wild with lust and surprise. Never had anything like this happened to her. She'd only had a real orgasm once at the hands of a man, and it was oral, a one night stand that had thrilled her with her one and only sixty-nine. And she'd never cum twice, not even with her well practiced vibrator technique.\n\n\"Yeah baby, fuck her hard,\" Wendy said. \"She's almost there.\"\n\nWendy rolled onto her back with her head under Gilda's hanging, swinging tits, gathering the surprised woman's soft flesh in her hands and sucking in one nipple and then the other. It was more than Gilda could take.\n\nAll three of the participants moaned and groaned as Gilda lost it. It was a beautiful display of feminine orgasmic energy breaking through the bounds of control. Gilda was even more lost in the glory of it than she was the first time, and Matt couldn't hang on any longer. Gilda felt him pull out. She turned her head to see him, lost in her psychedelic haze, and watched as he pumped ribbon after ribbon of splattering warmth all over her. Wendy was still sucking on her tits. Matt's face was glorious. Cum was flying. Gilda felt every splatter, warm and perfect on her skin. She knew she'd never want to bathe again, so it could stay there forever, the smell of it and the feel of it reminding her of the most perfect sexual encounter ever.\n\n\"Ohhh Godddd!\" Matt grunted, as he squeezed the last dribble out of his throbbing cock with his pumping fist.\n\n\"What do you think of my hubby, Honey?\" Wendy asked, between mouthfuls of hard nipple. \"He's good, huh?\"\n\nGilda groaned. There were no words she could come up with, or spit out. Her tits felt electric in Wendy's hands and mouth, and Matt was moving in for his own tonguey assault on her ass.\n\n\"Oh-hooo!\" Gilda gasped when she felt his stubbly cheeks between hers, and his wet tongue on her most private openings. \"Goddd!\" she yelled.\n\n\"Yeah, girl,\" Wendy said. \"You ready to go for number three?\"\n\n\"Oh my God!\" Gilda said, finally able to string a few words together.\n\n\"Let us take you there,\" Wendy said. \"Let us take you...\"\n\nGilda's eyes rolled when Matt's tongue worked its magic on her clit. It was really too much for the super-sensitized button, but the word stop was nowhere to be found in Gilda's wildly spinning mind. 'Let us take you...' was all that was echoing in there, and then there was nothing \u2014 a strange silence overtook her, like she'd gone suddenly deaf, and the feeling of being taken was complete. She surrendered to four capable hands and two extraordinary mouths, and orgasm number three washed over her like a heavenly wave, so different from the first two, and yet just as powerful.\n\nMatt and Wendy rolled her gently onto her back when the intensity had passed. They snuggled against her sides, each with a lovely, goosebumpy tit in their hand. Gilda had happy tears in her eyes. She tried to focus on the ceiling while she made sense of things, but neither thing was easy to do. Joining a married couple in their bed had seemed so impulsive and crazy, but the end result, so far anyway, was heavenly.\n\n\"How often do you...do you pick up women often?\" she asked, her chest still heaving gently against her new friends' soft, warm hands.\n\n\"You're the first,\" Wendy said, smiling happily at the thought. \"We're pretty new to the swinging thing. I hope you're as happy as we are right now. This is really exciting for us.\"\n\n\"Yeah, I mean...exciting's not really the right word, is it,\" Gilda said, still looking up at the ceiling. \"That was...unbelievable.\"\n\nShe glanced out of the corner of her eye at Matt, unsure if she could make eye contact with him yet, but when she saw the sweet, sexy smile on his face she giggled and looked at him. \"I don't think you're new to any of this,\" she said. \"You seem to know what you're doing.\"\n\n\"Just makin' it up as I go along, Sweetheart,\" he said. \"You make it easy.\"\n\n\"Guys love girls who respond like you do,\" Wendy said. \"I could tell you were fun when we were in the shower.\"\n\n\"I didn't even know,\" Gilda said. \"I've never...had a chance to find out, I guess.\"\n\n\"What's the verdict?\" Wendy asked, letting her hand drift down to Gilda's still sensitive clit. \"Wanna be a swinger slut like me and Barb? It's the best hobby ever.\"\n\nGilda gasped for breath when she she felt Wendy's fingers hit her hot spot. She looked up at the ceiling again, her tits heaving on a high arched back. Matt went at them with his mouth, holding her up in the sexy arch with his hand underneath her. Wendy sat up and shifted herself, on her knees next to Gilda's shoulders, so she could go down on the heavy-breathing woman's pussy. She reached for Gilda's hand and guided it to her own wet pussy, wondering if Gilda would be interested in it. She was. Tentatively at first, but she was definitely interested.\n\nAfter Wendy's mouth got going on the tender, well-fucked pussy flesh, she lifted her leg, nudging Matt out of the way with it, settling over Gilda's body for some sixty-nine. Did Gilda want to go that far, Wendy wondered? Soft, kissing lips on her pussy gave her the answer. Gilda moaned into the flavorful flesh. Matt sat back and watched.\n\nThe two women were locked together in the carnal embrace, arms wrapped around thighs, mouths and tongues connected directly to the pleasure centers in each others brains. Gilda was astonished at the sensations lighting up every molecule of her being. The taste and the scent of a woman was nearly overwhelming her, making her drool like a slobbering fool. An orgasm was rising in her, and she could tell Wendy was rising to the same place. Being lost in that kind of sexual depth with a woman was thrilling beyond words.\n\nOne orgasm triggered the other, both women writhing in each others tight embrace, gasping and moaning, and there was a shriek or two, ricocheting of the walls of the small bedroom. Matt smiled. The last thing he expected that day was a brand new woman in his bed. He and Wendy had talked just two nights before about how delighted they both were with the swinging lifestyle. Gilda's shrieking gasps of sexual delight cemented both their feelings. Swinging was just as awesome as they'd hoped it would be."
    ],
    "authorname": "riverboy",
    "tags": [
        "first time lesbian",
        "gym",
        "public",
        "three women",
        "shower",
        "swingers",
        "mmf",
        "threesome"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/kelseys-world-ch-40"
}