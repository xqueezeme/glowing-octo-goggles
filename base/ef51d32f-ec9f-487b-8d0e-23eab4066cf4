{
    "title": "Loosening Up Bk. 07 Ch. 30-33 - End",
    "pages": [
        "<center>Chapter 30 \u2013 Culture Vultures</center>\n\n\"I should have asked, but how do you go about determining what the culture or ethos of a business is?\" Dave and Ginny were sitting on the sofa in his EneRG office.\n\nGinny stood and went to the flip chart in the corner of the seating area. She turned to a blank page and wrote: traits, behaviors, leaders, and measurements. Opposite those terms she drew a line and wrote clan, adhocracy, market, and hierarchy.\"\n\nShe turned to Dave, \"Let's define some terms. By the term 'culture' we mean the social and psychological environment of a business. It includes how people interact, their resistance patterns, how they share knowledge, the values and beliefs of the group, the stories that they embrace, and the sometimes unwritten rules about how business really gets done. All types of things influence it: history, group lore, past behaviors and major events or milestones, technology, skill base, market, products, management style, the industry or setting it is in, its vision, norms, systems, symbols, language, assumptions, environment, location, and habits. I probably forget a few things, but you get the idea. Everything impacts a group's culture to some extent.\n\n\"Think about two large companies that have vastly different cultures. I'll pick Apple and Exxon Mobil. Do you think they have the same cultures? They're both big, rich, providing critical products to their customers, and so on.\"\n\n\"No, not at all. Apple became almost a cult built around Steve Jobs. It's innovative, design sensitive, customer centric, and wants to see major changes in how its products shape society. Exxon is a big, dinosaur of an oil company. They turn the crank and out comes petroleum products.\"\n\n\"Right, so expect your culture to be different from others that you think you know about.\"\n\nDave said, \"So, we're talking about two groups: the Circle and EneRG. Both are important to me, as well as to the many others around me in both settings.\"\n\nGinny smiled, \"I'm going to wander around both groups and interview people. I want them to tell me what makes the Circle and-or EneRG great and not so great? What guides their behavior in those settings? I'll gradually develop a model for each group, something like what I wrote on the flip chart. Those are some of the things I'm looking to hear. They're standard models popular in consulting circles dealing with the culture of organizations. You won't be all in one category or another; you'll smush out among those areas, with an emphasis here and there.\"\n\n\"How long? How many interviews?\"\n\n\"I'll be doing both groups in sequence, but I'll focus on EneRG first and then the Circle. Of course, just from hearing you talk, I have some idea about what I expect to hear, but I'll see whether I'm right or not.\"\n\n\"You do this alone?\"\n\nGinny shook her head. \"I take someone in the group that appears to have the confidence of the others in the company. Later, after an interview, they can also clue me into anything subtle that I missed, like an oblique reference to some accomplishment that turned out to be major in some way.\"\n\n\"Have you picked your partners?\"\n\nShe smiled, \"Yes, so I'm asking permission to co-opt them for about two weeks each. I'd like Jenny Harvest from EneRG and Cricket from the Circle.\"\n\nDave nodded, \"They're yours. Should I tell them?\"\n\nGinny nodded and Dave yelled out for Jenny to join them for a moment. Five minutes later she'd been conscripted as Ginny's assistant in the interviews. She said she'd get Deborah to spend time at her desk to help with appointments and calls. Nikky could help out, too.\n\nDave turned to Ginny after Jenny left. \"Are we OK? I want to emphasize that what we did on Sunday night had no bearing on you getting and keeping this consulting gig.\"\n\nGinny chuckled, \"I think you've told me that about fifty times now. Personally, I don't examine my baser motivations, so even if it did, I don't care. Chill on the issue. It's past, and I'm already on the job. I also am more that happy at our lovemaking and how much pleasure you gave me. I really do love you and I believed you when you told me that you loved me. I want us to maintain our social and sexual relationship, as well as our business relationship. So, there!\"\n\nJenny reported to Dave on Friday afternoon just before they left for the weekend. She was pumped up, juiced, excited, and twitching. \"I have learned so much from Ginny Fuller. I want to go back to college and get an MBA. They teach all the stuff she uses every day in the B-School at the university.\"\n\n\"What have you been doing?\"\n\n\"Well, since we met Monday morning, we've done fifteen interviews with the execs and a few of the staff. I learned so much about how to interview somebody. Throw out an open-ended question and then shut-up and let them ramble around in the space of the question. Ginny taught me and I even led the last couple of interviews. She taught me about listening frameworks, and I've got a whole new way to talk to people and listen to what they say.\"\n\n\"And you've discovered what about our culture?\"\n\nJenny danced around, \"I'm sworn to secrecy. I can't tell you really, because we haven't done the analysis. Ginny and I will finish typing up the interviews and on Monday we'll start our analysis. She has a unique methodology she's going to teach me \u2013 organizational analysis frameworks. She said I'll have analysis matrices coming out my ass when we're through, but we'll have a thorough analysis of the culture, what's changing, what we want to change, what will change if we do or don't tinker with it, and a lot more. This is so exciting. I hated to take the weekend off, but she insisted.\"\n\nDave laughed. \"Well, I can see we have at least one convert among us. I'll wait. I assume we're not sinking fast on any front?\"\n\n\"No. Ginny liked what she was hearing. She said it was all good.\"\n\n\"What about the Circle?\"\n\n\"We'll start on that after we tell you about EneRG, maybe next Friday.\"\n\nDave teased, \"I'll block off that afternoon for our meeting and discussion.\"\n\n\"Yes! Yes! Do it. I'll put it on your calendar.\" Jenny ran to her desk and fussed with her computer to put the appointment on the calendar.\n\nDave yelled out. \"Have JR, Nikky, Deb, and Larry at the meeting, too.\"\n\nFriday evening, after getting home and changing into casual clothes, Dave joined several others in tending bar. He was surprised to find Tony Harris as one of the volunteers.\n\nTony told Dave, \"Leann told me I should take this job because I would meet just about everybody in the Circle this way. You'll note that Carol and Nora are playing apprentice waitresses, too. They're working with Sharon and Morgan as 'trainees'. They don't have the cute and revealing little uniforms, but they know from your team where to order them online. Morgan is kind of like very pregnant, and I heard a rumor that you're responsible for that.\"\n\nDave effused, \"I'm glad you and they are here. This is nice. I see some of the students we met a week or so ago here too, even setting the table as part of the dinner team. As for Morgan, she is one of the women I love.\"\n\nTony said, \"I met the twins \u2013 Savannah and Samantha. They went into the kitchen for something, but they're ... well, topless and only wearing little cheerleader skirts with nothing underneath. One of them told me she hoped to find me later for, and I quote, 'a fabulous fuck'. She ... they ... are really hot. I wasn't sure which one it was \u2013 damn!\"\n\nAs Dave worked he spotted Ginny, Cricket, and Jenny sitting away from the main group and talking to Kat. They all had serious looks on their faces, and Cricket and Ginny appeared to be taking copious notes about what Kat was saying. Dave smiled. He hoped this was going in the right direction. He noted later that they spent about two hours with Kat before their informal meeting broke up. Kat looked happy, as did Jenny.\n\nGinny came and sat with Dave as the coffee carafes were put on the table. \"Hi, Boss.\"\n\nDave laughed, \"I'm not your boss. I'm indebted to you for your diligence and tenacity in helping me with my projects. You're more my boss than you perhaps realize.\"\n\n\"Oh, good. Then I have a series of tasks for you.\"\n\n\"Name them,\" Dave said, thinking he'd get a list about cultural elements he expected to hear about in the Circle.\n\nGinny said methodically, \"Well, the first several tasks involve you helping me remove my blouse and then dancing with me. After that, there needs to be some serious kissing with lots of tongue and fondling. I then want that tongue on my bare breasts and soon thereafter slathering and licking in my nether region absorbing as much of my female nectar as you can and eliciting several orgasms from yours truly at the ideal rate of one a minute. \n\n\"I have learned about something you do for a woman called The Experience, and in the course of the cunnilingus that you will be providing, I would like to experience The Experience. I am told that I will not ever forget what happens, and I am hopeful for that pleasurable result.\n\n\"After those orgasms, I would then like to make love to you and I am hopeful for both an initial and subsequent session this evening. So, those are the steps forward as I see them based on extensive experience and education in such matters. If I left something out, please feel free to improvise.\"\n\nDave nodded, \"Well, those steps define a tough assignment, but I will take it on with determination, resolution, and enthusiasm.\" He leaned in and kissed Ginny, who practically melted in his arms. Seconds later, the scoop neck blouse she'd been wearing lay atop the table they were sitting at. Dave's t-shirt joined hers, and then the couple was dancing with Ginny's breasts rubbing gently against his chest, providing rapidly escalating sexual stimulation to both parties.\n\nAbout fifteen minutes later, Dave's face was buried solidly in Ginny's sodden pussy, his tongue slashing and lashing out to absorb every drop of her magnificently secreted glandular juices. His fingers started their dance right beside his tongue and kisses.\n\nFifteen minutes later, Ginny lay comatose with her body twitching. Dave lapped up the sweet feminine fluids he'd collected from inside her body as he fisted her and stimulated her A-spot, bringing her to a colossal orgasm, no doubt larger and more powerful than anything she'd ever experienced before in her life.\n\nDave cradled her body to his on the chaise, and kissed her tenderly. \n\nGinny's eyes blinked open and her body shuddered in his arms. She looked deep into Dave's eyes and started to cry. \"Oh, God, I love you so much. Every pore of my body ... no, every cell in my body is in love with you. My soul wants to be with you for the rest of time.\"\n\n\"I love you as well Ginny Fuller,\" Dave told her as he kissed away her tears of happiness and stress relief.\n\nAbout two minutes passed with nothing said. They just looked at each other as Dave stroked her naked body in a sensual manner. Ginny finally spoke, \"You knew what would happen didn't you?\"\n\nDave nodded, \"I did. It's happened a lot to women I love.\"\n\nGinny explained, \"I did, too; kind of. Nora told us what you'd done and how she felt about you. Have you done that to all the women in the Circle?\"\n\nDave nodded and said his steady refrain, \"Consenting adults can do whatever they want about sex. I made sure before I started that you knew you could stop me.\"\n\n\"I had no plans to stop you. I'm just surprised at my own reaction. I've never passed out from too much pleasure before. I'm really in love with you, too.\"\n\n\"Don't forget Bob.\"\n\n\"Oh, I know I love him. If I didn't know I could love more than one person before, I sure do now. I love everybody \u2013 male and female. I am so glad to be in this life where I can express myself physically and sexually, especially here in the Circle and in our neighborhood where I can include making love in those interpersonal connections.\"\n\n\"Out of curiosity, have you ever had an affair with a client before?\"\n\nGinny chuckled as she continued to perk up after the physiological shock he'd given her system. \"No, not an affair because that's secretive and clandestine. I've made love with some, had sex with some, and developed good relationships with all of them. As you've found out, I am a very physical person. Speaking of being physical, I just realized that we haven't made love yet. Please.\"\n\nDave snorted, \"I know how to fix that.\"\n\n<center>* * * * *</center>\n\nThere were five people in the Friday meeting: Dave, JR, Alice, Jenny, Nikky, and Deborah from EneRG, and Ginny Fuller, an independent consultant who'd been doing a cultural assessment of the company. Larry would have been there, too, except he'd flown to Arizona to check on the production runs for the new Apple phone.\n\nThey were in the modestly decorated conference room near Dave's office with Ginny's computer plugged into a projector so she could show some PowerPoint slides.\n\nGinny started the meeting just after they'd all returned from lunch as the local Applebees. She said, \"First, the good news; nothing is broken but I see a few things that could be improved, I think. Dave, I know you were worried about where you stood and whether things were happening that would later hurt the company. Overall, I think not, but you'll have to judge. You have some homework to do.\"\n\nShe turned on the first slide, a two-by-two matrix showing four boxes arranged along two axes: internal focus/integration versus external focus/differentiation, horizontally; and stability and control versus flexibility and discretion, vertically. The boxes were labeled Clan, Adhocracy, Hierarchy, and Market.\n\n\"I believe you are solidly anchored in the 'Adhocracy' box more than anywhere else. She went on explaining the boxes. \"You are innovative leaders, stress visionary concepts for your products and markets, have a loose and flat management structure, are not prone to micro-manage individuals yet definitely delegate responsibility and hold people's feet to the fire for performance at their own discretion. You set the 'what' and get them involved in the 'how'.\n\n\"EneRG is achievement oriented \u2013 results matter more than control or doing 'it' according to some prescribed control structure. You're externally focused, yet pay attention to your own operations to make that happen. You are also a technology company with the revered skill sets technically based; that's fine in your industry. People that don't have the formal education in technical skills are adept at developing them on their own.\n\n\"Communication is mostly informal. Nobody worries about CYA memos to the file. The place fosters individualism, and rewards performance not excuses \u2013 witness Nat's million-dollar bonus, and your own zero pay but multi million-dollar bonus if all goes well through launch and the IPO. Office space is not rank or individually dependent; it's functional to get the job done.\"\n\n\"Dave you give away your power to those that are better positioned to use it, yet you back them up. There's a strong sense of 'team' here in the head shed, but it's not an ivory tower. Some people were concerned when Alice took over the CFO role, but those concerns ebbed as they saw she had the same focus as everyone else. Everybody down the hall knows about your open door policy. \"You've also fostered a slight 'family' atmosphere here \u2013 'we're all in this together'.\"\n\nAll the heads in the room were nodding in agreement with what Ginny was telling them about themselves.\n\nGinny paused and said, \"NOW, FOR SOME OTHER NEWS.\" Her voice was loud and commanding. \"You have a tiger by the tail. This business is going to soar into being a multi-billion a year business in the next few microseconds.\n\n\"In my opinion, you can't continue to run a business that size the way you are right now.\" She put up the next slide. \"You need a legal department of your own rather than borrowed lawyers and some reliance on Worthington Industries. You will be a contract-based business for a while as you replace the stock of existing batteries in everything you can imagine and more.\n\n\"You need a Vice President of Manufacturing. You four, Maury, and Larry plus the people you hired to run each plant are the manufacturing leadership, and as you go into full-scale production, you need more leadership and control \u2013 more horsepower. If there's a weak link right now, that's it.\n\n\"In the marketing area, you need a leader for each of the technology segments that you will be chasing after. That's more in JR's area, but you hopefully hear what I'm telling you. You also need to open a Customer Service department. People will use your products but have questions. You need to think about recycling and the reclamation of the Thallium catalyst. Engineers in that CS department can help customers with new applications that may help you build them into major accounts. You need a PR team; right now Nikky or Jenny has been handling most of that when JR has been busy. \n\n\"I also suggest you designate a person or two from each of the departments to come up with worst case scenarios so you're all prepared when some disaster happens that appears to be based on your products \u2013 and that WILL happen. Be prepared! I recommend you read the Tylenol case study about how J&J responded when some jerk tampered with their aspirin containers and killed a few people. Look at how Samsung handled the battery problems with their Android phones.\"\n\nGinny went on with more recommendations. Dave knew she was right on every count, and from the nods of the others on his team they did, too. She finally stopped.\n\nDave teased, \"And, knowing consultants including being married to one, where is your proposal for the implementation and follow-on phase?\" He laughed, but so did Ginny.\n\nShe said, \"I can have it for you next week. For now, I think I need to work on the Circle, and let you digest all of these things for EneRG. I urge you not to stall in staffing out the organization. You are soon going to move to a point where you can't keep all the marbles rolling across the floor in the right direction.\"\n\n<center>* * * * *</center>\n\nDave poured his heart out again when Ginny and Cricket interviewed him about the Circle on Saturday morning. He was full of worries and minor issues that if left unmanaged MIGHT blossom into something serious that could erode the Circle away to nothing but a housing development with shared common facilities.\n\nSunday, he saw Ginny and Cricket interviewing Alice, Grace, and then Cindy Worthington. Sunday, he saw Cricket and Ginny talking to Christie, Dori, Ty, and Wendy. Monday at cocktails he learned that the pair had interviewed Bobbie Wyatt, Dale, Amanda, and Ron. \n\nDave sighed many times, trying to guess at what each person might have said about the Circle. He'd seek out Ginny around cocktail time 'just to say hello' and hoping that if she'd seen some deadly flaw she'd alert him before her debriefing the weekend after next. All Ginny would say was that the interviews were going well, she was getting a wealth of information, and learning more of the lore about the Circle. She laughed when Dave tried to milk her for information about what one person or another might have said.\n\nGinny did calm Dave down, and it took a heavenly round of sex to do it. She enlisted Deborah's help and the two of them showed Dave some sex acts he hadn't experienced before. For a change, the women were the aggressors and proud of it.\n\nThe following Saturday afternoon Ginny came to Dave on the patio and informed him that she'd finished the interviews and was beginning her analysis of all the comments she'd received. She wouldn't reveal anything to him, but Dave took solace in that she really liked the Circle and didn't seem concerned about anything. They set a time for Ginny to present to the Circle Board and anybody else that were interested morning after the communal breakfast on Sunday.",
        "A week later, Ginny stood in casual clothes after brunch, but not half naked the way some of the women were dressed. Nonetheless, the nudity didn't seem to faze her. She even commented that when she'd taken public speaking the first time in college the teacher had suggested the students imagine their audience naked to help put themselves more at ease. This was the real deal.\n\nDave stood and opened the meeting, talking about why he'd chartered Ginny to apply her skill to looking at the culture of the Circle.\n\nGinny started, \"Most of you, particularly the founders of the Circle and the early joiners, could equally give the first part of this presentation, and certainly the snapshot of where things are today. I have a few pointers where I think things might or could change, and where you might want to apply some effort to manage and guide any changes.\"\n\nGinny wrote on the flip chart as she talked in the various aspects of the current culture:\n\nLoving (mind, body, spirit)\n\nSexual\n\nMutual support in action\n\nHarmonious (Drama free goal)\n\nSocial\n\nPublic (Exhibitionist)\n\nEquality\n\nKindness and Thankfulness\n\nService and Gratitude\n\nOutward focus\n\nNon-controlling\n\nNon-possessive\n\nCompersion\n\nHelp each other self-actualize\n\nNon-conforming\n\nFluid relationships/living arrangements\n\nIndependence and Interdependence\n\nPersonal safety/protectiveness\n\nSpiritual (SBNR)\n\nHeads nodded and there was great agreement that the list reflected the overall culture of the Circle.\n\nGinny turned to a fresh page and started another list as she talked. \"You are a culture representative of a family or small tribe, but you keep growing and becoming larger. How do you maintain your culture through that growth? I think this is the core issue worrying some of you.\n\n\"You are spiritually inclined, but worry about becoming more secular. Collectively, you are loving but some worry that 'having sex' will replace 'making love', and that the tenor of the gatherings you have will thus change. That said, all of you admitted that you often get together to just fuck for the hell of it, especially when new people show up or when you get together with your less well-known friends associated with Mark Worthington.\n\n\"Your relationships are very fluid and in many cases unconventional, but again some of you worry about those becoming more fixed and traditional. Even those in more or less traditional marriages worry about losing the unconventionality that others practice in the future. This carries over to the area of housing; people like moving freely between spaces, even sleeping over with others, or having others with them on a nightly basis.\n\n\"Most of you display low ego needs to each other, but there is concern about that changing. Another worry is that the harmony so evident in the Circle might give way to more drama and confrontations. You all seem to know yourselves well enough that you don't allow your ego to rule the roost in some possible confrontation situation. All of you have learned to swallow your pride or position rather than provoke some confrontation. Lastly, you've created a culture that prides itself on diversity here and people like that and want to be sure the place doesn't become too homogeneous. People want the multi-racial and multi-everything part of the Circle to expand.\"\n\n\"I see no danger signs that things are shifting too fast in any of those directions that they can't be managed and kept on track as you wish. I think the Board should routinely address these points, especially regarding the admission of new members. I suggest an annual workshop, kind of like this meeting, to talk about what's been happening and how it influences the overall ethos of the group. Lastly, I'd communicate all of what we're talking about to the rest of the Circle. You have the forum to do that through your Circle 101 class and rap session.\"\n\n\u2003\n\n<center>Chapter 31 \u2013 EneRG Celebration and Insights</center>\n\nOver three hundred people gathered on the new patio at the Circle for the giant cookout and congratulatory party that EneRG and Dave were hosting one Saturday afternoon in the spring. A large banner hung from the roof of a cabana that said, somewhat tongue in cheek, 'MISSION ACCOMPLISHED'. This provoked a lot of laugher. Dave didn't know who put it there, but it poked fun at George W. Bush standing on the deck of the USS Lincoln basically claiming a victory of sorts in Iraq. The nearly unending war that followed made the photos somewhat of a joke and led to many people thinking the president was out of touch with reality.\n\nWhen most of the EneRG staff and partners were there Dave and JR stood atop one of the picnic tables and gave a short pep talk and congratulations to everyone.\n\nDave pointed to the banner, \"WELCOME! Our first significant contract with Apple required us to deliver twenty million thin pack batteries for the new iPhones by the end of last month. WE DID IT!\" [Cheers] \n\nJR yelled into the makeshift microphone, \"When we made that commitment we had no manufacturing plants and weren't entirely sure how to meet that commitment, but thanks to all of you, WE DID IT.\" [Louder cheers]\n\nMark Worthington jumped up on the same table and came between Dave and JR with his arms around them. \"Just so you know we appreciate all the extra hours and time you put in to make this happen, you are each going to find in your paychecks a special one-time bonus to say thank you.\" [Very loud cheers and applause]\n\nDave yelled, \"And keep up the good work. We have lots of new contracts and commitments to honor. We are transforming the world. Next January in Las Vegas, we will again have a showing at the Consumer Electronics Show, and we will be displaying lots of new products that use our batteries, and some of those were never portable until they met our batteries. One of those items on display will be the new Tesla F9 sports car that can drive over TWO THOUSAND MILES on one overnight battery charge! Nikky and Connie are going to drive from Sarasota to Vegas in that car without needing to make dozens of stops at special charging stations or to do battery swaps.\" [Cheers. Applause.]\n\n\"Enjoy the party.\"\n\nThe three dismounted from the table and mixed in with the others at the large gathering. The gathering was a lot more conservative in terms of dress than usually graced the patio on a warm afternoon. The most audacious outfit was a shapely bikini on one of the technician's wives. After all, the invitation had said to wear your bikini and hers fit in a spectacular way.\n\nThis was the first time the management team of EneRG had met most of the spouses or partners of their workforce. Dave had even flown in the management teams from Phoenix, Oregon, West Virginia, and St. Paul, so they could also participate in the satisfaction of the company's first large contract. Several managers from China and Korea had also flown in, along with executives from Germany and Ireland. This was a milestone.\n\nMany of the Circle members had volunteered to help out with the party, playing various roles from bartending to serving, to playing lifeguard for the few children that came with their parents and wanted to swim. Separate from her duties as the Circle's chef, Dave had engaged Bobbie Wyatt to oversee the catered food service. As usual, she'd done a superb job.\n\nFor many of the attendees, it was the first time they had a chance to meet a genuine billionaire. Mark and Owen were both circulating through the throng. Wendy Hayden had come, too. Even more exciting to many, Scarlett was also there with her Hollywood friends Megan Fox and Miley Cyrus. In the same manner, Owen had brought Joe Jonas to the party; he was relatively nearby in Nashville recording an album and Owen put the arm on him, since he was partly funding the endeavor. They were all huge hits with the crowd. Ashley Steerman was there and sang a few songs with her live band, even doing a duet with Joe Jonas.\n\nEveryone wore nametags identifying them as EneRG employees, spouse or partner, or Circle members. In some cases the tags identified them as belonging to two of the three categories; specifically, Nikky, JR, Deborah, and Larry had flags of EneRG and the Circle. Dave and Alice belonged to all three categories . Dave also suggested that Jenny and Deborah admit to all three categories because of how close they were to him and his family.\n\nDave rapidly achieved some degree of notoriety, especially among the women when the buzz went through the crowd that he had six wives, one of whom was Scarlett Johansson. Going with that viral rumor also went the 'polyamory' and 'open marriage' monikers. A Martian would have received less attention.\n\nPam was there with the new baby she'd had with Dave. Julie waddled around about to hatch at any moment. Matthew had been put in charge of the younger children (under adult supervision), and he was doing a great job of getting games organized that kept the children that came with a parent interested and busy as their elders socialized not too far away.\n\nMid-afternoon Dave started to walk across the patio to the bar when four women he didn't recognize stopped him. One said, \"Mr. Prentiss, thank you for talking with us for a moment.\"\n\nHe bowed graciously to them. He had a feeling he knew what was coming next.\n\n\"We were talking about your ... well ... you personal life. Is it true that you're married to six women and you are all in an open marriage?\"\n\nDave chuckled, \"He could have just said, \"Yes\" and moved on. Instead, he felt playful. His response became, \"Yes, but I'm always open to new relationships. Are any of you interested; we're accepting applications right now and the four of you appear to be likely candidates?\"\n\nThe four women froze with their mouths hanging open.\n\nDave laughed, \"I'm kidding. I'm kidding. Yes, I lead an unconventional life style, as do my wives. Our relationships are based on love. Understand that one is my legal wife, and the others have similar commitments made to them without the sanctions from the government. We do not proselytize or recruit, and as far as the government is concerned we are legal.\"\n\n\"But someone said that everybody in the Circle has sex with everybody else,\" one woman said; her nametag only had her first name: Elin. She was mid-forties and quite good-looking.\n\nDave chuckled, \"It's not that simple, and I will only tell you what I said in a press conference when asked that question a couple of years ago. The Circle is a loving community of like-minded individuals, both men and women. We stress equality, fluid relationships, achieving your potential, non-possessiveness, harmony, and compersion. There is no jealousy here; that's a very destructive emotion. There's also no exclusivity.\" He smiled at each of the women.\n\nAnother woman said to the others, \"I think that means 'Yes'. You mentioned a press conference. Was something published about the Circle?\" Her nametag said 'Lucy'. She, too, was pretty with a 'girl next door' kind of look on her face that displayed tremendous curiosity.\n\nDave nodded, \"Yes, quite a bit. There were a few other pieces of public drama that occurred at the same time that resulted in this place and all of us coming under scrutiny of the media for a short period of time. If you look in the library section of the core living room, you'll see several identical scrapbooks of the articles from that time period, as well as other articles about some of our members.\"\n\nLucy asked cautiously, \"Are you happy?\"\n\nDave smiled, \"I am probably the happiest man on the planet, especially today with all of you here to celebrate our first real business achievement. Insofar as my nuclear and extended family, I am also ecstatic. My six wives and about fifty other women love me, and I love all of them dearly. I have fourteen healthy and very normal children, and a couple more on the way. Yes, I'm very happy.\"\n\nDave had read all their nametags, but was only able to associate one of the names with an engineer in the R&D department. He made note of the two tags with last names on them and intended to look up their relationship to EneRG when things quieted down.\n\n\"What does someone have to do to join your Circle?\"\n\nDave smirked, \"Well, first it's not MY Circle. The Circle belongs to all of us \u2013 about a hundred people and some close friends. There are no fixed criteria, but developing a close relationship with each of us would be the number one factor. Also, you'd want to feel very aligned with the culture of the Circle and the way we live.\"\n\n\"What is your culture like?\" Angie asked. A brunette that appeared younger than the other three women.\n\nDave felt devilish again. \"Well, there is the sex. We tend to exhibitionism, and nudity. Sometimes you're just never sure in whose bed you'll sleep at night ... or whether you'll get any sleep at all. Sometimes, your partners can be pretty demanding and you also can get really worked up.\"\n\nAll four women backed slightly, then the one whose nametag read 'Olive' said, \"There's got to be more to this place than that?\" She sounded insistent but entertained by the conversation.\n\nDave nodded and then repeated many of the characteristics of the Circle's culture that Ginny Fuller had called out only a week or so earlier.\n\nOlive asked, \"What do you mean by non-possessive?\"\n\n\"Let me answer you with a little test that overlaps a couple of other elements of our Circle. If you wanted to make love with someone here tonight, what would you do and why?\"\n\nOlive slowly answered, \"I'd ask my husband for permission, otherwise he'd go ballistic \u2013 maybe he would anyway even if I just asked. As for why, I guess because I'm his wife and we're married.\"\n\n\"So, he owns and controls you so you need his permission for certain activities?\"\n\n\"I ... I guess so.\" She paused and added, \"I see your point. He can be very possessive, especially of me. What would one of your wives do?\"\n\n\"Follow her bliss. The only rule that would disappoint me if she didn't follow was to make sure that the person she was engaging with had a recent STD test.\"\n\n\"So, you wouldn't care whether she had sex with someone else or not?\"\n\n\"Oh, I'd care but not how you think. I'd want her to find a partner who would love her like no one else on the planet, who'd give her an unending series of mind blowing orgasms that left her breathless, please her in a thousand ways, and who'd leave her wanting more. I'd want her to feel good about herself, and about her lover.\"\n\n\"But what if you lose her to that man?\"\n\nDave chuckled, \"Or woman? Well, I would affirm my own love for her, and help her forge her new relationship because I love her. I don't conditionally love her if she'll only love me and follow my rules; I love her unconditionally.\"\n\nOlive said in a slightly dejected tone, \"I guess my husband and I love each other conditionally.\"\n\n\"If you acted towards him with unconditional love, what would change?\" Dave posed. He nodded to the other women.\n\n\"I guess I might encourage him to forge new and interesting relationships with other women who I feel scared of right now \u2013 scared that he'd leave me for them. If he did, I guess I'd try to love them, too.\"\n\nDave asked, \"If he loved you unconditionally, what would he encourage you to do?\"\n\nThe four women all rolled their eyes.\n\nOlive said, \"I'd ... make love with you ... or another man I was attracted to; maybe Joe Jonas.\" She giggled and gestured across the patio where there was a small cluster of other women with the star. Dave heard the influence of her third glass of wine.\n\nThe woman to Olive's left whose nametag read Angie said, \"I'd start my own Circle. This place sounds like heaven, and I don't mean only the sex \u2013 although that counts for a lot.\" The other women nodded.\n\nAs they'd been talking Dave had led them to the bar where he got a wine cooler, his first of the party. Samantha, or was it Savannah, was working behind the bar and told him he had to give her a nice kiss for his drink. Dave gestured and the cute but sexily dressed co-ed came out from behind the bar and plastered her red-hot body against Dave and they shared a kiss worthy of a major Hollywood film. Afterwards, she fanned her face, and went back behind the bar with a mischievous grin.\n\nAngie said, \"I take it she's one of your lovers.\"\n\nDave said, \"We love each other. She's not a member of the Circle yet, but likes to hang out here and get to know us since that seems to be her goal. She's very aligned with our values and principles.\"\n\nAngie said, \"What if I wanted to hang out here?\"\n\nDave shrugged, \"Welcome. If you're married or in a serious relationship I would hope you brought your partner so that he or she might share the experiences with you. We're not in the habit of breaking up relationships.\"\n\n\"But he might not like it, then what?\"\n\nDave teased, \"Is this somebody that you love conditionally or unconditionally?\"\n\n<center>* * * * *</center>\n\nA week later, Dave and Ginny were cuddled together on one of the chaises on the new patio. The nearly full moon shown down on their naked bodies, still coupled after a long and loving coitus.\n\nGinny said, \"I went back over all the interview data for the Circle and re-read the scrapbooks. I saw a couple of other things I wanted to raise.\"\n\nDave kissed the end of her nose, \"Tell me?\"\n\n\"Well, the Circle is VERY protective of its members and close friends. There were many events that pointed at that and I missed seeing the pattern the first time around. Many of you flew out to Kansas when Ken Toomey's plane crashed, many of you banded together to rescue Amanda, and then to protect Karen's children from being kidnapped.\n\n\"I had a second thought and I got help in my analysis on this one from Cricket and Kat. The Circle values a flow of new members for no other reason than the newness of the relationships and the additional lure of new sex partners.\n\n\"I think that you, in particular, are part of that cultural element.\"\n\n\"ME? How'd you figure that?\"\n\nGinny chuckled, \"You, more than all the others put together, are responsible for the growth of the Circle. You have brought woman after woman to the Circle after you and your neighbors formed the Circle. Of course, you had a head start with Pam.\n\n\"You then enticed your architect's wife \u2013 Grace Anders. You brought in her daughter, and then people you worked with at the utility. You brought in people from a seminar you attended, a pretty reporter writing an article about the cohousing project and then her family, and you even got your boss and mentor to bring his mistress into the group along with his wife.\n\n\"When you had an open house or party, you usually ended up with others joining with your encouragement. You encouraged your wife's family and her brother-in-law's mistress to come, too. You pulled your brother and his wife in. You were the one that seduced the movie star and made her want to live here; and then you brought more people from where you work, along with many of their friends.\"\n\nDave insisted, \"I did not do that alone. People here liked all those new people.\"\n\nGinny shook her head, \"You did three things \u2013 mostly unintentionally. First, you are an opinion leader. Second, you quickly and accurately identified that a new person would 'fit' into the Circle culture and philosophy. Third, you got the women to fall in love with you.\"\n\n\"How'd I do THAT?\" Dave asked in disbelief.\n\n\"You gave them what you now call The Experience \u2013 an A-spot orgasm, that makes them comatose from the largest and best orgasm they've ever had and viscerally know they ever will have. In the hope that they'll get another one now and then, they hang around you and hence the Circle.\"\n\nDave balked, \"But sometimes I didn't do that on the first meeting, and for some of the women I've only done it once with them.\"",
        "Ginny smiled and kissed Dave. \"I love you, David Prentiss. I don't need The Experience on a daily, weekly, or monthly basis, but I do need some interaction with YOU. I am not alone in those feelings. About sixty women feel the way I do about you.\"\n\n\"But, I don't even get to spend time with some of the women I guess you say I've seduced into the Circle,\"\n\n\"True, but every woman in the Circle and those 'pledging' \u2013 as you call it \u2013 all are hopeful to make love with you \u2013 frequently, too. Since they have bought into the non-exclusive nature of the Circle, they flirt and enjoy relations with the other men here or they're married and have a husband or boyfriend to also care for them, or more likely both.\"\n\nDave shrugged, \"OK, but we do seem to be functioning pretty well, at least, so far.\"\n\nGinny rolled over on top of Dave and looked him in the face. She told him, \"One person isn't.\"\n\n\"Huh?\"\n\n\"You, silly. You're worried about this place and everybody in it. You're being protective. You think YOU OWN the Circle. You think YOU ARE the chief protector and the glue that holds it all together. You don't own it and you aren't the chief protector.\"\n\nDave pondered Ginny's comments. She'd already proven many times she was insightful.\n\nGinny said, \"You need to relinquish control. What you think you have is really an illusion anyway. Besides, you aren't alone in what you feel.\"\n\n\"What do you mean?\"\n\n\"EVERYBODY in the Circle wants it to flourish and survive in a robust way ... AND TO GROW! YOU are not the only person thinking that way. Get the others involved, as you are unintentionally doing, and they will help you.\"\n\n\"Unintentionally?\"\n\n\"Yes, consider your Circle 101 seminar and rap sessions, your tending bar so you can talk to everyone, and your hiring an outside consultant sympathetic to the Circle to study it for any problems or issues. I could go on. You've been doing the right things to help sustain this place, and to even grow it. People are cheering you on, but they also want to help. You don't have to do this alone.\n\n\"You've brought in new blood who feel about it the same way you do, only they're too polite to confront you about it. They're all hoping you see their dedication, caring, and commitment to the Circle. Dave, look around. You are loved, AND so is the Circle. If others thought it was derailing or changing in some undesirable way they are poised to group together and fix whatever is happening that they think is wrong. Moreover, just about everyone would involve you in their thinking and in their fixing.\"\n\nDave sat up, adjusting their position so that Ginny straddled his lap. He slipped back inside of her after some tender kisses.\n\nDave said, \"Should I stop what I've been doing?\"\n\nGinny laughed and squirmed in his lap, \"That's not what I'm telling you. You should stop worrying about it and share any concern you have with the others. Let them help and their ownership and commitment will strengthen. If this place becomes 'Dave's Circle' you're in trouble. If it remains 'OUR Circle' you are a huge success.\"\n\n\"And things will continue as they are?\"\n\nGinny smiled and shook her head. \"Do you think they will?\"\n\nDave thought about it and said, \"No, probably not. Something will happen and things will change.\"\n\n\"And then what?\"\n\n\"We adapt,\" Dave said with more certainty. \"We try to keep the parts of what we want in tact, and adapt to the rest.\"\n\n\"I'm glad you used 'WE' instead of 'I'. You Circle the wagons and if the issue is serious enough all the 'chiefs' get together and solve the problem. If it's minor, only one or two of you do. Involve the others. Go back to the roots of the Circle. \n\n\"Think how you solved the problem of wanting to be together all the time \u2013 a small group of you built this place. How'd you solve the problem of protecting Christiana Simon by dressing up Nikky to look like her? A small group of you did that, and Nikky loved you all so much and she wasn't even a Circle member when that happened. I could go on.\"\n\n\"Ginny, you are amazing. And, you're right. I've developed an 'Only I Can Do It' mentality about the Circle.\"\n\nShe chuckled, \"You might want to be sure you don't adopt the same attitude at EneRG, too. JR might be as guilty there as you are on that front. I talked to her about it. Give away your power and it will come back ten fold.\"\n\nDave said, \"I've said that often about love.\"\n\n\"It works there, too. Sometimes we hold on too tight to what we want the most, when the way to get more of it is to Let Go and Let Live!\"\n\n\"Thank you.\"\n\nGinny and Dave kissed and then another pair of lips started on Dave from behind him, kissing and working their way around his neck, ears, and head to his lips.\n\n\"I love you.\"\n\n\"I love you, Alice. You want to join Ginny and me?\"\n\n\"Definitely. I've only met Ginny. We haven't had a chance to make love together. Are you up for that?\" She looked at Ginny.\n\nGinny reached out and gently pulled Alice to her so they could kiss \u2013 a kiss that turned into more, and then into deep soul kisses. She also stroked the pregnant bulge on Alice's tummy.\n\nGinny smiled, \"I feel your husband's cock swelling inside me as he watches the two of us.\"\n\nAlice gave Dave a peck as she looked into his eyes; \"I guess he still likes watching me with others.\"\n\nDave teased, \"Always.\"\n\n\u2003\n\n<center>Chapter 32 \u2013 More Newbies</center>\n\nSamantha stood in front of the room with a marker in her hand. She was a little nervous, but trying to laugh it off. \"OK, everyone, imagine that you are a Circle member. What kind of a situation might occur that would really worry your decision to join up?\"\n\nDave sat at the back of the room, trying to fade away and not be a dominant force for the Circle 101 class. About thirty people were in attendance. Samantha had done a good job of going around the room and getting people to introduce themselves. The names were listed on a flipchart she'd taped to one of the walls:\n\nSamantha Stone\n\nJenny Harvest\n\nSavannah Stone\n\nCookie Carson\n\nAlan Lauer\n\nBarry Sykes\n\nElton Cleats\n\nWes Madden\n\nCord Jenkins\n\nBridget Simon*\n\nNikky Thomas*\n\nJR\n\nDave Prentiss*\n\nTatiana Volstok\n\nJasmine Kray \n\nChelsea Fox \n\nHaley Keva\n\nLori Griffin\n\nLeann Harris\n\nCricket*\n\nCindy Worthington*?\n\nGary DeVille\n\nNora DeVille\n\nTony Harris\n\nCarol Turner\n\nIke Turner\n\nDeborah McKinley\n\nBob Fuller\n\nGinny Fuller\n\nAlan tossed out an idea with a smirk, \"That'd we'd stop making love with each other.\"\n\nEveryone laughed but nodded in agreement.\n\nHaley said, \"That we got more homogeneous.\"\n\nMore and more ideas got stated. Sam kept writing abbreviated versions of what was said on flip chart after flip chart, quickly taping them to the walls. \"One person tried to dominate some of the others.\" \"People started to fight and have dramatic disagreements with each other.\" \"Some of the relationships became exclusive or possessive.\" \"We had a couple of hermits get involved.\" \"We set too many rules to belong.\" \"New people stop trying to join with us.\" \"Some people decide they don't want to be on work details.\" \"Some of the men revert to wanting to subjugate some of the women or not fully respect them as equals.\" \"We become shy about our nudity or exhibitionism.\" \"We get a few people who are 'born again' and want to reform us.\"\n\nThe comments continued for a while. When there was a gap, Sam used the time to fill in a word or two on her flips.\n\nFinally, she said, \"How do we prevent any of that stuff from happening?\"\n\nThe ideas flowed again. 'If we see it, we talk about it as an issue!' seemed to be the dominant theme. 'Form teams to address the issue' was another one. 'Don't let the issue get swept under the rug.' 'Raise the issue to the board.'\n\nDave almost had tears in his eyes. Here was the incoming class of 'pledges' to the Circle worrying about preserving the Circle and outlining action steps to keep things on track so that the core elements of the culture and their lifestyle would be preserved. They had the same sensitivity and zeal about the Circle that he did. \n\nAll of Ginny's words about relaxing and trusting in the people around him came to his mind. She was right. Now, if only he could let go of the reins a little. This was good practice. He'd do more of this.\n\n<center>* * * * *</center>\n\nWednesday afternoon, Dave was scanning some of the engineering journals that had come in discussing battery technology. Since taking the job with Mark Worthington and starting EneRG, Dave had practically gotten a Ph.D. in the subject. Even when he went down to the research department and talked to Nat Turner and the other researchers, he could carry his weight and not get lost.\n\nTerms like 'substrate ionization catalyst' no longer threw him for a loop. He could even make a contribution to some of the discussions. One of the teams was working on the Aluminum Ion battery. Dave got them thinking about using recycled materials and that provoked a whole discussion about recycling any of their materials and impurities. As the core of the business cranked up to churn on the Lithium Thallium batteries, Dave had started to worry about the 'Next Big Thing' as Steve Jobs used to call it. \n\nPart of the contract with Apple was a rebate program with them to recycle iPhones with EneRG batteries that were turned in for destruction and reclamation.\n\nDave heard a few words from an unfamiliar male voice just outside his office door. The conversation was with Jenny. Seconds later, Jenny stood in his office doorway. She asked, \"Got a few minutes for a short discussion with one of the manufacturing engineers?\"\n\nDave waved his arm, \"Sure. Now, I assume.\"\n\nShe nodded and gestured to someone just out of sight from where he sat.\n\nA bright looking man in Dockers and a sport shirt appeared. \"Hi, I'm Lars Nilsson. I'm a first line manager on the B-shift in the plant, but ... well, what I want to talk to you about isn't related to EneRG. If this is a bad time, I can come back or see you after work.\"\n\nDave gestured to his open sofa. \"No. Now's a good time. Please come in and have a seat. Would you like something to drink?\"\n\n\"Errr, no, but thank you. I'm kind of embarrassed to be here, but if I don't talk to you my wife ... well, she would not be happy with me.\"\n\n\"Your wife? Does she work here, too?\"\n\n\"No, but she met you at the celebration party you had for all of us at The Circle. She was with three other women, and frankly they'd had a little too much to drink, but she remembers every word you said to them.\"\n\n\"What's your wife's name?\"\n\nLars blushed, \"Angeline but she goes by Angie. She thought you might remember the conversation.\"\n\nDave chuckled, \"I do. I'm afraid I teased them a bit. They were asking questions about my lifestyle and my wives.\"\n\n\"Yes, exactly,\" Lars said looking serious. \"She wants to know more about all of it and the Circle. She also told me she was asking not just for herself, but also for Olive, Lucy, and Elin. The four of them are thick as thieves, and their antics worry me sometimes. They're friends outside of work.\"\n\n\"I'd be glad to talk to anybody about the Circle. If they'd like to come around there on Saturday afternoon they could join us for a casual lunch about noon, and then we could talk. You and the other spouses are also included in that invitation.\"\n\nLars continued blushing. \"I briefly met you that day, and also ... as it turned out ... THREE of your wives. I didn't have the courage to talk to Scarlett Johansson, although we may be related. I have relatives named Johansson back in the Stockholm area.\"\n\n\"Are you from there?\"\n\n\"My grandfather is. My father was born in Sweden, but came to this country when he was five years old. I was born here, in Minnesota.\"\n\nDave said, \"Well, why don't you all come about noon. When you arrive there will be a gate. Just push the intercom button five times quickly and the gate will open. Park at the top of the rise and walk between two of the homes to our core area. That's where the party was, if you recall. You'll find me around the bar waiting for you. We all hangout together, so there'll be many of us there. Just ask for me if I'm not evident.\"\n\n\"Oh, that's great.\"\n\n\"Will there be eight of you?\" Dave asked in a friendly tone.\n\n\"I'll have to let you know. Probably not. Lucy and Elin are not married. They're both divorced and ... well, on the prowl some of the time. Elin does have a ... errr ... fuck buddy, she calls him.\"\n\n\"Well, if they have a steady boyfriend ... or fuck buddy, he would be invited as well, if she wants to bring him. Let Jenny know the headcount so we have enough for all of us for lunch. Sandwiches.\" He gestured towards where Jenny sat just outside his door.\n\nLars stood and prepared to leave.\n\nDave called him back, \"One other thing. You should all know that there is some nudity and partial nudity if the weather is nice. In that regard, I guess you might think of us as somewhat European.\"\n\nLars was frozen in position as he absorbed that statement. \"Oh, thank you for the warning. I'll alert the others. Would we be expected to conform?\"\n\nDave shook his head. \"Not a bit. We want all of you to be comfortable so whatever any of you choose to do will be fine. There is no expectation that our guests do that, especially on their first real visit. The dress code will be very casual. You'll find me probably wearing a bathing suit and t-shirt.\"\n\nLars disappeared. Dave heard Jenny laughing after he was out of earshot.\n\nJenny stuck her head in the door. \"I was listening. It sounds like the Circle is about to get six or seven new members. I remember meeting those four women. We talked about the pros and cons of the Circle, except I couldn't think of any cons. They were enthralled with every word I said. I kind of emphasized the sexual part of it.\"\n\n<center>* * * * *</center>\n\nOn Saturday, exactly at noon, seven unfamiliar faces walked between the Winter and Connor homes. They found themselves on the far side of the patio from the bar, so worked their way around the pool. There were four women and three men. Dave waved them over to the bar and then went forward to meet them.\n\nAfter a flurry of introductions, Dave assessed the new arrivals. He mentally ran through the names again: Angie, Olive, Elin, and Lucy for the women, and Lars, Stan, and Tim for the men.\n\nAll seven of the arrivals were greatly distracted by the twenty or so topless women around the pool, some sunning and some sitting in the shade of a large umbrella chatting in conversation circles or reading. \n\nCricket bounded up to the group. Dave had alerted several of his wives of the arrivals for lunch and conversation, and she was always 'up' for meeting new people and learning about them. Dave thought that at one point or another every one of them would find their way into one of her novels. She even confessed to using the Contacts App on her computer to keep track of everyone she met and some of the key facts about them.\n\nCricket, of course, was also topless and for all the good her little G-string did, she may as well have been naked. The thin material proved to the alert observer that she was clean-shaven and even had a small tattoo, courtesy of Owen Bennett, on one side of her mons. That day, she was also sporting a fairly obvious camel toe. She wore a baseball cap to help shade her eyes.\n\nCricket happily greeted everybody and instantly learned their names and interrelationships. Dave had filled her in ahead of time. Dave and Cricket escorted the group to the lunch buffet that Chef Bobbie had put out with the help of one of the groups of volunteers that helped in the kitchen and food prep areas. There was gazpacho soup, two kinds of salads, and an assortment of sandwiches. Some homemade cookies were also available as a dessert.\n\nAfter everyone had served himself or herself, they went to a table Dave had reserved.\n\n\"Is this normal fare?\" Lucy asked, gesturing to the meal as they sat.\n\n\"On the weekends, yes,\" Cricket said. \"Sunday night we are usually on our own for dinners, and often a Monday or Tuesday night. The rest of the time, we eat dinners here, but not lunches since during the week many in the Circle are out at work someplace.\"\n\n\"You have somebody that produces these things?\" Olive asked in awe.\n\n\"Chef Bobbie is one of the Circle's few employees. She's also a member. She oversees our nutrition on an individual basis as well. That's why when you look around here you don't see any obesity. You do NOT want her getting on your case about over eating or bad nutrition habits. She also manages several teams of volunteers from our Circle ranks that help prepare and serve the food.\" Cricket beamed with pride.\n\n\"So ... thank you for having us,\" Lars said. \"I did comment to everyone about what you told me.\"\n\nDave teased, \"The nudity ... or partial?\"\n\nHe nodded.\n\nCricket pushed out her chest in his direction and shimmied her breasts. The act made the others laugh.\n\nOlive said as the laughter died out, \"So, no one would be upset if we got naked or topless.\"\n\nDave gestured, \"Be my guest. It's very refreshing for all concerned.\"\n\n\"No one will think ill of me?\"\n\nDave made an obvious scan of the patio. \"I think not. Join the crowd, if you wish.\"\n\nOlive's husband Stan put his hand on hers, \"Careful, honey. Don't do something you'll regret later.\"\n\nOlive said, \"Regret? I think I'll regret NOT doing this.\" On that note she peeled the colorful top she'd been wearing over her head and carefully draped it over the back of her chair. Her bounteous breasts jostled out into the summer-like air and proceeded to shake like bowls of Jello as they displayed her large areolas and perky nipples to everyone.\n\nAngie upped the ante. \"Well, if you're doing that, so can I.\" The difference was that she wore a kind of short pants jump suit, so when she peeled the small bit of clothing off, she was very naked. She commented, \"I'm not as big in the chest as you are, but I have a gorgeous pussy.\" She gestured to her tuft of pubic hair, but because she was close to the table most people couldn't see her prize possession.\n\nLars rolled his eyes and looked pleadingly at Dave, apparently begging his forgiveness and indulgence in his wife's sudden exposure. All Dave did was laugh at his obvious plight.\n\nAs he laughed, Lucy and Elin peeled their tops away without saying a word. As he'd speculated, each of the women was more than appealing. Dave's tongue got hard as he took in the offerings of tit flesh at the table. Cricket winked at him; she could read his mind.\n\nLars sighed deeply. \"Now that that's out of the way, why don't you tell us a bit about how the Circle was formed.\"\n\nCricket immediately produced two of the Circle scrapbooks from her canvas bag beside her. \"I thought this subject might come up, so I brought a couple of our books to pass around. There's one for each side of the table, while Dave responds to your request.\"\n\nDave started talking about how the original four couples had been meeting and getting closer and closer to each other, forging deep and loving relationships. He talked about how Pam had joined his family, and then the larger group, and then about Alice and his loosening up process, including her getting three small tattoos from Owen Bennett, including a couple in intimate areas of her body. Those two of his wives were sitting at another table so he pointed them out to the group.\n\nLucy said, \"But you have six 'wives' now, right?\"\n\nDave nodded. \"As part of the loosening up process, the wives decided that they should each spend a week with one of the other men. Alice went off with Owen, and they fell deeply in love. I was worried about her, but I learned a great deal about myself and her over the week. One of our close friends Christie was to spend a week with me, and she brought her friend Heather with her. We fell deeply in love, and Heather became my third wife. Shortly after that, Alice's sister Julie joined our family \u2013 they're both also married to Owen as of a few months ago, and a couple of years later Cricket won all of our hearts. After another year or so, Scarlett and I fell in love, and she became my sixth wife.\"",
        "Cricket grinned and added, \"But we also have several other women living with us who are also kind of like wives. Bridget is Dave's niece, but she's often in our bed. Cindy Worthington is visiting, but she's at least a temporary wife if not going to become a regular. Lastly, we have our gorgeous Russian redhead, Tatiana who lives with us now.\"\n\nLars could barely speak, \"So, you have like ... NINE wives?\"\n\nDave nodded, \"Plus all the other women in the Circle that I also love.\"\n\n\"God, I can barely contain Angie. How do you do it with NINE?\"\n\n\"I don't have to contain them. They self regulate,\" he laughed. \"I don't think of any as possessions or something I have to MANAGE. We're each independent and loving beings that chose to interact more closely with each other. Our home is very harmonious because that's the way we all want it.\"\n\nCricket pointed out, \"Scarlett has a separate home down on Perimeter Road that you passed on the way up here.\"\n\n\"Why is that?\"\n\n\"Partly for security, plus she wanted to sprawl out more than I guess our house allowed. She spends a lot of time up here with us, but we also go down there. Her house has proved to be a godsend because we have a nice place for the kids to go and get them out of our hair. They're contained, supervised by a few people designated for just that purpose, and the adults are free to play.\"\n\n\"That makes sense.\n\nA short discussion ensued about how people were 'picked' to join the Circle, what they had to do, and how long it took. The new comers were surprised that entry seemed easy after just making friends. There was talk about the physical infrastructure and how that had changed since the original ten homes were built.\n\nOlive eventually asked, \"How did this place become so open to nudity or semi-nudity?\"\n\nDave chuckled and Cricket gave one of her little squeaks as a substitute for a large laugh accompanied by a sharp intake of breath. He explained to the others, \"It's a carry over from when we were much less inhibited regarding the sex we enjoy with each other. We've tempered things because some of the children are sometimes around during the day.\"\n\n\"And the nudity doesn't upset them?\" Lars asked.\n\n\"Do you think it should?\" Dave retorted. \n\n\"No, I guess not, but ...\" His voice trailed off in thought.\n\n\"Our children understand that we live in a different and unique place. One of the things that makes this unique is that we don't associate nudity and sex. Thus you can have nudity without it needing to imply sexual relations are about to occur. The four and five year olds think nothing about the whole situation. The older kids understand more about what's really going on between the adults, AND they also understand why we think that's all right. They also understand not to share too much with those in the outside world. They've been taught to refer questions about those subjects to one of the adults in the family.\"\n\nAngie asked in a tone tinged with awe, \"So, if this was in the past, there would have been people around the patio having sex all times of the day?\"\n\n\"And night,\" Dave added with a smirk. \"Yes, but we prefer to use the terminology 'making love' since that was also what was happening.\"\n\nStan cautiously said, \"You just did that with anybody you wanted to, at least that's what Olive told me she learned at the EneRG party?\"\n\nDave sighed theatrically and hammed it up a bit. \"Ahhh, the good old days ... and nights. Yes, but the adults decided that a nine and twelve year old watching us doing what mother nature intended was not in the cards lest we wanted to get in trouble with the law. Thus, we seriously moderated our behavior.\"\n\n\"So, you'd still be doing ... whatever ... if it wasn't illegal?\"\n\n\"Actually, the governments that oversee us could see just about anything we do as illegal \u2013 even you folks. Even though we're on our own property we could be arrested for indecent exposure, at a minimum. Adultery, defined as engaging in intercourse with other than your married spouse, is still illegal in this state. Think of how many people THAT law alone would send to jail, including most of the legislature and the governor.\" He laughed. \"Fortunately, everyone seems to have better things to do.\"\n\nLucy had been reading the scrapbook. She observed and questioned, \"There are about a ninety people here, over fifty of them women. Some women must get short-changed once in a while, no?\"\n\n\"No,\" Dave replied in a more serious tone. \"Although it's not a requirement, almost all of the women are bisexual. They can enjoy being with another female as well as a male, although a male may be their preference. Many of the groupings are two women and a man, or other creative combinations that help even things out.\"\n\nLars, Stan, and Tim were shaking their heads in disbelief. \n\nTim stated, \"This place is a paradise for a horny guy.\"\n\nCricket jumped in, \"Or a horny woman. One of the characteristics of just about everybody here is that they're hypersexual. We all engage in not only sex, but also related fantasies, urges, and behaviors.\"\n\nDave added, \"Yes, that's true. Hypersexuality has been considered a psychiatric disorder, but we don't think of it that way. Our preferences have rarely led to adverse consequences in social, work, or other parts of our lives. Of course, other than work, much of our lives are here with our friends and lovers who think the same way we do.\"\n\nLucy said in a tentative tone, \"I think about sex all the time.\"\n\nOlive nodded, and Angie said, \"Me, too. I never thought it was anything bad, just me being horny most of the time.\" She turned to Stan, \"What about you, honey?\"\n\nStan looked put on the spot and definitely guilty. He said, \"Hey, I'm a guy. Of course, I think about sex all the time. Well, maybe every ten or fifteen seconds, but I still get a lot done at work.\" He glanced sideways at Dave who was officially his boss's boss's boss. Tim nodded in agreement.\n\nDave nodded. \"About the same as the rest of us. What about you Elin? Lars?\"\n\nLars responded first, \"I'm where Stan and Tim are. At home, Angie and I have never lacked in our love life. From what I read, I am sure we're way ahead of normal.\"\n\nOlive grinned, \"Us, too.\" Stan blushed at his wife's statement.\n\nElin observed, \"I feel like Lucy and Olive do. One thing I do notice here is that you are very open and accepting about sex as a subject of conversation. In this group, the guys each blushed at mention of various aspects of the topic, the women not so much. Cricket and Dave didn't bat an eyelash; it was just normal for them.\"\n\nCricket smiled, \"It is. We're also very open about sharing fantasies with each other in the Circle. After all, the person we're talking to is one of our lovers.\"\n\nThe heads nodded.\n\nLucy looked up from the scrapbook again and aimed her remarks at her friends rather than Dave and Cricket; \"Hey, according to this if we stay around here into the evening hours that's when we'd be able to watch everybody in the Circle making love ... and we could maybe join in.\"\n\n\u2003\n\n<center>Chapter 33 \u2013 Scandalous Ideas</center>\n\n\"I love you.\"\n\nThe words were more than seriously stated by each and to each of the nude partners as they made love on the large bed in the Prentiss house \u2013 three women and a man; Dave, Alice, Cricket, and Cindy Worthington.\n\nThe same words had been said the night before between the group and a few others as well. This Saturday morning they seemed to carry special meaning after the group had slept naked and cuddled together in a loving amorphous mass of hypersexual-sated flesh.\n\nDave sighed and sat up. He muttered to the others, \"I have to go serve breakfast. You guys can stay and make love to each other again, but last call will be about ten o'clock if you want to eat.\"\n\nAlice grinned up at him, \"I want to eat ... Cindy's drippy pussy again.\"\n\nCricket giggled, \"Oh, me too. How nourishing.\"\n\nHe left for the showers, and shortly was at his workstation making omelets by request as other members of the Circle showed up.\n\nHe was not surprised when Ginny Fuller, Nora DeVille, Carol Turner, and Leann Harris slipped between some of the houses, stripped away their t-shirts and tops, and came to order up breakfast. He got kisses from the newbies.\n\n\"Where are your husbands?\"\n\n\"Golf!\" Leann said with a slight tone of disgust in her maw.\n\nCarol volunteered, \"At least they're walking the course, so they'll get some exercise.\"\n\nDave said, \"None of them are overweight. Heck, two of your males have visible six packs.\"\n\nLeann moderated her opinion, \"Oh, I know. It's just that I wanted some loving this morning, but hitting that little white ball around a field had more attraction than my pussy. Something's wrong here.\"\n\nThey all laughed and Dave started on their veggie omelets.\n\nMore to his surprise, fifteen minutes later Olive Carter and Angie Nilsson walked onto the patio. The paused and looked around, and once they saw Dave they headed straight for him.\n\nDave greeted the two as he harvested two of the omelets. \"Good morning, ladies. What a surprise and pleasure to see you here.\"\n\n\"We weren't sure you were serious in your invitation, but we really wanted to come and see more of the Circle ... and you. Elin and Lucy would have come, too; but they were less bold about it that I guess we were. If this is at all inappropriate please tell us.\"\n\n\"No. No. Stay. Order some breakfast. I do omelets. If you want eggs done some other way, cereal, or other breakfast stuff just sit at an empty place at one of the tables and someone will come by and take your order within a minute or two.\"\n\nAngie nodded, \"Veggie omelet would be great. Can we tell Lucy and Elin to come? I'll text them.\"\n\n\"Yes. Where are your husbands?\"\n\nAngie responded, \"Lars is sailing with a friend until early afternoon, and Olive's is repairing a broken window where a softball oddly went through the pane.\" Olive nodded and gave a mock look of sadness like a mime.\n\nOlive said, \"Boys throwing ball indoors. Not good for windows or walls. I'll also have a veggie omelet, providing they're easy to make.\"\n\nDave grinned, \"I'm already cooking Angie's.\" He whizzed the ingredients together in a bowl and soon had Olive's omelet in the special pan. \"I take it our conversation a week or so ago provoked your continued interest in the Circle.\"\n\nOlive took stock of the thirty or so other women who were topless on the patio. She stretched and pulled the top she'd worn over her head, releasing her quivering mounds of tit flesh. Her nipples were excited and both pointed right at Dave, almost in invitation.\n\nAngie repeated what Olive had done, only her pert breasts didn't do the bouncy dance that her friend's had. She turned to Olive, \"Show off!\"\n\nOlive grinned, \"If you got it, shake it.\"\n\nDave asked, \"Anything specific you wanted to talk about? I have another twenty minutes before we close down for breakfast, but I could get my thoughts in order.\"\n\nAngie shook her head, \"No, and we'll wait if that's all right. By that time we'll have something to ask about.\" \n\nCindy Worthington rushed by the table and picked up the completed orders and rushed them out to Juan, Ann, and Bill. Olive and Angie watched her as they stood off to the side and watched Dave work.\n\n\"Does she work here?\"\n\n\"This is part of her service duty to the Circle, just as my cooking omelets is part of my service duty.\" He went on to describe the concept of Service as viewed by the Circle, and how everyone had at least one job they did to support the well being and operations of the Circle.\n\n\"Do you do other things?\" Angie asked.\n\n\"Yeah,\" Dave replied. \"I'm also on the board of directors for the Circle, which includes the land and all our finances. I often tend bar. I also am the lead instructor for a course we call Circle 101 for new members or people interested in joining. We do that weekly, and sometimes it's just a good rap session. I often do cleanup after one of our parties. I pressure wash the patio and pool showers once every two weeks. I have a few others things, plus I fill in when someone is busy and has to miss a chore.\"\n\nOlive chimed in, \"And you're the CEO of EneRG.\"\n\nDave nodded. \"If you think about it, that's a big communal work effort, too. We have lots of people, including you, applying their expertise to research, make, and ship batteries to companies that want to put them in their products for various consumers. It's the same principle.\"\n\n\"But I get paid,\" Olive said.\n\nDave teased, \"Oh, I can fix that on Monday.\"\n\nOlive looked horrified and quickly said, \"Don't change a thing!\" \n\nAngie doubled over with laughter. \"He got you good.\"\n\nOlive said, \"I did finish reading the scrapbook you loaned us. Everyone in our clique got it for an evening. This is a fascinating place, and much more that we talked about last week.\"\n\n\"You focused in on the sex. There is more to it.\"\n\n\"Sex is the controversial part, and that's what makes it interesting. Even though you didn't suggest it, we read between the lines. Olive and I got STD tests this past week.\"\n\nDave looked over the top of his sunglasses at them with a skeptical look. \"And you did this expecting that what would happen?\"\n\nBoth women blushed. Olive tried to respond, \"Errr ... we were hopeful ... we wanted to ... if you were willing ...\"\n\nDave shut them down. \"No. I can't speak for everyone here, but I can speak for many of us. We aren't in the business of having secret liaisons that might threaten a relationship. You guys need to involve Lars and Stan if you want something more to happen. Your clean bills of health are a good start, however.\"\n\nCindy darted by and picked up a couple more omelets leaving Angie's and Olive's on the warmer. She went off again in a hustle.\n\nAngie observed, \"She seems to be a very dedicated Circle member.\"\n\nDave commented, \"She's not a Circle member; just a guest. She's one of Mark Worthington's wives.\"\n\nA long silence ensured at Olive and Angie looked at each other and silently communicated with looks and waggled of eyebrows and lips.\n\nDave yelled out, \"LAST CALL FOR OMELETS!\" No one replied so he started one more for himself, and soon escorted Olive and Angie to a vacant table where they sat. Right after they sat Elin and Lucy arrived and joined them. They only wanted coffee, so there was no need to return to duty for Dave.\n\nDave commented on the 'Frequent, Intense, and Wonderful' article in the newspaper, and said that unlike the week before he wanted to mention to them some of the other features of the Circle that the articles under emphasized but which were key to the Circle and its culture.\n\nHe started by talking about how the Circle had shunned monogamy and why, talked about equality, non-possessiveness, fidelity, and briefly polyamory. He mentioned the voyeurism and exhibitionism to go with the sexuality of the Circle, and then mentioned the concept of compersion, paternity, bisexuality, and authentic nature of each person in the group.\n\nDave talked about how the Circle avoided so much drama, using the concept of harmonious confrontation, and win-win approaches to differences. The diversity was obvious, but the unconditional love needed some comments.\n\nBy the time he'd finished an hour had passed. The group took a break to use the new bathrooms.\n\nAs they sat down again, Angie said, \"Who around the patio is not a member? Who's trying to join or pledge as you put it?\"\n\nDave pointed out the four neighbor women, split two-and-two in two different conversation groups so they could become known by other Circle members. Lori and Haley, two of the younger pledges, were on cleanup duty, going from table to table collecting plates, flatware, empty cups, and such and getting them to the kitchen.\n\nTatiana and Chelsea were helping Holly and Megan with a crowd of four and five year olds around the shallow end of the pool. Some swim and dive lessons were in process. He pointed out Jasmine washing down the shower stalls where swimmers rinsed the pool chlorine from their bodies. All that triggered a further discussion of how to integrate into the Circle by hanging around and by getting on various service teams.\n\nThe further discussion was how to meet people where one wanted to meet everyone in a prescribed area. Dave's answer was simple, 'Hang out with us a lot.\"\n\nAngie raised the harder issue finally, the one Dave had been expecting for hours. She said, \"How do we get our husbands interested in also joining the Circle with us?\"\n\nDave actually laughed out loud. \"I've been waiting for that question from one of you \u2013 at least from Olive or you. I don't know how close you are to Tim, Lucy. This may also apply to you.\n\n\"First off, you need to know what motivates him and what might motivate him to join our group. He already has at least one friend that he fishes with. Why does he do that? What's the attraction? Are there lessons there that you could bring to this situation?\n\n\"Yes, we are sexual, but from how quiet he was last week I wonder whether that would be a motivator. We are a loving group, and once we befriend you we are your friends for life through thick and thin. For some people, that's a major currency.\n\n\"Other currencies you could barter with each of your spouses with might include expense money, entertainment value, status, your sense of influence or his or hers, level of comfort, future prospects for fun, advancement or entertainment, the challenge of joining, or some link to their working relationships.\n\nIn both cases, I think you need to get them talking about the Circle and what they like and worry about. I am sure that losing you as a mate would be high on their worry list. What can you do to assuage their fears? You need to learn some of the lore and other stories that make the Circle the Circle, and then I'd build your case for you joining as a couple. You could talk to some of the other couples who are Circle members, too.\n\n\"As you hang around here, talk to some of the others about how they dealt with the emotions and feelings about relinquishing their old way of thinking about relationships and adopting new ones, especially the married ones. I can speak from personal experience, that it's a big jump to suddenly imagine and then see your spouse making love to another person.\"\n\nOlive said, \"Does everybody finally adopt this as their lifestyle?\"\n\nDave shook his head. \"No, certainly not. There are dropouts along the way, but after some point everyone makes it. I should study that more. Many people can't even start to imagine this as their lifestyle, so they don't even appear on our radar screen but for an instant when they hear about this place \u2013 the Circle.\"\n\nOlive pushed out her generous chest and shimmied her large tits. \"Well, Stan better get used to the idea, because if the Circle will have us, WE want the Circle.\" She turned to her cohorts. \"What do you think?\"\n\nAngie said, \"Lars might not know it yet, but we are going to become pledges to the Circle. I love this place and everything I hear about it.\"\n\nLucy grinned, \"I'm in, and I think Tim is very interested, too. He told me last week that for the first time in his life, he feels he might be ready to make some kind of a real commitment to a relationship, only it'd be with the Circle of people and not one individual.\"\n\nElin smiled. \"I don't have a trailing spouse. This place is scandalous, and I love everything I heard about it. I want to join. I hope to begin the journey very soon.\"\n\nHours later, after a full afternoon with the various women and men pledging the Circle, and then cocktails and dinner, Dave danced closely and romantically with Elin. She was a small woman, slight even, with small pert breasts and nips that seemed perpetually hard for the entire day. She claimed that it had to do with the sexual atmosphere of the Circle and her arousal.",
        "Dave had stripped off his t-shirt so he and Elin could feel and enjoy the skin-on-skin contact. Dave got more explicit about the exhibitionist behavior of Circle members, not that they were particularly showing off, only that they made love communally as a group in front of each other on nights like this. One could ignore their neighbors or draw arousal and lustfulness from all the lovemaking going on around them.\n\n\"What do you want to do?\" Dave asked. \"We could go inside away from everyone else.\"\n\nElin sighed, \"In for a penny, in for a pound. Let's stay outside. I want you to make love to me in front of everybody else.\"\n\nDave explained about how others \u2013 male or female, might want to join with them, especially with a new person in their midst. He told her, \"I can easily deflect their joining with a wave of my hand or quick gesture or word.\"\n\n\"What do others in the Circle regularly do in such a situation?\" Elin asked softly.\n\nDave nodded, \"Welcome their new lover to the mix.\"\n\nElin smiled, \"Then that's what I'll also do.\" She paused and added, \"I've never been so excited about anything as I am now.\"\n\nDave led Elin to a chaise after many of them were already filled with other combinations of Circle members and pledges making love. He watched at the fascination Elin exhibited as she lay down and welcomed Dave beside her. Were it possible, her eyes would have bugged out of her head and been looking in different directions absorbing and processing the arousal and the lovemaking those around her were doing.\n\nShe whispered, \"This is the most wonderful situation I've ever been in. This is so cool. This makes me want you that much more.\"\n\nTheir clothing disappeared in an instant, and a great deal of foreplay took place as they both lavished each other with words, love, and sexual innuendo. Of course, they were exceptionally physical with each other, their fingers, mouths, and tongues dancing over and in every available opening and proboscis. Elin could suck a golf ball through a garden hose. Dave knew how to fuck someone with his tongue and deliver a great orgasm.\n\nDave gave Elin The Experience, and then they made love in every way he could think of to bring her pleasure and orgasms. Elin proved to be a hot, passionate lover with a creative side to also pleasing Dave. Both were a surprise because she had been so quiet and reserved with her friends. Moreover, she came through the experience madly in love with the man. The stars in her eyes lit up the whole night. After two episodes the pair lay cuddled together on the chaise whispering softly and lovingly to each other.\n\nCindy Worthington stopped beside them and then sat. She had an angelic smile. She ran one of her hands up Elin's gorgeous leg. \"May I join the two of you? I need more 'Dave Time', and just so you know I was just with Aaron and Talia ... and I'm afraid we haven't met yet, but I saw you around the Circle all day and with some other women earlier.\"\n\nDave introduced Elin and Cindy. Elin briefly explained about her friends. She told how she'd started to work at EneRG in the Sales Operations Department helping to process new orders and get them to the correct manufacturing plant in concert with the manufacturing operations group.\n\nCindy leaned down and kissed Elin as Dave watched closely. He whispered, \"Don't scare off Elin. I like her and she may want to join the Circle.\"\n\nElin said softly, \"Elin is in love with Dave, and wants to join the Circle. I think I understand all that that implies. I also think I'm about to love Cindy more than just a simple hello.\"\n\nElin kissed back and then pulled Cindy's nude body down beside her so they could make out better. After many French kisses, Cindy surfaced. \"This girl is a keeper. Did you know she was so passionate?\"\n\n\"No. She's a pleasant surprise,\" Dave said in a low tone.\n\n\"I'm a sleeper,\" Elin said with a grin. She had reached a hand down and started fingering Cindy's wet pussy. Seconds later, she had moved so she could eat out Cindy's pussy, sucking up every molecule of cum and girl juice that she exuded. Dave cradled Cindy and made love to her upper body as Elin focused on the lower half.\n\nEventually, Cindy said, \"Elin, come and sit on my face so I can eat Dave's cum from you. He can fuck me as you two kiss.\"\n\nDave teased, \"Fuck?\"\n\nCindy rolled her eyes, \"Make love to me with that large cock of yours. Fill me, and I mean with more than just man meat.\"\n\nThe threesome adjusted position as Cindy designated, and then the orgasms started. Forty minutes later Dave had cum once in each woman and had them both cuddled to his chest. Each of them was covered in the glistening juices of sex and orgasms.\n\nElin said, \"Watching the two of you while being right next to you was so hot. I did observe something about you two, however.\"\n\nDave bit on her taunt, \"What was that?\"\n\n\"You two are deeply in love. The compassion, caring, love, passion, and lust between the two of you is so thick you could cut it with a dull knife.\"\n\nCindy said, \"Well, we do live together \u2013 at least temporarily. I'm kind of married to Mark Worthington. My sister Elsa is his legal wife, but I'm committed to him as well.\"\n\n\"But you can love at least two men deeply, if I understand my Circle lessons from earlier in the day properly. Dave is one of them. I did see you earlier with the other man, but you weren't as ... something ... as you are with Dave.\"\n\nCindy smiled weakly, \"That's because I am as in love with Dave as I am with Mark. I love his wives, too; and they have told me that they love me.\"\n\nDave said, \"And they have each communicated the same to me, sometimes with some additional glowing terms of how happy they are to have you in our lives and in our big bed.\"\n\nElin smirked, \"Oh, yes. The big bed. I saw it on my tour, but have yet to experience the pleasures that occur there.\"\n\nCindy mused, \"There is no greater pleasure in life than drifting off to sleep next to the man ... the people that love and protect you. If there's room, why don't you join us tonight, Elin?\"\n\n\"I'd like that a lot.\" She sat up, but kept stroking Cindy's thighs, often allowing her hand to brush across the wet pussy. Cindy kept touching Elin and also stroking Dave's thighs.\n\nDave thought for a few seconds, obviously weighing a large decision. He sat up and said, \"Cindy Worthington, I love you dearly, completely, and unconditionally. I have a serious question for you to consider ... for us to consider together.\"\n\nDave slid off the chaise so he knelt in front of Cindy. He took both her hands in his; \"Cindy, will you marry me?\"\n\n<center>End of Book 7\n\nBook 8 will start appearing in the Fall of 2019. </center>"
    ],
    "authorname": "SteveWallace",
    "tags": [
        "group sex",
        "hot wife",
        "lifestyle",
        "marriage proposal",
        "polyamory",
        "sex party",
        "swapping",
        "swinging",
        "threesome"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/loosening-up-bk-07-ch-30-33-end"
}