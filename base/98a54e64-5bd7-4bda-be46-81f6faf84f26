{
    "title": "Sizzling Embrace Ch. 08",
    "pages": [
        "Comments, critiques and tips are welcome. Tyler Tyron Wesley vs. Tanesha Ashton \n\nSorry about the length guys. \n\nDedicated to Andria...my muse! To Kak, Gaga & Queenie...enjoy your AGADZI moment.\n\nAnd to the original TANESHA ASHTON. Love your swag chica...\n\nSigned, sealed, delivered!\n\n***\n\n\"Why can't we just take out these two now?\" Will, one of Ty's fellow Arrowheads growled low in his throat.\n\n\"Patience, Will.\" Ty growled right back as he watched Will circling the two sleeping criminals as if he was a matador. \n\n\"But I'm bored.\" Will muttered. \"Can't we just...have some fun with them?\"\n\n\"Shut up, Will.\" Jackson hissed. \"There will be lots of fun later. Now we wait.\"\n\n\"Killjoys.\" Will mumbled as he turned to walk towards the other end of their 'territory' as they called their hideout.\n\nTy and the three other Arrowheads who had been sent on the mission had been hiding in the woods behind the camp of the criminals they'd been tasked to take out, for weeks. The idiots had shot down their craft about a month earlier. Fortunately for them, Nate, their pilot and fourth member had spotted their enemy quickly enough. On Ty's orders, all four SEALs had jumped out of the craft and left it on auto pilot before the idiots had hit the aircraft, losing their weapons and of course, food. For about a week, they'd trekked through the dense forest, with just a small bottle of water each, and the usual knives that were usually hidden on soldiers. When they eventually got to the camp of their targets, who were none other than the remaining force of the ZONKAI, they were exhausted. The Arrowheads noticed that the thirty men in the ZONKAI camp were actually mercenaries who were obviously there to secure the camp before the arrival of the remaining notorious members of ZONKAI themselves. They had so many sophisticated weapons and ammunitions it was almost as if they were preparing for war. The Arrowheads knew they were no match for their targets in their exhausted state and no-weapon status. They'd therefore hidden themselves, resting whilst trying to come up with a plan to best the criminals. They'd lain in wait for about two more weeks, surviving on fruits from the forest, till all twenty--six ZONKAI members had arrived at camp. \n\nWord had gotten to the FBI that there was going to be an attack on the country. Some idiot, who called himself Lord Wasaga, wanted to succeed Ghost and thought the best way to show his capability as a potential head of ZONKAI and command respect, was to do something drastic. As a statement to the government...that even though Ghost had been locked up, ZONKAI was still strong, Lord Wasaga was planning a huge attack on the country, which was supposed to occur on the day set for Ghost's trial. What they planned to do or how they intended to strike was not known to the FBI intelligence team. It was however believed that their meeting, which was to take place in that Balsas forest in Mexico, was to put together a plan. The remaining members of ZONKAI were to be present to witness Lord Wasaga's brilliance, and later, his perfect execution of the plan. The mission of the four-man team was simply to neutralize Lord Wasaga and his men. Whatever wicked plan they had, was not to materialize. They'd been given the order to kill the operation of ZONKAI once and for all. Ty and his men had planned on shooting the criminals with tranquilizers and arrest all or as many as they could. But as their weapons had been blown up with their craft, they didn't have any choice but to take out the group the hard way. It was kill or be killed. And the Arrowheads definitely didn't plan on being part of the latter. \n\nThe greatest advantage the Arrowheads had was the fact that some of the members of ZONKAI and the mercenaries actually wore the military camouflage attire just as Ty and his men had on. They'd therefore been able to stealthily move into the ZONKAI camp, undetected, and stolen some of their weapons. They made it a point not to take too many at any point, in order not to attract attention. They sometimes went as far as blending in whilst the fools drank and had fun, just to steal some of their food as thanks to the ZONKAI, they'd had to rely only on the fruits they could find in the forest. For weeks, Ty and his men had succeeded in stealing enough weapons and had also gotten their strength back. They were pumped for action. The idiots wouldn't know what hit them when the Arrowheads finally struck. \n\nBut just as the Arrowheads were ready to strike, they'd heard snippets of talk from the oblivious men in the ZONKAI camp. It looked like the evil group, as Ty and his men now called the men in the ZONKAI camp, was waiting for some very important people before the proper meeting began. They were supposed to be the financiers of the group. The Arrowheads were even more excited than the ZONKAI themselves. They couldn't wait to meet the so-called financiers. It appeared they were going to get more than they'd bargained for. Ty and his men therefore didn't have any choice but to wait. Their plan was to wait till they had a full house before they struck. But waiting wasn't easy. The Arrowheads were restless and bored. \n\nTy looked at the two sleeping ZONKAI men in front of him and chuckled. The two idiots had snuck away to fuck each other, totally oblivious to the audience they had. And then when they were done, they'd stupidly drifted off to sleep. Unfortunately for them, Will, in his usual naughty move, had squeezed drops of Valerian plant into their sleeping mouths. Now those two were bound to sleep longer, which was not a good thing as the others might notice their absence and come looking. The Arrowheads would therefore have to hide in order not to be caught when the idiots came looking. In a way, Ty couldn't wait to see the looks on the faces of the criminals when they eventually found the two semi-naked men. He groaned at how anxious he was for that small fun.\n\n\"What?\" Jackson asked from beside him.\n\n\"I am bored.\"\n\nJackson burst into laughter. \"Aren't we all? What brought on that conclusion?\"\n\n\"I just realized I can't wait to see the looks on their faces when they find these two. I'll probably have to gag myself to stop myself from giving us away, Jack. 'Cause I know I'm going to laugh hard.\"\n\n\"Dude, if you get us busted, I swear I'll tell them I'm a missionary and you've captured me as your sex slave.\" Jackson gave a mock growl, drawing laughter from Ty.\n\n\"Yeah right. As if they'll believe you.\" Ty chuckled, standing up. \"We better hide now Jack. It's going to be a long night.\"\n\n\"Damn, I hate the waiting bit of this job.\" Jackson muttered as he rose to follow Ty.\n\nAnd even as they climbed up the massive tree to lie in wait, Ty found his mind drifting home. He knew the Arrowheads back home had found their damaged craft by then. But he also knew that they had hope that he and his men were okay. Another team would have been dispatched already if they weren't positive that they were okay and working. It was so frustrating that they couldn't get in touch and report on their progress. They could only do that after they'd taken out the evil group. Because then, they could use their systems to call for help and get out of that forest. They'd been away for over a month already and Ty knew their families would be sick with worry.\n\nA groan tore out of Ty's throat when his thoughts went to Tanesha as they always did. He could imagine how she was feeling at that moment, not knowing what had happened to him. Ty knew that by then, the authorities had already informed her of what had happened. He'd left those instructions because he didn't want her to go through what she had the last time he'd had to go MIA. If only he had a telepathic power to reach out to her and let her know he was alive and well, he would in a heartbeat. He needed to talk to her so bad. See her, touch her, kiss her...he just needed her. He was missing her so badly it was eating him alive. Was she pregnant as he felt in his bones she was? Somehow Ty had a strong feeling he'd planted his seed inside her. That was why he'd asked Chris to give her the MasterCard to use whenever she needed money. Ty rubbed his face as he recalled the call he'd made on his way home from the wedding grounds, to get his stuff. He'd surprised Jackson, who had turned to look at him as if he'd lost his mind. He'd called his lawyer and asked him to drop everything he was doing and meet him at home with a new clause to be added in his will. The new clause stated that everything he owned, except what he'd already set aside for his parents and siblings, was to go to Tanesha and her unborn child, should he not return from the mission. If on the other hand she wasn't pregnant, she still got a chunk of his wealth. Yes, he was that crazy about her.\n\n\"Dude...\" Jackson had gasped. \"You can't possibly know whether she's preg...\"\n\n\"She is.\" Ty had breathed, staring out at the scenery. \"I just know. A father always knows.\"\n\n\"It's rather a mother who always knows, you fool. Don't you think this is rather too much?\"\n\n\"No, it's not Jackson.\" Ty had said quietly. \"My mother did same for me before I was even born.\"\n\n\"Yeah, but she knew you were there. After all, you were inside her stomach. But this...\"\n\n\"I know my child is in that stomach Jack. Even if the mother doesn't know it yet. And I need to know they will be okay if I'm gone.\"\n\nJackson had gone quiet for a moment. Then with a sigh he'd turned to look at Ty. \"Much respect man.\" Jackson had said, giving Ty a fist-pump. \"How about I get to give her a congratulatory kiss if it turns out she's really pregnant?\" He'd asked with a grin.\"\n\n\"Now I see you don't value your teeth.\" Ty had given a mock growl.\n\n**\n\n\"Dude, what's funny?\" Jackson called out from his perch on the tree. \"You're laughing.\"\n\n\"You are, dipshit.\" Ty laughed. \n\n\"What did I do?\"\n\n\"You want to kiss my pregnant girl.\" Ty's amused laughter drew a chuckle from Jackson.\n\n\"You're thinking about her.\" It wasn't a question.\n\n\"I miss her so much, Jack.\" Ty breathed. \n\n\"Can I ask you something, Ty?\" Jackson asked quietly.\n\n\"Shoot.\"\n\n\"How...how do you know you're in love with someone?\" He asked. \n\nTy went quiet, trying to come up with the simplest and shortest way to express how he felt to his friend. \"You know you're in love when you don't want to fall asleep because reality is totally better than your dreams.\"\n\nJackson went so quiet Ty thought for a moment he hadn't heard him. \"Fuck.\" Jackson finally muttered. \"That's some powerful shit.\"\n\n\"Yes. Once you feel it, it's like no other thing in the world.\" Ty breathed.\n\n\"Well, those asshole financiers had better show up quickly so we can go back home to Miss Universe...and the baby.\" \n\n\"Believe me now?\" Ty couldn't mask the smile in his voice.\n\n\"Who am I to challenge my Lieutenant Commander? A father always knows, right?\" Jackson said dryly making Ty laugh.\n\n\"Fuck off asshole.\" \n\nBut even as Ty laughed with his friend, he said a prayer for both Tanesha and their baby to be safe. That was how sure Lt. Cdr. Tyler Tyron Wesley was about his baby.\n\n***\n\nTanesha giggled as she watched the monitor and listened to the heartbeats of her babies. It never ceased to amaze her. The fact that they could have such strong heartbeats when she couldn't even feel them inside her yet, made it even more astounding. \n\n\"Incredible isn't it?\" Dora Ashton said from beside her daughter, staring at the monitor with a brilliant smile on her face. \"Small hearts and yet, very strong. That's my grandbabies for you.\" She beamed proudly.\n\nTanesha was nine weeks pregnant. Twins! She still shivered with shock, excitement and sadness whenever she thought about the twin babies growing inside her. Shock for the fact that they were two and not just one, excitement for the fact that she was pregnant with Ty's babies... had a huge piece of him growing inside her, and sadness for the fact that Ty wasn't around to even know he had babies on the way. Ty had still not turned up after two months. Although she was worried and unhappy, she knew in her gut that he was alive. \n\nWhen she was given the bad news, of Ty's disappearance, she'd cried for days and eventually had to be admitted into a hospital. And that was how her pregnancy had been detected. From her doctor's calculation, she'd conceived on the night of that dinner at the White House. Tanesha wasn't surprised. She still cried, but it wasn't as frequently as before because besides the fact that she didn't want to cause the babies any stress, she was genuinely over the moon for the pregnancy.\n\nPaul Ashton had predictably hit the roof when they'd found out about her condition. But Tanesha's mother had worked her magic on him, reminding him that it was not necessary to cry over spilt milk. Besides, their daughter was already devastated over what had befallen Ty so there was no need for him to compound her problems by portraying his anger at the news of the pregnancy. So Paul had kept his cool and showed his support to his daughter.\n\nTanesha was still not showing, which surprised her. After all, there were two human beings growing inside her. But her doctor had assured her that since it was her first pregnancy, it wasn't strange at all. \n\n\"Since you're a first-time mum, you could begin developing a baby bump any time between twelve and sixteen weeks.\" Dr. Jane Brooks had explained. \"You have up to the end of your first trimester to enjoy your flat tummy.\" She'd added with a chuckle. \n\nBut Tanesha couldn't wait to see her stomach swell with her miracle. The only change she could readily notice within herself was that her breasts felt heavier, she'd lost appetite for food and she experienced frequent heartburns. She still went for lectures and did everything expected of her, except for the fact that she wasn't her usual bubbly self. Ty had been gone for two months without any word. Tanesha just wasn't a happy girl. She however made an effort to look cheerful around people who she knew were worried about her...like her family and Ty's friends. The guys had shown her so much love in Ty's absence, assuring her that Ty was too stubborn to die so she should be positive. All she had was hope and nothing more. Sometimes she cried because she was almost sure that some forces were keeping them apart. Just when she thought she had her boyfriend back and could be happy, fate separated them again. It was so frustrating and irritating. But she had hope. Ty would come back to her. He'd promised. And Tanesha knew Ty took his promises seriously.\n\n\"I still can't get used to this car.\" Dora muttered as she slipped into the front seat of Ty's Bugatti Veyron. \"These kind of cars are for young people, not old birds like me.\"\n\n\"Oh come on Mum.\" Tanesha laughed as she accelerated the car out of the parking lot. \"It's not as if you're the one driving. I am. And the last time I checked, I was very young, thank you very much.\" She said cheekily, making her mother laugh.\n\n\"Silly little girl.\" Dora laughed.\n\n\"Not so little anymore.\" Tanesha sighed, losing her playful look.\n\n\"Hey, everything will be fine.\" Dora said, reaching out to rub her daughter's cheek with her knuckles. \"Don't worry too much.\"\n\nTanesha nodded as she drove towards Ty's home. It was a Saturday. And her mother had promised to spend the day with her in Ty's house, where Tanesha always spent her weekends. She smiled when she remembered the day the squad, their partners and kids had all converged in Ty's house one Saturday, to spend the day with her. Even Adele, Shane's daughter had come too. It had been fun. Tanesha couldn't remember a day she'd been that carefree since Ty left on that fateful mission. She'd invited Thea and Theo, Ty's twin siblings to come too. She'd had a blast. The guys had made a bet on the sex of the baby, not having any clue that she was having twins. The only ones who were privy to that information was her family. She planned on telling the squad later, after she was done savouring the news. So the antics of the squad had amused her even more. When Michael had began to earnestly interview her to know exactly how she was feeling, to help him in making a choice during the bet, Tanesha had laughed so hard her sides had hurt. \n\n\"You're such an asshole.\" Cole had grumbled.\n\n\"Hey, don't hate.\" Michael had chuckled. \"As a father to both a boy and a girl, I have an advantage here and it will be stupid not to use it.\"\n\n\"He's so full of shit.\" Matt had growled, making everyone burst into laughter.\n\nThose guys made her smile just by thinking about them. She loved them to bits. As Tanesha cut of the engine, Ty's housekeeper came out to meet them with a smile on her face. Her boss had given her strict instructions before leaving on his last mission. \n\n\"Make sure she has everything she needs when she comes here, Annabel.\" He'd said. \"And call any of the guys if you see her crying, okay?\"\n\n\"Roger that Sir.\" She'd given a salute that had made Ty smile.\n\n\"And keep her company whenever she comes around. You're young. You two can get along perfectly.\"\n\nAnd Annabel had done just as her boss had instructed. She lived in the detached guest house on Ty's property with Peter, her husband who was also the caretaker since Ty was mostly out on missions. Therefore whenever she detected that Tanesha didn't look too cheerful during her weekend sleepovers, she stayed with her and tried to raise her spirits. In fact the only times she stayed away was when Tanesha was studying or sleeping. They'd gotten pretty close in such a short time and Annabel was so thrilled with the news of the baby. She knew her boss would be ecstatic when he got to know. She just prayed for his safe return.\n\n\"Hello Mrs. Ashton.\" Annabel greeted as she opened Dora's door for her. \"Good to see you again.\"\n\n\"Hello Anna.\" Dora hugged Annabel. She was grateful to Annabel for the way she took care of Tanesha whenever she stayed over at Ty's. And she never failed to call her every Monday just to say thanks. \"Are we set for the bakefest?\" \n\nAnnabel laughed as she took Dora's handbag and linked her hands with hers. \"I'm so impressed with myself on how I've set the place up I think we should probably turn this into a TV show of sorts. Maybe we should call the food network channel to come shoot the whole thing...\"\n\nDora burst into laughter as Tanesha shook her head in amusement. She'd made the mistake of telling her mother that she craved freshly home baked cake. And Dora had been so thrilled to hear that Tanesha, for once had a craving, she'd called Annabel to set it up so they could bake the house down. Now Tanesha was regretting opening her big mouth.\n\n\"We can call it the 'Saturday Cake Bakefest.\" Dora waved a hand grandly above her head, and then joined Annabel to laugh even harder.\n\n\"You two are something else.\" Tanesha muttered as she listened to their laughter.\n\n\"But that would be so cool if it could be arranged.\" Dora gushed.\n\n\"Well, there's a camera of sorts in the kitchen.\" Tanesha muttered as she entered the living area. Ty's house had security cameras everywhere. Tanesha smiled when she recalled that one heavenly week they'd spent together before Ty had to leave on his mission. He'd always made sure he either turned the camera off in any room they fucked in, or destroyed the tape afterwards...which was very often, taking into consideration the number of spontaneous quickies they'd had in almost every corner of the house. \"You could always get Peter to focus on you. All you have to do is pretend you're an Iron Chef, teaching your audience how to bake on TV.\"\n\n\"Yes!\" Annabel shouted, making mother and daughter laugh. \"Peter...\" She started screaming her husband's name even as Dora entered the kitchen.\n\n\"Oh my God, she's crazy.\" Dora Ashton breathed as she took in the set up in Ty's kitchen. It was absolutely beautiful and looked so professional. When her eyes landed on two aprons, with the names, Dora and Anna boldly printed on each, she gasped. \"I love her.\" Dora beamed as she reached for the apron with her name. ",
        "\"Done.\" Annabel said as she entered the kitchen with a wide grin on her face. Let's get this show on the road. Tanesha, you're our audience. Just sit there and look beautiful. One of the cameras will be focused on you throughout.\" She said as she fixed her apron. \n\n\"Show time.\" Dora shouted as she did a classic Usain Bolt celebratory lightning pose. \n\nBoth Tanesha and Anna burst into laughter. Tanesha couldn't help but imagine Ty's face when he got to see her crazy mother on the tape, being her usual crazy self. She could imagine Ty with his heard thrown back as he laughed uproariously. That laughter of his...so rich, deep and soul stirring...the sound so open and free and infectious, always leaving goose bumps in its wake. She couldn't wait to hear that sound again...feel Ty's laughter sweeping over her. She lived and breathed to hear that sound from Ty. Tanesha's heart swelled and she couldn't breathe for a moment. She missed him so damned much. She didn't see the worried look on her mother's face. Neither did she see her move towards where she sat. When Tanesha felt her mother's arms go around her, she simply melted into her warm embrace.\n\n\"He will be back.\" Dora Ashton murmured against her daughter's hair as she rubbed her back soothingly. \"Everything will be fine. Just you wait and see.\" \n\nAnd even as Tanesha nodded against her mother, she believed. Her Ty was going to come back to her and their babies. There was no room for any other possibility in her book. \n\n***\n\nMeanwhile, somewhere in the deep Balsas dry forest in Mexico...\n\n\"We move in on my mark.\" Ty said quietly to his crew.\n\nFinally the night they'd all been waiting for had arrived. That night, they planned to take the ZONKAI by storm. Take it out once and for all. The so called financiers had finally arrived. And Ty and his men were stunned to realize that one was an advisor to one of the country's prominent senators. To say they were shocked would be an understatement. Was the Senator in on it? Or was the man only using his relationship as an advisor to the senator to infiltrate into the government to accomplish whatever he'd set out to do. Whatever the case was, the Arrowheads planned on capturing the two financiers and Lord Wasaga himself, to aid in whatever investigations the FBI deemed fit. \n\nTy was pumped. He could feel the adrenaline pumping through his veins. It was finally time for action. They'd left home eleven weeks earlier...almost three months, with just one goal...to take out ZONKAI. And that was exactly what they were going to do. It was going to be a quick and silent operation. They knew they were outnumbered. It would therefore be very foolish to go in with guns blazing. The plan was to mostly make use of their knives. Fortunately, they'd been able to steal some pistols and silencers and some grenades from their generous targets. The grenades, they hoped not to use as the sound would only get more target on their backs. Immediately their job was done and they had their three prisoners secured, they planned on contacting their Admiral using ZONKAI's communication systems, which the Arrowhead were shocked to realize were highly sophisticated GoTa CDMA handsets. They were highly sophisticated military walkie-talkies that could be used where there was no network coverage available...like the Balsas dry Forest. But unlike the usual walkie-talkie which was a two-way communication gadget, the GaTo enabled communication of all terminals at the same frequency, ensuring communication continuity. Well, the Arrowheads planned on making good use of those gadgets. Everything had been planned to the tee. The operation was not going to take more than thirty minutes. They'd studied and strategized so well Ty knew nothing could go wrong. He trusted his men. This was what they did best. They'd been punished enough by having to walk for a whole week in a dense forest, live in the forest, and be away from their families for almost three months. No more. Not if they could help it. \n\nAnd with that determination and ferocious savagery pumping through their veins, the Arrowheads made their move on the unsuspecting criminal-packed camp. \n\n***\n\nAdmiral Robert Mathias sat on his porch, nursing a glass of scotch when the call came. \n\n\"Mathias.\" He grunted surly into his secure line. \n\nHe wasn't a happy man. His Arrowheads were still at large. He'd been given only a three month waiting period by his superiors. After that period, he was to presume his men dead. Then he was expected to send in another team. The three months was almost up. Admiral Mathias was definitely not a happy man.\n\n\"Lt. Cdr. Wesley reporting, Sir. Mission accomplished. Requesting assistance to convey my crew and our prisoners back to base, Sir.\"\n\n\"I'll be damned.\" Admiral Mathias breathed, his voice filled with incredulity. \"Number of persons to be conveyed?\" The Admiral was already headed back inside, his body shaking with relief and excitement. \n\n\"Seven, Sir. The rest of the prisoners, who are mostly wounded, can be held in the prisons here.\"\n\n\"We'll be there soon. Sit tight. Is there anything we can do in the mean time?\"\n\n\"Well...since we have nothing to do but wait, the guys and I would like to call and talk to our families. We've found four GaTo CDMA handsets and would like to secure...\" \n\n\"Give me their codes.\" The Admiral demanded, reaching for a pen and paper. After quickly taking down the codes Ty rattled off, he started punching the codes into his computer.\" Give me ten minutes. Then you can start making your calls.\"\n\n\"Thank you Sir.\"\n\n\"Good job.\"\n\n\"Thank you Sir.\" Ty responded with a smile in his voice. It was very rare for Admiral Robert Mathias to pay a compliment. \n\n\"And, Ty?\" The elderly man's voice shook with emotion.\n\n\"Admiral?\"\n\n\"I'm proud of you son.\" He said quietly.\n\n\"Thank...\" Ty trailed off when he heard the dialing tone in his ear, indicating that the Admiral hadn't waited at all for his response. He grinned as he watched the handset in his hand.\n\n\"Care to explain that shit-eating grin?\" Jackson asked as he sat beside Ty on the bench.\n\n\"Admiral Robert Mathias says he's proud of us.\" Ty said simply, almost bursting into laughter at the disbelieving and yet awed look on Jackson's face.\n\n\"He said that?\" Jackson stared into his friend's eyes. \n\nTy nodded slowly. \"And he's going to secure the handsets in the next ten min...\"\n\n\"Yes.\" Nate, who'd been dying to speak to his wife and kid, gave a fist pump. \"That's what I'm talking about.\"\n\nThe Arrowheads laughed. Ty had called the Admiral's secure line, using one of the GaTo handsets. But they definitely couldn't call the unsecured lines of their loved ones with those gadgets unless the GaTo gadgets themselves were made secure. \n\nWhilst Ty waited for the ten minutes to be up, his fingers hovered over the keypad of the handset...ready to punch Tanesha's numbers. But for some reason, when he finally punched a number after the ten minutes, it wasn't Tanesha's number.\n\n***\n\n\"Hello.\" Kyle Parker was still chuckling as he picked up his phone. Dean Broody was an idiot.\n\n\"Did you knock him up?\" Ty drawled and then promptly burst into laughter when Kyle gave a roaring shout. \"Dude, shut up and listen to me.\" He couldn't stop laughing himself\n\n\"It's Ty, guys.\" Kyle bellowed. Them amidst the sudden uproar he growled... \"You son-of-a-bitch, tell me you're okay.\"\n\n\"I'm fine. How is Tanesha?\" \n\n\"Wait. I'm connecting you to...\" Kyle trailed off as Cole snatched the phone from him and connected it to the huge speakers in Kyle's large plush den, which he called his 'Man Cave'.\n\nThe squad, together with Tristan, Aaron and Shane, where in Kyle's house to hangout as it was Kyle's turn to entertain on that Saturday. The cozy 'Man-Cave' was filled with lots of fun stuff such as video games, pool table, dartboard, two different projected screens; one showing soccer whilst the other showed a movie, recliners, lots of comfortable seats, a bed and a bar which was stocked with any interesting liquor that could be thought of. Though the squad as usual had come together to have fun, the guys were not their usual lively and fun selves. Much as they knew their buddy Ty was a survivor, they couldn't help but get genuinely worried as he'd been gone for nearly three months without word. So to say they were thrilled to be hearing from Ty at that very moment, would be an understatement. Everyone spoke at the same time immediately they heard Ty's booming chuckle on the speaker.\n\n\"Guys, guys...one at a time.\" Ty finally bellowed. \"Jeez you're all such idiots.\"\n\n\"Fuck you, dipshit.\" Matt laughed. \"You okay?\"\n\n\"I wouldn't be talking to you fools if I wasn't, would I?\" Ty asked dryly. \"Now tell me, how's Tanesha?\"\n\n\"Before or after she realized she'd been knocked up?\" Chris muttered to the guys, drawing chuckles from them.\n\n\"What was that, Chris?\" Ty asked, sounding anxious. \"Speak up man.\" \n\n\"She's pregnant, Ty.\" Kyle dropped the news.\n\n\"Yes.\" Ty couldn't mask the joy in his voice. \"I know.\"\n\n\"You did?\" Michael asked, sounding surprised. \"You couldn't have possibly...\"\n\n\"Dude, when you hit the jackpot, you can feel it in your bones even before the machine announces it.\" Ty said cockily and then burst into laughter when the guys started raining curses and insults at him. \"Ow come on Michael. I know that idiot Dean didn't even have a clue when it was staring him in the face, but you are a doctor and has two kids for fuck's sake. Are you saying you didn't feel it when your swimmers hit that egg?\" \n\n\"You're a fool, Tyron.\" Dean growled, the insults and laughter getting even worse. The guys had a good laugh till Ty got all serious.\n\n\"Guys I want to do something outrageously massive for her but I don't know exactly what to do.\" He said quietly. \n\n\"Yeah, she definitely deserves something great after all you've put her through, soldier.\" Aaron quipped up.\n\n\"I know Aaron. I know.\" Ty responded. \n\n\"So get back here quickly and marry the girl.\" Damon said.\n\n\"Maybe it should be a surprise wedding.\" Tristan said.\n\n\"Dude, how can a wedding be a surprise?\" Dean turned to look at Tristan. \"You've obviously taken too many shots of tequila.\"\n\n\"Oh but it's possible.\" Matt said. \"Jen was telling me a story about a girl who had no clue her wedding was being planned. I think it was one of those reality shows. \n\n\"So let's do it.\" Chris said. \n\n\"But to pull it off, you need the ladies to help.\" Shane said. \"And Tanesha's mother.\"\n\n\"You're right Shane.\" Ty said. If I can get Dora on board, Kayla, Jen and Briana can help her work on Tan.\"\n\n\"I don't think Briana must be involved.\" Cole chuckled. \"That girl can't act to save her life.\"\n\n\"Oh she can be coached.\" Tristan said. \"She handled Kayla very well that other time, remember? Well, you should. After all, the final explosion occurred in your kitchen.\" The guys burst into laughter as Dean threw a pillow at Tristan.\n\n\"This whole thing sounds crazy but I'm loving it.\" Cole laughed. \"You said you're waiting to be rescued. How long exactly do you think that's going to take?\"\n\n\"Hmm... there's a lot of work to be done here.\" Ty said. \"I'm thinking we'll probably leave here in the next three days, go directly to base to be debriefed...which from the sensitive nature of this mission may take days. I'll probably be cleared to go home in say...six days from today.\"\n\n\"Guys, we have a wedding to plan.\" Damon announced. \"The wedding will take place a week from today Ty. Don't worry your head over it. Everything will be sorted by the time you get back. All you have to do is show up in church, dressed in all your glory.\"\n\n\"Yeah. And ready to sell your freedom.\" Matt muttered, drawing laughter from the guys.\n\n\"Where do you plan on going for your honeymoon Ty?\" Shane asked.\n\n\"Jamaica.\" Ty laughed. \"It's about time I see where my wife-to-be comes from, don't you think?\"\n\n\"Perfect.\" Shane laughed. \"Honeymoon is on me. I'll work on that.\"\n\n\"Thanks Shane.\" Ty sounded both surprised and excited. Shane, Chris' husband was a multi billionaire business mogul. Sponsoring his honeymoon was really nothing at all to someone like Shane. What surprised Ty was the man's eagerness to do that for him. \n\n\"Don't worry about it, man.\" Shane chuckled. \"It's the least I could do to say thanks for looking out for our country.\"\n\n\"Oww...that's so sweet.\" Chris purred, earning himself a gentle blow from his husband.\n\n\"Fuck off Chris.\" Shane growled, drawing laughter from the guys. \"When would you want to leave? Right after the wedding?\" He asked.\n\n\"Nope. I want to sleep in my own bed for one night.\" Ty drawled. \"We can leave the day after. But if I finish whatever I'm doing and get to sleep in my own bed before the wedding, I wouldn't mind going the same day...if we finish the ceremony early enough.\"\n\n\"I don't think that's possible Ty. We'll probably party till day break.\" Chris said dryly. \"You'll have to leave the day after.\" \n\n\"Alright then. Sunday it is.\" Ty sighed. \"Wait... Maybe Tanesha can't leave because of school...\"\n\n\"School is breaking for two weeks, starting Wednesday.\" Aaron chipped in. \n\n\"Great. It's settled then.\" Chris said. \"Now go work on Dora Ashton.\"\n\n\"Yeah. I'm going to call her right after I talk to my dad.\" Ty said.\n\n\"But you have to tell them not to tell Tanesha anything.\" Kyle warned.\n\n\"I'll do that. God, I'm doing it again.\" Ty groaned.\n\n\"I was thinking the same thing.\" Aaron said. \"She's going to kill you.\"\n\n\"She'll be too overwhelmed and too happy to even think of killing him, baby.\" Kyle murmured, pressing a soft kiss against Aaron's mouth. \"It's going to be great.\"\n\nAnd as Ty listened to his friends talk about how they were going to pull out all the stops to pull off the surprise wedding, he couldn't keep the smile off his face. Surely Tanesha couldn't murder him if the surprise was as good as the guys were saying it was going to be, right?\n\n***\n\n\"Now all we have to do is wait.\" Dora said, taking off her apron and making a beeline for the bathroom.\n\nFive different types of cakes were baking in one oven, whilst the second oven had cupcakes, baking. Annabel was working on buttercream which they were going to pipe onto the cupcakes. \n\n\"Mum, your phone is ringing.\" Tanesha called, taking Dora's cell phone out of her bag.\n\n\"I'll call the person back. I need to pee.\" Dora retorted as she went.\n\n\"You can't call the person back mum.\" Tanesha said, looking at the caller id. \"It says private number. Probably an international call.\" She ran to give the phone to Dora. \"Just take it with you. It might be important.\" She said. \n\n\"Yeah, yeah, yeah... Hello.\" Dora answered the phone unenthusiastically as she entered the bathroom and closed the door behind her. \n\n\"Hello Dora. This is Ty. Please don't let Tanesha know you're talking to me if you're near her.\"\n\n\"What?\" Dora gasped as the urge to pee suddenly disappeared. She was so shocked she sat down heavily on the toilet seat, clothes still intact. \"Oh my God Ty... Are you...have you...where are you?\" Dora stuttered.\n\nTy chuckled. \"I'll be home soon. Dora...\"\n\n\"Why...what are...why don't you want me to tell her?\" For the first time in her life, Dora Ashton was so shocked and confused she couldn't even string a sentence together.\n\n\"Because I want to throw a surprise wedding for your daughter. And as the name suggests, she can't know about it. But I would need your help to pull it off Dora.\"\n\n\"Oh my God, you're crazy Ty.\" Dora wiped the tear that had slipped out onto the cheek. \"Are you okay?\"\n\n\"I'm very well, Dora. And how's Tanesha doing?\"\n\n\"How do you think?\" She snorted. \"Oh my God, I can't wait to see you. You have no idea just how hard I've prayed these past few months. Thank goodness you're okay.\" Dora sniffled. \"Now what's this about a surprise wedding?\"\n\n\"You know I'm madly in love with your daughter. I want to spend the rest of my life with her, Dora. I'd planned on asking you guys but...\" \n\n\"We know. Tanny told us.\" Dora said softly. \"And we saw the engagement ring. Absolutely beautiful.\"\n\nTy couldn't wipe the smile off his face. He'd left it on his bed the day he'd left for the mission. He knew she'd see it immediately she entered his bedroom. \"Did she like it?\" He asked eagerly.\n\n\"Need you ask? She loved it.\" Dora laughed. \"But she put it into your safe. Said she wanted you to slip it on her finger yourself when you get back.\"\n\n\"Then she's going to have to wait till after the wedding.\" Ty laughed. \"Dora, I'm worried about Paul. I can bet my last cent he's not happy about the pregnancy...\"\n\n\"You've spoken to your boys.\" It wasn't a question. How else could he have known about the pregnancy? At least he didn't know he was getting twins. That information was known only to her family. She was going to leave that to Tanesha to tell him when he got back. \"Leave Paul to me, Ty.\"\n\n\"Thanks Dora. And yes, I did talk to my boys but I knew before they even told me.\"\n\n\"Really? How?\"\n\n\"I just did. Why do you think I wanted to marry her so quickly? Yes, I'm crazy in love with your daughter and would love nothing more than to watch her walking down the aisle towards me but I also didn't want to enrage Paul by waiting till her stomach got big.\"\n\n\"That sure of yourself huh?\" Dora chuckled. \"Well, it's still flat so he shouldn't be too pissed. So... tell me what you need me to do.\"\n\n\"I'll really love to speak with Paul, Dora. Do you think he'll talk to me if I call him?\"\n\n\"Why not? Allow me to talk to him first though. Why don't you call him tomorrow?\"\n\n\"I'll do that, thanks. But I would appreciate it if you could let him know that my intentions are honorable.\" Ty said quietly. \n\n\"Hey, he knows.\" Dora said dryly. \"I mean you threaten to cut up his daughter, fuck her, disappear on her, reappear, fuck her some more, knock her up, disappear on her again, reapp...\"\n\n\"Dora...\" Ty groaned, glad Tanesha's mother couldn't see his face on the other side of the phone. He was blushing so hard.\n\n\"Well, you sure do have a shitty way of showing it but hey...a man's gotta do what a man's gotta do, right?\" Dora chuckled.\n\nTy laughed softly. \"Oh God.\" Ty took a deep breath to compose himself before speaking again. \"A friend of mine is going to get in touch with you. She's called Kayla. She's going to coordinate the whole event so please let her know exactly what you need and what you think Tanesha would want.\" Ty said. \"They will involve her but as little as possible to prevent her from catching on. I want it to be a wedding that Tanesha will never forget, Dora. Please help me give it to her.\"\n\n\"Oh it's going to be a wedding to remember, trust me hon. My daughter has always wanted a white wedding.\"\n\n\"Really?\"\n\n\"Yes. In fact she's always said even the dress code for the guest is going to be white. I guess my colour-filled life didn't rub off on her.\" She chuckled, making Ty laugh. \"Well that's exactly what we are going to give her. It's going to be a fairytale wedding Ty.\" Dora couldn't suppress the excitement in her voice.\n\n\"Anything she wants, Dora. Do get Annabel to help too. But whatever you do, don't let Tanesha know.\"\n\n\"She's not going to suspect a thing Ty. Not if I can help it.\"\n\n\"Thanks Dora. See you on Saturday.\"\n\n\"Congratulations in advance Ty. Have a safe trip back.\"\n\n\"Thanks.\"\n\nTy gave a deep sigh when he hung up. It was on. He really was going to marry the love of his life. The joy within was so intense his hands were shaking.\n\n\"She's pregnant, Jack.\" Ty breathed when Jack came to sit beside him after a while.\n\n\"Wow!\" Jackson's eyes widened in shock. \"Way to go, man.\" He looked at Ty with eyes filled with respect and admiration. \"That means I get to kiss those succulent lips when...ouch.\" Jackson rubbed his shoulder where Ty's light punch had ended. \"I thought we had a deal.\" He groaned.",
        "\"What deal? That punch was for reminding me of those lips.\" Ty moaned. \"Now that's all I'm going to dream about tonight.\"\n\nJackson chuckled. \"As if you need a reminder. How's she doing?\"\n\nTy shrugged. \"They said she's good. We're getting hitched a week from today. I can't believe she's finally going to be mine.\" \n\n\"You lucky bastard.\" Jackson muttered. \"So...a wedding huh?\"\n\n\"Did I hear someone say wedding?\" Will asked as he and Nate joined Ty and Jackson.\n\n\"Ty is getting married next week Saturday.\" Jackson informed them.\n\n\"Now, that's what I'm talking about.\" Will grinned. \"That girl is a perfect ten, man.\" He groaned. \"If I get that arse in...\"\n\n\"Will...\" Ty growled.\n\n\"He's just being truthful Ty.\" Nate chuckled. \"Let him be. Even I, a happily married man, got a raging chubby when I saw her at that dinner at the White House. Damn!\" He rasped, making his colleagues laugh.\n\n\"Well, I got her. And that's how it's going to stay so keep your dicks in your pants.\" Ty laughed.\n\n\"So how are we going to do this?\" Jackson asked. \"I mean on the ceremonial front.\"\n\n\"Yeah I think we should talk about the people who are going to do the sword crossing.\" Will said with a scowl on his face. \"I mean we shouldn't allow any ugly looking guys like Patu to be part.\"\n\nThe Arrowheads burst into laughter. \"Dude, ever looked in a mirror?\" Nate asked Will when he finally brought his laughter under control. \n\n\"Fuck you, Nate.\" Will muttered making the guys laugh even harder. \n\nAnd as the Arrowhead discussed their various roles in the upcoming wedding, Ty couldn't help the contented feeling inside. He couldn't wait for the coming Saturday.\n\n***\n\n\"Slow down, Briana.\" Tanesha looked confused as she sat up on Ty's bed on Sunday morning. \"Are you pregnant or something?\"\n\n\"No, I'm not.\" Briana laughed.\n\n\"So what happened to waiting till after college to have your wedding? I thought you decided to wait like your dad suggested.\"\n\n\"Well, we've decided not to wait anymore. Are you at Ty's?\" Briana sounded like she was driving.\n\n\"Yes.\"\n\n\"I'm on my way there. As my maid of honour, you're going to help me choose what to wear.\"\n\n\"Oh my God, you want me to...\" Tanesha's breath hitched in her throat.\n\n\"Who else is sexy enough to be my maid of honour? Helloooo?\"\n\nTanesha giggled, and then went quiet suddenly. \"But I'm pregnant, Bri.\"\n\n\"And yet you still have the hottest body. When are you going to start showing by the way Tanesha? 'Cause that flat tummy of yours... Sure you're pregnant?\"\n\n\"The doctor said something about it being because it was my first and all. She said I'll probably remain this way till after my third month. Which is just next week anyway.\" She sighed. \"I feel heavy though.\"\n\n\"Ow come on Tanesha, you're not even eating much. How can you possibly feel... Oh, before I forget, I need your help Tan.\"\n\n\"You mean besides my having to be your maid?\"\n\n\"Very funny. Listen, you know I'm on break. All my close pals are already away on vacation. I need to find three bridesmaids to pair up with our man-loving trio, Kyle, Chris and Damon. Cole's kid brother is going to be the best man and your partner. We therefore need three hot chics. You have to help me girl.\"\n\n\"Oh...\"\n\n\"You guys will be breaking on Wednesday right? Meaning your friends are still around. That crazy friend of yours...Catherine? I met you two the other...\"\n\n\"Caroline.\" Tanesha began to smile. She knew Caroline would love to have some fun.\n\n\"Caroline, yes.\" Briana gushed. \"I liked her. Don't you have other close friends?\" \n\n\"I do actually.\" Tanesha laughed, thinking of her other best friend. \"Queenie will be pissed if I asked Caroline and not her. This way, I don't get murdered by either of them. I'll talk to them.\"\n\n\"We need a third person, Tanesha.\"\n\n\"How about Thea?\" \n\n\"Perfect. You're a life saver, darling. Well, better find something to eat before I get there because when I do, it's going to be all work. See ya.\" Briana hung up.\n\nTanesha groaned when her phone began to ring again immediately. But her groan turned into a grin when she realized it was Kayla. \"Hey sexy Mama.\" She laughed. It was always great to talk to Kayla.\n\n\"Hello chica. How are you doing?\" Kayla laughed.\n\n\"I'm great. How's Raby?\"\n\n\"Getting naughtier and naughtier by the day.\" Kayla groaned, drawing laughter from Tanesha.\n\n\"What did you expect? She's Dean's daughter.\"\n\n\"I know right.\" Kayla chuckled. \"Heard the news?\"\n\n\"If it's Briana's wedding, then yes. She just called to tell me she wants me to be her maid of honour.\"\n\n\"Probably said something about wanting your sexy self beside her huh? The traitor!\" Kayla hissed, making Tanesha laugh. \"Anyway we have to make it real good. That's the only way we can make her dad less angry. Apparently the family has been planning her white wedding since she was a kid so...\"\n\n\"Really?\" Tanesha gushed. \"I didn't know Briana wanted a white wedding too. That's always been my dream.\"\n\n\"Well, you have to wait your turn chica. Now, we have to make sure we do exactly what Briana wants because that would be what her parents would accept. We've shared the planning amongst ourselves. Because of your condition, I don't want you to stress yourself. Your only job is to make sure that whatever style of dress Briana chooses is on point.\"\n\n\"Kayla, I'm not sick, you know.\" Tanesha chuckled. \"I can do more.\" \n\n\"You're pregnant, Tanesha. I remember how easily I used to get tired when I was at your stage. Besides, school is still in session so you don't have the time.\" \n\nWhy all the fuss over her condition, Tanesha sighed. What would they do if they knew she was carrying twins then? They would probably have kept her out of the whole wedding. She was happy she'd decided to keep the part about being pregnant with twins to herself. \n\n\"Alright Kayla. I'll help Briana choose a wedding gown that will knock everyone's socks off.\" \n\n\"Great. Oh and Tanesha?\"\n\n\"Yes, Kayla.\"\n\n\"Wedding is on Saturday. We have just a week.\"\n\n\"What?\" Tanesha screeched but heard only the dialing tone. Kayla had hung up.\n\nTanesha stared at her phone in shock. What was going on? Why the rush? Were those people for real? Were they only pulling her legs? She began to dial Cole's number.\n\n***\n\n\"He obviously doesn't know shit.\" Ty muttered as he watched Senator Jim Mathieson's confused face in the interrogation room, through the one-way mirror. The senator had been there for the past three hours, undergoing intense interrogation. \"I suggest we do a quick polygraph just to be double sure.\"\n\n\"I think so too.\" Karen Hart, the Deputy Director of FBI who stood beside Ty responded with a sigh. She'd aged more than her fifty years, overnight. It definitely wasn't an easy feat, questioning a United States Senator about the possibility of him being a financier for a notorious group such as ZONKAI. \"Let's get this over and done with.\" She said as she signaled another agent. \"Set it up.\"\n\nTy sat down and reached for his bottle of water. He'd been back to base for the past two days. His colleagues had already gone home but as the leader of the crew, he had to wait around till the FBI completed their job, of which the most important was interrogating the Senator whose advisor had turned out to be one of the financiers of ZONKAI. Ty had virtually not had any rest. Meanwhile his wedding was in just two days. He planned on going home immediately they were done with the senator, to have a good sleep. He would probably sleep till the morning of the wedding, he thought amused. He knew that wouldn't be possible though as the squad was throwing a bachelor bash for him in Las Vegas on Friday night. The Arrowheads and some other friends of the squad, including his brother Theo and Tanesha's brothers, Leon and Jamal, were all going to be there. They were going to have a blast. All the more reason why he needed his sleep, Ty groaned.\n\n\"Tell you what Wesley,\" Karen turned to look at Ty with sympathetic eyes, \"why don't you just head on out. You look like you're ready to drop. We'll keep you posted.\"\n\n\"Hmmm... That sounds good.\" Ty yawned. \"But I'd rather wait till the polygraph is done.\"\n\nKaren shook her head in incredulity. \"Just make sure you don't collapse in front of your bride on Saturday.\" \n\n\"You'd love that won't you?\" Ty laughed.\n\n\"Let's just say the little darling doesn't deserve a passed out groom on top of her shock.\" Karen chuckled, turning to look at the set up through the one-way mirror. \"God, I can't wait to see her face when she sees you.\" She'd seen the two at the dinner at the White House a few months earlier and thought they looked absolutely perfect together.\n\nTy laughed. \"I just pray she doesn't pass out herself.\"\n\nThe whole agency was buzzing with the upcoming surprise wedding. People wanted front seats so as not to miss anything. Much as Ty was excited about the whole thing, a part of him was dreading Tanesha's reaction. He knew that she was going to cry and wished he had the power to prevent that from happening but he knew there was nothing he could do to prevent that. Well, he hoped she wouldn't kill him afterwards for ruining her makeup. \n\n\"Fuck, I can't wait to see her.\" Ty muttered under his breath but Karen heard him perfectly and couldn't help the smile that widened her lips. \n\n\"Finish hard, soldier.\" She chuckled. \"Okay all set.\" \n\nAnd even as Ty stood up to go and stand beside Karen to watch the polygraph, he couldn't wipe the smile off his face.\n\n***\n\n\"Oh my God, I look like the bride.\" Tanesha gasped as she stared at herself in the mirror. The gown was even more beautiful than what they'd seen in the bridal catalog. She felt like a princess. It just wasn't right. \"Bri...\" Tanesha breathed as she tore her eyes off her image and turned to face the ladies. Briana, Kayla, Caroline, Queenie, the designer and her assistant stared at her, speechless. They were obviously as awed by the dress as she was.\n\nTanesha tried to say what was on her mind but the look on the faces of the ladies made her lose her train of thought. For some reason, her dress was the last to be made by the designer. All the other ladies, including Briana, had already picked up their dresses...which she hadn't even seen. Briana, Kayla, Caroline and Queenie had decided to come with her for the final fitting of her dress and to pick it up, whilst Jen, Mary and Thea saw to the final preparations at the plush Club Picasso, where Briana's Hen Night was to take place that evening. Well... that was what she was told.\n\nTanesha looked down at herself. The breathtaking designer A-line bridal gown looked like a fairytale wedding dress. The strapless, lace over rich dolce satin gown fell elegantly into a sophisticated court train. It featured an elaborate sparkling Diamante beading on its fitted sweetheart bodice and train, giving the gown an ethereal look. The skirt was embellished with dainty lace appliqu\u00e9s, which shimmered with every turn, with a layer of sparkle. Its spectacularly designed corset back would make every exit as beautiful as the wearer's entrance. The gown offered the perfect amount of style and glamour, to complement Tanesha's colour and poise, and at the same time sexily showcase her natural feminine curves. That gown screamed elegance, romance and sophistication. It was jaw-droppingly beautiful.\n\n\"Mama Mia.\" Caroline finally broke the silence. \"It's absolutely stunning.\" She breathed.\n\n\"I don't think this is right.\" Tanesha said quietly, looking up at the ladies. The look on their faces said it all. The gown was beautiful. But she couldn't possibly wear such a gown when she was merely the maid of honour. Besides the fact that the gown was obviously very expensive, she couldn't take the spotlight off the bride herself. She wouldn't. No, she hadn't seen Briana's gown yet but unless it was a Lady Diana kind of gown, people would have a hard time knowing who the real bride was. \"Bri...\" Tanesha frowned when she finally focused on Briana. Briana looked as though she'd won the lottery.\n\n\"Fantastique!\" Briana finally managed to gasp with a phony French accent. \"Oh my God, he's going to die.\"\n\n\"Who's going to die?\" Tanesha looked confused.\n\n\"Her dad.\" Kayla said quickly, giving Briana a stern look.\n\n\"Does it really matter who's going to die?\" Caroline chuckled. \"I mean I'm a girl. And I'm trying very hard not to kneel over in a faint right now.\"\n\n\"Briana, I don't think I should wear this dress.\" Tanesha sighed. \"In fact I'm not going to.\" Briana had wanted to know what gown she would have worn had it been her wedding. And when she'd picked that gown, Briana had insisted she wore it as she wanted herself and her maid of honour to look like princesses. Tanesha thought that was the silliest thing she'd ever heard but had tactfully refrained from telling Briana. \"I know you said you wanted this but...this is a bit much.\"\n\n\"Ow come on Tanesha.\" Kayla said. \"We do as Briana says, remember?\"\n\n\"Actually, I don't think this dress is all that.\" Queenie said dismissively, her hands on her hips. \"You should have seen me rocking mine this morning. You actually look like a real maid, sister.\"\n\n\"Come to think of it, you're right, Queenie.\" Kayla said with a bored look. \"You should have seen Thea and Mary when we came in to try our gowns yesterday. Yours comes nowhere close my dear.\"\n\n\"Really?\" Tanesha looked shocked. She'd seen the look on their faces when she'd emerged from the dressing room for goodness' sake. She turned to Briana. \"Are you sure you're okay with this, Bri?\" Tanesha asked, flipping off a snorting Queenie. \n\n\"I couldn't have asked for a more perfect gown for my maid of honour, love.\" Brianna grinned. \"Now get out of that gorgeous dress so that they can pack it for us. We have a Hens Night to attend. \n\nSo with a shrug and a last look at the most beautiful gown she'd ever seen, Tanesha went back into the dressing room to take it off. If the bride was okay with it, who was she to complain?\n\n***\n\n\"Ow come on, I thought we were here to have fun.\" Tanesha groaned, looking down at the plate of mashed potatoes and steak in front of her. \"Why do I have to eat all this before the fun begins?\" She was at the eating area of the club with Briana and Mary, Michael's wife who was also a doctor just like her husband.\n\n\"Because you're the only pregnant person here darling.\" Mary, said sternly. \"Your mother has already called me about a thousand times to make sure you eat something. Now shut up and eat.\" \n\n\"She called you too?\" Briana asked Mary with surprised eyes. \n\n\"Oh yeah.\" Mary chuckled. \"And Jen, and Kayla... Your mother can be real scary, kiddo. I'm going back in. Bri how's the headache?\" Mary asked.\n\n\"Not getting any better.\" Briana gave an exaggerated moaned, which Tanesha would have seen right through had she paid close attention. \n\n\"I have some pain medication in my purse.\" Mary said. \"Remind me to give it to you when you come in. And make sure she clears the plate before you leave this room, Bri.\"\n\n\"Will do.\" Briana gave Mary a salute. \"Doesn't she remind you of your mum?\" She asked dryly as they both watched Mary leave, making Tanesha laugh. \"Actually your mum reminds me so much of my own mother. I just love her.\" \n\nTanesha rolled her eyes. \"Are you sure it's not because she got our Parish Priest to allow your wedding in our church?\" Briana had spoken to Dora Ashton to arrange for her wedding to be blessed in their grand church. Tanesha had been shocked when her mother had been able to pull it off as Father Campbell, though a very nice and jovial priest, usually never allowed non-parishioners to wed in their church. But then, her mother could be persuasive so Tanesha had dismissed it. At least her mother had come through for her friend and she was grateful for that.\n\n\"Well, that too.\" Briana grinned, admiring the paintings on the wall.\n\n\"I still think you should have gone to have it in your family church in Delaware though.\" Tanesha said. \"Your dad would be less pissed. Are they in yet?\"\n\n\"Nope. They'll be here by morning, hopefully. How about lending me your dad if mine doesn't show?\" Briana said jokingly as she leaned closer to read the inscription on one of the paintings. \"Your mum said she was going to come to the wedding with him so...\"\n\n\"Don't worry Bri, your dad will be here for your wedding.\" Tanesha laughed. \"I've eaten enough. Can we go now?\"\n\n\"Oh hell no!\" Briana moved to Tanesha's side. \"Dr. Mary Murphy said you're to eat everything on that plate. I think you should. Because you need your strength for what's coming Tanesha.\" Briana yawned and threw herself into one of the chairs.\n\n\"What's coming?\" Tanesha asked as she cut a piece of the juicy steak and popped it into her mouth.\n\n\"I'm feeling very tired. And this nasty headache isn't getting any better. As my maid of honour, you'll be doing most of the expected stunts on my behalf tonight, pregnant or not.\"\n\nTanesha burst into laughter. \"I guess my maid duties begin tonight huh? Anything you want, your highness.\"\n\nAnd so that was how it went. Tanesha was made to wear a veil and accept the hot lap dances from the sexy male dancers who came to put up a show. It was a 'Magic Mike' moment and the ladies loved it. They had a blast. By the time Tanesha got back home, she was so tired she simply fell into bed and slept like a baby, totally oblivious to all the wedding arrangements going on around her.\n\n***\n\nMeanwhile about some two hundred and thirty miles away, in one of the most expensive nightclubs in Las Vegas, Ty and the guys were having a great time at his bachelor party. At least they didn't have to pretend it wasn't his.\n\nBetween Damon, Chris, Kyle and Shane, all the guys, including all the Arrowheads had been flown to Vegas on private jets with just one goal in mind...to have a great time. The club was booked for the exclusive party. Food and alcohol were unlimited and the sound was brilliantly good. Those who wanted to play at the game tables could bet up to two thousand dollars for free. The guys had so much fun. By the time they all moved to the expensive Huge Hefner Sky Loft for the second phase of the party, almost all the guys were drunk.\n\nWith its amazing playboy-themed infinity pool jutting out into the Las Vegas skyline, it was arguably the best hotel suite in all of Vegas for hosting a bachelor party. Matt made sure there were enough hot strippers to keep the guys happy. Some of the Arrowheads got down and dirty with some of the strippers. At least Ty saw Will in bed with two strippers. He didn't wait around to see exactly what they were doing. Others including Theo and Jamal had already passed out. Ty and Aaron laughed as they watched Tristan, who was the life of the party, move unsteadily to straddle Damon who sat in a couch, drinking with the guys. Whenever Tristan got into that position, everyone knew it meant he'd had enough and wanted to sleep. And just as Ty and Aaron knew was going to happen, he laid his head on Damon's shoulder and promptly went to sleep as Damon gently rubbed him on the back. A hot stripper sat in Michael's lap whilst they drank and talked. The squad knew Michael wouldn't dare try anything. Not with Chris' hawk-like eyes watching his every move. With him around, Michael wouldn't dare cheat on his wife who was also Chris' cousin. \n\n\"Relax Chris.\" Michael finally muttered. \"I told you it won't happen again and I meant it.\"\n\nChris grunted and stretched, placing his head on Shane's lap. \"Good. 'Cause I really want to sleep.\" He rasped, making the guys laugh.\n\n\"Hey Ty...\" Will staggered out of the guest suite, still buckling up. \"This may be the last time you get to look at a naked woman with your life-long men friends, buddy. Make it count. Come on, give us a show.\"\n\n\"Fuck off, Will.\" Ty laughed. \"It definitely won't be the last. \"You're not married yet.\" Then he shook his head as if he'd just realized a great error. \"Sorry. You're never going to get married.\" He drawled, making the guys laugh.",
        "Then the Arrowheads began to chant, 'show, show' whilst they parted way for four virtually naked strippers. Yazz's 'Drip Drop' began to blast from the speakers. The hot crazy beat was totally sick and exciting. The girls moved sensually and with sexy determination towards a laughing Ty amidst the cheers and whistles of the men. Even the squad joined in. Jean, Dean's crazy twin brother quickly moved to where Ty sat and blindfolded him with one of the discarded bras, lying around. Then with that brutally hot song blasting away, the girls gave Ty an erotic and raunchy lap dance like he'd never been given before. At a point, all the guys started dancing and singing along...\n\n'She do it all night She goin' hard, right? She love the spotlight She make that thang go\n\nDrip drop, drip drippity drop Drip drop, I do my dance like Drip drop, drip drippity drop Drip drop, drip drippity drop'\n\nIt was hot, insane and absolutely exciting. It was definitely a night Ty was going to remember for as long as he lived. \n\n***\n\n\"Have you heard from them yet?\" Tanesha asked Briana as they entered the church's beautifully decorated dressing room. It was the smaller of the two dressing rooms on the grounds. Briana and Tanesha were to use that whilst the six bridesmaids used the bigger room. Briana had told her that morning that her parents' flight had delayed. She'd said there was a high probability that they wouldn't make it to the wedding. Her mum said her dad had agreed to step in for Briana's dad. Somehow Briana had gotten close with her mum after Dora made it possible for her and Cole to be wed in their church. Well... so it seemed.\n\n\"Yes. Mum was crying.\" Briana said without emotion which Tanesha thought was rather strange. \"Hello ladies.\" She cheerfully greeted the four ladies who were waiting to help them get ready. \"Now sit and let them work on you.\" She gently pushed Tanesha onto the dressing stool in front of the full length mirror. \n\n\"Oh no, you sit Briana.\" Tanesha said getting off the stool. \"It's your wedding, not mine. Why are you treating me like...\"\n\n\"You're pregnant Tanesha.\" Briana gushed. I just don't want you getting tired that's all. We have a long day ahead of us.\"\n\n\"I know but...\"\n\n\"How are things going ladies?\" Dora Ashton asked from the doorway, looking smashingly elegant in a beautiful long white whisper-soft designer Capri chiffon gown. \"Honey, are you okay?\" She went to her daughter.\n\n\"I'm okay mum.\" Tanesha said smiling at her mother. \"Have I told you how beautiful you look, mum?\" She looked at her mother with eyes filled with admiration.\n\n\"You've already told me darling.\" Dora chuckled. \"Now let's get you presentable. We can't have you ruining Briana's wedding.\n\n\"Thank you Mrs. Ashton.\" Briana sighed. \"She's so stubborn. Is that how all pregnant women are?\" \n\nTanesha and Dora laughed. \"Heard anything from your parents dear?\"\n\n\"No Ma'am.\"\n\n\"Don't worry. My husband is waiting outside. You ladies had better dress fast. He wants to see you to discuss how you're going to take your steps or something of that sort. I told the man that all he had to do was walk but he insists on seeing you. And he's worried about you Tanny.\" \n\n\"Me? Why?\" Tanesha asked as she stepped into her dress which one of the ladies held out for her. \n\n\"Oh my God.\" Dora gasped as she stared at her daughter's gown. She was seeing it for the first time.\n\nTanesha turned to look at her mum when she didn't respond to her question and saw the awe on her face. \"Like it?\" She grinned.\n\n\"Like it?\" Dora whispered. \"I love it.\"\n\n\"Thank you.\" Tanesha beamed. \n\n\"Baby, I'm going to the next room to see how the other ladies are doing okay? I'll be right back.\" Dora's voice was barely above a whisper.\n\n\"Are you okay mum.\" Tanesha frowned.\n\n\"Peachy.\" Dora said as she walked briskly away from her daughter. She didn't want her to see the tears in her eyes. Not only was that dress absolutely gorgeous, but it looked breathtakingly good on her daughter. She needed to compose herself.\n\n\"Oh my God, Bri that is beautiful.\" Tanesha stared at Briana's mermaid designer bridal gown. Its asymmetrical pattern flattered Briana's figure brilliantly.\n\n\"I know right?\" Briana giggled. \n\nTanesha continued to stare at Briana. Something wasn't right but she just couldn't put a finger to it. For one, she didn't have any intention of voicing her thoughts out loud, but much as she acknowledged the fact that Briana's gown was lovely, it was nowhere as lovely as hers. If she didn't know better, she would say she was the bride and not Briana. \n\n\"Please have a seat.\" One of the ladies tending to Tanesha said. \"I want to work on your make up whilst she fixes the corset at your back.\" She said, referring to the other lady. \n\nTanesha sat down and allowed the two ladies to fuss over her. Her makeup was flawless. Her beautiful long hair was expertly gathered into a delectable updo, with lose, long tendrils softly dripping down the nape of her neck. It looked simple but was so very stunning and sleek. Her feet were pushed into a beautiful ultra-high-heeled, open toe, sparkling rhinestone shoes. Tanesha watched with a frown as a classic cubic zirconia bracelet was fixed around her left wrist. Her mum had the same thing. When the lady took out the matching necklace and earrings, Tanesha gasped.\n\n\"My mother has the same set.\" She said just as Dora Ashton came back into the room. \"Mum, these look exactly like yours.\"\n\nDora took the box that held the jewelry and turned it over. \"These designers are all thieves. They steal each other's designs and pass it off as theirs. Mine is by another designer.\" Dora said dismissively, hoping her daughter would buy her lies. \"Oh honey, you look simply charming. Are you sure you'll be comfortable in those heels?\"\n\n\"Well, it's not as if I'm the bride. I'll take them off immediately I sit down.\"\n\n\"No, no, no.\" Dora said sternly. \"If you're not comfortable in them just tell me.\"\n\n\"And if I'm not, how will you get a replacement as this time mum?\" Tanesha chuckled.\n\n\"If you have to do your duties barefoot, you will young lady.\" Dora looked dead serious.\n\n\"Relax mum. It's fine.\" Tanesha looked at herself in the mirror. \"Looks like I'm all set.\" She kept staring at her image. She couldn't get over how much like a bride she looked. Was that how she would look on her wedding day? But for Ty's disappearance, she would have been married already. Tanesha sighed, refusing to allow the depression that had threatened to overwhelm her since she got out of bed that morning, succeed. It was her friend's day. She couldn't ruin it by allowing her own problems to make her look glum. Briana would kill her if she ruined her pictures. \"Please bring him back.\" She whispered softly in prayer. \n\nTanesha stood up and went to stand behind Briana who had insisted on making up herself. The lady attending to her stood with folded arms, watching her with an amused look.\n\n\"And she calls me stubborn.\" Tanesha smirked. \"I've never seen a more stubborn bride.\"\n\n\"Sue me.\" Briana laughed, getting to her feet. \"Now all that's left is our fascinators, then we're set. Is Mr. Ashton still out there, Ma'am?\" She asked Dora.\n\n\"Let me get him.\" Dora said, moving to the door.\n\nBriana started giggling. \"We're getting married.\" She was almost through with the farce of the century and she was feeling excited and proud of herself. Cole had better get ready to pay up, she thought smugly. She hadn't gotten them busted as he'd predicted. Briana was feeling good. \n\n\"Yes you are.\" Tanesha laughed. \"Are the others still dressing up?\"\n\n\"Don't worry about them. Weddings are all about the bride and maid of honour.\" Briana did some dancing steps, making Tanesha laugh.\n\n\"You're crazy.\" She said and turned to watch the doorway as her parents entered. Her dad looked dashing in an all-white tux.\n\n\"You look beautiful princess.\" Paul said softly when he got to his daughter. Then he drew her into his arms and gave her a fierce hug.\n\n\"Thanks dad.\" Tanesha laughed, hugging her father back. \"But I'm not the bride.\"\n\n\"Can't I pay my daughter a compliment?\" Paul said, leaning down to kiss Tanesha on both cheeks before turning to face Briana. \"So you're Briana.\" It wasn't a question. Paul chuckled when Briana laughed excitedly. \"You, my dear, look absolutely fabulous.\" He took her right hand and kissed the back as though her were her knight. \"So...how do you want to do this?\"\n\nBriana actually blushed. \"Well, I was thinking...\"\n\n\"Don't think. Just tell me what you want.\" Paul chuckled.\n\n\"I want to walk down the aisle alone. You will stand close beside the first pew and wait for me to come to you Mr. Ashton. That way, my dad won't get too jealous when he watches the video.\" She laughed. \"When I get to you, you'll take my hand and present me to...Cole.\"\n\n\"I can do that.\" Paul grinned. A grin which faltered when he turned to look at his wife. It was obvious she was struggling to get her emotions under control. He could tell she'd been crying and would have loved nothing more than to take her into his arms. But Paul knew he had to be careful not to raise his daughter's suspicion.\n\n\"Thanks.\" Briana said and then turned to Tanesha, who had never made it to the so-called rehearsal, thanks to Briana's 'mix-up'. She'd actually communicated a wrong time to Tanesha the only time they were all to go for rehearsals. By the time Tanesha got to the church, they were already done. \"Like I told you yesterday, Tan, the groomsmen and bridesmaids will proceed to their position around the altar. Then you will proceed alone.\" Briana smile at Tanesha. \"When you get to where Mr. Ashton is waiting, you will stop right there beside him and wait whilst I walk majestically and in all my glory down the aisle to him.\" Tanesha purred.\n\nTanesha rolled her eyes. \"How weird.\" She turned to her mother to see how she was taking Briana's strange arrangement and gasped. She could actually see her mother's hands trembling. \"Mum, are you okay?\" Tanesha asked worriedly.\n\n\"I'm good, darling.\" Dora said, quickly stepping into Paul's opened arms. \"Just tired that's all.\" \n\n\"That's how I want it, Tan. Sue me.\" Briana virtually shouted, just to distract Tanesha from Dora's telling reaction. \"That's about it Mr...\" She trailed off when someone knocked on the door.\n\n\"We're ready for you please.\" The altar server popped his head in to announce. \n\nPaul and Dora hugged Tanesha and Briana and went out. Briana quickly went to the other room to call the other ladies, and then signaled the ladies helping them dress to fix her and Tanesha's fascinators. The fabulous birdcage veil fascinator was fixed perfectly on Tanesha's head, covering her eyes. She quickly turned to complain to Briana but shut up when she saw she also had the same thing on her head. Briana was the weirdest bride ever, Tanesha thought with a shake of her head. \n\nMary, Kayla, Jen, Caroline, Thea and Queenie joined them, oohing and aahing over Tanesha and Briana's dresses. Tanesha didn't think it was necessary to point out that they all had similar dresses as Briana. Everyone's gown had the same mermaid cut. Again Tanesha couldn't help but feel she looked different. Hers was the only different gown amongst them all. Tanesha didn't want to fuss but she definitely wasn't comfortable. In any case, what would complaining achieve at that particular moment? So she kept quiet. \n\n\"Time to go.\" Kayla said, pushing into Tanesha's hand a beautifully arranged creamy white bouquet which comprised roses, calla lilies and baby's breath. It was breathtakingly lovely.\n\nThat bouquet was the last stroke that brought Tanesha's gorgeous bridal look to perfection. Tanesha again looked at what the others were holding and noticed theirs were only roses. Well, Briana's had some lilies too at least. \n\n\"Okay let's get hitched.\" Briana squealed. \"Wish me luck ladies.\"\n\nThere was a chorus of good lucks. As Tanesha wished Briana well and kissed her on the cheek, she couldn't help but think how strange Briana's behaviour was. Weren't brides supposed to feel sort of...solemn at such a time? Especially so when the bride in question's parents couldn't make it to her wedding. Briana's carefree behaviour seemed rather weird. Either she was trying very hard not to look affected or she was just plain crazy. \n\n\"Are you okay?\" Tanesha asked quietly as the others went out. \n\n\"You have no idea just how thrilled I am this very moment Tanesha.\" Briana purred, making Tanesha actually laugh. \"You look spectacularly beautiful.\" She said softly.\n\n\"So do you.\" Tanesha said as they turned towards the door. \"But I still don't see why we should both have our faces covered though. I'm not the...\" She suddenly turned to face Briana with a bemused look on her face. \"Okay, what's going on here?\" Tanesha asked.\n\nBriana's eyes widened. \"What do you mean?\" Her heart nearly stopped.\n\n\"This whole...wedding feels...weird.\" Tanesha said with a frown.\n\n\"Tan...\" Briana started but Tanesha held up her hand to stop her.\n\n\"You're acting weird, which is so unlike you. It's like seeing a cat walking on its hind legs weird, Bri.\" She sighed.\n\n\"Oh don't be silly.\" Briana's laughter sounded strained even to her own ears. Was Cole going to win after all? Had her behaviour ruined Ty's surprise? After all the work everyone had put into it? Her heart was pounding so hard she needed to drink some water. \"I just...\"\n\n\"I know you're not yourself Bri.\" Tanesha cut her off. \"I think it's because your mum is not here. You told me how close the two of you are, remember?\" \n\nBriana gave a vigorous nod and let out a sign of relief. \"It's killing me Tanesha.\" She gasped. \"I'm just trying to...\"\n\n\"Appear strong, I know.\" Tanesha hugged her again. \"It's also affected some of your...decisions and choices. I must say most are very questionable but...I guess we don't have any choice now but to go with it.\" She really didn't want to give her too much stress. \"Just let yourself go and enjoy your day okay?\"\n\n\"Okay. Thank you, Tan.\" Briana tried very hard not to laugh as she placed a hand at Tanesha's back and propelled her towards the door. \"Now I want you to keep this in mind. Please stand for a moment before you start moving down the aisle. And please walk very slowly as you go. I want the people to appreciate the work we put into our dresses. No rush. I'll be right behind you. Well, not right behind you. I'll come eventu... You know what I mean.\" Briana was rumbling and she knew it. Her heart beat was thankfully back to normal. That had been so close. Her job was almost done. Whew!\n\n***\n\nWhen Tanesha came out of the church's dressing room, she saw the grooms' men, smartly dressed in their white tuxes, paired up with the beautifully dressed bridesmaids. They stood in a neat line. Michael stood with his wife Mary, Matt with his fianc\u00e9e Jen, Dean with his wife Kayla, Damon with Thea, Kyle with Queenie and Chris with Caroline. Cole was obviously waiting at the altar with his brother, Tanesha thought. To Tanesha, the squad and their partners had never looked more elegant. They all turned around to look at her. Both the guys and the ladies stared at her with unmasked admiration. Tanesha smiled at the guys but they were all staring too hard to even acknowledge her smile. \n\n\"Wow!\" Michael breathed.\n\n\"Sure you're not the bride?\" Dean drawled and then promptly grunted when Matt elbowed him.\n\nTanesha rolled her eyes. \"Wait till you see the bride herself. She looks angelic.\" She laughed.\n\nThe organist began to play, the cue for her friends to proceed down the aisle. Tanesha watched them go with a smile on her face. If only Ty were there, he would be walking down that aisle with his guys. She suppressed the flash of sadness within and straightened her back determinedly. She wasn't going to get sad or cry and ruin Briana's day. \n\n\"Smile Tanesha.\" Tanesha heard Briana hiss behind her and realized that the groomsmen and bridesmaids were already at the altar, lined up beautifully on either sides of the altar.\n\nTanesha notice three things at the same time... The church was packed. Everyone was in white... which she thought was the most beautiful sight. And everyone was staring at her. Ugh!\n\nThe wedding guests were obviously awed the instant they saw Tanesha in all her elegant glory. There were gasps, smiles, some tears, and flashes as people took pictures. Tanesha was the epitome of chic. With a heart-stoppingly beautiful smile on her face, she began her walk down the aisle. She walked slowly...feeling like royalty. She wondered how Briana must be feeling if even she, the maid of honour, felt that good. Tanesha didn't really look at where Cole was supposed to be standing with his best man and the Priest. She looked at her father, who had turned to watch her come towards him with the most brilliant smile on his face. Tanesha grinned at him throughout her walk. \n\nBefore she got to Paul, he stretched out a hand to her. Tanesha reached out to place a hand in the father's. When Paul began to move with her towards the priest, Tanesha turned to her father with a confused look.\n\n\"Dad...\" Tanesha was so confused with what her father was doing she didn't even notice that the men standing in front of the priest were dressed in full military ceremonial attire. \"What are you doing?\" She whispered, looking at her dad the whole time. \n\n\"Stand here, Tanny.\" Paul said, leaving a still confused and oblivious Tanesha beside an amused and totally floored Ty. His bride was the most beautiful woman on the planet. \n\n\"Who gives this woman to be married to this man?\" Father Campbell asked, surprising Tanesha. Briana was not there yet, she thought frantically.\n\n\"Her mum and I do.\" Paul Ashton responded, signaling Dora to join him. \n\n\"What?\" Tanesha gasped, turning to look behind her to see whether Briana was coming. But Briana wasn't there. Where was she? And what was happening? Was everyone going nuts? \"Dad, you have to wait till...\" Damn, what would Cole be thinking, Tanesha thought with panic as she quickly turned to face Cole with an intention of apologizing for her father's blunder. Father Campbell, she couldn't speak for, but her father, she thought was too...young to be getting senile already. But when she turned to face Cole, it wasn't Cole she saw but Ty. \"Oh my God...Oh my God...\" Her bouquet slipped out of suddenly limp fingers and fell to the floor. \"Ty...\" Her eyes welled up and her lips trembled as she stared at him.\n\n\"You're looking absolutely stunning.\" Ty whispered as he watched the tears begin to slide down Tanesha's cheeks. \"Baby, don't cry...\" He groaned. Though he'd expected Tanesha's reaction, he still wasn't ready for how painful it felt to see her cry.\n\n\"Am I dreaming?\" Tanesha asked shakily. She couldn't stop her tears. \"Please tell me I'm not.\" Her hands moved up to cup Ty's face. \"If I am, I don't want to wake up.\" A sob tore out of her throat. \"Ever.\"\n\n\"Christ, Tan I'm here. You're not dreaming.\" Ty hugged her tightly to him. \n\nFather Campbell had already informed the congregation, who already knew it was a surprise wedding, to give Ty and Tanesha a moment when Tanesha eventually realized what was really happening. So the whole church was quiet as everyone watched the intimate and soul-stirring display unfolding before their eyes. Most, especially the women, shed tears as they watched the emotional couple. Some just watched them quietly, overwhelmed by the raw feelings being shown by Tanesha. Others grinned from ear to ear, happy for them. \n\nTy held a trembling Tanesha even tighter as she sobbed quietly against him. For that fraction of time, it was just the two of them as everything around them disappeared. Ty didn't care about ruining her make up or that gorgeous dress. He just needed her pitiful sobs to stop. \n\n\"Shhh...it's okay baby.\" Ty murmured against her hair. When she didn't stop, he decided to try from a different angle. \"Okay, now I really need to know...are those tears of anger or...\"",
        "\"Fuck you, Ty.\" Tanesha murmured shakily.\n\n\"Well, I wish you could but we're in church Tanesha.\" Ty chuckled. \n\nTanesha tried to laugh but what came out was a sob. \"Sorry.\" She took a deep shaky breath and looked up at Ty. She couldn't believe he was standing right there in front of her. The entire scene seemed surreal. Tanesha didn't know whether to scream at him or hug the shit out of him or hit him or just kiss the living daylights out of him. \"Oh God, what am I going to do with you?\"\n\n\"Anything but slap me.\" Ty gave a mock scowl. \"With all the idiots in here, I'll never be able to live that down.\" He said, referring to the squad and the Arrowheads.\n\nTanesha began to laugh softly. \"You're the idiot, Ty. For making me ruin my makeup. You could have spoken to me before now. It would have still been a surprise.\" She moaned but she didn't look angry at all. \"You're such an asshole.\"\n\n\"Blame your groomsmen and their better halves.\" Ty wiped at Tanesha's cheeks with a handkerchief that Jackson, his grinning best man handed over to him. \"They thought it would be cool to surprise you. I'm just a puppet here.\" He grinned.\n\n\"Yeah right.\" Tanesha smiled. \"Blame it on someone else. \"I'm pregnant, Ty.\" She whispered.\n\n\"You really think that's news?\" Ty whispered right back, giving her such a loving but cocky smile Tanesha decided to shock him.\n\n\"Know it's twins?\" Tanesha asked innocently, and then promptly grinned when all the blood drained out of Ty's face. \"I guess you don't know everything after all.\" She smirked. \"How do you find my surprise?\"\n\n\"Fuck!\" He breathed.\n\n\"We're in church, Ty.\" Tanesha hissed. \n\n\"Shit...\" Ty looked totally unfocused. When he saw Tanesha's eyes widen at his inappropriate choice of words, he pinched the bridge of his nose in exasperation. \"Sorry. Baby, this is the best surprise ever.\" Ty didn't recognize his own voice. \"I love you. You have no idea just how much.\" He choked. \n\n\"I think I do.\" Tanesha whispered, drawing Ty's head down. He still looked dazed. \"I still can't believe you're here.\" She murmured against his lips. \"I want to kiss you so bad.\" She whispered shakily.\n\nTy turned his head to look at Father Campbell who looked so funny pretending not to listen to them. The priest raised an eyebrow and then turned around as if to pick up something from the lectern behind him. Ty just knew the good old priest was giving him permission. He didn't waste any time at all. With an arm around Tanesha's waist and a hand at the nape of her neck, he dipped his head and captured those succulent lips he'd been dreaming about for months in a possessive kiss. The congregation gasped. Ty ignored them. All that mattered was the woman in his arms and the taste, feel and pleasure of her mouth. The intensity of emotions and need within them shattered their control and swept them both along as they came together with no care for their staring audience. Tanesha's mouth opened to Ty's possession with a moan, letting him in and allowing her tongue to twine with his. Like Ty, she didn't care at all that everyone...including her father, was watching her kiss Ty. She totally melted against him, kissing him back as sensuously as she was being kissed. It was deep, it was hot, and it was quick. When Ty released Tanesha's lips, she looked dazed.\n\nTy leaned his forehead against Tanesha's, his hand framing her cheek. \"Fuck, I love these lips.\" Ty whispered shakily against Tanesha's swollen lips. \"You've got the sweetest and sexiest mouth ever. I could kiss you over and over and over and not get enough.\" \n\n\"I love you so much.\" Tanesha breathed unsteadily.\n\nTy didn't need to be a genius to know that. He rubbed his thumb over the wet kiss-swollen curve of her lips. They were fuller now from his caress, her eyelids looking heavy, her breath coming out harshly...she was so fucking sexy. And he was getting harder by the minute. Shit!\n\n\"Can we please get this over and done with already?\" Ty said hoarsely. \"Much as this dress takes my breath away, I really want you out of it.\"\n\nTanesha laughed softly. \"God, I missed you.\" She gasped. \"Alright let's do this.\"\n\nTy gave a smirking Father Campbell a slight nod to proceed. \"I love you too.\" Ty whispered.\n\n\"I know.\" She beamed as they turned to face Father Campbell, who looked from Ty's face to Tanesha's with a comical expression on his face.\n\n\"First Peter chapter five verse fourteen says we should greet one another with a kiss of love. But that kiss...\" The congregation burst into laughter. \"Have anything to confess before I begin?\" He asked, still maintaining his comical expression. Everyone in that chapel was roaring with laughter, including Ty and Tanesha. \"We're gathered here to witness the coming together of two people whose hearts and spirits are absolutely entwined as one.\" Father Campbell began when the people quieted down.\n\nIt was a short but lovely ceremony. After the rings had been exchanged and they'd finished saying the traditional vows, Ty asked to say a few words to Tanesha. He called it his own personal promise. \n\n\"I love you for everything that you are and everything that you make me feel when I'm with you. You are my partner in life and my one true love, Tanesha.\" He caught a tear that escaped Tanesha's eye with his thumb. \"I will cherish this marriage always and I will love you more and more every day. I promise to be your constant friend, a faithful partner and your love from this day forward. With you, forever doesn't seem long enough. You're the place my life begins. And you'll be where it ends. You have my word, baby.\"\n\nBy the time he was done, Tanesha was crying too hard to make any response. All she could manage was a shaky \"I love you, Ty.\"\n\n\"By the power vested in me, I now pronounce you man and wife.\" Father Campbell declared. \"Kiss her. You're married.\" He grinned, making everyone burst into laughter. \n\nAnd as their hungry mouths met, applause, whistles, and shouts filled the huge church. Everyone was up on their feet, cheering till the kiss ended. They were given a signal to get ready to file out of the church. But before they moved however, Tanesha went up on her toes and kissed Jackson on both cheeks. A roar went up from the Arrowheads when he made a fist pump. Ty couldn't stop laughing long enough to act angry. Tanesha hugged Briana who stood beside Jackson...with no veil fascinator on her head.\n\n\"I couldn't have asked for a better maid of honour.\" She whispered to Briana. \"Thank you.\"\n\n\"The pleasure was mine.\" Briana whispered back. \"Be happy.\"\n\nTanesha hugged her parents next, thanking her mother for her jewelry. Then she hugged Ty's parents who were both on the front pew, and then finally, signaled Cole, Shane, Aaron and Tristan to join the bridal party just as the clergy got ready to precede them out of church.\n\nTy fell even harder...if that was even possible...at Tanesha's thoughtful gesture. His wife was simply the best. He was still shaken over the twin revelation though. When the Wedding March began to play, he felt Tanesha shiver beside him and slipped an arm possessively around her waist.\n\n\"Hey, are you okay?\" Ty asked gently.\n\n\"See?\" She stretched out a hand for Ty to see the flash of goose bumps on it. \"I've always loved the 'Wedding March'. She whispered emotionally, the feeling of joy inside so intense it made her dizzy. \n\n\"I'm glad you're enjoying our wedding.\" Ty chuckled and pressed a tender kiss against Tanesha's temple as they began to follow the clergy. \n\nWhen they got to the entrance of the church, Ty stopped moving though the clergy went on out. Tanesha turned to look at him questioningly but he only smiled. Tanesha shrugged and faced forward again. What she saw made her gasp. Right there at the entrance were two columns of uniformed Navy Officers, facing towards each other with swords raised above their heads. The tips of the swords were touching, forming an arch through which the couple was obviously to pass. Everyone inside the church, except the bridal party, had come outside the church through the other doors, to witness the spectacular military display. That passage was supposed to symbolize the couple's safe transition into their new life together.\n\n\"Oh my God, it's beautiful.\" Tanesha breathed as she watched the officers. \"I love it.\" She laughed delightedly. She was so happy. \n\n\"Ladies and Gentlemen, it's my honour to present to you, Lt. Cdr. and Mrs. Tyler Tyron Wesley.\" Will, who was one of the officers, boomed in a loud voice. \n\nThen amidst applause and general excitement, Ty and Tanesha gracefully passed through the portal. When they got midway, Ty turned Tanesha to face him and then proceeded to kiss her senseless. From the thunderous applause that erupted, the couple wasn't the only ones who enjoyed that kiss. The guests loved it. After they completed their classic walk under the swords, Ty saluted the officers respectfully and waited till they sheathed their swords and marched off, before standing at ease again. It was a simply procedure but a very elegant one. The elated bridal party then rushed out of the church to join the almost euphoric couple with shouts of congratulations. But of course Tanesha hadn't forgotten how the group of friends had played her. She turned on them...\n\n\"You lot are crazy.\" She screeched at them. \"I can't believe I didn't catch on. I'm so stupid.\"\n\n\"All you had to do was look up as you walked down the aisle to know I wasn't the one waiting over there.\" Cole drawled.\n\n\"I was amazed actually.\" Ty chuckled. \"She didn't even spare me a glance.\"\n\n\"Oh, pardon me for not thinking for a second that people actually played pranks in church. But then your fianc\u00e9e's weird behaviour should have told me otherwise, Cole.\" Tanesha retorted, making Briana groan. \"Besides, why would I bother to check out the groom? He was supposed to be there waiting for his bride. And I wasn't supposed to be the bride...and everyone was in white.\"\n\n\"Well, you wanted a white wedding, baby.\" Ty drawled, making everyone burst into laughter. Ty and Jackson's ceremonial attires were white so they got Tanesha's argument. But that didn't make it any less funny.\n\n\"All the signs were there, sister.\" Queenie said. \"I'm surprised you didn't call us out on some of the moves. The dresses, the vibe, last night...\"\n\n\"How could I?\" Tanesha threw her hands up. \"With Kayla's constant 'we do exactly what Briana wants' speech. I can't believe you people actually got me to play the bride on what was supposed to be Briana's Hens Night.\"\n\n\"They did?\" Matt asked with an incredulous look, as the ladies laughed. \"How?\"\n\n\"Briana went on and on about me having to step in as the bride...'as part of my maid duties'.\" Tanesha gave quotations with her fingers. \"She claimed she was tired and had a headache and didn't have the energy to dance with all those sexy hunks, and...\"\n\n\"What?\" Ty growled, making everyone burst into laughter.\n\nTanesha turned to face him with a mock scowl on her face. \"Oh, have a problem with that? Because I heard you guys were in Vegas last night. Care to tell me what went down?\" \n\n\"Ever heard the saying, 'what happens in Vegas stays in Vegas'?\" Paul Ashton boomed, joining the group with Dora.\n\n\"Daddy...\" Tanesha laughed as she stepped into her father's open arms. \"You all got me.\" She hugged her mother tightly as if she was never going to let her go. \"I love you mum.\" She whispered. \n\n\"Love you more baby.\" A still overwhelmed Dora laughed softly. \"Your friends did a great job.\" \n\n\"I still don't know how they pulled it off.\" Paul chuckled, looking at the group. \"You lot should write a book on how to successfully pull off a surprise wedding.\" He said, making the friends laugh.\n\n\"I know right.\" Tanesha laughed as she turned to face the group. \"I love you guys so much. This was the best wedding ever.\" Her breath hitched in her throat. \"Thank you for...giving me my dream albeit deceitfully.\" They all laughed as Tanesha wiped at her eyes. \"Bri, that must have been difficult.\" She smirked.\n\n\"You have no idea, darling.\" Briana laughed. \"But we pulled it off!\" She squealed excitedly as Tanesha hugged everyone.\n\n\"We sure did.\" Kayla nodded. \"And there's still more to come. Right after we finish posing for the cameras. Let's make it good, people.\"\n\nAnd they did. Their beautiful, funny and interesting poses were all captured amidst laughter. A fun-filled reception, planned by the ladies was to follow at the magnificently decorated garden of one of the top five star hotels in Los Angeles. The hotel had unprecedented history, class and charm, providing an ambiance for ultimate enjoyment. Ty had always loved how the hotel united the love of nature and casual living with a profound sense of glamour and fantasy. It was the perfect place for the grand banquet for hundreds that the squad had in mind. He'd therefore booked the entire hotel for that whole day and night. \n\nThe reception was mainly for refreshment and fun. There was going to be assorted drinks, varieties of hors d'oeuvres, fun dances, speeches, other fun activities which the ladies had a blast planning, and the cutting of a beautiful ten-tier all white wedding cake. A full-on dinner party was to follow in the hotel's beautifully designed banquet hall that evening, where a three-course dinner menu prepared by the legendary chef, Gordon Ramsay, was sure to knock everyone's socks off. The guests were to move from the garden at exactly six p.m. into the banquet hall for dinner. The idea was to party till day broke. Guests who wished to spend the night in the hotel's luxurious suites were free to do so at no cost. The hotel's presidential suite, which was the most luxurious, had been reserved for the newlyweds, and their eight royal suites, had been assigned to the remaining seven members of the squad and their partners, and Jackson. Ty and Tanesha were to fly in Shane's private jet to Jamaica for their honeymoon in the morning, courtesy Shane. Ty couldn't wait to have Tanesha all to himself with no mission or school hanging over their heads.\n\n\"Ready to ride to the hotel in style?\" Tristan asked loudly just as a large white stretch Cadillac Escalade limousine, with Stevie Wonder's 'Signed Sealed Delivered' blasting from it, stopped beside them. \n\nIt was the large type that could comfortably carry twenty passengers. The squad and their partners were sixteen in all. Jackson, Thea, Caroline and Queenie made it exactly twenty. Ty had insisted on riding with all of them since they were the brains behind the whole successful event. The group sang and danced to the thrill and amusement of the guests gathered around as they filed into the large car.\n\n'Like a fool I went and stayed too long Now I'm wondering if your love's still strong Oo baby, here I am, Signed, sealed delivered, I'm yours Then that time I went and said goodbye Now I'm back and not ashamed to cry Oo baby, here I am, Signed, sealed delivered, I'm yours'\n\nIt was such a delightful sight that even the people around joined in the singing and dancing to that popular song, which accurately described what Ty was feeling. The group couldn't help exclaiming at the beautiful interior of the limo as they entered it. The optic lighting made the interior look more like a nightclub. It had a fully stocked bar area and a state of the art audio and visual system. The group partied till they got to the hotel, with Ty and Tanesha virtually locking lips throughout.\n\nWhen they got to the reception grounds, the guests were still getting in. As was tradition, the newlyweds had to wait till everyone was seated before going to take their seat. Ty didn't want to waste precious time by just waiting for their guests to get seated.\n\n\"Listen guys, I need to quickly check out something in my suite.\" He told the guys who were standing close to him.\n\n\"Really?\" Dean asked dryly. \"Is that what they're calling it these days?\" \n\n\"Fuck off, Dean.\" Ty muttered as he purposefully strode to where Tanesha stood talking to the ladies. \"Hey ladies. Permit me to borrow my wife for a moment.\" He said as he took her hand and pulled her away from the ladies. \"I need to show you something.\" He muttered to Tanesha.\n\n\"You know you're not fooling anyone right?\" Tanesha chucked. She really didn't care if the whole world saw her fucking Ty right that moment. She'd been thinking exactly along those same lines when Ty came to pull her away. Talk about telepathy. She wanted his touch so badly. She craved it.\n\n\"Do I look like I care?\" Ty rasped. \"Call me when it's time.\" He said loudly to no one in particular.\n\n\"Need help with that dress, Tanesha?\" Jen called out, not even bothering to suppress her teasing laughter.\n\n\"I got it.\" Ty growled as he swept Tanesha into him arms...bridal style, amidst knowing chuckles and cheers from the group. \n\n\"Oohh I love it when you go all caveman on me.\" Tanesha laughed breathlessly as she coiled her arms around Ty's neck. \n\n\"What I'm feeling and thinking right now will make a caveman blush.\" Ty rasped as they stepped into the private elevator that was to take them directly to the presidential suite. \"Trust me.\" \n\nTanesha couldn't stop the moan that tore out of her throat. Ty sounded sexy as hell. And even before the elevator began to move, he set her feet gently to the ground, pressed her back against the elevator wall and crushed his mouth on hers.\n\nWith a lustful moan, Tanesha's lips parted, allowing Ty's tongue to slip deeply in to explore every corner of her hungry mouth. Finally away from prying eyes, he feasted on what he'd been denied for so long...totally driving her crazy. Boy, could the guy kiss. Tanesha clung to him, trembling with need. She felt the increasing pull between her legs, her pussy slick with her arousal. She needed him inside her so bad. Sounds of kissing and moans filled the elevator as Ty pressed his hips firmly against Tanesha's and began to move in a rocking rhythm. He felt the desperation within Tanesha. Just like him, she needed more. \n\nWith a groan which sent tremors rippling through Tanesha's body, Ty began to pull up her dress. \"I need to touch you.\" He rasped urgently against her lips as his fingers moved under her dress. \n\n\"Please...\" Tanesha pleaded shakily as his hand slid between her legs to touch her through the damp lace of her pantie. \"Oh Ty...\" She was trembling like a leaf. \n\n\"Soft and so wet.\" Ty husked. \"I can't wait to eat you for hours.\" Ty hadn't taken a drop of alcohol that day but felt drunk. He needed to taste his wife so bad. \"I want to bury my face between your legs and lick you till you come, screaming my name.\" Fuck, he needed to come so bad, Ty groaned.\n\n\"God...if you keep talking like that I'm gonna come.\" Tanesha muttered and then began to suck fervently on Ty's tongue as his seeking fingers slipped beneath the band of her pantie to touch her wet and throbbing clit. \n\nShe sobbed her pleasure into his mouth, quaking ecstatically in his arms. She could already feel the explosion right there beneath the surface. All it took was one gentle stroke for her to come undone, spiraling straight into utter bliss. Tanesha threw her head back and let out a lustful cry as an incredibly powerful orgasm tore through her. \n\n\"Oh my God, Ty.\" She gasped as she leaned forward and pressed her face into his neck. \"God...\"She clutched his shoulders, her knees shaking badly...threatening to give way beneath her.\n\nShe'd barely stopped shaking when his fingers left her quivering clit but his arms remained around her. He feared she'd fall if he let her go. The door to the elevator was opened but he didn't move. The tension within Ty was so intense his heart pounded, his breathing harsh in Tanesha's ear. He could already feel a wet patch at the tip of his cock. He was desperate to fuck her but wanted her to descend from her high first. \n\n\"If I don't have you in the next couple of minutes, I'll disgrace myself and come in my pants, angel.\" Ty finally murmured, scooping Tanesha up again and stepping into the absolutely beautiful suite. ",
        "\"God...\" Tanesha shuddered violently at those sexily uttered word, so damn turned on she thought she might combust. Those words flooded her with unbridled lust. \"And if you don't take me this very moment, I'll go insane.\" She whispered shakily.\n\nTy didn't need any further encouragement. He could feel himself shaking with pent-up arousal as he entered the bedroom. He set one knee on the king-size bed, then the other, until he reached the center, where he laid Tanesha on her back. Then with a speed that made Tanesha grin, he unbuckled his belt, unzipped his pants and pulled out his rock hard cock which was so wet at the tip it looked as if he'd dipped it into oil. Without wasting time he reached beneath Tanesha's gown and pulled off her panties...without taking off her shoes. He gave a rumbling sound of approval when he glimpsed that beautiful wet pussy, ready for his ravishing.\n\n\"Fuck, I probably shouldn't be doing this Tan.\" Ty groaned. \"I'm as taut as a bow and I can't be gentle. I don't want to hurt you.\"\n\n\"You won't.\" She whispered, giving him a look that he felt all the way down to his toes. \"Your horny pregnant wife wants it real bad.\" She said seductively. \"Are you going to leave her wanting?\"\n\n\"I can't do that.\" Ty muttered huskily, and then turned Tanesha on her side so that one of her thighs rested on the other. \n\nHe knew he had to mind her dress and hair but they were not on his list of priorities right then. Remaining on his knees, Ty slowly lifted up one of her legs, completely exposing her slick opening to his hungry eyes. He hadn't been inside her for months and could hurt her due to his size. But that wasn't part of his worry because she was already dripping wet, thanks to coming so hard in the elevator. He was however worried about his own control and how to restrain himself from fucking her too hard. She was pregnant for fuck's sake. \n\nStaring into Tanesha's eyes in a way that melted her, Ty pushed the leg in his hand up her body and lined up his cock with her wet heat. Then he slowly...maddeningly sunk into her to the very hilt. Tanesha gasped her pleasure as an ecstatic growl tore out of Ty. He didn't remember ever being that deep inside Tanesha. She was hot, tight, wet and felt absolutely perfect. It was so mind-blowingly good his eyes fluttered shut on their own accord. Ty didn't move...fought to remain still. Apart from wanting Tanesha to get used to the feel of him inside her, he wanted to savor the exquisite feeling of being...home. Tanesha felt like pure heaven.\n\n\"Tell me you're okay.\" He husked, opening his eyes to look into her pleasure-glazed ones.\n\nTanesha heard the whimpering sounds falling from her own lips and couldn't stop them. She felt full, stretched and totally possessed.\n\n\"You feel divine inside me, Ty.\" She gasped as she watched Ty's hands rove over her body. Everything about the way he touched her was reverent. Almost as if he was worshiping her. She really hadn't expected that level of gentleness, considering the degree of Ty's arousal. \"Fuck me Ty.\" She commanded shakily. \n\nTheir eyes met and held as did their breaths. And when Ty began to move, they both cried out in unreserved pleasure. It was electrifyingly good. He fucked into her deep and slow...almost as if they had all the time in the world. It felt so good Tanesha couldn't breathe. She could have sworn she could feel every ridged vein on that mammoth cock, and every beat of Ty's pounding heart inside her very depth.\n\n\"Oh God...God...God.\" Tanesha sobbed, totally delirious with pleasure. She could barely breathe let alone speak. \"Ty...\" She never wanted the intense sensations inside her to ever end.\n\n\"You feel so damn good.\" Ty gasped, wincing at the tremor in his voice. \"I'm not going to last, baby.\" He'd thought going slow would help but he was going insane. Ty leaned over Tanesha and tenderly cupped her cheek in his palm, the new angle taking him even deeper. \"Oh my God...\" He cried hoarsely. \"Sorry baby. I have to... next time I'll go slow. Promise.\" Ty grunted as he began to thrust into her with such driving force Tanesha almost passed out form the overwhelming friction and pleasure.\n\n\"Kiss me Ty, please...\" She cried. \"Kiss...\" She got no further with her request because Ty slammed his mouth on hers, kissing her as if he'd die if he didn't.\n\nTy knew he was out of control. He prayed for restraint but he was too far gone for composure. Tanesha's ecstatic moans were not helping matters. Ty thought they were the sexiest sounds ever. Even as their lips remained locked together, her pussy pulled him deeper, her muscles clenching around him so tightly he was dizzy with pleasure. He tore his mouth away to take deep breaths.\n\n\"Fuck, nothing on earth feels as good as you.\" Ty gasped into her ear, causing a delicious shiver to slither down her spine. \"There's nothing better than feeling you around me, baby. You are so fucking sweet.\" Then he took her mouth again.\n\nTy totally forgot everything but what he needed at that moment, which was to fill her with his cream. He rotated his hips, sinking even deeper inside her...so deep into her he didn't know where he ended and she began. The rhythmic slap of flesh against flesh was so erotic he tensed up to hold off the onslaught of orgasm. But Tanesha suddenly clamped her muscles around his cock, and the resulting pleasure was so intense it made him light-headed. He was no match for the explosion when it finally hit.\n\n\"Fuuuuuckkkkk!\" Ty gave a loud roar as his entire body locked into that moment of exquisite tautness that came with an explosion. The most powerful orgasm flashed like lightning through his body, taking his breath away.\n\nThrusting deep, Ty held still, convulsing with every burst of cum that shot out from his cock into Tanesha's clenching heat. Every spurt was punctuated with a loud groan, more animal than human. When he stopped shooting, he remained rock hard inside her, and could still feel another orgasm lingering along his spine. Ty knew he wasn't done coming. And he was desperate for another headlong rush into pleasure. \n\n\"Holy fuck...what are you doing to me?\" Ty gasped. Then with a fierce growl he began trusting into Tanesha again...almost frenziedly, loving the sounds of her ecstatic cries. All it took was five deep strokes... He came unglued. \"Oh God...\" He cried out as the second release slammed into him, stronger and sharper than the first. He couldn't stop coming, he couldn't stop thrusting into her either. And as he drove into her with powerful lunges, he nailed Tanesha's g-spot head-on. She didn't know what hit her. \n\n\"Ty...\" Tanesha impassioned screamed, told Ty everything. She was about to fall apart. \n\nThe intensity of her second orgasm took her by surprise. The pleasure so sharp and fierce her vision blurred. She screamed and writhed as she totally came apart, her whole body wrought with sensations. It felt as though the contractions in her pussy were not happening just there but on every single inch of her body. Her toes curled almost painfully. It was too much. Tanesha spiraled into oblivion. Ty didn't even notice. He was in a world of his own. He didn't remember ever coming so long and hard. When the last delectable spasm died away, he laid his forehead against the side of Tanesha's head and took deep breaths to get his breathing and trembling body under control. He remained hard inside Tanesha which didn't surprise him one bit. His biggest regret at that particular moment was that they had to go to their wedding reception. If only it could be done without them...\n\n\"How I wish we didn't have to leave this room.\" He muttered when he came out of his orgasmic stupor. \"Jesus, I missed you.\" He got no response. Ty raised his head to look at Tanesha's closed eyes and assumed she'd fallen asleep which rather surprised him. Tanesha was not one to sleep that quickly after sex. It must be due to her condition he thought. But they couldn't miss their own wedding reception. \"Baby?\" But just as he was about to shake her, he felt his phone vibrating inside the pocket of his pants, which were still around his knees. \"Fuck...\" Ty muttered as he moved his upper body away from Tanesha and pulled out his phone. \n\n\"Dude, you better get your arse back here.\" Michael growled into the phone. \"The guests are...\n\nTy wasn't listening to Michael. Tanesha seemed to be in a very deep sleep which to him was very strange. \"Hold on Michael.\" Ty put Michael on speaker and placed the phone on the bed. Then without slipping out of Tanesha, he turned her onto her back and leaned over her, making sure he didn't put his weight on her. \"Tanesha?\" \n\n\"What's wrong, Ty?\" Michael asked.\n\n\"Shit.\" Ty muttered, going very still. \"I...I think she passed out.\"\n\n\"You mean you fucked her lights out.\" Michael managed to sound both incredulous and amused. \n\n\"Michael, she's breathing okay but do you think she's...\"\n\n\"Of course she's breathing. Why wouldn't she?\" Michael laughed softly. He detected the panic in his friend's voice and instinctively tried to calm him down. \"Hey, relax. She's fine.\" He chuckled when he heard Ty' sigh of relief. \"But much as I wish you could leave her to awaken on her own, you silly kids have a reception to attend.\" Michael said dryly. \"Try pinching her.\"\n\n\"You mean get her to feel?\" Ty drawled. \"There are better ways, you know.\"\n\n\"Ty...\" Michael growled but could already hear sounds of kissing. \"Oh my God, you're psycho, Ty Wesley.\"\n\n\"Why don't you lot get the party going whilst I try to...pinch my wife.\" Ty said sweetly and then hung up.\n\nTy began to trail his mouth along Tanesha's neck, then up to her ear to lick at the outer shell of her ear. He wasn't in a hurry. He moved up to her lips and kissed her softly, a gentle sweep of his lips before he pressed his mouth harder against hers. With a groan, he sucked her lower lip into his mouth and began to nibble on it. He just loved her mouth. Ty slipped a hand behind Tanesha's back, with an intention of pulling down her zipper to enable him pull down the bodice of her gown. He growled when he realized there was no zipper. The gown had a sexy corset designed back. But Ty really needed to see those gorgeous boobs. With determination, Ty loosened the lacy cords at the top, just enough to enable him release her gorgeous breasts to his starving eyes. God, he'd missed them. They seemed heavier and bigger than he remembered though. What surprised Ty however was how hard Tanesha's nipples already were. He shifted his eyes up to look at her beautiful face and saw her eyes still closed. \n\nHe flicked his wet tongue against one puckered nipple and then blew a cool stream of air over it. It hardened even more right before his eyes. With a moan, he sucked that nipple into his mouth, drawing on the taut flesh with long, deep pulls of his wicked mouth, worrying it, massaging it, sinking his teeth into the turgid peak with just enough pressure to induce rapturous pleasure. His fingers pulled on the other nipple the whole time. Oh how he loved working her nipples. \n\nTy was so engrossed in the pleasure of sucking on that flesh after three months of going without that he didn't even feel it when Tanesha moved. When he felt her pussy spasming around his cock, his hips began to move uncontrollably against her, screwing deep and slow into her as he moaned around the nipple in his mouth. When Ty heard Tanesha's loud lustful moan his head shot up, breaking the suction on her taut flesh. He found Tanesha's beautiful dilated eyes looking at him with raging desire. Her tongue came out to sexily lick her parted lush lips. God, she was gorgeous. And all his.\n\n\"Hey...\" He whispered breathlessly as he rolled his hips, grinding at the perfect angle to stimulate her swollen and still sensitized clit. \n\n\"Hey...\" She whispered back, wrapping her arms around Ty's neck and her beautiful long legs around his waist. Tanesha had no idea how hot she looked with her high heeled feet locked at Ty's back. She wanted to ask Ty how he'd managed to suddenly get on top of her but was too lost in pleasure to manage formulating a whole sentence. \"Jesus...\" She gasped and arched her back in pleasure when Ty withdrew from her clinging depth till just the head of his cock remained, and then hammered into her with a quick, hard thrust. It felt damn good.\n\nTanesha's hips rose wantonly to meet Ty's thrusts. Just as he'd promised, it was slow, it was sensual...almost as if they were dancing. Ty slid in and out, his powerful muscles flexing and contracting against her. His eyes stayed on hers throughout. It was sweet, intimate, hot, magical and spine-tinglingly beautiful. The pleasure she was deriving from Ty's deep slow thrusts was so mind-blowing Tanesha's eyes rolled back into her head. Her loud ecstatic cries filled the suite. She was a quivering mess. Only one person could make her feel that way...her husband. Tanesha grabbed Ty's nape and drew his head close to her. \n\n\"I love you Ty.\" She breathed shakily, eyes wide and beautiful as they stared up into his. \"So, so much.\"\n\n\"I know.\" He whispered, staring into her eyes with so much emotion. \"I can't imagine life without your love.\" He rubbed his thumb over her kiss-swollen lower lip. \"If you live to be a hundred, I want to live to be a hundred minus one day...so I never have to live without you, Tanesha.\" \n\nWith those beautiful, breath-stealing words, he closed the gap between them and sealed his mouth over hers, his firm, sensual lips pressing softly. And as his hot tongue slid inside her sweet mouth, he plunged into the delicate tissues of her gripping heat, sending both of them to heights that set their hearts ablaze with irrepressible ecstasy. When Tanesha started making those erotic throaty sounds she always made when she was about to orgasm, Ty slipped a hand between them and rubbed her engorged clit, gasping against her mouth when she began to writhe against him in ecstatic release. With that sweet rhythmic clenching around his cock, Ty didn't stand a chance. He grunted into their kiss as he erupted hotly into his wife. He didn't shoot as much, but the feeling was much more intense. Ty didn't miss the tears that squeezed past Tanesha's closed eyelids. But for once he didn't allow himself to be bothered by her tears because he knew she was okay. \n\nThey clung to each other, breathing hard. \"I love you too.\" Ty whispered, leaning close to kiss her tears. \n\n\"Is it always going to be like this, Ty?\" She whispered shakily. \"These missions that you have to embark on...I can't stand it. I die a little inside every time I know you're putting your life in danger out there. How am I going to be able to cope?\"\n\nTanesha was upset and Ty, for once, didn't know what to say. \"Look at it this way... We can always have mind-blowing, crazy sex whenever I get back.\" Ty knew that was the silliest thing to say but he really didn't know what to say.\n\n\"We'll always have mind-blowing sex, Ty. Even when we're seventy, it'll still be hot. But these missions...\"\n\n\"Want me to quit?\" Ty dropped tiny kisses all over her face. He knew within his heart that much as he loved his job, he'd quit in a heartbeat if Tanesha asked him to.\n\n\"I can't ask that of you.\" Tanesha groaned. \"Besides, you look so hot in your uniform.\" She whimpered, making Ty laugh.\n\n\"Want to come with me on my missions?\"\n\n\"Can you take me?\" Tanesha asked eagerly...too eagerly.\n\nTy's head shot up from where he'd been nuzzling her neck. He stared down at his wife, wondering whether passing out had caused any sort of brain damage. He'd been kidding for fuck's sake.\n\n\"Are you alright?\" Ty asked, looking genuinely concerned.\n\n\"Why wouldn't I be?\" Tanesha shot back. \n\n\"We'll discuss this later. Now, we need to get back to the reception.\" He said softly as he began to pull out of her with aching slowness, his gaze never leaving hers. \n\n\"Oh God...that feels so good.\" Tanesha moaned. \"Why the rush?\" She whimpered. \"I thought you told the guys to call you when...\"\n\nTy pressed a kiss to her mouth, cutting her off. \"They did.\" Ty said as he rolled out of bed. \"Don't move.\"\n\n\"When?\" Tanesha frowned, watching as Ty entered the en-suite bathroom. She didn't remember seeing him answering his phone.\n\nAfter a short while, Ty came back to the room looking as smart and immaculate as he had before they'd entered the elevator. In his hand was a damp washcloth. He didn't miss Tanesha's look of confusion as he tenderly wiped her clean. Knowing his wife, she would never fully let go till she understood what was nagging her mind.\n\n\"Tan?\"\n\n\"Yes...\" \n\n\"You passed out.\" He stated simply and watched as Tanesha's eyes widened in shock. Then a smile, which she tried very hard to stifle but couldn't suppress, brightened her face.\n\n\"That was some good fucking.\" She muttered, looking at Ty from beneath her lashes.\n\n\"Tell me about it.\" Ty husked. \"Are you okay?\"\n\n\"I feel great.\" Tanesha purred. She felt so sated and contented it almost felt dreamlike, the emotion inside, indescribable. \"Wish we didn't have to leave this bed.\"\n\n\"Well, we have to.\" Ty laughed, getting to his feet. He picked up the washcloth and Tanesha's pantie and went to leave them in the hamper in the bathroom. Then he came back out and moved to the walk-in-closet. He returned with Tanesha's make-up bag and a fresh pantie, grinning at Tanesha's raised brow. \"Yes, your stuff is already here.\" He muttered as he pushed the pantie up the legs and over the beautifully rounded arse of a tired looking Tanesha. \"And your dinner dress is gorgeous by the way.\" He grinned and then leaned down to drop a kiss on her tummy.\n\n\"Of course you've seen it.\" Tanesha drawled. \"I haven't.\" \n\nShe did have an idea what that dinner dress would look like though. She clearly remembered Briana insisting she picked the style she would have wanted for a dinner dress if she were the bride. The silly girl, Tanesha smiled. Talk about being a puppet at her own wedding. Well, she planned on shocking everyone and her naughty husband by singing for him at the reception. She did promise to sing 'At Last' for him when he least expected it, right? Well there was no better day than that day. \n\n\"I just saw it hanging in the closet.\" Ty paused in spreading kisses all over her tummy long enough to mutter. Then he went right back to it.\n\n\"Stop it, Ty.\" Tanesha giggled as her hands shot down to Ty's head. \"That tickles.\" He'd gotten to the sides of the stomach, which was very ticklish.\n\n\"Do you think it's possible for me to see them before we leave for our honeymoon tomorrow?\" He asked softly, looking up at her with such tender eyes.\n\n\"Where are we going?\" Tanesha asked.\n\n\"Answer my question first.\" Ty gave a mock scowl which made Tanesha laugh.\n\n\"It can be arranged.\" She said, gently stroking Ty on the cheek. \"I'll tell mum to arrange with Dr. Brooks so that we can go see her tomorrow morning. They're friends so she can get her to work on a Sunday. Say around ten?\"\n\n\"Perfect. I hear you don't have appetite these...\" He tailed off when his phone began to ring. Michael's face flashed across the screen. \"She's up.\" Ty knew why he was calling. Michael fooled around a lot but when it came to human health, he didn't usually joke no matter how calm he pretended to be. \n\n\"Open the door, Ty.\" Michael demanded quietly.\n\n\"You must be kidding me.\" Ty muttered as he drew Tanesha's gown down to cover her tummy. \"Coming.\" He sighed as he pulled Tanesha to her feet and turned her around to fix the lacy cords on her corset. \"Go freshen up.\" He placed the make-up bag in her hand and gave her a gentle push in the direction of the bathroom. Then he went to open the door for Michael.\n\n\"Where's she?\" Michael had a small bag in his hand.\n\n\"You mean you actually went to bring your kit?\" Ty asked with a look of incredulity.\n\n\"I called Danny to bring it.\" Michael chuckled. He always had hit kit inside his car. But since they'd all driven to the hotel in the limo, he didn't have his car. He'd therefore had to call his driver to bring it. \"How's she?\"",
        "\"She says she's fine.\" Ty said. \"Hey, you did say she was okay.\"\n\n\"I knew it was nothing serious but because of her condition, I wanted to check her out...make sure everything is okay. Besides, I had to say she was okay. You were beginning to panic. I didn't want you having a heart attack and dying on you wedding day...in a hotel room...butt naked...fucking your w...\"\n\n\"Will you shut up.\" Ty growled, and then burst into laughter. The image Michael painted was somehow funny. \"Thanks bro.\" He said quietly, and then stood up and entered the bedroom to go fetch his wife.\n\nSometimes the love and care shown him by his guys overwhelmed him. It reminded him of something Chris had told him Shane had said to him once. He said family didn't end in blood and didn't start there either. Family cared and was always there for the good and bad. Those guys were more than his friends. They were family. And he loved them to bits.\n\nAfter Michael had done a quick check and pronounced Tanesha fit, the three of them went down to the reception in the beautiful garden. The guests were having the time of their lives. Immediately the MC spotted Ty and Tanesha, he announced that it was time for the AGADZI moment. The confused look on the faces of the guests morphed into smiles and grins when the talented Ed Sheeran stepped onto the stage.\n\n\"Ladies and gentlemen, it's time for the couple of the moment to show us their dance steps.\" Ed said in his soft voice, just as the band began to play 'Thinking Out Loud'. \n\nThe guests actually oohed and aahed as the strikingly captivating couple walked to the dancing area and melted against each other. Then with their gazes locked together, they swayed beautifully to Ed Sheeran's captivating voice. It was totally enthrallingly.\n\n'When your legs don't work like they used to before\nAnd I can't sweep you off of your feet\nWill your mouth still remember the taste of my love?\nWill your eyes still smile from your cheeks?\n\nAnd, darling, I will be loving you 'til we're 70\nAnd, baby, my heart could still fall as hard at 23\nAnd I'm thinking 'bout how people fall in love in mysterious ways\nMaybe just the touch of a hand\nWell, me - I fall in love with you every single day\nAnd I just wanna tell you I am\n\nSo honey now\nTake me into your loving arms\nKiss me under the light of a thousand stars\nPlace your head on my beating heart\nI'm thinking out loud\nMaybe we found love right where we are'\n\nTanesha cupped Ty's cheek with a hand as they swayed to that beautiful song. \"I never believed in fate until you came into my life.\" She said softly. \"Nothing has been the same since...or felt so right.\"\n\n\"Oh baby.\" Ty breathed. Her words caused his breath to hitch in his throat. He leaned down and pressed a soft kiss against her smiling lips. \"You leave me breathless, Mrs. Wesley.\" He muttered against her lips. \"You're the air that I breathe. But then you already know that.\"\n\n\"Damn right I do.\" Tanesha laughed softly. \"I love you, husband mine.\" She whispered. \n\n\"And I love you to death, wife mine.\" Ty whispered right back, and then dipped his head to take that lush kiss-swollen mouth in a kiss so sweet it rocked Tanesha to her very soul. \n\nThere were cheers and whistles from the excited friends, family and guests but the two newlyweds looked like they were alone on another planet and couldn't hear a thing. They tuned out everyone and totally got lost in each other.\n\nAccording to the great Einstein, when you trip over love, it is easy to get up. But when you fall in love, it is impossible to stand again. Well, Ty and Tanesha would never be able to 'stand' again. Theirs was indeed two hearts, absolutely and unequivocally entwined as one. \n\nTHE END "
    ],
    "authorname": "adjoaq",
    "tags": [
        "wedding",
        "surprise",
        "hea",
        "pregnant",
        "tanesha",
        "fun",
        "friends"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/sizzling-embrace-ch-08"
}