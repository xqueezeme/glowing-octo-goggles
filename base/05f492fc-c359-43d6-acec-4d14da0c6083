{
    "title": "Hard Landing Ch. 04",
    "pages": [
        "*** This series was awarded Best Lesbian Story, as well as Most Literary/Genre Transcending Story in the . Thank you to all who voted. ***\n\nWelcome friend, to Chapter 4. If you haven't read Chapters 1-3, you'll be lost. So very lost.\n\nAs usual, I've updated the Spotify playlist found in the contact tab of my author page with the songs from this chapter. Shout out to those who've given me a \"like\" on that.\n\nMany thanks to my editor, ThisNameIsntTakenYet, whose excellent work made it possible for me to get this up with far fewer typos.\n\n~~ Ocean City, Maryland ~~\n\nJO\n\nShe woke to the cry of a seagull outside. Opening her eyes, she saw the curtains gently swaying in the breeze coming through the window they'd left open last night. Blue was behind her with one arm thrown over her waist, and she could feel warm breath on the back of her neck.\n\nTrue to her word, Blue had taken her to bed last night and simply held her and stroked her hair until she'd fallen asleep. Jo hadn't even thought about doing more. She'd needed exactly what Blue had given her. She didn't cry last night, she never cried, but the way she had curled up and held onto Blue last night... she sighed.\n\nI really gotta get a handle on what the fuck is going on with me and this chick, she thought. Is it some kind of pheromone thing? I mean she always smells like vanilla, maybe that's it. Why do you keep splitting open like an old melon and letting all your rotten shit fall out, Collins? She grimaced at the visual in her head.\n\nShe reached out and picked up her running watch from the nightstand. \"After eight, Collins. You're getting fucking soft,\" Little Voice chided her.Carefully, she eased out from under Blue's arm, gathered her running gear from the pile of clothes in the corner and slipped into the bathroom that separated the two bedrooms to get dressed. Not wanting to wake her, she exited to the living room through Blue's door. Looking up she saw Larry, Suzanne and Jack in the kitchen, drinking coffee.\n\n\"Hey Jo, morning,\" Suzanne said as her eyebrows tried to crawl up her forehead into her hair.\n\n\"Morning.\" Jo said, closing the door behind her. Oops. \"Going for a run, anybody up?\" No one would say yes. No one ever did. She got impatient and left anyone behind who tried to keep up after a mile or two.\n\n\"Uh, no...\" said Jack. \"Listen Jo, hang on a minute. Look, I'm... I'm really sorry about last night.\" He looked a little green, and Jo guessed he was sporting a whale of a hangover. \"I know I was...\"\n\n\"It's okay, Vance,\" Jo said. \"You were drunk, I'm uptight. Sorry I shoved you into the beach, I was out of line. Today's a new day, so let's try and forget about it. We cool?\"\n\nShe held out a fist and bumped Jack's on the way by as he stammered, \"S-sure, cool Jo...'\n\n\"See you guys in an hour or so.\" She slid the patio door shut behind her and trotted barefoot across the deck and down the steps to the beach. There were several seconds of silence.\n\n\"What,\" Larry said, conversationally, \"the fuck?\" He'd frozen like a statue with his mug halfway to his lips the moment Jo had emerged from Jill's room and hadn't moved.\n\nSuzanne looked over at Jill's door. \"I think maybe someone is a good influence on our girl. After last night I expected her not to talk to you the rest of the trip, Jack.\" She took a sip of her coffee.\n\nJack swallowed, looking less green and not just a little relieved. \"Did you guys know about...\" He tilted his head towards Jill's room.\n\n\"Nope,\" Larry said, \"Seems like the potential for drama on this trip has gone up a bit, don't you think babe?\"\n\nSuzanne tilted her head, looking out back out towards Jo as she reached the hard-packed sand on the shoreline and started running south. \"I'm not sure,\" she mused. \"Five minutes ago, I would have said yes, but after that unusual display of equanimity from our little powder keg...\" She looked back at Jill's door again. \"I wouldn't have put money on Jill coming back in one piece after she chased after Jo last night either. I think it's going to be interesting to watch.\"\n\n~~ En Route to Virginia Beach, Virginia ~~\n\nJO\n\nThe band had done a small show at the national park in Chincoteague, Virginia, then camped in the bus that night. Jack had made noises about setting up his hammock outside, but the mosquitoes seemed thick enough to carry away the small wild horses that lived on the island. Steve and Sara had claimed the bedroom this time. Larry and Suzanne grumped, but they had gotten the first shot on Friday night. Larry had asked Suzanne if she wanted to climb into a twin bunk with him, but she had just looked up and down her husband's six-four frame and laughed at him.\n\nJo knew she and Blue would have fit just fine in a twin together. The two times they'd slept in the same bed, they had curled up tight next to each other all night. But she didn't think Blue would've wanted it to be so obvious that something was going on, so she'd said \"I'll take the couch,\" completely missing the look Blue shot at her.\n\nThe next day as they drove leisurely down Route 13, Jo was sitting at the kitchen table on the bus, working on her mandolin. After the beach jam, someone had picked it up off the sand for her, shaken it and put it back in the case. She'd remembered that she probably should clean it and was working on it with a toothbrush and soft cloth. It was kind of amazing how much sand she'd dislodged so far. \"Stupid fuck,\" she mumbled to herself.\n\n\"What?\" Steve asked. He was sitting across from her, reading.\n\n\"Nothing.\"\n\n\"Huh, 'cause it sounded like you think dropping a fine hand-crafted instrument into the sand wasn't a good idea.\" He was grinning at her.\n\n\"Dude. Get off me.\"\n\n\"I'm not on you Sis, just poking the bear.\"\n\n\"Well this bear isn't up for poking. That couch is lumpy.\" She had a stiff neck from sleeping on it.\n\n\"You know...\" he trailed off.\n\n\"What?\" Jo continued brushing out sand.\n\nSteve looked around. Larry and Suzanne were in the bedroom watching a movie, while Sara was up in the passenger seat talking to Jack. Blue was in one of the bunks napping.\n\nHe lowered his voice \"No one's going to care if you and Jill want to bunk up.\"\n\n\"What? What are you talking about?\" She looked up with a panicked expression on her face.\n\n\"Jo, c'mon, it's obvious. You two have been thick as thieves all week and it's not like I don't know about you coming out of her room yesterday morning. You think Larry wouldn't tell me about that?\"\n\nJo flushed bright red. \"Keep your voice down!\" she whispered.\n\n\"My voice is down, Jo. It's just us talking. I'm just telling you, it's cool. You're an adult, she's an adult and you guys are obviously getting along great.\"\n\nJo looked around to make sure there was no one else paying attention.\n\n\"I don't know what's going on Bro.\" Jo whispered, hunching her shoulders and looking down at her mandolin. \"I have no fucking idea what's going on. I just... I...\"\n\n\"Jo, unclench. You like her. She clearly likes you. Roll with it, Sis.\"\n\nJo looked over her shoulder at the bunk area. \"But I'm deploying at the end of October. You know what that means.\"\n\n\"Oh, for fuck's sake Sis, are you still on about your stupid 'rule'? You've got to let that go, it was years ago. You and I both know that the problem wasn't you having a girlfriend while you were over there. The problem was that Amy was a crazy bitch.\"\n\n\"That's what Blue said.\"\n\n\"My god Jo, you told her about Amy? You don't do that! You have a pet name for her! I can't remember the last person you didn't call by their last name besides dad or me. It's obvious this is a thing!\"\n\n\"I can't, Steve. I just can't and I already told her that.\"\n\n\"Fine. Whatever, I take it all back.\" He looked over his shoulder to see that Jack was pulling off the road for a pit stop. \"If you're gonna get all Jo Collins on her, then you probably should back off. Because she's a nice girl and if you pull your typical moves where you get scared and run, you'll hurt her.\"\n\n\"I don't get fucking scared!\" Jo hissed furiously.\n\nSteve leaned in and looked her in the eye. \"Maybe you can get away with that bullshit with everyone else on the bus, Big Sister,\" he whispered. \"But I see through you. You're scared. So, are you going to be the bad-ass-basic-training-bitch who kicks the ever-loving shit out of anything they put in your way when they tell you that you'll never fly the Blackhawk? Or are you going to be scared, little Jo who runs away to hide in a war when she's afraid of getting hurt?\"\n\nJo just stared at him, seething, as Larry and Suzanne emerged from the bedroom.\n\n\"Your call, Sis.\" Steve got up, gathered Sara from the front and they went out with Larry, Suzanne and Jack to check out the tourist trap they'd pulled into. Jo sat there, staring out the window.\n\n\"Hey, want to go check this place out?\" Blue said from behind her. Jo turned. Blue was standing there in one of her usual sundresses rubbing one eye. She started putting her blue hair back into a braid. She leaned down to look out the window. \"It says three t-shirts for $5. I want to see what kind of treasures we can get for that.\n\nJo forced a smile. \"Sure.\"\n\n\"You ok?\"\n\n\"I'm fine Blue. Let's go.\"\n\nJILL\n\nJo seemed off for some reason I couldn't figure out. I had dragged her around the tourist trap shop looking at all the little tchotchkes and terrible t-shirts that could be had but she wasn't joking around with me like I'd come to expect.\n\n\"What do you think?\" I asked, holding up a knock-off My Little Pony t-shirt in front of me.\n\n\"I'd go with something more like that,\" she said, pointing to an obvious bootleg Wonder Woman shirt.\n\n\"So, you think I'm more of an Amazon than a pony girl? I mean I have the mane.\" I flicked my blue braid with my hand.\n\nShe looked up at me. \"You're tall enough for an Amazon.\"\n\n\"What's your shirt size? Medium?\" I said rummaging through a rack.\n\n\"Yes. Are you buying me clothes now?\" she asked.\n\n\"Yes, in fact, I am. I like this but the color doesn't work with my hair.\" I pulled an olive colored t-shirt of the rack that said \"CHIPS &amp; SALSA\" across the front in yellow letters.\n\nShe snorted. \"Really?\"\n\n\"Yes. I think it's hilarious, but I can't wear it, so I'm going to dress you in it for my enjoyment.\" I batted my eyes at her with my best innocent face.\n\n\"Does that mean I get to pick out something you have to wear for me?\"\n\n\"Absolutely,\" I said, deciding I was going to up my game to try and shake her out of her funk. I stepped closer to her and whispered in her ear \"Too bad they only have t-shirts,\" I said, and walked away swinging my hips. I turned and found her staring at my ass. She looked up and saw I'd caught her. I laughed and went to pay for my found treasures.\n\nThe Air-BnB in Virginia Beach was a bit of a let down after Ocean City. It was a four-bedroom house, three blocks off the boardwalk. No ocean views, no beach. But at least it had a nice pool.\n\nAs we filed into the living room, Steve said, \"Ok, there's a master bedroom on the first floor and another master and two more bedrooms upstairs. How are we splitting this up?\"\n\nJack looked over at Jo and said \"I can take the couch tonight if you want. You did your turn last night.\"\n\nI couldn't understand why everyone was tiptoeing around this, especially Jo, but it was making me angry. Sara already told me everyone knew that Jo and I had stayed together in Ocean City. Then Jo had done that stupid 'I'll take the couch' move on the bus last night, which had irritated the hell out of me, but I'd had no opportunity to talk to her about it. Did she think I was embarrassed? Was she embarrassed? Was this her way of distancing herself from me? I really didn't care. Time to take the bull by the horns.\n\n\"No need, Jack. We're good.\" I reached over and grabbed the strap of Jo's backpack and tugged at her. She was pulled off balance, then caught herself and followed me as I dragged her into the bedroom off the kitchen.\n\nLarry said, \"Wow. Cool, so you're... oof!\" as I heard Suzanne elbow him and whisper \"Dude!\"\n\n\"Blue, what\u2014\" Jo started as I closed the door, but I wasn't ready to let her talk yet.\n\n\"Look, you and I both know that everyone knows that something happened between us in OC. I don't care what they think it is or isn't.\" She opened her mouth to respond, but I talked right over her. \"And you and I both know that we both liked sleeping together. Not sex! Or yes, okay sex, sex is a possibility that remains to be worked out. But the two nights we've curled up together were the best nights of sleep I've had in months and I don't want to pass on a chance for some more of that action because of what everyone thinks. Ok, now you can talk.\"\n\nShe had a little frown on her face. \"I didn't know if you would want people to know we'd... you know.\"\n\n\"Technically, we haven't 'you know'. I mean, I guess I've 'you know-ed' you, but all you've done to me is bite me. Which, thank you very much, I did appreciate that, but that's not really 'you know-ing'. And I'm pretty certain everyone has assumed something's up since you started calling me Blue instead of Doran.\"\n\n\"Probably,\" she said.\n\n\"So, the question is; do you not want to share a bed with me? Are you embarrassed of me? Embarrassed about yourself? Do you feel like you need to sleep elsewhere? Because if I'm making you uncomfortable, that's your problem, but I don't think it's fair for you to make Jack sleep on the couch because you're all twisted in a bunch.\"\n\n\"You're pretty fierce when you want to be, aren't you?\"\n\n\"Damn right,\" I said, staring into her eyes. She looked almost... cowed by my vehemence. That couldn't be real, could it?\n\n\"I'm cool with it, Blue. I mean, I will be. I'll try to be. I'm sorry if I was being a bitch.\"\n\n\"Okay, glad we got that straight.\" I leaned down and kissed her. It wasn't the passion we'd had standing out on the beach or the heat we'd had lying in bed. But it was really... good.\n\n\"Okay,\" I breathed and stepped back. \"Okay.\" I looked around and saw there was a small bathroom off our bedroom.\n\n\"Okay. You go get our suitcases and bring them in here. Then I'm going to go in there and put on my bathing suit. You'll have five minutes to get your suit on before I come out. Then we're going swimming. Got that, Chief?\"\n\n\"Yes Ma'am!\" she smiled at me and snapped off what I assumed was a perfect Army salute. I mean, how was I to know what one looked like?\n\nJO\n\nThe show that night was in Norfolk, about a half hour drive from Virginia Beach, in a bar near the naval base. Expecting the crowd to be mostly off-duty sailors, Jo had naturally replaced her usual Rotors hat with a black baseball cap that said Army Aviation on the front, and her Fort Bragg 10-Miler t-shirt. She received some good-natured boos and hisses from the Navy folk as the band took the stage, but she quickly won over the crowd, starting with the solo intro to AC/DC's Shook Me All Night Long to start the show. It seemed classic rock was a preferred flavor for the military crowd. Larry came in behind her with a thumping drum beat, while Steve put on his best Brian Johnson voice.\n\nAfter the unexpected dressing down she'd received this afternoon, she'd decided to follow Blue's lead and try to quit worrying about what everyone else thought of what was going on between them, just figure out her own shit and enjoy the time they had together. She still was certain it wouldn't be longer than the end of the trip, but the decision had lifted a weight from her and it showed in her performance that night.\n\nWhen Suzanne had asked before the show if they could do Go Your Own Way tonight, Jo had been more than happy to throw down on that. Blue and Sara were over in front of Suzanne's side of the stage dancing up a storm, so during the first chorus, she crossed over behind Steve. She turned and leaned back-to-back on Suzanne playing her Telecaster, while Suzanne plucked out the funky bass line and did her best Christine McVie into the mic with a huge smile on her face. Steve was feeling the lyrics too.\n\nYou can go your own w-a-a-a-a-y! Go your own way!\n\nYou can call it another lo-o-o-o-n-e-ly d-a-a-y! Another lone-ly day!\n\nThe song had one of her all-time favorite guitar solos too, a Lindsey Buckingham classic, running around the tune for the last half of the song.\n\nFuck it, Jo thought. Steve got to be a rock star for his girl in OC, my turn.\n\n\"My girl? Is that what she is now Collins?\" asked Little Voice.\n\nFor the next six days, Little, Jo thought.\n\n\"But after that, you know what's gotta happen.\"\n\nAs she came to the solo, Jo jumped off the low stage in front of Suzanne into the crowd. Landing in front of Blue and Sara she started playing the rock star, showboating for the girls and the crowd around them, hitting the solo like she was in a music video. Blue loved it, playing air guitar and swinging her blue hair around her head in front of Jo, while the crowd around them danced and sang along with Steve and Suzanne. After the song, she got a dozen or more high fives from the crowd before she made her way back up on stage. She saw Blue wave both her hands at her face and say something to Sara who bent over laughing. Jo could swear Blue's nipples were standing up too, poking through her dress.\n\nWell, that was a good call, she thought to herself as she called out the next song to the band.\n\nIt was a humid night, and Sara convinced everyone they should jump in the pool when they got back to the house. Jo was floating in the deep end, holding a beer in one hand and the side of the pool with the other when Blue came out of the house. She'd seen Blue's navy-blue one-piece a couple of times earlier in the week, but tonight she was wearing a bikini the same color as her hair. The bottoms had wide silver metal rings on each hip holding the front and back together, showing... A lot of skin.\n\n\"Whoosh!\" said Little Voice.\n\nYou're goddamn right, whoosh, Jo thought. She looked down into the water at her own outfit, black boyshort bottoms and a short-sleeved yellow and black Body Glove surfing rasher. It was the only swimming outfit she owned. I'm outgunned here, she thought to herself.\n\nBlue gracefully jumped in the water, making a tiny splash, and sank to the bottom before surfacing next to Jo. \"I love night swimming,\" she said, looking up at the quarter moon as her hair spread out into a fan in the water behind her. They'd left all the lights from the house off with just the dim underwater pool lights providing illumination. She reached out, took the beer out of Jo's hand and took a drink before handing it back.\n\n\"This is just what I wanted tonight,\" agreed Sara. Steve was standing chest-deep at the lip where the pool sloped off to the deep end, holding up Sara under her shoulders as she floated on her back in front of him.\n\nJack had gone to bed, rather than swim. Jo suspected he was still embarrassed about having drunkenly mouthed off during the beach jam, but she was enjoying just having the three couples (if she and Blue could be considered a couple) floating quietly in the pool together.\n\n\"Look!\" Suzanne exclaimed pointing up. \"Shooting star!\"\n\n\"I think we're at the start of the Perseids meteor shower window,\" Larry said. \"It lasts like a month. We'll probably see a few more if we wait long enough.\"\n\nAfter twenty minutes and three more meteors, Larry and Suzanne called it a night. Fifteen minutes more, they only saw two more shooting stars, and Sara and Steve decided to head in.",
        "\"Can you turn off the pool lights?\" Blue asked them as they climbed out. \"They'll be easier to see if it's darker.\"\n\n\"Sure thing Jill. 'Night Jo. See you guys tomorrow.\" Steve slid the patio door closed and a few moments later the pool lights went out, leaving Jo and Blue floating silently together in the dark. After a few minutes, Blue took Jo's hand and tugged her towards the steps in the shallow end. She sat Jo down on the bottom step, leaving just her shoulders above the water then straddled Jo's lap, facing her.\n\n\"Hey,\" said Jo quietly.\n\n\"Hi.\" Jill put her arms around Jo's neck and said, \"I thought they'd never go to bed.\" She kissed her. Jo responded, tentatively. \"You ok?\" Jill asked.\n\n\"Yeah... I'm just... I want to be sure you aren't steering towards a crash landing. You know my damage, right? That I'm leaving.\"\n\n\"You've made that abundantly clear on more than one occasion. I think you can stop pointing it out now.\" She kissed Jo some more until Jo pulled back again.\n\n\"So... what are we doing here? I thought you're not a one-night stand girl?\" Blue looked down into her eyes, her arms still around Jo's neck.\n\n\"I'm not and this isn't going to be a one-night stand. It's going to be a six-night stand, starting tonight. Look, we've both agreed there's a connection going on here. A lot of it's mental but A LOT of it's physical too. And I've decided I don't want to dance around it until we maybe, possibly consummate it on our last night together and then get all sad we waited or something dumb like that.\"\n\nJo was looking intently back at Blue in the dim moonlight.\n\nBlue continued, \"I want you. I'm pretty sure you want me. And you're leaving in a week and we don't know what's going to happen after that.\" Jo opened her mouth, but Blue rushed past her. \"Okay, no, we do know. You're out, I get it. But I want us to have memories of being together to take away from this trip instead of regrets that we held back.\"\n\nShe reached behind her and pulled on something and the two triangles of blue fabric covering her breasts floated up away from her. She pulled the top over her head and threw it onto the deck, where it landed with a wet splat.\n\n\"I'm a big girl, Chief Warrant Officer Jo Collins of the United States Army. I know what I'm doing and I know what I want.\"\n\nJo stared at her for a moment longer, then scooted herself up onto the next step, raising them both up and bringing Blue's breasts up out of the water. Jo lowered her head, sliding her arms around Blue's back and pulled her closer as she sucked a nipple into her mouth.\n\nBlue sucked in air and put one hand behind Jo's head. \"Your mouth is so hot,\" she whispered.\n\nJo smiled around Blue's nipple, then said, \"Probably feels like that because we're sitting in the water. Want to go inside?\"\n\n\"No, I mean your mouth is so freaking hot!\" Blue said, pulling Jo's head back and kissing her again, hard, running her tongue into Jo's mouth. She released her and Jo returned her attention to Blue's chest. She went for the other side this time and Blue moaned. Blue reached down and grabbed the bottom of Jo's rasher and started tugging on it. Jo reluctantly released Blue's nipple so she could pull off the shirt. Blue threw it after her own top.\n\nBlue started exploring Jo's body almost frantically, running her hands over her breasts, her shoulders, her stomach, her sides.\n\n\"I can't get enough of these muscles. Are all helicopter pilots this ripped?\"\n\nJo chuckled, \"No you do a lot of sitting in my job. But I've never been good at sitting still, so I overcompensate in my free time.\"\n\nBlue put her feet down on the steps and lifted at Jo, encouraging her to move up to the top step, lifting her breasts out of the water too. Blue leaned down and attacked them with her mouth almost before they were above the surface. \"Jesus, her mouth feels as good as her hands did the other night,\" Jo thought. After a while, Blue started tugging on Jo's shorts.\n\n\"Nuh uh, no way,\" said Jo. \"You already got to touch me. I get to go first.\"\n\nBlue made a small sound of dismay as Jo pushed her to float away on her back, but it quickly changed to happy sounds when Jo grabbed each of the silver rings on the sides of her bottoms and pulled. They slid down her legs and quickly joined their other clothing on the deck with a clink.\n\nBlue wrapped her legs around Jo's torso, kissing her neck, ears, mouth as Jo stood and walked them over to the side away from the steps. She put her hands on Blue's sides and lifted her clear of the water in a single motion and deposited her on the edge of the pool, eliciting a soft \"Eep!\" from her.\n\n\"Fuck, that's the sexiest noise. I love it when you do that,\" Jo said.\n\n\"It's involuntary.\" Blue sounded embarrassed in the dim light.\n\n\"Let's see if I can make you do it again then.\" Jo drew closer, gently easing Blue's legs apart and stepping between them. \"You shave,\" Jo said. Blue was smooth and bare.\n\n\"I hope you like it,\" Blue said.\n\n\"I do, but now I'll never know your real hair color.\"\n\nBlue lightly punched her on the shoulder. \"I have these things called eyebrows, dork.\"\n\nJo wasn't listening. She slipped her hands under each of Blue's thighs, wrapping them under and around to pull her legs further open then slowly lowered her head.\n\n\"Eep!\" Blue squeaked loudly, and then clutched a hand over her mouth, as Jo's tongue slowly parted her lips. \"Oh Jo...\"\n\nJo licked at her, running her tongue up between Blue's lips, bottom to top, ending with a swirl of the tongue on Blue's clit each time. Lick, swirl. Lick, swirl.\n\nAfter a few minutes of Jo's attention, Blue started chanting softly, \"Oh my god... Oh my god... Jo, you're going to... Oh my god!\" Blue voice rose up several octaves as she tried to muffle the sounds coming from her mouth. Her thighs started quaking against the sides of Jo's head. Jo reached up and slid a finger inside her and that was everything Blue needed.\n\n\"Oh! Oh, no, no, no...\" She grabbed a double fistful of Jo's hair then hissed \"Yesssssssssss!\" like a tiny steam engine. Jo recalled she'd made the same noise when she had bitten her neck the other night.\n\nFinally, Blue pushed her head away, drawing in ragged breaths. Jo looked up at her as Blue hopped off the side to splash back into the water, wrapping her arms and legs around Jo and clinging to her like a drowning woman to a life preserver. Jo put one hand in Blue's hair, and pulled her head back so they could kiss.\n\n\"Okay,\" Blue panted. \"Okay.\"\n\n\"Okay what?\" Jo asked.\n\n\"Okay you've had your turn, my turn now.\"\n\n\"Let's go inside, I'm actually getting cold.\"\n\n\"What?\" Blue exclaimed, \"Big tough Army girl gets cold?\"\n\n\"I'm an Army girl, not a polar bear.\"\n\nThey crept out of the pool together, gathering their clothes from the deck. Jo stuck her head in the door and made sure they weren't getting ready to interrupt someone's midnight snack streaking through the darkened kitchen. The coast was clear and they quietly scooted into the first-floor bedroom. Jo led Blue into the bathroom and started the hot water in the shower, while Blue knelt down in front of her and struggled to pull Jo's wet shorts down to her ankles.\n\n\"C'mon, let's get in the shower,\" Jo said trying to pull Blue up to her feet.\n\nBlue just made a small noise that might have been a \"no\", and instead lifted one of Jo's legs up off the ground.\n\n\"Oh shit!\" Jo exclaimed and grabbed for the shower door as Blue's tongue attacked her pussy. As she stroked Jo's clit with her tongue, Blue brought her hand up and slid two fingers into her and started caressing her g-spot exactly like she had in Ocean City, little curling motions, rubbing her fingertips right on the center of pleasure. \"Oh my god!\" She'd caught Jo by surprise, and her orgasm came on strong and fast. This night, Blue didn't stop to tease her, but went full speed ahead. Soon Jo was coming herself and trying not to fall on top of Blue, holding herself up with both hands on the walls of the tiny bathroom.\n\n\"Jesus, Blue...\" Jo panted as her orgasm subsided.\n\n\"Okay, now we can get in the shower,\" Blue giggled as she stood up.\n\nThe shower was less raw passion and more kissing and gentle caresses. Jo filled her hands with shampoo and spent a long time lathering up Blue's long hair, while Blue leaned back against her, her hands reaching back to caress Jo's thighs.\n\n\"Just think, we could have been doing this for days,\" Blue murmured.\n\n\"I think the schedule we're on is working just fine.\"\n\n\"Mmmm. I'm glad I hit you with a verbal two-by-four this afternoon, though,\" Blue giggled.\n\n\"Me too. Hey what did you say to Sara after I jumped into the crowd tonight? That made her laugh so hard?\"\n\n\"What? Why, what made you think of that?\"\n\nJo pulled Blue back against her and wrapped her in hug, her arms covering Blue's breasts from behind as hot water poured over them. \"Because I when I got back on stage I noticed your nipples were poking out.\"\n\n\"Oh my God, no they weren't!\"\n\n\"It's ok, I'm sure none of the dozens of horny sailors around you two noticed.\"\n\n\"You're the worst. If you must know, after you goaded Steve into his rock god performance at Secrets, Sara turned to me all flushed and said 'Well I do declare, I believe I need to take mah man to bed right now!' Tonight, I told her the same thing about you.\"\n\n\"Seriously? You said that to her? So, she probably knew we were going to bang in the pool when they went inside. Which means my brother probably knew.\"\n\nBlue leaned back and gripped the strong arms wrapped around her. \"No, she didn't know we were going to bang.\"\n\n\"No?\"\n\n\"No, she knew we were going to,\" and her voice took on an exaggerated southern femme fatale tone \"make l-o-o-o-o-o-v-e in the pool.\"\n\n\"Brat!\" Jo lowered her head and bit Blue where her neck met her shoulder.\n\n\"EEP! Oh my god!\" Blue cried out as her knees buckled and she started quivering. Only Jo's arms kept her from falling to the floor of the shower. \"Oh my god, that's not fair, I can't believe I showed you that!\" Jo reached around to Blue's clit and gently started stroking and then lightly bit her special spot again. She held her teeth there as Blue's orgasm lengthened and intensified, Jo holding her up tightly with her free arm.\n\n\"Oh. Oh, oh, oh... oh my god Jo. Jo, stop, stop, Jo please, stop, please!\" she panted.\n\nJo drew back. \"You ok?\"\n\n\"Yes, god yes. It's just too much.\"\n\n\"Okay... come here.\" Jo turned off the water and started rubbing Blue with a towel.\n\n\"I can dry myself you know.\"\n\n\"Shhh, I want to do this.\"\n\nA few minutes later as she was trying to dry Blue's long hair, Blue stopped her and turned around. \"Listen, I really liked that, I don't want you to think I didn't, but I need to tell you something.\" She took the towel from Jo and started winding it around her head.\n\n\"Okay,\" Jo grabbed another one and started drying herself off.\n\n\"My neck thing? I don't know why that works on me like that, but it's one hundred percent out of my control.\"\n\n\"Good to know.\" Jo grinned.\n\n\"No, I mean... I'm trying to say... I had a girlfriend once who was really manipulative. And when we'd get into a fight or if I wasn't going along with something she wanted, she'd come up behind me and do that and turn me into a puddle. She kind of turned it into a weapon against me. I don't think you'd do that!\" Blue rushed out as Jo worriedly opened her mouth. \"But I just wanted you to know. Feel free to bite me there anytime we're getting frisky, but you know... context please.\"\n\n\"Okay Blue, I got it. No neck bites during arguments or in public.\"\n\nBlue blushed, \"Well, maybe sometimes in public. Depends on if anyone can see us or hear me.\" She reached forward and lightly ran her fingers through the soft triangle of hair between Jo's legs.\n\nJo shivered, took Blue's hand and pulled her towards the bed. Under the covers, Blue turned Jo away from her and snuggled up behind her as she had the night after the beach jam. She reached around and continued to lightly stroke Jo's fur. It was more comforting that sexual.\n\n\"Do you want me to shave mine like yours?\" Jo asked.\n\n\"No, I want you to do whatever you want to do for yourself. I kind of like touching it.\"\n\n\"Ok, that's probably good. Every time I've tried I get terrible razor burn.\"\n\n\"Ah, you need the Jill Doran spa special then. I've gotten really good at it. Hot soapy washcloth, lots of warm oil. I don't want you to do it for me, but if you ever decide to do it for yourself, you have to let me take care of it.\"\n\n\"That sounds... interesting.\" She grasped Jill's wandering hand and pulled it into a tight embrace around her. \"I hope this doesn't sound too wimpy, but while I,\" she adopted Jill's fake southern accent, \"l-o-o-o-o-o-v-e-d making love to you, this part might be just as good. Thanks.\" She hadn't even known this kind of comfort was something that she had wanted so badly.\n\n\"Anytime,\" Blue's sleepy voice said in her ear.\n\nJILL\n\nI felt Jo ease out from under my arm and heard her start to dig through her bag for her running gear. My body wanted to roll over and go back to sleep, but I remembered the resolution I had made to myself last night. I forced my eyes open and sat up as Jo was pulling on her nylon running shorts.\n\n\"Morning,\" I said.\n\n\"Hey Blue, morning,\" she said as she sat down on the bed to kiss me. \"Hope you slept well. God knows I did. I'm just going out for my run, I'll be back in an hour or so.\" She pulled on her sports bra and reached for her running shoes.\n\n\"I slept great, but hang on a sec, I'm coming with you,\" I said. I got out of bed and started to rummage through my bag.\n\n\"What?\" Jo sounded surprised.\n\n\"I haven't run in a long time. I mean I used to run after college. But I've been thinking of getting back into it. I don't make it to the pool as often as I'd like.\" I pulled on some gym shorts and a sports bra. \"Where did I put my socks?\" I muttered.\n\n\"Uh, Blue, I...\"\n\n\"Relax, I know you're going to leave me in the dust, probably after a couple of blocks. It's fine, you don't have to plod along for me. I just want to start off with you.\" I tried to imitate Jo's voice, \"You can 'get your five miles, ladies!' after I drop off. I'll just do what I can.\" I sat on the bed and started putting on my sneakers. Jo was looking bemused. \"What?\" I asked...\n\n\"Nothing, I just think it's adorable that you want to run with me. No one else ever does, and you might not want to again after today. But I like that you want to try.\"\n\n\"Don't get cocky,\" I said as I was putting my hair back in a braid, \"because tomorrow you aren't running, you're going to go swimming with me.\"\n\n\"Jumping in the pool isn't a workout, Blue.\"\n\n\"No kidding, Sherlock. Tomorrow morning I'm taking you to the beach and we're going to swim a couple miles together.\" Jo no longer looked bemused.\n\n\"Wait, really?\"\n\n\"Really, really Jo. I do it three times a week, so remember that today before you blow my doors off out there. Alright, let's go!\"\n\nWe came out into the kitchen to find Jack and Steve talking about the Washington Nationals. Apparently, they sucked.\n\n\"Hey guys, we're going for a run. Later,\" I said.\n\nSteve looked concerned, \"Uh, Jill, you might not...\"\n\n\"Relax Bro, I'm not going to kill her. It's cool,\" said Jo.\n\nWe stretched in the front yard then started off heading towards the boardwalk. I took off at what I thought was a brisk pace. Jo said, \"Good, start off slow.\" Jesus. \"Keep your chest out and your elbows back.\" After about a half mile, I was huffing and I knew I wasn't going to last too much longer. Jo was pacing me easily, talking to me and giving me encouragement. I didn't have breath to talk. I pushed myself to keep going further than I would have if I'd been running on my own, though.\n\nWhen she looked at her watch and said \"One mile, good!\" I stopped. She stopped too, but kept jogging in place. \"Don't stop. If you can't run, then keep walking. You'll cramp up otherwise.\"\n\n\"O... okay...\" I gasped out. \"I think... I'm done. I'll... walk... back.\"\n\n\"You did pretty well for not having run for a while, Blue. I'm proud of you.\" I just stared at her, panting. She stopped jogging in place and reached out to squeeze my arm.\n\n\"Hey for real, you did better than I thought you would. No one's going to keep up with someone who runs every day their first time out in months.\" She leaned over and kissed me. \"Now, walk back as briskly as you can to keep those muscles loose and I'll see you at the house. I'm going to stretch it out a few extra miles today.\" She kissed me again, clicked something on her watch and took off. I glared after her. If I had sprinted flat out I don't know if I could have kept up with her. \"You wait until tomorrow, Collins!\" I yelled after her.\n\nWhen I dragged myself into the house, Suzanne and Jill had replaced Steve and Jack in the kitchen. I had stopped breathing heavily but my legs felt like rubber. There was coffee but I opted for a big glass of water instead.\n\n\"Wow Jill, I was sure you were going to come back on stretcher when Steve told me you went running with Jo,\" Suzanne said.\n\n\"Yeah, good job 'Blue'!\" Sara teased me, smiling.\n\n\"Ha, ha. She said no one else would even try, so I'm one up on you guys.\"\n\nSara turned back to Suzanne. \"Hey Suzanne, you know I think this house turned out nicer than I thought it was going to be. You know what the best thing about this place is?\" Sara asked.\n\n\"Why no, Sara, please tell me about this house's best feature!\" Suzanne replied. I eyed them both suspiciously as I drank my water.\n\nSara turned to look at me with a huge grin and said, \"Both our bedroom windows overlook that amazing pool out back!\"\n\nI choked and sprayed water all over Sara and the counter. \"Oh my God!\" I yelled, coughing. Suzanne was laughing hysterically, while Sara was holding up her arms, looking down at her wet clothes. \"You guys weren't spying on us, were you!?\"\n\n\"No! No, we definitely did not get an eyeful last night. Don't worry Jill.\" Sara said, shaking off drops of water.\n\n\"Oh, thank god!\" I was sure I was the color of a tomato.\n\n\"We got a pretty good earful, though,\" She said.\n\n\"What?!\"\n\nSuzanne grinned at me and said \"Eep!\" as Sara cracked up.\n\n\"Oh, that's it, it's ON!\" I threw the rest of my water at Suzanne, who dodged most of it while she giggled at me, and I turned to fill my glass back up from the sink. \"You guys are so dead!\" I yelled as I chased them through the house with my glass of water while they laughed and yelled \"Eep! Eep!\"\n\nJO\n\nAfter the band's short afternoon concert on the boardwalk, Jo found herself at the Lynnhaven Mall with Blue, Sara and Suzanne. When Blue had discovered that Jo's only swimming outfit was the surfing shirt and shorts she had immediately declared a shopping trip was in order.\n\n\"Jo, there's no way you can swim any distance in that thing. Too much drag. You need something better.\" They were in the Macy's swimsuit section. Sara and Suzanne had wandered off to another store.\n\n\"You're serious about this swimming thing tomorrow?\"\n\n\"Why, you scared?\" Blue teased her.\n\n\"Uh, dubious. I don't swim that much. Or at all.\"\n\n\"Cool, I don't run that much, we'll be even. Now, I'm thinking two-piece for you, but nothing skimpy. See anything you like?\"\n\nJo looked a little lost. She hated shopping. \"Maybe this? God, I don't know.\" She pulled out a simple black two-piece suit.\n\n\"Mm, no, those straps at the hips are too thin for distance swimming. Much as I'd enjoy having it break and fall off of you in the ocean...also as quickly as you tan and with your blonde hair, we need some color. Here we go.\" She pulled out a bikini with a full bottom, the top resembling one of Jo's running bras, except with a racer-back cut. It was covered in a bright green print of banana leaves, showing just a hint of white background underneath.",
        "\"Really? I'll look like... some L.A. beach bunny.\"\n\n\"No, you won't. Come on. I want to try this one on myself,\" she said, holding up a turquoise number that seemed to be mostly strings.\n\nBlue ushered her into a large fitting room and followed her in, locking the door behind them. \"Well, go ahead, let's see it.\"\n\nJo actually blushed. \"We're going to change right here in front of each other?\"\n\n\"Why not? After last night, this is no biggie, right?\" She grinned and whipped off her t-shirt and bra. \"Let's go, c'mon Jo,\" she prompted as she pulled her shorts down.\n\nJo stared at Blue's breasts as they swayed while she tried to figure out the webbing of strings on the suit she had picked out. She drew in a breath and skinned out of her own t-shirt and shorts.\n\n\"See? You look great!\" Blue said a few minutes later. Jo had to admit, the suit looked good on her in the dressing room's full-length mirror. The high cut on the hips and the racer-back top showed off her thighs and shoulders, while the full back covered enough of her ass that she wasn't too uncomfortable not having the full coverage of her normal boy shorts. She'd never owned a swimming suit that was so... feminine. Her middle was pale compared to her legs and arms. I guess laying out in this suit would fix that, she thought.\n\nBlue's suit though... Wow. She turned away from the mirror to admire Blue's figure. The suit was basically a tiny bikini that barely covered her crotch and breasts and had a web of strings and straps connecting the top and bottom. \"You're going to actually walk around in public in something that covers so little of your butt?\" she asked Blue. Blue spun to present her backside to Jo. The strap in the back was maybe two inches wide.\n\n\"Only if I'm feeling extra saucy. Actually, no, I wouldn't wear this in front of the guys, I just wanted to try it on for you. You like?\"\n\n\"I like.\" Jo said and thought back to last night. She stepped up behind Blue, wrapped her arms around her and whispered, \"You know, we're in public and no one can see us.\" Blue's eyes widened as she licked her lips and looked around the changing room, gauging the noise level of the store outside.\n\n\"Okay. Yeah, Okay...\"\n\nJo lowered her lips to Blue's neck and started kissing and licking at her special spot. It took no time at all for Blue to start breathing heavily. She looked at Jo's eyes in the mirror and whispered \"Don't tease Jo, do it!\" And then she held her hand over her mouth, as Jo nipped the soft skin with her teeth, then bit her, hard.\n\n\"M-m-m-mph!\" Blue made a muffled sound under her hand and her knees buckled as Jo held her tightly.\n\n\"One of these times I'm going to get carried away and leave a big mark there,\" Jo said.\n\n\"I don't care. You can mark me all you want,\" Blue panted.\n\n\"Really? I'd be embarrassed to walk around with a bite mark showing on my neck.\"\n\n\"Well, my giving you a stern talking to yesterday aside, I'm a little on the submissive side. You marking me as yours like that... that would be a bonus for me actually.\"\n\n\"Really?\" Jo said again, eyebrows raised this time. \"You don't seem that submissive to me.\"\n\n\"Well that's because you've been all... you, and I've had to take charge to get this show on the road. You can take over anytime you want.\"\n\n\"Jesus, Blue, careful what you wish for.\"\n\nBlue wiggled her eyebrows at Jo in response.\n\nThey started changing back into their clothes and Blue put the skimpy suit on the hook to be returned to the rack.\n\n\"Let's go pay for that one, it looks too good on you not to get it,\" Blue said.\n\n\"You know, this is the second time you've picked out something to dress me up in.\"\n\n\"You right, that hardly seems fair. So, let me make it up to you... let's pay for that suit then I'll go get us coffee at the Starbucks by the entrance and wait for you there. You can go buy literally anything in the store that you want me to wear for you. Either something for me to wear tomorrow on the bus or something you want me to wear at the next show or something to wear to bed tonight. Your call, anything. No questions or judgment. You buy it, I'll wear it.\"\n\nJo eyes unfocused and she turned bright red. \"Uh...\"\n\nBlue laughed. \"It's okay Jo. I mean it. Whatever secret fantasy you have, I'll do it. Anything you want me to wear. We've got five nights left, let's not waste them. I think there's even a Victoria's Secret down that way.\"\n\nJo's flush turned an even darker shade. \"I, uh... okay.\" She was clearly lost in her imagination. \"But if I'm getting something for you to wear to bed, shouldn't you get something for me to spool up your engines? I mean a bathing suit is one thing, but...\"\n\n\"That sounds like a wonderful idea. I already saw what I'm getting you.\" Blue leaned in and took one of Jo's hands and gave her a deep, heated kiss, then said, \"See you at Starbucks Jo,\" and walked away, swinging her hips.\n\nJILL\n\nI didn't regret going to dinner with Jo in Rehoboth Beach instead of going with the gang to the boardwalk. But going with the gang to the boardwalk in Virginia Beach was about the most fun I'd had on the trip, other than the beach jam. And the night in the pool with Jo. And giving Jo a rubdown. That naughty rubdown. And the night of the makeouts.\n\nOk, so it just barely made it into the top five, but the boardwalk was all kinds of fun. We ate and drank and played games and I laughed harder than I thought possible. Turns out Suzanne was a skee-ball assassin, no one could come close to beating her. Larry made a shot on one of those basketball games where the hoop is fifteen feet in the air. The guy running the game offered him double or nothing on the teddy bear he won and Larry buried another one to win Suzanne a stuffed Pikachu over four feet tall.\n\nThere was a guy kneeling on a tarp on the boardwalk with a boom box blaring R&amp;B doing a painting of an amazing space landscape vista using just cans of spray paint in less than five minutes. I watched him do three of them before the gang had to drag me away with me furiously thinking the whole time how or even if I could duplicate his feat. Jo finally bought me one of his creations in order to get me to leave.\n\nWhen we rode the Ferris wheel, I saw Steve give the operator a bill to strand our three cars at the top for a while. Then when we came down, Larry tipped him again for another trip around.\n\n\"The view up here is amazing,\" I told Jo, leaning into her shoulder and looking up and down the beach.\n\n\"The view's pretty funny back that way,\" she jerked her head over her shoulder. I turned and saw Larry and Suzanne making out next to Pikachu in the car behind and below us and I laughed.\n\n\"That's not a bad idea,\" I said snuggling closer.\n\n\"Want me to bite your neck?\"\n\n\"No way!\" I sat back up. \"Everyone would see.\"\n\n\"Doesn't look like Suzanne cares if everyone sees her and Larry playing tonsil tennis.\"\n\n\"Yeah but I'm pretty sure Larry won't spontaneously give her an orgasm.\"\n\n\"Fair point.\"\n\n\"Your brother and Sara are going at it too.\" I pointed at the car above us. We could only see the tops of their heads, but there wasn't much doubt there was some kissing going on.\n\n\"Ick. That's something I don't need to see.\"\n\n\"It's not going to put you out of the mood to see me in whatever it is you bought me today?\" I teased.\n\n\"Uh, no, I think I'll be good.\"\n\n\"I really never imagined when I was getting to know you that I'd ever see you blush this many times in one day,\" I laughed.\n\nAt the end of the evening, we had trouble finding a Lyft for six people. \"Why don't you guys take one of the four-seaters. I'd like to walk back along the beach anyway, it's only a mile or so.\" I said, looking to Jo for agreement.\n\n\"You guys sure?\" asked Larry.\n\n\"Yeah no worries. Can you take my spray can painting for me? And leave the door open, we didn't bring a key.\"\n\nThe beach was pretty crowded for late evening near the amusements area, but soon thinned out as we walked north. I slipped my hand into Jo's and felt her stiffen a little.\n\n\"You okay?\"\n\nShe sighed and then tightened her grip on my hand. \"Yeah sorry Blue. I'm just not good at the whole dating thing, and you're more of a date than I've had in... forever. I told you, mostly when I've been with a woman it's just been fucking. I feel out of my element with this,\" she said holding our hands up. \"Not that I don't like it. It's just unfamiliar territory.\"\n\n\"What can I do to help?\"\n\n\"I'm not sure. What do people who date do? Tell me something about you. Why art? How did that get to be your thing?\"\n\n\"Hmm, there's no big dramatic story. Ever since I can remember I've been the kid who would rather draw than do anything else. Crayons, then pencil doodles and sketches. In junior high school I had an art teacher who introduced me to oils and watercolors and I was hooked. My parents weren't thrilled when I said I wanted to go to college for art. My dad always complained about spending all that tuition money for something that he said would never earn me a living. I guess he was right, since I'm doing something else.\"\n\n\"Your dad sounds supportive as fuck.\"\n\n\"Yeah... yeah I didn't win the lottery there. When I brought my first girlfriend home from college and came out to them all at the same time, they were just... 'get out.' No argument or discussion, they were just done. And I didn't see it coming, it's not like we were religious. We never went to church except maybe Christmas or Easter. I call them every now and then. Sometimes on their birthdays. It's usually a short conversation. I'm still pretty close to my sister Justine, but it's awkward. She's married to a nice guy. They have a kid and they spend most holidays with mom and dad. Sara's family has adopted me, pretty much. I call her parents mom and dad a lot.\" I sniffed and turned away from Jo. She wrapped her arms around me from behind.\n\n\"I'm sorry. That really sucks.\"\n\n\"It's ok. Sara's parents have been really great to me. Sometimes when I talk about mine it gets me sad, but it's good to talk about it. You know, get the bad stuff out to make room for good stuff.\"\n\nShe let me go. \"Whoo-boy, you and I have different opinions there. I mean you probably have a healthier approach, but I never want to talk about my shit. As I think I've demonstrated.\"\n\n\"You're doing alright. I mean, you're uptight when you end up telling me stuff, but I don't mind. I like that you trust me.\"\n\n\"I think that's why I get angry though, I don't trust you.\" She looked over and saw the look on my face. \"That came out wrong, sorry. I just don't trust anyone except Steve and dad. And Suzanne and Larry and Jack. I mean, I trust my copilot and my aircrew. And the members of my unit. But just as far as having my back on the job. There's not a fucking chance in hell I'd ever talk about my personal issues with any of them.\"\n\n\"Is it because of Amy?\" I asked. The look on her face told me I was skirting close to her boundaries, but I didn't care. She stared out over the ocean for a long minute.\n\n\"No, I was an uptight bitch way before Amy. Pretty sure our relationship was sabotaged by me before I even left for my first rotation when we were together. The song incident was just the match landing on the pile of firewood.\"\n\n\"So why did you get back together before your next deployment?\"\n\n\"I've never answered that to my own satisfaction. I think maybe because I thought as wound up as I am, I'd never find someone who could live with me and since Amy said she wanted me back I figured it was as good as I'd get.\"\n\nI took her hand and started walking again. \"Nah, you can do way better than a psycho, crazy bitch lady.\" She laughed. \"So, I've always been an art girl. How did you get into the rescue pilot business? On the bus Friday night, you were pretty adamant it's 'your job'. How did it become your calling?\"\n\nShe abruptly pulled her hand away again and reversed her direction, walked a few steps back away from me towards the boardwalk and then sat down hard on the packed sand looking at the waves. I sat down next to her, concern on my face. \"Sorry?\" I said.\n\nShe laughed ruefully. \"Jesus Christ, Blue, you're like a fucking ninja finding my soft spots and poking at them.\" She sighed. \"Anyone else I'd just change the subject and move on but you... you get your hooks in me somehow.\"\n\n\"Okay, sorry for real. What did I say.\"\n\n\"It's a mom thing.\"\n\n\"Oh. Well, again, you don't have to tell me.\"\n\n\"You say that now, then I sit here and fume and then I go ahead tell you anyway, just with the angriness. So, let's see if I can just tell you without getting pissed.\" She took my hand and squeezed it.\n\n\"My mom was a music teacher. She taught in high school and also did private lessons. One night when I was fifteen, during a bad storm in December, she was out doing a piano lesson at one of her student's houses and on her way home some guy slid through a stop light in a semi and t-boned her car.\"\n\n\"Oh Jo, I\u2014\"\n\n\"No, it's okay. Just... let me get this out. So anyhow, the weather was really bad. It took about two hours for them to get her to the trauma center. She never woke up and died two days later.\"\n\nShe sighed, then said, \"Somehow I got it in my fifteen-year-old head that if they'd gotten her there quicker they could have done something. The night she died my dad found me outside of the hospital screaming at some pilot on the helicopter pad for the Life Flight chopper that if he wasn't such a fucking coward about flying in bad weather my mom would be alive.\"\n\n\"Oh my god. Is that what happened?\" I asked.\n\n\"No, not at all, I was just being an asshole. I figured that out pretty quick afterwards. No one would've been allowed to fly as bad as the weather had been that night. I wouldn't even try it on instruments. She was probably brain dead from the moment of impact anyway. And the guy I was screaming at probably wasn't even on duty the night she got hit and had no idea what I was talking about. I think he recognized that I was some traumatized little girl and just let me yell at him.\"\n\nI put my arm around her and she leaned her head over onto my shoulder and sighed.\n\n\"I didn't really put the two together when I was going into the Army. Like really, I don't think it ever crossed my mind, I just didn't want to go to college and I wanted to fly. My first tour when I was riding the right seat my PIC made a call to go into a hot LZ to pick up some casualties. And I was so fucking scared that first time. There were bullets pinging in and one went through our canopy. Probably missed me by three feet.\"\n\nI shivered. I was getting scared just listening to the story.\n\n\"Afterwards I questioned his choice to go in and he pulled me aside for a talk. 'It's the PIC's call' he told me, 'Someday you're going to be in that seat, and you gotta remember two things. One, you're responsible for everyone on your aircrew. You crash, it's on you. But also, you gotta remember, that wounded soldier on the ground? They're someone's son, or husband, or father, or someone's daughter, or wife, or mom. And they need our help and it's our job to get them out. It's what we signed up for.'\"\n\nShe raised her head off my shoulder and looked at me. \"Someone's mom. And it just clicked. I'm there to get these people out. It's my job. Before that I was a good pilot but nothing special. But after that I just became... driven, I guess. To be the best pilot. To be the one who got everyone home. To their sons and daughters. That's why it's my job, my calling. It's why I can't imagine retiring when I get my twenty to chauffeur rich dudes around like Steve does.\"\n\nShe reached out and wiped her thumb over my cheek and I realized I was crying. I sniffed. \"How are you sitting there dry-eyed after that story?\" I asked.\n\nShe smiled a little sadly. \"I don't know Blue. I never cry. I haven't cried since my mom's funeral, I couldn't tell you why. There have been plenty of times I've wanted to. Then I just... don't.\"\n\n\"I gotta tell you Jo, that's messed up.\"\n\nShe laughed. \"I keep telling you, I'm a fucking mile of bad road.\" She stood up and pulled me to my feet. \"Well, I think that's enough serious shit for one night. And hey! I told you a mom story and didn't get pissed at you for getting it out of me!\"\n\n\"Baby steps, Jo, Baby steps.\"\n\nBack at the house, everyone was slightly drunk and we joined them for a beer. Larry was curled up on the couch with his arms and legs wrapped around the giant Pikachu, much to Jo's amusement. I was getting all wound up wondering what Jo had bought at the mall for me though. When Steve asked Jo if she wanted another, she made eye contact with me and I tilted my head towards the bedroom.\n\n\"Nah, think we'll call it a night. Catch you guys tomorrow.\"\n\n\"Sara, we're going to swim a couple miles in the morning, want to go?\" I asked. Sara has been my swim partner at the pool for years.\n\n\"Wait!\" Steve said, \"Jo you're not going to run tomorrow? Wow!\"\n\n\"Uh, no, I guess I'm swimming instead.\"\n\n\"I am so in,\" Sara said, grinning.\n\n\"Hell, maybe we'll come down to watch,\" said Larry.\n\n\"Oh, hell no,\" I said. \"If anyone comes with us to the beach, you're swimming or you can get lost. The train leaves at 8:30. Anyone who wants to go, be ready.\" Then I led Jo into the bedroom.\n\n\"So... do you have something for me?\" I asked. Jo flushed bright red again. Huh, that was the third time today.\n\n\"Listen... look Blue, I'm not sure...\" Oh my god she was totally embarrassed. And it was turning me on so much.\n\nI stepped closer to her and ran my hand through her hair. \"Jo, it's all in fun. We're going to both take off our clothes now. And then I'm going to touch you all over your body. And if you have something you want to see me in while that happens I'm totally up for it.\"\n\nShe kissed me hard. \"Okay Blue. Just know if you laugh at me I'm going to tickle the shit out of you though.\"\n\n\"I promise I won't.\"\n\nShe went over to her stuff and pulled out a small bag. Very small. \"So, uh, this...\"\n\n\"No, no, don't tell me!\" I said and took it out of her hand. \"I'll be back in a minute.\" I kissed her again and went into the bathroom. As I closed the door Jo was sitting down on the edge of the bed, looking equal parts embarrassed and hungry.\n\nI couldn't get my clothes off fast enough. Once I was naked I opened the bag and pulled out its contents and smiled. \"Okay Jo, if this is your kink, I'm so here for it,\" I whispered to myself. I took an educated guess and stopped a minute to put my hair into two ponytails on either side of my head and then donned the contents of Jo's bag. I looked into the mirror. My hair was halfway to a Harley Quinn cosplay. Hmm, maybe next year.\n\n\"Hey,\" I whispered as I leaned against the doorframe to the bathroom. Jo was sitting on the edge of the bed and had stripped down to just her boyshorts. She looked up and down my naked body and said \"Hey back\" in a husky voice. As she stood up, I raised one foot and ran the silky bottom of the socks Jo had bought for me along my calf. \"I really like these,\" I said. They were short white socks with a lacy cuff turned over at the ankle and a powder blue silk ribbon woven through the lace around the edges.\n\nShe walked up to me, her eyes on my legs and ran her hands up and down my sides, fingers sliding lightly over my skin. I shivered and said \"How do I look?\"\n\n\"Good\" she said in a croak, then cleared her throat and tried again. \"Really good,\" as she knelt down in front of me. She gently lifted the leg I was using to stroke the sock up and down my calf and placed my knee over her shoulder. I thought I knew what she wanted so, pointing my toes, I started stroking her back with the soft fabric as she started kissing my thigh. I sighed and leaned my head back against the wall with my eyes closed and focused on her tongue trailing back and forth from my knee up towards... she got closer each time, then trailed back away to my knee, stopping to nibble at the skin several times.",
        "\"God... so good.\"\n\nShe used her left hand to settle my thigh more firmly on her shoulder, then surprised me by lifting my other leg off the ground, taking my full weight and resting my right leg over her other shoulder.\n\n\"Eep! Jesus, Jo!\" I cried out as she held me against the wall and buried her tongue in me. I grabbed her hair with both hands, both for balance and to pull her head more firmly into me. \"Oh my god...\" I closed my eyes again and reveled in the sensations she was pouring into my body. I tried to use my feet to rub her back with my socks, but she was too distracting. I kept forgetting to move my legs as my breathing quickened.\n\n\"I didn't think... I could... come in this... position... my god, Jo. Oh my God!\" I squeezed Jo's head between my thighs and started shaking.\n\nAfter an interminable length of time, I felt Jo set my feet on the floor, stand up and slip into my arms. I could taste myself on her lips when she kissed me.\n\nShe slid an arm under mine and then reached under my knees and picked me up to carry me to bed. I didn't have the strength for even a small \"eep\". She peeled off her shorts and laid down next to me, staying up on an elbow and stroking my legs, occasionally reaching down to run her hands over my feet.\n\n\"So, do these satisfy your foot fetish?\" She looked only slightly embarrassed now.\n\n\"I don't really have a foot fetish, believe it or not. I mean I'm not super into feet but I've always just liked the look of girls in ankle socks, I couldn't tell you why. Any kind of socks. But these are like the platonic ideal of them for me I guess.\"\n\n\"I should stop wearing my sandals as often and go for the socks and sneakers then.\" Interest immediately flared in her eyes. \"Oh, I was joking but you'd like that a lot, wouldn't you?\" I snaked an arm around her neck and pulled her down to kiss me.\n\n\"What about you, Blue. Isn't there something you wanted me to wear for you? We kind of skipped over that part when you came out of the bathroom.\"\n\n\"Mine is more something I'd like to see you wear on stage for a show, but if you want to put it on now you'll get no complaints from me. There's a velvet bag in my purse over there.\" She got up to fetch the bag for me while I sat up in bed.\n\n\"Here, sit on the edge here,\" I positioned her on the edge of the bed facing the dresser mirror and knelt behind her. \"Normally I'd have you hold your hair up, but it won't be an issue with you. In fact, it think your short hair makes for a better look with this.\" I opened the bag and took out a dark blue velvet choker with a small silver oval buckle on the front and lightly wrapped it around her neck just holding it in place. \"What do you think?\"\n\n\"Um...\"\n\n\"You don't like it...\" I heard disappointment in my voice.\n\n\"No! That's not it at all! I just... I'm sure you've noticed that I don't wear any jewelry. This might be the most feminine thing I've ever had on my body. It looks... sexy. I'm not sure I could wear it for a show though. It feels like something I should only wear on a hot date. Or in bed. I think if I wore this for a show I'd be feeling like I was performing in my underwear or something.\" I had been fastening it around her neck as she spoke.\n\n\"Well,\" I said, coming around and kneeling on the floor in front of her, \"in my mind you're wearing this on stage, no hat though. Just your hair spiked up, with your Captain Marvel shirt, rocking out while I stand out in the audience in front of you imagining you wearing nothing but my choker.\" She groaned and I pushed her back to rest on her elbows looking down at me. \"But I'm also perfectly content to have you wear it while I look up at you watching me do this.\" I ran my tongue between her lips and she gasped.\n\n\"Fuck, when we met I knew you were hot, Blue. But I had no idea you were going to be this fucking sexy.\"\n\n\"I try hard Jo,\" I said, and buried my head between her thighs.\n\n\"Fuck!\" She cried out, again.\n\nJO\n\nJo was surprised to be awakened by the alarm on a phone going off on the nightstand next to them. Blue reached over her, pressed the snooze button, turned her phone face down, and then pulled Jo tightly against her and mumbled, \"Five more minutes.\"\n\nShe reached out and picked up her running watch. Eight AM. She looked over at her shoes in the corner, then remembered Oh right, Blue wants to swim this morning. She hated to admit to herself she was nervous. She couldn't tell if it was just because she'd never swam for distance before, or because she was afraid of not being the best or toughest at something. She was somehow certain that Blue and Sara were going to swim her ragged.\n\nEasing out from under Blue's arm, she went into the bathroom. While she was brushing her teeth, Little Voice wished her good morning in his own special way. \"Collins, what kind of bullshit was that last night? Fuck her all you want, but you've gotta stop running your mouth about mom and shit. You know every time you let her in like that it's going to be that much harder to kick her to the curb when you have to leave.\"\n\nShe stopped brushing and stared into the mirror. \"Can't I just enjoy being with someone for a while?\" she whispered.\n\n\"You know you always turn it to shit Collins. It'll be less of a mess if you'd just...\"\n\n\"What'd you say, babe?\" Blue said from behind her as she slid her arms around Jo and kissed her neck.\n\n\"Just trying to psyche myself up for swimming.\"\n\nBlue laughed and smacked Jo on the butt. \"Don't worry, I'm sure you'll do better at my sport than I did at running.\"\n\nThey got to the beach a little after nine, Sara, Jo and Blue dumping their sandals and towels in a pile. Surprisingly Larry had joined them.\n\n\"Oh, the black guy can swim, what a shocker. That's so racist of you ladies,\" he joked.\n\n\"No, I just can't believe you dragged yourself away from Pikachu,\" Jo said.\n\n\"That lightning mouse and me have something very special going on. Don't tell Suzanne though. I'm worried she'll try and throw down with Pika and that's a fight with no winners.\"\n\nBlue looked down the beach as they waded into the water. The surf was really light, just some low rolling waves that were breaking a foot or two, in close to the shore.\n\n\"So, I think we should just go to that pier down there and back today. Remember this lifeguard stand here is where we left our stuff.\"\n\n\"Seriously? That's like two miles!\"\n\n\"It's not even a mile, we'll do less than two to get there and back. And we'll take it slow. I recommend a nice easy backstroke since none of us have goggles.\"\n\nBlue led them out just past the sandbar, so they could easily get back into standing depth if they needed to and they started off as a group. Jo was next to Blue and tried to copy her easy, looping backstroke. \"Doing good Jo!\" Blue said. Larry was moving out in front quickly due to his long arms. \"Hey Larry, you're going to burn out and I'm gonna catch you if you don't pace yourself,\" she yelled ahead to him.\n\n\"Eat my waves Jill!\"\n\nThey stroked their way down the beach. By the time they reached the pier and turned back, Jo's shoulders were burning. Blue looked completely comfortable, lazily pacing Jo and Sara. Jo had rolled over a couple of times to see how far they had left and saw Larry was a good fifty yards out in front of them.\n\nJo was breathing heavy. This was a totally different burn than running. She stopped and started treading water, and Blue stopped with her. \"Ok Jo?\"\n\n\"Yeah, I think I'm done though. My shoulder is bothering me from where I wrenched it in OC.\"\n\n\"Oh man, I forgot about that. Sorry, yeah you should go in and just walk along beside us on the beach. That'll let me kick it out the last half mile anyway,\" she said, grinning.\n\nJo laughed, \"Tell you what, you run down Larry and beat him and I'll buy you dinner anywhere you want tonight.\"\n\nBlue's eyes lit up. \"You're on! See you back at the towels.\" She rolled over and started a powerful freestyle crawl and seemed to shoot away from Jo. By the time Jo walked out onto the beach, Blue had caught back up to Sara, who yelled \"Hey!\" as Blue passed her. Sara turned over and started a crawl herself, trying to keep up. Jo walked along the beach following Blue's progress. She was catching up to Larry quickly, but they were approaching the lifeguard stand where they'd left their stuff. Larry was still on his back and saw Blue coming. He didn't turn over into a crawl, but he increased his strokes, trying to stay ahead of Blue. She was slowly closing on him.\n\nGod damn, look at her go, Jo thought. I thought yesterday was cute when she tried to run with me, but... she's a damn athlete. She must have done this in high school or college or something. Jo started grinning as she walked the shoreline abreast of the three swimmers. Larry was huffing and puffing and his strokes were starting to lag. Blue's stroke was only increasing in strength, and she was only turning her head to breathe every two or three strokes. Sara wasn't far behind Blue and Larry either. Watching them was... it was almost exciting, like a real race.\n\nJo trotted ahead and stationed herself in line with the lifeguard stand, knee deep in the surf and watched as they approached. It wasn't close. Blue and Sara both caught up to Larry and passed him with a hundred yards to go. The race was no longer between Larry and Blue, it was between Blue and Sara. Blue had a body's length edge, and maintained it through the line out from the lifeguard stand that Jo had drawn in her mind. The girls swam ten yards or so past, until during a breath Blue saw they had passed Jo on the beach and she pulled up and started letting the surf push her into shore. She and Sara were both breathing hard and high-fived each other when their feet touched the sand again.\n\n\"I'd have beaten you if I'd seen you coming,\" Sara huffed.\n\nLarry dragged himself out of the water behind them, gasping. \"First pull-ups and now swimming. Screw this noise, we're playing basketball next time. Jesus, I think I'm gonna barf.\"\n\n~~ En Route to the Outer Banks, North Carolina ~~\n\nJO\n\nJo's first big fuck-up happened that afternoon.\n\nIt was supposed to be less than two hours from Virginia Beach to Kill Devil Hills, North Carolina. Less than thirty miles out from Virginia Beach, Jack was sitting in the driver's seat during hour three, drumming his fingers on the wheel, staring at the gridlock ahead of them.\n\n\"Waze says there's a big wreck about five miles ahead and there's no way to get off before then,\" he'd called back to everyone an hour earlier.\n\nSteve was sitting up front with Jack, messing around with Jo's mandolin, while Larry, Suzanne and Sara were playing cards at the table. Jo was reading a book on the couch, while Blue was tucked into the corner of the lounger with her sketchbook, making little motions with her pencil. Jo noticed she held her tongue in the corner of her mouth while she drew. She'd also worn sneakers today, and as soon as Jo had sat down, Blue had kicked off her shoes and started slowly rubbing Jo's leg below her shorts with her socks while she sketched in her book.\n\nI did tell her my weakness, this is on me she thought. She had read the same chapter three times now and still had no idea what it was about.\n\nBlue got up and went back to the bathroom, after giving Jo an extra playful poke in the leg with her toe. After a few minutes, Jo looked over at Blue's sketchbook laying on the couch. Curiosity got the best of her and she picked it up and opened the cover. Whoa. She turned the page. This is...\n\nSara looked up from the cards and noticed what Jo had in her hands, \"Uh, hey Jo, I think\u2014\"\n\n\"What the hell are you doing?!\" Blue yelled from the hallway as everyone jumped. She stepped forward and snatched the book out of Jo's hands.\n\n\"I, I\u2014\" Jo stammered.\n\n\"You don't freaking look at something like this without asking Jo! You might as well pull out my diary and start reading it to everyone! Jesus!\" She stormed back into the bedroom and slammed the door. Jo had seen Blue adamant; she'd seen her determined. This was... pissed.\n\nShe looked around at everyone staring at her. \"Uh, Johns, how bad did I just fuck up?\"\n\n\"Not gonna lie, pretty bad Jo,\" Sara said.\n\n\"O-o-o-kay. Well...\" She stood up and moved towards the back.\n\n\"I'm not sure that would be my move right now,\" said Sara.\n\nJo looked at Suzanne, who shrugged. \"Sara knows her better than me. And you're not going to find any flowers or chocolates out here in this traffic jam, so I don't know what to tell you, Jo.\"\n\nJo took a deep breath and headed towards the bunk hallway.\n\n\"Go with God, little rabbit,\" Suzanne called after her.\n\nJo tentatively rapped on the bedroom door. \"Uh, Blue, can I come in?\" No answer. She rapped again, and then slowly opened the door. Blue was sitting on the bed staring out the back window. Her sketchbook was beside her and she had a wadded-up piece of paper in her hands.\n\n\"Uh, hey, listen...\"\n\n\"Jesus, Jo. You don't ever do that. Do you know what I draw in here? It's like... the thoughts in my head? What I'm thinking? I don't want people to see it unless I choose to share it with them.\"\n\n\"I see that now. I had no idea. I'm really, really sorry Blue.\" Jo shut the door and sat down next to her.\n\nBlue sniffed and rubbed one eye with the fist that was holding the wad of paper.\n\n\"Did you tear that out just now?\"\n\n\"Do you think it's any of your business if I did?\" Blue asked. She still hadn't turned to look at Jo.\n\n\"No, for sure it's not my business. Sorry. I just...\" she sighed. \"Blue, I really didn't know.\"\n\nBlue turned finally and snapped. \"What did you see? How far did you get before I stopped you?\"\n\n\"Just the first two pages, that's all. And I thought it was\u2014\"\n\nBlue turned back away from her. \"What you thought of my art is so far away from what I need to hear right now.\"\n\n\"Okay.\" They sat in silence for a while. \"What do you need to hear? 'Cause I'm really shitty at this and I don't know what I'm supposed to do.\" Blue looked at her. \"I mean it, I'm not pleading ignorance to get out of trouble. In every other 'relationship' I've ever been in, when I fucked up like this I just walked away. I've never tried to fix something like this. What do I do? Help me? Please?\"\n\nBlue's face softened a little and she glanced over. \"It's... fine. It's fine. I'm just really embarrassed.\"\n\n\"What? Why, I did the bad thing, why are you embarrassed?\"\n\nShe looked away once more. \"Think about how you imagined me. In your mind. Your thoughts, that you have just for yourself. Like, before we started to get close. Maybe from the first night, you saw me and thought 'she looks hot' or 'I'd like to get into her pants' or 'this is what I'd like to do to her' or 'this is what she'd be like if we were dating'. Now take your mental image and put it on a piece of paper. Now, I'm going to pick that up and look at it without your permission.\" She looked back at Jo. \"How do you feel about that?\"\n\n\"Pretty uncomfortable.\"\n\n\"Right, so... here we are.\"\n\n\"But you didn't picture me naked or anything. At least not in the pictures I saw.\"\n\n\"But it wasn't you. It was an idea of you, and my idea of you isn't who you are.\"\n\n\"Blue, just because I don't sing doesn't mean I can't appreciate your imagination about me. I know you just said you didn't want to hear this, but that's the coolest picture of me I've ever seen. If I saw it in a gallery I'd buy it for my dad.\"\n\nShe looked over at Jo again and sniffed, wiping her nose with the back of her hand. \"I knew I wanted to draw this when we were in Cape May.\" She pulled the sketchbook to her and flipped open the cover. \"I started it before you told me why you don't sing.\"\n\nThe pencil sketch was based on one of the many photos Blue had taken at the Cape May music festival. Jo, shown from the waist up, playing her guitar, a microphone in front of her. She had her hand down low on the neck near the body of the guitar. In the drawing, she still had her aviator sunglasses on, but wasn't wearing her usual baseball cap. Her hair was tousled in the wind blowing the whitecaps on the ocean behind her. She was leaning back slightly, with her mouth open, obviously belting out some song into the mic.\n\n\"That's... that's really amazing to me that you saw me like that Blue. And the talent it took to draw that... If you're embarrassed about that, it shouldn't be because of me, because I'm so flattered that you see me like that.\"\n\nBlue sniffed again. \"I need a Kleenex.\" Jo looked around and found a box on the side table of the bed and handed her one.\n\n\"I'm really sorry I violated you like that. It won't happen again. I mean, I hope you'll choose to show me some more sometime, because this is incredible. But only when you want to, okay?\"\n\nBlue was motionless for a minute, then she turned and threw her arms around Jo's neck. Jo hugged her tightly. \"I'm sorry I fucked up,\" she whispered.\n\nBlue hiccupped and sniffed again. \"It's ok Jo. I'm pretty sure this was my version of kicking Jack off his stool. I overreacted. I was afraid you'd be mad at me for drawing you.\"\n\n\"No way, Blue. This is killer. I love it.\" Blue pulled back and looked at Jo, then kissed her. Blue's cheeks were wet, and after she pulled back, Jo pulled another tissue from the box and wiped her face. \"I'm sorry I upset you to the point where you had to rip that one out and wad it up though.\" Blue pulled the ball of paper into her lap and looked down at it. \"Is... is that that second page?\"\n\n\"Yeah. That's the one that really embarrassed me.\"\n\nJo grinned at her. \"Hey, that's some hot shit there. In a different time and place, me and Spider-Gwen, we'd make a hell of a team, right?\"\n\nBlue laughed, and wiped her nose again then uncrumpled the paper and smoothed it out. It was a comic style drawing of Captain Marvel flying through space, looking down and blasting something off the page. Only it wasn't Carol Danvers. It was unmistakably Jo.\n\n\"I was totally fan-girling with this one. Knowing you'd probably seen this is what really set me off.\"\n\n\"This can't be any more embarrassing than me telling you about my sock thing, can it?\"\n\nBlue laughed, then hugged Jo again. Then she leaned back and stretched out her leg, running her foot along the side of Jo's thigh.\n\n\"Jo?\"\n\n\"Yeah?\"\n\n\"Lock the door.\"\n\nTo be continued..."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "gay romance",
        "heartbreak",
        "lesbian",
        "lesbian romance",
        "romance",
        "romantic",
        "oral",
        "young",
        "erotic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hard-landing-ch-04"
}