{
    "title": "A New Way of Seeing Things Pt. 02 Ch. 21",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nChristmas and New Year's came and went; the holidays really no different than years past other than Gwen wondering if Natalie and her brother might be playing another game nobody knew they were playing at Christmas dinner. The small gift Natalie slipped into Gwen's purse during dinner at the Currans was also new, and. she didn't find it until the morning after, wisely deciding to unwrap it in private to discover a larger version of the spreader currently in her toiletries bag. A bottle of lubrication was included, and a note as well:\n\nNext up on the size chart! Give it a try. Let me know if you need help.\n\nLove, N\n\nThe gift was hurriedly stashed with its little brother, The Lady huffing about the impropriety of a Christmas gift like that, the Slut reviewing the calendar for a quiet time when it might be more closely examined. \n\nThe guilt and embarrassment Gwen still felt whenever she talked with Alison and Jason had begun to fade somewhat, the couple evidently none the wiser to the invasion of their privacy. Still, her mother would occasionally have snippets of what she had seen slip in to her thoughts uninvited as they visited, the Lady aghast at the memory of her naked son-in-law and what he had done to her daughter. The Slut took these moments to remind her counterpart that Alison had seemed to be a very willing partner...\n\nThere had been no doubt in Gwen's mind that Cricket was to be included in their holiday plans as well, but she had been pleased to hear the young woman would be spending the holiday week with her mother, willing to trade time spent listening to advice on how to land the right man for time spent with Marvin. \n\nShe waited a couple of days after Cricket was due to return home before calling, not wishing to pester the girl, and hoping she would call first. When no call came, she broke down and dialed. \n\n\"Did you have a nice Christmas?\" Gwen asked after pleasantries had been exchanged. \n\n\"Yeah.\" The tone made it sound like anything but nice. \n\n\"Uh-oh, that doesn't sound good.\"\n\n\"No, not good.\" \n\n\"Oh, dear. Want to talk about it?\"\n\n\"No, that's alright.\" \n\nGwen could sense her reply was not the truth. \"Well, why don't you come over to ride this weekend to take your mind off of whatever it is? I know Dancer isn't Marvin, but he really seems to respond to you. Maybe you could come out Saturday morning and spend the weekend?\"\n\n\"I...I...\" the woman on the other end of the line broke down, sobbing. \n\n\"Cricket, good heavens, what's the matter?\"\n\n\"Nothing, nothing,\" she said, trying to pull herself together. \"I, uh, my mother and, and husband number four are moving to Los Angeles.\"\n\n\"Oh, I see,\" Gwen said softly, \"I'm sorry to hear that. But at least they'll just be a flight or two away? You can visit them out there, right?\"\n\n\"It's not that,\" Cricket answered, breaking into tears again. \"It's...they don't want to pay for Marvin's boarding fees any more. They want me to sell him!\"\n\n\"Oh Cricket, that's terrible! What\u2014\"\n\n\"I told her they could keep track of every penny they spend and I'll pay them back when I can, but they want to make a fresh start out there and are getting rid of everything out here. Even my horse,\" she sobbed. \"My mother said I need to get serious about my life, and that I should concentrate on finding a husband and this might be the wakeup call I need!\"\n\nSomething in Gwen broke. She could feel the young woman's agony over the prospect of losing her trusted companion; she wasn't going to let it happen. Please forgive me Tim, I'll make it up to you, she thought before interrupting. \"Cricket, I'll do it.\"\n\nThe crying woman stopped short, confused. \"Huh? Do what? What do you mean?\" \n\n\"I'll pay for Marvin's room and board and you can pay me back later.\" \n\n\"Oh, uh, Gwen that's nice of you-really, really nice of you-but I can't do that. You've already given me too much.\"\n\n\"I'm not giving you anything. Like you said, I'll keep track and you'll pay me back.\"\n\n\"But it gets so expensive, and I don't know how long it will take to pay you...maybe my mother's right. I should just get serious about my life, find a man to take care of me and settle down.\"\n\n\"Stop that,\" Gwen insisted, plowing ahead. \"You're not the kind that needs someone to take care of them. Look, we can make this cheaper for you by bringing him up here. We've got empty stalls, you can use one free of charge, so all you would have to pay for is feed and vet care, when you can.\"\n\n\"Gwen, that's so incredibly nice of you, but I can't. Maybe my mother's right and I should just be a grown up about this. It's not fair to Marvin anyways, only seeing me every once in a while.\"\n\n\"You are already very grown up and you'll settle down when it's right for you. And if Marvin's up here, closer to you, I'm willing to bet he'll see you a lot more.\"\n\nThere was a silence save for some sniffling, and Gwen could sense Cricket's resolve weakening. \"But how would we get him here? It would be so expensive to trailer him up.\"\n\n\"We've got a couple of trailers here. We hitch up the smaller one to my truck and drive down Saturday, load him up and bring him back Sunday.\" The Lady was dismayed at how quickly she seemed to be thinking on the fly and making decisions, scolding her for her recklessness.\n\n\"I don't know...\" \n\nGwen pushed forward. \"We'll go this weekend.\" \n\n\"I'll pay you back every dime Gwen, I promise, every dime...don't you wasn't ask Tim first?\"\n\n\"I'll talk it over with him tonight. He'll be fine. So be here early Saturday morning. I'm guessing about an eight hour drive.\"\n\nThe young woman sniffled, sensing the way out that was being offered, her cautious nature making her wonder if there was a catch. Of course there's a catch, her cynical side sneered. But what's the alternative? Sell him? \"This is a loan, not a gift, right? You'll keep track of everything I owe you?\"\n\n\"Every dime. You call and tell them to get the paperwork ready because he's leaving on Sunday.\" \n\n***\n\nTim rolled his eyes and shook his head at the news, smiling his acceptance good-naturedly and asking her to consult with him before accepting any more applicants at the Nelson Acres for Wayward Horses. His understanding was amply rewarded at bedtime.\n\nCricket arrived even earlier than they had agreed Saturday morning, her nerves and excitement obvious to the Nelsons as she stowed her small duffel bag behind the seat of the truck. Tim kissed his wife goodbye with an admonishment to \"be careful\", and they were off. \n\nThe young woman chirped excitedly as they drove, recounting stories of what made Marvin such a wonderful horse, looking forward to having him in her life again. Gwen let her talk, smiling and nodding patiently at the retelling of Cricket's tales, happy to see her so happy. \n\nEventually she lapsed into silence, drawing her legs up against her and hugging them as she stared at the road, obviously deep in thought. \n\nGwen glanced at her before returning her attention to the road. \"Everything alright?\"\n\n\"Oh, sorry. Yes.\" She maintained her drawn-in pose for several miles before speaking again. \"Why me?\"\n\nGwen smiled. \"Why you what?\" \n\nThe young woman seemed flustered. She hesitated again, looking at the driver, then back towards the highway, then back to her. \"Why are you being so nice to me? I'm sorry\u2014that was rude\u2014I have no right to ask that\u2014I'm sorry. I'm just not good around people. One of my school progress reports said I was 'socially inept'. I don't think I was supposed to see that.\"\n\nThe older woman laughed gently. \"You're fine. I appreciate bluntness. And I guess it's my turn to be sorry. I don't have much experience in this whole 'friend' thing. I'm sorry if I'm overdoing it.\"\n\n\"It's not that,\" Cricket said uncomfortably. \"It's just that nobody's ever been this nice to me. My mother thinks you want something from me. I saw how she got two of her husbands so I guess she's got some experience in making trades. I'm sorry, I just don't have a lot of experience in the whole friends thing either, and I'm worried this is all too good to be true. I know what to expect with horses. People, not so much.\" The young woman continued to stare ahead, hugging her legs. \n\n\"It's alright. I can be pretty cynical about people, too. I was even more cynical until last summer when\u2014well, when I made a friend who showed me that it's alright to occasionally trust other people and let them see your human side. I guess you could say she showed me a new way of seeing things. \n\nWhen I met you at the photo studio and you mentioned how much you missed riding, I got brave and decided a fellow horse lover couldn't be all bad. I also knew how much I would miss riding if I couldn't, so I thought you might like a chance to ride, and then as we got to know each other I found out how nice a person you really are. And then it just seemed like you could use some help from someone who was in a position to help. I'm sorry if I overdid it. Like I said, I'm still learning this whole friend thing.\" \n\n\"You've been a godsend,\" Cricket said quietly. \"I don't know what I would have done without you. I still can't believe anybody would ever do what you did for a stranger. I'm pretty sure I wouldn't have. I have a really hard time trusting people, especially after Daniel.\" \n\n\"You're tough and you're smart, so being cynical is probably part of your survival skills. I get that\u2014I always thought it was me\u2014well, me and Tim\u2014against the world. But I'm starting to understand that sometimes exposing just a little vulnerability can be a really scary and worthwhile thing to do. I think it's one of things my friend has been teaching me without me even knowing it. She's sneaky that way. I understand if you don't trust me, though.\"\n\n\"I do trust you, more than anybody else I know, and you're right, it's really scary. So, thank you?\"\n\n\"You're welcome.\"\n\nThe young woman seemed to relax a bit, unfolding her limbs, not so deep in thought. Still, only the hum of the tires filled the cab of the truck for quite some time. \n\n\"And thank you again for the Christmas gifts, especially the socks and underwear,\" the young woman said quietly as she looked down at her hands in her lap.\n\n\"Sorry that's such a boring present, but I figured you might need a fresh supply given your current financial condition.\" \n\n\"You were right about that,\" Cricket laughed quietly. \"I was getting to the point where I was considering going commando a couple of days a week to save on wear and tear on my remaining pairs.\"\n\n\"Commando?\"\n\nThe young woman blushed. \"Oh, uh, you know, no underwear.\"\n\nGwen smiled. \"Ahh. Commando.\" \n\nCricket spoke again after a couple of moments. \"I, umm, also want to really thank you for the neck massager...and the other things. They really help with, you know, stress relief.\" \n\nThe older woman grinned. \"Good! I'm glad you're using them. I was worried they might have been offensive.\"\n\n\"No\u2014oh God, no! Like I said, it was the most unusual gift I've ever gotten\u2014even stranger than the financial calculator Daniel gave me on our wedding night\u2014but yours are a lot more useful! They're making me wonder if I ever really need a man for...that.\" \n\nGwen smiled. \"I think you'll find having the right man\u2014or a woman, if that's your thing\u2014for that is even better. The toys are just a nice way to complement that when you're ready for it.\" \n\n\"Wait\u2014you don't think I might be a Lesbian, do you?\" Cricket asked quickly. \"I mean, I'm not\u2014I like guys, I'm just not ready to deal with one right now!\"\n\n\"Sorry-sorry,\" Gwen replied. \"I didn't mean to imply that at all. My turn to not be good with people, I guess. I was just saying that if you were inclined that way, that would be alright, too. Just leave yourself open to the possibility that a man or a woman may come into your life someday. There's nothing wrong with either, or both. I can honestly say that Tim is the best thing that ever happened to me, but women can have something to offer, too.\" She saw the sign for a rest stop up ahead and pulled over to exit. \"And now, young lady, if the parking lot is empty enough, you are going to get your first lesson in how to tow and back up a horse trailer.\"\n\n***\n\nGwen was satisfied enough with her student's progress that she insisted Cricket take the next driving shift despite her protestations. The two women took their time going down, not in any hurry to get there as the plan was to a good night's sleep before heading to the stables early the next morning and returning home. The drivers switched off every couple of hours, their occasional conversation lapsing into more mundane topics such as the roadside farms and attractions they were passing, Gwen thankful her passenger had not seemed to taken slight to the unintended inference as to her sexuality. She was at the wheel when she pulled it into the motel's parking lot early that evening. \n\nGwen hopped out of the cab and looked at her friend. \"Coming in?\"\n\n\"I didn't book a room. I thought I'd save some money and sleep in the truck tonight. Would it be alright if I use your bathroom?\"\n\n\"You are not sleeping in the truck! I wouldn't have expected you to get a room\u2014I booked one with twin queens, if you don't mind sharing.\" \n\nCricket's eyes brightened at the prospect of a soft bed. \"Alright, but only if you put half the room on my tab.\"\n\n\"I have to pay for it whether you're in it or not,\" Gwen pointed out, tactfully ignoring why she needed a room in south Florida in the first place. \"C'mon. Grab your bag.\" They freshened up before taking a half-mile walk down the road to a chain restaurant, Gwen refusing the young woman's offer to pay for dinner before agreeing to \"add her half to the boarding bill.\" The older woman did insist on paying for a bottle of wine they drank to celebrate a horse and rider's reunion, and Cricket was in high spirits as they started their walk back. \n\nThe alcohol made Cricket bold enough to ask the question she had been turning over in her head since the first rest stop. \"Gwen,\" she finally said slowly, \"you can tell me it's none of my business, and I'm sure it's not, but...you make it sound like...back in the truck this morning, almost like, you've had some experience with, uhh, well, somebody other than Tim?\" \n\nGwen was quiet for a moment, finally asking slowly, \"what is it you want to know?\" \n\nCricket stared down at the sidewalk. \"Well, I got the impression Tim was the only man you've ever been with, right?\"\n\n\"Right.\"\n\n\"So, it kind of sounded like in the truck you know what it's like to be with a woman?\"\n\nStonewall, shut up, lie, don't you dare say a word, the Lady hissed. The Slut just sat back and smiled, feeling the effect of the drink. \"Cricket, if I tell you something, you have to promise to never say a word to anybody. Can you do that?\"\n\nThe young woman continued to walk as she twisted her upper body to face her companion. \"What? Yes, of course!\"\n\n\"Are you sure you want to know? Once you hear it, you can't unhear it.\"\n\n\"I'm sure\u2014if you really want to tell me. If you don't, I understand.\"\n\nGwen again hesitated. Last chance for secrecy. \"I've been with two women.\"\n\nThe young woman's face reflected the shock even though she had guessed what was coming. \"Like, in a relationship? A total relationship?\"\n\nGwen could guess what she meant by 'total'. \"Not exactly. The first one was when I was young and na\u00efve, and was purely physical.\" Close enough, the Slut agreed. \"\n\n\"And what about the second one?\" \n\n\"It's hard to describe...not a relationship like what I have with Tim...more like a friendship that sometimes has a physical side to it.\"\n\nGwen had the young woman's undivided attention. \"And were these before you met Tim?\"\n\n\"The first one was, yes. She and I stopped...doing that...after Tim and I met. The second one...well, the second one started last summer.\" \n\nCricket grabbed her arm and stopped them both. \"Oh my God! Wait! Gwen, are you cheating on Tim?\"\n\n\"No! Tim knows about it, and he's alright with it,\" she said slowly, trying to show more calm than she felt. \"He knows I love him, and this friend\u2014well, we're just friends who like to give each other physical as well as emotional comfort.\" She shrugged and smiled apologetically. \n\nCricket's hand still grasped Gwen's arm, her face still showing the shock of the revelation. \"So, you two are friends with benefits?\"\n\n\"I've never heard it put that way, but yes, I guess that's one way of putting it.\" \n\n\"I used to hear some of the girls I rode with referring to some of the guys they hung around with as friends with benefits, and a couple of them would throw out hints that some of the other girls had a friends with benefits thing going on with girls,\" Cricket explained. \"And the second guy I went to bed with asked me if I wanted to be his fuckbuddy\u2014sorry, not a very nice word- after he finished. I figured that's what he meant and told him I'd think about it, but I never talked to him again.\"\n\n\"I suppose that's another term for it, but I like friends with benefits more, or better yet, just friends.\"\n\nThe women started walking again. \"Fair enough. And Tim really does know about this?\"\n\n\"He does,\" Gwen insisted, \"and my friend's husband does, too.\"\n\n\"That is so wild. Men are impossible to figure out. Does your friend have a name?\" \n\nGwen smiled. \"She does, but I'll respect her privacy and just call her my friend for now, if that's alright.\" \n\n\"I understand.\"\n\nThey walked in silence for several moments, each lost in their thoughts, the hotel growing larger in the deepening dusk. \"Now that you know, do you still feel comfortable sharing a room? I can see if they have another one just for you if you like.\"\n\n\"No, I'm fine,\" Cricket said with a smile. \"I am not running up my bill any more than I absolutely have to. I'm going to pay you back as quickly as possible, you'll see.\"\n\nDespite her bravado, the young woman seemed nervous as they entered the room, unsure what might or should happen next. \"Pick whichever bed you want,\" Gwen said quietly as she took her sleepwear from her bag and entered the bathroom. She left her bra on, slipping on a long t-shirt over it; thankful she had decided to pack a pair of gym shorts. She stepped back into the room to see that Cricket had also changed in her absence, now similarly dressed in a t-shirt and shorts. The young woman sat against the headboard of the bed farthest from the bathroom, her legs drawn up and hugged against her chest as they had been in the truck that morning. \n\nGwen panicked a bit, regretting what she had told her young friend. \"I'm sorry Cricket. I didn't mean to frighten you. Really, I can see if they have another room for you\u2014I'll pay for it\u2014\"\n\n\"No, I really want to stay here,\" the young woman quickly replied, \"if that's okay. But, would you mind if I ask you some more questions about you and your friend?\" \n\n\"Of course,\" Gwen replied, primly sitting on the edge of the other mattress. \"Go ahead.\"\n\n\"Tell me if I get too personal and I'll stop, I promise.\" Cricket hesitated, gathering her words, looking at the bedspread beneath her feet. \"Like, whose idea was it to be friends with benefits? Did one of you just say, hey you wanna...you know?\" The young woman blushed an even deeper shade of crimson. \n\n\"No, not quite like that. She told me about how she and her friends in college were, uhh, friends with benefits, and that she still was with another friend of hers. So I guess you can say it was her idea, but we never really talked about it in specifics. It just kind of happened, I guess.\"",
        "\"How, exactly? Sorry again, too personal.\"\n\nGwen smiled. \"I trusted you enough to tell you in the first place, so I trust you with the details. This will sound so silly. She got me to try skinny-dipping\u2014despite what you may have been led to believe, I haven't always done that\u2014and she noticed I wasn't trimmed\u2014down there.\" She glanced down to her crotch meaningfully before continuing. \"She offered to trim it up for me, I thought it would be polite to return the favor, and then we started giving each other massages, that kind thing,\" She shrugged. \n\n\"Oh.\" Cricket looked back down at her feet, again deep in thought, her cheeks flushed. Gwen began to worry that she had not given the hoped-for answers to the young woman's questions when she spoke. \"If you want,\" Cricket began, intently studying her feet, \"I can give you a trim. I don't have any experience with that kind,\" she quickly confessed, \"but I used to trim manes and tails in the barn all the time!\" \n\nGwen smiled, trying to clarify what she thought was really being offered and form an answer. \"Not that I was looking, but you seemed like you were pretty well trimmed that day we were in the pool. So that's just natural?\"\n\nCricket nodded. \"Afraid so. It just never has come in fully, I guess. I'd sometimes have to shower with other girls at riding camp and I'd see how much they had down there compared to me and I'd think there was something wrong with me.\" \n\n\"Every woman is different, I'm sure,\" Gwen reassured her. \"As for me, thank you, but I'm pretty tidy down there right now.\"\n\n\"Oh. Okay. I'm sorry, I really shouldn't have said anything.\" The Slut could recognize disappointment and embarrassment on the younger woman's face; the Lady saw remorse over offering such a personal and deviant service. \n\nGwen sided with the Slut's take. \"Driving that truck for long distances always gives me sore shoulders,\" she offered. \"Maybe you could rub my shoulders for a little bit?\"\n\nCricket's eyes brightened. \"I can do that, if you want,\" she replied, doing her best not to seem eager. \"But I haven't done that before, either. You might have to teach me how.\"\n\n\"I can do that,\" Gwen said with a smile as she patted the bed beside her. \"Come sit next to me and I'll demonstrate on you.\" \n\nThe young woman hurried over to her side, sitting a respectful distance away. Gwen gently turned her slightly to face away and began to gently work her fingers into the sides of the t-shirt covered shoulders. Cricket tensed at the first touch, then relaxed, letting the woman behind her work. \"I had a couple of riding instructors who would do this when I was competing,\" she said softly, \"but they pressed their thumbs and fingers into me really hard, almost until it hurt. You're much more gentle than them.\"  \n\n\"I had those kinds of massages from my instructors, too,\" Gwen said softly, remembering Miss Ritter's efforts . \"More therapeutic than relaxing. Let me know if you want me to press harder.\"\n\n\"No, this is nice. Would it be easier if, umm, my shirt wasn't in the way? That way it doesn't rub against my skin?\"\n\n\"If you're comfortable with that.\"\n\nThe young woman's response was to grab the bottom of the shirt and pull it up over her head, revealing the pale skin of a back and shoulders unencumbered by a bra. Gwen resumed her gentle kneading and stroking, working farther down on the shoulder blades and spine. Cricket shivered at the touch. \"This is wonderful. Thank you.\"\n\n\"You're welcome,\" Gwen murmured, continuing to work, enjoying the feel of the young woman's soft skin.\n\nCricket sighed contentedly and turned back, not bothering to cover her pert breasts. \"That feels wonderful,\" she repeated, \"but my idea was to do something nice for you for a change. Would you like me to rub your shoulders now? I think I have enough of an idea not to be dangerous.\"\n\nGwen smiled and turned her back to the topless woman. \"I'd like that.\"\n\n\"Tell me if I'm doing it wrong, or I need to go harder or softer, okay?\" the nervous woman asked as her hands tentatively landed on the older woman's shoulders. Thumbs and fingers gently pressed into the muscle beneath and began to work. \n\n\"You're doing fine. Would it be easier for you if I took my shirt off?\"\n\n\"Umm, okay, if you don't mind, I mean...\" \n\nGwen answered by pulling the top over her head. She hesitated a moment, then the bra joined the shirt next to her. Delicate fingers made contact with bare skin, recoiling a bit as if being burned, then rubbing and stroking just as she had been shown. Cricket beamed with pride when she heard the genuine sigh of pleasure.\n\nShe continued to work for some time, admitting her own pleasure in the feel of the older woman's flesh, muscle and bone, smoothing and pressing all the way down nearly to the waistband of her shorts. \"Did you and your friend, umm, not do each other's legs?\"\n\n\"No, we did,\" Gwen replied without turning around. \"Would you like me to show you how?\"\n\n\"If you don't mind,\" the voice behind her squeaked as the hands retreated.\n\n\"Alright, lie face down on the bed\u2014actually, wait.\" Gwen got to her feet and walked to the bathroom, not bothering to redress. She returned carrying a towel and some lotion from her travel bag. \"Here, lie face down on this,\" she directed, putting the towel on the bedspread. \n\nCricket stood to the side, hesitant. \"I, you know, read somewhere that you don't wear clothes for a massage? Should I take my shorts off? Did you and your friend? Would it freak you out if I did?\"\n\n\"Yes, we did and it no, it wouldn't.\"\n\nThe young woman shed the last of her clothing\u2014she was commando under her shorts, Gwen noted with a smile\u2014and quickly lay on the towel, body stiff as if at attention. The older woman kneeled to her side and reached for the lotion. \"Try and relax,\" she offered. \"If I'm making you more tense then I'm doing it wrong.\"\n\n\"Sorry!\" Cricket apologized, but there was no change in her body's rigidity until Gwen began to work the scented lotion down her shoulders and back. \"Sorry,\" she said again as the hands reached the rise of her buttocks. \"My butt's pretty flabby, probably gross to even touch.\"\n\n\"Stop apologizing,\" Gwen laughed softly. \"Your bottom is beautiful and probably firmer than mine. But if you would rather I stop here, just tell me.\" \n\n\"No, no, you can keep going, if you want.\"\n\nGwen admired the globes as she kneaded them, working deep into the crevice but stopping short for fear of accidental contact with her friend's rosebud. Her thighs were next, her legs parting slightly to allow Gwen more access to their sides, but not enough to reveal the treasure where they joined. She continued down each calf to the feet, every toe getting attention, the toes' owner groaning at the delicious sensations ever since the attention given to her butt. \n\n\"I think I've got it,\" she said, rolling to her side and offering the towel to Gwen. \"May I try?\"\n\nGwen smiled in acknowledgement as she shucked her shorts and panties. The student did a remarkable job of mimicking the teacher, the older woman offering encouragement of \"right there\" or \"that's nice\" when she realized her long-conditioned silence might be mistaken as disapproval. \n\n\"Did you do each other's fronts, too?\" Cricket asked quietly as she finished the last toe. \n\n\"Uh-huh,\" Gwen replied, her head still on the pillow. \n\n\"Could you show me?\"\n\n\"Are you sure?\" Gwen rolled to her side, then to her knees.\n\n\"I think\u2014yes, I'm sure, please. \" She hurried to replace the body on the towel as soon as the spot was open. The young woman lay stiffly at alert, her arms extended and legs spread in a sort of live anatomical display. \n\nGwen flashed back to those times Miss Ritter had \"demonstrated proper form\" on her student and wondered if her own body had been posed so differently then. She had certainly been as nervous then as Cricket appeared now; Gwen had always feared somehow failing the steel-willed Austrian, but for the first time she had to admit that giving up control to her had been intensely arousing as well. The irony of her current situation was not lost on her; and she was determined the student would have a kinder, gentler, more understanding response from the instructor. \"Are you sure you want me to touch you...like my friend did?\"\n\nThe young woman squeezed her eyes shut and nodded vigorously. \"You've already touched me more than Daniel did our entire marriage. I want to find out if I like it with someone I trust.\"\n\n\"Alright, but if you want me to stop at any time, just say so, okay?\"\n\nShe nodded again, now biting her lip like she was awaiting a painful procedure to begin. \"Okay.\"\n\n\"I promise it won't hurt Cricket, try and relax,\" Gwen said, taking her outstretched hand and massaging the palm. She moved on up the arm as the body beneath her relaxed ever so slightly. \"See?\"\n\n\"Sorry, just a little nervous, I guess. I've never done this before.\"\n\nGwen's right hand began to turn slow, lazy circles on the woman's stomach as the other passed her bicep.\n\n\"Should I be doing something too?\" Cricket asked, her eyes now open wide. \n\n\"Do whatever you like, there aren't any rules to this that I'm aware of. But if you want to just lay there and try and enjoy it, that's fine, too.\"\n\nThe young woman closed her eyes and seemed to relax just a little bit more with each passing moment as the hands continued to work, slowly drawing closer to more sensitive areas. One set of fingers gently glided across the skin above her breasts while the other drew closer to the junction of her still-spread legs. Despite her expectation and hope, she flinched as fingers brushed across her erect nipple. \n\n\"Sorry,\" Gwen offered. \"Are they sensitive?\" \n\n\"A little,\" Cricket admitted. \"But it's alright\u2014it felt nice, just kind of a new feeling when it's not your own fingers.\" \n\nGwen smiled and took this as a sign to continue. \"It's so soft and silky,\" she murmured, an obvious reference to the sparse patch of pubic hair her other hand was now beginning to stroke. \"Not stiff and wiry like mine.\" \n\n\"It's just always been that way,\" Cricket said with an apologetic smile. \n\n\"I like it.\" The older woman dropped from her knees to lie on her side, delicately kissing the younger woman's stomach while her hands continued to smooth and stroke. Her lips made a line up towards the base of Cricket's breast. The base of Gwen's palm was now resting on her friend's mons while fingers traced lines dangerously close to her waiting sex. One finger went to the bottom of her thigh and moved a bit to the side, gently dragging up and over the young woman's barely-concealed inner lips.\n\n\"Ohhh...\" Cricket breathed, her hips flicking forward to perhaps drive the digit into her on to her clitoris as it moved. Gwen's lips captured a nipple and she flicked it with her tongue. \"Oh\u2014oh, yessss...\"\n\nCricket's hand found its way to her tormentor's hip without her even realizing it, running up and down the curve to her ribs, fascinated by the smooth lines of the woman's body. The tongue on her breast would tease the nipple deliciously and then paint another part of her tingling flesh before returning. \n\nThe hand between her legs was now rocking forward, the heel of the palm pressing into her clit as a finger would dip, then withdraw and drag through her folds. The finger eventually stayed buried in her, rocking back and forth, the pressure on her button rocking back and forth as well, and then a second finger joined while her nipples continued to be kissed, licked and sucked. \n\n\"Oh my God, Gwen, oh my God\u2014\" she could hear the thunder of her rising orgasm, feel her body tensing and tingling in anticipation. \"Oh-oh-oh-OHHGGGODDDD\"!\n\nGwen thrust her fingers deeply into the young woman's opening, just as a man would when burying his seed and then let her twitch and convulse, pleased to watch the orgasm she had helped create. The sounds of her climax were nice as well, like cheers for a job well done. She returned to her kneeling position after her friend let out a long breath and went limp. \n\nCricket finally opened her eyes. \"Oh my God Gwen, that was incredible, thank you! You're right, it's even better with a person. That was the first one ever I didn't have to give myself.\"\n\n\"You're welcome,\" Gwen said simply, wondering what to do next. It wouldn't be fair to ask her to return the favor, as much as she felt the need. Perhaps getting dressed would be the best way to transition to more traditional sleeping arrangements...\n\n\"So, how does this work?\" Cricket asked shyly. \"Do I do the same thing to you now?\"\n\n\"Oh, you don't have to do that, really,\" Gwen hurriedly replied. You're not obligated. It was just something nice I wanted to do for you. Me getting a little carried away with the whole friend thing again.\" She smiled weakly. \n\n\"And I want to do something nice for you, for once,\" Cricket said with a smile. \"Really! I'm just, uhh, not sure how to, exactly. I mean, you just gave me a really good demonstration, but I've never done it before...\"\n\n\"Are you sure?\" Gwen asked, doubt in her voice. \n\nThe young woman sat up and nodded vigorously. \"Just tell me if I'm doing it wrong and don't get mad, okay?\" \n\n\"You won't do it wrong, and I would never get mad!\" \n\n\"Okay, then.\" The two women looked at each other, unsure what to do next. Cricket finally spoke. \"Shouldn't you lie down first?\"\n\n\"Oh, uh sure.\" Gwen reclined, suddenly self-conscious about the tension her own body might be revealing. \"Just do whatever you like done to yourself. It all feels pretty good.\"\n\nCricket moved to her side and kneeled, admiring the naked body stretched out below her. \"You were the first person who has ever touched me in a way I really liked.\"\n\n\"Men can be hit-or-miss,\" Gwen sympathized, \"I guess because they don't know our bodies as well as we know them. It's what makes doing this with another woman so special.\"\n\nCricket smiled and tentatively placed one hand on Gwen's forearm and another on her stomach. Her movements showed she had been paying attention to the older woman's efforts, her hands mimicking the strokes and caresses that had begun her climb to orgasm.  \n\nGwen knew that she would need to encourage and approve of the young woman's efforts and that Miss Ritter's long-followed demand of silence through the pleasure would have to be foregone. \"That's nice,\" she breathed, and sighed contentedly.\n\n\"Yeah?\" Cricket said hopefully. \"It's alright?\"\n\n\"It's wonderful.\"\n\nEmboldened by the encouragement, Cricket's hands began to follow the same paths up down and Gwen's body as she had felt earlier. Her fingers hesitated before pushing through the tuft of hair on the older woman's mons. \"I don't think it's wiry at all,\" she said softly as her other hand began to turn circles on the lower part of Gwen's breast. \"It's soft and fluffy.\"\n\n\"It doesn't feel so much like a scrub pad now that it's shorter,\" she admitted. \"That part's easy to trim myself. It's the parts I shave that I still need practice on. I miss spots sometimes, and it gets stubbly pretty quickly.\"\n\n\"It feels smooth to me,\" Cricket said, two fingers forming a vee and sliding further down past the tuft on to bare skin, stopping on either side of Gwen's clitoris. Her other hand braved the short climb up the breast beneath it, fingers brushing the erect nipple. \"Are yours sensitive?\"\n\n\"Very. I like being touched there.\" \n\nThe fingers between her legs slid down again, running the gullies between thigh and outer lips as they descended until meeting again on the smooth skin between her openings, the palm they were attached to arching to stay clear of her sex. The fingers slid up and down several times as their owner mustered her courage. The vee was closed as they were drawn up, both fingers lightly dragging up Gwen's sex. Her hips twitched at the sensation. \n\nCricket correctly read Gwen's desire and pushed in on the next pass, one finger tucked behind the other as they reached the end of the furrow, circled the nub at the top and beginning another trip down. Gwen sighed appreciatively, making a conscious effort to let the little \"ah\" that had always been restrained to go free. The young woman shifted position and fingers pushed into Gwen's opening as warm lips circled her nipple. \n\nThe fingers alternated between gentle penetration and exciting her clitoris for the next ten minutes, Gwen delighting in the delicious torture whenever one pleasure was temporarily abandoned for the other. It was Cricket's application of her thumb to the older woman's button while her fingers continued to pump away that brought Gwen to the edge. \n\n\"Cricket, I'm going to...\", she didn't finish the sentence, instead grabbing the hand between her legs and mashing it into her sex before her thighs snapped shut. A soft \"oh!\" escaped her lips, sounding like a scream to the orgasming woman.\n\nHer friend's head was posed above her breast, looking up at her with a nervous smile when she returned to reality. \"Was that alright?\"\n\n\"That was incredible! Thank you! I needed that.\" \n\n\"I'm glad I could give you something for once. It was pretty intense! I could feel your, uhh, vagina spasming!\" Gwen smiled up at her, and Cricket began to look around the room, unsure what to do next. \n\n\"We should probably get some sleep. It's going to be a long day tomorrow,\" Gwen suggested softly, not moving. \n\n\"Yeah, we probably should.\" Cricket scrambled off the bed. \"Gwen, would you, umm, mind if I slept like this?\" She motioned to her nude body. \"I tried sleeping like this after we skinny-dipped and I do it all the time now.\" \n\n\"Of course I don't mind. I sleep that way, too.\" The young woman smiled and turned to pull back the covers on the other bed. \"And if you want,\" Gwen continued, rising and pulling back her own blankets, \"we can share a bed. Save the housekeepers from having to make both.\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "lesbian",
        "first time",
        "mutual masturbation",
        "older/younger"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-02-ch-21"
}