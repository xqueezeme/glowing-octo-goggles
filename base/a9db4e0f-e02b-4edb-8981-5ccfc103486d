{
    "title": "Daniel Ch. 06: Cums in Their Ends",
    "pages": [
        "WARNING: This new story completes the introduction of Daniel my newest character. Here in involves scenes of graphic sex including seduction, reluctance, cunnilingus, discipline, breastfeeding, anal and incest. If that is not what you are looking for don't read on. All sexual acts depicted in the story are committed by female adults over eighteen years old. Chapter 6 will be the last episode in this series.\n\nMy name is Daniel Johnson. I have my PhD in English Literature and am in New England and am now a teacher at an extremely private girl's boarding school.\n\nIn my first story you can read were my dominance all started when I fucked a girl on the train and a woman from the hotel bar. The girl is the over eighteen years old Dean's daughter and the woman is the Dean's wife and the girl's mother. I fucked them both one night in my school quarters but was caught by that Dean. In anger he fucked both his wife and daughter while I watched. Being in his sixties he gave me permission to continue to dominate and have sex with both his women to ease demands on him. Situations changed and he offered me a full time assignment starting after New Years.\n\nSo this is the last week before the Winter Holiday break. I'm finishing up grading finals of my Gothic Period elective open to forth year students if they are over eighteen. I was deep in my work late after classes on Wednesday when there came a knock on my door. I did not expect anyone and doubted it was Portia, the Dean's wife during mid week. I had already had dinner and changed for bed wearing a sleeper shirt and loose boxers.\n\nI walked to the door and Annie a class Proctor had two senior girls in tow. I recognized Hannah and Ashley as two seniors from my class and knew from the roster they were over eighteen. Annie was in a coat that showed her nightgown below. The girls had coats and shoes but just bare legs showed below their coats. All three must have been cold walking here in the winter night air.\n\n\"Mr. Johnson, these two chose bed time to get into a cat fight; pulling hair, pinching intimate places and wrestling each other to the floor. The whole floor of my girls got out of control whooping and hollering. I got these two separated and under the threat of being expelled convinced them to do the 'Walk of the Three Stairs' and take their punishment for breaking one of the house rules. I will wait here until their discipline is complete,\" Annie explained.\n\nI opened the door and let the three enter. I told them to hang up their coats on the door hooks and remove their shoes. They hesitated. I didn't have time for this so I snapped, \"Ladies, loose the coats or go back to your room and pack your bags for the one way trip home!\"\n\nThey hissed in defiance but removed their coats and I saw the reason for their hesitancy. Both ladies were dressed for bed with soft jerseys that barely covered their crotch. I knew both girls, Hannah and Ashley, as being on the volleyball team and had tight athletic builds. They were not 'huge breasted' girls but each filled out their jersey nicely. Their nips were hard perhaps from fright, perhaps from the chill in the stairwell. \n\n\"Well ladies, fighting in the dorms is against the rules and carries disciple from the 'oar' for each of you. But since it is late I'll apply the disciple to you both at the same time. Now kneel on this coffee table facing each other up close and tight.\"\n\nThey fussed and cursed at each other but I grabbed their hair and had them move towards each other. I told them to hug each other but there was cussing at each other so I retrieved the fly swatter and gave each of their ass cheeks a quick swat. They screeched but got more cooperative real quick. I got out the soft silk ropes and tied their hands behind each other's back. I looped the heavier rope around and around them both from torso to just above their butts leaving a gap across their ass. They were locked against each other.\n\n\"Now ladies it is in your own best interest to hold each other tightly as I apply your discipline. I would hate for you to fall off this table. Now since I already have the swatter out I will use it six times to the ass of each of you. If either of you doesn't count out your disciple I will begin again at one. Do you understand?\" I growled.\n\nNeither answered so I swatted the back of Hannah's thighs. \"Yes, Sir,\" she hissed. I swatted the back of Ashley's thighs but she didn't answer. I swatted her again a little harder and she moaned, \"OMG, Yes, Sir.\"\n\n\"Ladies, you don't seem to understand that each of you controls how hard I will apply the disciple to your ass. Cooperate and I will go easy. Fight me or your partner and the swatter will come down hard. Shall I begin?\" I asked rhetorically but both yelled out, \"Yes Sir.\"\n\nI stood mid table and swatted Ashley first. \"One, Sir\" she moaned. Hannah's ass was swatted and she moaned out \"One, Sir.\" \n\nI realized their sleeper shirts were covering their panties so I stepped behind each senior and tucked the hem of their jersey within the ropes. Hannah had pink panties with red hearts and Ashley had white and black polka dots. I heard each take in a quick breath when I uncovered their panties and murmur curses under their breath. \n\nNow with just thin panties protecting their ass I brought the swatter pad down hard on an ass cheek. They screeched and swayed against each other trying to react to the discipline and to keep from falling off the table. I could see their breasts rubbing against each other. They counted their discipline until just one was left. They had held each other tightly rubbing their breasts and mons against each other. Their scent from their leaking juices was filling the room. I looked at Annie who was now absentmindedly rubbing her pussy mound over her sleeper.\n\n\"Ok ladies, I can stop at six instead of twelve If I can be sure you will resolve your issue peacefully. So I want you to kiss and make up,\" I said softly as I ran the flap across their panty covered ass cheeks. They didn't answer or move so I pulled their panties down off their ass cheeks. They started screaming from embarrassment and fussing so the fly flap came down hard on naked ass cheeks. I quickly did three hard slaps and turned their ass cheeks red. \n\n\"No more Sir, please no more,\" Ashley moaned. I softly ran the large flap across two nice youthfully firm ass cheeks. They displayed the red covered skin on those fine ass cheeks from receiving their swats.\n\nAs I untied the ropes holding their hands and loosened the ropes wrapped around them I asked them if they planned to make up as I had ordered them. I think it was Ashley that moved first and sought out Hannah's lips. The first kiss was tentative but soon deepened. They kept locked to each other's lips for several minutes. My cock started to get hard so I walked behind Annie and pulled up the back of her sleeper. I pulled down my boxers and placed my cockhead against the wetness of her pussy lips under her ass cheeks.\n\nFrom behind my cock breached her pussy lips and slipped up her wet vagina slowly several inches at each thrust. I was balls deep inside her and began thrusting holding unto her mature breasts for leverage. The ladies could see, hear and smell the sex going on just several feet from them. Their hands tangled in each other's hair as they pushed their faces against each other.\n\nHannah twisted a bit and got her hand between them and onto one of Ashley's tits. Ashley moaned when Hannah must have pulled on her nipple. Ashley moved and got her hand into Hannah's panties and started rubbing between her pussy lips. Hannah brought her other hand into Ashley's pussy and the two girls went about getting each other to cum.\n\nMy cock was riding Annie's pussy from the back while she rubbed her clit from the front. I felt her pussy grip my cock as she shook through her orgasm grunting and cursing. My cock swelled inside her as I shot six or seven pulses of thick cum into her pussy. Annie groaned as she felt me fill her oven with my cum. I held her there until she calmed down. I then pushed her until she stood sideways next to the girls with my cock still up her warm wet pussy.\n\nI took the back hem of her sleeper and had her bite onto it to hold it up. I pulled my cock out and held my hand under her pussy lips from the front. Annie opened her legs and after a minute I felt my palm fill with my own cum as glob after glob dropped from her open pussy. I then moved to the ladies and turned my palm over. The cum dropped on their noses and flowed to their lips. Their kisses began to be more open mouthed as they swapped my cum.\n\nAshley and Hannah soon came moaning against each other breathing heavily into each other. Ashley held up Hannah's sleeper and pushed her pink panties down to her knees and Hannah did the same to Ashley's white and black polka dots panties. \"You forgot to do the full twelve Sir,\" Ashley pleaded.\n\nI took a hard swing and slapped Ashley's naked ass. She screamed and wet the table with her pussy juices. I took a swing and slapped Hannah's naked ass. She moaned and slumped against Ashley. I walked around the young women and swatted twice more having lost count anyway. I slowly fully untied them and helped them step down. Their wet panties dropped to their feet fragrant from their pussy juices.\n\n\"Leave me your wet panties and get your coats on and get back to your dorm and behave until the end of the week,\" I growled. \"I'm gonna have Mz. Annie check to make sure you sleep with no panties tonight.\"\n\nThey each slipped out of their fragrant panties and handed them to me. They then reached up and kissed me lightly. They let loose and kissed me deeply. They felt my cock against their sleeper and they both dropped to their knees and cleaned my cock with warm tongues and wet lips. They each took my cockhead between their lips and bathed my cockhead getting the last of my dripping cum. \n\nThey stood and kissed me again and smiled brightly. They helped Annie put her coat on then helped each other and went to leave. \"Kiss each other once more then kiss Mz. Annie and apologize to her,\" I ordered. \n\nHannah and Ashley turned to each other and started kissing. Tongues and lips went deep against each other. They caused my cock to start swelling. They laughed as the kissing died out they turned on Mz. Annie. They took turns kissing her deeply. I saw them push Annie's coat open and the young women started gripping an old set of tits. Annie moaned as Ashley slipped her hand down onto that aged pussy over the sleeper.\n\nThe three of them went at it for several minutes moaning and hugging and kissing. \"All right ladies take this back to your dorm or I'll fuck all three of you bent over my sofa just for my own pleasure. Now behave for the few days left of this term. Now get!\" I yelled. They laughed, zipped up their coats and left. I added their fragrant panties to my perverse collection then turned in for the night with a softening chubby. I thought I might have two candidates for my next Independent Study. \n\nThursday went easy. The Hospitality students fussed over me serving my breakfast and again my lunch. Suzette came over and sat across from me and chased the students away. She sat there quietly while I ate my lunch. I looked up at her and said, \"Well?\"\n\n\"Daniel I fucking hate you! I hated at first that you took my ass at the dance. No one had been in my ass ever! Nothing had ever been in my ass ever! Your huge cock pushed my ass wide open causing me such pain. Then while you rode your cock in my ass it turned to pleasure and I never came so hard and so long as I did on your long fat cock. I'm not proud to say I loved your cock in my ass,\" Suzette said quietly.\n\n\"Get to your point Suzette, I'm trying to finish my lunch,\" I said as a way of control.\n\n\"Daniel you're a bastard! You use your big cock to control us women then treat us poorly. Again I'm not proud to say this but you can have my ass anytime you wish. I'd like you to bend me over this cafeteria table and fuck my ass right now. I'm lost! I'm your ass slut. I'll clean your cock after it fills my ass with hot thick cum. Please Daniel say you'll fuck my ass again soon,\" Suzette begged as she sobbed into her hands.\n\nThere were too many eyes on us so I could not show her any affection. \"Ok Suzette I will call you when I get back from Winter break. We'll drive over a couple of towns on a Friday night and I'll fuck you all weekend. I'll fuck your ass so hard and so often your anus won't close and will drip all Sunday night as you lie in your lonely bed reliving the pain and disciple your body will receive. Will that make you happy?\" I asked her.\n\nShe smiled brightly and whispered, \"Thank You Master,\" then got up and left. The Hospitality students closed in on me again and fussed over me until I was done with lunch. Since all Hospitality girls had to be over eighteen to take the final year program each girl got a kiss on the lips they had come to expect and the Proctors now allowed. I asked them to make up a dinner to go since I had final grading to do tonight.\n\nI was just about done with dinner and grading when a knock sounded on the door to my quarters. I thought, \"What damn horny female wants my cock now?\" but went to the door and opened it. There stood the President of the school. She was breathing heavily from the three story climb. I opened the door wide and she entered. She hung her winter coat on the door hook. I thought some stupid cunt had talked and I was now fucked out of this great job.\n\nI said wide because the President was very zaftig carrying a full rounded figure. I remembered the feel of her body against me from the Winter Dance. Her breasts where matronly large and her ass was pleasingly plump. For being a large woman she kept herself well shaped. She walked around my room touching various things. She stopped behind my desk and ran her hands across the old wood.\n\n\"This desk was here when I went to this school, Daniel. I married smartly as this was more a finishing school back then. My husband was very financially astute and when I heard that the school had fallen on hard times I purchased the school and all the surrounding property. With my guidance and connections I turned this into a finishing and high school for daughters from the upper crust of society. The endowments will keep this school running for decades. Daughters of former students now fill this school.\"\n\nI remember dancing with Amelia as she purposely rubbed her body across my long cock and pushed her matronly breasts against my chest. I let her do all that because I knew she was the President of the school and held vast power. She even expected a kiss at the end of the dance. She kissed me hard even running her wet tongue across my lips. \n\n\"This desk is over 150 years old,\" she continued. \"A Master of Disciple sat at this desk all the years this school has been in operation but this room was much smaller. The previous Dean asked for permission to demo this room and expand into the two storage rooms and modernize this area into living quarters. I told him he had to keep this desk and the implements that were within the drawers.\" \n\n\"I hear only good things about your teaching abilities Daniel and am very pleased I approved your permanent hiring. I am very proud about how you handled the senior girls at the dance. I also felt your special gift as you danced with me that night. I also have heard the rumors that you have taken your extra job as Master of Disciple quite seriously. I hope the women you disciple across this desk hold our secrets tight to their bosom.\"\n\nShe reached behind her and I heard a zipper pulled down. The shift she was wearing dropped to the floor. My mouth dropped open as I saw what she wore. She had black stockings help up by a bright red garter. She wore no panties and her labia was devoid of any pussy hair. She wore a bright red and black lace bustier and corset. Her huge breasts sat in red lace half cups and her large dark aureoles and fat nipples pointed at me.\n\nShe turned and her dark aureoles the width of an apple displayed her thump tip sized nipples. She laid her huge breasts on the desk and hung her arm over the side. She spread her legs wide against the back desk legs. Her naked vulva was sparkling as her juices dripped out from between her labia and wet her inner thighs.\n\n\"Use the ropes and the flogger Daniel. I am breaking a primary school rule and expect the full discipline. I want all twelve lashings served hard on my ass and thighs and back. Then I want that fat cock rumors have it you hide in your pants to fuck me hard and deep until I cum so much I faint. Now punish me Mr. Daniel Sir,\" she said in a young girl's voice.\n\nLaid across my desk Amelia's black stockings rose up her fat thighs reaching towards her bodacious ass. The corset covered her back in red and black silk and the red garters stretched down to grip the stocking tops. Her gray and black hair spread across my desk covering her head and face. Her large ass was the target hanging over the edge of my desk. Those jello cheeks pulsed in anticipation of the first strike.\n\nI stripped then I took the soft ropes and tied her ankles to the desk legs. While kneeling down I pulled her ass cheeks apart and kissed her darkstar. Amelia hissed and shimmied her ass across my pointed tongue. Pussy juices poured out from her splayed open pussy lips. I ran my tongue through those lips gathering her thick nectar on my tongue. I savored her mature taste as I swallowed her offering.\n\nI stood then tied her wrists to the front desk legs. I pulled her gray and black long hair lifting her face and put my cockhead against her lips. \"Suck my fat cock Amelia.\"\n\nShe hissed again and her tongue slipped out to lick off my pre-cum dripping out of the slit of my cockhead. She sucked just the crown of my cock pulling more pre-cum out of my cock. I pushed forward and if she wanted to or not my cockhead entered her warm mouth. I pushed further spreading her lips sliding my cock along her wet tongue until it hit the entrance to her throat. Amelia coughed and I pulled back to my dickhead then filled her mouth with cock over and over.\n\n\"Do you want me to drown your mouth with my hot cum Amelia?\" I growled.\n\nShe moaned and shook her head, \"No.\"\n\n\"Well perhaps after I destroy your ass with the flogger and my long fat cock you will willingly take my cum down your throat,\" I growled and struck her ass with the flogger tresses. \n\nHer mouth closed tight on my cock as she moaned. Her back was protected by the corset so I walked behind her and started undoing the hooks until I pushed the sides apart. I then struck her back with the tresses and ribbons of red appeared along her spine. She screamed and pulled against her ropes.\n\n\"Well we can't have you screaming each time the flogger warms your ass Amelia so I'm gonna have to fit you with the ball gag,\" I said opening the desk drawer and removing it. Amelia tried to tell me no and fight it but I got the rubber ball into her mouth and buckled it. I pulled her long hair past the straps so I could pull on her hair when I filled her ass with cock.\n\n\"Well Amelia with the ball gag installed you won't be able to count out your punishment clearly so I will expect you to do your best to count. Shall we begin?\" I asked rhetorically. \n\nI took a good wind-up and struck her fat ass cheeks with all the tresses finding purchase on bubbly ass flesh. Amelia raised her face and screamed pulling against the ropes. \"I'll take that as 'One' Amelia.\"\n\nI pulled the flogger back and struck where her ass met her thick thighs with some of the tresses striking her dripping pussy lips. Amelia screamed behind the ball-gag. \"I'll take that as 'Two' Amelia.\"\n\nThe next ten lashings struck her back or ass or her thick thighs or combinations of all three. I watched her white fat ass turn all shades of pink or red as her pussy juices rolled down her thick inner thighs to wet my floor behind the desk. After the twelfth lashing I sat in my desk chair and rolled it up behind her ass. I watched her fat pussy lips pulse as her nectar dripped out from her naked gash.",
        "I turned the flogger over and ran the leather handle between her fat pussy lips gathering her wetness. I moved the butt end back and forth searching for the vestibule of her vagina. I knew I found her wet entrance when she moaned and pushed back. The leather handle slipped in until her pussy lips kissed my hand. The handle wasn't as big around as my cock but would help pave the way for my fat cock to enter.\n\n\"Are your using toys filling your hungry cunt Amelia? Do you push cold plastic up your hot cunt begging for the real thing to fill you?\" I teased her.\n\nI pulled the wet handle out of her pussy and pushed the end against her anus. \"In the darkness of the night as you lie in your bed alone do you push toys into your dirty hole as you rub your clit faster and faster,\" I challenged her pulsing the leather dildo against her analring. I watched it try to grip it and open at the same time.\n\nI kept the handle high up against her anus as I moved behind her fat ass cheeks with my hard cock in hand. My cock quickly found the entrance to her pussy and I pushed my fat cockhead fully in. Amelia moaned as her pussy tried to take my fat cockhead. Her juices were dripping out and down her thighs so her wet lube coated my cock. I pushed and half my cock was captured by her tight vagina. She screamed against the ball gag.\n\nI pulled back to my corona then pushed forward letting her pussy walls stretch to take all my fat cock. My progress stopped when my cockhead punched her cervix. Amelia moaned loudly as I tapped her cervix over and over again. I moved the flogger handle back and forth and up and down against her asshole like running a shift handle through the gear positions. Her analring gave up the fight and a few inches of leather entered her dark oven and the old bitch came gripping my cock over and over.\n\nI pulled my cock out and her pussy sprayed my cock and balls. Amelia moaned against the ball-gag as her body shook on the desk rubbing her clit and fat naked tits back and forth. She hissed through her climax and aftershocks. I pushed my cock fully into her cunt in one thrust. She screamed again and shook against her ropes then flopped down all spent.\n\nI gave her no chance to rest as I started riding my cock back and forth in a pussy not use to my length or fatness. I could feel her labia being pulled and pushed as it gripped my cock massaging her swollen clit. I started jackhammering her cunt until she screamed and her pussy juices flooded my floor. I untied the ball gag to listen to her cum.\n\n\"Oh Daniel I'm cumming, I'm cumming. Agh, oh mercy me I've never been fucked like this. You're killing my pussy. Oh Jelly Crackers I'm cumming, I'm cccuuummmiiing!\" Amelia screamed and thrashed against her ropes. I pulled her long graying hair as she lifted her huge tits off the bodice and her thighs and ass cheeks got rock hard. She screamed once more then fell hard back against the desk knocking her forehead on the hard wood.\n\nAmelia lay there breathing heavily her muscles all spent. I pulled out of her pussy and her juices poured out and leaked onto the floor. Her old vagina still held the large shape of my cock not closing but pulsing. She was still breathing in shallow breaths and not moving. I don't like to be controlled. I did the one thing I knew would give me back control over this old rich bitch.\n\nI removed the flogger handle from her anus and took my cock in hand and leaned my cockhead against the entrance to her back oven. I pushed down until her dark lips began to give. I was patient pushing easily against the resistance. Suddenly her analring gave way and my cockhead popped inside her. She screamed as another two inches of cock slid into her. I ran my hand through her old pussy lips and lubed the rest of my cockshaft and the ring of her anus with her juices. The rest of my cock slid in as my heavy balls slapped her pussy.\n\nI moved my hard cock back to my cockhead then slid into her ass deep again. She moaned and moved her ass side to side. I slowly started rocking my cock back and forth going as deep as possible. When I pulled back I stretched her analring tight around my cockhead then sunk my cock deep. I did that over and over enjoying the pleasure of Amelia's ass. I started moving faster and Amelia started moaning and twerking her ass. \n\n\"Oh fuck Daniel you are such a nasty man. Your cock is in my ass. In all my years I've never let any man or woman seek their pleasure in my ass. Now your long fat cock is deep inside me stirring up pleasures I've never felt before. Fuck my ass like you did my pussy. Cum inside me Daniel, cum inside me,\" Amelia pleaded.\n\nI pulled back and slammed my cock in deep shaking her big flabby ass. My thrust pushed her clit against the edge of the desk and she moaned deeply. \n\n\"Again Daniel, thrust again, over and over. Make me cum you evil man,\" Amelia begged. \n\nI started thrusting fast and hard driving her clit against the desk. Each thrust also pushed her tits and hard nipples into her silk bodice. Amelia produced one long moan as she pushed her ass backwards on my cock. She screamed and her ass shut down tight on my cock. Her pussy sprayed back at me soaking my balls and thighs. \n\nIt proved too much for me. I gripped Amelia's flabby hips and pushed forward sinking my cock deep and fired off my cum globs. Five, six, seven blasts of my cum filled her ass. I still pumped my cock in and out of her ass enhancing her climax as her clit rubbed the desk. \n\n\"Stop Daniel, oh my god stop thrusting,\" Amelia yelled.\n\nI pulled my spent cock out of Amelia's ass and watched the large \"O\" of her asshole wink as it tried to close. I grabbed my phone and took pics of Amelia's ass and wide open anus as cum started leaking out. I moved to the other side of the desk and pulled Amelia's hair and her face rose off the desk. I put my cock against her lips and took several more pics. She opened her mouth and my cock slipped inside. She had her eyes closed but her face and who she was was evident as I snapped more pics.\n\nAmelia willingly cleaned off my cock with her mouth and wet tongue and pushed my soft cock out. \"Untie me Daniel I need to rest before I dress and go home. I've never been fucked as good as you have done to me tonight. I will have to make use of your special skills frequently. Now help me sit,\" she asked.\n\nI untied her and walked her to the sofa letting her sit on a towel as mutual cum leaked out of her. She sat there naked as her corset lay on my desk. Her old breasts sagged on her chest as she tried to steady her breathing.\n\n\"You are a good fuck Daniel but an even better teacher and gentleman. You keep the secrets of the needy women that work here. I will give you an open ended contract to teach here if you agree to stay. Think about it over the Winter Break. Now hand me my shift and help me dress,\" she said softly. \n\nI walked up to her my long soft cock hanging between my thighs and I held her against me. Her huge hanging tits pushed against my naked belly. She hugged me tightly as I ran my hand down her back and slapped a jello ass. Amelia moaned and whispered she had to leave. I pulled her long hair down her back and kissed her hard and deep when her lips appeared.\n\nShe reached between us and lay my softening cock up her muffin belly. She moved against my cock getting her belly wet with the last of my cum leaking out my cockhead. I pushed her away and turned her. My cock found the cleft of her fat jelly ass as my hands reached around and took her cantaloupes in a tight grip. I gripped her huge nipples and pulled them out until she hissed.\n\n\"Daniel, please I have to go,\" she pleaded but she still rubbed her ass cleft along my long fat cock. I went to her shift and lowered it down her arms and covered her body. I ran the zipper up her back and moving her long black and gray hair aside I bit her neck and sucked leaving my mark. \n\n\"Will you let me tattoo my mark on your ass and pierce your left nipple to claim my ownership Amelia?\" I growled as I bit hard the side of her neck.\n\n\"Oh fuck, Daniel you would make me do that? You want to own me to let me get your fat cock to cum in all my old holes? Yes Daniel, I will let you own me. I will be your cock slut. I'll be your submissive, Master. I'll let you mark me when you return from Winter Break if you fuck me first and make me cum over and over. I want your cum in my ass as your mark is tattooed on my ass. I want your cum on my fat huge left tit as it is pierced. I'm giving myself to you Daniel,\" she whispered leaning back against me.\n\n\"I'm changing my will leaving this school and property to your ownership Daniel. I have no children so my fortune and estate will be left to you if your fuck me for the rest of my life. I won't expect you to live with me just fuck me when I have need of you and your magnificent cock. Now let me go Master or I shall be lost,\" Amelia moaned.\n\nI walked her to the door and helped her put on her shoes and coat. I kissed her deeply at the door and told her thank you for her generosity.\n\n\"No, Master, thank you for opening my life to pleasures of this old body after far too many years. I'll be discrete as you have been with my Proctors and adult students. Jonathan spoke very highly of you and I know you are fucking his wife and daughter as well as the four girls in Penelope's coven. I can count three Proctors that have cum on this cock Daniel. There are no secrets to me at this school. Now I have knowledge as to why they gave themselves to you. I will do the same Daniel, all you need do is ask.\"\n\n\"One last thing. I'd like permission to set up Wi-Fi cameras in your quarters during Winter Break so I can watch and listen to you fuck the women of this school. I wanna shove toys in my cunt and ass as you fuck your women on this desk, in your rooms and in your bed. I wanna watch you wash your fat cock in the shower. I wanna watch as the Proctors and teachers and seniors suck your long cock and take your cum down their throats. I'm a nasty slut now Daniel, your nasty slut. Please Daniel say you'll let me do this and watch you fuck!\" she pleaded.\n\n\"Yes Amelia, you can do all that. You will be my secret slut and you can watch and listen to all the ways I dominate the women of your school. Then I will come to your home and fuck you in every room of your house. I will lash your ass with a flogger then drop a huge load of cum down your old fat ass. Then you will clean my cock with your mouth and lips and tongue then say, \"Thank you Master!\"\n\n\"Just one more thing. While I'm gone arrange for a small freight elevator to be installed in the back staircase that leads to the back courtyard. I don't want you having a heart attack climbing the famous 'Three Flights' to receive your flogging and fucking.\" Amelia moaned once more as I kissed her deeply then put on a robe and walked her down those back stair cases. I gave her more kisses before opening the door and slipping her into the court yard.\n\nI went back to my rooms trying to understand the wealth that was promised to me. I think I'd better get a certified copy of her new will as soon as possible. I had been given carte blanche to fuck any willing over eighteen female at this school. I went to sleep with those thoughts in my dreams. \n\nThe last class of the term went easily on Friday except for one thing. Since this was the last day of the school term the seniors in my Gothic class must have conspired to tease the hell out of me. I usually greeted each student as they entered my classroom but each senior grabbed my neck and kissed me deeply as they entered. I had twenty seniors from various concentrations in my class so this special greeting took some time.\n\nWhen Ashley, Hannah then Penelope were the last with this special greeting they took their seats. When I took my seat behind my desk it was like a pre arranged signal and the sound of shoes shuffling on the floor occurred. I looked out on a classroom of school skirts pulled up and thighs spread wide. Panties of various colors and naked pussies appeared under the school desks.\n\nAll the seniors had to be over eighteen to take this Gothic elective. The front row of the women all displayed naked pussies. Penelope sat directly in front of me in her usual seat. \"You can't 'Yellow Card' all of us Mr. Johnson, Sir. Let's see if you can get through today's lesson without cumming in your pants,\" she whispered as she pushed her hand under her skirt onto her wet pussy. She ran her fingers through her fragrant pussy lips then brought them to her mouth and licked them clean.\n\nAshley, Heather, Savannah, Wendy, Jennifer, Taniyah and Naomi were petting their kitten under their skirts. The smell of pussy was getting very strong in the room. Looking out across the classroom there were several girls also contributing to the aroma. I had to get back my control. \n\n\"Ladies, you think because this is the last day of class that you can break the rules. I'm wondering what your Daddy would think if I took the time to send a hand written note home describing the colour of your panties and your outrageous behavior in my classroom today. Would they like to read that their daughter sat in class showing their teacher their panties or even worse their little young kitten? Does Daddy already know the colour of your pussy hair or if those nasty lips have been shaved bare? Don't for a minute think I won't make each of you take the 'Three Flights' once school starts up again after Winter Break. Now put your hands on your desktop palm upwards and don't move them,\" I growled as I picked up my ruler.\n\nI walked to the back and when I reached the back row I started slapping the upturned palm of each girl. I of course slapped once lightly then kissed that palm. I worked my way across the row then the next. For those senior girls that had their thigh exposed that chunk of young female flesh got slapped with the ruler first then their palm. I kissed their palm for several seconds then moved to the next girl. When all girls were disciplined I went and sat at my desk and pulled out my pile of 'Yellow Cards'.\n\n\"Now any of you lovely ladies that do not wish me to write to your Daddy may take a 'Yellow Card' at the end of class and you will receive your appropriate punishment when classes resume. Now open your books and take turns reading today's lesson.\"\n\nI had to listen to low sobbing as some of the senior girls realized they had gone too far. The frisky seniors that had already been in my quarters refused to close their legs so I had to endure naked pussies for the balance of the period. When the bell rang no one moved. Penelope moved first. She was the class president and chief trouble maker. She came to the side of my desk and leaned down and kissed me and took a 'Yellow Card' and wiggled her tits then returned to her seat.\n\nOne by one my twenty students came to my desk, kissed me and took a 'Yellow Card' wiggled their tits and returned to their seat. Some of these Fourth Years were at first shy about kissing me but they did so and took their 'Yellow Card' while sobbing. I was stone cold handing them the card but underneath I was smiling as I knew many of them would get off the hook come January. I would let them stew over the school break letting them think the worst would happen. \n\nWendy came by in the afternoon to check on my quarters. She went about her work with a sly smile always keeping eye contact with me. When all the housekeeping work was done she took my hand and led me over to my stuffed king's chair and sat me down. As she stood in front of me she took the hem of her skirt in her teeth and slowly pulled down her fire engine red panties. She held the wet fragrant gusset against my face then pushed it into my mouth. My tongue tasted her pussy juices and I inhaled her scent.\n\nShe put my hands on the stuffed arms of the chair then unzipped her skirt which fell to her feet. She slowly unbuttoned her school blouse and removed her nursing bra. Her full breasts settled on her chest with her full nipples pointing at me. Small drops of milk appeared on her nipples and fell to her tummy. She made me stand then unzipped my pants and pushed them and my boxers to the floor.\n\nShe pushed me to sit again and gripped my firming cock. She licked the pre-cum leaking out the tip and circled her warm tongue around my cockhead. Her lips captured my mushroom and slowly her mouth engulfed my cock. She licked my shaft as it slowly filled her mouth. She spent several minutes making love to my cock until she said it felt it was as hard as possible.\n\nShe then stood and crawled up on my lap. She reached down and spread her pussy lips open and placed her wet opening on my dickhead. She rocked her hips side to side working my cockhead into her wet hot pussy. She moaned as my cockhead breached the vestibule of her vagina and was captured in her warmth.\n\n\"I can't get over how good it feels when your cock first opens up my pussy, Mr. Daniel, Sir. I feel so filled up when I slide my pussy down on your fat cock and you thrust up and tap my womb. I'd love for you to fill my pussy with your hot thick cum but that would be too risky. Now let me cum on your cock Sir. Let me soak your cock with my hot juices while I ride your cock, oh it feels so good Sir!\"\n\nWendy rode up and down my cock as her pussy juices lubed my shaft and leaked onto my balls. I moved my thumb onto her clit and massaged that bump round and round and side to side. She moaned as her pussy tightened on my cockshaft.\n\nShe leaned forward and put a wet nipple against my lips and I latched on and pulled her milk from her breast into my mouth. Her warm milk flowed heavier as I sucked harder. Wendy moaned and bounced on my cock with my thumb on her clit.\n\n\"Bite me Daniel, bite my tits! Pull my nipples, get my milk, empty my tits, oh fuck me Sir with your fat cock!\" Wendy moaned pogo-ing my cock with her wet, hot, tight pussy.\n\n\"I'm cumming, Daniel, I'm cumming, I'm cumming!\" Wendy screamed as she soaked my cock and balls with hot juices.\n\nWendy slumped onto my shoulder breathing heavily. She kissed my neck and nipped my ear. She leaned back a little and switched her other nipple to my lips then pulled my face against her filled breast. Her milk flowed down my throat once more. I bit her nipple and around her aureole as I also sucked hard pulling out her milk. When Wendy sensed her breasts were empty she leaned back then kissed me deeply. She was moving her hips slowly massaging my still hard cock within her warm pussy. \n\n\"I think I'm relaxed enough and your fat cock is wet enough,\" she whispered as she rose up and gripped my cock. She pushed my cockhead through her pussy lips rubbing her clit and dripping her warm juices. Wendy centered my cockhead against her anus and pushed down slightly. Her dark lips opened on my cockhead and my corona entered her back oven. She pulsed her hips taking more and more of my cock up her ass. She let out a long hiss when her ass settled on my lap. \n\n\"Oh Mr. Daniel your fat cock is filling my ass. You have turned me into an ass slut and my mother is still reliving you taking her ass. She keeps asking me when you'll come for dinner again. I think she wants you to fuck her again. I didn't know she is such a slut,\" Wendy said laughing.\n\nWendy spun on my cock into a reverse cow girl and started riding my long cock. She pulled up to my cockhead then pushed down her assring to my lap. She rode my cock faster and faster moaning and leaking pussy juices. She pulled off my cock and stood up. She walked to my desk and bent over and pushed her mother tits flat on the wood.\n\n\"Punish me then fuck my ass hard and deep. Punish me! Turn my ass red. Make it burn with your flogger then drive your cock deep and hard. I need the pain and pleasure to hold me over till you return from Winter Break. Come here now Mr. Daniel, Sir and fuck me!\" she moaned looking over at me with want and desire.",
        "I picked up her red panties and went to the desk and removed the flogger. I pushed her panties into her pussy while I ran the tresses down her back and across her ass. She moaned and I could smell her scent as she let down more juices. I pulled her soaked panties from her pussy and pushed them into her mouth forming a gag.\n\nMy arm pulled back and I struck Wendy's ass with the arcing tresses. She screamed into her panties as I struck her ass several times. Her white ass cheeks turned into ribbons of red and pink as the tresses stung her flesh. Her thighs trembled and her woman cum sprayed back at my legs wetting the floor. Her ass and thighs and back tasted the flogger as she screamed into her panties gripping the edge of the desk.\n\nI dropped the flogger on her back and took my now rock hard cock in my hand and pushed it against her anus. That dark mouth without teeth opened wide and sucked my cock into her darkness. All eight thick inches slid into her ass until my heavy cum filled balls lay against her pussy. When I was balls deep in her ass hot cum sprayed from her pussy soaking my balls. \n\nI pushed hard against her ass cheeks causing pain to her punished ass. My fat cockhead opened the depths of her rectum pushing out the hot membrane as Wendy moaned into her red panties. I pulled back to my cockhead then trust back deep into her ass. If she wanted her ass destroyed I would do that. Wendy huffed each time I went deep and snot came from her nose as she tried to breathe deeply.\n\nI no longer had concern for her motherhood or her ass as I drove towards the completion of my pleasure. I pounded against her ass pushing her clit and tits against the hard wood of my desk. Wendy screamed and trembled as her ass tightened on my cock. I could feel her hot woman cum hitting my hanging balls as she sprayed hot juices over and over.\n\nMy balls pulled up tight as my cum prepared to inject pulse after pulse of hot cum down her ass. I growled over and over as my cockshaft pulsed with each discharge of hot thick cum. I pulled back then drove forward and shot a glob of thick cum. I did that over and over pushing out five or six globs of cum out the split in my cockhead. I grunted and pushed deep then lay down of her mommy ass and sweaty back.\n\nI used the desk to push back and pulled out of Wendy's ass. The 'O' of her anus pulsed and tried to close as she breathed heavily. I sat in my desk chair breathing deeply as I watched Wendy's ass and thighs tremble as she felt her climax aftershocks. When she pushed up off the desk my cum dripped out of her ass and dropped to the floor. She took those red panties from her mouth and dropped them onto the puddle of her female cum.\n\nWendy turned and saw me in the chair so she sat on my lap and started kissing me deeply. She then turned her head and buried it on my shoulder kissing my neck. She started sobbing and I hugged her tight running my hands up and down her back soothing her as best I could. I stood and carried her into the bathroom and turned on the shower.\n\nI set Wendy down under the warm water and started soaping her body; her back, her ass, her milky tits, her tummy and her vulva. She moaned as I tenderly washed her all over then washed myself as she rinsed. I turned off the water and wrapped her in a large towel. I carried her to my bed and laid her down and covered her with the sheets and blankets. I dressed and went down to the caf\u00e9 and got my dinner served by the Hospitality students.\n\nWhen I returned to my quarters Wendy was gone but her panties were hung on my bedpost. I prepared for my last meeting of my Independent Study group of the young adult females for this term. I had printed the erotic excerpts from 'The Lifted Curtain or Laura's Education', about a young girl's sexual initiation by her father. It is written by the French revolutionary politician Comte de Mirabeau. The story is very pleasant to read, aptly alternating light philosophical passages and pornographic scenes.  \n\nAt the appointed time the five females arrived; Penelope, Tsumugi, Aoife, Betty and Veronica. I got my customary deep kisses while I slipped my hand under their skirts and gripped their young ass cheeks. Several laughed at my being so cheeky, pun, pun, pun!\n\nThey settled in when a knock sounded on my door. Dean Jonathan entered with a stack of papers that were the essays the girls wrote on the Gothic horror novel, 'Frankenstein; or, The Modern Prometheus' written by English author Mary Shelley (1797-1851) that tells the story of Victor Frankenstein, a young scientist who creates a hideous sapient creature in an unorthodox scientific experiment. Not many persons realize the creature is not called Frankenstein, it is the name of the young scientist.\n\n\"Well ladies,\" Jonathan began, \"You all have done a great job on your required essay. In fact I had to give all of you an A+. You all should be very proud especially being the first group to take Mr. Daniel's Independent Study.\"\n\nThe girls squeaked or laughed their thanks. Penelope walked up and gave her father a tight hug and a deep long kiss. She seemed to create a president as each young woman did the same, even shy Betty. There were big smiles and light laughter as Jonathan then handed back the essays.\n\nThere was now some soft murmuring as the girls knew that the reading of the erotic excepts would start now but Dean Jonathan was still in the room. I directed them to take their favorite seat and to settle down.\n\n\"Ladies, tonight's excerpt was actually suggested by Dean Jonathan before the class even started. 'The Lifted Curtain, or Laura's Education,' follows a young girl's initiation into sex by a man whom she believes to be her father. So since you see me each week I thought it would be an exciting change to let Dean Jonathan read the parts of the father. So let's begin!\" I said excitedly. \n\nI had marked each sheet with the name of my student for the section I wanted them to read. I saved the sheet for Penelope with the most erotic section between daughter and father. I looked at both Penelope and Jonathan and their faces were flushed with excitement. As I anticipated once the reading started the women paid no attention to Dean Jonathan and were swept away.\n\nDelicate hands went under skirts or across breasts and soon the room was filled with the scent of young pussy as each girl read her erotic passage. There was heavy breathing and the massaging of breasts and wet clits. Veronica undid her blouse and slipped a hand into her bra and massaged her breast as she read her passage. When Penelope started the final read she unzipped her skirt and it dropped to her feet revealing her naked pussy to her father.\n\nHolding the sheet with one hand she ran the fingers of her other hand through her pussy. Her father read his parts rubbing his obvious hard cock down his pant leg. Always the one to push the erotic envelope Veronica walked on her knees to in front of Dean Jonathan and unbuckled and unzipped his pants. She pulled his pants and boxers down to his feet and took his hard cock into her mouth.\n\nJonathan hissed as Veronica licked and sucked his cockshaft and cockhead. Jonathan is average in length and thickness so Veronica was able to slid her mouth down his cock until her lips kissed his base. We watched as her wet tongue came out and licked his balls. \n\nI watched Tsumugi strip and lay her back on the ottoman and spread her slender thighs wide open. Her dripping coral gash gave off a deep scent as she began to play inside her pussy and across her clit.\n\nI handed Jonathan a 'little blue pill' and had him wash it down with a small glass of Absinthe. Veronica led him by his cock to kneel between Tsumugi's legs and she placed his swollen cockhead within her dripping pussy. He shoved forward and buried his cock deep into her pussy. He started thrusting rapidly as Tsumugi rubbed her clit. \n\nA now naked Betty leaned over and took Tsumugi's nipple into her mouth and sucked hard. Aoife now also naked did the same on the other side. Penelope started undressing her father of his shirt even as he kept thrusting into the slight Asian young woman. She played with her father's nipples and fed him her pussy juices off her dripping fingers. \n\nTsumugi rubbing her clit rapidly screamed in Japanese and came hard her legs out straight and trembling. Jonathan unable to cum kept driving his cock into her bringing her through several soaking wet orgasms. Betty stood and pulled Jonathan back until his cock pulled out of Tsumugi's red and raw pussy. \n\nBetty rolled Tsumugi off the ottoman and lay her huge tits down pointing her bodacious ass back at Jonathan. She reached back and grabbed his cock and brought it to her pussy. Jonathan slid easily into her hot wet pussy and he jackhammered her cunt until she screamed into her first orgasm off her fingers.\n\nBetty wasn't done as she asked for the lube. Aoife dripped it between Betty's fat ass cheeks then put some into her own palm and lubed up Jonathan's cock. She directed his cockhead to Betty's dark mouth and he pushed slowly opening her anus and sliding inside. Betty moaned and moved her ass side to side and back and forth assisting with the penetration of cock into her ass.\n\nWhen she felt Jonathan's balls touch her pussy she moaned knowing her ass was now full of cock. She started thrusting back at the Dean until he set his own pace drilling her ass with his hard cock. Betty slipped her hand under her belly and started rubbing her clit as her fingers rubbed Jonathan's balls. He pounded her ass as she sprayed her cum back at his groin soaking his balls.\n\nJonathan was thrusting away trying hard to cum. Betty was cumming over and over from his cock in her ass and abusing her clit. I saw Aoife dripping lube across her two long fingers then she knelt behind Jonathan. She pushed him over so he fell on Betty's fat ass and trembling back. Aoife spread Jonathan's ass cheeks and pushed those two lubed fingers against his anus. He screamed as Aoife went deep into his ass and started massaging his prostrate.\n\nHe knelt up again driving his cock into Betty and pushing his ass back onto Aoife's fingers. She reached around and started pulling on Jonathan's nipples. \"Cum for me you slut! Cum in this young woman's ass! Cum as I have commanded you slave! Cum NOW!\" Aoife yelled.\n\nJonathan screamed and trembled against Betty's fat ass as he shot his hot cum deep into Betty's rectum as Aoife continued to thrust her fingers deep into his ass. His body convulsed as pulse after pulse of cum filled Betty's ass. He screamed one last time and fell again onto Betty's sweaty back and trembling ass. \"Good boy,\" Aoife cooed as she slowly pulled her fingers out of his ass. She stood and walked into the bathroom to clean up. I knew from that day forward she would dominate the males in her life. \n\nAoife came back to me and kissed me deeply as she slowly began to undress me. \"Did I do well Master? Did I pass your test with an A+? Have I become the strong warrior you saw in me that first day we met and you challenged me?\" She said all this as she undressed and kissed me all over my body. She undid my shirt first then my trousers and boxers.\n\nShe knelt to remove my shoes and socks and slip my pants and boxers off. My cock was now rock hard pointing at her face. She took my cockhead into her warm wet mouth and sucked out my building pre-cum. She pushed my cock up and kissed down the underside of my cock. She tenderly took a ball sack into her mouth and licked my egg around in her mouth. She did the same with the other warming my desires.\n\nShe turned and pushed my thighs open and licked my taint and rimmed my asshole for several minutes as I trembled. She pulled me down and took my cock back into her mouth. She pulled down on my hips causing my cock to go deep and breach into her throat. I could see the outline of my fat cock in her throat. She kept me deep licking my shaft and pulsing her mouth up and down. \n\nMy cockknot rode her throat causing me to tremble and leak pre-cum down her throat. She sucked my cock out of her throat and across her tongue as she took in a deep breath for her deprived lungs. She sucked up my cock taking me into her throat over and over as I did squats from her pulling down on my hips. She deprived herself of air pleasing my cock in her throat. Getting close I moaned, \"Aoife,\" and she slid off my cock.\n\nAs we both caught our breath I looked over and Veronica had rolled Jonathan onto his back and had slipped his drug induced hard cock up into her pussy. As her juices leaked out onto his groin she rode his cock while rubbing her clit. Penelope sat on her father's face feeding him her dripping wet pussy. She sat facing Veronica as the two of them played with each other's tits and kissed deeply.\n\nAoife stood and pulled me by my cock to the sofa. She bent over the stuffed arm and looking back she dropped into the role of her story and said, \"Do me in the back my wild reddish chieftain. Take your pleasure in my unnatural place and fill it with your strength. Fill it over and over driving your fat length into my wicked depths. I am your scullery maid slut to use as you wish. Now do your evil to my dark hole and do not stop for my screaming until your completion,\" she growled dripping the lube between her ass cheeks. \n\nShe pulled her ass cheeks wide open and the young slut winked her anus. It opened and closed over and over hypnotizing my snake to enter her dark portal. I moved behind her and pushed my fat cockhead against her anus. She has learned to use her ass for my pleasure so she grunted kissing my cockhead with those unnatural lips. My cockhead breached her lubed ass and slipped inside her hot cave entrance.\n\nAoife took in a deep breath then shimmied her ass opening her dark portal to more of my cock. She pushed up and back begging for more cock. I watched Betty lay on the sofa and slide her pussy under Aoife's face demanding attention. Aoife obliged and started eating Betty's fat pussy lips and her swollen clit. Betty moaned as each time I drove my cock down Aoife's ass her face would massage Betty's pussy.\n\nA movement caught my eye as the slim Tsumugi climbed on the sofa and sat her pussy over Betty's face. There was now a four-way of sex on my sofa. I watched three young woman seeking sexual pleasure on my sofa as I filled Aoife with fat long cock. Tsumugi was facing me as she fed her cunt to Betty as Aoife was pleasuring Betty's pussy.\n\nI started pounding down into Aoife's ass as she took all eight long fat inches of my cock. Her ass was tight on my cock as it pulsed and released over and over. I felt slender fingers on my balls as Aoife slipped hers onto her clit and began rubbing furiously. I thrust into Aoife as I sought my own pleasure crushing her ass with my lap as I fought to push my cock deep into her ass. \n\nAoife screamed into Betty's pussy as her ass tightened on my cock for several seconds then released. My balls became soaked with woman cum as her pussy sprayed arc of hot juices over and over. Betty screamed as she flooded Aoife's face with hot cum and then Tsumugi screamed as she creamed all over Betty's active lips and tongue. \n\nThree young women shook on my sofa in various stages of climax and it pushed me over the edge. I ejected pulses of hot cum down Aoife's ass then I pulled quickly out and shot more cum against Tsumugi's tits and onto Betty's belly. I pushed my cock back into the 'O' of Aoife's ass and shot my last globs of cum deep into her bowels.\n\nTsumugi ran her fingers across her small tits gathering my cum and licking her fingers clean. She gathered the cum off Betty's belly and lifted Aoife's head and made her lick her fingers clean. She did that several times until Betty's belly was clean of cum. She them climbed off Betty and pushed me out of Aoife's ass.\n\nShe made Aoife stand by pulling on her long red hair. The 'O' of Aoife's ass released my cum which Tsumugi gathered on her fingers. When she thought she had enough on her fingers and palm she walked to a supine Betty and fed her my cum still warm from Aoife's ass. Betty licked her hand clean running her tongue across the dainty cum covered palm. Tsumugi made Betty sit up then pulled Aoife unto their laps and turned their attention to the action on the floor.\n\nBy now Veronica had cum several times on Dean Jonathan's still hard cock. His abs were soaked with Veronica's cum. His daughter Penelope had creamed on his face several times as the two women pulled on fat nipples and kissed deeply. Finally Veronica yelled into Penelope's face and came so hard her body started shaking like she was in a fit. She actually trembled so hard she fell off Jonathan's cock and lay on the floor next to him trembling.\n\nPenelope leaned over and took her father's hard cock into her mouth. She cleaned Veronica's cum and pussy juices from all over her father's cock. She pushed down and took his cock into her throat and held it deep until she ran out of breath. Penelope then pumped her throat up and down on his cockhead. She pulled up off his cock and took a deep breath. She stood up off her father's face and helped her father stand. Her red ruby nipple rings sparkled in the lamp lights. She walked to my desk and leaned her tits down on the wood. Her ass was facing the sexually satisfied coven.\n\n\"Come here Daddy and flog my ass. I have to apologize for starting all this sexual misbehavior because I fucked a stranger on an overnight train. He turned out to be Mr. Daniel who fucked my mother and turned us both into his supplicants and your sex toys. His idea for an Independent Study of Gothic novels turned my four close friends into his supplicants and sex toys. Mr. Daniel fucks all of us in any hole he wants using us for sluts who cum on his fat long horse cock gladly receiving his hot thick cum. You need to punish me Daddy for causing all that. Give me the full punishment, all twelve lashes, then shoot your daddy cum down my ass,\" Penelope begged giving up all control to her father.\n\nI handed Jonathan the flogger and directed each of the four girls to hold an appendage of Penelope across the desk. Then knelt on the floor holding down Penelope. Jonathan took his arm back and brought the tresses of the flogger down hard on his daughter's ass. She screamed as he quickly punished her ass with two more. He moved to the other side of her and punished her ass three more times the tresses turning her ass into pink and red stripes.\n\nHe then stood behind her and like a baseball pitcher delivered three hard strikes to her ass cheeks and dripping labia. Penelope screamed and pissed herself soaking my floor like her mother. Jonathan then walked around the desk and pulled his daughter's face up with her long blonde hair then filled her mouth and throat with his hard cock. He then swung the flogger against her back, ass and pussy lips for the final three times.\n\nPenelope screamed around her father's cock and shook through a powerful climax spraying her pussy juices in an arc onto the floor. Jonathan used his daughter's mouth to pleasure his cock. He kept at it several minutes making his daughter cough and gag as he went deep with his cock. He pulled out of her mouth breathing deeply.\n\n\"Fuck my ass Daddy. Fuck my ass until you fill it with whatever hot cum you have left tonight. Fuck it raw so I'll know my Daddy loves me as I lay in my bed tonight moaning from the abuse. Do it Daddy. Fuck my ass now,\" Penelope growled.\n\nJonathan moved behind his daughter's ass. Veronica reached up and dribbled lube into Penelope's ass crack. Jonathan ran his cock through the lube wetting his cockhead and his daughter's anus. He pushed against her dark doorway and his cockhead breached her dark lips and popped inside her ass. Penelope screamed and lifted her face off the desk. Veronica moved quickly and kissed her deeply then bit her lower lip.",
        "Jonathan then went crazy pounding his daughter's ass deep and hard. He was cock focused on maximum pleasure. His cock shown in the lamp light wet from the lube in her ass. He pulled back and pushed in his cock over and over and faster and faster. His face looked at the ceiling and he pushed hard against his daughter's punished ass and screamed. He danced his thighs against her ass rubbing his cock deep in his daughter's rectum ejecting the last of his cum down into her bowels.\n\nJonathan lay across his daughter's ass and sweaty back breathing heavily. Father and daughter tried to calm from two very intense orgasms that claimed the last of their strength. As they lay there I poured out small glasses of wine for the four young women. As they let go of Penelope and stood I greeted them with a hot towel and I wiped between their sweaty tits and juice covered pussy lips. They kissed me then turned and I did their back and young asses. They sipped their wine and dressed. \n\nThey kissed me once more and quietly left promising me to see me as soon as the Spring Term started up. That left me naked with a naked Jonathan and Penelope. I got two more hot towels and handed one to Jonathan. He wiped his chest and his over used cock and balls. I moved to Penelope and washed her back and softly her spoiled ass and wet pussy lips. She moaned and breathed deeply.\n\nI helped Penelope stand and turn and I washed between her full tits and tenderly across her pussy lips. She used my shoulders to hold herself up then leaned in and licked and kissed my neck. \"Thank you for all you have done for me and to me Mr. Daniel, Sir. This term has turned around the relationship I had with my father and my mother. I'm talking both emotional and physical growing closer to my parents. I hope you will still use me and my mother for your pleasure when the new term begins,\" she said softly and kissed me deeply.\n\nShe then helped her father dress then slowly dressed herself. They left quietly leaving me alone with my thoughts. I wondered what the Spring Term would bring, what young female adults would come for their Independent Study interview? Would they be willing to open their bodies to my pleasures? Would I be able to avoid a scandal? Would the Proctors yield to me again? Would the President desire my cock frequently and go through with her financial promises? And what was to become of my youngest daughter carrying my child in her womb? I had no answers as I closed up for the night and prepared for my trip home for Winter Break. \n\nIn the morning I packed a small bag and walked across campus as it was closing down. It was like a scene at the Hogwarts Express as the platform was filled with students. The senior girls from Hospitality found me one by one and gave me deep lingering kisses rubbing their thighs across my long cock with no shame. My seniors from my Gothic class also found me to wish me a good winter vacation also giving me deep kisses and humping my hard cock.\n\nWhen I entered the train car I was surprised to find Mr. Williams there to greet me. He laughed deep and loud and greeted me warmly. \"Yes Sir I tell you that was the best night for this old man and 'Old Willy' for a long time, Yes Sir, Yes Sir,\" he said laughing loudly. He took my bag and led me to a huge family sized sleeper room. I noticed there were other overnight bags up in the racks and told him there was a mistake and I was in the wrong room.\n\n\"Oh no Sir, yous in the right room. Your overnight passage has been all arranged. You go enjoy ya self in the club car. Now ize talking about coffee and a danish not some pussy on the table! No Sir not dat! Then come back here after dinner. I'll have the room all set up. Now don't go doin' no funny business in my club car tonight, no Sir, no Sir,\" he laughed deep and loud again.\n\nI went and had coffee and read in the club car greeting my students as they came in from time to time. The dinner bell rang but I had the last seating. I went to the dining car when they called my group. It was packed with many of the seniors from my class. We all had a good meal with mine including a great wine. The girls slowly drifted by kissing me as they left until I was left to finished my wine. I made my way back to the sleeper rooms only to be greeted by Mr. Williams again with a huge smile on his face.\n\n\"Y'all enjoy your nite tonight Mr. Daniel. Yes Sir, y'all enjoy ya nite,\" he laughed deep and loud once more and opened the door. I walked in to find Savannah and Veronica dressed in see though lingerie. \"Good evening Master. We hope you enjoy your night,\" Savannah said shyly as I heard the door close and Mr. Williams laughing once more. \n\nEpilogue: It's been five years since that first train ride and first term at the private female school. After two years of having monthly sex with Amelia she passed me the rains of being President. She moved a huge financial grant into my control. She continued to use the small elevator for my quarters especially since she wanted the 'desk treatment' and was too old to climb those three flights of stairs. \n\nMy two older daughters graduated and are now teachers at this school. They each are single moms and have a son and daughter from their father. EG has number three on the way. I sold my home and my girls and grandchildren live in Estate homes gifted to us by Amelia. She has become Great Nana to my six grandchildren. \n\nWendy has two new daughters from a private donor (me) and now has graduated from the local college and returned as a Hospitality teacher. Her mom Cindy regularly has the benefit of my hard fat cock. Emma is a Proctor here now and has joined Annie, Ellen and Suzette as my older supplicants.\n\nMy Gothic Period class is always well attended in both Fall and Spring Terms. Fifty over eighteen seniors have passed through my Independent Study Gothic erotic novel seminars. Believe it or not, not a hint of scandal has occurred in all these five years because of my rigorous interview standards and peer recommendations.\n\nParents' Week each spring has added several mothers to my stable and increased the endowments much to the pleasure of Amelia. I was very busy administering \"Three Staircase\" discipline to former students and opening asses to my fat long horse cock. Many mothers left very happy. \n\nI couldn't begin to calculate how many mouths, pussies and asses my long fat cock has fucked and how many gallons of cum has been ejected out my cockhead. Is my wife looking down happy with the life I have now? Is she pleased I have fathered my own eight grandchildren? I'd like to think so."
    ],
    "authorname": "ZachDocEight",
    "tags": [
        "anal",
        "breastfeeding",
        "cunnilingus",
        "discipline",
        "girl-on-girl",
        "incest",
        "mature",
        "reluctance",
        "seduction"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/daniel-ch-06-cums-in-their-ends"
}