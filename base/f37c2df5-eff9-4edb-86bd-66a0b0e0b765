{
    "title": "Anal Exploration - Violet 02",
    "pages": [
        "A week had passed since her first exploration into the intricate pleasures of anal sex. \n\nSince that seminal introductory evening, they had enjoyed the sensations on two more occasions.\n\nThe first took place a mere few hours after her initial penetration.\n\nOn rousing from her slumber, her body still warmly nestled into his, she rose to a seated position on the bed. As the pressure of her body weight shifted to her behind, she felt a lingering tenderness. Firstly from his powerful strikes to her behind. She had bruised ever so slightly and the weight of her body down onto her cheeks brought a residual feeling of soreness to her backside. Like the unstoppable and insistent urge to poke a bruise anywhere else on the body, she reached a hand down beneath her and cupped her rounded form in her palm, exacerbating the swollen flesh. It felt nice to the touch and gave her a little rush of enjoyment as she recalled the circumstances through which she acquired the affliction. \n\nThe second breeze of lingering pleasure came from her freshly penetrated hole. Her seated position pressed her body weight downwards and she felt tenderness around her ring which was far from unpleasant. She could only describe it as a humming sensation and knew her body had been wantonly violated. It felt incredible. Her first real foray into anal penetration had left her with a physical reminder of just how much she had enjoyed it. She basked in the sensation for a few moments before rising out of bed, being careful not to wake him, and moving to the bathroom.\n\nEnveloping herself in a short, crimson silk robe, she moved stealthily towards the en suite bathroom. She reached the door and glanced backwards over her shoulder at him lying on the bed. He appeared sound asleep. She smiled to herself contently as she stared at his naked, prone body, internally thanking him for the pleasure she had enjoyed. \n\nShe entered the bathroom and quietly closed the door behind her. Standing before the full-length mirror she inspected her reflection. It required a double-take on her behalf to fully recognise it, but she was positively glowing. Her body felt warm and satisfied in a way that she had only sampled in the past. The emotional embrace was one of fulfilment as she stood there staring at her reflection. She opened the silk robe and discarded it to the floor. Standing there completely naked in front of her reflection she twisted and turned her body trying to view her rear in the mirror.\n\nHer skin was flush with a pink aura that shone against her naturally pale complexion. \n\nHis strikes had left an indelible mark on her body. A large, reddened area coloured her right cheek, lightly speckled with darker spots where bruises were beginning to form. As she turned and swivelled her body to inspect further, she felt a twinge between her thighs and a subtle rush of pleasure as she continued the inspection. \n\nSeeing the remnants of his assault on her backside, coupled with the still lingering feeling of penetration caused her body to involuntarily react and increase her heart rate. She felt a wetness between her legs as she poured over her reflection in admiration, thoroughly enjoying looking at his impact on her body and the residual pleasures it brought as she reminisced. \n\nPreparing a towel and laying it over the chrome rail, she opened the floor to ceiling door of the walk-in shower and turned on the water. The cubicle was a fairly large space, big enough for two bodies with room to spare. Onyx tiles covered two walls and frosted glass made up the rest of the structure. The dark granite floor was slightly convex and housed a large chrome floor grate for drainage. The shower unit was affixed to the tile and a large chrome head hovered above. \n\nWithin minutes, the bathroom had steamed to a level of reduced visibility due to the hot cascade of the shower.\n\nShe ran a brush through her hair to free the knots and stepped into the shower and under the water.\n\nThe hot water cleansed her body and ran down over every delicate inch. It flowed down her breasts and across her stomach, catching momentarily in the light patch of hair that mounted her pubis before disappearing down into her creases and over her thighs. \n\nShe threw her head back and ran the flow of water through her violet hair, soaking it entirely. She breathed deeply and outwardly in sheer satisfaction. Her body still felt somewhat overwhelmed by the events of a few hours ago. \n\nSoaping up her white meshed pouf, she began to clean her body. The sweat and exertion had left her requiring ablution. She slowly and steadily massaged the pouf over her soft skin, foaming the soap into a lather she moved her hand down between her legs and somewhat unwillingly cleansed herself of his residual ejections. If personal hygiene would allow, she would have loved to keep his essence inside her for as long as possible. Reluctantly she manoeuvred her hand between her thighs and backwards around her newly pleasured behind, removing any trace of his presence. \n\nShe heard a noise behind her and turned to look, though the steam of the hot shower was impenetrable. \n\nTurning back to the shower she continued to wash herself, dismissing the sound entirely.\n\nA few seconds later, she heard the door close behind her and felt his warm right hand on her hip. His left palm lightly grasped her side.\n\nShe felt the familiar warmth of his body pressing up against her back, his hand snaked up her left side, caressing the skin and cupped her full breast. His right hand lightly pulled backwards on her hip and she once more felt the familiar hardness of his cock pushing flat against her behind. \n\n\"Mmmmm,\" she murmured, leaning her head back and resting it on his chest. \n\nHis digits swirled and lightly played with her now hardening nipple as he took half a step forward with her so the pulsing water of the shower covered the both of them. \n\nShe pushed her behind backwards into him; forcing his rigid cock to point upward she ensnared it flat between the cheeks of her ass. The soapiness of her lather still filled her crevice, providing a slick channel for him to snugly fit inside. She began to bend her knees slightly and moved her body downwards before rising again to her original position.\n\nThe cheeks of her ass had a fullness he loved. He gripped her hip tighter as he savoured the feeling of being masturbated in the crease of this gorgeous behind.\n\nGrinding herself backwards into him she reached upwards to meet his hand that was still cupping her breast. She gripped it in loving tenderness and encouraged him to continue his playful grope. \n\nMoving his right hand around her hip, he directed teasingly it across the sensuous line of her groin, over the small strip of moist hair and between her legs. Her pussy was wet from the shower, though easily distinguishable was the slightly more viscous moisture from her arousal. \n\nCircling a finger over her opening, he parted her moist folds and began to massage her engorging clitoris.\n\n\"Ahhhhhhhh,\" she moaned as a surge of pleasure coursed through her intimacy.\n\nShe pressed her behind into him harder, sandwiching it between his stomach and her cheeks. Her recently penetrated ring began to flare and tingle, almost in hopeful anticipation. \n\nHe massaged her moistened clit and took her nipple between the knuckles of his fingers, pinching and slightly pulling at it, accentuating her enjoyment.\n\nThe steaming water of the shower poured down over them in the relatively enclosed space of the shower cubicle, creating a deeply passionate environment.\n\nHer right hand still held the foamy pouf. She brought it down between her legs to meet his marauding hand. She soaped and applied pressure to the back of his hand, further lubricating her pussy.\n\nHe responded as she had hoped and applied greater force to her clit, rubbing and circling her nub sending wave upon wave of pleasure through her.\n\nThe palm of her hand pressed downwards into the top of his, applying greater pressure between her legs. She wanted to feel an intensity of pleasure and forced him to deliver it to her. \n\nWithin a few moments her pending orgasm had built to its crescendo. She drove her backside into him, almost suffocating his cock between her soaking cheeks and forcefully palmed at his fingers to work furiously harder at her clit.\n\n\"I'm coming, I'm coming!\" she shrieked as the waves of sensation coursed through her groin.\n\nPinching her nipples and grabbing at her breast with great intent, he flicked and caressed her pearl between his digits, rubbing with venom to achieve her peak.\n\n\"Fuck! Fuck! Fuck!!\" she screamed as the grip of orgasm shot through her clitoris and throughout her entire body.\n\nHe held her tight as she shivered and convulsed under the intensity of her climax. Her soaking cheeks slid slowly and teasingly down the length of his engorged cock as she came to a resting state. The steaming water from the shower head continued its relentless precipitation onto their conjoined naked bodies.\n\n\"My god!\" she exclaimed, exhaling deeply, returning to a cognisant state.\n\n\"That was incredible.\" she said thankfully to him.\n\n\"My pleasure.\" came his reply.\n\nShe exhaled deeply once more to regain her composure. The water of the shower still beat down on their bodies. She turned her head round to look at him.\n\n\"My love?\" she said questioningly.\n\n\"Yes goddess...\" he replied.\n\n\"I hate to ruin the moment but I've really got to go.\" she said with a hint of embarrassment.\n\n\"Go where?\" he responded.\n\n\"No, no, I'm mean 'go'. Sounds disgusting but I usually pee in the shower but you interrupted me. Though not in a bad way, that was amazing! But seriously, I really, really need to go!\" she rambled uncontrollably. It was a nervous trait of hers whenever she felt like she had put her foot in her mouth or was put on the spot.\n\nHe grinned with a mischievous yet sultry look that she found both intriguing and erotic.\n\nWithout saying a word, he gripped her hips and pushed his still hardened member into her cheeks. It was a not-so-subtle indication that he wasn't going anywhere and hadn't finished enjoying their shower.\n\n\"Turn off the shower.\" he said to her in a velvety, dominant tone.\n\nShe duly obliged and twisted the chrome dial round until the pulsating waterfall ceased.\n\nMoving towards her ear he whispered to her softly, yet firmly.\n\n\"Stand with your feet apart.\"\n\n\"But I...\"\n\n\"Ssshhhhhh.\" He quietly uttered, stopping her mid-sentence.\n\nThe grip of his hands on her hips became firm. She knew he was morphing into his much more dominant persona. The wetness between her legs increased substantially. \n\n\"I want you to fulfil a fetish for me.\"He continued.\n\nHis words were alluring with an undertone of seriousness. She knew that voice and revelled in its dulcet delivery whenever he spoke to her in this manner. Her body tensed with pure excitement as she knew and more importantly, felt, that he was taking control and having her deliver him a rare pleasure.\n\n\"Yes sir.\" she humbly replied, immediately slipping into the comforting role of his submissive.\n\nShe shuffled her feet towards the edges of the shower cubicle and parted her legs.\n\nRemoving his right hand from her hip, he took his throbbing cock in hand and gave himself a few complimentary strokes.\n\nDipping his body downwards he pointed the tip of his cock through her open legs and released his grasp. The blood rushing through it caused it to spring upwards and lightly tap her still slightly orgasmic pussy. \n\n\"Ooohhh.\" she chimed excitedly.\n\nHe wrapped an arm around her waist, rested his hand on her stomach, just over her navel and pulled her body closely into his. She felt the skin contact of his chest against her back and his hips against her backside.\n\nLooking down, she saw his stiff cock protruding out from between her thighs. She reached a hand down to greet him and danced her fingers over the pinkish tip like she was playing a piano.\n\nHis cock squirmed upwards and again lightly tapped her delicate folds and still inflamed clit. She manoeuvred her palm to the underside of his shaft and sandwiched it into her pussy, gently moving her hips to slide her intimacy across his length.\n\nHe murmured with pleasure and moved his head round to her ear once more.\n\nIn the same husky, domineering tone he delivered his instruction.\n\n\"You're going to pee on my cock until you are completely empty. Then you're going to turn the shower back on, soap up your behind, place both hands up against the wall and have your ass fucked.\"\n\n\"Ahh,\" she gasped inwardly and sharply at the instruction. An overwhelming sensation of nervous excitement and fetishitic carnality surged through her body.\n\nShe was aware of his fetish for urination through previous exploratory conversations, though the concept was still somewhat alien to her. She had never even considered it as an erotic act until the topic came up, let alone be moments away from performing it.\n\nIn the days following his admission she pondered on it. She self-educated by visiting various pornographic websites and explored the fetish. While she didn't fully understand the eroticism behind it she was intrigued enough to try it. Ultimately she decided that unless she explored it with him, she would never know whether she would enjoy it or not. The act didn't repulse her at all and the knowledge that she would be fulfilling his desires was all the motivation she required.\n\nTaking a deep breath she stroked his cock one final time and adjusted her feet into position. Her hands and arms rose just above shoulder height and she pressed her palms onto the shimmering black tiles in front of her.\n\nClosing her eyes, she turned her attention to the feeling of fullness in her bladder.\n\nShe stood for a moment waiting to release but nothing happened. Her heart pounded in her chest.\n\n\"Come on girl!\" she said in her mind, willing herself on internally.\n\nShe had never considered that stage fright might be a factor as she tried to calm her excitement. \n\nShe squeezed her eyes tightly and willed her body to release onto his waiting member, knowing the unadulterated pleasure it would bring him. She could hear the residual dripping of the water from the shower head and made an attempt to synchronise her own bodily function with it.\n\nHe stood behind her stock still in patient longing. His cock thronged and ached for what was to come.\n\nHis hands restlessly gripped at her hips. His fingertips pressing downwards into her skin to reassuringly will her along.\n\nHer body relaxed and the first few small drops escaped from between her delicate folds. He felt them drip onto his enlarged member which caused him to involuntarily twitch. His cock sprang upwards and slapped against her pussy causing a small burst of water to escape from her. \n\n\"Ahhh.\" she exuded. \n\nThat was the release she had needed. The small burst of escaping fluid broke her proverbial seal and her body relieved itself of the tension.\n\nA gush of water erupted from between her legs with force as she released her shower onto his waiting cock. The stream was direct and landed just underneath the hood of his erection, dousing it down to the tip. A faint hiss came from her nether region as she expelled.\n\nHer water lashed at him vigorously. He felt a warming sensation envelope his length and he threw his head backwards as a pleasure akin to euphoria overcame him. His cock tensed and twitched uncontrollably between her thighs as she cascaded.\n\n\"God!\" he exclaimed.\n\nHis moans of pure pleasure echoed against the confines of the cubicle.\n\nHearing his enjoyment she slightly arched the small of her back downwards and pushed her behind backwards into him. She removed a hand from the tiled wall and moved it between her legs.\n\nHer palm reached the underside of his shaft as her fingers curled round its length. She slowly stroked and pleasured him as her shower continued to exit her body. The warm liquid drowned his cock and now her hand in unison. She felt wonderfully dirty masturbating him as the water trickled through her fingers and down onto the cubicle floor.\n\n\"Fuck!\" came his instinctive response.\n\nShe controlled her body and ejected the final gush onto his cock while continuing to pleasure him. Her water splashed upwards from his member and trickled slowly down the inside of her thighs. The sensation was far from unpleasant and she was somewhat taken aback by how much she was enjoying this new act and the feelings it brought.\n\nHer pussy excreted her arousal as the combination of fetishist act, the cubicle setting, her still simmering orgasm and his enraged cock all collided to create an experience which was far more erotic than she could ever have imagined.\n\n\"Wow!\" she muttered to herself under her breath.\n\nHer stream slowed to a trickle as the last remnants of her shower escaped her pussy. His cock pulsed and jolted with pleasure, completely soaked in her water. The final drops were met by an almost exhausted moan of ecstatic joy from him as he stood behind her.\n\nLowering her body, she once more pressed her sodden pussy down onto his length and gyrated her hips backwards and forwards across his length. Her palm pressed upwards, enclosing his dripping cock against her divinity. She rubbed her drenched clit against the solidity of his member, savouring the sensations.\n\n\"Mmmmmmmmmm!\" he moaned as he exhaled deeply.\n\nShe smiled to herself, basking in the moment, and then turned her head to look at him. His face was flushed and she could very evidently see that she had given him an immensely pleasurable experience.\n\n\"How did I do?\" she mischievously asked, shooting him a wry, playful grin.\n\n\"Fuck! That was perfect goddess. I hope you enjoyed it as much as I did.\"\n\n\"Mmhmm!\" she responded eagerly, still smiling. She almost sounded surprised with herself and was taken aback by how much pleasure it had given her too.\n\n\"I'm soaking and not just from the showers. We've definitely got to explore this more!\"She continued.\n\n\"Good girl.\" he said to her thankfully.\n\n\"Turn the shower back on.\" he softly commanded.\n\nDutifully she obliged and reached for the chrome dial. She twisted it to the 'on' position and the large shower head above them resumed its flow.\n\nThe warm water poured down onto the both of them, she rinsed her hand and cupped between her legs to clean up any remaining trace of her release. \n\nHe removed a hand from her waist and stepped backwards, removing his penis from between her thighs. His hand travelled down her backside, over her luscious cheek and reached underneath. He slid two fingers across her vaginal opening and revelled in her extensive state of arousal.\n\n\"Mmmm, you're soaked goddess.\" he commented.\n\nWith that he slid the same two fingers inside her pussy and began to pleasure her.\n\n\"Oohh god that's good. I need you inside me.\" she proclaimed.\n\nLeaning into her ear he delivered his next instruction.\n\n\"Soap up your pouf and stroke my cock. Clean off your filth.\" he delivered, emphasising the word 'filth' in such a way that made her feel unbelievable naughty.\n\nWithout response she began in earnest. Taking the white pouf in hand she applied generous amounts of gelatinous soap. Reaching around her side she fumbled briefly to find his cock. It was still incredibly hard from her shower.\n\nShe took him in hand and messaged up and down his shaft, ensuring the slick suds reached every inch. He was so stiff and so aroused that she became overwhelmed with desire to have him inside her.\n\nWhile she stroked he removed his fingers from her sodden pussy and traced them upwards to where her tightest of holes was waiting. He pressed both fingers against her ring and fought the natural resistance of her body. \n\nSince it had only been a matter of hours since her ass had been fucked, she was still relatively pliant and mostly welcoming to the intrusion.",
        "Her moistness coated his fingers and now subsequently her ass. He was using her own excretion to lubricate her. His fingers breached the contracted orifice and slid inside her with only a little resistance.\n\n\"Fuuuuuck!\" she groaned. \n\nShe increased the speed of her strokes and danced the soapy pouf over the tip of his cock causing it to spasm with gleeful excitement.\n\nHis fingers delved deeper into her backside then retreated. He spent a few moments repeatedly inserting his digits into her ass creating the suppleness he required for when his cock entered her. Just as the tips left her behind, he circled her tight ring three times in succession to ensure she was suitably moistened and ready to be penetrated.\n\n\"Hands against the wall.\" he commanded.\n\n\"Yes sir.\" she replied instantly. Shuffling her legs apart to touch the edges of the cubicle she dropped the pouf to the floor and placed her hands back at shoulder height against the jet black tile.\n\nArching her back she pushed her ass out towards him. The crease of her behind parted just enough to display the delicious contours of her pussy, her sodden entrance and her freshly lubricated ring.\n\nShe was a sight to behold as the water from the shower lashed over her naked skin. Her velvet hair took on a much darker hue when wet and it matted to her back almost reaching her lower lumbar region.\n\nHer pert ass jutted outward towards him, glimmering with water under the subtle glow of the bathroom light.\n\nHe marvelled at her sultry beauty for a few moments then wrapped his hand around his soapy cock. He stroked slowly down his length, covering his fingers in the refreshing cleanser. Reaching the same hand out towards her waiting hole, he circled her opening and lightly dipped a finger inside, down to the first knuckle to lubricate her further.\n\nReturning his hand to his cock, he masterfully guided it towards her waiting behind and perched the tip at the entrance to her glorious ass. Her ring flared with anticipation as she felt the end of his cock press against her tight hole.\n\nShe felt so ready to be fucked. The desire to have him inside her reached a fervour which surged throughout her entire body. Her pussy ached, her nipples were hard and sensitive and her skin was alive with sensation. Her body screamed for penetration. \n\nWith his position primed, he gripped her hips with both hands and very gently began to pull her body backwards onto his waiting member. The head of his cock pierced her ass and she let out a guttural groan of sheer pleasure.\n\n\"Aaaaaaaaaaaaaaaahhhhhhhhhhh!\" she cried ecstatically.\n\nHer tight, lubricated hole opened to accept the intrusion; fiercely wrapping it's musculature around the head of his cock. He slid the head inside and stopped, allowing her time to acclimatise to the penetration and for her body to accept him.\n\nShe recalled his instruction from a few hours prior and inhaled deeply to help relax her body. He stood perfectly still after initiating the penetration and waited for her to take the reins. He knew she had to take him at her own pace.\n\nShe steeled herself and began to move backwards onto his cock. His length pushed into her ass much easier than before. She had already been fucked once this evening and her hole had a suppleness to it making his insertion much smoother.\n\nThe insertion was indescribable. Her body felt fulfilled and nurtured and her desires were finally being attended to.\n\nHaving already taken two thirds of his bulging cock into her backside with relative ease, she stopped once more to allow her muscles to relax. \n\n\"My god this feels even better than before!\" she joyfully exclaimed.\n\nShe rested for a moment of two before readying herself once more. The discomfort was slight and the pain was far less than the first time he was inside her ass. Within seconds the uncomfortable feeling had morphed into the purest pleasure. The tension in her ring subsided and she felt a rush of indescribable enjoyment shoot through her lower body. Taking one last, deep breath she pushed herself backwards and devoured the remaining few inches of his cock until her cheeks pressed against his hips.\n\nHe was inside her ass completely.\n\n\"Good girl.\" he complimented.\n\nThe water from the shower continued to beat down on their now conjoined bodies. Her palms pressed into the tiled wall and she pushed her ass back into him. She felt warm and divinely tight.\n\nHis hands grasped her hips and he slowly retracted his length from her backside, leaving just the head. The soapy suds acted as a wonderful lubricant and his retraction was slick and effortless. With one full, forward movement he slowly plunged his cock back into her ass until his hips met her cheeks.\n\n\"Aaaaaahhhh!\" she expressed.\n\nOne more full retraction and insertion followed.\n\n\"Ahhhhhhhhhhh!\" she cried again.\n\nHer body was fully accepting of him and provided very minimal resistance. It had only been a few hours since he was last inside her and it showed. Her tight ring pulsated and contracted around his cock, rushing pleasure to him. She felt full and vulnerable in the most wonderful way possible.\n\nAfter a few gentle insertions he increased his force, driving the length of his cock into her ass. His pace quickened and her groans of pleasure became more audible. \n\nThe smacking sound of wet skin punctuated the air as his hips crashed against her cheeks. The water from the shower cascaded down her back and into the crevice of her behind. \n\nBucking her hips to meet his thrusts she became more animated and vocal.\n\n\"Fuck me! Fuck me! Harder!\" she bellowed. Her carnal need to be used by him overtook all other emotions. She was completely lost to the sensations she was experiencing and revelled in the act they were performing.\n\nHer orifice clamped around his cock with each deep thrust, caressing every inch of skin and nerve ending as he drove into her.\n\n\"Ahhhhhh!\"\n\n\"Ahhhhhhhhhh!\"\n\nAHHHHHHHHHH!\" she cried.\n\nThe penetration in her backside was intense. Far more intense than their careful and considered approach of a few hours prior. The pain was more pronounced with every vigorous thrust, though as soon as it manifested it morphed into a pleasure of even greater intensity.\n\nHolding her hips he charged into her backside. The sensations pulsating through his cock as he entered and re-entered her ass were astonishing. \n\n\"Ahhhhh!\"\n\n\"Ahhhhhh!\"\n\n\"Ahhhhhhhhh!\"\n\n\"Ahhhhhhhhhhh!\" she moaned. \n\nThe longer he was inside her, the more welcoming her ass was becoming to him. Each thrust seemed to accentuate the pleasure even further and increase its intensity.\n\nHe drilled into her with dominance and power and felt his orgasm begin to build.\n\n\"Oh god! Oh god! Oh god!\"She wailed, completely enraptured by her anal sensations.\n\nHe reached a hand upwards and grabbed her breast. Pinching her nipple hard and sending shockwaves of pleasurable pain through her.\n\n\"FUCK!\" she screamed.\n\nHis hand returned to her hip which he gripped tightly and forcefully drilled his cock into her accepting behind. Her cries of pleasure aided his charge towards orgasm and he felt the rush of release just a few moments away.\n\n\"AHHHH!\"\n\n\"AHHHHH!\"\n\n\"AHHHHHH!\"\n\nDeeper he drove into her backside and she began to lose composure, in her prone position she could barely move within the confines of the shower cubicle. Her ass clenched and clamped onto his cock as her pleasure became insurmountable. She rocked and gyrated her hips in unison with him to maximise his enjoyment.\n\n\"Fuck!\"He boomed as the smacking sounds echoed in the enclosure.\n\n\"Ahhhhh!\"\n\n\"Ahhhhhhh!\" her screams continued.\n\nWith a few final penetrating thrusts his cock spasmed inside her and erupted. Hot ejaculate shot from his tip and filled her backside like a shotgun blast. The base of his cock pressed hard against her cheeks as he came, wanting to deposit his seed as deeply as possible.\n\n\"Oh my god!! FUCK!!\" she screamed as she felt the rush of warm come fill her internally.\n\nAs the last drop of his seed filled her ass he retracted his cock. Before her ring even had time to contract back to its natural state he spun her round and delved his hand between her legs. He gripped a handful of her violet hair, pulled her head backwards and kissed her passionately, darting his tongue into her mouth. His fingers quickly found her clit and he quickly massaged them before moving further round and plunged two fingers into her sodden pussy.\n\nShe muffled ecstatic moans of pleasure through the kiss as her body quickly surged towards orgasm. \n\nHe finger fucked her moist hole with great speed and intensity as her moans increased dramatically.\n\n\"Mmmmmm!\"\n\n\"Mmmmmm!\"\n\n\"MMMMMMMM!\"\n\nHer stunned state had her body completely at his mercy. She lost all semblance of control as her body began to violently shudder as her orgasm ripped through her pussy. His fingers pounded into her vagina as the base of his palm bluntly smacked against her engorged clit. She felt his ejaculate seep from her ass as her whole body was shaken to the core by her climax.\n\n\"AAAHHHHHHHHHHHHHHHHHH!!\"\n\nHe relinquished his kiss and she screamed at the top of her lungs as her intense orgasm reached its peak. He felt the muscles of her pussy violently squeeze, spasm and contract around his digits as she released. Her breathing became a rapid panting and her chest rose and fell quickly, causing her breasts to press up into his skin. Her legs gave way under the intensity and for a moment she was only held upright by his internal massage.\n\nHer pussy gushed into his palm as she climaxed, drenching his hand with her own unique juices. His fingers slowed to a gentle rocking as her head fell backwards in sheer bliss and his come now dripped down her inner thigh making her feel wonderfully filthy.\n\n\"Oh my god!!\" she expressed during a deep exhale of breath.\n\nHer breathing slowed to a laboured rate as she regained her composure. She looked at him with a dazzling desire and started deep into his eyes.\n\n\"Holy fuck! That was incredible!\" she expressed.\n\nHe kissed her once more on the lips and caressed various inches of her skin which still electrically tingled with residual climax.\n\n\"My pleasure goddess.\" he replied simply.\n\nHe wrapped his arms around her waist to embrace her and moved a hand down to caress her backside. She felt the thick liquid of his climax seep from her backside as she threw her arms around his neck and kissed him lovingly. \n\n\"I can't wait for what's next.\" she whispered.\n\n...............................\n\nTo be continued."
    ],
    "authorname": "OutlawedSubversion",
    "tags": [
        "anal",
        "shower",
        "piss",
        "pissing",
        "golden shower",
        "ass",
        "fetish",
        "bdsm",
        "fingering",
        "urination"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/anal-exploration-violet-02"
}