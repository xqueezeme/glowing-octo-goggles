{
    "title": "Westrons Pt. 08",
    "pages": [
        "I had an independent command. A regiment of my own. Countess Aneli was right: there was no shortage of recruits. After Tonol, and our victory parade, hundreds of women wanted to join up.\n\nCaptain Chardeia, one of the Company Commanders, had distinguished herself at Tonol. With Aneli's approval, she was promoted to Major, and would act as my second-in-command. Chardeia was a bit stuffy - she didn't appear to have a sense of humour - but there was no doubting her courage.\n\nWith the help of our Captains and sergeants, we selected the 100 best marksmen - markswomen - and formed a first company of sharpshooters. Kanitz had promised me rifles, and a soon as they began to arrive, I issued them to my 1st Company.\n\nMuskets are smoothbores, like a pea-shooter. When the bullet is expelled from the barrel, it can go anywhere. A rifle has grooves on the inside of the barrel; they literally spin the bullet, like a tight spiral on a football. Much more accurate.\n\nIn fact, there's not much value in aiming a musket. Point a lot of them at the enemy, and let fly. A significant part of a volley's impact is the effect on your enemy's morale: it can be absolutely terrifying.\n\nThere's a cumulative effect, too. After standing and facing several volleys, even veteran soldiers start to wonder about the law of probabilities. How long can it be before one of those bullets hits her?\n\nBut rifles are more accurate, and have a longer range. I had plans for my sharpshooters.\n\nThe remainder of my veterans were distributed in two ways: I formed an elite 2nd Company, and then used the rest as corporals and file leaders, to help integrate and train all of the new recruits.\n\nLangoret did the same. I never took a step without discussing it with her first. She talked me out of one or two innovations, but generally she agreed with what I wanted.\n\nOur iron ramrods began to arrive, thanks to Kanitz. Nonetheless, I wrote her letters, to keep her abreast of what we were doing, but also to badger her for more money.\n\nCountess Aneli had already come up with much more coin than she'd promised. I didn't know how she was doing it. We were also camped on her estates, and the two regiments were rapidly eating her out of house and home.\n\nThat gave me another idea, though. I broached it to my colleague.\n\n- \"I think we should march to your estate.\" Langoret was a Countess in her own right, and just as wealthy as Aneli.\n\n- \"That's almost 200 leagues!\" she said.\n\n- \"I know.\"\n\nThe veterans didn't grumble too much. \"Here we go again.\" they said. It was like the race from Tonol to Cercen all over.\n\nThe new recruits were astonished. If their seniors weren't objecting, though, they weren't about to complain. It was hard for them, but they kept up.\n\nIt was a nightmare for me. I made it on determination and willpower alone. I needed a week to recuperate, on Langoret's estate. We ate her livestock, for a change, and gave Aneli a short respite.\n\n- \"You know,\" said Langoret, \"this has been a bonding experience for the veterans and the new recruits. You're very clever, Cook.\"\n\nDarned right I was - especially since I hadn't expected that.\n\n***\n\nThere were times when I wished that I'd been more of a hands-on technician. I'd read time-travel stories, and enjoyed them. Somehow, the hero always knew how to build a laser pistol with odds and ends he scrounged up, or could accurately predict the date of the next eclipses, solar and lunar.\n\nUnfortunately, that wasn't me. I understood the principles behind some of our modern gadgets, but when they broke, we didn't fix or repair them: we just replaced them. If I'd ever wanted to know how to build a laser pistol, or memorize the date of the next eclipse, I could have learned it in Sleepread.\n\nInstead of becoming an engineer, I'd studied military history. Here and now, I thought the Westrons needed me a lot more than they did a technician. Besides, what could a techie do without magnetics, or plastics, or extremely rare metals? Was there even any accidentium on this planet?\n\nThen there were the social costs to consider. Sure, mass production of muskets would probably help the Westrons win this war. Repeating rifles would be awesome, too. But what about the next war? Or the one after that?\n\nMass armies could lead to mass destruction.\n\nIn the Seven Years War (1756-1763), they had technology very similar to what the Westrons and Crolians were using. The armies were small, and slow-moving. Non-combatants got out of the way - although I'm sure that thousands were killed or rendered homeless.\n\nThe Napoleonic Wars used much the same weapons, but with massive armies (about 800,000 combined at the 3-day Battle of Nations in 1813).\n\nMillions of civilians died in World War One, a century later. And the Second World War killed tens of millions.\n\nWith that in mind, I wasn't too disappointed that I couldn't revolutionize Westron technology.\n\n***\n\nIn one sense, Tallia was absolutely useless as an aide-de-camp. She had no leadership skills whatsoever. I would never be able to have her replace an injured officer, or lead a small group of soldiers in any kind of special task.\n\nShe had a hard time mastering our marching pace, too. I could only do it on guts and sheer willpower. Tallia was suffering.\n\nBut as an executive assistant, she was absolutely amazing.\n\nShe kept my maps organized, and knew exactly where each one was, if I wanted to consult them. She found food fit for humans, so that I didn't have to live on a 90% meat diet.\n\nTallia also found me some natural scents. It was odd - like putting on cologne every morning. But the senior officers all noticed, and they thanked me for it. Apparently, my natural odours were distracting for them.\n\n- \"How did you know?' I asked Tallia. She just grinned.\n\nTallia had other skills, which she demonstrated early on. Langoret and I were discussing tactics, when she admitted that her 1st Company - modelled on mine - weren't even remotely ready.\n\n- \"Only half of them have rifles, Cook.\" said Langoret. \"And we haven't practiced enough. I don't want to use up all of the powder.\"\n\n- \"Pardon me, Colonel.\" said Tallia. \"You have 61 rifles. And we have more than enough powder, if you would like to practice. Six more barrels arrived today.\"\n\nLangoret wasn't the only one who was amazed. I asked Tallia to find us a tally of all the extra gunpowder - that is, what we hadn't already issued to the soldiers.\n\n- \"31 barrels.\" she said, without a moment's hesitation.\n\nLangoret slowly turned to look at me. I could only shake my head.\n\n- \"Tallia - how do you know that?\" I asked.\n\nShe lifted her chin. \"Why would I not know?\" she retorted.\n\nShe had an encyclopedic memory. That alone was impressive. But Tallia could summon up that knowledge before you could snap your fingers. I couldn't for the life of me figure out how she did it.\n\n\"I've always been able to do it.\" she said.\n\n***\n\nI had 30 dummies - scarecrows, really - set up. Then I formed up a company, about 75 yards away, in a two-deep line. Then I gave the order to fire a volley.\n\n- \"Reload!\"\n\n- \"Fire!\"\n\nI had the whole company advance, to see how many of the scarecrows they'd hit.\n\nTwo.\n\nGranted, one of the dummies had been hit twice - but that was it: three hits, out of over 150 shots. Even that, I thought, was a bit lucky.\n\nI couldn't tell the troops what I'd learned in Sleepread aboard the Halygon: that in actual combat, the results were even lower.\n\n- At Chotusitz, in 1742, the Prussians expended 650,000 cartridges, to inflict 6,500 casualties on the Austrians (killed &amp; wounded). That's 1%.\n\n- Napier, in his History of the Peninsular War, said \"... not one out of 300 balls expended, took effect.\"\n\n- At Vittoria, in 1813, British infantry inflicted one casualty for every 800 rounds fired\n\nI couldn't tell our soldiers those stories. So I tried to show them. We repeated the experiment with every single company of both regiments, except for the rifles. The results were remarkably similar: between one and four hits for two volleys.\n\nThe troopers got the point. If they spread out, as skirmishers, the enemy line was unlikely to do them much damage - especially if they kneeled to shoot, which would make them even harder to hit.\n\nThere was another advantage to this approach, which our soldiers were quick to grasp. The very first volley fired by a unit was always their most effective. The muskets had been carefully loaded.\n\nAfter that, thick smoke, careless or hurried loading and weapon malfunctions decreased the power of the next volleys. Officers were accustomed to hold their fire, and save the first volley until they could get close enough to the enemy to do the most damage.\n\nBut would they have the patience to do that while our skirmishers were tormenting them?\n\n***\n\nIt was going to happen, eventually. I was far too shy to mention it, but Langoret brought up the subject herself.\n\n- \"Cook, I will be going into hemmer in a week or so.\"\n\n- \"Oh? I mean - you can tell, this far in advance?\" I knew very well that she probably could; she'd just caught me off guard.\n\n- \"Of course.\" She looked at me oddly. \"I mentioned it because I wanted to ask you a favor: would you stay away, while it lasts?\"\n\n- \"Certainly.\" I said. \"As you wish.\"\n\n- \"I will be in my command tent.\" said Langoret. \"I can send an aide, if I need to communicate with you. And you can send Tallia if you need to contact me.\"\n\n- \"Agreed.\"\n\nLangoret could tell that I was trying to keep it professional. She smiled. \"I have a suitor. We may marry ... after the war. He would understand, if I strayed, but I find that I have no desire to. Also, I would not want to fall pregnant. Not now.\"\n\n- \"I understand. Thank you for telling me.\"\n\nYes, I was mildly disappointed. Langoret wasn't as striking as Themis, but she was attractive. She was intelligent, and brave, too - qualities I find very appealing.\n\nBut I was also beginning to think of her as a friend, so of course I'd respect her wishes. It might have been awkward, afterwards, too ... I went to find something to do, to take my mind off the thought of Langoret in heat.\n\nI stayed well away from her command tent. She sent an aide to see me, twice. I sent Tallia back, to coordinate a joint march, involving both regiments. Tallia was gone quite a long time.\n\n- \"What took you?\" I asked, when she returned.\n\n- \"She wasn't at her command tent. She was at the Countess' manor.\" said Tallia.\n\nI had to laugh. Langoret trusted me - but she'd taken the extra precaution of moving, just in case.\n\n***\n\nWeeks later, Countess Aneli invited the two of us for a meal. Our aides ate in the kitchen; Langoret and I were served in the Countess' dining room.\n\nShe had questions about our progress, and our plans for the immediate future. Halfway through the dinner, though, she changed the subject rather suddenly.\n\n- \"I will probably be in hemmer in a sevenday or so.\" she said, as calmly as if she'd been describing the weather. \"Could I prevail upon you, Colonel Cook, to join me when it comes?\"\n\nLuckily, I didn't have any food or drink in my mouth, so I didn't spit anything across the table. I tried to glance at Langoret for help, but she was keeping a perfectly straight face.\n\nIt would have felt rude, somehow, to decline. Besides, what choice did I have? Hell hath no fury, and all that ...\n\n- \"I would be honoured, Countess.\" I managed to say.\n\n- \"Oh, good.\" she said. \"Kanitz' aide said that you were exceptional. I'm looking forward to it already. Will you have another cutlet, Langoret?\"\n\nAnd that was that. I'd just agreed to have sex with the Countess. Not once, or twice, either, but multiple times over the course of several days.\n\nI tried to sneak a few looks at Aneli, but there were only three of us at the table. She saw me looking - well, checking her out, really - and smiled.\n\nI had no idea of her age. She was no great beauty, with her pouty lips and pug nose, but her big blue eyes were attractive enough, and she did have that spectacular mane of wavy hair, the colour of brass.\n\nShe was short, and a bit round. Well, I was going to learn a great deal more about my employer - and we'd be seeing a lot more of each other, too.\n\nAfter the meal, the Countess promised to send for me when her time arrived. We thanked her, and began the walk back to camp. Tallia and the other aides followed a few paces behind.\n\n- \"That was ... unusual.\" I said, quietly. \"Wasn't it?\"\n\n- \"Somewhat.\" said Langoret. \"She probably should have asked you privately, but Countess Aneli has always had a reputation for being ... outspoken.\"\n\n- \"So this isn't ... strange? You think I should go.\"\n\n- \"Of course you should go, Cook. You said you would.\"\n\n- \"I know. It's just - I don't know much about the Countess, or her ... tastes.\"\n\n- \"She'll tell you, if you can't guess.\" said Langoret, with a smile. \"But I don't imagine you'll have any trouble. 'Exceptional', did she say? Now I wonder if I made a mistake when I asked you to stay away.\" She was teasing me.\n\n- \"Don't you start.\"\n\nLangoret laughed aloud, and patted me on the back.\n\n***\n\nI didn't tell a soul, and I doubt that Langoret did, but somehow, every soldier in both regiments seemed to know where I was going, when the Countess sent me her invitation. I suppose her servants talked - or Aneli herself did.\n\nIt was like the walk of shame, only before the deed, rather than after.\n\n- \"Go get her Colonel!\" I heard someone shout.\n\n- \"For the honour of the regiment!\" called another.\n\n- \"Don't let us down!\"\n\n- \"Don't let it down!\"\n\nMany others shouted encouragement; some offered suggestions, or advice. I'm sure that I was blushing fiercely long before I reached the Countess' manor.\n\nShe was waiting for me in a parlour, lying on a couch - completely naked.\n\n- \"I thought we could start in here,\" she said, \"and then have a meal afterwards - to help you replenish your strength.\"\n\nI decided to enter into the spirit of the thing. Why not? \"Or I could simply make a meal of you.\" I said.\n\n'Mmm ...\" she liked that idea. Aneli was arranged in a classic odalisque pose. I was a little surprised, and very pleased with the view she offered.\n\nAneli wasn't actually fat at all; she had strong legs, and thick thighs, and her waist wasn't narrow, but there was nothing unappealing about the shape she was displaying for me. In fact, I felt a surge of erotic energy. I was going to fuck this woman. Repeatedly.\n\nI could smell her arousal, and almost feel her lust. I stopped just inside the parlour door, and slowly began to remove my clothing. The breeches came off second last; I saved the red sash for last.\n\n- \"Oh - well done.\" she said. \"You could give lessons.\"\n\nI advanced on her slowly. Aneli lay back on her couch, almost as if she expected me to mount her immediately. As she lay back, her impressive breasts flattened somewhat, and spread to either side.\n\nInstead, I knelt beside the bottom of her couch, and stroked her ankle. I lifted her leg, and began to kiss my way upward, along the underside of her leg.\n\n- \"Oh, my.\" she said.\n\nWhen I reached her ass, I blew lightly on her hyper-sensitive skin. Then I flicked my tongue across her lower lips.\n\n- \"Oh - Queens and Princesses!\" she moaned.\n\nI hadn't set out to tease her, but Aneli seemed to like it, so I tormented her just a little bit. By the time I inserted my tongue inside her, she was squeezing my head with those powerful thighs.\n\nI didn't rush her at all. Airta and Themis had taught me that we had all had night - if not the next few days. Finally, I slid my tongue over her clit. She shuddered, and came.\n\n- \"Cook - that was ... You have to fuck me, now. But we are definitely doing that again!\"\n\nI crawled up, between her legs. I kissed her, a moment before my cock slid into her super-slick pussy. She grunted, and hunched her hips to get me deeper.\n\n- \"Ah - you are a big one, aren't you?\" she said. Aneli certainly liked to talk.\n\nI sucked her nipples, as I began to stroke into her, in slow, deep thrusts. I wasn't going to last all that long, this first time, so I began to pick up the pace, and slammed it to her, quick and hard.\n\nAneli responded in kind, humping her hips up at me as I drove into her.\n\n- \"Ah!\" I grunted, as I felt my orgasm cresting, like a wave. \"Take it! Take it all - Countess!\" I spewed a load of semen inside her.\n\nShe held me tight, afterwards.\n\n- \"At this point, I believe that you can call me Aneli, when we are alone - and especially when you are inside me.\"\n\nShe disengaged, and sat up. Her heavy breasts changed shape; they looked like full waterbags, hanging beneath her. Aneli then knelt on the couch, and presented me her backside. She didn't need to ask; I was still hard, and ready for more.\n\nTo my surprise, her ass was exquisite: taut, shapely, and utterly irresistible. Her incredibly long hair was draped over back, and flowed over her flanks, like a brass veil.\n\nI entered her from behind. Almost immediately, I sighed. She was wet, and very hot, but still remarkably tight for a woman who had to have seen more than a few hemmers.\n\n- \"Big.\" she grunted.\n\nHer dorsal fur was thicker than either Airta's or Themis'. Aneli groaned when I ran my fingers through it.\n\nI found a steady rhythm, and thrust my erection inside her, as far as I could, before drawing it back until only the tip was still nestled between her nether lips.\n\nAneli was sliding her ass back at me, matching my pace and intensity. I parted the curtain of her hair, and reached under her to fondle a dangling breast.\n\n- \"You have - a big - root.\" she said, between thrusts.\n\n- \"Nice - to hear.\" I replied. \"You have - a great - ass.\"\n\n- \"I know. But people - usually - only - notice - my hair - or- my - tits.\"\n\n- \"They're - worthy - of - notice - too.\"\n\nShe came as I lightly pinched her nipple, just a moment before I flooded her with my second load of the evening.\n\nIt was still early.\n\n***\n\nWe had a light meal - to restore my strength, as she put it. From the way she was looking at me, I was tempted to ask for six dozen oysters.\n\nAneli loved to talk about sex.\n\n- \"Are there positions you haven't tried - that you'd like to? Can you do that thing with your tongue again? What do Pylosian women like?\"\n\nI got up from the table, and picked her up in my arms.\n\n- \"Bedroom.\" I growled.\n\nShe pointed, and I carried her there.\n\nI deposited her near the headboard, and climbed up behind her. Aneli braced herself, with both hands on the wall above her bed, as I thrust into her from behind. I grabbed handfuls of that surprisingly shapely ass, and fucked her hard.\n\nThen I reached under her arms, and cupped her breasts. They were big handfuls. When I switched one hand, and ran my fingernails down the fur on her spine, Aneli moaned, and came.\n\nI kept pounding her against the wall, until I came myself.\n\nAneli didn't have to work hard to coax me back to full readiness. She kissed me, and licked my cheeks, my chin, my neck, and then my armpits. The pressure of her great breasts on my chest may have helped.\n\nBut her scent was very potent. There was also something else - I couldn't put my finger on it, but the Countess was supremely desirable, and I was aroused at several sub-conscious levels.\n\nShe straddled me, and dangled her breasts just above my mouth. She shifted her shoulders, which swung her tits from side to side, slapping against my cheeks, or my chin. I tried to trap a nipple with my mouth.\n\nAfter five orgasms, she let me rest.\n\nI woke to find my growing erection in Aneli's mouth. I feigned sleep a little longer, to let her suck me for a while. Then I startled her by lunging off the bed, and flipping her onto her back. I went down on her, and tried my best to give her every sensation I could.",
        "She was happy to come that way, but immediately pulled me into the missionary position. My second (or third?) wind kicked in.\n\nA day later, my fourth wind was definitely gone. I don't know if Aneli took pity on me, or if she was tired out herself.\n\nI staggered back to camp, late at night. Tallia helped me to my cot, and covered me with a blanket.\n\n***\n\nThe next afternoon - I slept through the entire morning - Tallia had hot soup for me.\n\n- \"How was she?\" she asked, with a big grin.\n\n- \"Great.\" I was a bit shy, but I remembered how Tallia's whole family had been interested in the details of Airta's hemmer. Time to start thinking and acting like a Westron, I told myself.\n\n\"Countess Aneli has ... umm ... large appetites.\"\n\n- \"And large breasts.\" said Tallia, holding her hands well out in front of her chest. \"You must have enjoyed playing with them.\"\n\n- \"Ah -\" Okay, adopting more Westron attitudes was going to take me a little longer.\n\nShe looked down, at the gap between her hands and her own tiny breasts. \"Sometimes I wish that I was much larger.\"\n\n- \"Don't.\" I said. \"You're perfect as you are.\"\n\nOops. I hadn't meant that to sound flirtatious. Tallia blushed, and lowered her hands. There was a moment of uncomfortable silence. She broke it first.\n\n- \"The guns are here.\" she said. \"Your cannon have arrived.\"\n\nI was out of bed a moment later. Langoret was waiting for me.\n\nThere they were - six brand new 3-pound guns. As cannons go, these were pop-guns. But they were light enough to be pulled by a couple of soldiers. And they just might - I hoped - offset a little of our opponent's advantage in firepower.\n\n- \"They don't look like much.\" said Tallia.\n\n- \"Mobility first.\" said.\n\nTo my surprise, and delight, one of the Wole drivers who'd transported the guns to us was familiar to me.\n\n- \"Lebuc?\"\n\n- \"You remember? I am honoured.\"\n\nLebuc was the ox-cart driver who'd given me a ride from Frenet, and then found me another ride to get me to Cercen. His mustache was even more luxurious, and he was wearing a bright green vest around his portly frame.\n\n- \"How could I forget?\" I said. \"You did me a great service. And if ever I can repay it ... you have but to ask.\"\n\n- \"You've come a long way, Colonel.\" said the Wole.\n\nThat was when I remembered another of my projects - I had dozens, but this one was high enough, in terms of priority.\n\n- \"Would you share my midday meal, Lebuc? You and the other drivers?\"\n\nHe was taken aback, but recovered quickly.\n\n- \"We would be pleased, Colonel.\"\n\nThere are many ways to defeat your enemy: advantage of numbers, superior position ... and better intelligence.\n\nI was frustrated by how little we knew about what the Crolians intended. Themis had told me everything she knew about her hereditary enemies, but it hadn't helped me much, in terms of predicting what they might do next.\n\nBut the Woles knew both Westrons and Crolians. They travelled freely between the kingdoms, did business, and were relied on by both sides.\n\nI wasn't so crass as to ask if they'd be willing to spy for me. But Lebuc and his friends saw nothing wrong with telling me what they'd seen, or what they'd heard. Of course, they expected something in return; who doesn't?\n\nLangoret wasn't thrilled, at first, when I invited her to join us. But halfway through our meal, she began to see what I was after. By the end of our meal, she was in a state of disbelief.\n\n- \"They know so much.\" she said.\n\n- \"True. And we've only just begun to ask questions.\"\n\n***\n\nWe split the guns - three to each regiment - and practiced taking them with us on marches. A trooper could carry two of the 3lb shot without too much trouble. Two women could drag the little guns, though it took four to get them across rough terrain.\n\nWe were also fairly wasteful with powder, making sure that our riflewomen and our skirmishers got plenty of practice with our new weapons, and our new tactics.\n\n- \"You spend an awful lot of time working with the soldiers.\" observed Tallia. \"I didn't think Colonels did that.\"\n\n- \"Know your soldiers, and make sure they know you.\" I said.\n\n- \"Well put.\" said Langoret.\n\nI explained to Tallia that a commander was only as good as their chain of command. If the junior officers and the rank and file troopers understood what you were trying to do, they were more likely to implement orders correctly.\n\n- \"I see.\" said Tallia. She did, too. For someone with no military training and zero experience, she caught on quickly.\n\nI admired her intelligence, and her ability to adapt so swiftly - just as I also admired her slender form as she bent over the map table.\n\nIt was strange to have her know what I'd been doing at the Countess' Manor. Tallia had once again helped me pick the right flowers to send to Aneli - but I noticed that she didn't ask for any more details of the encounter.\n\nUnfortunately, my time with Aneli, far from sating me, only whetted my appetite for more. But I wasn't about to start visiting my soldiers when they went into hemmer - even if some of them might have appreciated it.\n\nThere was plenty of ribald talk, and I heard quite a bit of it, even firsthand. Sometimes I wondered if I'd been meant to hear it. It just wasn't worth the risk, though: if 2 or 3 soldiers would have welcomed my attentions, that was all well and good, but if just one felt that I was abusing my position, then I could jeopardize all of the trust and credibility I'd built up.\n\nMy thoughts kept returning to Tallia. She was lovely - and only 18. I was ... 25, I suppose (does stasis count?). The difference between us was considerably less than that between Vanova and me. Still, Tallia seemed awfully young.\n\nIf she went into hemmer, could I send her away? Or did the simple fact that she was here at all indicate that her parents knew what might happen, and were prepared to accept it?\n\n***\n\nWe took the troops on lengthy marches, dragging our little guns along, and blew off plenty of gunpowder as we practiced with cannon, rifles, and muskets.\n\nI spend my days explaining to the troops what we were trying to achieve, a company or a platoon at a time. Langoret did the same in her regiment.\n\nThen I was ordered to the capital. Langoret took over while I travelled to Cercen. Tallia came with me, in the company of our Inhaber. We rode in an ox-cart designed for carrying passengers.\n\nAneli was friendly and easy-going - but it seemed to me that no one would ever be able to guess that we'd rutted for three days straight only a few weeks ago.\n\nThere were no lingering glances, no intimate touches. Aneli wasn't at all shy, though; she could discuss the regiment's business for an hour, and then switch to the topic of sex.\n\n- \"If I'd known earlier what you could do ...\" she mused. \"I would have kept you locked in my cellar. Or perhaps not - your gifts should probably be shared.\"\n\nIt made me more than a little uncomfortable - especially with Tallia sitting next to me. I had to adjust, obviously. Sooner or later, I'd have to learn to think like a Westron, when it came to sex.\n\nIf I could.\n\n***\n\nI gave Tallia leave to spend with her family; she'd never been away from them for an extended period of time. I joined them for a meal, on our second night in Cercen. Most of the time, though, I was at the Palace.\n\nThis year's campaign against the Crolians wasn't going particularly well. The South was quiet, after Tonol, and would stay that way until the enemy could replace all their lost siege guns. But the news from other areas was less encouraging.\n\nKanitz kept me busy. I met gunsmiths and foundry workers, a Quartermaster and a wheelwright. The gunsmiths interested me most.\n\n- \"You know,\" I said, \"you could increase production dramatically if you could persuade these gunsmiths to take on more workers - even just a second apprentice.\"\n\nShe laughed. \"That won't happen, Cook. The apprentice sleeps in his master's house. He works for a roof a over his head, and his daily meat. But he fully expects to take over the shop one day - and probably to marry the master's daughter, into the bargain.\"\n\n\"If the gunsmith took on a second apprentice, his first apprentice would quit.\"\n\n- \"Hmm. I hadn't thought about it that way.\" I admitted.\n\nKanitz gave me a funny look, but then we moved on to other matters. She arranged for me to see my children again.\n\nAirta was holding Oscel and Caneia, one in each arm. But there was another child in a bassinet: a baby girl, with bright yellow hair, and sparkling blue eyes.\n\nHer mother's hair - and my eyes.\n\n- \"She'll be well looked after.\" Kanitz promised me. \"Her name is Tonola. People will think that she was named for the victory. But you know why her mother chose that name.\"\n\n- \"Does she - come to see her?\"\n\n- \"Almost every day. The Queen put Princess Maia Simonia in charge of the Palace nursery, among her other duties.\"\n\nWhat incredible people, I thought, again. What an incredible place.\n\n***\n\nKanitz spent quite a bit of time with me. Countess Aneli was present for about a quarter of our discussions. We covered the new weapons, new tactics - and I broached my plan for the winter, for the very first time.\n\n- \"You can't be serious.\" said Aneli.\n\n- \"No one campaigns in the winter, Cook.\" said Kanitz.\n\n- \"That's why it will work.\"\n\nKanitz asked me to stay behind, and I explained in greater detail what I had in mind. When we'd exhausted that subject, she brought up some other ideas I'd mentioned the very first time we'd met.\n\n- \"You have an amazing memory, Lady.\" I said. \"I'm impressed - and flattered - that you would remember such things.\"\n\n- \"Perhaps it's because you continue to raise such interesting subjects.\" she said.\n\nSome of my notions were too innovative for her; they would have required wholesale economic or social changes. But she was a visionary, of sorts, who could see the potential in some of my proposals.\n\nA few of my plans would give us only a temporary advantage; the Crolians could copy them, and use them against us. But I did have a few ideas exclusively suited to the Westrons.\n\n- \"We should continue this.\" said Kanitz. \"I have to meet the Queen for an hour or so. What about supper, afterwards? Here?\"\n\n- \"I'm at your disposal, Countess.\" Was I wrong, or was there a hint of promise in the look she flashed me? But I hadn't smelled or felt anything which suggested that she might be in hemmer - or even close to it.\n\n- \"Airta will show you where you can refresh yourself.\"\n\nThat meant a chamber pot and a wash basin. But I was happy to take advantage of them. Better than the camp latrine, by far.\n\nKanitz was a bit late, but she'd evidently washed and changed her clothes. She was wearing that damned sheath dress again, which did little to conceal the shape of her breasts, or her prominent nipples.\n\nAirta and another aide served us roasted meats, with a vegetable which reminded me a little of eggplant, onions shaped like leeks, and a variety of mushrooms (most of which were quite tasty).\n\n- \"This is wonderful, Countess.\" I said. \"Thank you.\"\n\n- \"You are very welcome, Cook.\" she said. \"Would you like to know what the Queen and I were doing, while you waited?\"\n\n- \"If ... you want to tell me.\"\n\n- \"Of course I do. I wouldn't have mentioned it, otherwise. There are factions, at court, Cook. There are some who believe that Maia Matila isn't fit to rule. But there are also those who believe that a male should not be allowed to command a regiment.\"\n\n\"Your friend Aneli had to listen to three separate proposals that she turn over command of her regiment to a Westron female.\"\n\n- \"Oh?\"\n\n- \"She was magnificent, of course. Aneli has a certain ... flair - wouldn't you say?\"\n\n- \"She certainly does.\" I agreed. The odds that Kanitz didn't know that Aneli and I had spent three days fucking were ... negligible.\n\n- \"She told them that it was her regiment, and that she'd choose a Penchen or a Wole to command it before she let anyone else tell her what to do.\"\n\n\"She also stunned everyone when she told them she was pregnant - and that you were the father. She ... added some details about your ... \"\n\n- \"Yes - I can imagine.\" I said, quickly.\n\n\"You should be proud, Cook. The Countess hadn't conceived in a number of years. She also rated the experience quite highly.\"\n\n\"Aneli silenced them, for the moment. That's not the same as winning them over. You've had a success, Cook - a brilliant success. But ...\"\n\n- \"But?\"\n\n- \"I won't lie to you. There are several influential women who believe that you should not be in command of a regiment.\"\n\n- \"Because I'm a male?\"\n\n- \"Male. Not a Westron. Too popular ...\"\n\n- \"Too popular?\"\n\n- \"Don't let it go to your head. The Queen had to address these requests that you be replaced. There are several people who believe that they could have done even better, at Tonol, had they been there.\"\n\n- \"Ah.\" I was familiar with the type - I'd met enough of them at AFOTA.\n\n- \"We need another success, of some kind.\" said Kanitz. \"I understand, it's not fair, to ask you to win us a victory, when you just did ... but there it is ...\"\n\n- \"Would the winter plan do it?\"\n\n- \"It might. But a failure would be ... very awkward.\"\n\n- \"Then we won't fail.\" I said.\n\n- \"I will be occupied for most of the day, tomorrow. Could we meet for supper again - in the evening?\"\n\n- \"I'm entirely at your disposal, Countess.\"\n\n- \"I like the way you say that, Colonel.\"\n\n***\n\nI spent the day with Tallia and Esyle, who wanted to 're-stock' the 'food chest', as Tallia put it. That meant following the pair of them about as they found bargains.\n\n- \"How is she?\" whispered Esyle, at one point, as Tallia haggled with a Wole merchant.\n\n- \"Fantastic.\" I replied. \"She knows where everything is - her memory is phenomenal ...\" I went on to extol the virtues of my aide. More and more, I was thinking of her as a miracle - some sort of gift from heaven.\n\n- \"Oh.\" said Esyle. She wasn't as impressed as I'd thought she'd be.\n\nTalley was grumpy, and the sisters quarreled. I was happy to get back to the Palace.\n\nKanitz had changed her clothes - it was another clingy sheath dress, though, which didn't help my concentration at all.\n\n- \"Do you mind, Cook, if we don't discuss military matters this evening? Or politics, for that matter - I've had both of them up to here -\" She held her hand up to her neck.\n\n- \"What would you prefer to talk about?\"\n\n- \"Tell me about Pylos. Your life there, music, people you knew ...\"\n\nThis was dangerous territory for me. I could bring up what I'd learned in Sleepread, and rattle off statistics. But Kanitz was very intelligent; she'd recognize it if I sounded like a textbook, or an encyclopedia.\n\nSo I began to describe people that she'd never meet, people that I knew, from AFOTA, mixed in with a few childhood friends. Kanitz began steering me towards the subject of my family.\n\nThat wouldn't do, either. I had a sudden inspiration, and began to tell her about a fictional family - the Allbetters, from a series of dramavids my mother had been addicted to.\n\n- \"You must have had your eye on a young woman ... or more than one.\" said Kanitz. This was safer territory. Westrons were fascinated by sex, and could talk about it all night.\n\nSo I told her about Bia and Long, the techs aboard the Halygon. I hesitated to say anything about Vanova, but the Countess was looking at me, so I began to describe my waitress-lover - probably the most important woman in my life before I'd come to this planet.\n\nKanitz was very curious about this aspect of my life. I was no expert on Westron females, obviously - but I began to suspect that the Countess might be approaching her hemmer.\n\nThere were signs: her eyes were bright, and her nipples were straining the fabric of her dress. She was also frequently touching her unruly hair, twirling the curls between her fingertips . But I couldn't smell anything, and it didn't feel like hemmer - from my limited experience. Perhaps she was still more than a week away.\n\n- \"Do you miss her?\" she said.\n\nI'd become distracted. She was asking about Vanova.\n\n- \"Ah - sometimes. But it's unlikely that we'll meet again. I mean, if I make a career here ...\"\n\n- \"You are making a career here.\" said the Countess.\n\n- \"Yes. I certainly hope so.\"\n\nCountess Kanitz smiled. \"Shall we go upstairs? The moons are close together.\"\n\nI didn't know quite what she meant by 'upstairs', but I followed where she led. Our path took us through some private apartments.\n\n- \"Yours?\" I asked.\n\n- \"Mine.\"\n\nShe had a balcony, with a wonderful view of the river, and the city. I was surprised by how dark Cercen was at night. No wonder people stayed indoors after dusk!\n\n- \"You can see the rapids, as well.\" She pointed, off to the right. I was standing to her left, so I had to lean forward to see.\n\nThat put me quite close to her. I could smell her hair, and ... her scent. I could feel her body heat. But there was no sign of hemmer about her.\n\n\"See them?\"\n\n- \"No.\"\n\n- \"Here.\" She squeezed herself in to the very corner of the balcony, to give me a little more space. Then she took my hand, and drew me closer.\n\n\"Lean out a little.\" she suggested.\n\nI did. The white water was a fine sight.\n\nBut there was something else, even closer, which monopolized my attention. Kanitz was backed into the very corner of the balcony, but she was facing me. Her hand still held mine.\n\nWhen I turned my head, our faces were only inches apart.\n\nI didn't understand the hows or the whys - all I knew was that I was inches away from one of the most beautiful women in the Westron Kingdom. She wasn't in hemmer - and yet the invitation was plain.\n\nI kissed her.\n\nIt was impossible not to compare. Vanova kissed with love. Airta, Aneli - even Themis - kissed with passion, carried away by their hemmer.\n\nBut Kanitz kissed with ... curiosity. She seemed to be exploring the possibilities, or cataloguing the sensations. Whatever it was she was doing left me weak in the knees. When we finally broke the kiss, we were still only inches apart.\n\n- \"Well, Colonel ...\" She looked me in the eye. \"Are you interested?\"\n\nI had to smile. Her memory for the things I'd said and done was phenomenal.\n\n- \"If the Countess thinks that it would be ... appropriate.\"\n\nShe led me by the hand, back into her chambers. She passed me a candle, and picked up another herself; she brought me to her bedroom.\n\nThis was decidedly odd. Unless I was sadly mistaken, we were about to have sex.\n\nBut how could she do this, if she wasn't in hemmer? Or was her hemmer so minimal that I couldn't even detect it? Never mind, Cook, I told myself. Enjoy the taste, and the texture - you can ask what kind of food it is afterwards.\n\nCandlelight does marvelous things for a woman's beauty. In Kanitz' case, it made her look spectacular.\n\nShe took hold of the hem of her dress, and in one sinuous move, lifted it over her head.\n\nI forgot to breathe.\n\nShe had nothing on underneath. Her skin was flawless, her complexion olive. That frizzy mop of dark hair, and her dark eyes ... yet she had the pinkest of nipples, perfectly seated on lovely breasts. Their size and shape suited her admirably.\n\nHer stomach was flat. Her hips swelled only slightly. Her legs were slender, and shapely. She had a triangle of thick pubic hair.\n\nI stepped towards her. Kanitz raised a hand to my chest, and stopped me at arm's length.\n\n- \"I'm not in hemmer, Cook.\" she said. \"Do you understand? I will need ... preliminaries.\"\n\nPreliminaries? What a lovely word for foreplay.\n\n- \"I understand, Countess.\"\n\nShe lowered her arm, and stepped closer, to press her body against me. But she buried her head against my chest.\n\n- \"When we are alone ... you can use my name, Cook. 'Kanitz' is a title.\"",
        "- \"Wenzla.\" I whispered.\n\n- \"Mmm ...\" she tilted her head up, so that I could kiss her.\n\nI treated her like my prom date. I kissed her, lovingly, inserting only the tip of my tongue into her mouth. I stroked her shoulder, and lightly ran my fingers down her arm.\n\nI caressed her back, lightly scratching her shoulder blades. To my surprise, she didn't seem to have a ridge of dorsal fur - only a little bit of hair.\n\nHer little ass fit my hands perfectly, though. Wenzla seemed to like that. She became the aggressor in our kissing; her tongue was chasing mine inside my mouth.\n\nHer breasts fit my hands very nicely, too. Her nipples were responding, so I bent my head and took one into my mouth. She gasped, but her hands went around my head as she pulled me even closer.\n\nI steered her towards the bed. I could feel her tense up.\n\n- \"Relax, Wenzla.\" I whispered. \"We have time, yet.\"\n\nI lay beside her, kissing her and stroking her luxuriant curls. When I caressed her face, I could feel her smile.\n\nThen I slid down the bed a little, and kissed and suckled at her breasts. But it wasn't until I trailed kisses across her stomach that she responded.\n\n- \"Mmm ...\"\n\nNow I could smell her. She was moist - but not drooling, as she would have been, if she'd been in hemmer. So I took my sweet time, and teased her fleshy outer labia with my lips and my tongue.\n\nWenzla ran her fingers through my hair as I licked her. Time no longer mattered. There was nothing else on my mind, except this incredible woman. I reached up to caress her breasts as I continued to eat her pussy. I could feel her beginning to lubricate.\n\nCountess Kanitz came on my face, with a stifled groan.\n\nI climbed up beside her, and held her in my arms, as she recovered from her orgasm.\n\n- \"That was ... wonderful.\" she said.\n\n- \"I'm glad you enjoyed it.\"\n\n- \"I can return the favor.\" she said. \"Or we can copulate.\" She put a hand on my chest. \"But ... you would have to pull out, Cook. It ... would not be a good time for the Queen's Chancellor to bear a child.\"\n\n- \"I understand.\" Hemmer or no hemmer, I was hard as a rock for Wenzla, Countess Kanitz. From the way she'd said it, I knew what her first choice was.\n\nI rolled atop her, and nestled the head of my cock against her pussy lips. She reached down to take hold of me, and pulled. I was careful, and went slowly.\n\nShe was wet, but awfully tight.\n\n- \"I'm ready.\" she said. \"Push!\"\n\nI did, and suddenly slid a few inches deeper.\n\n- Ah!\" she cried out. \"So good!\"\n\nI didn't immediately begin moving - I just enjoyed the sensation of being inside her, and waited for her to grow accustomed to it.\n\n- \"You are deliciously tight, Wenzla.\" I whispered.\n\nShe grinned. \"And your girth is ... interesting. Ah - now, I think, we can make love.\"\n\nIt didn't occur to me until much later, that she'd used a Pylosian expression - Terran words, really. Westrons said copulate, fuck, join, plow, couple ...\n\nBut when Wenzla began thrusting her pelvis at me, I forgot about linguistics. I went easy on her, at first, but she was the one consistently increasing the pace.\n\n- \"Ah! Yes!\" she said. But even in the throes of passion, she remembered to warn me. \"Outside! Don't forget - you have to pull out -\"\n\nI did, and ejaculated a massive load onto her. My first shot hit her just under the chin. The second and third coated her tits, and then I pumped a few more weaker jets onto her stomach.\n\nWe lay side by side, our limbs entangled. She was panting; I was breathing heavily, too.\n\n- \"How -\" I began. \"How is this even possible?\"\n\nShe kissed my chin.\n\n\"Wenzla. How ...? You aren't in hemmer.\"\n\nCountess Kanitz didn't respond.\n\n\"I don't understand.\" I said. \"Forgive me - but ... you don't have dorsal fur, either.\"\n\n- \"No, I don't.\" she said. \"Now you know my secret.\"\n\n- \"Your secret?\"\n\n- \"I'm a hybrid, Cook.\"\n\n***\n\n\"My father was Pylosian. His name was Owusu. Mother said that he had light brown skin, and was quite tall. That was virtually all she knew about him.\"\n\n\"I never met my father.\"\n\nShe looked at me, as if I might have known the man she was speaking of. Now I understood her lack of dorsal fur, and the crazy curls of her hair, so unique among Westrons.\n\n\"My first lover was Pylosian, too; had to be, since without hemmer I couldn't attract a Westron male. His name was Pratha, and he was very gentle. I bore him a son.\"\n\n- \"You have a son?\"\n\n- \"Yes. He lives with a foster family. His life will be normal - he'll be able to marry, and raise a family. It's only hybrid females who are ... alone.\"\n\n\"The only males we can hope to arouse are other hybrids. Even then, it's difficult to compete with a woman in hemmer. But there are hybrids, scattered about the kingdom. A few dozen. We're like the Woles, in a way: we pass largely unseen.\"\n\n\"I've had two other lovers, but we had to be very discreet. Neither was very satisfactory. Certainly no match for Pratha - or for you.\"\n\n- \"You had to be discreet?\"\n\n- \"It wouldn't do, would it, for Countess Kanitz - now the Queen's chancellor - to be revealed as a hybrid?\"\n\n\"So now you know my deepest, darkest secret.\" she said.\n\nShe was lying next to me, stark naked, even as she exposed herself metaphorically.\n\n\"And you must be wondering: why is she telling me this?\"\n\n- \"As a matter of fact, I am.\"\n\n- \"Well, I thought it would be only fair, if we are sharing our bodies, that we also share secrets. I've told you my biggest secret - now you can tell me one of yours.\"\n\n- \"One of? But, Countess ... Wenzla - I don't have any secrets.\"\n\n- \"You know, Cook, you're really not a very good liar.\" she said.\n\n- \"I beg your pardon?\"\n\n- \"You're not really from Pylos at all - are you?\"\n\n***** "
    ],
    "authorname": "AspernEssling",
    "tags": [
        "fantasy",
        "hemmer",
        "military history",
        "muskets",
        "rifles",
        "sexual mores and customs",
        "tactical innovation",
        "training",
        "war"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/westrons-pt-08"
}