{
    "title": "Alpha Killer Ch. 31-35",
    "pages": [
        "Bobby Meechum's POV<br >Sulphur River Pack House\n\nI followed my mate and my child into the Pack House as my Mom led her to the guest room. \"Bobby, to my office,\" my Dad sent.\n\nI stopped, looking at the closed door, then turned around and walked into the Alpha Wing and to my father's office. A T-shirt and basketball shorts were on the floor outside, so I shifted and put them on. I knocked on his door and went in. \"Welcome home, son,\" he said as he hugged me. \"Still playing puppy?\"\n\nI nodded. \"She's skittish, Dad. She's had a rough time of it, and it hasn't been over for long.\" I had talked to my Mom about it on the flight down, and I filled him in on what I had learned from her talks with Randall. \"Two weeks ago, she was being drugged and held as a prostitute,\" I finished. \"I'm amazed she's even functioning.\"\n\n\"She has strength, she will push through this. She has her child now, she will do it for him.\"\n\n\"I hope so.\"\n\n\"She needs her mate, Bobby.\"\n\nMy Mom picked this time to walk in. \"They're settled in. Phillip is sleeping and Tania is going to take a shower and go to bed. She's exhausted.\"\n\n\"Thanks, Mom.\"\n\nShe hugged me. \"You need to come clean on who you are, Bobby. She's not ignorant to what we are, she isn't a human who has to be eased into the knowledge of our true nature.\"\n\n\"I don't know if she's ready yet,\" I said. \"Is it so bad that she trusts my wolf and takes comfort in him?\"\n\n\"Of course not, son, but she should be taking comfort in her mate. The sooner, the better. You have a son to raise together, and she will need your help.\"\n\nHe was right. My wolf and I had already accepted Phillip as ours, and he was very protective of them both now. \"I'll shift for them in the morning,\" I said.\n\n\"Good. We'll keep the others away for now, and ease her back into Pack life,\" Mom said. \"It's going to be hard for both of them to adjust, but we're here for you along with the whole Pack. We are all happy you found such a strong and beautiful woman to be your mate.\"\n\nShe was right. My mate was the strongest female I knew, having gone through hell and survived. She was beautiful to me, scars and all. \"I'm going to grab some food then sit at the door in case she needs me.\" I hugged them both and went back out, down to the kitchen. I made myself a huge sandwich and chips, plus a tall glass of milk. When I was done, I walked back to the guest room and pulled my clothes off before shifting. I curled up, my back against the door, and went to sleep.\n\n\"No! NOO! PLEASE DON'T\"\n\nHer screams of terror work me up. I jumped to my feet but was unable to get in while in my wolf form. I quickly shifted, grabbing the doorknob and finding it locked. She was still screaming in terror, and Phillip had now joined her. I put my shoulder to the door and broke it down.\n\nShe was having a nightmare, she had rolled herself up in the sheets and was fighting to get free. I ran to her, ignoring her scratches and flailing arms as I pulled her into my chest. \"Shhh, it's all right, I'm here,\" I said.\n\nMy Mom appeared at the door, but I didn't stop rocking her and stroking her neck. \"Take Phillip please,\" I linked. She went over and picked him up; he was tired, but he calmed in her arms and she walked him out.\n\nShe finally stopped struggling and was now sobbing into my bare chest. My Dad looked in and I shook him off. I had this under control, and she didn't know him well yet. I kept talking to her as she calmed down. \"It's all right. Mom took Phillip back to her room, she's got him calmed down and he'll be asleep soon.\"\n\n\"Who are you,\" she finally said as she looked up into my eyes.\n\n\"Bobby Meechum. I'm Randall's younger brother.\"\n\n\"Hi Bobby, thanks for helping me,\" she said. \"I should be freaking out, I don't like men, much less finding a naked man in my bed.\"\n\n\"It's not the first time I've comforted you,\" I told her as I laid down next to her. \"I'm Snacks. I traveled up to Wisconsin with my brother.\"\n\nShe smiled. \"I thought those eyes looked familiar. You're a good friend and brother to be helping me.\"\n\nI let a breath out, gathering my courage. \"I'm more than a friend, Tania. I'm your mate.\"\n\nHer eyes got wide. \"I don't have a wolf, I don't have a mate,\" she said. \"You're mistaken.\"\n\n\"My wolf claimed you the first time he smelled your clothes,\" I said. \"You're my mate, Tania. I love you. I love Phillip. And I'll do whatever it takes to make you happy again.\"\n\nAlpha Clark's POV<br >Present day, La Crosse Pack\n\nTalia had called almost forty minutes ago, reporting the convoy of Suburbans filled with werewolves heading east on Interstate 90. I brought my other lookouts in, and soon we had our own convoy a mile behind them as they crossed the river. Now all I needed was the direction they were coming from to attack my Pack.\n\nWe kept the trail vehicles back, and I had people stationed along the road to watch for where they stopped. \"Alpha, they are turning in the main driveway,\" my lookout reported.\n\n\"Attackers are coming in the main entrance, all defenders move into position and ready the strips,\" I ordered. I jumped into my car along with the reserve force of warriors, all of them from my allied Packs. We drove out, stopping about a quarter mile up the wooded road and using our vehicle to block the road. Alpha Dan and the Winona Pack took the left flank, the Arcadia Pack stayed behind the vehicles with me, and the Genoa Pack warriors took the right flank. We formed an arc, setting up behind rocks and trees with our rifles.\n\n\"Standby the strips, twenty seconds out,\" I sent to my men. One of my men was hidden in the shrubs, right where the road was elevated three feet above the surrounding trees and swamp on a gentle left turn. The turn would keep them from seeing our vehicles until it was too late to stop. \"Everyone else stand by. Hold fire until instructed.\"\n\nThirty warriors took up positions behind the vehicles and trees, forming intersecting lines of fire towards the curve. I heard the caravan approaching and saw their headlights. When the lead vehicle hit the curve, my man pulled three spike strips across the road in rapid succession, then shifted and took off.\n\nThe strips did their job, blowing out the tires of the lead vehicle. It swerved to the right and rolled onto its side before hitting a tree. The second didn't fare much better. Its tires gone, it skidded to a stop with two wheels in the ditch. The other Suburbans would have done better, but the additional strips did their damage. In five seconds, all the attacking vehicles were disabled or stuck behind vehicles.\n\n\"Chase teams moving,\" my Beta said. I had men hidden in the woods, on the hillside, and they rushed forward into the firing positions they had prepared. A truck was already coming down the entrance road towards them, making sure no one could back up.\n\nI reached for the microphone on the PA system mounted on my truck. \"THIS IS ALPHA CLARK. YOU ARE SURROUNDED AND OUTGUNNED. PUT DOWN YOUR ARMS AND EXIT YOUR VEHICLES WITH YOUR HANDS IN THE AIR.\"\n\n\"Snipers, keep an eye on the doors. If anyone comes out with a gun, take them down,\" I reminded them.\n\nI looked through the binoculars at the Suburbans, disabled about fifty yards from our positions. There was panic in the cars; they were looking around at my men and the rifles, and it was sinking in that they had already lost.\n\n\"Alpha is in the last vehicle. He's pissed,\" my Theta said.\n\nI picked up the microphone again. \"NO ONE HAS TO DIE OVER THE LIES YOU HAVE BEEN TOLD. THE COUNCIL HAS ISSUED AN ARREST WARRANT FOR ALPHA HERANUS AND BETA JACK MEOFFE FOR THE KIDNAPPING AND RAPE OF AN UNDERAGE FEMALE.\"\n\nThis news sent the wolves in the vehicles into a panic. Some were holding their heads, fighting Alpha command. I tried again. \"BRING THEM OUT AND YOU MAY GO HOME. RESIST AND YOU ALL DIE. YOU HAVE ONE MINUTE.\"\n\nThere was a struggle in the lead vehicle; the back door opened, and a big guy was pushed out backwards. Another large man landed on top of him, and two more men jumped out and held the man down. \"DON'T SHOOT,\" the man said. \"This is Beta Jack. If you show me a warrant, I'll turn him over to you.\"\n\nI recognized him, it was Beta Samuel Kirk of the Eau Claire Pack. \"HOLD YOUR FIRE.\" I looked over at my men, telling two of them to come with me and to bring silver chains. I walked around between the vehicles, the warrant in my hand. We met each other halfway. \"Beta Samuel,\" I said as I showed him the warrant.\n\n\"Thank you for not opening fire,\" he said as he looked it over. He linked to his Alpha and his Pack members that the warrant was valid. Immediately doors opened, and men exited and knelt on the road, hands over their heads. \"My Alpha sends his regrets, he's being held at gunpoint by Alpha Justin in the last vehicle. He won't go without a fight.\"\n\n\"Then he shall get one,\" I said. \"Have your men walk up past us and bring the Beta. They may exit the battlefield with honor.\"\n\n\"Yes sir.\" The men got up, hands on their heads, and walked towards us. Beta Jack was being dragged between two men.\n\nI walked with them back to the vehicle and got the microphone again. \"LISTEN TO THIS BEFORE YOU DIE FOR A MAN NOT WORTHY OF THE ALPHA POSITION,\" I said. Taking out my phone, I started to play the audio file, an edited version of Tania's story. It went for about two minutes, during which no one moved as they listened to her describe her abduction, her rape and then the stealing of her boy.\n\n\"He's saying it's a lie, he would never do that,\" one of his men in the second vehicle yelled.\n\n\"DID ANYONE SMELL LUNA RHODA AND KNOW SHE WAS PREGNANT? DID YOU SEE HER ROUND WITH CHILD? DID ANYONE ATTEND PHILLIP'S BIRTH?\"\n\nThe questions hit home, as men started to get out, holding their heads in pain as they fought the Alpha command. In order to avoid it, they would have to reject their Pack and Alpha. Some screamed as they did this, falling to the ground, while others fought to stand and move. \"Alpha, there are only a half-dozen left in the vehicles, including Alpha Bruce. He's been chained up and is on the floor in back,\" my sniper told me.\n\nThe standoff might have lasted for hours, but for two people who walked up behind the disabled Suburbans. Her voice shook with power. \"ALPHA JUSTIN, I AM TALIA STILLWATER. THE ALPHA KILLER CHALLENGES YOU FOR THE POSIITON OF ALPHA OF THE COPPER MOUNTAIN PACK.\"\n\nThe men in the vehicle were shaking in fear, suddenly unsure of their survival. Three of them bailed out and rolled into the ditch with their hands over their heads.\n\n\"A CHALLENGE HAS BEEN MADE, ALPHA JUSTIN. YOU MAY USE OUR FIELD, UNLESS YOU SUBMIT NOW.\"\n\nThe door opened, and a furious Alpha Justin stepped out. \"I accept the challenge,\" he said.\n\nI looked back at the young couple standing on the road behind them. Randall Meechum was smiling broadly, happy his mate was going to get her chance. Talia? She looked like a warrior angel ready to destroy.\n\nCh. 32\n\nBlack River Falls Alpha John's POV<br >Tomah, Wisconsin\n\nWe met in the parking lot of a McDonalds in Tomah, three vehicles from my Pack filled with warriors were ready to go. Alpha Richard and his warriors from the Black River Falls Pack were ready as well.\n\nThe plan was simple; surround, then the Alphas go and arrest.\n\nWe decided to go in at sunset, hoping to catch the Pack at the end of their day. The long shadows would help hide our men as they surrounded the territory. If an alarm was raised, the women and children would be close to the safe room, and only the patrols would be out. \"Remember to order them to stand down, no force except in self-defense,\" I said to everyone. \"This is an arrest, not a war.\"\n\nThe drive only took fifteen minutes, exiting the freeway and following the roads along the north side until we were about a mile from the territory line. We pulled over to the side of the road near some trees, waiting for the coast to be clear before most of the men shifted and ran off into the woods. It took fifteen minutes for them to make their way into position. \"All men in position, Alpha,\" my Beta reported.\n\nI called Alpha Richard on his cellphone and he reported the same. He was going to stay at the south entrance, ready to drive anywhere to provide backup. \"Two minutes to enter the territory,\" I said as I gave the order to drive forward. I hung up the phone and looked out from the passenger seat of my Expedition. My driver and two escorts were armed with pistols for the worst case event, silver shackles and tranquilizer guns if needed. There was a chain across the road, PRIVATE PROPERTY- NO TRESSPASSING and NO HUNTING signs along a fence on each side, all the things to keep the humans away. I could see a camera pointed at the entrance from the shed by the side of the road.\n\nIt wasn't a normal shed, I'd been here before and the rusted sheet steel exterior covered a reinforced concrete and steel fighting position and guard post. My driver honked the horn as I got out, and a young man in shorts and a John Deere T-shirt came out from behind the shed. He sniffed, picking up we were wolves and then he recognized me. \"Alpha, I wasn't aware you were coming,\" he said as he hurried over to the chain. He quickly linked someone. \"The Beta welcomes you and your men to the Tomah Pack.\"\n\n\"The Beta? Where is Alpha Todd?\"\n\n\"Gone, sir. He left about five hours ago, didn't say where. The Luna and their son are with them. They are too far away to link, and he's not answering his cellphone.\"\n\nCrap. Someone must have tipped him off. \"Take me to the Alpha's office and have the Beta call the Pack together, I need to address them all urgently.\"\n\n\"Yes, Alpha.\" He unhooked the chain and moved it aside as I got back in. I left the other men in place for now but called Alpha Richard back and asked him to meet me at the Pack House.\n\nIt didn't take long to arrive, and the whole Pack was walking towards the dining hall. The Beta couple was waiting for me. \"Alpha John, welcome to the Tomah Pack.\"\n\n\"This isn't a social call, Beta Mendez,\" I said. I'd worked with him before, he was a good man, a cousin of the Council Chief Enforcer. His mate Maria stood next to him. I handed him the arrest warrant. \"I'm here to arrest Alpha Todd on orders of the Council.\"\n\nHe looked shocked as he read the warrant. \"He kidnapped Tania Stillwater?\"\n\n\"Yes. Do you know where he is?\"\n\nHe shook his head. \"No sir. The Alphas left this afternoon, said they would be back after dinner but haven't returned. I tried contacting them but they aren't responding.\"\n\n\"Let's go to his office,\" I said. I didn't hold out much hope, but maybe he left a clue. Alpha Richard pulled up and joined us as we were walking in.\n\nWhen he opened the office, we could see drawers left open and the wall safe was as well. Looking inside, there were legal papers only. \"Anything missing?\"\n\n\"Yes sir. About a hundred thousand in cash, and the bank books and bearer bonds for the Pack.\" He looked dejected. \"Shit, he's going to clean out the Pack accounts!\"\n\n\"He already did if he's been gone that long,\" I said. \"Do you have access to the online accounts?\"\n\n\"No sir, the Alphas had that.\" I felt for him, it would be tough to overcome such a financial loss along with the news coming their way. \"Gather the Pack, I'll be down in a minute.\"\n\nHe and his mate left, leaving Richard and I alone. \"Someone tipped him off,\" I said. \"He's long gone.\"\n\n\"Yeah. We better call the Chairman.\" We used the phone on the desk to call the Council, putting it up on speaker. \"Chairman Wolfe, it's Alpha John and Alpha Richard. We're at the Tomah Pack, and Alpha Todd and his Luna are gone. They cleaned out the Pack safe hours ago and are not responding to calls or link,\" I said. We discussed it for a few minutes, then we got down to the actions.\n\n\"Alpha John, what do you recommend for control of the Pack until I can get enforcers there?\"\n\n\"I can stay here with some of my men,\" I said. \"Provide some stability and guidance until the Council decides what they want to do.\"\n\nA voice came from the background, I recognized it as the Lead Enforcer for the Council. \"Mr. Chairman, the Beta of that Pack is my cousin, he joined the Pack after the alleged kidnapping, so he wasn't involved. He's strong enough to hold the Pack together through this.\"\n\n\"He is a good man,\" I agreed. \"I have no objection. Do you want us to start a search of the area?\"\n\n\"No, he's nowhere close by now. Inform the Pack of the warrant and direct them to notify Beta Mendez of any contact with the Alpha pair, or any information regarding their whereabouts. We're wrapping up things in Colorado, Alpha Justin is missing too.\"\n\nWhat a clusterfuck. \"I understand, sir. I need to go brief the Tomah Pack now, if you have the information you need.\"\n\n\"I do. I'm calling a videoconference of all North American alphas in an hour. You two and Beta Mendez can call in from there, then you can return home.\" He ended the call.\n\n\"Come on, let's let them know.\" We walked out and down to the mess hall, which was in a near riot by now. \"The Beta must have let them know why a warrant is out on their Alpha.\"\n\nIt was true; the pain and loss of that day over four years ago was still fresh, and finding out their Alpha may have kidnapped Tania was a shock. I held up my hands, and they quieted. \"First off, does anyone have any information as to where the Alpha pair are right now?\" That was a no from the silence. \"All right, I don't have a lot of details, but I do want you to see what Tania said happened. I don't recommend any children see this.\" While the children were taken out, I worked with the Beta to get the video file so it could play on the big projection screen they used for movie nights.\n\nThere were gasps of horror and relief as Tania's face came on the screen. Many were crying as she went into her story, and when she told what happened that day you could have heard a pin drop. I could smell the anger in the room; she was one of their own and was loved by them all. Seeing her this way, older, scarred and sickly, it turned their stomachs. A few had to run for garbage cans as she described her rape. The news of her son raised the anger to a fever pitch.\n\nNot only was their Alpha daughter alive, she had a son, a son who was a bloodline heir to lead the Tomah Pack.\n\n\"What happened to Talia,\" one of the men asked. \"That bastard drove her out of here, and we let him.\"\n\n\"She's the one who rescued Tania. I don't have all the details, I just know that Tania's wolf was killed and she was being held as a sex slave by a crime family in Texas.\" The Pack exploded in rage again at that. Having your wolf taken away was a fate worse than death for a werewolf, you would spend the rest of your days missing half of yourself.\n\nIt was time to wrap this up before the videoconference. \"I don't have anything more now, but I understand your anger. Your Beta is going to join us and all North American Alphas to discuss this, plus the disappearance of Alpha Justin of Copper Mountain. They will find no refuge in any Pack, and we WILL bring them to justice.\"\n\n\"WE WANT THEIR BLOOD ON OUR TEETH,\" a man in the back shouted.\n\n\"LET THE ALPHA KILLER DO IT,\" another answered.\n\n\"We have to catch them first. If you want to help, do what you can to find them.\" The three of us walked out of the room, leaving them to process what they had just learned.\n\nBack in the Alpha's office, the Beta logged us onto the secure server that the Council used for the videoconference. We watched as the Alphas joined, and Chairman Wolfe ran though what they knew so far. There was shock and outrage at the actions of the missing Alphas. \"In addition to the two Alphas, the search for the Alpha Killer continues. Talia Stillwater remains at large, and we have confirmed by scent and video that she kidnapped Luna Rhoda and her son Phillip.\"",
        "\"IT WASN'T HER SON,\" Alpha Clark of the La Crosse Pack said. He had arrived late to the conference and glared at the camera. \"Phillip is Tania's son, stolen from her at birth. Talia rescued her nephew just like she rescued Tania, while the Council refused to even investigate her kidnapping properly.\"\n\n\"This isn't the time to revisit the past, Alpha Clark, we have problems now,\" Chairman Wolfe said.\n\n\"It's never too late. I gave you the information you needed to get the warrants on Justin and Todd, because we wanted to do this properly and legally. Beta Mendez, how long ago did you Alpha flee?\"\n\n\"About six hours ago, sir.\"\n\n\"Within hours of me informing the Council of the evidence against them, both Alphas disappear. I wanted to trust the Council, but I can see now that it was a mistake. The Council failed the Tomah Pack when they pushed Talia out of the way when their parents were killed. You failed Tania when you failed to take her disappearance seriously and didn't do a real investigation. Now you've failed us again. Three strikes and you're out, Mr. Chairman. My family and my Pack is handling this ourselves.\"\n\n\"You can't do this,\" the Chairman said as he stood up and leaned on the desk. \"The Council was formed for dealing with problems like this in a civil and effective manner!\"\n\n\"How's that working for you, Mr. Chairman? Alphas, does it give you a warm fuzzy to know that the Council is on the job, or are you wondering what else they've covered up? We're doing just fine on our own. Tania has been reunited with her son and is safe in the proverbial undisclosed location. Talia has captured Alpha Justin and Luna Rhoda, and they will face MY justice in MY pack.\"\n\n\"YOU have them?\"\n\n\"The Alpha Killer will not be denied blood. They have committed offenses were against my family or on my land. Under Pack law, their punishment is my decision alone. I will not turn them over, nor will I allow the Council or anyone else on my land to take them.\"\n\n\"This is outrageous,\" one of the Alphas said.\n\nAlpha Clark just glared at him. \"I. DON'T. CARE. The Alpha Killer has sworn a blood vow to take her vengeance on those who hurt her sister and killed her parents. She WILL get it, and I will make sure of it. You couldn't stop her before, and you won't stop her now. My advice? Stay on your Pack lands and stay the hell out of her way, because she is in NO mood to suffer fools. Luna herself won't be able to help you if you aid or shelter Alpha Todd, and she finds out.\"\n\nA bunch of them started talking over each other, and the Chairman finally muted the microphones to stop it. \"Alpha Clark, where is Alpha Justin Heranus now?\"\n\nHe just smiled. \"He ain't no Alpha no more, Sir.\"\n\nCh. 33\n\nChairman Lewis Wolfe's POV<br >Copper Mountain Pack House, Alpha Quarters\n\nI was furious, my wolf wanted out, but I had to maintain control. I ended the videoconference before I exploded, and called all of the enforcers in along with the Betas of the Colorado Springs and Grand Mesa packs. \"Beta Nick,\" I said as I looked at the big man from Colorado Springs. \"Contact your Alpha, let him know you are requested to stay here until I can arrange temporary Pack leadership. You are to be the de facto Alpha until replaced,\" I said.\n\n\"Understood, Mr. Chairman. Thank you.\"\n\n\"Beta Oscar, the same for you except I'm asking you to stand in as the Pack Beta until relieved. Both of you, inform your Alphas you may be needed for at least three days, up to a week.\"\n\n\"Yes sir, thank you sir.\"\n\n\"You're not leaving a Council member in charge?\" My Chief Counsel, Lawrence Kendall, was looking at me like I'd deviated from process. I had, and it was intentional.\n\n\"No. Enforcers, place Mr. Kendall and Mr. Mendez under arrest and escort them to the cells.\" There was hesitation, Carlos Mendez was their boss. \"NOW,\" I said with command lacing my voice.\n\nThey broke out of their inaction and moved forward, cuffing the two with silver-coated handcuffs designed to foil werewolf strength. \"This is outrageous, what are the charges,\" Carlos said.\n\n\"Suspicion of treason,\" I said. \"Take them away.\" They did, and the two men did not know quietly. The Betas looked at me for an explanation. \"Alpha Clark was right about one thing; someone tipped the two Alphas off about the warrants and the raids. I didn't tell them, so it had to be either Lawrence or Carlos. I'll figure out which later, I'll be sending investigators out to get them. Confiscate their belongings, especially their phones.\"\n\n\"Yes Mr. Chairman.\"\n\n\"Enforcers, the rest of you will be leaving with me for Tomah. Jerry, notify the pilots to prepare a flight plan and be ready to leave in thirty minutes.\" He ran out of the room to make the arrangements.\n\nI made a few more phone calls as the cars were brought around. \"Alpha John,\" I said as I called the Black River Falls Alpha. \"Change of plans. I need you or Alpha Richard to take over the Tomah pack for the time being. Arrest Beta Mendez and put him in the cells on suspicion of treason. Carlos Mendez is under arrest here for the same charge, of tipping off the Alphas so they could escape the raid. The coincidence of the Beta being related to him is too obvious to ignore. I'll be sending investigators your way soon. Don't mistreat him, he might be completely innocent.\"\n\n\"I understand, Mr. Chairman. I'd be shocked if he condoned this.\" He mumbled something off mic. \"Richard and I are still in the Pack House. There are no objections to my staying on as acting Alpha,\" he said. \"If I may ask, sir, what are the long-range plans here? The Pack is very upset by the revelations of tonight. They want a Stillwater as Alpha again.\"\n\nI sighed, I knew this would happen. \"Neither is mated, John. Talia Stillwater is a wanted fugitive for good reason, and Tania does not have a wolf. That would seem to be a prerequisite for the position.\"\n\n\"At this point, I don't think the Pack cares. They want Tania to return to them, she's still family, and they never liked how Talia was forced out of here.\"\n\nIt was giving me a headache. I got the signal the cars were ready, so I walked out of the office as I talked. \"There's still a lot to deal with first. Keep the Pack stable, let's find Todd and find out if Alpha Clark can get any more information out of Justin. I want to know who my traitor is.\"\n\nThis day had been a disaster. The Council was formed at the behest of the Alphas and could be dissolved or replaced with a simpler vote of them. Alpha Clark's words had shaken their faith in him and the Council, I could see it in their body language. I had a day, maybe two to turn the narrative around before 'council incompetence and corruption' became the next issue, and then I would be out. I wasn't going to let that happen.\n\nRandall Meechum's POV<br >La Crosse Pack\n\nThe La Crosse warriors came down, placing all the Copper Mountain warriors in handcuffs and seating them by the road. Only the Alpha, who was being escorted, and the Beta who was bound hand and foot, were different.\n\nOf all possible outcomes, this is the one I really wanted. All these men didn't need to die, only specific men did. When Alpha Justin came out of the car and accepted the challenge, I knew I would get my wish.\n\n\"Alpha Eastwing,\" Alpha Clark said as he walked forward. \"Are you all right?\"\n\n\"Fine,\" he said. He was furious at being played for a fool and having his men endangered. \"Thank you for keeping this from escalating, Clark. I apologize for involving myself.\"\n\n\"We'll talk later. Take any of your vehicles still operating and send as many men as you can back to your Pack with your Beta. You and the rest may stay for the challenge, then we'll arrange transport to a local hotel for the night. You're going to need a shitload of new tires,\" he said with a grin.\n\nAlpha Eastwing gave a few orders, and men started moving. Alpha Clark had his men move the vehicles in front and behind out of the way so they could turn around and get out. Everyone else, including Alpha Justin who was still between two huge warriors, was making their way to the Pack House.\n\nBeta Jack was cuffed and shackled and being carried back by four men. Talia and I caught up to her uncle. \"What's the plans for him, Alpha?\"\n\n\"I was waiting to talk to you about it, Talia. He was the one who sold Tania into slavery, so perhaps she will want to choose or participate in his punishment.\"\n\n\"I don't know if she's ready, sir,\" I said. \"I'll contact my father, he can broach the subject with Tania and Bobby. I want to know who he sold her to, I plan to take down everyone involved in Tania's treatment with the help of my lovely mate here.\"\n\n\"I'll put him in isolation and let him stew for a while, then. Make Justin suffer, Talia, but don't kill him just yet.\"\n\n\"Don't worry, Uncle Clark,\" she said. \"He's not getting off easy.\"\n\nIt was after dark, but the lights surrounding the challenge circle had been turned on. I lagged behind everyone with Talia, holding her hand as we walked slowly towards the circle. \"I'm so looking forward to seeing you fight,\" I said.\n\n\"You're not upset that I'm fighting him instead of you? You're the male, I thought you'd want to fight him for his Pack.\"\n\nI shook my head. \"I have as much desire to take over his Pack as you do,\" I said. \"If you asked me, I would do it for you, but you are not some weak female in need of my protection. You're the most dangerous person I've ever met, and I've met a lot of dangerous people.\"\n\n\"I scare you?\"\n\n\"Hell no, thinking about you out there beating the shit out of an Alpha makes me harder than Chinese calculus,\" I said. She laughed and squeezed my hand. \"You don't scare me because you are mine and I am yours. I am the lucky one, I have a mate who is just as strong and fierce as I am.\" I looked over at her, she was looking at me in love and wonder. \"Plus, I bet you'll be a tigress in the sack.\"\n\n\"RANDALL!\" She hip-checked me, knocking me off balance. \"I'm still a virgin.\"\n\n\"And I look forward to making you mine in all ways after this is over.\"\n\nThe banter had the effect I wanted, it took her mind off what was coming up until we reached the circle. I was her second, responsible for ensuring no one tried to interfere with the challenge. Alpha Clark, as the host Alpha, would referee the challenge. There wasn't much to do in a no-rules fight to death or submission, though.\n\nI could see phones out ready to record the fun. Curiosity was high, as she left plenty of bodies behind but no one saw her fight. She stepped into the circle, glaring at Alpha Justin. He had stripped nude, ready to shift. \"I hate that everyone is going to see you nude before I've fully mated you,\" I said. \"Hopefully they see your neck and hold back comments.\"\n\nI saw her link, and Alpha Clark made an announcement. \"Fair warning, males. Talia is marked but not mated, and her mate might rip out throats if you stare or make comments about her.\" Eyes immediately averted, no one wanted a jealous Alpha blood after them.\n\n\"Don't worry, baby, I'm not shifting until the end,\" she said as she smiled back at me. \"Have a shirt ready.\" She stripped down to her fighting clothes, a sports bra and compression shorts.\n\nShe looked amazing, her body was an intoxicating blend of hard muscles and soft curves. Her ass was sculped by the Goddess herself, I concluded as she stretched. I was a lucky man.\n\n\"The Alpha of the Copper Mountain Pack, Justin Heranus, has been challenged for his position by Alpha blood female Talia Stillwater. The challenge has been accepted and is to death or submission. If submission, the fate of the defeated is solely up to the victor.\" He walked to the edge of the circle, where large boulders separated the grass and dirt inside from the gathered people watching. \"Any last words?\"\n\n\"You're going to die for taking my family,\" Justin said.\n\n\"Funny, that's what I was going to say. By the way, Rhoda knows what you did and it sickened her. She threw up on her minder, right before she was given a heavy dose of wolfsbane. Her wolf has been killed, just like Tania's wolf was taken from her.\"\n\n\"I'LL KILL YOU!\"\n\nHe started moving forward as Alpha Clark said \"Begin.\"\n\nJust immediately shifted, his wolf was black in color with a tan patch on his chest and brown and white socks. He charged her as she stood there, legs shoulder width apart and hands on her hips, seemingly unconcerned with him. I watched nervously as she waited until he was in the air, his jaws inches from her throat, and she wasn't there.\n\nMoving faster than I thought possible, she had moved a few feet right and spun around and landed a fist to the side of his chest. I heard a rib break as it thumped home, and suddenly he was spinning in the air. He crashed to the ground and rolled to his feet. I thought Talia would push the advantage, but she just watched him as he got back up. He shook his head, looked at her and attacked again, this time going for her left leg.\n\nShe spun away, continuing the move she kicked he left leg out and caught him in the stomach. The air left his lungs as he was knocked sideways, and when he recovered, she kicked him in his left thigh. She let him continue, but now he was limping noticeably.\n\nShe focused, letting her hands shift slightly as deadly sharp claws pushed out from her hands. \"Death of a thousand cuts, and he'll only get nine hundred and ninety,\" she sent.\n\n\"Focus,\" I responded. She laughed and went to work. He continued to attack, and every lunge towards her was met with a jawful of air and a slice of his fur. I was shocked; it was clinical, she was toying with him, never in danger. Alpha Justin was not a bad fighter, I knew he was stronger and far more experienced than I, but he had zero chance against my mate. She was skilled and blazing fast, and his hide paid the price for his actions.\n\nTen minutes turned into twenty, and she wasn't even winded yet. He was so covered with blood and torn up fur it astonished me he was still upright. Still in human form, Talia was breaking ribs, slicing flesh and tossing him around like he weighed nothing. He didn't have much longer.\n\nHe gathered himself for one last try, painfully moving closer to her. He lunged for her right knee, and he was shocked as she suddenly shifted and leaped high over his back. Twisting in the air, she landed and bit down on his right rear leg until a loud snap was heard.\n\nHe howled in agony as she dragged him backwards to the middle of the ring. She let him go. He was panting in the dirt, unable to rise. She shifted back into her human form; she was covered with blood, none of it hers. I took off my shirt and tossed it to her as she walked around the torn-up mess that was Alpha Justin. She pulled it over her head, the T-shirt more like a dress on her, and I smiled as she took a sniff of it as the neck pulled down.\n\n\"Submit or I start breaking bones from tail to nose,\" she said as she knelt down in front of him. He glared at her, but his body wouldn't respond. His head dropped to the ground and he exposed his neck to her.\n\n\"Challenge is over by submission,\" Alpha Clark said. \"The new Alpha of the Copper Mountain Pack, Talia Stillwater. May her reign be just and prosperous.\" She stood like the warrior she was as the men of her new Pack exposed their necks to her, signaling their acceptance of her as Alpha. She went down the line, establishing the bond and searching their minds for signs of duplicity. The two that refused to submit were killed instantly, a single claw stroke behind the left ear severing their artery and leaving them to bleed to death.\n\n\"Thank you for your assistance, Alpha Clark,\" she said as she walked to stand as an equal to her Uncle. \"I would request you release my Pack members and provide them transportation to the airport. They will be returning home immediately.\"\n\n\"Of course, Alpha Stillwater.\" He looked over at Justin. \"What is your wish regarding him?\"\n\n\"Do you have any cages suitable for transporting a wolf?\"\n\n\"Of course, glorified dog kennels, but silver plated and reinforced.\"\n\nShe grinned a little. \"That is perfect. Bring one here and lock him into it. Bring him water, but do not feed him or provide medical care. If he wants that, he's going to have to answer questions. I also want him to see what I have in store for the Beta who sold my sister into slavery, but that's tomorrow.\"\n\n\"The guest Alpha suite is yours,\" he said. \"I will have dinner sent up later.\"\n\nI moved closer to her, pulling her into my side. \"She needs to clean up and do a few things first, we'll call the kitchen when we are ready,\" I said. \"Thank you again. We will rest tonight, and tomorrow we continue with her blood oath. Everyone involved is going to die,\" I said.\n\nWe walked back towards the Pack House, hand in hand. Members of all the gathered Packs made space for us, their eyes kept down in respect of a superior rank and warrior. No one had ever seen someone like her, and we all knew she could take down any Alpha she wanted.\n\nI picked her up in my arms as she giggled and carried her back to our room. We'd be out in the morning.\n\nCh. 34\n\nTalia's POV<br >La Crosse Pack House\n\nI looked up at my mate as he carried me into the Pack House. He was handsome, dominant, smart, caring and romantic. I'd hit the mate jackpot with him, and I was still shocked that he wanted the broken mess that was me.\n\n\"I don't see you that way,\" he said. \"I've told you exactly how I see you, it's time for you to start believing it.\"\n\n\"I just gave up on a mate,\" I said. \"I'm so thankful you didn't give up on me.\"\n\n\"You're amazing, beautiful and strong. I can't wait to show you what making love is all about, but first we have to get this blood off you. I don't want anything of his on you.\" He opened the door to the guest room and set me down in the large bathroom. Starting the shower, he turned and pulled his shirt from over my head. He pulled the remnants of my sports bra and shorts off and tossed them in the garbage, then pushed me into the shower to get the blood off.\n\n\"I need your help,\" I said as he turned to leave.\n\nHe turned and smiled, I could tell he was hoping for an invite. I didn't want to be apart from him. He took off his shoes and pulled his shorts and socks off. He was more impressive than I had imagined in the nude, and a flush of arousal washed through my body as I looked at him. He saw my look and matched it, his body showing exactly how much he enjoyed the view. \"Wash my back?\"\n\n\"Hair first,\" he said. He stepped into the large shower behind me and took the scentless shampoo from the shelf. He started to work it into my hair, his fingers massaging my scalp. It was like heaven.\n\n\"I don't want to shower alone again,\" I said as I melted from the pleasure of his hands on me.\n\n\"I don't want to be alone again, so I'm good with that.\" He made sure all the hair was scrubbed, then used a hand wand to wash it clean. He repeated it again, making sure every speck of blood was gone.\n\n\"Talia, is this a bad time,\" Alpha Clark sent. Since we were family, we still had the bond even though I was now Alpha of a different Pack.\n\n\"Better than in ten minutes,\" I said.\n\n\"I'll make it quick. Erica is still waiting for word on what to do next, she's got Rhoda tied up in the woods and it's getting late. I also got a message from Chairman Wolfe, he's having a videoconference with all North American Alphas in ten minutes. I need to know what to tell him about Justin, and how we want to handle finding Todd.\"\n\nI shared the questions with Randall; he was my mate, my partner, and I was relieved I didn't have to decide on my own anymore. We quickly came up with a plan. \"Uncle, be dismissive and suspicious of the Council. Remind them of their failures, and tell them you and your family are going to handle this on your own. The Council cannot come here, and they can't tell you what to do. I don't want them to know how closely we are working together, or that I'm mated to a Meechum yet.\"",
        "\"I can do pissed off. What if he asks if you are here?\"\n\n\"Don't deny it. I'm family and I defended your Pack against a sneak attack by your side. You aren't about to arrest me or turn you over. Tell him the charges against me should be reviewed in light of recent events. If that doesn't work, well, I've got a better track record than he does of getting these people. He can stay out of our way.\"\n\n\"What about Erica?\"\n\n\"Call her and tell her to come home. Chain Rhoda up outside in the challenge circle, near her mate. Close enough to talk but not to touch. I want her to watch him suffer and die.\"\n\n\"He'll survive, he's cut up and near death, but his wolf will heal him.\"\n\n\"No, he won't. I'll talk to you in the morning. You can let them know that the Alpha Killer has taken care of Justin and Jack, and they need to stay out of my way as I clean house. Be very clear that I will execute vengeance on any who hide or aid Todd. I'm dangerous, uncontrollable, and the Council has no authority over me.\"\n\n\"Got it. Have a good night, Talia. You deserve him.\" He broke the connection and I realized he was right. This whole time I was feeling like I was lucky, when I was getting what I was always supposed to have. I turned and buried my face in his chest. He had finished my hair and scrubbing my body while I was talking to my uncle. \"I deserve you,\" I said quietly.\n\n\"Of course you do my love. None of the bad things in your life have been your fault. I would have found you when you were of age and we'd still be having a night like this. Well, maybe without the whole washing blood out of your hair thing,\" he said as I snorted in a decidedly unladylike fashion. \"Now before I lose the little control I have left, there's one other thing we need to talk about.\"\n\n\"Oh Luna, I just want to go to bed with you,\" I said.\n\n\"I know, but Alpha Stillwater has decisions to make. Having you here on your Uncle's land is one thing, recognizing you as Alpha of a large Pack is another. The other Alphas are terrified of you, and if you become Alpha they might combine with the Council to take you out before you grow stronger.\"\n\n\"Assholes! One female becomes Alpha and they all freak out!\"\n\n\"It's more than that. Their Alpha, Luna and Beta are all going to die. The Pack is going to be in disarray, and you and I are going to be far too busy to do anything about it.\"\n\nHe was right. \"So what can we do?\"\n\n\"If you don't care about it, we could give it to the Council to deal with. They can find an Alpha and Beta to take over.\"\n\nI shook my head. \"I don't want the Council anywhere near my Pack. A month from now, if I'm done and I decide to go back, the new Alpha might not hand it over. I don't want to put them through that.\"\n\n\"I have an idea,\" he said. \"Let me call my father. You know how big my family is, and I could ask him to send two of my brothers to take over. Everyone would understand that it isn't permanent, just until the two of us decide to take it or give it up forever.\"\n\nI had picked up a washcloth and started to scrub his body as we talked. His back made it difficult for me to concentrate, while the front was impossible. Sure, I'd seen males before, and sex in the Pack was uninhibited and sometimes public. I'd just never had one of those inches from my lips before, and I didn't want to talk. \"Call him and make it happen,\" I said. I rinsed him off and pushed him out, before our first time ended up with me pressed against the limestone tile.\n\n\"Hurry out,\" he said.\n\nI dried off, blow drying my hair and brushing my teeth as I tried to get up the courage to go to him. I looked at myself in the mirror; I had scars, but I was still feminine. I loved the way he looked at me.\n\nI opened the door and walked out. He was sitting on the bed, clad only in boxer shorts, and he nearly dropped the phone when he saw me. \"You didn't bring me any clothes,\" I said as I bit my lip.\n\n\"Dad, I've got to go. I trust you to make it happen.\" He couldn't hang up fast enough. He stood up, coming to me as my knees suddenly failed to respond to my commands to go to him. I was shaking in need, and my wolf wanted out.\n\nHe pulled me into his arms and kissed me, deeply and possessively. I felt my body preparing for him, and I could feel his hard length against my stomach. The shorts couldn't contain him. I moved my hand down as we continued kissing, wrapping my hand around it. My fingers couldn't touch as I explored him, while his hands made my back and ass feel like they were on fire. \"I'm nervous about this,\" I said.\n\nHe turned, walking me back to the bed before lowering me onto it. \"Talia, you're going to have the best night of your life. I just need you to trust me.\"\n\n\"Okay.\" He knelt down on the rug next to the bed, moving between my legs. I tried to sit up and watch, but his hand moved up and held me down. I relaxed back into the bed as I felt kisses start up my legs, on the inside of my thighs above my knees. It left a trail of fire behind, and I started to drip with need. My smell filled the room, and his eyes darkened as his wolf came forward.\n\nHe put his big hands under me and pulled me to the edge of the bed, my legs hanging over his shoulders. \"Oh! Oh my. Oooooh yeah, that feels wonderful. OOOH!\" I was moaning and writhing on his face a minute later, as he introduced me to the wonders of my body. I'd look down, see the love and lust on his face as he ate me out, then grab his head and moan again as he pushed my body higher and higher. I broke into orgasm, screaming his name. When he put a finger in, I came again. His other hand was moving between my erect nipples, teasing and pinching them until he set me off a third time.\n\n\"Please...\" I couldn't speak above a whisper as my body came back down. \"I need you.\"\n\n\"You want this,\" he said as he stood up.\n\nI saw him, my wolf forward in my mind, she wanted him too. \"Make me yours.\" He smiled and moved forward as I scooted back on the bed on my elbows. He crawled over me, kissing his way up my body until he was settled between my legs. I could feel him poking there, and I took him in my hand and moved him to where I needed him. \"Please?\"\n\n\"The pain will pass quickly,\" he said. He pushed forward, filling and stretching me uncomfortably. He leaned down to kiss me, and as our lips met he pushed forward and broke through until his hips were against mine. \"RANDALL,\" I screamed as he took me.\n\n\"Relax and it will get better,\" he said. He didn't move at first, then he started to move an inch or two. He was still stretching me, but the sharp pain was gone, and the stretched feeling was going away. I felt full, deliciously full, and the bond between us was throbbing with our desire.\n\n\"More,\" I said. He smiled and started to pull out. I didn't want him to go, and I clenched on him to stop it which caused him to moan in pleasure. He backed almost all the way out then slowly drove back in.\n\nIt was heaven.\n\nI wrapped my legs around his hips, I wanted him deep in me again. He started to move faster, and we were building for something big. I came once, and he slowed until it was over. \"I'm going to take you hard now,\" he said as he moved my legs to his shoulders.\n\n\"Take me, mate,\" I said. The new position allowed him to drive deeper and hit different places. The room filled with the sounds of our sex, the liquid sound I was making, the air being forced out of my body, and the slap of flesh as he drove forward. I was holding on for dear life. I couldn't think, all I could do was feel, and then it happened.\n\nHe slammed deep, his cock pulsing deep inside me, and he bit down on my mark causing me to orgasm like never before. I screamed, then bit down on his shoulder, marking him back and letting my mate's blood coat my teeth.\n\n\"NOOOOO!\" I shook my head and looked at the deep mating bite I'd left on his shoulder.\n\n\"What's wrong?\" He looked down and his eyes got big. \"Oh no.\"\n\nI'd just condemned my mate to a slow, painful death, and it was all my fault.\n\nCh. 35\n\nTania Stillwater's POV<br >Sulphur River Pack House\n\nI looked at Snacks, I mean Bobby, who had just confessed to me that I was his mate and that he had accepted me. I was shocked; the loss of my wolf meant I had given up on a mate after I was sold into slavery. \"You're accepting me, and my son as yours?\"\n\n\"Yes.\" He leaned forward and kissed my forehead; it felt warm and wonderful.\n\nI realized he had been with me the whole interview, keeping me calm and giving me strength. He knew EVERYTHING I had been through, and he was still here in my bedroom. He still looked at me like I hung the moon. I didn't know what to say. It was all I had ever dreamed of, finding the man the Goddess made just for me and having him hold me in his arms and say he accepted me. I looked up at him, my hand reaching for his cheek. \"Okay.\"\n\nYeah, I was smooth. He pours his heart out to me and I give him a one-word answer? \"Thank you, Tania,\" he said with a wide smile.\n\nMy mind and body were still in conflict, especially when I realized he was naked and only the tangled sheet was keeping him from poking me. \"I have to use the bathroom, and you need to get some clothes on,\" I said. \"Just because I've seen and had sex with thousands of guys doesn't mean I want to do anything with you right now. I'm not ready for this,\" I said as my arms went back to cover myself.\n\n\"I understand. Would you like anything? Snacks from Snacks? Maybe some cheese curds?\"\n\nI laughed. \"Go make me a sandwich,\" I said. \"I'll be down after I check on my son.\" I rolled away from him until he got up and left the room, then I untangled myself from the sheets and went to the bathroom. I took some time to wash my face, getting rid of the tears from my nightmare. I rarely went a night without them since I was no longer drugged to sleep quietly.\n\nI came back out and a beautiful woman was sitting at the end of my bed, she had a pair of sleep shorts and a cute pink and white pajama top. \"Who are you,\" I said.\n\n\"I'm the older sister, Diane,\" she said. \"I thought you might need some clothes, and I know you don't know your way around. Bobby asked me to help you, and I wanted to meet my new sister,\" she said with a smile.\n\nI smiled back, women didn't threaten me, well, almost all. The ones who worked at the slave brokers, and Peggy, the husband of the man who was my last owner. I moved closer to the bed and she jumped up and opened her arms for a hug. I hesitated, just a moment, then let her do it for a few moments. \"I'm so happy for my brothers, even if I'm pissed that I still haven't found MY mate. Even my baby sister is mated now.\"\n\n\"I'm not mated yet, I don't even know if it is possible,\" I said as I pulled off the old clothes and put on the new ones. I could hear her gasp of breath as I took off my T-shirt and she saw my back and butt. They'd left it scarred and ugly. \"Don't worry, it doesn't hurt anymore.\" I turned back and saw the tears in her eyes. \"I don't want pity, that doesn't help me. I need a friend, though.\"\n\nShe smiled and wiped a tear. \"I can do that. You'll love it here. Dad's keeping the crowd away for now, and Bobby and I will introduce you to people as you are comfortable with.\" She gave a giggle as she walked us to the door, which was hanging off the hinges. \"One of the omegas will replace it while you're eating.\"\n\n\"Yeah, Snacks wasn't going to let a door keep him out,\" I said.\n\nShe took my hand and led me down the hall. \"I can't believe you gave him that nickname, it's perfect. How did he get it?\"\n\n\"The first time I met him, he ate almost two pounds of cheddar cheese curds while his wolf sat with me,\" I said.\n\n\"Oh crap! He was probably bound up for a week!\" She walked to the door at the end of the hall, knocking softly before opening it. I followed her in; the room was dimly lit, and her parents were on the huge bed, facing each other. In between them, Phillip was sleeping with his head resting under her chin. He looked peaceful, and I knew he would be safe. I nodded to her and we walked back out, closing the door quietly behind us. \"Mom said he settled right down with them. She's thrilled to have a child in the house.\"\n\n\"It's new to me too,\" I said. My stomach announced my hunger loudly, and I giggled and moved down the hall as she led me downstairs to the kitchen.\n\nSnacks looked up as we entered the big room, filled with commercial-grade stainless appliances. \"I found some brisket, all you all right with barbecue beef sandwiches?\"\n\n\"You're kidding, right? My wolf is dead, but my tastes haven't changed.\" It smelled wonderful as he took it out of the microwave and plated a big sandwich, along with potato chips and a big glass of milk. \"I can't eat all this,\" I said as I looked at it. The bun was Texas-sized.\n\n\"Eat as much as you can, your body needs fuel to recover,\" he said. \"You want one, Sis?\"\n\n\"Sure,\" she said.\n\nHe handed her the plate a minute later, then joined me with his. He also handed me a big slice of a dill pickle. \"Mom canned these last year, you can't get anything this good in a store.\"\n\nWe didn't talk much as we ate. The beef was smoky and tender, the sauce tangy, and he was right about the pickle. I enjoyed it, thankful to be free and with family. I didn't finish the sandwich, but Snacks took care of the extra.\n\nDiane wiped her hands and mouth, then gave me a hug. \"I'm going back to bed,\" she said. \"We'll talk tomorrow.\"\n\nShe left the room, and I looked back at Bobby. \"Where do we go from here,\" I asked.\n\n\"If you hadn't gone through all you did and if you still had your wolf, we wouldn't be talking right now,\" he said. \"I'm holding back, giving you time until you are comfortable and ready because it's what you need. Do not ever mistake my patience for not wanting you, Tania. I've wanted you since I first scented you, and I'll be the happiest man in Texas when we complete the mating.\"\n\n\"I can't give you the bite back,\" I said.\n\n\"Then I'll tattoo a mating bite on my neck to show them all I'm taken,\" he said.\n\nI looked up at the clock, it was three in the morning. \"Stay with me?\" His eyes got wide and his wolf came forward. \"Just to sleep. I always slept better with my Snacks, and I want you to hold me and keep the bad dreams away.\"\n\n\"That's what I want too, Tania. You in my arms at night.\" He led me up the stairs, and a man was finishing with the door. He bowed his head and put his tools away, then we went in. Someone had changed the bed, and Bobby pulled the covers back and covered me as I tucked in. He went around the other side, pulling his shirt off then going under in just his shorts. He was chiseled, and I couldn't help but appreciate what a strong man I'd found. He laid on his back, and I rolled into his side, my head on his shoulder and his arm holding me tight.\n\nI felt safe, I felt loved, and I was asleep in moments.\n\nChairman Lewis Wolfe's POV<br >Somewhere over Iowa\n\nI'd spent most of the flight on the phone, dealing with angry Alphas and the other Council members. I was catching hell from both sides; those who feared the Alpha Killer were furious I wasn't making Alpha Clark turn her over, while others were furious at what had been done to her family. At least one of the men I had arrested was innocent, and that investigation had to start. I was hesitant to use enforcers for the investigation since their boss was a suspect, and the other lawyers on the Council staff had the same problem. I needed someone independent, someone with investigative experience. Kicking it around with the Enforcers on the plane, I got a few names. The top man on the list was easy.\n\nI didn't have his direct number, so I called his Alpha. \"Alpha Meechum,\" the groggy voice said.\n\n\"Brent, it's Lewis Wolfe,\" I said. I'd known him for over a hundred years, and we'd always been friendly. \"I need a favor.\"\n\n\"It's three in the morning,\" he said. \"Hang on, I've got to go to another room before my grandson wakes up.\" I heard him moving, then a door closed. \"What's going on?\"\n\n\"You heard the accusations by Alpha Clark last night. The reason we didn't arrest Alphas Todd and Justin was because someone betrayed us to them. I need to find out who, and I can't trust my own Council right now to find the truth.\"\n\n\"What do you need from me, Mr. Chairman?\"\n\n\"I want to borrow your son Randall for a while to head up the investigation.\"\n\nI didn't hear anything for a moment, then he laughed. Full out belly laughed. \"You don't know, do you,\" he said.\n\n\"Know what?\"\n\n\"He's already on the job, and he's not working for you. The younger sister, Tania, the one who was rescued? He was the one who did the interview with her. He won't work for you, but he will find out the truth.\"\n\nShit. \"Are you sure?\"\n\n\"Positive. He doesn't want anything to do with the Council after what you did, and didn't do, for those girls. I'm sorry, you'll have to look elsewhere. Good night, sir.\" He hung up.\n\nOne of the warriors looked up from his phone, his face was ashen. \"Sir, you've got to see this.\"\n\n\"What is it?\"\n\n\"A video from my brother, he's a warrior in the Winona Pack. He said he took it at the La Crosse Pack.\" He handed me his phone and hit play.\n\nMy jaw dropped.\n\nAlpha Justin Heranus was being walked up the road into the challenge circle by a couple of big guys. It looked like there were multiple Packs there from the way they were standing in groups. The crowd parted, and two people walked through into the ring. One was the Alpha Killer. \"Holy shit,\" I said. \"When was this taken?\"\n\n\"A few hours ago,\" he said.\n\nI continued watching as the battle started, and it was one-sided. Alpha Justin's wolf, despite a hundred pounds in weight and decades of fighting experience, was no match for the lightning-fast female he was facing. She made him look like an untrained boy as she sliced and diced him.\n\nHe never had a chance, and she didn't even shift until the end. She took his submission and his Pack from him as he lay bleeding on the dirt from hundreds of slashes. The other warriors were just as shocked; this was a foe none of them ever wanted to face. \"What is she,\" one of the men asked.\n\n\"She's the Alpha Killer,\" I said.\n\nJarrod Covington's POV<br >New Orleans\n\nMarceline left for the restroom, leaving me alone at our table by the dance floor of the nightclub. She loved to dance, and I loved to be with her. I felt the vibration of my cellphone in my pocket and pulled it out. I smiled as I saw the caller ID. \"Talia, nice job with Justin,\" I said. \"You get your revenge?\"\n\n\"I've got a problem, Jarrod,\" she said. She was crying, on the edge of control. \"I bit my mate. Oh Selene, what have I done? I bit Randall when we were mating! I didn't mean to, I can't lose him now! Not when I've just found him!\"\n\n\"Talia, calm yourself. The venom won't harm him quickly.\" I looked at my watch, there was no time for me to get there tonight. \"Bring him to me, and I'll see what I can do.\"\n\n\"OK. We'll leave immediately. Is there anything I can do now?\"\n\nIt may not work, but I told her. Maybe it would delay things until they could get here. In the meantime, I had my own problems.\n\nI needed to get the Vampire Council to rescind their previous decision, or Talia would watch her mate die."
    ],
    "authorname": "partwolf",
    "tags": [
        "challenge",
        "pack",
        "vampire"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/alpha-killer-ch-31-35"
}