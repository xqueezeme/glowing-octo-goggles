{
    "title": "Basics - Neural Control Node Ch. 09",
    "pages": [
        "Author's Note\n\nContinuing where we left off...\n\nA summary so far: Josh ordered a Neural Control Node (NCN) from a popular online shopping site. The arrival of the new technology changed Josh's life as he became the controlling mind of a connected neural network that grew to include his gamer friend Gina, her mother Rhi, a police officer Essie, Rhi's sister Tess, and Tess' maid Katie. \n\nThe seemingly supernatural NCN allowed Josh to enjoy intimate relationships with all of his new assistants. Rhi and Essie became his soulmates, while Gina, Tess and Katie became lovers. The neural connections have enhanced their appearances, and their sexual connections. Discovering each other's desires, needs and kinks while exploring the benefits of the NCN applications and features, made for a frenetic week which resulted in everyone moving into Tess' spacious riverside mansion. \n\nNot everything was perfect, the NCN's technology was in beta, and the first generation network had to be terminated as other NCN Masters abused their power. The new polyamorous family was disrupted when the beta neural network shut down Friday evening, robbing the neurally enhanced assistants (NEAs) of any memories from the time they were first connected to Josh's NCN.\n\nA fortuitous delivery of a new version of the NCN arrived Saturday morning, and Josh successfully managed to reconnect with his assistants without any major disruptions. Saturday night ended up being a chill night at Tess's mansion after a frantic morning. The family is still together, under the new technology slab. The natural pairings of Josh and Rhi, Gina and Essie, and Tess and Katie spent the night in separate rooms. \n\nA new week begins with new technology and a reunited family. \n\nWhat could go wrong?\n\nThis is obviously a work of fiction, all characters that engage in sexual activities are above the age of 18.\n\n\n\nBasics: Neural Control Node Ch.09\n\nThat's why I'm easy<br/>Easy like Sunday morning<br/>\u2014 The Commodores\n\nMy eyes snapped open and I found myself staring into the dazzling blue eyes of my bedmate Rhi. Her lips slowly curled into a smile, as she leaned forward to kiss me fully. I enjoyed the tender kiss, and the promise of her tongue caressing my lips, before she parted.\n\n\"What time is it?\" I asked, surprisingly alert.\n\nRhi took a moment to look past me at the alarm clock and I noticed the ambient light from the windows was still dim. It wasn't night, but it also wasn't quite daylight yet.\n\n\"Five fifty-five,\" Rhi said, returning her eyes to mine, \"I feel like I need some exercise. Do you want to join me in exploring Tess' gym?\"\n\n\"Tess has a gym?\" I asked, but really wasn't surprised I didn't know everything about my new home, \"I'd love to join you!\"\n\nTruth be told the past week had been plenty active, but I also had dropped off of my pandemic goal of jogging a bit more, and getting in more exercise. The pandemic isolation had made me sedentary, and after months, I wanted to get more active and in shape. Last week, any personal improvement plans were ignored by the sudden emergence of the poly family I lead. While I enjoyed all of the vigorous activities I did engage in with my five sexy women, and the magic of the cube had made my body more muscular, I didn't want to rely on magic for strength. \n\nWe slid out of bed, and walked to our closet. Rhi had organized it down to different types of clothing, and I browsed through a selection of gym shorts and tank tops to wear. Rhi slipped on some form fitting Lycra leggings and a sports bra while I pulled on my pair of baggy shorts, and a slightly oversized tee shirt. I was looking for my running shoes, when Rhi bent over to tie her shoes giving me a spectacular view of her ass in her athletic wear.\n\nShe stood and looked over her shoulder at me, and then wiggled her ass.\n\n\"I think a new week we should start with new routines,\" she grinned, \"There will be plenty of time for that later.\"\n\n\"By, 'that,' you mean my ravishing your delightful ass?\" I clarified tying my own shoes.\n\n\"Yes,\" she smiled, \"and don't distract me, or we might never leave this room.\"\n\n\"I promise to behave until we've both worked up a sweat,\" I grinned, \"Where is the gym.\"\n\n\"This way, Master,\" she smiled and grabbed my hand.\n\nAs we walked towards the stairs, I saw Gina and Essie walking towards us similarly clothed in workout gear. We shared hugs at the top of the stairs, with alert smiles and clear eyes. Essie grinned at me, and pressed her lips to mine.\n\n\"Gonna work out too?\" She asked playfully.\n\n\"Nothing I'd rather do at six in the morning,\" I returned with a wink.\n\n\"Oh, I could think of something else to ... do\" She grinned letting her eyes slowly drop to my groin, \"but I have to keep in shape, beyond bedroom shape.\"\n\n\"I love all of your shapes,\" I said, leaning towards Gina and sharing a kiss as well.\n\n\"I have really let my routine go,\" Gina complained, with a flirtatious grin, \"I was really making some progress on my 5k times, until someone got a new toy!\"\n\n\"I got, like, five new toys,\" I drawled and swatted her pert ass as we descended down the stairs.\n\nTess and Katie entered from the sliding pool deck door at the bottom of the stairs, also in workout gear. \n\n\"Was this a coincidence, or another symptom of a hive mind?\" I thought as I enjoyed the shapely additions to our group. \n\nAll of us gathered in the kitchen while exchanging hugs and kisses. Then we followed behind Tess as she walked towards the back of the kitchen and through a door. Beyond the door was a large space with expansive bay windows overlooking the woods on the east side of her property.\n\n\"Wow,\" I said, \"what a great view\"\n\nAs with much of Tess' house, the workout room blended into the environment of her riverfront property. The windows were clearly tinted to preclude outside observation, but from the inside it felt like we were part of the natural flora along the riverside. The gym was well outfitted, but we'd have to share some of the equipment. She had a few machines for aerobics, a bench and bars for free-weights, and a complicated looking resistance contraption. There was also a mirrored wall, balance balls, and mats for yoga. It was about the size of a hotel gym, but had room to add a few more machines. \n\n\"Dibs on the bike!\" Gina said as she swung into the saddle of the newest electronically augmented peddler. \n\nI headed towards the free-weights along with Essie. Rhi started on the elliptical next to Gina's stationary bike. Katie and Tess rolled out a pair of yoga mats, and flipped on a TV to start streaming a yoga video routine.\n\n\"Want to spot me for some shoulder presses, Papi?\" Essie smiled, grabbing a pair of dumbbells. \n\n\"Sounds, great,\" I said, \"Arm day, and then a run?\"\n\n\"Perfect,\" Essie grinned and turned her back towards me and stared at her reflection in the mirror.\n\nWe did a good arm and shoulder routine, and finished up our strength training with some core stretches and crunches. I walked past Rhi as she was climbing off of the elliptical and she hugged me close. I enjoyed the warmth of her flesh, and a kiss.\n\n\"Essie and I are going to jog outside, any place good for a run?\" I asked.\n\n\"That sounds wonderful,\" Rhi smiled, \"Go west, and there is a bike trail that starts just past Tess' fence. It winds along the river to a public park down the highway. I'm going to do a little strength training, then get a start on breakfast. When will you be back?\"\n\n\"Umm, thirty minutes?\" I shrugged looking at Essie, who nodded in agreement.\n\n\"Perfect,\" Rhi smiled, \"We can all eat together on the patio around then.\"\n\nTess grabbed me before Essie and I walked back through the kitchen. She smiled and pointed me to a door at the end of the windows.\n\n\"If you go out that way, there is a path to the driveway,\" Tess explained, \"Then when you're done with your run, come back in the same way and there are towels on the shelf near the door.\"\n\n\"Thank you!\" I grinned, then leaned and kissed Tess with a firm hug, \"Thank you again for graciously sharing your home.\"\n\n\"We're family, now, \" Tess smiled, then looked at Essie, \"All of us.\"\n\nEssie grinned and hugged Tess, then we walked out into the morning air. The sun was just above the horizon and the bird sounds reminded us how early in the morning it was. We walked briskly down the driveway and out onto the highway shoulder. About a hundred yards past Tess' fence was a asphalt path which we followed then accelerated into an easy jog.\n\n\"Do you enjoy running?\" I asked, still a bit stiff from a week off of my routine.\n\n\"Yeah,\" Essie said, taking a deep breath, \"Not usually this early, but I didn't feel like staying in bed. A new day, a new life.\"\n\n\"Yeah,\" I said, still trying to find my breathing rhythm, \"A bit odd we all had the same idea.\"\n\n\"Hive mind,\" Essie explained shortly, conserving her breathing for the brisk pace we set.\n\n\"I guess,\" I added, also a bit short of breath.\n\nI wasn't a runner, but it was the easiest way to exercise without purchasing expensive equipment. So I had started a couch to 5k program a few months ago, and was comfortable running a 5k distance. My enhanced strength from the adjustments in appearance mode, made me feel like pushing it slightly. When I checked my watch, and the distance marker on the trail I was surprised at how fast our pace was.\n\n\"Slow.... Down?\" I asked, and Essie nodded.\n\nWe eased the pace, and our breath returned. It felt good to push it, but I didn't want to press too hard and get injured. I recognized that suddenly I felt it was very important to have a daily exercise routine.\n\n\"Does this surprise you?\" I asked Essie.\n\n\"That I kept up with your pace,\" Essie said looking over at me and taking a breath, \"surprised the shit outta me.\"\n\n\"Appearance app,\" I explained, and took a deeper breath, \"Believe me, I wasn't this fast a week ago.\"\n\nI slowed the pace a bit more, so we could talk more comfortably. Essie took a deep breath, and I enjoyed a glance at her tightly constricted breasts in her sport bra. She caught me looking and jabbed me in the side playfully.\n\n\"It definitely feels like this should be an important part of our day,\" Essie said, \"I usually do PT grudgingly. But this morning I really wanted to workout once I woke up.\"\n\n\"Apparently all of us had the same impulse,\" I said thoughtfully.\n\n\"The new slab?\" Essie asked, \"Maybe part of one of the apps, like that health checker?\"\n\n\"Could be,\" I nodded, as we turned into a curve that opened into a large park along a bend in the river.\n\nA few cars were parked in the parking lot, and other runners were stretching in the dewy grass along the trail. I checked my watch, and slowed to a walk. Essie looked at me, and I nodded my head back the way we came.\n\n\"Head back?\" I asked.\n\n\"Yeah,\" she agreed, \"I don't want to mingle with the extra traffic, looks like the normal route continues west from here.\"\n\nWe stopped for a beat, and Essie leaned down and stretched to touch her toes. I was greeted with a lovely view of her round ass, and paused to enjoy the view.\n\n\"I can see you, Papi,\" Essie said with a grin.\n\n\"I can SEE you too, mi ni\u00f1a,\" I said huskily.\n\nShe stood up and looked over her shoulder at the runners departing to the west. Then looked to the east, then winked at me. \n\n\"Catch me Papi,\" she said, \"And you can have me!\"\n\nThen she dashed back towards the house at a sprint. I was caught off guard and had to chase after her at a frantic pace. My stronger form was making up ground, but she pressed hard as we strode into the shade of the forest trees. She looked over her shoulder at me, and her eyes widened seeing how much of the gap I'd closed. She put her head down, but she had expended her sprint speed.\n\nShe slowed and turned off into the shoulder of the path, then walked backwards looking at me, then past me. I slowed and stalked towards her, feeling my cock stiffen as she leaned back against a tree and pulled her top and bra up and released her breasts.\n\n\"I already have you,\" I said, \"You're mine.\"\n\nI lifted my hands to her breasts and lowered my mouth to her firm nipple. She nodded as one hand combed through my hair, and the other dropped to my crotch. Her fingers outlined my cock, then lifted and pressed my shorts down so she could stroke it with her hand.\n\nMy hands dropped to the waist of her tights and pressed them down to mid thigh. My fingers cupped her sex, and felt her arousal coat the tips. She huffed in a deep breath, trying to slow her panting from her hard run. I pulled my mouth from her breast and sealed my lips to hers. We kissed as our fingers and hands busily found the right points to bring each other pleasure. \n\nI pulled away, then gripped her shoulder and twisted her to face the tree. She whipped her head around to look back down the path towards the park. She then turned her head to look at me.\n\n\"Fuck your bitch, Papi,\" she pleaded.\n\nShe pressed her bare ass back, her tights keeping her thighs together. I used my hand to press between her thighs, then guided my cock into her hot slick pussy. I lifted my other hand to tangle in her dark curls and tugged her head back. She looked hotly at me as her eyes closed slightly when my cock slid deep inside her.\n\n\"Fuck Es,\" I growled, \"You drive me fucking crazy.\"\n\nBreathless, I quieted and just focused on hammering her hard. I knew she drew satisfaction when I used her for my pleasure, and her moans told me that we were both enjoying this ad hoc opportunity to fuck. I drove into her, pressing her cheek into the bark of the tree. Her breasts pressed into the wood, as she pressed her ass to meet my thrusts.\n\n\"Cum!\" I growled into her ear, forcing myself not to shout.\n\n\"Oh god,\" She groaned then shuddered, her head tossing back in ecstasy.\n\nI pulled my hand free of her thick mane of hair and cupped my fingers over her mouth. Then I jammed my hips into her and felt my cock pulse, spraying my cum deep inside. We stilled against the trees, the sweat from our workout making our bare flesh glisten in the morning light.\n\nShe lowered to her knees and twisted as I pulled out. She greedily licked around my cock, and sucked the remnants of my cum from my cock. She smiled up at me, as she tucked my cock back into my running shorts. I helped her up and pulled her tights up over her caramel fleshed bottom. I kissed her fully as she pushed her breasts back inside her top.\n\n\"Thank you Papi,\" she smiled, \"best part of the workout.\"\n\n\"I can definitely get behind that as a part of our routine,\" I drawled. \n\nWe stepped back on the path, and started a slow jog back home. As we drew closer to Tess' fence, we slowed to a brisk walk. I reached and smoothed Essie hair, then pulled her to my chest and hugged her tightly. She wrapped her arms around me and pressed her cheek to my chest. \n\n\"Is it strange that we've only known each other for a week,\" I started.\n\n\"And love each other so strongly?\" She finished, \"It is, but I can't think of not loving you.\"\n\n\"You are so important to me,\" I agreed, \"You and Rhi are part of me, more than any other relationship I've ever had, even ones that lasted months.\"\n\n\"The magic of the cube and the relationship mode.\" Essie shrugged.\n\n\"It's more than just setting a relationship,\" I mused, \"I only set you as a friend with benefits, from there our relationship grew closer much faster than even Gina. Very very fast.\"\n\n\"Must still be the connection that the cube has in our minds,\" Essie replied, then shook her head, \"I don't question my feelings for you, Josh.\"\n\n\"I'm not questioning,\" I smiled, \"I love you, that is a truth I feel in my soul. I think it is part of who we both are, and Rhi too. I love the others too, just differently. Maybe the cube accelerated things based on something we don't understand.\"\n\n\"Maybe Bala has answers?\" Essie smiled, then pressed up on her toes and kissed me, \"But right now I'm hungry... you made me expend a lot of calories.\"\n\nI laughed and we joined hands and re-entered the gym the same way we exited. Essie passed me a towel, and took one for herself. The gym was empty, and we passed back through the kitchen. The other four were seated around the patio table, food heaped on their plates.\n\n\"Hurry up, Josh,\" Gina called, \"I'm starving.\"\n\n\"So eat,\" I said sliding into my seat at the end of the table.\n\n\"I can't,\" Gina grumbled, \"You have to start.\"\n\nI leaned and kissed Rhi on the cheek. She reached and grabbed a strawberry and pressed it into my mouth.\n\n\"She's right,\" Rhi said, \"You start each meal, Master.\"\n\nI chewed slowly and watched as the rest of the girls started eating hungrily. Smiles returned as we ate and discussed the surprising urgency to exercise. Everyone agreed it was an important part of the day, and no one really questioned how that had become important so suddenly.\n\n\"I need some new clothes!\" Gina said abruptly, thrusting her enlarged breasts in my direction, \"All of my tops are too small and my bottoms are too loose\"\n\nHer tee shirt was stretched impressively across her bosom, the letters in the words were malformed. The little adjustments I'd made to her shape had completely changed the modest next door neighbor girl I enjoyed gaming with into a nubile comely woman with a head turning figure. She deserved clothes that fit with her new look and flirtatious personality. \n\n\"I could do with some new workout clothes,\" I agreed, \"I'm suddenly much thinner around the waist.\"\n\nHeads around the table nodded in agreement. Rhi and Tess had been adjusted slightly in many places. Essie and Katie were the exceptions both were already stunningly sexy in their own ways. \n\n\"I need something to wear besides comfy jeans,\" Essie said, \"I won't be wearing the uniform any more and I need some professional looking outfits.\"\n\nTess and Rhi nodded at each other, having shared something unspoken. Rhi turned towards me and took my hand. \n\n\"I can feel your not excited about clothes shopping,\" she smiled, \"let me and Tess take the girls shopping. You can give me your measurements and I'll pick up some new workout clothes and anything else.\"\n\n\"How do you know me so well,\" I smiled, \"I certainly understand the need for updating wardrobes, but going to the mall to search for clothes just isn't appealing.\"\n\n\"I'm happy to take the girls and get this done,\" Rhi said. \n\n\"I'm actually good on clothes,\" Katie said, \"But I could use a hand finishing up with moving out of my apartment.\"\n\n\"I'd be happy to help,\" I smiled, \"If it's okay with the rest of you to split up.\"\n\nAll the heads nodded and then the conversations shifted to planning the shopping trip. The ongoing pandemic precautions made logistics a bit more involved. As the conversation deepened, Rhi leaned over to me, and nibbled on my ear. \n\n\"Tess can take the lead in getting ready for shopping,\" she whispered, \"Katie can clean up from breakfast. I'd like to resume our earlier discussion before our workouts\"\n\n\"Plundering your bottom?\" I whispered back as she blushed and nodded. \n\n\"We haven't broken the seal on the new bottle of lube yet,\" Rhi confessed as she shifted in her seat. \n\nI took her hand and stood. The rest of the table nodded at us, as if they knew the plan without us having to tell them. Katie and Essie started collecting the dishes, while Gina and Tess continued discussing plans. \n\nI lead Rhi back upstairs and into our room. The door was barely closed before we were undressing, stripping off our gym clothes. \n\n\"Shower first,\" I said. \n\nRhi led the way starting the shower and sliding inside. Tess's water was always hot and we were soon locked in an embrace under the steamy water. We managed to focus more on soaping each other up and rinsing each other off. We both wanted something more. \n\nAfter the quick shower we dried each other then Rhi strode towards the bed and laid a towel flat on the sheets. She pulled a bottle from her nightstand drawer and handed it to me then laid back on the bed and scooted towards the middle. ",
        "I kneed up and dropped the bottle beside her. I grabbed her ankles and spread her legs and pressed her knees out and back. I looked at my beautiful slave as the sunbeams from the window reflected light from her platinum collar. She closed her eyes as I lowered my mouth to her clean bare cleft. \n\nHer fingers combed through my hair as my mouth centered over her aroused pussy. I enjoyed the taste of her arousal and used my fingers to probe into her opening. She was slick and I focused my tongue on her clit as my fingers spread her leaking juices over her lips and then around her tight ring. \n\n\"Oh Master,\" she moaned, \"that feels so good, don't stop.\"\n\nI flicked my tongue over her hard clit as my fingertips pressed deeper into her sheath then spread her natural lubrication over her anus. Lowering my mouth I spat into the tight rose and returned to lapping at her clit. She arched back as my fingertips pressed against her ring and probed inside. \n\nShe huffed and I felt her hands move from my head to her breasts. I sensed her twisting her stiff nipples as my tongue slid over her piercing. She moaned as my fingers pressed into her ass, lifting her knees back to offer more of herself to my attentions. \n\n\"You're so wet,\" I growled, \"you really don't need any fancy lube for me to fuck your slutty ass.\"\n\n\"I'm your slut,\" she panted, \"all of me, all of my holes. Use them however you want my Master.\"\n\nI rose up while keeping my fingers in her tight anus, stroking slowly pressing outwards to open her further. I grabbed the lube bottle and flicked open the top and dribbled some of the clear liquid over her breasts. Her eyes glimmered as she used her hands to spread the viscous fluid over her breasts until their sheen made her flesh appear like vinyl. \n\nI cupped the palm of my hand that was working two fingers into her ass and squeezed some lube into my palm. Then pressed the slick gel against her sex, it flowed down against my fingers and I spread the excess into her tight tunnel. \n\nMy cock was like a steel rod and I carefully poured a stream of lube along the top of my shaft then closed the bottle and dropped it to the bed. I spread the slick fluid over my shaft and engorged head. I looked down at her with a hungry grin. \n\n\"Hold your legs back,\" I growled, \"spread wide and rock back. I want to watch your eyes.\"\n\nShe blushed and smiled as we locked eyes. Her hands already obeyed my will and her body shifted as she presented her ass for my lustful attention. I pressed my crown into her gaped opening as my fingers slid free. She bit her lip and her head arched back, but her eyes locked on mine as I felt her sphincter stretched to accept my steely cock. \n\n\"Oooh fuck yes,\" Rhi gained, \"hard please, Mastet fuck my slutty ass hard.\"\n\nI jammed my hips firmly forward then leaned forward to drive my cock into her tight ass in hard firm strokes. My hand gripped her gleaming slick breast, I had to regrip her slick flesh often as I continued to probe her bowels.\n\nMy free hand dropped to her sex and I curled two fingers insight her tight cunt, my thumb tapping and sliding over her clit ring as my hips drove in steady stokes. I could feel my cock driving into her as I teased her g-spot. Her hips curled and tried to meet my thrusts, but her spread position and disciplined hands limited her movements. She was mine to use. \n\n\"My greedy ass slut,\" I taunted, I want to feel you cum while my cock is deep in your ass, I want to watch your eyes as I drive you over the edge. Your mine. My slut. my whore. my slave.\"\n\n\"Yeessss Maasterh mmmm fuckyess yours!\" She stammered and I could tell she was on the edge, waiting for my permission.\n\n\"Cum for me.\" I commanded. \n\nShe stiffened before the last syllable left my lips and I felt her cunt clench around my fingers. Her ass rippled as I continued to ream her steadily. Her orgasm consumed her and continued from peak to peak. My hands gripped her shoulder and I accelerated my strokes. Her loud screams crescendoed as I hammered into her taking my pleasure in her complete submission.\n\nI finally jammed my hips forward and my cock pulsed jets of cum deep into her bowels. I stayed deep inside her as I growled out, my body shivering from my orgasm. I leaned over her and kissed her deeply. My weight driving her into the mattress. Rhi wrapped her arms around me as her legs fell limply to the bed. \n\nI reached past her and opened my drawer, pulling out a jeweled ass plug the clerk at Sexy Sadie's added to my collar purchase. I rose up and showed it to Rhi. \n\n\"I'm going to plug your slutty ass,\" I taunted, \"trapping my cum inside you while you shop\"\n\nRhi bit her lip and nodded, her eyes wide in surprise with a gleam of anticipation. \n\n\"Your slave is honored, my Master,\" she said with a nod. \n\nI lubed up the heavy base and then as I pulled out, I twisted the plug into her ass until her sphincter closed around the narrow base. Rhi's eyes closed as she wriggled feeling the new sensation. \n\n\"Can I...\" she stammered, then began again, \"Please allow your slave to clean your cock, please.\"\n\nI was slightly shocked, but I nodded as she twisted then took my cock in her mouth. Her tongue swirled and collected the dribbles of my cum from around my foreskin then sucked the remnants of my spending from my tip. She watched me with adoring eyes. Then finally slipped her mouth from my cock. \n\n\"Your slave keeps her ass clean and ready for you,\" she smiled, \"I am always ready to satisfy your every desire. Any and all.\"\n\nI recalled our conversation on the sofa just before I collared her. I understood better that she was saying, there were no limits. My collar was a sign that she was mine. Anything I wanted she would do, and deeply enjoy if it brought me pleasure. In the moment the feeling of power flowing through me was fed by the power she was gifting me. I had a better understanding of the concept of power exchange. \n\nI hooked my finger under her collar and tugged her to her knees then kissed her deeply. Tasting everything she had just tasted. The flavor of the lube, the tang of my cum, and her mouth. We kissed deeply for a long time locked in a firm embrace. \n\nSlowly we parted and she retreated to our closet to dress for shopping. I joined her in our closet and found some shorts and a tee shirt that were suitable for apartment cleaning and moving. Together we joined hands and went downstairs to the rest of our family.\n\nFour smiling faces met us as we walked down the steps. Their knowing smiles clued me into the realization that none of my singular encounters with my harem were completely private. They all had some sense of what had happened, and none expressed jealousy or anger. If anything they all seemed to have experienced some kind of peak recently, perhaps some residual effects of our climaxes spreading through our neural connections.\n\nTess looked at Rhi, as if asking permission to get started. Essie and Gina waited quietly beside Tess. Once Rhi grabbed her purse and keys and nodded, the four of them proceeded orderly out to the garage, and Rhi's car. I thought it a bit odd how they looked at Rhi for the lead, and she seemingly understood her role in relation to the rest of my girls.\n\nOnce they left, Katie looked at me expectantly. Like she was waiting for me to make the first move.\n\n\"Do you need anything before we head out?\" I asked.\n\n\"Nope,\" Katie smiled, \"I am ready for anything you want.\"\n\nKatie was dressed in a comfortable tee-shirt and cut off shorts with some converse sneakers. The waning days of summer meant the day was going to be warm and her outfit was appropriate. Her breasts stood proudly stretching her top, and the lack of any bounce hinted at a sports bra underneath. Her hair was pulled back into a ponytail, which made her blue eyes more dazzling.\n\nI smiled, and collected my phone, the NCN slab and my car keys from the spot Rhi always stored them at the end of each day. I headed towards the garage and Katie followed behind. She knew the code to close the garage as we exited and walked to my blue SUV parked on the edge of the circular driveway. I opened the passenger door, and held it open for her. She smiled and leaned up to kiss me before sliding into the seat. \n\nI enjoyed her soft kiss, and felt a renewed arousal as I slid into the driver's seat. Katie and I hadn't spent much one on one time, so I was also interested in finding out more about her. Her attachment to my web of minds was accidental, but she fit nicely into our family, being close to Tess prior to her fateful contact with my first NCN cube. She had only been in the mesh for a little over a day before the beta network shut down. She hadn't had much time to find a strong connection with me, but did show signs of wanting more than our, til now, at arm's length relationship.\n\nI started the car, and shifted into gear, looking for traffic before pulling out onto the road and heading back into town.\n\n\"You're going to have to give me directions,\" I said, \"I don't know where you live.\"\n\nKatie leaned over and typed in her address into the GPS of the car's console, and soon I was on the correct route and guided by the voice commands from the digital assistant in my phone.\n\n\"This way we can talk,\" Katie said, \"If that's okay?\"\n\n\"I'd enjoy that,\" I said, \"Tell me how you met Tess, what's the deal with you two?\"\n\n\"Well, she saved me when I had run out of money by giving me a housekeeper job,\" Katie explained, \"She was a good employer, and she enjoyed my company. She led a fairly isolated life, and I think she was lonely.\"\n\n\"We're the two of you intimate immediately?\" I asked, leading her to reveal more of her surprising relationship with Tess.\n\nI was curious, because Tess, even under the influence of the web, had hidden her relationship with Katie until Katie had accidentally touched the cube. Since that revelation, Tess had opened up more. I felt she wasn't keeping secrets, especially since the connections with new seemed to be more stable, with a stronger mental link. The mystery of her and Katie's previous relationship just wasn't talked about though.\n\n\"No,\" Katie said, \"our physical relationship is only a few months old, and very intermittent. It wasn't a formal relationship, more opportunistic. I worked for many months before she showed any interest in me sexually.\"\n\n\"How did that come about?\" I asked.\n\n\"Well,\" Katie said, then paused to collect her thoughts, \"You know she writes those romance novels, right?\"\n\n\"Yeah, the bodice rippers.\" I chuckled.\n\n\"I noticed a pattern,\" she continued, \"As she wrote she'd get more worked up. She was always discreet, but she'd have to leave her office and spend time in her room. As the novel got closer to the end, she'd spend nights at bars, or clubs. She'd entertain guests, I guess, because I'd notice people's things, purses, wallets, when I'd clean the next morning.\"\n\n\"So her writing would make her seek some kind of release,\" I theorized.\n\n\"Exactly,\" Katie smiled, \"It was fairly regular, and noticeable. She was just looking for release, she never started a relationship. I noticed her getting antsy one day, and she looked at me and lifted an eyebrow. Her interactions with me usually weren't verbal, she had a list for me to do. Beyond friendly greetings we didn't talk much.\"\n\nI nodded and she continued.\n\n\"I looked at her, and said, 'you don't need to go find a stranger, you know...',\" Katie confessed, \" Tess looked me up and down then stood up and took my hand. She guided me into her bedroom, and then opened a drawer. She took out a strap-on and handed it to me, then looked me dead in the eye, \"I want you to fuck me hard, rough, can you do that?'\"\n\n\"And did you?\" I asked with a raised eyebrow.\n\n\"I did, and she loved it,\" Katie continued, \"Before my breakdown I played in the BDSM scene, you probably got that from my tattoo. Anyway, I was a switch, and so taking a dominant role with her was in my wheelhouse. I also had been celibate for a long time, and physical contact was very satisfying. I made her lick me after I fucked her hard.\"\n\n\"When did this happen?\" I asked.\n\n\"About a month ago,\" Katie confessed, \"After the first time, I think we had maybe three more interludes. We weren't in a relationship. It wasn't like in my job description. We both enjoyed touching and being touched. Though I was the only one to wear the strap on. I think she was always playing out a fantasy from her writings as the heroine.\"\n\n\"Makes sense,\" I agreed, \"Has your relationship strengthened since you touched my cube?\"\n\n\"It's familiar, but not more than that.\" Katie said, then looked at me for a long pause.\n\nI returned the look, then had to turn suddenly as I'd lost track of our course. I looked back at her and she smiled softly then down at her hands in her lap.\n\n\"Frankly,\" Katie said, \"I know you and I haven't spent a lot of time together, but I'm drawn towards you more than her. I love Tess, she means a lot to me. But...\"\n\n\"But what?\" I asked.\n\n\"I want to be yours,\" she said with a blush, \"I'm much more submissive than a switch. I am only a switch when it comes to women. In my core I'm a submissive slut, just like Gina says. I want to be yours, all of me.\" \n\nShe locked eyes with me for a moment, then I had to look away to drive. I was silent, as I knew, in a way, she was already mine. I was worried that what she wanted was already taken by Rhi, and Essie. I had assumed that her and Tess had a special connection, and keeping them as a couple made things seem easy. Now Katie was saying it wasn't a strong vital relationship, more of a convenient fling.\n\n\"I know you and Rhi are special,\" Katie continued, still looking at her fingers, \"I know you and Essie are also connected differently than you and Gina or Tess. I don't know where I'll fit. I've been in a polyamorous family before, but this doesn't seem the same. Before my breakdown, poly always broke down into jealousy and factions. This - your family - doesn't feel like that. I don't sense any jealousy at all, not even in myself.\"\n\n\"What does it feel like?\" I asked, genuinely curious.\n\n\"It feels whole,\" she confessed, \"I felt you, just now, fucking Rhi, it was wonderful to share that, I'm not even sure what it was. Before breakfast, I could sense you and Essie had sex, it was weaker but it was also satisfying. We all look to you to lead us, and so it's natural that you have many of us. I just want to be sure that I am yours.\"\n\n\"You are mine,\" I confessed, \"I'm still discovering how our connections work. I thought you and Tess had a longer relationship, so I didn't want to interfere.\"\n\n\"I don't think you could have,\" Katie confessed, \"Both of us would accept your lead.\"\n\n\"What does that mean?\" I asked.\n\n\"You're our commander, our leader. What you say goes, I trust you, and it is important for me to be obedient to you.\" Katie explained, \"When you aren't around we look to Rhi to lead us. That's the chain of command.\"\n\n\"Chain of command?\" I asked with a chuckle, \"This isn't a military organization, we're a family. I accept that I'm the leader, but all of you have a say in how we function.\"\n\n\"I really don't want a say,\" Katie said quietly, \"I accept that you know what is best for me, and for all of us.\"\n\nMy mind returned to the feeling of power exchange that flowed through me in the shadow of my climax with Rhi, earlier. My interlude with Essie in the woods had a similar sensation. They submitted, and I dominated. They both drew pleasure in that exchange, and I was certain it was the same with each of my girls. The question really was, could I extend that power exchange into the decisions we made day to day. Katie was seemingly admitting to looking to Rhi for more direction as well. \n\nThis was definitely a different dynamic than with the first node. The first node was much less regimented, more flexible, and as a result more chaotic. When I had filled all five slots, the myriad of thoughts were a jumble if I lost my focus. With the new node, I never had the feeling of losing control. If anything I felt a firmer control. The power was tangible, and in many ways it frightened me.\n\nI nodded, as a feeling of acceptance flowed through my thoughts. Keeping my eyes on the road, I looked over at Katie and smiled then reached and took her hand. Then lifted her fingers to my lips to kiss the back of her slender digits. \n\n\"You're mine, Katie,\" I assured her.\n\n\"All of me,\" Katie nodded, then paused and gripped my hand, \"I know that in my mind, but I want to feel it here.\"\n\nShe pulled my hand to her breast, then down to her crotch. I stopped at a light, and turned to look at her. My fingers exploring her cleft through her cutoffs. Her eyes held mine and closed as she felt my fingers. She nodded slowly and emitted an arousing moan.\n\n\"Yessss, like that,\" she said.\n\nThe light changed and I drove the last few blocks to her apartment building. I kept my fingers engaged with her core as she spread her legs to give me access. She pointed towards one of the buildings, then led me to a parking spot. Once we stopped moving, I pulled my fingers away from touching her.\n\n\"Let's get what needs to be done, finished,\" I said, \"then I'll make you feel what you need to feel.\"\n\nShe nodded wordlessly. We got out of the car and I followed her to her apartment. She held the door open for me, and I walked in. The apartment was empty, all of her boxes were gone. The kitchen cabinets were open and empty. Even the floors had a freshly vacuumed appearance. \n\n\"This looks like it's ready for inspection,\" I said, \"What do we need to do.\"\n\n\"Yeah, we finished everything after we rejoined the network yesterday,\" Katie confessed, \"Gina and Tess went completely maid mode, and I just did what I was told. The only thing left is to return my key.\"\n\n\"Why did you make me think there was work to do?\" I asked, shaking my head.\n\n\"We all agreed that you and I needed alone time,\" She said.\n\nKatie looked up to me and lifted her arms around my neck. I lowered my mouth to capture hers, kissing her deeply, then hungrily. Her body molded against my, my hands dropping to her ass. Her tongue was alive and flicking against mine as our kiss deepened.\n\n\"All of you?\" I asked, breathless after parting the kiss. \n\n\"It was Tess' idea really, then she told Rhi and Rhi agreed.\" Katie said, \"They thought you'd need a little push.\"\n\n\"Gina and Essie too?\" I asked, my fingers lifting her tee shirt up.\n\n\"Yeah, they agreed,\" Katie nodded, lifting her arms as I pulled her top off, \"They all have had alone time with you.\"\n\n\"Were you feeling left out?\" I asked, as my fingers slid along the bottom of her sports bra.\n\n\"A little,\" Katie said, then closed her eyes as I pulled off her bra, releasing her breasts, \"But it had only been a few days since I joined. I knew this would come.\"\n\n\"Why here?\" I asked pulling my own tee shirt off.\n\n\"We can go back...\" she began, as she pushed her cutoffs down her thighs, revealing her bare mound and a lack of panties.\n\n\"Not a chance.\" I said.\n\nWe quickly finished undressing and Katie knelt at my feet. Her eyes lifted to mine as her fingers stroked down the stiffening shaft of my cock. She lowered her eyes to look at the swollen head, stretching my foreskin and the tip of my glans peaked out. She extended her tongue to lick the slit, collecting a drop of pre-cum as her eyes lifted back to mine.\n\nI grabbed her ponytail in one hand, as she worshipped my cock. She used one hand to cup my balls, and the other stroked my shaft as her lips and tongue focused on my sensitive hands. She pressed forward wanting to feel my cock in her throat. I helped with a grip of the back of her head and a press of my hips.\n\nI felt her gag then swallow, the sensation of sliding into her throat made my eyes close on their own. I held her head tightly, until she attempted to pull back. I held her a bit longer, taking complete control of her breathing and anything I wanted to possess. I released her and she pulled back, inhaling as a thick ball of her drool slid down my shaft. She panted, stroking my cock before taking the shaft back into her throat and bobbing steadily.",
        "The increasing familiar sensation of power exchange flowed through me at her submission. I grabbed her ponytail, then lowered my free hand to grab under one of her shoulders. I pulled her to her feet, then dropped my hands to her ass. I lifted her easily and carried her into the kitchen, setting her on the edge of the counter. She leaned back, against the backsplash, slumping to keep her pussy on the edge. I notched my cock into her and then drove my hips. Her eyes flared as I penetrated her, feeling her opening stretch at the sudden intrusion. Her own arousal and the copious saliva on my cock eased the transition and I immediately was fucking her hard.\n\nOne of my hands gripped a full breast. My fingers milked her pierced nipple then tugged it with a twist. My other hand gripped her throat, holding her against the backsplash, firmly in my grip without choking her. I fucked her hard. She arched back, offering her breasts to my free hand. Her eyes steadily staring at me, encouraging me to fuck her however I pleased. \n\nI pulled back, and my cock slid free. I pulled her from the counter, then spun her around. She eagerly spread her legs and pressed her bottom back, offering me all of her. I drove my cock back into her cunt, feeling her squeeze her inner muscles to tighten around my thick shaft. I spit on my fingertips, then teased her asshole, pressing my fingertip into the tight ring.\n\n\"Oh fuck, yes,\" Katie pleased, \"All of my holes are yours, fuck you feel perfect inside of me.\"\n\nMy free hand gripped her ponytail, hauling her head back. Her hands gripped the counter and her back arched. I pulled my hand from her hair and dropped to grasp a bouncing breast, pulling back. She groaned as my hips continued to pound into her. I pulled my fingers from her ass, and then wrapped my arm around her neck. I leaned close to growl into her ear.\n\n\"You're mine, my nasty little fuck toy slut,\" I drawled, \"All of you, I own you, all of you.\"\n\n\"Yes, yes yes,\" she chanted between moans and gasps of pleasure.\n\nI pressed her forward, leaning against her as my hips drove into her deep. Her ass pressed back to meet my thrusts, her moans breathless, echoing in the empty apartment.\n\n\"Please, please, may I cum?\" she pleaded.\n\n\"Cum for me,\" I commanded and her body stiffened and she screamed out.\n\nI didn't stop and she took in a breath, then grunted as her legs collapsed. She leaned against the counter, unable to support herself on unstable legs. Her thighs trembled as her first climax rolled into a second then rose into another peak. I slammed into her and shot my load just as her cunt clenched around my shaft a third time. She groaned out as I collapsed forward, my cock pulsing in her contracting pussy, my weight pressing her into the countertop.\n\n\"Oh fuck... Jesus... God,\" she swore as she returned to her senses, \"holy ... mother ...\"\n\n\"You are mine,\" I managed, still trying to recover. \n\nNot only from my own orgasm but the reflections and echos of the power we exchanged. We drew closer as we caught our breath, not physically, but in that moment something in us shifted and melded. Katie became truly part of me, deeper than she had before.\n\nI pressed back from the counter, then collected her in my arms. Cradling her across my hips, her head resting on my shoulder, her legs draped over my other arm. I slumped against a wall in the empty living room, and slid down til I was sitting on the freshly vacuumed carpet. She kissed along my neck as we relaxed. My thoughts flicking through new concepts of my relationships with five incredible women.\n\nSlowly we came out of our reverie. She smiled and kissed me. Her bare breasts pillowed against my chest. I kissed her back, enjoying her lips and tongue. I smiled as we parted from the kiss. \n\n\"Let's go back where it's more comfortable,\" I said, \"I don't want to mess up your apartment.\"\n\nKatie nodded and we quietly got dressed. She pulled her tee-shirt down over her bare breasts, handing me her sport bra. \n\n\"I don't want to wear that home,\" she grinned.\n\n\"I don't want you to either,\" I agreed, stuffing the bra into my front pocket.\n\nWe held hands and left her apartment. She locked her door, and we took her key to the office. Finalizing the paperwork didn't take much time, and soon we were back in my car and heading back to Tess's mansion. My house. I needed to remind myself, I wasn't a guest. I parked in my spot, and Katie used the code to open the garage door. The other four must have still been shopping, since their car was still gone. \n\n\"What now?\" Katie asked with a grin.\n\n\"Up in my room,\" I commanded, \"naked.\"\n\nFor the next hour, we fucked. I took her ass with some of the quality lube Rhi had bought. We fucked in the shower, then in the tub. I filled her mouth with a full load, When we had finally tired out, we lay naked on my bed. I had taken full possession of my newest thrall. \n\nShe rested her head on my chest, and ran her fingers over my chest. I rubbed her back, and enjoyed the feel of her bare bottom. I closed my eyes and my breathing steadied. \n\n\"Do you believe it now?\" I asked, \"That you are mine?\"\n\n\"You're very persuasive,\" she grinned, then nodded, \"Completely yours.\"\n\n\"Good.\" I managed to say before falling asleep.\n\nI stirred lazily, and felt Katie's bare warm body against my side, her head resting on my chest. Her breathing was deep and relaxed, and I smiled as I looked at her sleeping. I shifted slowly, transferring her to a pillow, then pulling my blanket over her. Then I went to the bathroom and relieved myself. As I was pissing, I recalled I was starting a new job in the morning, and I needed to get my new laptop running.\n\nI changed into some swim trunks and a tee shirt, then left Katie sleeping on my bed. I walked barefoot down the hall, then down the stairs and started searching for my bag and the shipping box with my new laptop. I found it leaned against the edge of the counter where Rhi kept my phone and slab. I grabbed my slab from the counter, I found it helpful now to leave it in the same place when I returned home, I picked up my bag and the shipping box and then went back to the room I had been using as an office.\n\nIt wasn't long until I had my old laptop booted up, and the new laptop unpacked and going through initial setup. I accessed my private email, and deleted the collection of spam from the last few days. Bala hadn't sent me any new emails, so I finished off moving my private files to cloud storage, then started cleaning up any of my files and accounts.\n\nWhen I was done the new laptop was asking for my login, and I pulled out my phone to access my password cache. I was logged in and started up my corporate email account and saw a message from Bala waiting. I paged through the rest of the mail seeing several things I needed to do as part of orientation in a new company. \n\nFinally I returned to email and opened up Bala's message:\n\nJosh,\n\nPlease expect a call from me around 8am Pacific Time. We will have to work with the time differences, and I think it may be best if you worked West Coast hours for the time being. This should give you some extra time in the morning, on Monday.\n\nImmediately I need to introduce you to my team, so there will be a group conference call at 9am, and then I think it is best that you and Hassan meet to examine your old dormant cubes, and see if they might still be functional with some small hardware modifications.\n\nThe priority is to enable you to make contact with abandoned NEAs, assess their condition, and then use the old nodes to return them to a normal physical appearance and free their minds from the legacy neural map remnants from the old network.\n\nExpect a few more packages early next week, a corporate credit card, access to our travel network, and other things that you will need to travel to finish your initial mission. We can discuss details, and I want to understand any support you might need for an initial few weeks of travel.\n\nHope you enjoyed your weekend, and rest. You'll need it.\n\nHighest Regards,\n\nBala\n\nTravel? \n\nI hadn't really thought about travel. The idea of traveling alone was not very appealing, which was a new thought for me. I was mostly a loner until Gina first touched the cube, and now I was the head of a six person polyamorus family. I would have to think about how to incorporate travel into our lifestyle. Even with my higher salary level, there is no way I could afford travel and accommodations for all of us regularly.\n\nI sighed and pushed back from the desk into the softness of a bountiful bosom. Startled, I twisted around, and faced Gina's flirtatious smile.\n\n\"Man, Josh, you really can tune the world out,\" Gina said, \"We've been calling you for the last ten minutes,\"\n\nI wrapped her in a big hug, and we shared a kiss. Her hands dropped and fondled my cock, and I squeezed her ass.\n\n\"I was just getting my things ready to start my new job.\" I said with a blush.\n\n\"Well I can think of a job I'd like to do,\" Gina whispered.\n\nHer motions were having the desired effect. She had on a new outfit, gone was the ubiquitous tee shirt and gym shorts, now she was wearing a lightly colored top with the sleeves pulled off her shoulders, and a skirt that fell to mid-thigh. Her buoyant breasts filled the top and allowed me a view of her deep cleavage. Her eyes widened as she felt my stiffening shaft, then she looked around.\n\n\"Just you and me,\" she whispered, \"They can keep looking for you, I need you.\"\n\nShe steered me around and into the corner of my small office space. To find us someone would have to walk past the door, then step in and look around. I allowed myself to lean against the wall as she dropped to her knees and pulled my swim trunks down.\n\nWithout any more fanfare her mouth opened and she sucked on my swelling crown. Her mouth was warm and wet, her tongue swirling around the rim. Her eyes lifted to watch me as my fingers combed through her short blonde hair still streaked with lines of pink. I rolled my hips, seeking a deeper penetration of her willing mouth, and bit my lip to keep from moaning.\n\nIf it were possible to grin wickedly with a mouthful of cock, Gina would be a master at the skill. She pressed forward, her eyes bright with mirth. My cock disappeared between her lips. She lifted her fingers to cup my heavy balls, and massaged them as her head shifted, sucking my cock in slow sensuous strokes.\n\n\"You've been fucking Katie-slut,\" Gina asked in a sultry whisper, pulling back and stroking me with her hand, \"You taste like her, did she enjoy being your slut?\"\n\nI nodded then tugged on her hair, pulling her mouth onto my cock. I enjoyed how her eyes sparkled, sensing I needed her to continue what she started. My eyes were drawn past her mouth to her deep cleavage, and she lifted her hands to her shoulders then pulled her top down. Her breasts flattened then sprung free of the stretched material, and bounced. She cupped them in her hands, then pulled her mouth from my cock.\n\nLooking up at me, she rose up, lifting her ass from her calves and pressed her massive tits around my cock. Her warm flesh felt so good, and my cock slick with her saliva slid easily between her two full breasts. She looked up at me as she shifted up and down, fucking me with her tits. She lowered her head and sucked on the tip as it sprung up between her orbs, then lapped at the tips as her movement up pulled the cock back between her luscious orbs.\n\n\"You like fucking your whore's tits,\" she teased, \"Do you want to give me a warm pearl necklace to wear?\"\n\n\"Standup,\" I managed to growl quietly, \"I need to feel your tight cunt.\"\n\nGina grinned and rose, my cock bouncing stiffly as it slipped from between her tits. My fingers in her hair guided her mouth to mine, and I kissed her deeply. I twisted and we swapped positions, her back to the wall, then I twisted her around to press her into the corner. She immediately spread her thighs and pressed her ass back into me.\n\n\"God yes, please fill your whore's cunt with you glorious dick,\" she pleaded softly looking back at me over her shoulder, \"I need to feel you in me so badly.\"\n\nI flipped up her new miniskirt and gripped her bare ass, she hadn't worn any panties under her new clothes. I pulled her cheeks apart and pressed my hips forward, the tip of my cock slid along her bare lips, feeling her arousal as my cock slipped between her thighs. \n\n\"Such a naughty girl,\" I huffed leaning closed, \"Not wearing any panties,\"\n\n\"I'm always ready for you,\" she whimpered, \"I am your good little whore.\"\n\nI pulled back and gripped my shaft, using my fingers to run my cock between her soaked lips. She nodded as she felt me, and I thrust forward, feeling her cunt stretch and envelop my shaft. I drove deeper until my hips pressed into her bare cheeks. Then drew back slowly.\n\nHer eyes fluttered and shut as I fucked her with slow full strokes. My hand reached around and cupped one of her full breasts. She moaned in time with my indulgent strokes, her eyes fluttering open to stare back at me. My free hand slid along her spine then gripped a handful of her short hair.\n\nWordlessly she nodded as I took control. My strokes accelerated, fucking her harder and faster. Her hand lifted to press into the walls keeping herself from banging into them with my hard strokes. I growled as I watched her, her eyes turned watching me, silently begging for more, harder, faster.\n\nI hammered into her then pulled her ass tight against my ass, and twisted her away from the wall. She swung around in free space, then her fingers gripped the end of the table I was using as a desk. I pressed forward, bending her over the desk. Moving her into view from any one who might walk past the hallway.\n\nGina clung to the desk, as I continued to ram my cock into her cunt. She gripped then found her stance, then started to flex her hips back to meet my thrusts. Our flesh met and a loud slap echoed in the small space. Her head tossed back and she pressed her forehead to the surface of the table, her thighs shaking as I felt her close to her edge.\n\nHer moans were getting louder, as my own breathing grew heated and quickened. Tess's face appeared at the opening to my alcove, her deep blue eyes widened as she watched me savagely fuck her neice. Tess's azure curls bobbed as she watched us fuck, then she stepped into the alcove and pressed against me. \n\nMy arm wrapped around her as she lifted her lips to kiss me. I thrust my tongue hungrily into her mouth, feeling her own lust rising in the heat of the passion between Gina and me. Gina tossed her head, then looked over her shoulder and her body stiffened as she saw me kissing her aunt. Her cunt clamped around my cock as she came hard. I slammed in deep, and pulled from her stepping back.\n\nTess was wearing a sundress, and I spun her around to face Gina. Gina sprawled against the edge of the table then rolled onto her back. Tess leaned forward, and kissed her niece, I lifted Tess' skirt and then hooked my finger through the thong between her cheeks.\n\nWe all shifted in an eager unison. Gina slipped back on the table, her bottom just at the edge. Tess gripped her niece's ankles and spread them as pressing her mouth into Gina's dripping cunt. I yanked back on Tess' thong, feeling it rip at the seam, then pressed my cock against her bare cunt. She hadn't been watching long, so wasn't completely ready, but my cock was slick with Gina's spending and I slid easily into Tess's tight tunnel.\n\nTess tossed her head and drove her hips back to meet my thrusts as she moaned out from the sudden invasion of her sex. She rolled her head back to look at me, nodded wordlessly, then returned to licking the delicious juices running from her niece's open sex. I bit my lip, holding just back from the edge, wanting to push Tess into her own peak as quickly as I could.\n\nTess responded to my hard thrusts by squeaking, pulling from Gina's crotch, and gripping the edge of the table, pressing to meet my thrusts. Tess' cunt was now like liquid fire around my cock.\n\n\"Fuck Josh, you're gonna make me cum so fast,\" she panted, \"please please harder. Fuck!\"\n\nI felt her body start to tense, her hips stilling as I took over and rammed into her. The sexual heat I felt from this sudden threesome had me at my own peak. I felt Tess' knees buckle and her thighs clamp and shudder. Her cunt tightened as I thrust deeply, then held as my cock pulsed inside of her and released a torrent of my hot cum into her womb.\n\nI rutted my hips in short strokes, looking over the trembling form of Tess into Gina's eyes as my balls emptied into her aunt. She licked her lips, and lifted her ankles around her aunt's waist, pressing her sex up. Tess groaned then her head shifted, I watched Gina's eyes closed as Tess licked her. Gina slid her fingers through the blue curls of her aunt's hair encouraging her to continue pleasurable oral ministrations.\n\nI pulled out of Tess, then stepped forward. Gina twisted on the table, her eyes tracking mine as I leaned against the edge of the table. My cock slick with Tess's sudden orgasm and dripping my own cum. Gina leaned and opened her mouth, using one of her hands to steer my cock into her mouth. I bit my lip at the suction and then her eager hungry tongue lapping at my tip. \n\n\"Found him!\" Essie's voice called out from behind me, \"Found Tess and Gina too.\"\n\n\"Oh!\" Rhi said, as I felt her presence behind me next to Essie, she laughed, \"I thought he might've been working.\"\n\nEssie and Rhi slid beside me and hugged me tightly. I turned and kissed each of them in turn, as Gina cleaned my cock, and Tess cleaned Gina. Then we all disengaged, and I collected my trunks from the corner, and pulled them up.\n\n\"How was shopping?\" I asked, nonplussed by the additional company.\n\n\"We had fun!\" Essie smiled, and Rhi nodded brightly.\n\n\"How was your time with Katie,\" Rhi asked with a grin and a raised eyebrow, \"I expected her to um... satisfy you while we were all away.\"\n\n\"Oh she's satisfied, sleeping up in our room.\" I grinned, \"I guess Gina needed more than just a few new clothes.\"\n\nGina blushed at the comment, shifting off her back and pulling her clothes back into place. Tess stood shakily and smoothed her skirt down, also blushing, then leaning to kiss her sister.\n\n\"Oh, Rhi,\" Tess smiled into her sister's eyes, \"I'm so glad there is a man around the house, to do the work that needs to be done.\"\n\nAll of us laughed, then moved out of my office and back into the living room. Katie was climbing down the stairs in her yellow bikini, watching us walk back into the main room. \n\n\"Are we going to swim?\" She asked, \"or at least soak in the hot tub? I am a bit sore.\"\n\nRhi looked at me, and I shrugged and blushed. Rhi shook her head and kissed me softly, then deeply.\n\n\"A hot soak sounds wonderful,\" Essie agreed, and then stripped completely and took Katie's hand. \n\nWe all left our clothes in the living room, and exited the house and slipped into the hot waters of the jacuzzi. The sun was just beginning to set in the west, as Essie and Katie started kissing. Rhi and I enjoyed a long slow kiss, which grew hungrier. Tess ordered pizza from her phone, before she and Gina renewed their amorous kissing. \n\nIt wasn't long until Rhi was sitting on the edge of the pool, legs spread as I rammed into her feverishly. Essie was perched beside her, with Katie lapping between Essie's thighs. Gina was invested with pleasuring her aunt, who was reclining on the edge of the circular tub. When the pairings all crashed into orgasmic bliss, the doorbell rang. \n\nI shifted out of the water, and pulled up my swim trunks to answer the door. The pizza delivery person was a woman, who handed over the boxes of our dinner. I told her to hold on a moment, and took the pizza inside to the counter. I found my wallet and pulled out a $10 for a tip, returning to hand it over. She took it with a smile, then her eyes dropped past my waist, lingered at my bulge, then back to my eyes.",
        "\"Thanks for the tip...\" she said with a flirtatious grin, \"We appreciate your ... business.\"\n\nHer eyes dropped to my cock again as she said the last word, then slowly turned back towards her car. She looked over her shoulder at me, before climbing in and driving away. I stood for a moment, unsure of what just happened. Then I slowly adjusted my cock, and turned to go have dinner with my naked harem.\n\nAfter dinner we split into threesomes. Katie went with Essie and Rhi to the master bedroom. I followed Gina and Tess into Tess' room. I still had no idea what new clothes were bought, and we didn't talk about fashion at all. After enjoying ourselves and reconnecting, we faded off to sleep. I ended the week between my needy little whore and my greedy slut, as my three slaves slept upstairs. I felt they were all equally satisfied as my eyes closed and my mind became blank.\n\nAuthor's Note\n\nThank you for reading this chapter. Your votes, comments and favorites encourage me to write more and continue this story. A new week is starting, filled with new challenges, secrets and a few unexpected twists and turns. \n\nI'd like to thank Pope1944 for editing help on this chapter. I hope to push out chapters regularly as the story progresses. As always your feedback and questions are welcome and encouraged.\n\nThank you,\n\nHank"
    ],
    "authorname": "HankDolworth",
    "tags": [
        "anal",
        "bisexual",
        "dominance",
        "group sex",
        "polyamory",
        "submission",
        "threesome",
        "tpe"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/basics-neural-control-node-ch-09"
}