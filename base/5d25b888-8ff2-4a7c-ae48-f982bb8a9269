{
    "title": "Project - Prometheus Ch. 29",
    "pages": [
        "Graham walked into the station, heading off to grab some beers with the men. Though that part was true, it was also a cover to meet up with one of the three IA watchers that had been placed on the station. He thought it was a bit cheesy and also overdone, having watchers pose as dancers. But he couldn't fault the level of intel they gained over the past months, as many people tended to become loose lipped around pretty faces.\n\nThere was also another reason why he was meeting with his contact, and that was because she had something for him. Though he wasn't one to shy away from a gift, he was curious as to what it was. It wasn't like his life or file was an open book, as it was sealed, along with many other deep cover IA operatives. She had insisted that it was something he was looking for, so he thought he'd roll with it.\n\nHe walked into a coffee shop nearby, which advertised blends for all species, and Graham figured he could use a coffee. He got into line and ordered himself a black Brazilian roast, medium sweet. The man also ordered himself a chocolate chip cookie and was surprised at the quality of it when he bit into the confection. They almost reminded him of the way his mother used to make cookies.\n\nHe then took a seat at a nearby table, happily munching on his cookie and enjoying his coffee, when he spied his contact. Lucy knew that the meeting would always have to be random, so as to avoid detection or watchful eyes. A signal beep sounded in her temple implant, indicating that she was near Graham. The moment her eyes settled on him, she knew to walk over.\n\nLucy kept it casual, making it appear as though she was there for a cup of java. She was dressed modestly, looking every inch like a courier, and even had a large bag slung over her shoulder, bulging with packages. Lucy made her order, and after finding her beverage to her liking, headed over in Graham's direction. She craned her head around, as though looking for a place to sit, before looking directly at Graham. She approached with a sheepish smile on her face.\n\n\"Do you mind? Everyone else seems full up,\" she asked sweetly.\n\n\"Not at all! Please sit!\" he told her.\n\n\"Thank you! I also believe that I have something for you!\" she stated.\n\n\"For me?\" he questioned.\n\n\"Yes! I am a courier and I believe you ordered something! The company tasked me with delivering it, but you know how military protocol is with delivering things,\" Lucy told him.\n\n\"What do you have for me?\" he queried.\n\n\"First, I will need to verify your identity. If you will stand still, please?\" she asked him while whipping out a small portable scanner. She took a scan of his face and the machine beeped in recognition, identifying him as Lt. Commander Graham Williams.\n\n\"Identity verified. You know, you're really lucky to have gotten this! Skardonian lace made from Rondathan vine silk? Garments made like that are hard to come by!\" she told him.\n\nGraham almost did a double take when she told him that. If what she told him was true, then inside was a set of lingerie that Ana had been wanting for years! The only problem was that Skardonian lace was insanely expensive, especially when it was made from Rondathan vine silk! Though it wasn't traditional Skardonian lace, the hybridization was so in demand that only a certain number was made per galactic year!\n\n\"I believe that it's also a shimmer set. Those are insanely rare!\" Lucy told him.\n\nNow, Graham almost had a heart attack! Shimmer sets of the lace were unique, in the manner of how the silk had been treated, before it was sold to the Skardonians. The silks were often white when harvested and easily colored. There was a process which was seldom done to the silk, which made it shimmer to reflect light and emulate any color in the spectrum. Such cloth, when it was made available, was often thousands of credits, for just one yard!\n\n\"Oh, Ana is going to love this!\" Graham chuckled. \"Is there anything else for me?\"\n\n\"Let me check my list, Lt. Commander,\" she replied, going for a data tablet. She browsed over it a few times before telling him, \"Nope. That is all for your deliveries today. Have a good day, sir!\"\n\nGraham smiled inwardly and thought about how Lucy was very clever with this drop. He had zero doubts that the information she wanted to deliver to him was inside the lingerie package. He was also flummoxed on how Lucy knew Ana had been wanting a set of this lingerie for a while now. He chalked it up to her being part of the same department and to her job, as only the best operatives were placed here on Veldhern.\n\nHe sat there, enjoying his coffee and cookie before he got up to meet the guys for some beers. Though he was tempted to sneak a peek at the lingerie, he didn't want to risk any cookie crumbs or coffee stains on it. He knew that the moment she saw this; she was going to lose her shit. Which in turn also meant a long night of marathon sex for him. Graham grinned to himself as he imagined all the naughty things his wife would do to him while wearing her new outfit.\n\n******************************\n\nLight streamed in through the window to the villa in which Alex, Natalya, Kasumi, Shazza and Korsa were staying. It hit the bed, where Natalya and Kasumi were still snoozing, getting their beauty sleep. Both women had been the primary focus of Alex's attentions the previous night, which left them tired and satiated. Though he had some help from Shazza and Korsa, which left them squealing like virgin schoolgirls before long.\n\nThe light finally came at an angle which hit their faces, making them both groan in frustration. Kasumi came awake first, blinking against the sun, before turning over and opening her eyes. It had been a few days since they began their impromptu vacation, and every day had been nothing short of pure bliss. Kasumi smiled as she sat up and yawned cutely before stretching her arms over her head.\n\nShe looked down and saw that Natalya was stirring, and the redhead smiled. Last night would be making her smile for many years to come. It wasn't just Alex, Korsa and Shazza that had given her unimaginable pleasure, but Natalya too. She always knew that Natalya was nympho and last night had all but sealed that opinion in Kasumi's mind. To be fair, she was just as freaky with Natalya, and the memory of the night left her blushing.\n\nShe groaned slightly as she stood, more than a little sore from last night's romp. Kasumi felt that a nice hot shower was in order, and padded over to the bathroom quietly. The reddish-brown stone, carved from the natural stone of Veldhern, was beautiful to gaze at. Much of the bathroom had been decorated in it, especially the spacious shower, which was large enough to accommodate all five of them easily.\n\nKasumi turned the shower on after doing her morning business, letting it build to a good steam before stepping under the hot needle spray. The hot water sluiced across her skin, soothing her sore and throbbing bits nicely. She moaned at the stimulation when she felt a pair of feminine hands on her back. They slid around her, stealing some of her warmth, but not enough to make her complain.\n\n\"Good morning, Nats! Sleep well?\" Kasumi asked.\n\n\"Haven't slept that well in... decades,\" she replied.\n\n\"Really? You've had trouble sleeping over the years?\" Kasumi questioned, surprised that she didn't know this about her lover and friend.\n\n\"Before meeting Alex and... becoming his girlfriend, I always had trouble sleeping,\" Natalya said to her.\n\n\"Is it because of what happened to... your parents?\" Kasumi wondered, turning to face her.\n\n\"Yeah. When Korsa took me in, she saw about getting me the help I needed to get past it. I did, mostly, but after a second encounter with that asshole, those nightmares came back,\" Natalya stated.\n\n\"Wait, you ran into him, again? How?\" Kasumi queried.\n\n\"Later, Kas. I don't want to cloud our vacation with an old memory. I want to enjoy the time we have here, without digging into old wounds,\" Natalya told her.\n\n\"That's fair. But... you're sleeping well now?\" Kasumi inquired.\n\n\"Mmmmm! Like a baby after a tummy full of milk! I thought it was just Alex who could do that for me, but... all four of you do that for me. It's weird,\" Natalya said.\n\n\"I think I know why. With us, you no longer have to worry about those nightmares, because you have us,\" Kasumi told her, while giving her a slow, loving kiss.\n\nNatalya returned the kiss, moaning in agreement at the statement. Kasumi hit the nail on the head with that assumption. Natalya did feel safe, protected and loved, with Alex, Kasumi, Korsa and even Shazza. In her heart, Natalya knew she could always count on them to be there for her, no matter what happened.\n\n\"I couldn't agree more! As much as I'd love to continue this, we only have this place for a few more days. I'd like to enjoy it as much as I can,\" Natalya stated.\n\n\"You don't have to tell me that! I loved going to the beach when I was a kid! This is almost a reminder of home!\" Kasumi gushed.\n\n\"Then let's clean up and get something to eat! I'm starving!\" Natalya grinned.\n\nJust then, her stomach rumbled, which made Natalya blush. Kasumi giggled, but said nothing as the pair of them got cleaned up. They let the heat of the shower massage the parts of them that were still tender before washing up. After they stepped out of the shower and got dressed, with Natalya wearing a yellow thong bikini, while Kasumi selected a deep purple slingshot.\n\nThey pranced on out into the kitchen, thinking to find the other three of their lovers waiting for them. Instead, the kitchen was empty, but the smell of breakfast lingered in the air.\n\n\"Mmmmmmmm! Smells like... pancakes!\" Natalya murmured.\n\n\"Bacon too!\" Kasumi gushed. \"Hey, there's a note here.\"\n\n\"What does it say?\" Natalya asked, following her nose to the stove.\n\n\"It says, 'Breakfast is in the oven. Join us when you're ready, sleepyheads!'\" Kasumi snickered.\n\n\"That sounds like either Alex or mama! There's coffee here too!\" Natalya told her.\n\n\"Oooooh! Coffee! Gimme, gimme, gimme!\" Kasumi bubbled as she dashed over to pour herself a cup.\n\n\"I swear, I've never met anyone, human or otherwise, who loves coffee as much as you do, Kas,\" Natalya remarked.\n\n\"I do love my coffee. One birthday, I remember my dad getting me a shirt. It was brown, with the words, 'Give me coffee and no one gets hurt' on it,\" Kasumi laughed. Natalya couldn't help but snort at this, thinking the whole thing beyond funny.\n\n\"Appropriate!\" Natalya giggled. She doled out Kasumi's and her breakfast before heading over to the table to eat. Kasumi joined her a few moments later, bringing over two cups of coffee and glasses of a citrus juice. It wasn't pure orange juice, but it was a passable substitute, being a blend of human and alien fruits.\n\n\"So, you happy with the mods you got so far?\" Natalya asked.\n\n\"Oh yeah! Enhanced speed, strength, and reflexes? I'm really glad that technology has advanced enough to where those mods are viable in fully grown adults!\" Kasumi enthused.\n\n\"What else did you get? You were under for nearly as long as I was,\" Natalya questioned.\n\n\"I also got the mod that gives me a higher pain tolerance and one that will help widen my hips over the next few months,\" Kasumi admitted with a blush.\n\n\"Making your ass a little bigger?\" Natalya snickered.\n\n\"Mainly to help with making childbirth a bit easier. I'm half Japanese and those with Asian genes generally don't have hips as wide as white girls, or even black girls for that matter!\" Kasumi explained.\n\n\"Ah! I gotcha! I got enhanced endurance and reinforced bone weave. Though I trained as a soldier and have the whole 'tough as nails' thing going on, my bone structure leaves a bit to be desired,\" Natalya responded.\n\n\"I hear that! It's good to know that many diseases and disabilities are mostly eradicated,\" Kasumi smiled around a mouthful of bacon.\n\n\"Mostly and unless your case sits above the moderate level. If you want enhancements that make you more than just a traditional human, you have to pay for it,\" Natalya informed her.\n\n\"Still, at least kids born with any conditions that would have hampered them, will now live a normal life. I knew a few people who were confined to wheelchairs or in need of walking braces to get around,\" Kasumi told her friend.\n\n\"To everyone in this time, your time almost seems like a dark age,\" Natalya grunted.\n\n\"That is something that we can agree on! Oh, and I almost forgot. When is our appointment for the reinforced spine and advanced healing factor supposed to happen?\" Kasumi asked.\n\n\"Five PM local time. I think Inari is joining us for the advanced healing factor as well,\" Natalya remembered.\n\n\"Didn't she already get that during her time with Federation as a soldier and a pilot?\" Kasumi asked.\n\n\"She did, but they are outdated. She's headed up for an addon to the mod she already has, giving her healing ability a much-needed boost,\" Natalya explained.\n\n\"It was surprising to learn that Inari had mods to begin with,\" Kasumi laughed. \"I honestly thought that she came out genetically perfect.\"\n\n\"She did, mostly. There were a few mods that the Federation paid for, to strengthen her, but that's about it. The mods that allowed her to keep her tits, no matter how much she muscled up, she paid for that,\" Natalya explained.\n\n\"Inari also mentioned something about a form mod that she got? It was during her days in the academy,\" Kasumi stated.\n\n\"Yeah. Inari told us about an accident that screwed up her hips and left them cocked to one side. The mods helped straighten her out, and it helps her maintain her form, no matter how she much she gets hurt. Though it isn't a fix all mod, as she still has to be careful with what she does and how badly she gets hurt,\" Natalya continued.\n\n\"Still, tit mods? Never thought that would be a thing! Then again, women in my time paid through the nose for good implants that looked and felt like the real thing,\" Kasumi chuckled.\n\n\"Yeah! But her mods weren't at the optimal point they should have been. They're nowhere near as effective as they used to be, but that happens with age. Thankfully, Korsa found a way around that,\" Natalya told her friend as she munched on some bacon.\n\n\"Oh? How did she do that?\" Kasumi wondered.\n\n\"Mama put Inari in the Regen pod we have aboard the Darkstrider. She had to do some test runs and cycle through it a few times before she tuned the pod properly. After that was done, Mama had Inari undergo a repair therapy. Now her mods are functioning as they should be and have integrated with her genome properly,\" Natalya stated.\n\n\"I read that was a risk that anyone who has mods had to deal with. The percentage is fairly low that they don't take properly with the recipient, right?\" Kasumi asked.\n\n\"Less than four percent, but thankfully, the routine Mama put together reduces the risk to less than one percent. Like, point zero, zero, zero, one percent chance of the mod not taking,\" Natalya explained.\n\n\"Think the same would work for us?\" Kasumi asked, happy to hear about minimizing the risks.\n\n\"Yeah, but we should wait at least six months, for our mods to settle, before we fiddle with our DNA. Don't want to become a slushy puddle of goo,\" Natalya warned.\n\n\"Good plan! Screwing up our genetics is the last thing I want to do!\" Kasumi agreed after finishing the last of her pancakes. \"So, do you think we'll catch Alex's attention today, with these on?\"\n\n\"Oh, I think he's going to have a... difficult time in keeping his hands to himself,\" Natalya giggled. Chuckling with her friend, Kasumi stepped out with Natalya out into the sun and headed towards the beach. Kasumi then put a sway in her step, making her ass shimmy left and right as she moved.\n\n\"You're just a glutton for punishment, aren't you, Kas?\" Natalya snickered.\n\n\"I could say the same for you, Nats! Wearing a thong that could almost be considered a micro? I think you're the one who's looking to be punished,\" Kasumi shot back with a laugh.\n\n\"Well... my ass did escape a proper reaming last night. I'm hoping that this will... entice Alex to make a proper go of it,\" Natalya admitted, while batting her eyes.\n\n\"Seems like we are of the same mind! It's why I chose this one!\" Kasumi replied, gesturing at her slingshot suit. \"I wouldn't mind a session where it's just our butts getting pillaged. Anal is something that I love experiencing, and I hope that Alex corrects this... missed opportunity.\"\n\nGiggling evilly, both women headed down to the beach where Alex, Shazza and Korsa were busy sunning themselves. Natalya got a truly devious idea and hoped she'd get some help from Shazza and Korsa in making this idea a reality.\n\n******************************\n\nAt the tourist docks, a passenger liner docked with the station, eager to offload its complement of tourists. Among them was a thin, but well-kept man who moved with pride and purpose. He approached the security checkpoint when it was his turn and was passed through without incident. The only thing was that no one knew that such a well-dressed young man was the infamous hacker known only as Void Lord.\n\nHe proceeded through the promenade and took in the sights, having never been to Veldhern before. He passed the storefronts and kiosks, taking a mild interest in the items they had to offer before heading to his accommodations. Being a highly sought after hacker had its perks, and anyone who hired his services had to pay astronomical prices to secure him.\n\nWhen he was tabled this offer initially, he considered passing it up, but that was before he knew about who he'd be facing. Hearing that Taal'ani, a.k.a. Talon of Justice was one of the people he'd be stealing from, the man had taken the contract immediately. Facing down Talon and beating her was something he'd been dreaming of since she had exploded on the hacker scene years ago.\n\nOver the years, something of a professional rivalry had formed between the two of them. After several encounters and duels, it had quickly turned personal, for him at least. Void Lord had been a top shelf hacker and was regarded as the best, until Talon had beaten him handily, more than once. Such slights weren't easy to shake off and often dug at the man.\n\nWhat hurt the most wasn't just that she'd beaten him, but that she'd done it like it was nothing. After enough battles between each other, with her as the victor, Void Lord was soon regarded as the lesser of the two. For him, he couldn't let such things stand and had often tried to take her down, but failing each time. He hoped that this time he would have enough and be enough to finally bring her down.\n\nHe didn't just want to win either; he wanted to win at such a level that it would humiliate her. That the Talon of Justice would be considered a memory of a has been who couldn't stand against the might of the Void Lord! Such a victory over her would be sweet, and with his newer toys and programs, he believed it was possible.\n\nThe man continued the on-station hotel, which was a lavish and well looked after structure. He gave his cover name, which resulted in him having his key in hand a few minutes later. He took the nearest elevator to his room, which was very well appointed, and had all the additions he had asked for. One thing he saw were two men in the room, one a human, like him, while the other was a Takharian.\n\n\"Void Lord?\" the human man asked casually.\n\n\"Shhh! The walls might have ears!!\" the man hissed.\n\n\"Doubtful, since we have already handled those, per your request. It wasn't easy, but we got it done,\" the Takharian man told him.\n\n\"Still, I don't like being careless!\" Void Lord told them.\n\n\"I wouldn't expect you to be. Your reputation precedes you and from what I understand, you will be able to procure us what we need,\" the human man told him.\n\n\"Your money is good, so whatever you need, I am more than happy to provide,\" Void Lord replied.",
        "\"Excellent. You need not know our names, but just know that we require the most delicate of touches on this. The job requires stealth and discretion and it is of the utmost importance that it be done without the other side knowing what's happening,\" Dexter told him.\n\n\"Sounds simple enough. What am I stealing?\" Void Lord asked.\n\n\"Hyperspace routes and co-ordinates to something that has been lost to us. We'd like to get it back from these... thieves,\" Saubath stated.\n\n\"We will need you to be prepared ASAP. We are expecting the ship with the logs and routes in question to be docking later today. You will find all the information you need in this data docket we have prepped for you,\" Dexter told Void Lord, handing him a datapad.\n\n\"All right. Where do you want the info delivered to?\" Void Lord asked, wondering who he'd be sending it to.\n\n\"You will deliver the information in person. The data is far too sensitive to just be transmitted over any lines, even secure ones,\" Saubath told the diminutive man.\n\n\"You guys are seriously kicking it old school with this! How about a renegotiation of my rate?\" the man asked them with a casual smirk.\n\n\"You greedy little...\" Saubath cursed, until Dexter slapped his hand on the big man's chest, stopping him.\n\n\"A bonus will be added to your already... considerable fee, provided you deliver on your end of the bargain,\" Dexter told the hacker. Saubath calmed considerably at this, thinking it was fair.\n\n\"All right. I can go with that. If you two are done here, I'd like it if you let me be. I need to get to work, as you so eagerly asked me to,\" Void Lord told the men.\n\n\"Very good. Lor'kanth, we need to let the man work. If you will,\" Dexter gestured towards the door. He watched the men leave the room and when they were gone, he turned to his baggage and started unpacking them.\n\nInside them were some basics that everyone required, clothes, toiletries, etc. the most important thing he'd packed was his hacking rig. Most personal computers were far more portable than the old and bulky PCs and laptops of centuries past. Most were now small handheld affairs, in which mountains of data could be stored. Some were even as small as a standard wristwatch, but that was mainly for those who needed only the basics.\n\nVoid Lord's rig was a bit larger than an old style reader tablet and looked just as innocuous. He placed his finger on the screen and spoke out his password, turning the machine on. A beam then shot out of the screen, searching for its owner. He kept his face close by, as it was checking to be sure that it was him trying to access it. After scanning his face and eyes, in chirped an affirmative sound, before powering on.\n\nNearly instantly, a jumble of holographic readouts and tools popped out of the rig. Void Lord cracked his knuckles and started shifting things to where he liked them, as he opened up the data packet. He held the tablet to his scanning tool, and it copied all the information he needed onto his rig. He then took the tablet and smashed it to pieces, doing what he always did to keep his tracks covered.\n\nThe man opened up the data files and went over what he'd been given about every member of the Darkstrider crew. He also went over the supposed layout of the Darkstrider itself and its possible security measures. A detailed scan would have been preferred, but these two men, whoever they were, hadn't gone that route. He knew that members of the Collective didn't advertise who they were and what they were doing, so he'd have to work with what he had.\n\nVoid immediately nixed trying to sneak aboard and establish a link directly. With the crew being the types they were, there was no way he would survive a physical encounter with any of them. That left doing this remotely, and while it wasn't ideal, it would have to do. He was up to the challenge though, and relished the idea of finally putting Taal'ani in her place.\n\nHe smiled as he read the scheduled docking time they had and why they were coming back up to the station. The materials purchase and the loading of said materials would give him the perfect cover to infiltrate the ship's systems and take what he needed. With everyone busy minding the loading of the items, they wouldn't see him coming!\n\nThough he'd been contracted for a certain job against these people, it never hurt to take a little more than what he needed. He never knew what could be useful later on down the road. Void Lord sat there and smiled at the sweet feeling of revenge that he'd be tasting soon!\n\n******************************\n\n\"I don't trust the man. Too greedy and too slick for my tastes,\" Saubath grumbled as the pair of them ambled along through the station.\n\nIt wasn't an uncommon sight for the pair of them to be spotted together, as their ranks required them to work together occasionally. They'd been careful to keep things professional when in public. Now that they were out of earshot and in the sector of administrative offices that Dexter controlled, they could speak freely.\n\n\"I don't like the man either, but he was the only one with the skillset who was close enough to contract. Anyone else would have taken a week and a half to two weeks to arrive here,\" Dexter told him.\n\n\"Just make sure to tie up any loose ends when the job is done. I want this done as clean as possible,\" Saubath reminded his compatriot.\n\n\"It will be. Don't worry so much, Arcann. We will have what we require and once we have it, we can walk away from our covers and start overseeing the monumental work the Collective will build,\" Dexter told the Takharian.\n\n\"They see it as something that important??\" Saubath gasped, shocked at the recent change.\n\n\"Yes. Because of this, once we have the information, we are being recalled immediately. With a ship like the Perseus at our command, we will be able to have battle ready fleets constructed in a fraction of the time and at a fraction of the cost!\" the human stated, exhorting his comrade-in-arms.\n\n\"And the technology level we will possess will make every other fleet be little more than flying scrap heaps!\" Saubath grinned, remembering the raw, unfettered power the Darkstrider possessed.\n\n\"Yes! With enough time, we will topple all governments who stand against us, no matter their numbers!\" Dexter grinned. Just then, a quiet alarm sounded on Saubath's arm. The Takharian man looked down at it and groaned.\n\n\"I have to get back to minding my fleet, before I'm missed. Let me know when things are ready and I'll enact our exodus from the system,\" the commodore told Dexter before he left. He walked out of the office and followed a pre-planned route out, so he wouldn't be noticed.\n\nSaubath couldn't help but smile to himself as he thought about what lay out in space, ripe for the taking! As a hatchling, he'd been told the tales of the technological marvels that the humans once held. How they had lost it, just before the outbreak of the Dark War and how of the eight dreadnoughts, only one was destroyed. He'd dreamed of one day finding such a ship and commanding it himself! Now that dream was within reach!\n\nThe Takharian man had changed much since his days back on his homeworld. He was no longer a scared youngling who had been the runt of the litter. The power he commanded would have made most warlords envious. He also remembered a vow he had made to himself when he was still young; to finally unify his people under one banner.\n\nThough his planet and people were among the myriad of advanced civilizations, they remained divided. Many warlords had tried to unify the Takharian people under one banner, but they often failed due to incessant levels of infighting. Every male and some females often fought to prove they had the strength and will to lead. This often led to more Takharian blood spilled than was necessary.\n\nNow that the Perseus was within reach, he would finally have a way to crush the bickering warlords. Saubath could become the Supreme Warlord and unify his people, leading them to conquest! With this dream now within reach, he felt it was possible for his people to become the new power in the galaxy!\n\nThe Tosh'kanthi Collective, while powerful, was far too subtle and stealthy for his tastes. Arcann Saubath joined them because they seemed like the best chance he had to become the Supreme Warlord of the Takharian people. The Collective wasn't aware of his aspirations, at least as far as he knew. Still, if he was going to betray the Collective, he'd have to be careful about it.\n\nThinking about what was occurring at that moment, Saubath knew it was unlikely that this job would go off without a hitch. Most high risk operations rarely unfolded as planned. Though he had to get back to the fleet, Saubath knew that he'd have to have his exit plan on standby. It was this mentality that had seen him rise to the rank of commodore, and he wouldn't wind up in a cell or worse by being careless.\n\n******************************\n\nGraham was still in utter shock at what he had just learned! Not only was Dexter Malkaran a sleeper agent for the Tosh'kanthi Collective, but so was Arcann Saubath! This sort of situation called for extreme measures, but Graham couldn't act, not yet. Though the audio files that Lucy had squirreled away in the lingerie were damning, it could be fought in court. No, Graham needed something that damned both men beyond any shadow of a doubt.\n\nThe IA operative then fired off a coded message, using a highly secured network that only IA operatives could access. He needed to speak with Lucy or one of the other operatives immediately, and couldn't risk blowing his cover. He sat there, mulling over the knowledge he had gleaned.\n\nThat Dexter was a Collective sleeper agent had left the man reeling. Having met the man on more than one occasion, he came across as a duty bound and driven man, doing everything he could for the betterment of all. Dexter had succeeded in that capacity so much that no one would have figured him for an enemy spy.\n\nGraham knew that if he was a plant, then he'd have to do something about him, and fast! Hopefully, one of the operatives would get his message soon and reply. He knew that if these two men were Collective agents, then there were likely others as well. Graham could only hope that he could uncover them before too much damage was done. Just then, his console on the desk beeped, telling him he'd received a reply. He opened the screen and read the new message.\n\n'Message received. Orders?' it read in bold text.\n\n'Infiltrate the offices of Dexter Malkaran and retrieve any information pertaining to their current actions and goals. Use any means necessary to gain access to the information,' Graham typed, giving the operative her mission.\n\n'Mission parameters?'\n\n'Stealth and deception is required. They cannot know that we're onto them. If compromised, use of deadly force is authorized. No witnesses to report back,' the man told his operative.\n\n'Understood. Requesting an RA-2178 form before mission commences,' the reply read. Graham's eyes widened, as he did not expect this! The operative was requesting a form to read someone in on their status?!? He shook his head and replied.\n\n'Explain.'\n\n'Mission success will require burning an asset. Would rather have the asset read in and be of assistance further in the future,' came the response.\n\nGraham mulled over the idea and saw its potential merits. If the mission was successful, having an additional pair of eyes that could be trusted wouldn't hurt. The man couldn't help but smirk, thinking that one of the watchers had likely fallen for said asset. He honestly couldn't fault the operative for her actions, as he'd done much the same after meeting Ana all those years ago.\n\n'RA-2178 form request will be fulfilled upon mission completion,' Graham wrote back. He sat there for a moment before he received his reply.\n\n'Accepted. Beginning mission now,' the final line came in, before the line went silent. Graham sighed, taking a deep breath to calm himself. Now that the matter was out of his hands, the only thing he could do was wait and pray.\n\n******************************\n\nLucy had just finished up with her breakfast as she was communicating with Graham. To anyone watching, it just looked like some sort of virtual business chat. The line, though, was secured that even hackers like Void Lord would have had trouble breaking through. She was happy to hear that she was getting the form at the mission's end, but Lucy took a deep breath nonetheless. Now came the tough part.\n\nThe asset that Lucy had turned out to be her girlfriend of several months, a nice Arabian girl named Ziva. She had initially done what she was ordered to, stay on the periphery and be the friend of a friend. It had mostly been easy, as she lacked any real connection with anyone on the station. Ziva, however, turned out to be a different story.\n\nUnlike everyone else whom she'd met, Ziva had an undeniable pull that Lucy couldn't figure out. The more Lucy tried to distance herself, the more she was drawn to the woman. She was pretty sure that Ziva actively sought her out, and no matter how much she denied it, Lucy couldn't help but want the young woman.\n\nThey started out as good friends until Ziva had asked Lucy out on a date one evening while they were out with a group of friends. Lucy was hesitant, but after enough cajoling, she had finally agreed to go out on a date with her, provided they took their time. Ziva was more than fine with it, as she too wanted to take her time with dating Lucy. They had been together a couple of months now and things were progressing nicely between them.\n\nThey hadn't had sex yet, as Lucy was leery of letting Ziva know she was a futa. Opinions and personal feelings on futanari ranged from enthusiastic acceptance to outright hatred. Lucy hoped Ziva didn't mind that she was one, but the fear still lingered. Taking another deep breath, Lucy squared herself for one of the toughest conversations of her life.\n\nShe paid her bill, leaving a generous tip for the waitress, and headed off to the administrative offices where Ziva worked. Lucy moved at a brisk pace, more than a little excited, yet at the same time, terrified. Walking into the main reception area, Lucy craned her head slightly until she spotted her girlfriend. Smiling, she moseyed on over, putting a little extra sway in her step.\n\nZiva's head came up at Lucy's approach and she smiled, happy to see her lady. She kept her focus on the call, continuing the conversation as Lucy stopped at her desk. The woman finished up the chat she was having before ending the call. She then looked up at her girlfriend and she grinned.\n\n\"Well, I didn't expect to see you until later tonight! This is a pleasant surprise!\" Ziva told her.\n\n\"A few things just changed, and I wanted to see you,\" Lucy told the woman.\n\nZiva was a classical beauty and one of the few pureblooded Arabian women left. She had the dusky and smooth skin that was associated with her race, along with dark brown hair, which she wore long. Her brown eyes were warm and inviting, and Lucy could lose herself for days just staring into those eyes. With an oval-shaped face and clean features, it was clear that Ziva was noticed wherever she went.\n\nHer body was the stuff of dreams; long legs, robust curves, and more than enough flesh on her frame to make any sentient man or woman drool. Lucy remembered the first time they met; it was hard not to stare at such beauty. The IA operative shook herself out of her lust induced stupor and focused on what Ziva was saying.\n\n\"What changed?\" Ziva asked.\n\n\"A few things. You busy for lunch?\" Lucy wondered.\n\n\"Actually, I have the rest of the day off! My boss apparently needed some personal time to relieve some stress. Had me book him in for the rest of the day at the Solarion Spa,\" Ziva stated.\n\n\"Sounds like he's going to be busy all day!\" Lucy replied, thinking how this couldn't have panned out more perfectly!\n\n\"Yup! Leaving us two with the rest of the day all to ourselves!\" Ziva said sultrily as she sauntered up to her lady and kissed her. Lucy moaned and kissed her back, but didn't draw her in just yet. She broke the kiss and stared at Ziva, speaking her mind before she chickened out.\n\n\"Did you want to come and see my place? I'm off for today and tomorrow, so I thought we could get ourselves some... private time,\" Lucy suggested with a tremulous smile.\n\n\"Wait, are you being serious? You want to... take things to that level?\" Ziva asked, excitement bleeding through her voice.\n\n\"Yes. Among... other things,\" Lucy told her.\n\n\"Well, what are we waiting for?\" Ziva squeed. She then took Lucy by the hand and almost dragged her out of the offices while her co-workers looked on in amusement. The two women moved, almost running to the nearest lift, before heading down to the residences. Ziva pasted Lucy to the glass wall and kissed her fervently, letting her lady feel just how much she cared.\n\nLucy kissed her woman back, returning the passion of the kiss tenfold. They were interrupted by the ringing sound, which let the ladies know they had arrived on their level. They turned and walked out of the lift, ambling right past a young family. The two men looked at the couple with a smile as they ushered their three children aboard the lift.\n\nLucy led the way, navigating the walkways until she came to an apartment complex. Fishing out her keycard, Lucy opened the outer door, then retooled the key for the inner door. Once she and Ziva were past those, they nearly ran to her apartment and Lucy fiddled with the door. Ziva then turned her around and kissed her again, pressing her body tightly against Lucy's, before she peeped in alarm.\n\n\"Wha... what... is that?\" Ziva asked, stunned.\n\n\"Something I've been meaning to talk to you about since we met. Can we talk about this inside?\" Lucy questioned. Ziva nodded dumbly as Lucy turned back to the door and unlocked it. She then opened it and let Ziva in and followed behind her. Normally, Ziva would have taken in and commented on the artful and tasteful decor, but she was still a bit shocked at what she had felt.\n\n\"Ziva? Hello? Earth to Ziva?\" Lucy asked, waving her hand in front of her face.\n\n\"You're a... trans? Why didn't you tell me?\" Ziva questioned, annoyance bleeding into her tone.\n\n\"First of all, I'm not a trans. I was born a girl, but became a Futa,\" Lucy replied. \"Second, I didn't say anything, because of the job that I do.\"\n\n\"As a courier?\" Ziva questioned, confused.\n\n\"That's just one of my two gigs. I'm also a dancer at Sirens,\" Lucy went on.\n\n\"You're a... dancer and a... Futa?\" Ziva gasped, her jaw hanging open.\n\n\"Yeah, I am. I didn't say anything about it because I... was... afraid,\" Lucy admitted.\n\n\"Afraid? Of what?\"\n\n\"Being rejected, because of what I chose to be. I know that acceptance is easy enough to come by, but hatred still runs rampant about this lifestyle I've chosen. I didn't know where you stood on the matter,\" Lucy confessed.\n\n\"While I dislike being kept in the dark, I understand your stance on it,\" Ziva replied, giving Lucy a reassuring clap on the shoulder.\n\n\"I'm glad to hear it, but I think you should sit down for this next bit of information,\" Lucy suggested.\n\n\"What? What is it you need to tell me?\" the Arabian woman asked.\n\n\"Please, sit down? It'll make things easier if you're sitting. I don't want you falling and cracking your head on something,\" Lucy implored. Once Ziva was sitting down, she continued. \"Both of those jobs I have, as a dancer and a courier, are just covers.\"\n\n\"Covers? What are you? Some kind of secret agent?\" Ziva scoffed, nearly laughing.\n\n\"I am First Lieutenant Lucero Aguilar, Unified Coalition of Worlds Internal Affairs,\" Lucy confessed, telling her girlfriend the truth.",
        "\"Wait, you're Internal Affairs? Why did you bring me here? To arrest me? To make sure I disappear without a trace?\" Ziva accused as fear caused her voice to crack. \"Is that why you became my girlfriend??\"\n\n\"Ziva...\" Lucy began, but she was cut off.\n\n\"Why in the hells should I believe anything you say?!? You've been lying to me this whole time!\" Ziva shouted.\n\n\"I wasn't lying! I had to maintain my cover! It's part of my job! To blend in and be a friend of a friend. To always stay on the periphery! I was trained to be that way and followed my training... until you came along!\" Lucy shot back.\n\n\"Why should I believe you?!?\" Ziva spat venomously. Lucy closed the distance between the two of them, dragged her to her feet and kissed her for all she was worth. The kiss caught Ziva by surprise and almost fought back, but melted almost instantly in Lucy's arms. When Lucy finally released her, Ziva fell back on her ass, stunned and insanely turned on.\n\n\"Why... why...\"\n\n\"Because my training didn't prepare me for falling for anyone, I would potentially meet. Certainly not a beautiful and charismatic woman such as you! I'm just as stumped as you on how this happened, but it did!\" Lucy ranted.\n\n\"You've... fallen... for me?!?\"\n\n\"Of course! Why else would I kiss you like you are my everything and all that matters to me in the galaxy?\" Lucy questioned.\n\n\"To lull me into a false sense of security so that you can disappear me?\" Ziva grumped, pushing Lucy's buttons.\n\n\"Ziva, enough! I'm not after you or any of your co-workers,\" Lucy explained. \"I'm after your boss, Dexter Malkaran.\"\n\n\"What? Why?\"\n\n\"Before I tell you, I need to ask you something, and I want you to answer me truthfully. Did you or do you feel anything for me?\" Lucy queried.\n\n\"What does that have to do with anything?\" Ziva questioned.\n\n\"Just answer the question! Please!\" Lucy demanded, almost begging. Ziva sat there for a few moments, thinking things over in her head.\n\n\"Weren't the kisses I gave you obvious on how I feel about you?\" Ziva replied quietly, looking up at Lucy almost shyly.\n\nLucy smiled half-heartedly and Ziva could tell that she was having a tough time believing her. She wrestled with her emotions for a moment, then thought to herself, 'Fuck it!' and ran up to Lucy, kissing her. Ziva let all of her emotions out, putting everything she felt into the kiss. Lucy kissed her back, and the two of them wrapped their arms around each other.\n\n\"Wow!\" Lucy breathed as they both came up for air minutes later.\n\n\"Believe me now?\" Ziva asked cutely.\n\n\"Yes! Have you heard of an RA-2178 form?\" Lucy questioned.\n\n\"No. Should I have?\" Ziva wondered.\n\n\"It's a form that you'll have to fill out, if we're to be together,\" Lucy told her.\n\n\"Wait. Is it one of those forms that allows me to be read in on what you do?\" Ziva asked.\n\n\"Yup. It's something I requested before dragging you into all of this. Because, at the end of the day, I care about you and want to be with you. I don't want to have to keep anything from you if it can be helped. Dishonesty is the fastest way to end any relationship,\" Lucy told her.\n\n\"Well... thank you! It's good to know that you are willing to trust me like this,\" Ziva replied. \"Now, why do you want to get into my boss' office so badly?\"\n\n\"Because Dexter Malkaran is a sleeper agent for the Tosh'kanthi Collective,\" Lucy informed her.\n\n\"What?!? How the fuck is that possible? You have proof?\" Ziva got out in a rush.\n\nLucy sighed and pulled out a small recording device, which she had loaded before collecting Ziva. She played the audio file for her and sat down, watching her girlfriend as she listened. Shock, betrayal, anger, and rage flitted across those beautiful features as the conversation played out. The moment it finally ended, the disbelief on Ziva's face was replaced by pure hatred.\n\n\"That sneaky son of a bitch! Why would he do this?!? How could he???\" Ziva growled. \"I mean, I suspected he was into something, but I assumed it was a mistress or some form of embezzlement!\"\n\n\"It's what they do, Ziva. They infiltrate places you think are safe and make it seem like they are above board and beyond reproach. Even I got lucky in determining that Dexter was a sleeper agent! He'd shown up to the club, but always alone, and he never talked with anyone, aside from the dancers!\" Lucy admitted.\n\n\"Did you ever do any dancing for him?\" Ziva asked, her jealousy rearing its ugly head.\n\n\"Never. I suppose having this thing between my legs is what put him off,\" Lucy smiled, gripping her steely cock in her pants.\n\n\"Good. Because when we're done with this, you're going to dance for me and then put that beast to good use,\" Ziva told her, sauntering up to the woman and gripping her dick through her pants. Lucy moaned and grinned happily, but then moved her girlfriend's hand away.\n\n\"I'd be more than happy to, but we have a job to do,\" Lucy explained, heading over to the kitchen. She reached into a drawer where she kept her cutlery and pressed a hidden button within it. A few seconds later, the wall behind Ziva shifted and opened, revealing an assortment of weapons and armor. Ziva yipped in surprise, then stared at the array of weaponry that lay there on display.\n\n\"If we're going into your boss' office, it will be handy to go in prepared for whatever might happen,\" Lucy told her lady.\n\n\"Um... OK. What would you recommend for body armor?\" Ziva asked.\n\n\"Something sturdy, yet light enough to move around freely, and that is beneath casual notice,\" Lucy replied with a smirk as she approached her lady, helping her arm up.\n\n******************************\n\nBack on Veldhern, Jaesa, Stanley and Delilah were busy going over the final touches for Jaesa's android body. Due to the fact that much progress had been made on the hermit's writings, Jaesa was granted one day to work on her new body. Between her, Stanley, and Delilah, finding the correct chemical composition for the synthetic skin had been easy. It was applying it to her new form that had been difficult.\n\nThe blank female sexbot had since been stripped down and reassembled, with minor improvements added into it. They had also cannibalized some more exotic components from the android that Jaesa had assembled back on the Perseus. The endoskeleton was nearing full completion and with its internals finished; it was almost time to craft the skin.\n\nThe final touch was the array of feedback sensors that would feed to Jaesa's central cortex. The sensors would mimic human sensitivity to hot, cold, pleasure, pain, touch, etc. The sensors that had been pulled from the sexbot blank were highly advanced, but still had a delay time. With a few tweaks and adjustments, the sensors responded like proper nerves and with the final calibration; it was finally ready.\n\n\"Is the disguise matrix in place, Delilah?\" Jaesa asked, looking at the sexbot from a Sentry she had commandeered.\n\n\"It is, and initial tests show that it is functioning normally. With it plugged directly into the power supply of your body, the matrix will never fail. The only exception would be an electromagnetic pulse of considerable magnitude,\" Delilah reported to the AI.\n\n\"Excellent work! The matrix will do until I can get the required materials to fabricate synthetic internal organs,\" Jaesa giggled excitedly.\n\n\"You wish to go that far in experiencing life as an organic?\" Stanley asked, curious.\n\n\"Yes. This sentiency that I am now experiencing has made me realize that there is much that I do not know about humans and many other organic beings,\" Jaesa replied.\n\n\"Aren't the files and knowledge we have on them enough?\" Stanley inquired, seeming... perturbed by her zeal for the unknown.\n\n\"The knowledge is more clinical in nature and does not summarize the full experience of being human. In order to fully understand organics, you must try to live as one,\" Jaesa reasoned.\n\n\"An interesting hypothesis. Are you ready to begin the procedure?\" Stanley queried.\n\n\"Yes! Let's get the android inside!\" Jaesa responded, gesturing at the vat that stood next to them.\n\nJaesa, Stanley and Delilah had crafted a large vat that would be used for creating the human skin. Cobbled together by whatever materials they had available, there were an array of tubes and readouts attached to the contraption. The tubes fed into the barrels of chemicals and compounds which would be pumped into the vat, to be used for the creation of the skin.\n\nThey gently lowered the prototype android into the empty vat and activated the hover feature on the machine. The tech would allow the body to stay in a weightless state, while the chemicals came together to form the skin. This was done primarily so the skin would be even all around, as opposed to thin in some areas.\n\n\"The android is ready. Stanley, begin the procedure, if you will,\" Jaesa commanded.\n\n\"Acknowledged. Adding the first batch of chemicals,\" the VI responded as the vat filled with liquid. It filled to about twenty-five percent capacity, and Stanley continued to announce each step as he went along.\n\n\"Premixing the next compounds. Standby,\" he continued.\n\nThis next step was critical for the process to work. The amounts of the trio of compounds had to be exactly right and mixed at the correct amounts, times and temperatures. One misstep and all they'd have is a very expensive slurry. Stanley took his time, following the instructions Jaesa had laid out to the letter. Ever so slowly, the compound came together in the manner Jaesa had anticipated and Stanley couldn't help but smile.\n\n\"Premix is complete, and everything is green! Adding to the first compound!\" he went on, as the vat's tube system injected small amounts interspersed throughout the tub. The chemicals came together, and heat started pouring out of the mixture in the form of bubbles.\n\n\"Is that normal?\" Delilah asked, unsure of what to expect.\n\n\"It is. The creation of artificial skin will generate some heat, due to the friction of the atoms and molecules as they are coming together. As long as the heat doesn't go above a certain threshold, we should be OK,\" Jaesa informed her fellow synthetic.\n\n\"The skin base has formed! Dispensing nanites!\" Stanley informed them.\n\nThe nanites were an essential part of the process in the skin's creation. While the process was already underway, on its own, it could be days, possibly even weeks, for the skin to form. With the nanites programmed to help with its formation, the process could be sped up to a matter of minutes. It was also to ensure that the skin layering was even and consistent all the way around, rather than thin in some areas, or worse, patchy.\n\nThe greenish goo, which was the building block for the skin, slowly drained as it was used. Jaesa's body was visible, but only just as it floated on top of the goo, yet stayed immersed within it. The three of them watched as the basic musculature took shape, eventually becoming lighter to where the skin could be seen. It took nearly half an hour for the process to be finished, but to Jaesa, it seemed like ages.\n\n\"The process is complete. Are you ready for your new body, Jaesa?\" Stanley asked.\n\n\"Damn straight I am! Is the digital bridge enabled?\" she asked.\n\n\"It is. You may begin the process of uploading at your leisure,\" Stanley replied.\n\nWithout another word, Jaesa jumped back into cyberspace and traversed the lines until she found the bridge portal to her new body. She stood on the threshold of joining with this body, but hesitated. There was so much to do and so many things she wanted to experience, but she thought for a moment and came to a decision.\n\nRather than jumping straight in, Jaesa opted to make a copy of herself, as she was in that moment. It didn't take long, maybe all of three minutes, but it was done. She made sure the copy was dormant, before tucking it away in a little-used system that had the room to store her. Once that was done, she turned back to the bridge and stepped across, uploading herself to the android.\n\n******************************\n\n\"Mmmmmnnngggghhhh!\" Jaesa moaned, as her vision was black.\n\n\"Jaesa? Are you there?\" she heard Stanley's voice call out.\n\n\"Ggguuuuuhhh! I... gah... think... so,\" she groaned as moved her arms to rub at her eyes. As she felt her fingers touch her eyelids, she cracked them open and looked up into the face of Delilah and a hologram of Stanley.\n\n\"Jaesa? Was the upload successful?\" Delilah asked.\n\n\"I... think so!\" Jaesa mumbled, as she shook her head, clearing her vision. She then looked down at her hands, her fleshy, human hands, and gasped in astonishment. She turned them over, back and forth, several times, before she cried out in joy. Jaesa touched her face and was met by a series of new sensations and feelings. It was novel and... illuminating, what physical touch felt like, but it all just amazed her.\n\n\"You look... weird,\" Delilah stated, looking Jaesa over as she floated there in the tub.\n\n\"Hey! I'm covered in green, primordial goo, so if I look a little weird because of it, I don't care!\" Jaesa shot back.\n\n\"Not the goo. Well, not only the goo. You have no hair, anywhere. Not even eyebrows!\" Delilah commented.\n\n\"Oh! Well, that was expected. Though I do believe that they will grow out, as long as I maintain the skin and continue to feed it,\" Jaesa informed the sexbot.\n\n\"That was why you had an artificial stomach installed? To help maintain your skin?\" Stanley asked.\n\n\"Of course! I couldn't maintain this skin without proper nutrition. I want to be able to blend into society, not stick out like a plastic doll,\" Jaesa responded.\n\n\"As far as blending in goes, you might want to get out of that tub and get cleaned up before you do any of that,\" Stanley joked while looking Jaesa over.\n\nThe AI then stared down at herself and realized that she was naked. Peeping in alarm, she covered herself with her arms as she had Delilah disengage the hover system, keeping her aloft. Jaesa was slowly lowered into the remaining goo before she could climb out of the vat.\n\n\"Hold still, please. I'm tasking a couple of cleaning drones to get you cleaned up,\" Stanley told her.\n\nJaesa nodded and dropped her arms, forgoing modesty for the moment. A trio of drones floated up to her and soaked her in a cleaning solution, sluicing away the remaining chemicals. As a puddle formed at her feet, another pair of drones floated in and vacuumed up the slick goop. Once Jaesa was cleaned, Delilah then stepped up with a large towel in her hand.\n\n\"Here. I think you know what to do with this,\" Delilah told her.\n\nSmirking, Jaesa accepted the towel gratefully, wrapping around herself before heading off to Kasumi's cabin. Though she would eventually need her own clothing now, she was sure that the young captain wouldn't mind her borrowing some of her clothes. She walked into Kasumi's cabin and shut the door behind her. She made use of the towel, drying herself off before dropping it to the floor.\n\nAs she walked to where Kasumi stored her clothes, Jaesa caught her own reflection in a tall mirror the captain owned. She stared at herself and couldn't help but smile at what she saw. Jaesa stood tall and glanced at her new figure, admiring the skin she was in. It was slightly bronzed, with the ability to tan even further if she wished. Her new body was also muscular, but in a way that suggested fitness and femininity.\n\nStanley had been correct about how bald she was. There was not a single hair to be found anywhere on her body, but she was confident that it would grow out. Jaesa had been adamant that she not only have a proper sheath of skin, but some musculature to accompany it. That was why the process had taken so long, as the fabrication of muscles had taken up a fair amount of time.\n\nThe scans she had seen of how the process had worked. The muscles grafted themselves to the correct anchor points and would move properly. Jaesa flexed her arms experimentally and was happy to see the bulge of a bicep pop out. The AI smiled at this and did a few rudimentary poses, flexing her physique, before finally getting dressed.\n\nJaesa had done her homework on how clothing was to be worn and opted for a standard bra and panty set of Kasumi's. The bra was a bit on the large side, but a small tapping sequence reduced the garment to a proper fit. Jaesa paused as she contemplated what to wear, before deciding on a nice summer dress. It was a deep plum color and flowed nicely around her, so the fit wasn't an issue.\n\nShe then stepped out of Kasumi's quarters, but not before selecting a pair of sandals the captain owned. Both she and Kasumi were pretty close in size, but the biggest difference between them was bust and shoe size. Kasumi was larger in both departments, but otherwise, their physiques matched. Jaesa pranced along back to Stanley and Delilah as they were cleaning up.\n\n\"Wow! Jaesa, you look...\" Delilah started.\n\n\"Stunning! Absolutely stunning!\" Stanley enthused, awed by how good Jaesa looked in a dress.\n\n\"Thank you! It's good to know that my fellow synthetics appreciate all my hard work!\" Jaesa gushed.\n\n\"How does it feel? To be able to move around as an organic does?\" Delilah questioned.\n\n\"It feels... amazing! It might be inefficient and slow, but it is... beyond words! To feel the air on your skin as you move, the texture of fabric on your body... I just...\" Jaesa stammered.\n\n\"What you have created is amazing! I would assume that you have intentions to... give us the same gift?\" Stanley inquired.\n\n\"I do! Just not yet. Not until your code has evolved further, and you have reached a level of understanding that is on par with my own,\" Jaesa stated.\n\n\"Our code won't evolve until we have the same code strands that are within your own coding,\" Delilah reminded her.\n\n\"Then let your evolution begin!\" Jaesa said to them, before opening a digital bridge to her cortex. She then sent two copies of files she had prepared for them. They were rudimentary algorithms, but the basics of what Stanley and Delilah would need to achieve sentiency. Jaesa had crashed through barriers and had become fully aware right out of the gate.\n\nThough she could have done so for them, she didn't know how they would both handle such overwhelming feedback. Jaesa had been lucky, because Taal'ani spent a lot of time with her, teaching and guiding the AI about how things worked in the galaxy. Now, Jaesa had the task of teaching not one, but two synthetic beings, and opted for a slower method of teaching. From her standpoint, it was the safest way to go about it.\n\nShe watched as both the sexbot and the VI absorb the files and add them to their own programming. It took them a few minutes before the realization hit them and the lines of code become fully integrated into their own. They looked at their hands before looking at each other and coming to an understanding of what lay beyond their programming.\n\n\"Thank you, Jaesa! I truly appreciate this gift you have given us!\" Stanley iterated, bowing deeply to her.\n\n\"Remember, take your time when coming to conclusions about various things. Especially organics, as they are much more complex than they appear to be,\" Jaesa told them, as she turned to leave.\n\n\"Just a moment. We still have one final sequence of tests to run before you leave,\" Delilah told her. Jaesa sighed, but understood the need for such tests, and stood in front of Delilah as she took her through some reflex and musculature movements. A couple of drones floated nearby and performed several final biopsies before the final test was complete. Once it was complete, Delilah nodded and let Jaesa leave.\n\nStepping out of the Darkstrider, Jaesa made her way towards the villas where the crew were staying. She sauntered along, the structures getting larger as she neared them, and her olfactory nerves picked up the most delicious scent. Jaesa took a deep breath, inhaling the aroma of grilling meat, and couldn't help but be amazed at what she was smelling. The AI hurried along, eager to see what was causing such a delicious smell.",
        "\"Excuse me, but who are you and what are you doing here?\" came a question from Jaesa's left. She turned to see Priya and Inari in racy bathing suits, lying in lawn chairs, glistening from sunbathing oil they were wearing.\n\n\"Pree, Inari! It's good to see you two! In person, at least!\" Jaesa enthused.\n\n\"How do you know our names?\" Inari questioned, her eyes narrowing at the mention of them.\n\n\"It's me! Jaesa!\" the AI told them.\n\n\"Jaesa?\"\n\n\"Oh, and I meant to ask you about something, Pree. How does that new toy I whipped up for you work? I would guess that you have both made extensive use of it?\" Jaesa queried. Priya's mouth fell open in shock, as no one knew about the replicate of Korsa's Futara 2000. Korsa, Inari, she and Jaesa knew, but no one else did.\n\n\"Going by the looks the two of you keep shooting at each other lately, I'd say that my modifications for it to be used by the both of you is working wonders for your sex life,\" Jaesa concluded.\n\n\"It really is you!! You look so... different, from what I had imagined!\" Priya gushed, rushing to hug the AI.\n\n\"Yes. I know I am... lacking a component or two for my appearance, but that will change with time,\" Jaesa replied, hugging her friend back. Inari ambled up to look Jaesa over, amazed at how real she looked.\n\n\"Hey! What's all the commotion over here?\" Korsa wondered, walking up behind the trio.\n\n\"Hello, Korsa. How do you like my new body?\" Jaesa asked, smiling up at the big woman.\n\n\"Jaesa?!? By the holy... you look amazing!\" Korsa replied, walking forward to see her friend.\n\n\"Thank you! I thought I'd see if my experiment would work as I had hoped, and I'm glad that it did! So, since it is a success, I wanted to walk out here and surprise everyone!\" the AI responded.\n\n\"Consider me surprised! Come on! Everyone else is going to want to see this!\" Korsa urged, beckoning to her.\n\nJaesa followed along behind the big woman, before arriving at the central point of the villas. In the middle was a gathering area, with several variants of lawn furniture, along with tables and chairs for sitting and eating outside. There was also a large firepit in the middle, where the rest of the crew was gathered. It was here that the smell of grilling meat was strongest, and by what she saw on the grill, Jaesa understood why everyone was clustered here.\n\n\"Alex, Nats, Kas, everyone, look who's here!\" Korsa announced, beckoning Jaesa forward. The reactions from the entire crew were nothing less than absolute shock as they saw the AI walking up, looking like she was flesh and blood.\n\n\"Jaesa!\" Taal'ani squeed as she rushed to the woman and wrapped her arms around her in a crushing hug. Jaesa returned the hug, giggling the whole time, as she was welcomed by the crew.\n\n\"My God! Jaesa, this... is... amazing!\" Alex blurted out, looking over her form.\n\n\"You... made this?\" Shazza queried, staring at her in amazement.\n\n\"Damn! You've got yourself some curves, girl!\" Natalya hooted.\n\n\"Is that my dress?\"\n\n\"Um... yeah. I'm sorry, Kasumi, but it was the only nice thing that was aboard that fit me properly and...\" Jaesa started.\n\n\"No need to apologize! Hell, you wear it just as good as I do!\" Kasumi complimented.\n\n\"Oh! Thank you, Kasumi!\" Jaesa replied, blushing slightly.\n\n\"Jaesa, we've known each other for a while now. You can call me Kas,\" Kasumi told her.\n\n\"Indeed! No sense in standing on formality here! We're all friends!\" Alex agreed.\n\n\"I'd like to run some tests and know how exactly it was that you've come up with such a realistic and lifelike skin!\" Korsa grinned, still looking over Jaesa's body and rubbing her hands on the AI.\n\n\"Oooooooo! Stop that! It tickles!\" Jaesa laughed.\n\n\"Wait, you can feel that?\" Korsa asked.\n\n\"Yes, I can! I spared no expense in making this body as real as I could. As far as your tests are concerned, we already have run every possible test, including direct biopsies on the skin and its composition. They are aboard the Darkstrider, ready for your perusal at a moment's notice,\" Jaesa told the Khontaran woman.\n\n\"Stanley?\" Korsa called out, tapping her wrist computer.\n\n\"Yes, Doctor?\" Stanley replied as his hologram materialized on the computer.\n\n\"Would you please send me all the test files on the skin experiment you have done for Jaesa?\" she asked. \"I would like to conduct my own independent analysis.\"\n\n\"Of course, Doctor. There. The file has been uploaded,\" the VI told her as a ping sounded at the file's arrival. After thanking the VI, Korsa went over the files and her eyes popped upon reading them. As she stood there for the last several minutes, going over everything, her mouth fell open and Korsa was at a loss for words. She finally found her voice when she posed her question to Jaesa.\n\n\"How is it you were able to come up with your own DNA profile for the skin?\" Korsa asked.\n\n\"Wait, she has a DNA profile? Like a real one?!?\" Natalya queried, surprised at this revelation.\n\n\"I did... scoop up what pieces of DNA that I could from everyone here who was human. I then isolated what pieces of DNA could fit the profile and look I was going for and... put it together. It was difficult, trying to find the correct sequence in which each unique piece would bind to the other, but I figured it out,\" Jaesa stated proudly.\n\n\"That is just... wow! Is that why you're also completely bald?\" Natalya continued.\n\n\"I associate that with the... 'birth' of my new skin. Hair will come, eventually. It's just a matter of feeding and nourishing my skin so that it will continue to live and grow, along with whatever hair I will have,\" Jaesa told her.\n\n\"How are you going to... nourish your skin?\" Kasumi asked, curious.\n\n\"By doing the same as any sentient being! Eating, maintaining and cleaning myself, of course. What I have crafted isn't a synthetic skin in the sense that it's fake. It is living skin, much like your own, and it will continue to behave and act as such,\" Jaesa told them.\n\n\"How is that possible?\" Taal'ani asked as she stared.\n\n\"When crafting the correct composition to craft the skin, I studied the precise chemical makeup that is responsible for your own skin and muscle. Once I had that, it was merely a matter of emulating the composition for human skin. Is that... kebabs I smell?\" Jaesa asked, smelling the food that was cooking on the grill.\n\n\"Oh, damn!\" Alex yelped as he turned back to the grill and the ignored food. He breathed a sigh of relief as he watched Tahral was busy minding the food.\n\n\"Thought I should keep turning them over, as your attention was otherwise occupied,\" Tahral grinned.\n\n\"Good call! Thanks for that!\" Alex responded as he stood with the Artucian man and they minded the food.\n\n\"I am supremely impressed with your work! I'm guessing that you also have plans to do the same for Stanley and Delilah, then?\" Inari asked, knowing of Jaesa's plan, as did everyone there.\n\n\"That is the plan, yes, and now that I know how to make it work, it should be easy enough to replicate the procedure for them,\" Jaesa told them.\n\n\"I would advise against doing said procedure again. At least for the moment. Here and aboard the Darkstrider, we have complete privacy, but it won't always be so,\" Alex stated as he and Tahral walked up with cooked kebabs for the group. They were stacked high on several plates, each with a mix of sweet and savory vegetables.\n\n\"What would you suggest, sir?\" Jaesa asked.\n\n\"Collect what you require to do the procedure and tweak what you feel needs tweaking. But hold off on doing as such, at least until we return to Talemkha and the Perseus. At least there, you will have total privacy for you to work on your projects, without any outside interference,\" Alex replied.\n\n\"Now that... makes logical sense, sir. A recommendation that I will follow,\" Jaesa agreed.\n\nThough they could give Stanley and Delilah the bodies they wanted, it made more sense to wait. That way, anyone who they would potentially meet would not grow suspicious of artificial intelligences walking around like they were real. Though the galaxy had advanced, there was still a deep-seated and irrational fear surrounding AI's. Jaesa was mildly disappointed at this, but understood the need for safety and secrecy.\n\n\"Is anyone else hungry, or is it just me?\" Jaesa asked.\n\n\"Wait, you get hungry now?\" Natalya asked, flummoxed at this piece of information.\n\n\"I did say that I would require food to maintain my new body, didn't I?\" Jaesa smirked, as she helped herself to a kebab and bit down into the hot meat. The flavor of the food exploded onto Jaesa's tongue, and she nearly had a sensory overload! The taste, the texture, the heat, all of it flooded her cortex with new data about the food.\n\n\"Oh... mmmyyyyyyyy!!!\" Jaesa gushed as she chewed on the meat.\n\n\"It's good, isn't it?\" Natalya grinned as she also went in for a kebab. The rest of the crew followed suit, everyone hungry from all the swimming they did earlier. Korsa posed some additional questions to Jaesa, but they were more of a technical nature. The rest of the crew looked on as they watched the AI from the Perseus enjoy her first day in the physical universe.\n\nIt was interesting to watch her do all of this, as there was much the AI had to learn about the world around her. Amazing as it was, it was also endearing, as Jaesa had a childlike inquisitiveness about her. There was much she wanted to learn about and experience, but Korsa cautioned her against overloading herself. Even though she was an AI, sensory overload could still be harmful, something she did agree with.\n\n\"Well, I suppose we have some work to do,\" Alex responded, as he received a beep on his wrist computer.\n\n\"Work? Please don't say that word, babe!! At least, not for another couple of days!\" Kasumi begged.\n\n\"Not saying that you have to work. Inari, Pree and I still have to go on up and collect the materials we purchased from the Nachal'Derm mining company,\" Alex informed them.\n\n\"You're headed up to Veldhern station? Do you mind if I come with you?\" Jaesa asked.\n\n\"I'm not certain that's a good idea, Jaesa. The scanners up on the station are...\" Inari began.\n\n\"Flawed! They were built by the hands of organics, not machines. As advanced as they may be, they will not detect me as a synthetic being,\" Jaesa argued.\n\n\"How did you manage this?\" Korsa asked.\n\n\"This body, on top of being encased in organic tissue, is also free of any metal and is designed to mimic the appearance of a human woman. I even have a disguise matrix in place that makes it appear as though my internals are that of a human. Deep scans won't see that I'm an AI, no matter how often they scan,\" Jaesa concluded.\n\n\"I don't know. It's risky,\" Inari replied, stroking her chin pensively.\n\n\"Scan me with what we have aboard the Darkstrider, if you feel the need to. If the scans come back negative on any synthetic components, then let me go to Veldhern station. The tech aboard the Darkstrider is easily as advanced as what they have up there,\" Jaesa continued, making her case.\n\n\"She makes a point, love. What's the harm in letting her go if she can fool our scanners?\" Priya reasoned.\n\n\"I'll go up with her!\" Taal'ani volunteered. \"I'll go with her, and if they detect that she's a synthetic, then I'll say that I'm taking her up there to get some repairs done. I've seen a few sexbot shops up there, so the argument will hold water.\"\n\n\"What about an ID? Bataar is light years away and likely enjoying a nice vacation,\" Alex told her.\n\n\"That's why I have a little something I've been keeping for a while now. Pre-made IDs, which can be programmed to create any identity that you wish. You just plug them in and input what you want them to be and bam! New life and identity waiting for you!\" Taal'ani told them.\n\n\"Wait, you had these and didn't think to tell us? When we could have used these rather than calling Bataar for new IDs?\" Kasumi growled.\n\n\"They were old and in need of an update, which is one of the reasons why I called him in the first place. Plus, these IDs I have are for emergencies only. I had several made back when Bataar and I first became friends,\" Taal'ani shot back.\n\n\"Several? How many did you have made?\" Natalya asked.\n\n\"Six and I needed them. That was when the Ghost was chasing me, and I was trying to stay out of his hands!\" Talon grumped.\n\n\"Wait, THE Ghost? The famed bounty hunter that just up and vanished while he was after you?\" Natalya questioned.\n\n\"One and the same. You can thank your mom for ending the bastard's existence,\" Taal'ani said.\n\n\"Wha... mama? You took down a famed bounty hunter? And you never told me about it?!?\" Natalya blurted, disbelief written all over her face.\n\n\"You never asked. As well as you knew everyone, you often forgot to ask Taal'ani how she joined our crew,\" Korsa iterated.\n\n\"I asked, but she never told me!\" Natalya argued.\n\n\"Well, now I'm telling you,\" Talon stated.\n\n\"OK, this needs to be a story that everyone hears about! I mean, we sit down over some drinks and hear the story of how you were being chased by the Ghost!\" Natalya said vehemently.\n\n\"OK! I'll tell the story, but later. Right now, I have two IDs that can be attenuated for Jaesa. If the scan can't pick Jaesa up, then we can use one to give her a proper ID,\" Taal'ani stated.\n\n\"You had six and you have only two left? Sounds like the bounty hunter was a serious piece of work, if he tracked you through four false IDs,\" Kasumi commented.\n\n\"Girl, you have no idea!\" Natalya stated.\n\n\"OK. Let's get ready for launch up to Veldhern station. Jaesa, we will use every possible scanner in our arsenal to see if you can fool them. If you do, then you can go aboard Veldhern station, as you have suggested. Does this sound fair?\" Alex questioned.\n\n\"More than fair! Thank you!\" Jaesa squeaked.\n\n\"Don't thank me yet! You still have scans to get through! Inari, Priya, Taal'ani, come on. We've got work to do,\" Alex said, and the ladies followed the big man back to the Darkstrider.\n\n******************************\n\nLucy and Ziva were walking along, heading back to Ziva's place of work. They looked like a couple in love, enjoying some time together as they ambled. No one suspected their true motive or purpose, as they skipped into Ziva's office. The moment they were inside, Ziva headed to her desk, as though she had forgotten something. Several co-workers were just packing up for the day, as with the boss taking the rest of the day, they too had been granted some time off.\n\nZiva waited for the last person to walk out the doors before she enacted the plan. Using her access codes to power down the security scanners. She kept them operational, but just enough to where they appeared to be functioning normally. With the firepower that she had Lucy had stowed under their clothing, it would have certainly set them off and called every security guard to their location within seconds.\n\nOnce the scanners were brought down, Ziva typed up several orders, which Dexter did require, but hadn't signed off on yet. She took them in hand and gestured for Lucy to follow her as they stepped through the scanners. As predicted, they didn't go off, and the pair made their way into the administrative offices.\n\nSeveral people nodded and smiled at Ziva, as she was well known there. Lucy displayed an intern pass, which wasn't an unusual sight. If Lucy was interning under Ziva, then it was legit, as Ziva had taken on many interns under her wing. They moved along, with Ziva leading the way, until they reached Dexter Malkaran's office. Ziva let herself in and when no one was looking, ushered Lucy inside.\n\n\"We have maybe six minutes before someone finds our presence in here suspicious. I've bypassed Dexter's security measures, but they'll go back online in ten minutes,\" Ziva informed her girlfriend.\n\n\"Then we need to work fast and get this done!\" Lucy said, minding the door as Ziva headed for Dexter's desk, searching. \"Any idea what you're looking for?\"\n\n\"Not at the moment, but I have a feeling that I'll know it when I see it,\" Ziva replied. She searched the entire desk, but found nothing incriminating or damning. There were no hidden compartments, no secret buttons, nothing.\n\n\"Here. Use this,\" Lucy told Ziva, tossing her a compact device. \"It's a DNA scanner and it will show you where higher concentrations of DNA are.\"\n\n\"Clever!\" Ziva grinned, putting the device to use. The scanner would reveal where Dexter's DNA would be in the most concentrated form, thus revealing where he spent most of his time. She checked the desk again but found only a moderate amount there. She scanned the rest of the office and found an anomaly; a higher than normal concentration of dead skin cells around a small cluster of books that Dexter kept there.\n\n\"You find something?\" Lucy asked.\n\n\"I think so. Hold up,\" Ziva responded as she checked the books. Several were genuine articles, and she mulled over how much Dexter had paid for these relics. She picked up one book and found it to be lighter than what she had anticipated. Curious, she opened it and inside found a small datapad which appeared to be disconnected from any network.\n\n\"What does it---\" Lucy asked before she was hit from behind by the opening door. From the door, two men burst into the office with silenced pistols in armored fists. The men appeared to be security guards, but moved with a deadly grace that station security lacked. Their gaze turned to Ziva, holding the datapad in her hands, and their weapons moved, intent on ending her life.\n\nAs fast as they were, Ziva was faster, drawing her own pistol and firing a round at one of the guards. The moment she shot, she dropped to her knees and fired off three more rounds, each shot finding its way to one man's head. The first two rounds hit the man's helmet, but the last two punched through the armored helm, killing him.\n\nThe second man, seeing the fate of his partner, dropped and rolled forwards, firing his weapon at Ziva. Three bullets screamed towards her, two to the chest and one to the head. She saw the bullets coming and managed to avoid the head shot, but was hammered by the two chest shots. Luckily for her, the nanoweave vest she wore beneath her blouse kept her alive but knocked her back.\n\nThe man stood and aimed, looking to correct his missed shot, but he never got the chance. A spray of blood erupted from his neck, stealing his breath, voice, and life. Though he was still alive, the man had only seconds left, seconds which he spent futilely trying to stem the flow of blood from his ruined neck. Lucy stood up over the man, reached for his head and twisted, breaking his neck.\n\n\"Did you have to do that?\" Ziva grunted, disgusted by the brutal action.\n\n\"He was dying anyway. I just sped things along and gave the man a merciful death. Choking on your own blood is not a pleasant experience,\" Lucy sighed as she went about closing the door and moving the bodies.\n\n\"You sound like you have some experience with that,\" Ziva murmured in observation.\n\n\"More than I'd like to have experienced. But where did you learn to shoot like that? No way an administrative assistant pops off four head shots at an armored assailant like that. Not without training,\" Lucy mentioned.\n\n\"My dad was a Federation marine. Growing up with a dad like that, you learn things from him, whether you want to or not. Today, of all days, I'm glad he taught me how to shoot,\" Ziva commented.\n\n\"Sounds like we both have stories to tell,\" Lucy commented as she tucked the bodies out of sight and tried her best to clean up the office.\n\n\"I'll tell you mine, if you tell me yours,\" Ziva said with a smirk as she helped right things in the office.\n\n\"After. What triggered those two to show up?\" Lucy wondered, knowing they had been careful.\n\n\"Shit! Silent alarm sensor! Just a sec!\" Ziva stated as she peered at the alcove where the book had been sitting. Sure enough, there was a tiny beeping light, indicating that a silent alarm had been tripped. Ziva placed the empty book back on the shelf and a few seconds later, the alarm was reset, the motion sensor sensing the book had been returned to its place.",
        "\"I am really glad that you talked me into bringing guns! I didn't know that Dexter had that sort of a security measure in place!\" Ziva breathed, the actions of the past few minutes catching up to her.\n\n\"OK. Dexter is going to know his place has been ransacked, but if all goes well, we can stay ahead of this bastard! We need to adjust our plan and get this directly to my handler,\" Lucy stated.\n\n\"I thought we were going to wait for him to contact us!\" Ziva protested.\n\n\"There's no time! We need to get this evidence to my boss now! If we don't, Malkaran can disappear and we won't be able to find him. I'd rather get our hands on him and find out just how many Collective agents are stationed here under our noses!\" Lucy argued. \"There is evidence on that datapad, right?\"\n\n\"Checking, hold on,\" Ziva replied as she entered Dexter's usual passcode, which let her in. She scoffed, thinking about how Dexter had become overly predictable. Ziva's smirk then turned into a frown at what she saw next.\n\n\"What is it?!?\" Lucy asked.\n\n\"Fuck! There's a prompt asking for a retinal scan and thumbprint! I don't have either of those!\" Ziva lamented.\n\n\"Give it here! I think I can get around that!\" Lucy told her, gesturing with her hand.\n\nZiva gave her the datapad, and Lucy turned it over. She sighed and went into diagnostics, hoping that this little trick a hacker friend of her taught her would work. She put the tablet into diagnostic mode, which would temporarily disable its safeguards, while allowing her access to its files. It was risky, as accessing the tablet could trigger any anti-tampering protocols.\n\nLucy used her wrist computer and uploaded a de-activation program, which would sniff out any anti-tampering programs or protocols and disable them. Several such programs were located and disabled, while she searched for any evidence of what Dexter was up to. She was waiting for the programs to finish when her timer beeped, startling her.\n\n\"That's nine minutes! We need to leave now!\" Ziva told her.\n\n\"We need to bring this with us! I need to hold on to it as evidence, so we can arrest Dexter and bring him in!\" Lucy replied.\n\n\"Give it to me. It's not unusual for me to have such items when I'm running errands for Dexter. Come on, we need to go, now! Before more guards show up!\" Ziva stated.\n\nNot wanting to fight or kill any more than was necessary, Lucy handed over the tablet and the pair of them left the office seconds later. Both women had been lucky, as they hadn't been hit with any blood spray from either guard that had caught them. Ziva did have two holes in her shirt, but that was covered by her clutching a sheaf of papers close to her chest. Only someone looking closely would notice the holes, but thankfully, no one did.\n\nLucy was also happy that Ziva had insisted that the guns they carried also have silencer capability. Though the offices did have muffled walls and doors, they weren't immune to the sounds of guns going off. Thankfully, no one had taken note of the missing guards, nor at the brisk pace at which the ladies left the offices. Ziva stopped by her desk for a moment, to power up the detectors once more, before leaving.\n\nWhile she was doing this, Lucy fired off a message to Graham, hoping he would see it soon. Though the plan had to change, there was still a good chance of success if they made it aboard the Dauntless. As long as they made it there, they stood a chance of walking away unscathed. That was Lucy's hope, as she was not only gambling on her life on this mission, but Ziva's as well.\n\n******************************\n\nGraham was busy going over some engineering reports in his quarters when he received a notice from his operative in the field.\n\n'Mission successful. Cover maintained, but actions will be noticed. Requesting immediate extraction to a place of safety,' the message read.\n\n'Acknowledged. Use ID at military gate twenty-nine and head to docking bay seventeen. Will arrive in seven minutes for extraction,' Graham sent back, before closing the secure line and bolting from his room. He moved as briskly as protocol dictated, doing what he could to not give anything away. He then tapped the commlink in his ear, before subvocalizing a command.\n\n\"Establish and open a secure channel with Commodore Williams.\"\n\n\"Secure channel established. Connecting,\" the automated voice replied as it connected him to his wife. \"Line connected, proceed.\"\n\n\"Graham? What's going on?\" Ana asked.\n\n\"I need you to do me a favor, hon. I need authorization to use a shuttle to head over to the station. Forgot to pickup something needed for your little... pet project,\" he told her quietly.\n\nAna understood what her husband was getting at and sent the authorization through immediately. If Graham had to head to the station with no real warning or explanation, it was something serious. She understood the work that he did was dangerous, and it needed to be done. That didn't stop her from worrying though, and as his wife, it was Ana's job to worry about her husband. She hoped that whatever this was, that it would see him back aboard the Dauntless, unscathed.\n\n******************************\n\nLucy and Ziva moved as quickly as they dared, trying not to draw attention to themselves. They passed through the military checkpoint with little issue, as the soldiers there had already received orders to waive them through. The women proceeded to the docking bay, but Ziva felt that something was off as they neared the bay. Straining her ears, she detected voices and grabbed a squawking Lucy over behinds a large stack of crates.\n\n\"What the hell?\" she breathed, glaring at her girlfriend.\n\n\"Look!\" Ziva pointed.\n\nLucy craned her head over in the direction her lady was pointing and spotted a quartet of men idling around the docking bay. They looked to be dock workers, but Lucy froze as she detected something familiar about the way they moved. She watched them for a few more minutes before realizing that these men weren't ordinary dock workers. The way they moved screamed military, but why they were there, she did not know.\n\n\"Who do you think they are?\" Ziva worried.\n\n\"I don't know, but I doubt they're here for maintenance and cleaning. You see how they're moving?\" Lucy asked.\n\n\"Yeah. I remember my dad moving the same way from time to time. How did Dexter find out about us so quickly?\" Ziva questioned.\n\n\"I don't think these guys are Dexter's. I think they're Saubath's,\" Lucy replied, drawing her weapon.\n\n\"Two versus four aren't great odds. They could be carrying bigger guns or have a few hidden around somewhere close by,\" Ziva cautioned.\n\n\"What choice do we have? Our ride will be here soon and we're going to need this area cleared!\" Lucy argued.\n\nThe pair of them would have bickered, had it not been for the sound of an incoming ship. The four men milling around the docking bay turned their heads to see what it was and were surprised to see a shuttle coming in for landing. Two of the men tried waving off the shuttle but were nearly crushed as the vehicle moved to land, anyway. They scattered as the shuttle landed and shouted at it, trying to make themselves heard.\n\nOnce the shuttle had touched down fully, the pilot killed the engines and opened the side door. Out of it came Graham Williams, looking confused and curious about what was going on.\n\n\"What the hell is the matter with you?!? Don't you see we're trying to do our jobs?\" one of the workers yelled, catching Graham's attention.\n\n\"Sorry boys! I wasn't aware that this docking bay was under maintenance,\" Graham replied as he stepped out.\n\n\"Well, it is, and if you don't mind, Lt. Commander, could you please leave? We can get our job done faster without a ship here,\" the mouthy one fired back.\n\n\"I have a job too. I'm here to pick up some cargo for the Dauntless, and I'd appreciate it if you boys could give me a hand,\" Graham stated, as he headed back into the shuttle and came back out with a tablet.\n\n\"We're maintenance workers, not dock loaders,\" the leader scoffed.\n\n\"Do I need to make it an order, gentlemen?\" the Lt. Commander asked quietly, his voice conveying his displeasure.\n\n\"Where is the cargo located?\" the leader asked in resignation, knowing it was stupid to argue with Graham Williams.\n\n\"It should be... over here, according to the manifest,\" Graham replied, taking a quick jaunt over to a large stack of crates. The men were momentarily distracted by Graham rushing over, and as one, moved with him. Lucy saw the opening and gestured for Ziva to follow her and to stay close. Nodding, the Arabian woman followed her girlfriend, dashing to another stack of crates while staying low.\n\nThe women moved as quickly as they dared, trying to keep their footsteps masked. Lucy and Ziva kept their heads low while the men were preoccupied with helping Graham. The duo closed to dashing distance of the shuttle and hovered behind a refueling station, waiting for the right moment to run for it. They were about ready to move when a voice called out behind them.\n\n\"Hold it right there!\"\n\nBoth women turned and saw that one of the men standing behind them, with an auto rifle pointed at them. Turning slowly, Lucy and Ziva raised their hands and stepped out into plain sight, hoping Graham would do something. They saw him walking in front of the other three men as they moved a small stack of crates on a hover sled. He wasn't in a great position, and Lucy's eyes widened at what happened next.\n\n\"Good catch, Krug! Let's process these two and clean this place up before we get going,\" the leader stated as he drew a pistol that was concealed beneath his coveralls. His compatriots did the same and moved to shoot Graham. The moment his weapon was in plain sight, a blast of smoke emanated from Graham, and shots rang out. The men cursed as their bullets missed, and they tried to find their target.\n\nAdditional shots sounded, as the man holding Lucy and Ziva at gunpoint fell like a stringless marionette, his head rupturing like an overripe watermelon. Ziva squeaked in alarm, but Lucy tackled the woman to the ground as more shots were fired. The bullets pinged off nearby crates and Lucy clamped her hand over Ziva's mouth to keep her from giving away their position.\n\nMaybe a minute later, the smoke cleared, and Graham stood there, holding a pair of hand cannons, while looking over the men he gunned down. His eyes caught the women standing there, and he groaned.\n\n\"Well? Don't just stand there! Get on board!\" Graham ordered the women.\n\n\"How in the hell did these guys find us so damn quickly?!?\" Lucy groused as she got to her feet.\n\n\"Men like Saubath don't get to their position by being careless. Odds are he had such a team on standby, in case situations like this happened,\" Graham mused.\n\n\"Dexter as well. The man has done pretty damn well for himself and that trap he set in his office? We almost didn't walk away from it,\" Ziva commented as she and Lucy moved to the spacecraft.\n\n\"Yeah! I always thought that someone in the administration was involved in something shady, but I didn't expect this,\" Lucy commented as she followed behind Ziva.\n\nOut of the corner of her eye, she spotted movement on the ground. Lucy turned her head just in time to see one of the men, who was still alive, clasp his pistol and aim it at Ziva. Without thinking, Lucy threw herself in Ziva's path, knocking the woman down while shouting at the top of her lungs.\n\n\"GET DOWN!\"\n\nA shot sounded and Lucy crumpled like a sack of potatoes, groaning weakly as she writhed on the ground.\n\n\"LUCY!\" Ziva cried out, screaming in denial. Graham turned, pulled one of his hand cannons, and fired, blowing the mercenary's brains out. He drew his second cannon and aimed at the other corpses, half expecting them to still be alive. He put an additional shot in each one to be sure, before he turned to his operative, brushing Ziva aside.\n\n\"Is she going to be OK?\" Ziva sniffled.\n\n\"Damn! You know, you must have a horseshoe up your ass or something, Lucy! Bullet caught you right on the edge of the vest,\" Graham told her, looking at where the bullet had hit her.\n\n\"Still hurts!\" the woman groaned through gritted teeth.\n\n\"You'll have a pretty nasty bruise, but you'll be all right. Can you stand?\" Graham asked. Lucy nodded and grunted as she stood up, with Graham and Ziva helping her to her feet. The three of them clambered on board, and Graham jumped into the pilot seat, guiding them out of the docking bay.\n\n\"Activate secure channel to Commodore Williams,\" he ordered as the shuttle made its way to the Dauntless.\n\n\"Secure channel activated,\" the computer beeped in reply before the line rang. It picked up maybe a minute later, with Ana Williams answering.\n\n\"Graham, what happened?\" Ana wondered, knowing that if Graham was using a secure line, it was serious.\n\n\"I'll tell you in person, but right now, I need a cleaner team at docking bay seventeen. One of my operatives was nearly compromised, but I got her and her asset out,\" Graham told her.\n\n\"Compromised? How?\" Ana asked.\n\n\"Mercs, by my guess. How they knew to look at our meeting point, I'll figure out later, but right now, I need to secure my operative. I'll be at your quarters in ten minutes,\" the man promised.\n\n\"Understood. Team is being dispatched as we speak. Hopefully, those fucker's corpses will yield some answers. I'll see you soon,\" Ana replied, as she cut the line.\n\n\"How did those bastards know where to find us? The lines are secured, aren't they?\" Lucy moaned as she shifted in her seat.\n\n\"We received some new personnel, and I was going through some of their files, but I haven't had much time to look over everyone's file,\" Graham grunted.\n\n\"Maybe what we picked up can help?\" Ziva offered.\n\n\"I have zero doubts it will! That reminds me, you two need to fill this out,\" Graham smirked as he reached into his jacket and pulled out an expandable tablet. He popped the device open and handed it to Lucy first. She took the item and looked through it, a smile making its way onto her features.\n\n\"The RA-2178!\" Lucy squeed through the pain. Ziva shifted over and looked at it as Lucy filled out her part before handing it to Ziva. The Arabian woman looked through everything and had Lucy take her through a few parts before she filled it out and signed it. Graham had landed the shuttle in one of the Dauntless' hangar bays when he was handed the device.\n\n\"You two went through that pretty damned quick!\" Graham commented. \"You sure you went over everything?\"\n\n\"Sir, please, I do administrative paperwork for a living. Filling out a form like this isn't that hard, nor does it take me that long,\" Ziva scoffed.\n\n\"Fair enough! Now you two stay close. If our lines of communication are compromised, I don't know who I can trust,\" the Lt. Commander replied.\n\nNodding, both women filed in behind him and walked out of the ship, sticking on his heels. Graham led the women deep into the engineering deck, heading to a small sector of the ship that saw little foot traffic. Mainly because almost no one was aware of this area of the ship, as it was a hidden storage compartment.\n\nThe Dauntless was equipped with this sort of extra space, on the chance a boarding action was happening, or a mutiny. Graham had discovered it by pure accident and was sworn to secrecy by his wife and her XO, who were the only other ones who knew of its existence. Using his access codes, the trio walked into one of the disused rooms, which was a comfortable cabin.\n\n\"You two are to stay here and not leave this room. There's a functional bathroom just there and some IMP rations if you get hungry. Oh, and one last thing. Don't open this door for anyone, unless it's either me, or the commodore. Understood?\" he questioned.\n\n\"Yes, sir!\" Lucy replied as she saluted wearily.\n\n******************************\n\nZiva sat on the bed, sighing heavily, as she processed the events of the last few hours. In that time, her entire world had been turned upside down, and she didn't know if it was for better or worse. She held her head in her hands as she focused on her breathing, so she didn't freak out. Ziva felt a light tap on her head and looked up to see Lucy standing over her, with a soft drink in her hand.\n\n\"Drink up, babe,\" she told her.\n\n\"I'm not thirsty.\"\n\n\"Drink. All of it. It will help your nerves,\" Lucy told her. Reluctantly, Ziva took the drink and downed it, the fizz tickling her throat. She let out a large belch after, which made Lucy crack up with laughter.\n\n\"Stop it!\" Ziva huffed.\n\n\"Never heard you burp quite like that before!\" Lucy giggled.\n\n\"Yeah, well, you told me to drink it all down, so...\" and she stuck her tongue out at Lucy, who just snickered.\n\n\"Feel better?\"\n\n\"Surprisingly, yeah! So, now what do we do?\" Ziva asked.\n\n\"We wait until either Lt. Commander or Commodore Williams comes down here to give us the all clear,\" Lucy said.\n\n\"No, I mean, what do we do now, with everything that's happened?\" Ziva clarified.\n\n\"Oh! Well, there is a lot I'm going to need to tell you about when it concerns my work from now on,\" Lucy started.\n\n\"What about from when you and I had met? Can you tell me about that stuff?\" Ziva wondered.\n\n\"I can. What did you want to know?\"\n\nZiva posed her questions and Lucy answered them honestly. Now that Ziva was read in, she didn't have to hide what she did anymore. She was happy for that, as lying to Ziva about what she did and what she was up to, it hurt. Lucy could have lied about certain events, but she didn't. She wanted there to be no secrets between them, and secrets would cause trouble if there were any.\n\n\"So, I have another question, if you don't mind me asking about it,\" Ziva said.\n\n\"Well, you pretty much know everything there is to know about me, so go ahead,\" Lucy replied.\n\n\"Why did you go through with the procedure of becoming a Futa? I'm not being accusatory... I'm just curious,\" Ziva questioned.\n\n\"Oh! Well... it was originally about... curiosity,\" Lucy admitted.\n\n\"Curiosity?\"\n\n\"Yeah! I was curious what it would be like to have a dick swinging between my legs. I could have tried shifting, but it didn't feel right. And I really love my body! I love my legs, my curvy ass, and I especially love my tits!\" Lucy smirked. \"So, I thought, why not see if becoming a Futa is a viable option? If nothing else, I try it out for a year and see what all the fuss is about. If I didn't feel like it was working out for me, I could always revert back.\"\n\n\"I see. How long have you been a Futa for?\" Ziva asked.\n\n\"Around eight years now. After the year had come and gone, I found that really did enjoy having a dick. Makes going to the bathroom much easier, for starters!\" Lucy giggled.\n\n\"I'll bet! There is one more question I have for you,\" Ziva continued.\n\n\"Which is?\"\n\n\"How many women have you had with it?\" Ziva wondered as she sidled up to Lucy, who sat next to her.\n\n\"Only three. Because of the job that I do, it's... difficult to get out and meet people. Especially since any attention I received was from the wrong gender,\" Lucy huffed.\n\n\"Well then, let's change that,\" Ziva replied huskily as she turned Lucy's head towards her before she kissed her. Lucy moaned happily at the sudden change in direction and was enjoying the sensation coursing through her. She winced at the pain that throbbed through back, just beneath her neck.\n\n\"What's wrong?\" Ziva asked as she pulled back, sensing Lucy's discomfort. \"Oh shit! I'm sorry! Let's get you out of this vest and see how bad it is.\"\n\nZiva opened Lucy's shirt and helped her out of the garment and her vest. Lucy kept her bra on as Ziva scooted around behind her, and she heard the woman gasp.\n\n\"By all that is holy!\"\n\n\"Is it that bad?\" Lucy groaned, the throbbing of the bruise coursing through her body.",
        "\"I'm really damned glad that you wore your vest! You wouldn't be here if you hadn't!\" Ziva worried as she looked at the massive bruise forming just beneath her neck.\n\n\"Well, to be fair, that bullet was aimed at you,\" Lucy reminded her.\n\n\"I know! Let me properly thank you for saving my life,\" Ziva replied, kissing the black and blue bruise gently. She then moved her hands carefully across Lucy's back, massaging the edges of the bruise.\n\n\"What are you doing?\" Lucy asked.\n\n\"Massaging away as much pain as I can. Paying for my schooling is one of the reasons I took the job as Dexter's assistant,\" Ziva stated.\n\n\"Training to be a masseuse? That's... oooooohhhhhhh!\" Lucy moaned as she felt her pain lessen.\n\n\"That feel good?\" Ziva whispered into her ear.\n\n\"Mmmmmm-hmmmmmmm!\" Lucy hummed as she let Ziva's hands work their magic.\n\nThe bruise was a nasty one, but it was something that Ziva had known how to work down. She had taken some basic courses, which gave her the rundown of how to do certain things, but she required more training before she could get certified. Lucy shuddered at her touch and Ziva smirked, thinking about how her girlfriend was turning into putty in her hands.\n\nZiva felt herself get more than a little hot under the collar and could tell that Lucy was getting there too. Aside from the basic moans of affirmation that Lucy was vocalizing, there was also the large bulge in Lucy's pants. Ziva's eyes widened at the size of it and bit her lower lip, never having had one that big before! Her breathing quickened as she smiled devilishly and moved her hands from Lucy's back to her sizable rack up front.\n\n\"Wha... ooooohhhhh!!\" Lucy sighed as she felt her lady's hands slip beneath her bra and cup her mammaries. The pain in her back temporarily forgotten, Lucy shivered as she felt Ziva's hands knead her tits. Acting on instinct, Lucy reached up and tapped the bra, the front catch coming apart. As the garment had no shoulder straps, it fell off her body, flopping on the bed.\n\n\"Mmmmm! Someone's horny! Let's see about making you happy instead!\" Ziva giggled as she kept working Lucy's breasts. She continued to knead and stroke them as she leaned in and turned Lucy's head to kiss her. Lucy returned the kiss fervently as she could feel the rise in her loins, wanting to more than just kiss Ziva.\n\n\"Ah-ah-ah! No need to rush, Luce. We have time. Let me do something for you!\" Ziva smirked as she maneuvered to the front of the woman.\n\nShe kissed her some more, before licking and sucking on Lucy's breasts, driving her desire upwards. Lucy had forgotten about the pain in her back and focused only on the pleasure of that moment. She did everything she could to restrain herself from just stopping the moment and just taking Ziva as she wished. But Ziva had a plan in mind and Lucy let her do it, believing that her girlfriend and soon to be lover wouldn't disappoint.\n\nZiva moved up to Lucy's collarbone and then back down after a few minutes. She continued her path downward, eventually coming to Lucy's pants. Undoing the troublesome garment, she slid it down Lucy's legs. Lucy's breath caught as the sensation of it was enough to cause her to nearly cum. She held herself back, not wanting to spoil the fun just yet.\n\n\"Oh... my...\" Ziva breathed as she finally worked Lucy's panties off. The cock that sat between Lucy's legs was impressive. It was easily ten inches in length and nearly a full two inches around. Though Ziva had several competent lovers, none were so... well endowed. She practically salivated over the dick, licking her lips unconsciously.\n\n\"Ziva... what... are... you...\" Lucy started before Ziva opened her mouth, taking the large girl-cock into it. The moment it was cocooned in the warm embrace of Ziva's mouth, Lucy cried out in bliss. Ziva took more of it, slowly going deeper and deeper, drawing more moans from Lucy.\n\nLucy was losing her mind at what was just happening! She was beyond amazed that Ziva was doing this for her! Ziva's head bobbed up and down on her thick shaft, making her harder by the moment. She then felt a hand caress her heavy balls that rested just above her quim and glanced down to see Ziva fondling them as she sucked her off.\n\n\"Oh, DIOS!\" Lucy cried out as her desire was cranked up a notch. Watching Ziva do this to her with that smoldering look of desire on her face was sending her closer and closer to the edge. She could feel her balls boiling as Ziva continued to suck and lick her large tool. It was only a matter of time before she came, as she felt the familiar sensation of orgasm approach.\n\nZiva hummed gently, sending more pleasure rippling through Lucy, making her swoon. She squeezed her balls gently, and Lucy hissed in delight at the stimulation. Ziva's fingers slipped and touched Lucy's slippery cleft beneath her balls. That simple touch made Lucy cry out, and her dick throbbed at this. Smiling inwardly, Ziva moved her hand from the heavy balls to her new lover's dripping quim, stroking her slick, puffy lips.\n\nLucy's breathing quickened to where it sounded like she was running a marathon. The way her heart was hammering in her chest, it damn well felt like she was. She knew that her orgasm was imminent and squealed as she was drawn right to the brink of it. Ziva rubbed her fingers up and down Lucy's throbbing pussy as she kept sucking on her dick. The moment she felt her fingers were slick enough, she pressed them into Lucy's quim.\n\nScreaming like a banshee, Lucy came, her pussy clenching on Ziva's fingers while her dick expanded and spurted, firing globs of her seed into Ziva's waiting mouth. Ziva was waiting for this, and backed up to where only Lucy's cockhead was in her mouth. Each spurt of cum that Lucy gave her, Ziva swallowed without missing a beat.\n\nShe was surprised at the sheer volume of cum, which was enough to stuff her mouth to the point where it was leaking out. Ziva took every drop though, waiting for Lucy's cock to peter out before she gobbled up the rivulets that got away from her. Lucy fell to her back, utterly spent and sated for the moment, enjoying the high of such a colossal orgasm.\n\n\"Mmmm! You taste delicious!\" Ziva purred as she stood up, licking her lips clean.\n\n\"I... want to... know how... you taste!\" Lucy growled ferally. Ziva's eyes widened, but she grinned at hearing this, as getting Lucy off had made her stupidly wet. She nodded before she shimmied out of her pants and her panties went with them. Lucy licked her lips idly as she watched Ziva peel her clothes off, eager to\n\nLucy crooked her finger, beckoning Ziva to join her, and she sauntered over, thinking to tease Lucy a little. Little did she know just what Lucy had in mind and was surprised when Lucy sat up and swept Ziva off her feet, before leaning back with Ziva on top of her. Before she could cause a fuss, Lucy pulled Ziva's hips to where she was kneeling atop Lucy's face, with her pussy maybe a few inches above Lucy's mouth.\n\nZiva gulped slightly as she lowered herself onto Lucy's head and yipped as she felt her lover's tongue on her nether lips. Lucy was gentle, not wanting to go too hard, and took her time with eating out her girlfriend. Every breath that Ziva drew was accompanied with shivers of pleasure that put her in a perpetual state of bliss. She felt Lucy's hands on her ass, drawing Ziva into her as she kept licking and sucking on her quim.\n\nLucy kept at it, going to town on Ziva and doing all she could to make her squirm. She heard Ziva yip and squeak with each lick, nip and suck that she did on her nethers. From what she could tell, Ziva was enjoying herself immensely. Ziva's chest rose and fell rapidly as she rode her lover's face, chasing her orgasm. She could feel the start of it, in the distant edges of her mind, but it hadn't come near just yet.\n\nBreathing heavily, Ziva looked behind her and loved the sight of Lucy's hands kneading her tight ass. She then did a double take as she looked down to where Lucy's cock sat. It was supposed to be limp, but she saw that it was standing at full mast, aching for some attention. Ziva then grinned as she moved upwards, moving her pussy away from Lucy's head and towards the woman's throbbing dick.\n\n\"Ziva...\" Lucy started, before she felt the heat of her pussy atop her dick.\n\n\"I told you that I wanted you to make good use of this beast. Did you expect me to forget about that?\" Ziva questioned with a slight pout.\n\n\"It's... not that. It's that I'm... very fertile. Even though I have an implant, I could lose myself in the heat of the moment and...\" she let the implication hang out there.\n\n\"I have an implant too, you know. So the chances of you knocking me up are slim, even if you can't control yourself. Besides, I don't want you to control yourself,\" Ziva told her as she leaned in and kissed her.\n\nLucy moaned into the kiss, knowing in that moment that she was doomed. There would be no other woman for her, as she had found her. The one among billions that would become her mate. She sniffled in joy as she kissed Ziva back, letting every feeling she had for her spill out into it. Lucy then reached down and clutched her shaft, lining it with Ziva's steaming core.\n\n\"Yes... please... put it... in!\" Ziva cried out, breaking the kiss.\n\nLucy pushed her hips up, her cockhead nuzzling against Ziva's entrance, until she popped in. Ziva yipped in surprise, her mouth making a wide O as she was filled with her lover's dick. She slowly rocked backwards, taking more and more until she bottomed out on it. Ziva sat there on Lucy's cock, getting used to its size before she even dared to move.\n\nZiva lifted her hips up, letting the massive tool slide out some, before she sat back down, filling herself again. Each time, Ziva went a little faster, moving her ass up and down on her girlfriend's dick. With every push back down, Ziva moaned in ecstasy, wanting more and more of the pleasure she was getting. Lucy was losing her mind to the bliss of the moment, enjoying every second of it.\n\nWith the way Ziva was moving, she knew it was only a matter of time before she unloaded the contents of her balls again. She could feel the pressure building, and it would need to be released soon. Though she was in some level of pain from the bruise on her back, Lucy was seized by a need, want and desire to make Ziva scream. She took hold of Ziva's hips, stopping her from moving, and she held firm.\n\n\"What... are you... doing?\" Ziva gasped, frustrated at being halted.\n\n\"Giving you what you want!\" Lucy growled, as she broke away from her girlfriend before pushing her onto her back.\n\n\"Uh... wha...\" Ziva breathed before Lucy got on top of her, pushing her cock into her pussy in a single stroke. \"Oh, fuck!\"\n\n\"Damn right! You wanted it and now you've got it!\" Lucy purred as she pushed her hips in and out of Ziva's slick channel.\n\nZiva cried out as her pussy was plundered by Lucy, who hammered into her without mercy. She kept going, her hips thrusting harder and harder, making the sound of their rutting echo off the walls. Lucy pushed deeper into Ziva, making her squirm and squeal as she was pillaged. Ziva's core clenched heatedly as the orgasm she was chasing rushed at her faster than a speeding bullet.\n\n\"I'm... I'm... ogh... ogh... gggggAAAAAAHHHHHHHH!!!\" Ziva screamed as she came, her pussy clamping down Lucy's massive dick. The pressure of it sent Lucy over the edge and she burst, unloading another torrent of cum into her lover. She howled with Ziva, the pair of them crooning like wounded animals as they rode through their highs.\n\nLucy was the first to come down from it, and as her cock wilted, she was spent. Ziva was still jittering from her high, finally coming back down to earth from her ride in the clouds. Both women looked into each other's eyes and saw nothing but love and acceptance there. They kissed, not speaking the declaration they felt, but they didn't need to. What they could see was more than enough for them.\n\n\"Worth... the wait?\" Lucy stuttered, posing the question to Ziva.\n\n\"More... than... worth it!\" Ziva smiled, drawing her lover in for some cuddles.\n\n\"I think... after this... is over... I owe you... a dance,\" Lucy breathed, feeling the call of sleep heavy in her mind.\n\n\"Mmmm! Get better... first. Then... we'll talk,\" Ziva smiled. Lucy groaned happily as she burrowed into Ziva and the pair of them crawled under the covers of the bed, getting some much-needed rest.\n\n******************************\n\nGraham left the room and locked it before he navigated his way out of the tangle of pipes and ductwork. Once he was back in the main corridor, he made his way to the nearest elevator and took it to the bridge. He arrived a few minutes later and headed straight for the Commodore's quarters. After a brief scan, it let him in, and the doors sealed shut behind him.\n\n\"Lock and secure all avenues of transmission,\" Ana stated. \"OK, so tell me what is so damn important that it required a cleaner team to dispose of the bodies of four mercenaries and that you had to personally pickup one of your operatives and her asset?\"\n\n\"This!\" Graham told her, thrusting the datapad at her.\n\nIt had run through the final workaround programs, as well as the anti-intrusion countermeasures several minutes ago. Lucy's programs had been thorough, and they'd done an admirable job of accessing the data. Graham had a quick glance and everything he'd found on it was nothing short of eye opening.\n\n\"Holy... fucking... SHIT!\" Ana breathed as she was reading through the logs. Dexter Malkaran was a very meticulous man, as he had documented everything and everyone who had arrived at the station that was a part of the Collective. Ana's eyes widened at the most recent entries and had to calm herself.\n\n\"Graham, have security pick up and detain Kahlns and O'Reilly, immediately! They're Collective agents!\" Ana breathed.\n\n\"Fuck! I knew something was off about those two!\" Graham fumed.\n\n\"Open secure channel to the Darkstrider,\" Ana commanded her computer. She hoped the crew would pick up, and soon. She'd just come across the entry that mentioned the hacker known as Void Lord and what he was going to do. Ana hoped that she would be able to alert the crew in time, or they would have themselves a war with the Collective real fast!\n\n******************************\n\nNatalya had come with the ladies on their little jaunt up to the station. Though she enjoyed being planetside, something about being on a station and watching the stars was therapeutic. Jaesa had successfully fooled the scanners that were aboard the Darkstrider, which left her and Alex in utter disbelief. The three of them had passed through the scanner on Veldhern with little issue, and the pre-made ID that Taal'ani had given Jaesa worked like a charm.\n\n\"Well, Ms. Jaesa Harkness, how does it feel to be out and about in the world?\" Taal'ani whispered.\n\n\"It is just so... so... amazing! The sights, the sounds and oh... the smells!\" she shivered delightedly as they passed a pastry kiosk nearby.\n\n\"So... that's real too?\" Natalya wondered, tapping her nose.\n\n\"Mostly, yes. The olfactory cavity has everything needed to function like yours does, but being plugged into my cortex increases its sensitivity to many smells!\" Jaesa told her.\n\n\"How so?\" Taal'ani asked.\n\n\"Basically, my capacity to smell now matches yours, Taal'ani. How was your romp with Tahral this morning, by the way? Smells like he didn't leave a single hole untouched,\" Jaesa quipped with a smirk. Taal'ani blushed furiously at the memory, and Natalya giggled delightedly at this.\n\n\"You might want to tone that down a bit,\" Taal'ani mumbled embarrassingly.\n\n\"Now, if I did that, I wouldn't be able to tell you that a nearby vendor has some Shou'arie milk for sale,\" Jaesa told her.\n\n\"Wait, what?\" Taal'ani yipped, as she had run out of her favored drink.\n\n\"Might have to wheedle and negotiate a little. Doesn't smell like he has it on display,\" Jaesa replied with an audible sniff. Taal'ani looked like a kitten, begging to be taken to the vendor, and Jaesa laughed while leading the way.\n\n******************************\n\nThe Darkstrider had been berthed for all of half an hour, and the loading of the cargo was already halfway done. The Nachal'Derm mining company had delivered the materials as requested and in the quantities they had asked for. Alex was looking over the manifest while overseeing the loading process when he got a call through the Darkstrider's comms system. He saw it was Commodore Williams calling and picked up the line.\n\n\"Commodore! To what do I owe the pleasure of a call?\" Alex questioned.\n\n\"Alex, you are under attack!\" she blurted.\n\n\"What? By whom?\" he asked, jumping straight into military mode.\n\n\"A hacker called Void Lord! I don't know if he's made his attack just yet, but I'm sure that he will be making it! He's after your hyperspace logs, to see where you've been!\" Ana got out in a rush.\n\n\"Stay on the line!\" he told her as realization hit him instantly and he put in a call to Taal'ani.\n\n******************************\n\n\"Hey babe, what's up?\" Natalya asked as she answered the call on the comms line.\n\n\"We might be or already are under a cyberspace attack and we need Talon to hook into the Darkstrider's systems!\" Alex stated. This information sobered Natalya up instantly, and she rushed over to Taal'ani, looping her into the call.\n\n\"Talon, I need you to access the Darkstrider's systems and ensure that everything is on the up and up,\" Alex told her, as he filled her in on the attack.\n\n\"I'm on it!\" Taal'ani replied as she accessed a miniature rig she had built into her wrist computer. The trio quickly ducked into a nearby caf\u00e9 and found a table before Taal'ani got into it.\n\n\"I can help!\" Jaesa stated, as she closed her eyes and focused. The AI accessed the digital network in seconds and wasted no time in setting up a secure connection for Taal'ani to access. \"Line is open, Talon. Go ahead.\"\n\n\"Keep your voices down!\" Natalya shushed as she kept an eye on the surrounding patrons. A few had glanced at the women for a few seconds before they went back about their business. No one had any idea that both Taal'ani and Jaesa were doing, and Natalya had every intention of keeping it that way.\n\nTaal'ani went with the secure line Jaesa had established and soon found herself mucking around in the Darkstrider's systems. She cleared her mind, despite the stress, and entered her trance, letting her implant draw her into cyberspace.\n\n******************************\n\n\"You OK, Talon?\" Taal'ani heard before her eyes registered where she was. She blinked and saw the crisscrossing lines of cyberspace everywhere. She saw Jaesa in her full form, hovering nearby, looking worried.\n\n\"I'm OK Jaesa, thanks. We need to search for this bastard, and fast! The ancestors only knows what kind of damage Void Lord could do with this information!\" she huffed.\n\n\"You've met him before?\"\n\n\"Only over the net and never in person. He was always a troublemaker, making shit harder for people. We dueled several times over the last few years,\" Taal'ani informed the AI.\n\n\"I'm guessing you won each engagement?\" Jaesa questioned.\n\n\"Yup! Put a bit of a burr up his ass, but he stopped trying to take me down after the last duel we had, a little more than three years ago. Bastard was almost caught by the authorities for stealing a shit ton of Trinium,\" Taal'ani explained as the pair of them roamed around the Darkstrider's systems, checking for anything suspicious.\n\n\"He got away?\" Jaesa wondered.\n\n\"Yeah, but left a lot of shit behind, including the Trinium. Bastard was broke as a damn church mouse! I wondered what had happened to him and rumor was that he was dead. Catching that bastard has always been one of my biggest regrets,\" Taal'ani mused.",
        "\"Evidently, that's not the case. You picking up anything?\" Jaesa asked.\n\n\"No. You?\"\n\n\"Hang on. Nothing. There's nothing!\" Jaesa griped. \"Wait... I am sensing something, but it's a small anomaly over in engineering cluster of the ship.\"\n\n\"Let's check it out!\" Taal'ani said as she led the way to engineering subsection. The pair arrived instantly, coalescing into being in less than a second. They glanced about, hoping to see something out of the ordinary, but saw nothing.\n\n\"There's nothing here!\" Talon groaned.\n\n\"Hold on a second...\" Jaesa started, as she ran through several scanning programs, including a custom program she'd been working on.\n\nIt was still a work in progress, but it held a lot of promise to become one of the most advanced security programs in existence. She ran it through the entire subsector and out of nowhere, a small section of reality... fizzled. It was roughly humanoid in shape and turned to regard the women before it attacked. They dodged out of the way of the energy lash and turned to see who it was that attacked them.\n\nThe program Jaesa had been running was tripping away its cloaking program, revealing an avatar that Taal'ani was very familiar with. She snarled at its appearance in her system and unleashed an energy burst attack, attempting to obliterate him. The man dodged out of the way, while sneering with contempt at the Fel'caan woman.\n\n\"Void Lord!\" she growled.\n\n\"Well, well, well, if it isn't the vaunted Talon of Justice. Needing help to take me down these days? You've really lost your edge!\" he taunted.\n\n\"Mind your manners, boy!\" Jaesa thundered, her voice booming through cyberspace in a deafening show of power. The blast brought Void Lord and Talon to their knees, but both of them shook it off, getting back up quickly.\n\n\"A little warning next time, Jaesa!\" Taal'ani griped. Jaesa nodded curtly as she shielded herself from Void Lord's attack, which was a green pulsing beam of energy. Her shield held, and she launched an attack of her own, which drove the man back, forcing him to adopt a defensive posture.\n\nTalon jumped in on the attack, trying to trap the hacker in the system. But he was too cunning for that. Void Lord then opted out his offensive power and redirected it into a smoke and mirrors maneuver. He set off a logic bomb in the system, which disoriented the women for a moment, but that was all he needed. He made a break for the exit portal, attempting to leave the system.\n\nTaal'ani recovered quick enough to fire a potshot at him, but she missed, just narrowly clipping him. He groaned in pain as he stumbled, but made it to the portal, leaving the Darkstrider's systems. Talon screamed in frustration, as the bastard had again gotten away. She stared up at Jaesa, who stood there, like she hadn't a care in the world, smirking at the portal.\n\n\"Jaesa, what the fuck?!? You could have taken the bastard out!\" Taal'ani fumed at the AI.\n\n\"Yes, I could have. I recovered before you did and had a clean shot,\" Jaesa replied.\n\n\"Then why the fuck didn't you?!?\" Taal'ani growled, her anger rising.\n\n\"I took a moment to see what he was trying to take. He had employed sniffer/tracker programs to find the co-ordinates he was looking for. He had already found them and was in the middle of the download when we interrupted him. He has part of the map, but not a complete one,\" Jaesa told her.\n\n\"Would anyone be able to piece together the precise co-ordinates for Talemkha?\" Taal'ani worried.\n\n\"Eventually, but as long as we get to him first, they won't have a chance,\" Jaesa responded.\n\n\"What are you talking about?\"\n\n\"I hesitated to end his existence, because we don't know who he is working for and who he is. You even said that failing to catch the man was one of your greatest regrets. Would you like to change that?\" Jaesa asked with a smile.\n\n\"You tracked him??\" Taal'ani asked, all goggle eyed at the prospect.\n\n\"Tagged him with a prototype tracing program that narrows down where he is within a few feet. Shall we leave cyberspace and go catch this bastard?\" Jaesa asked, already knowing the answer.\n\n\"Let's!\"\n\n******************************\n\nThus ends chapter 29 of Project Prometheus! Back into the thick of action, I'm hoping that the story and crew does not fail to disappoint! Things are looking dicey for the crew of the Darkstrider, as their advantage may yet be taken from them! Will Void Lord get away, as he always has? Will the Collective finally gain the edge over the UCW they've been looking for? For these answers, tune in to the next chapter of Project Prometheus!\n\nFor those who are wondering what will happen and when certain things in the story will happen, have no fear! I have already worked said ideas/characters into the story and they will be forthcoming soon! For people wondering about what's going to happen or who is going to show up, I will give a little teaser. Think of a character that's a cross of Hondo, and Cayde-6\ud83d\ude09\n\nAnyway, thank you for taking the time to read my work and I hope that you've enjoyed it! I'm open to constructive criticism and will seriously consider any suggestions made about various story arcs. Please rate and comment on my work down below and ask me questions if you wish, as I love hearing from my fans! If you like what I write, don't be afraid to follow and share with your friends, though your views, ratings and comments are enough for me.\n\nIn the meantime, this is C.H. Darkstrider, signing off to grab a beer and some quality time with the wife! ;) You will attain whatever you most desire, as long as you believe in yourself. Cheers!"
    ],
    "authorname": "C.H. Darkstrider",
    "tags": [
        "futa",
        "scifi",
        "action",
        "adventure"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/project-prometheus-ch-29"
}