{
    "title": "Thorny Rose Ch. 02",
    "pages": [
        "Part 2 of a 3 part story\u2014at the end of Part 1, Dale learns Rose's secret and gets ready to tell her that he knows.\n\n*\n\nI was not looking forward to what was about to happen, and was worried about how Rose would react\u2014I'd seen her get violent already, and with someone much bigger than me. But I had called her, and I had to let her know what was going on. I got dressed, ran down the stairs, yelled to my parents that I was going to be out for a bit, jumped in the car and drove to the park. Luckily, it was pretty empty, and I found a bench away from the one couple that was sunning themselves while their little daughter played near the fountain. A few minutes later, Rose came walking toward the fountain, dressed in a casual pair of shorts and a baggy t-shirt, with her hair pulled back. She looked like my classmate and not some porn star. She smiled when she saw me and sat next to me on the bench.\n\n\"I'm sorry I left the party without saying 'hi' or 'goodbye,'\" she said softly. I waited briefly for an explanation, but when one didn't come, I needed to move to the more important issue. I felt like things were moving very quickly, and my mind was racing.\n\n\"That's fine, don't worry about it,\" I said. \"But that's not what I need to talk to you about.\"\n\nHer face changed dramatically from happy to wary. \"What, Dale?\"\n\nI couldn't ease around the issue. \"I, uh, I know about Aubrey Angel,\" I said.\n\n\"Fuck,\" she yelled. \"Fuck Fuck Fuck Fuck Fuck,\" she screamed, hitting my arm, pretty hard. The young couple shot us a dirty look, scooped up their daughter and hightailed it out of there.\n\nWhen I looked back at Rose, she was crying. She buried her face into my shoulder, and I put my arm around her to comfort her. Her body was heaving with sobs, and I just let her cry, holding her and gently stroking her arm.\n\nAfter what seemed like an eternity, she pulled away from me and looked me straight in the eye with her red rimmed blue eyes.\n\n\"How?\" she whispered. \"Tell me how.\"\n\n\"This morning, Sam Cruz called me. He said that after seeing you at the party, the way you looked and all, and you looked incredible, by the way,\" she smiled weakly as I continued, \"he thought he recognized you.\" She arched her eyebrows, and I shrugged, as if any teenage boy didn't watch porn on the Internet. \"He sent me a link to a video, and while I wasn't sure it was you, I watched a couple more, and was pretty sure it was you.\" Rose started to sob again. \"I read some of the news articles. Oh my god, Rose, what you went through.\"\n\nShe turned to me, and said, \"You read the articles?\" I nodded. She started to tell me what happened, and I told her she didn't have to, since I had read the articles, but she insisted. So, in a flat voice, as if she was talking about someone else, she told me the whole story. From being raped by her stepfather, to running away, being beaten and forced to do porn, even though she was underage, and how she was sold to a bigger producer, pretended to participate voluntarily, then got away, contacted the police and got the people who did it to her arrested and thrown in jail. It took more than an hour, including breaks for her to cry and for me to try to comfort her, but I was really out of my depth. She had gone from telling me almost nothing about her life to telling me more than I really needed to know.\n\nWhen the story ended, pretty much where the news stories stopped, with her back in Atlanta with her mother and her stepfather dead, I asked her, \"So how did you end up here?\"\n\nRose took a deep breath. \"After a few months, when everything seemed to have settled down, I was going to go back to school and get my diploma, try to be normal and all, my mom and I were out for dinner at Applebee's. When we got back, we noticed fire engines, but didn't think anything of it, until we got closer to our house. We realized it was on fire. Mom and I ran to the house, but the firemen stopped us. And while we were digesting the fact that everything we had was burning, my phone rang. I didn't recognize the number, and when I picked up, a muffled voice said, 'we know where you are.' We freaked out and jumped back in the car and started driving. After a few days, I went online and randomly found Farston. It seemed like a nice place, small enough, and quiet, and so we drove here. I spoke to the chief of police and Mr. G, and we worked it out. I had some money saved from, you know, the movies, so we were able to rent the house. And mom will get insurance eventually, when we can figure it all out.\"\n\nWhat could I say? I just sat there letting it all sink in. \"Can I ask you why you just didn't get a GED and not have to deal with going to school with younger kids?\"\n\nRose paused before answering. \"I had never known a normal life, and I thought maybe I could have one. I wanted to have friends, gossip, sit in a classroom, go to prom. All that stuff.\" She rubbed her eyes. \"I guess it was a dumb dream. I can't ever be normal, I guess.\"\n\n\"That's not true,\" I insisted, although at that moment, it kind of seemed true. There was an awkward pause, and I wanted to fill it. \"How'd you pick your new name?\" was all I could think of.\n\nFor the first time in a while, Rose smiled. \"Mom thought of 'Hicks' because we were moving to a 'hick town'\u2014no offense intended,' she quickly added.\n\n\"None taken,\" I said, because she was pretty much right.\n\n\"And 'Rose' because they are pretty and pure, but are strong and can protect themselves,\" she finished.\n\n\"I think that is a good name,\" I said, and I meant it. I realized, though, that there was more. \"Rose, Sam wants to write about you in the school paper.\"\n\nI could feel her stiffen up. \"If the word gets out, I'll be found, and they will come for me and Mom.\"\n\n\"I can talk to Sam, but I don't know if it will do any good. He thinks that he is a fucking crusading reporter.\"\n\n\"Then I have to talk to him and convince him to keep quiet.\"\n\n\"Are you sure?\"\n\nShe took a deep breath. \"I am. I have to be.\"\n\nWe sat there for a few minutes, and I could hear Rose breathing while she thought. She turned to look at me, and the next thing I knew, we were kissing.\n\nIf I thought that my kisses with Tessa at the party were good, and they were, this was another order of magnitude. Rose's lips were soft, her tongue firm, and she tasted indescribably delicious. It sent chills down my spine, caused my stomach to flip and my cock to get hard. But it lasted only a few seconds, before Rose bolted off of the bench and started running away. I was stunned, first by the passion of the kiss, then by its sudden end, and then by the sight of Rose tearing away as fast as her long legs could carry her. By the time I was able to move and start running as fast as I could, considering the hard on that I had, she had reached her car, and her tires squealed as she peeled away. I tried calling her, but it kept going to voicemail, so I decided to drive after her.\n\nWhen I arrived at her house, Rose's car was in the driveway, but she was nowhere to be seen. I knocked, then banged, on the door until her mother answered.\n\n\"I need to speak with Rose,\" I demanded, out of breath.\n\nShe turned and stepped into the house, but left the door open. I walked in behind her.\n\n\"Rose, Dale is here to see you,\" she yelled up the stairs.\n\n\"Tell him to go away,\" came from upstairs.\n\n\"I'm not going anywhere,\" I yelled back. \"We need to talk.\" There was no immediate response. I could hear footsteps, a door close, water run, a door open, and more footsteps, which stopped. After a few seconds, Rose came down the stairs, her eyes red-rimmed.\n\nShe looked at her mother and said, \"Someone at school found out.\"\n\nMrs. Hicks, or Mrs. Rowland, to be accurate, deflated before my eyes and collapsed on the nearest chair.\n\n\"How?\" she whispered.\n\nI decided to respond. \"One of my friends recognized Rose from, you know, the Internet.\"\n\nRose stood there as her mother asked, \"And he told everyone?\"\n\n\"No, actually, I think he only told me. But he is the editor of the school paper, and gave me until tomorrow before he goes public.\"\n\n\"Shit,\" Mrs. Hicks/Rowland said, sadly. \"I guess we have to start packing, Rose.\"\n\n\"Wait. I've known Sam since preschool. He's not a bad guy. Give me a few hours.\" I had to think of a way to get Sam to sit on the story. I ran out of the house and got into my car. My first instinct was to call Larry and Albert, but I realized quickly that was a bad instinct. I had to get adults involved, and I had to start with my parents. Every once in a while, though, the kiss forced its way into my thoughts, but I had to shake my head and focus on the bigger issue.\n\nSomehow, I had pulled into my driveway, despite the fact that I had no recollection of actually driving there from Rose's house. I ran into the house and was happy to see Mom working away in the kitchen on something that smelled incredible, and Dad watching a game.\n\n\"Mom, Dad, I need to talk to you.\"\n\nI must have looked out of control, because they both said, \"Dale, what's the matter,\" at pretty much the same time.\n\n\"Calm down,\" Dad said, moving from the couch to the kitchen table, and Mom quickly poured me a glass of water before sitting down.\n\n\"Are you O.K., honey?\" Mom asked, a look of concern on her face.\n\n\"Um, oh, yeah, I'm fine, but I need your help.\" Mom glanced at Dad with a look that showed both concern and maybe a bit of pleasure that I had come to them. The said nothing, so I told them about Rose, at least a PG-13 or maybe a soft R version. I mean, I wasn't going to admit to the amount of porn that I watched, or say \"blow job\" to my mother, but I gave them the basics.\n\nDad looked up at the ceiling, pressing his fingertips together and then to his lips in his \"thinking\" look, which I sometimes found myself doing and said, \"How can we stop Sam from going public? That's the immediate question.\"\n\nI nodded.\n\nMom said, \"But if Sam recognized her, then someone else is bound to. I mean, Sam can't be the only kid in this town who watches...\"\n\nBefore she could finish, Dad jumped in, \"or adult, for that matter.\" Mom shot Dad a look that made it clear that there would be a private discussion between them later.\n\nI had never even considered that possibility. We could put out this fire, and another one could arise the next day, or week, or year. And if she moved, the same thing would just repeat itself. Not to mention, I would never have a chance for another kiss like that. But it wasn't about me, really, although it was quite a kiss. \"What can we do?\" I asked.\n\nMom asked me, \"How did you get involved, anyway? I thought that you and Tessa Hill...\"\n\n\"Rose and I are friends. Sam called me because he knew that. I'm just trying to help. Really.\" Dad smiled at me quickly, as if he really didn't buy that, but he said nothing.\n\n\"You're a good friend, then, Dale,\" Mom said.\n\nDad said, like he was working through an idea out loud, \"You know, when you want a reporter to bury a story, you have to offer him something in exchange.\"\n\n\"But what do we have?\" I asked. \"We have nothing to trade that is juicier than a former underage porn star going to school with us.\"\n\n\"Actually, you do,\" Dad said, with a grin. \"You have the former underage porn star.\"\n\nMom nodded, but I wasn't getting it. \"I don't get it, Dad.\"\n\n\"Offer him an exclusive interview with Rose if he holds the story.\" Dad replied.\n\n\"I still don't get it. She wants to keep this a secret, not give an interview.\"\n\n\"No, just offer the interview, but only when Rose decides to go public.\"\n\nDad's strategy was beginning to make sense. \"If she never goes public, then no interview, but if she has to go public, he gets the scoop.\"\n\n\"Do people still say 'scoop'?\" Mom asked and Dad and I both shrugged. We both watched a lot of television.\n\nDad turned to me and said, \"Call Rose. Tell her our idea. Ask her and her mother to come here so we can discuss it.\" I made the call, and Mom returned to the kitchen to prepare for guests.\n\n* * *\n\nAbout 20 minutes later, we were all in our living room, and Dad outlined his plan. Rose, who kept apologizing, thought it made sense. Her mother initially just wanted to pack up and move on, but Mom convinced her that Farston was a good a place as any to try to stick it out, and she ultimately relented. Dad suggested that we get Mr. Garner involved, and after everyone agreed, he called the principal and filled him in. A half hour later, we were on our way to a meeting at the school.\n\nI could only imagine what happened at the Cruz house when Mr. G called. I mean, it is bad enough when the principal calls, but for him to call on a Sunday evening must have been a little unsettling. Especially since Sam's parents were kind of religious and conservative.\n\nIt was not an easy meeting. Mr. G laid out the facts, and Sam's parents were mighty unhappy with Sam's Internet porn viewing. Rose started crying and leaned her head on my shoulder, which drew some surprised looks from my parents. Sam insisted that he had the right to publish, and when Mr. G threatened to kick Sam off the paper, he threatened to post the story online. His parents were horrified at Sam's insistence on hurting Rose, but also took some shots at Rose's and her mother's \"immorality.\" Mom and Dad tried to calm things down, and I sat there, my head spinning, and Rose bawling away on my shoulder.\n\nFinally, though, and somewhat reluctantly, Sam agreed to the arrangement that he would tell no one, and that whenever Rose decided to go public, he would get an exclusive interview\u2014even if it was after graduation. Mr. G also made it clear that everyone in the room, including me\u2014maybe especially me\u2014was sworn to silence. Mom and Dad offered to take everyone to Cookie's for dessert and coffee, but the Cruz's apparently had other, likely less delicious, plans for Sam, and Rose just wanted to go home.\n\nWe decided to just go home, too, and the car ride was pretty quiet, other than Dad playing with the radio and Mom busting his chops for playing with the radio. I sat in the back, with my eyes closed, trying to make sense of the whole situation.\n\nLater that night, I was in bed, trying to sleep when my phone rang. It was Rose.\n\n\"Hi, Dale, I hope I didn't wake you.\"\n\n\"No, I'm awake.\"\n\n\"I wanted to thank you and your parents for today.\"\n\n\"No problem.\" The phone was silent.\n\n\"There's something else,\" Rose finally said.\n\n\"Yeah?\"\n\n\"Yeah. About our kiss.\"\n\nThe memory of it flooded back into my mind and I started to feel warm. \"It's O.K., we can pretend it didn't happen.\"\n\n\"That's not what I meant. I wanted to kiss you. I'm glad I kissed you.\"\n\n\"Me too, then why did you run away?\"\n\nThere was a long silence. I could hear Rose breathing on the phone. Finally she spoke, slowly. \"You have been such a good friend to me, even before you knew. And when you told me that you knew, you did everything right. You are the first man I have allowed to kiss me\u2014hell, actually the first man I've allowed to touch me\u2014since I got away from those bastards.\"\n\n\"Oh,\" was all I could think to say. For a second, I thought it was cool that she called me a \"man,\" but I guess I was, and I needed to focus.\n\n\"I like you, Dale. I like you a lot. But I can't see this working. You're a nice guy, and I'm this, you know, 'porn star'. I know that you have needs and wants, and I'm not sure I can let that happen. I'm not sure what would happen when we kissed again. Or if we went further. I might lose it again, like I did with Stan, and you deserve better.\"\n\nI really didn't know how to respond, and before I could say anything, she continued. \"Plus, if my location gets out, it could get dangerous for you, and I might have to disappear.\" She paused again. I could hear her take a deep breath and say, \"No, Dale, you and I should just be just friends. You deserve a regular girlfriend, who can be there for you, and act like a girlfriend. You should go out with that cute girl from the party.\"\n\nBefore I could answer, she hung up. When I called her back, it went to voicemail.\n\nBoy, my life had changed over that weekend. I went from girlfriendless and pretty much hopeless to having a cute sophomore basically throw herself at me, and a 21 year old ex porn star telling me that I was too good for her, after giving me the kiss of my lifetime. Of course, Rose made it clear that she wasn't currently interested in doing anything with me, while Tessa made it clear that she very much did. On the other hand, as pretty as Tessa was, I really didn't know her, or whether I even liked anything about her other than her apparent willingness to fuck me. Which, admittedly was a heavy weight on her side of the scale. But Rose was not only more beautiful, she was a real friend, and I knew that we got along, and that there was a real attraction. I mulled over the situation, turning it over and over in my mind, without really coming up with a solution.\n\n* * *\n\nThe alarm rang, and I started my morning routine without thinking. But when I saw Mom and Dad, the past night popped back into my mind. I thanked Mom and Dad again for their help. When Dad and I were in the car, he said, \"How involved are you with Rose?\"\n\nI've always found that honesty, or something damn close to it, has worked the best with my parents, so I said, \"Really, we are only friends. Yesterday, when I told her that Sam knew about her past, and she was telling me the story, she kissed me, but last night she said it was a mistake,\" I rambled.\n\nDad nodded. \"O.K. My advice, if you want it, is that you need to be careful around her. She is not like the other girls you know. She's had experiences that you can't even fathom. I don't want you to get hurt. So, be her friend, but be careful.\"\n\nAnd that was Dad. He didn't lecture, he didn't set unenforceable rules. He told me what he thought, and he trusted me to do the right thing. I wished that I knew what the right thing was, though.\n\nRose was in her usual seat in homeroom, and I tried desperately to act like I had on Friday. Between second and third period, I saw Tessa, and she looked pissed when she saw me. We only had a few minutes, but she left her group of sophomores and came over to me. \"Why didn't you call\u2014or even text\u2014me yesterday? I thought that we had something,\" she hissed.\n\n\"Something important came up.\"\n\n\"It better have been,\" she said, and turned to walk away. \"Meet me at your car after school,\" she demanded before striding down the hall to catch up to her friends. I was not looking forward to that conversation. It gnawed at me all day, and Rose's smile when we passed in the hall only made it worse. Not to mention that it was killing me not to be able to say anything to Albert and Larry about the whole thing.\n\nBut I made it through the day, and was both looking forward to and dreading my \"meeting\" with Tessa. She was waiting by my car, leaning against the hood, looking good enough to eat. Her hair flowed in waves past her shoulders and her compact body strained against her clothing. Her cute face had a mix of innocence and mischief that frankly was nearly irresistible. When I reached the car, she pressed her body against me and brushed my lips with the hint of a kiss.\n\n\"Would you give me a ride home?\" she asked, knowing the answer would be \"yes.\" I nodded and opened her door, and as she slid into the passenger seat, I got a brief hint of her soft cleavage. I hurried to the driver's side of the car, and started to drive toward Tessa's house. She chattered away, as if we had been dating for months, and not maybe just starting some sort of relationship. I wasn't sure where this was going, and I kinda hoped that she suggested that we go anywhere other than her house, but after her reaction this morning, I was hesitant to push. When I pulled in front of her family's nice, white house, I wasn't sure if she was going to invite me in, so I sat there.",
        "Tessa took off her seatbelt and leaned toward me, giving me another good look down her shirt, and she kissed me hard. We made out for a few seconds, and she placed my hand square on her firm breast before pulling away and getting out of the car. She leaned down and looked in the open window, yet again allowing me a full view of the space between her small breasts and said, \"There's more where that came from, but you need to show me that you know how to treat me.\" Before I could answer, she turned, her hair swirling behind her, and I watched her cute little ass wiggle up the driveway and into the house.\n\nI drove home, horny, frustrated and confused. It seemed like all I needed to do was to pay attention to Tessa, and I would get laid. But I have to admit, I didn't like the way she was teasing me and trying to control me. I knew it would only get worse if I committed, and I would find myself totally under her control. But, on the other hand, sex. Not only that, but I kept seeing Rose's face looking unhappy. Under normal circumstances, this situation would call for a session with Larry and Albert, some major video gaming, and by the time we were bored with the game, my problem would be solved. But I couldn't tell them, because I'd have to tell them about Rose.\n\nI walked into my house, and Mom was sitting in the kitchen, drinking some iced coffee and reading a magazine.\n\n\"Hey Dale, how was school\u2014everything quiet about Rose?\"\n\n\"Yeah, it looks like it worked.\"\n\nShe took a sip from her ice coffee. \"Everything else O.K.?\"\n\nI said, \"Yeah,\" and started toward my room, before turning back toward her and saying, \"actually, not really.\"\n\nMom closed her magazine and looked at me, her kind eyes looking at me with concern. \"What's the matter, sweetie?\"\n\nI sat down and took a deep breath. Here goes nothing. \"Um, I'm a little confused....\"\n\n\"About?\"\n\n\"You know, I'm not the most experienced guy, you know, with like girls.\" I paused and realized I had just jumped off a bridge, and there was no going back. To her credit, Mom just looked at me, waiting. \"I mean, I've done stuff, but never, you know...\"\n\n\"Never?\"\n\nI shook my head. Mom waited for me to continue, her face betraying nothing. \"So, anyway, I think that Tessa is willing\u2014\"\n\n\"Wait,\" Mom interrupted. \"Phil and Angela's Tessa? Isn't she like 15?\"\n\n\"Sixteen, I think.\"\n\nMom looked at me, her eyes narrowed, \"She's a child, Dale.\"\n\n\"Mom, from what I hear, I wouldn't be her first.\" She shook her head, and I continued, \"You have to keep this between us. Please promise.\" Mom nodded.\n\n\"But, I don't know\u2014\"\n\n\"If you are ready?\"\n\n\"No, I think I'm ready, you know, but there are a few things. First, I'm not sure I really like her that way, I mean she is really pretty and all, but I'd be worried that I was using her, you know.\" Mom smiled a little. \"And also, she already is like bossing me around and stuff, and we aren't even doing anything.\" Mom closed her eyes and sort of shook her head. \"And there's something, I mean, someone, else I really like.\"\n\n\"Rose?\"\n\nIt was my turn to nod. \"Yeah, and she told me she liked me, but was afraid that she couldn't be the kind of girlfriend I need now, because, you know, she had trouble being touched and all.\"\n\nMom took a deep breath and then sipped at her iced coffee. I watched the condensation drip down the glass as she sipped. It felt good to be able to say all of this out loud, and so far Mom hadn't freaked out, which was good.\n\nFinally, Mom started to speak. \"Dale, let me start by thanking you for coming to me for advice. I suspect it wasn't easy. Second, let me say that I'm proud of you for at least thinking this through. I would guess that most guys like you wouldn't have second thoughts if a pretty girl offered herself to you, even if you weren't sure about her. I can pretty much guarantee you, sweetie, that even if it isn't with Tessa\u2014and I still think she is too young, by the way\u2014that your time is bound to come soon. You are a nice guy, and smart, and funny, and handsome. And the right kind of girl will appreciate being treated with respect by you, and will not try to manipulate you. Now, you are a big boy\u2014an adult\u2014and you can do what you want, but I think that just the fact that you are having questions, should tell you what the answer is.\"\n\nAs she was saying it, I knew that she was right. As much as I was sick of being a virgin and wanted to fuck Tessa, I wasn't prepared for the rest of the deal. Maybe that is what growing up means. \"Yeah, I think you are right, Mom.\"\n\nShe smiled at me, and I realized maybe for the first time, that Mom was a pretty good looking woman herself, and maybe went through some of this stuff when she was my age. She said, \"But I also have to say that I have concerns about Rose and you.\"\n\n\"Me too,\" I said, \"and not only because of the touching thing.\"\n\n\"What else?\"\n\n\"The whole thing. I'm just a kid from a small town. Nothing has ever happened to me, and everything has happened to her. How does that work out?\"\n\n\"I agree,\" Mom said. \"I mean, you should be her friend, god knows that girl needs friends, but I'd be careful.\" She finished her coffee with an amusing slurp.\n\nI stood up, and so did Mom. We stepped toward each other and hugged, her head pressing into my chest. \"You are a good man, Dale.\"\n\n\"I had good role models.\" She squeezed me and pulled away. She turned toward the sink, and maybe I saw tears in her eyes, but I'm not sure.\n\n* * *\n\nThe next day at school, I saw Tessa, and turned my face away when she tried to kiss my lips. She looked at me with fire in her dark brown eyes. \"Seriously, Dale?\"\n\n\"Yeah, Tessa, I, um, I just don't think it will work out with us.\"\n\nFor a second, there was a blank look on her face, as if she couldn't even contemplate that I would reject her. It quickly changed to a frown, before it turned into a look of scorn. She stuck her small, but prominent chest out, turned away and said, \"Your loss, loser,\" before swaying down the hall, putting on a pretty good show for me and everyone else in the hall.\n\nI'm not sure if I just made a huge mistake, but it felt right. But, from the look on Larry's face, he didn't agree. \"What the fuck, dude?\" he asked.\n\n\"I guess I'm not interested.\"\n\n\"Like I said, what the fuck? That girl is like a little package of sex, and you just casually blow her off?\"\n\n\"Yeah, it's a long story,\" I muttered, and walked away, almost bumping right into Rose.\n\n\"Are you O.K., Dale?\" she asked, looking concerned.\n\n\"Uh, yeah, I guess so. I'm late for class.\" I walked away and maybe I saw Rose smile, but I'm not sure.\n\n* * *\n\nThings fell back into their usual pattern. I went to school, went to my club meetings, studied English with Rose, and no more cute girls offered to have sex with me. And my relationship with Rose went no further than the friends that we had become. In fact, as time went on, I found that she became one of my closest friends. We talked about pretty much everything, except for one, big thing. When I became comfortable enough to complain to her about my decision to reject Tessa, in light of my continued virginity, she reassured me that I had made the right decision, and like my Mom, was adamant that it was the kind of decision that the right woman would appreciate at the right time. Which was nice and all, but wasn't getting me laid.\n\nFor her part, Rose occasionally dropped some references to her past life, but they were vague and fleeting\u2014usually when something that came up in something we were reading in English class, or some movie or show we were watching reminded her of something. Occasionally, she would start crying, and she would let me hold her and comfort her, but no more. Or she would run off to her room, and I would sit awkwardly until it was clear that she wasn't coming back, and I would go home.\n\nI was frustrated, though, and found myself spending more time online watching porn, and while I thought about it occasionally, I never watched any Aubrey Angel videos. I wanted the real thing, and she was so close, I could almost taste it, but it seemed like it would never happen.\n\n* * *\n\nThe weather turned cold, and I was focused on college applications and my schoolwork. I was hanging out with my old friends, although Larry had a girlfriend for a while, and with Rose, just treading water. There were a few times that it seemed like girls were flirting with me a little, but I was never attracted to any of them. My drought continued.\n\nA few days before Christmas, I was doing my usual late shopping at the mall, when I got a text from Rose, \"Pls give me a call.\"\n\nI went to a quiet corner of the teeming shopping center and called, not sure what was going on.\n\n\"Dale?\" she said in her quiet voice.\n\n\"Yeah, Rose. Everything O.K.? I'm at the mall,\" I added for no particular reason.\n\n\"Oh. Sorry to bother you...\"\n\n\"It's no bother.\"\n\n\"Um, my mom is going to visit some relatives over Christmas, and I was wondering if you would like to come by at some point and hang out.\"\n\n\"Sure. But if you are going to be alone for Christmas, why don't I ask my parents if you can join us.\"\n\nShe paused. \"No, that's O.K. I don't want to intrude.\"\n\n\"It's really no big deal\u2014it is just the three of us, and my grandma.\"\n\n\"I really appreciate it, Dale, but honestly, I'd rather just have some quiet time alone. And I would like to spend some time alone with you here, if that's O.K.\"\n\n\"Um, sure, um, how about Christmas Day night\u2014we eat an early dinner and then just sit around. I can probably get away.\"\n\n\"That sounds great, Dale. See you then.\"\n\nI started walking back toward the stores, when I stopped short, causing the person behind me to bump into my back. After an exchange of apologies, I stood in the middle of the crowd of crazed shoppers pondering Rose's statement that she wanted to spend time alone with me. And what exactly that might mean. I also realized that I needed to buy her some sort of gift, and began to wonder what you buy for someone like Rose.\n\n* * *\n\nUsually, I liked my family's Christmas. It was low-key, and more about family than gifts. Ever since I was old enough to stop demanding the dumb stuff that kids want, we all exchanged fun, sometimes meaningful, gifts, sat around, watched movies and ate. Unfortunately, I was down to only one living grandparent, and my aunts and uncles all lived too far away for a big family get together, but I really appreciated the generally peaceful time. This year, though, all I wanted to do was to go over to Rose's house, and my Mom gave me an early release. I mean, for all I knew, it was just going to be like our usual hanging out, watching movies and talking. But I kept going over in my mind what she said on the phone. Did she emphasize the word \"alone?\" or \"with you?\" Or was I reading too much into it? She had, in all other respects never shown me any change in her reluctance to have any sort of physical relationship with me.\n\nBut, it was time to find out. I brushed my teeth, combed my hair and grabbed the small wrapped gift before saying goodbye to my family and heading to Rose's house.\n\nWhen I got there, she was wearing what I guess would be called a \"little black dress\" that hugged her curves. It was sexy without being slutty, and it took my breath away. Her hair was not in its usual pony tail and framed her beautiful face, which seemed to have some more makeup than usual, but not too much. She was stunning, and she smiled at what must have been the dumb look on my face.\n\n\"I guess you like me done up a little more than usual.\"\n\nI struggled to say, \"You, um, you look amazing.\"\n\n\"Thanks,\" she said, and performed a little mock curtsey.\n\nI saw a bottle of wine on the table, and one half filled glass and one empty, in front of a small, artificial Christmas tree, lit up and covered in tinsel.\n\n\"Would you like some wine?\"\n\n\"Sure.\" We had actually never drunk together. I knew that she was old enough to buy booze, but never asked her to get me any, and she never offered. I was not a big drinker, but had the occasional drink at parties, and some wine occasionally with my parents. She poured me a glass, and I noted that the bottle was only about half full, so she was already at least a glass ahead of me.\n\nWe moved to the couch and she asked about my Christmas, and I told her.\n\n\"That sounds nice,\" she said. \"I never really remember a nice Christmas, I guess,\" she said. I decided to stay quiet and let her talk. \"I never knew my father, and mom had a bunch of boyfriends, and they used to drink a lot.\" She paused. \"And you know how that worked out.\" Her beautiful blue eyes started to tear up, but she squared her shoulders, which had the effect of causing her breasts to jut out toward me, before saying, \"but that's not what I want to talk about today. It's fucking Christmas.\" She took a long drink from her wine.\n\nRose turned to me, and surprisingly took my hands and looked in my eyes. \"What I want to say is that I think I might be ready to take our friendship to a new level, um, if you know, you are interested.\"\n\nI must have looked stunned, because Rose laughed. And then I felt the heat crawling up my neck, meaning that I was probably turning red. I tried to say something, but before I could, Rose leaned in and gently touched her lips to mine. It felt exactly perfect, and we just lingered there, not pressing forward or doing anything else. She pulled back slightly, and I wondered if she was about to go running off, like she did that time in the park. But instead she smiled.\n\n\"That was good,\" she said, sounding both surprised and pleased. She leaned forward again, and this time, kissed me harder, slipping her tongue into my mouth. I pulled her close to me on the couch, and we just kissed and held each other. I had no idea how far she was willing to go, and the last think I wanted to do was to blow this by pushing her past her limits. That all being said, I was harder than I ever remembered being, and it was pretty uncomfortable.\n\nRose detached herself from me, and looked at me and she looked happy. \"Thanks, Dale.\"\n\nI had no idea why she was thanking me. \"No, Rose, thank you.\"\n\n\"No, Dale, I've wanted to do that again since that day in the park, you know, but I couldn't. It's taken me this long, and lots of therapy. And maybe half a bottle of wine, but I did it, and I feel good.\"\n\nI smiled, hoping for more. But instead, she said, \"Dale, remember when I told you that I wasn't the right person to be your girlfriend.\"\n\n\"I guess,\" I said, which was a lie, since I had gone over that conversation in my head so many times that I could probably recite it word for word, with all of the appropriate inflections and body language.\n\n\"I'm still not sure if I'm being fair to you, but if you are willing, and are willing to take things slowly, I'd like you to consider, you know, being together.\"\n\n\"Yes.\" I didn't need to think things over. \"Absolutely, yes.\"\n\n\"I mean, I'm not ready to do\u2014\"\n\nI interrupted, \"I don't care. I like you, and I don't care about that stuff. I can go as slow as you want. But I have to ask you, why me? I mean, I'm just a regular guy, I'm younger than you, I have no experience at all, and I'm not the best looking guy in the world.\"\n\nRose paused before answering. \"First, you underestimate how good looking you are, but that isn't the most important thing. I remember that first day, how you were friendly with me, polite, not trying any moves on me. I just got a sense that you were a genuine guy. And after that, you were always friendly, nice, respectful and helpful, and even though I could tell that you liked me, you didn't press me. You were, really, the first true friend I had made in like forever, who didn't seem to want anything from me other than friendship. The way you handled finding out about my, uh, past was incredible. From keeping Sam quiet, to getting your parents involved, and then the school. I realized that I really liked you, too, and that I could trust you.....\"\n\nHer eyes filled with tears again, and she slid closer to me and rested her head on my chest, while I stroked her hair and rubbed her shoulder. We sat there for a long time, just like that, and I loved the way she felt against me. The most I did was run my hand down her side, as far as I could reach, which was roughly her hip, and she didn't seem to mind.\n\nRose turned, gave me a quick sweet kiss, and said, \"It's Christmas\u2014I have a gift for you.\" She got up and went out of the room, returning with a small, wrapped package. I went over and got my gift for Rose and handed it to her. \"You first,\" she said.\n\nI opened the package, and it was a copy of 1984, a hard cover copy with a green cover. It looked old. \"It's a first edition,\" she said.\n\nI was dumbfounded. \"That must have cost---\"\n\n\"Don't worry, it's O.K.\"\n\n\"It makes my gift look pretty lame,\" I said as she opened the box, revealing the small, silver rose necklace.<br>\n\n\"It's beautiful,\" she said, and actually seemed sincere. \"I love it. Please put it on me.\"\n\nShe handed me the necklace and turned around and held her hair up. I opened the clasp and put the chain around her elegant neck, inhaling her scent. After I closed the clasp, she let her hair down and pressed herself against me, causing my apparently permanently erect cock to press against her ass. I hugged her from behind and nuzzled her neck. I was about as happy as I could have imagined. I couldn't resist, and I reached up to cup her breasts, briefly feeling their weight and the hardness of her nipples when Rose pulled away from me.\n\n\"I'm not ready for that, yet,\" she yelled, her eyes wild like a cornered animal. I looked at the clock on the wall, and saw that it was nearly 1 a.m. \"I think you should go. I'm sorry.\"\n\nI was pretty sorry too, for lots of reasons, and just nodded. She even stepped back when I tried to kiss her goodbye. I gathered my stuff and drove home. I was very frustrated, and went over the night in my head as I drove. I decided to focus on the incredible kissing, my brief memory of the feel of her breasts in my hand. And the fact that she said that she was not ready, \"yet.\" \"Yet\" is a word that gives a desperate man hope. Luckily, when I got home everyone in my house was asleep, so I'm pretty sure that no one heard me jerk off.\n\n* * *\n\nThe next morning, when I came downstairs, Mom was making eggs, and bacon was frying. Dad was sitting at the table, drinking coffee and eating breakfast. Mom poured me a mug, and asked, \"So, how did it go last night.\"\n\n\"Well,\" I said. \"We had some wine, we talked, and exchanged gifts.\" All of that was true, but I knew it wasn't what she wanted to hear. I kind of hoped that she would let me move on, but I didn't expect it. And I was right.\n\n\"That sounds nice,\" she said. Then paused. She looked hard at me. \"That's all?\"\n\nI knew that if I tried to evade her, she would, in her subtle, loving and insistent way, try to worm more information out of me. So, I figured that I'd let her know what happened. \"Actually, Mom, Rose said that she wanted to have a relationship with me, you know,\" I faltered, and could see Mom and Dad glance at each other.\n\nDad put down the paper, \"How do you feel about that?\"\n\n\"Good, I think, yeah, really good. I mean, I really like her, and all.\"\n\nMom fixed her gaze on me. \"Did you and Rose\u2014\"\n\nBefore she could finish, I interrupted. \"No, Mom, we didn't, although that really is kinda private. But she is still having issues with being touched, so I don't think that you have anything to worry about.\" I felt myself getting a little annoyed, but I knew that she meant well. Even so, I didn't want to talk about it anymore, so I went off to my room to sulk and think.\n\n* * *\n\nAs New Year's approached, Rose and I spoke, had a couple of coffees, but other than a kiss hello and goodbye, it seemed like things had taken a step backwards physically. She was pleasant, usually, but nothing more than that, and I wondered how much of what she had said at Christmas was the wine talking. I took out my frustration on my college applications and parents, hung out with Albert and Larry and watched movies with my parents at night. I kind of assumed that Rose and I would do something on New Year's Eve, but we never discussed it.",
        "Finally, we agreed to go out to dinner at a nice restaurant in a couple of towns away, but because I was still underage, we couldn't go to any bars, which was fine with me. They all sounded too expensive, and dumb. I heard about a few local parties, being thrown by the kids at school, and Rose and I decided to go to the one at Erika's. I knew pretty much who would be at which party, and what would happen, so I was less than excited about the prospects. Rose's mother was going to return from her trip on New Year's Eve day, and was going to be home, and my parents, like every New Year's, were planning to cook dinner and watch movies until they fell asleep on the couch with a half-full bottle of cheap champagne.\n\nI got dressed up, drove over to Rose's house, picked her up and we drove over to Raoul's. She looked incredible, of course. She was wearing a dress that flattered her\u2014it was classy and sexy at the same time, and she was wearing the rose pendant that I gave her, and it was sitting just inside her ample cleavage. She gave me a great kiss and hug, and it truly felt amazing to be enveloped in her arms, pressing against that body.\n\n\"Where's your mom?\" I asked, figuring I should be polite and wish her a Happy New Year.\n\nRose gave me a smile. \"She called me this morning and said that she had decided to stay in Atlanta. She was actually having fun, and had been invited to a big party. I told her not to worry.\" She smiled and licked her lips, and I almost melted. \"So, after the parties, we can come back here, and you know, hang out.\"\n\nThis definitely sounded promising. Of course, I couldn't predict how Rose would react, but I heard something in her voice that made me think that tonight might be the night that I finally lost my virginity. Or, I could end up frustrated yet again. This was what I had signed up for, and I had every hope that it was going to be worth it.\n\nIt was sad when Rose put on her winter coat, because I couldn't see her body any more, but the car was dark anyway, and I could still see it in my imagination, and that, along with the car heater, helped keep me warm. We made small talk as we drove, and I was happy that she took my hand and held it as I navigated the roads between Farston and Millersville.\n\nRaoul's was a former speakeasy that had, for many years, been the rare French restaurant in our part of the world. My parents had taken me there a couple of times, and to my taste, it was damn good, although I knew that I didn't really have any kind of frame of reference. My dad was nice enough to slip me a few bucks before I left\u2014I had enough to pay for it, but it was a nice thing for him to do. And yet, as good as the meal was, I really don't remember the details all that much, because Rose was so beautiful that I focused more on her than on what we ate. She seemed even happy as we chattered about this and that, and I felt like maybe she was comfortable.\n\nAfter I paid the bill\u2014and refused Rose's offer to pay for half\u2014we got back into the car and drove back to Farston. We held hands again, and soon we were at the fairly large house of Erika Fletcher's family. Of course, we knew everyone, and it was like pretty much every high school party, except people were dressed better. It was funny how dressing up, and the fact that it was New Year's made everyone behave differently, like we were pretending to be grownups, but really didn't know what to do. There was food, and music, and some booze, but this crowd tried hard to keep it together. And at midnight, we popped open some sparkling something, and Rose clung to me while we kissed, along with a bunch of other couples.\n\nIt was time to head back to Rose's house, and I was nervous but excited, and definitely hopeful. She had been incredibly affectionate all night, and we had a couple of pretty intense makeout sessions beyond the midnight kiss. I tried to hold it together, even though I was close to vibrating with nerves, as we drove to her house. I was nervous that it might happen, and nervous that it wouldn't. And if it did, whether I would do well enough. Rose's past was more than a little intimidating, but I tried to block it out. She was gripping my hand tightly when we started, and I moved it to her firm, smooth thigh about halfway to her house. But just after we turned on to her street, she slammed her hand down on my somewhat straying hand and yelled, \"Fuck\u2014Dale\u2014stop the car now.\"\n\nI was startled, and jammed on the brakes. All I could think of was that I had done something with my hand to set her off, and started to get resigned to another night of virginity. \"Sorry,\" I said, and put my right hand back on the wheel.\n\n\"No, Dale. Look, don't stop at my house. Just drive past and keep going.\"\n\nI had no clue what the hell was going on, but I did what she said, and was shocked when she undid her seatbelt and scrunched down in her seat. Now, I'm not going to lie and say that the idea of Rose going down on me in my car never occurred to me, but I do know that the look of fear on her face was never part of my fantasy. I drove, at a normal pace, past her house, and said, \"Where to now? My house?\"\n\n\"No, it's not safe. Just get to the highway and drive,\" she said, in an flat, empty voice.\n\nI may not be a genius, but I knew enough to follow her directions without question. I drove the car through the quiet streets until I got to Route 52, and took that to the interstate. It was only after I merged into traffic, that Rose got up, adjusted herself under her coat, and fastened her seatbelt.\n\n\"Um, Rose, what's going on?\"\n\nHer eyes were wild. \"They're here. They fucking found me. How the fuck...\" her voice trailed off, and she began to cry, her body wracked with sobs. In the highway lights, I could see her mascara begin to run down her beautiful face, her hair beginning to become undone.\n\n\"How\u2014\"\n\n\"I saw one of the assholes sitting in the car, watching the house. As your headlights lit up the car, I saw his face. Plain as day.\"\n\n\"Are you sure?\" I asked quietly.\n\n\"Of course, I'm fucking sure,\" she snapped, \"I could never forget that face. Ever.\"\n\n\"We need to call my parents and call the police.\"\n\nRose nodded. I reached into my pocket and pulled out my phone and dialed home. My father answered, a bit groggily.\n\n\"Dad, it's me.\"\n\n\"Hey, is everything alright?\"\n\n\"No. We're O.K., but when I was taking Rose home,\" he didn't need to know every detail, \"she thinks she saw one of the guys, you know, from before, um, staking out her house. So we are driving away.\"\n\n\"Shit,\" he said, more alertly. \"Where are you?\"\n\nI looked at the road signs and told him.\n\n\"O.K., Dale, get off the highway at Brownlee and go to the Quality Inn right off the highway and get a room. Register in your name. Do you have money?\"\n\n\"Uh, I think so.\"\n\n\"Use the emergency credit card. I think this qualifies.\"\n\n\"Thanks, Dad.\"\n\n\"Dale, is she sure, or just being paranoid?\"\n\nI was glad that the phone wasn't on speaker. I looked at Rose's red, puffy, scared face. \"Yeah, Dad, she's sure.\"\n\n\"Dale, give the phone to Rose.\" I handed her the phone, and could hear only her side of the conversation.\n\n\"Yes, Mr. Bennett. Sure, Carl. Yes, I'm sure. His name is Jake Young. Dark hair, goatee. About 6 feet tall, maybe 220, muscles. Tattoo of a snarling dog on his right buttock.\"\n\nI didn't really want to know how she knew that. I kept driving as Rose spoke to my Dad.\n\n\"Yes. Yes. She stayed in Atlanta. No. Sure. Thank you, Mr. Benn-Carl. Yeah, you too.\"\n\nShe handed me the phone. Dad's voice crackled in my ear, \"Dale\u2014you get settled in, and I'll call the police.\"\n\n\"Thanks, Dad. I'm sorry to get you involved.\"\n\n\"Don't worry. Just get off the road.\"\n\n\"I will.\"\n\n\"Dale?\"\n\n\"Yeah, Dad?\"\n\n\"Happy New Year. And we love you.\"\n\nI felt like I was about to cry. \"Happy New Year to you and Mom. And I love you, too.\"\n\nI ended the call and put the phone back in my pocket. The exit for Brownlee was coming up, and I could see the lit up sign for the Quality Inn just past the exit.\n\nRose was quiet. She had taken out a compact and was touching up her makeup. When she was done, she took my hand as I signaled and exited the highway. As we drove toward the entrance, Rose took her phone and made a call. I could hear the phone ring, and go to voice mail. When it beeped, she said, \"Mom, it's me. Call me right away.\" She stared at the phone before ending the call and stuck the phone back into her purse.\n\nBy that time, we had pulled into the parking lot. I was a little nervous, I mean, I had never checked into a hotel by myself, much less with a woman, and definitely had never found myself hiding from dangerous thugs, who, for all I know, were following me. On the other hand, I kind of felt good about taking control of the situation, and so I pretended to be confident as we got out of the car. It was cold, and the wind was swirling in the parking lot. A few snow flurries wheeled around in the harsh lights. Rose pulled her coat tightly around her body and she looked at me, I think for reassurance.\n\n\"Everything will be fine,\" I said, although I had no basis for that confident statement. \"Let's get inside and out of the cold.\"\n\nShe nodded and took my offered hand as we walked into the lobby. As we walked, I tried out a few opening lines to the desk clerk to see what made sense, but when we got there, the guy behind the counter, who looked only a couple of years older than me, just said, in a bored tone of voice, \"Do you need a room?\"\n\n\"Uh, yeah, one night, please.\"\n\nHe looked at Rose, then at me, and I could see a look of respect, \"King bed, no smoking?\"\n\n\"Yeah, that's fine.\"\n\n\"It'll be $129, plus tax. ID and credit card, please.\"\n\nI handed him my driver's license and Dad's credit card. I waited for there to be a problem, but he swiped the card, and typed my information into his computer.\n\n\"Two room cards?\"\n\n\"Sure, thanks.\"\n\nHe swiped two cards, and passed me back a little folder with them, along with my license and the credit card. \"You're in room 187, just down that hall,\" he pointed to his left. \"Have a good evening,\" he said, with a bit of a lascivious smile, \"and Happy New Year.\"\n\n\"Happy New Year,\" I replied.\n\nWe walked down the hallway toward the room. I put one of the cards into the slot, and after the little light turned green, I pushed the door in and turned on the light. The room was pretty much what you'd expect from a roadside Quality Inn in the middle of nowhere. Big bed, TV, dresser, a chair. It was warm in the room, and when Rose took off her coat, I got even warmer.\n\nI took off my coat, and tossed it on the chair.\n\nRose came running over to me, and enveloped me in a hug.\n\n\"Thank you, Dale.\"\n\n\"I haven't done anything, really.\"\n\n\"You've been there for me from the start. And tonight, you've been so smart and strong.\"\n\nI had immediately reacted as could be expected when she hugged me, and I felt my hard cock pressing against Rose's leg. She kissed me, and for a while, I kind of forgot where I was. After a bit, she pulled away. \"I have to go to the bathroom.\" She kicked off her heels and walked in the bathroom. I didn't know what to do with myself. I walked around the small room. I turned on the TV. I read the little signs that they put in the room. I turned off the TV. The toilet flushed, and Rose came out. She had washed much of the makeup off her face, and pulled her hair back into a ponytail, like when I first met her. She looked great, of course, and she smiled at me.\n\n\"What?\" I asked.\n\n\"You look so uncomfortable,\" she said, smiling. Rose walked toward the bed and sat on the end. \"Take off your shoes and sit.\" She patted the bed next to her.\n\nOf course, I did what she asked, and she leaned her head on my shoulder. We sat there quietly. We both jumped when my phone rang. I leaped up and grabbed it and saw that my Dad was calling.\n\n\"Dad?\"\n\n\"Yeah, Dale, it's me. You O.K.?\"\n\n\"Yeah. We checked in and are here.\"\n\n\"Good. Look, the cops arrested four pretty badass guys who were staking out Rose's house. I think you guys are safe now.\" I repeated that to Rose, and I could almost see the tension and fear drain from her face and body.\n\n\"That's amazing. Thanks, Dad.\" I looked over and Rose was smiling.\n\n\"You guys can come home.\"\n\nI turned to Rose and said, \"Dad says we can come home.\" I was surprised when she shook her head.\n\n\"I'd rather stay here tonight, if that's O.K. with you.\"\n\nIt was. \"Dad, we're beat, and I think we just want to crash.\"\n\n\"Uh, sure, Dale. See you tomorrow, then.\" I thought I sensed a bit of a chuckle in his voice. \"The police will want to speak with both of you tomorrow,\" he added.\n\n\"O.K. Dad. I'll call you in the morning. Happy New Year to you and Mom.\"\n\n\"And to you and Rose.\" He hung up."
    ],
    "authorname": "JayDavid",
    "tags": [
        "high school",
        "first time",
        "porn star"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/thorny-rose-ch-02"
}