{
    "title": "Stepping Out in Faith Ch. 03",
    "pages": [
        "Wow, guys. I am overwhelmed by such wonderful comments. This story has lived in my head for so long and I'm thrilled that you guys like it as much as I do. Now I'm terribly nervous for the next chapter, I hope it will live up to your expectations! \n\nPlease keep the comments coming. It motivates me to keep writing (and editing to make sure it's good writing). I love learning about what parts speak to you and it helps me hone my craft. \n\nHappy reading! \n\nYours, \n\nHudson Bartholomew \n\n***** \n\nStepping Out in Faith \u2013 Chapter 3 \n\n\"I think I love you.\" \n\nThe words echoed into Andy's subconscious as he drifted in that place between sleep and awake. \n\nI think I love you, too. The thought flitted through his head, unbidden, before he slipped into a deep sleep. \n\n***** \n\nAndy opened his eyes, fully awake with no lingering tiredness or wishing he could turn over and fall back asleep. He couldn't remember the last time he slept so well or felt so rested. \n\nThen he realized why. \n\nHe was using Marcus as a pillow\u2014head on Marcus' shoulder, arms and legs wrapped around Marcus as if he was afraid the other man would run away while Andy slept. \n\nMarcus was still snoring softly, curls in disarray, falling all over the place in a giant mop. Andy raised one hand to brush the soft curls back, trailing the tips of his fingers along Marcus' skin. \n\nAndy ran his palm across Marcus' cheek, letting the stubble scrape across his skin. Andy remembered the feeling from last night when Marcus kiss his way across Andy's body and then down in that intimate spot with that sensitive skin. Andy blushed at the memory. \n\nHe snuggled in closer to Marcus, not wanting to leave the safe cocoon of the bed and Marcus' arms. He breathed deep the scent of Marcus, potent after a night of love making. \n\nAndy caught himself in mid-thought. He had assuming it was love making. And now that he really thought about it, it was love making for him. It certainly was more than just meaningless sex with some stranger. But was it just meaningless sex for Marcus? \n\nAndy didn't want to think that it could be. Marcus had shown him more compassion, care and tenderness than anyone Andy had ever met in his entire life. Why would he do that if Marcus was just looking for someone to sleep with? He could have had anyone he wanted, why would he bother with Andy unless it meant more than just some physical release. \n\nAndy gazed at Marcus' profile, serene in the midst of sleep and without thinking sent up an unspoken prayer that this was more than just convenient sex for Marcus, that Marcus felt as deeply about whatever this was between them as Andy did. \n\nAndy caught himself again. What was he thinking, praying about something like this? He had no right to be asking the Lord for anything of this sort. He was a priest, he's supposed to be celibate. And homosexuality is wrong. This was sinful on so many levels. \n\nThe heaviness of guilt crashed down on Andy as he pushed away from Marcus, searching for the time: 5 am. Andy panicked, scrambling out of bed, searching for his clothes. \n\nThe movement woke Marcus who stretched his lean body. Andy tried to ignore the play of muscles barely covered by the thin sheet \n\n\"What time is it?\" Marcus asked. \n\n\"5 in the morning.\" \n\n\"You're leaving?\" \n\nAndy paused in the middle of buckling his belt. He could hear the disappointment in Marcus' voice and it tugged at his heart. Andy's head was telling him this was wrong, that he should run hard in the opposite direction and never look back. But his heart knew that was no longer an option\u2014that had ceased to be an option long ago. Something had changed in him that first night he met Marcus and there was no going back now. \n\n\"If I hurry, I can make it back before Father Sullivan wakes up. He's an early riser.\" Andy explained, sitting back down on the bed and reaching out to put a hand on Marcus' thigh. \n\n\"Father Sullivan?\" Marcus' voice was still groggy with sleep and it made Andy smile. \n\n\"My roommate,\" Andy grinned. \"And technically, my boss.\" \n\n\"You live with your boss?\" Marcus asked with a frown, clearly not fully awake yet. \n\n\"Yeah,\" Andy chuckled. \"The parish maintains an apartment for us.\" \n\nMarcus nodded and sat up, scooting closer to Andy. Neither man said anything, neither quite sure what to say. \n\nAndy sighed when Marcus raised a hand to comb through Andy's hair. He nuzzled into Marcus' palm and fought against the desire to just climb back into bed. \n\n\"What's your phone number?\" Marcus asked in a whisper. \n\nAndy looked up, trying to read Marcus' eyes, but they looked guarded. But this was a good thing, right? If Marcus wanted his number, that means they would see each other again. Unless it was just for a booty call. Either way, it was a temptation that Andy knew he shouldn't indulge in. \n\nAnd yet, he found himself reaching for the pen and paper on the night stand and scribbling down his number. Before he could stand to leave, Marcus pulled him in for a kiss, a gentle, sweet kiss that melted Andy's heart. It reignited the ball of emotion that had been roiling around in the middle of Andy's chest the night before, and threatened to consumed him. \n\nAndy pulled back, breathing hard, trying to compose himself. \n\n\"I have to go,\" he whispered, forehead leaning against forehead. \n\nMarcus nodded with a sigh. He laid back down on the bed as Andy stood. The sheet was pooled low around Marcus' hips, doing nothing to hide the thick erection tenting the fabric. The muscles along Marcus' body were defined and stood out in relief as Marcus stretched his arms up behind his head. \n\nAndy let his eyes travel the length of Marcus' body, committing the image to memory. Marcus was forbidden fruit, but Andy had already gotten a taste of it and he would forever want more. \n\nAndy knew he had to go, but he didn't know how to. He didn't know how to walk away from this man and back to that life that had once been everything he wanted. He smiled down at Marcus, hoping his face didn't show the turmoil of emotions going through his head. \n\nMarcus smiled back, the simple gesture enough to calm Andy. \n\n\"It's okay,\" Marcus said. \"Go, I'll call you.\" \n\nAndy nodded, amazed and a little scared that Marcus could read him so well. He stuffed his feet into his shoes and headed to the door. On his way out, he noticed Marcus' sketches on the coffee table. He picked them up on a whim. \n\n\"Can I keep these?\" He asked. \n\n\"Of course,\" Marcus said with a smile. \n\nAndy smiled back and let himself out of the apartment. \n\nWhen he got out onto the street, his phone buzzed in his pocket. Andy pulled it out to find a text message from Marcus. \n\nDoe eyes, thank you for last night. Have a wonderful day, I'll see you soon. \n\nSuddenly, Andy's step was lighter, the early morning air smelled fresher, and Andy couldn't seem to keep the giant smile off his face. \n\nAndy's great mood lasted about 20 minutes, the amount of time it took for him to get home. Because when he got there, Father Sullivan was already awake and putzing around the kitchen. \n\n\"Father Dylan, good morning!\" Father Sullivan said with a warm smile that quickly turned into a curious frown. \"Are you just getting in from somewhere?\" \n\n\"Um, yes,\" Andy said, opened the fridge and stuck his head in, pretending to look for something to hide the blush he felt spreading around his cheeks. \"I woke up in the middle of the night and couldn't sleep, so I went out for a walk.\" \n\n\"Ahh, still having trouble with insomnia?\" \n\n\"Still?\" Andy glanced up, brows furrowed in confusion. \n\n\"Yes, haven't you been having trouble with that? I noticed you going to the chapel late at night several times. I find that always helps me when I have something on my mind and I can't fall asleep.\" \n\n\"Oh, well, um...\" Andy stammered. \n\n\"If you ever need an ear to listen, let me know,\" Father Sullivan said with a smile and a wink. \"I'm here and I'm great at listening. I've had plenty of practice.\" \n\nAndy couldn't help chuckling at the silly joke. He could just imagine the types of things Father Sullivan had heard after decades of sitting in that confession booth. But he didn't think Father Sullivan would appreciate exactly what he had to say. \n\n\"Thank you, Father Sullivan. I'll keep that in mind.\" \n\nAndy excused himself and escaped to his room. He smoothed Marcus' drawings out on his desk and admired the simple yet profound sketches. \n\nMarcus had said that he drew what he saw. But Andy certainly didn't see the image in those drawings when he looked in the mirror. Was it possible that Marcus saw something in Andy that Andy himself couldn't see? \n\nAndy tucked the sketches safely into his desk drawer and grabbed a towel to take a shower. In the bathroom, he undressed and stared at himself in the mirror. The image staring back at him wasn't really that impressive. \n\nHe had gotten chubby when he went to college and had never been able to shake the extra layer of fat. His plain brown hair was so thick there was nothing really he could do with it, it just sat there on top of his head. His skin was pasty white, almost sickly, but he really didn't think a priest could justify going out to get a base tan. \n\nAndy sighed and climbed into the shower. Raising his leg to step over the ledge of the tub, he froze in mid-motion, grabbing at the wall. Stiff muscles down his thighs screamed at him and his tender hole spasmed painfully. He never realized that sex would be such a work out. Well, maybe that could a solution to his chubbiness. The thought popped into Andy's head unbidden and he had to argue with himself not to laugh out loud. \n\nAndy slowly manoeuvred his way into the shower and turned the water on hot. He sighed as the spray ran down his body, soothing the sore muscles. He grabbed the soap, lathering up and running it over his skin. His hands discovered tender patches where Marcus' stubble had left its mark and achy parts that weren't used to that particular type of exercise. \n\nWhen he got to his butt, he gently slipped a finger in between the two cheeks and ran the tip around the wrinkled skin of his hole. The sensation of his soapy finger reminded him of Marcus' finger. Letting curiosity get the better of him, Andy pushed experimentally and gasped as the tip of his finger slipped inside his hole. \n\nAndy had never done anything like that to himself before. It disgusted and exhilarated him at the same time. He now knew how pleasurable that road could be. But it felt weird and wrong to do it to himself without Marcus there. \n\nHe slipped his finger out and felt the muscles of his hole contracting as if trying to suck something back in. Andy shook his head trying to rid the inappropriate thoughts from his mind. He ignored the erection that had developed while he was soaping himself down and turned the water cold to shock himself out of the direction his body was taking. \n\nIt was mostly successful and as he toweled off, Andy felt himself come back into a familiar place. He dressed himself in black slacks and a black button down, putting on the armor of a priest. At one time he felt secure and comfortable behind the black uniform, but now it felt like a heavy facade that he couldn't shake off. \n\nHe put the white collar in place and swallowed thickly, almost expecting himself to choke on the noose. But he didn't choke, instead he took a deep breath, filling his lungs to capacity. The heavy load didn't feel any lighter. \n\nAndy itched to rip the cloth off his body, but a vow was a vow and he had committed his life to this cause. It was a noble cause, Andy still believed that. And everyone had bad days, he told himself. Today he didn't feel like being a priest, but that was all the more reason to put his head down and forge through it. That was discipline, that was devotion, that was what Andy had promised to do. So he would do it. \n\nFather Sullivan begin chatting away about what needed to be done to prepare for the upcoming weekend the minute after Andy arrived at their shared office just off of the chapel. The words settled heavily on Andy's already burdened shoulders. All the energy he had awoken with that morning drained away and all Andy wanted to do was crawl back into bed. \n\nAndy stared blankly at his desk, not sure where to begin his day, how to sort through all the work that was waiting for him. \n\n\"Father Dylan? Are you alright?\" \n\nAndy glanced at Father Sullivan and his concerned look. \n\n\"Yes, sorry,\" Andy answered with what he hoped was an easy smile. \"Just zoned out there for a second.\" \n\nFather Sullivan returned his smile, but it didn't look like he was buying Andy's response. \n\n\"You know, Father Dylan... Andy, I know I've said this already, and at the risk of sounding like a broken record, please remember that I'm more than happy to listen if you have something on your mind. We often carry other people's burdens, but that doesn't mean we don't have burdens of our own.\" \n\nFather Sullivan's words struck a little too close to home and Andy's stomach twisted up in knots. What if he knew? What if Father Sullivan knew that Andy was sneaking off at night to do unthinkable things? Andy could never survive that. He would get stripped of his priesthood, and then what would he do? \n\nAndy swallowed thickly and nodded. He bent over his desk, forcing himself to focus on the task at hand, not realizing the aura of fear and anxiety that was radiating off of him. He didn't see Father Sullivan's concerned frown or the way the older man would glance over every once in a while, wondering if there was more he could say. \n\nIt wasn't until a knock on the door sounded around noon that Andy let himself raise his head and make eye contact with Father Sullivan. \n\n\"Father Sullivan, Father Dylan! I'm so glad I caught you both here,\" Mrs. Marsten, a loud grandmother from the parish came bustling in. \n\n\"I brought some cake left over from my grandson's birthday party,\" the older woman said, presenting them with a box. \n\n\"Why thank you, Mrs. Marsten,\" Andy got up and took the box from her, noticing that it was warm and likely fresh from the oven rather than from the previous day. \"You didn't have to do that.\" \n\n\"Nonsense, it's just leftovers,\" Mrs. Marsten smiled sweetly at Andy. It was always awkward from old grandmothers tried to flirt with him. Didn't they realize how inappropriate that was on a whole host of levels? \n\n\"Mrs. Marsten, how is your grandson?\" Father Sullivan asked. \n\n\"Oh, he just turned 10. He's growing so fast! Already so tall! He's going to grow into a strapping young man, like yourself, Father Dylan.\" \n\nMrs. Marsten placed a hand on Andy's arm and squeezed appreciatively, causing Andy to flush in embarrassment. \n\n\"Well, he's more than welcome to join our youth group,\" Father Sullivan continued, trying to rescue Andy. \"Please extend our invitation to him.\" \n\n\"Oh certainly! Especially if Father Dylan is in charge, I'm sure those kids are in good hands.\" \n\nAndy coughed awkwardly and threw Father Sullivan a desperate look. \n\n\"Yes, they certainly are,\" Father Sullivan laughed. \"Actually, Mrs. Marsten, I'm so glad you stopped by today. I wanted to chat with you about the bake sale fundraiser. Do you have a few minutes?\" \n\n\"Of course!\" \n\n\"I'm going to take this to the kitchen,\" Andy excused himself and beat a hasty retreat, not breathing a sigh of relief until he was clear across the building. \n\nPutting the cake on the counter, he sat down heavily on a nearby barstool, and immediately jumped up when he landed on his sore butt. Sitting gently this time, he put his head in his hands, fighting through the flood of emotions threatening to drown him. \n\nHe didn't know what to do. He couldn't go back to that office, he could sit there across from Father Sullivan and pretend everything was okay. He couldn't face his parishioners, putting on a facade of a holy priest. He couldn't stand the smiles and the way they looked up to him, not after he'd done the things he'd done. Not while he still wanted to do them. \n\nHe ripped off the white collar around his throat and unbuttoned the top few buttons of his shirt, hoping that would help him breathe. Marcus, that's what he wanted. Out of the storm of thoughts in his head, one thing became clear. Marcus, he wanted Marcus. \n\nEven just the thought of the man helped to ease the panic threatening to drown Andy. He could feel his heart rate settle and his lungs opening up, and he closed his eyes to remember the way Marcus' arms had felt around him. Safe. Marcus made him felt safe. \n\nAndy pulled his phone out, and was surprised to find a text from Marcus waiting for him. He'd been so consumed that he hadn't noticed the text come in. \n\nHow's your ass feeling? Not too sore? \n\nAndy couldn't help but laugh out loud. It actually was a little too sore for his liking. \n\nI accidentally sat down too hard just now. It was painful. \n\nSorry, my fault :) I'll have to make it up to you. \n\nAndy smiled, his mind suddenly flooded with all the ways Marcus could make it up to him. Andy felt his body respond faster than he was able to keep his thoughts in check. He quickly reached down and adjusted himself. \n\nI'll see you tonight at the club? Marcus' text came through again. \n\nAndy's thumbs hovered above the keyboard. This was forbidden territory, Andy knew that. He shouldn't be doing this. But he couldn't help himself. He felt like a moth drawn to the flame. Marcus was a flame, bright and beautiful, and despite the risk of getting burned, Andy wanted to be near him. \n\nYes, I'll be there. \n\nGood. Can't wait. \n\nBy the time Andy made it back to the office, Mrs. Marsten was thankfully gone. Father Sullivan had disappeared, too, and Andy was relieved. That short exchange with Marcus had done more to calm his nerves than weeks of praying on his knees. Andy didn't want to think too much into that. Rather, he remembered Marcus' smile and let the anticipation of seeing Marcus again motivate him through the rest of the day. \n\n***** \n\nAndy steeled himself against the sound and smell of the club before stepping inside. There was always something about the first few moments surrounded by that much sweaty men and deafening music that shocked his senses in the most uncomfortable way. \n\nToday was the same, but at least today he was eager to get inside. Marcus was there, and as much as Andy had been denying it to himself, he'd been looking forward to seeing him again all day. \n\nIt didn't take long for Andy to find him this time. Marcus was at the bar again, close to where they'd had met that first night. Andy's eyes were immediately drawn to Marcus, unruly curls and tight body revealed under a tight t-shirt and jeans. Andy felt a fire spark in the middle of his chest at the sight of Marcus. The heat spread quickly as his body responded. \n\nAndy made his way through the crowd, eyes fixed on Marcus. It wasn't until he was a couple of yards away that he noticed that Marcus was talking to another man. They were leaning in close together, talking into each other's ear. The man put his hand across the back of Marcus' neck, forcing Marcus to look at him. Marcus responded with a hand low on the other man's hip. They were clearly more than mere acquaintances. \n\nAndy stood frozen with a sense of d\u00e9j\u00e0 vu, remembering the other night he came to club to find Marcus chatting with another attractive man. Maybe he had been mistaken about Marcus' text. Maybe Marcus wanted nothing more than have sex again and was testing the field before Andy arrived. Suddenly Andy wasn't sure he wanted to be here at all. \n\nBefore he could decide what to do, the other man spotted Andy and frowned. How the other man knew who he was, Andy had no idea, but it was clear from his body language that he didn't like Andy's presence. ",
        "Marcus noticed the man's reaction though and turned to follow his gaze. The smile that spread across Marcus' face melted Andy's insides, even if it didn't ease all his insecurities. Marcus walked toward him, just like he did that last time, and just like last time, Andy felt his heart begin to race. But this time, it raced out of anticipation rather than fear. \n\nIt was like in the movies. Andy didn't think that was possible. Everything around him, the crowd of bodies and the booming of the music, it all faded and all Andy could see was Marcus and the way his body moved as he walked. \n\nThere was beauty, right there. The same kind of beauty that Marcus has captured in those drawings, Andy recognized it in Marcus as he made his way to Andy. The fire that had initially sparked in his chest burst into a raging fire. It was so all consuming that he couldn't move, couldn't speak, couldn't do anything until Marcus was in front of him with that teasing smile. \n\nAndy stood transfixed as Marcus leaned in for a kiss. Marcus hovered, just millimeters away from Andy's mouth, both breathing hard and sharing each other's air. That moment seemed to stretch into eternity until the fire burning with Andy couldn't be contained anymore. He closed the short distance between them in a full body kiss, tongues dueling, teeth nipping, bodies pressed flushed and arms reaching around to bring them closer. \n\nAll thoughts, all the insecurities, all the confusion was driven from Andy's mind as he gave himself over to the kiss, burying his fingers into Marcus' hair and reveling in the feeling of Marcus' body up against his own. He was already hard in his pants and he could feel Marcus' equally hard dick pressing against his thigh. That only made him hungrier for Marcus. \n\n\"Seriously?! Hello?!\" A voice sounded off in the distance. \"Unbelievable! Ugh!\" \n\nMarcus broke off the kiss gently and pulled back a fraction. Andy whimpered and tried to follow him; he hadn't gotten nearly enough of Marcus. As they both caught their breaths, bodies still flush against each other, Andy realized the far off voice was actually standing next to them. It was the guy Marcus was talking to before. \n\nAndy jumped back when he realized they had an audience and put some distance between him and Marcus. He reached up to wipe his mouth and ran a hand through his hair to straighten it. His eyes wide and fixed on this stranger, Andy didn't notice the frown on Marcus' face. \n\nA blanket of guilt settled heavily on Andy's shoulders, a familiar weight he'd been able to momentarily escape while in Marcus' arms. Andy's palms were sweating and his mouth suddenly dry as the blood drained from his face. The stranger didn't approve of him, that much was clear. Perhaps it was because Andy had been caught kissing another man; perhaps it was because Andy was kissing Marcus and this man had plans with Marcus. Either way, Andy felt exposed as the man appraised him with arms crossed and an eyebrow raised. \n\nMarcus cleared his throat. \n\n\"Um, Andy, this is Stephen, my best friend since... Well, since before either of us could walk. Stephen, this is Andy.\" Marcus made introductions, but Andy didn't hear the awkwardness in his voice. \n\nStephen apparently did because he gave Marcus a skeptical look before giving Andy another once over. \n\n\"Pleased to meet you,\" Stephen didn't sound very pleased as he stuck out his hand. \n\nAndy stared at it as if it was a snake waiting to consume his hand whole. Andy swallowed, trying unsuccessfully to wet his throat. \n\n\"The pleasure's mine,\" Andy croaked around his dry throat as he shook Stephen's hand. \n\n\"Sure, it is,\" Stephen scoffed. \n\n\"Stephen!\" Marcus scolded before Andy could really process what he had said. \n\n\"Sorry,\" Stephen said while rolling his eyes. \n\n\"Jesus, what's the hell's wrong with you?\" Marcus swore while Andy cringed internally at the curse. \n\nStephen raised an amused eyebrow and looked back and forth between Marcus and Andy. \n\n\"Language, Marcus,\" Stephen scolded in return and turned to Andy. \"Such a dirty, dirty mouth. But then, you know that already, don't you?\" \n\nAndy flushed a bright red as he caught Stephen's innuendo. \n\n\"Fuck you, Stephen,\" Marcus said, stepping in front of Andy defensively. \n\n\"Not a chance,\" Stephen chuckled and walked away. \n\nAndy didn't fully understand what just happened with Stephen. All he knew was that Stephen didn't want him here, that he shouldn't be here. \n\n\"I'm so sorry. Stephen can be an asshole sometimes.\" \n\nMarcus took hold of both of Andy's arms to pull him back into an embrace, but Andy tensed, keeping a distance between them. \n\n\"I should go,\" Andy said, hating how his voice trembled. \n\n\"No,\" Marcus tightened his grips slightly on Andy's arms. \"You just got here. Don't let Stephen get to you. He's such a drama queen, it doesn't mean anything.\" \n\nAndy wanted to believe him. He wanted to believe that everything was alright. But it was clear that Stephen didn't like him, that he disapproved of whatever was going on between Andy and Marcus. Stephen could see what a fraud he was, and Andy couldn't blame him, because he felt like a fraud. \n\nMarcus put a hand on Andy's cheek, forcing him to look up and meet his gaze. The look Andy saw there melted his resolve to leave. The tenderness, the concern, all of it was evident in Marcus' eyes and Andy didn't deserve any of it. But it wound its way into Andy's heart and he knew he couldn't leave. He needed Marcus, he needed to be in Marcus' arms, to touch him, feel his heart beat, breath in his scent and taste him. Marcus calmed his soul, Marcus gave him peace, Marcus made him feel safe. As much as he fought it, he knew it was true. He needed Marcus. \n\nAndy sighed as Marcus pulled him in for a tight hug, both men holding each other close, reconnecting as their heartbeats synced. Andy felt himself calm, setting aside his worries and just enjoyed the feel of Marcus against him. \n\n\"Dance with me?\" Marcus asked. \n\nAndy leaned back to look at Marcus. \n\n\"I thought you didn't dance.\" \n\nMarcus shrugged, \"Think of it as an excuse to hold you.\" \n\nAndy felt his face flush again, this time over the tender words and the dirty smirk on Marcus' face. \n\n\"You lead,\" Marcus said with a laugh. \n\n\"Sure.\" \n\nKeeping their bodies close, Andy swayed them from side-to-side, slowly turning in a circle. It didn't matter that the club was playing a fast hitting dance beat. They were dancing to their own music. Foreheads touching, noses rubbing back and forth, holding each other so close that their eyes couldn't quite focus on the other's face. They stayed that way, swaying to an unheard melody as the rest of the world faded again. \n\nAndy had no idea how long they were there for, but he wanted to stay there forever. He was surprised at how disappointment he was when Marcus pulled back a fraction. \n\n\"I need to go to the bathroom,\" Marcus said. \n\n\"Okay.\" \n\nMarcus paused with a wry look. \n\n\"I'm not sure you should visit the bathroom.\" \n\n\"Why not?\" Andy asked for a frown. \n\n\"There are... Extracurricular activities in there,\" Marcus said with a smile. \n\nIt took a split second for Andy to fully understand what Marcus was referring to. \n\n\"Oh...\" \n\n\"Don't worry,\" Marcus said with a laugh. \"I just need to pee. Go wait for me by the bar, I'll be right back.\" \n\nMarcus gave Andy a quick peck on the lips before spinning away. \n\nAndy looked around in a daze, remember where he was. He made his way to the bar through the crowd. He's forgotten how many people there were in the club, and all of them had seen him kiss Marcus and dance with Marcus. Andy ducked his head, not wanting to make eye contact with any of them, not wanting to see what kind of judging look they had. \n\nAndy couldn't quite figure out why he suddenly felt so shameful tonight when he'd been to the club before. This time was different, he realized, because this time whatever he had with Marcus meant something. It was something special and his desire for it was stronger than any desire he'd felt for another man before. \n\nHe wasn't just scratching an itch anymore, this wasn't just experimenting. He was being drawn by some invisible force down a path he had conflicted feelings about. But by now it was too late to turn back. \n\n\"Hey, Father Andy.\" \n\nAndy's hackles rose as Stephen saddled up to him by the bar. \n\n\"So you're a priest, huh?\" Stephen asked. \n\nAndy hesitated, not sure what Stephen was driving at. \n\n\"Yeah,\" he answered. \n\n\"But you're gay.\" \n\nThe denial was on the tip of his tongue. No, he wasn't gay. He couldn't be gay, it was forbidden. But that was difficult to argue when he'd just been making out with a man. So he just pressed his lips together, not sure how to respond. \n\n\"Oh wait, you can't be gay,\" Stephen continued. \"Because you're Catholic, and gays go to hell, right?\" \n\nYes, that was true. That was what the Bible taught. But Andy suddenly couldn't bring himself to defend the teachings of the faith he held so dear. \n\nAndy didn't like the way Stephen was looking at him, that same appraising look as before, as if Stephen was trying to see into Andy's inner thoughts. \n\nStephen chuckled and shook his head. \n\n\"Listen, I don't know you. Maybe you're a really sweet guy. But I know Marcus and Marcus doesn't always listen to reason. You're deep in the closet, you might never come out. Marcus deserves better than that. He deserves someone like that Charles he was seeing right before you came back into the picture. Charles is a nice guy, he's funny and hot. And most importantly, he's out and proud. He's not ashamed of who he is, not ashamed of what he could have with Marcus. Can you give Marcus that?\" \n\nStephen paused as Andy trembled. No, he couldn't give Marcus that. He didn't know how to give Marcus that. \n\n\"No, I didn't think so,\" Stephen said with a dry chuckle. \"So please do us all a favor and stop leading him on.\" \n\n\"Hey, what's going on here?\" The tone of Marcus' voice as he approached the bar made it clear that he hadn't heard Stephen's little tirade. \n\n\"Oh nothing,\" Stephen said. \"Just having a little heart-to-heart with Andy here. Good talk, sweetheart.\" \n\nStephen gave Andy a wink before turning to Marcus. \n\n\"I'll see you later,\" he leaned in for a quick peck on Marcus' cheek before disappearing into the crowd again. \n\n\"Andy?\" Marcus asked, pulling the man into his arms again. \n\nAndy let him this time, needing the assurance he found there. But he knew it wasn't his to keep. He didn't deserve Marcus, Marcus deserved better than him. \n\n\"I should go.\" \n\nMarcus glanced quickly at his phone to check the time. \n\n\"Yeah, sure, let's go.\" \n\nAndy let Marcus lead him outside. He had meant to go home, but he couldn't bring himself to pull his hand out of Marcus' tight grip. \n\nOutside the club, Andy pulled Marcus to a stop. \n\n\"I think I should go home,\" Andy said. \"Maybe this was a bad idea.\" \n\n\"What? Why? Did Stephen say something?\" Marcus frowned, one hand tightening around Andy's and the other rose to tilt Andy's head up to meet his gaze. \n\n\"No, yes... I mean, it's not...\" Andy sighed. \n\n\"What did he say?\" \n\n\"Nothing,\" Andy shook his head. \"He just mentioned your boyfriend.\" \n\n\"My boyfriend? What boyfriend?\" \n\n\"Charles,\" Andy admitted, barely able to say the name out loud. \n\n\"Charles?\" Marcus was incredulous. \"I went on, maybe two dates with Charles. He's not my boyfriend.\" \n\nAndy didn't want to acknowledge to himself how happy he was to hear that. \n\n\"Stephen needs to mind his own business, okay? Don't listen to him, he doesn't know what he's talking about.\" \n\nAndy wanted to believe Marcus so badly, he wanted to discount everything Stephen had said. The rational part of his brain knew that Stephen had a point, but that was so easy to ignore when Marcus was holding him close, looking straight into his eyes, straight into his soul. \n\n\"Come home with me,\" Marcus pleaded. \n\nAndy couldn't resist the hopeful look in Marcus' eyes. \n\n\"Okay,\" Andy gave in to the temptation with a shy smile. \n\n\"Okay?\" Marcus repeated, as if unsure that was Andy's answer. \"Okay.\" \n\nMarcus tightened his grip on Andy's hand and pulled him close as they headed down the street. Andy kept his head down and focused on the feeling of his hand in Marcus' rather than the urge to check if people were staring at two men holding hands. \n\nThey walked quickly but silently. Every once in a while, Marcus would squeeze Andy's hand and he would squeeze back. Each time, it brought a smile to Andy's face. He wasn't sure why, but something about that simple gesture warmed his heart. The heat spread quickly to other intimate regions of his body until he was urging Marcus to walk faster. \n\nThe second the door to Marcus' apartment was closed, Andy pushed Marcus up against the wall and took his mouth in a deep, invading kiss. Andy pressed his body up against Marcus, chest to chest, groin to groin, thigh to thigh, his cock jumping at the feeling of Marcus' hardness rubbing through layers of clothing. Andy didn't know what had gotten into him, but he was suddenly desperate for Marcus, needed Marcus in a basic, primal way that defied all thought or reason or faith. \n\nMarcus' hands made their way onto Andy's ass, kneading the muscles through Andy's pants. Andy groaned at the sensation and rubbed himself harder against Marcus, causing Marcus to groan in response. \n\nAndy couldn't take very much of this, he wanted skin on skin contact. He needed to feel Marcus without any barriers between them. He pulled away abruptly, surprising Marcus. \n\n\"Clothes,\" Andy explained in a breathless voice. He made quick work of his shirt and was pushing down his pants before Marcus could process the command. \n\nAndy was naked and pulling Marcus toward the bed while Marcus was still working on his tight jeans. Andy sat down on the edge of the bed and positioned Marcus between his spread legs, his hands on top of Marcus' as they pushed down the jeans together. \n\nAndy buried his face into Marcus' crotch, desperate for the scent of Marcus. He wrapped his lips around the bulge through the cotton of Marcus' briefs, mouthing at the muscle underneath. His lips found the wet spot and sucked to taste the pre-cum soaking through. It tasted like Marcus, cinnamon and spice, and Andy needed more. He needed to be filled with Marcus, to be claimed by Marcus, to know that he and he alone belonged to this beautiful man. \n\n\"Oh god, doe eyes,\" Marcus' hand were buried in Andy's hair, holding him in place as he rubbed his groin in Andy's face. Andy felt like he was getting marked by Marcus, and the thought left his head spinning with desire. \n\nAndy hooked his fingers underneath the waistband of Marcus' underwear and pulled it out and over the thick column of Marcus' cock. Andy took a split second to admire its beautiful proportions, thick and long, decorated with engorged glands and smoothly shaved skin all around. Then he dived down, taking Marcus into his mouth as deep as he could make it go. \n\nAndy's gag reflex immediately kicked in and he had to back off to catch his breath. \n\n\"Whoa, easy there, doe eyes,\" Marcus panted with a laugh, brushing the hair off of Andy's forehead. \n\nAndy tried again, pushing himself as far down onto Marcus' cock as he could go before bobbing back up, using his hand to make up the difference. \n\n\"Oh god,\" Marcus groaned again, music to Andy's ears. \n\nAndy loved this, the way his jaws stretched wide to accommodate Marcus' girth, the weight of Marcus' cock on his tongue. He loved the way his mind emptied of all worries and focused on the taste and feel of Marcus in his mouth. But there was something else Andy wanted more. \n\nAndy pulled off Marcus, hollowing out his cheeks to suck out one last dollop of that delicious pre-cum onto his tongue. Then, grabbing Marcus' hand, he scooted back on the bed, pulling Marcus down on top of him. Andy opened his legs and let Marcus settle himself in between his thighs. \n\n\"Please, Marcus,\" Andy pleaded. \"I need you.\" \n\nMarcus growled deep in his chest and pressed Andy down into the bed with a bruising, demanding kiss. Their tongues dueled as Andy arched up into him, sweat-sheened skin sliding against skin, leaking cocks rubbing against each other. \n\nMarcus reached underneath Andy's knees and pushed them up until Andy was almost folded over in half. Andy gasped at the abruptness of the move, but felt his cock pulse painfully at being manhandled by Marcus. Andy grasped his shins to help hold his legs in place while Marcus dove down to attack Andy's hole with his talented tongue. \n\nAndy squirmed under the assault, the wetness probing his ass sending shivers through his body. His stomach clenched as he felt Marcus' tongue find its way inside past Andy's tight ring of muscle. Marcus quickly replaced his tongue with a finger and Andy bore down on it to suck it as deeply into his body as he could. \n\nAndy was still sore from the night before, but he was quickly learning to appreciate that delicate mix of pain and pleasure. \n\n\"More Marcus,\" Andy begged, breathlessly. \n\nMarcus slid another finger in his ass and scissored them back and forth before searching out Andy's prostate. Electricity shot through Andy's body, almost lifting him straight off the bed. \n\n\"Please, Marcus.\" \n\nAndy grasped at Marcus' arms, trying to pull him up so he could replace his fingers with that long gorgeous cock. Marcus placed one last kiss on Andy's ass, then reached over into his nightstand for the obligatory lube and condoms. He made quick work of rolling the condom onto his cock and then slathered with it a generous helping of lube. He did the same with Andy's ass before shifting into position, rubbing the head of his cock at entrance to Andy's body. \n\n\"Easy, doe eyes,\" Marcus' voice sounded strained. \"I'm not sure I prepped you enough, I don't want to hurt you.\" \n\n\"You won't hurt me,\" Andy said. \"Don't be gentle, I need you.\" \n\nMarcus growled and claimed Andy's mouth as he pushed his hips forward seeking entrance. Andy felt the pressure and bore down, willing his body to accept Marcus. Slowly, he felt his muscles respond and the head of Marcus' cock popped in past the tight ring of muscle. \n\nA quick shock of pain radiated out from Andy's ass, even as his balls drew up at the pleasure of being penetrated and stretched wide. Andy took fast shallow breaths as he fought against his body's reaction to eject the foreign object. \n\nAndy shifted his legs until they were up around Marcus' thighs, ankles hooked around Marcus' body. The movement set fire to his ass, a raging fire that threatened to consume him. Andy used his feet to pull Marcus deeper inside him. He needed more. \n\nMarcus got the message and pressed forward steadily, not stopping until he was fully seated. Andy was impaled, filled to overflowing with Marcus, every inch of his body wound up tight, ready to shatter. This was it, this was what Andy wanted, what he needed. Marcus inside of him, in the deepest, most intimate part of him, the place where no one else had ever been, knowing him in a way no one else had before. \n\nAndy held Marcus close, seeking out his mouth so their tongues could dance. Marcus obliged, pressing deep into Andy, twirling his tongue in and out of Andy's mouth until Andy was squirming. Andy shifted his hips, gasping at the combined sensation in his ass and the way his cock rubbed against Marcus' hard stomach. \n\n\"Please Marcus,\" Andy whispered against Marcus' lips, tilting his hips up against Marcus. \n\nSlowly, Marcus pulled out until just his head was inside Andy's tight sheath. Andy's skin tingled at the feeling of his empty channel. Then Marcus pushed in, filling Andy again and squeezing all the air out of Andy's lungs. \n\nMarcus was moving too slowly for Andy's liking. Andy planted his feet flat on the bed and drove his hips up to meet Marcus on his next stroke. It caused Marcus to shudder and Andy to groan in pleasure. ",
        "\"Yes, more,\" Andy gasped, his fingers digging into Marcus shoulders. \n\n\"You want it like that, doe eyes?\" Marcus asked, rising up onto his elbows. \"You want it hard and fast?\" \n\n\"Yes...\" \n\nMarcus growled and slammed his hips forward, driving Andy into the bed. \n\n\"Yes!\" Andy gasped. \"Harder! Faster!\" \n\nMarcus reared back to find the perfect angle and began pounding into Andy, pulling out almost all the way and then jackknifing his hips forward to hit Andy's prostate. Andy threw his head back and levered his body up on his feet to meet Marcus thrust for thrust. \n\nAndy was on the edge of shattering. His eyes were wild with desire, his mind spinning, his nerve endings firing in such quick succession that his brain couldn't process it all. Andy felt it rising, a tidal wave of pleasure that threatened to drown him. It started deep in his groin where Marcus was pounding into him, his balls drew up and he felt the churning low in his stomach. \n\nThen suddenly Marcus grasped Andy's cock and gave it a couple of firm strokes and the tidal wave crashed. Andy unleashed a fountain of cum gushing from his cock and spewing all over his chest and Marcus' hand. The pleasure washed over him in waves, short circuiting Andy's brain until he was just a mass of muscles overcome with sensation. \n\nIn the midst of Andy's high, he heard Marcus shout and drive himself deep inside of Andy's body. Andy felt himself stretch even more as Marcus' cock swelled to impossible proportions before Marcus tensed, every muscle flexed in sharp relief. \n\nThen Marcus collapsed on top of Andy, his weight heavy but comforting. In unison, they caught their breaths, allowing their heartbeat to slow in sync. Marcus' face was buried in the crook of Andy's neck and Andy held him close as they recovered. \n\n\"That was amazing,\" Andy whispered when he found his voice again. \n\n\"Yeah, it was,\" Marcus chucked into Andy's neck. Then he shifted to his elbows, the movement causing him to slip out of Andy's body, much to Andy's chagrin. \n\n\"I wasn't too rough, was I?\" Marcus asked, hand brushing Andy's hair back from his forehead. \n\n\"Not at all, I wanted that. I think I needed it.\" \n\nMarcus smiled and leaned down for a gentle kiss. \n\n\"Shower?\" Marcus asked. \n\nAndy smiled. He'd never thought about showering with another man before, but the idea seemed like fun. He nodded as Marcus sat back and disposed of the condom. Marcus grabbed Andy's hand, led him to the bathroom and pulled him in under the spray. \n\nAndy's sighed under the soothing hot water, running his hands over Marcus' wet skin. Marcus squeezed a generous amount of body wash into Andy's hand and together they rubbed the soap over each other's bodies, more concerned with finding the secret dips and crevices than with getting clean. \n\nTheir mouths found each other in gentle lazy kisses. Andy tangled his fingers into Marcus' wet hair, pressing close against Marcus' hard body. Marcus' hands were on Andy's ass, parting the cheeks and slipping a couple of fingers in between to gently massage Andy's sore hole. Andy moaned at the touch, and despite his soreness and having just cum, he felt his balls stirring and couldn't help but tilt his hips to give Marcus better access. \n\nMarcus was feeling the same way, if the way his cock was growing was any indication. \n\n\"Oh god, doe eyes,\" Marcus groaned, holding Andy tightly. \n\nThey stood there, under the spray, cheek to cheek, chest to chest, thigh to thigh, simply enjoying each other as the water washed away the last evidence of their love making. In that moment, everything felt right to Andy, the world made sense in Marcus' arms. Problems never seemed too big, burdens never seemed too heavy, as long as Marcus was there to hold him. Andy never wanted to leave. \n\nBut life always intrudes and after a few minutes, Marcus reached around and turned off the water. \n\n\"Stay tonight?\" Marcus asked. \n\nAndy looked into Marcus' soulful eyes and felt his heart constrict at the hope he saw there. \n\n\"I really want to,\" Andy sighed. \"But...\" He bite his lip indecisively. \n\n\"It's okay,\" Marcus said with a sad smile. \n\nHe leaned in for another gentle kiss that melted Andy's heart. Andy really didn't want to go and was so close to giving in to his desires, but Marcus was stronger than him. \n\nHe grabbed a towel off the rack and proceeded to dry Andy, efficient but lingering in certain spots that he anointed with kisses. Andy was well on his way to a full hard on by the time Marcus was done. So Andy took the other towel and gave Marcus the same treatment. \n\nAs Andy was kneeling to dry Marcus' legs, he got distracted by the beautiful piece of meat that was so recently inside his body. Andy placed a kiss on Marcus' pelvic bone, right above his cock, then rubbed his lips back and forth against the smooth skin. Andy pressed his face into the base of Marcus' cock and took a deep breath, inhaling the scent of soap mixed with Marcus' cinnamon and spice. \n\n\"Oh, doe eyes,\" Marcus groaned as his threaded his fingers through Andy's hair. \"You've gotta stop or I'm not letting you leave.\" \n\n\"And what if I don't want to leave,\" Andy whispered against Marcus' cock as he kissed his way to the head. When he got there, he swirling his tongue around the glands and used his hand to pull Marcus' foreskin up and over the head, trapping his tongue inside. \n\nMarcus' knees buckled and he grabbed onto the wall to keep from falling on top of Andy. Andy smiled around Marcus' cock; he loved that he had that effect on Marcus. \n\n\"Shit, doe eyes,\" Marcus groaned between clenched teeth, tightening his grip on Andy's hair. \n\nAndy closed his lips around Marcus' cock and sucked with his tongue still wedged between the head and the foreskin. His other hand came up and cradled Marcus balls, rolling them around in his palm. \n\n\"Ahhh...\" Marcus groaned and tightened his grip on Andy's hair. \n\nMarcus' pre-cum was leaking onto Andy's tongue. He tasted heavenly, the cinnamon and spice an intoxicating concoction that smothered Andy in a haze of arousal. He wanted all of Marcus, he wanted to feel the thickness opening up his throat until all there was, was Marcus. \n\nSlowly, Andy inched forward, swiping his tongue along the underside of Marcus' cock until it bumped up against the back of his throat. He took a deep breath, relaxed his throat and swallowed. Marcus' cock slid down his throat and Andy felt his nose bump against Marcus' pubic bone. \n\n\"Fuck... Andy...\" Marcus was breathing hard and Andy could feel him tensing underneath his hands. He pulled back, determined to drag this out as long as he could. \n\nSlowly, Andy bobbed up and down on Marcus' cock, running the flat of his tongue along the length of it, circling around the head when he pulled back. Andy's hands grabbed hold of Marcus' butt cheeks and squeezed, massaging and tugging at them, keeping up a steady tempo in his bobbing. \n\nEvery couple of moments, he swallowed, enjoying the feeling of Marcus' thickness blocking off his airway and filling all of his senses. Andy's own cock was hard and leaking onto the bathroom floor. \n\nHe let his hands explore, his fingers inching along Marcus' crack, trailing down the crevice until they discovered the little wrinkle of skin. \n\n\"Ah... Shit... Fuck, Andy... Oh god...\" Marcus pushed back against Andy's exploring fingers and tightened his hold of Andy's hair. \n\nAndy grinned around the thick tool in his mouth, reveling in the power he felt in bringing Marcus so much pleasure. He used a finger to massage the rose bud, eliciting non-coherent sounds from Marcus. \n\nAndy let Marcus' cock pop out of his mouth, but continued to jack it with one hand while he slipped a couple of his fingers from the other hand in his mouth. Andy looked up at Marcus to see half lidded eyes filled with desire watching him. Marcus shuddered at the sight and Andy was a little shocked at what had come over himself. But knowing that he was responsible the hunger in Marcus' eyes gave him the encouragement he needed to go on. \n\nWith his fingers slick with saliva, he reached back to toy with Marcus' hole again. His finger teased and prodded gently while his tongue mimicked the motions on Marcus' cock head. All the while, he kept his eyes on Marcus, gauging the effects of his actions. Marcus' eyes blurred. He braced himself against the counter behind Andy, bent slightly at the waist as if unable to keep himself upright. \n\nAndy smiled, knowing what he wanted to do. He sealed his lips around Marcus' impossibly hard dick and began sucking in earnest. At the same time, he pressed a finger into Marcus ass and felt the tight muscles give way. The finger slipped in and Andy pumped it slowly in and out and he bobbed his head up and down, determined to coax a healthy load from Marcus. \n\n\"Oh god... Andy, I'm going to cum,\" Marcus warned, tugging at Andy's hair to pull him off. But Andy held on tight, burying his finger deep into Marcus ass and sliding Marcus' cock down his throat. \n\nWith a deep groan, Marcus tensed, bearing down on Andy's finger and spurted stream after stream of hot creamy cum into Andy's mouth. Andy swallowed every drop, savoring the tanginess of Marcus' essence. \n\nAndy had a silly grin on his face, he knew it, but he couldn't help it. He kissed his way up Marcus' abs and chest as he caught his breath. Marcus pulled Andy up, attacking his mouth, tongues dueling and exploring. \n\n\"Oh god, you're so sexy on your knees with my cock in your mouth,\" Marcus murmured against Andy's lips in between kisses. \"And you liked playing with my ass, huh?\" \n\nAndy felt himself blush, which was rather ridiculous since a minute ago, he had his finger up said ass. \n\n\"How would you like to put more than just a finger up there?\" Marcus reached down and palmed Andy's hard cock. \n\nAndy's breath hitched at the thought of being buried in Marcus' sweet little hole, and tremors ran down his body. Marcus smiled, and led Andy to the bed where he pulled out condoms and lube from the night stand. \n\nMarcus sat down on the bed, pulled Andy in front of him and unceremoniously inhaled Andy's cock. Andy let out a strangled cry and grasped at Marcus' shoulders to steady himself. He told himself to breathe before he passed out from the sensations flooding his system. \n\nMarcus came off with a knowing grin and quickly rolled a condom onto Andy. He scooted back onto the middle of the bed and pulled Andy with him. Marcus handed Andy the bottle of lube before turning onto his hands and knees to present his ass to him. \n\n\"No,\" Andy said, putting a hand on Marcus' hip and squeezing. \"On your back, I want to see your face.\" \n\nHe needed to see Marcus' face, needed to see the look when he entered him, the look when he thrust so deep that they couldn't tell where one person ended and the other began. Marcus turned and the look on his face stole Andy's breath. Sweetness and gentleness and something more that Andy couldn't quite put a name to. He leaned in for a kiss, pushing Marcus onto his back and pressing down into him. He explored every inch of Marcus' mouth until they were both breathless. Then Marcus shifted and Andy found himself settled in between Marcus' thighs, hard cock pressed against hard cock. \n\n\"Doe eyes, please, I need you inside me.\" \n\nAndy leaned back and squeeze a blob of lube onto his hand, spreading the cool gel onto his cock. Then another blob, which he warmed up between his fingers. \n\nMarcus pulled his legs up, knees to either side of his chest, leaving himself exposed for Andy. Andy took a minute to take in the view, a little overwhelmed at the sight of the beautiful man, laying there, opening himself to Andy so freely. It warmed Andy in a way that had less to do with sex and everything to do with his heart. \n\nHe saw Marcus' hole twitching and rubbed at the skin gently with his lubed fingers. \n\n\"Ugh, don't tease me,\" Marcus moaned. \n\nAndy grinned and obliged. Slowly, he pushed with one finger which slid easily in. Marcus hummed contently and rocked his ass up to take more of Andy's finger inside. As soon as Andy felt Marcus' muscles loosen, he added a second finger and soon a third. He fucked Marcus with his fingers and his other hand on his own cock. Marcus had his eyes closed, head rolling from side to side, body rocking up and down to meet Andy's thrust. \n\n\"Now, Andy, now. I need you now.\" \n\nAndy pulled his fingers out and marveled for a second at Marcus' pink insides. His hole stayed open and quivering, waiting for Andy to fill it again. Andy shuffled closer, lining his cock up with Marcus entrance, rubbing his head against the gaping hole. \n\n\"Marcus,\" Andy whispered. He didn't need to say anymore. Marcus opened his eyes and stared into Andy's own. Marcus lifted his legs to wrap around Andy's body, the movement pushing himself against Andy's poised dick. At the same time, Andy titled his hips and the head of his cock popped in past the tight ring of muscles in Marcus ass. \n\nAndy let out a ragged breath. Marcus ran his hands up and down Andy's body, everywhere he could reach, eyes never leaving his. Slowly, they shifted, leaned and pressed into each other until inch by inch, Andy sank into Marcus, his balls rubbing against Marcus' ass cheeks. \n\nFully sheathed inside of Marcus' velvety heat, Andy let out another ragged breath. Nothing in the world had ever felt so right to him before. Not his duties as a priest, not making a difference in other people's lives. This felt right, Andy knew, because it was making love to Marcus. \n\nAndy leaned down to kiss Marcus, filling the kiss with all the things that were flowing through his mind and his heart but he didn't have the words to express. Marcus returned the kiss, holding Andy close with his arms and his legs, returning every wave of emotion sent his way. \n\nAndy wasn't sure how long they stayed like that, him buried deep inside Marcus while they kissed each other's breaths away. It could have been just moments, but Andy wanted it to go on forever. Finally Marcus shifted underneath him and Andy felt a jolt of electricity shoot through his cock and up his spine. His hips jerked involuntarily and Marcus gasped in response. \n\n\"Make love to me, doe eyes.\" \n\nAndy almost came at those words. He took a deep steadying breath before pulling out tentatively and then pushing slowly, astonished at the feeling of Marcus' ass sucking him back in. He started building a steady rhythm, pulling out until just his head was inside Marcus, then all the way in and grinding their pubic bones together. After a few moments of this, Marcus suddenly flexed up and met Andy mid-thrust, driving the rhythm faster. \n\nAndy felt like all the blood in his body was rushing to his cock, which was on fire inside Marcus body. Through hazy eyes, he saw Marcus' head thrown back, body bucking underneath Andy's. The sight of the other man losing control under him was so erotic, it shattered something inside of him. He let his primal side take over and started pounding Marcus with everything he could muster. \n\nAndy could feel his balls swinging and slapping against Marcus' ass, the thwack thwack sound was driving him wild. Marcus' hands were trailing paths of fire all over his body, flicking at his nipples, clawing at his back. Marcus' hair was a messy mop with curls all over the place, covering half of his face and falling in his eyes. The dazed look on Marcus face was beautiful. \n\nAndy leaned down and captured Marcus' lips with his own, tongues dancing in time with their bodies. They exchanged breaths back and forth, two people becoming one, their bodies and souls melting into each other. Andy kissed along Marcus' jaw and across his collar bone, tasting the salty sweat glistening across his skin. \n\n\"Yes, Andy, oh god Andy,\" Marcus guided Andy's other hand to his cock to encourage him to stroke. Andy happily obliged, matching his hand to the rhythm of his thrusts. \n\n\"Right there, yes, right there,\" Marcus held himself up at an angle, as Andy's jabs hit at his prostate. Andy picked up his speed, wanting to see Marcus come apart in his arms, wanting to bring this beautiful man the same pleasure he'd graciously shown to Andy. Andy trained his eyes on Marcus' face, watching it contort as Marcus neared his orgasm. \n\n\"Come for me, Marcus, come for me,\" Andy whispered, marveling at sight of Marcus underneath him. \n\n\"Oh, fuck, Andy!\" Marcus screamed, writhing on the bed, head thrown back in ecstasy, hands clutching at Andy so hard he'd probably leave bruises. Marcus came, shooting smaller spurts of cum over Andy's hand in his third orgasm of the night. But the sight was so mesmerizing and the feeling of Marcus' ass clenching around his cock until it felt like it would fall off was too much. Andy thrust in as deep as he could go, emptying himself deep inside Marcus' body. \n\nAndy collapsed on top of Marcus, still buried deep inside him. He felt like all his nerves were fried as aftershocks pulsed through him. All of his bones had melted as he laid there, the smooth muscle of Marcus' chest under his cheek. He didn't want to move, he couldn't move if he wanted to. \n\nMarcus' arms came around Andy and held tight. One hand came up and brushed his hair away from his face and Marcus planted a tender kiss on Andy's forehead. \n\n\"I guess we'll need another shower,\" Andy mumbled into Marcus' chest. \n\n\"Showering with you is dangerous,\" Marcus chuckled. \"We might end up back in bed if we're not careful.\" \n\n\"Does that mean we should shower separately?\" \n\nMarcus squeezed Andy in his arms and planted another gentle kiss on his forehead. \"Whatever you'd like, doe eyes.\" \n\nThere was something in Marcus' voice, thick with some emotion Andy didn't expect or understand. Andy pushed himself up onto his elbows to look down at Marcus. His eyes were warm and gentle, like always, but there was something else there, something that stole Andy's breath away. \n\nAndy brushed a hand through Marcus' curls, trailing his fingers across Marcus' forehead and down his nose. When his fingers got to Marcus' lips, Marcus opened his mouth and caught Andy's fingers inside. Marcus' tongue licked and lapped at Andy's fingertips until Andy pulled them out and replaced them with his tongue. \n\nIt wasn't the most passionate kiss, or the most arousing. But the kiss was deep, soul deep. Andy felt himself being sucked into the kiss, as if his entire being, his heart, soul and mind were being emptied into Marcus through that kiss. He felt like there was nothing left of himself as he gave all that he was into Marcus' care. \n\nSuddenly, Marcus reared up and flipped them over until Andy was on his back, pressed into the bed as Marcus took over the kiss. Andy's strangled cry was muffled as Marcus possessed his mouth. Andy gladly welcomed it, welcomed Marcus' claim over him. He felt emptied of himself, but full of Marcus, full of all that Marcus was offering him. It filled him to overflowing until he felt like he was going to burst. \n\nWhen they broke off the kiss, both men were panting. Andy gazed up into Marcus' eyes and knew they both felt the same way. Andy wasn't entirely clear what had just happened between them, had no words to describe it, but whatever it was it had happened to both of them. There was no denying it; no matter what the future held, they were bound to each other now. The knowledge gave Andy a deep sense of calm, a peace that transcended his body and soul. \n\n\"Stay the night?\" Marcus asked again. \n\nThe question reminded Andy that life was never as simple as he would hope. He sighed, struggling with the temptation to just give in and stay. \n\n\"I really want to, but...\" \n\nMarcus nodded with a sad smile. \n\n\"It's okay.\" Marcus said with a wry grin. \"Go shower. Alone this time.\" \n\nAndy smiled as Marcus rolled off him and stretched out on the bed. Andy groaned at the sight of Marcus' lean body put on display for him. He quickly scrambled off the bed and into the bathroom before his cock started making decisions for him again."
    ],
    "authorname": "hudsbart",
    "tags": [
        "romance",
        "gay sex",
        "anal sex",
        "night club",
        "faith",
        "christian",
        "shower sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/stepping-out-in-faith-ch-03"
}