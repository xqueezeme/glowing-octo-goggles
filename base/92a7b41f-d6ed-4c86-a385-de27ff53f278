{
    "title": "Spell Book Ch. 04",
    "pages": [
        "<p align=\"center\">CHAPTER 4</p>\n\n\"Hey, what the fu--\" Cally said before the man with flaming hands grabbed her by the arm and threw her off of me. She landed on the floor and glared up at them, the orange flames clinging to her arm for a moment before she dowsed them with a wave of her hand. Her eyes widened for a moment, before they narrowed to slits. \"Warlocks!\"\n\n\"Shut up, witch,\" the man with the wand growled. \"Got here just in time. Another minute and she'd've had you, son.\"\n\nI raised an eyebrow at the man, but didn't say anything. I didn't get up. I lifted my hands, palms-out to show that I wasn't a threat to them. I spoke the lightning spell and the air thickened with static electricity for a half-second before the lightning stabbed out from my open palm and connected with the man holding the wand.\n\n\"Hey!\" The man with the flaming hands yelled, and stepped in close to me. He swung a flaming fist at me, and I caught it with my hand. I spoke the word for my own flaming hand spell, and purple flames consumed the orange that his hand was wreathed in. \"Hey!\" He started to step back, but I held onto his hand and stood up as he tried to move away from me, keeping him trapped with me. I pushed from some well deep inside of me, funneling more magic into my flaming hands spell. \"Ow!\" The man dropped to his knees as my flames' heat began to burn him.\n\n\"You need to leave,\" I growled.\n\n\"Y-yeh need ta listen to us,\" Flaming Hands said. \"Not everything is what you think it is.\"\n\n\"No,\" I said. I swung my flaming fist into his left cheek, and he reeled back from the blow. \"I really don't. Get out.\"\n\n\"You don't know everything,\" the man with the wand said. He had managed to get to his knees and jabbed a finger at Cally. \"You need to know that these witches don't have your best interest at heart.\"\n\n\"I'm not interested in learning anything from people who break into my house,\" I snarled, and punched flaming hands again, \"and attack me and my friends.\"\n\nHe spun away from me with the impact, and I aimed my other palm at the guy with the wand and used the lightning spell on him again. It hit him high in the chest and he stumbled back, towards the kitchen.\n\n\"Dan!\" Cally yelled, and I turned in time to see Flaming Hands punch a shimmering shield about three inches in front of my nose.\n\nWand snarled something in an unfamiliar language and aimed at Cally.\n\nI hit him with the lightning again, furious, and funneled more power into the word as I spoke it. He fell to the floor with a gaping, charred hole in his chest.\n\nFlaming Hands swung at me while I was busy with Wand, and stopped me from throwing another lighting bolt at him. He hit me in the stomach, doubling me over, and I came up with an elbow high. I connected with his face, drawing blood, and he backed away from me.\n\n\"Get out of my house,\" I growled at him.\n\n\"You don't know what you're doing with these whores,\" Flaming Hands said.\n\n\"I guess I should get my money back--oh, wait, they didn't want any. They're not whores.\" I stepped forward and swung hard, a jab followed by a right hook, and he blocked the first but the second set his face on fire with purple flames. He screamed, and ran out the door. I shot another lightning bolt at the guy, but hit the doorframe as he left. \"Asshole!\"\n\nI turned to Cally, who was breathing hard, her naked chest rising and falling hypnotically. Well, that part wasn't on purpose; that was me enjoying the view. \"Are you okay?\"\n\n\"Fine, yeah. They didn't touch me.\" She shook her head. \"I didn't think they would try something this quickly.\"\n\n\"Who are these guys?\" I asked.\n\n\"These were--are--warlocks.\" She pointed at the man on the floor with the hole in his chest. \"And you killed one. Wow, that's impressive, actually.\"\n\nI stared at the body on the floor for a moment, and the room began to spin. \"Jesus,\" I muttered, and sat down on the couch. \"Well, he did call you a whore,\" I said. I wasn't sure if I was serious about it or not, but I had a tendency to make jokes at inappropriate moments.\n\nCally smiled at me, and hugged me. \"Thank you,\" she said. \"They would have...taken me and...\" She shivered, and it wasn't a pleasurable shiver.\n\n\"Yeah that isn't happening while I can stop it. This is why the coven kills warlocks, isn't it? Why are they like this?\"\n\nShe shrugged, and hugged me tighter. \"Some of us think it's the old, 'absolute power corrupts' thing, and some of us think it's that men tap into more primal, basic thoughts and feelings. Others just think that all men are scum, and they should be killed on sight.\" She rubbed the bridge of her nose with one hand and gave a shaky sigh. \"Okay, well, that killed the mood. Let's get clothes on, and then I need to call the coven. Text Aria, will you? Let her know what happened?\"\n\n\"Wait, we're not calling the police?\"\n\n\"And tell them what? That these two random guys broke the door down and started flinging spells at us while we were naked together? And then you killed that one by firing purple lightning out of your hand and burning a hole in his chest while I shielded you with a magical force field?\" She lifted her phone and started tapping away at it. \"Yeah, I don't think that's going to fly. Besides, the coven has ways of taking care of this.\"\n\nI stared at her for a long moment, and she looked up at me. \"What?\"\n\n\"You are really beautiful, you know that?\"\n\n\"I--no,\" she blushed, and looked back at her phone. \"Stop it. I'm trying to do things.\"\n\n\"I'm being serious. I would never hurt you or Aria. I would never hurt your coven.\" I gently took hold of her wrist and pulled the phone away from her so she would look at me. Her big blue eyes were liquid, full of tears. \"I don't know what this whole Merlin thing is about, but if it means helping you and Aria, I'm in. I'll do it.\"\n\n\"You don't know everything you have to do. It isn't always happy fun naked time.\" She shrugged. \"And I'm not that pretty. Aria has way bigger boobs...\"\n\n\"Bullshit,\" I said. \"I've had crushes on the both of you since you moved in. And your breasts are perfect. You have absolutely nibble-able nipples and a fantastic ass. Thank you for helping me with those guys.\"\n\n\"Thanks,\" she muttered. \"I do a lot of squats.\"\n\n\"Well damn, girl. It shows.\" I lifted her chin so she would look at me. She met my eyes for a moment, her face and chest pink from embarrassment, and looked away quickly. \"I'm serious, though. I would never hurt you or Aria. Or anyone in the coven.\"\n\n\"Well, stick to that. You're going to need to, if you're going to be our Merlin.\"\n\n\"Are all the other men who can do magic...are they all like that?\"\n\n\"As far as we know. Like I said, we don't really talk about it much.\" She sighed. \"Come on, let's get our clothes back on. I have to call Lucy.\"\n\n\"Wait wait wait, what about the police? I mean, don't we have to tell them something? What if someone else has called them?\"\n\n\"Well, I know that this is the first time anyone has tried to kill me with spells. I've been a member of the coven for only a couple of years now, and I haven't seen anything like that. Of course, as a rule, we tend to stay away from warlocks. Pretty much because of this. They don't really tend to want to talk. Just kill, or rape, or worse. If someone else has called the police, I can handle that. Just let me do the talking and I'll be able to get rid of them.\"\n\n\"Just like that?\" I raised an eyebrow.\n\nShe frowned slightly at me. \"Do you know my specialty?\" I shrugged and shook my head, and she continued. \"Every witch--possibly every Merlin and warlock, as well, I don't really know--we all have one area where we have natural talent. Mine is telekinesis. Shielding. I have a limited amount of mental manipulation, but that can get pretty complicated pretty quickly. It mostly depends on the mental strength of the person as well as how recent the thing they want to remember or forget is. Anyway, I can make the apartment look normal enough, as long as the cops that show up aren't steel-trap types.\"\n\n\"What if they are steel-trap types?\"\n\n\"Well, then I have to knock them unconscious and do the magic while they're out. Much easier that way, usually. Not as much resistance. But most people are easy enough to fool. I don't usually have to worry about that unless the other person is magical, and that's where things get very complicated. But we're not worrying about that right now.\" She picked up her phone and started to call Lucy. Then stopped when the phone chimed in her hand.\n\nAt the same time that mine chimed.\n\n\"Aria,\" I said.\n\nCally frowned and sighed. \"You text her. Tell her that I'm calling Lucy over, and that we got interrupted by a couple of warlocks trying to kill us.\" She looked down at my now semi-hard penis and gave a reluctant sigh. \"Also, we should get dressed, shouldn't we?\"\n\n\"I'm probably not going to do anything sexy when the front door is open for all the world and there's a dead body on my floor, yeah,\" I said, and started to get dressed.\n\n\"Damn it. I really wanted to get fucked,\" she growled, pulling her sports bra on. I watched as she wrestled her breasts into their proper places--it was basically skin-tight--and she looked up to see me smiling at her as she finally got herself put away properly. \"What?\" She asked, her eyes sparkling and her cheeks reddening.\n\n\"You're really gorgeous,\" I said. I turned to my phone and started texting Aria.\n\n\"Well, don't go far,\" she replied. \"I'm not done with you.\" She pulled her leggings on and picked her phone back up, tapping away at it. She put it to her ear.\n\nMy phone dinged.\n\nAria: Holy shit are you guys okay?\n\nMe: Yeah, Cally's calling Lucy though to clean up the mess in here.\n\nI didn't want to be specific about what the mess was because I wasn't sure where admissible court evidence ended and my phone rights began.\n\nMe: So I don't know what that means for me yet.\n\nAria: She's calling her right now?\n\nMe: Yeah, she's on the phone with her.\n\nCally was pacing the living room as she was talking on the phone. \"Hi Lucy. Yeah, I'm okay. Hey, I'm in a bit of a situation right now, and we kinda need some help. Me and a friend. He's friends with Aria, too. Oh, you're there right now? Can she come help, too? I'm sure she's freaking out about it right this second.\"\n\nCally was right; Aria was flipping out over texts. My phone rang, and I picked it up. \"Hi Aria.\"\n\n\"What the fuck, Dan? Are you guys sure you're okay? I'm coming over.\"\n\n\"Yeah, I think Cally's asking Lucy to take you. I mean, other than there being a...mess...in my apartment, we're fine. Jesus, though, that was intense.\"\n\n\"I didn't think they would find you so quickly,\" she said.\n\n\"Wait, so, you knew they could find me?\"\n\n\"I knew it was possible. But this was very fast. It doesn't feel right. Okay, Lucy's waving me down, what did Cally tell her?\"\n\n\"Hang on.\" I waved at Cally, who had just hung up the phone and repeated Aria's question to her.\n\nCally took the phone from me. \"I told her that I was hanging out with Dan and these lunatics broke down the door and tried to kill us. I didn't tell her what Dan and I were doing, but I did tell her that you knew him too, and would be worried. That's all I've told her so far. Uh-huh. Yeah. Yeah, she probably will, but it can wait until she gets here.\" Cally let out a deep sigh. \"Yeah, just answer her questions. I know you don't know her as well as I do, but she knows a lie when someone tells it, and I lie way better than you. She's going to find out anyway. The whole coven is going to know after this, and I am really unhappy about that.\n\n\"What? No, I was hoping for some one-on-one time, or at least a night with the three of us, that's all. Yeah, I understand what you were saying about him last night. I'm on your side. His side. I'm with you, I swear. Love you. See you in a bit.\" She hung up and tossed my phone to me.\n\n\"Okay, they're both coming over. So now all we have to do is convince our fearless leader not to kill you once she knows what you are.\"\n\n\"What about, you know...lying?\" I asked. Not that I wanted to lie to anyone, but I wasn't excited to have someone in my apartment who would happily kill me if she found out that I could do magic.\n\nCally shook her head. \"No, that's not going to work. She's...well, I can influence minds. Lucy reads them. She reads people like books. Like fucking Sherlock Holmes. Besides, she's not going to buy it if we say these assholes were after me. She's going to know something's up.\"\n\n\"But she's going to try to kill me?\"\n\n\"I'm hoping that's not her first instinct.\"\n\nI sighed. \"Yeah, me too. Okay, what do we need to do to get ready for her?\"\n\nShe shrugged and sat on the couch. \"How about some cuddle time? I think we have a few minutes.\"\n\nI sat down with her and she rearranged herself so that she was sitting in my lap, and rested her head on my shoulder. I wrapped an arm around her and pulled her tightly into me. \"I was hoping my final minutes on this earth would be in the middle of sex with as many women as possible, but I like cuddles, too.\"\n\nShe smiled at me. \"I don't think it's going to be that bad. I'm pretty sure I can convince her...\" she trailed off.\n\n\"Convince her...?\" I prodded.\n\n\"To talk to you before she does anything too rash.\" She looked over at the dead man on my floor. \"It's understandable, though, if these are the only warlocks out there.\"\n\nI nodded. \"Yeah, it just sucks for me, apparently.\"\n\n\"Oh, yeah, but if you survive...\" She gave me a lecherous grin. \"Both Aria and I owe you the biggest orgasm we can possibly give you. So there's still things to look forward to.\" She leaned in and kissed me, a slow, light touch at first, which filled with passion as it continued.\n\nWe made out gently as we waited, and stopped when her phone buzzed. Cally slid off my lap, pulled her phone out and tapped through to her text messages. \"She's parking right now. She'll be up in a couple of minutes.\"\n\nShe sat back down next to me and pulled me in close for a long, tight hug. \"You aren't going to disappear on me, are you?\" She said it in a whisper, her face buried in my shoulder.\n\nI laughed gently, pulling back and looking at her. Her blue eyes were scared, glistening with unshed tears. My laughter died in my throat and I reigned in my smile. \"I'm not going anywhere. Are you okay?\"\n\nA tear trickled down from one eye, and I wiped it gently away. She pressed her cheek into my palm and kissed it. She nodded, and kissed me tenderly on the lips as another tear dripped down from the corner of her other eyes. \"Sorry, I'm sorry. I'm not--I should have warned you that I'm not good with...casual sex.\"\n\nI smiled at her. \"If it helps, neither am I.\"\n\n\"You seem pretty good at it,\" she said, and was about to say more when the doorbell rang.\n\n\"Hello?\" A voice called from the front door, and Cally and I stood up, looking exactly like a pair of teens caught making out on Cally's parent's couch.\n\nI grinned at her for a minute and called out, \"Come on in.\"\n\nShe smiled a tight-lipped smile at me and we both turned to the hallway, where Lucy and Aria were walking in.\n\nLucy was a tall woman, standing almost six feet tall with her heels on. She was dressed in a professional pantsuit with a low-cut blouse under the jacket. She had wavy dark brown hair, which was pulled back into a harsh ponytail that fell down behind her shoulders. She had dark brown eyes that drank in everything in the room with a glance, and then she focused on me.\n\nAria was dressed in a pink and blue paisley skirt that hugged her hips tightly and flared out towards the bottom, both accentuating her curves and adding a pretty gracefulness to her movements. She was wearing a low-cut, very tight tank top, no bra. I could tell because her nipple piercings pressed prominently through the material, and every moment sent her beautiful breasts wobbling one way or another. She looked beautiful.\n\n\"When did you change?\" Cally asked. Aria just shrugged and smiled mysteriously.\n\n\"Who is this?\" Lucy asked, and I pulled my eyes off of Aria to meet hers. She arched one eyebrow slightly. She looked me up and down, then her eyes drifted over to my bookshelves, and the eyebrow raised up higher.\n\n\"Hi, I'm Dan--\"\n\nCally stepped on my toes, and I stopped talking. She glanced at Aria, who shrugged and spread her hands apart in a quiet, \"the cat's out of the bag\" gesture. \"This is our Merlin,\" Cally said. \"His name is Dan, and he's--\"\n\nLucy's eyes narrowed and she made an elaborate gesture with one hand so fast that my eyes couldn't follow it. I felt something clamp onto my throat and lift me off of my feet. It was suddenly very hard to breathe, the pressure of whatever spell she had just done gripping me by the esophagus and holding me in the air by it.\n\nShit, she's force-choking me, I thought, and struggled for breath.\n\n\"Lucy!\" Cally yelled, and began working a spell of her own.\n\n\"Cally, this is a terrible idea. Do not counter me, child. He is dangerous.\"\n\n\"He saved my life!\" Cally yelled.\n\n\"He is poison! All men who wield magic are poison and they will turn on you! Better that they be killed before they can corrupt any of the coven!\" She yelled over Cally, rage contorting her face and twisting her beautiful visage.\n\nCally spoke a word of power and made a slashing gesture with her hand. The pressure left my throat and I fell to the floor in a boneless heap, gasping for breath. Cally dropped down next to me with concern in her face.\n\n\"Cally, move,\" Lucy growled. There was a sharp clicking sound, and I looked up to see her stepping towards me with a knife in her hand. \"This is what's best for the coven.\"\n\n\"Lucy, no!\" Cally stood up and slashed the air again, and the knife went flying from Lucy's hand and embedded itself in the wall just under my TV.\n\n\"Watch...the furniture,\" I croaked, instantly regretting it. My throat felt swollen and it was very hard to swallow. I looked up to see the surprised expression on Lucy's face as she looked at Cally. Actually, all three of the girls looked surprised.\n\n\"That's new, Cally. What did he do to you?\"\n\n\"He didn't do anything to me. He's been perfectly nice and helpful, and he hasn't hurt me in any way.\"\n\nShe pointed at the body on the floor. \"Look over there, Cally. Look at what he did. You think that isn't going to be you in a couple of weeks? You think he's going to stay a good person? The more he uses magic, the more corrupt he will become. It may happen slowly, but eventually, all men end up the same way. Better that he die now than take you with him.\"\n\n\"He isn't like the others,\" Cally protested.\n\n\"You haven't dealt with this before. I understand the temptation to let him explore this, the power that he may hold as Merlin is tempting, but such power will corrupt him and destroy you in the process.\"\n\n\"So you've done this before?\" I asked, pushing myself to my feet. \"You've had a Merlin before? It always ends the same?\"\n\nShe gave me a withering look. \"Men cannot be trusted with such power.\"\n\n\"So you're going to kill me without even talking to me? I thought we lived in a country where people were considered innocent until proven guilty.\"\n\n\"Do you see a badge? We aren't talking about common law here. This is a different set of rules entirely, outside of the scope of the rules of this country. Of any country.\"\n\n\"Still. Summary execution is a little extreme. Especially when it's on such a hair trigger.\"\n\nShe folded her arms over her chest and looked down her nose at me. \"You don't know the damage you can cause just by continuing to exist.\"\n\n\"How does it work?\" I asked.\n\n\"How does what work?\"\n\n\"The whole thing. I can use magic, and the more I use it, the more corrupt I get. Is that right? Explain it to me. You've done this dance before. Tell us about it.\"",
        "\"He was a friend before this,\" Aria said to Lucy. \"He hasn't been anything but nice and sweet to us.\"\n\n\"And he saved my life,\" Cally said.\n\nLucy looked from Aria to Cally and then narrowed her eyes at me. She took a deep breath and let it out slowly, then walked over and looked down at the dead man on the floor. \"It's so much easier when they're already corrupted,\" she said. \"Makes things so much simpler. No moral dilemmas. He's already won over your hearts.\" She shook her head. \"I wish it could be different. But there isn't any way that this will end well. They've already found you, and they're going to keep coming after you until they destroy you two--\" she pointed at Cally and Aria \"--and corrupt you.\" She ended by aiming her finger at me. I was expecting it to shoot out a deadly gas or something, but the finger just hung there for a moment.\n\n\"What are you saying?\" Cally asked.\n\n\"You have a choice to make,\" Lucy said. \"You can stay with him, and follow your own path, follow him into damnation. Or you can stay with us. Stay in the coven. We have been your home for long enough that you can make an informed decision. We kill him, and you stay with us. Or...if you stay with him, you cannot remain in the coven.\"\n\n\"You can't be fucking serious,\" I said.\n\n\"That is the price for taking this path.\"\n\n\"Lucy, that's a terrible choice to make,\" Aria said. She didn't look surprised that she had said that, though. Just disappointed.\n\nThe older woman looked at Aria and Cally with sadness in her face. She sighed deeply. \"Here. A boon.\" She waved a hand, and the body on the floor disappeared. \"Take a couple of days. Think about your choice. Think carefully, because if you choose him, you won't be exiled. You'll be killed, if you try to come back. We cannot have corrupt members in the coven.\"\n\nShe turned and walked out, leaving the three of us to stare after her.\n\nI broke the silence first. \"Okay then. You ladies should probably go.\"\n\n\"Excuse me?\" Aria glared at me.\n\n\"You heard her,\" I said, \"they'll kick you out of the coven if you stay with me!\"\n\n\"Well, fuck 'em.\"\n\n\"Aria!\" Cally scolded her.\n\n\"No, I'm serious. If we leave him alone after this, he's going to end up as one of the worst assholes on the planet. Lucy's been keeping secrets from us. The-the entire council has been keeping secrets from all of us. You know how much we struggle to draw in power. What if that wasn't a struggle anymore? What if there was enough magic energy for everybody to use? Do you know why there hasn't been a Merlin for three hundred years?\"\n\n\"Obviously...\" Cally said. \"Because we're supposed to kill them as soon as we know they can use magic. If men can use magic, they'll use it against the coven.\" Cally said it with the certainty of a fact that had been drilled into her head, like, 'the Earth is flat.'\n\n\"That's definitely a risk, but they're deliberately covering up what we would be capable of if we had our own Merlin.\" Aria pulled her tank top off and tossed it onto the love seat. She sighed and grinned at me, watching my eyes light up as she dropped onto the larger couch, letting her delightful assets bounce for my benefit. \"Much better. So here's the deal. Merlins are rare because after Roanoke nobody wanted to risk a man using magic again. We try to kill them when we come across them because a Merlin without a coven becomes a warlock.\" As she spoke, she reached up and squeezed first one breast, then the other, and tried to catch my eye, but I was paying more attention to what she was doing than what she was saying.\n\nShe snapped her fingers at me. \"Hello? Did you hear me, Dan?\"\n\n\"Mmmhhmm,\" I said, not taking my eyes off her nipples as she toyed with them with one hand.\n\n\"Aria,\" Cally said. \"You're being too distracting.\"\n\nAria licked her lips at me, specifically looking at the not-so-subtle bulge in my pants. \"I don't mind repeating this later. Whatever happened in Roanoke--it's not specific enough about what they did there, but whatever it was, somehow corrupted the source of magic. Before Roanoke, there was a balance between what men and women could do with magic. After Roanoke, women were unable to draw as much power without building up their energy before using it. It was, from what I can tell, the difference between a river full of flowing water and a stream.\n\n\"More than that, it looks like the magic that men access is somehow incomplete, I think. It gets really fuzzy there, so I'm guessing at some of this. Inferring? I don't really know the difference between the two. When men and women have sex, I think, they basically complete each other. Women are able to channel and use more magic, and men don't go completely bonkers. At least, that's how it's supposed to work.\"\n\n\"But after Roanoke, the covens all banned male witches,\" Cally snapped her fingers, understanding dawning. \"Which means that they were never able to figure out what the problems with magic were. They were missing a huge piece of the puzzle--men.\"\n\nAria nodded. \"That's why we, as a coven, have to work so hard to channel our magic. And that's why the warlocks have so much more power--they have easier access, but without women to help keep them healthy, they go insane.\n\n\"Their minds warp, their brains change--apparently, it's a physical change, like brain damage--and they become, for lack of a better term, sociopaths. They can't form proper emotional connections to anyone, and if they aren't killed, they can build up their power by using and abusing men and women.\" She snapped her fingers, catching my eye and directing it to her by sucking on one finger. She smiled at me, her eyes heavily lidded and lusty.\n\n\"So,\" I mused, \"it's like magical men and women are two parts to the same circuit. If they work together, the circuit is complete, and magic works the way it's supposed to, but if they don't, they both get electrocuted?\"\n\nAria nodded. \"That's not a bad explanation. Come here, Dan, sit with me. Both of you. We need to talk about this, and I don't want to be the only one on the couch.\" I glanced over to Cally, who shrugged at me. Aria had taken up a position in the middle, so we sat on either side of her. I sat on her right, Cally on her left.\n\nAria turned away from me and pulled Cally into a slow, sexy kiss, moaning softly at the contact of their lips. She reached behind her, sliding her hand across my lap until she found my turgid length. She broke the kiss and gave a happy sigh. \"Much better. Both my loves.\"\n\nWait, what? I thought, but Aria had already started talking more about the Merlin. I was having a hard time keeping up with what she was saying, especially after she grabbed my hand and placed it on her right breast. Not just placing it; pressing it hard into her flesh. \"No need to be gentle, hot stuff, maul that tit.\" She spoke into my mouth, her lips just brushing against mine, and I closed the very small distance between us. She gave an adorable moan and a sexy little squeak as I followed her instructions, pinching her nipple around her barbell piercing and giving it a good, solid twist. She broke the kiss, keeping her lips just out of reach of mine. \"Oh, that's what I like.\" Her hand was squeezing my cock over my pants, and she turned back to Cally.\n\n\"So the flip side of that, is if a Merlin joins a coven, their power is apparently multiplied ten-fold.\"\n\nCally sat up straight and frowned at Aria. \"Bullshit.\"\n\n\"Makes sense,\" I said. \"If women are only able to draw a fraction of magic without men around to complete the circuit, the flow of magic into everyone involved in the circuit would be exponentially more powerful.\"\n\n\"At least ten-fold,\" Aria confirmed. \"The thing is, from what I read in the book I stole, there doesn't seem to be any upper limit to how much power they could accumulate. The idea, from what I can tell, is that the Merlin draws his power directly from Source.\" She paused as I dropped my face down and drew my tongue across the nipple I'd been playing with. There was a curved stud with purple crystals at either end in it. Her other nipple had green crystals in the stud. She sucked in a breath through her teeth.\n\n\"Teeth, please. If you're going to do that, suck and bite, like--oh, goddess, there you go.\" She moaned with pleasure as I sucked her nipple into my mouth, but I didn't stop there. I pulled as much of her breast into my mouth as I could, and she shuddered at the feel of my tongue flicking across her nipple tip as I opened and closed my teeth around her areola. I made sure to play with the stud she had there, using a combination of suction and flicking with my tongue to bounce it against the roof of my mouth. \"Oh, shit, that's getting me good and wet.\"\n\n\"Um, sorry, lost where I was.\" She moaned again, and continued. \"So, if we form our own coven, with Dan here as our--fuck, I love your tongue--very talented Merlin, not only would we be able to turn the warlocks' own problems against them, but we could show the other covens what a coven of the ancient way is capable of.\"\n\n\"How is it possible to--oh!--to get so much power?\" Cally asked. She squeaked when Aria slid her hand into Cally's leggings.\n\n\"Why, Cally, you're not wearing any underwear. Did you misplace it somewhere, or just forget to put it on?\" Aria spoke softly, her voice husky and her tone seductive.\n\n\"I'm sure it's around here--mmmm--somewhere,\" Cally said.\n\n\"As far as your question goes, Cally--Dan, take your pants off. I want to feel your skin in my hand--the answer is sex. Lots and lots of sex.\" I increased my suction and the speed of my tongue as I pulled away from her nipple, adding extra pressure until she popped out of my mouth with a sound like balloon popping. She moaned lustily, her fingers speeding up inside Cally's leggings.\"Fuck that's going to be such a nice sore,\" she reached up and rubbed her nipple gently as I stood up and undid my pants, pushing them down and stepping out of them. \"Mmm I love that lingering throbbing baby.\" Her eyes dropped to my full erection, and she licked her lips at the sight. I sat down and she wasted no time licking her hand and grabbing my cock and squeezing it as she worked it up and down.\n\nI dropped my head back against the couch as she did, closing my eyes at the sensations her slippery hand was giving me.\n\nShe turned to Cally and kissed her, teasing her until Cally was leaning into Aria's left side, effectively making Aria the center of our sandwich. Aria turned away from Cally and looked over her shoulder at me. \"Shirt off. Fuck it, everyone just get naked, please.\"\n\nCally moaned as Aria took her hand back with a wet sucking sound, and she stood up to rip her sports bra off and shuck her leggings. Aria pulled her skirt off, lifting her hips and pushing it down past her knees where she could step out of it. I leaned forward and threw my shirt off...somewhere. I wasn't really paying attention to where it landed.\n\nAria kissed Cally fiercely, her hands slipping and twisting over her small breasts. Cally moaned into Aria's mouth, and allowed herself to be pushed backwards so that Cally was laying down with her head resting on the arm of the couch. One leg was stretched out with a foot supporting her on the floor, the other was pressed up as far as it would go, exposing her wetness to both me and Aria. She wasted no time sliding her fingers back inside of Cally, bending at the waist and wiggling her butt in my face.\n\nI didn't have any problem with that. I started kissing, licking and biting her ass, squeezing it and kneading it in my hands. I took my time, enjoying the feel of her skin under my tongue and teeth, leaving hickeys near her asshole but never quite coming in for a good lick on it.\n\nI was so focused on exploring her butt that I didn't realize that they were whispering to each other until the whispers stopped as I slipped a finger up to the second knuckle into Aria's dripping wetness.\n\n\"What are you two talking about over there?\" I asked as I curled my finger downwards, away from her asshole. Aria moaned appreciatively as I played inside of her, my other hand sliding down and finding the fold hiding her clit--not that it was all that hidden after so much playing, the little nubbin was sticking right out. I wasn't expecting to find it so easily and my first contact with it was harsher than I intended. She had another stud through her clit as well, this one topped with a black crystal, and I squeezed it between my fingers.\n\n\"You'll find out--Oh! Fuck me!\" Aria shuddered, rolling her hips back towards me as my accidental contact sent her over the edge and she came on my hand.\n\n\"I mean, if you really want me to,\" I answered, unable to keep the grin out of my voice. I flicked my finger across her clit again, and she squeaked and came again. My other fingers were now wet with her juices, and I lapped my tongue around her rosebud without actually hitting it.\n\n\"Oh my goddess,\" Aria groaned. \"I really want you to. That feels amazing, but stop fucking teasing me and lick my asshole.\"\n\nI pulled her cheeks apart with one hand, leaving my other hand to slide a second finger inside of her. I rotated them, sliding them down and pushing in as she pushed back against me, until I found her G spot and she shivered, wiggling as my fingertips gently fiddled back and forth over it. I pressed my mouth over her puckered hole, licking all around it before finally driving my tongue inside of it, sealing my mouth over it and adding as much suction as I could muster around it. I lavished her there, alternately pushing my tongue as deep as it would go inside her and popping it out to flick all around it.\n\nShe started moaning deeper, louder moans. \"Oh shit, Cally, oh shit, he's going to make me--\" I pushed a third finger inside her, at the same time reaching around with my other hand and pinching her clit, and that pushed her over the edge.\n\nShe came screaming, one hand reaching back to grab my hair and pull me as deep as possible into her asshole, while I felt her juices spray out of her pussy, soaking and dribbling down my arm and chest. I held on as she bucked against me, her entire body quivering in the throes of ecstasy.\n\nFinally she shivered one last time and dropped all of her weight onto Cally, leaving her ass in the air with my face in it and my soaking wet hand inside her.\n\nCally shrieked with laughter at that, wrapping her arms around her best friend. \"You okay?\" Cally asked her.\n\nAria groaned in response, the groan turning high-pitched at the end as I lifted my face out of her rear end. \"Goddess,\" she muttered, then squeaked adorably as I pulled my fingers from her pussy. \"I can't,\" she panted. \"You take him first. I'm gonna need ten or so minutes before I'll be ready to ride. Damnit, Dan, why do you have to be so good at that?\"\n\n\"You do realize,\" Cally said, \"that if we do this we're done with our old coven.\"\n\n\"Sweetie, I've been ready for a change for the last six months. And I really need some dick. This solves both problems, and when we build the coven up more, we'll be more than just a match for any fucking warlocks.\" She dropped her head onto Cally's shoulder and said, \"All done talky. Sleepy now.\"\n\n\"Wait Ari, let me get out--damnit.\" Aria started snoring into her shoulder. \"And now I'm stuck.\"\n\nI laughed and grabbed Aria around the stomach, lifting the unconscious girl off of Cally. She rolled out from underneath her friend, and I pulled Aria over onto my lap. I rearranged her so that I had her in a Princess carry, and stood up with her in my arms.\n\nCally watched as I went, smiling at me. I gave her a curious look. \"What?\"\n\nCally shook her head. \"The way you manhandled her just now, lifting and you're just...carrying her. It's really hot, actually. How strong are you? You don't even look like you're straining.\"\n\n\"I'm not,\" I said. \"I was gonna put her in the bedroom so she wakes up comfortable. Do you, uh, want to stay out here, or...\"\n\nShe grinned at me. \"I'll follow you, Mr. Muscles. I like watching you from behind.\"\n\n\"So how are you feeling about this situation? It's pretty clear what she wants.\" I asked her over my shoulder, nodding at Aria in my arms.\n\n\"I thought we'd be doing more talking about it before I came to a decision, but it sounds like a really good idea.\"\n\nI turned into my bedroom, taking care not to bump Aria. \"What do you mean it sounds like a good idea? You guys have been telling me how much you're all a family, and now this?\"\n\n\"There's a few reasons,\" Cally said. \"There have been some strange people coming around the shop lately. Strange men. We think they might be warlocks.\"\n\n\"Those two earlier today didn't seem so tough.\" I bent down next to the bed, grabbed the covers and pulled them back. I gently laid Aria down on it.\n\n\"They usually don't go down as easily as you put them down. Witches don't have as much power as an individual warlock. It usually takes several of us to neutralize them. And we usually lose a couple people along the way.\"\n\nI put a hand on her arm. \"I'm sorry.\"\n\nShe shrugged. \"We've been relatively sheltered from much of it. There hasn't been a lot of warlock activity in this city, up until lately. But if what Aria is saying is true, you being a Merlin for our new coven would give us the power to defend ourselves. And more. We could make our lives much easier this way.\"\n\n\"Or a hell of a lot harder. Wouldn't the witches start trying to hunt us down too? Then we'd have both groups coming after us.\"\n\nCally smiled at me. \"You're sweet. I see what you're trying to do.\"\n\n\"What's that?\"\n\n\"Trying to make sure I want this. Talking it through with me.\"\n\nI shrugged. \"I've never wanted to do anything with anyone against their will. I just want to make sure that you're choosing something you want, not just going along because Aria's all gung-ho.\"\n\n\"You're forgetting something though.\"\n\n\"What's that?\"\n\n\"Aria generally gets her way. And the thought of sex with you isn't, like, the worst thought ever.\" She stepped in close to me, and I could smell her arousal as she pressed her body into mine. She reached up and put her arms around my neck.\n\nMy erection hadn't gone down, and right at the moment it was trapped between her stomach and my pelvis.\n\n\"You know she literally told me to fuck you, right?\" She kissed the tip of my nose.\n\n\"I thought she said something like that.\"\n\n\"She doesn't like it when people don't do what she tells them.\"\n\n\"I suppose we should probably just do what she told us to, huh? Avoid all the drama.\"\n\nCally smiled up at me, her blue eyes sparkling. She shoved me down onto the bed and climbed onto me, straddling my thighs. \"I'm not her,\" Cally said. \"I need you to go slow for now. I like it rough sometimes but that thing is so big it's going to stretch the hell out of my little pussy.\"\n\n\"I appreciate you telling me what you want,\" I said.\n\n\"Shit, no, I definitely want you to pound the shit out of me,\" Cally shot back. \"But we need to start slow and build up to that kind of punishment. I don't even think I'll be able to fit you inside me, honestly.\"\n\nShe reached down and stroked me absently, as if that was just what one does with a hard penis. \"This monster...\" she shook her head. \"I don't even think I can get the tip in.\"\n\n\"Never know until we try,\" I said. \"If you're sure that's what you want.\"\n\nCally looked down at me and sighed. \"Pretty sure I already decided what I wanted this morning, getting dressed to come over here. Might as well make the best of it.\"\n\nShe lifted up onto her knees, positioned my tip at her entrance, and slowly lowered herself onto me.\n\nI groaned as her wetness enveloped me, agonizingly slowly. It took all the willpower I had to not start trusting up into her. I'd never felt anything so soft and yet squeeze me so tightly. Her muscles worked overtime as she slowly sank another inch down on me. She groaned, wincing, and dropped forward onto my chest.",
        "\"Goddess,\" she murmured. \"You're like a damn baseball bat.\" She took a deep breath, and as she exhaled, she rocked back, taking a little more of me into her.\n\nThe tightness and the heat and the feel of her weight on top of me, not to mention the image of this incredibly gorgeous woman taking her pleasure from me very nearly sent me over the edge.\n\nDesperate, I reached out with my senses, found the reservoir of magic I had tapped into earlier fighting the warlocks, and focused a small amount of it into a spell that allowed me to control myself better.\n\nThe need to come faded to a dull ache as opposed to an imminent disaster and I grinned.\n\nCally saw me and smiled back. \"What's with the goofy smile?\"\n\n\"Just enjoying the crazy twist fate sent into my life.\"\n\nCally snorted. \"Yeah right, one girl passed out from an orgasm you gave her and the other--nnnh--doing her best to stretch her tight pussy around your Godzilla cock. You must be miserable. Holy shit this is taking some fucking work.\"\n\n\"It's okay,\" I told her. You don't have to do it all tonight. Come here.\" I reached up and pulled her down on top of me, drawing her into a make out session while staying inside of her.\n\n\"But the more...pleasure you get out of this, the more energy build up we can generate. That's basic magical law, whether we're talking men or women or anything.\"\n\n\"Still,\" I said, \"that's not a reason to rush.\"\n\nCally groaned again as I shifted my hips slightly. \"Sorry, sorry,\" I said quickly. \"Just getting settled.\"\n\nIn answer she leaned forward over me again, then rocked back, slowly pumping me out and then back in, then out a little more and taking me deeper with each rock backwards, until I felt my tip bottom out inside her.\n\n\"Shiiiiiiit,\" she purred. \"I don't think--I think that's as far as I can get you. Fuck. I'm going to need to get some much bigger dildos to stretch me out better.\"\n\nI grinned up at her, put my hands on her shoulders, and winked. Then thrust up into her, pushing as much of myself into her as I could. She gave a little scream as I did, her arms shaking. \"Oh fuck me,\" she said.\n\n\"Working on it,\" I muttered, and dropped my hips, then slammed upward into her again, sliding one of my hands up underneath her armpit, and began pushing her down as I was thrusting up into her.\n\n\"Fuck fuck fuck fuck fuck,\" she muttered, her face aimed up at the ceiling. \"Oh my goddess oh yes please fill me up baby.\" She dug her nails into my chest as I felt her walls clamp down on me, suddenly squeezing so tight that I couldn't move inside her anymore. She let out a slow-building sound from her throat that I thought was going to stop at a moan, but her entire torso went bright red and her moan continued building until her back arched and she grabbed my hands, pulling them up to her small breasts.\n\nShe rolled her hips as I massaged and tweaked her nipples and finally she gasped, gulping air as if she had forgotten to breathe. \"Fuck me,\" she almost mouthed, the words coming out in barely a whisper.\n\nThen her muscles squeezing me down began to undulate, her hips rocking back and forth, and she let out a sharp shriek as the orgasm that had been building finally hit her.\n\n\"Fuck! Fuck! Fuck!\" She began bouncing up and down on me, forcing her slippery cunt all the way down onto me, finally bottoming out and letting out a wordless scream.\n\nI could feel my own orgasm reaching the home stretch inside of her.\n\n\"You're so...fucking hard...are you going to cum inside me? I want to feel you fill me with your baby batter,\" she moaned. She dropped down and rested her chin on my shoulder, whispering dirty things in my ear as she dropped down. \"Please Dan, please fill me up I want to feel your hot cum paste my insides and dribble out around your fat cock so deep inside me please fill me up with your seed, I want you to cum inside me--\"\n\n\"Oh, shit, Cally,\" I said, thrusting up into her as she dropped down on me. \"You're going to make me--cum--\"\n\n\"Yes yes fucking cum inside me all the wayyyy--\" her voice devolved into a constant shriek as my cock pulsed inside her, spraying into her with what felt like the force of a shotgun as she squeezed down on me.\n\nI grabbed her hips and began shaking them as I sprayed a second time, and a third time, and a fourth time. I could feel our mingled juices squirting out around my dick, the pressure and pleasure too intense for either of us to do more than moan through it.\n\nI looked up and saw that she was looking directly into my eyes, her blue spheres shining like sapphires, a strange look on her face as she stared me down.\n\nThe look was electric, and unavoidable. \"Mine,\" she moaned at me, and I repeated it.\n\n\"Mine,\" I growled, and she sighed contentedly as I ejaculated one final time inside her.\n\nShe collapsed on top of me with a squeak, kissing me and moaning into my mouth.\n\n\"Fffuuuuuck that was hot,\" Aria said next to us. \"I woke up just in time. That was beautiful.\"\n\nMy cock twitched inside Cally and she groaned, shuddering. \"Oh shit that's fucking sensitive.\" She bit her lip.\n\n\"It's gotta come out,\" I told her.\n\n\"Does it though?\" She asked.\n\n\"I need a turn. That looked like too much fun.\" Aria grinned up at her, green eyes sparkling. She looked around for a moment. \"When did we move to the bedroom?\"\n\nCally and I both laughed, though her laugh was cut short by a moan between her stomach contractions and my cock still balls deep inside her.\n\n\"Cally?\" Aria asked sweetly. \"Can you be a sweetheart and get off the dick please? I really need a good hard fucking.\"\n\nCally sighed and whined slightly. She nodded, and rolled to the side. My slimy cock fell out of her, a large glob of our combined juices, still faintly glowing, plopped out of her as well. She shuddered at the sensation, gasping and falling on my left side as Aria came at me from the right.\n\n\"Oh goddess, I'm so fucking empty now,\" she moaned, rolling from side to side and shoving her fingers deep inside herself.\n\nAria immediately started cleaning up the mess that was my crotch, licking and scooping our mingled cum into her mouth, moaning with every mouthful. She was so enthusiastic going about her task that my dick was already returning to life before she had even touched it.\n\nI moaned as she finally pulled my cock out of the way and started licking and slurping at my balls. I was so sensitive down there that every touch sent tingles up from my center and radiating out through my limbs.\n\nAria giggled as I twitched and tensed under her ministrations. \"Little sensitive?\" She asked between mouthfuls.\n\n\"Massive understatement,\" I muttered. She licked from my balls all the way up my shaft and then swirled her tongue around my tip before pulling it into her mouth. \"Holy shit, that all feels amazing,\" I said.\n\nShe popped me out of her mouth. \"Thank you. Happy to do a good job.\"\n\nCally was still twitching and tensing up on my left, still wracked by orgasm aftershocks. I reached an arm around her and pulled her close to me. She curled right up to me, one hand arm thrown across my chest. \"Thank you,\" she said with her eyes closed. \"That was...mmmm...it's been a long time.\"\n\n\"Really? How long has it been since the last time you've been claimed by a Merlin?\" I smirked.\n\n\"Ugh, don't be annoying. That was one of the best orgasms I've ever had.\"\n\n\"One of...? Damn. Gonna have to do better next time.\" I pulled her up and kissed her deeply, enjoying the feel of her petite body pressed up against me as Aria sucked me deeper into her mouth.\n\n\"I dunno,\" Cally said between kisses. \"You're really going to have to work to hit the top of that list.\"\n\nI smiled at her. \"What a shame. Guess we'll just have to practice practice practice.\"\n\nShe laughed, and kissed me again. \"Ugh, I've only really known you a couple of days and already it's work work work all the time.\"\n\nAria pulled off of me and declared, \"Good enough. My turn.\" She lifted up and grabbed Cally by the hair, pulling her out of our kiss to replace my lips with her own. \"Move it, skank,\" she said good-naturedly, and Cally giggled. Both girls moaned appreciatively as their tongues began wrapping around each other. Aria sank down onto me with a shivery sigh into Cally's mouth, her muscles working hard to bear down on me as I entered her.\n\n\"Fuck,\" I moaned. She was tighter than Cally was, and her muscles squeezed me differently.\n\n\"Oh, goddess that's a big cock,\" Aria whimpered. She paused there for a long moment, her eyes rolling back into her head and her whole body quivering. She let out a long, heavy breath and sucked in another. \"Holy shit holy shit holy shit,\" she muttered.\n\n\"Are you okay?\" I asked, lifting my hand to her cheek.\n\n\"Fuck yeah, it's just...it's intense. I don't think I've ever felt so...full.\"\n\n\"I'm not so deep inside you,\" I said.\n\n\"Goddess, I know. I don't know if I can take all of you. So thick, I can feel your heartbeat drumming my insides. Oh, shit, oh fuck me yessss--\" Her whole body tensed, her back arching. Cally bent down to take a nipple into her mouth as Aria's orgasm rode through her. Aria finally pulled in another breath, her eyes wide and staring down into mine. They were like pools of mountain water, green and deep. I could easily drown in those eyes.\n\nI grabbed her and pulled her down to me, and her eager lips found mine as she let out another shuddering moan. \"Gently,\" she whispered. \"I wasn't expecting it to be so fucking overwhelming.\"\n\nI shifted my hips, angling them slightly, and she came again, a small orgasm this time. I raised my eyebrow and shifted my hips the other way, again setting off another, shorter orgasm.\n\n\"Oh my goddess, please, just, be still for a moment.\" She pleaded.\n\nI looked over at Cally, who raised an eyebrow at me. She leaned in and whispered as quietly as she could, \"Fuck the shit out of her.\"\n\nI shot her a questioning look, and she gave me a big smile and nodded. I looked up at Aria, who was still trying to get her bearings.\n\nI grabbed her by the hips and pulled her down and she let out a harsh scream as my hips rose to meet hers. Her entire body stiffened again, shaking as the muscles tensed further than she was ready for. \"Oh fuck me!\" She screamed.\n\n\"Yes ma'am,\" I said helpfully, wrapped her in my arms and rolled her over.\n\n\"Oh shit, Dan, hang on I need to--OH FUCK--\" Her eyes went wide as I pushed deeper into her, her hands everywhere, her mouth opening and closing as my girth filled her up. I was about two-thirds into her, and she was tighter than I'd ever felt before.\n\n\"You okay?\"\n\nShe nodded, tears welling up in her eyes as I slid out of her and back in, just a little bit further than the last thrust. \"So big,\" she said as another orgasm poured through her body.\n\n\"I'm going to keep going.\"\n\nShe nodded, and wrapped her arms around my neck, pulling me down for a kiss. Her nipples were hard wide nubs on her chest, and I took one in my hand, lifting it high enough that I could lick and suck it while thrusting back inside her. She screamed, a loud, banshee-like wail, and I remembered she liked it rougher than this.\n\nI bit down on her nipple, my teeth nearly connecting through her skin, and she went insane below me, her hips driving up as hard as she could into mine, her vagina sucking at my length, trying to drive more and more of me into her.\n\nI looked down and saw that there was only a couple of inches left before I was completely inside her. \"That's almost all of it,\" I told her.\n\n\"Almost,\" she shuddered, and then looked at me with a face full of lust. \"Fuck almost. I want allll of it inside me.\"\n\n\"Aria, I don't want to hurt you.\"\n\n\"But it feels so fucking good when you hurt me like this, Dan. I want you deeper. I want you so far inside me I can taste it when you cum. I want to feel you squirt and fill me and just fuck me hard please please I need it--\"\n\nHer hips started thrusting against mine again, and my body responded to hers as she moved. Pretty soon we found a rhythm together, and our hips were meeting in the middle, my balls slapping against her asshole as I drove as deep as I could inside her.\n\n\"Yess,\" she moaned. \"Fuck yes. Harder. Harder!\"\n\nAs tight as she was, I knew that I wasn't going to last very long working this hard, but I didn't think Aria was going to have any problem with that. \"Going to cum soon.\"\n\n\"Yes! Yes baby, please I want to feel you spray inside me. Put a baby in me. Cum inside me, I don't want any other cock but yours oh fucking please baby cum inside me--\" Another orgasm overtook her, and while her mouth kept moving, the sensation ripped all sound from her throat, leaving her mouthing the words as she rode it out, her eyes closed tightly.\n\n\"Oh fuck I'm going to cum!\" I called out, and she threw her arms and legs around me, locking her ankles behind my thighs and pulling me as deep as she could. My cock pulsed into her, and her eyes opened wide as she let out another banshee wail. I rolled my hips in a circular motion inside of her. She was coming so hard she couldn't breathe, but I was deep inside my own sensations.\n\nHer pussy clamped down on me so hard that I wasn't able to move more than maybe half an inch. I thought she was going to break me off inside her, but it still felt amazing. I sprayed into her again, and she shuddered, barely able to move. I felt my cum and hers spray out of us and coat my thighs, dripping down onto the bed from there. There wasn't enough space between my girth filling her and my ejaculation, and she was so tight that the pressure was too much to keep it all inside.\n\nI came again, and a fourth time, and a fifth, and each time, her hips rolled one way or another until the resistance was too much and she froze.\n\nI sprayed a final time into her, and kissed her. She moved her lips but only marginally. She was falling asleep again.\n\n\"Holy shit, Dan. You fucked her into unconsciousness.\" Cally stretched out next to Aria, kissing us both on the cheek.\n\n\"Jesus,\" I muttered, feeling sleep coming for me as well. \"I think that went both ways.\" My eyes closed on their own, and then I forced them open. \"Did she say, 'put a baby in me?' \"\n\nCally giggled. \"She did.\"\n\n\"Mkay. Just making sure.\" My words were slurred, and I could feel sleep creeping up on me.\n\n\"You liked it, didn't you?\" I could hear Cally's smile with my eyes closed.\n\n\"Mmmmm. Maybe. Figure it out later. When I'm awake.\" A thought occurred to me, and I sleepily smiled at her. \"You called it baby batter,\" I teased her.\n\n\"No, no I didn't. Did I? Damn it, I don't remember. Can you roll over a bit so that I can get some cuddling in?\"\n\n\"Hmm. Kay.\" I rolled Aria and I over to my left, which put my back against the wall. Cally shifted over and pushed her arm underneath our heads. She pulled a pillow over to give her head some cushion. \"G'night,\" I muttered.\n\nAria squirmed happily between us, one hand moving up in her sleep to cup Cally's cheek, my dick still deep inside her.\n\nWe slept."
    ],
    "authorname": "gumbyshu",
    "tags": [
        "witches",
        "threesome",
        "g-spot",
        "science fiction",
        "fantasy",
        "harem",
        "blond",
        "piercings",
        "group sex"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/spell-book-ch-04"
}