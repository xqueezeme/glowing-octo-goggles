{
    "title": "Jack's True Calling",
    "pages": [
        "Author's Notes:\n\n'Jack's True Calling' is the sixth story in the saga of Jack Danner. Minimal effort is made in this tale to explain the backstory so it is highly recommended you read the first five stories in the following order:\n\n<ul type=\"disc\"><li>Jack's New Job</li><li>Jack's New Position</li><li>Jack's Daily Grind</li><li>Jack's Wage Slavery Parts 1 &amp; 2</li><li>Jack's Snow Day</li></ul>\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 1\n\n\"Happy Liberation Day, Jack!\"\n\nMella, a petite, honey gold Altarian with a not so petite appetite for sexy play time with Jack, was giving him her usual greeting hug. Hands firmly gripping his ass as she ground her small body against his much taller one.\n\n\"Thank you, Mella,\" he said and gave her a kiss before pulling her hands from his butt and spanking hers to send her back to her desk.\n\nHe knew this kind of office behavior back on Earth would have him out on the street, if not behind bars. The workplace rules in the Trade Commission Office on Altaria were... a little odd. Considering that he, the boss, was the one being fondled and groped like a sex object by the rest of the staff, Earth's sexism was turned on its head. Granted, without the malicious intent.\n\n\"Good morning, everyone!\" he said with a sigh as numerous pairs of lovely large eyes looked back at him fondly. Some had more lust than fondness in them but he'd gotten used to that as well.\n\n\"It's a new day and we have work to do! Let's get it done!\" he said with enthusiasm and received grins and a little applause from the staff. He sighed, again. They found his attempts at motivational speaking... amusing.\n\nHe'd been trying out new catch phrases to see if he could find a new way to keep them focused on the job... and not so focused on his body. His last attempt, 'Let's do it!', had almost started a lust driven stampede and ruined office productivity for the day.\n\nThey were an excitable bunch.\n\nHe touched the tablet on Leffera's desk and refreshed its screen to see his updated schedule for the day. Then he looked around for her. \"Has anyone seen Leffera?\" he called out.\n\nStasha, a tall and surprisingly curvy female with deep caramel coloring, was seated nearby and leapt to her hooves and beat out two others to stand before him eagerly, ears trembling. She was a new hire and was already proving to be... aggressively helpful. She smiled widely at Jack. \"She said she'd be a little late this morning. I believe she said she had a doctor's appointment.\"\n\nJack's expression showed his worry. \"I hope she's ok.\"\n\nStasha suddenly looked distraught that she'd made him upset. \"I- I- I'm sure it's just routine!\" she stammered. He nodded though his mind was elsewhere. She began to panic. \"I'm sorry if I've upset you!\" she squeaked.\n\nHer nervous tone brought him back to the present and he saw she was now in distress. Automatically, he reached out and pulled her to his chest to calm her. It's what he did at home with the ladies he lived with. It always worked with them.\n\nFor a deeply infatuated young female working her dream job, being in the embrace of the object of her obsession was... suddenly too much. She bleated quietly and went limp in his arms. Jack was surprised by just how heavy she was. Most Altarians were petite, svelte and light. Stasha had some 'meat on her bones' as the Earth phrase went, though it could never be said here. Amongst a race of herbivores, even hinting at being a carnivore could trigger a flight response.\n\nWhile Altarians never really became fat, Stasha was definitely a plump armful. Not knowing what else to do he scooped her up in his arms and carried her to the couch in his office. He heard a few moans of envy from the staff members he passed and fought back another sigh.\n\nHe gently placed Stasha on the soft couch and went to sit at his desk. He had work to do.\n\nAs he settled into his chair, his mind went back to Mella's greeting this morning. 'Liberation Day' was a relatively recent invention. Commemorating the day the slaves were freed from the Allsa Komanae home world. Remembering those who never made it home. He caught his reflection in his darkened screen and saw he was absently running his fingers across the cool metal of his slave collar.\n\nHe frowned as he shook off the funk he was falling into. Today was actually the sixth anniversary of that day. That was plenty of time to heal from it and he'd had the help of his friends.\n\nThe Allsa Komanae were finally extinct. After Liberation Day, they'd been hunted down and those who didn't put up a fight were sent through a one-way gate to their home world. The vast majority of them had expired there, the organic components of their cybernetic bodies eventually breaking down from the accumulated genetic damage. Damage the Gates were programmed to inflict on their predecessors the Mahrell Drun.\n\nNot all of them had been captured, however. There'd been a few who, as their intellectual capacity degraded, chose to go out in a blaze of glory and take as many of their hateful enemies with them as they could. Humans, Altarians, and Chuuruthians were the main targets of these crazed individuals. The number of victims these cowardly attacks took was fortunately very limited.\n\nThese days, when one of their cybernetically supported bodies was discovered hidden away in a suspicious location, the bomb squad was called in to do the disposal.\n\nIt was Tik documentarians who'd begun the task of locating the names and home planet locations of all of the kidnap victims, alive or dead. They were politely asked to leave the planet a short time after they'd begun assisting Earth's Allsa Komanae hunting parties. That cooperation, combined with the 'martial nature' of the support they gave to the Altarian's 'invasion of the Allsa Komanae home world', raised serious doubts in the minds of the other members of the Gate Network. The Tik's behavior had always been neutral and peaceful. Now it had exceeded what the Gate Network members were willing to accept. From that time on, the Allsa Komanae home world was off limits to the Tik. Documentarians, historians, anthropologists, and special teams of investigators from multiple worlds worked to identify the remains they'd exhumed from each of the mass graves the Tik had found.\n\nTo take home the ones who weren't liberated.\n\nJack glanced once more at his reflection in the screen and took a deep breath. There was at least one major difference in him since those early days. He no longer carried the weight of those deaths on his shoulders as his survivor's guilt was a thing of the past. While it still made him sad, he could live with that as the people around him made him very happy.\n\nHe gave his head a shake and turned his attention to his schedule for the day and began reviewing the background information for each petition.\n\nA few minutes later he heard gentle crooning as Stasha began to stir.\n\n\"Eep!\" she squeaked as she sat up suddenly, looking around.\n\nJack smiled at her when she turned to face him.\n\n\"Oh no! Did I sleep through our love making?\" she blurted.\n\nJack snorted in amusement and shook his head. \"There was no love making. You passed out when I hugged you to calm you down. You just got a little too excited. It's ok,\" he said gently.\n\n\"Oh! Oh my! I'm so embarrassed!\" she moaned.\n\n\"Don't be. You were very sweet!\" he said to assure her and received a hopeful smile. He knew what she wanted and needed to hear. \"When I make love to you, you won't fall asleep.\"\n\nShe made another happy, excited noise.\n\n\"I believe Leffera was going to braid my hair this morning. Would you do me the honor?\" he asked and she leapt to her hooves to rush behind him.\n\nHe sorely missed the short hair style he wore back on Earth but the Altarians insisted his long hair suited his positions at the Trade Commission and Embassy far better so he kept it long. Each morning, a 'volunteer' would braid his long blonde hair into a braid and tie it with a bow.\n\nGlancing at the clock he saw he still had time before his first interview.\n\nStasha was humming happily to herself as she skillfully wove his hair into a braid that hung down his back, almost to his ass. He really needed to get it trimmed back a little. He was allowed to do that at least.\n\nOnce she added the bow she sighed contentedly as he stood and turned to face her.\n\n\"Thank you for the braid,\" he said smiling down at her as she was almost leaning against his chest. She hadn't moved back when he stood.\n\nShe seemed to be staring at his mouth. He needed to get to the interviews so he dipped down and kissed her, holding her in his arms once more.\n\nShe melted against his body as she thrust her tongue into his mouth and grabbed his ass with both hands. What was it with Altarian females and his ass?\n\nHe gently pulled back from the kiss and she swayed on her hooves for a moment. Finally, she opened her eyes and beamed a smile at him. He gestured towards the door with a smile.\n\nShe spun on her hooves and quickly made her way out with a glance back and a smile on her lips now that she had a promise that they'd make love in the future.\n\nOnce she was out, he shook his head in amusement and made his way downstairs to begin the interviews. He had a busy day ahead.\n\nChapter 2\n\nFennLann De Jark, King of Phem Kalos rolled his shoulders and did his stretches in preparation for battle. He smiled to himself confidently. His next opponent would definitely be a challenge as he knew Jaas Tenn Gunnk, Warrior Supreme of the Eastern Lands was strong and fierce. FennLann snorted gently. He also knew Jaas was a relic of a bygone era. His thinking was trapped in the past. The eastern continent, second largest land mass on Phem Kalos, wasn't as technologically advanced as their western neighbor and they actually chose to remain that way as if afraid to allow their society to advance.\n\nAs the military leader in charge of the western continent's warriors, FennLann kept his eye on Jaas to make sure he wasn't building a massive army of his own warriors for invading. His research had set his mind at ease on that point at least. Jaas did have an army of warrior caste Phem Kalos males but the numbers were nowhere near the levels one would need to start a war.\n\nInviting Jaas to compete against him in the Annual Phem Kalos Arm Wrestling Tournament was a tactical move. It was destined to solidify FennLann's position as ruler of the planet and Jaas' subordinate role as the eastern continent's leader. No one had ever beat FennLann at Arm Wrestling. He'd viewed all the media available to study the techniques of Earth's best arm wrestlers. He'd built up his body's strength and flexibility and was supremely confident of his victory. It was this confidence that was key. A warrior could lose the battle before entering the ring if he didn't have the confidence in himself and in his ability to seize victory.\n\nFennLann nodded to GharLenn Du Harr, his lead advisor who was at least three decades his senior, to indicate he was ready. The old warrior nodded and opened the door. They left the inner chamber and marched down the hall towards the stadium. The larger chamber could contain most of FennLann's elite warriors and many of his ruling council.\n\nAs they approached he heard the crowd chanting his name and FennLann's chest swelled with pride. These were his warriors and they were cheering for their leader. The closer he got, the louder their voices became until the sound was thunderous as he stepped into the stadium. The room was round with stepped benches to allow each level a clear view of the battle area. He smiled up at his people as he made his way down the aisle and climbed the stairs to the platform where the battle would take place. He saw strangers here and there amongst his warriors and council members and realized these were the warriors the eastern leader had brought with him.\n\nJaas was waiting for him at the top, an amused look on his scarred face. FennLann snorted to himself once more. The brute was in for a surprise.\n\nGharLenn raised his arms as he faced the audience and a hush came over the crowd. \"Welcome to the Annual Phem Kalos Arm Wrestling Tournament. It is my great honor to introduce your King and reigning champion... FennLann De Jark!\"\n\nThe room filled with roars of approval and FennLann smiled as he raised his hands and slowly turned to face the cheering crowd. Cameras set up around the room were capturing this momentous occasion. While video technology had been used on Phem Kalos in military, scientific, person to person communication, and security applications for hundreds of years, every ruler before FennLann had refused to allow its use by the citizens. He saw the use of broadcast video in the homes of his people as a means to enrich them with knowledge, to unify them, and to inform them. 'Televisions' were becoming very popular amongst the households on the western continent and he enjoyed 'speaking' to his people in special broadcasts. He was aware of the resistance of adopting the new use of the technology on the Eastern continent. FennLann allowed himself another snort.\n\nAs he walked around the raised platform, he spotted the foreign warriors, scattered amongst his people but easily outnumbered five to one. It was a capacity crowd this year.\n\nWhen he finished, he turned to face Jaas across the table and grinned as he held the eyes of the other leader. He saw impatience in the body language of the other warrior.\n\nGharLenn saw he was able to continue. \"For a special exhibition match, our King has invited the Warrior Supreme of the Eastern continent. It is my privilege to introduce, Jaas Tenn Gunnk!\"\n\nA single deafening voice shook the room with a fierce battle cry and FennLann tried to spot where it was coming from. He was shocked to discover it came from the throats of all the visiting warriors in perfect synchronicity. The room echoed with the cry when it abruptly ended. His eyes went to Jaas and saw the leader was watching him with an expression bordering on contempt.\n\nFennLann forced down his hackles and approached the table to take his position holding the other leaders eyes the entire time. He pushed his robe from his shoulders and flexed his thick muscles to prepare them.\n\nJaas unclipped his cape and allowed it to fall to the floor behind him. He was also powerfully built but he definitely showed more scars from the battles he'd fought. He took his position as well.\n\nGharLenn faced both warriors. \"Are you aware of the rules governing this tournament?\"\n\nFennLann never looked away from Jaas as he nodded slowly.\n\nJaas gave GharLenn a nod too as he kept his eyes on FennLann.\n\n\"Take your positions.\"\n\nFennLann placed his right elbow on the pad on the table as his left hand gripped the bracing peg.\n\nJaas followed suit and their palms slapped together as they took a grip.\n\nFennLann's left eye twitched involuntarily as he felt the strength in Jaas' painfully tight grip. He saw a slow grin appear on his opponent's lips.\n\nGharLenn noted the proper positions and nodded to himself. \"BEGIN!\" he shouted.\n\nTwo bones in FennLann's right hand splintered immediately as Jaas squeezed with all his might. FennLann gasped and in that moment of weakness, Jaas threw everything into a grand push. There was a sickeningly loud crack as FennLann's humerus fractured just above his elbow. Strength gone in the arm, Jaas slammed it down against the touch bar.\n\nThe visiting warriors roared their pleasure as their leader raised his arms in victory.\n\nFennLann was stunned as he looked at his twisted arm. He looked up into the eyes of Jaas and saw open contempt there. The fierce warrior lifted his cloak and hung it on his shoulders again before turning his face back to FennLann. He slowly walked around the table.\n\n\"Now that your little game is done, I declare you unfit to rule Phem Kalos. By the Ancient Laws and Traditions I claim the title of King in a trial of combat!\" Jaas roared. His hands came out of his cloak and FennLann's eyes widened as he saw Jaas was wearing fighting hook gauntlets, weapons outlawed due to their barbaric nature. He tried to lurch back from the table but before he could Jaas had a grip on his injured arm and his left swept in.\n\nThe hooks ripped through the muscles, blood vessels, tendons, and gouts of blood sprayed from his ruined throat. All he could do was gurgle as Jaas lifted his heavy body and slammed him down on the table surface.\n\nThe chamber erupted into chaos. Jaas' warriors yanked deadly, charged whips from under their belts and struck out at their enemy around them. The whips exploded any flesh they struck and in expert hands, proved perfect weapons in these close quarters. The slightest touch tore fingers from hands, limbs from torsos, and heads from shoulders. These were prohibited weapons as well but wielded by the elite warriors of the eastern continent, even the seasoned western warriors were no match.\n\nAs FennLann's life pumped out of his ruined throat he watched Jaas smile as he took in the horrific acts his warriors were committing.\n\nGharLenn walked into FennLann's view and he saw the old warrior barely glance at him before moving to Jaas' side.\n\n\"My King, the cameras. They will have warned the rest of the army,\" the old advisor said.\n\nJaas looked at him in annoyance. \"Yes, I'm aware. They'll be mopped up by the rest of my army waiting outside.\" He eyed the old male critically. \"Is this the level of 'advice' I can expect from you?\"\n\nGharLenn blinked at him in surprise as his mouth moved soundlessly. That silence was replaced with a sudden scream as Jaas slashed him from groin to chin with the hooks. Blood and gore gushed from the terrible wounds then the advisor dropped to the floor, dead before he hit.\n\nFennLann watched Jaas roar and leap into the battle which was quickly winding down as his warriors were slaughtered. He'd failed them when he'd invited Jaas to compete. Now the monster was loose and there was nothing he could do to protect his people or his family.\n\nThis was the thought FennLann took with him into the dark.\n\nChapter 3\n\nJack hummed to himself as he left the Embassy. He'd had a really good day and his spirits were soaring. The morning's interviews at the Trade Commission had gone very well with four new import deals being signed. After lunch, in his diplomatic capacity at the Embassy, he'd met with a race he'd never encountered before. He loved meeting new races!\n\nThe Harruushans were relatively new to the Gate Network and they were finding their new 'neighborhood' to be a less than welcoming place. Like the Altarians, they were Herbivores, mostly peaceful, and principally non-aggressive. The male and female pair he'd met were tall, almost a head taller than he was, but their ears reached up far beyond that. He couldn't help but see their resemblance to the ears of an Earth Hare... if they were edged and tipped with feathery white hairs. As the Harruushan diplomats had been embarrassed by their fascination with his horns, he'd had difficulty looking away from their lovely, mobile ears.\n\nMost of their height came from their long legs. Powerfully muscled thighs and long shins, their dual jointed legs were linked to strong feet with three broad toes. Like steel springs, they'd used their superior ability to leap to escape the predators on their planet. They were covered with an incredibly soft brown fur with olive overtones. Large eyes to match their large ears for detecting predators. This female's eyes were green while her partners were blue. They had long, strong arms, ending with long fingered hands, three on each with a thumb. Apparently, most were very lean with little extra weight and with their fur they only wore the briefest of kilts, again similar to the Shreen.",
        "Continuing this comparison to the snowy planet denizens, in their early history, the Harruushan sun underwent a strange shift in energy output. As the planet was on the far edge of Allsa Komanae space, it was theorized that the potential cause for this alteration was an early attempt by the Allsa Komanae to destabilize a star. It happened only a few hundred years prior to the time the Shreen's sun mysteriously went nova.\n\nThe effect on the ecology of Harruusha was dramatic. Plant life absorbed these new levels and their growth exploded, leading to a greatly increased food supply for the residents.\n\nIt also directly affected the Harruushans. Where once they had a minimum litter of 1 kit and a maximum of five kits, the new generation, born and bathed in the energy of their altered sun found this range had shifted to three to ten. Over the next series of generations however, they noted that their original lifespan of sixty to seventy years had actually decreased to 50 to 65. Living in the higher energy environment fed them well but wore them out quicker.\n\nEventually, their numbers allowed them to overwhelm the slower breeding predators which hunted them. That's when their chief problem began.\n\nTheir home planet could only support so many beings so they'd implemented drastic measures to control the birthrate while they looked for ways to expand outwards from their home world. When the Tik found their planet, their civilization had advanced to the point where their space program was sending out scout ships to find alternate planets for their people. They needed to expand but they'd found nothing that could support life within the range of their ships.\n\nThe Harruushans were looking for another home for their people but each planet they visited turned them away. No one wanted to host a race that bred quicker than the natives. Especially one which had overpopulated its own planet to the point where they threatened to exhaust its resources.\n\nJack read their application and the supporting documents prior to the meeting and was genuinely impressed with the civility of the couple he'd met. While he understood the pair couldn't be used as an accurate representation of their people, he was going to recommend to the Queen they send a delegation to Harruusha to get a broader impression of their civilization. If they were as civilized as he suspected they were, then perhaps they could be invited to live on some Altarian worlds. Unless the genetic damage was permanent, perhaps removing them from the effects of their home star's energy would, after a few generations, show signs of reversing? He was no geneticist but Jack wanted to help them. He knew his intentions were likely affected by his ingrained hatred of the Allsa Komanae and the evil they sewed. Anything he could do to repair the damage done... well, he would make the suggestion at the very least.\n\nThe couple had been very excited when they weren't immediately sent packing after making their initial plea and the interview went on longer than they all expected. He made no firm promises other than he personally felt there was merit to their case and he would bring it to the attention of the Altarian Queen.\n\nIn their joyful excitement, they'd hugged him before they left the Embassy and that had been... an odd sensation. Held tight against their lean, strong bodies Jack detected a slight mint scent which wasn't at all unpleasant. He'd caught the female leaning in for a second sniff of him and he wondered what she made of his Altarian/Human musk. It always made him feel a little subconscious as he couldn't smell it himself but Altarian females were always making note of it. Getting accustomed to new scents was just part of his new life amongst the peoples of the Gate Network.\n\nHe was a little late in leaving tonight but Diana told him to check the local market on his way home. He stopped and picked up a large order of fish. SennLann and the twins had been craving some for a while but there hadn't been a good catch recently. Apparently, it wasn't really the season for it. He had no idea how that worked as the climate seemed to remain constant here.\n\nHe made his way home with his heavy packages thinking how happy they'd be to see this. As he approached the front of his building he glanced up towards his unit's balcony on the top floor.\n\nThe enormous balloon filled with frigid water struck him straight on his horns and exploded over his head and shoulders, splashing all the way down his body. The weight of the water tore his shopping bags from his hands and slammed them to the ground. Bags splitting open, the wrapped parcels of fish scattered in all directions.\n\nJack closed his eyes in frustration as his ears picked up the faint sound of shrill laughter from two harmonized voices.\n\nHe looked down and began picking up the soaked parcels. Luckily the paper wrapping the fish was waxed so it wasn't damaged by a little water. He filled his arms as he shivered.\n\nThe twins were incredibly inquisitive and had discovered the joy of playing pranks. He was going to have to speak to them, again. He'd gotten them to stop teasing the other children but it seems they'd just targeted him instead.\n\nHe carried the packages to the front door where a grim-faced security guard was waiting for him. She opened the door and held it for him as his hands were full.\n\n\"Good evening, Whella,\" he said as he dripped on the carpet.\n\nShe looked up from the floor to fix her eyes on his. \"Mr. Danner, we have a problem.\"\n\nJack sighed. He knew what was coming or at least who it was going to be about.\n\n\"Your twins. They are frightening the other residents of the building!\" Whella said insistently.\n\nJack's face fell. \"They didn't water bomb others, did they?\"\n\n\"What? No! They ride on top of the elevators and make noises which makes the occupants very nervous! They sneak into the ductwork and shoot little wads of sticky substances at those passing by from the intakes in the hallways. I've been fielding complaints all day!\"\n\nJack frowned. \"Ok, that will stop. My sincerest apologies. I will find a less mischievous outlet for their energies.\"\n\nJack made his way to the elevator with Whella following. She pressed the call button for him then gave him another stern look before walking back to her office.\n\nHe stepped in when it arrived and asked for his floor. The elevator took him up and let him off at the top level. As his hands were full he couldn't touch the handle to let himself in. Instead he bumped the doorbell hard with his elbow and heard it ring multiple times in quick succession. There was a shriek and something fell with a clatter just inside the door. This was followed by some growling noises.\n\nMoments later, Eve pulled the door open with a stern look on her face. Behind her and a short ways back Adina and Zaina stood side by side covered in whip cream and looking contrite. The floor inside the door was a mess of whip cream and a crumpled tin pan which obviously once contained the fluffy white dessert topping.\n\nJack glared at the two imps, watching their little pink tongues scooping up the sweetness from their faces as their gold eyes watched him cautiously.\n\nEve looked back towards the window then back to him in surprise. \"It's not raining. How did you get so wet?\"\n\n\"Them. They hit me with a water balloon. A big one,\" Jack growled. \"I'm freezing!\" He looked at the mess. \"Were they planning on hitting me with a pie in the face too?\"\n\nEve blinked at him in confusion. \"A pie in the face? Why would they...\"\n\nJack sighed and just shook his head. He wasn't up to explaining ancient Earth humor. Obviously, the twins had been watching some vintage Earth comedies. He stepped inside and his wet shoes immediately slipped out from under him on the slick dessert topping. Wrapped fish packets went everywhere pelting Eve and the twins as he landed on his ass with a thump.\n\n\"Ow!\" he groaned.\n\nThe twins were struggling to suppress their laughter to the point where he could see them shaking.\n\nSennLann appeared behind the group. \"YOU. NAUGHTY. GIRLS!\" she snapped and the twins froze with wide eyes.\n\nDiana arrived and quickly disappeared to return with a bundle of towels. Everyone got busy wiping up the mess. SennLann scrubbed her squirming daughters and nipped them to hold still. Eve scrubbed the floor and got Jack to take his wet shoes and socks off before standing on one of the towels. Diana picked up the dropped packages and took them into the kitchen.\n\nEmily and Joseph came charging around the corner to say hello and took one look at the grim expressions on the adult's faces before spinning and rushing back to their toys.\n\n\"What do you say to Papa?\" SennLann growled.\n\nTwo sets of gold eyes looked up at him. Jack could see the guilt and worry there, the growing realization that he wasn't laughing with them, that he'd actually hurt himself because of their actions. Eyes began to blink rapidly as their emotions flooded between them. \"Suh-suh-sor-Sorry!\" they stuttered out in a broken harmony.\n\nJack sighed and took off his sodden shirt. He accepted another towel from Eve and dried his hair and wiped his chest and arms quickly. He hung the towel around his neck and looked at the twins again.\n\nThey were six, going on seven, but they were still small, each standing only three feet tall. According to SennLann that was normal for Phem Kalos female children. They were also very light but strong. Their energy levels kept them on the move constantly so their muscles were hard and sleek. Their fitness levels put his human children to shame, though they were very active as well.\n\n\"Up,\" Jack said with his arms wide and the two sprung up to land on his hips, an arm flung around his neck with the other hand braced against his chest. He quickly pulled his arms in behind their legs so they could brace themselves against them comfortably. They looked into his eyes intently as he carried them into the living room. He was putting his thoughts together for how he was going to approach this. He would have to speak with SennLann first but he had the beginnings of an idea of what he could do to keep them out of trouble.\n\n\"I spoke with our building security today. They received a number of complaints from the residents in the building about being frightened and taunted. These are our neighbors. People we need to stay on good terms with as we live in close proximity. This is their home too. They deserve to feel safe here. You made them feel unsafe and unhappy. I know you thought it was funny but you have to understand how they felt. It wasn't funny to them. Like me getting hit with a large balloon of cold water after I had such a good day. It took my happiness away,\" he said as he held their eyes which were doing that blinking thing again. He pulled them in close and they rubbed their faces against his chin.\n\n\"Sorry Papa,\" they said in unison then pulled back to look at him sadly.\n\n\"If you want to watch Earth TV shows please remember, you can't believe everything you see, especially from their entertainment shows. Humans are a weird bunch,\" he said gently.\n\n\"Daddy!\" Emily scolded him from where she sat on the floor with Joseph.\n\nHe smiled. \"Sorry Emily, but I grew up on Earth so I know better than you how weird we can be. Well, you and Joseph aren't weird and your mom's not but a lot of people back on that world certainly are!\"\n\n\"You forgot to include yourself. You're not weird either!\" Joseph exclaimed.\n\n\"Thank you, Joe,\" he said smiling at the boy who grinned back.\n\nHe looked back to the twins. \"No more pranking the neighbors. No more riding on top of the elevators or crawling around in the duct work. And no more water balloons!\" They nodded but looked a little desperate. He knew they were bored. He had to get them something to do and he had his idea. \"Listen, your mom and I will talk and we will come up with something for you to put your energies into. OK? Please stay out of trouble until we can get it arranged.\"\n\nTheir eyes lit up with excitement immediately. He suddenly stuck his arms straight out like he was about to dive of a diving board and their support disappeared. They spun in place to face his hands and grabbed them.\n\n\"OOPLA!\" Jack cried and they coiled their flexible bodies to swing up to do handstands on top of his outstretched hands. It was a considerable effort for Jack to support them so he gradually lowered his arms until they sprung away.\n\n\"Go take a shower to get that sticky stuff off your fur!\" he called out.\n\nThey raced off down the hallway giggling happily all the way.\n\nJack dropped himself to the floor to cozy up to his daughter and son.\n\n\"Daddy! You smell like fish!\" Emily complained.\n\nHe gave her a wide eyed exaggerated look of hurt and she burst into giggles.\n\n\"Stinky daddy!\" Joseph chimed in then burst into giggles too.\n\nHe grabbed the kids and blew raspberries onto their tummies as they squirmed and shrieked with delight.\n\nEve and Diana arrived and plucked the kids from Jack's arms making him pout. The kids clung to their mothers as they grinned back at him.\n\n\"Emily is right, you smell like fish,\" Diana said with a raised eyebrow.\n\n\"Off to the shower with you!\" Eve continued.\n\n\"Fine! Geez! Never get to have any fun!\" Jack said in an exaggerated grumble causing his kids to giggle hysterically.\n\n\"You get plenty of fun.\" Diana said with a small smile on her lips and Jack fought to hide his answering smile from the kids.\n\nHe trudged off to the master bedroom and closed the door before he allowed himself to grin. He loved playing with the kids and was looking forward to spending more time with all of them including his Altarian kids this weekend when they all got together at Queen Elissa's. He wasn't sure if Judge Aaros would be back in the capitol by then as she was returning from working on one of the colony worlds. She'd taken their son Douglas with her so he could get as much exposure to the other races of the Gate Network as possible. He was showing a keen interest in becoming an Ambassador. Following in his Dad's footsteps.\n\nThe kids were all growing up so it was time to think about getting them some schooling. Altarian schools didn't work like Earth schools. There were no regimented ages they had to begin at and each student's curriculum was individually assessed and managed. They didn't 'compete' against each other as each would have their own strengths and weaknesses. Strengths were maintained and weaknesses were assessed to see if they could be improved. If not, they were noted and the curriculum adjusted for it.\n\nAt their last get together, they'd decided 'as a family' to enrol the kids in school this year. That meant Alex, Max, Gwen, Lillian, Douglas, Emily, and Joseph would all be going to an Altarian school... for females. It was time to shake up Altarian society. The Altarian Male School Headmasters were going to be a cranky pain in his ass but their curriculum produced lazy, self-absorbed flakes... in Jack's opinion.\n\nAdina and Zaina wouldn't cope well in a school environment and had already absorbed most of the educational materials as SennLann tried to keep their hungry minds occupied. Jack would speak with her after his shower.\n\nHe enjoyed the hot spray for a short time then dried himself off and pulled on a casual button down shirt. He missed t-shirts but he couldn't get his larger horns through the neck hole easily and he stretched them out with his wider neck and shoulders anyway. Jeans though, there was a casual luxury he could still indulge in and did whenever he could.\n\nHe walked back out into the living area and Emily and Joseph ran up to grab his legs as they stood on his feet. Adina and Zaina leapt at him once more and climbed up to sit on his shoulders and cling to his horns.\n\n\"Dinner!\" Diana called out and the kids all giggled as this meant Jack had to walk to the dining room with the kids hanging off of him.\n\nMuch to their delight, he made mechanical noises like he was a robot as he thumped across the room and into the dining room.\n\n\"That's where you all are!\" Eve exclaimed as he arrived with kids in tow. \"Dinner time.\"\n\nEmily and Joseph released his legs and rushed around the table to their seats as the twins slid down his arms to rush away to theirs.\n\nJack took his traditional spot at the head of the table and smiled at Eve, Diana, and SennLann as the food smelled so good!\n\nThe twins were vibrating with excitement as they smelled the fish! SennLann smiled at them as her own mouth was salivating.\n\nDiana served the children first and Emily and Joseph guarded their plates from the twins with false scowls until large portions were served to Adina and Zaina. Their eyes were wide with delight and their little noses were twitching madly as they stared at how much they'd been given. They looked to Diana and she just smiled at them as she served their mother a portion just a little larger. SennLann also looked to Diana in surprise.\n\n\"You love this meal more than I do so you three can share most of mine. I'll just have a little,\" Diana explained. SennLann jumped to her feet, rushed over and hugged Diana tightly, her face pressed between the tall brunette's large breasts as she purred loudly.\n\nJack smiled as he watched the flush run up the pale skin of Diana's neck. SennLann rushed back to her seat, oblivious of the state she'd left Diana in. The tall brunette took a deep breath and continued serving.\n\nEve dished out the vegetables and then everyone began eating.\n\n\"If you are feeling full, stop eating,\" Jack warned the three who were ravenously gobbling down the fresh cooked fish. SennLann and her daughters barely acknowledged his comment so he shrugged and enjoyed his own meal.\n\nHe told them about meeting the Harruushans and gave his impressions of them. Diana immediately picked up that they shared traits with Earth's hares and raised an eyebrow at him with a sexy little smile. He snorted quietly and smiled back at her.\n\nAs they finished up their meals Jack looked over at SennLann and her daughters. Sure enough, they'd glutted themselves on the meal and were looking like they were falling asleep at the table. He smirked and wiped his mouth as he stood up. He moved to collect the twins who were still trying to shovel little bits of fish into their slowly chewing mouths as their eyelids drooped. They made quite little growling noises as he took their forks away.\n\n\"How about we pack this up for your lunches tomorrow,\" he said to them gently. They paused and nodded, slowly turning to lift their arms to his shoulders. He scooped them from their chairs as he rolled his eyes at Emily and Joseph who grinned back at him.\n\nJack carried the girls to their room and gently set them on their bed. They immediately curled up together and were out. He blinked at how quickly they'd fallen asleep. They'd obviously eaten way too much tonight. He shut off their light and closed the door on his way out.\n\nWhen he got back to the dining room he saw Eve was bracing SennLann in her chair. Jack shook his head and lifted the sleeping female into his arms.\n\n\"Why did they get so sleepy, Daddy?\" Emily asked.\n\nHe smiled. \"They ate so much their bodies told them to go to sleep so they could digest all that good food. That's why you should stop eating before you get stuffed.\" Emily and Joseph nodded with smiles and pushed their plates away, though Joe went back for one more baby potato.\n\nJack turned and carried SennLann to her bedroom. He placed her in her bed and she began to purr as she licked her lips in her sleep. He would talk to her about his suggestion for her daughters in the morning.\n\nOnce he was back to the table he saw Emily and Joseph pretending to be asleep. Eve and Diana grinned at Jack and he gave them both kisses before he picked up the two kids against his chest and carried them to the bathroom where they all brushed their teeth. Then he got them to their rooms and sent them inside to get ready for bed. He went back to the kitchen and helped clean up and pack the leftover fish for the three sleepy heads. Eve and Diana went to tuck in their kids and when he was done in the kitchen he went into Joseph's room to give him a kiss goodnight. He followed Eve out and she closed the door. She gave him a sweet kiss and told him good night with a little smirk on her lips.",
        "He watched her walk away to her room with a puzzled expression on his face. Then he went into Emily's room. Diana was just finishing up a story. He gave his daughter a kiss and wished her sweet dreams. He followed Diana out and she shut off the light and closed the door.\n\nWhen she turned to look at him Jack suddenly realized why Eve had smirked. Diana was almost twitching with need. Big green eyes looked into his hopefully and he nodded. She grabbed his hand and dragged him across the condo to the master bedroom. He flashed back to the first time they'd been together on Earth. Then, she'd dragged him across her house to her bedroom.\n\nOnce they were inside the master, behind the closed door, she quickly undid his shirt and pushed it back over his shoulders. He returned the favor, undoing the two clasps on her Altarian gown, and soon her large tits were exposed. He immediately took them in his hands and kneaded the firm flesh. He bent and kissed her nipples and found himself dropping back onto the bed. She manhandled him in her desperation and he was impressed with her strength. Off came his jeans in a series of frantic tugs and she was knee walking up his body. She was ready and he was too so she skipped the foreplay, lined him up, and drove him deep inside her in one thrust. They gasped in unison at the bliss they felt.\n\nHe knew what she needed so he took her hands and lifted them to his horns. She trembled as she took a grip on the thick black spears growing from his hairline. He knew the bone caps were in place so she was safe from the deadly tips. He could tell she deeply affected as her grip was intense and her breath was coming in gasps. He needed to catch up so he began to lift his hips to drive himself into her heat faster and faster.\n\nShe cried out wordlessly as her eyes began to roll back and her jaw went slack. Her body clamped down on him in pulses with her orgasm and this was all he needed to reach his own release. She slumped forward on his chest, breathing hard.\n\nAs they relaxed together, enjoying the afterglow, his mind went back to that first time. That interlude had led to Emily but he wasn't worried about her getting pregnant now as she'd received a birth control implant. If they decided on more children she'd have the implant removed.\n\nJack had suggested he could do one but he'd been voted down by the Queen. And Karrel. And Leffera and... well, the list went on. The Altarians were not impressed with the idea of him restricting his fertility in any way.\n\nDiana pushed back and green eyes twinkled as she looked down at him. \"So... bunny people?\"\n\n\"No! And don't you start calling them that!\" he sighed. \"They're Harruushans. Their similarity is purely coincidental and you can't tell them about it as that would be highly insulting.\"\n\nHer eyes widened. \"Am I going to meet them?\"\n\nHe shrugged. \"I don't know. I'm going to speak to Elissa but it'll be up to her and her council whether or not the Harruushans are allowed to emigrate some of their people to Altaria or one of the colonies. They need to get away from their planet and its altered sun. To see if they can reverse or correct the damage it's doing to them.\"\n\nDiana slid off of Jack's body to lie next to him. \"You're a good man, Jack.\"\n\nHe shook his head. He didn't think he was doing anything special here. \"They seem like really nice people. If she agrees that it might be worthwhile, I'll suggest Elissa send a delegation to their planet to get a more accurate impression of the people. If the delegation agrees then we might see some Harruushans on Altaria.\"\n\nDiana gave him an impish smile. \"Are they attractive?\"\n\nHe looked into her eyes and a slow smile appeared on his lips. \"Yes, well... the ones I met were. No idea if they were representative.\" Her eyes were still twinkling. \"You thinking what it might be like having sex with a Harruushan?\"\n\nShe gasped and pushed at him but he could see something in her eyes... a curiosity and something else.\n\n\"Talk to me,\" he said and her face flushed with embarrassment. She covered her face with her hands but he gently pulled them away and looked her in the eye.\n\nDiana squirmed and looked at him but saw he wasn't judging her. She took a deep breath and nodded to herself. \"You know... you know how I get. My... earliest memory of feeling this way happened in my teens when I was sitting in my parent's playroom on a Saturday morning watching vintage cartoons. There was a rabbit and he was so much smarter than everyone else and... I... imagined what it might be like.\" She shook her head, lost to her memories. \"I'd never fantasized about anything like that before. The thoughts were so provocative and intense, it stuck in my head. I was so confused. It didn't make sense so I just pushed it down deep in my mind. My parents did their best to isolate me from the Gate Network and the races coming to Earth but the first time I saw aliens, those thoughts resurfaced and I was confused all over again.\" She held his eyes and smiled happily at him. \"You were my first experience with someone who wasn't human, I mean fully human- you know what I mean!\" she finished in exasperation.\n\nHe grinned at her. \"I'll have to introduce you to Dann.\"\n\nShe blinked. \"Who's Dann?\"\n\n\"He was the male Harruushan diplomat I met. A handsome specimen of his race. I think he might enjoy a tumble with a lusty Earth woman,\" Jack said with a grin.\n\nDiana's eyes widened in surprise and she gave his arm a half-hearted slap at his audacious suggestion. Jack watched her face closely and he could see she was imagining it guiltily.\n\n\"Wouldn't you get jealous?\" Diana challenged.\n\n\"If you were giving him your heart and cutting me from yours, I'd be really sad but do you really think I've lived the Altarian lifestyle this long without overcoming my Earth based concepts of infidelity and jealousy?\" Jack said reasonably. \"Sharing pleasure with another willing being is no threat to my relationship with you. I know you and SennLann have enjoyed each other.\"\n\nDiana squeaked in embarrassment as she thought that had been private.\n\nJack frowned. \"Please don't keep secrets from me. That always backfires and someone gets hurt. You're the only one who's still dealing with the stigma of casual sex in a long term relationship. I love you woman! I'm secure in that knowledge. I know you love me too. I'm not worried about you finding a little happiness in the arms of a lover. What kind of hypocrite would that make me?\"\n\nShe pouted as she realized she'd messed up but he didn't look angry or hurt so she just kissed him tenderly and cuddled in against him. They were quiet for a bit as she processed what he'd said.\n\n\"Would... would you make love to a female Harruushan?\" she asked quietly.\n\nHe smiled. \"If Juul offered I suppose I would. She was very pretty and very nice.\"\n\nThey were quiet for a while and Jack thought Diana had finally fallen asleep.\n\n\"Would you be there if Dann agreed to have sex with me?\" Diana said in an even quieter voice.\n\nJack's eyes widened in surprise. So the old fantasy lived on. \"Before we get any ideas, I don't know if they have any taboos against cross race sex or have any interest in it but if those weren't concerns to them and if all the stars aligned, then yes, I'd be there.\"\n\nShe snuggled in tighter and they both let it go, for now.\n\nHe was glad she'd opened up so she could feel comfortable about discussing sex in the future. It wasn't healthy to keep secrets in a relationship.\n\nEspecially in one as complicated as theirs.\n\nChapter 4\n\nIt took five days of vicious and bloody skirmishes but by the end, Jaas Tenn Gunnk stood in the throne room of the palace facing his squad of elite warriors and shared a victory roar with them. At thirty two in number, they were short eighteen voices. These losses Jaas felt the most acutely but considering what they'd achieved the price was bearable.\n\nTruthfully, they'd defeated the larger western army with relatively few losses of their own. While they'd fought with a desperate ferocity, the warriors of the west were too accustomed to their conveniences and just played at war. They'd soaked too long in the civility offered by the Gate Network. They'd grown soft while his hardened warriors fought with a savagery their ancestors would have been proud to behold.\n\nJaas smiled as he looked over the gathering. Most of his army was celebrating their victory in the city outside the palace, with orders to let the residents live as their continued survival was required for the functioning of the city. Unless they attacked or were found harboring a member of the western army, they were safe.\n\nHe snorted. Maybe safe was too strong a word. His men had their blood lust up. There would be fights and some citizens were likely to get hurt. The females would be up for grabs to quench his men's other desires. He would let that go for tonight. They'd earned it. Tomorrow was soon enough to bring them back to order.\n\nTonight, he and his elite warriors would feast and drink at a very special banquet following an ancient ceremony his ancestors practiced after defeating their enemies. The well-deserved reward for victory.\n\nHe looked to the gathered warriors and felt pride and honor sweep through his being at being their leader. He'd come so far.\n\nWhen he'd first joined the Eastern army so many years ago, he floundered as he wasn't sure of his way. His father had been cast out and died in shame. Jaas had hastily joined the army to combat that shame but he lacked focus and discipline and took many beatings.\n\nThen he moved in with his uncle and his life changed direction. The elder had been a fierce warrior in his time but was hobbled by the numerous injuries he'd endured. However, his mind was as sharp as his tongue and his remaining eye saw something in Jaas. His studies of Phem Kalos history had led to the discovery of scrolls containing an ancient warrior's code. He knew what Jaas needed and introduced him to the scrolls, encouraging him to follow this path. Jaas finally found meaning and purpose for his life. He took the philosophy to heart, pledging to live his life by the code.\n\nHe quickly began to make his way up through the ranks. The code gave him a strength and savagery that none could withstand. Soon, he began to draw the attention of the Eastern leaders. They saw him as a threat to the peace of the region. When they tried to covertly contain him and the warriors who began to follow him, they failed.\n\nJaas made converts to his cause faster and faster. He was outspoken on how the Phem Kalos had lost their way. The peace they were offered by the outsiders dulled claw and tooth. It denied who they truly were. They were warriors. It was their destiny to battle and defeat any who opposed them. Jaas walked the path of the ancients and became Warrior Supreme, ruler of the Eastern continent as the old leaders, 'retired'.\n\nSince that day he'd honed his army into the killing machine it was today. He'd shrewdly kept the numbers down, maintaining their so called king's belief of their inferiority. However, his troops became sharper, stronger, and far deadlier than the west's army. He'd reintroduced the banned weapons their ancestors perfected and made his men practice with them until they were experts with the cruel and vicious tools of war.\n\nHe'd prepared himself and his army so when the day finally came when he told them they would be taking the Capital during a visit, not one had doubted his wisdom. They had complete and utter faith in him. He could see it in their eyes. They would follow him against any enemy and they would bring him victory.\n\nSkarl Vonn Augg, Jaas' most trusted commander approached with a determined look on his scarred face. Some of those scars were put there by Jaas when they battled during his rise to power. Skarl was the weapon the Eastern leaders had sent to deal with the upstart. Instead, they handed Jaas one of his best warriors... once Jaas defeated him and convinced the fighter he was destined for more than his 'leaders' envisioned.\n\n\"Jaas, you claimed it at the tournament. Are you going to take on the title of King now?\" Skarl asked.\n\nJaas made a rude noise. \"I already have a title. It will suffice to keep the weaklings in line.\"\n\nSkarl nodded his approval.\n\n\"How go the preparations for the feast tonight?\" Jaas asked.\n\nSkarl frowned uncomfortably. \"We found them where you said they'd be. It didn't feel... good... taking the lives of the little ones.\"\n\nJaas caught his commander's eyes and held them. \"You understand the importance they play in the ceremony,\" he said earnestly. He needed his men fully committed and he valued Skarl.\n\nThe warrior's eyes showed his resolve once more. \"Yes! Of course! We did our duty. There are no loose ends... except one.\"\n\n\"What?!?\" Jaas snarled.\n\n\"SennLann Du Kess, the King's cousin is missing. She wasn't in the royal enclave.\" Skarl confessed.\n\n\"Check with the concubines!\" Jaas growled.\n\nSkarl nodded. \"We did. She's not there either.\"\n\nJaas was not happy that a member of the previous ruling family's bloodline was unaccounted for. Granted it was only one female but he wanted them all. These females would be his personal slaves. \"They kept records! Find her!\"\n\nThe commander bowed slightly then rushed away.\n\nJaas allowed himself a small smile as he acknowledged that once again the ancient ways had fulfilled their promise. His enemy was vanquished, the offspring of the ruling party had been culled to eliminate a generation thirsting for vengeance, and the females were his breeding stock to create a new generation of faithful warriors. His ambitions were being met with the success the warrior's code promised.\n\nHe walked amongst his elite warriors comparing new scars and hearing of their victories. He listened to their tales of fallen comrades and the vengeance they'd taken for each death. He was so proud of them!\n\nThey heard a chime and he smiled at those around him. \"It's time to feast!\"\n\nAnother roar went up and they made their way to the adjoining dining room. The vast table was set with drink and platters of food but in front of each seat was a plate containing a single cube of raw meat.\n\nEveryone stood before a place setting with some lighthearted position jostling. Then they looked to the head of the table where Jaas stood before his own place setting watching them. The room fell silent.\n\n\"Our being here today was destined. The moment we decided to follow our own path and shed the false promises of the outsiders, we took on the mantle of greatness. Yet, this is still early days. Too long the people of Phem Kalos have been blinded to the true destiny that is theirs to take if only they opened their eyes. Our eyes are wide open. We see what we want and we take it!\"\n\nThe room erupted in shouts of victory. As quickly, the room went silent as they waited for his next words. All eyes were on him.\n\n\"We will reshape this world to how it should be. Then we will set our sights on expanding our domain as our forefathers originally intended before the Gate Network interrupted the natural order. The Phem Kalos Empire will be reborn!\"\n\nNow the noise was deafening. He smiled savagely and watched his warrior's excitement with pride.\n\nSkarl returned, nodded to his leader, and took his position at Jaas' right hand. He looked down at the plate then glanced at Jaas as he suddenly realized what it was. He barely kept his surprise and revulsion from his face.\n\nJaas extended a claw and pierced the cube of meat on the plate before him and held it up before his face. Everyone followed his example including Skarl.\n\n\"We will crush our enemies. We will take what is theirs and make it ours. We will end their bloodlines. We will thrive and prosper as they return to the dust. This is the path,\" Jaas boldly spoke and turned his eyes to Skarl as the room echoed his final words.\n\n\"This is the path!\"\n\nJaas placed the morsel of tender meat in his mouth and savored it. He watched his warriors enjoy the tidbit as well. He saw Skarl chewing and smiled when the commander swallowed. He'd had a moment of doubt about the strength of the commander's convictions but he'd passed the test. Knowing intimately what they were eating and following through was as strong a test as the leader could devise. He allowed himself to relax completely.\n\n\"Eat and drink my warriors for you have earned it!\" Jaas roared out and they tore into the platters of roasts before them and poured themselves ale. He grabbed a wild boar's leg from a platter and joined in the feasting.\n\nSkarl poured himself some ale and rinsed his mouth with it before swallowing.\n\nHe couldn't get the vision of the child's terrified eyes looking up at him out of his mind.\n\nHe needed ale. Much more ale.\n\nChapter 5\n\nMonday morning Jack had a special treat. SennLann and the twins joined him on his walk in to work.\n\nHe'd finally managed to have his talk with SennLann and she saw the wisdom in his idea though she was a little nervous about it. They'd talked it over with the others when they got together at Elissa's on the weekend and they'd all agreed. He'd reached out that night to make the arrangements.\n\nJack smiled to himself as he remembered tumbling around in the back yard with his kids. He'd brought along an eight player croquet set and explained how the game worked. It quickly devolved into knocking each other's croquet balls all over the back yard and then became a wrestling match, all kids against Dad.\n\nThis morning he'd gone running and as usual the twins went with him. They were able to keep up with him over the distances he ran even at the speeds he maintained so he was toying with the idea of having them join him in an annual off-world run he did. He'd talk it over with SennLann closer to the date.\n\nIt was Embassy duty this morning and he had guests to speak with the twins, first thing. It was the reason SennLann was with him.\n\nThey went in the building and up to the offices. As they walked into the outer office Denee looked up from her desk and smiled at Jack. Her smile widened as she saw SennLann and her girls.\n\n\"Good morning Jack, SennLann, Adina and Zaina! What a pleasant surprise!\" Denee grinned.\n\n\"Yeah, it was nice to have their company on my walk here,\" he answered as the twins darted forward to get hugs from the female.\n\nDenee looked over at Jack after giving SennLann a hug as well. \"You have guests in your office.\"\n\nHe smiled. \"Yes, I was expecting them. Thanks!\"\n\nJack collected his family and led them into his office. Sitting on the couch were two black Altarians, using the time to inspect their weapons. These quickly went back under their gossamer black gowns as they stood. Jack moved forward and gave Gee and Bal a hug. This was his turf and if he wanted to hug them here he could. They didn't complain too much and Gee even smiled... a tiny smile which disappeared as quickly as he noticed it.\n\nAdina and Zaina stood before the agents looking up at them in awe.\n\nJack knelt down between the girls and got their attention. \"Remember I promised I would find you two something to do? Well I've arranged with the Ministry of Security to get you two some training with agent's Gee and Bal. They will take you through the Agent training protocols and you must give them your complete attention at all times and follow their instructions. They will be assessing you on how you are progressing and if I get reports of you two misbehaving in any way, the lessons stop. Is that understood?\"\n\nThe girls were vibrating with excitement and nodded to him rapidly. He stood and faced the agents. \"They are voracious learners. They learn very quickly, their retention is excellent, but they share a gestalt sensory input which can lead to distraction. I filled you in on that so just be aware of it while doing training. I gave them training on how to isolate their individual experiences and function like that but your training is a completely new story. Their fitness and endurance is excellent. All this said, their curriculum is up to you and the Ministry. Thank you very much for taking your time for this.\"",
        "Gee touched his arm. \"We will take good care of them. They will be safe with us.\" Bal nodded with a neutral expression.\n\nJack rubbed his daughter's heads and they sprung up to his chest to hug him.\n\n\"Thank you, Papa!\" they blurted in harmony. Then they dropped down and hugged their mom. \"Thank you, Mama!\"\n\n\"Be good, behave, and listen carefully to your teachers!\" SennLann said with a smile and they nodded with wide grins.\n\nWith a final nod to the two agents, he and SennLann watched them head out of his office. Before the door could close there was a knock and another pair of agents entered quickly followed by Elissa.\n\n\"Queen Elissa! I wasn't expecting to see you this morning! This is a pleasant... no?\" Jack stopped as he saw the stress on her face. One of the agents moved to the window while the other stepped back to the door and closed it. Before it shut Jack saw two other agents outside. The Queen needed a security escort on Altaria? His nerves jangled. \"What's happened?\"\n\n\"I called your condo this morning and heard you and SennLann had already left for the Embassy. I need to speak to you both.\" She gestured to the large display on the wall above the couch and he nodded. She pointed her comm at it and the screen came on with an image of a battle scarred Phem Kalos warrior. He was a big and nasty looking brute.\n\nElissa turned back to them. \"Word has finally gotten out from Phem Kalos. This is Jaas Tenn Gunnk, Warrior Supreme of the eastern continent. He and his army have invaded the western continent and have defeated the western army. I should say they destroyed them. None have been allowed to live. It's barbaric how they slaughtered them!\"\n\nSennLann was looking up at the screen, trembling slightly. \"FennLann?\"\n\nElissa looked at her sadly. \"The first to die at the claws of this warrior. I'm sorry to say we didn't see this coming. The eastern continent of Phem Kalos is off limits to travel for 'outsiders'. Its isolationist policies on top of the difficulty our envoys have visiting at all made it impossible for us to gauge the threat. It seems FennLann suffered from the same lack of information. Now he's dead, as is his army. No word on his family.\"\n\n\"The children are dead. All of the ruling party's children are dead. The male members of the cabinet will be dead. The women will be his breeding stock,\" SennLann muttered quietly as she continued to stare at the image on the screen.\n\n\"What?\" Jack gasped.\n\nSennLann looked to him. \"The only thing females in the royal enclave are allowed to read is the history of Phem Kalos. If he came from the east, and he slaughtered his enemy's army so completely, then he's following the old ways. He will clear away the males and the children to eliminate an entire generation. Then he will breed a new generation with the females which he will make his new warriors. If he is following the old ways.\"\n\nJack was shaking with rage. Kill the children? Breed the females? He turned his eyes back to the screen.\n\n\"One thing we have learned since he took over is that he is putting the people of the capitol on a project to re-establish the Phem Kalos Empire.\n\nJack turned his eyes back to Elissa in confusion. \"Travel between the planets is done by Gates. The Tik prevent the use of the Gates for invasions.\"\n\nElissa looked grim. \"The Phem Kalos region of space is actually close to the Altarian and Wuu regions. If the Phem Kalos re-establish their space program, with the planet's resources behind him, Jaas could have his fleet in place in as little as five years.\"\n\nJack recalled his trip on the Allsa Komanae space ship and shuddered. Then his mind returned to the females Jaas was going to turn into his slaves. His rage quickly exploded.\n\n\"DAMMIT! We have to do something for those females!\" he growled.\n\n\"No Jack, we can't interfere. This is a Phem Kalos internal affair. The Gate Network members have already put us on notice that we've been flagged as 'invaders' due to our rescue of you and the slaves on Allsa Komanae. If we act now, we risk severe embargos or even expulsion from the Network! If the Phem Kalos proceed with their preparations for war then we'll act in our defense. I have a call with Jaas tomorrow to see if he intends to send a delegate to the annual treaty signing. If you promise to behave yourself during this call, I'd like you to be there so I can gauge the accuracy of the rumor of his xenophobia.\"\n\nJack struggled to throttle his rage and took slow deep breaths. He knew it was his experiences at the hands of the Allsa Komanae that were driving his current emotional upheaval but knowledge of the cause wasn't the same thing as being able to manage his reactions. Finally, he was able to nod and look her in the eye. He saw her concern as she'd been with him during those terrible nights afterwards.\n\n\"Yes. Yes, I'll be there. Thank you,\" he managed.\n\nShe nodded and touched his arm. \"Thank you.\" She turned to SennLann. \"I'm sorry for your loss.\"\n\nThe Phem Kalos female shook her head and held the Queen's eyes. \"I've lost nothing. He was dead to me the moment he abandoned me.\"\n\nElissa nodded and with a final look at Jack she shut down the large screen and left his office. Jack sat on the front edge of his desk as he went back to brooding about the enslaved females on Phem Kalos.\n\nSennLann moved forward and leaned in against his chest, nuzzling his neck. He wrapped his arms around her.\n\n\"If I could get them all out, you know I would,\" Jack sighed to her.\n\n\"I know. You are a good man, but the Queen is right. It is too dangerous for the Altarians to interfere. Too much is at stake for them,\" SennLann sighed in return. They rested like that for a bit until his desk comm beeped.\n\n\"And life moves on,\" he said with a sad smile.\n\nSennLann kissed him and made her way to the door. \"See you tonight.\"\n\nHe nodded and went to answer the comm.\n\nLife moves on.\n\nChapter 6\n\nJaas waited impatiently for the technician to cue up the video in the royal offices. Skarl had found the records of FennLann's communications during his time in power and went back a little earlier than that looking for the last references of SennLann Du Kess. They hadn't found any sign of her anywhere in the capitol. Nor was her body buried in the royal cemetery.\n\n\"You may leave us,\" Skarl said to the young male who quickly left the room.\n\nJaas watched him go with a snarl of distaste on his face.\n\n\"The sub-warrior caste has its uses, Jaas,\" Skarl said evenly as he examined the controls. He could handle it from here.\n\nThe leader looked at his second in command and snorted. \"Yes, but only when they know their place.\"\n\nSkarl looked at Jaas. \"Oh, he was terrified. You smelled his fear too.\"\n\nThat brought a smile to Jass' face but they had much to do. \"Show me.\"\n\n\"The first reference I found was actually footage of SennLann Du Kess off planet!\"\n\n\"WHAT?!?\" Jaas roared in shock.\n\nSkarl glanced at him and nodded. \"Two advisors to, then Prince Regent FennLann, FennHark De Kurk, Councillor of Long Sight and FennDurr De Dent, Councillor of the Fist smuggled the Princess off the planet. Their intention was to sacrifice her on Altaria during the treaty signing and start an incident that would lead to war. The plan was poorly conceived and its implementation was even worse and led to this.\" He started the playback.\n\nThey saw the Prince Regent confronting the two large but older warriors. Behind him was SennLann and Jaas' eyes widened as he took in her unique ebony coloring and beauty. He wanted her! She was clinging to an odd creature with horns.\n\nFennDurr attacked the Prince and FennHark went for the Princess but the horned one grappled with him instead. They watched in shock as it killed Fennhark with its horns and then knocked FennDurr over the balcony railing.\n\nBoth Jaas and Skarl cried out in disgust when the Princess proceeded to mate with the creature with the horns. Skarl slapped the button to stop the playback.\n\n\"What corrupting powers does that beast have to twist the Princess' mind like that?\" Jaas growled as he looked a little ill.\n\nSkarl shook his head as he growled to himself about having more images in his head he would never be free from. He found the second clip and looked to Jaas. \"The second video is of a call between FennLann, the Queen of Altaria, and the horned alien. According to the title of the video... he's a diplomat on Altaria.\"\n\n\"He is not Altarian,\" Jaas asserted.\n\n\"True. We will need more information on him,\" Skarl agreed and started the clip.\n\nJaas cried out in outrage when he heard FennLann had shunned her. For such a lovely creature to be sentenced to death was yet another crime planted at the feet of the former king. His death was too quick- Jaas jolted in surprise when SennLann walked into the picture carrying two bundled infants! She was alive!\n\n\"Twins!\" Skarl gasped.\n\nThey gasped once more when this 'Jack' named SennLann and the children as his.\n\n\"No! NO! He cannot have the female and the twins are a blasphemy. Even though they're merely female they were born off planet. They must be eliminated.\" Jaas growled. He looked to Skarl. \"Get me more information on this 'Jack' creature. I need to know everything about it. Where it lives. Who protects it. Where it goes.\"\n\nSkarl nodded. \"I will get our spies on it.\"\n\nThe comm on the desk beeped and they looked at each other. Skarl pressed the button.\n\n\"There is a call from Queen Elissa of Altaria waiting. Should I put it through?\" said the nervous voice of the male who'd fled the room earlier.\n\nThe two warriors looked at each other. \"Yes,\" Jaas said as he held the eyes of his second in command.\n\nThe large screen changed to a scene of the Altarian Queen standing next to the horned creature. Jaas and Skarl were both frozen for a moment as it felt like perhaps they were being spied on too.\n\n\"Am I addressing Jaas Tenn Gunnk, Warrior Supreme of the Eastern Continent?\" the Queen asked politely.\n\n\"You are addressing Jaas Tenn Gunnk, Warrior Supreme of Phem Kalos. Queen Elissa?\" Jaas corrected and she nodded regally.\n\n\"Allow me to introduce my Ambassador, Jack Danner.\" The horned one nodded but his eyes never left Jass'.\n\nThe warrior felt the hairs on the back of his neck begin to bristle. The Ambassador's mane stretched down to his ass! And his horns... looked... different from the video they'd watched. He struggled to keep his revulsion from his face. \"My second in command Skarl Vonn Augg.\" He saw Skarl nod to the screen.\n\n\"You are the new ruler of Phem Kalos?\" Queen Elissa asked politely.\n\n\"I am.\"\n\n\"One imagines you have much to do during this transition. I called as it is customary at this time of year for the two leaders of our people to confer on the preparations for the annual treaty signing ceremony-\"\n\n\"Before any discussion of said activity can begin, it has just come to my attention that your... Ambassador employed some form of trickery to obtain the Princess SennLann Du Kess. Our citizen must be returned to us. Now.\"\n\nThe Ambassador's neutral expression was quickly replaced by anger. He finally spoke and his voice was deep and rough with suppressed rage. \"Either you're delusional or worse, a revisionist. SennLann was smuggled off Phem Kalos and brought to Altaria by FennHark De Kurk and FennDurr De Dent, two extremists trying to use her as a pawn to start a war. FennLann used an ancient Phem Kalos ceremony to bind SennLann to me to protect her from them. When FennLann became King and SennLann was no longer convenient, he used another of your delightful traditions to abandon his pregnant cousin, fully expecting her to die from the abandonment!\"\n\n\"Jack, enough,\" Elissa said, placing a hand on his arm. Jaas' revulsion could no longer be hidden and a snarl appeared on his lips. Elissa looked to him with a calm expression. \"The Phem Kalos Ceremony of Transference was witnessed and recorded. SennLann has been given Altarian citizenship by royal decree. Her twin daughters are citizens of Altaria by birth.\"\n\nA shiver ran down Jaas' back making his fur stand on end at the mention of the twins.\n\n\"Indeed enough! I've heard all I can stomach. If you don't deliver the exiled Phem Kalos females, relations between our worlds will be entering a very dark period,\" Jaas snarled.\n\n\"If you're determined to ignore the truth and follow your lies instead, if your path depends on the death of children, then you have no honor and cannot bear the title of Warrior!\" Jack snarled in return.\n\nWith a roar, Jaas slammed his fist on the comm, smashing it and severing the connection. He stood shivering and panting in rage and revulsion as Skarl stood silently at his side, doing his best to hide his shaking.\n\nJaas stared at the blank screen incredulously. How... how could that freak accuse him... him of having no honor!\n\n\"Get me information. I want SennLann alive. I want the twins exterminated,\" Jaas growled quietly and Skarl nodded with a wince. Jaas missed that and the troubled look in his commander's eyes.\n\n\"Jack Danner. I want to kill him personally,\" he hissed to himself.\n\nHe looked at the mess on his desk. \"And get me a new comm.\"\n\n-=-\n\nElissa blinked at the blank screen and looked at Jack incredulously.\n\n\"How was that helpful?\" she cried. \"You're supposed to be an Ambassador!\"\n\nJack held her eye and took slow even breaths. When he calmed, he spoke.\n\n\"Ambassadors maintain peace when possible. When it isn't, they gather information about the enemy to make an assessment of their weakness so they can pass this vital information to their leader. Juice has no intention of maintaining the peace. He's a war leader. He wants stuff and kills to get it. He is very easy to enrage and acts impulsively. I saw his xenophobia as clearly as you did. That said, it's highly likely he's deadly in a fight as he has no regard for life. He will not back down. Unless something is done, you will have war with Phem Kalos. The second in command had a look of intelligence about him. He definitely flinched when I mentioned the children. He might be persuaded to turn on his leader but it depends how much of his leader's craziness he's swallowed.\"\n\n\"Did... did you call Jaas 'Juice'?\"\n\n\"I did.\"\n\nElissa stared at him in confusion. \"Why?\"\n\n\"He's overly aggressive. He's prone to violence. He's obsessed with strength over everything else. On Earth there are people who take drugs to enhance their ability to grow muscle tissue to get stronger. We call this 'juicing' and the side effects of doing it match his behavior. You can't reason with a juicer. Their rage is too close to the surface.\"\n\nElissa looked at Jack and wished she could deny his assessment but she was afraid he was right. It was going to be her task to convince the Gate Network council that the actions they would need to take were purely defensive and they were already working under a cloud of suspicion. But she had to put that aside for now as she had to reach out to the Wuu and let them know how poorly the call went. The Wuu were also within striking range of the Phem Kalos.\n\n\"Thank you for your assessment Jack. I need to speak with the Wuu leader now. Could you wait outside?\" she asked gently\n\nJack nodded and made his way out into the outer office closing the door behind him.\n\nHe dropped himself into a chair and went back over his actions in that call to see if he'd blown it. He knew his rage over what this monster did was going to taint his work as an Ambassador but the moment they'd locked eyes he knew beyond a shadow of doubt that there would be no negotiating with him. No way to convince him to stick to the path of civilized behavior. He had that fervor about him that said he was on the path to glory and would let nothing stand in his way.\n\nHe felt the eyes of Elissa's assistant on him and looked up to see her nervous gaze. He realized he was snarling and baring his teeth. He immediately composed his face. \"Sorry about that,\" he mumbled.\n\nHe was worried about Elissa and the task she had ahead of her. Her people were pacifists. They were up against a predator of the worst kind. She also had the trouble with the Gate Network officials being on her case. Aggressive military activity was a quick way to discover yourself cut off from the rest of the Network. Nobody wanted that.\n\nThe phone on her desk chirped and the assistant listened to it for a second before looking to him. \"Ambassador Danner. Queen Elissa would like you to join her again.\"\n\nHe raised his eyebrows in surprise as that must have been a short call with the Wuu! He stood and let himself into her office again and saw she was standing before the display. Typical for the race, the Wuu was standing much too close to the camera and its image filled the big screen. They enjoyed representing themselves as larger than life.\n\nElissa gestured for him to stand next to her so he did.\n\n\"Greetings, Jack Danner,\" a mechanical translator's voice said.\n\n\"Greetings, Wuu Leader,\" Jack returned. The Wuu weren't really fans of fancy titles.\n\n\"Queen Elissa has explained that the Phem Kalos appear to be gearing for war. Or at least they have a leader who intends to. I would hear your impression of this being,\" it asked.\n\n\"He calls himself Warrior Supreme. He's defeated the only force on his planet capable of fighting back and I understand he slaughtered all of the warriors. He has no more opponents. What do warriors do when they've pacified their home?\" Jack asked.\n\nThe Wuu purred. \"They visit their neighbors.\" Jack nodded. \"Queen Elissa, you will have difficulty making any military preparations, even to protect yourself. I would speak for you at the Gate Network council meeting.\"\n\nQueen Elissa nodded to the Wuu with a smile. \"Every bit of help will be appreciated.\"\n\nThe Wuu paused for a moment then addressed Jack. \"I received word that you defeated a nine metre Dynast Class Skrahak, singlehandedly. What weapon did you use to do this?\"\n\nJack smiled making sure he displayed a lot of teeth. He reached up and pulled the bone caps off. \"The weapons I used were destroyed in the hunt. The following day my horns fractured along stress lines and my body shed them. I'm told my new ones are far stronger and more resilient than the originals.\" He tipped his head forward to display the black horns, the deadly tips plain to see.\n\nThe Wuu made an odd surprised sound followed by loud purring. \"I would very much like to hunt with you one day!\" Jack nodded to the leader with a toothy grin causing it to purr again.\n\n\"Queen Elissa, the Wuu pledge to assist the Altarians in any way we can should the Phem Kalos decide to take military action,\" the leader said and Elissa graciously bowed.\n\nThe Leader turned to Jack once again. \"I did some research and saw the footage of you defeating two of Phem Kalos' fiercest warriors at a Treaty Signing ceremony. I find this irony to be... delicious.\" Jack just nodded with a smile which got more purrs. \"While peace is always preferred, we will be ready if that isn't possible. Our fleet of ships stands ready.\" With that, it signed off.\n\nElissa looked at Jack with a worried expression. \"My allies live up to their reputation of having a blood thirsty nature.\"\n\nJack held the Queen's eye. \"Humanity's veneer of civility is paper thin as well. But there are times when that isn't a negative.\" He saw she was unhappy with the decisions she was going to have to make. Maybe he had something more positive for her. She needed to have a little happiness in her day.\n\n\"Have you seen my report on the Harruushans?\" he asked\n\nShe smiled and nodded. \"Yes, they sound lovely.\"\n\n\"I think it would be an excellent idea to send a delegation of Altarians to their planet to meet with the people and see just how compatible they are,\" he suggested.\n\n\"Would you join them?\" Elissa asked.\n\nJack paused to examine her expression but she was just showing simple curiosity. Of course, she was adept at hiding her true intent. \"No... I don't think so. It should be people who'd be living in close proximity to them. Just people meeting and getting to know people. We're talking about having the Harruushans living on an Altarian world. That's something to get used to. Or not. Chemistry is a tricky thing.\"",
        "Elissa beamed him a wide smile. \"Exactly my point. Sometimes the chemicals need a catalyst to get them to react. Jack, you're a very reliable catalyst. I think you should be involved.\"\n\n\"Oh... well, uh, I suppose I could,\" he muttered.\n\nElissa nodded. \"It's settled then. Could I ask you to get that organized?\"\n\nHe blinked at her as he heard a dismissal in her request. \"Sure. OK.\"\n\nJack left the office wondering what just happened. He thought he'd be delivering her something to get her mind off the looming crisis with the Phem Kalos and instead he was walking out with another project.\n\nHow did she do that?\n\nChapter 7\n\nFive days later Jack found himself leading a group of twelve Altarian volunteers through a Gate with a special guest at his side. He wasn't sure of the wisdom of bringing such a newbie and homebody with him on a field mission but Diana had begged to join him ever since he'd gotten back from Elissa's office with the mission ball in his court.\n\nThey were only going to be visiting for five days and it was a meet and greet so they weren't going to be doing anything too physically strenuous. He grinned as he knew he should be giving Diana more credit as she worked out regularly in the building's gym. She wasn't a couch potato by any stretch but her endurance and cardio could probably be better.\n\nDue to her formidable chest proportions Diana hoped she wouldn't be doing any running. She'd brought her sports bra but wasn't looking forward to putting it on. For now, she was wearing one of her Altarian gowns and aside from looking nothing like an Altarian, she fit right in.\n\nThey'd been assured that the sun's higher energy output would not harm them for the limited time they would be there.\n\nThe group's limited baggage had been sent through in advance and had been delivered to their final destinations.\n\nAs they arrived on the other side of the Gate, their guides, Dann and Juul, rushed forward to meet them, grinning excitedly.\n\n\"Welcome to Harruusha!\" Dann gushed. His eyes first went to Jack's horns then to Diana's breasts and widened in surprise.\n\nJack nodded to Dann as he watched Diana's expression which was priceless. Oh yeah, the old fantasy was alive and well. She was gaping at Dann without saying anything so he touched her arm and she jolted. \"Hello!\" she blurted as her face flushed pink.\n\nJuul giggled at Diana's wide-eyed look then she glanced to Jack.\n\n\"May I introduce my very good friend and mother of one of my children, Diana Haven.\" Dann reached his hand towards Diana, palm forward and fingers pointing skyward. Jack showed her how to touch palms then she did it with Juul as well.\n\n\"We were so excited when you contacted us to take this first step!\" Juul said to Jack with twinkling eyes.\n\nJack nodded then introduced the remaining members of their party. They came from all walks of life on Altaria. Most impressive to Jack was the presence of a male. When they'd met on the Altarian side of the Gate, Jack had recognized the diminutive male immediately. Numell had taken control of his life after his last meeting with Jack outrunning the falling GowGow tree. He now had a job! He worked for a courier company delivering packages and his confidence had picked up significantly. He didn't have many male friends but his female ones compensated for that quite well.\n\nThe goal would be to integrate the Altarians into the lives of Harruushans working similar occupations so they would have that commonality to begin with. Jack and Diana would visit each periodically over the next five days to get status updates and just generally see how they were getting along. It wasn't a hugely scientific experiment but Jack thought it might get them some understanding of each other.\n\nDann and Juul had taken the listing of occupations and had found matches within their local community willing to take in a visitor. The Altarian would live with the host for the five days. If all went well, they would plan a visit for the Harruushans on Altaria.\n\nJack saw the group of locals enter the chamber. The Harruushan diplomats passed each before Jack and Diana to touch palms and gawk politely at each other.\n\nThere was a variety of heights but most had the sleek and slim muscles of the diplomats. The range seemed to be from 5' 8\" to 6' 8\", minus their ears of course which rose skyward another two feet at least.\n\nOne of the shorter Harruushans brought up the end of the line and stopped before Jack. \"You two aren't Altarian,\" the female blurted.\n\nWhile the coloring of their fur was largely uniform Jack spotted differences in the face shape, eye shape and color, body proportions, and patterns within their ears that gave each their individuality. This female had intensely blue eyes and a flattened nose with a slight overbite. Jack thought she was definitely cute.\n\n\"No, Diana here is Human while I'm a mix of Human and Altarian. We both live on Altaria though,\" he responded.\n\nThe group made happy noises as this was proof that the Altarians weren't averse to hosting other races. A positive sign already.\n\nDann got the show going by calling out names from Jack's list. As each was called they were paired up with their counterpart on the Harruushan side. Once this was complete each waved to Jack, Diana, Dann and Juul and made their way outside. Finally, it was just the four of them.\n\n\"You two are with us. We'll give you a tour of the city tomorrow and the following day we'll begin visiting the others. Does that sound good?\" Dann asked. Jack and Diana nodded and smiled.\n\n\"Dann and I have an apartment right in the center of the city as it's close to where we work at the new Embassy building,\" Juul explained.\n\n\"Outgrew the old office?\" Diana asked.\n\nDann smiled. \"No, the office is new because we never had one before. We set up the embassy about seven years ago and have been visiting other planets on a regular basis since then trying to find someone willing to hear our case.\" He gave them an embarrassed look. \"Earth refused to speak with us,\" he said awkwardly.\n\nJack nodded. \"Don't feel bad. They refuse everyone. They're an insular bunch. They don't get along with each other much less people from off planet. Truthfully, they aren't all bad but in mobs? Not so civilized.\"\n\n\"You two must be those exceptions!\" Juul said with a grin.\n\nDiana grinned happily at her. They left the Gate Terminal and walked into... jungle.\n\nSeeing their confusion, Dann smiled. \"The Terminal is on the outer edge of Ghan, our capitol city. Most of the planet is covered by growth like this. It makes for difficult ground travel and when the Tully still existed it gave them cover to attack us from.\"\n\nDiana looked at the dense jungle around them with trepidation. \"The Tully are extinct?\"\n\nDann nodded. \"Long gone! There are still dangers in the jungle but the apex predators were wiped out. Every last one. Our people also clear the jungles around the cities and towns of most of the dangers in case the children get out and go exploring.\"\n\n\"Do you two have children?\" Diana asked.\n\nJuul and Dann burst into laughter. The male touched Diana's arm. \"I'm sorry, we should have said from the beginning. We're siblings.\"\n\nDiana flushed a bright pink in embarrassment but Jack just gave her a quick hug and smiled at her.\n\n\"I'm so sorry,\" Diana said with a smile as she waved at her face to cool her flushed cheeks.\n\n\"How do you do that?\" Juul said looking closely at Diana's face. \"How do you change color?\"\n\nJack grinned as Diana was too flustered to speak. \"It's an automatic reaction Humans have for certain emotions or intense sensations. A temporary rush of blood to the skin of the face or neck. It's called blushing when it is tied to embarrassment. Diana doesn't have any real reason to feel that way but she's nervous about traveling to new worlds and meeting new people and cultures.\"\n\n\"You haven't visited any other planets in the Gate Network?\" Dann asked.\n\nJuul was touching Diana's cheek to feel the heat, with her permission of course. Juul's eyes widened as she felt how warm it got. Dann looked for permission to touch as well and Diana nodded timidly. The male touched Diana's cheek and Jack saw her nostrils flare and her lashes flutter at the feel of the soft finger pads. Dann seemed a little dazzled by Diana's soft, bare skin. His eyes dropped to her tits once more and widened as he saw the obvious projections under Diana's gown.\n\nJack stepped in before things got awkward out here in front of the Terminal building. \"So how long a walk is it to get to the city center from here?\"\n\nDann's eyes snapped to Jack as he realized he was staring rudely. He relaxed when he saw Jack wasn't acting jealous. \"It's too far to walk so we will take the underground transport. Oh! Are you claustrophobic? Are you ok in crowds?\"\n\n\"I'm good. Diana should be ok as well,\" Jack offered.\n\n\"Good, it's this way,\" Juul said. She and Dann led the way.\n\nAs he followed, Jack put his arm behind Diana's back to guide her forward and to make it easier to whisper to her. \"Are you ok?\"\n\nHer eyes flashed up to his. \"Am I making a fool of myself?\"\n\n\"Not at all. I know what to look for so I can see how much you're affected by their touch,\" he replied with a gentle smile.\n\nShe caught his expression and a slight smile appeared on her lips as well. \"So much better than the cartoon!\"\n\nJack snorted quietly and they continued on.\n\nThe jungle was quickly reduced to well-groomed and artistically shaped and placed flowers and vines in planters... everywhere. While the volume of foliage definitely decreased it was very much part of every structure. Out here on the outskirts of the city, the buildings all seemed to be low rise, single or dual level dwellings. They saw children, large groups of them, running here and there around the yards of the homes. These groups caught Jack's eye and he had to smile, thinking of his own kids at home. Dann and Juul waved to the watching parents and to the kids as they led the way through the neighborhood.\n\n\"Suburbia,\" Jack said to himself but Diana heard and grinned with a nod.\n\nJuul's ears were pointing in his direction and must have caught that as she looked back at Jack curiously. \"What is 'suburbia'?\"\n\nJack gestured all around them. \"It's a term we use to refer to the expanse of family dwellings and sprawling village like developments on the outskirts of our own cities.\"\n\n\"Oh! Yes, we have a lot of that!\" Dann nodded with a grin. \"Many don't like living within the center of the city.\"\n\nThey passed a school with an enormous play field which made sense considering the physical needs of the kids with so much energy to burn off. Jack filed that information away for later discussion with Queen Elissa.\n\nHe looked to Dann. \"Is there a reason you placed your Gate Terminal so far outside the core of the city?\"\n\nDann looked back at him with a wince. \"There was no available space in the core when the Tik found our planet and offered us a Gate. We have two terminals. The one we came through is for people. The cargo Gate is on the northern edge of the city. It's less populated there. We're on the eastern side of the city and here is the underground transport terminal.\"\n\nThey went through the doors of another low rise building covered with flower boxes, then across a wide lobby to a bank of elevators.\n\nThey stepped into a car and moved to the back as seven more Harruushans crowded in. Diana peeped in surprise at the tight quarters but smiled to their hosts to show them she was ok.\n\n\"Bend your knees and brace yourself,\" Juul said in warning as an afterthought.\n\nThe floor seemed to drop away.\n\nDiana gave a little scream and Jack wrapped his arm around her as she clung to him. \"Bend your knees,\" he said calmly as he held her eyes. She calmed then their weight came back quickly and then some. For the Harruushan's long spring-like legs this was nothing but Jack grunted with the extra load he was carrying.\n\nFront and rear doors opened and they moved with the flow to allow the next group who would use it to get to the surface.\n\nJack was attracting loads of attention from the other travelers but he was used to that.\n\nDiana was wobbly and drew concerned looks from their guides.\n\n\"Are you well?\" Dann asked Diana who just nodded.\n\n\"Our elevators move at a much slower pace with no free fall.\" Jack explained.\n\n\"Our apologies! The elevators are set to the most expedient speeds to manage the flow of our people.\"\n\n\"It's fine. I was just surprised,\" Diana explained.\n\nThey moved on to the platform which was beginning to fill. \"We want the R28ALN,\" Juul said looking at a large display on the wall. \"Tunnel twelve! It's almost arrived! Let's hurry! Follow!\"\n\nThe Harruushans surged forward and Jack took Diana's hand to help her keep up. Her other arm was wrapped across her chest. Dann looked back then immediately moved to Diana's side. \"May I?\" he asked. Jack looked at him curiously as Diana nodded. Then she was up in the tall diplomat's arms and he was racing after his sister. Jack grinned and put on a burst of speed to keep up. There were a lot of travelers in the passage but they seemed to know where to walk or run to avoid collisions. Then Jack noticed their ears twisting and turning constantly. They must be getting locational updates. He was at a distinct disadvantage here.\n\nTunnel twelve was a good distance down the corridor but they finally arrived and dipped through the entrance to arrive at the platform just as the train pulled into the station. The platform was packed as Juul and Dann stopped at the back of the crowd. The male set Diana down on her feet and she clung to him for a second as she wobbled, pressing her tits against him. Jack saw Dann's ears tremble and Juul chuckled at her brother's excited state.\n\nThe doors opened and the crowd surged forward. Their group followed and just managed to squeeze in before the doors closed behind them. Diana was once more pressed up against Dann's chest and Jack was squeezed up against her back. Juul was pressed against Jack and Diana's side. There was barely room to breathe much less move.\n\n\"Oh! Your face is changing colors again!\" Juul said quietly in delight.\n\nJack snorted gently and glanced out the window to see the tunnel lights flashing past rapidly. The train was already moving. He hadn't felt anything.\n\n\"Inertial dampeners?\" he asked Dann around Diana's head.\n\n\"Yes, can you imagine how uncomfortable this ride would be if the train was constantly throwing our bodies against each other?\" Dann replied.\n\n\"Mmmm...\" Diana grunted.\n\n\"Are you well, Diana?\" Juul asked.\n\n\"Yes... it's just... very close in here... A lot of touching. Not used to it,\" she managed, her voice a little breathy, and she glanced out the corner of her eye at Jack.\n\nDann smiled. \"The Harruushans know something about living in close quarters and have no issues with touching.\"\n\n\"This is a good thing considering your population levels,\" Jack suggested and Juul grinned with a nod.\n\nJack noticed the ears of the Harruushans around them were finally still. Relaxed. In a group, tightly jammed together in the train, they were at peace. No worries about predators or running into others. They almost seemed... content.\n\nThe ride to the city's core was fast and mercifully short as Jack could feel Diana's gradually increasing desperation. The stimulus was becoming too much. Her body trembled and she ever so slowly rubbed her ass back against Jack. This wasn't keeping him calm either. When the train entered a station and the dampeners disengaged, the opposite side doors opened and the press of bodies eased as the train emptied.\n\nJack put his arm around Diana and walked off the train with her, following their companions. They made their way out of the central terminal, amazed by the flow of citizens rushing here and there. So many!\n\nDiana was calming down but clung to Jack's arm for his solidity.\n\nThen they were outside... or at least outside the terminal building. Towering buildings surrounded them on all sides. Only the smallest glimpses of sky could be seen. Walkways between the skyscrapers could be seen above them in the hundreds. Flowers and vines were... everywhere. The air carried the light scent of the flowers and there was none of the industrial scents one might expect in such a crowded urban center.\n\n\"Oh my god...\" Diana sighed.\n\nCleverly placed and aimed lighting highlighted the blossoms as if fireworks had exploded all around them then froze in time.\n\nDann and Juul grinned at their awestruck expressions.\n\n\"Welcome to Ghan!\" Juul said happily.\n\nOnce they began moving along the pedestrian way, the impression of fireworks became amplified by their movement. They were at risk of being dazzled if they didn't focus on the backs of their guides.\n\nFinally, they turned into a doorway and found another elevator bank.\n\nDann looked to their two off world guests. \"Remember, more gravity at the bottom and less at the top. Bend your knees and brace yourselves.\"\n\nThe door opened and they entered. Once more Jack assisted Diana but she was ready for the experience this time so she remained silent and gave Jack a grin at the top.\n\nDann caught himself staring at the dramatic movements of Diana's large tits inside her gown. Jack gave him a grin and Dann's guilty look eased.\n\nWhen they left the elevator they found themselves in a bustling shopping area.\n\n\"There is a wonderful restaurant just up a ways. It's our favorite spot and we've reserved a table with an excellent view.\" Dann said gesturing up the wide hallway.\n\nAs they made their way Jack and Diana eyed the shops offering a wide variety of goods from electronics to handcrafted art. The Trade Commissioner in him made Jack catalog what he was seeing in terms of viability for the Altarian market. He smiled at Diana and she grinned excitedly back at him. He recalled that this was only the second time she'd been in an 'alien' market. Her first shopping trip on Altaria had been a burst of excitement for her as well.\n\nThey reached the restaurant and the host greeted their guides with familiarity. They were regulars, then. Juul discreetly waved to an older Harruushan female standing before the kitchen doors who grinned and ducked back into the steamy interior. Jack scanned the staff and the customers at the tables and his mind clicked with an intuitive leap.\n\n\"This is a family run business, isn't it? Your family?\" He asked with a smile. Diana glanced at him in surprise.\n\nDann and Juul's ears twitched and they stared at Jack in shock. \"How...\" Dann asked.\n\nJack shook his head. \"I can't tell you how I know, but I'm picking up a... similarity between you two and the staff.\"\n\nHe looked out the entrance to the crowds passing by in the busy hallway but the impression didn't surface there. He looked back to the diplomats and the young female working as the host and it clicked again. He still had no idea as he shrugged while they all watched him curiously. He thought back to their trip to get here to see if he'd felt it any other time. The children running around on the yards. There was... a synchronicity to the movements of their ears. He'd become sensitized to this from working with Adina and Zaina's shared perceptions. Harruushan family groups might share a similar bond. Maybe it tied into their comfort in groups but he was just speculating. Again, he put that aside as something to discuss with Elissa.\n\nThe host handed one of the table servers a tablet and their group followed her to the far side of the restaurant to a table next to huge windows. Diana glanced down and squeaked in surprise as they were very high up. She turned to Jack. \"The elevator ride didn't seem that long! How could we be so high up?\"\n\nDann nodded to the windows. \"This side of the building faces the Deeps. We entered from the other side. There is a very deep canyon running north to south through the capitol. It was incorporated into the city's plan. There's a very strong, fast moving river in the bottom of the canyon which offers plentiful hydro electric energy. We also tap into geothermal energy.\"",
        "They placed their orders, stir fry vegetarian meals with spices that shouldn't give them any issues, and took in the scenery.\n\n\"It's all so... different,\" Diana said, struggling to find words to express the experience for her.\n\nJack chuckled. \"I have to get you to travel to more worlds with me. You liked Chrystan. Well, not the snow but the people and the hot spring resorts.\" He remembered the first time they'd visited the unisex locker room and she discovered she would be walking around nude in front of all the Shreen. She'd been almost beside herself with excitement when they'd returned to their room.\n\nDiana's face flushed again as she gently slapped his arm but her eyes were twinkling merrily. She'd enjoyed the communal sleeping pit experience as well. \"The Shreen were lovely.\"\n\n\"We don't care much for cold weather either,\" Dann said with a shudder.\n\nDiana grinned. \"Something else we have in common! I grew up in a very warm place on Earth so I detest being cold. Chrystan was very cold!\"\n\nJuul smiled. \"Not a place we'd choose to petition at.\"\n\nDinner arrived and they enjoyed their meals as conversation turned to how they produced their food in vast hydroponic gardens. Jack described how the Shreen did the same.\n\n\"If it weren't for our preferred climate differences it sounds like the Shreen and the Harruushans would get along very well!\" Dann said.\n\nJack nodded in agreement. \"Except, the Shreen never leave their planet.\"\n\n\"Oh! Because they prefer the temperature?\" Juul asked.\n\nJack shook his head. \"They are... connected to their home. For them, the forced migration from their original home world to Chrystan was traumatic. If Chrystan hadn't been so hospitable to their needs I think they might not have survived the experience. I can't really express the significance of their... integration with their home. They are not travelers. They're fine with the occasional visitor but the idea of wholescale tourism failed to take root.\"\n\nDann shook his head. \"For us, a place is just a place. There is no significance from one to the other as long as both support life.\"\n\nJack nodded his agreement and pushed his empty bowl back. \"That was wonderful! My compliments to the chef!\"\n\n\"Why did the Shreen have to leave their planet?\" Juul asked tentatively.\n\nJack saw she appeared to be nervous about the answer and he wondered why. \"Their sun suddenly and mysteriously became unstable. Like yours, it was suspected that the Allsa Komanae had somehow interfered with their sun. The Tik found a reference to Chrystan in the Altarian archives and the Altarians gave them the planet. It was too cold for their use,\" Jack explained.\n\nEars trembling and eyes wide, Dann made an odd sound. \"What... what happened to their sun?\"\n\nJack looked to the siblings who were both leaning forward waiting for his answer. He understood now. They were hearing what might have happened to their people. \"The sun went nova and consumed the planet. Everyone was off before it happened though.\"\n\nBrother and sister shared a frightened look.\n\n\"The Allsa Komanae weren't successful with your sun though and Jack put an end to them,\" Diana blurted to ease their fears.\n\nJack gave Diana a stern look as genocide wasn't something he was proud of. She immediately looked contrite.\n\nDann and Juul we're back to staring at Jack but now it was confusion not fear that showed in their large eyes.\n\n\"We'd heard they died off after the Altarians invaded their home world and believed the rumors that the Altarians were the ones responsible,\" Dann said quietly.\n\nJack saw he was stuck. If he denied his involvement then the Altarians were labeled as murderers. Alternatively, he could own up to his guilt. There was no real question in his mind.\n\n\"The Altarians had nothing to do with the death of the Allsa Komanae. I killed them.\" It came out with more ferocity than he'd intended but there was a lot of emotion involved for him. He rarely had nightmares about his time with the Allsa Komanae anymore and he was over most of his other emotional trauma, largely due to the compassion of the Shreen.\n\nHe felt a hand touch his and looked down to see it was Diana's. Then a long fingered hand, furred with short, black painted claws rested atop his other hand. He looked up into the gentle eyes of Juul.\n\n\"Did they give you that collar?\" she asked gently.\n\nJack cleared his tight throat. \"Yes. The Altarians were on a rescue mission. They found me and the other slaves and brought us home.\"\n\nDann looked outraged. \"So why are the Altarians being accused of invading?\"\n\nJack sighed. \"The Gate Network worlds know it was a rescue mission but they don't like the preferential treatment the Tik gave Queen Elissa during the event. The Tik are the only race of Sentient Mechanicals found in the Network. They control the means of travel between the worlds and prevent its use for military purposes. This means everyone is deeply dependent on them. They are neutral in all matters of interplanetary foreign policy and must remain so. When I was kidnapped by the Allsa Komanae, the Tik were aware that I wasn't the only one who'd gone missing. They value life more than any race and decided to assist the law abiding and peaceful Altarians to enter Allsa Komanae space with 'protection'. The fact that this protection was comprised of some of the hardest, most dangerous soldiers from Earth severely strained the good will of the other members of the Gate Network. For some reason, humans are not well liked in the Network. We're considered the 'Barbarians at the Gate', I believe the term goes. So, because of all of this, Altaria is being punished. Politics.\"\n\nThe table went silent for a moment as they processed this information.\n\n\"I'm sorry Jack,\" Diana said quietly with a sad look on her face.\n\nJack rubbed his face and shrugged, forcing a smile back onto his lips. \"It's fine. Our young friends are learning new things about how things work with the Gate Network. Not everything they learn is going to be positive. There's a lot of inertia and fear amongst the races who make up the Network. Change is not seen as a good thing and being on the side of what's right and good doesn't necessarily guarantee fair treatment from the others. That's life. Roll with the punches and try not to take it personally.\"\n\nThe older Harruushan female from the kitchen arrived at the table with a plate of small cakes.\n\n\"For our special guests,\" she said with a sweet smile on her face. Her fur definitely had much more grey than brown in it and her movements were slower than her children's.\n\n\"Jack, Diana, may I present our mother, Helas,\" Dann said with a gentle smile.\n\nThey touched palms with the senior.\n\n\"A most wonderful meal!\" Jack said, drawing a happy smile from her.\n\n\"An after dinner refresher,\" she said gesturing to the tray. They all picked up one of the cakes which proved to be light and crisp pastry on the outside and minty cream on the inside.\n\nThe mint was very refreshing and they nodded in appreciation.\n\nThe mother flicked her ears and a group of her children arrived to clear the plates. An unspoken language? With a final nod and smile, the mother moved off in the direction of the kitchen.\n\n\"How about we finish off with some herbal tea at our apartment. We should be able to catch the sunset from our balcony,\" Dann suggested.\n\n\"That sounds very nice,\" Jack agreed and Diana nodded.\n\nThey left the restaurant, waving at the younger siblings working the tables. They went back to the elevator bank and went up to the top floor.\n\nAs they walked down a well-lit corridor with apartment doors widely spaced apart, Dann spoke to them over his shoulder. \"Normally we wouldn't get such a spacious apartment but as diplomats we have a second bedroom for guests.\"\n\n\"You don't put guests in a hotel?\" Diana asked.\n\nJuul glanced back at her in concern. \"I'm sorry. We don't have hotels on Harruusha. The concept of having living spaces that no one lives in permanently just doesn't fit our culture. If you are uncomfortable with sharing the apartment with us we can let you have it to yourselves and we'll find alternate sleeping arrangements.\"\n\n\"No! It's fine! I have no issues with sleeping with you- I mean, with sharing your apartment!\" Diana blurted and blushed furiously.\n\n\"Ah! That's the brightest shade of pink yet!\" Juul exclaimed with a wide, delighted smile.\n\nDann unlocked the door and led them inside the apartment. They were in a small vestibule and the Harruushans stepped into a foot bath just to the right of the door. As they wore no shoes they cleaned their feet when they entered their home. Jack and Diana undid the releases on their shoes and slipped them off. This earned them an appreciative smile from Juul who then led them further into the apartment.\n\nJack immediately grinned as he saw the layout largely matched the living space of the Shreen. Directly to the right was a small kitchen with a dining area before it. Straight ahead was a wide, cushioned conversation pit. To the left were two doors and Jack would lay odds that one was a room for hygiene and the other was a bedroom. On the other side of the dining area to their right was another door which was likely the master bedroom. Beyond the pit was floor to ceiling windows and a set of doors leading to a balcony as wide as the apartment. Beyond that was a view that took his breath away.\n\n\"Wow! Look at that view!\" Jack exclaimed. Diana made a delighted sound.\n\nDann grinned at them and led them around the pit to the balcony doors. They stepped out and Diana suddenly shrank back.\n\n\"What's wrong?\" Jack asked.\n\n\"There's no railing!\" she squeaked.\n\nDann walked to the edge and reached out a hand. The air before his hand glowed and brightened as he pressed. He looked back at Diana. \"Energy shield. Keeps us from falling out and keeps stuff on the outside from getting in. It also doesn't block this incredible view of the rooftops of Ghan.\"\n\nJack realized they were on the tallest building in the center of the city looking west. The roof tops of the towers around them generally became lower the farther out from the center you went. It almost felt like a slope gradually descending to the suburbs. Like... if you had powerful enough legs, you could leap from rooftop to rooftop and flee the city. Smart.\n\nThey found seats on the lounge chairs arranged two to a side but angled to face the sunset as well as the opposite chairs.\n\n\"I'll prepare the herbal tea,\" Juul said as she ducked back into the apartment.\n\nThey made themselves comfortable and relaxed back into the cushions.\n\n\"Ah, this is nice,\" Jack sighed. Dann smiled.\n\nJuul quickly returned with four mugs on a tray. She placed them in the holders on each chair. \"The herbs in the tea have a soothing, relaxing effect much like Earth's cammo- camile?\" she tried.\n\n\"Chamomile?\" Diana asked.\n\n\"Yes! Chamomile,\" Juul finished gratefully.\n\n\"You've done some research,\" Jack said approvingly.\n\n\"Well, we are diplomats, after all,\" Dann responded with a smile.\n\nThey sipped at their tea as they watched the setting sun paint the scene laid out before them with a warm orange light.\n\nJack noticed he was definitely feeling relaxed after only a few sips. He looked over at Diana and saw she was looking very relaxed. He touched her hand as she went to lift the mug again. \"If you drink any more you'll fall asleep out here,\" he said with a smile.\n\n\"Is the tea not to your liking?\" Juul asked with concern.\n\n\"It's delicious!\" Diana purred.\n\nJack grinned at her then looked to their hosts. \"It is really good, just much more potent than Chamomile on human metabolisms. I'm a mix so it's not as potent for me.\"\n\n\"Is it common for brother and sister to share an apartment?\" Diana blurted, wide eyed.\n\nDann grinned. \"No, normally we'd find mates and start a family of our own but that's what's leading Harruusha to its present predicament. Over population.\"\n\n\"When we became diplomats we pledged an oath to remain single. We'd be leaving the planet for long periods so it wouldn't be fair for those we left behind,\" Juul said then looked to Jack guiltily as he was also a diplomat. \"I- I didn't mean to imply anything-\"\n\nHe raised his hand to stop her apology. \"No offense taken.\"\n\nDann seemed to have something on his mind and looked at him closely. \"We research the cultures of the people on the planets we are going to petition and Earth has many diverse cultures. One of the common threads we found was pair bonding. Exclusive relationships. I don't mean to judge you in any way. I'm just curious. Your behavior towards Diana doesn't match what I was expecting to see. She has born you a child yet you show none of the possessiveness I was led to believe exists in a human relationship.\"\n\nJack smiled at Diana. \"Make no mistake. I love this woman completely. I'd die for her and I'd kill to protect her.\" The woman made a sweet sound and jumped up from her chair to join him on his. She cuddled in next to him and he gave her a kiss. He turned his face back to his hosts. \"Humans can be a pretty volatile bunch, in our actions and emotions. That said, I quickly learned when I began to live amongst the Altarians that I didn't feel this possessiveness and jealousy that my race is so famous for. When Diana came to live with me on Altaria I let her know right from the beginning if we were to have a relationship it wouldn't follow human 'norms'. I have relationships with a number of Altarians, one Phem Kalos, and a female of a race we haven't identified. My relationship with Diana gives me an emotional foundation that I don't have with the Altarians.\"\n\n\"We understand you have relationships with Altarians including the Queen. You are the male parent for some of her children.\" Dann glanced awkwardly at his sister but she just looked back at him curiously as she seemed unaware of the point he was making. \"You have sex with others... and Diana, you are not possessive either?\"\n\nThe woman looked at Dann and shook her head. \"Like Jack said, he told me in advance what I could expect from him. I- I made such bad choices when picking boyfriends before I met Jack. I picked men who didn't respect me. Men who mentally and physically hurt me. Jack loves me. He doesn't lie to me. He listens to me. He does have sex with others but that doesn't change his feelings for me. I can depend on him.\" She paused for a moment then grinned a little giddily. \"Jack said he wouldn't deny my finding pleasure in another's arms.\" Her eyes locked on Dann's for a moment and his ears began to tremble.\n\nJuul and Diana burst into giggles simultaneously and the moment was broken.\n\nDann grinned then the doubt reappeared on his face. \"You are teasing.\"\n\nDiana grinned but shook her head as she bit her lower lip.\n\nDann's eyes went to Jack curiously.\n\n\"We have no idea if Harruushans have social or personal taboos when it comes to interspecies sexual relations. I think we've made it pretty clear we don't,\" Jack said calmly as he watched their reactions.\n\nJuul's ears began trembling as well as she grinned at Jack. \"We are... very open to trying new things. I think my brother is very taken with Diana!\"\n\n\"Juul!\" the brother exclaimed then turned his eyes back to the woman he'd carried in his arms today. \"I confess to being... more than a little curious.\"\n\nJack could feel Diana trembling against him. She was clinging to him so tightly.\n\n\"Perhaps we could move inside to continue this conversation in privacy,\" he suggested.\n\nJuul nodded quickly as her grin widened.\n\nDann also nodded and everyone climbed to their feet. They paused for just a moment to take in the last rays as the sun slipped under the horizon.\n\n\"Lovely,\" Jack said as he looked away from the display to look into Juul's wide, delighted eyes.\n\nThey moved into the living room and Dann stood awkwardly next to the sunken conversation pit. Jack picked up on this and gestured to the cushions below. \"Why don't we just relax for a bit, get to know one another,\" he suggested and Dann smiled gratefully. Jack was picking up the idea that the male might be a first timer... which he supposed made sense considering his oath. He was curious about that.\n\nThey moved down into the large pit and Jack smiled. \"The Shreen have a very similar layout to their homes including a cushioned area like this.\"\n\n\"The more I hear about them the more I like them,\" Juul sighed.\n\nJack sat and leaned back against the pillows across from Dann. Juul and Diana shared mischievous grins then swapped sides so Juul was cuddled up against Jack and Diana was pressing her body against Dann's side. His ears were back to trembling. Jack's ears would have trembled too if they could as Juul felt very good against his body.\n\n\"The oath you two took, it doesn't prevent you from having sex, does it?\" Jack asked.\n\n\"NO- I mean, no, we can but we can't take a mate or have children,\" Dann blurted and explained nervously.\n\nJack nodded with a smile. From his behavior, he was fairly certain that Dann was a virgin. He wondered if Juul was the same as she seemed much more comfortable. He looked to Diana who was beginning to run her hands over Dann's chest, sinking her fingers in his fur and feeling the muscles underneath. He saw by her expression she was definitely slipping into her fugue state as her fetish kicked into high gear.\n\nHe looked to Juul who suddenly swung a long leg over him as she moved to straddle him and pressed her lips to his. Her body was so firmly muscled and yet so soft, it made for a delightful contrast. Her kiss was definitely inexperienced so he took her head in his hands and slowed the kiss to let them enjoy each other's lips. When he pulled back she had a dreamy expression on her face. Her eyes widened once more.\n\n\"Can we undress?\"\n\nJack smiled and nodded. For her it was just a matter of removing her kilt. He was wearing much more clothes. He was just taking off his shirt and she tossed her kilt up onto the rim of the pit. He saw the fur between her legs was darker then picked up the scent of her heat. Her ears were trembling as she reached out to run her fingers across his bare skin.\n\n\"Ooo, so smooth!\" she purred.\n\nJack heard Diana's gasp and saw her gown was off. Dann had her big tits in his hands as he stared at them with wide eyes.\n\nJuul was tugging at his pants so he undid the belt and fasteners and she made a happy noise as they slid down his legs.\n\nDiana cried out and threw back her head as she held Dann's head against her right tit. Then it was Juul's turn to exclaim in delight as she tugged Jack's underwear down.\n\n\"So thick!\" she purred as she wrapped her fingers around his erection. When her tongue stroked across the head Jack gasped. Her tongue was rough! Not sharp or painful but way too much stimulation. She grinned up at him and he gestured for her to climb up once more.\n\nShe straddled his thighs, used her hand to line him up with her opening and pressed herself down against the head of his cock. He realized the darkness of her fur was due to how wet she was. She gasped as the head moved inside.\n\n\"AAAhhh, so thick! It feels like you're stretching me wide open!\" Juul moaned.\n\n\"If it's painful don't-\"\n\n\"No! It's not.\" Juul grunted as she forced more of him inside her. \"The feeling... of fullness... so intense!\" Juul finished with a gasp.\n\nJack took her face in his hands and kissed her as she undulated on his lap easing more and more of him inside. For Jack, she felt incredibly tight, hot, and silky soft. Finally, she had all of him and they held still, just getting used to the sensation. She pulled back and closed her eyes as she concentrated.\n\nHe glanced at Diana but she seemed to be doing ok. Her panties were off and Dann was naked as well. If the male was an example of the average Harruushan then he understood Juul's comment. His cock was a few inches longer than Jack's but had much less girth. It did have ridges. Then it was driving up into Diana as she dropped herself down on it. He heard her gasp and smiled at her sound of joy."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "romance",
        "group sex",
        "science fiction",
        "harem"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/jacks-true-calling"
}