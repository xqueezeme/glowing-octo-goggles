{
    "title": "When Wishes Come True",
    "pages": [
        "I started this story a long time ago but hit a block, unable to finish it. Almost as soon as I published 'First Contact: Into the Arena' I knew what I had to do, and the story finished itself. To any real runners out there, please understand that if I have to run from the couch to the refrigerator, I get winded, but I did my best to do the running justice. More than anything, this is a story of love and friendship. \n\nI hope you enjoy reading it as much as I enjoyed writing it, and as always, please, please, please, let me know what you think. \n\nYour comments are my lifeblood.\n\nOrigin\n\nWe had all talked about it and ultimately agreed, me, Mike, Janice, and most of all, Judy. It was her wedding after all and whatever she wanted was it.\n\nI could feel the tension as I stood in the back of the church with the rest of the wedding party; Mike and I in identical tuxedos. With the single exception that I had a rose in my lapel, we could have been twins; well there was him being a good four inches taller than me and outweighing me by a little over fifty pounds and being black. The rose signified I was the father of the bride, my ex, Janice, was as gorgeous as ever in her purple gown, her auburn hair done up off her shoulders, her green eyes sparkled, the rose on her breast matched mine. The two of them barely looked at me and I fully understood why, but Judy had had the final word, it was what she wanted.\n\nMike and I had been best friends since high school, we had run track together, he was a sprinter, 100, 200 and 400, I specialized in the middle distances, 400, 800 and 1500, we teamed up on the 4x400 relay where I was the number three and Mike was the anchor, or 'the hammer', as we called him; I always watched in amazement after I handed him the baton and he flew around the track for the last lap, embarrassing whomever else was unfortunate enough to be on the track with him. Mike had missed a shot at the Olympics by less than a second, the drunk for that one was as close to epic as it got.\n\nWe met Janice in graduate school, Mike was getting an MBA to go with his degree in Sports Management after a short stint with the Miami Dolphins, I was finishing up my PhD. In Literature and Composition and Janice was in her third year of law school.\n\nMike and I walked through the mall having just watched one of Steven Segal's movies, who knew which one, because they're all pretty much the same, just brain-dead mind-numbing entertainment, explosions, gunfights, and decent martial arts. I was stressing over a bad case of writer's block, and Mike thought that since my novel was a war story, some gratuitous violence would help, it hadn't.\n\nMike could still feel the funk I was in and decided the nuclear option was the only thing left, grabbing my arm, he dragged me into the first dress store we passed, right up to the first sales associate we saw,\" Miss, sorry to dump this on you like this, but my friend here is as depressed as hell, he dresses up a bit and damnit, he needs a new dress more than anything. Hook him up please before I kill him.\"\n\nMike knew about my dressing because it was kind of his fault, his big sister Anne was a fashion designer, up and coming and brilliant, she needed a model for one of her shows at the last minute and she and her brother had convinced me to do it, with my long, lean runners body, I would be perfect. With the wigs and makeup, nobody would know; the problem was, it had been a fantasy of mine for as long as I could remember and, once I had tried it, I didn't want to stop. The upside was I could always claim to have been custom fitted by one of the biggest names in the industry, and I did have a couple of her dresses in my closet to prove it.\n\nI glowered at Mike, smiled weakly at the sales associate, and didn't object.\n\nJanice looked at Mike and then at me, smiled and twenty minutes later, I had a cute sweater dress; just above my knees with a Henley top and long sleeves, some tights, and a new pair of boots to go with it. Janice joined us at the bar later and, of course, at the end of the night, I had to model for Janice. I didn't object to that either.\n\nIt had worked, I was now dressing every day, and my novel flew from my fingers into the keyboard, for the next eighteen months the three of us were near inseparable.\n\nI was the last one to finish. Janice had easily passed the bar and with Mike's MBA and NFL connections, they soon had a burgeoning business as sports agents. The same day my life's work, my novel, no my tome, my 500 page historical fiction masterpiece, my epic tale of love and war, victory and defeat, all wrapped in the Revolutionary War; Lexington, Yorktown, George Washington, Alexander Hamilton, was finally published Mike and Janice signed to represent, Demetrious Finley, a quarter back out of Alabama that was poised to go number one in the coming draft. The three of us had done our best to deplete our favorite watering hole of every bottle of Stoly they had and fully believed we had accomplished our goal, none of us were conscious enough to know for sure.\n\nThe Uber driver poured us out of his car and we staggered into the house we were all sharing heading for our separate bedrooms, when I woke up the next morning, naked, in bed with Janice, we discovered our celebration had gotten a little out of hand. A month later, Janice discovered she was pregnant. We did the right thing, getting married at the justice of the peace, her sister was her maid of honor and Mike was my best man. Judy was the fruit of that night and today was her day.\n\nIt turned out that the only thing epic about my novel was its abysmal failure, critics ripped it apart and sales were laughable, humiliated, I had crawled into a deep depression and made some choices that I still regret, paramount of them were going behind Janice's back and starting to take hormones and the fling I had with a man that picked me up in a bar when I went out by myself dressed to the nines. Janice found out about both and confronted me, the divorce was amicable if not friendly and I gave her everything.\n\nShe and Mike moved to New York taking Judy with them and I took a position as a professor of English at a small university in Texas, spending my off hours dressing as provocatively as I could and hooking up with men and women in bars so they could punish me for my crimes. The only upside was that with the hormones, I grew a nice but modest pair of boobs which meant I didn't need forms for my dresses anymore and could still present as a man if I needed to. That and I looked at my novel in a new light; ripping it apart, I published a series of romance novels from the material that were so well received, I won a few awards.\n\nWith some newfound confidence, I pulled myself together, was granted tenure at the university, started doing everything I could to be a part of Judy's life and repaired my relationship with my two best friends enough to be Mike's best man when he and Janice got married two years later. I still dressed and went out but was more discriminating in the partners I chose.\n\nSo here we were, standing in the back of the church, I could see Tom, waiting patiently for Judy to come join him so they could start their life together; if I could have handpicked a man for my daughter, it would have been Tom, Mike and Janice agreed, they were perfect together.\n\nThe rehearsal dinner had been a little awkward with Mike and me not really knowing who was supposed to give the father's toast, I had gone first, doing my best to acknowledge the wonderful woman my little girl had become and to praise her choice in Tom, but when Mike spoke, it hit me; I had been there for all the big stuff, the important stuff; graduations, track meet finals, her Girl Scout Gold Award, we all even shared a beach house at the coast, where I taught her how to surf, but Mike had been there for all the little stuff, taking the training wheels off her bike, buying her ice cream in the eighth grade when Billy Smith had called her a freak because her dad was black; the skinned knees, the nightmares and the times she didn't make the team, all those things that made him her dad and me just her father.\n\n\"Judy,\" I put my hands on my daughter's shoulders,\" listen, there is no way for me to ever express how much I love you and how proud and happy I am for you right now, but I need your permission to do something,\" when I told her what, she hugged me tightly and whispered,\" Thank you\" in my ear.\n\nI kissed Judy on the cheek and could feel her relax just a bit, \"you're doing the right thing today, you know that, trust your heart, ok?\" she smiled at me and nodded.\n\nI walked up to Mike, took the rose from my lapel and pinned it to his,\" I may be her father, but you're her dad. I think this is yours,\" I hugged him fiercely, smiled at Janice and went to take my seat in the front of the church. The wedding was beautiful, at the reception, Mike got the honors of the father's dance while I happily took a turn with Judy right after.\n\nThat had been little more than twenty-four hours ago, I had left early the next morning to catch my flight home, made the drive to the coast and prepped the beach house for the season, Mike and Janice would be joining me in a few days after they got Judy and Tom off for their honeymoon and took care of a few post-wedding details, Tom and Judy would join us ten days later, our entire family would have two weeks together: I couldn't wait for everyone to get here.\n\nBy the time I was finished getting the house ready, the sun was dancing with the horizon, I went for a run on the beach; I loved running in the edge of the surf, especially as the tide went out, the cool splash of the water on my legs invigorated me, I could close my mind off to everything except the sound of my heart and the rhythm of my feet on the sand, letting all the tension in my world slip out to sea with the tide.\n\nSomething snagged my foot, and I did a world class face-plant into the surf. Laughing at myself and wiping the sand from my face, I looked down to find a gold chain laying half exposed in the sand, a little digging exposed an intricate pendant about an inch in diameter with a deep purple crystal in the center hanging from the chain, it was beautiful.\n\nI rinsed off in the sand shower at the beach house before taking a long hot bath, spending over an hour getting dressed, fixing my hair, and doing my makeup; I had made sure shaving wasn't an issue years ago with six months' worth of electrolysis. Mike and Janice wouldn't be here for another day or two as they wrapped up post wedding details so I had some time for Jamey to come out and play; me dressing wasn't a problem, in fact, it was accepted if not expected, Janice sometimes commenting that my bikinis were racier than hers. What I was doing tonight, though, is what had gotten me in trouble over twenty years ago and I knew I needed to get that out of my system before they got here.\n\nI knew just the place to go, too. Taking one final look in the mirror, I grabbed my purse and headed for the door. For some reason, I dropped the pendant in my purse as I left.\n\nCharley's wasn't technically a gay bar but it was very 'alternative lifestyle' friendly and was my best chance to find what I was looking for, with a bottle of lube and three condoms in my purse, I was hoping for a very long night.\n\nGreg was the bartender and had my whiskey neat ready for me by the time I got to the bar,\" Long time Jamey, good to see you again. Looking hot as ever,\" he winked. I took a quick look in the mirror and decided I had to agree with him, even nearing fifty, I was frickin' hot.\n\n\"Thanks Greg, you, too,\" I handed him my card so he could start my tab. It was going to take a few to get myself ready for what I hoped I had planned. If nothing else, I knew I could wait until close and Greg would be happy to fuck me silly; it had happened before, and it had been amazing.\n\nTaking a seat at the end of the bar, I crossed my legs, making sure my skirt stayed above my knees, and began to scan the room, it was still early, but a girl never knows, does she?\n\nThe night dragged on, and while there were a few candidates, nothing like what I really wanted tonight, so I sat, flirted with Greg, sipped my whiskey, and waited. I finally had to go to the ladies' room, touching up my makeup, I spied the pendant, when I got to the bar, I took it out and, for the first time, really examined it; extremely ornate with etchings all over it in what appeared to be Arabic or some Middle Eastern language. Lost in my interest in the treasure, I almost didn't hear Greg,\" six o'clock, Jamey, and he's heading your way.\"\n\nI looked up to see the most impressive man I had ever seen, very expensive suit. probably an Armani, his dark complexion reminded me of a rich cup of coffee, his eyes were so dark they were almost black, a neat trimmed beard graced his chin, his jet black hair hung down below his shoulders, and my god, he was bigger than Mike; at least seven feet tall and huge, I smiled as he walked up to me.\n\n\"May I join you,\" he asked with an accent I hadn't heard before, actually waiting for me to say yes before he sat down, I could feel the eagerness raging in my ass as I wriggled in my seat; this would be heaven If it happened.\n\n\"Please, I smiled coyly,\" I'm Jamey.\"\n\n\"Please call me Raj,\" he extended his hand, it totally engulfed mine, oh my god I hoped the myth about hand size was true. He kissed my hand delicately, smiling and locking onto my eyes as he did. I wanted him to take me right there.\n\n\"Whatever he wants, on my tab,\" I smiled at Greg.\n\n\"Do you have a hearty red wine?\" he turned to Greg and asked politely. Raj just sat and looked me over while he waited for his wine,\" I hope I am not making you uncomfortable,\" he finally said.\n\n\"Um, no. I'm actually enjoying the way you are looking at me,\" I admitted.\n\n\"You are strikingly beautiful, \"he smiled, the way his eyes lit up was more intoxicating than the large amount of whiskey I had already consumed,\" especially, if it is not inappropriate for me to say so, for a man,\" he took a sip of his wine but his eyes never left me.\n\nI didn't know what to say, no one had ever so blatantly outed me like that before, most of my partners let me keep my fantasy while we had sex, and those that didn't never got further than perhaps a blow job in the parking lot; I knew I was a bit of a slut, that was why I was here, but the way Raj said it, he was different. I looked down at the floor.\n\n\"I am sorry, I have upset you. It is not a problem, you know, as I said, you are strikingly beautiful, and I have served many kinds of masters before you.\"\n\n\"'Served', 'Masters,' what are we talking about here?\" I emptied my glass and waved at Greg to bring me another.\n\n\"You do not know,\" he cocked his head to the side as he looked at me,\" the pendant, you hold the pendant, so I serve you. Whatever it is you wish; I shall make happen.\"\n\n\"So, if I take you home with me right now, you will fuck me until I beg for you to stop, because that's what I came in here for tonight?\" I was horny and not in the mood for games.\n\n\"If that is what you wish, I will be more than happy to oblige, it will not be the first time my master has requested sexual favors.\"\n\n\"Master, pendant, Raj, what the hell are you talking about, and don't bullshit me, I've taught college for twenty-five years, I know bullshit when I smell it and I'm not in the mood for games or practical jokes. So, who put you up to this?\" I shot Greg an evil glance. He shrugged his shoulders and shook his head.\n\n\"May I?\" he reached out to touch my face.\n\n\"Sure, what the hell, this can't get any weirder,\" when his fingers caressed my cheek, I felt it, an energy running through my body, a warmth, something I had never felt before, I was covered in a warm blanket on a cold night, I was sitting by a fire under the Colorado sky, cooking S'mores, I was back at the beach basking in the sun, and then it was gone, and so was my anger and frustration,\" what did you just do to me?\" I gasped.\n\n\"I need your mind to be still so you can understand,\" he took another sip of his wine,\" I need you to listen, and to believe.\"\n\n\"OK, go,\" I said,\" you and this pendant I found on the beach earlier today are connected, and for some reason, you think I am now your master, is that about it?\"\n\n\"That is correct. It has been a long time since anyone has held the pendant. That happens sometime, but almost always, those that have found it have been searching for it and have known what it is. That is not the case with you, so I will try to explain. I am Djinn and my essence lies in the jewel of the pendant. When you touched the pendant, you called me forth to serve you.\"\n\n\"Wait a minute, you're talking about 'Aladdin', 'The Arabian Nights', three wishes, that kind of Djinn?\" I asked incredulously.\n\n\"I am not familiar with this 'Aladdin,' but yes, that kind of Djinn , except there are no three wishes, I am here to serve you, to grant you whatever it is you desire; wealth, long life, partners that will 'fuck you until you beg them to stop,' as you said, all you must do is ask.\"\n\n\"Raj, Djinn don't exist, they're fantasy, fairy tale, myth. Do you really expect me to believe you,\" everything in my rational mind told me he was full of it, but there was something about him, a sincerity I just couldn't ignore,\" and if you're a real Djinn , you're from the middle east, how did your pendant end up in the Texas gulf?\"\n\n\"My last master was named Ponce De Leon, he acquired the pendant in battle, the chest he hid the pendant in was washed from his vessel in a storm.\"\n\n\"You have been inside this,\" I held up the pendant,\" for over five hundred years,\" I dropped the pendant, \"you expect me to believe this? Seriously, who put you up to this?\"\n\n\"Yes, and no one put me up to this, you called me when you touched the pendant, it is that simple,\" he just looked at me as he sipped his wine.\n\nI shook my head,\" I'm sorry, but this is crazy,\" I still couldn't get his sincerity out of my mind,\" so you're telling me, if I asked for a million dollars, right now, you'd just make it appear on the bar in front of me?\"\n\n\"Something like that, yes,\" he nodded,\" is that what you want?\"\n\n\"It can't be that easy, there has to be a catch, I mean, if all of a sudden a million dollars appeared on the bar, I'd have to fight off everybody in the bar, and then there's taxes, and explaining where it came from to the government, who'd probably just confiscate it anyway, no, I don't think that's a good idea,\" I laughed,\" as if it could really happen anyway.\"\n\n\"Perhaps a smaller gesture,\" he raised his eyebrow and grinned,\" an amount less obvious, \"Open your bag,\" he pointed at my purse,\" what do you see?\"\n\n\"Keys, wallet, lipstick, mascara, compact, three condoms, and some lube.\" I looked at him.\n\n\"Look again.\"\n\n\"Holy shit,\" I whispered, pulling the bundle of hundreds from my purse,\" ten thousand dollars, you, you're not kidding,\" I fanned the bills, brand new, sequential numbers,\" wait a minute, you either made perfect American hundred dollar bills out of nothing having spent the last five hundred years in an pendant in the ocean, or these came from somewhere else.\"\n\n\"Very astute,\" another sip of his wine.\n\n\"So, where did you get them?\"\n\n\"I believe it is called a Federal Reserve, in a place called Ft. Worth.\"\n\n\"So, when they do an audit, some poor guy is going to get accused of stealing this, shit, no, put it back,\" I tossed the money at him. It disappeared before it landed in his lap.\n\n\"You are very interesting, I must admit, you come here to engage in a totally immoral act with someone you do not know, yet refuse to take that money because it will harm someone else. I do not understand.\"\n\nI took a big sip of my whiskey,\" It's easy, immoral or not, one is a consensual act between two people making a decision of their own free will. The other is theft and hurts someone that had no say in the matter. There's a big difference,\" I could see the confusion in his face,\" but, you don't have free will, do you, you're bound to that pendant and 'have' to serve whoever holds it so you can't see the difference.\"",
        "\"I gladly serve whoever holds the pendant, it is my nature, my purpose.\"\n\n\"Raj, has anyone ever given you a choice, let you decide what to do?\" I leaned in and put my hand on his leg.\n\n\"I have some leeway in how I carry out certain tasks. If my master is kind, I am more likely to take what he truly desires into account, if they are cruel, I am more likely to be literal, so I understand a little.\"\n\n\"But you've still never had a true choice, you're always doing what someone else asks you, or tells you to do? Have you ever thought of what you would like to do, wouldn't you like to have a real choice?\"\n\n\"I, I don't know,\" he took a big sip of his wine, \"I have never thought about it like that before.\"\n\n\"What bothers you the most about your life, it has to be lonely as hell, spending five hundred years like that?\"\n\n\"Time is different inside the pendant. I know it has been five hundred years, but it feels as if it is only a moment, I am aware enough that I can present myself to you properly attired, but I understand what you are asking, even with all I can do, I am still alone. There are few of us and, as you say, when I am serving someone, I am at their bidding; I often wonder why they hold so much power when they are so undeserving. I do think it would be nice sometimes to be able to say no.\"\n\n\"Maybe we can help each other out,\" I finished my drink,\" I find you extremely attractive and I am very horny right now, very interested in having sex. You said I was 'strikingly beautiful' earlier, you have my permission to decline what I am going to offer you, you get to choose, but I would very much like to have sex with you tonight,\" I looked at the big man, his brow furrowed as if he were a high school freshman in an advanced calculus class,\" Djinn , do have and enjoy sex, don't they?\"\n\n\"Many times what I am commanded to do is quite enjoyable,\" Raj nodded and smiled at me, \"you are asking my permission,\" he asked quietly,\" I can choose to say yes or no, and no matter what I choose, you will not force me to do the other?\"\n\n\"To do that would be cruel and I am not a cruel person,\" I slid my hand further up his leg to his crotch, finding indications that the myth about hand size was true, I smiled at him.\n\nHe pulled my hand away,\" you said I would be able to choose.\"\n\n\"I did,\" I smiled, biting my lip, and putting my hand back on his crotch, rubbing it gently,\" and you absolutely get to choose. Whatever you decide is what happens, but I never said I wouldn't try to influence you, just a bit,\" Raj just stared at me as I sipped my whiskey and rubbed his crotch, I could see him thinking, trying to figure out what I was really offering him, I knew it wasn't just the sex, which I badly wanted, I just needed him to figure it out.\n\n\"Yes,\" he finally whispered,\" I would like to fuck you until you beg me to stop.\"\n\nI made the universal sign to close me out to Greg, he brought me my tab and I signed, leaving him a generous tip,\" I am so jealous,\" he laughed as he picked up the slip of paper from the bar and walked away.\n\n\"Raj, I hate to do this, but I am a little tipsy and really don't think I should drive, can you get us back to my beach house safely, please?\"\n\nHe smiled at me and a moment later we were sitting on the upper deck looking out over the ocean as a full moon kissed the gentle waves,\" damn, I can see why people might try to take advantage of you. Thank you,\" I took his hand in mine and led him inside to my bedroom.\n\nRaj started to undress,\" Let me,\" I stepped up in front of him, slowly pushing his jacket from his massive shoulders, my god he was big. His shirt was next, unbuttoning it slowly, I found a completely hairless chest, huge pectorals with large firm nipples, above perfect abs, there wasn't a single ounce of fat on his body, I ran my hands over his dark skin relishing the charge of energy that coursed through my body as I explored, Raj let out a soft sigh.\n\n\"You like it when I touch you, don't you,\" I reached my tongue out and licked one of his nipples, twirling my tongue around it slowly, pulling my body closer, I could feel him starting to get hard against my leg, his large hands rested on my shoulders before slowly sliding down my back gently taking the zipper of my dress and drawing it down to my ass. Drawing a delicate line up my spine with his fingers, he stopped only to unclasp my bra, I was amazed at how soft and tender he was. I stepped back, letting him pull my dress and my bra from my shoulders and down my arms until they fell to the floor.\n\nRaj kissed my shoulder while his hands found their way to my breasts and then to my waist. I let out a soft moan as he lifted me from my feet as if I were nothing, carrying me gently to the bed and lying next to me, \"you are stunningly beautiful,\" his mouth closed with mine and I felt his power in his kiss. My body shook and I slid my arms around his neck holding his lips to mine, parting them, and urging him to do the same with my eager tongue. A twinge of fear ran through me when he responded, sliding his tongue deep into my mouth, \"my god, it's bigger than my cock,\" I thought as his tongue invaded my mouth sliding deeper and deeper until it entered my throat before sliding gently out again, I lost myself in the experience.\n\n\"I'm sorry, he whispered,\" it has been a long time and I got carried away.\"\n\n\"That's ok, I liked it.\" I pulled him back to me, once again burying my tongue in his mouth, begging him to do the same. I shuddered as my hot juice soiled my panties and his tongue fucked my throat.\n\nSurprised, Raj stopped, holding himself on one elbow next to me, \"Are you alright, I don't want to hurt you?\"\n\n\"I'm fine,\" I moaned,\" I can't believe you just made me cum with your tongue in my mouth. My god I can't wait to feel what it's like to really have you inside me,\" I smiled as I reached for his belt and undid the clasp.\n\nAs I worked to undo his pants, Raj gently caressed my breasts with his incredible tongue, drawing large wet circles around my nipples while his hand explored my body, slowly finding its way to my waist and then sliding under the edge of my panties, pushing them down my hips. I raised up, letting him push them to my knees before I used my feet to push them off and onto the floor. My cock disappeared into his hand as he began to fondle me.\n\nWorking feverishly to free my treasure from his pants, I finally pushed against his chest, climbing on top of him as he rolled onto his back, shit, he was gorgeous.\n\nAs I ran my hands up his stomach to his chest, massaging his nipples between my fingers, I could feel myself getting hard again, slowly I started kissing his neck, taking my time to work my way down to his now erect nipples, taking one and then the other in my mouth, they had to be as big around as pennies and felt amazing as I sucked gently, listening to Raj start to moan. Working my way down his stomach, tracing the outline of his ripped abs as my hands continued to work on his pants.\n\nRaj finally lifted his hips, allowing me to push his pants down his legs freeing his cock from its prison. I gasped audibly when I saw what I had asked for, Raj's erection was as big as my forearm, and just as stiff, the head as big as my fist, his balls the size of baseballs. How he had hidden all of that in his pants I had no idea. I could feel my ass quiver at the idea of him inside me, wondering how much it was going to hurt, how much if any of him was going to fit. My hands couldn't leave him alone, I stroked his cock from base to tip, kissing and caressing and teasing his slit with my tongue as I did.\n\nHis moans grew louder and more intense as I worked, slathering his shaft with my spit, and sliding an eager hand up and down the massive beast as the other massaged his huge balls. I could feel him start to tense, using both hands to stroke him as I pulled the very tip of his cock into my mouth as far as it would go,\" Jamey,\" he moaned as he exploded, his body convulsing as he pumped rope after rope of thick hot juice into my mouth. I swallowed as much as I could, but it was soon all over my face, running out my nose and down my chin onto his cock and stomach.\n\nI laughed as I licked the residue from my lips, using my fingers to move the sticky mess from my face to my mouth. When I had finished cleaning the mess from his cock and stomach, I must have eaten at least a cup of his cum, going to the bathroom to wash what I hadn't eaten from my face and hands, I climbed back onto the bed and laid my head on his shoulder and wrapped my arm across his chest. I felt so small next to him, it was perfect.\n\n\"That is not what I thought we were going to do,\" he sounded concerned.\n\n\"Don't worry, Raj, we have all night for that, this was just the appetizer,\" I reached up and kissed him,\" I hope you enjoyed it as much as I did,\" I added as I started stroking him again. His smile told me he had. When Raj started to get hard again, I went to my bedside table and got my bottle of lube and began covering his massive beast with the slick liquid, pausing only to coat my hole, shoving all five of my fingers as far inside me as I could go.\n\n\"Are you sure you want to do this,\" Raj asked softly,\" I am afraid I will hurt you; it has happened before.\"\n\n\"I want to at least try, even if you just get a little inside me, enough to fill me with your seed,\" I rolled over onto my back, pulling my knees to my chest,\" please?\"\n\nRaj climbed on top of me, I reached down between my legs and guided him to my eager hole until he rested at the gate,\" please,\" I said again, and he started to push. It was like the first time all over, pain at first, and then discomfort, followed quickly by that incredible feeling of fullness, and that was just the head of his cock.\n\n\"Are you ok?\" Raj asked.\n\n\"Oh, yes,\" I moaned,\" you feel amazing, and without thinking I said it, \"I wish you could be all the way inside me,\" I looked up at Raj and he just smiled, moving slowly further and further inside me, pulling out and then going even deeper. I had no idea how, but after an amazing several minutes and another explosion from my cock, I felt his balls against my ass and he began to pump, pulling his massive cock out a little further each time until he found the perfect rhythm, my body racked from one orgasm after another, I couldn't catch my breath, I don't know where it was coming from, but I spewed hot seed over my stomach time and time again, each one more intense than the last, Raj must have fucked me for over an hour before I finally started begging him to stop.\n\n\"Are you sure?\" he laughed a little.\n\n\"No, but yes. You feel so wonderful inside me and I want you to cum so bad, but I don't know how much more I can take, it hurts so good,\" Raj started fucking me again, but harder and faster, I could tell he was doing this for him, chasing his own orgasm, getting what he wanted from our union, laying my head back I screamed as yet another orgasm ripped through my body and I felt Raj's cock tremble deep inside me, pulsing, filling me with hot sticky gold, I passed out.\n\nWhen I awoke the next morning, the only evidence of what had happened was the huge body behind me in my bed. We should have been covered in jiz, my ass should have hurt for months after the pounding Raj had given it, but instead, all that was there was the soft breathing of the gentle giant spooning me, his huge soft hand gently holding my breast as I listened to his deep breath, soaking in the warmth of his embrace. I lay there for a long time before I had to get up to go to the bathroom returning to find him lying on his back, hands behind his head smiling broadly. I climbed back in bed, resting my head on his shoulder as he wrapped his arm around me, making me feel petite and fragile next to him.\n\n\"Raj, I'm sorry about last night, I promised it would be your choice,\" I waited for him to respond.\n\n\"But it was my choice, you just made it easier for both of us,\" he kissed the top of my head,\" and I'm glad you did, otherwise I might have hurt you and I don't ever want to do that.\"\n\n\"Do I want to know how?\"\n\n\"Probably not, but don't worry, I put everything back the way it is supposed to be, maybe even a little better, can I ask you something?\" Raj kissed my head again.\n\n\"Anything.\"\n\n\"I know why I am alone, why are you? You are a good person, I think, don't you have someone?\"\n\n\"I did,\" I thought about Janice and Mike,\" but I made some mistakes and I lost her to someone else.\"\n\n\"I could bring her back to you, if you ask,\" he started to stroke my hair.\n\n\"Part of me would like that, before I ruined it, things were good,\" memories of the day Janice found out about my affair ran through my mind,\" but if you brought her back to me, it would hurt others I love just as much, the cost would be too high,\" I told Raj the whole story, me, Mike, Janice and then Judy, all the way up to the wedding,\" I have a good life, I finally like myself again, most of the time, anyway, and I don't want to do anything to hurt them.\" I told him about my father, who had died in a car accident when I was ten and my mother who had succumbed to cancer my freshman year in college, I told him how Mike have been there for me when there was no one else and how his family had effectively adopted me.\n\n\"Why do you do what we did last night?\"\n\n\"Because my one first true love will always be Mike and I can never have him. He and Janice are so perfect together, it's a shame they were never able to have a child of their own, that is something I could wish for; they are such awesome parents, Judy is better because Mike was there for her, he reminds me of my dad in a lot of ways, or how I thought it would have been anyway.\"\n\n\"You seem to be concerned about everyone but yourself, what do you want Jamey?\"\n\n\"Honestly, I have everything I want, Janice and Mike are my best friends, my daughter is smart and beautiful and happy, I have a job I like and the trashy romance novels I write have made me enough money that I can do whatever I want; I've even found a new friend that can ass fuck me into oblivion, when he feels like it,\" I reached down and slid my hand along Raj's cock.\n\n\"Is that an invitation?\" he started getting hard.\n\n\"Absolutely, I just wish it would fit inside me like it did last night.\"\n\nRaj laughed out loud, rolled me onto my back and proceeded to fuck me until I begged him to stop. Covered in my own cum, I woke up alone and crawled out of bed and into the shower, Raj dripped from my ass and ran down my legs as I cleaned myself off and got dressed, a simple white bikini and a coverup, before going to the kitchen to fix something to eat. Raj had beat me to it,\" I was going to bring it to you,\" he smiled.\n\nI wrapped my arms around his neck and kissed him,\" thank you for last night and this morning,\" I have never experienced anything like that, ever,\" I smiled and kissed him again.\n\n\"Can I ask another question?\" he set a plate of something that smelled delicious in front of me.\n\n\"After what you did to me, you can ask me anything,\" I laughed.\n\n\"Why do you dress as a woman?\"\n\n\"Because it's how I feel most comfortable, since I was little, I have wanted to be pretty, wear frilly dresses. I fantasized about going to the prom in a gorgeous formal gown and having all the guys stare at me, wishing they had been the lucky one to be my date. It may sound silly, but it makes me feel happy, I guess. I have wanted to be a girl for as long as I can remember.\"\n\nI took a bite of the food Raj had prepared, it was even better than it smelled,\" so what about you, tell me your story.\"\n\n\"It is a long one,\" he warned me.\n\n\"And you have what else to do today?\" I chided him. He smiled a wry smile, admiring my scantily clad body.\n\nWe finished eating and moved outside to the upper deck, where we had landed when we came back from Charley's. Raj hadn't been kidding, but when you've been around for thousands of years, even taking, a few hundred off here and there, you get to meet a lot of interesting people and do a lot of interesting things. A bottle of very nice wine appeared with two glasses, I looked at Raj as he poured and decided I wasn't going to worry about where it had actually come from, the wine was excellent, the company was better, and the stories were fascinating. He talked all afternoon and into the evening, taking occasional breaks to satisfy what had become a mutual desire. I sat enthralled, asking questions, and laughing at the answers.\n\n\"So, what would you wish for, Raj, if you had the pendant, what do you really want?\"\n\n\"I would wish for another day like today, a day where I got to choose, a day where I was not treated as a servant, but as a friend,\" I could see the sadness creep into his eyes,\" but it will never be, no one will ever give up the pendant, no one will ever wish me to have it, not even,\" he paused, \" not even you.\"\n\n\"I'm getting cold, I think I'm going inside,\" I put my arms around him and kissed his cheek, \"I know what I would wish for, but I promised it would be your choice.\"\n\nRaj smiled at me, \"You are both beautiful and depraved, you know that, right?\" he whisked me off my feet and carried me into the bedroom. This time I made more than one wish and Raj filled me with his seed over and over again until he was begging me to stop, exhausted he finally fell asleep.\n\nI lay next to Raj for a long time, thinking about what had happened since we met, thinking about the stories we had shared and how sad it was that Raj's would never be told; a small part of me wished that I could tell them but questioned if I would do them justice, I thought about how kind and honest he was, how his sense of right and wrong led him to choose to reward some people and punish others, I thought about what a shame it was that he was trapped by the pendant, destined to have one master after another for the rest of eternity.\n\nI thought about our brief time together and how close we had become, how much I enjoyed every aspect of what we had shared, and how much better it had been because he had chosen to share it with me. I truly did have everything I wanted; friends, family, respect, money, even debaucherous sex when I wanted it.\n\nLooking at my beautiful sleeping giant I dug the pendant out of my purse, fastened the clasp behind his neck and kissed him sweetly,\" I wish you a full and happy life,\" I whispered, crawling into his massive arms drifting off to wonderful dreams of a childhood I never had.\n\n<br >\n\nTransition\n\n\"Jamey honey, Jamey! Mike, will you go wake her up,\" I recognized the voice calling me from downstairs. Janice hadn't called me honey since before the divorce. I heard the familiar footfalls on the stairs.\n\n\"Come on, beautiful, rise and shine, the beach is waiting,\" it was Mike's voice, he called me beautiful? What was going on? Was I still dreaming? I opened my eyes,\" there she is. come on sweetheart, get cleaned up and come on down for breakfast; Judy and Tom will be here soon,\" Mike kissed my forehead and left the room.\n\nI rubbed the sleep from my eyes, looking around the room, it was my room, I knew it was, but it reminded me more of Judy's room, touches of a young woman everywhere. I walked into the bathroom to wash my face and froze; looking back at me was a young woman, late teens, maybe early twenties, lean and athletic, stunningly beautiful, dressed in nothing but a Miami Dolphins jersey that hung to her knees. Deep auburn hair hung down past her shoulders, her bright green eyes sparkled as she smiled at me, a smattering of freckles ran across her nose barely peeking out through the golden brown of her caramel colored skin, her slightly crooked smile seemed so familiar, my mind shot back to high school, even with Janice's red hair and green eyes, she could have been Mike's twin.\n\nRaj appeared behind me,\" What the hell is going on,\" I almost shouted as I spun around to face him, \"is this a dream? What did you do to me?\"",
        "\"No, it is very real; I have given you a choice,\" he smiled at me,\" you can go back to bed and wake up as you were or go downstairs to your mother and father and let your big sister tell you all about her wonderful honeymoon. Whichever choice you make will become your reality and the other will fade away.\"\n\n\"A choice, you're giving me a choice for a whole new life as Mike and Janice's daughter, Judy's sister, but how, why?\" I couldn't believe what I was hearing, but with Raj, I knew it was no joke, he had proved to me what he could do,\" and what about you?\"\n\n\"It's what you want more than anything else, to be a real part of their family, not just the eccentric uncle,\" he smiled.\n\n\"Besides, it's a fair exchange for the full and happy life you have given me, a life full of choices, new unexplored opportunities; as I am learning, what you do with those choices is up to you,\" he touched the pendant hanging from his neck, \"As for me, where you are concerned, I will never be too far away, you are my friend,\" the word seemed almost alien the way he said it, but it made it all the more special.\n\n\"Jamey, they're here,\" Janice called from downstairs.\n\nThere was no real choice to be made, continuing to sit on the sidelines watching the three people I loved most, grow and flourish, or diving head first into the very center of the wonderful lives I had been so jealous of for so long, \"Coming mom!\" I shouted as I hugged Raj as hard as I could.\n\nRaj just smiled at me, kissed me on top of the head. I turned to thank him one more time when I reached the top of the stairs, but he was gone.\n\nI skipped the first three steps down the stairs before I started to think about what Raj had told me, my old life would slip away. I wondered if it would be sudden like a flash, or slow and gradual, maybe I would just wake up in the morning; however it was going to happen, in my head I was still James Allen Mitchell, PhD., not the beautiful young woman I had seen in the mirror.\n\nWhat if they could tell, what if there was something important I should know that I didn't; this was supposed to be my life now and I didn't know the first thing about me. I took the remaining steps one at a time, slowly trying to force the doubt out of my mind. By the time I reached the bottom of the stairs, I couldn't move. I stood and just watched; Janice, or mom, I guess, was taking the biscuits out of the oven, Dad and Judy were setting the table and Tom was doing the same thing as me, taking it all in, except he had a huge smile on his face.\n\nI knew the routine, or Jim did, set the table or help in the kitchen, as a brand new member of the family, Tom would get a onetime exemption, so I walked to the kitchen, kissed my mom on the cheek, \"morning sleepy head,\" she said without looking as she closed the oven; the biscuits weren't quite ready.\n\n\"Morning mom,\" I really liked the way that felt when I said it, I picked up the plate of bacon sitting on the counter and took it to the table.\n\nAs I set it down, I snagged a piece,\" Jamey forgot to claim Beach House Rules,\" Judy cried,\" she has to do the dishes,\" dammit, she was right and I hated doing the dishes.\n\nThere were special 'rules' at the beach house, one of which was, you could poach food before everyone sat down if; one, you were helping mom in the kitchen, and two, you called 'beach house rules,' before you poached whatever it was. I had been so worried about being outed for my fraud, I had forgotten and like I said, I hate doing dishes,\" I did it on purpose, so you and Tom didn't have to,\" I made up a lame excuse that nobody believed.\n\n\"Well, I'll help you,\" Mike offered.\n\n\"Thanks,\" I paused or just a second,\" dad,\" smiling uncontrollably. I was home.\n\nI went back for the eggs and the fruit, already busted, I wasn't shy about the two pieces of melon I poached. Tom grabbed the biscuits, hot out of my mom's hand, setting them on the table, loudly calling 'beach house rules,' before he grabbed one, blew on it and practically shoved the whole thing in his mouth; my mom's biscuits were to die for.\n\nBreakfast was easy, Judy and Tom dominated the conversation with story after story about how beautiful Cancun had been, beaches, Mayan ruins, they had even learned to scuba dive. I sat and listened, taking it all in and gorging myself, it hadn't occurred to me that Raj and I hadn't eaten at all yesterday and with the extreme physical exertion of the ass pounding he had given me, I was starving. I wiggled in my chair as memories of him inside me slipped through my mind, I couldn't help but smiling.\n\n\"Well, I haven't seen that smile in a while,\" Mike was looking at me,\" what's got you in such a good mood all of a sudden?\"\n\nI blushed a little,\" Um, I don't know, this is all just so perfect, all of us here like this,\" I improvised a little,\" and I was just thinking about if I was going to be as pretty at my wedding as Judy was at hers.\"\n\n\"Who are you and where is my little sister?\" Judy laughed,\" Thanks Jamey, that means a lot.\"\n\n\"You're not still upset about Annabelle not getting to come with us?\" it was my mom's turn.\n\n\"No, I guess not, \"who the hell was Annabelle?\" When I came downstairs, I realized this was for family, for us and Judy and Tom,\" a memory of a huge fluffy Persian cat rubbing against my leg came to my mind,\" and besides, what if she got eaten by a shark, or something?\" Everyone laughed,\" seriously though, I think I was just a little jealous of all the attention Judy was getting before the wedding,\" the words weren't really mine; they were just there.\n\n\" Sorry if I was a bit of a capital 'B',\" maybe they were mine.\n\nMike, I mean my dad, helped me with the dishes as promised and we made quick work of it, actually he did most of the work and I just dried the few things that wouldn't go into the dish washer.\n\n\"You're kind of quiet this morning,\" my dad handed me the big frying pan mom had cooked the bacon in, \"is there something you want to talk about?\"\n\nThe words were just there, \"I don't know, it's just everything is changing, Judy's married now and you and mom ...,\" I paused as I wiped the pan with my towel, not really paying much attention to what I was doing.\n\nMike stopped what he was doing and looked at me, \"and school?\" I nodded.\n\n\"I know it's a long way from home, but it's a good school, especially if you want to be a writer like your Uncle Jim. Kind of neat that you're the first recipient of the scholarship they named after him and, you'll only be a couple hours away from the beach house; you and your friends can come down on weekends and for spring break and stuff, you'll be super popular,\" he nudged me with his elbow and laughed.\n\nI smiled broadly,\" well there is that. I know I'm going to be fine,\" I gave him a hug,\" and besides, I didn't sleep very well last night, I think I'm going to go back upstairs and lay down for a while. Save some waves for me.\"\n\n\"Jamey wants to go back to bed?\" Judy piped in,\" now that's my sister,\" she let out another big laugh.\n\nI smiled at Judy, kissed my dad on the cheek and headed back upstairs to try and wrap my head around what was happening.\n\nI Climbed into bed and pulled the covers up to my chin as I started to mull over what had happened; Raj was right, this is what I wanted more than anything else in the world, to have a father and mother like Mike and Janice, to be a part of a family and this was my family now, it always had been, there was nothing unusual about anything as far as they were concerned.\n\nI had a big fluffy cat named Annabelle and she was decidedly my cat, a very real part of me wished she were here with me now, I was sure she could help me figure things out. The odd mix of things I seemed to know but didn't remember and things I remembered, but as someone else, tumbled in my mind.\n\nI tossed and turned a while, realizing that sleep wasn't the answer and probably wasn't going to come, I decided on a shower. Dropping my dad's old Dolphins jersey on the floor, I made my way to the bathroom, when I saw myself in the mirror, I stopped; I was ripped, tight abs, long muscular legs and strong arms, I couldn't help but touching myself, my hands slid across my stomach and slowly up to my breasts, pert and full. I slid my fingers over my hardening nipples and closed my fingers around them pinching them between my knuckles as I pulled my hands away.\n\nMy soft hands returned to my breasts, slowly kneading, and massaging them until I could feel myself moisten, I watched in the mirror, mesmerized as my hands found their way across my stomach, below my waist and through the small tuft of bright red hair that guarded my prize; my hands knew the way as did my fingers. I opened my legs just enough to allow entry as my right hand focused on my clit and the middle fingers of my left slid inside me, looking for that spot I knew they would find. Thoughts of Raj came to my mind and I rubbed faster and harder.\n\nI could feel it rising inside me and recognized it immediately. I began rocking my hips forcing my clit against my hand as the fingers inside me massaged my G spot. My god it was intense, my orgasm erupted inside me, turning my legs to rubber. I fell to the bathroom floor and kept going, dying for another explosion of pleasure, I could hear myself moaning as it began, it was going to be stronger than the first; I rode my fingers like a mad woman.\n\nAs my climax grew closer and closer, the image of Raj in my head changed, no longer was it the immense man with the dark skin, deep brown eyes and long black hair, it was a boy from school, tall and thin, but muscular, blonde hair with the bluest eyes I had ever seen. We were in the back of his car, my prom dress up around my waist, my chest bare, my panties nowhere to be found, and him between my legs, Eric was deep inside me and I was begging him to go harder, faster, to make me cum; as I exploded, I could see it all, Eric Chambers was my boyfriend and I had given him my virginity after the prom; when I went off to school, I would leave him behind.\n\nI laid on the floor for a few minutes, trying to find enough strength to get in the shower, my body reeked of my sex. I washed myself in the shower, dried off, picked up my dad's jersey, stuffing it under the covers, and tried to find a bathing suit. I chose a simple white bikini that covered me just enough that my dad wouldn't go ballistic, put my hair up in a ponytail and headed to the beach.\n\nI laughed as I ran across the sand to my family, thinking about what had happened, it would be just like Raj to make sex the key to unlocking who I was, I could almost hear his deep baritone laugh in my head.\n\nJudy and Tom were out in the surf, my mom was looking for shells in the tide pools,\" dad, can I talk to you about something,\" I didn't understand why I thought he would take it better than my mom, and it felt right, Mike had always been easy to talk to?\n\n\"Sure, baby, what is it,\" he put his tablet down.\n\n\"Um, did you have a girlfriend in high school?\"\n\n\"Sure did, Annette Simmons, and she was beautiful, almost as pretty as your mom, he winked at me,\" I thought for sure she was the one.\n\n\"So, what happened?\"\n\n\"Well, I got a scholarship, and she didn't. When I got to school, she wrote to me and told me it was all ok, because she figured out, she liked girls anyway,\" he grimaced.\n\n\"Ouch,\" I laughed a little.\n\n\"This is about Eric, I'm guessing, you two are in the same boat, right?\"\n\nI nodded,\" and he told me he loves me, I even, oh, daddy,\" I threw my arms around his neck.\n\n\"Jamey, did he force you in any way?\"\n\nI shook my head,\" no, it was my fault, I was afraid if I didn't, he would leave me. I asked him to,\" I could see the wheels in his head turning.\n\n\"And you're ok?\"\n\n\"Yes, dad, I'm fine, I just, I really care for him and, well, what if I never find someone I like as much?\"\n\n\"Honey, you are going to meet so many new and fascinating people, you are going to change and grow and become a vibrant, beautiful woman; you're as smart as your mom, you and your sister are two of the most beautiful women on this entire planet, and I'm not just saying that because I'm your dad. Trust me, you will have plenty of opportunities to find someone, or maybe it will still be Eric, he's a good kid. I like him. I can't say I approve of what happened, but I do like him.\"\n\nI smiled and gave him a big hug, \"Thanks, dad.\"\n\n\"And young lady, you, me, and your mother are going to have a little talk about what happened with Eric, understood?\"\n\n\"Yes, sir.\"\n\nI left my dad to his work and decided to just walk along the beach, trying to let the confusion between who I was and who I am settle. I was sure Raj had his reasons for doing it this way, or maybe that's just how it had to work.\n\nWhen I passed the old telephone pole at the edge of our property, my walk quickly turned into a full run, the pier grew closer and closer, I was pushing hard and could feel the good burn in my legs, the salt air filling my lungs was invigorating. Through the pilons to the far end of the pier, to make it the full two and a half miles, and then back again; the cool water of the ocean splashing against my legs as I ran just along the edge of the surf, I lost myself in the rush. Thoughts of someone else running along the same beach slid into my mind, I could see his near perfect form running just in the surf as I was, I felt a connection with him, he was important somehow, I smiled as memories of my uncle Jim came to my mind, but I couldn't quite see his face.\n\nSprinting the last hundred yards back to the pole as hard as I could, I cut to my right, dove into the surf, swimming out to harass Judy and Tom as they made goo-goo eyes at each other and smooched at the second sandbar. As I surfaced, it became clear, Uncle Jim was now me.\n\nI helped mom make sandwiches for lunch and told her about me and Eric, confessing that not only was it my idea, but that I really liked it. I let her know I had already talked to dad. I could see in her eyes she was a little disappointed, but she told me she understood; we would still need to talk about some things later anyway. We spent the rest of the day, playing in the water, building sandcastles, and just lying in the sun; I loved the beach.\n\nTom was helping my dad do steaks on the grill while Judy helped mom in the kitchen when I came down from my shower, I curled up on a small sofa by the window looking out over the ocean and let my mind wander, eventually picking up a large photo album sitting on the coffee table in front of me; it was full of wonderful memories, things I was sure I had done but felt I was experiencing for the first time, all of us, here at the beach, me in diapers playing in the sand under my mom's watchful eye, me and Judy as young girls and then young teens, my mom, my dad, and Uncle Jim. My heart filled with the memories and I could feel myself start to cry; I could see it all.\n\n\"Jamey are you ok?\" it was Judy.\n\nI showed her the picture, the five of us on the beach, in front of the sunset, mom and dad holding each other close, Judy and me being silly, and Uncle Jim in his bikini, \"he was so much fun, I miss him,\" I closed the book.\n\n\"Me too,\" she sat down next to me, wrapped me in a huge hug and cried with me. Mom seemed to know what was going on and just let us cry.\n\nDinner was full of stories about Uncle Jim, I sat and listened as laughter and sadness filled the air; it had been less than two years since he, or I had been caught in the riptide. The love I felt was overwhelming, lost in a sea of emotion I truly did not know how to handle; I went to bed early.\n\nI lay awake for a long time, comparing my old life with my new; before, I had settled and brooded over my failures, losing myself in one sexual exploit after another, chasing any semblance of what I had lost when I had pushed Janice away and never finding it. Raj had been so right, even with all my success, I was still empty.\n\nNow I was full of promise with my whole world before me, ready to face any challenge, hoping to find my one true love. Raj hadn't just turned the page, or started a new chapter, he had given me a whole new book. I smiled, quietly wishing I could thank Raj again for giving me this incredible second chance.\n\nMy biggest concerns were that I had been a true slut, fucking or sucking anything I could, enjoying my sexuality completely. In my new life I had new and wonderful things to play with and I worried that my sex drive was going to carry forward, but I had been given a choice.\n\nI closed my eyes as the memory of Eric and how much I had enjoyed being with him made me smile, letting my fingers slide along the smoothness of my stomach, my mind caught in the idea that I was touching myself while at the same time, it was someone else caressing my skin, I let my mind choose; I saw Eric, I saw Uncle Jim, I saw Raj, their hands on my body, sliding along my long muscular arms, across the ridges of the muscles in my stomach, touching my breasts, pinching my nipples making me begin to softly moan, gently, ever so gently, the hands slid lower, across my abdomen, below my waist and into my moistness.\n\nAs my arousal grew and grew, Eric faded from my mind and then my Uncle Jim, leaving only Raj left to fondle me, his huge tender hands running up and down the inside of my thighs, I imagined his long sensuous tongue licking my breasts, drawing sloppy wet circles around my nipples, first one and then the other; I could almost feel him next to me on the bed, not wanting to break the illusion, I kept my eyes closed, half believing it was actually him.\n\nThe tenderness of his touch was amazing, tremors spread through my body, I opened my mouth, gasping in pleasure and biting my lip as he slid a massive finger along my slit, opening my labia and touching my clit ever so softly, one and then two huge fingers pushed into my womanhood, driving deep inside me searching for my pleasure. The pressure on my button increased and I began to grind myself against the fingers in my dripping pussy; my back arched and my body shook again and again as I did my best to masturbate myself into a coma before I fell asleep. I dreamt of my old life and of Raj and of the choice he had given me, when I woke up, my Uncle Jim was nothing but a memory.\n\nMy eyes opened to the earliest stages of the sunrise, the ghost of a huge shadow rising from the bed next to me, disappearing into the remnant of a very lurid fantasy. I smiled as I climbed out of bed, enjoying the gentle ache in my crotch, dressing quickly in a bright yellow one-piece, I skipped to the beach and ran to the pier and back, dad smiled at me as I made my way up the stairs, he had been standing on the deck watching me run, \"your Uncle Jim used to run in the edge of the surf like that,\" he grabbed me and gave me a hug.\n\nI nodded and smiled, \"I love you and mom, and Judy, and even Tom so much,\" I said as I buried myself in his arms,\" Beach house rules,\" I laughed as he let me go, stealing his coffee and taking a big sip and then adding copious amounts of sugar and cream, before heading upstairs to take a shower, his laugh followed me up the stairs.\n\nThe conversation about my having sex with Eric happened after breakfast, it was awkward but not as bad as I thought it would be, responsibility, consequences, all the things I already knew; I was eighteen after all and it had been my choice, I would go on birth control and promised to be careful, which were also things we had talked about in preparation for me going to college.\n\nJudy had overheard enough to catch the gist of our discussion and as soon as she could get me alone, demanded details, I obliged and we laughed and giggled like we were still in middle school as we compared experiences, she had lost hers after prom, too; the biggest difference was she ended up marrying Tom.",
        "We spent another week at the beach, the last few days cleaning and putting all our private belongings away so the management company my dad had hired could rent it out. I masturbated like crazy every night to fantasies of a large dark skinned man with long black hair with huge gentle hands and a tender kiss exploring my body, and ran every morning, surprising everyone at my newfound ability to get out of bed before noon. I had three weeks to pack when we got home before we made the long drive back to Texas to move me into my dorm.\n\nFruition\n\nI got there first and picked the bed by the window, my new roommate, Abby, got there maybe ten minutes after.\n\n\"Hi, I'm Abby,\" the brunette with hazel eyes and an infectious, Texas sized smile, put her hand out,\" Looks like we're roomies,\" I shook her hand and was quickly pulled into a full hug.\n\n\"You remind me of my sister, she does that to people too,\" I laughed as she let me go, she was stronger than she looked.\n\nWe all pitched in and before we knew it, mine and Abby's new home was perfect. My dad took us all to dinner to celebrate and so we could all get to know each other a little, Mr. Granger had played Minor League baseball for the Astros, so he and my dad had a little in common. After hugs and kisses, more hugs, and kisses, and plenty of tears, mom and dad finally pulled away from the curb behind Abby's parents. I could feel the tears welling behind my eyes as we watched our parents drive away; Abby's hand slipped into mine.\n\nAbby and I had both moved into the dorm early, we would have freshman orientation on Monday and Tuesday, and both had a few levelling tests to take to see if we could place out of any classes. Other than that, we had a full week to explore before classes started.\n\n\"You going to be OK?\" Abby squeezed my hand as we walked back to our room.\n\n\"Yeah, home's just a long way away, and, of all things, I really miss my cat.\"\n\n\"Well, you've got me now, and I'll let you scratch me behind the ears and I'll even purr for you, if it makes you feel better,\" we both laughed.\n\nI wonder what kind of ice cream they have in that store?\" I grinned at Abby.\n\nWell, let me tell you, in Texas, they have this stuff called Blue Bell, it comes in all kinds of different flavors and it is wonderful, sorry Ben &amp; Jerry, you lose on this one. I knew all about Blue Bell from summers at the beach house but let her have her moment, we each got a pint and headed back to our room to get to know each other. Abby started in on a strange variation of Truth or Dare.\n\n\"Favorite music?\"\n\n\"Jazz.\"\n\n\"Country.\"\n\n\"Football or soccer?\"\n\n\"Football.\"\n\n\"Football.\"\n\n\"Favorite team?\"\n\n\"Dolphins, duh.\"\n\n\"Cowboys and I'll convert you.\"\n\n\"Baseball?\"\n\n\"Yes, Red Socks.\"\n\n\"Yes! Astros,\" she glowered and then smiled.\n\nIt went on and on, getting sillier and sillier as we laughed and giggled until we almost ran out of questions. Abby's next question was tentative,\n\n\"Virgin?\"\n\n\"No.\"\n\n\"No.\"\n\n\"When?\"\n\n\"Prom.\"\n\n\"Prom.\"\n\n\"Touch yourself?\" she asked quietly.\n\n\"Yes,\" I blushed a little.\n\n\"Oh, hell yeah!\"\n\nI laughed at Abby's enthusiasm.\n\nAbby looked at me, I could tell the next one had her a bit worried, \"Boys or girls?\"\n\n\"Boys, but I never really thought about it.\"\n\n\"Both, is that going to be ok?\"\n\n\"Depends on whether or not you're hitting on me,\" I grinned,\" besides, my Uncle Jim used to dress up like a woman all the time, and I'm pretty sure he was bi, but he was also one of my favorite people, so, yeah sure,\" I smiled at her.\n\n\"I want some more ice cream,\" she quickly changed the subject,\" you in?\"\n\n\"Race you,\" we got called out by one of the RA's for running in the halls, got our ice cream just before the market closed and decided to go outside to enjoy it, the summer night was warm with a light breeze, we sat in the grass, listening to the frogs in the creek that ran by our dorm, and talked about what lay ahead, finishing our ice cream and laying quietly under the stars.\n\nI thought about Abby's last question, \"Abby,\" I started?\n\n\"Wassup, Jammers,\" she said in a very exaggerated voice?\n\nI tried not to laugh, \"I was just thinking about what you said back in the room, about you being bi,\" I paused,\" do you think I'm pretty?\"\n\n\"My, god, Jamey, bi or not, anybody that didn't think you were gorgeous would have to be blind. Am I attracted to you 'like that,' well, I have to admit a little, that's why I asked what I did, I wanted to know the boundaries,\" she moved closer,\" but trust me, I won't hit on you, well, unless you want me to,\" she laughed.\n\n\"Do you take anything seriously?\" I grinned.\n\n\"Try not to, but seriously, you're safe with me, promise.\"\n\nWe made our way back to the room, I watched Abby undress in the mirror as I brushed my teeth, her jeans had hidden a very muscular pair of legs and a tight round butt, her loose t-shirt a set of abs that made me jealous, and a modest, but very nice chest. Not shy at all, Abby removed her bra exposing perky pink breasts with large dark nipples. When she dropped her panties, I noticed she was completely smooth. I had stopped brushing my teeth and had started to stare, catching myself just before she noticed as a large glop of toothpaste and spit dripped onto my hand.\n\nAbby put her clothes in the laundry basket, grabbed her towel and wrapped it around her as she picked up her shower bag and headed out the door, \"I'll save you a spot,\" she winked and laughed as the door closed behind her.\n\nThe communal shower was huge, ten shower heads in the common area with a dozen private stalls for the more modest girls, it reminded me of the girl's locker room at my old high school. It was just Abby and me and I did my best not to let her catch me checking out her body.\n\n\"Ok, roomie, I see you checking me out,\" she finally called me on it,\" go ahead and look, I don't mind, it's ok,\" she smiled at me and I blushed.\n\n\"Look, I'm sorry, it's just that, well, I don't really know what it is, but I can't not look, ok, you're so fit.\"\n\n\"You sure you're not changing your mind?\" she laughed again.\n\n\" You're one to talk,\" I joked as she ran her eyes up and down my body.\n\n\" Volleyball or track?\" she asked.\n\n\"Track, long distance stuff, you?\"\n\n\"Volleyball, I was the setter, thirty inch vertical, you wanna see?\"\n\n\"You'd slip and break your neck and then I'd have to get a new roommate and I'm just getting to like you, \"I grinned at her, \"so, are you playing here?\"\n\n\"Nope, not quite good enough for a scholarship and it's too much work to do for free, what about you?\"\n\n\"I thought about it, but I want to focus on my schoolwork, I can always run for fun.\"\n\n\"Seriously, people do that; run for fun?\" she laughed again.\n\nWe made our way back to our room, I slipped on my dad's old jersey and climbed into my bed, Abby got into her bed naked. I lay awake for a long time thinking about the day, moving in, dinner, saying goodbye to my parents, meeting Abby, ice cream, and Abby, her legs, and flat stomach, her breasts, and that shaved crotch. As hard as I tried to get her out of my mind, the images persisted, my hands made their way down my stomach and between my legs. I did my best not to wake Abby up as the orgasm tore through my body.\n\n\"Having a good time over there?\" Abby's laugh drifted across the room in the darkness.\n\n\" Thinking about me, I hope?\"\n\nA deep baritone laugh resonated in the far recesses of my memory,\" Fuck you Raj,\" I thought to myself as I smiled, rolled over and went to sleep.\n\nI had hit snooze at least three times when I felt her sit next to me, gently sliding her hand under my jersey and rubbing my back, \"you're not one of those are you?\" she asked softly.\n\n'One of what?\" I rolled over, trying hard not to wake up, enjoying the feel of her soft hand on my skin as it slid across my ribs and onto my stomach.\n\n\"A snooze bar junkie,\" she laughed, drawing delicate lines just under my breasts and drawing her fingers down my stomach, curling them to scratch the tuft of hair protecting my mons.\n\n\"Just five more minutes, please?\" I couldn't decide if I really wanted to stay asleep or if I was enjoying the way she touched me.\n\n\"Ok, roomie, five more minutes, but then I use the nuclear option,\" she laughed softly as I drifted back into a half-sleep as her fingers drew lazy circles across my stomach.\n\n\"Times up, Jamey, \"her hand found my breast and gave it a gentle squeeze.\n\n\"Five more ...,\" I moaned; and then gasped as she slid her hand down my stomach, between my legs, slipping two fingers inside me.\n\n\"I warned you, I'd use the nuclear option,\" she laughed.\n\n\"Ok, I'm awake, I'm awake,\" I opened my eyes to see Abby looking down at me. I could see the playfulness, and the hunger, in her eyes. She started to pull her fingers from me.\n\n\" Please?\" I let my eyes ask the rest as I bit my lip and let out a soft moan, rolling my hips as I gently ground my crotch into her hand. Abby leaned down to kiss me as her thumb found my clit and her fingers worked in and out of my wetness.\n\n\"I think I need to change one of my answers,\" I smiled at Abby as the tremors of my orgasm slowly subsided, watching carefully as she pulled her hand from my crotch and licked my juices from her fingers, \"will you teach me?\"\n\nAbby leaned down and kissed me softly, wrapping my arms around her neck, I answered, pressing my lips hard against hers and parting them to allow her tongue to join mine in an erotic game of tag, darting and chasing each other through my mouth and then hers.\n\nAbby pulled away from me, kissing me sweetly three times,\" after breakfast,\" she laughed,\" I'm starving.\"\n\nI cleaned myself up and got dressed, Abby and I made our way to the dining hall and found a table. The dorm had started to fill up as more and more students were moving in. Our floor was all female, but the dorm itself was coed, with some floors even being mixed. We chatted as we ate, watching as other students came and went, \"Abby, why did you touch me like that this morning?\" I could feel myself blushing,\" I'm not complaining, but it kind of surprised me.\"\n\n\"Last night, when you were touching yourself,\" she smiled at me,\" you were calling my name, that's what woke me up.\"\n\nI could feel the flush fill my cheek,\" I don't know what to say, when I saw you naked, I just, I just couldn't stop looking,\" I couldn't look her in the face,\" and your smooth down there,\" I looked up, \"fuck Abby, I'm really confused.\"\n\n\"Well, I get the confused part, but was the 'fuck Abby' an exclamation or a request?\" she laughed at me.\n\n\"You know what I meant,\" I couldn't help but laugh with her.\n\n\"If you still want me to teach you, I will. I told you I'm attracted to you, but it will be your call, no pressure,\" she reached across the table and put her hands on mine,\" Let's take it easy today, go look around a little.\"\n\nWe spent the rest of the morning exploring ending up at the stadium that was across the street from our dorm; The sign said James Mitchell Sports Complex, it served as a venue for football, soccer and track and field, a true multi-purpose facility with a very nice track. I guessed it would hold about ten thousand people and considering the size of the school, had probably never been full. I knew my uncle was a big deal at the school. It turned out that aside from the substantial inheritance he had left for Judy and me, and my scholarship, he had given everything to the school. The rights to his novels had paid for the stadium, a library, and would continue to pay for a lot more\n\nWe stood and watched as a few students took advantage of the track and a group of guys threw a football around on the field, it felt familiar. When one of the runners, a tall extremely good looking guy with dark skin, long hair, longer legs and a nice tight runners butt shifted to the outside of the track and smiled at us as he ran by, I couldn't help but stare, he was gorgeous, his form was almost perfect and his ass was to die for.\n\n\"Alright roomie, make up your mind; boys or girls?\" Abby nudged me in the shoulder.\n\n\"Seriously, did you see him,\" I smiled,\" I'm thinking maybe both,\" we both laughed and headed back to the dorm, grabbed a quick lunch, and made our way back to the room. We talked about what had happened that morning and I told Abby I was still interested and that kissing her had been very nice, I just needed to take things slow. She agreed and made sure to let me know it was OK to use her name to masturbate to any time I wanted, even volunteering to model for me if it would help.\n\n\"You are insufferable, you know that?\" I tackled her onto her bed and started tickling her. We wrestled for a few minutes until the tension became obvious, she flipped me over pinning me to the bed, lowered her lips to mine and I about melted.\n\n\"Slow huh?\" she smiled, lifting her weight from me.\n\n\"I'm just scared, ok. I'm afraid I'll like it too much,\" I pulled her back to me and kissed her tenderly.\n\n\"You can run from fear or face it,\" she kissed me back.\n\nHer breasts were millimeters away from mine, I took a deep breath and they touched sending surges of arousal through my body, \"God Abby, I pulled her down on top of me, burying my tongue as deep in her mouth as I could, my hands searched for the hem of her top and pulled it feverishly up toward her shoulders. Abby rolled off of me and helped me take off her shirt, her bra was next, soon clothes littered the floor and we were deep in passionate exploration; her nipples were hard and full, I kissed and nibbled at them while she ran her fingers over my body. Pushing me over, she took her turn, first fondling my perky tits and then teasing them with her tongue before sucking then each in turn deep into her mouth.\n\nI could feel it starting deep inside me, the warmth the energy; my crotch was dripping wet. Abby continued sucking at my breasts as she ground her crotch into my thigh. She stopped to kiss me, hard and deep before licking each nipple gently and beginning a long sensuous journey down my stomach, stopping to nuzzle that tuft of red hair guarding my woman hood, before looking up into my eyes,\" you're sure?\" she asked softly.\n\nI just nodded, exploding, my body arching violently and shuddering in unending spasms as she slid her tongue between my lips and found my button.\n\nAbby drove her tongue inside me and licked and sucked my pleasure for what felt like forever, my orgasms rolled into each other, one after the other until I begged her to stop,\" My god, Abby, what did you do to me?\" I couldn't move and couldn't stop smiling.\n\nAbby laid her head on my shoulder,\" I'm glad you approved,\" she lifted up and kissed me sweetly, I could taste my juices on her lips,\" that was lesson one, we can discuss payment later,\" she smiled and laid her head back down, wrapping me in her strong arms. I closed my eyes and drifted off to sleep.\n\nAbby was leaning on her elbow looking down at my body, there was an intensity in her eyes, as if she was trying to memorize every detail of what she was obviously admiring, her free hand caressed my mons as she ran her fingers through the hair and used her nails to draw lazy circles, I moaned as I opened my eyes, \"that's nice,\" I said softly,\" I like it when you touch me like that, \"I rolled into Abby, pulling her close and kissing her. She surrendered to my advance, sliding underneath me as I slid between her muscular legs. Strange and wonderful feelings coursed through my body as I slowly explored her neck and then her shoulder and collar bone with my kisses.\n\nAbby's soft moans enchanted me as I found my way to her breasts, kissing and sucking one and then the other, drawing circles around her beautiful hard nipples with my tongue as she took my hand and moved it to her crotch, the smoothness excited me and I could feel myself moisten as I explored.\n\nI had, of course, touched myself many times and knew what to look for, slipping one and then two fingers into her and then pulling them out, using her wetness to lubricate her swollen nub as I worked my fingers in circles eliciting more and more intense moans, Abby's body began to writhe under my touch. Slowly my lips and tongue left her breasts and began to work their way down her stomach, stopping at her navel and playing for a few seconds before they continue their journey. Abby's wonderful aroma filled my senses, I could feel my own juice running down my legs, I had never been this aroused.\n\nPausing for just a moment, I looked into Abby's eyes, \"you don't have to if you don't want to,\" her voice was giving me a choice, her eyes were begging me to continue, I licked her womanhood from bottom to top, sliding my eager tongue between her swollen lips, kissing her clit,\" My god Jamey,\" she whispered as a small shudder ran through her body.\n\nI smiled up at her before I returned to the task at hand, stopping to admire the target of my affection; it was the same as mine with subtle differences, of course pink instead of caramel brown and completely void of hair, her lips were more prominent, each begging for individual attention, and then there was her clit, large and swollen where I knew mine was more reserved; so many things to play with I thought as I lowered my face into her waiting pleasure.\n\nRunning my tongue along her opening once more, I took her full lips into my mouth, each in turn sucking gently at first and then more fiercely, Abby thrust her crotch into my face and I turned my focus to her prize. Sucking her clit into my mouth flicking It with my tongue, nipping at it tenderly, I could feel her body start to tense, sensing her arousal rising, I slipped my fingers back into her wetness, finding her spot, I rubbed vigorously,\" FUUUUUUUUCK!,\" Abby screamed, her body shook in one spasm and then another.\n\nI was pretty sure the guys in the lounge down the hall watching whatever preseason game was on heard her. She clamped hard on my fingers as I released her spot and kissed her nub, sliding my tongue along her slit one more time, drinking her sweet juices, ultimately lying next to her, my head on her shoulder, smiling broadly as she turned her face to mine, kissed me with a passion born of the gods, we lay next to each other giggling like schoolgirls and smooching as we ran our hands over each other's bodies, neither wanting the moment to end slowly fading into a gentle slumber nestled in each other's embrace.\n\nThe unmistakable horn riff started, 'Gonna Fly Now', or the theme from Rocky, was the first track in my running mix and I used it for my alarm when I thought I might have trouble getting up for an early run. I hadn't remembered setting it for this early but was glad it went off. Memories of yesterday floated through my mind and I smiled as I slowly opened my eyes to find myself nestled in Abby's arms, our legs intertwined, my head on her shoulder, her hand on my ass and mine on her breast. I had never slept with anyone before and couldn't imagine a better way to wake up.\n\nI lifted myself onto my elbow and reached for the red off button on my phone. Looking down at Abby as she slept; my god she was beautiful, I found myself admiring her as I had the first time I saw her naked, the face of an angel, no a goddess, where she had nice curves, I was lean and lithe. Her breasts weren't overly large, they were perfect for her size, her thin waist led to muscular hips and thighs, but it was all so freaking feminine. It wasn't just lust I felt when I looked at her, it was pure awe. I smiled and kissed her as she slept.\n\nClimbing out of the bed and digging out my compression shorts and sports bra, throwing on a tank top and my running shoes, I pulled my hair into a ponytail, took one more look at my roommate, smiled, and headed for the track; I had lots to think about this morning.\n\nThe familiar horn riff started and I started around the track, finding my pace and letting the music move me as my mind wandered, concerning itself with my new college life; mostly trying to piece together how Abby was going to play into the picture. As beautiful as she was, as amazing as the sex had been, and as perfect as waking up in her arms was, I just wasn't sure I wanted to live as a lesbian.",
        "I wondered what my parents would think, and July and Tom, and there was that cute guy I had seen running that just wouldn't get out of my head, I laughed at myself, stressing out over Abby and some guy I had never met. More than anything, Abby had proven that I could talk to her and she would listen. As for the guy I had seen running, it had been a fluke and chances were, I would never see him again.\n\nMy reservations turned into fantasies, my mind filled with Raj and Eric, I saw Abby laying naked in my bed, smiling up at me invitingly. As we made love in my mind, I ran harder and faster our mixed passions driving me to new depths and to new heights as we explored the wonders of our passion. I wasn't running away, I was running to, and I didn't know what.\n\nVan Halen's 'Runnin' With the Devil' hit my ears with its distinctive bass beat and guitar riff, and I knew I had four laps left. When Springsteen started 'Born to Run', I kicked. I was flying. I couldn't remember ever running like this before.\n\nThe music stopped and I walked one more lap to cool down. As I rounded the last turn, I saw him standing by the bleachers smiling that big smile and offering me a bottle of water, \"Roger Keshishian, my friends call me Rog and my team calls me Coach K because nobody can pronounce my last name. That was impressive, what you just did.\"\n\n\"Um, I'm Jamey, Jamey Harper,\" I smiled sheepishly as I took the water,\" and why would you know me, unless you're a stalker or something?\"\n\nHe laughed, \"because I'm the track coach here and that was the single most impressive 10K I have ever seen. You did those last four laps at a sub ninety-second pace. You could be running for Texas or UCLA, pretty much anywhere you want with a time like that; a few minutes faster and you qualify for the Olympics.\"\n\n\"Um 10K, I only ran five miles, what are you talking about? My music mix is only thirty-five minutes?\"\n\n\"Well, that's one hell of a music mix,\" he showed me his stopwatch, 35:07,\" Jamey, I walked in right behind you; you did twenty-five laps, not twenty.\"\n\n\"I'm sorry, you have to be mistaken, that's my five-mile mix, I've been using it since I started high school.\"\n\n\"Well, you did something different this morning,\" he smiled at me,\" twenty-five,\" he held up two fingers on his right hand and all five on his left as he mouthed the words.\n\n\"Rog, or Coach K, or whatever, that would be over eight minutes off my personal best, I know I'm in good shape, but that's just insane.\"\n\nAbby was in the shower when I got there, I paused and caught my breath when I saw her, noticing a couple of other girls admiring her, too.\n\n\"You've got fans,\" I took the spot next to her and smiled.\n\n\"I know,\" she laughed and poked me in the ribs, \"I think I'm going to like college.\"\n\nThe other girls left when I showed up, so I stole a quick kiss as we headed back to our room to get dressed and headed to the dining hall for breakfast. The dorm was starting to fill up, mostly with freshmen here for orientation which started tomorrow morning. We grabbed a table out of the way, and I told her about my run.\n\n\"Wait, he actually said Olympics?\" Abby was trying not to scream as I told her about what 'Coach Dreamy' as we had decided to name him, said.\n\n\"He had to be joking or trying to impress me. I mean that would be like your vertical suddenly being thirty-five inches or something.\"\n\n\"Well, I was actually thinking about working on my horizontal,\" she smiled the evilest smile I had ever seen, and I got wet almost instantly. Not even bothering to clean off our table, I grabbed her hand and dragged her back to the room, pulling her t-shirt up over her head before the door even closed and covering her breasts with kisses as I reached behind her and unhooked her bra.\n\nWe collapsed onto her bed and made love until neither of us could move, orgasm after orgasm coupled with moans and cries, shudders and muffled screams, we finally lay in each other's arms, completely contented, completely exhausted, and completely covered in each other's sex.\n\n\"But what if he was serious?\" Abby moved a loose strand of hair from my face, kissing me on the tip of my nose, \"I mean, The Olympics.\"\n\n\"I guess the next time I start freaking about having a hot lesbian girlfriend, you can come time me and we'll just see.\"\n\n\"Hey, I'm bi, not lesbian,\" she tickled me.\n\n\"So, the girlfriend thing doesn't bother you?\" I grabbed her hands.\n\n\"As long as you're not too jealous or too clingy, I think I can handle it.\"\n\n\"Clingy can be good,\" I smiled and flipped her on her back pinning her hands up over her head and burying my tongue in her mouth.\n\n\"Holy shit, I created a monster,\" she tried to laugh when I was done with her and the last tremors rippled through her body.\n\n\"You did invoke the nuclear option, it could be some kind of radiation poisoning,\" I giggled.\n\n\"I guess I better give you a very thorough examination then,\" if there was a part of my body she hadn't kissed when she was done, I couldn't tell you where it was.\n\nAfter another quick shower, we grabbed some lunch and went to the library, they had my uncle Jim's office recreated just off the lobby with all fifty of his romance novels and even his historical fiction book on display. There were two pictures of him, one in a very dapper business suit and the other in a beautiful floral gown with heels; he was both very handsome and very pretty, I smiled and took Abby's hand.\n\n\"Can I help you girls?\" it was the librarian.\n\n\"Not really, I just wanted to come and see this, Dr. Mitchell was my uncle.\"\n\n\"So you're Jamey, your uncle talked about you a lot, you and your sister,\" she had the nicest smile,\" I understand you received his scholarship, I read your submission, you are very talented.\"\n\n\"Thanks, I always wanted to tell stories like he could, it was so much fun to listen to him,\" I could feel my eyes start to tear. Abby wrapped me in her arms.\n\n\"I'm Ms. Sanders. Your uncle Jim was a good friend. A lot of us here miss him, too. Let me know if you need anything,\" she smiled again. I nodded as a sniffle escaped, Abby led me out of the library, and we walked in silence for a long time missing dinner and getting back to the dorm just in time for the Dallas Miami Sunday Night football game. I was a serious minority in the lounge, and they all let me know about it, my dad's Jersey stuck out like a sore thumb amidst all the silver and blue. Dallas was just the better team and I took the abuse without complaint, but Abby and I made a bunch of new friends in the process, even one of the girls I had seen checking out Abby in the shower, her name was Angela.\n\nFrom that point on, we were the Three Musketeers, where you saw one of us, you saw all three. I had one class with Angela where Abby had two, so we studied together and ate together and hung out in the lounge together. I could see the natural chemistry building between her and Abby, but chose to ignore it, over time, I could feel Abby start to try too hard, but that just told me she wanted me more, right?\n\nIt all came to a head the last day of midterm exams, my philosophy exam had been brutal, I stopped off at Dr. Elleridge's office and turned in my paper for creative writing and headed for the dorm fully planning on burying the anxiety I had over how I had done in Abby's passionate kisses.\n\nI opened the door to find the two of them asleep in each other's arms, smiles of contentment on their faces and the familiar aroma of sex filling the air, they looked so peaceful together, so beautiful. My heart broke. Laying my book bag on my desk where I knew they would see it, I changed into my running clothes, grabbed my earbuds, and headed for the track.\n\nThis time I let my despair fuel me, running from the pain and hurt, the music I depended on faded into the background serving only to let me know when to kick, when 'Born to Run' started I had counted twenty-two laps\n\nOnce again, Coach K. caught me as I finished my run; \"34:49,\" he showed me the stopwatch, I threw myself into his arms and started crying my eyes out. We sat on the bleachers for a long time, he just listened as I poured my heart out; my anguish went all the way back to two years ago, the day my uncle Jim had been pulled out to sea, I had never allowed myself to vent my anger and frustration over his loss. And now Abby had chosen someone else over me,\n\nWith a sniffle, I finally stopped and just looked at him, \"thanks for listening, I guess I really needed that.\"\n\n\"No problem, I do my best to be here for all my runners,\" he smiled at me, showing me the stopwatch one more time as he wiped the last tear from my eye.\n\n\"I'll think about it, but not until next spring, it's going to take all I have to get through the rest of this semester.\"\n\n\"Deal, and please try to find a better reason to run; running from your pain only makes it worse when it catches up with you,\" he smiled and left me sitting in the bleachers.\n\nMy next stop was the library, midterms were over so there would be nobody there, I stepped over the rope closing off Jim's office and sat in his chair, talking to him like he was there, telling him about everything that had happened since he had gone. I could feel a warm comforting presence behind me, but when I turned, all I saw was a large shadow disappearing into nothing; it made me smile.\n\n\"Jamey, you really can't be in there,\" it was Ms. Sanders.\n\n\"I know, I just needed to talk to him again and this is as close as I'll ever get.\"\n\n\"That little room toward the back you like so much is where he used to hide when he wanted to write without being bothered,\" she smiled and I got up, adjusting Jim's chair as I left the room.\n\nAbby and Angela were gone when I got back to the room, I grabbed my book bag and headed back to the library; and idea had settled in my head and I felt this overriding compulsion, no need, to write it down.\n\nFinding my way to that little room toward the back of the library, I opened my laptop, took a deep breath, and let the words out, they flew through my fingers onto the screen. A story of love and passion, pain and despair, laughter and hope, the story of a guardian angel who had fallen hopelessly in love with his charge and had given up his wings to be close to her, losing most of his power in the process. He helped her slay metaphorical demons and other forces of evil as she grew into a beautiful young woman.\n\nWhen he felt the time was right, he introduced himself to her only to be spurned. Undaunted, he continued to help from the shadows, offering encouragement and small bits of assistance where he could until she finally returned his love; it was a beautiful love transcending anything physical. When she finally died of old age, he was once again granted his wings to carry her in his arms to the ever after where their love would live for eternity.\n\nSome time Sunday afternoon, Ms. Sanders knocked on the door to the little room, a security guard behind her. I was crying my eyes out again.\n\n\"Jamey, are you OK? How long have you been here?\"\n\n\"I don't know, what time is it?\"\n\n\"It's five O'clock Sunday afternoon, Henry saw you here by yourself crying and came and got me. What's the matter?\"\n\nI pointed to the computer,\" I think I'm going to call it 'When Angels Walk,' I smiled and sniffled, \"It's beautiful and I made it.\"\n\n\"You are so much like your uncle,\" she laughed, offering me a small packet of tissues from her purse, \"Can I read it?\"\n\n\"I'd like that, but you'd better stock up on these,\" I tossed the now half empty packet back to her and sent a copy of the story to her email.\n\nMore than anything, I was hungry, elated, tired, but mostly hungry. I found Abby and Angela in the dining hall. The looks on their faces were a mix of fear and dread. I set down my tray and kissed them each in turn full on the lips,\" So, my two besties had some fun Friday and didn't invite me.\" I laughed and sat down.\n\n\"I thought you'd be...\" Abby couldn't finish the sentence. Angela just blushed and looked away.\n\n\"I was at first, but I had a long talk with Coach K. and then I wrote a fricking novel, so I'm too tired right now to be anything but grateful, especially for you two.\"\n\nWe talked for a while, mostly about us and where we were and where we wanted to be, finally deciding to just let it play out; we were all too young for anything else anyway. I explained that I had, in fact, written a full novel, fifty-three thousand words in forty-eight hours, it was as if I had been possessed.\n\n\"I'm sure it needs a lot of work, but the story is so beautiful, I just couldn't not write it.\"\n\nI woke up the next morning buried in arms and legs and hair that wasn't mine, somehow all three of us had managed to fit in my bed. I recognized Abby's soft snores and discovered that Angela kind of whistled when she slept, it was all so cute and so wonderful. I just lay there and listened until Angela woke up, we kissed softly until Abby moaned and joined Angela, kissing my neck.\n\nThe two took their time covering my body with their kisses, touching, and caressing me until I erupted with Angela between my legs; shit she knew what she was doing. Abby was next as Angela and I dove into her pleasures. When Abby's orgasm shook the bed, it was Angela's turn, the marathon continued as we switched positions and partners, orgasms followed in quick succession as we missed breakfast and almost lunch before Angela finally begged us to stop.\n\n\"Lightweight,\" Abby and I laughed in unison. We were all covered with sweat and juice and happiness; the sheets would definitely need to be washed, but it had been so very worth it.\n\nWhen the pizza guy left and we stopped giggling about the look on his face, we pulled the mattresses off the beds and made a large pallet on the floor, picking up where we had left off until there was nothing left but exhaustion.\n\nThe rest of the semester was almost magical, we took turns sleeping with each other and it actually made things easier because as horny as we all were all the time, we each got a break every third day. I had aced all my midterms and Ms. Sanders had not only read my story, she had edited it, crying as she told me about some of the things I needed to do to make it better. When I wasn't studying or making love to Abby or Angela or both, I was working on my story.\n\nAbby and I went home with Angela for Thanksgiving and got to meet both her dads, which was fun. The fact that they didn't mind us all sleeping together, made it even better. As finals got closer, sex gave way to studying. I turned in my writing project early, apologizing to Dr. Elleridge for it being a little longer than the requested short story explaining that anything shorter just wouldn't have done the story justice.\n\nA few days later, he caught me coming out of my last final, Philosophy, probably looking like I had just run a marathon, and pulled me aside,\" tell me about your story,\" I could see he had been crying.\n\n\"It just came to me and I had to write it down. Once I started, I couldn't stop. Ms. Sanders helped me edit it, is that OK?\"\n\nHe hugged me,\" can I call you over the break? I'd like to talk with you and your parents about sending it to a publisher I know.\"\n\n\"So, it's good?\"\n\n\"Very good. Your uncle would be so proud of you. It's amazing that someone so young has such a depth of feeling for complex emotions,\" he smiled at me,\" it's actually quite wonderful.\"\n\nAngela and Abby took me to the airport, as much as I was going to be happy to be home, I was going to miss them more.\n\nBeing home was magical, Judy and Tom came over a lot, and Annabelle, while she was still my cat, seemed to spend a lot of time in my dad's lap. Dr. Elleridge called and we gave him permission to send off my story, even my dad cried when he read it and my mom raised an eyebrow at some of the sex scenes. Coach K. surprised us by showing up at the door with a scholarship in hand, when he showed my parents the times he had clocked, you could have heard a pin drop, I guess I was on the track team when I got back.\n\nChristmas morning came and I was eight years old again, waking everybody up and begging for them to get downstairs for the tree. Mom and dad spoiled everyone rotten as usual, I even got a used Jeep to take back to school, my dad was going to drive with me, and I would drop him at the airport. The best gift of all was a small framed picture that Judy and Tom gave to our parents, an ultrasound of their twins, mom and dad were going to be grandparents and I was going to be an aunt.\n\nTaking Flight\n\nThe spring semester was a mass of disappointment, none of the publishers we sent my book to would publish it, mostly because I was only eighteen and the didn't feel I had any credibility. A few even openly said they doubted I had written the book.\n\nWhile I posted good times at all my meets, even winning a few, I never seemed to find that next gear Coach K. was convinced was there. My best performance was at The Texas Relays where I finished seventh overall with a time of 33:25, a personal best. It was ironic that that time would have won the DII NCAA meet. Coach K. was proud anyway.\n\nAbby and Angela grew closer and closer and while we stayed best friends, it was obvious I was becoming the third wheel, so Angela and I switched roommates, Abby moving in with her and Jenny moving in with me. Jenny's quiet studious nature was good for me and while I did go down and spend the night with my girls once a week or so, she became a stabilizing force for me and my time with Abby and Angela slowly reduced to just hanging out and studying together and listening to their outrageous sexual escapades; somehow they both managed to keep their grades up.\n\nAll four of us went to the beach house for spring break, I gave Abby and Angela my room, the thought of the two of them loose in Judy and Tom's room, or, heaven forbid, my parents room was too much. I had been in the middle of their debauchery, so I figured that would be the least offensive. Jenny got Judy's room and I took the master.\n\nWhat I had expected to be a week of endless parties was actually kind of laid back, we did find a few parties and even had one ourselves, Jenny and I even found a couple of cute guys to hang out with. The looks I got from Abby and Angela were hilarious. Over the course of the break, we became the hangout location for those looking for a break from the hardcore partying going on at the condo's and clubs up and down the beach, just the place to sit on the deck and chill.\n\nJenny and I talked a lot, she wanted to know about me and Abby and Angela and I told her everything, she had been on the sidelines for most of it anyway, I explained that while I loved them both dearly, it wasn't the lifestyle I was looking for long term, \"Don't get me wrong, the sex is amazing,\" I joked, \"but I want a husband and kids, I want what my mom and dad have.\"\n\nJenny blushed bright red,\" So what's it like to kiss a girl, um, down there?\"\n\n\"Not as bad as you'd think, and if you get the reaction you're looking for, it's actually a lot of fun. I mean to make someone you care about feel good like that,\" it was my turn to blush.\n\n\"My mom says it's a sin, sex outside of marriage, I mean,\" there was a long pause,\" I've never even...\" she couldn't finish her thought.\n\n\"You've never touched yourself? You've never even had an orgasm?\" she shook her head.\n\n\"But I see how you guys are with each other and I know what you do and sometimes I even hear it, well, sometimes everybody hears it,\" we both laughed. \"You are all good people, and I don't think any of you are going to hell, I'm just confused, I guess.\"\n\n\"Have you talked to the pastor at your church?\" the look on her face bordered on horror.\n\n\"Do you trust me Jenny?\" I reached out and touched her arm.\n\n\"Yes,\" there was a need in her eyes,\" are you going to teach me how to be a woman?\"",
        "\"I would, but first, I think you need to resolve your faith issues. I wouldn't think of ever causing you to question your mom or your faith. There's a Christian youth center in the student union. I'll go with you when we get back and help you talk to one of the counselors there, if you want me to, and then you can decide what you want to do, OK?\"\n\nThe last day at the beach house was cleanup day. Everybody pitched in and it went quickly, Abby and Angela even did the laundry and made the beds, I had the feeling that mine really, and I mean really needed to be washed.\n\nWe were all exhausted when we got back to our dorm, Abby and Angela kissed me and hugged Jenny before heading off to their room, Jenny and I unpacked and crawled into our beds. I was almost asleep when Jenny sat on the side of my bed, \"Jamey, thank you for last week. I've never talked to anybody about that kind of stuff before. My mom just said it was a sin and refused to talk about it.\"\n\nI could feel her sadness, \"Jenny, it will all be OK, I promise,\" I pulled the covers back and rolled onto my back. She laid down next to me and put her head on my shoulder, crying softly as she fell asleep.\n\nI was at the track early the next morning, leaving Jenny a note telling her I would see her at breakfast. Coach K. was waiting for me when I finished my run.\n\n\" OK, how do you do that? You always know when I'm running. This is starting to freak me out, are you stalking me or something?\"\n\n\"If I were a stalker, you would be someone I would consider,\" the smile that went with that comment surprised me a little, \"but, No, we have cameras and the security guard calls me when one of my runners shows up way too early for a college student to be out of bed, you won't hear about it, but evidently there was an incident several years ago at the old facility. The University takes the safety of its students very seriously.\"\n\n\"And you drive over here every time they call you?\"\n\n\"Pretty much, but it's actually just a walk, I live about a block that way, and before this year,\" he looked straight at me, \"it was never an issue, except for the time one of my sprinters thought it would be a good idea to entertain his girlfriend in the middle of the field at four o'clock,\" he laughed, \"I told them to just turn on the sprinklers and went back to sleep.\"\n\nI laughed,\" I guess that would ruin the mood.\"\n\n\"So, what's bothering you this time?\" he turned and headed for the bleachers.\n\nI told him about Jenny and how concerned I was for her, \"she doesn't know anything and now she's looking to me for guidance. I'm not exactly the best role model, if you know what I mean,\" Abby, Angela, and I were well known for our lack of a filter.\n\n\"I think you're doing the right thing. Get her to someone that can help and maybe she'll figure it out before someone forces something on her she doesn't know how to handle,\" his smile got to me every time. \"Tell you what, here's my number, next time, just call me and we can talk, OK?\"\n\n\"I'd like that,\" I touched his hand when he gave me the card, holding my hand there just long enough for both of us to get uncomfortable.\n\n\"And, bring her with you the next time you run, who knows, maybe she's as fast as you and I get to take two runners to the Olympics in a couple of years.\"\n\n\"Rog,\" I grabbed his arm,\" do you really think I'm that good?\"\n\n\"Jamey, if you ever figure out a good reason to run, you could medal, I just know it,\" he patted my hand,\" now go get some breakfast, you have workouts in a couple of hours.\"\n\nEvelyn was amazing, we said a quick prayer and then I helped Jen tell her what was going on. After about fifteen minutes, I excused myself so they could talk in private. Two hours later, Jen came out with a big smile on her face.\n\n\"We called my mom,\" she hugged me hard. We found a bench under a huge pecan tree and just talked, her mom had cratered when Evelyn told her why they were calling, she had been pretty wild before she found the church, but by that time, it was too late and Jen was on the way, Jen's father didn't leave, her mom didn't know who he was. She was so afraid Jen would make the same mistakes, she went hardcore on the sin aspect, and avoided the subject all together.\n\nJen would see Evelyn every Monday for a while until she was comfortable with the balance between her faith and her curiosity about her sexuality. I agreed to drive her home for the weekend so she could have a heart-to-heart with her mom, I even added a little background about what Jen had been thrown into and praised her for her restraint and strong will. Her mom was going to pray for me, Abby, and Angela. I figured we needed all the help we could get.\n\nAt the Division II finals, I ran a bad race, going out too fast too soon and had faded toward the end, finishing third. Coach K. and I talked about my strategy; I had some work to do before I headed to Austin for the Texas Relays where I would be going up against the best in the country.\n\nOur flight back from Grand Rapids got delayed in Dallas due to weather and it was after midnight before I got back to my room.\n\nOpening the door as quietly as possible, I heard soft moans coming from Jen's bed. As my eyes adjusted, I could see one hand between her legs and the other in her mouth; she was biting her fingers trying not to make too much noise.\n\nHer eyes went wide, and she froze when I sat down next to her,\" Jen, it's ok,\" I whispered, \"can I make a suggestion?\" She nodded, if it had been lighter, I was sure I would have seen her blush.\n\nTaking her left hand out of her mouth, I guided her two middle fingers to her vagina, \"curve them forward just a bit and try to find the soft kind of spongy spot,\" I smiled and kissed her on the forehead,\" and have fun.\"\n\nSlipping on my dad's Dolphin jersey, I fell into my bed and closed my eyes, listening to Jen failing miserably at trying to be quiet, when the orgasm finally hit her, she buried her face in her pillow and screamed. I heard her footfalls as she ran across the room and kissed me hard, giggling as she made her way back to her own bed.\n\nIt was like Christmas when Jen told Abby and Angela about her first ever orgasm, describing in detail how I had helped her find her g-spot and how wave after wave of pleasure had ripped through her body. I told her she might have a future writing erotica, Abby and Angela just said they were jealous. It was not Jen's last.\n\nCoach K. and I worked on my race management; my running track had seen its last run; it had been holding me back. Finals came and went with all four of us making the dean's list and Dr. Elleridge raving about my short story about a delicate flower blooming in a harsh environment.\n\nThe night before Jen's mom was coming to pick her up, she slipped into my bed,\" Jamey?\" she asked softly.\n\n\"Hey, you lost?\"\n\n\"No,\" she giggled. I loved her laugh,\" I was just wondering if maybe, well?\" whatever it was, it was hard for her to say it.\n\n\"Whatever you need, I'm your friend and I'm here for you.\"\n\n\"Can, you, um kiss me, I mean down there?\"\n\nI sat up,\" Jen, are you sure you want that? Touching yourself is one thing, but this is, well, it's different.\"\n\n\"I know, but I've been thinking about it a lot and I go home tomorrow and it will be my last chance until September and if I wait, well, I might not do it,\" I could see her biting her lip, \"and I want to so bad, please?\"\n\n\"What do you want to do?' I laid back down next to her stroking her hair.\n\n\"Like you did with Abby, make love to me please?\"\n\nI took my time, teaching her how to kiss and what to do with her hands. Jen surrendered to my touch as I explored her body. She was softer than Abby and smaller than Angela, modest breasts with large nipples, a small waist, and a slight pooch just below her navel; it was all so perfect, and I kissed and caressed it all.\n\nHer mound was covered in the lightest blonde hair; it tickled my nose as I ventured to her core. I spent plenty of time teasing her, kissing the insides of her thighs, up and down her legs, even sucking on her toes which got a surprising response. I decided to stay there, her moans grew louder as I twirled my tongue between her digits and sucked them each.\n\n\"Oh, my, Jamey, is there anywhere you can touch me that doesn't feel like magic?\"\n\n\"Not really,\" I smiled up at her, \"remember that for your next lover and be sure to tell them what you like.\"\n\nMaking my way back up her leg, I could feel the tremors start as I neared her wetness, the aroma was strong and musky, and a little sweet,\" Oh fuck,\" she cried as I drew my tongue between her labia and flicked her button,\" it was the first time I had ever heard her say anything even slightly off color.\n\n\"So, you're enjoying yourself?\"\n\n\"Oh, my god yes!\"\n\nI pulled her swollen nub into my mouth and sucked hard, sliding my fingers inside her as I had shown her that first night, her body trembled and her moans became cries, my name filled the air carried by her passion as her hands gripped my hair and her body lunged beneath me. I refused to relent, driving her from one orgasm into the next as she cried my name, finally asking me to stop, her voice in a whimper.\n\n\"What do I do now?\" she laid her head on my shoulder.\n\n\"You lay here next to me and go to sleep,\" I kissed her sweetly.\n\n\"But you didn't...\"\n\nI kissed her again, stopping her mid-sentence,\" That's ok. I'm just glad I got to give that to you. You don't owe me anything. You gave me your first time, that was more than I have any right to ever ask for.\"\n\nI put in a personal best at The Texas Relays surprising myself more than anyone else and stopped in San Antonio on the way to the beach to kidnap Jen, promising her mom that my whole family was going to be there and even calling my mom and letting her talk to her. Jen packed in a hurry and we climbed into my Jeep heading south, a few hours later, she was one of the family and the two of us were covering my new nephews with all the kisses they could stand.\n\nWe had a great time at the beach, playing in the surf and laying in the sun, building sand castles and eating s'mores by the big bonfire my dad and Tom bult, babysitting for Judy and Tom giving them a night to themselves and just being good friends. There would be no repeat of our last night in the dorm, but Jen and I grew closer every day.\n\n\"I know what you meant about wanting a marriage like your parents, your family is so perfect. I wish my mom could find someone like your dad,\" Jen nestled up close to me.\n\nI felt something I hadn't felt in a long time, a warmth, a presence, almost a touch, but not quite, I smiled and wrapped Jen in my arms, the soft sound of the waves hitting the shore lulling me to sleep.\n\nAbby and Angela came down for our last weekend at the beach house, taking the fold out couch and promising to behave, they sort of succeeded. Between Angela's Tahoe and my Jeep, we got everyone to the airport, said our goodbyes and headed back to school, part of the reason Abby and Angela had come down was to help me convince my parents that the two- bedroom apartment just off campus we wanted to rent was a good idea, if Jen's mom said yes, we were in.\n\n\"Oh, no, not again, my mom is not going to be happy,\" Angela looked concerned, \"she just got the A.C. fixed and it's broken again.\" There was a utility truck with the name 'Ramirez Environmental' in stylized letters across the door parked in front of her house.\n\nThe laughter we heard when we walked in the door didn't sound like anyone was upset, Jen's mom was sitting at the kitchen table with a very distinguished looking Hispanic gentleman having a cup of coffee.\n\n\"Jen, I'm so glad you're home,\" Susan was smiling from ear to ear, \"this is Henry, he fixed our air conditioner a couple of months ago?\"\n\nAngela nodded,\" Mom, what's going on?\"\n\n\"We've been waiting for you and your friend Jamey; Henry wants to take us all to dinner at his brothers' restaurant.\"\n\n\"Um, ok, I guess but Abby and Angela will be here any second, we need to ask you something.\"\n\n\"The more the merrier, It's Sunday and Enrique cooks cabrito on Sundays,\" Henry's smile was just as big as Susan's.\n\n\"Mom, what is going on?\"\n\n\"Sweetheart, Jen's mom started...\"\n\n\"With your permission,\" Henry walked up to Jen,\" I would like to see your mother. She is a wonderful woman, and I will treat her very well,\"\n\n\"So, he's your boyfriend?\" Jen looked at her mom. Susan nodded, doing her best to hide her excitement and her trepidation.\n\n\"Looks like you got your wish,\" I whispered in Jen's ear.\n\n\"I think that would be nice,\" a small smile crept onto Jen's face, \"at least we won't have to worry about that old A.C. unit breaking all the time,\" we all laughed.\n\nAbby and Angela had gotten lost but eventually showed up and we bombarded Jen's mom, begging her to let Jen join us in the apartment. A very serious conversation about sex, and boys, and girls followed, when she was comfortable that there was no plot to corrupt her little girl, we had all been together for almost a full year and it hadn't happened yet, she agreed. Henry even volunteered his brother Alfonso would help us with furniture from his discount warehouse.\n\n\"How many brothers do you have, anyway?\" Jen kidded.\n\n\"Only six, and three sisters,\" we all liked Henry immediately,\" now come on I'm hungry and sometimes Enrique runs out of cabrito.\n\nDinner was delicious, Jen and I mostly watched as Abby and Angela tried to keep their hands off each other and Susan and Henry tried to hide just how close they had become since he fixed her A.C., I got the feeling that truck had been parked outside Susan's house a lot over the last few months.\n\nStuffed and happy and tired, we finally made it back to Jen's house, the girls, me and Jen, Abby and Angela were going to have a big sleep over in Jen's room. Watching Susan and Henry say goodbye was awkward.\n\n\"Mom, it's ok, I'm nineteen, you're not. You're a grown woman, he can stay, I don't mind, and don't you dare pretend this is his first time to stay here either,\" Jen hugged her mom and Henry stepped back inside, closing the door behind him.\n\nWe didn't get the apartment, Henry's sister Rebecca was a realtor and, through a connection, found us a cute three bedroom house about two blocks from the University, Alfonso's truck pulled up and unloaded enough stuff to fill the entire house, refusing to let us sign any kind of rental agreement or take any payment at all; he would work it out with Henry.\n\nAbby and Angela got the master since they were a couple and Jen and I each got our own room. The kitchen was nice and big, we'd have to figure out the cooking, and we had a huge porch on the back of the house, the common room would be perfect for gameday parties.\n\nWith everything unpacked, I called my parents and told them what had happened with Jen's mom, all about Henry and what his family had done for us and gave them a video tour of the house.\n\n\"Sometimes I think you have a guardian angel,\" my dad laughed.\n\n\"I have a whole bunch of them, my parents, my family, my friends, their families, I'm pretty lucky.\"\n\nIt didn't take long to figure things out, Jen took charge of the kitchen and Angela, our accountant, took charge of the bills. None of us had to work, so we created a single account that we all deposited into to cover rent and utilities, there would be monthly 'roomie' meetings to discuss any issues.\n\nI managed to get the cable guy to come by after hours and wire the whole house for internet by agreeing to let him take me to dinner, we had a great time but when he found out I was only nineteen, he switched from potential boyfriend mode to big brother mode, letting me know that if I ever needed anything, he and his friends were just a phone call away; I seemed to be collecting guardian angels.\n\n\"Jamey,\" Abby yelled from downstairs! I crawled out of bed and looked at myself in the mirror, I had been up too late last night chasing a new story about a young man a sorcerer turns into a Djinn and his first master, a spiteful, ingratiating jerk that abuses the power of the Djinn, ultimately ruining his own life in the process with careless wishes.\n\n\"It's Coach Dreamy,\" Abby met me on the stairs, her smile betraying what was running through her head.\n\nI stopped, went back upstairs, pulled a brush through my hair, and splashed some water on my face.\n\n'Um, coach, what are you doing here?\" I was actually glad to see him but just confused, \"and how do you know where I live?\"\n\n\"First, you've had the entire summer off and just because there's no drama in your life doesn't mean you get to slack off,\" he laughed at his own joke, but the smile that went with it made it work. I shook my head and smiled.\n\n\"Second, see the dark grey corvette, two houses down?\" I nodded. \"Well, I live next door to that,\" the classic Camaro in his driveway was beautiful.\n\n\"So, what are you doing here, today, this morning, at,\" I stopped, \"what time is it anyway?\"\n\n\"About eight-thirty and I thought you might like to go for a run.\"\n\nHe waited while I went back upstairs to change, falling in behind him was so easy, his pace was quick but not too fast and I could match his stride without too much effort, and his butt was to die for. I caught myself wondering what the rules were for a coach dating one of his runners, quickly putting the idea out of my head.\n\nWhen we got back to the house, we had put in ten miles through the neighborhood and around the University, I felt that good familiar burn in my legs that told me I had needed it.\n\n\"Rog, what are we doing?' I put my hand on his arm as he walked me to my door,\" who else are you taking on runs like this?\"\n\nHe stopped and looked at me,\" you're right, you're not just a special runner, I probably like you in ways that are inappropriate for a coach, and I apologize if I made you uncomfortable.\"\n\nI could feel myself blushing,\" you didn't, I like you, too, but you 'are' my coach, and I don't want to see you get in trouble. You know Abby calls you 'coach dreamy'?\" We both laughed.\n\n\"So, as long as we both understand and agree that this can go no further, we can do training runs and we won't have any problems, right?\" I nodded.\n\n\"And when we get to Paris in two years and you get your medal, we can reevaluate,\" he smiled at me.\n\n\"You mean if,\" I smiled.\"\n\n\"Trust your coach; when you find your 'it' there will be no stopping you. I saw it the first time I watched you run; you went some place special and something amazing happened. It's in there, we just need to find it.\"\n\n\"It's going to be a long two years, you know that, right?\"\n\n\"We'll be getting on that plane before you now it, you just watch,\" he smiled and turned to walk away, \"now go get cleaned up and I'll see you tomorrow.\"\n\nFall was easy, even with track, I breezed through my classes, Dr. Elleridge was fascinated with my Djinn series as the stories just poured into my computer. Rog had me running cross country and I didn't just win meets, I dominated them, posting serious DI times even attracting the attention of a few coaches who tried to poach me away. My dad and Coach K. put a quick stop to that.\n\nAbby and Angela were, well Abby and Angela, I was becoming convinced they would be together forever, and nothing could have made me happier for the two of them. A cute guy named William started hanging out at the house spending a lot of time with Jen.\n\nI got home from a meet late one night and heard a lot of giggling coming from her room, when William joined us all for breakfast, his bright red face was only matched by the glow on Jen's, we figured he might be a keeper. I got details later and she had told him exactly what she wanted him to do, he had obliged with great enthusiasm and she had returned the favor.\n\nChristmas came and went with the twins being the focus of everyone's attention. The spring semester was a continuation of the Fall, Will moved in with Jen and stepped up to help with all the bills, he was majoring in Hospitality Management and Jen was looking at culinary schools to go to after she finished her bachelors. Abby became the track team trainer and Angela continued in her passion for accounting, I ran, and I wrote, starting every day with a knock on the door down the street and at least a five-mile run.",
        "By the end of the semester, I had twenty-four installments in my Djinn series and had posted another personal best at the DII finals, this time winning comfortable with a time of 32:59.59, still close to two minutes short of what I would need to go to France next year.\n\nI had to skip the Texas Relays for Jen's mom's wedding; I had never seen Jen that happy. Henry made sure William understood the rules around dating his daughter and with all her new uncles, he was guaranteed not to get too far out of line. He and Enrique hit it off immediately.\n\nJudy and Tom couldn't make it to the beach and I opted to stay at school to take classes so I could finish a year early, Will and the girls all followed suit, all of us making time on weekends to go down and make sure my parents weren't bored; Abby and Angela got Judy's and Toms room, Jen and William got the couch, at Susan's insistence, I'm pretty sure they played anyway.\n\nThat fall I finished my thirty-sixth Djinn story and finally felt I could let it go for a while, while continuing to dominate the cross country meets, claiming every DII record there as to claim.\n\nWithout telling me, my dad, Dr. Elleridge and Ms. Sanders had compiled my Djinn stories into a collection and presented the whole thing to a few publishers. Under the tree Christmas morning, I got an acceptance letter and an offer to publish the whole thing. My dad and I drove into the city to meet with the publisher and my editor, it was a good thing I only needed nine hours to graduate, I had a ton of work to do to get it ready to publish, including coming up with a title.\n\n\"Dad, why did you run?\" I was staring out the window of the car as we drove home.\n\n\"It was what I was good at, and I saw an opportunity to use it to open other doors, why?\"\n\n\"Rog thinks I can make the Olympics, but I just can't find any more, he says I need to find my 'it'. I don't even know what that means.\"\n\nHe raised his eyebrow and looked at me when I called Coach K. Rog, \"Why do you run?\"\n\n\"At first, I did it to be like Uncle Jim. Now I guess I'm like you, I'm good at it, really good and there's a place there where I can just shut everything else out, no pain, no stress, no anxiety, just me and the track. I get a lot of ideas for stories there, too.\"\n\n\"And when you had that breakthrough?\"\n\nI blushed, \"I had just been with Abby the first time, I was so confused; I just ran until it all made sense.\"\n\n\"And now you run to block things out, maybe what he means is you need to find something to run for, to run towards, not from. The Olympics would be pretty cool, and I would love to take your mom to Paris.\"\n\n\"Thanks dad, nothing like a little more pressure,\" we both laughed.\n\n\"So, why do you write?\"\n\n\"Because the stories deserve to be told, I can't just leave them there, and they deserve to be told the right way. Like 'When Angels Walk', I could have let that Indie guy publish it but the changes he wanted would have made the story cheap, it deserves better, it's too beautiful to be anything but what it is.\"\n\n\"Why don't you feel the same way about yourself, especially when you run? Do you deserve to be anything but your absolute best?\"\n\nWe sat in silence for a long time. I let his words sink in, maybe I could do it just for me, to see how good I could really be. There were no words for how much I loved my dad in that moment.\n\n\"And you're calling Coach K. Rog now, what's up with that?\" My dad broke the silence.\n\n\"He's a good friend, not just my coach; I can talk to him about stuff,\" I could feel my neck and cheeks burning.\n\n\"Still, I never called one of my coaches by their first name, much less a nickname.\"\n\nI didn't say anything.\n\n\"I checked him out, he's a bit of a prodigy, only twenty-four, Masters in Sports Education from The University of Texas, seems to know how to coach runners, bright future ahead of him.\"\n\n\"Dad, just stop it, ok?\" I punched him in the arm, but he was right, I was madly in love with my coach, I had taken those summer classes to get my degree faster because of how I felt about Rog, I had destroyed all those cross country meets, for Rog and it hadn't been enough.\n\nThis spring, I would run for myself.\n\nI worked harder than I ever had, editing my book, running my heart out and it all started to come together. At the Division II championship, I set new collegiate records, not for just DII, but across the board in both the 5K and the 10k, qualifying for the Olympics in both events; we were going to Paris.\n\n'Tales from the Sands of Time' was released two days later to rave reviews, historians marveled at the accuracy of my representation of certain characters in my book, one in particular going on and on about how I had described Ponce De Leon, claiming it was like I had actually been there. They couldn't keep the book in bookstores, it screamed to number one on the New York times Bestseller list and would stay there all summer.\n\nThe Olympic Trials were in San Antonio, two new personal bests and an American Record in the 10k at 30:00.00; everyone had their eyes on Jamey Harper, especially one really cute track coach from a small college in Texas.\n\nThe 10K was day one of the Olympics, I didn't have time to get nervous, I had had good workouts and felt awesome. I was getting lots of attention, as much about my book as my running and I thrived on it. Rog never let me out of his sight, and I thrived on that, too.\n\nThe gun sounded and I sprinted to the front of the pack, staying to the inside and focusing on my plan, never pushing too hard and never letting the leaders get too far ahead, the pace was fast but comfortable. Two runners broke from the group, I almost followed but the favorite held her place, so I followed her lead. Sure enough, the group gobbled up the escapees and they fell to the back of the pack.\n\nWhen it finally happened, it almost caught me off guard, but I moved with them, slowly separating from the rest as we churned around the track, two laps to go and they started sprinting, I went with them again, staying close, out of the final turn I was in fifth place, my time was now, I reached deep looking for everything I had, focusing on the thin tape less than one hundred meters away, by less than a tenth of a second I had taken third, only the second American to ever reach the podium in this event.\n\nCovered in hugs and congratulations from the other runners, someone handed me an American flag that I waved proudly for the crowd. An hour later, I received a bouquet of flowers and my bronze metal, grasping the hand of the Kenyan runner that took the gold, the three of us raised our hands to the cheers of the crowd.\n\nI would repeat the process a week later, again taking the bronze in the 5k, the first American to do so. Rog found me after the ceremony, hugging me tightly and lavishing me in 'I told you so's'.\n\n\"Would you please just shut up and kiss me?\" I smiled at him, our lips met and nothing that had happened that week mattered.\n\n\"You're not my coach anymore, I grinned.\" He took me to his hotel, our clothes found the floor and our souls found each other, passion and sweat and sex filled the air as we explored each other for the first time, Rog kissed me and ran his fingers up and down my body, sucking on my breasts leaving large sloppy wet circles around them, his hand found my center and one and then two fingers slid inside me, finding that spot and massaging slowly as my passion rose.\n\nHis mouth followed the trail left by his hands, burying his face in my wetness, using his tongue to tease my aching bud, moving his fingers in and out, I screamed as one orgasm after another coursed through my body.\n\nRog entered me slowly at first, he was bigger than I thought he would be but somehow it all fit completely inside me, I moaned and squealed as he moved in and out, driving me insane with pleasure over and over again, I had lost count of the number of times I had reached climax or the number of times he had cum inside me, each seemed to be more powerful than the last; he was relentless until I begged him to stop.\n\nI froze and opened my eyes wide,\" Raj?\" it was almost a whisper.\n\nHis deep brown eyes burned into my core as he dangled a small pendant with a purple crystal in front of my face,\" I wished for a life with you, whatever that meant. I am no longer Djinn, but it was worth it.\" He kissed me sweetly and I cried uncontrollably until there was nothing left.\n\nEpilogue\n\nIn a rare occurrence, \"When Angels Walk' was published as I had written it and I had two novels on the New York Times Best Seller List at the same time.\n\nJen and I both got to be maids of honor at Abby and Angela's wedding while the honor was all mine when Jen married Will. We all stayed in that small college town, Abby as a trainer at the University while Angela set up an accounting office and Will and Jen opened a small restaurant on the town square.\n\nRog kept his position at the University, turning out several national championship teams and a few more Olympians. I got my PhD. at The University of Texas and settled down in my uncle's old office, teaching inspired young writers how to tell their stories while turning out a few of my own.\n\nMy students called me Dr. K because they couldn't spell Keshishian either and I got my exercise chasing three little ones around our house, more than one of them was pretty fast.\n\n \n"
    ],
    "authorname": "ShelbyDawn57",
    "tags": [
        "trans",
        "relationships",
        "oral",
        "orgasm",
        "cunnilingus"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/when-wishes-come-true-1"
}