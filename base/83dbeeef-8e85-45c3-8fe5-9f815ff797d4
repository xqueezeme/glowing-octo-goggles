{
    "title": "The Lady of the Manor Ch. 02",
    "pages": [
        "The Lady of the Manor -- Chapter 2\n\nClaire, the Estate Manager, knows about Thomas and the Viscountess...\n\nSylviafan\n\nThe dowager Viscountess Baythorpe's parting shot to me had been: \"and don't forget, Thomas: rough and dirty\".\n\nI heard nothing from her for a few days, during which I contemplated her last remark with a mixture of stomach-churning anticipation and nagging doubt. I'd had a girlfriend at university who liked a bit of light bondage during sex. Nothing heavy, just being tied loosely to the bedposts with scarves or stockings. But I'd never handled a girl roughly before, let alone spanked them. And that is precisely what I'd done to her Ladyship at our last encounter egged on, I may say, by the lady herself. She had clearly enjoyed it and her last remark indicated that she wanted more of the same -- or maybe something more extreme. So how far should I go? It wasn't my natural inclination. Not only that, but I was also starting to like Caroline very much; the last thing I wanted to do was hurt her. And I had to bear in mind that she was in her late fifties, maybe even early sixties. I was beginning to see that beneath that rather brittle aristocratic exterior there was a touch of vulnerability. And more than just a touch of wildness brought about by a lifetime of repressed sexual desires. And just what did she mean by \"dirty\"? I did a little on-line shopping to cover some eventualities and waited to hear from her.\n\nOn Friday I received a text that seemed to leave no doubt:\n\nDear Thomas, I'm so, so, sorry for the short notice again! Can you possibly come over on Sunday evening? I do hope so! I've been thinking about last weekend almost non-stop, and resisting the temptation to... well, you know. So I'll probably be a little wild. Maybe more wild than last weekend so you might have to be very firm with me!\n\nCaroline xxxxxx\n\nPs -- bring your things for an overnight stay, although I'll have to kick you out at seven again.\n\nI walked across the fields to Baythorpe Manor that Sunday evening, a knapsack on my back with some clothes and toiletries and the few things I'd purchased on-line. The weather was close and thundery after a long dry spell and the cows in the fields were all supine.\n\nViscountess Baythorpe must have been waiting in the hall, because she answered the door about five seconds after I'd rung the bell. I entered her ancestral home and she closed the big oaken door behind me and leaned back against it.\n\n'I'm sorry I kept you waiting until Sunday night. That was naughty of me.' This was delivered in a meek, subdued tone and I realised that our play-acting was starting now. I said nothing but stood looking at her leaning against the door. She looked good, her figure outlined to perfection by an expensive-looking grey silk cocktail dress complemented by grey stockings and matching three-inch heel court shoes. Her ash blonde hair was shining and she'd applied her make-up with her usual care, perhaps slightly overdoing the eye liner. Her full lips were a glossy red and she'd painted her fingernails to match. Yet again I was bowled over by this spectacle of mature, feminine, aristocratic perfection.\n\nBut now was not the time to compliment her; now was the time to be firm. Rough. I walked over to her and pulled her away from the door, grabbing a handful of her hair and tilting her head back, kissing her mouth, forcing her lips open with my lips, pushing my tongue into her mouth, licking her teeth and gums, mashing our lips together. With my free hand I grabbed one of her buttocks and thrust her hips against mine, rubbing my erection against her crotch.\n\nI released her and stepped back. She was breathing heavily and her eyes were wide open. 'What are you going to do to me?' she asked, quietly.\n\n'You've been messing me around, haven't you?' She nodded slightly. 'So I'm going to punish you.' I pointed to my knapsack on the tiled hall floor. 'There's a pair of handcuffs in there. Get them out.' She bent over and unzipped my bag. 'They're underneath that other stuff.' Where I had deliberately put them; I wanted her to see the \"other stuff\". It would excite her, perhaps unsettle her. I saw her pick up a purple latex butt plug and look at it before putting it back. Her hair was shielding her expression from me. She did the same with the bottle of lubricant and the bundle of nylon straps and clips.\n\n'These?' she said in a small voice, holding up a pair of pink metal handcuffs. They wouldn't have held a determined person for five seconds, but that wasn't the point. The implication of restraint and control was just as potent.\n\n'Yes. Now put your hands behind your back.' She stood up and did as I had told her and I clipped the cuffs on, noting that she was now breathing in ragged gasps, clearly very aroused. I zipped shut the knapsack, slung it over my shoulder and took her upper arm firmly in my hand, propelling her towards the staircase.\n\n'What are you going to do to me?' she asked again as her high heels clattered across the hall tiles.\n\n'You'll see,' I said as we ascended to the first floor and I hustled her along the corridor to her private quarters.\n\n'Those things, in the bag,' she began, nervously. 'The rubber thing... is it...'\n\n'It's a butt plug.'\n\nShe flushed. 'No! you mustn't! You can't put that up my--'\n\n'Shut up,' I told her, opening the door and shoving her through. Once inside I dropped the knapsack by the settee and sat down, pulling Caroline down over my knee and holding her there with a hand on her back, feeling the silkiness of her cocktail dress and the warmth of her body on my thighs, her hands still secured behind her back, fists clenched, knuckles white against the red of her nails.\n\nShe wriggled and kicked her stockinged legs. 'Please don't hurt me, Thomas. I'm sorry I messed you about.'\n\nWith my free hand I raised the hem of her dress and delivered a ringing smack to her bottom. 'Stop struggling.' She moaned and went limp and I pulled down her black silk cami-knickers to around her knees, exposing her gorgeous pale buttocks, bare apart from the suspender straps. I stroked her bum cheeks for a minute or two, building up the tension, then I smacked her again, hard, leaving a red imprint. Then more stroking, running a fingertip up and down the crack of her arse, across her rosebud. She flinched as I made contact with the little puckered hole and I smacked her again, on the other buttock. Then more stroking and touching and another smack. By the time I'd delivered four slaps to each cheek her buttocks were bright red. I felt momentarily guilty but Caroline had said she'd stop me if things went too far and she showed no signs of doing that. On the contrary, she was clearly very aroused. During my stroking I'd briefly explored her pussy and it was open and sopping wet. I'd even smeared a little of her juices onto her sore buttocks as a kind of salve. Now I reached for the knapsack.\n\n'What are you doing?' she asked, tremulously.\n\n'I'm getting out the butt plug,' I replied, 'and the lubricant.'\n\nHer voice was a whisper, her breathing fast and shallow: 'You mustn't use that thing on me, it's too big.'\n\nI ignored her and opened the bottle of lubricating jelly, squirting a dollop of the sticky, viscous fluid onto my fingertips and smearing it around her anus. I could feel that she was tense so I was very gentle as I pushed my middle finger slowly into her rectum. 'Thomas, no! That's my private place!' This protest, delivered in her cut-glass accent, increased the eroticism of the act and reminded me that I was pushing my finger into a Viscountess's arse! I withdrew it and added both more lubricant, and my forefinger. Pressing gently I worked the tips of both fingers in and inserted them slowly to the second knuckle. Caroline whimpered and said 'no' a couple of times, but without conviction. She'd relaxed and was breathing evenly.\n\nI pushed deeper until both fingers were fully in then I rotated them slightly, working gently in and out before removing my fingers and reaching for the latex plug. Her Ladyship must have realised what was coming because she tensed up again. 'Oh God, Thomas, please don't.' I ignored her again and lubed up the plug, grasping it by its base and working it between her bum cheeks, touching the tip to her crinkled hole, pushing gently, keeping up a steady traction.\n\nThis was new ground to me, although probably not for Caroline. She'd intimated that there had been a few wild nights when she was at university and afterwards, before she got married. The closest I'd ever got to anal sex was pushing the odd exploratory finger into a girlfriend's arsehole. So I'd gone carefully with my fingers and I was going even more carefully with the butt plug. The tip was no wider than my middle finger but the widest section was nearly as thick as my erect penis. And erect it most certainly was. Caroline must have been able to feel it pushing into her stomach as I violated her anus.\n\nThe tip went in easily enough and the gradual taper made it easy to push in, expanding her sphincter, opening the ring of muscle as the lube-shiny latex made its way into her rectum. Then she relaxed again, the anticipated pain not having materialised, yet, and I pushed the plug in to its thickest bit and beyond. She cried out briefly and her buttocks clenched, then it was in and her sphincter was closing around the base.\n\nI stroked her arse cheeks for a few minutes while she got used to this thing inside her, filling her anus. Then I roughly pulled her knickers back up and helped her to stand up. She looked a bit shaky and her mascara had run, making her look older, more haggard. The butt plug seemed to have brought tears to her eyes, but if she didn't want me to stop then I wasn't going to spoil the game by asking her how she was. She looked at me, nervously, then flinched as I hefted the knapsack and grabbed her upper arm, pushing her towards the bedroom door.\n\nInside her bedroom I sat her in an upholstered Queen Anne chair, next to the bed, still handcuffed, her face flushed with excitement and nerves. She watched in silence as I made a show of getting the bundle of straps and buckles and clips out of the rucksack and sorting them out on the big four-poster bed. The pillars at each corner were just made for attaching bondage equipment and within a few minutes I'd got everything sorted out and in position. If she was expecting me to drag her to the bed, then I surprised her, by stripping off my clothes, folding them neatly and placing them on the big chest at the foot of the bed. My cock was iron-hard, the glans purple and engorged and leaking pre-come in strings over my cock and pubes. I walked over to the chair and grabbed a handful of her ash-blonde hair, forcing her head to my cock. 'Now suck me off,' I said, thrusting the head between her red lips. She closed her mouth around my penis and I started pushing in and out, causing her to gag slightly. The whole scene was out-of-this-world erotic. Unbelievable, almost, that this was happening to me. I felt my climax approach and slid my erection out of Caroline's mouth.\n\n'Stand up,' I told her. It was difficult for her, being handcuffed, but she managed it and stood in front of me looking tense. I half turned her and released her hands. 'Now strip. Leave your stockings and garter belt on.' She did as she was told, saying nothing, not meeting my eye. When she was finished she stood in front of me, one arm across her breasts and her other hand trying to cover her pubic bush, looking the picture of the violated middle-aged maiden. I snatched the arm away from her breasts and fondled them roughly, mauling the soft globes, tweaking the nipples between thumb and forefinger. She cried out as I clamped my fingers on her nipples and I threw her onto the bed, on her back, then knelt over her, securing her slim wrists with straps, clipping the straps to the restraints on the bed posts, pulling the straps tight and stretching her arms out above her head. Then I did the same with her legs, leaving her spreadeagled and powerless, her sex exposed for my pleasure.\n\nI spent some time fussing with the straps, tightening here and there, building up the tension. She pulled against her straps, testing their restraint, finding little room for movement. 'What are you going to do to me now?' she asked, plaintively.\n\nI climbed onto the bed and started stroking her pussy, running my fingers through the silky hair, finding her outer lips with my fingertip and tracing the opening, feeling the wetness of her secretions. Then I smacked her cunt firmly and she squealed and arched her back and pulled at the straps. 'Oh God, you bastard.'\n\n'Language,' I warned her, stroking her pussy again. Then I smacked her again and she cried out and pulled furiously at her restraints. So I smacked her again, and again and she stopped fighting and lay there whimpering, flinching at each blow. Her twat was now as red as her arse and I felt another stab of guilt which I managed to suppress by the simple expedient of kneeling between her outstretched legs and thrusting my seven inches into her cunt, feeling the tightness of her titled twat grip my cock, feeling the heat and liquid surround my rigid meat.\n\nI fucked her hard, ruthlessly, for about ten minutes, long, hard thrusts, the Viscountess writhing and moaning beneath me, arching her back to meet my thrusts, before the signs of impending orgasm made me slow and withdraw. I spent some more time squeezing her breasts and biting her nipples and making her squeal some more, then I knelt over her and shoved my cock in her mouth and started fucking her face as she looked up at me with eyes wide open, pupils dilated. After a couple of minutes of this oral violation I took my meat out of her mouth. 'Time to turn you over,' I said.\n\n'No, you mustn't,' she whispered, 'that's too dirty, and you'll hurt me with your great big penis.' She evidently knew what was coming but I ignored her again and unclipped her legs then her arms. She was limp and unresisting as I rolled her over and secured her face down, fussing with the straps again until they were so tight she could hardly move. Then I climbed off the bed and picked up the tube of lubricant, aware that she was watching me from the bed, her head turned towards me. I made a big show of squeezing the sticky jelly on my cock head and rubbing it around, masturbating myself slowly and shamelessly. Inside I was a seething mass of stomach-churning anticipation and nervous excitement. There was no longer any guilt; I knew exactly what the Viscountess wanted, and she was going to get it.\n\nI climbed back up onto the bed and positioned myself between her stockinged legs, marvelling at their slim perfection. Then, slowly and carefully, I pulled out the butt plug. It was more difficult than I had anticipated. The suction action was strong and I had to pull quite firmly, with a twisting motion, as if I were uncorking a bottle. Then it was out, shiny and lubricated but with no mess on it. Supporting myself on one arm, and gripping my cock with the other hand, I lowered myself down until the tip of my glans touched her arse crack. I rubbed it up and down, smearing lubrication and seeking her final, most private hole. I pushed gently and she gave a little scream. 'A bit higher,' she gasped. I went up her crack a tiny bit and pushed again. She cried again. 'Higher!' I moved up a bit more and pushed and she relaxed and I guessed I'd found the entrance to her rectum. I pushed harder, keeping up a gentle traction, as I had when inserting the butt plug. But this was different; the thickest part was the first in and I was concerned that I would really hurt her. But Caroline made no complaint apart from a gasp as I pushed even harder and found, almost to my amazement, that my cock was actually going into her arse, stretching the muscle ring to accommodate my cock head, taking it in and closing around my shaft. Slowly, slowly, feeling the sphincter tight around my meat I entered her rectum to my full extent and, for the first time in my life, felt the grip of a lady's anal sphincter and the soft, warm envelopment of her rectal walls.\n\nWords can barely describe the thrill I felt at that moment. I was seven inches deep in the anus of an attractive and sexy older woman and a member of the peerage to boot. It was the stuff of fantasy, happening in the here and now. Beneath me Caroline was quite still, breathing in great gasps, trying to calm herself and accept my cock inside her rectum. Slowly, slowly I withdrew an inch or two then pushed back in. Then further out and in until I was fucking her with about six inches of cock, stopping just before my glans popped out of her and pushing, thrusting back in. She started moaning as I built up speed, my cock pistoning in and out of her tight hole, making faint sucking and squishing noises.\n\nIt was heaven on earth. I wanted to fuck her anus all evening and into the night but my orgasm was building and this time there was no stopping it. It tingled through my balls and cock and up my spine and crashed through my cortex like a firework display. It was so intense it stopped all thought and reduced my existence to a singularity -- a cock fucking an anus. I pumped and pumped my spunk into her rectum and underneath me she screamed and pulled at the restraints, tears running down her cheeks.\n\nThen I was done, the orgasm faded and I fell over her, spent and empty. A great lassitude overcame me and I felt like closing my eyes and sleeping on Caroline's back, but I raised myself and slowly withdrew from my titled lover, a faint \"plop\" audible as my glans was ejected by her contracting sphincter. I climbed off the bed effortfully and went to the bathroom to wash, leaving the Viscountess still strapped to the bed, a bead of spunk visible on her rosebud. When I returned she was still motionless, her eyes closed, her breathing normal. I unclipped her hands and feet and lay down beside her. She turned to me and snuggled in under my arm and I drew her to me and stroked her face and neck and her back. Now I could ask her.\n\n'Are you ok? Was that alright?'\n\nShe looked up at me. 'I've never felt anything like that before. It was... indescribable. I came three times. Once when you were in my bottom. I never thought that would happen.'\n\n'And I didn't hurt you?'\n\n'Yes, you hurt me. When you spanked me and when you penetrated my anus. That hurt quite a bit, but it was a sharp pain, over quickly, and then -- wow! I never thought it would feel so good. So big and intrusive and dirty and so, so erotic. It was thrilling, Thomas. All those years I spent fantasising while I was getting ten minutes in the missionary position once a fortnight. What a waste.'\n\n'You mean you've never done that before?' I asked, surprised.\n\n'No. You've just taken her Ladyship's anal cherry.'\n\n'And you've just taken mine,' I said, grinning. Then we were both laughing then kissing and rolling together on the bed happy to be in a secret and erotic relationship, tasting such forbidden fruits.\n\nAfterwards we went downstairs and foraged in the kitchen for some supper which we ate at the big scrubbed-pine table. Then we took a bottle of wine back to bed and lay together sipping and talking quietly.\n\n'There's something I need to say, Caroline,' I said tentatively.\n\nShe looked at me. 'That sounds a bit ominous. Is it something I'm not going to like?'\n\n'No, at least I hope not. It's just that I was happy with tonight. No, that's silly, I was delirious with tonight, but I don't think I'd want to do anything more extreme. I wouldn't be able to hurt you more than I have done tonight.'\n\nShe smiled. 'That's fine, darling. It's about the limit of my fantasies too.' Her face took on a distant expression. 'Maybe there are a couple of things...' I pressed her but she wouldn't say what those things were. So we finished the wine and made love very tenderly and with consideration for the Viscountess's sore buttocks and then we slept as a thunderstorm swept the farms and villages around and boomed over the house. At one point Caroline crawled into my arms and we slept again as the storm spent itself and dawn came up over the soaking fields. And, as before, I rose soon after dawn and left the house and walked back over the wet pasture to my little bungalow on the edge of the woods.",
        "The following Friday Caroline called me at work. She sounded awful: croaky and hoarse. 'I'm so, so sorry Thomas darling but I've got this dreadful lurgi and it's knocked me flat. So I'm going to have to put you off this weekend. I am sorry. I'll make it up to you next time, I promise.'\n\nI was disappointed. I had been looking forward to a repeat, possibly with variations, on last Sunday's activities. That left me free for the weekend, if you didn't count the stuff I still needed to do to my bungalow. So when a group of lads in the office suggested a pub crawl in the centre of Bath on Saturday evening I agreed. It wasn't exactly my thing; a few pints in a country pub after a long walk was more my style, boring as that may sound. I knew the novelty of traipsing round a succession of city pubs while my work colleagues became more and more drunk and boisterous would soon wear off, but I wanted some company, to compensate for not having Viscountess Baythorpe. And besides, I could dip out any time I wanted and take a taxi home.\n\nThe evening, having started early, progressed predictably. At eight-thirty we were in a place on the outskirts of the city centre which was slightly quieter than the previous six establishments. Too quiet for the lads, in fact, and they bolted their pints and made to leave. I signalled that I was done for the evening and after the usual ribald remarks and cries of \"lightweight\" they stumbled through the door and I was on my own with three-quarters of a pint left in my glass and nothing much to do for the rest of Saturday evening.\n\nIt wasn't a big place: a modest and largely empty lounge bar at the front and a function room at the back. The connecting door was open and I could hear, and partially see, that there was a pub quiz going on. After a few minutes the quizmaster announced the half-time break and people started trickling in through the connecting door. Presumably there was no bar in there. I'd fallen into a sort of reverie where I was imagining all the positions and places that I'd like to fuck her Ladyship, and where I might tie her down next. I was trying to visualise how she'd look strapped to the big kitchen table when I was startled by someone talking to me.\n\n'Thomas Bailey! What on earth are you doing in here all by yourself on a Saturday evening?'\n\nI looked up and met the gaze of the Baythorpe Manor estate manager, Claire Downing. I hadn't seen her since that first visit to Baythorpe, and then only for a few minutes. Clever of her to have recognised me I thought, inconsequentially. I hadn't taken too much notice of her on that occasion having been nervous about meeting her Ladyship. I'd taken in black hair and a pale complexion and, I now recalled, a trim rear end, but little else. 'I was on a pub crawl, with a few people from work,' I explained. 'But they were hell bent on getting drunk and going clubbing so...' I shrugged.\n\n'Not your scene then,' she smiled, and I had my first proper look at her: deep blue eyes in a pale, oval face with full lips and a straight nose all surmounted by collar-length raven-black hair. She wasn't beautiful, but she was attractive and her figure was nice: slim, long legs and a neat bust.\n\n'Not really,' I replied. 'Especially the clubbing bit. I'd rather have root canal treatment.'\n\nShe laughed and nodded towards the function room. 'Pub quiz more in your line is it?'\n\n'Definitely.'\n\n'Well, come and join us. Our team's one down and it's sport next and we haven't a clue. And I seem to remember her Ladyship telling me that you used to be a professional rugby player.'\n\nI blushed. 'That's over-egging it a bit,' I said as I allowed myself to be taken into the function room and installed at a table with a man a few years older than myself and several middle-aged ladies. Introductions were made and the quizmaster appeared shortly afterwards and the second half of the quiz got underway. I won't bore you with the details but I did acquit myself creditably on the sports round and, partially as a result, our team came second, which was apparently their best ever result. The middle-aged ladies finished their drinks and left and Claire and I and the other man, whose name was David, chatted for another half an hour or so. Then he stood up and thanked me and said his goodbyes and left. I was a bit surprised, and pleased; I'd imagined that he was Claire's date.\n\nMy surprise must have shown. 'Did you think David and I were an item?' she smiled.\n\n'Well,' I mumbled, embarrassed again, 'it's none of my business.'\n\nClaire laughed. 'David has a partner. He's called Trevor.'\n\nI asked Claire if she would like another drink and we talked about books and music and my bungalow and her job at the Manor and friends and families and the time passed very agreeably until closing time.\n\n'Can I walk you home?' I asked, feeling rather old-fashioned.\n\n'If you like,' grinned Claire. 'It's only about five-hundred yards.' She had the top floor flat in a Victorian terrace and we stopped on the gravelled driveway in front of the big communal front door. 'Thank you,' she said, showing no inclination to invite me in. 'I've enjoyed talking with you. It's been a nice evening.'\n\nThere was an awkward, pre-parting pause. 'Would you like to go out for dinner some time? Or just to have a drink?' I'd rehearsed what I was going to say but it hadn't come out very smoothly.\n\n'Like a date?'\n\n'Yes, if you like.'\n\n'Mm. No offence but I'll need to think about that.'\n\nI handed her a business card, slightly piqued. In my experience \"I'll need to think about that\" meant no. 'Well if you would like to, give me a call.' I pecked her on the cheek and left, wondering where I was going to find a taxi.\n\nMy phone rang the following afternoon as I was plumbing in my new washing machine. I didn't recognise the number and nearly didn't answer it.\n\n'Hello?'\n\n'Thomas?'\n\n'Yes.'\n\n'It's Claire, Claire Downing.' I gulped. 'I think I'd like to take you up on your offer of dinner, if it's still on the table, as it were.'\n\n'Of course! That's great!' We arranged to meet at a pub in Bristol and eat at a nearby Italian restaurant the following Friday evening and I went back to my plumbing with a light heart and a spring in my step. Having riotous and kinky sex with a fifty-something Viscountess once a week was fantastic but it really wasn't the same as having someone that you could appear in public with and go on holiday with and that sort of thing. And besides, Caroline had specifically said that she wouldn't mind my having a girlfriend. Then I realised that I was probably jumping the gun; we were just meeting for dinner after all.\n\nFriday came and Claire and I met in the Bishop of Bath and Wells public house, a noisy and crowded place on this early summer evening. The conversation was a little bit stilted and I think we were both relieved when it was time to go to the restaurant where we were shown to a quiet table in a corner.\n\nShe looked good, that first evening. She was wearing minimal and restrained make-up and a knee-length red dress, which allowed me a peek at her legs, which were slim and shapely. We ordered pre-prandial drinks and looked at each other across the little table.\n\n'Why the change of heart?' I asked.\n\nShe appeared to consider the question. 'Not really a change of heart. There were a couple of things I needed to get my head around before I agreed to a date with you, Thomas.'\n\n'Tom, please. And what were they, if you don't mind me asking.'\n\n'Well firstly your age. You're a few years younger than me, I'm guessing.'\n\n'I'm twenty-five.'\n\n'I'm thirty-one.'\n\nI shrugged, to indicate that it was of no importance. 'And the other?'\n\nShe smiled slowly. 'I was a bit worried about the impropriety of dating someone who's screwing my employer.' My mouth half opened in astonishment and I stared at Claire, temporarily unable to speak. 'It's the CCTV,' she said. 'It was installed by the late Viscount but I don't think Caroline knows a lot about it.' I still said nothing, although I remembered to close my mouth. 'There are hidden cameras, installed over all the external doors, they're motion sensitive so they only record when someone comes to the door, or leaves,' she explained. 'I check them sometimes in my office. And a few weeks ago, lo and behold, Mr Thomas Bailey started turning up. And staying overnight.'\n\nMy pulse was returning to normal and I took a sip of the iced water the waiter had brought. 'So why did you agree to a date, if you knew I was screwing your employer, as you put it?'\n\n'Well I could say that she's my employer and I have a duty to look after her interests and find out what's going on and so on but that would be terribly pompous, and only partly true. I was curious, I suppose. Also,' she blushed, making her look ridiculously pretty, you're rather my type.'\n\nThis time she did invite me up to her flat and, as soon as her front door was shut behind us, she grabbed me and kissed me hard. I responded, feeling my erection growing and we made our way to her bedroom, leaving a trail of discarded clothing across her hall and living area. It was a bit like my first time with Caroline. Claire wanted it there and then, with minimal foreplay. By now we were both naked and I could see that her body was magnificent: pert, upturned breasts, taut stomach and slim hips and a raven-black pubic bush. I entered her without preamble and she gasped and wrapped her arms and legs around me. Her cunt was wet and hot and tight and I proceeded to fuck her hard and fast as I had fucked her employer that first time. We kissed as we fucked, lips, necks, cheeks, ears. Then my climax was building and she seemed to sense this.\n\n'Not yet, Tom. Turn me over.' I pulled my cock out of her and she scrambled onto her hands and knees, her shapely bottom pointed at me invitingly. I entered her again, deeply, and she groaned and frigged herself with one hand as I shafted her sopping twat.\n\nWe came at the same time. I gasped and jetted my spunk into her and she screamed and thrust her hips back at me and then it was over and we lay side by side, almost embarrassed by the rawness of our sex and the speed with which it had happened.\n\n'Well at least I now know what her Ladyship's getting,' said Claire, after a few minutes silence.\n\nI spent the rest of that weekend with Claire and we walked and talked and made love and cooked together in her tiny kitchen. Claire told me that she had been employed as the estate manager for four years and enjoyed the job immensely. 'I really admire Caroline. She does a lot of good stuff in the community. And she's still a striking looking woman. I can see why you're attracted to her, despite the age gap.'\n\n'How old is she?' I asked. 'If that's not betraying a confidence.'\n\n'She's fifty-eight. I only know that because I've renewed her passport. But she could pass for less. And she's so elegant and she dresses so stylishly.'\n\n'Sounds like you fancy her yourself.' We were lying in bed on Sunday afternoon, a post-coital lassitude upon us.\n\nTo my surprise Claire appeared to consider the question seriously. 'Yes, I suppose I do, in a way.' She paused, her head on my chest, tracing one of my nipples with a fingertip. 'I mean I don't think of myself as bi or anything but...'\n\n'Yes?'\n\n'Well, I suppose that if she'd made a pass at me instead of you I'd have... responded. Does that turn you on?' she asked, noticing that my penis was rising gently to attention. 'Shame to waste it,' she said, getting to her knees and straddling me.\n\nWe'd only made love half an hour previously but Claire seemed aroused by the turn the conversation had taken. So was I. She sank down onto my cock and started thrusting her hips backwards and forwards, grinding our pelvises together, rubbing her clitoris against my pubic bone. I took her hips and urged her on.\n\n'Does Caroline like this position?' she gasped.\n\nI had resolved not to speak to Claire of such things but this was different, I told myself. This was an exciting game and one that could lead anywhere. 'Yes, she likes it,' I grunted. 'It makes her come a lot.'\n\n'What else does she like?'\n\n'I can't tell you!'\n\n'Oh God, please tell me! I'm so excited!'\n\n'She likes me spanking her...' At that point Claire's orgasm hit her and she threw her head back and screamed and rode me in a bucking frenzy that made me come too, a very unusual occurrence for me in that position.\n\nClaire climbed off me and lay down, her head on my chest. 'Do you really spank her?' she asked.\n\n'Yes,' I confirmed, 'quite hard. It makes her bum ever so red.'\n\n'What else do you do?'\n\n'Look, Claire, I've already said more than I should...'\n\n'I'm not going to tell anyone. She's my employer, I have a loyalty to her. And I like her and admire her. I'd never compromise her. I'm very discreet.'\n\nI knew I shouldn't really say anything else but I was caught up in the moment. 'She likes me to be a bit rough with her. So she likes the spanking and being tied down--'\n\n'She likes bondage! No! Really? wow! Sorry, go on.'\n\n'Well that's it, really. I tied her down to her big four-poster last Sunday and she loved it.' I decided not to say anything about having anal intercourse with Caroline. That would be a betrayal too far.\n\nClaire carried on probing but I said nothing more. 'Are you going to tell her about us?' she said, finally.\n\n'Do you want me to? I don't mind; Caroline made it quite plain that she was happy for me to have a girlfriend.'\n\nMm, I'm not sure. No, go on, tell her.'\n\n'Should I tell her that you know about us?'\n\nClaire thought for a moment. 'Yes, tell her that, too. It'll be interesting.'\n\nI left Claire soon afterwards and drove home to my bungalow. As I got in my phone beeped at me indicating a text message:\n\nDear Thomas,\n\nI'm feeling so much better! I think it was just a twenty-four-hour bug. Can you come over this evening? I know it's short notice, again, but it would be wonderful to see you. Obviously you'd have to punish me severely for messing you about once more...\n\nCaroline xxxxxx\n\nI'd spent most of the weekend screwing Claire but hey, I was twenty-five and besides, what else could I do other than go to Baythorpe Manor? I texted Caroline, showered and went straight over. She was waiting in the porch with the big oaken front door open. I bundled her in and kicked the door shut then grabbed her and kissed her and roughly groped her breasts, holding her hands behind her back with one of mine.\n\nShe was dressed beautifully, as always, in a cream woollen dress and flesh-coloured seamed stockings. The sight of the seams sent quivers through my cock and I kissed her harder, mashing our mouths together, squeezing one of her breasts until she squealed with pain.\n\n'Get upstairs.' I hastened her on her way with a smack on her bottom and followed her as ran up the stairs and along the corridor to her rooms. 'Now get the handcuffs, the butt plug and the lubricant,' I ordered her, once we were inside. She disappeared into her bedroom without a word and reappeared holding the items. 'Now bend over the back of the settee.' She did as she was ordered and I quickly secured her hands behind her back. 'Right, this messing me about has to stop,' I said, strolling around the settee as she tried to follow me with her eyes, 'or I'm going to have to punish you very severely.'\n\nThe Viscountess whimpered. 'I'm sorry Thomas, darling. I've been poorly.'\n\nI ignored this and stood behind her, stroking her bottom and raising her dress half-way up her back. She was wearing white lingerie with her flesh-coloured stockings. I pulled down her panties and she flinched, expecting a blow to her buttocks. Instead I massaged the milky mounds, stroking my finger down her arse crack and making her flinch again. Then I saw the riding crop. It was sitting on a chair by the bedroom door and I immediately knew that Caroline had put it there so that I would notice it, and use it. I walked over as she watched me and picked it up, swishing it through the air.\n\n'Oh God, Thomas, please don't hit me with that!'\n\nI put it down on the settee, right by her head, and picked up the bottle of lubricant. Slowly and methodically I squeezed a blob of the stuff onto my fingers and rubbed it around her puckered little anus. She shivered and moaned. I squeezed out more and slid my middle finger inside her, working the lubricant round, then adding another finger. She gave a little scream as the second finger went in so I slapped her buttocks with my free hand. 'Don't make a fuss.'\n\nThen it was the turn of the butt plug. As before I was gentle, pushing the tip lightly against her sphincter until it started to go in, then keeping up a very slow pressure as the shaft got thicker and her muscle ring stretched more. She gasped as the thickest part went past her ring and moaned as the muscle closed around the base. I wiped my fingers on a towel and picked up the riding crop again.\n\nThe first stroke was very gentle and she said nothing. The second was harder and the third much harder, swishing down to crack on her pale bum cheeks and leaving a red welt. Caroline cried out and called me a bastard so I whipped the crop down on her other cheek, then back to the first, then the second again...\n\nI stopped after about ten blows. Her buttocks had parallel lines of welts on them. Angry and red. I thrust my hand between her legs and felt her wetness, her arousal. Undoing my belt and trousers with one hand I positioned myself behind her and thrust my seven inches of rigid cock straight into her titled cunt. The Viscountess thrashed her head around and gasped as I fucked her ruthlessly with long, hard strokes. Then I was out of her and hauling her up from the settee, pulling her knickers up and thrusting her towards the bedroom door. I guided her to the bed and took off the handcuffs. 'Get your dress and knickers and bra off.' Caroline obeyed meekly, not meeting my eye. I threw her unceremoniously on the bed, on her back, and secured the straps to her wrists and ankles, pulling them cruelly tight as she arched her back and moaned, saliva at her lips. If she wanted it rough and dirty, that was how she would get it. I hadn't finished with rough, yet; dirty would come later. Kneeling over her face I pushed my cock past her scarlet lips and started fucking her mouth, making her gag as I got five or six inches inside her. It occurred to me at that moment that if the Viscountess wanted me to stop there wasn't much she could do in the way of letting me know, her arms and legs being strapped tightly down and her mouth full of my cock. I slid out of her mouth and, without further ceremony, rammed myself into her pussy, feeling the butt plug through the walls of her vagina. She gasped and opened her eyes wide as I started fucking her cunt hole, leaning over to kiss her and bite her neck, holding her head still with a handful of her ash-blonde hair.\n\nI think she had an orgasm at that point because her vaginal muscles seemed to grip me tighter and she groaned loudly and closed her eyes. So I stuck my cock back in her mouth and fucked her there for a couple of minutes then back to her cunt, thrusting hard, knowing that, after at least two orgasms with Claire earlier today, I would need additional stimulus to achieve a climax.\n\nSo, after about the third invasion of her mouth, I unbuckled the straps around her ankles and lifted her stockinged legs up and over so that her knees were practically touching her tits, admiring the line of her stocking seams against her perfect thighs and the base of the plug protruding from her anus. Holding her legs against her chest with one arm I gently extracted the butt plug and threw it on the floor next to the bed. Then I reached over to her bedside table and grabbed the lubricant, squeezing a dollop directly onto her rosebud. She squealed and tried to free her legs so I smacked her arse and she went limp.",
        "'Please don't hurt me,' she said in a small voice. I ignored her again and, still holding one thigh down, guided the tip of my penis to her little puckered hole. I was very gentle; there was no way I was going to hurt this gorgeous lady. If she wanted me to stop we had a codeword, but she said nothing as I pushed harder and her sphincter opened and my big purple glans slid slowly into her rectum. She gave one sharp cry of pain then started breathing heavily, relaxing herself. I paused, then continued, relentlessly inserting my rigid shaft until I could go in no deeper. I leaned over and kissed her, tenderly, then I started fucking her arse, slowly at first, letting her get used to the sensation, building up speed, hearing the faint sticky slurping of the lubricant as I slid in and out, thrilled by the sensation of having anal intercourse in the missionary position, kissing my lover and staring into her eyes as I violated her anus.\n\nI fucked her arse for a long time; my orgasm delayed by previous activity. But all good things come to an end. In this case it was the Viscountess having another climax that triggered me. I felt her sphincter tighten around my shaft as she came in a wave of intense and erotic pleasure. As rough and dirty as she could wish for. And I came too, pumping spunk into her anus, feeling the orgasm reverberate through my brain.\n\nI withdrew gently, afterwards, and released Caroline from her wrist restraints. She moved only to straighten her legs. I went and cleaned up in the bathroom and came back and lay down next to her. 'Was that ok? I didn't hurt you too much did I?'\n\n'It was beyond description, darling.' She laid her head on my chest, stroking the hair around my nipples. Suddenly she burst out crying and I held her close and stroked her hair and shoulders. 'Sorry,' she sniffed, after a few minutes. 'I just came over all emotional. Not like me at all.'\n\n'What about the riding crop?' I asked. 'Did you mean me to find that?'\n\n'Of course.'\n\n'And it didn't hurt too much?'\n\n'Well it hurt, yes, but too much? I came while you were whipping me so I'd have to say it was ok. And besides, she smiled, wiping her eyes, now I know how Stanley feels, though I think I'd have the horse protection league on my back if I walloped him like that.'\n\n'It's left some fine welts on your bum,' I admitted.\n\n'Well nobody but you is going to see. And actually, darling, there's some salve on the table by the window. Would you rub some on me?'\n\nI did as she asked and she sighed and wriggled her buttocks as I massaged the salve in. 'I've got something to tell you, Caroline,' I said, after a few minutes.\n\n'Sounds ominous.'\n\n'Well you said you were happy for me to have a girlfriend...'\n\n'Absolutely. Is that your news, you've found a girl?'\n\n'Hm, yes. It's Claire. Claire Downing.'\n\n'Bloody hell!'\n\nI explained about meeting Claire in the pub and the pub quiz and asking her out for a meal.\n\n'She doesn't know about us does she?'\n\n'I'm afraid she does.'\n\n'Fuck!' The expletive, uttered in her pure, upper-class British accent, had twice the impact it would normally have had. It was the first time I'd really heard her swear.\n\n'I didn't say anything,' I explained. 'It was the CCTV. Apparently your late husband had it installed above all the entrances...'\n\n'Christ, I'd forgotten about that.' She turned over and looked at me. 'What did she say?'\n\n'Well what she said was that you're still a striking looking woman and she can why I'm attracted to you, despite the age gap.'\n\n'Claire said that?'\n\n'Yep. And she said you were stylish and elegant and she's very fond of you. 'In fact' I chose my words carefully, 'I got the distinct impression that she quite fancied you.'\n\n'Rubbish. She's a lovely looking young lady. Why would she be attracted to me?'\n\n'Same reason as I am?'\n\n'But she's not gay, obviously.'\n\n'I don't think a woman has to be gay to be attracted to another woman. And besides she actually said, when I asked, that if you'd made a pass at her instead of me, she'd probably have responded.'\n\n'Really!' The Viscountess was blushing furiously.\n\n'Yes, makes you wonder, doesn't it?' I smiled at her.\n\n'Makes you wonder what?'\n\n'It makes you wonder,' I plunged in, heading for the end game, 'what sort of fun the three of us could have together.' I raised my eyebrows and looked at Caroline and Caroline looked back at me, her face expressionless.\n\nTo be continued..."
    ],
    "authorname": "Sylviafan",
    "tags": [
        "mature",
        "bondage",
        "spanking",
        "oral",
        "anal",
        "anal sex",
        "chastisement"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-lady-of-the-manor-ch-02"
}