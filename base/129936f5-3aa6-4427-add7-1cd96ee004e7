{
    "title": "Brave New World Ch. 02",
    "pages": [
        "After my best friend propositioned me to join her and her boyfriend in a three-way to celebrate his birthday, I turned to another old college friend for advice. Her advice led me to my first sexual experience with a woman. Having crossed one new border, I was standing at the edge of another Brave New World.\n\n*****\n\nAfter Kimberly and I spent a night together, I realized that there was so much about sex that I had never even imagined. She gave me the most powerful orgasms of my life. Crossing the border into lesbian love-making with her opened my mind to the beauty of unrestrained sex.\n\nKimberly stayed at my place the day after our initial love-making and we barely got out of bed. I stopped counting the orgasms and just enjoyed them. Late in the afternoon as I held her in my arms, our sweaty bodies recovering from a sixty-nine that overwhelmed me, I brought up the subject of the three-way with Steph and Cory.\n\n\"I think you've overcome the fear of girl-on-girl sex,\" said Kimberly with a sly grin.\n\n\"I believe I have,\" I said and moved my mouth to hers. Breaking our kiss, Kimberly asked if I were ready to join the couple.\n\n\"What would it be like, though?\" I asked. \"Would Steph and I have sex while Cory watches? Do we like try to do it all at the same time? How the heck would that work? God, Kimberly, I have so many questions.\"\n\nShe ran her fingers lightly over my bare flesh. \"Marnie, I think any three-way finds its own rhythm. Are you willing to have sex with Cory? I mean let him inside you.\"\n\n\"I think so,\" I said and then added, \"Definitely, if Steph still wants to do it.\"\n\n\"Will he have to wear a condom?\"\n\n\"Shit, I never thought about that. What do you think?\" \n\n\"Talk to Steph,\" Kimberly said. \"Ask if they've been tested. If she says yes and they are clean, then as long as you're protected from pregnancy, I'd say go for it.\"\n\nI nodded in agreement.\n\n\"So, are you going to do it?\" she asked.\n\n\"I suppose so. But...\"\n\n\"But what?\" replied Kimberly.\n\n\"What about us?\"\n\nShe hugged me. \"Marnie, this fulfilled one of my biggest fantasies. Would I like to continue to have sex with you? Definitely. If it never happened again, I could live with it. I'd be bummed, but I could cope.\"\n\n\"Could we still be friends?\" I asked.\n\n\"Friends withOUT benefits?\"\n\nI nodded.\n\n\"Yes. I would prefer we could remain friends while fucking, but I would not want to lose you. And as I told you before, someday I will get married and have kids. Until then, I would love having more of this. Who knows, even after I find a guy I probably would want more of this. This is a high water mark of my sexual life.\"\n\nHer finger slid inside me. I gasped and spread my legs. She slowly worked her finger in and out and I responded to each thrust with a soft moan. I wanted more, but I had to stop her. I pulled her hand away.\n\n\"You make me feel so good,\" I said. \"But I need to think about what comes next.\"\n\n\"I could make you come next,\" she said and rubbed my clit.\n\n\"I know you can, but please don't. I can't think if you're doing that.\"\n\nKimberly sighed and removed her hand. She sucked her finger clean of my taste. \"So are you going to tell Steph about us?\"\n\n\"God, that's right. What do I tell her?\"\n\nKimberly ran her fingers through my hair. \"You don't have to tell her anything; not now at least. Tell her you'll join them. Afterward see how you feel. Maybe you tell her, maybe you don't.\"\n\n\"I can do that,\" I said.\n\n\"Good, call her now.\"\n\n\"Now?\"\n\n\"Yes, call her and give her the good news, before you change your mind.\"\n\n\"While you're here?\"\n\n\"Exactly,\" said Kimberly and she kissed my breast.\n\n\"You know this is crazy.\"\n\nKimberly reached my cell from the nightstand. She handed it to me.\n\nShaking my head, I called up Steph's number and hit enter.\n\nAs the line rang, Kimberly scooted down the bed and positioned herself with her face between my legs. I began to tell her not to even think about it when Steph answered.\n\n\"Hey, Marnie.\"\n\n\"Hi,\" I said. Kimberly licked me. I made a sound.\n\n\"What?\" asked Steph.\n\n\"Oh, just had a Coke burp,\" I said. Kimberly pushed her tongue past my lips and rammed it inside. I held back a scream.\n\n\"So what's up?\" asked Steph.\n\nI had tried to compose a way to bring up the subject of sex with her and Cory. Kimberly's tongue purged all rational thoughts from my mind.\n\n\"I'm in.\"\n\n\"In what?\" asked Steph.\n\n\"In with you and Cory, if you still wanna do it.\"\n\nSteph squealed. \"Oh my god, Marnie! Yes, we so want to do it! You're sure? You'll be cool with everything, you know, Cory and, well, with me?\"\n\nKimberly was now sucking my clit and torturing it with her tongue. \"Yeah, yeah, the whole thing. Whatever.\"\n\n\"God, I'm so happy. Cory will be over the moon when we surprise him. Can we do it next weekend? Come on Friday. It's his actual birthday. I'll make us dinner and then you can spend the night.\"\n\n\"Next weekend? Uh, sure.\" Kimberly had two fingers inside me as her tongue continued to lap my clit.\n\n\"Marnie, are you all right. You sound funny.\"\n\n\"Oh, oh!\" I cried as Kimberly pushed a finger into my butt.\n\n\"Oh, oh, what?\"\n\n\"Oh, yes I'm fine. Can't wait for next week. I'm coming, I mean, I'll come over around five-thirty on Friday. Okay?\"\n\n\"Perfect. Are you sure you're okay?\"\n\n\"Yeah, all good. See you next week.\" I was about to hang up when I remembered the condom question.\n\n\"Steph, I don't know how to...oh shit.\" Kimberly had three fingers in my pussy, one in my butt and her tongue was turning my clit into a nuclear trigger.\n\n\"Oh shit, what?\" asked Steph.\n\n\"Oh, I mean it's kinda personal and, well, I was thinking about will we need condoms. Like have you and Cory been tested lately? Oh my god.\"\n\n\"Oh my god? Marnie, what's going on? You're not making any sense.\"\n\n\"Yeah, no sense. I get it. Uh, just nervous, I guess.\"\n\n\"Yes, we were tested a few months ago and neither of us has had sex with anyone else since then. How about you?\"\n\n\"God, yes,\" I said as Kimberly sucked my clit into her mouth.\n\n\"God, yes, you're clean?\"\n\n\"Absolutely. Got tested not too long ago and haven't been with a guy since then and, Sweet Jesus. Gotta go. See you next week.\" I disconnected and screamed. Kimberly was now tonguing my butthole as her finger pressed my G-spot. I came hard and squirted once again.\n\n\"You're cruel,\" I said once I caught my breath.\n\n\"You're delicious,\" said Kimberly. We hugged and fell asleep.\n\nAll the following week, I was on edge. I had committed to a three-way with Steph and Cory. The anticipation was keeping me awake and killing my appetite. To be fair I also had a barrel full of doubts.\n\nThis change in my life\u2014my sex life\u2014had happened unexpectedly and rapidly. I had long passed the point where I thought sex was immoral, but I never thought that sex with a woman or with more than one person at a time was within the acceptable boundaries established by a \"good\" girl. In the space of one week I was about to cross two boundaries. Was this a new world that held a promise of pleasure, or just a trip into debauchery that I would live to regret? \n\nA remembrance of how good Kimberly's tongue felt as it made love to my pussy helped to quell my unease. Already I was wondering if Steph would be as good. Then, the thought of having sex with Cory added to my anxiety and, at the same time, turned me on. I was mostly honest with Steph when I said I found Cory attractive. In truth I had a big crush on him. Many times I caught myself looking at his butt in tight jeans. When we went to the beach I was thankful for my dark shades so he could not see me staring at his hard chest and abs. His wet bathing suit would sometimes outline his cock and I would fantasize about taking it out and devouring it. \n\nThese sex thoughts reinforced my desire to move forward. My hesitation came from a question I posed to myself. Could I remain a \"good girl\" and fuck my best friend and her boyfriend? Could I be a \"good girl\" if I continued to see Kimberly for sex?\n\nThe only certain thing I knew was that I had made a commitment to join Steph and Cory. My anticipation grew and my resistance shrank during that week.\n\nI received an encouraging text every day from Kimberly. She reminded me that I promised her a detailed description of my adventure with Steph and Cory and also hinted at another night in bed with her. I also received an encouraging text from Steph. She probably wanted to make sure I didn't back out. I went from no sex with women to having two women texting me about having sex with them.\n\nI couldn't remember a thing I did at work on Friday, except for reading and re-reading a text from Steph. She told me that Cory was happy that I was helping them to celebrate his birthday, but he didn't know what Steph and I were planning. She said that will be a surprise. No shit, I said to myself. \n\nI left early at 3:30 and went home. I showered, trimmed up everything and went through another round of \"what to wear.\" I opted for new pink silk undies, tight jeans, pink camisole and a light yellow cotton shirt. I packed extra underwear and clean shirts. I fussed with my make-up until I couldn't stand to do another thing. With simple silver discs in my ears, a silver chain and bracelet set, I picked up my overnight bag and headed out.\n\nI pulled up to Cory and Steph's apartment at twenty past five. Checking my hair and make-up one last time, I grabbed my bag and went inside. I rang their bell, hoping my heartbeat wasn't heard inside.\n\nSteph opened the door. We looked at each other and then she smiled. I stepped inside and into her arms.\n\n\"You look beautiful, honey,\" she said. I told her she did, too. She was wearing a pink print skirt that came to her knees. On top she had a sleeveless white cotton tee. I could see the outline of a bra underneath. Her hair was pulled back into a simple ponytail. I could smell a subtle fragrance.\n\nCory was standing behind her and mouthed \"hell-o\" as I looked over Steph's shoulder. He wore a white polo shirt and khaki shorts. As usual his brown hair hung down over one eye. I could see the dimple in his left cheek that always made him look like a little boy.\n\nI broke from Steph and hugged Cory. He was a coach as well as a teacher and I could feel his hard-muscled body. He kissed my cheek and told me how good it was that I was helping celebrate his birthday. \n\n\"If you only knew,\" I thought.\n\nSteph served appetizers in the living room along with wine. I'm pretty sure I ate, but couldn't swear to it. I found myself stealing glances at Steph and then at Cory's crotch. I hoped I wasn't obvious.\n\nDinner was light and delicious, accompanied by two bottles of wine. By the end we all were buzzed.\n\n\"So what's the special dessert?\" Cory asked. He looked at me and said, \"All week long Steph's been promising the most fabulous dessert. I didn't smell any chocolate, so she has me guessing.\"\n\n\"Do you think you can handle dessert?\" Steph asked.\n\n\"Always.\"\n\n\"Okay, Marnie and I will go and bring it out. I've hidden it. You can just sit in the living room and we'll serve you.\"\n\nOnce in their bedroom, Steph lit some candles and dimmed the lights. She then turned and kissed me.\n\n\"I am so excited, Marnie. Cory will just flip.\"\n\nI smiled. My stomach was in knots and I began to have another round of second thoughts. Maybe I should call them third, fourth and fifth doubts. I was curious about having sex and my body was ready. My mind\u2014oh that pesky thing called self-image\u2014was giving me fits. Could I really move forward with Steph and Cory? Was I someone who did three-ways? \n\n\"I've picked out some things for us to wear,\" she said as she pulled a bag from her closet. I saw the familiar logo from an intimate apparel store.\n\n\"Let's get undressed and put these on,\" she said pulling off her top.\n\n\"Steph, can we slow down a bit?\" Steph held her top in her hand, her breasts heaving with her breathing.\n\n\"Marnie, please don't tell me you're backing out? Everything's been going so great.\"\n\n\"Steph, everything includes having a nice dinner and has not included sex with you and Cory.\"\n\nSteph tossed her shirt on a chair and took my hand. She guided me to the bed and we sat on the edge.\n\n\"I know this is a big step for you,\" she said. \"I get that you are nervous and probably have some doubts.\"\n\n\"You can say that!\" I replied.\n\n\"Marnie, I love you. I would never to anything to hurt you. Tonight will be special and I know we all will have fun. You can do this, I know you can.\"\n\n\"Steph, I love you, but I'm not sure that having sex with you is how to show that love.\"\n\nSteph ran her hand along my cheek. \"Marnie, you are so sweet and sincere. But sometimes, you have to let the crazy bitch out of yourself. You will never find two people who care about you more and who want you to enjoy yourself as much as we want to enjoy you. Cory will be in heaven with us. You'll see. He will make you feel so good\u2014and so will I.\"\n\n\"But what if it doesn't work out? What if you and I end up hating each other? What if...\"\n\nSteph put her fingers on my lips to stop my rant. She smiled, leaned in and kissed me. I wanted to pull away, but the heat from her lips sealed us together. She slipped her arms around my shoulders and pulled me close. As her tongue teased my lips, I felt my fears fade as my sexual need came into full focus. I kissed back and our tongues touched.\n\n\"Honey, let's get ready. We need to change.\"\n\nI kissed her some more, hugged her and let her help me stand. I looked at her breasts and my desire spiked. I pushed my doubts aside. If I were going to do this, I knew I had to do it with all my heart, my brain and my body.\n\nKnowing that there was no turning back now, I began to undress. Standing nude in front of Steph was not new, but tonight it had other meanings.\n\n\"God, you are so beautiful,\" she said. Her hand traced my breast. I shivered. She kissed me and our breasts touched. It felt as though our nipples were shooting flames; the heat was so intense.\n\nSteph's boobs were at least a size bigger than mine, but they didn't sag. I could see her hard nipples and realized mine were equally excited. Steph laid out two black thongs and a practically transparent pair of matching teddies.\n\n\"We're wearing these?\" I asked.\n\nShe smiled and said, \"For only a couple minutes, I'm sure.\"\n\nWhen we had put them on, Steph kissed me and pulled me to her. \"Tonight will be the most special night of my life. I love you, Marnie. Thank you.\" Her hand slipped inside my panty and rubbed me. My knees buckled. Steph withdrew her hand and licked her finger clean.\n\n\"Your body doesn't lie, Marnie. You're ready and I can't wait to have more,\" she said.\n\n\"I love you, Steph. Just so you know, I am still scared shitless.\"\n\n\"Shall we?\" Taking my hand, Steph led me from the bedroom back to the living room. Cory was pouring wine into three glasses and looked up. He froze.\n\n\"Happy Birthday, darling,\" said Steph.\n\n\"Happy Birthday, Cory,\" I said. Steph turned and kissed me. Her hands cupped my butt and pulled me tight.\n\n\"Are you two serious?\" Cory asked. His gaze continued to shift from Steph to me and back.\n\n\"I mean is this what I think it is?\" he asked.\n\n\"What did you always say you wanted?\" said Steph.\n\n\"Yeah, I know what I said, but I never thought it'd happen. I mean, God, Marnie, are you really going to do this?\"\n\n\"Cory, I don't dress like this for cake and ice cream,\" I said as I rubbed my fingertips over my nipples. I was fully into moving forward. My mom always said, \"If you're going to do something, don't do it halfway.\" I don't think mom had a scenario like this in mind when she gave that advice. Even so, I was taking her advice. I was ready.\n\n\"Wow, yeah,\" he said struggling for words. \"Steph, are you sure this is going to be all right? The three of us together? That is what we're talking about, right?\"\n\n\"Why don't you let us undress you and then see if you want to ask that again?\" Steph replied and pulled me next to Cory. Steph kissed her boyfriend. \"Cory, this is so all right that I can't even tell you. We're all going to have so much fun.\"\n\nI thought his dimple was going to come out of the back of his head due to his wide smile. He stood.\n\nSteph grabbed one side of his shirt and I took the other. Together, we lifted it off. Cory's toned and tan chest was heaving. We ran our fingers along his hairless flesh. Steph took one nipple between her lips and I copied her taking the other. As our tongues and teeth teased him, Cory growled.\n\nDropping to our knees, we slipped off his shoes. Steph undid his belt and my hand went to his zipper. Completing our tasks we tugged down his shorts. Steph ran her hand up under his boxers and looked at me. I put my hand on his thigh and inched it up until my fingers brushed his balls.\n\n\"Oh, god,\" Cory said. The front of his underwear was tenting. We removed our hands and eased the band over his erection and pulled his boxers down and then off. \n\nFrom time to time, Steph had mentioned that she loved Cory's cock. I now understood why. It was long and thick standing in front of us. It looked heavy and couldn't go straight up; it was close to parallel to the floor. It swayed as Cory rocked with apprehension. I remember seeing it in his bathing suit or even a bulge in his jeans. Now it was exposed in front of me and it was far better than any imagined picture. Cory's erection was dark and powerful. A thick vein ran along the top side up to a large mushroom cap\u2014the biggest I had ever seen. He kept his pubic hair trimmed short and his balls were hairless. His sac hung down and looked heavy and full. Only once had I ever sucked a guy's balls, but I yearned to wrap my lips around one of his nuts.\n\n\"Hold his cock, Marnie,\" Steph said. I wrapped my fingers around the base as far as I could, although my fingers did not meet. Steph took his tip between her lips. Cory made a sound. Slowly she took more of him into her mouth. I began to slide my hand up and down the part that was left exposed. As she fellated him, Cory placed a hand on each of our heads. I used my free hand to cup his balls. They felt better than I imagined.\n\nMassaging a testicle, I kept stroking him more as Steph would pull back. We continued like this for a couple minutes. Steph pulled off and said, \"Switch.\" I knelt in front and looked at his cock. I wondered if I really could go through with this. Cory rocked forward and his tip touched my lips. All doubt evaporated as I opened my mouth and sucked my best friend's man's cock. \n\nHis cock filled my mouth like none I'd ever had. \"Jesus, that feels so good,\" Cory said.\n\nHis large cock moved in and out. My eyes were watering, but I was determined to do the best I could. I think I succeeded because Cory said he was at his limit. He gently stroked my head and ran his fingers through my hair. He said how beautiful I looked. Our eyes locked. Fixing his gaze I moved my mouth down until he was at the opening to my throat. I relaxed, breathed through my nose and took all of him inside my mouth.\n\n\"Oh, shit, Marnie. That is so good,\" he whispered as his hips moved back and forth.\n\n\"Marnie, I want him to cum so he can last longer when he fucks us. Do you want it or shall I?\"\n\nI pulled my mouth away. Normally, I don't like to swallow. I looked up at Cory. He was smiling. \"Happy Birthday, babe,\" I said and I took his cock deep in my mouth. As his tip pushed deep into my throat, I sucked as hard as I could. He rocked on his toes and his shaft moved even deeper. I grabbed his balls and massaged them. In seconds I felt the first shot hit the back of my throat. Fighting a gag reflex, I let him cum and cum in my mouth. I swallowed but couldn't keep up with him. Steph moved my head away and took the last of his orgasm as I worked his cock and balls to be sure we got all he had to give. She then pulled me to her and our tongues exchanged the remnants of Cory's explosion. He sat back on the couch in exhaustion, his cock deflating.",
        "\"You stay right there,\" said Steph. \"Marnie and I are going to have some fun and I think that will bring you right back into the game.\"\n\nTurning me to face Cory, Steph stood behind me. She slipped the straps of the teddy off and pulled it down to expose my breasts. She reached around and cupped each one.\n\n\"Aren't these perfect, babe?\" she said as her fingers tightened on my nipples. \"You always said you thought she had great tits. Well, do they live up to your imagination?\"\n\n\"Better than I could imagine,\" he said as his hand played with his still limp cock. Even without its hardness it was sexy, laying along his thigh like an uncoiled hose.\n\n\"I can't believe this,\" he said. \"It's better than any fantasy.\"\n\nSteph pulled my teddy off. \"Babe, this is only the beginning. Tonight will be the best birthday of your life.\"\n\n\"Best fucking day of my life,\" he said as he played with his dick.\n\n\"You got the fucking part right,\" said Steph as her fingers dipped inside my panties. \"Oh god,\" I moaned.\n\nAs she rubbed her finger along my slit, she said to Cory, \"Wanna see her pussy?\"\n\nHe was semi-hard and smiled as he nodded.\n\nSteph eased my thong down my legs and as I stepped out of it her hands caressed the inside of my thighs.\n\nI had never felt this sexy. I had never felt this comfortable with my body in front of anyone, except maybe Kimberly. At that point I knew I would do anything that either of them wanted. I wanted\u2014no, I needed\u2014sex with them.\n\nSteph eased me around so I was facing her with my back to Cory.\n\n\"Awesome,\" he said looking at my rear as Steph spread my ass cheeks to expose my anus and back pussy.\n\n\"Let's move to the bedroom,\" Steph said. \"Marnie and I want to be comfortable for the next step.\"\n\nIn the bedroom, Steph directed Cory to sit in the chair by the bed. She directed me to lie on my back. Facing Cory, she stripped. He was close to fully erect at this point.\n\nSteph ran her hand up and down his shaft. \"Hold this thought for a bit, babe. Watch and enjoy.\"\n\nSteph climbed into bed with me. She stretched her body fully on top of mine and began kissing me. I can't adequately describe how delicious her kisses were. I do know that I lost track of everything except the feel of her lips and tongue and the heat between my legs.\n\nBreaking contact, Steph began working her way down my body. When she pulled a nipple with her teeth, I let out a cry. She spent a long time kissing, fondling and nipping at my breasts and nipples. Her crotch rested along my pussy and I could feel the moisture between us.\n\nWhen her tongue touched my navel, I had a moment of panic. My best friend was about to eat my pussy. Was I really ready for this?\n\nWhen her lips closed around my still hidden clit, all doubt vanished. I wanted her to take me right then. I pushed my pelvis up. She used her fingers to spread my lips and ran her tongue from top to bottom and back up. I came, but knew there were more and stronger orgasms ready to be released.\n\nSteph's mouth was making love to my pussy. Her fingers slid in and out, her lips now encased my unhooded clit and I held her head tight to my sex. She substituted her tongue for her fingers. Though it couldn't reach as deeply as her finger, it was just as exciting. She then lapped me several times, collecting every drop of juice weeping out.\n\nWhen a finger teased my butt hole, I began to climb the mountain. Steph entered past my sphincter and images of molten lava rushing to the top of a volcano flooded my mind. As she moved her finger back and forth while working her tongue over my clit, I stopped resisting the inevitable. I simply could not hold back. I cried and came. I think I squirted. Steph kept lapping and thrusting her fingers. I lost track of time. It seemed like my orgasm lasted hours, but I'm sure it was only seconds. It was more intense than the one I had from Kimberly and that one had left my mind a bowl of mush.\n\nSteph came back up to lie face to face. I kissed her and tasted myself on her. I was like a kitten licking every trace of my orgasm from her lips and chin.\n\nCory made a noise. We looked up to see him standing beside the bed, his erection sticking straight out.\n\n\"Make love to Marnie, Cory.\"\n\nHe looked at me. I smiled and nodded.\n\nHe got on the bed and knelt between my spread legs. I was not sure I could take another round of sex, but I so wanted his dick inside me. Steph bent and sucked him for a bit. She then guided his wet cock to my opening. Rubbing the tip along my pussy, she covered the tip with my wetness. \n\n\"I told her we were tested and she said she was, too. We can do what we want with each other.\"\n\nShe spread my lips with her fingers and pushed his tip inside me.\n\nI drew a deep breath as his large head entered me. \"Oh, that's big,\" I said.\n\n\"He'll take it easy until you adjust, darling,\" said Steph. She kissed my lips.\n\nCory used small strokes until he was buried deep inside me. He bent and rested on his elbows. Looking me in the eyes, he said, \"You are so beautiful, Marnie, and you feel so great around my cock. Are you ready?\" He bent and kissed me. Steph's kisses were sweet and tender; Cory's were urgent and hot.\n\n\"Fuck me, Cory,\" I said.\n\nHe began slowly and my pussy gradually loosened to accept him. Soon his tempo picked up and he was ramming me hard. I think Steph was playing with my nipples, but I was so overwhelmed by Cory's actions I couldn't swear to it.\n\nI pulled my knees up and Steph took the hint. She helped me bring my legs up to rest on Cory's shoulders. He grabbed my hips and plunged even deeper. I could not believe that something that big was inside me and touching parts that had never felt a man before. I've read erotica where they describe a man as being a piston. I used to think that was just made-up fantasy. Cory was like a piston driving me crazy. All my nerves were tingling. His cock was rubbing against my G-spot. I knew I could not hold out much longer. When Cory closed his eyes and started grunting, Steph took my clit between her fingers and pinched hard.\n\nI shrieked and came like this would be the last orgasm in the history of the world. I could barely sense Cory spasm inside me. He kept pounding and I kept coming. My entire body was drenched with sweat, my legs ached from being pinned up, my pussy felt like it would probably burst and I was the happiest I'd ever been in bed\u2014or out of it for that matter.\n\nCory pulled out, his cock dripping with our mixed fluids. My legs dropped to the bed as Steph cleaned his softening organ with her mouth.\n\nI just lay there unable to move or speak. Steph fell on one side of me and Cory on the other. Each one kissed my lips and then they kissed each other leaning over me. I closed my eyes for a second. \n\nI awoke around two in the morning needing to pee. I eased out from between my friends and went to the bathroom. After flushing and washing my hands, I wandered into the kitchen looking for something to drink. I was parched from the sex and all the sweating that occurred. I was standing in the dark with only the refrigerator light to outline my body. I bent to look for a bottle of water in the back.\n\nA hand ran across my butt. \"You are incredibly beautiful.\"\n\nI pulled the bottle out and stood to see Cory. In the light he looked like a statue. His toned body looked like carved marble and his long dick seemed to be in a spotlight.\n\n\"You,\" I said, \"are the best fuck I've ever had.\"\n\nHe smiled and kissed me. I ran my hand along his soft member. \n\n\"This is quite a cock.\"\n\n\"I'm just happy it works.\"\n\n\"Oh, it works just fine.\" We both laughed.\n\n\"Marnie, thank you. I never expected this and I will never forget it. You are, well, I know I've said beautiful a lot, but it's true.\"\n\nI squeezed his cock. \"Cory, a woman never gets tired of hearing someone say she's beautiful.\"\n\nHe pulled me close and we briefly kissed. I then opened the bottle and took a long drink. Offering it to him, I watched as he finished it. \n\n\"Back to bed?\" he asked.\n\n\"Why? Were you thinking of fucking me in the kitchen?\" I said making a joke.\n\nHe cupped my mound. \"The thought crossed my mind.\"\n\n\"Oh, uh, I think back to bed for now.\"\n\n\"Sure. Besides I hope that you and Steph still have more you can do with each other. That was so hot to watch.\"\n\nWe went back to bed. I spooned Steph and thought it was a lot hotter doing it than watching it.\n\nWe all stirred around eight in the morning. After using the bathroom, we stood naked in the kitchen making K Cups of coffee.\n\nAfter the caffeine began flowing, Steph asked what Cory wanted.\n\n\"I want to see you two in a sixty-nine.\"\n\nI coughed on my coffee and Steph stared at him. \"Really?\"\n\n\"Hey, you asked,\" he said. \"That's what I want.\"\n\nSteph looked at me. I looked at her. We locked eyes. Finally, I smiled. We put our cups down and hand in hand walked back to the bedroom.\n\nAs we lay head to toe, I wondered if I could really do this with Steph. She pushed my thighs apart and buried her head in my crotch. That simple gesture destroyed any reservations I had. I kissed her blond bush and licked her pussy. Her legs parted and we were immediately committed to the mutual pleasure of each other.\n\nSteph tasted different from Kimberly, but I was not complaining. When I felt her mouth pull away from my pussy, I wondered if I were doing the right thing. \"That feels so fucking fantastic. Don't stop doing that.\" Nothing like a confidence booster. \n\nI slid a finger inside her and redoubled my efforts at licking her clit off her body. We managed to control ourselves until we reached some paranormal agreement. We came within a second of each other; each of us pushing our pussies hard against our partner's mouth.\n\nExhausted we flopped onto our backs. Cory sat on the edge of the bed stroking his erection.\n\n\"God, you aren't thinking of using that thing now, are you?\" asked Steph.\n\n\"Actually, I was,\" he said with a grin. His dimple made it hard to even consider being angry with him.\n\n\"And, what did you have in mind?\" Steph asked.\n\n\"Doggy.\"\n\n\"With me or Marnie?\"\n\nHe looked from Marnie to me. \"Both.\"\n\n\"Really?\" Steph said.\n\n\"My birthday,\" he replied.\n\nSteph put her hand over my shoulder. \"You've done your share, Marnie. You don't have to go any further.\"\n\n\"And what? Miss out on a double doggy-style?\" We laughed. We got up on our knees and bent over resting our heads on the pillows looking each other in the eyes, our butts joined at our hips. Cory moved behind Steph and bent to begin eating her out from behind. When he felt she was wet enough, he switched over to me. He was very good, but could not compare to either Steph or Kimberly. When he tongued my butt hole, I rated him a close tie to Kimberly.\n\nHe knelt behind me and I felt that big tip at my opening. Taking hold of my hips, he pushed inside with one long, slow thrust. It took my breath away. After resting for a few seconds, he began thrusting. His big balls were swinging up and hitting the front of my pussy\u2014another first for me. Just as I was getting into it, he pulled out. I swear that my pussy shouted in protest.\n\nI lifted my head to watch him impale Steph. I got up on my knees to witness his thick cock moving in and out of her pussy. It was beyond sexy to see her lips wrapped around it and moving with every in and out motion. When Steph began making soft little cries, he withdrew.\n\nHis cock was red, covered with secretions and dripping from his tip. I dropped back down and he was inside me again. I turned my head and said to Steph, \"Watch his cock fuck me.\"\n\nShe did what I had done and knelt to see what was happening. I was rapidly reaching a climax when he pulled out and went back to Steph. I was too tired to do anything but rest. As Cory moved between us, Steph and I kissed. Her lips did almost as much for me as the hard cock that was pushing into me-almost. This switching went on for another ten minutes. He was inside Steph when he said he was going to cum.\n\n\"Let me see,\" I said. I had already experienced two fairly substantial orgasms and didn't need another at the moment.\n\nCory pulled out and stroked his erection. He erupted, sending streams of whiteness along Steph's back and ass. I added my hand to his and coaxed a few more shots. He fell onto his side. I bent and began to lick her back and butt clean. Feeling emboldened by everything we'd done to this point, I spread her cheeks and ran my tongue along her hole. Steph groaned. I licked her butthole a few more times and sank my fingers into her pussy. To my amazement, she came and clamped her pussy tight around my two fingers.\n\nThe three of us sprawled exhausted on the bed and soon were once again asleep.\n\nSometime later I awoke to the sensation of a tongue on my clit. I looked down to see how wrong I was. There were two tongues alternating on my tender button. Cory then moved down to thrust his tongue inside while Steph continued to lavish attention on my clit. I was climbing fast to a high peak and knew the fall would be exquisite. Cory pushed a finger past my butt opening and I came hard. \n\n\"Cory loves your ass, Marnie,\" said Steph as she played with my right nipple. \"Loves it a lot, actually.\"\n\n\"And?\"\n\n\"Well, it is his birthday,\" she said with a smile.\n\nI was at the next locked door in the brave new world of my sexual exploration. Hearing about anal sex, I often wondered what it would be like, but never imagined it would ever happen to me.\n\n\"Do you guys do it?\" I asked.\n\n\"Yeah and it's awesome,\" said Steph. \"Wanna try?\"\n\n\"What will you be doing?\" I asked Steph.\n\n\"Watching and playing with your pussy.\"\n\n\"Sounds good to me,\" I said. Just like that, I was opening another door, both to my body and to my sexual exploration. My mind was trying to comprehend how quickly I moved from \"straight Marnie\" to a woman about to have anal sex while another woman fondled me. \n\nCory eased me onto my stomach and then pulled up my hips. Steph handed him lube. He worked around my hole and then with one finger began pushing beyond my sphincter to coat my insides. He added a second finger along with more lube and tried to loosen me up. When a third finger entered my back door, I began to experience nerve endings sending new pleasant signals to my brain. Steph said she was going to lube Cory's cock as his fingers worked me.\n\nWhen I felt his fingers leave, I took a deep breath. I knew what was coming next. Cory put the tip of his cock at my opening. \"Just take some deep breaths, Marnie, and try to relax. I'm going to go slow. It may feel strange at first, but you'll get used to it. Ready?\"\n\nSteph kissed me and slipped her tongue past my lips. I sucked it seeking reassurance. I felt totally exposed. Having her boyfriend fuck me while she watched was one thing, but now she was seeing my ass taken. It was the last virgin part of me and I was having an audience.\n\nI kissed her one last time and said over my shoulder, \"I'm ready.\"\n\nCory pushed his thick head past my tight muscle. I squirmed as he entered me. He held me by my hips and pushed forward. I took a big swallow of air as his cock moved inside. \n\n\"Still okay?\" he asked.\n\n\"Maybe, give me a second,\" I said. Steph ran her fingers along my slit and pushed one inside my pussy. She touched my G-spot and my pleasure quotient spiked.\n\n\"Okay,\" I said to Cory.\n\nHe pushed again and the feeling of being split in two roared back. I began to wonder how anyone could call this pleasurable when I felt his pubic hair touch my butt. He was all the way in. He slowly pulled back and a new wave of pleasure erupted along the nerve endings in my ass. I quickly began to understand the upside of anal sex.\n\nCory moved from slowly stroking in and out to a fast pounding and I could not believe I was feeling way more pleasure than pain. My body shook as his length reached its limit with every thrust. Steph was now fingering me just as ferociously. My excitement was building when I felt a pain on my ass-cheek. In a second another slap made me gasp. Cory hit me a third time and I cried out. Steph then began to slap my other cheek. The pain only heightened my experience. My head spun as my ass was rammed, pussy fingered and a series of stings landed on my ass. \n\nCory was grunting with every thrust and my ass was on fire both inside and out. \"I'm gonna cum,\" he said and drove so deep I thought I felt him in my throat. Steph pinched my clit. As I felt his cock throbbing with his orgasm, I went flying over the cliff. The freefall was long and exhilarating. I crashed hard and Cory fell on top of me, his cock still deep in my ass.\n\nWe were both breathing hard and sweat-covered. When he rolled off me, I looked at his face, flushed with pleasure and exhaustion. He smiled and said, \"Awesome, Marnie.\" I moved my head to kiss his lips.\n\n\"Before we all fall asleep again,\" said Steph, \"we need to shower.\" She made us get up and squeeze into their tub and turned on the shower. I could feel Cory's cum running out of my butt. He washed his cock as Steph used the detachable showerhead and her fingers to clean my ass. We then washed each other's bodies, taking time to enjoy the special parts.\n\nBack in their bedroom as we dried, I turned to look at my butt. My cheeks were crimson where I had been spanked. Steph ran a hand along my tender flesh. \"Was that too much?\"\n\n\"If you asked my permission, I would have said no way. But, God, it turned me on. I guess I really am a slut-in-hiding.\"\n\nWe laughed and came together for a group hug and lots of kisses. Steph told us to go fix some drinks and snacks while she changed the sheets. We returned minutes later with three ice waters and a bag of chips. Steph was just adjusting the pillows, showing us the fullness of her butt and the pink lips hidden between them.\n\n\"I know what I'd like for a snack,\" said Cory. \"Ditto,\" I added.\n\n\"You two are nuts,\" Steph said as she took one of the waters. We sat with our backs resting on the headboard. \"Happy Birthday,\" toasted Steph. Cory smiled and we drank.\n\n\"Was it everything you expected?\" asked Steph.\n\n\"Honey, I never expected this. Did I fantasize about it? Sure. Expect it? Never.\"\n\n\"Okay, was it everything you fantasized about?\" asked Steph.\n\n\"Beyond any fantasy,\" he said and laid his hand on my pussy.\n\n\"How about you, Marnie?\" said Steph. \"Are you still okay with all this?\"\n\n\"I am definitely okay with all this,\" I said and kissed her followed by a kiss with Cory.\n\n\"Even the anal?\" she asked.\n\n\"Now, that was a surprise,\" I said. \"I can't say I could get addicted to it, but I liked it more than I ever thought I would. Why do you like it, Cory?\"\n\n\"Uh, guess we're sharing now?\" he asked.\n\n\"Yeah, you fucked my ass after you doggy fucked me and your girlfriend, so a bit of sharing would seem appropriate.\" I smiled to let him know I was mostly kidding.\n\n\"Well, Steph and I never talked about this.\"\n\n\"Go on, Cory, I wanna know, too,\" Steph said.\n\n\"I guess it's sexy for a bunch of reasons. First, it's sorta taboo, you know. Kinda the final frontier of sex.\"\n\n\"If you make one more Star Trek reference, I'll cut your balls off,\" said Steph. She didn't smile and I figured she wasn't kidding.\n\n\"Message received,\" said Cory. \"So anyway, it borders on the forbidden and that makes it attractive. Then, I love butts. Marnie, you really have the best ass I've ever seen. Steph knows I love hers, but she also knows I've lusted after yours. In a pair of tight jeans, your ass just brings out this raw desire. So being able to take you that way is just pure ecstasy and almost animalistic. Then an ass is a lot tighter than a pussy. An ass grips my cock like no pussy can. It really does a job on me. Is all that too sick?\"\n\n\"Not at all, honey,\" purred Steph. \"In fact it makes me want to get a strap on and see if it works for me as I fuck your ass.\"",
        "\"What? You're kidding, right?\" sputtered Cory.\n\nSteph and I laughed. \"Maybe. What do you think, Marnie? Would you like to fuck Cory's ass?\"\n\n\"Hmm!\" I said and Cory began to sweat. \"I'm not sure I could...\"\n\n\"Okay, forget about it, for now,\" said Steph. \"But to make up for not letting us fuck your ass, I think you should eat our pussies until we come.\"\n\nA look of relief spread across his face, quickly followed by one of pleasure. He moved down and pushed my thighs apart. His first lick rid my mind of any thoughts of a strap-on.\n\nLater the three of us cuddled and fell into a deep sleep that was undisturbed until early afternoon. We each took turns peeing and brushing our teeth. Steph and I crawled back into bed.\n\nEven though it was past noon, Steph asked Cory to go get some breakfast at the local bagel place. He dressed and soon we were alone in the apartment. Steph pulled me into her arms and I rested my head on her ample chest.\n\n\"Thank you so much, Marnie. This was the best night I ever had. Are you sure you're fine with all this?\"\n\n\"Steph, if I weren't all right with it, I wouldn't have come and I certainly wouldn't have stayed this long. I loved every second of it.\"\n\n\"Even having sex with me?\"\n\n\"You don't think I enjoyed that?\" I asked.\n\n\"You seemed to,\" she said. \"It's just that...\"\n\n\"What?\"\n\n\"Don't take this the wrong way, Marnie. You were fantastic. It's only that you were almost too fantastic, for someone who said she'd never had sex with a girl before. You were teaching me things!\"\n\nMy heart skipped a beat. What do I tell her? I felt so warm and so loved in her arms, do I dare risk that with the truth?\n\n\"Marnie, am I the first woman you had sex with?\"\n\n\"Steph, you know I love you, right?\"\n\n\"Yes, and I love you. That does not answer my question. When I first brought this idea up, you told me you'd never had sex with a woman. Was that the truth?\"\n\nI swallowed hard. \"It was the truth\u2014at that time.\"\n\n\"Oh!\" said Steph. \"I take it there's more to tell since then?\"\n\n\"Please don't hate me,\" I said and started to cry.\n\n\"Marnie, I could never hate you. Do you want to tell me about it?\"\n\nI nodded and kissed the erect nipple an inch from my nose.\n\n\"It all started innocently enough,\" I began.\n\n\"Tell me something new, love,\" Steph said as she stroked my hair.\n\nI told her the whole story about seeking out Kimberly for advice and how that led to a night of wild sex.\n\n\"You fucked Chain?\"\n\n\"She's Kimberly now,\" I said.\n\n\"I don't care what she calls herself, I know she was so fucking sexy as Chain. The two of you...I can't believe it. At least tell me it was not great sex.\"\n\n\"Sorry, Steph, it was awesome. The best of my life, well, until last night. Last night was the best ever. Honest.\"\n\n\"Holy shit, you and Chain. After all these years of her lusting after you.\"\n\n\"You knew?\"\n\n\"Christ, Marnie, everyone knew. The looks she used to give you would have melted iron. Of course, we all knew you were clueless. That was what made it so cute. Chain's in total lust and you are just breezing along like you and she are just roomies.\"\n\n\"I am so dumb.\"\n\n\"No, sweetie, you're so wonderfully naive when it comes to the dirty side of life.\"\n\n\"Are you pissed at me?\" I asked.\n\n\"I am a little disappointed,\" Steph said. \"I wanted to be your first. I wanted to introduce you to how good sex with a woman could be. That's selfish, but it's how I felt. Knowing I'm not your first is a little sad.\"\n\n\"Steph, you know I would never ever hurt you. What happened between me and Kimberly, well, it just happened. I wasn't planning it. And, don't hate Kimberly. If she hadn't helped me, I doubt I'd be here.\"\n\n\"No. I don't hate her,\" Said Steph. \"Truth be told, I had sort of a crush on her. She was like a walking sex bomb. I wasn't into girls when we first met, but I had more than one night of wondering what it would be like to make love to her.\"\n\n\"Never too late,\" I said quietly.\n\n\"What's that mean?\" pushed Steph.\n\n\"I suggested that maybe Kimberly take my place in this three-way. She laughed and said no, but she also said if the three were you, me and her that she'd be all in.\"\n\nSteph abruptly sat up, bouncing my head to the side.\n\n\"Seriously?! You'd go for a three-way with her and me?\"\n\n\"It's not something I'd considered. But since I've been with each of you, I can see how it could be amazing. But, I know it's just a dumb idea.\"\n\n\"Marnie, I am like totally wet thinking about that. It's not dumb...at all.\"\n\n\"Honest?\"\n\nSteph kissed me passionately. We finally separated and she said in the sexiest voice, \"Honest.\"\n\n\"But what about...?\" I gestured to the picture of her and Cory on their bureau.\n\n\"Yeah, that might take a bit of thinking. So, for right now, let's keep this between the two of us.\"\n\nWe kissed and made a silent agreement. In fact, we were doing a lot more than kissing when Cory returned with a bag in his hand.\n\nWe each looked up from where we were pleasuring each other's pussy and told him to give us a few minutes. Steph said he could set the table and we'd be there soon.\n\nSitting naked at the table we ate lox and bagels. We also spread veggie cream cheese on Cory's dick and made sure it was absolutely clean before we went back to bed. Cory made love to each of us one more time before I had to get ready to return home. \n\nAs I was standing at the door with my bag, I looked lovingly at the two naked people in front of me. I kissed and hugged each of them and told them how much I loved our time together.\n\n\"Best goddamn birthday in the history of birthdays,\" said Cory, his newly erect cock pushing against my pants.\n\n\"Amen to that,\" said Steph before she slipped her tongue in my mouth. As my head swum with the remembered thoughts of the last day, I made my way to my car and somehow managed to find my way home.\n\nI stripped and crashed in my bed. I felt like I could feel every nerve ending in my body, each one reminding me of a different part of the last 24 hours. But, I needed sleep. As I drifted away, I recalled my promise to Kimberly to give her every detail of my adventure. I knew I would, but I wondered if I would include the possibility that she, Steph and I could write a new chapter to my adventure in a Brave New World.\n\n*****\n\nMy thanks to Prof Davros, HsytLit and Gary13 (https://www.literotica.com/stories/memberpage.php?uid=873051&page=bio) for their support and editing. These guys are the greatest and saved me from so many errors. As always any remaining mistakes are all mine. I hope you enjoyed this tale. If you are interested in more about Marnie, Steph and Kimberly let me know. I haven't decided if there will be a third chapter, so I will listen to what you suggest. Thank you for reading my story. Althea."
    ],
    "authorname": "AltheaRose",
    "tags": [
        "couple",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/brave-new-world-ch-02-1"
}