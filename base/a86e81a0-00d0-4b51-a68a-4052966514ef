{
    "title": "Hayley's Party Ch. 01 Pt. C",
    "pages": [
        "Please note this is Part C of a 3 part Chapter One. Parts A & B should be read first, otherwise what's happening here has no context. ... There's also a Prologue (Hayley's Party Chapter 00) and I've posted some follow on chapters (02 thru 05) with more coming.\n\n<p align=\"center\">****************************</p>\n\n<p align=\"center\"> \"Tonight's the night...Part C\".</p>\n\n<p align=\"center\">\"C'mon angel my hearts on fire\nDon't deny your man's desire\nYou'd be a fool to stop this tide\nSpread your wings and let me come inside\n\nTonight's the night\nIt's gonna be alright...\"</p>\n<p align=\"right\">Tonights the Night - Rod Stewart</p>\n\n\"Dude, I'm gonna make your girlfriend squeal.\" Joe was poised to enter me as he spoke, but he wasn't even looking down at me. He was looking at my boyfriend, Steve, who was lying on the bed next to us, looking down at me, watching me.\n\nI caught my breath as the promise implicit in Joe's words echoed inside my head, making my sex pulse wetly as the head of his cock pushed against me, pushed against my entrance, which was already doing its small best to open to him. Steve's acquiescence to what Joe was intending for me seemed weird to me, but it wasn't like I was complaining about what was about to happen. I wanted it to happen. I wanted it so much I didn't care whether Steve watched me or not. I knew Steve was excited though. \n\nOne of my hands held his cock as I lay beneath Joe. I could feel it jerking and twitching with excitement in my clasp and my hand wasn't even moving. When I thought about Steve, which I wasn't really, it was to think how weird it was that he was excited at watching his best buddy about to fuck me. Me, Steve's girlfriend. Me, who'd kept Steve out of my panties for so long. Me, flat on my back beneath Joe and panting to be fucked. Mind you, who was I to think it was weird of Steve? I was half out of my mind myself as Joe prepared to take me and I was Steve's girlfriend after all. It should have been Steve fucking me for the first time. But really, I didn't care about Steve right then, even if he was right next to me.\n\nI cared about what Joe was going to do to me any second now. \n\nJoe's face loomed over mine as he turned his attention back to me. His body pinned me beneath him, pinned me in the center of that large old four poster bed like a butterfly on a mounting board. Even resting, most of his weight on his forearms and his knees, he was heavy, not crushing me but definitely keeping me firmly in my place, my small breasts pressed down on by his chest, my thighs spread wide by his, my legs drawn back, my knees brushing his ribs, my heels resting lightly beside his almost motionless hips. I knew I was completely open and exposed for him to take me whenever he chose. I lay under him, waiting and wanting him to take me, a little afraid of the unknown but mostly eager and wildly excited and wanting him to just do it to me.\n\nWhile I could see his face in the flickering candlelight, while I could feel his body on mine, my focus wasn't on his face or his body. My focus was almost entirely on that point of contact where the head of his cock gently pressured my entrance. On the spreading apart of my labial lips as his feather-light nudges eased the head of his cock inwards between them. On my own slippery wetness and the way my sex pulsed heatedly with every one of those nudges. On the shivering sensitivity of my labial lips and of my swollen clitoris. On how much I wanted him inside me. A want that must have been written visibly all over my face as I waited for what I knew was coming. \n\nJoe's eyes held mine, his lips found mine. We kissed gently, a long slow kiss, slightly abstracted on my part, one of his hands brushing my hair back from my forehead. All the time we kissed, his cock was nudging delicately at my entrance, pushing gently at me. I could feel myself slowly opening to him, parting for him, my wetness coating him, each of those gentle nudges making my body tense, making my heels quiver, making me gasp, sending little thrills of fearful expectation rippling through me. I wondered if he really would make me squeal for him. Probably I would. All those other girls in the front seat certainly had. Why would I be the only exception?\n\nBesides that, I wanted to squeal for Joe.\n\nMy excitement and my nervousness and my fear rose and rose and rose. Any moment he would take me, I knew. His movements were incrementally more forceful now, no longer quite as gentle. One of his arms was already under my neck, his hand holding one of my shoulders, his other hand brushing my hair back from my face. His mouth lifted from mine, he smiled. I felt his muscles tense. Would this be it? Would it? I hoped so. My eyes widened. My feet felt his hips lift a little, then ease downwards. I tensed. The head of his cock pushed hard against me now. This was no gentle nudge this time. This was it! My entrance resisted, stretched, stretched some more, my eyes opened wider, my mouth opened wide, a rounded \"o\", my back arched in a last unconscious attempt to preserve the virginity which I wanted so much to lose. \n\n\"HHUUNGHHH.\" Sweat beaded my forehead as the head of his cock pushed at me, stretched me, wider, then wider still, the head of him an impossible hugeness as started to work his cockhead through my entrance. I knew that this was the moment, this time Joe wasn't stopping until he was in me. \n\n\"You want this Hayley?\" He breathed the question without halting his movements.\n\n\"Yes ... Yes...don't stop...\" I wanted this! I wanted this so much!\n\n\"NNNUGGHHH.\" Jesus! Oh God! Fuck! Fuck it was big! I forgot all about squealing. I forgot all about holding Steve's cock. Both my hands clutched at Joe's back. My body bucked, my feet kicked upwards, my head arched back. \n\n\"UUUGGHH.\" He wasn't rough with me but his cockhead was big; the size of a ripe plum. A LARGE ripe plum! I was small, small and delicate. Two of Joe's fingers had stretched me when he'd pushed them into me earlier, on the dance floor downstairs and then here in this room. The head of him was just so big! \n\n\"HHHUUUGGHHH.\" Those little groans just slipped from my mouth one after the other as his cockhead continued to stretch the entrance to my sex, stretched it far more than two of his fingers had as he pushed through. \n\n\"NNGGHHHH.\" His cockhead stretched me so that my hips did their best to jerk my sex downwards away from him into the mattress, an involuntary reaction that accomplished the exact opposite. The springs of the mattress promptly pushed my butt back up, driving me back up onto his cock so that, abruptly, I felt him surge into me past my entrance, felt the entrance to my sex gripping his shaft at the base of his swollen cockhead in a tight clasp where he stretched me around him.\n\n\"HHHUUUUGGGGHHHNNNGGGGOOOOHHHHHH.\" I didn't quite do what Joe had said I would do. I didn't squeal when the head of him abruptly popped into me. I didn't squeal like those other girls had.\n\nI groaned.\n\nI groaned and I quivered beneath him, my body suddenly taut with shock at the feel of him in me.\n\nHis cockhead felt thicker than two fingers in me. A lot thicker. I wasn't thinking about Steve. I wasn't thinking about anything now except the feel of Joe's cockhead inside me and his shaft stretching me around him where he barely penetrated me. I was having trouble breathing. My entire body was sheened with sweat. Jesus, it felt huge in me and I was helpless to stop what was happening. All I could do was lie there spread-eagled and pinned beneath Joe, experiencing it. Joe was paused with only the head inside me, thank god, I could feel my inner lips clamped around his shaft just below the glans. I could feel the swelling glans in me and Christ, it felt so enormous. It felt so huge! I felt so stretched. Nothing had prepared me for this. It felt like somebody had taken the handle of a baseball bat and jammed the end into me. I could feel myself stretched around his cockshaft, stretched like a rubber band.\n\n\"HHHHUUNNNNGGGHHH.\" I heard myself half-groan, half-gasp yet again, my head arched far back so that I could see the carved wooden posts at the head of the bed. My fingernails clawed at Joe's back. My feet sank down slowly from where they'd pointed at the ceiling, sank slowly down until they once more brushed Joe's hips. I could feel myself, tensed, taut, gasping for breath, starting to hyperventilate. \n\n\"Relax Hayley, just relax sweetheart.\" Joe's voice was gentle and slow, soothing me, his weight pressing on me, continuing to easily pin my jerking and wildly quivering body beneath him. His hands stroked the hair back from my forehead. He kissed me gently as I panted for breath. Short shallow fast breathes. Thank god he wasn't moving in me. \"Breath slowly sweetheart ... slooowly...\"\n\n\"NNNNUUUGGGHHH.\" Jesus, teach your grandmother Joe, I was trying for some control but I really was gasping for breath, just about hyperventilating. I hadn't been prepared for this! I tried to calm myself, tried to breath slowly but it was hard, so hard to focus when all I could do was experience. I really hadn't imagined it feeling like this, so big. Big? It was fucking huge! Fuck! Oh Fuck! Fuck oh Fuck!\n\n\"Relax Haley, breath slowly ... breath slowly ... we've got plenty of time.\" His hands continued to gentle me, stroking me slowly, his breath slow and controlled, his caresses relaxed and gentle, soothing me, calming me.\n\n\"OOOOOHHHHHH.\" Oh fuck, it was easy for him to say relax. My mouth was working like a gaped fish. Moving, but nothing was coming out but the odd uncontrollable noise. I wasn't exactly making sense here. I looked up at him blindly. This wasn't wat I'd imagined it would be like at all. Finally my voice worked. Just. \"Fuck ... OOOHHH ... ohh fuck ... It's so big ... it's so big Joe ...\"\n\nHe kissed me again, smiling. What the fuck was he smiling for? \"Yeah, it's big ... relax Hayley ... your little cunt's so tight girl ... it'll all fit in you ... eventually ...\" There was that smile of his again that said he knew. He knew and he was enjoying what I was going through, he was enjoying what he was doing to me. My breathing was slowing now, I was getting used to the feel of it inside me. Well, used to the feel of the head of his cock inside me anyhow. Fuck, how could it all possibly fit into me? This was just the tip of him? What about the rest? I knew how long he was. I'd held him in my hand. I'd taken that cock in my mouth. I knew how much of him was in me. Not much. Eventually, he'd said. How long was this going to take? Jesus it felt so fucking enormous! A fresh outbreak of sweat sheened over my body at the mere thought. I felt myself trembling. A wordless little whimper crossed my lips.\n\n\"You're okay now Hayley, see, you're getting used to it already.\" His voice was so gentle and caring. I wanted to be okay. I wanted to be more than okay for Joe. But fuck, I wasn't getting used to it! It still felt way too big to fit all the way up inside me. What the fuck was I doing? I'd wanted this? I knew I did, I still wanted this, I wanted him all in me, but fuck... I so wasn't getting used to this! Jesus.\n\n\"Oh god ... ... don't move ... just wait... ohh fuck ... ohh fuck Joe.\" My voice quivered like my body. I was helpless jelly beneath Joe and I had no control over what was happening to me. None at all. \"Let me ... let me get used to it... please... please Joe\" Although I had no idea how I was going to get used to it. Now I understood some of those stories the girls told about guys with big cocks. Fuck! What had I done? What was I doing? \n\nJoe kissed me again, tenderly, not moving, waiting for me as my breathing slowed, slowed some more. Now he kissed me again. All I did was open my mouth. My whole focus was on the feel of him in my sex, where I clasped him inside me, where my entrance gripped his shaft at the base of that swollen head, an enormous intrusion between my thighs where he entered me. I clung to him, unable to think of anything else. Was I getting used to him in me? It didn't feel like it. His mouth lifted from mine at last. He smiled. He stirred inside me, easing back just a little. I could feel myself, feel myself where I clasped him moving back with him, clinging to his shaft, held on him by the ridge at the base of his glans, stretching. \n\nHe stopped. I waited, heart pounding, then I gasped as I felt him move gently inwards, a thick intrusive pressure pushing into me, stretching me inside, his weight pressing me wonderfully flat as I tried to arch my back, pinning and spreading me beneath him. I'd never felt as helpless as I did in those moments while he pushed his cock a little further into me for the first time. I could feel myself stretching around him as he pushed just a little further inwards. It was uncomfortable, but it didn't actually hurt. I felt stretched though. Definitely he was stretching me as he worked it a little further up inside me.\n\n\"Hhuuuhhh... Ohhh ... Joe ... Joe ... OOOHHHUUHHH!\" He stopped moving with that last far louder groan. That was a relief, but also not, because only a small part of him was in me. Despite everything I really did want all of him in me. I blinked tears from my eyes. \n\nJoe touched his lips to mine, a brief caress before he spoke. \"Hayley, I think we need to give you something else to think about right now.\"\n\n\"Huuugghhhh?\" I wasn't really capable of more than simple noises. Very simple noises. I had no idea what he was talking about. What else was there to think about? How could I possibly think about anything else? This was all new to me. It was impossible to think about anything else. Or in my innocence, so I thought.\n\n\"Yeah, we need something to take your mind of my cock for a minute, something to help you relax\" His lips touched mine briefly again before he looked around. \"Hey Steve, you still with me here dude?\"\n\n\"Uh, yeah, what?\" Steve sounded breathless. His voice reminded me that Steve was here with us, it wasn't just Joe and I.\n\n\"I need you to give Hayley's tummy a little massage for me dude, she's all tense.\" Joe raised himself up, holding himself up on his arms, touching me only where his thighs brushed mine and where his cock joined me. I lay unmoving, suddenly embarrassed, my knees drawn back, exposed to both Joe's eyes and to Steve's, the head of Joe's cock inside me, his cock a thick shaft jutting inwards, joining our bodies. I wanted to look down, to look at where he joined me, to see what that looked like. I couldn't raise my head. All I could do was breathe. But I heard Steve's indrawn breath as his eyes looked down to where Joe entered me.\n\n\"Looks hot doesn't she Steve? You can see how stretched her little cunt is round my cock can't you dude. Now rub her tummy.\"\n\nSteve did as he was told, one hand moving on me in a gentle circular massage, caressing my tummy, almost but not quite touching my sex where I clasped Joe in a vice-like grip. Oh sweet Jesus! My boyfriend was massaging me while Joe had his cock in me. This was strange. Strange? This was weird! But somehow it was also tremendously exciting, even as I felt that slow burn of embarrassment spread from my face down my neck to my breasts.\n\n\"Play with your breasts for me Hayley.\" Joe's voice was soft, soft as silk, so persuasive. I obeyed without thought, moving my hands up jerkily to cup my breasts, to stroke them with my fingers, to toy with my swollen and aching nipples as Joe and Steve watched me, as Joe's cock held itself still in me, a solid shaft of heated steel poised to impale me. I held my breasts, running my thumbs over my nipples, shivering and breathing hard as Steve's hand circled on my tummy, circled and dived lower, dived down all the way to where my sex was stretched around Joe's shaft, his fingers finding my clitoris and teasing it in passing, his fingertips tracing my sex where I was stretched like a rubber band around Joe's girth. I could see Joe's eyes watching my hands, looking at my breasts as I teased my nipples.\n\nSteve's fingers moving on me where Joe entered me were starting to drive me half crazy. How could he do that? How could he bear to touch me there where his buddy's cock entered me? I was Steve's girlfriend, not Joe's. Steve should have been jealous that it was Joe's cock there and not his. Steve should have been upset that after so long where I'd kept his hands out of my panties, he was finally getting to touch me there only with Joe's cock poised to take me right before his eyes. How could Steve watch this happen so calmly? How could he see Joe's cock going into me with such meek acceptance? I turned my head a little to look at his face, only to see his gaze focused raptly on my sex.\n\nMy heart leapt, half-choking me as it dawned on me that Steve really was getting off on watching Joe take me. That look on his face as he looked at Joe's cock going into me, the rapt excitement there, told me he was as excited by what was happening to me as I was having it happen. In the back of my mind I'd been feeling guilty at what I was doing with Joe in front of Steve. Now, as realization dawned, that guilt was washed away in a flood of excitement. With a little gasp, I spread my legs wider apart so that Steve could see more. More of me. More of my sex. More of Joe's rigid connection to me. I wanted Steve to see that. I wanted to display my body to Steve, I wanted in that moment to give my boyfriend what he seemed to want just as I was giving Joe what he wanted. In displaying myself to Steve, was I getting what I wanted? I wasn't sure about that but I was certainly getting Joe's cock and I definitely wanted that.\n\nJoe picked that moment to move, easing back just a little and then pushing in further. My back arched again, Steve's hand pressed against my stomach, I gasped, just a little whuff this time as I felt myself stretched a little. But this time Joe didn't stop, he moved and moved and moved again, an infinitesimal easing out and then in, pushing just a fraction further in with every movement. All the time Steve's hand caressed my tummy, stroking me, gentling me, pressing down on me when my body quivered or when Joe intruded just a little more than I could take without that involuntary arching of my back.\n\nI knew I was starting to get used to this as I felt Joe's movements slowly becoming more lengthy inside me without any major discomfort. There was a good two inches of his cock moving in me now, sliding backwards and forwards within my sex. His shaft moved through my entrance, sliding thickly into me, pausing, easing just a little further into me before withdrawing, making me whimper with each movement as I looked up at him. My hands circled my breasts slowly. Steve's fingers stroked my tummy in slow circles, massaging me, relaxing me. \n\nJoe glanced from my face to Steve's. \"Can you feel my cock inside her dude?\"\n\nSteve's fingers massaged me, digging into me as Joe moved. \"Yeah, yeah I can.\" Oh fuck! His fingers moved down, down to where Joe entered me, slipping over my labial lips as Joe slid himself into me, pulled back, slid into me. How could he do that? I slid one hand down, down from my breast over my tummy, hesitated a moment, then slid my fingers down to touch myself, to feel Joe sliding into me with my fingertips. To feel Steve's fingers touching me there. I shivered with excitement as I felt Joe's cock sliding in and out of me. It was happening. I was really doing it. Joe looked down at me. \n\n\"Feeling more relaxed now Hayley?\n\n\"Yes... Yes\" My eyes were half-closed as Steve's fingertips ran over my clitoris, tracing little circles on me as Joe moved in and out in a slow rhythm. I watched him as he smiled and slowly lowered himself back down onto me, one arm sliding back under my neck and shoulders, his weight firm on me as he continued to move steadily. It felt good. It felt very good and I found myself wanting more. He nuzzled my ear, his voice soft.",
        "\"I want you Hayley.\"\n\n\"Yeah,\" I gasped. As if he couldn't tell.\n\nHe kissed me tenderly. \"Hey Steve, you want to know what your girlfriend's little cunt feels like while I work my cock all the way into her?\"\n\nSteve looked at me, then back at Joe. \"Yeah.\" Excited but subdued. Well, I guess I'd be a bit subdued if I was him. It's not every day you get to watch your best buddy fuck your girlfriend. It's even less common if it's your girlfriend's first time. I closed my eyes, content to feel Joe on me, his cock slowly easing up inside me. I was wet alright. I could hear wet noises from where he was moving in me.\n\n\"Okay, stick your finger all the way up Hayley's butt.\"\n\n\"What?\" \"Huuughhh?\" Steve and I replied simultaneously. Well, Steve replied. I gasped. Joe's instruction to Steve had my complete attention but I wasn't exactly coherent What the...?\n\nJoe ignored me, speaking to Steve. \"Slide your finger up Hayley's butt as far as you can, that way you can feel my cock while I work it all the way into her.\" He snickered, looking down at me, looking down into my eyes. \"It's as close as you're going to get to feeling your girlfriend's hot little cunt taking its first cock dude.\"\n\n\"Huh?\" I'd never imagined having anything up my butt. What? But I didn't have any time to think further about it at all. My eyes flew wide open as Steve's fingertip pushed up against my anal entrance, his fingertip nuzzling my tight little ring of anal muscle. He wasn't? Was he?\n\n\"HHHUUGGHHHHH!\" He was! He did! My body jerked, quivering as his fingertip pushed harder, pushed through my sphincter, pushed into me without pause, pushed up inside me. That jerk away from Steve's finger pushed me further onto Joe's cock. My jerk away from Joe's cock pushed me further onto Steve's finger. Oh fuck! Fuck this was weird. But it wasn't as if there was anything I could do about it. How come Steve was so fast to stick his finger in my butt when Steve told him to? If he'd been this fast with his cock, it'd have been Steve doing to me what Joe was doing to me. Although if I was honest with myself, it was Joe I really wanted right now. That thought faded to the back of mind, just another puzzle that the feeling of Steve's finger probing deeper and deeper into my butt rapidly superseded.\n\n\"Yeah, that's it Steve, I can feel it dude ... oh yeah ... that feels great ... stick your finger right up her ass dude, okay ... push man! ... all the way in!\"\n\nSteve pushed. \"Like that?\" Steve's voice was a shaky whisper. \n\nNot half as shaky as my voice. \"NNNNNUUGHHHH.\" His finger slid all the way up inside my butt. Oh fuck. Oh Jesus! It might have felt great for Joe and for Steve. For me it just felt strange, a weird intrusion where I hadn't every expected anything to go.\n\n\"You okay Hayley?\" Joe sounded like he meant that genuinely. I guess I was as okay as anyone is who's just had a finger inserted all the way up their butt when they didn't expect it. Expect? I'd never even imagined it. \n\n\"Huuuuugghhhh ... nnnghhhuuuhhhh... nnnnnggghhhhh.\" My groans just came out of my mouth uncontrollably. Steve's finger was all the way inside my butt. Oh God! It felt so weird. So intense. The sensation seemed to curl and twist through my body, coiling within me, filling me. I wasn't exactly saying yes, but I didn't say no either. I'd told Joe he could do whatever he wanted to me and I'd meant it. I just hadn't expected anything like this. It had never even occurred to me. But if he wanted to do this to me, I wasn't going to say no unless it hurt me. And this didn't hurt, it was just ... strange.\n\n\"Yeah dude, that's it. Now just keep it there whatever she does.\" Joe grinned down at me but he spoke for Steve. \"Now tell me if you can feel my cock moving inside her.\"\n\nHe pushed himself into me a little further, a little more forcefully than he'd been doing up until now. Beads of sweat once more broke out on my forehead as my sex stretched around his cockhead. He eased back. Forward again, pushing again, stretching me a little more. Back again. Pausing with only the head of his cock inside me! Jesus! Jesus and Mary! I could feel his cock shaft moving through my entrance, sliding and holding me stretched open, I could feel his cockhead pushing deeper still in my sex, stretching me with every movement. It didn't exactly hurt but I did feel very very full. And all the time there was that weird second penetration in my butt, not painful, not even uncomfortable. Just ... weirdly different and completely unexpected.\n\n\"Yeah, I can feel that.\" Steve sounded excited. \"I can feel your cock moving in her Joe.\" He was looking down at me. They were both looking down at me but it was Steve that spoke. \"Can you feel that Hayley?\"\n\n\"Uuuggghhhhhh.\" Well fuck Steve, of course I could fucking feel it, it was buried in my butt wasn't it. I couldn't stop making little noises every time Joe moved inside me. They just came out of me whenever they wanted to. Steve definitely wasn't the only one that was feeling Joe's cock. And I wasn't only feeling Joe's cock. Oh fuck no. I could feel his cock and Steve's finger both. Joe's cock was fucking big and fucking hard and Steve's finger was buried deep in me, a weird double penetration that left me quivering like a leaf between them. There was a long moment when neither of them moved in me and I had to groan again, a choked off sound that reflected what I was feeling. Joe looked down at me and kissed me again.\n\n\"Is she okay?\" Steve sounded concerned. But his finger stayed buried deep in my butt. I guess he wasn't that worried.\n\n\"Don't worry, she can take it, can't you Hayley?\"\n\n\"Nnnuuughhhhh,\" I gasped again, my back arching as I tried to relieve that thick internal pressure pushing upwards inside me, stretching me almost painfully but not quite. That weird dual pressure. My mouth still wasn't working. \"Ooohhuughhhh.\" \n\nI guess I could take it.\n\nI couldn't stop myself from groaning though. Choked-off groans that just came out of me one after the other. But I didn't want it to stop, I wanted Joe to keep going, I wanted all of him in me. Joe paused inside me again. That was fine with me for now. He looked down at me but when he talked, but his words were for my boyfriend, not for me. Or maybe they were for me as well. It wasn't like I was paying much attention to anything other than that cock and that finger in me.\n\n\"See Steve, you have to work your cock gently into a tight little cunt like Hayley's... When you get a tight little cunt like hers, you've got to do them bit by bit, work your way into them gently dude.\"\n\nJoe suited his next actions to his words, beginning to move inside me in a slow steady rhythm, not pausing at all now, pushing just a fraction deeper into me with each gentle movement, gently easing himself back until just his cockhead was inside me, then easing into me again. I could feel him working his way a little deeper inside my sex with each movement, stretching me for his cock. At the same time, Steve's finger continued to impale my butt, that weird double penetration continuing to hold me helpless and unmoving on the bed, gasping and groaning with each slow slide of Joe's cock in me. All I could do was lie there making choked off little noises, my knees clutching at Joe's ribs, my feet resting against his hips, my body jerking and juddering beneath him as his cock slid thickly into me, withdrew, slid in again. And again. And again.\n\nIt stretched me each time he thrust his cock up deeper inside of me. Every movement strained my vaginal channel around him. I could do nothing except focus on the feel of his cock working its way up inside me and the secondary sensation of Steve's finger in my butt. I groaned. I groaned and I moaned and I sobbed and I gasped and I made weird little whining sounds and my body juddered and quivered. With over half of his cock now inside me, Joe stopped moving again, which suited me just fine. I already felt like I was stuffed full and I needed a break. His mouth closed on mine and we kissed. My mouth instinctively opened wide for him, he kissed me hard, his tongue deep inside my mouth, his eyes locked to mine. His mouth lifted from mine at last.\n\n\"Steve!\"\n\n\"What?\"\n\n\"Get you head up here and give your girlfriend a kiss.\"\n\nPanting, I turned my head to look at Steve. He twisted and moved up the side of the bed, somehow keeping his finger inside my butt but twisting as he moved so that I gasped. After a moment where we just looked at each other, he kissed me passionately. I kissed him back, playing with his tongue, opening my mouth wide to him.\n\n\"Go on Steve, kiss her and finger fuck her ass at the same time.\"\n\nSteve's eyes looked into mine, his mouth lifted for a second, moved down to my ear.\n\n\"I love you Hayley,\" he whispered, and then he was kissing me hard and his finger was moving, twisting and corkscrewing in me, sliding in and out of my butt and I was gasping and moaning helplessly into his mouth as he did that to me. Jesus! In two years of dating Steve had never said he loved me. He'd said all sorts of other things but never that he loved me. And now of all moments, when Joe was fucking me in front of him, he told me that he loved me. This was too weird. But I forgot all about that when Joe nibbled at my neck, then my ear. He whispered so only I could hear him.\n\n\"Don't worry Hayley, it's going to feel good for you real soon...\" He breathed hard. \"But first I want to get all my cock inside you...\" He lifted his head and when he spoke now, it was for Steve. \"Push your finger all the way up her ass and hold it there dude.\"\n\nSteve obeyed. I could see the excitement in his eyes as I felt his finger push hard, push deep as I gasped into his mouth, then groaned. Joe smiled. My sex stretched around him as his cockhead pushed deeper, stretching the walls of my vaginal channel around his shaft. He pushed into me hard, not stopping, not pulling back, pushing into me, not relenting in the slightest. I moaned into Steve's mouth as he kissed me, groaned loudly, my head arching, my back arching up, my heels beating a wild little tattoo against Joe's hips. Steve's mouth stayed locked to mine, his finger staying buried in my butt as Joe forcefully worked his cock all the way up inside me. There was nothing gentle about his penetration now. He was taking me.\n\n\"Mmmmmpphhhaaaaaaaa...\" My pained cry was muffled by Steve's mouth on mine. My eyes teared up, my body quivered. Joe's cock remorselessly drove into me, pulling back, then pushing in hard again, forcing another inch of that thickly rigid cock up inside my narrow channel. My body arched tautly beneath him.\n\n\"Hhhhuuugghhhhh!\" I moaned as he pushed hard, penetrating a little further. Steve's mouth lifted from mine, his face looked down into mine, watching me intently as Joe fucked his way deeper and deeper into me.\n\n\"Ooooaaahhhhhh.\" I sobbed as Joe pulled out of me slowly until only the swollen cockhead remained inside me, leaving me feeling momentarily empty. He paused. \"You're too fucking...\" I started to gasp. He thrust his cock into me, pushing higher. \"Biggguuaaagghhhhh... aaagghhhhh ...oowwwwaaaahhh ... oohhhaaaghhhh ... nngggaaaahhhh.\" I was making the same noises those other girls had made in the front seat when Joe took them. I was squealing. I was squealing just like every new girl I'd heard Joe fuck. \n\n\"Don't worry, it'll all fit inside you real soon,\" he gasped, briefly pausing high inside me, a moments respite has he looked at Steve who'd now stopped kissing me. \"Hey dude, can you feel my cock inside her? ... Jesus, your girlfriend's so fucking tight Steve, it's a shame her cunt's gonna be stretched before you get your cock into her, her cunt feels so fucking hot. Told you I'd make her squeal, dude.\"\n\n\"Oh yeah man.\" Steve sounded enthusiastic. He sounded excited. He was excited at watching and listening to Joe fuck me? My boyfriend was excited by this? I knew that now but fuck! It still seemed weird to me.\n\n\"Hhhhuuuughhhhh.\" All I could do was groan. Joe was pressing into me, an intense pressure deep within me that forced a groan from me as my feet kicked high above his back.\n\n\"You okay Hayley?\" He didn't stop moving in me.\n\nWhat could I say? Would it matter if I wasn't? How could he tell when all I could do was groan and moan and sob. \" Ooooaaahhhhhh ... aaauuhhhh... uughhhhh!\"\n\nHe grinned. \"Yeah, sorry, I know, you're feeling a bit fucked...\" He kissed me gently, brushed my hair back, his hand wiped the sweat from my forehead, away from my eyes, his cock moving deep into me as his hand ran over my skin.\n\n\"Hhhuughhh.\" Jesus. His cock was almost all in me. I felt so full. I felt him sliding in so deeply, his cockshaft so far up inside me it felt like it was going up into my chest. Fuck! How long was he? This felt fucking impossible! Steve's finger was still deep in my butt but now I felt it almost as an afterthought while Joe's cock moved steadily in and out of me, sliding through my entrance, pulling back until only the head of his was cock was inside me, pushing into me again. So deep. So long. Oh Jesus Jesus Jesus it was starting to feel really good.\n\n\"You know Hayley ... you're the first ... the first Chinese virgin ... I've ever fucked.\" \n\n\"Nnnnnhhhhh.\" I was? Was there a difference between Chinese virgins and those gweilo girls he'd fucked? Did I squeal differently or something? I wanted to know but talking wasn't something I felt up to. I tried to file that question away for later but it kind of slipped from my mind as his cock slipped into me, wiping away the thought as I groaned again.\n\n\"Hhhuuuhhhhh!\" Slowly he eased his cock back before pushing into me again, pushing hard again, penetrating more deeply into my not-quite-so-virgin-anymore sex with his cock. It still felt uncomfortable when he reached deep inside me where he hadn't yet been and stretched me around him. Each time he did that I groaned again. Joe took a deep breath.\n\n\"Ohhh yeah... Oh yeah ... You're good ... you're so fucking tight ... I love fucking virgins ... thanks for saving it for me Hayley.\"\n\n\"You're welcomeuughhhhhhh.\" Oh fuck. Why was I always so polite?\n\n\"Hhhnnnghhhh.\" Jesus!\n\n\"Uuuhhhh.\" Oh lord god, I felt so stuffed full! Was there room inside me for more?\n\n\"Hhhuughhhnnnaaagghh.\" His cock was so impossibly deep inside me. Fuck! How far in me was it going? Jesus Christ La!\n\nHis movements inside me were steady now, a regular in and out thrusting, moving more easily now that most of my sex had been stretched around his cockshaft, only uncomfortable when he pushed in to me a little deeper, as he did now only on every third or fourth slide. His fingers entwined themselves in my hair, held my head still, his mouth clamped down on mine hard, his tongue searching deep, dominating my mouth the same way his cock was dominating my sex. I could feel him deep inside me, almost all his cock in me now, long and thick, reaching up impossibly far inside me with every sliding thrust. I could tell he was almost all in me. Almost.\n\n\"Ooooaaaahhhhhh.\" He pushed into me one last time. One last time I felt him stretching me and then I knew his cock was all the way into me and I could feel him pressing against me where we joined. He pulled all the way back until only the head of him was inside me. I gasped, Joe smiled, then he pushed into me. A long slow thrust that went on and on and on and this time he didn't stop until his pelvic mound was pushed hard up against my sex, crushing my labial lips, the fronts of his thighs forcing mine back and wide apart. Huge and thick and hard and stretching my sex around him. There was no more of him to go inside me. He was all in me. All of him! I was stuffed full and it didn't hurt anymore. Not much. My sex did a spastic little dance around his invading cock. I squirmed under him, wondering of there was any way I could get just a little more of him into me, panting with the effort.\n\n\"God Steve, you're girlfriend's cunt's so fucking tight.\" Joe groaned. \n\n\"Hhhuuuggghhh.\" It wasn't like I was talking. I couldn't think, let alone speak intelligibly. All I could do was experience what was happening to me, feel the intense pressure of that enormous cock within me, filling me and stretching me. Joe kissed the tears from my eyes, kissed his way tenderly down my face until his lips met mine again. We shared another passionate kiss while he held himself still inside me. Steve's finger was still buried deep in my butt, I could feel his cock pressed against my hip as he lay tight up beside me. I glanced at him, still panting, saw him looking at me, saw that weird rapt excitement on his face. I tried to speak, my mouth working, nothing coming out. \n\n\"Hey dude,\" Joe was smiling at Steve again, \"your girlfriend's cunt feels reaaaaal nice and tight and she's so fucking wet.\" He snickered. \"Did you feel me going all the way into her dude?\"\n\n\"Yeah, yeah I did.\" Steve was panting. Absently, I thought that was kind of strange. But then, what was happening to me right now was a bit strange too and I wanted more of Joe in me if that was possible. I stopped trying to think as I reached down to find my ankles where they pointed at the ceiling, grasped them with my hands and pulled them back, back and down until they almost touched Joe's shoulders. Then I groaned as somehow, his cock penetrated me just a little deeper, an additional half inch or so that my new position allowed him.\n\n\"Ohhh fuck Hayley that feels good.\" Joe's reaction was a groan of pleasure that made me shiver with happiness. \"Your cunt feels so fucking good.\"\n\nJoe started to fuck me slowly now, his cock pulling all the way back until only his cockhead was inside me, then thrusting inwards until he was hilted all the way inside me, his pelvic mound crushed up against me. Long slow thrusts that still caused me a little discomfot, but nowhere near that first extended period of initial penetration when my vaginal channel had adjusted to his rigid size! To my relief, I was beginning to actually enjoy this. His fingers were still entwined in my hair, controlling my head just as his body controlled mine. I could feel my excitement, my arousal, growing as he moved slowly, as he rode me, his shaft sliding inwards as my labial lips clung tightly to him, then slowly withdrawing. \n\nAs he moved in me, I could feel his chest moving against my breasts, rubbing almost harshly on my swollen nipples as he had me, sending little ripples of pleasure through my body. His hips lifted and lowered under my feet, his ribs expanded and contracted against my knees as he breathed, his thighs moved against mine, his body moved on me. His cock slid inwards at the juncture of our bodies, sliding in and out of me. I was finally being fucked and it felt so good! A hot glow washed outwards from my sex, from my swollen clitoris, washing through my body with each long slow thrust. Somewhere, Steve's finger had removed itself from my butt and now I felt more relaxed, more at ease with what was happening to me, what was being done to me.\n\n\"How's that Hayley?\" Joe's voice purred. \"Feel better now?\"\n\n\"It feels good,\" I managed to choke out, \"now.\" I watched Joe's face, seeing the pleasure there as he moved, as he had me. Then \"I want to touch it.\" I was curious to find out what his cock felt like under my fingers as all of it moved in and out of me. \n\n\"Sure.\" He lifted his weight from me on outstretched arms, looking down at where our bodies interconnected as he moved. \"Fuck, look at that Steve; her cunt's stretched around my cock like a fucking rubber band?\" He grinned down at me. \"Take a look at yourself Hayley.\"\n\nI drew in a sobbing breath and raised my head, looking down between our bodies. I could see his cock, hugely thick, jutting forward from his body and disappearing into mine between my thighs. My lips were stretched around him, stretched tightly around him, the thickness of his shaft filing the gap between my thighs completely. I watched, feeling it as he slowly eased himself back, seeing my sex lips clinging tightly to his shaft, stretching as he eased himself outwards. His cockshaft emerged from me slowly, impossibly thick, glistening with my wetness, inch after inch after inch easing out of me, impossibly long and solid looking, on and on until only that swollen cockhead remained inside me. I shivered, finding it hard to believe that the thick length of him could ever fit inside me. It had, I knew. I had watched it slide out of me.",
        "I watched it slide back into me. All of it, slowly pushing up inside me. I watched, breathing hard, it as it did, seeing that long thick shaft disappearing into me sex. I felt it. I felt every inch of it. It was my turn to gasp as I sagged back onto the bed. \"Fuck ... oh fuck... fuck.\"\n\nMoaning softly, I reached down with my hand, still half unable to believe that his enormous shaft was actually penetrating all the way up inside me. Unable to believe that my sex could accept that enormous girth even as I watched and felt it sliding slowly up into me! Joe's eyes were on me now, watching me looking down at our joining. He held himself still as, hesitantly, I let my fingers explore once more, touching myself where he was joined to me. He smiled, then moved and now I felt his shaft slide under my fingertips, in, all the way in, then slowly out. Oh fuck! Fuck! It felt wonderful!\n\nJoe looked at me looking down at our joining. He glanced down at Steve, still watching, breathing hard. \"Hey dude,\" his tone towards Steve was harsh, cruel even, sending little shivers through my body as I listened to him. Steve was watching too, watching Joe's cock sliding in and out of me. Steve glanced up at him.\n\n\"Yeah?\"\n\n\"You gotta feel this too Steve, put your hand on your girlfriend's belly dude.\"\n\nSteve looked up at him, meekly obeying, his hand resting on my flat stomach. Joe grinned, drew his cock outwards until only the swollen head remained in me, then began to move into me, slowly, impaling me with the full length of his cock. My head fell back on the bed. It was all I could do to just lie there and breath and feel him go into me.\n\n\"Can you feel my cock going all the way into her dude.\"\n\n\"Yeah.\" Steve's response was a gasp.\n\n\"Ohhhhhhhh.\" So could I as Joe's cock slid into me all the way. He was buried to the balls. I knew that. I could feel his balls brushing my butt.\n\n\"Want to feel me do that again?\" Joe's question was directed to Steve. I glanced at Steve. Steve looked at me, like he was asking for my permission. Joe smiled. \"Hayley doesn't mind, do you Hayley?\"\n\n\"No, I don't mind.\" No, I didn't mind at all. I smiled at Steve. Somehow, seeing his excitement as he looked at what Joe was doing to me, I wanted to, I'm not quite sure what, maybe rub his face in what was happening to me? \"Go on Steve.\" I reached out and took Steve's hand in mind, took my boyfriend's hand and placed it on my stomach, low, where I could feel Joe inside me. \"Do you want to feel Joe's cock in me?\"\n\n\"Yeah ... yeah, I do!\" Steve's fingers kneaded my belly. Joe moved in me, out, then in again. As he did so, Steve's fingers caressed my belly, massaging me, sliding down to my sex, touching my lips where they clung to Joe's cock. I was, like, totally sure now he was getting off on watching Joe fuck me. I was certainly excited by Steve watching Joe fuck me. My fingers played around my labial lips where Joe's shaft joined me, feeling myself stretched around his girth, feeling Steve's fingers touching me there too. My heels slid and brushed along Joe's hips as they lifted and plunged lazily. \n\nMy hand left Steve's fingers to play with me and instead I sought Steve's cock. I found it easily, began to slowly stroke him as Joe slowly fucked me. I watched Steve's face, watched him looking at my sex, watched him looking as Joe's cock slid in and out of me making soft wet noises, feeling Steve so solid and rigidly hard in my clasp. Biting my bottom lip, I tried to spread my legs wider apart, tried to display more of myself to both of them. One of the nice things about Tae Kwon Do is that it builds flexibility. I was very flexible. I succeeded in spreading my legs wider. Joe groaned in appreciation. Steve's cock throbbed under my fingers.\n\n\"Does that feel good?\" I gasped, looking up at Joe.\n\n\"Oh yeah, yeah, that feels fucking good Hayley,\" he breathed.\n\n\"Fuck yeah,\" Steve gasped simultaneously. I looked at him, startled. What? I mean, I knew I was ashamed of myself letting Joe fuck me. Excited but ashamed. But my boyfriend was all excited watching someone else fuck me. And his hand was on my sex feeling Joe's cock slide into me as he breathed \"Does that feel good Hayley?\"\n\n\"Yeah ... yeah it feels so good Steve.\" My voice was a moan as I looked up at my boyfriend's face. \"I can feel Joe's cock go into meeeeeooohhhh\". My voice trailed away into a moan as Joe's cock buried itself in me. \"Can you feel it Steve ... Can you feel Joe's cock in my cunt?\" My hand stroked Steve's cock slowly. God, he felt like an iron bar.\n\n\"Yeah ... Oh fuck yeah.\" Steve was panting. \"I can feel it.\"\n\nJoe glanced at Steve and laughed. \"I think your boyfriend likes watching me fuck you Hayley.\" Joe's voice had that cruel twist to it again. My insides seemed to twist and coil. Joe looked down at me. \"I think I want to fuck you a bit harder now Hayley.\"\n\n\"Okay.\" I gasped as his weight came down on me and his fingers in my hair pulled my head back again. When he did that, my back arched and the muscles of my sex clasped him more tightly while my feet kicked up in the air over Joe's back as his cock plunged into me. This time it was Joe that groaned, a low, barely audible groan of pleasure that sent ripples through me. Then he started to move hard inside me, short hard strokes that jarred my body as he hilted himself into me with each thrust. I'd never felt anything like it before, which wasn't surprising given his was my first cock. I'd never imagined anything like this before, his cock moving hard in and out of my cunt, the bed squeaking beneath us, the antique wood groaning, me groaning, joe's body moving hard on mine. \n\n\"Oh yeah, give it to her hard Joe, give it to her hard,\" Steve breathed. I heard him but the words didn't sink in. Just one more sensory input among many, most of them related to Joe's body pounding me down against the mattress, his cock slamming into me again and again. The feelings as his cock plunged into me generated an intensity of sensation that I'd never imagined. I was no longer in control of my own body. Joe controlled it, Joe's cock filling me, Joe's cock was the entire focus of my being as I lay beneath him, a willing receptacle for his fucking. I moaned, I sobbed, I cried out, my legs kicking helplessly as he rode me, my hands clutching at him, feeling my excitement rising, rising higher, on the edge now, closer and closer and closer.\n\nEven the orgasm Joe had given me by licking my sex couldn't compare to what he was doing to me now. I felt my sex tighten around his cock, waves of pleasure washing through my entire body with every movement. My eyes rolled into the back of my head, I drew my knees back as far as I could, curling my toes even as I tried my best to urge Joe into me with my heels. Nothing had ever felt as good as Joe's steel-hard cock fucking me.\n\n\"Finger fuck her butt dude.\"\n\nSteve obeyed instantly, driving his finger into my anal passage so that I squealed and bucked a little at the sudden digital penetration. Only this time it wasn't so strange, I knew what it would feel like and somehow I welcomed it. My body shivered as Joe's cock and Steve's finger began to move in a fast rhythm and counter-rhythm within my sex and my butt. I was helpless, riding that wave that was building and building as Joe rode me with merciless skill. His hands held me, his body pinned me, his cock drove into me and I was shaking uncontrollably. Nothing was comparable as I experienced my third orgasm of the night, a wave of sensation and pleasure that rolled through me in a tsunami of sensation that drove everything else from my mind.\n\nAfter what seemed to me to be the longest minute of my life my orgasm slowly faded away, leaving my body glowing, leaving me panting for breath, limp and unable to move. But Joe was still on me and in me, still fucking me hard. I turned my head to look at Steve. His eyes were wide in disbelief but his face was flushed with excitement, still finger fucking my butt while his best friend was fucking me. Joe followed the direction of my gaze and grinned, stroking my hair back from my sweat-beaded forehead. It wasn't just my forehead; my entire body was slippery with sweat, Joe's and mine.\n\n\"Does that feel good Hayley? You like my cock fucking you?\" He was gasping, I could sense his enjoyment at what he was doing to me. I liked that! I liked it very much!\n\n\"Yes ... Yes,\" I gasped, still looking at Steve, \"keep fucking me ... don't stop.\"\n\nJoe grinned at Steve. \"Your girlfriend's a hottie alright Steve ... such a tight juicy little cunt ... I should've fucked her before.\" He looked down at me then. \"You'd have liked that wouldn't you Hayley?\" His words sent a thrill rippling and coiling through me so that I moaned softly.\n\n\"Yeah ... Yeah I'd have liked that Joe ... fuck me more.\"\n\nHe did and I moaned and sobbed and made lots of noise, still looking at Steve as Joe's cock moved hard inside me. I couldn't believe how good it felt to be fucked, to have his cock sliding up inside me, each of his sliding driving thrusts sending waves of pleasure rippling through my body. The feel of his weight on me, between my legs, spreading me wide, his chest crushing down on my breasts, his movements on me as he took me, all accentuated the pleasure that I felt. Steve watching Joe fuck me gave me an added little frisson.\n\n\"Time for a change,\" Joe breathed. \"Take your finger out of her.\"\n\nI moaned with disappointment as he withdrew from me, moaned again as Steve's finger eased out of my ass, leaving me empty. I watched Joe as he rolled onto his back beside me. He grinned at me. \"Climb up onto me Hayley.\" His hands showed me what he wanted, guiding me over to kneel on top of him, straddling him and I knew Steve had a close-up view of my wide-open sex as I knelt there over him, my head on Joe's chest.\n\n\"Sit up Hayley,\" Joe told me. His hands guided me again, lifted me above his cock, positioning me. \"Stay like that.\" I held myself still, breathing hard as he guided his cock so that it was jutting straight upwards, the tip brushing my entrance, holding me there with just the head of his cock inside me. Looking down, I could see his shaft jutting upwards beneath me. It seemed impossible that something so long and thick could all fit inside me.\n\n\"Hey Steve,\" Joe said, \"Get up behind Hayley and give her a hand.\"\n\nI was breathing even harder as Steve swung himself up onto the bed. I could sense him behind me, his breathing fast against the back of my head, his hands on my narrow waist. I could feel him behind me as he moved closer, legs behind mine, his cock pressing up against my butt, his chest against my back, his breath hot against the back of my head.\n\n\"Help work her down onto my cock dude.\"\n\nI gasped as Steve's hands moved to my hips. I moaned as his hands eased me down a little. Wide open from Joe's fucking as I was, the head of Joe's cock popped inside me easily. I shivered and gasped, looking wide-eyed down at Joe. I had no idea what we were going to do but whatever it was, I wanted his cock inside me.\n\n\"Move her down on me gently dude, up and down a bit at a time.\"\n\nOne of Joe's hand held his cock in place, the other reached up to cup one of my breasts. Steve's hands lifted me a little, then forced me down so that an additional half inch of Joe's cock disappeared into me. He waited a few seconds, then lifted me and pushed me down again. I rested my head back on Steve's shoulders, letting his hands do the work, feeling Joe's cock working its way up inside me a little further each time. My body was enjoying this, wanting that cock to fill me.\n\nMy mind was a total mess.\n\nMy boyfriend was actually helping his buddy to fuck me. My boyfriend was pushing me down onto Joe's cock. I was enjoying it. I mean, I'd more or less given myself to Joe, I'd let Joe take me and fuck me. That filled me with shame, sort-of, but it was also wildly exciting. Steve watching Joe fuck me was kindof weird but exciting as well. Steve helping Joe fuck me? Now that was really weird. I twisted my head so I could see Steve's face as his hands sank me down on Joe's cock. I mean, he was my boyfriend even though it was Joe fucking me. I wanted to share the experience with him.\n\n\"Steve,\" I gasped as his hands worked me half way down Joe's length. \"Steve.\" I reached behind me, worked a hand in between us and found Steve's cock, clasped it with my fingers, stroked it slowly as Steve worked me down. All the way down, until I was firmly seated on Joe, my body pressed against his where we joined. Looking down, I could see myself where he entered me, thick and solid, feeling like he was in me all the way to my heart. I took my hand from Steve's cock, reached down to feel myself where Joe penetrated me.\n\n\"Ohhh,\" I managed to breath, \"Ohh Joe ... oh fuck ...\"\n\nJoe grinned up at me, one of his hands rubbing my belly, the other squeezing one of my breasts.\n\n\"Steve, move right up behind Hayley and grab her tits with your hands, I want you to get her riding me, okay dude, I don't think she's up to doing it herself yet.\"\n\nI knew I wasn't. It was all I could do to just sit there with Joe buried inside me and not topple forward. Steve did as he was told, pressed up behind me, his hands holding me, his hands moving me. I couldn't believe it. My boyfriend was lifting me up and down so that I was fucking Joe's cock, riding up and down on it, and all the time I could feel Steve's erection pressed up against my butt, sliding against me as he moved me, his breathing heavy in my ears.\n\n\"You like that huh Hayley,\" Joe growled. \"You like riding me?\"\n\n\"Yeah ... yeah,\" I gasped. It was hard to even think, it felt so good.\n\n\"Tell Steve you love fucking my cock then, tell him you wanna have him fuck my cock harder, tell him to make you fuck me harder.\"\n\nI twisted my head so I could look back at Steve, moaning as Steve's hands cupped and squeezed my breasts while Joe's hands guided my hips. I knew I shouldn't be enjoying this but I was, a lot. God, just how much of a slut did that make me? I'd never thought of myself like that before, it was always those gweilo girls that were the slutty ones. Not me. Not Hayley! Yet here I was, doing exactly the sort of thing I'd always scorned gweilo girls for doing. I closed my eyes for a moment. How could I tell Steve I loved Joe's cock fucking me? That was just so ... so shameful for me, so humiliating for Steve. I couldn't. I really couldn't. I whimpered.\n\n\"Hayley!\" Joe was looking at me. His hands held me still.\n\nI stirred, trying to move but Joe's hands were remorseless. \"Please,\" I gasped.\n\n\"Tell Steve you love fucking my cock then, tell him you wanna have him fuck my cock harder.\" One of his fingers teased my clitoris, making me squeal. That grin again, twisting me up inside. Joe knew what he was doing to me.\n\nI needed his cock. I needed fucking. I gave in, I surrendered, feeling totally torn. \"Steve...\" I gasped, feeling awful at what I was saying, awful but excited and wildly abandoned, \"Steve... I love fucking Joe's cock ... Make me fuck Joe's cock harder Steve... Please Steve ... I want Joe's cock to fuck me harder.\n\n\"\n\nI really did. Steve's face showed he was getting off on this too. His hands began to move me faster, lift me up, push me down onto Joe's cock harder. Was that weird or what? I mean, I was a girl, I was supposed to like being fucked and I did. I liked it a lot! I'd seen porn movies. I'd seen girls in movies being fucked by more than one guy. Even though it was in movies and made up, I figured I was a girl and I was supposed to like things like this even if it made me feel slutty and ashamed of myself. But Steve was my boyfriend. He wasn't supposed to be enjoying seeing some other guy fuck me. That was just plain wrong! \n\nWhich in a twisted way made me feel even more excited about what I was doing. Or at least, what was being done to me. Which was right when another orgasm swept through me, a sudden wave of pleasure that held me helplessly enthralled for another of those long long minutes. Steve didn't care. He kept moving me on Joe's cock right through that orgasm.\n\n\"Jesus Hayley, if you keep that up, you're going to make me have to pull out,\" Joe groaned as Steve worked his me down on Joe hard. He hadn't stopped moving me just because I was in the middle of my own orgasm.\n\n\"No,\" I panted. \"No ...inside me ... I want to feel you finish inside me...\"\n\n\"You sure?\" Joe asked, our eyes locked. \"If I don't pull out I'm gonna cum inside you.\"\n\n\"Yeah, I know,\" I moaned. \"I want you to.\"\n\n\"You might get pregnant,\" he warned me.\n\n\"Don't worry, I can go get something tomorrow,\" I gasped. \"I want to feel you finish in me.\" I did. I really did. Just the thought was making me excited all over again.\n\n\"I guess you do,\" he said.\n\nAnd then he lifted me off him. I moaned in disappointment as he slid out from under me and turned me around. I was already on my knees. He pushed me down onto my hands as well so that I was kneeling for him, feeling very much like a total little slut as he moved to kneel behind me. I knew what he wanted when he positioned me like that. I'd seen a few porn movies. I'd just never imagined having it done to me like this. Not the night I got to lose my virginity anyhow. I waited, breathing hard as he moved to kneel behind me. His cock brushed against my sex, I moaned, he pushed inside me, paused, his hands grasping my hips, then drove the length of his cock into me, hard, going all the way in until he was pushed up against my butt and the backs of my thighs.\n\n\"Uuuughhhhhhh!\" My body jolted, even my small breasts quivered with the impact.\n\n\"Oh yeah Hayley ... you like that don't you ... fuck Steve, your girlfriend's a hot little bitch! ... look at her ... She loves it dude ... Tell Steve you love it Hayley!\" \n\nI did! I did love it! I knelt in the middle of the bed with Joe kneeling behind me ramming his cock into me, his hands gripping my hips and pulling me back onto him hard as he thrust into me. I could hear the wet noises my sex was making as he fucked me, the sounds our bodies made as he slapped up hard against me each time his cock drove into me. And Steve! Steve was lying right beside me watching as Joe fucked me, watching me being fucked. That was turning me on so much, making me feel like the hottest girl in the world. \n\n\"Tell ... Steve ... you ... love ... it ... Hayley!\" Joe's voice was a passionate grunt, each word accompanying a hard thrust up inside me that juddered my body, made my breasts quiver.\n\n\"I do,\" I squealed. \"I do ... I love it ... fuck me Joe ... fuck me ...do it hard ... ... I want it ... I want it hard...\" The words just flew out of my mouth, half spoken to Joe, half to Steve. Joe gripped my hips hard with his hands, his fingers digging into me almost painfully as he started to fuck me really fast. I wanted it. I wanted him to fuck me as hard as he wanted to. I really really did!\n\n\"Hey dude ... I'm gonna cum ... I'm gonna cum real soon ... I want to cum in your girlfriend's hot little cunt ... that okay with you dude?\"\n\nJoe's words twisted my insides up like a spring. He was going to cum inside me. Oh God! I'd said he could but it still scared me. It terrified me. I might get pregnant. I didn't want a baby! I was eighteen and still in High School! At one and the same time I wanted Joe to finish. I wanted to feel him cum in me. I wanted to satisfy him. I wanted him to do everything to me. Red faced, mouth wide open, eyes wide, panting like a bitch in heat, I glanced sideways at Steve, saw the rapt excitement on his face. My boyfriend was excited knowing that Joe was going to cum in me. \n\nIn that moment, knowing Joe would cum inside me heedless of any objections from Steve, I took a cruel joy in rubbing Steve's face in my desire for Joe to cum in me. After all, if Steve had been more of a man, if he'd stood up for himself, stood up for me, it would be Steve doing what Joe was doing to me now. It would be Steve who was about to cum in me. It was Steve's fault this was happening to me. It was Steve's fault I was enjoying this so much.",
        "\"Steve.\" My voice was a gasping moan, my eyes fixed on his. \"Steve ... tell Joe ... tell him it's okay ... okay for him to ... to cum in my cunt... I want it ... I want him to cum ... in me ... tell him Steve ... tell him to ... to cum in me...!\" I really sounded like a bitch in heat to myself, all whiny and desperate and excited. Just hearing myself, hearing my desperate need, excited me! Steve's look, excited, rapt yet somehow reproachful burnt into me, pained and excited, hurt and humiliated. His cock jerked in front of my face.\n\nJoe laughed as he fucked me. \"Hey Steve, Hayley wants me to cum in her cunt dude, I can't do that till you say it's okay.\"\n\n\"Tell him Steve... Please ... I want you to tell Joe...\" Somehow I reached out and clasped Steve's cock, clasped it in one hand, even stroked it jerkily as Joe's cock pounded into me. Fucking me. \"Tell Joe ... tell him Steve ... tell him he can cum in me.\"\n\nJoe slapped my butt as he fucked me. \"Steve, listen to your girlfriend dude, just tell me I can cum in your girlfriend's tight little Chinese cunt.\"\n\nSteve groaned. I felt his cock twitch in my fingers as I stroked him. One of his hands seized my ponytail and pulled my head up so that I was looking at him as I begged. \"Steve ... uuhhhh ... please Steve ... nnuughhh ... I want Joe ...oohhhh... I want Joe to cum ... uughhhh ... cum in me ... Cum hard in my cuntuughhhh...\" I did want that, I wanted it so much I was trying to push myself back onto Joe's cock.\n\n\"You really want that Hayley?\" His voice was a gasp. \"Do you want Joe to cum in you?\"\n\n\"Yes ... Yes ... I do ... I do ... can he Steve? ... please ... Please Steve.\" I was begging. I was begging my boyfriend for permission for Joe to cum in me. \n\n\"Fuck fuck fuck Joe ... okay ... okay ... you want it Haley? ... okay ... Joe can cum in you ... cum in her if you want to Joe.\" His voice was almost an angry snarl. \"you can cum in her slutty little cunt as hard as you like.\"\n\n\"\"Thanks dude ... you're the best ... the best buddy a guy like me could have...\" Joe laughed as he fucked me. \"There's not many guys would let a buddy fuck their girl for them her first time... but you sure you really want that dude? You're gonna get sloppy seconds if I do.\" There was a pause. \"Hey Hayley, you really want your boyfriend to get sloppy seconds?\"\n\nI thought about that for a second before realizing what Joe meant. That was so gross, how could he say that about me. I thought about it some more, what that meant. I almost had an orgasm on the spot! Oh fuck! It was too much! Way too much! My mind spun.\n\n\"Joe,\" I gasped, \"Joe... please ... I want it ... I want you to finish ... finish in my cunt... Please Joe... Please cum!\" I wanted it so much. Joe was really fucking me hard now! Beneath us the bed squeaked and groaned and creaked and banged against the wall. On the bed, much the same thing was happening!\n\n\"NGGGHHHHH... HHHUUUNNHHHH ... UUUGGGHHHHH ... HHHHUUGHHHHHH.\" \n\nKneeling on the bed before Joe, half kneeling over Steve, I moaned and groaned and sobbed and cried out as Joe slammed his cock into me hard, again and again, his cock driving deeply inwards, his body slapping up against the backs of my thighs, again and again. I knew he was going to finish in me soon. I knew and I was scared and I wanted to feel it all at the same time and I could feel his excitement, feel his need to finish in me. And there was nothing I could do. Nothing but kneel before him and wait helplessly as he took me. As he fucked me. As he used me. In those moments, then and there, I can safely say there was nothing else I wanted to do more than kneel before him and feel his cock driving into me.\n\n\"JESUS HALEY! FUCK FUCK FUUUUCK OOOHHHH FUUUUUUCK!\"\n\nHe plunged hard into me, his hands gripped my hips, holding me tight, pulling me back against him. My eyes locked to Steve's, I cried out as I felt Joe's cockshaft begin to throb and pulse inside me, as I felt that first spurting jet of his cum blast out deep inside me. My boyfriend looked into my eyes as a man came inside me for the first time.\n\nOnly it wasn't my boyfriend coming inside me.\n\n\"OOOOOHHHHH!\"\n\nI was wide open to Joe, his cock impaling me, pulsing and throbbing deep inside me as his semen blasted out hotly deep within me. I could feel it. I groaned in time with each explosive spurt inside my unprotected sex. Joe emptied himself inside me, flooding me with his sperm-laden semen. Spurt after spurt filling me to overflowing. It was a sensation that I loved from the very first eruption shooting out into me, feeling Joe's steely-hard pulsing throbbing male organ spurting his hot creamy seminal fluid deep inside my body. Steve watched me, his eyes fixed on mine, his face excited as I experienced Joe's culmination within me. Steve watched me until my arms turned to jelly and I slowly lowered my head to the sheets, closing my eyes, reaching down under my body, between my legs to the juncture of my sex where Joe's cock thickly penetrated me.\n\nMy fingertips touched him, touched myself, felt his cock throb as he emptied yet more cum inside me. I squeezed him with my sex, clasping him within my vaginal walls, enjoying his groans of pleasure as I did my inexperienced best to milk him. My fingertips slid over my exposed clitoris, drawing a long quavering sob of exquisite pleasure from me as my sex spasmed convulsively on Joe's cock. Now it was my turn to orgasm, to feel that golden pleasure washing through me once more. I closed my eyes and cried out.\n\n\"OOOOOOHHHHH ... OOOHHHHHH ... OOOHHHH!\"\n\nIn mid-orgasm, as I felt Joe's cock spurting his cum deep inside me, knowing I was completely unprotected, I had a sudden premonition that I was going to find myself pregnant. My sex spasmed convulsively on Joe's cock at the thought.\n\n\"HHHUUUNNGHHHHHHH!\" I heard myself groaning one last time as my sex milked him for the last few drops. My body shuddered and then the golden tide of pleasure that had overwhelmed me slowly ebbed away. I knelt there breathing hard, feeling Joe's cock softening slowly inside me, unable to move. God, he'd come in me! Without any protection! I could feel it now, trickling out of me, down the insides of my thighs. My brain spun in all directions, incoherent random thoughts as I knelt in the center of the bed.  \n\nI knelt in there feeling his cum trickling down the insides of my thighs, knowing I'd been fucked. I certainly felt like I'd been fucked. My sex was completely full of Joe's cum. I wasn't a virgin anymore. Only it hadn't been my boyfriend that had fucked me for the first time. It'd been Joe. Joe had been my first man, the first guy who'd fucked me, and he'd done it to me right there on the bed in front of my boyfriend. He'd cum in me while my boyfriend watched. My boyfriend was still watching me as I knelt there, gasping for breath, my body glowing in the aftermath of those orgasms Joe had brought me to how many times? Two? Three? \n\nJesus! I should have felt bad but I felt wonderful even as I thought of Steve. My boyfriend. Oh My God! Joe had fucked me in front of my boyfriend. I'd lost my virginity to Joe, not to Steve! All of a sudden, kneeling there with my sex full of Joe's cum, Joe's cock still inside me, Steve looking at me, the full enormity of what I'd done dawned on me. I felt dreadfully embarrassed, exposed and humiliated all at one and the same time. I'd just done something I'd never dreamed of doing even in my wildest little fantasies about making love. I wondered if Steve was still as excited at watching me being taken as he had been. I had to know. I had to. Breathing hard, I lifted my head from the sheets to look at Steve.\n\nWhat was Steve going to think of me? \n\nDid I care what Steve thought?\n\nThe first thing I saw was his cock, rock hard, rigidly erect. I guess that answered part of my question. When I looked up at his face, he was looking at me, his expression still one of excitement. There was no anger, he didn't look upset, he just looked excited. My sex did a little dance on Joe's cock as I took in Steve's expression, as I saw him looking at me. Yes, I did care what Steve thought despite having given myself to Joe.\n\nJoe abruptly withdrew from me. I heard my sex make a soft wet sound as his cock eased out of me, his cum immediately flooding thickly down my thighs. I moaned softly, moaned again, folding limply face down on the bed, feeling his cum continuing to flood out of me as I lay there. Joe collapsed onto the bed on one side of me. Steve was lying beside me on the other. I couldn't bring myself to open my eyes and look at him. What must he think of me? \n\n\"Open wide Hayley.\" Joe was rolling me onto my side, turning my head towards him, his body moving. Almost before I could realize what was happening, his hands guided his now soft cock to my lips, into my mouth. I knew without asking what he wanted. \n\nWhen a guy sticks his cock in your mouth it's for one thing. \n\nI sucked, tasting Joe's cum and myself on his cock. His cum tasted different to Steve's, it had a different flavor to it, a little less acrid. There was that taste of my sex there as well, sweet and thick with just a little spicy tang. I licked and I sucked, burying my head against Joe to avoid looking at Steve. Steve, who was lying behind me, his cock resting stiff and hard on my butt as I worked my mouth, sucking and licking Joe. \n\n\"God, Hayley's a great little fuck,\" Joe said conversationally, his hand stroking my hair away from my face \"She's got a nice tight little cunt too\". He chuckled. \"Well, she had a nice tight little cunt, she's wide open now.\" His hand stroked my head as he talked about me.\n\nI felt Steve's hand on the back of my thigh, sliding higher, rubbing Joe's cum across my skin, sliding across the entrance to my sex where Joe had just finished fucking me, where Joe's cum flowed from me, making me shiver. \"Yeah, isn't she,\" he said. \n\nHe didn't sound upset. He sounded excited. I half-closed my eyes as they talked about me, hot shame washing through me. How could I have let this happen, Steve was my boyfriend but I'd let Joe use me. I'd let Joe be the first man to fuck me. How could I have done that? And Steve, how could Steve have let this happen to me? How could he sound like he was enjoying this? He should be upset and angry. Shouldn't he? But I was enjoying this too, I was happily sucking on Joe's cock, feeling him swell in my mouth. I continued to suck gently on Joe's cock, making my mind empty now of everything except what I was doing. I was content to lie there limply glowing, their words mere words washing through me.\n\n\"Hey dude, why don't you fuck her now?\" Joe's question to Steve interrupted that fading glow. Jesus, now Joe wanted Steve to fuck me. I thought about saying no, but Steve was my boyfriend. It seemed only fair to let him fuck me now that Joe had finished using me. And it wasn't as if I could move. I was jelly. Let him do what he liked to me.\n\n\"You're finished?\" Steve said. \n\n\"For now dude, go on, you fuck her, she's your girlfriend.\"\n\nThey were talking about me. Neither of them bothered to ask me what I thought. Not that I was actually thinking much. I was still sucking on Joe's cock, which was slowly getting harder in my mouth. Nobody had told me to stop so I didn't. Steve's hand slid under me, lifted my hips from the bed, guided me up onto my hands and knees. I felt him move, his knees between my legs, roughly nudging my legs wider apart as I knelt before him, my mouth still servicing Joe's cock. Joe's cock filled my mouth, definitely much harder now.\n\n\"Go on Steve, stick your cock into her dude, don't be shy.\"\n\n\"Ooohhhh.\" I felt Steve's cock enter me, an easy slide as he mounted me from behind, pushing into me thickly, but not as thick as Joe, sliding high in my wetly receptive sex. Joe had been right. There was none of the effort Joe had needed to penetrate me when he first entered me. Steve slid into me easily. I was wide open. I was all wet and slushy too, I heard the wet sound my sex made as Steve's cock filled me. I moaned around Joe's cock as Steve thrust himself completely into me, his hands holding my hips tightly for a moment as he made sure he was as far into me as he could go. I closed my eyes as one of Steve's hands moved under me to cup and hold my breast, the other pressing against my sex where he entered me. \n\nHe moved slowly, his cock sliding noisily in and out of me, the wet sounds of our fucking filling the room. I slid one hand beneath my body to join Steve's, down, all the way down to where Steve entered me, my fingertips joining Steve's and feeling his cock as it slid easily in and out of my wide-open sex, my thumb brushing my clitoris lightly with each of his movements. I could feel Joe's cum seeping from me as Steve's cock pistoned in and out, oozing out thickly over my fingers as I touched him, as I touched myself. Steve was breathing harder, fucking me harder. My boyfriend was fucking me at last! \n\nBut he wasn't the first. He hadn't been the first. That made me a little sad despite the pleasure I was feeling as he had me! But only a little! His cock wasn't as big as Joe's but it felt good all the same. I was enjoying it, enjoying the slushy wet sounds my sex made, enjoying the sliding of his shaft across my fingertips as he moved in and out of me. From the noises he was making, the heavy breathing, the satisfied sounds, Steve was enjoying me. Joe's cock still filled my mouth, one of his hands holding my head, giving me no choice but to continue servicing him with my mouth as Steve had me.\n\nFinally, Steve spoke. He didn't speak to me. I wanted him to speak to me.\n\n\"Hey Joe.\"\n\n\"Yeah?\"\n\n\"You hard enough to fuck her again?\"\n\nHuh? What? I felt confused. Steve was asking Joe if he was hard enough to fuck me again? What for? Why? I was Steve's. Wasn't I? Steve hadn't even finished with me yet.\n\n\"Yeah, I'm sure of it. Can't you see.\" They both laughed. I felt rather than heard his chuckle. Joe was hard alright. He was filling my mouth. Steve was fucking me harder now, a lot harder. I liked it but I wanted to be on my back with Steve over me, between my legs, looking down at me. This was so impersonal, lying face down with Steve behind me pumping his cock into me. I couldn't see him. I wanted to see him.\n\n\"Okay.\"\n\nJoe's cock withdrew from my mouth and now I could moan noisily as Steve began to ride me hard, my sex sucking and squelching as he pumped his cock into me. \n\n\"Steve...\" I gasped, \"Steve...\"\n\n\"What is it Hayley?\" It was Joe that was asking. I wanted Steve to ask. I wanted Steve to care about what I wanted. Instead, Steve fucked me harder.\n\n\"Ugghhh ... I want ... hhuuhhh ... on my back ... nnugghh!\"\n\n\"Steve...\" Joe's voice was relaxed, relaxed and carefree. \"Steve, fuck it, pay attention here dude!\"\n\n\"Nnnnughhhhh.\" Jesus, I was just about doing the splits here. It was a good thing I was like, totally flexible from Tae Kwon Do.\n\n\"What Joe?\"\n\n\"I think Hayley wants to lie on her back and have you fuck her that way. Right Hayley?\"\n\n\"Huunngghhh ... Yeahuuughhh ... I donnughhhh!\" Christ, he was fucking me so hard, jolting my whole body, slamming his cock into me again and again and again.\n\n\"Steve, roll her onto her back dude.\"\n\nSteve abruptly stopped and withdrew from me, his weight lifting from me. His hands urged me onto my back, moving back down onto me as I spread my legs for him to move down between. His face looked down on mine, his body came down on mine, his cock found my entrance.\n\n\"Hhuuugggnnhhhh.\" He was inside me, his weight on me, my knees drawn back to open myself for him. I gasped happily as he began to move. At last, my boyfriend was making love me the way I'd wanted him to. My arms went round his neck, my eyes looked into his. I gave myself up to him. Steve was mine! All mine! I loved feeling his excitement, his desire for me, his cock fucking me and I did my best to encourage him as my excitement rose anew. I wanted him to tell me that he loved me, that I was his.\n\n\"You like that huh Hayley?\" He was looking down at me eagerly. \"You like my cock fucking your little cunt?\"\n\nWell, I guessed that was as close as I was going to get. Maybe some encouragement? \"Yeah ... I love it Steve ... I love it... I love you Steve... I love you\" Hint hint!\n\nHe kissed me instead. His mouth came down on mine and he kissed me hard, his tongue deep in my mouth. He didn't seem to care that I'd been busy sucking on Joe's cock moments before, that my mouth tasted of my sex and of Joe. He kissed me hard as I opened my mouth wide to him, welcoming his tongue as I welcomed his cock. His mouth lifted from me, he was breathing hard. So was I.\n\n\"Fuck Hayley ... Ohh fuck ... Fuck fuck Fuck FUUCK TAKE IT TAKE IT FUCK .. FUCK YOU ... FUCK!\" So much for romance and words of love! What I got was pure lust as he came! His cock drove into me hard, his body tensing, thrusting, his cock throbbing inside me. I lay beneath him, eyes half closed, mouth wide open, gasping as he came inside me. I once more felt that hot spurting deep inside me. It felt good. \n\nBut it didn't felt as good as Joe fucking me and cumming in me had. Somehow, I felt a little disappointed. After he'd finished, Steve rolled off me almost immediately to lie on his back, breathing hard. Me, I just lay there feeling half-fucked and wanting more. Steve had got me all excited and then he'd come and I hadn't. I glanced at Joe, lying beside me, then glanced down. Joe's cock was as hard as it had been when he'd removed it from my mouth. My heart skipped a beat.\n\nNO! I was so NOT going to initiate anything with Joe myself. I had to live with myself. I felt ashamed enough now of what I'd done. But I kept looking at Joe's cock. The demands of my sex urged me on, urged me to take hold of Joe's cock and guide it to where my body needed it. Just the thought was making me twitch with excitement, making my breath come faster. I resisted the temptation. Despite what Joe had done to me, I was Steve's girlfriend. I was. I almost sobbed then. But I still wanted Joe's cock.\n\n\"Hayley.\" Joe's voice was soft and smooth and oh so tempting.\n\n\"Yeah.\" My answer was a whisper.\n\n\"Maybe you should suck on Steve until he's hard again.\"\n\nI looked at him dubiously. Altruism just wasn't Joe's style. Was it? What was he really planning? Somehow, I was sure that it involved fucking me. Of course I wanted Steve hard again. I wanted my boyfriend to fuck me again. Very much! I glanced at Joe, at Joe's cock, then at Steve, who smiled at me. My heart did a little dance right then and there. I loved Steve's smile. Especially when it was directed at me! Without further thought, I rolled over and eagerly took Steve's flaccid cock in my hand, lowering my mouth to take him in. He tasted of cum and me but I was getting used to that taste combo now. I was starting to like it! Flaccid as he was, I could take his entire cock into my mouth so I did, swirling my tongue on him, licking and sucking him clean and then working to get him hard. I could tell he was enjoying what I was doing, one of his hands was stroking my hair, the other was stroking my back. \n\nBehind me, Joe was running a hand over the smooth curves of my tautly muscled butt. I liked that too. Tae Kwon Do and swimming made for muscles, not fat. I may have been small and slender but I was in great shape. I liked it when he ran his fingers lightly over my sex as well. That felt good, I felt myself all wet again and Steve was starting to get slightly harder in my mouth.\n\n\"Hayley, get up on your knees so Steve can play with your tits.\" I didn't even think. I just did as Joe told me. I was kneeling now, with my head above Steve's stomach and my knees up beside his shoulder. One of Steve's hands moved under me, playing with one of my breasts. I liked that too.\n\n\"You should look at her pussy as well dude, she's your girlfriend, no reason for me to have all the fun here.\" Joe took one of my legs and lifted it, moved it over Steve's head, forcing me to shuffle around so I was kneeling over Steve now, my knees either side of his head. I had to lean forward to make sure his cock stayed in my mouth. My heart leapt wildly. My sex was totally exposed to Steve's gaze, right in front of his face. I could feel Steve's breath on my inner thighs. God, this was embarrassing. I mean, they'd both cum in me, I could feel it seeping out of me onto my inner thighs. I felt like a sticky mess there. My face burned. But I didn't move, I stayed where Joe's hands had placed me.",
        "\"Pretty isn't she.\" Joe sounded pleased with himself.\n\n\"Oh yeah.\" So did Steve. He was starting to get a little harder in my mouth. Both his hands were on my breasts, stroking them, stroking my nipples, gentle caresses that I loved. Just like I loved Steve.\n\n\"Watch this dude.\" What was Joe doing? His hands were on my thighs, his thumbs on my sex, pulling at my labial lips, spreading them wide. I felt a sudden rush of cum from inside me as he opened me. \"Looks nice huh?\"\n\nOh fuck, they were both looking at my sex as I knelt over Steve's face. This was beyond embarrassing. What was Joe doing? I could feel him moving, his knees pushing mine wider apart. He wasn't? Oh fuck, he was...\n\n\"You ready for it Hayley?\" He didn't wait for me to answer. \n\n\"UUUGGGHHHHHH.\" My eyes widened, my arms collapsed and just like that I was half lying on Steve, the tip of my nose on his stomach as Joe's cock abruptly filled me. His fingers grasped my hips and pulled me back hard as he thrust forward. My arms buckled, I dipped forward, losing control for a moment. The motion forced my head to bob forward. Steve's saliva covered shaft flopped itself sloppily across my face from chin to brow, leaving a trail of sticky wetness across half of my face. My face ended up resting on his cock. My mouth opened wide and I gave a heavy, heady moan of pure excitement as Joe's fingers teased the inside of my thighs while his cock transfixed me.\n\n\"NNUUGHHHHHH!\" Joe moved fast in me. Fast and hard, stretching my vaginal walls all over again as he filled me wetly. My face bounced on Steve's cock,\n\n\"Jesus Steve, your girlfriend's sure got a wet little cunt.\"\n\n\"HHHHNNGGHHH.\" I groaned, stuffed full. Joe's cock was buried in me, all I could do was kneel there and take it as he had me, feeling my sex doing a spastic little dance around his length as my body adjusted to him inside me. Again! Looking down under myself, I could see my sex above Steve's face, Joe's cock in me, his balls dangling, almost brushing Steve. And all the time Steve was watching. Looking up at me! Looking at my sex just a few inches from his eyes! Looking at Joe's cock entering me mere inches above his face.\n\n\"Ohhhhhh Jesus.\" My mind was in turmoil, a confused mess yet again. What was I doing? How could I let this happen? How could I want this to happen? Joe eased his cock back, back more, until only the swollen head was inside me. He thrust again, a long slow wet-sounding slide that had me juddering from the start, knowing that I wanted it and that Steve was watching at the same time. My stomach tightened, knotted, coiled. \n\n\"HHHUUUGHHHHH.\" Joe pushed himself hard into me, his hands pulling me back at the same time. My eyes widened, my mouth opened wide, I did my best to push myself back onto him. I knew I wanted this. I wanted to be fucked. I wanted Joe's cock. I also wanted Steve to see Joe's cock fucking me. I wanted to punish Steve for letting Joe fuck me first by letting Joe fuck me again in front of him. It wasn't a conscious decision, it was just something that solidified in my mind as Joe's cock moved thickly inside me.\n\nAlready I was more excited than when Steve had fucked me. Below my face, Steve's cock began to jerk, to swell, to harden again. My coordination slowly returning, I took him in my hand as Joe eased himself back, took his cock in my mouth as Joe began to ease in to me. After a perfunctory caress of his glans with my mouth and lips and tongue, I got started on servicing Steve to the best of my ability as Joe commenced to fuck me, trying to coordinate the movements of my head with Joe's thrusts pushing me forward. Just because I wanted to punish my boyfriend didn't meant I wasn't going to get him excited. I wanted Steve to fuck me again. Only, I wanted Steve to fuck me after Joe had finished fucking me again.\n\nOn that first downward bob of my head, I let my mouth slide down his shaft, taking his not yet hard cock to the very hilt in my mouth for the first time, my lips meeting and touching my thumb and finger at the base where they held him in place. At the same time, Joe's cock buried itself in me, giving me a little further forward impetus onto Steve's cock, forcing it further into my mouth. I did my best for Steve despite Joe's cock driving me half-crazy as he fucked me. If anything, the distraction of trying to give Steve a good blowjob accentuated the pleasure that Joe was giving to me as he fucked me. \n\nBoth of Steve's hands were somehow holding my head now, controlling my head fluidly as I did my best to service him, bobbing my head up and down in slow, steady movements while one of my hands cupped its fingers around the base of his shaft. It was uncomfortable and for a moment I was worried I'd cough or choke, but Steve's grip on my hair was enough to pull me back up before that happened. Most times. My hand gripped his saliva-slickened shaft, my tongue around across his cockhead, my mouth plunged down on his shaft, the room echoed with the sounds of my uncoordinated sucking and choked-off moans and sobs of sheer pleasure, along with the pleased half-grunts of Joe as he fucked me enthusiastically.\n\nI moaned my pleasure around Steve's cock, my lips clamping down on his shaft, my head slowly bobbing up and down to allow his hardened cockhead to move against my tongue and within my mouth. The stimulation provided by Joe's cock sliding in and out of my sex encouraged me to move with growing passion. Before too long, I found myself making more rapid movements of my head and of my mouth than I would have without that encouragement. The hand clasping his shaft began to work in time with my mouth. Before long I was repetitively pressing my lips down against the edge of my encircling grasp, making sure that no part of Steve's cock would go unserved.\n\nAt the same time, Steve's hands were running over my body as I knelt over him, toying with my breasts, squeezing and tugging at my nipples, guiding and controlling my head, running over my waist, my hips, even my butt and my thighs. My sex moved over Steve's face, Joe's cock slowly thrusting in and out of me, fucking me with a remorseless steadiness that held me helplessly enthralled, a willing partner to Steve's humiliation. A willing partner to my own humiliation! I still couldn't understand Steve's acquiescent participation in what Joe was doing to me but then and there, in those moments, I didn't care. I just wanted to be fucked.\n\nSomething else was building inside of me as Joe fucked me right over Steve's face. It was a growing need and a desire that went back to when Joe had touched me on the dance floor, back to when Joe had squeezed my nipples so painfully hard. It was something that I'd never felt before, something that I hitherto had no idea of. I wanted Joe to do that to me again, to take my breasts in his hands as he fucked me and squeeze and tug at my nipples the way he had then, while his cock pounded into me, while Steve watched Joe's cock driving into me sex. Just the thought added to my arousal. I lifted my mouth from Steve's cock, lifted myself to look over my shoulder at Joe as his cock drove into me, my body juddering with each thrust.\n\nEven as I spoke them, my cheeks burned, I felt ashamed of the words that came out of my mouth. Just as ashamed as I was that Steve could see Joe's cock sliding in and out of my sex. But there was no way I could resist saying them. \"Joe ... Joe ... .\"\n\n\"What Hayley?\"\n\nIt was so hard to say. I didn't know how to phrase it. Not without totally humiliating myself. But I wanted to say it. I wanted Joe to do that to me. In the end I was so desperate that I just blurted it out.\n\n\"Joe ... please ... squeeze my nipples and fuck me hard ... squeeze hard...\"\n\nIt was a plea from the heart. I was begging. I was begging Joe. My voice was a frantic gasp, a soft sweet yearning from a desperate young eighteen year old girl who knew only that she wanted something very badly and was willing to humiliate herself in order to gain it. Joe chuckled, a chuckle that I felt through my body. But Joe didn't torment me or tease me for responding to the wishes of my own body. He met my plea in a very direct fashion. His hands slid from my hips forward to my waist, then under me to my stomach in a gentle caress. Moving higher, I felt him leaning forward a little, his hands moving up to cup my breasts.\n\nHe found my nipples, toyed with them, tugged at them. I knew he was enjoying them. I was enjoying him enjoying them. He gripped them gently. I moaned happily, knowing what was coming, wanting it, yet fearful at the same time. His squeezed hard, squeezed painfully hard, tugging at them so that I jerked and squealed. Somehow I managed to get Steve's cock back into my mouth as Joe's cock rammed hard into me. Again! Again! Again! I came hard, my body shuddering over Steve as the hot waves of pleasure washed through me, filling me, overwhelming me. In the midst of my orgasm, I wanted Joe to satisfy himself in me too and between moans choked out around Steve's cock I managed to tell him so. \n\n\"Inside me ... finish inside me ... Joe ... please Joe ...\"\n\n\"Here it comes ... here it comes.\" Joe grunted as he rammed himself into me hard, forcing himself hard inside me, his body juddering against my butt and the backs of my thighs. Deep inside me I could feel the tip of his cock pushing against something while the walls of my sex squeezed his cock. Even in the midst of my own orgasm, I could feel his shaft throbbing and pulsing, feel his cum spurting deep inside, holding me hard against him as his hot semen flooded into me. His cock throbbed as spurt after spurt pumping into me while Joe groaned his pleasure. Kneeling before him, kneeling over Steve, Steve's cock still in my mouth, I shook wildly in a last wave of golden pleasure.\n\nIn the excitement of feeling Joe cum, I lost my handclasp on Steve's shaft. My plunging head forced my lips down on him. Steve's full seven inches slid deep into my mouth, touching the back of my mouth, the head brushing my throat, again and again and again. In my excitement, I was deep throating his cock without any encouragement or guidance from him and with very little discomfort to me. Steve gave a loud grunt of pleasure, then another. I felt his hands on me then, one pushing my head down on him, the other finding my sex just above his face and pressing firmly on my flesh where I encircled Joe's pulsing cockshaft, simultaneously rubbing across my engorged and swollen clitoris.\n\nI cried out around his cock, a wordless squeal of sheer unadulterated excitement in response to the unexpected surge of glorious pleasure his touch brought to me. It was a noise I had never imagined myself making, a sound of uncontrolled and uncontrollable pleasure and excitement. Joe's cock buried in my sex, pulsating and throbbing, his semen exploding into me, Steve's fingers against my sex, pressing wetly against me, feeling my delicate flesh. The combination of sensations made me buckle and tremble. All I could do was keep this cock into my mouth, sucking on it and moaning around it as a second orgasm overwhelmed me almost immediately after the first.\n\nTaken by complete surprise, I shook, I trembled, I cried out. In that moment, my world was reduced to Joe's cock cumming inside my sex, Steve's cock in my mouth and their hands on my body. I came again with such an intensity of desire and excitement that for an eternity I had no idea where I was or what I was doing. Kneeling over Steve, my head bobbing forward uncontrollably on his cock, my body lost all coordination, my mouth plunging down on him deeply, I moaned nosily around his member and turned to complete mindless jelly.\n\nWhen I had recovered my senses, I was collapsed forward onto Steve. His cock was no longer in my mouth but instead lay limp beneath my chin, flaccid, a thick trail of cum leaking from the tip at the head, joined stickily to my lips. As I gazed down at it fuzzily I realized that my mouth was full. In my post-orgasmic bliss I could remember nothing more than that orgasm overwhelming me. In those heated moments Steve must have cum in my mouth, giving me an overflowing mouthful of his semen that I hadn't yet swallowed. In the golden afterglow of my climax, I eagerly swallowed that mouthful of Steve's semen.\n\nSteve gave my head a gentle caress, his hand guided my head so that I found myself pressing a kiss to his now flaccid but still swollen shaft; carefully licking it clean of his cum as I lay on him, my sex resting wetly against Steve's chin. After a moment of struggle with limbs too weak to move, I managed to roll myself up of Steve and sit between Steve and Joe, looking down at them, my hair a mess, my cheeks flushed and red, Steve's cum coating my lips, trickling down my chin, smeared on my cheeks and in my hair. Joe's cum filled me inside, coating across and around the exterior of my sex, slicking my thighs.\n\nI felt like a pile-driver had been hammering into me between my legs, the aching there left me wondering if I'd be able to walk. I felt like I did after an intensive bout of sparring at Tae Kwon Do. Pounded into jelly was probably the best description. I thought I'd been fucked hard that first time but now I knew better, this that was what being fucked hard was really like. But I felt good. Better than good, I glowed. I needed a rest though. A shower too, but first, a rest. With a sigh, I collapsed onto the bed between them. For the first time in my life, I could honestly say that I felt fucked. Completely fucked.\n\nI wanted Steve to hold me in his arms but he didn't, he just lay there looking at the ceiling, breathing slowly, his eyes glazed. I closed my eyes myself, exhausted and glowing. I knew I should be ashamed at what I'd let Joe do to me but actually, to my surprise, I felt rather exhilarated. I thought about that some more and realized I'd really enjoyed everything that had happened to me. I wasn't feeling ashamed either, although I had had that feeling at times as they fucked me. That was strange, but whatever. Maybe I was just too tired. At last Steve stirred and turned towards me. His mouth opened. I turned my head to look at him, smiling happily, expecting him to say something to me. He didn't. His eyes weren't even on me, they were on Joe.\n\n\"Hey Joe, was she as good as your other girls?\"\n\nJoe turned his head and smiled at me. \"Better.\"\n\nI smiled back at him happily. \"I was?\"\n\n\"Oh fuck yeah.\" One of his hands moved to hold one of mine.\n\n\"Hey Joe, what's happens if she gets pregnant?\" I closed my eyes. Jesus Steve, talk about me like I'm not here, why don't you? Joe stirred, propped himself up on one elbow, looked down at me, smiling. I smiled back at him. Thank you Joe! His hand stroked my stomach in slow circles, massaging me before unhurriedly sliding downwards to cup my sex and lightly squeeze me. I moaned softly, feeling their cum seeping out of me around his fingers. So much of it! There was so much cum inside me! And this was the worst time for me too. Oh Jesus! I knew it! \n\n\"Fuck Steve, didn't they teach you that stuff at school? If Hayley gets pregnant she's gonna have a baby.\" I almost giggled, except I would have felt bad laughing at Steve in front of Joe and then I was also worried that I might really get pregnant. Oh God! Why had I been so crazy! I should have insisted. When Joe ripped that condom off, I should have said no. Why hadn't I? I reached down between my legs, touching myself, shivering as I felt their cum. So much of it! So much cum inside me! How could Joe have cum twice in me just like that? Steve too for that matter. I could taste him in my mouth.\n\nJoe grinned at Steve. \"Besides, you heard Hayley. She told me not to use a rubber with her. She told me to fucking cum in her cunt dude, so I did, okay?\"\n\n\"Yeah, I guess, okay.\" \n\nSteve sounded a little disgruntled. Well, fuck! How about me? He wasn't the one who'd been fucked by two guys and who might find herself pregnant. Jesus, I still had to finish High School. I sure as hell didn't want to get pregnant now. Still, I could always go to the pharmacy in the morning. I wasn't, like, totally dumb. I could get the Morning After Pill. There was still a little bit of risk, but not much. Whatever, I badly needed a shower. Crawling of the bed, I left them lying there as I limped into the bathroom, showered myself thorougly and crawled back to the bed, totally wiped, my mind a blank.\n\nSteve and Joe were both asleep. I snuggled in between them on the bed and closed my eyes. It was late, I'd been worked hard, I was exhausted. Before I knew it I was asleep as well. I didn't know that until I was woken up by Steve gently shaking my shoulder. Mmmmm, did he want me again? I liked that idea. Sleepy as I was, the thought woke me up quickly, quickening my heart, bringing a smile to my lips. I turned towards him, my hand searching for his cock, finding it, disappointed by his flaccidity. Well, that could be rectified soon enough. I started to stroke him, smiling up at him happily. My guy!\n\n\"Hayley, it's time to go home.\" Well, that wasn't what I was expecting.\n\n\"Huh?\" Then I remembered. I'd never got around to telling Steve that we were staying the night at Claire's. \"Uhh, Steve, don't worry, I told my parents I was sleeping over here. We can stay the night.\"\n\n\"Huh?\" It was Steve's turn to sound puzzled. God, why wasn't he getting hard? I was already wet with anticipation. Slightly sore as well! Actually, a bit more than slightly sore but hey, I could deal with that. I was definitely wet. I wanted him. In me! On the other side of me, Joe stirred. My pulse quickened at the feel of his cock pressing against my butt. Hard. Ready. Ready to fuck me. Unlike Steve who still wasn't responding to my hand. I looked at Steve for a long moment, then slipped one arm around him, slid one leg up over his and kissed him, gently at first and then harder, my tongue sliding into his mouth. Steve kissed me back after a long pause, then separated his mouth from mine.\n\n\"Come on Hayley, I gotta get you home.\"\n\nI shook my head. He wasn't getting it at all. We were staying the night at Claire's. I looked blurrily at the clock on the wall. Four in the morning! There was no way I was walking through the front door at home at four a.m. I'd be grounded for life! Besides, my parents had told me I could sleepover at Claire's and I was.\n\n\"Steve.\" I placed one finger across his lips. \"Just shutup and fuck me again, okay.\" He wasn't catching on very quickly. Neither was his cock. It was still limp. Maybe he needed a blowjob to get him hard? I felt Joe moving behind me as I continued to stroke Steve with my fingers, willing him to harden. I'd give him a blowjob if I needed to but my jaw was a bit sore. I'd prefer my fingers to do the work. I moved closer to Steve, sliding one of my legs up over him, my breasts brushing up against his chest, my lips brushing his, teasing him. \"Steve, just relax, we're staying all night and I want you to fuck me again, okay?\" He wasn't getting hard though. It looked like a blowjob was definitely on the cards.\n\n\"Uhh, Hayley, I gotta get back home, I didn't tell them I was staying anywhere.\"\n\nI felt Joe stirring behind me, moving. His hand brushed my butt, slid across my inner thigh. God, just that one touch and I felt myself already getting really wet. I gasped, my eyes flew wide open as his fingers moved on me again, brushed up and down my slit, tracing my lips. I shivered. I was even wetter when Joe pressed up behind me, his cock hard against my butt as he peered over my shoulder, his hand moving up and around to cup one of my breasts. \n\n\"I guess you might as well give Steve a goodnight kiss then Hayley, he's gotta run along home and it doesn't look like he's gonna get hard enough to fuck you first.\" \n\nI knew Joe was making fun of Steve and I didn't like that. \"Stop it Joe, don't give Steve a hard time.\"",
        "Joe nuzzled the back of my neck. \"If you say so Hayley. How about I give you a hard time instead.\" His hand was teasing my nipple, already swollen and hard. His cock was rubbing against my butt, big and hard and showing me what he wanted. Steve was still soft in my hand.\n\n\"I have to go Hayley,\" he said, doing the puppy dog look at me just as Joe's cock eased down and then slid across my inner thigh where I lay with one leg over Steve's hip. \"I can drop you off on the way.\" God, he was being so persistent. What part of \"I'm staying the night\" didn't he understand? It wasn't that hard. But then I understood. He really did have to go home and he didn't want to leave me for the rest of the night with Joe. He knew Joe would fuck me if he did. I was surprised. After everything he and Joe and done to me, he didn't want Joe fucking me again? I mean, how many times had Joe already fucked me? I almost giggled. \n\nExcept that Steve was my boyfriend and I wouldn't do that to him. I wouldn't laugh at him. I blinked. I mean, I'd knelt right over him with my sex in front of his face while Joe fucked me and then came inside me. I'd let my boyfriend's best friend humiliate my boyfriend by fucking me again and again in front of him but I wouldn't laugh at him. How weird was that? Then I did giggle. Steve looked upset which made me feel bad which made me giggle even harder. \n\nJoe laughed. \"Hey Steve, I think Hayley's gonna have to stay the rest of the night, Claire knows she's staying here, her parents won't be expecting her home and anyway, I want to fuck her again even if you can't.\" Joe chuckled. \"You want to stay and watch or you want to run along home and leave her to me?\"\n\nSteve's expression hardened. That startled me. After all this, Steve was being possessive? It was a bit late for that. \"Joe, Hayley's my girlfriend, I'm taking her with me, okay, she can sleep in the spare room at my place.\"\n\nJoe's voice was a chuckle over my shoulder. \"Forget it Steve, Hayley's staying right here for tonight. Her Dad doesn't like it when she goes somewhere without telling him. And she told him Claires.\" He nuzzled the back of my neck. \"Right Hayley?\"\n\n\"Yeah, I told my Dad I'd be at Claire's.\" I knew I wasn't going anywhere. My voice sounded slightly higher than normal, perhaps because I was getting upset with Steve. More likely it was the result of the tip of Joe's cock nudging my entrance gently, nudging inwards between my labial lips as they parted with slippery ease. \n\n\"You want it now Hayley.\" Joe's voice was a low growl that vibrated through my body as his hand lightly squeezed my nipple. I could feel his cock pressing against me where I was parting wetly for him. I didn't answer. My eyes were locked to Steve's as my hand stroked his cock. Surely he was going to get hard soon? \n\nBut he didn't.\n\nAnd Joe's cockhead was nudging my sex and I could feel myself opening to him. I wanted him to fuck me again. I really wanted Joe, but Steve was my boyfriend. God, it was so hard to think and Joe's cock was so hard, nudging up against me. Steve was still soft in my hand but I wanted him too. I wanted Steve to fuck me. It was just too hard to think.\n\n\"Never mind, I'll tell Steve what I want from you, okay Hayley?\"\n\nI shivered. I had a good idea what Joe wanted from me. \"Okay.\" I was looking at Steve when I said that, my face almost touching his. I didn't want to hurt Steve. I didn't. But Joe's cock was pushing up against my entrance, my heart was pounding furiously, my sex was ready to be fucked again. Wet and ready and wanting. And Steve was still soft in my hand. \n\n\"Oooohhh!\" I gasped, my eyes widening, loosing my focus as the head of Joe's cock pushed inside my sex. My body jerked, my breath huffed out into Steve's face. My hand left his cock to touch my sex, to feel Joe entering me. When I regained the ability to focus my eyesight and looked into Steve's face again, he had that weirdly humiliated and excited look there again. It was like he was enjoying this. I was. \n\n\"You don't mind watching me fuck her again first before you go do you Steve?\" \n\nWhat about me? Did I mind? Did I mind Joe fucking me while Steve watched? \"Aaahhhh.\" I gasped again as I felt the head of Joe's cock push deeper before pausing half way into me. He'd gone into me so easily this time. Under my fingertips it felt big, stretching me. I felt myself stretching around his girth. But this time that stretching felt good. Better than good. It felt wonderful. I whimpered and tried to push myself back onto Joe, tried to work more of him into me. \n\nI guess I didn't mind at all. I wondered if Steve minded?\n\n\"You don't mind Steve watching me fuck you do you Hayley?\"\n\nHuh? What? \"No, no, I don't mind, that's okay, Steve can watch,\" I gasped. \"Just fuck me Joe, okay!\" Jesus, what was I saying? Would Steve ever forgive me? But I wanted to be fucked. I didn't mind if Steve watched either, I didn't mind at all.\n\n\"You okay with that Steve?\" Joe was coming on tough again.\n\n\"Huh? ... what? ... yeah ... okay Joe.\" Steve excited again. Fuck! What kind of a boyfriend did I have? I mean, he didn't even try to say \"No.\" I mean, it wouldn't have been much use, I would have stayed where I was anyway, but he should have tried. Shouldn't he? But he was also looking raptly at me with those big puppy-dog eyes of his that I loved so much. I didn't think about that for more than a second or two though because Joe's cock was slowly sliding further up into me, making my toes curl. I clutched at Steve to keep from toppling forward, found my lips pressed to his, my mouth opening instinctively.\n\nSteve kissed me.\n\nSteve kissed me passionately as Joe's cock pushed deeper and deeper into me from behind, Joe's hand on my hip holding me, controlling me as his cock filled me. My breath huffed into Steve's mouth with each little movement of Joe's cock in me. My moans filled his mouth, my eyes looked into his as I was penetrated. I felt Steve's cock jerk against me. Now! Now he was getting hard! Why not earlier when I wanted him? Before Joe began to take me? Why Steve? But I said nothing as Steve continued to kiss me.\n\n\"Okay Joe what?\" Joe demanded.\n\n\"Okay Joe you can fuck Hayley again first.\" Steve sounded excited now, I could feel his cock twitching against my belly. I couldn't resist clasping it in my hand again. Clasping it and slowly stroking it.\n\n\"Yeah, and she can stay the rest of the night so I can fuck her whenever I want to, right Steve?\"\n\n\"Hayley can stay the rest of the night Joe,\" Steve was mumbling, almost stammering. I could feel him shaking against me, but his cock was still rock hard where I held him.\n\n\"You want to fuck her when I'm done? You better ask politely Steve? I might just let you.\"\n\nWhat? Jesus, I was Steve's girlfriend, not Joe's, even though it was Joe that was fucking me right now. That didn't mean Joe owned me. I opened my mouth.\n\n\"HUUUUGGGNNNGGHHHH.\" My train of thought and the words I was about to say were abruptly interrupted by Joe's cock suddenly plunging into me to his balls, completing his penetration of my sex and filling me. I almost collapsed forward onto Steve as my sex absorbed Joe's shaft. My mind was screaming \"fuuckitsbig ... fuckitsbig ... fuckitsbig\" while my mouth was going \"Uughh ... nnugghhh ... hhuuh ... hhhuuhh!\" Meanwhile, my sex was stretched to its limits and busy doing a spastic little dance around Joe's cockshaft.\n\n\"Joe, please?\" Jesus, Steve was whimpering like a puppy. I was too, but for a rather different reason.\n\n\"Yeah, please what?\"\n\nSteve was looking at me, his eyes wide, breathing fast. I was panting for breath, Joe's cock huge in me. My hand wasn't stroking Steve's cock anymore, I think I was incapable of doing anything except lying on my side there for Joe to use. My hand still held Steve's cock though. He was very hard.\n\n\"Nnnuughhh.\" I wasn't making much in the way of an intelligent contribution to the little debate between Joe and Steve either.\n\n\"Please what?\" Joe demanded again.\n\n\"Please Joe, can I fuck Hayley after you?\" He sounded like he was begging. What was I, some kind of sex toy for them to play with? Joe's cock moved inside me. I moaned, then gasped as he pushed into me again. I guess I was. I kind of liked it.\n\nJoe chuckled, his breath hot against my head. \"Whaddaya say Hayley, can Steve fuck you?\"\n\n\"Huuuhhh,\" I gasped, \"yes ... yes ... okay ... Whatever you want Joe ... Steve can fuck me.\" But I wanted Joe to finish fucking me first. I didn't get to say that though. Joe started moving inside me, a slow slide in and out from behind that had me moaning softly with each movement inside my sex. My head slowly bowed forward, closer and closer to Steve until our faces brushed each other again. Steve kissed me again. \n\n\"You like that don't you Hayley?\" Joe's voice was loud as my mouth lifted from Steve's.\n\n\"Yes ... yes,\" I moaned. \"I like it ... I like it.\"\n\nI knew my words must be hurting Steve but then and there, I wanted Joe to keep fucking me more than I wanted not to hurt Steve. Besides, Steve had told Joe it was okay for him to fuck me and part of me wanted to hurt Steve for saying that. \n\n\"Okay Steve, I guess she's your girlfriend, you fuck her now then.\"\n\nI moaned with disappointment as Joe withdrew from me, toppling onto my back. Steve didn't even give me a chance to catch my breath though, he was over me almost before I finished lying back, searching for my sex with his cock. The head of his shaft found my entrance as I drew my legs back for him, slipping easily inside my sex where Joe's cock had left me wide open. \n\n\"Oooohhhhhh!\" I moaned happily, clutching at his back as he thrust hard into me, driving me up the bed and beginning to give me what I had wanted since he awoke me. His cock! Hard! His body hard and urgent on mine, his mouth hard and demanding on my mouth as his hands sought for mine and pinned them to the bed above my head. Yes! This was what I wanted. To be taken by Steve urgently, harshly. Taken and fucked by his cock. I moaned again, happily, as Steve pounded his cock into my sex, my legs spread wide, my hips lifting to meet his thrusts.\n\n\"I love you Steve ... I love you...\" I was moaning in between those demanding kisses. \"Fuck me hard ... fuck me Steve ... Fuck my cunt... Use my cunt... ohhh Steve!\" His cock felt so good inside me, so hard, moving so easily within me, in and out, his weight pressing me down into the bed, his body slapping against mine, his hands and his body pinning me down and taking me, the wet sounds of my sex being taken filling the room. This was how I'd always dreamed of Steve taking me and I was soaring, soaring to new heights and approaching heaven!\n\n\"Ohhhhhhh!\" I clamped my sex down on his cock as he thrust into me, enjoying his grunt of pleasure, enjoying the look on his face as I did it again, straining to draw his cock further into me. He grunted and drove harder into me so that I squealed with the sheer excitement and pleasure of feeling him to that to me, squeezing him again and holding on to his shaft as he drew himself back for another thrust.\n\n\"You like that huh Hayley?\" he gasped in my ear, \"your slutty little cunt likes my cock fucking you hard huh?\" He thrust hard and hard again so that my head arched back, my body arched beneath his, wanting more, wanting it harder. \"Jesus, your slutty little cunt feels so good ...\"\n\nI whimpered. Slutty little cunt? That wasn't what I wanted to hear. I wanted him to tell me that he loved me. \"Ohhh Steve...\" My voice was an excited gasp. \"Fuck my cunt ... Use me ... I love you Steve ... Use my cunt ... I love your cock...\" \n\n\"Fuck Hayley,\" he groaned, pounding into me, ramming his cock hard into me so that my body slid upwards on the bed a little with each thrust. \"Fuck ... fuck ... fuck...\" God, I was so close ... So very close... I squeezed my sex on him, squeezed hard, wanting him ... wanting him so much! Feeling his cock in me, fucking me. I loved it!\n\n\"Yes,\" I gasped helplessly. \"Yes Steve ... ooohhh yes.\" I could feel his body on mine, pressing down on me, his muscles working, the strain and the enjoyment of me as he took me. I squeezed his cock again and suddenly he was bucking against me, grunting and groaning as I felt his cock throb inside me, spurting his semen in thick jets deep inside my sex, straining and jerking against me as he came in me.\n\nToo soon! He'd come too soon! I was almost there. But almost wasn't enough as he slowed and stopped. I felt those last spurts within me and then, almost immediately, he was rolling off me leaving me unfulfilled and desperate. I looked at Joe, my face flushed, disheveled, sweaty, desperate almost. \"Please\" I mouthed as Steve flopped onto his back beside me. Joe smiled as he looked across me at Steve.\n\nThen Joe chuckled. \"Guess that leaves you to me again Hayley.\" \n\nI lay there waiting. Even with my eyes closed I could sense that Steve was annoyed, but he hadn't fucked me like Joe had and he wasn't hard and ready to take me like Joe was and he hadn't given me the orgasm I so badly wanted either. I said nothing. Joe didn't say anything more either, he just grinned across me at Steve before rolling over onto me, between my legs. He started to fuck me again right away, very wetly. Already excited, I crossed my ankles behind the small of his back and had another screaming and sobbing orgasm about thirty seconds after his cock was inside me. He was still fucking me hard when Steve rolled off the bed and stood up and left the room. He never did come back. But I did stay the night at Claire's. \n\n<p align=\"center\"> * * * * * * * * * * </p>\n\nJoe went on to fuck me two or three times more over what was left of that night. He came inside me every single time and I didn't protest once. Instead, I reveled in it, welcoming and accepting what he was doing to me while in my mind I hoped nothing would happen. It felt like Joe was insatiable but I loved it. I loved every moment of what he did to me. I loved it when he came inside me. I loved it when he guided me onto my hands and knees and knelt behind me to take me like that again. I loved it when he rolled me onto my back again and took me gently.\n\nIn the end, we slept the sleep of the exhausted, Joe cradling me in his arms. Very late the next morning, after Joe had woken me up, we went into the bathroom and showered together. He shampooed my hair and washed me everywhere. After he'd done me, I washed him slowly, soaping him down, following through by rinsing him and then kneeling before him in the shower, taking him in my mouth and sucking on him until he was hard again. When he was, he lifted me to my feet and led me out of the shower and took me in his arms. \n\nWe kissed, his hard cock pressed firmly against my stomach, his hands on my hips. I was already wet again, from sucking on him and from feeling his cock pressing against me hard and I knew I wanted him. I wanted him to fuck me. His hands turned me to face the bathroom mirror, bending me forward over the counter. I glimpsed movement in the mirror as I faced it. The bathroom door, which we'd left ajar, was opening further. I saw Steve's face in the gap, watching me, watching Joe. My eyes widened in surprise as I saw him. Joe didn't notice a thing. His face was buried in my hair, his hands cupping my breasts, playing with my nipples as he rubbed his cock up against my butt.\n\n\"You're not too sore Hayley?\" His voice was a whisper but I knew why he was asking. One of his hands was between my legs, one of his fingers easing into my sex, very gently parting me and exploring my wetness. I was sore alright, but I also badly wanted to feel his cock in me again and I wasn't too sore for that. I didn't really care that Steve was watching me either. Watching us! He'd watched us last night as well, from a lot closer.\n\nI didn't feel embarrassed at all with Steve watching us. I wanted to feel Joe's cock. I looked into the mirror, seeing my face. Seeing my face as Steve saw it. Flushed with excitement, my eyes sparkling, lips slightly parted, waiting! Waiting to be fucked! Steve was still standing there, watching. My eyes met his. We looked at each other. I rather vaguely wondered what Steve was thinking as I waited. Was it exciting for him, watching Joe take me? Did he feel humiliated at seeing his buddy taking his girlfriend? Would he want to join us the way he had last night before he left? I waited. I waited for Joe to enter me. I waited for Steve to walk into the bathroom. I was his girlfriend. He could take me if he wanted me. He could take me as his! I waited, but after the way he'd acted last night, I didn't expect him to do anything.\n\nI was right. \n\nHe didn't. \n\nInstead, he unzipped his jeans, pulled his cock out and began stroking himself, all while I was looking at him. He wasn't going to challenge Joe, I knew that now. He wasn't going to walk into the bathroom and join us either. But I knew that he was going to watch Joe fuck me. The look on Steve's face told me that he knew that I knew that. I smiled at the mirror. \n\nWas that smile for Joe or for Steve? \n\nNot even I knew that.\n\nBut I knew that I was wet. I knew I was ready to be taken. And I knew who was going to take me.\n\n\"Do you want it?\" I breathed, my eyes fixed on Steve.\n\n\"I sure do Hayley,\" Joe was panting with excitement. I almost giggled as I wondered if he'd been taking Viagra or something. Steve didn't reply but he nodded his head. He knew I was looking at him.\n\n\"Go ahead Joe ... go ahead and fuck me,\" I said breathlessly after a slight pause. I wasn't quiet about it either. But really, I was saying it to Steve as well. \"I want you to fuck me again Joe ... fuck me hard.\" I wanted Steve to know that I wanted Joe to fuck me. Why did I want that? Knowing that Steve was watching me was exciting. Knowing that watching me was exciting Steve was exciting too. It was weird and I knew it. But I couldn't help myself.\n\nJoe bent me over the counter so that I had to use my forearms to support myself on the white marble countertop. His hand lifted one of my knees up onto the marble so that my sex was completely exposed, spreading me wide open for him to take. I watched in the mirror as he positioned himself to take me, his erection rampantly jutting towards me, as eager to take me was I was to be taken. My eyes were fixed on Steve's as I felt the head of Joe's cock brush my entrance, making me shiver with anticipation, making me suck in my breath and moan softly. In the side mirror, I watched Steve watching me, saw the excitement on his face as he looked at me, as he watched Joe position me to be fucked. I saw his hand stroking his cock.\n\nThe look on Steve's face as he watched Joe position himself to take me did weird things to me. In the heat of last night, as Joe had taken me again and again, I'd forgotten about Steve. Well, maybe I hadn't forgotten but I hadn't worried about him, about what he was thinking knowing that Joe was busy fucking me. I'd been too much involved in being the fuckee and in enjoying what was being done to me. Now Steve was openly watching me as I was about to be fucked. By Joe! Again! And he knew that I knew that he was watching us. I knew I should be ashamed and embarrassed that my boyfriend was watching me fuck someone else. I was and yet I wasn't, all at the same time and it was doing weird things to my head. \n\nJoe's hands gripped my hips. His thighs pressed against the backs of mine. The head of his cock nuzzled my entrance, right where I knew he could slide inside me. I bit my bottom lip as I felt myself open there so easily, felt the solid pressure against the most intimate part of my body as Joe pushed lightly. The sensation made me shiver again. Joe pushed, I heard myself groan, my mouth opening as my hands clutched at the cool marble. Steve's mouth mirrored mine, he was breathing hard, his hand stroking hard as Joe's cock buried itself all the way inside of me, finally pausing when all of him was in me, both of us panting with the effort.",
        "I held my head up through sheer willpower when all I wanted to do was bow my head down to rest on my forearms. I wanted to keep my eyes on Steve in the mirror. I wanted to watch his face as he watched Joe fucked me. I was whimpering excitedly as I reached down with one hand to touch myself where Joe entered me, feeling his cockshaft stretching me open around him, feeling his shaft wet with my juice, feeling my clitoris swollen and sensitive, rubbing myself a little and breathing faster with every circle of my fingertips. Joe gasped and pushed hard into me and I knew he could feel my fingers on him.\n\n\"Does that feel good Hayley? You like my cock fucking you?\"\n\n\"Oh yeah ... yeah Joe ... I love your cock.\" I wasn't murmuring, I wanted Steve to hear me. I could feel him sliding into me, I felt him with my fingertips as well as with my sex. \"It feels so good.\" \n\nHe moved inside me, sliding back, then in again, moving slowly in and out, short, gentle strokes, his eyes watching my face in the mirror, making me tingle, that slow heat spreading from my sex outwards to my belly, to my breasts. My fingers explored where he entered me, touching him, touching myself, feeling how thick he was, how stretched I was around his girth, feeling the length of him as he slid in and out of me, feeling him as he pressed all the way up inside me.\n\n\"Jesus Hayley.\" His strokes were harder, faster. Going deeper into me. \"You're so fucking tight...\"\n\n\"You're stretching me inside.\" His expression changed at my gasp. Less intense, more delight.\n\n\"Does it feel good?\"\n\n\"Oh yeah,\" I moaned. \"yeah, it feels good.\" My eyes were looking at Steve's reflection in the mirror.\n\nJoe started pumping himself into me harder. Steve knew I was watching him watching me. Our eyes met. I moaned. Steve gasped and I could see now that he was stroking his cock hard with one hand as he watched me. How weird was that? Knowing he was watching Joe fucking me twisted up my insides. Watching him stroking his cock as Joe's cock stroked inside me made my sex do a little dance around that cock that had Joe groaning and fucking me harder. That made my eyes open wide, made my mouth utter little sounds of uncontrollable excitement.\n\n\"You like that huh Hayley? You like it like this huh?\" Joe was looking down at my butt, looking down at my sex where his cock was sliding in and out of me, filling the bathroom with wet sounds.\n\nMy eyes were fixed on Steve's eyes as he watched me. \"I love it ... I love it ... Yes ... Oh Yes ... I want your cock... I want it ...fuck me with your cock ... fuck me Joe! ... Fuck me harder!\" My voice was almost a wail as I clung to the counter. \n\nMy face and my eyes pleaded with Steve. I did want him. I wanted him as well as Joe to take me. I wanted Steve to walk in and stand behind me where I was bent over the counter and take me as soon as Joe had finished using me. The way he'd taken me after Joe last night. I knew I loved Steve and I wanted him so much. What was happening with Joe was pure sex. Pure pleasure, gratifying my body and my desire to be fucked. Having Steve take me would gratify my mind, give me the love I wanted from him.\n\n\"I want ... you to ... fuck me ... fuck me ... and ... come ... come ... come in me,\" I gasped, looking wide-eyed at Steve as Joe's thrusts jolted my body hard against the counter. I could feel my body jerking as Joe slammed into me. Feel it? I could see myself in the mirror, face flushed, mouth wide open and gasping, pony tail swinging, breasts quivering, body juddering under his increasingly rapid thrusts. Joe was pounding his cock into my sex and I loved it. I loved every moment of it as his cock rammed its full length up inside me, paused in me, drew back until only the head was in me, then thrust into me again. I moaned and I sobbed and I made little noises of excitement each time he did that to me, doing my best to push myself back at him as he filled me. \n\n\"Ohhh fuck,\" Joe groaned, digging his fingers hard into my hips, working his cock deep into me so that I actually felt him butting up inside me, brushing my cervix. \"You're gonna make me come! ... I'm gonna come Hayley ... I'm gonna come in your tight little cunt girl.\"\n\n\"Uhhhhh ... uhhhh ...yes ... Yes ... come ... come in me ... my cunt ... come in my cunt...oohhh ... ohhh my cunt ... my cunt...\" The words poured out of my mouth as I felt Joe's cock engorging inside me, as I felt my sex gripping his cockshaft within me, fluttering and spasming around his length as my own orgasm built inexorably within me, a rapidly growing tidal wave. That was when I saw Steve come. I saw his face, his expression twisted in pleasure as his hand worked his cock, stroking himself hard as he watched me being taken. His mouth opened wide, his hand worked frantically, wave after wave of his come erupted through his fist and arced through the air as he shuddered through his climax,. I didn't care now. I'd wanted him earlier, when I saw him watching us. \n\n\"Yes!... Yes Yes Yes!\" I cried out. Was it at the sight of Steve coming as he watched me? Was it knowing that Joe was about to come inside me? Was it my own climax which was almost on me? Or perhaps it was a combination of everything that I was reacting to. Whatever it was, Joe came inside me as Steve was in mid-eruption. He came hard, his hands gripping my hips as he rammed his cock into my sex and held himself there, high inside me, the tip of his cock just brushing my cervix. I could feel his cock pulsing and throbbing inside me as his come spurted out, flooding me, filling my sex in spurt after spurt after spurt deep inside me.\n\nFeeling Joe cum inside me, feeling those throbbing spurts deep inside my sex, feeling his cum flood me and fill me sent me over the edge. I groaned. I shivered. I clung to the marble counter as my orgasm washed through me in a great wave of golden pleasure that overwhelmed my senses. Joe was still coming hard inside me and then, after he'd finished, after his breathing had slowed, after I'd caught my own breath as I half-lay across the countertop, a thought occurred to me, a question that I wanted answered. I gasped out the words that had sprung into my mind as soon as I could speak. \n\n\"That girl ... the one you wanted to score with at the party ... that you were going to fuck so hard she couldn't walk... who was she? ... you can tell me now can't you? ... I guess it didn't work out huh?\" \n\nI knew it hadn't worked out. I hadn't seen him with another girl before I took off with Joe and Steve and Joe had been here fucking me all night and half the morning. For that matter, he'd just finished fucking me again. But I was still really curious about that other girl. I wanted to find out just who it was that'd missed out on what I'd been on the receiving end of. I wasn't sure whether to think of her as lucky or unlucky. For myself, I still had mixed feelings about that even though I'd just let Joe fuck me again and my sex was full of his cock and his come. Joe looked right at me in the mirror and laughed as he withdrew gently from inside me. I clutched at the counter and gasped as he eased himself wetly out me, leaving me feeling strangely empty, his cum flooding thickly down my thighs. God, there was so much of it. He stepped back, still smiling, one hand caressing my butt.\n\n\"Hayley, Hayley, Hayley ...\" \n\nI looked into the mirror, my eyes meeting Joe's as his cum flowed down my thighs. How could there possibly be so much of it? Joe had stepped away from me. Positioned as I was, one knee still on the countertop, I knew Steve could see me, he could see my distended sex, he could see my pinkly swollen lips and my entrance, still gaping wide open. He could see Joe's cum oozing from me, flowing in a thick creamy-white stream down the insides of my thighs. I wanted him to see that, I wanted him to see what Joe had done to me. I wondered if he was jealous or upset with me at all.\n\n\"It worked out fine Hayley. She was as easy as I thought she'd be ... and as hot.\" He paused, a wide smile spread across his face. \"And I just finished fucking her!\"\n\nHe chuckled as I looked back at him, wide-eyed; surprised and shocked! Although, knowing Joe, I guess I shouldn't have been.\n\n\"... and after another quick shower, she's going to suck on my cock until I'm hard and then I'm going to fuck her one last time before I take her home ... and she's going to forget all about her boyfriend right now and say yes to me, isn't she?\"\n\nHis eyes still held mine. His hands, both of them, now caressed my butt. Had I been easy? I guess I had. After all, most girls didn't go and get themselves fucked by a guy they've never even dated, in the process losing their virginity in front of their boyfriend's eyes. Not the way I had anyhow. Not so eagerly. And then there was what I'd just let Joe do to me while my boyfriend watched. Did Joe know Steve had been watching us? I had no idea, but I knew that I knew. I didn't know what that made me, but the thought that sprang into my mind unbidden was that I was what some of my friends would have called a hot little slut. Only they would have meant it to be a criticism. \n\nThinking of myself like that, thinking of how easy I'd been for Joe, excited me all over again for some reason I couldn't even explain to myself. In the mirror, I could see Steve peering through the doorway, watching us. Listening to us! My eyes met his. I wasn't going to forget my boyfriend, but I was definitely going to say yes to Joe right now. I looked at my boyfriend as I chose the words I would use to reply to Joe.\n\n\"She is,\" I gasped, still feeling that sense of shocked surprise. And excitement! Yes! Definitely of excitement! \"Yes she is ... she's going to be a hot little fuck for you.\" I was! I'd do whatever Joe wanted me to do. He could fuck me however he wanted to. I looked over my shoulder, looking past Joe, looking directly at Steve. One of my hands slipped between my legs to touch myself, to explore my sex, feeling just how wide open I was after he'd used me, feeling Joe's cum as it flowed from me. Steve's eyes held mine for a long moment before dropping to where my fingers were on my sex and running slushily through Joe's cum where it flowed from me. They met mine again for another long moment as I started to slide my leg off the counter and stand, closing my eyes as I felt a rush of Joe's cum on my thighs, onto my fingers where I still held myself. \n\nWhen I opened my eyes and looked again, Steve had vanished. I heard his car drive away through the open window as Joe turned on the shower. \n\n<p align=\"center\"> * * * * * * * * * * </p>\n\n<p align=\"center\">And an afterword from Chloe...which is a bit long but forgive me, you're thru the exciting part now so I feel I can take the time... </p>\n\n\"The original version of Chapter One of \"Hayley's Party\" was very closely based on an old story called \"Miaw: Life of the Party\" which was the genesis in my head for \"Hayley.\" Following some feedback and a notification from Literotica that my first version (which a lot of you may have read) was rather too close to the original (and yes, I did reuse the original story for my kickoff story...rather too much as it turned out) I've completely rewritten Chapter One while trying to stay close to the generic plot. \n\nI hope you've enjoyed reading the Chapter One rewrite as much as I have re-writing it. And my apologies for the time it's taken to get this out - during the rewrite it grew from just over 10,000 words to 60,000 words so it wasn't just a rewrite - and I also found out it's a hell of a lot harder to rewrite than it is to go with something new. While I think you'll find that the new version of Chapter One follows the same rather generic plot, the story is rather different, more nuanced and very much more detailed - and both the Prologue and this rewrite of Chapter One include a lot more background on Hayley. In hindsight, the new Chapter One is a bit too long - and rather longer than the Literotica average. But aside from all that, my heartfelt thanks for waiting all this time and reading all the way through. I hope you've enjoyed reading it as much as I did writing it!\n\nI'd also like to take the opportunity to say I've really appreciated the tremendous feedback offline from everyone who has contacted me over the first few chapters of \"Hayley's Party.\" This is the first story I've ever tried to put out in front of readers other than my boyfriend and it's just been so great getting all those responses through the feedback form (in addition to those brave enough to comment here). Honestly, I've been a bit stunned by all the offline feedback. Thanks to every single one of you for your messages! I do my best to reply to anyone who contacts me, time permitting, so if you're feeling all chatty about the story or you have any suggestions or questions, feel free to hit on me that way rather than thru the comments at the bottom of the story - just don't get all upset if it takes me a while to reply. Either way, I love hearing from you. Makes my day, honestly! \n\nThose thanks also definitely include thanks to my critics! Thank you especially to \"Anonymous\" (whoever you are...) for bringing up my Chapter One as being too much of a straight copy of Miaw - you pushed me into using my own words 100% and I'm really grateful for that. Hopefully you'll agree that the story is better for the extra effort on my part (here is where Chloe scolds herself for her initial laziness - bad girl! Bad!).\n\nSo this is very much a first draft sort of thing. I know there's a lot of flaws, it needs to be tightened up, I can work on the grammar (I often get US English and English-English mixed up - the perils of both being an ABC with a Dad that dragged us round with him on his international travels and an eclectic reader with a fondness for British and foreign writers), and the phrasing - and I could sure cut a whole lot of superfluous text and all that stuff. Going to do that. Once I get the first hack out there, I'll probably do like twenty rewrites. So if you want to comment on anything at all, please do. Especially criticisms and suggestions! I take it all in, I may ignore them in the end but I do value them. So please, if something just bugs you or stands out as not quite correct or not in the flow of the story, tell me. Or if you really like it, likewise! Getting it all out there in the open, what I really want to do is write stuff that has you panting on the edge of your seats, tongue hanging out, hard or wet as the gender indicates... wanting more and more and more... and at the same time has a lot of emotional content, a real plot and is a bit more than just a straight stroke story like most of the ones you see here. \n\nIn this story, I really want to get you totally inside Hayley's head. I did have an idea of where Hayley is going when I started this but it's changing as I write and there's things I've already written that I'd now go back and change (aren't there always). Yup, I'm weak on plotting! Hayley's definitely going somewhere... although it's one of those stories where the protagonist just seems to come to life in my head and go down directions I'd never expected her to take and does things I didn't expect her to do as she takes on a life of her own. Hayley is continually surprising me - and, I hope, you too. I'm also, God help me, trying to include a bit of a plot beyond \"Hayley fucks around\". Hope you like it, and for anyone that recognized where Modesty and Willie come from, I hope it gives you a laugh.\n\nAnyhow, also mucho thanks to the author of \"Miaw\" for writing the story way back in 2009 that was the genesis in my mind for \"Hayley\" - and thanks to all of you for reading this story and this rambling author's note and thanks once again for the many many emails I've had saying nice things about the story and asking for more - and yes, most of it is fictional but bits and pieces of me do to make it in to \"Hayley\" here and there. I'll leave you guessing which! All I will say here and now is that the butt thing in Chapter Four really did happen and it's still a rather vivid memory! Hayley was as surprised and startled as I was and she enjoyed it as much as I did!! But I did enjoy writing it! I was giggling the whole time! Hindsight! LOL! (and okay, that pun was unintentional)\n\nAnyhow, enough from me! And thank you so much for reading my stories. I can only hope I keep entertaining you and that you keep enjoying what I write! You guys are the best! Now, on to writing the next chapter ... Chloe"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "first time",
        "chinese",
        "virgin",
        "threesome",
        "asian",
        "chinese",
        "18 yr old"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/hayleys-party-ch-01-pt-c"
}