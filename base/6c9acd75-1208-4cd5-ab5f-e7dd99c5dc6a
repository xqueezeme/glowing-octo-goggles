{
    "title": "Extending the MILF List Ch. 15",
    "pages": [
        "From the author: This includes mother-daughter, mother-son, and sister-sister sex along with the group sex associated with an orgy, so if this isn't your type of party, walk on by. Leave comments and vote, so I know how this is working. I depend on feedback. Thanks for reading, I hope you enjoy the work.\n\n*\n\nI woke up at seven and, almost as usual, it was my phone that greeted me, buzzing happily on my night stand. Butt holes and bung buckets, I was tired. \n\n\"Yeah?\" I said into the gloomy morning, eyes still crusted closed. \n\n\"Mr. Duncan? It's, this is Holly Romelingame.\" \n\n\"Holly. Hello.\"\n\n\"I want it. I want your collar. I have been thinking about it all night, I mean I dreamed about it, having a collar around my neck and I think, if you own me, then you can give me to Gary. He'd like that and if I screw up, he can hand me back to you, you know, for disciplining or retraining or whatever you'd call it.\"\n\n\"Fucking. I call it fucking. I forget, did you say you liked it in the ass.\" Was I awake or was this a dream?\n\n\"Liked? Liked? That might be a stretch.\"\n\n\"Stretch. Stretched.\" I horse laughed. \"You're funny.\" \n\n\"So?\"\n\n\"So what?\"\n\n\"Want to own me? I can get the next couple weeks off. I'll be with you the whole time.\" I heard her sucking air through her teeth. \"If you want me around that much.\" \n\nI lay back, closed my eyes and envisioned the little woman. I thought about having her around for two weeks and not fucking her. I wondered what my sisters would think or do or say. I grunted. \n\n\"Might be fun.\" I said. \"My house. Noon. Don't be late.\" I gave her my address and hung up. I smelled coffee. \n\nI pulled on sweat pants and a robe and staggered downstairs. No coffee but I was hungry. I stopped at the bottom of the stairs. Blister Tawny sat at the table sipping a cup of coffee. She looked around, her green eyes appraising and cool. \n\nUh oh.\n\nI staggered into the kitchen. Charm sat across the table from Tawny. Dalia was making an omelet. I got a plate and stood beside her till she gave it to me. I got orange juice and sat down and ate. \n\nNo one spoke. The atmosphere was dewy to frigid but I was not sure why. Well, I had an idea. Tawny validated my tension.\n\n\"So, brother Sonny, you are going to do Georgia with all your friends today?\"\n\nI stopped eating in mid-chew, fork suspended over the plate. A mushroom dropped off, leaving a string of cheddar hanging from it. I put down the fork. \n\n\"Yes.\" I said, eyes fixed on the table.\n\n\"Before me?\" Tawny asked. \n\nI looked up. Tawny sat to my left at the other end of the table, Charm to my right. Dalia's place was empty since she was cooking. I turned my head to look at Charm. \n\n\"Look who's here.\" I said lightly. \"It's Charm Davis. Tawny, did you know Charm is a lesbian?\" \n\n\"Sonny!\" Dalia's mom voice lashed the back of my neck. \n\nCharm regarded me coolly. \n\nI regarded Charm coolly. She was way cooler than me. \n\n\"Everyone knows Charm is a lesbian but you.\" Tawny snarled. She was not happy about something. Given the fact that it was seven-thirty in the morning on a Sunday and she was out of bed and not at Chris' house indicated some bloom was off the rose. \n\n\"Oh, I know. I am just wondering if she really wants to watch six guys fuck Georgia all afternoon or if that is all someone else's idea. Seems odd for a lesbian to be auditing a gang bang staring Dick somebody.\" \n\nCharm smiled a ghostly smile, ethereal and light as though she were above it all. \n\n\"Sonny, it may shock you to know that I have not seen dick penetrating a woman and frankly, after seeing plenty of dick in a strictly male context, I thought it might be good to see it in its native habitat.\"\n\n\"So Georgia is now habitat?\" I chuckled. \"Habitat for humanity? Habitat for Sonny...and his buddies.\" I twisted around to get Dalia's glare. She delivered it with a glower and a fat lower lip. \n\n\"Quit trying, Sonny.\" Charm said said. \"Dalia suggested that Georgia might enjoy the audience. For Georgia's sake at least, I'll watch you boys.\" \n\n\"Oh, this is for Georgia?\" I immediately felt stupid. \"Of course it is.\" I added hurriedly. I turned to stare at Dalia but she was busy with the next omelet and made no bones about ignoring me. \"Well, since you are fine with being a sex object...\"\n\n\"Excuse me?\" Charm growled, like I was getting too close to her dinner. Most women don't like you eating off their plate but think it's cute to poach off yours, if you're a guy buying dinner, anyway. \n\nI looked her straight in the eyes. \n\n\"I don't care what you call it, you are about to be used for someone else's pleasure, irrespective of whether it matches yours or not.\" \n\nCharm's eyes flicked as she processed the thought and realized I was right. \n\n\"Shit. You're right.\" She did smile. \"I guess I don't mind. If you don't. If the other guys don't mind a UN observer taking notes.\" \n\n\"Just so long as you don't take pictures, no one cares. You might be appreciated on a purely aesthetic level. Besides, you won't be the only observer watching from the catbird's seat.\"\n\n\"Oh, I know all about Dalia's penchant for watching. She has been rather forthright about that, when pressed.\"\n\n\"Oh really?\" I looked away from them, fixing my eyes on Tawny. \"And you. What are you doing here? Runaway to home?\" \n\nTawny smiled at me and I found another use for my new word because her smile was unctuous. \n\n\"I overheard Chris explaining to Laura that the guys, as he said it, were getting a shot at Georgia. You can imagine my surprise when I thought that would be my prerogative, to go first, I mean.\"\n\nI looked her right in the tits and said, \"Mom went first. You girls are just tourists.\" \n\nI could tell by the way her tits swelled up she was about to object but Charm intervened. \n\n\"Tourists are wonderful. Wide-eyes, interested, and filled with wonder, they can help you to see your neighborhood in a whole new and wonderful way.\" \n\nMy eyes lifted and found Tawny with a very Georgia look on her face; it was that obdurate look that meant Georgia was never going to change her mind and you just as well give up. One time when we were kids, she refused to clean up her oatmeal one morning and Mom made her sit there all day, insisting she eat it. I finally grabbed it and threw it away. I hate oatmeal and cold oatmeal is like its own circle of hell. Just smelling it makes me want to ralph. Seeing that cast in Tawny's eyes frightened me a little but I wasn't clear about just what it could mean. I did get a little queasy though. \n\nSo I asked. \"What are you doing here, precisely?\" \n\n\"I wouldn't miss this for the world.\" Tawny's face twitched. \"Who else do you think is going to be watching?\" \n\nSometimes Tawny could be so confused and thus confusing. \n\n\"Me, silly.\" Dalia said from the kitchen. \n\nI shook my head. \"Besides her, there is another woman I will introduce to your little ritual.\"\n\n\"Is that what you call it.\" Charm asked lightly. \"I thought it was airtight. A cock in every hole.\" \n\n\"So it is but airtight is much too descriptive. Better to disguise it with another name.\" \n\nCharm nodded. \"You? Politically correct?\"\n\nI smirked. \"Do you really think there is a politically correct term for a cock in every hole?\" I waited for a response and then wondered if I had only thought that thought because no one seemed to be aware I had spoken. Of course, the truth is likely that they were dissing me and cursing me with silence, which to a good comedian is indeed a circle in hell, also known as a circle jerk which brings me back to the subject at hand or in hand. \n\nI made to study Tawny until finally she met my gaze, her eyes brittle and sharp. \n\n\"You should let me go. First, I mean.\"\n\nI shrugged. \"You can be a fluffer.\" I smiled and oh wow! It was unctuously par excellance. \n\nShe snarled at me. And made a claw of one hand.\n\nI noticed the bright red fingernail polish and it aroused me. \n\n\"What?\" I said hoarsely. \"Don't you like the idea of having six dicks in your mouth as a good way to spend the afternoon?\" \n\nTawny shook her head. \n\n\"Chris was giggling with anticipation over getting to fuck my sister, so, no, I am not thinking that spending an afternoon on my knees making like a glory hole would be my first choice.\" \n\n\"Glory hole? What's that?\" I was being snide. I know how to use the Internet. The idea of sticking my dick in a hole in the wall to see what would happen struck me as...well pointless given my developing harem. \n\nTawny, in true Tawny fashion neglected my snideness and took me literally and began to explain. Dalia, bless her heart, walked over and put a plate before her. \n\n\"I think he was being silly, dear.\" Her mom voice turned Tawny's gushing to a trickle. \n\nTawny looked down at the steaming omelet. She looked up at me. \n\n\"Sonny, I want fucked. Several times. Not as many as Georgia but, I want to have sex with your friends,\" she smiled but it looked like she had cellophane over her face, \"or you if you are nice, and I want everyone to see, to watch me having sex with my brother.\" Her eyes took on a look. \"I want you to take me clothes shopping and fuck me in a changing room. I want to fuck in an elevator. I want it all but I want to be seen. I want to flash my tits while you finger me or take you standing up in the park while marathoners chug by. I want to sit in your lap in the movies and feel your cock and have you put it in me and feel everyone around me knowing I am full of cock and still have the feeling that I am fucking my own brother and no one knows!\" \n\n\"Tawny, dear, you should eat\" Dalia said, her voice was a little nervous, shaking a little but I could not tell if it was because her sister made her uneasy or because she was aroused, imagining watching that litany of sexual displays and knowing what other's did not know, that her sister was fucking her brother where they could be seen in public. \n\nI don't know about Dalia but I was aroused. I had a flash to fuck her right then, but it immediately occurred to me that I should arrange for her to be fucked as she asked. But if I had everyone fuck her, Georgia would never forgive either of us. Suddenly, I had an idea and what an idea it was. Honestly, it scared me a little. Can you have an orgy on a Sunday afternoon? Don't you need to do it at night or something? I needed to check the orgy rule book to see what conventions I was breaking and what the penalties were. \n\n\"Tawny, is this about you and Chris?\"\n\nShe took a bite of omelet. Even after having had my own, it still smelled great and that is an accomplishment. \n\nTawny chewed, swallowed and looked up at me. God, that simple activity made me want to do her right then. \n\n\"Sort of.\" This was the honest, guileless Tawny. \"Chris refused to have sex with either of us last night. Laura, Mrs. Wills, she was crazy and so he tied her to the bed and left her. She moaned half the night. She loves serving as hostess on the airtight express. I wanted sex but Chris put me off. He asked me to let him take his mom out for the day, just her and him. He doesn't know I came here. I said I was heading into work. I want him to see someone else fuck me. If he can stand that, if he doesn't turn into a green-eyed asshole...\" She hesitated.\n\n\"Assholes don't have eyes.\" I interjected.\n\n\"Yeah they do. Just one, the winking Cyclops eye that you want to poke out with your spear!\" Charm said, her voice bubbling with good cheer. \n\nTawny ignored us both. \"I, I want this. I do. I wanted it to be me but now, now that's Georgia, I need him to understand I want it and that I don't think we should be exclusive, since he certainly isn't.\"\n\nI cocked my head. \"The usual practice is to put all the cum in one place, er, person. I am not sure we can do anything but tease you.\"\n\n\"Sonny, come on. This is a little sister-big sister thing. If she goes first, after you fucked me first, then she wins.\"\n\nI shook my head. \"Sex is not a competition. Every orgasm is its own reward. Look, Tawny, if you want cock, you may have to eat pussy...will you do that?\" \n\nI saw the disenchantment ripple through her expression. I was happy to see it did not rise to disgust. \n\n\"I don't eat pussy.\" She said. \n\n\"You don't have to do anything you don't want to but Tawny, other women will and they will want it.\"\n\n\"That's saying a mouthful.\" Charm said. \n\nI glanced over at her and she looked so pleased with herself I nearly laughed out loud. \n\n\"I have someone for you to convert.\" I said gently, clearly talking to Charm. \n\nCharm looked immediately startled.\n\nTawny looked shocked. \"Sonny!\" \n\n\"Not you, but you should learn to like it. Practice makes perfect, right Charm?\" \n\nDalia had been standing behind Tawny. She took a couple steps to me and laid a hand lightly on my shoulder. \n\n\"Let her alone. Tasting pussy is not for everyone. When its her turn to be airtight,\" Dalia hesitated, and blushed. \"Let's see how this goes. Have a woman for each guy to fuck and have couples do Georgia before you all do her together.\" \n\nGreat minds. I was way ahead of her, thinking exactly the same thing! I stood up. \n\n\"Dalia, we could have fifteen or sixteen people here. Can you have snacks or something?\"\n\nShe nodded, lighting up. \n\n\"I'll make mulled wine and have a lentil stew.\"\n\n\"Honey, I don't think beans at an orgy is a good thing. Causes bloating.\" Charm said dryly, studying her fingernails. \n\n\"Oh, right. You mean it makes the guys fart. So no beans. Orgy? Is that what this is?\" She turned her eyes to Charm. \"I'll make a stew. Vegetables in the crock pot. Are we really hosting an orgy? Is that what you want? A male and female orgy? We are doing this for you, Charm.\"\n\nCharm remained fixated on her fingernails. \n\n\"I think I'll do retro today and paint my nails black.\" She looked up at me and smiled. \"They won't know what to think when I get back to the office.\" She looked at Dalia. \"Dalia, darling, this isn't for me. You're confused. It's for Georgia. Is it going to go well with her to have a gender blender mixer swirling around her while she is orgasming.\" Her perfect white brow furrowed. \"Oh, this is Nova we are talking about. She is as ambi-sexual...no, omni-sexual as any one I ever met. I guess I think she might love being the center of attention at an orgy. How are you going to manage that?\" \n\nThe last was clearly addressed to me. I shrugged. \n\n\"I'll think of something. God, an orgy at my house.\" I walked away upstairs. I had a plan and it was wiggling around in me like a snake in a pie shell. \n\nI laid down and called Holly. She answered immediately. \n\n\"Holly, listen, you are going to eat pussy, if you come here today. I have a lesbian who will give you pointers and encouragement. I just want to see her naked and its your job to get her clothes off so I can see her.\" \n\n\"So you can put your dick in her?\" \n\n\"Holly, don't cast aspersions. I would never put my dick into a hole when I thought I wouldn't get it back. I don't think they grow back.\" \n\nShe giggled, then sobered. \"Really? I have to?\" \n\n\"Must.\" \n\nSilence. \n\n\"I'll try.\"\n\n\"Do you like the idea of a woman going down on you?\" \n\n\"I like the idea of you going down on me. You show real talent, but you need practice.\" \n\nI ignored that, despite the urge to pursue it. \n\n\"Just do what you'd want done to you.\" \n\n\"I want a cock about now. After last night, all the blather about fucking has me thinking of nothing else. I am ready to sit and spin.\" \n\n\"If you want a little time to adjust, come early and you can get a head start on the rest of us.\"\n\n\"How early?\"\n\n\"How much adjustment do you need before you are ready to go down on a woman with everyone watching.\"\n\n\"How many people are we talking about?\" \n\n\"A dozen or more. More if you count the oral watchers.\" \n\n\"Oh fuck.\" \n\n\"Come early, come often.\" \n\n\"Sounds like we are voting in Chicago.\" She chortled.\n\nI hung up. \n\n\"Oh fuck me!\" I grunted. My plan was lacking some crucial details. I got on the Internet and found the main number for the Global Grand. I hoped I remembered the room number. I asked for 2011 and when Jeb's voice came on the phone I breathed again. \n\n\"Good morning, Mr. Wills.\" I said. \"This is Sonny.\"\n\n\"Mistress, its Sonny.\" Jeb called out in a tinny voice. God it did not sound like him at all. \n\n\"Jeb listen...\" There was clicking and then a new voice spoke in my ear.\n\n\"Master Sonny, what you want of Tia Maria?\" She sounded tense...and pleased. \n\nI hesitated. Well, I'd make the best of it either way. I'd have to get back to Jeb in a minute. No sense in dancing around the issue. \n\n\"Marie, I want you at my house by noon. I am having an orgy and I am going to assign you to one of my friends. To fuck, suck and do general maintenance. Do you like women?\"\n\n\"Master? What you mean, I woman.\"\n\n\"I mean do you go down on women?\"\n\n\"Jacob, what go down on women mean? Oh. Oh! I don't do it, ever.\" \n\nI rolled my eyes. \"Well, its time. Be here at noon. Hand the phone to Jeb.\"\n\n\"There will be dick, though?\" Tia Maria sounded a little worried. \n\n\"More dick than you can handle and likely more than you will get. Hand the phone to Jeb.\"\n\n\"You mean Jacob? Here, Sonny want you.\" \n\n\"Hello?\" His voice sounded conflicted. \n\n\"Not like that, Mr. Wills. Has Tia Maria met your son or wife?\"\n\n\"No. Of course not.\"\n\n\"I mean, does she know what they look like? Chris and Laura, the blond duo? Would she recognize them if she met them, face to face?\" \n\n\"No. I haven't shown her any pictures of my...of that sort.\"\n\n\"If she has to eat pussy, will that be a problem?\" \n\n\"Oh my god. I have no idea.\" That voice wasn't his. He sounded breathless and focused. \n\n\"Well, I'll find out and let you know.\"\n\n\"Will, will they be there?\" His voice was low and soft, like he was trying to speak without being heard.\n\n\"Laura and Chris. That's my plan. You said...\"\n\n\"Yes, I did. Thank you, Mr. Duncan!\" \n\nYou cannot imagine how fucking weird it is to hear a man of his ilk and demeanor calling me Mister. I think if he had called me \"master\" I'd have been too weirded out to go on. \"Mister\" was bad enough. \n\n\"You have my phone number and address?\" I gave both to him. \"Have Tia Maria at my house by noon. Okay? I am going to introduce her to your family.\" \n\n\"Oh god.\" Jeb breathed. \n\n\"Oh, text me your phone number and hers, does Marie have a phone that is local?\" \n\n\"I have one for her, yes.\" \n\n\"Text me the digits before you leave the room. If I don't get them, I'll call back on the house phone again.\" I had gotten digits wrong in the past and it fucked everything up. \"I'll text you acknowledgment when I get it. Don't leave till I do.\" \n\nI hung up. I sat on my bed and felt drunk. I needed more sleep. Shit it was only quarter to eight. I had time to arrange things and still get a couple more hours in. I sat still, counting. Six guys, three watchers, Tawny and Marie, I needed three or four more. Then there's Laura. Should I include her in the six or not? Depends on who I could get at such short notice. I had to use those on the line but I did not want to resort to the usual MILFs. I wanted people who'd be as unsure of themselves as everyone else. \n\nI called Rebecca Kline. She answered but sounded still asleep. \n\n\"Mrs. Kline? Sonny Duncan.\"\n\n\"Sonny? Oh, hello. Sorry, I'm not awake yet. We just got back from Memphis last night.\"\n\nI debated beating around the bush but decided to jump right in, into the bush as it were. \"I'm having a going away orgy for a lesbian friend of mine. She wants to watch how the other half do an orgy and I want you and Lovely at my house by noon. Can you do that?\" \n\n\"I, uh, well, an orgy?\" \n\nThe next voice I heard was a chipper Lovely, bright and breathy as always, as though her tone was licking at my ear through the phone. I wanted to fuck her face down. \n\n\"Mr. Duncan, did I hear mother say orgy?\"",
        "\"I want you and your mother at my house at noon. Table ready and ready to fuck. Does that work for you?\" \n\n\"Yes. Noon? I'll bring my mother. Shall I dress her any certain way? Can I tie her up or bring her naked or something fun like that?\" \n\n\"No, its too cold. Dress her to be undressed though, not so she doesn't need undressed.\" \n\n\"Oh yes, I understand. We'll be there. Should I have her wet and ready to be mounted?\" She giggled. \"I like saying it that way, mounted sounds so utterly animalistic!\" \n\n\"Suit yourself. She will be mounted. So will you.\" \n\nLovely sighed. \"Oh Sonny, thank you. My own efforts to mount my mother on strange cock has been disappointing. I think she has been enjoying my many failures, however. This, though, this my dearest mother will love. Orgy! Where, where shall I deliver her?\" \n\n\"And you.\" I insisted, my voice brooking no misunderstanding. \n\nI gave her the address. I had a little twinge about having so many people a) know my address and b) know I fucked my sisters but of all the one's I was inviting, none of them had much leeway to point fingers at us, so long as the degree of incest does not matter and it is like being a virgin or not. How many times and ways and with whom doesn't really matter once you had a taste of family, then you are part of the glass house so no throwing stones, right? \n\nI called Sean's house. Lydia answered. I hesitated, this could be awkward, I thought but then the light went on.\n\n\"Lydia, have you fucked Morrison yet or made any arrangements?\"\n\n\"No. Should I have?\"\n\n\"No, but its time. Do it now. Go to him, do him. But I want Quilla here. By noon. Understand? Table ready. Her little lunch box is going to get lots of attention.\" I wanted to be clear, so there was no confusion. \"Holly will be here, so this is the Rubicon. Understand? If you have any reservations, now is the time to stop. After this, you and Quilla will be Morrison's to use and abuse as you wish. Together and separately, but oh, you should make it clear to him that he's getting two for one, so he owes you and me both. Right? You can get a car or something but I want him scouting for another mother and daughter team.\" I could hear panting in the background. \"Get Sean off...out of whoever he's doing.\" \n\n\"He misses Laura.\"\n\nI grunted. \"He's had enough of Mrs. Wills. Oh, Lydia, however you manage things with Morrison, you need to keep a little Lydia for Chris. I have a feeling he may be busy but when he calls, you need to open wide. Understand? If Seth is bothered by that, avoid it and distract him with Quilla. Chris gets you like Sean had Laura.\"\n\n\"Oh god.\" She breathed into the phone. \n\n\"Yeah, oh god.\"\n\n\"I mean thank you. I, I wasn't sure...?\" \n\n\"Now you can be sure.\" I grunted. \n\n\"Noon. I'll be there, I mean, I'll have Quilla there with bells on.\"\n\nI hung up and sat staring at my phone. Interesting. Tawny, Quilla, Lovely and Becky. I needed one more, at least. I chuckled, thinking what my buddies were going to say when they discovered the plethora of pussy I was offering them today. Fuck me! I got excited, the buzz of anticipation coming mostly from their amazement at the quality and variety. I felt like the director of a show the day of an opening. Oh shit, I was forgetting Marie. Right that's five! With Laura, that was six. I hesitated. I should have one for me, just to balance it out and give that little thrill to Laura of being the Jill of all trades and useful to all, for all uses. She'd love that, I thought. \n\nMy phone dinged and I got Jeb's numbers for him and Marie. I put them into my phone, considering who else to add. I texted back \"Noon! Acknowledge.\" He sent back, \"Oh god, yes.\" I grinned. \n\nMy options were limited and I decided it would be fun to add Aunt Norma to the mix. I called her phone. She answered, panting. \n\nDamn, I thought, Brent was wearing himself out in his Aunt and might not be worth a shit. Surely not, he's too smart for that.\n\n\"Sonny? Oh god, get me out of here. Brent locked his door last night and Tasha is crazy. She has been at me all night long and all I want is a nice long dick. She has skills but a tongue is not a dick to Aunt Norma!\" \n\n\"My house, noon. Come with Brent. I'll call him.\" \n\n\"Dick?\" \n\n\"More than you can imagine.\"\n\n\"Oh, oh, god, yes! Sunday orgy!\" Norma screamed. \n\nI grinned and called Brent and told him to bring his aunt. He groused but I told him he was fucking my sister and plus, he might have a shot at Tawny, he evened out and agreed. The guy had an inferiority complex and was always worried about getting shorted. Of all people he had the least reason to worry about being shorted. He had a strong sense of justice and injustice, particularly his own that made him crabby. \n\nI hung up and realized I had a deep desire to include Annie in this. I counted on my fingers. I counted ten women and six guys, no eleven, I left out Dalia. Seventeen is a prime number. I just wanted Annie there. I thought she'd add a certain eastern spice to the sexy brew. I called Chris. He answered. \n\n\"Sonny, god, mom is nuts. I never saw her like this. She, she was ravenous with Tawny and me but now, its like she cannot believe this is happening.\"\n\nI grunted. Just wait till she understood what was about to happen. \"Chris, can you bring Annie? I hate to leave her out. The rest of us have in-house options and she doesn't. Bring her along, would you?\"\n\n\"Okay. We're just doing airtight with Georgia, right?\"\n\n\"You don't have play practice do you?\"\n\n\"Not till eight. After yesterday, god, Sonny, your girl blew me backstage and went out and kissed Lyle on the mouth. He looked at her with such a strange expression and then nearly mauled her. It was hilarious. Professor Billings had no idea what was going on. I know he tasted cum on her breath and went nuts. I thought I was going to die laughing. If I show up smelling like I just fucked a fivesome, who knows what'll happen?\" \n\n\"Just bring Annie or Anne, either one.\" I chuckled to myself, thinking that the fivesome comment would turn out to be pretty accurate. \n\n\"What?\"\n\n\"Mrs. Kingston. See if she wants to come. Give her the option but Chris, make sure she wears her collar and Laura too. Okay?\"\n\n\"I got it. Noon?\" He didn't ask about Tawny. I hoped that meant he was thinking more about doing Georgia. Tawny'd be a delicious extra. I hoped. \n\nI hung up and laid down. I had a thought that I was so hopped up on the thought of that much pussy in my house that I didn't think I could go to sleep. That was the last thought I had. I dreamed of them all, one after the other, first sucking my cock and then bent over taking me from behind. I was trembling with arousal in my sleep and hangover hard when someone tapped on my door. \n\n\"Sonny? Sonny! Hey, there is some woman downstairs asking for you.\" \n\nI rolled out of bed and pulled on sweats and a shirt. Dalia looked strangely at me. \n\n\"Who is that?\" \n\n\"A woman whose ass I traded for. She is here to learn to eat pussy.\" \n\nDalia goggled at me. I pushed past her and went down stairs. Holly stood just inside the door in a long blue winter coat. Her ankles were bare though and she wore sexy boots, well, boots with most of the leather missing. She had painted her toenails red. A theme was developing. \n\nI walked across the room to her and kissed her on both cheeks. She clearly expected a kiss on the lips. \n\n\"Holly, nice you could make it.\" I took her coat and walked her into the living room. Tawny sat across from Charm, like two lionesses lounging in the heat of the day, awaiting the evening hunt, and supper. \"Charm, this is Holly. Could you take her upstairs and teach her to eat pussy?\"\n\nThe whole time I'd known Charm I never knew her to look startled. She had a bland way about her that never got ruffled and never seemed to be surprised. This time, however, she had the shocked look of utter surprise. She gulped, she blinked and finally nodded, eyes fixed on Holly's tightly little package. Holly is the antithesis of Charm, short with hips and tits the curve space, where Charm is long and lean. \n\n\"I, why, I suppose. Holly, was it?\" Charm stood up, unfolding her lean, lanky body. She looked down on Holly. Holly tipped her head back to stare up at the taller woman. Her eyes became wide. She turned them to me and I saw real fear, performance anxiety really, like suddenly she felt the throbbing need to please a lesbian but had no idea how. I knew how. Practice, practice, practice.\n\nI think Charm got that same vibe. Charm was staring between Holly's breasts confined in her tight blue sweater. \n\nCharm moved over to us, took Holly by the elbow and guided her right to the stairs. \n\n\"Come along. Let's see what we can do with you.\" The tone was light and airy but it quivered with surprised anticipation. \n\nI looked over at Dalia whose eyes were following Charm up the stairs. \"I think you should put on the white dress.\" She called after Charm. \"The one split up the sides.\" \n\nI knew the one. She'd purchased it and modeled it earlier in the week. \"Yes, wear that dress!\" I called after the two women. \n\n\"Shall I join them?\" Dalia asked, staring at me. She closed her eyes. \"A stranger for Charm? Sonny, do you read minds? That's been one of Charm's fantasies, a strange woman who approaches her and asks to go down on her, particularly one that is straight and no more than bi-curious.\" \n\nI grinned. \"Well, this one's bi-ignorant so Charm may have to start at the beginning. Where's Nova?\" \n\n\"She's sleeping. She didn't get much last night. I think she was too excited.\"\n\n\"Well, wake her up. Tawny, you answer the door and fix drinks for everyone. Do we have stuff to drink?\"\n\nDalia smiled an indulgent smile. \"Sonny, the larder is stocked and well stocked. No need to worry about that. We'll handle it.\"\n\nI nodded. \"I'm going to shower. Some people you don't know are going to arrive, treat them like guests, help them feel at home but no touching.\" I directed that at both of them. \"Get Nova up and see if Mom left her cuffs in her toy box and don't give me, what toy box. I know you two have borrowed from her from time to time. Hook Nova up on Mom's bed and tell Charm, if she wants to practice on her, let Holly practice on her I mean, feel free. Make sure she's table-ready.\" \n\nI dashed upstairs and hit the shower first. I was still waking up. I'd gotten nearly three more hours of sleep and I felt fresh and energized. Done with the shower and groomed and pruned, I stepped out into the hall and heard the gaggling voices of females downstairs. My cock got hard. Funny to think that the vast majority had had me inside their bodies and they all either knew or suspected it when they looked at each other. This intrigued me. My house was truly full of pussy. What a buzz!\n\nI went into my room and got dressed, just an oxford shirt and khaki's, the white man's uniform. I sat on the bed and did some good yoga breathing. I heard the doorbell ring and detected Chris' voice. I grinned. He was realizing that Tawny was here and his circuits were blowing at that very moment. Fuck me. This was going to be fun. I'd been vague on how this was going to go but I got a luscious inspiration just then, luscious for me, at least. My hard cock had no wrinkles. \n\nFor a while longer I sat and waited. This must be what its like for D. Debra and Chris just before they go on stage. I had that feeling, that tautness in the gut that could be fear or excitement. It could presage the ecstasy given to you by an enthralled audience or the awkward silence that masks disapproval or worse, no response at all. \n\nShit, suddenly I realized I had not instructed Marie as to how to behave. I got up as the bell rang. \n\nBrent's voice boomed and then cut off. I think the growing crowd shocked him. If this was a party at night, there'd have been music to mask the ebb and flow of conversation. I had an idea. I sat down and wrote one through six on pieces of paper and A though F on others. The bell rang again and I heard Sammy and Landon. Right behind them I heard Quilla arrive. I was on the stairs when the bell rang and I walked directly to the door.\n\nI greeted Lovely and Rebecca Kline. I took their coats and invited them to find a seat. This was feeling much more like a formal meeting. No one had all the information but me and that gave me a bit of a thrill. I felt the quiver of adrenaline run through me. Everyone was quiet, tentative. I felt like a bridge with stress cracks in the main supports. They sat with drinks, eying each other like extras on a movie set reading for a newly open part. \n\nAnnie came around the corner and slid right under my left arm. She looked up and smiled at me. \"Nice of you to invite me to your orgy.\" She said in her best, clipped British accent. \n\nHer body felt good against mine. I went through my list and decided everyone was here. Marie sat isolated in the wash of bodies, looking around, clearly uneasy but dressed to kill. I walked around the corner and everyone got quiet. \n\n\"Hello, everyone. Thank you for coming...\"\n\n\"I haven't come yet.\" Sammy muttered. \"But I will!\"\n\n\"If you don't my sister will be disappointed. Just to be clear, we are here to fuck my sister, Georgia Duncan. She is currently upstairs, shackled to the bed. Her friend and lesbian lover, Charm is leaving tomorrow and Georgia thought it would be a thrill to let her friend observe her first ride on the airtight express. For those of you new to our little circle, this is when she has a cock in her pussy, another cock mouth and a third in her ass, all at the same time. In anticipation of that, we are going to divide up into couples and you will go upstairs and use her as you wish. The only rule I suggest, is that you come in your woman and leave Georgia table ready for the moment.\" I looked around. \n\n\"Laura?\" \n\nShe separated from Chris and Tawny who had clearly been discussing something and came over to me, sliding under my right arm so I was embraced by both her and Anne. \"Laura is going to serve us here, providing towels and cleaning service as you wish, however you wish. Just direct her.\" I shrugged myself loose from the two women plating against me. Laura wore a tight knee-length black linen skirt and a white blouse that was see through, showing her robust skin and the bra holding her breasts. I turned her to face me and unbuttoned the blouse as I spoke. \n\n\"Sammy, get a bowl from the kitchen.\" He nodded and moved to do so. \n\nI enjoyed the silence. My eyes found Marie. She still looked uneasy, her huge breasts clasped tightly in her blouse. I changed the order of what I was going to do, deciding penetrating the six women first should establish the terms of this party. I shucked Laura Will's shirt off her back and turned her around. I found the zippers on both sides of her skirt and let it drop. Anne picked it up immediately. \n\n\"Tawny, can you get hangers for clothing. Laura will hang everything up in the laundry room.\" Laura wore a garter belt of pink and white around her waist with matching garters. She had no other underwear on. I put a hand between her legs and she widened them, moaning as I fingered her. Tawny appeared from upstairs with a mitt full of hangers and stopped, staring at me as I thrust my finger into Mrs. Wills. What I saw in my sister's eyes was green envy. \n\nI waved Tawny down and she came over to stand before me, staring at Laura's exposed body. \"Hold her hands, will you sis?\" I pushed Laura's elbows forward. Neither woman seemed to know what to expect until I unbuckled my pants. I stripped while Tawny held Laura's hands. Anne took my clothing from me and stood to the side holding it all, waiting with everyone else. \n\nI was glad I had had the chance to fuck in a crowd before. I felt very conspicuous exposing my cock to everyone. No one seemed inclined to horn in on my little performance piece. I bent Laura forward, gripped her hips and pushed my cock between her thighs. She moaned. Anne moved immediately, holding my clothing in her left arm, she found and grasped my cock and proceeded to probe upwards till she managed to hook the end of it inside of Mrs. Wills' pussy. \n\n\"There.\" Laura sighed. \n\nI pulled her back and down, bending my legs to provide her a plane to lean against. Her body jerked as I penetrated up into her. Her body was luscious, steaming hot and damp. She received me and did everything but offer a key to the city. Her ass settled back against me and she groaned. Her voice filled the room like a puff of cigar smoke in a sauna. I could smell her arousal, wafting off of her body, seemingly from her very pores. She wiggled her ass, gripping Tawny's hands for balance. Tawny stared but licked her lips like a fashion model regards a cheeseburger. \n\n\"Jesus, Sonny, when is it my turn?\" Sammy growled. \n\nI pulled out of Laura. I ignored him, but not her. I turned her to face me. She straightened and when I pulled her into my arms, she kissed me, keening deep in her throat. Her body seemed linked to mine so I felt her arousal swelling inside her and her struggle to contain it. I separated from her. \n\n\"Hang up our clothes.\" I said to Mrs. Wills. \n\nShe nodded, took her clothing and the hangers from Tawny, mine from Anne and went to the laundry room. Laura wore only her stocking, garters with the belt and her bra. I took Tawny's hand and pulled her around to face the room. People were stuffed into the house, standing and sitting like a crowd in a train station waiting for a late train. Civil, close but not really touching. \n\nTawny wore a white blouse with a little mini skirt of green plaid and a vest that matched it. I turned her and moved behind her. \"Do you have skivvies on?\" I whispered in her ear. \n\nShe moved her head to the side so she could look at me. \"No. Why would I?\"\n\nI grinned, pulled her back against me and lifted the front of her skirt, exposing her pussy to the room. She groaned, caught by surprise but fully into the moment. I pushed her to her knees and she sank down, like a detonated building. I turned her to face the kitchen and moved in front of her. I presented her the cock that had been lately inside of Laura Wills. \n\n\"Suck me.\" I said distinctly. \n\nMy sister looked at my cock, up at me and then I saw her do the mental calculation. Her tongue appeared and she swabbed it around the head, presumably tasting Laura Wills for the first time. Her hand came up and replaced mine on my cock. She licked the dew off my cock and then kissed the end. She licked further down the glistening shaft and then sucked on it, pulling it into her mouth. Before she could suck me deeper, I backed up a step. \n\n\"Stand up.\" I said. She did so without hesitation. \n\n\"Bend over.\" I said. \n\nAs if by instinct, she bent forward, ass towards the kitchen and moved her hands to her ass, under her pleated skirt. I moved behind her and lifted her skirt. She pulled at her ass, arching her back. Her pussy squelched, like a sound engineer was tuning her. I moved closer and penetrated her, shoving my cock into her body. Tawny groaned loudly. Her shoulders twisted and twitched. I sank into her, pulling her onto my cock till her lithe ass ground against me and she clutched me with her interior pleasure, pulsing with the plunge to ecstasy. \n\nThe room went completely still and quiet, almost like they were holding their breath.\n\n\"Oh god, my brother is fucking me while everyone watches!\" Tawny said, her voice drawn and taut as piano wire. \n\n\"Jesus love me.\" A voice said. \n\nI looked around and placed it. Rebecca Kline stared along with everyone else. I thrust into my sister, pulling her ass hard against me. Her body clinched and then gaped and let me in. Her hips hitched up, ramming her body against me, filling her with cock. I pulled free of her. \n\nMy sister was panting, her body sizzling with the sensations shooting across her skin like static electricity. ",
        "I walked over to where Marie sat on the end of the couch. \n\n\"This is Marie. I met her the other day and fucked her. She wants to be double fucked someday and I told her she had to come here and join our little party. Please stand up.\" She did. I had to step back or her tits would have bounced me back. She wore a long sleeved sweater of a light blue with speckles of other colors in it, so tight her nipples peaked clearly with her excitement. When I touched the lower hem, her arms went up. I pulled it up and off of her torso, mussing her hair. Her face was serious, fixed on me. \n\n\"Marie, one of the guys in this room is going to fuck you. They will take you upstairs and you and he will use my sister as you wish. Eat her, sit on her face or whatever and then he is going to fuck you and cum in you. You are his today. He will do with you whatever he wishes. Do you understand? You are mine and I am giving you away for now, for this afternoon. Be good to my friend.\" \n\n\"Jesus.\" That was Quilla. \"That's going to be me.\" Her voice wavered with stress and, I hoped, arousal. \n\nMarie wore a thin bra which I removed. Her tits gave it form, not the other way around. Laura appeared and stood close by, taking each article of clothing as I removed them. Marie wore corduroy pants. I unbuttoned them and peeled them down her legs. She shivered. She had panties on and I took them down with her slacks. At her knees, squatting before her pussy inches from my face, I removed her tennis shoes and the rest of her clothing. She was nude. Laura took her clothing and disappeared into the laundry. \n\nI stood up. \"Suck me.\" I said softly. \n\nShe sat on the couch, put a hand to my bare thigh and drew me close. Her tongue emerged and licked at the drop of Tawny still on the end of my cock. She swirled her hot tongue around the head and sucked me, pressing her mouth clear down the length of my cock. Her full lips stroked me the whole way. I felt the sensation in every follicle of my body. \n\n\"Hey, shit, you started without us!\" \n\nI looked over at the stairs to see Charm and Holly descending them. Holly had her collar on and the chain was in Charm's hand. \n\nI felt the crowd see them, like a seething emotion made viscous and thick by the sight, the response to Holly and the chain swirled around me. Marie pulled off of my cock. When she made to turn around, I helped her to stand. She turned and bent over the little love seat immediately. \n\nI put both hands on her ass and spread her cheeks. She groaned but remained staring at Holly or Charm, or oh, I know, at the collar and chain. I felt her confusion, wanting Holly for herself but imagining the feeling of the collar around her neck and the implications that went with it. She jerked when I touched the crevice of her pussy. I put a finger between her hot damp lips. \n\nShe hissed, tilting her body to get more of something inside her. The prelude had warmed her up nicely. I crouched behind her and bent my cock, painting a glistening streak down one ass cheek. I touched the head of my cock to her pussy. Marie groaned, her body jerked again. I held her by the ass, thumbs tucked in the crease, holding her wide open. I thrust forward, penetrating her body with my cock. She bubbled around me. I felt like a boiled ear of corn thrust into a big vat of butter. There was no resistance and I sank into Marie till her ass bubbled against me. She held her pierced body tight against me. She shuddered with excitement, feeling the eyes of the room on her skin and my cock deep in the luscious cavern of her body. \n\n\"Holy shit, he's fucking her!\" Holly said. \n\nCharm just nodded. They sat down on the steps to watch. Charm hooked an arm around the smaller woman, her fingers playing along the side of Holly's breast. I saw an emotion on Holly's face that matched the feeling I had as I drilled deep into Marie's taut pussy. She grunted as I thrust into her.\n\nI held tight to Marie's hips. I ground her onto my cock. She was molten and slick inside, happily the preliminaries had proved to be foreplay. I pulled out of her plush body. \n\n\"God, look at her.\" Chris said. \"What a woman!\" \n\nI nearly smiled. \n\nI stepped back. Marie turned and sat down, the only fully nude woman in the room. Her face twisted with regret and lust laced with chagrin. I rather hated to rob the other guys of undressing them but the new women needed to be exposed and fucked to be sure everyone understood. I moved over to Rebecca. Kline. She stood up and turned her back to me. She'd been sitting on a kitchen chair by the table. \n\nShe wore a deep blue dress that clung to her rich body. Its profound curves were perfectly exhibited to the eyes. I put my hands on the cliff of her hips, pressing at her firm flesh. The room was utterly silent but for the rattle of breathing, air hissing between teeth. \n\n\"I am going to fuck you, Mrs. Kline the first.\" I said softly. \n\nRebecca Kline shifted her weight back and forth making her flanks undulate under my hands. I felt the muscles of her body tense and quiver. \n\nLovely snapped her fingers. \n\n\"Oh, my, oh yes. Yes, please, Mr. Duncan, please, please fuck me!\" Becky Kline's voice warbled in a well-trained response to the clicking sound. Her tone belied her words, sounding more like the fearful chant of a woman possessed. She was. \n\nI unzipped her again, just like I had the first time. Her bare back appeared, a great V of smooth, luxurious skin in the blue field of the tight dress. I peeled the dress off her shoulders, off each arm and then off her hips. It fluttered to the floor like a falling pigeon hit by a raptor. Laura appeared and when Becky stepped out of it, took it from my hands and waited to see if I'd undress her further. Becky wore a lace belt low around her hips that held the swatch of cloth that covered her pussy. I stripped it down, exposing her to the room. The stillness was a bit unnerving. No one moved and everyone seemed to breathe together, exhaling as her pussy was exposed. \n\nShe bent over me, balancing with one hand on my shoulders and I pulled the delicate panties down her full thighs. They were tight until just before the knees. I took off her shoes, removed her panties and stood up. She wore only the mighty bra containing her mighty tits. Her face was that same mixture of lust and terror I had seen before. \n\n\"Well?\" I asked. \n\n\"Hey Sonny, dude, take off the bra for god's sake!\" Sammy called from his position on the counter in the kitchen. \"Let us see those tits!\" \n\nBecky Kline blushed, bowing her head but she could not hide the little smile on her lips. She felt the waves of lust caressing her body as I exposed it and it enthralled her. I lifted her chin with one finger and kissed her on the lips. She kissed me back, murmuring guttural sounds as her mouth opened and her hands clutched at my shoulders. The quilted cups of her super-bra crunched against my bare chest. I felt the firm volume of her tits against me. I wrenched free from her, turned her to face Sammy and unhooked the industrial bra. The garment seemed to sigh as the tension in the strap eased. Becky bent both arms up and let it puddle in the crook of her elbows and then, like a teasing fan dancer, levered it down, exposing her breasts to that part of the room. I could see Sammy staring at the woman with glittering lust. He was not alone. Becky, fully mesmerized by the exposure, removed the bra from each arm and held it out with one hand, dangling it like a trophy, standing utterly nude in the midst of us all. Her breath rattled in her throat. Laura took the bra and disappeared again. I gazed around the room. I found Dalia, her eyes were glassy. \n\n\"Dalia, get some of mom's robes. The ladies may get cold.\" \n\nShe nodded but did not move. \n\n\"Now, Dalia.\" \n\nIt was like I snapped my fingers. She twitched, jerking into motion. She nodded and made her way upstairs. \n\n\"Well?\" I said to Becky. She sat on the chair and drew me close. She closed her eyes and opened her mouth. Her tongue extended. I shifted my body to put the tip of my cock against her tongue. It flinched back, then quested forward, touching and punching my cock with its living softness. It encountered a swell of liquid. It moved around, stroking my cock, clearing the frosting from it. Becky opened her eyes, pulling her tongue back to her lips and out of sight. She tasted Marie. She sat back a little then bent to look around me at the Filipino woman. \n\n\"She tastes sweet.\" Her voice rippled with amazement. \"It's true, I swear!\" \n\n\"Mother, suck him.\" Lovely said. \n\nI felt and heard the ripple go through the group as it soaked in that they were mother and daughter. That might not have been the best option, if I wanted to shine the spot light on Georgia but then again, she'd not have loved this little sequence drawing attention away from her. Good thing she was upstairs stewing, marinating while she waited for our attention. Her senses would soon overflow and she'd lose her sense of self as more ecstasy than she could ever imagine thundered through her. Eventually.\n\nRebecca Kline held my cock with one hand. She returned her attention to it and finally kissed it. She licked it. She sucked a third of my length into her mouth. \n\n\"She still needs practice, instruction on how to suck cocks.\" Lovely whispered into the panting silence. \"I have tried but I have no dick for her to practice on.\" Her damp chuckle punctuated her words. \"You can help me. She needs lots of practice.\" \n\n\"Shit, she can practice on me, any time!\" Sammy muttered into the viscous silence. \n\nI withdrew my cock from Becky's mouth. She looked chagrined, sitting before me, nude. Her eyes flicked from the cock before her face to my eyes. \n\n\"Stand up.\" I whispered hoarsely. \n\nShe did. Her great tits wavered before her, before me. I cupped them, feeling the sturdy heft of each in my hands. A shudder ran through her like an ocean liner running aground. \n\n\"Oh god, Sonny, please fuck me.\" She whispered, the words emerging like puffs of lust, eyelash soft but replete with urgency. I released her. Her eyes opened. She turned her back to me and bent over the chair. Her ass was the perfect height. I found her cleft and pushed a finger into her dry interior. She apparently dried up when she was nervous or scared. \n\nI stroked her pussy for a minute or two, until I felt it begin to slicken up. I withdrew my finger. \n\n\"Yes, Sonny.\" Rebecca Kline hissed. \"Fuck me. Put it in me. Mount me, please!\" Her voice held both amazement and lust, both pulled at me, demanding that I obey her instructions. I did. I opened her body with both hands. Laura reappeared and took a light grip on my cock. She directed it against Rebecca's pussy. She found the entrance to the woman's body and I thrust forward, pushing into Rebecca Kline's thrumming body. She was only slightly damp so I came to a halt buried half in her. She arched her back, lifting her hips. I pushed deeper. I felt her exhale, like tension escaping out of her. Her ass shifted side to side several times. She hummed as the motion worked the cock further into her. I grasped her broad hips and pulled at her, leaning in as I did so. \n\nBecky grunted and sat back against me. I slid into her suddenly silken pussy. Mrs. Kline groaned with my cock lodged comfortably inside her body. I gripped her by the hips and pulled her back till her ass bunched between us, scrunching up like a ruined car fender. I swirled around inside her for a moment, pushing my body against her bunched ass cheeks, feeling the sensations rippling through her body. \n\n\"Jesus rabbits, what a body!\" Sammy growled. \"My god, look at her tits, still perfect dangling down like that! It's a fucking miracle!\" \n\nBecky's head came up and she turned her face in the direction of Sammy's voice. \n\n\"He wants to fuck you, Mother.\" Lovely's voice licked the panting silence. Rebecca Kline gasped as though lacking oxygen. \n\n\"We all do.\" Landon muttered. \"Christ, Sonny, can you hurry it up. I'm losing skin layers over here.\" \n\nMrs. Kline dropped her head and pressed her body firmly onto my cock. She squished, the drought was over. A rivulet of liquid appeared on the inside of her thigh and trickled down to her knee. \n\nI pulled free of her. Becky dropped her head and hissed a little before standing straight, turning around and sitting. My cock was even with her eyes and she fixed them on our little bridge. She looked up at me. I thought she'd speak but she merely licked her lips with two, long, slow swipes of her tongue and returned her gaze to my cock, now frosted with her fluid. I waited to see if she'd taste herself but she remained still. \n\n\"The daughter, next.\" A voice said. It sounded so strained I had to look around to see who spoke. Charm had Holly crushed against her body. Her face was drawn and pale. Charm spoke again. \"The daughter, let the daughter suck her off your cock.\" \n\nI was a little surprised but it seemed like a good idea. I felt the welling of approval at the suggestion. Lovely sat on the arm of the lounge with Landon peering out from behind her back. She did not speak but got right to her knees. She pulled her lank brown hair away from her face with both hands. Her tits, unhaltered, rippled in her sweater. \n\nShe watched as I shuffled towards her. I took little steps, as though the dew drop on the end of my cock was liable to fall if I moved too quickly. She opened her mouth and sat up, eyes directed into mine, her dreamy lust drooling about her. I squatted before her. She looked surprised till my hands touched her sides and pulled the lower hem of the sweater out of her jeans. Her arms flew up. I pulled on her sweater and stood, stripping it upwards till it caught in her great tits. For a moment they resisted exposure but I added force and felt them release. They were still waving when I handed the sweater to Laura. \n\n\"My god, what tits.\" That was Brent. \"Like Mother, like Daughter.\" \n\nI grunted. I moved in line with Lovely's mouth, and touched the tip of my cock to her lower lip. She closed her eyes and pushed her head forward, falling on my sword like a disgraced Roman. She took it completely into her mouth in one great gulp. Her throat gaped and she inhaled my cock. Her breath stopped and I felt the bands of her throat rippling around my cock. Her tongue dashed about like an excited puppy around a team of horses. She sucked, hard.\n\nThe stimulation nearly unhinged me and by that I mean my vision tunneled and my knees weakened as the orgasm threatened to fall on me. I rallied, put a hand on her forehead and pushed her off my cock. She released it with loud, exaggerated pop. The girl had skills and she was proud of them. She rose off her knees like a lifting fog. She unbuttoned her blue jeans and pushed them down. \n\n\"Table ready!\" She said with an airy smile. She'd removed her shoes sometime earlier. Laura knelt, found her shoes and pulled the jeans off each foot. Lovely turned around, naked now, and bent over the arm of the recliner. She turned her head and kissed Landon on the lips. His hand came up, captured the back of her head and held her in place. His other hand cupped a dangling breast. \n\nLovely arched her back, lifting and opening her ass. Laura Wills probed between her lean cheeks. Lovely's body jerked and we all heard the squelch as Laura's finger penetrated the younger woman. Laura nodded, turned to me and took hold of my cock with her other hand. She drew us together, pointing my cock at Lovely's pussy till I sank into it. Laura stepped away to deliver the clothing. I rammed into Lovely's bent body. The position put a tension in her pussy but still, she was pudding smooth and Amazon wet and I don't mean the online book seller. I grasped her by the hips and slammed into her. Her back bowed with the force of my entry. She enveloped me like ink swallows a marble, like nights swallows lovers. \n\nI felt her body pulsing around my cock. Her hips jerked and her lower body bucked. She kept kissing Landon. Sammy, sitting on that end of the couch close by, leaned over and palmed her free breast. Lovely registered the additional attention by tensing her pussy around my cock. She hitched her hips and then ground them back against me. I responded in kind. I had firm hold of her hips and I pulled her back onto my cock. I straightened my legs just a bit, thrusting up and deeper at the same time. \n\nLovely hummed, keeping the kiss with Landon intact while crooning deep behind her dangling tits. the two hands on her must have responded because Lovely's tone changed. I pulled back and hammered into her pussy. The tone changed again and then she tore her lips from Landon's, wrenched her head loose from his confining hand. Her head dropped. Her hips rose to meet my next thrust and she whimpered, hips bucking faster and faster as she fucked herself on my steel-hard cock. \n\nOver and over her hips rammed her pussy onto my cock. I gave her a nice stationary target, my hands rode on her flexing hips. \n\n\"Oh my loving pussy!\" Lovely muttered, then her body bucked and she jerked and she screamed. Her head came up. Tendrils of her brown hair streaked her contorted face, turned to look back at me, though her eyes clinched tightly closed. Her hips tensed, went still, bucked once more and her head dropped again. \"Oh yes!\" She whispered, sighing around the pleasure oozing out of her. \n\n\"Jesus, she came. Just like that!\" Quilla said. She sat on the other side of Sammy. \"Wow. My turn.\" \n\nI agreed by pulling my cock out of Lovely. Frankly, I'd lost count and was thinking I only had Aunt Norma to do next. I'd forgotten Quilla. Perhaps she sensed that and elbowed her way to the front of the line, not to be forgotten. \n\nI left Lovely, stepping around her. She struggled upright, turned and sat across Landon's lap. He squirmed a little, likely trying to get his cock out of the way. She bent to him, pressed her tits against his face but held him by the head, tipped it back and kissed him. His arms wrapped around her and their awareness of the room vanished. \n\n\"Sonny, please.\" Quilla whispered. \n\nI moved to stand before her. Chris sat to her right, my left, and Sammy to her left, my right. She looked up at me. \n\n\"This is Quilla Favors. Sean's contribution. His sister I mean. We are going to fuck her with her mother but that is for another day.\" I spoke to the room but it was directed at the pricks in it. I kept my eyes on her, however, and she held my gaze, almost glaring at me. Apparently she didn't like the delay my little speech caused but what redhead do you know who is long on patience? \n\n\"Shut up.\" Quilla said. \"Let me taste her.\" \n\nI knew what she meant and she meant it. She pulled me close and licked lasciviously at my cock, as if you can do it any other way. She sucked on the end and then pulled part of it into her mouth. She needed way more practice than Lovely did. \n\nLovely! Man, that girl had talent when it came to sucking cock. Quilla seemed to be in a hurry. She sucked at my cock for a moment and then scooted forward out of the well of the couch cushions. She was trying to stand up and keep my cock in her mouth. Not sure why but she gave up and stood up. \n\n\"Do you want to fuck me?\" She whispered. \"God, you fucked them all. I have never seen that. Ever. I am so horny, I want to do every cock, dick and cock in the room.\"\n\n\"Yippee!\" Sammy said beside her. \n\nI nodded. She wore a flannel shirt with long sleeves. It was a lumberjack shirt with the big red squares for the black pattern. I casually unbuttoned the top button. She had a chain belt on her blue jeans. One button after the other I undid her shirt. She stood before me, quivering. She wore no bra. Her tits sat up, pointed cones of lush goodness. When I got to her waist, I pulled out the shirt tails and undid the last button. \n\nLaura appeared beside me and removed the shirt. She touched my shoulder. When I looked at her I could see an inquiry in her eyes. I wasn't sure what she wanted but nodded, just to find out. Mrs. Wills bent over and sucked the point of Quilla's near breast into her mouth. Quilla's eyes rolled up into her head. Laura left the breast to stretch for the other. Quilla's hand came up and cupped the back of Laura's head. Together, they agreed to move Laura higher till the red-headed Quilla and the half-dressed blonde could kiss. They did, loudly. ",
        "They both moaned together. \n\nFor a moment I focused on their breasts, Laura's bra crushed against Quilla's bare tits. Lucky bra. \n\nI put a hand on Laura's shoulder and separated them. I thought better of my interference and stepped back. \"Strip her.\" I said. \n\nLaura acted like a spotlight had found her. Her hands fluttered up to the chain belt and fumbled there for a moment. After a while, she loosened it and unbuttoned the jeans. She pulled them down Quilla's slender hips and lithe legs. They wadded up at mid thigh. Quilla did not move but let Laura wrestle them down, like a princess permitting her maid to handle her body. Her jeans were tight and clung to her like bark to a tree. At one point, Laura got frustrated with the struggle and pressed her face into the bare crotch of the younger woman. She kissed Quilla's pussy. Quilla chirped once and then her hips jerked, pushing Laura away. I pulled the blonde away from Quilla and she took the clothes away. \n\nMy attention had contracted to the two women. It expanded now and I encountered the silence again. It seemed so unreal, almost artificial. I had a brief thought that I'd gone deaf. Maybe there was such a thing as too much pussy.\n\n\"Sonny, please, now. Put it in me.\" Quilla eased my fears. \n\nI nodded. I turned her around. She bent over the couch, putting her hands on the cushions then clasping the back of it for balance. I peeled her body open, probing between her legs. She was shaved clean. Her pussy nibbled at my finger and then as if by magic, I was inside her. I felt her ridges and furrows, all coated with her thick nectar. It seemed viscous, more than the other women, almost like a glue. I withdrew my finger and replaced it with my cock. Despite her jellied pussy, I slid into her completely the first try. She was open and willing. \n\nShe grunted and I felt her pussy contract on me. Sammy had clutched one bare breast and Chris had helped himself to the other. I gripped her by the hips and slammed into her, bumping us together. She moaned and her hips arched. I could feel the quivering desire in her, the longing for orgasm emanated from her like a sighing crowd when a concert starts. I pulled out of her. \n\nAunt Norma sat on Brent's lap next to Marie on the loveseat. Sean had taken a seat at the table around the corner from where Becky Kline sat in all her naked glory. Norma watched me like a hawk as I shuffled towards her, Quilla's thick goo dripped off my bobbing cock. Norma reached out and caught the hanging webbing and took it right to her mouth. She tasted the woman and blinked, nodding. \n\n\"Different that...uh...different.\" She mumbled. \n\nBrent had an arm around her waist. She wore lime green slacks and a fuzzy white sweater, more of a summer look than good for winter. He held onto her so she bent forward, lowering her mouth towards my cock. Her thumb and finger captured it. Her tongue slathered along the length of it and around the crown before sucking me deep into her mouth. Brent looked up at me, his face a melange of emotions. He widened his thighs and Norma dropped between them onto the cushion of the loveseat. That pushed one of Brent's legs against Marie. She flinched like it was hot. \n\nNorma enveloped my cock. Something seemed completely different about her mouth. It was cold and then I felt it, the searing chill of the ice in her mouth. She pushed the chunk of ice up and down the portion of my cock in her mouth, losing it each time she got it to the head. The cold startled me. The ice melted, her mouth warmed and she pushed my cock deeper till the head bumped against the back of her mouth. She gagged a little and backed off. \n\n\"Time to fuck Aunt Norma.\" She chortled. She struggled to get up but Brent didn't release her. \n\nI mentally shrugged. Brent was being a butt but I didn't care. Greed wasn't my problem. \n\nI found Annie with my eyes. She leaned her shoulders against the wall near the entrance, her hips thrust out so she formed a little half-arch, like she was offering her pussy to any passers-by, like me for instance. Her tits were little nubs in her dress. Her hands were behind her, against the wall. \n\n\"Annie.\" I said. \n\n\"Anne.\" She replied with a wispy smile, her eyes were little inky pools of lust. \n\n\"Your turn.\" I said.\n\n\"My turn.\" She echoed. She pushed away from the wall and took two steps towards me. \n\nI moved towards her, caught her by the elbow. I steered her towards the stairs where Charm sat clutching Holly like the smaller woman was a stuffed toy. I moved behind Anne and sought the hooks and latches of her dress, finally realizing the zippers where under her arms. \n\n\"Holly, did you go down on Charm yet?\" I felt Anne's hot skin in the seam of both zippers. She sagged back against me. I pulled the dress off her square shoulders and off each arm. It ruffled around her waist. I pushed it off her lean hips and down her legs. The dress was long so when it reach her knees, I realized she had boots on. With the garters and no panties, she appeared exotic and erotic at once. Her breasts were inviting behind her little bra.\n\nHolly was shaking her head, her mouth was open and her eyes were fixed on Anne's body, flicking up and down, I presumed from breasts to Anne's bare crotch, replete with silken black pubic hair. I unhooked Anne's bra. It slid down her arms. Laura appeared and moved the dress down to Anne's ankles and helped her step out of it and then disappeared with it and the bra. \n\nAnne stood in front of me in stockings, garters amd the sexy black boots. My consistent desire for her flared. I put a hand on her hip. She sighed, hissing like a cooling tea kettle. I crouched behind her, looping one arm around her waist. I directed my cock between her legs. She was taller with the boots, a nice, accessible height. I found her pussy and entered her. She moaned, stiffening as I penetrated her body with my cock. She grunted and I felt her weight sag back onto me. I slid up into her pussy. Anne moaned, her voice hitching and clicking around tones that had only one meaning, announcing she was being fucked. \n\n\"Sonny, what are you doing?\" Charm asked. \n\nI opened my eyes. I had a hold of Anne's elbows, pulling against her forward lean. Her ass flattened against my body and pulsed around my cock rooted deep inside of her. I controlled her with her elbows, her arms flexed back behind her, bent from her waist where we were connected. I could pull on her arms and increase the pressure on my cock, and relieve it. Anne panted with lust. \n\n\"What are you doing?\" Charm repeated.\n\n\"Uh, fucking. Pretty sure I'm fucking.\" I grunted. \n\n\"Uh huh.\" Anne offered her assessment. She rocked forward and then let her weight teeter back against me. Up and back, she fucked herself onto my cock validating my assessment. \n\n\"What are you doing, Sonny?\" Charm asked. \n\nI opened my eyes again, not really remembering closing them. I pushed Anne further forward and with the additional slack pulled her harder back onto my cock. I lost my balance. We nearly toppled backwards onto my ass. The flinch in us both separated us and I realized I'd have come if I'd remained inside Anne. God but that woman did love to fuck. \n\nI straightened. The strain of fucking so many women and not coming twanged in me. \n\n\"Miss Davis,\" I began but lost my train of thought. I was staring at her. I turned around, scanning and found Dalia. I had not marked her appearance. She stood by the door to the laundry, arms full of Mom's many colored robes. She met my stare and looked around for Laura, handed her the robes and came to stand near me. \n\nI took her by the arm and moved her towards Charm. She moved over to join Charm and Holly's little enclave. \n\n\"This is my other sister, Dalia. She, Holly there on the stairs and Charm with her, they get no dicks today. They are just observers, UN observers who want to monitor our activity. The women I just fucked...\" I hesitated, \"...Norma, if you want in on this, you need to come have a little dick.\" \n\nShe scrambled free of Brent, stood up and after giving him a reproving look, came over to stand where Dalia had. Dalia reached down to take Charm's hand, standing to the side of the stairway beside her. \n\n\"I am going to give numbers to each of us dicks and letters to six of the women. Written on paper. Laura, they are in my pants, would get them them? Match your number to the letter, one to A, two to B, like that. That is your woman for today. Whoever is one, go upstairs and use Georgia. If you come, come in your woman. Okay? Any questions?\" \n\n\"The watchers?\" Sean asked. \n\nWhen I looked at him, his eyes were on his sister. I could not tell if he was anticipating having her or dreading it. She was looking at me. \n\n\"They watch. Miss Davis is a lesbian so if you approach her with your cock, she might snap it off and take it home, so steer clear. She isn't mean, she just isn't cock-ready. Holly is on a cock diet but she is going to go down on Charm for us at some point.\"\n\n\"There are extras.\" Brent said. He'd stood up and was leaning on the mantle at the fireplace. Leave it to Brent to do the count and get hung up on the incommensurable numbers. \n\nI pulled Anne back under my arm. She looked up at me. Her face was completely bland but she snuggled against me. God but she looked sexy!\n\n\"The spares you can have as you like if you can catch them.\"\n\n\"Even Tawny?\" Chris asked from his position on the couch. \n\nTawny had drifted into the kitchen and had been refreshing drinks. Her head came up and fixed her eyes on me. \n\nI nodded. \"Not Tawny. Someone gets Tawny. She gets a letter and a dedicated dick. Each woman will go down on Georgia. She's shackled up in Mom's room.\" \n\n\"What about her?\" Chris nodded at Marie. \n\nI smiled, my little secret tickled me. \"She's a letter.\" \n\nLaura appeared from the laundry. She had both sets of papers, one in each hand. \n\nI had thought to just set people loose on Georgia but I changed my mind. \"I want us to use Georgia, particularly the women but I want to tease her until it is time to team-up and do her. She should be cock crazed by then so when three of us enter her, she comes unglued. So, she can suck you but be careful with her pussy and keep her on the ragged edge of climax.\"\n\n\"So, tease her, you mean?\" Charm spoke with a graveness that startled me.\n\n\"You can too, I suppose. You're UN observers and can observe freely but you have to keep Holly in check. No dick for her no matter what she wants or does or says.\" I was looking around the room at everyone, having a moment of amazement to see them all focused on the proceedings. \n\n\"Don't worry. I can't be bribed. Not by her anyway. She needs way more practice.\" \n\nI looked back at Charm. She wore a cut away white dress that exposed her almost totally in front below the crotch but draped behind her, forming a little fall that framed her impressive legs, sheathed in black hose. \n\n\"Miss Davis, would you care to come for us? I would like each of the fucked to eat you and see if you can come for us. Your contribution, or is that too much to ask? Your price of admission or maybe the admission of your price.\"\n\nHer dark eyes, now shaded with her retro eyeshadow, black and foreboding, regarded me. \"I have never climaxed in a group before. I don't know if I can.\" She smiled a lean grin. \"I'll try. Seems the least I can do since you haven't tried to fuck me even once.\" \n\nI felt my heart hammer harder in my chest. It must have affected my expression because she continued. \n\n\"I am not complaining. I don't feel slighted. I worried that you would be ungracious if I didn't surrender to you but, as you say, we are both lesbians but from different sides of the tracks.\" \n\nI smiled. \"So, if my women go down on you...?\"\n\nShe returned my smile with one of her own that was almost warm. \"I would be pleased, if I can be pleased.\" She wagged a finger at me. \"That's all though.\" \n\nI took one of the sets of paper from Laura. It was the numbers. \"Laura, put these in the pot Sammy got and offer it to the dicks. I'll go last.\" \n\nShe did. I got four, the number remaining after everyone else drew. \n\n\"Now these six women; Marie, Norma...I still have to fuck her but let her draw. Quilla, Tawny, Lovely, and her mother Rebecca.\"\n\nLaura handed out the letters.\n\nEveryone had their assignments and were looking around at each other. The mostly nude women were finally inspecting the cocks in the room. \n\n\"Who has A?\" I asked. \n\nTawny stepped forward, half-raising her had. I looked around the room and I could see Brent had number one. I fucked with him a little. The look of anticipation on his face was priceless so I had to keep him waiting. \n\n\"Dear Sister, its time for you to kiss a pussy.\" \n\nHer eyes widened. \"Charm?\"\n\nI nodded. \n\n\"Oh god, Sonny, do I have to?\" \n\nI shook my head. \"You don't have to do anything you don't want to do.\" \n\nShe stepped back. I glanced at Charm but her face was impassive. \n\n\"Holly, does Charm have panties on?\" I muttered.\n\nHolly shrugged. \"I don't know. Georgia doesn't for sure.\" \n\n\"Well, find out.\" \n\nShe looked shocked for a moment. Charm's arm released her. Holly moved down the last three steps to her knees and maneuvered between Charm's legs, pushing them open like she was going through a turnstile to get to the underground, which I guess she sort of was. She looked up at the black-haired beauty and hesitated. \n\n\"Just like you did with Georgia.\" Charm whispered but plenty loud enough for anyone to hear.\n\nHolly ran her hands gently up Charm's stockinged legs. They disappeared under the drape of the white dress. \n\n\"Her garters are on over the thong.\" Holly reported. \n\n\"Dalia, scissors.\" \n\nDalia hesitated. By the time she moved, Tawny had a pair in hand, gave them to Dalia who handed them to Holly. Holly reached into the V of Charm's body and pulled out a thin black string. She cut it twice and then pulled the swath of cloth that made up the thong out from between Charm's legs.\n\nThe sensation affected Charm. Her chin raised and her eyelids covered half her eyes. She sighed a little. I hoped she wasn't acting and that she was really into the situation. \n\n\"Who has number one?\" I said. \n\nHolly stood up, handing the scissors back to Dalia who put them on a table by the stairs. \n\n\"I do.\" Brent said. \n\nI scanned the room. \"Well, you have the option of taking A or selecting someone else.\" That caught everyone by surprise. I could sense it in the air. Suddenly everyone was looking around again but seeing each other in a whole new way. \n\nBrent cleared his throat. \"I...uh...ah...A...that is fine with me.\" He blushed up into his scalp. \n\nI grinned. \"You mean Tawny?\" I looked at Tawny. \"Okay with you?\" \n\nTawny's eyes were huge. She nodded. \n\nI nodded. \"Go on up. Tease Georgia.\" I said softly. I reached out to Tawny and she came close. I pulled her into a light hug. \"Sit on her face, let her taste you. You don't have to taste her if you don't want to but, if Brent puts his cock in her, you should, just to get an idea of what you're missing.\" I whispered into her ear. I released her and she stepped back, looking like a bride with the best man's hand in her knickers. \n\nBrent stepped around people and came over to the stairs. Holly got up and Charm scooted to the left to let them pass. Tawny and Brent went upstairs. At the last, I saw Brent turn around and offer Tawny his hand. She hesitated and then gave hers to him and followed him upstairs to her fate. \n\n\"Who has 2?\" I asked. \n\nSammy waved his paper. \"Here, here!\" He chortled. \"Me, me, me!\" \n\n\"Who has B?\" I asked. \n\nLovely wriggled off of Landon's lap. \"I do. I am.\" She said, her voice puffed at us. \n\n\"Undress him and blow him.\" I said. \n\nSammy didn't wait for Lovely's help. He was naked in a flash, his hard cock beckoned to her. Lovely got to her knees where he stood by the couch. She sucked his cock into her mouth. \n\nSammy's eyes went closed. His hips jerked and his eyes opened. \n\n\"Uh, uh Sonny, come or, or not?\" \n\nI shrugged. \"You can select someone else if you like.\" I said. I saw his eyes flick over to Rebecca immediately. \n\nSammy pointed at Mrs. Kline. \"I, oh god, I want her!\" His eyes closed. \"God this girl can suck, though!\" \n\nI gestured to Mrs. Kline. \"Becky, come kiss Charm's pussy.\" \n\n\"Oh my god.\" Charm whispered. \"Really? All of them?\" \n\nI turned to look at her, pointing my loaded gun at her. Her eyes flicked down to my very hard cock. She looked worried. I wasn't. I don't load the gun if I don't know where the safety is. Anne, seeming to understand what was happening, wrapped a friendly hand around my cock. Charm looked me in the eyes then, somehow reassured that I was taken properly in hand.\n\n\"If you care to have a little taste, feel free but otherwise, let them taste you and then its cock for her.\" Suddenly I realized I had forgotten something. I made a face, grimacing with the thought. \"Dalia, can we use your rooms. I mean to fuck in? Is there a problem with any of the rooms?\" \n\nFor a moment she looked got but then shook her head. \n\n\"We'll, the sheets, it'll be okay, if we don't go too late. We need to wash and change them.\" Her voice cracked with tension and something else. \n\nI nodded. Becky had stood up but not taken a single step. \n\n\"Laura, bring Becky here, would you?\" \n\nLaura did. Becky looked horrified. Her great breasts billowed before her, her impossibly lean belly below them seemed miraculous. \n\n\"On your knees. Lick her pussy, make her come if you can.\" \n\nShe nodded dazedly. On her knees, she looked up between Charms parted legs. Charm peered down at this strange woman. \n\n\"Show Holly how to eat pussy.\" I said to Becky. She twisted to look at me and then nodded absently. Becky's whole personality seemed to change when her tits were bare.\n\nShe ran her hands up Charm's sheathed legs like Holly had done. Charm slumped on the steps, stretching her legs out akimbo to each side of the larger woman. She caught my eye. \n\n\"I want to, I want to touch her.\" Charm said, her voice husky and rough. The smooth syllables she usually used were gone. \n\nI nodded. \n\nCharm sat forward, reached down and grasped Becky's pendulous breasts. \n\n\"My god, she's huge. They're, they're incredible!\" \n\nBecky moaned at the attention. \n\n\"Eat her.\" I growled, needing her distracted for the next moment. \n\nOne of Charm's hands left its breast and guided Rebecca's face between her legs. I moved to the side and saw clearly when Becky reached out with her tongue and contacted Charm's pussy. Charm grunted and fell back, releasing Becky's breast. \n\n\"Kiss it.\" Charm whispered raggedly. \n\nBecky did. \n\n\"Uh, put, put your tongue in me. Touch me! Touch me like you like to be touched.\" \n\n\"Like Lovely eats you,\" I added. \n\nBecky moved a hand to Charm's pussy and a moment later, Charm's hips bucked off the step. Charm groaned and her head lolled back. The lovely lesbian sprawled on our steps. \n\nI walked over to Lovely, on her knees before Sammy. I tapped her on the side of the head, once, twice, three times before she exhaled Sammy's cock. \n\n\"Sammy, fuck her.\" I muttered. \n\nLovely stood up but I pulled her against my body. She mewled, pressing her tits against me and laying her head against my shoulder. Her body quivered with excitement. She wanted cock. I could tell she was wishing for it but she said not a word.\n\nSammy moved around us, got to his knees behind Becky and entered her. \n\n\"Oh my god!\" He grunted as his body slapped against Becky's ass and it crumpled between them. \"My god, what a body! What an ass!\" \n\n\"That's good. Take her upstairs and use her up. We'll find you when its time for you to share Georgia.\"\n\nSammy pulled Becky from between Charm's legs. She handed me her paper and they went upstairs. \n\n\"Who has C?\" I asked. \n\n\"That's me.\" Norma said. ",
        "I gestured her over. I'd forgotten to fuck her. So sue me.\n\nI felt Lovely shifting against me. I had an idea. \n\n\"Want to undress her for me?\" I asked Lovely. She moved immediately to Norma and removed all of her clothing. Laura took it and hung it up. Lovely came around from behind her, cuddled up against her tits and kissed her. For a moment, Norma seemed nonplussed but then she relaxed into the embrace from the younger woman. They disappeared into a kiss.\n\n\"Isn't it my turn?\" Charm said from the stairs.\n\nThat put my mind at ease. She was into it enough to say that. \n\n\"I have three.\" Chris said from the couch. \n\nNorma separated from Lovely, went to Chris and sucked his cock into her mouth. \n\n\"Aren't you going to ask me who I want?\" Chris asked. \n\n\"Allow me.\" I returned. I saw him swallow his objection. I hesitated long enough to let a tiny bit of drama build. I went to Marie and offered her my hand. She rose from the love seat. I led her over to Charm. She handed me her slip of paper. She had D. \n\n\"Lick her pussy.\" I whispered. Marie looked at me, her face pleading for different instructions. I looked at Charm. \"I don't think she's ever done that.\" \n\n\"Darling, its easy, come try. Sonny will reward you with a cock of your very own.\" \n\nMy pattern was clear to Charm at least. \n\nMarie did exactly as Rebecca had done. She did not speak even a word. Charm used her hands to help arrange the woman's mouth and in a few moments, she muttered, \"Oh yes, just...uh...like that!\" \n\nLovely stepped around the kneeling woman and cuddled up to me again. Anne cuddled up to me on the other side. As if introducing themselves, they leaned around me and kissed lightly against my chest before cuddling up to me again. \n\nOn the couch, Chris pulled Norma off his cock. She sloughed off to the side and watched him stand up and strip. She didn't offer to help. Chris, naked, came over to where Marie knelt between Charm's open legs and positioned himself behind her. She grunted and lifted her head from between Charm's legs when he entered her. Chris slapped against her ass a time or two and withdrew. \n\nThey went up stairs. \n\n\"I have four.\" I said. \"I'll take Annie.\"\n\n\"Anne.\" Anne said. She reached up and kissed my neck. \"You are a sweet, sweet man.\" She said. \n\nI had it in my head that whoever had six would get the extra pussy. For waiting and for having no choice. \n\n\"I have five.\" Landon said. He stood up and started taking off his clothing. \n\n\"Rebecca had E.\" I said. \"So you can choose.\" \n\nLandon looked at Quilla sitting all alone on the couch. \"I want her.\" He said. She nodded, got to her knees and blew him. After a couple minutes, he helped her up. She took her position between Charm's legs. Quilla looped her arms under Charm's knees, tipping the angular woman up before pressing her mouth to the pussy before her face. \n\n\"Oh, oh, oh my! This one knows about eating pussy.\" Charm cried. \n\nI nodded at Sean. \"You have six so you get Lovely here, and Norma, if you want them both.\" \n\nSean looked embarrassed but nodded. He stood up. \"Come take off my clothes. I always wanted to be stripped by two beautiful, naked, beautiful women! Sexy, I mean, beautiful, naked and sexy women!\" \n\nLovely left me and with Norma, they stripped Sean. When they confronted his odd cock, they looked at each other and got to their knees. They stood on their knees as if they had arranged it before hand, and embraced, kissing like lovers while Sean looked on, his cock bobbing beside their heads, awaiting their attention. \n\n\"Oh shit, I better go get Tawny and Brent out of Georgia.\" I grabbed a robe and danced up the stairs, leaving Anne watching Quilla eating Charm.\n\nI opened the door to Mom's room. Georgia was shackled to the headboard. Tawny sat astride her face and Brent was tonguing Georgia's pussy. He was deep stroking her and every so often, her body would contort, rattling the shackles on her wrists. \n\n\"Time. Time to switch.\" I said into the room. \n\nTawny crawled off her sister's face. \"She can't do two things at once.\" Tawny said. \n\n\"I just need practice.\" Georgia said, delight in her voice. \"Oh my but Brent has promise!\" Her eyes traveled down Brent's body to his cock. \"Mom took that in her ass? Really?\" \n\nBrent ignored her. He left Georgia's pussy and pushed Tawny down to her knees. \"Suck me.\" He said through gritted teeth. \n\nTawny licked at his cock. Georgia watched with avid interest from her position on the bed. She scooted up so she could lean against the headboard, arms dangling out beside her. \n\nAfter a moment, Brent lifted Tawny to her feet, bent her over her sister's legs and entered her from behind. He thrust into Tawny a few times before pulling out. He looked at me. \"She, uh, Georgia wanted to see me fuck her before we left.\" \n\n\"Find an empty room and you can fuck her to screaming.\" I said. Brent nodded. He seemed utterly intense. It amused me but I supposed there was some excuse for being intense; he'd fucked one of my three sisters and had designs on the other. \n\nWhen they were gone, Georgia cocked her head. \"Sonny, I thought this was for me only.\" \n\nI shrugged. \"I know. I thought it'd be more interesting this way, since you care for a little pussy with your dick.\" \n\nHer eyebrows raised. \"I'd never have asked for that but you know, eating Tawny...well, it was a good idea. She said you have a woman for everyone.\"\n\nI knew what she was asking without asking. \"We are going to do you in all orifices at the same time with people watching. Don't worry.\" I left her to find Sammy and Becky.\n\nThey disappeared into Mom's room and I returned downstairs. Lovely was eating Charm. Charm was coming around for the third or fourth time. She shifted a little as I descended, her eyes bleary with arousal. I got my feet on firm ground and Charm moaned with new ecstasy. Lovely was an oral wonder.\n\nI slipped an arm around Anne. \"You're stuck with me, I gather.\" Anne said. \n\nCharm began to huff and in moments she tensed, her hips bucking and jerking. \n\nI nodded. \"Not stuck. I get you though. We'll direct things.\" She smiled, reached up and kissed me on the cheek. \n\n\"I know you included me when I don't fit. It is sweet of you.\" She was smiling but sobered. \"I have not forgotten I owe you my niece. She is in school, still. When she is done with this quarter, I'll bring her here and you can have her. A year, since she made me wait. We pay our debts.\" She tossed her head. \"Debts gain interest so you win. Jillian will thrill you, or I'll have to find another way to repay you.\" She smiled and for a moment it felt like a velvet threat. I was confused about which to ask Santa for. \n\nCharm pushed Lovely away. She was gasping and panting. \"My god, girl, are you sure you like cock?\" \n\nLovely rolled her shoulders, making her breasts bob and weave. \n\n\"I think bodies are delightful. I like making you feel good.\" \n\n\"You make me feel good. Now go take care of Mr. Oddcock over there.\" \n\n\"Find a bedroom upstairs and I'll get you when its your turn to have Georgia.\" \n\nCharm struggled to her feet, rubbing her ass. \"I need a better place to sit.\" She said. She, Dalia and Holly adjourned to the now empty couch. Dalia sat on one end while Charm took Holly in her arms and proceeded to kiss her breathless. \n\n\"Anne, do me a favor.\" I stopped. I went up stairs and found a spare chain from the jewelry store. I went back down stairs to Anne. \"Anne, go find Chris and Marie. Put your collar on Marie, attach the chain and give it to Chris.\" \n\nShe nodded. I went and sat down. Charm had exposed Holly's impressive tits by then and was kissing them. They had a little dialog about the finer points of eating pussy. Anne reappeared. I sat on the loveseat. She got astride my legs and began kissing me. I found I was ready to fuck somebody. I was frustrated by the delay but distracted by the thought that I needed to keep things moving. \n\n\"Dude, Sonny, hey Sonny, who's next?\" Sammy called from the top of the stairs. \n\n\"Chris.\" I called back. Anne took hold of my cock, pushed the robe wide and mounted me, settling her hot little body down onto my cock. She hugged against me, shuddering as she rooted my cock firmly inside of her pussy. \n\n\"Sonny, god, I love your cock.\" She whispered. \n\n\"Sonny?\"\n\nI opened my eyes. There was Chris with Marie in a collar and chain. \"Yeah?\"\n\n\"What now?\" \n\n\"Your turn with Georgia.\" \n\n\"To do what?\" \n\n\"Whatever.\" I muttered. \"When it's my turn, Anne is going to eat her while I fuck Anne. Use them both however you like. Oh but don't let Georgia come. She has to wait till we can all watch.\"\n\nChris shook his head. He knotted his hand in Marie's hair and kissed her savagely. She wound around and clung to him, sealing her naked body against his. The silver chain swished against her brown skin. Chris wrenched free from her. \"Where did you find this one? God, I love fucking her.\"\n\nI almost smiled, pleased to have calculated the matter properly. Again. \n\n\"Georgia's waiting.\" \n\n\"No. Mom is cleaning her up.\" Chris blinked at me. \"I want to fuck Marie and Mom with Georgia. Is that all right?\" \n\n\"So long as no one needs Laura. She'll be in demand when people start fucking for real.\" \n\n\"Honey! We're ready.\" Laura called from upstairs. \n\nChris led Marie on the chain up stairs. Perfect. She mounted the stairs, the chain dangling from the silver collar around her neck, arms folded under her impressive tits. She appeared docile and even content. Another \"A\" for Sonny!\n\nCharm stood up and removed her dress. Dalia took it into the laundry and hung it up. \n\n\"What?\" Charm said when she found me staring at her lank, nude body. Semi-nude. She wore no bra for her breasts were but spare mounds. That left only the garter belt and stockings. \"Everyone else is naked, I suppose I ought to be.\" \n\nI nodded agreement. \n\n\"Don't stare. You'll make me self-conscious.\" \n\n\"Can't help it.\" \n\nAnne, understanding I wasn't paying attention, tightened her pussy on my cock. I closed my eyes and Charm disappeared. The next time I opened them, Holly was between her legs. They were discussing pussy diving in great detail. To the side, Dalia eyed them but I know she was staring at Anne's hips lifting and dropping.\n\nAnne sat astride me. \n\n\"I have never attended an orgy before.\" She whispered in my ear. \n\n\"Me neither.\" I returned. I had the urge to put Anne on her back and fuck her but I wanted to save that for Georgia to see. \"I don't know how to organize an orgy.\" I mumbled. \n\n\"This is fine.\" Anne said. \"You have a flair for it, I think. Do you want to come?\"\n\nI shook my head. \"I want to fuck you while Georgia watches.\" I whispered. It was still too loud. \n\nCharm sat up. \"I want to see you fuck her too.\" She said, glancing around at Dalia. \"I'm not the only one, I don't think.\" Dalia's face was bright red. \n\nHolly stopped what she was doing and looked up. \"That bad?\" She muttered.\n\n\"Practice, practice, practice!\" Charm returned, pushing the smaller woman's head down between her legs again, rattling the chain at Holly's collar. \"How many women do you have in collars like this?\" She asked me, then groaned deeply. \"That's better, Holly. Try to do that again.\" \n\nHolly sat back. \"I am clueless. I have no idea what I did.\" \n\n\"Experiment.\" Charm returned. \n\nDalia sat on the end of the couch, transfixed, eyes darting back and forth from Holly eating Charm to Anne fucking me. \n\nFor a while we were silent. Well, not really silent. Anne moaned as she ground her body down on my cock and Holly and Charm kept up their QA exchanges. Dalia just stared. At one point, Holly mouthed Charm's pussy and pushed her tongue deep, on instructions, into it. Dalia sat forward, staring down at them with intense interest. \n\n\"Sonny. Your turn.\" Chris called from upstairs. I helped Anne dismount and she wobbled till I put an arm around her waist. She smiled up at me, a bleary look of contentment. \n\n\"Oh Sonny.\" She breathed. \"This is incredible. I am so horny but I want to extend it, make it last longer. God, what a sensation, having you inside me like this.\" \n\nI grunted. \n\n\"Can I watch?\" Dalia asked. \n\nOn the other end of the couch, Charm opened her eyes. \"Me too. Us, too, I mean.\" \n\nI shrugged. \"We'll all tease Nova a little.\" I said. \n\nWe trooped upstairs. It felt weird to me, Anne was nude and Charm and Holly were topless but Dalia remained fully dressed. I was hard and feeling that tingling goodness that meant the next sensation would be my last before I died a little, leaving the last will and testament of a contented man.\n\nI opened the door on Georgia and found Laura Wills licking one of her breasts. Laura looked up, an expression of surprise on her face, not quite terror but certainly shock. \n\n\"I, she, she's so beautiful.\" Laura whispered, standing. \n\nI waved at her. \"Keep at it.\" I said. \n\n\"God, Sonny, cock.\" Georgia rasped.\n\n\"No.\" I said immediately but regretted the abruptness. Nova caught on immediately.\n\n\"You told them to tease me to death, didn't you?\" She moaned a little in the back of her throat as Laura sucked on her nipple. \n\nDalia stood near the head of the bed. Holly and Charm were on the other side. I held Anne under my arm. \n\n\"Anne, the other breast.\" I said. \n\nShe looked up at me. \"I Annie. Fuck Annie now? You fuck Annie?\" Her voice dripped with humor and lust. I glanced at her legs and saw both inner thighs glistened. The woman overflowed with arousal. Laura was sucking on the right breast on Charm's side of the bed. Anne, now Annie moved up to the other and kissed around the curve of it. Georgia's body arched, pressing her chest against the two women. \n\nI got onto the bed and put a hand on one of Georgia's knees. \n\n\"Oh god, finally. Please fuck me, Sonny.\" \n\nI was dubious I could do more than butter her bread a little without getting jelly all over. I was so horny I felt it behind my ears. I sat on my knees, leaned over the V of her body and fit the head of my cock into her now bare pussy. She'd shaved recently and was sooth and soft. I slid deep into my sister. She groaned and then grunted, her hips bounced up under me. \n\n\"Sonny, she's going to come.\" Charm warned. \n\nI didn't care. I wanted to come so it hardly sounded like a bad idea. As if reading my mind, Laura and Annie left Georgia's tits. I lay down on her. Her head turned to me and we kissed. Her legs wrapped around me, locking me in place. With her arms stretched back and above her head, she was a stationary target, now very useful. Her pussy pulsed, her heart beat seemed all around me, throbbing with her need. \n\n\"Sonny.\" Georgia said in a small voice. \"Can I ask something?\" \n\nI struggled to my elbows. I felt the orgasm fuse light and I lifted my ass, disconnecting us. \n\n\"Oh, no, put it back, Sonny. God, I need cock now.\" \n\n\"You'll get plenty. What do you want to ask?\" \n\nShe blushed suddenly. \"I was wondering if you'd let Tawny do it too. I mean, there's six of you, right? Three for me, three for Tawny.\"\n\nIt was Dalia's gasp I registered first. \n\n\"Did she put you up to this?\" I asked. \n\nGeorgia shook her head. \n\n\"No, no, honest. I want, I think it would be awesome to have her on the same train with me. I mean on the airtight express. We'd do it together and Dalia would watch...like that. That's all I mean.\" \n\nI got off the bed, grabbed Annie by the arm and pushed her towards Georgia. \"Eat her, but no coming, for her I mean.\" I said. \"Sit up, Georgia. Give us some room.\" She pulled herself into a sitting position on the bed. Annie got between her legs and lay down, resting her cheek on Georgia's flat, pale thigh. The whiteness of Georgia's skin made Annie appear yellow. \n\nWhen Annie licked Georgia's pussy, Georgia bucked and writhed. Her arousal was intense. Her back arched and then she thrust her pussy up at Annie, trying for something but unable to achieve it. \n\nI got onto the bed behind Annie, sitting across her bare thighs. I moved down to her calves and lifted her hips. She understood immediately and bent her knees beneath her and then widened them, pushing Georgia's legs wider. I got between her feet, fit my cock into her pussy and rammed it home. Anne squeaked. \n\nGeorgia was panting. \n\nI pulled back and hammered into Annie. She squeaked again. Out and back into her with prejudice and she screamed now, muffled only slightly by Georgia's open body. I gripped Annie by the hips and held her while I fucked her, slapping against her lean ass over and over again. Annie cried out several times, ignoring Georgia's pussy. \n\n\"Back.\" She finally hissed. \n\nI understood immediately. I pulled my cock free. She twisted and lay down on her back, the back of her head against Georgia's pussy. \n\nI got between Annie's open legs and entered her. When we kissed, her lips were ravenous and alive, slick with my sister. She kissed me like her life depended on it. Her hips rapped up at me with a regular rhythm only she understood or heard. I kissed her long and hard while she fucked me. I was conserving my strength. Georgia's legs rose like cut-rate curtains beside us. Her hips pulsed under Annie's head. Annie's black hair sprayed over Georgia's body, the black contrasting brightly with the white skin. Georgia received no stimulus except the milieu itself and that seemed to be enough. Her body writhed with minimalist movements. \n\nMy orgasm arrived like a summer storm, raining down on us like a falling deluge. I pumped into Annie over and over again till I drooped like a sun-riven flower. I lifted my head and confronted Georgia's gaping pussy. We'd slid down between Georgia's legs. I looked up the contours of the pale body to find my sister staring intently at the coitus between her legs. \n\n\"Kiss it.\" Georgia whispered. \n\n\"If you don't, I will.\" Charm said from somewhere out of my sight. \n\nI dropped my head onto Georgia's thigh, content to let the orgasm's aftereffects fade without being chased away. After a time I rose to my hands and knees. Annie looked up at me. She smiled. \n\n\"Good?\" \n\nI nodded. \"Great. Let's send in Landon.\"\n\n\"Landon? Another?\" Georgia groaned, uncharacteristically not complaining about my treatment of her or lack thereof. \n\n\"You can count, can't you? I am only number four.\" \n\nGeorgia shifted her ass under us and the bed heaved. I got off of it and padded out into the hall. Laura waited there. She got immediately to her knees and licked at my cock before sucking it into her mouth. Annie emerged behind me. \n\n\"I think we'll just wait here.\" Dalia said from the door. \"Oh, well...?\"\n\n\"I'll...uh...send in Landon and, and, and...?\" I couldn't remember whom he was fucking at just that moment. I thought of Darlene and wanted to have her there to watch but I thought D. Debra and the guys would be spectacle enough for her. Another time. \n\nLaura had my hard cock completely in her mouth. Her clicking throat pinched the end of my cock. I awoke from my reverie to find I had a knot of her blond hair in my hand, holding her face flush against my abdomen. She swallowed repeatedly around the cock in her mouth, but shivers ran through her. Her hands clutched at my bare thighs. \n\nI leaned over to look down her back. \"Laura, I think you have become quite undisciplined. I am going to hand you off to Marie. She'll be moving in with you. You will be hers to use as she wishes.\" I felt Laura's reaction on my cock, like a thought expressed with tongue and lips. She sucked hard on my cock and I was fully erect once more. I pulled her head off of my cock.\n\nAnnie had been beside us, watching. \n\n\"Landon?\" She whispered. \n\n\"Oh. Right. Mrs. Wills, toddle off and find Landon and his pussy. They are next in line for Georgia.\" \n\nShe staggered to her feet and went down to Dalia's room. I heard the bed complaining when she opened the door and the squeak of Quilla...Quilla, of course! Quilla was being fucked on my sister's bed and crying out her approval. The squeaking stopped. ",
        "Suddenly I wanted Quilla to see me in Annie. You know, one of those random thoughts we usually let pass, like graffiti scribbled on the inside of your head that no one else sees. I twisted to Annie, looped an arm around her waist and shoved her hard against the wall. She gasped. I kissed her. She kissed me back. The urgency coursing through my veins found a like passion in her. Her body pulsed against me. She lifted one leg, rubbing her knee up and down my thigh. I grasped her leg and crouched. Her arms were around my neck but she released me, moving one between us to grip my cock. She directed it back into her milky pussy as I lifted her. I slid into her like a train into a tunnel. \n\nAnnie screamed. Something about being taken against a wall like that ignited something in her. Her body bucked against me, ramming herself onto my cock. I had a firm hold on her leg, providing her leverage. Her hands went around my neck and she lifted her last leg. I felt her weight sagging onto me, her pussy contracted around my hard cock. \n\n\"Excuse us.\" Landon spoke right behind me. \n\n\"Jesus, he's fucking her.\" Quilla whispered.\n\n\"It's an orgy. Want him to fuck you too?\" \n\n\"I...would he?\" \n\nLandon snorted and they were gone. \n\nI kept a steady drumbeat on the wall, slamming Annie against it so that it echoed through the house. Boom. Boom. Boom. The noise seemed to suffuse my mind. I felt her shivering need, her quaking lust and I increased the tempo and my force. \n\nBoom. Boom. Boom.\n\nAnnie screamed. I felt the orgasm lash her, once, twice. The third time, her voice ran up the register and disappeared into the aether. I had her pinned against the wall, suspended and pinned by my cock. Her weight forced it into her body, filling her with the feeling of the penetration. She gasped and grunted as each new wave of orgasm rolled and rumbled through her, like a placid train suddenly released to roar down a hill without brakes to slow it. She bucked, she came. She screamed. She came. She clawed at my shoulders. She came. Orgasm after orgasm after orgasm shot through her like the climax of a fire works display. \n\nThen suddenly, she went limp. All the tension, all the response, all the erotic enthusiasm dissipated like a water drop on a hot griddle. I leaned against her. Her pussy chewed at my hard cock. \n\n\"Jesus, Sonny. I think you killed her.\" Sean had been watching us apparently.\n\n\"She's only a little dead.\" I mumbled. \n\nSean laughed from behind me. \"I get it. The little death, le petite mort.\" \n\n\"What?\" I twisted around to look at him. \n\nHe was grinning but when I met his gaze, he looked suddenly uncertain. \n\n\"I....uh...I was wondering if you wanted to trade. For her, I mean. I, I don't think I've had the pleasure.\"\n\n\"The others are new too, aren't they?\" I was searching for names. \n\n\"Oh, they're great, I, I just wanted a little Chinese fortune cookie. You know, something different.\"\n\nI let Annie's leg go and she slid part way down the wall before her knees locked. I pulled my cock out of her body. She lifted her head from my chest and looked up at me. \n\n\"You give Annie away?\" She said, her upper lip curling. \n\nI snarled back. \"Take her. I'll take Lovely.\" \n\n\"Where?\" Sean asked, his voice twanging. \"God, Norma and this little piece of wonderful. The contrast makes me crazy.\" \n\n\"Don't get too crazy, Georgia is counting on you. Have them both eat her but remember, no coming.\" \n\n\"You must really hate her.\" Sean said. \n\n\"Nope. Just the opposite. When we do Lydia and Quilla, you'll understand. Well, you'll understand soon anyway. That's my room. I'm going to lay down.\" I turned Annie and pushed her against Sean. She looked over her shoulder at me, giving me a look like I'd just sold her off to a Fishhead or something. \n\nSean pushed her down to her knees and she came face to face with his odd cock. The head of it was contorted and uneven. She licked it and then sucked it into her mouth. A moment later she pulled back and looked around at me. Her eyes blazed but with passion and reproof. \n\nI eased past them, bumped open my door and flopped on my back on the bed. I clicked out like a broken light bulb. The next thing I knew, someone was kissing my cock. I'd been fucking D. Debra while Dori watched in my dreams and I was glassy hard. \n\nThe lips kissed me. They were soft and gentle. They opened. Her mouth enveloped me, sinking down, down, down without hesitation. I felt the close confines of her throat and then I blocked it. I heard her gag a little and felt her throat constrict. I opened my eyes. Lovely had her head crammed full of my cock. Without removing her mouth from me, she moved onto the bed. Then, with excruciating slowness, she withdrew my cock from her mouth, knee walked up my body and settled her pussy down onto my cock. \n\nHer eyes glinted in the dimness of my curtained room. \n\n\"Sonny. Awake? I'll just hold onto to this for you. You are very hard. Nice dreams?\" \n\nHer thin voice tickled me. She leaned over me, peering down at me past the rippling waves of her great tits. I lifted my head, captured one with my lips and sucked on it. I found her nipple and tested my teeth. \n\nLovely groaned, her body shook. I lay back, keeping her nipple between my teeth. She followed me down till she lay on her elbows, her breast pressed against my mouth. I couldn't breathe! She rose up, shifting to let me get a little air, while her hips rocked back and forth. She constricted her plush pussy, squeezing down on me with a regular pressure. Over and over again she massaged my cock. I felt it bend inside her as she settled her weight on me. I grasped her ass, rose up and twisted her onto her back. \n\nShe was so limber she accommodated me immediately and easily. I thought about making her airtight, thought about Rebecca beside us, chock full of cock too. I hammered down into her. She gasped, her body arching under me, her great tits rolling this way and that as she shook. I rammed into her, her legs rose beside us like guardrails. Her legs squeezed me and then locked around me, her heels pulling down on me as I fucked her. \n\n\"Sonny? Dude. We're done in here, I think. What now?\" \n\nI settled down between Lovely's open legs. I twisted to look at Sean. \"Duck Soup, Sean, can't you tell when a guy is busy?\" \n\n\"I, yeah, but your sister sent me to find you. She said its time for a little cock for her. She sent me to get you.\"\n\nI lifted off Lovely. Her expression never changed, the same airy invitation lit her eyes, the same as she always wore. I pulled my cock out of her body and felt a little gratification at the flicker of regret on her face. I reversed action, slammed down into her. When her eyes went closed and her head arched back, I felt vindicated and pulled free of her luscious body. I got off the bed. I had an idea. \n\nI felt fevered. I stalked into Mom's bedroom. \n\nCharm sat in the chaise arm chair, Holly in her lap in the far corner, across the bed spread with my naked sister. Charm was sucking on one of Holly's breasts. I could see Holly was well marked on both breasts. Curious. I stalked over to where Georgia lay, her arms stretched over her head to the cuffs. I got on the bed, presented her my cock, painting her lips with Lovely's liquid. \n\nGeorgia licked my cock. I pushed and her mouth opened. I bent over her and shoved as much of my cock into her mouth as the angle allowed, which wasn't much, not enough. \n\n\"What do you want, big sister?\" I growled. The sensation of her mouth on my cock overlayed the sensation of being inside Lovely. Honestly, it confused me, like having one hand in hot water and the other in cold. \n\nShe made some muffled noises. I pulled my cock out of her mouth. \n\n\"Don't talk with your mouth full. Mom would be aghast!\" \n\n\"I said, I want cock.\"\n\nI grunted. \"What do you think this is? A deli whistle?\" \n\nShe shook her head. \n\n\"Never mind. I have a surprise for you. I'll be right back.\" \n\nLaura was on her knees outside the door when I opened it. I lifted her up and kissed her. She tasted like pussy. \"Gather everyone together. Where is...?\" I got hitched to confusion. \"Where is Becky, the big woman with the huge tits.\" \n\n\"Sammy?\" \n\n\"Oh right. Where are they?\" \n\n\"Georgia's room, I think.\" \n\nI nodded. \"Get the rest.\" \n\nWhen Laura did not move immediately I rolled my eyes. \n\n\"What?\"\n\n\"Sonny...?\" Her voice was tremulous. \"What you said, about giving me to that woman...?\" \n\n\"Yeah?\"\n\n\"You wouldn't do that, really, would you?\" \n\nI grasped a hand full of her hair and pulled her face close to mine. I felt crazed, jazzed up on adrenaline and pussy. \"I'll give you away to whomever I wish.\" I whispered. \"Unless you say 'no', you are mine. Take off the collar.\"\n\n\"I don't want to.\" \n\n\"Don't want to what?\" I needed to be crystal clear on this point.\n\n\"Take off the collar.\" She said. \"Your collar.\" Her blue eyes blinked up at me. \n\n\"Then Marie will go home with you to your house tonight. You'll be hers till I say otherwise.\" \n\n\"But, but Sonny, what about Chris?\" \n\n\"Laura.\" I said, feeling that particular thrill. \"Turn around.\" \n\nLaura did and immediately her hands found the cheeks of her ass. She bent forward and pulled them apart. I entered her, thrust into her frothy goodness. She jerked. Her hands moved immediately to my sides and pulled at me, crushing us together. I grasped her by the elbows, pulling her back onto my cock, bending her to my will. I felt her insides writhe as I rooted deep down into her pussy. I felt her buck once, a little hiccup that rattled her teeth and clinched down on my cock. \n\n\"Oh, god, please, no, Sonny...!\" Her voice trailed off as the orgasm flashed through her. Her head dropped and she bucked. Her pussy clinched down on my cock and pulled at it, almost like she was sucking at me, trying to get me to come in her. \n\nI pulled out of her. She keened and twisted to look at me, her face a mixture of arousal and regret, lust and shame, desire and mortification. \n\n\"Find Rebecca and send her into me. Now. Then bring everyone else.\" \n\n\"Sonny...?\"\n\n\"Now. Marie can have you but she may not want you.\" I hissed. \"But if she agrees, she'll move in with you and Chris. You'll be hers, she'll be his.\" I grinned at the artistic asymmetry of the arrangement, if what I had in mind worked. \n\nLaura's face convulsed but her eyes got that satisfied gleam even as she blushed and hurried away. \n\nI returned to Mom's room, gaging to see if we could get all of us in there. It might be tight but hey, we'd be naked so it that could be fun, too, right? Then I realized that everyone was likely a little rank. \n\n\"Dalia, run everyone through the shower. I am going to fuck my sister.\" \n\nI went to Georgia. She had a wild look in her eyes. Her red hair lay around her head like a crown of copper. I got between her legs. I inserted my cock into her pussy and eased into her, ever so slowly. When I was half buried, her hips jumped up and her pussy enveloped me. I backed away. \n\n\"Oh no, Sonny, please, please let me come.\" \n\nI lay down on her wonderful tits. I whispered in her ears. \"Not till everyone else is here. You wait or I'll send everyone home.\" \n\nShe likely didn't believe me but she fell in with my idle threat. If I didn't hand her over, I'd end up with a yard of cock in my own ass but just on principle. \n\n\"God, please, little brother, not that. Please don't make me come while everyone is watching!\" Her voice teased my ear. I lay on her, letting my weight settle onto her chest. Her tits mashed against me. I humped between her open legs. \n\nGeorgia grunted. \"Oh god I love cock!\" She whispered. \"But don't tell anyone. I don't want your friends to think they can fuck me any time they please. What happens if they come over here and push in the door and take me against the wall or in the kitchen, from behind, with my skirt over my waist. I won't be able to stop them once they have me. They'll own me like you own Laura.\"\n\nHer voice whispered in my ear like a conscience. I grunted a little, lifted my hips and dropped them, popping our pubic bones together. I think I touched off a little orgasm because Georgia writhed under me.\n\n\"Oh god, I so want to come, for real.\" \n\nI dropped my head and just lay on her, keeping my elbows under me. We lay there, still, unmoving, panting and shifting. Her pussy nibbled at my hard cock. I felt each little twitch like a telegram from heaven telling me I was the big winner of the pleasure sweepstakes. Georgia endured the stimulation without complaint. Her arms constantly rattled the cuffs. Behind me, people came and went. The shower came on and went off several times. My cock marinated in Nova's expressive pussy. People mumbled and women giggled and squeaked. After a while the talking quieted and then there was silence. All I heard was the wheezing of Georgia's breath in my ear. \n\nI moved my hands down to Georgia's ass. I clasped her ass hard in my hands, pulling her up onto my cock. She gasped and her body bucked under me. I lifted my head.\n\n\"Hide your cock in someone. Put it in a pussy.\" I said, speaking to the room but physically only able to address the words to Georgia's shoulder. It ignored me. I kissed it just to keep it from feeling neglected. I lifted my ass and hammered down into my sister. She bucked under me. I lifted and rammed into her again. And again. And again. \n\nBehind me, I heard the shifting and slurping of men mounting women. When that noise stilled, I ceased fucking Georgia. She was gasping. I lifted my hips and slapped us together one more time. I gaged her arousal just right. Georgia gasped, held her breath for a moment and then arched under me. \n\n\"Oh sweet mother of mine!\" She cried. The long delayed grand orgasm crashed into her like a tumbling car. Her hips rose under me, lifting me. I felt her interior contracting, little rhythms that sent shivers up my spine. I couldn't come in her, not just now. I let her buck once more and lifted off of her. \n\nShe lay panting, her eyes wild and glazed. I released her arms. She lay for a moment, then got to her elbows. \n\n\"What now?\" She asked the room. \n\nI finally looked around at the assembly. I thought it was only in the movies where crowds could be so quiet, scared the director would kick them off the set. Around the bed, the guys were all planted in a woman. Brent held Tawny against his body, one big hand clasping her breast. Landon was in Lovely. Sammy had Quilla mounted on his cock. Chris was still inside Marie and Sean had Annie. Norma regarded us with vast disapproval, arms folded under her tits. Becky eyed Norma, big moon eyes but Norma steadfastly ignored the other woman. I think she was scared. \n\nI got off the bed and helped Georgia to sit up. She made to stand but I pushed her down to her knees. \n\n\"Time to taste the competition. You suck our cocks and then shower. We'll make you airtight.\" \n\n\"Oh. Okay.\" Georgia said in a small voice. She looked cowed. I presented her my cock and she licked the end and cleaned her own pussy juice off of it before sucking it deep into her mouth. \n\n\"She's eating herself.\" Sammy chortled. \n\nI grunted and pulled free. \"Suck the others.\" I said and left the room. No one had hold of Rebecca so I pulled her with me. She followed easily, her hand in mine. She was clean but I pulled her into the hall shower with me. I kissed her against the wall. \n\nA mania possessed me. I wasn't out of control but I felt the erotic potential in every woman and wanted her. I wanted them all. I felt insignificant, utterly helpless to give in to this compulsion that wracked me, inhabiting me like a fever. It made me fierce. I had Becky Kline pinned against the wall in the shower. I kissed her hard and after a few moments, she seemed to sense my intensity and it reverberated in her, echoing back. She let me between her legs. I entered her, hitching her against the wall till I lost my footing and nearly pulled us both down. That gave me warning and I got cautious. I withdrew from her. \n\n\"I want to use you.\" I whispered. \n\nShe fixed her eyes on some part of my face, not meeting my fierce gaze. \"I...?\"\n\n\"I want your permission, Mrs. Kline. I want to use you.\" \n\n\"Use me? How?\" She seemed confused, suspended between the compliant mother her daughter was pimping out to all comers and the woman she'd been when I first met her...defiant, self-assured and strong willed. \n\n\"Did you see the collars?\" \n\nShe nodded. \"I, it makes me nervous to look at them, Mrs. Kingston and Mrs. Wills. I don't know why.\" She shook her head and tried to kiss me. Her hand found my erection and tired to direct it back into her body but I was too tall. I resisted the urge. \n\n\"I want you in my collar. I want you to be mine.\" I whispered. I had an insight. I loved acquisition. Ownership, that I was less sure about. I loved pussy prospecting though! I wanted this woman on her knees with her mouth open with my collar on her neck. I wanted that and I had to have it but she had to ask it of me.\n\n\"Oh.\" She said softly. \"You do?\" Amazement filled her voice. \"Even knowing what you know of me?\"\n\n\"What? Specifically?\" \n\n\"That my daughter has been giving me to any man who wants me and I...\" she choked on the thought. \"I let her. How can you respect me? Why would you ever want me?\" \n\nI crouched and her hand directed my cock to her pussy. I straightened my legs and lifted her a little, piercing her with my shaft. She groaned as I penetrated deeply into her. Her arms wrapped around me and she clung to me like I was saving her from falling. \n\n\"Oh, god! Sonny!\" She gasped. \n\nI felt a great shudder throb through her. \n\n\"Say it.\" I muttered.\n\n\"Say what?\"\n\nI relaxed my muscles and slammed into her again. The mania sang in me, like a strain in my blood I could not exorcise. \n\n\"Oh. Oh, Sonny, do you really want me?\" \n\n\"Say it.\" I repeated. \n\nShe nodded her head. She understood clearly what I wanted. \n\nI waited. She had to ask.\n\n\"Sonny, put a collar around my neck and own me. I'll fuck you anytime anywhere or any way you wish.\"\n\nI arched my back and slammed into her again. Her plush body absorbed the impact, clutching at my cock with her inner muscles as though trying to hold me there and not let me escape again. I slammed into her again and she groaned. Her head arched back. \n\n\"I will give you away to anyone I wish.\" I whispered. \n\nRebecca Kline nodded. \"Oh yes.\" \n\n\"I'll find the prefect cock for you and hand you off to him.\" \n\n\"Oh god, Sonny, yes. Own me.\" \n\n\"And, Mrs. Kline, you must give me something in return.\"\n\n\"You have my body.\" She responded her pussy chewing on my cock. She lifted one stout leg and pressed her knee and thigh against me. The plush feel of her body thrilled me to the core. \"What else can you want?\" She seemed confused. \n\n\"I want your daughter. You have to give me Lovely.\" I whispered.\n\n\"Oh god!\" Rebecca Kline cried. \"Please, Sonny!\" She didn't know what to say, how to respond but the thought lodged in her head and she was crazed from it. \n\nI pulled out of her and tended to my cleansing. She sagged against the shower wall. I was about done washing when she finally moved. She snuggled up against my back, mopping it with her huge tits. \n\n\"Sonny. I want you to have me. I want your collar around my neck. If, if you have that, what about Lovely? She is letting all manner of men to fuck me, whenever she wants. I think she gets off on that, handing me around like a bong at a Hippy wedding.\" \n\nI hesitated. \"That will have to stop but you will need to return the favor. You will be giving her away to the men you fuck. You will be the one handing her off to be fucked over and over and over again.\" I spoke to the shower head, like it was a microphone. \n\n\"Oh god, Sonny, no.\" Rebecca whispered. Her arms clutched around me more tightly, spearing me with her great tits. \"Don't make me do that. I can't do that.\" She whispered, her breath hot on my back.",
        "\"Then go. Leave.\" \n\nRebecca Kline went still, hugging me under the shower water. Finally I felt her release me. Her hands turned me around. One hand took hold of my hard cock. She got to her knees and sucked it into her mouth. My body shielded her from the falling water. She held it in her mouth for a moment, then pushed her head hard down onto it till it filled her throat for the first time. She gagged, withdrew but pushed it back into place, consuming it with her passion. She accepted it and the tension in her body seemed to ricochet around inside of us, back and forth from her to me and back again, amping up the arousal in us both. \n\nWhen she backed up, her face had a beatific smile. \"I did it!\" She whispered. \"I took you all down my throat! I deep throated you!\" She sobered immediately and struggled to her feet. She took my hands, placed them on her great breasts. \"You own me, Sonny. Tell me to hand Lovely off to a basketball team or a battalion and I will. I swear it. Please, put a collar on me.\" Then she kissed me, a light, chaste kiss on the lips.\n\nI nodded. The mania roared in me. It was time to use her. \n\nWe dried and I walked us down the hall to Mom's room. Time seemed to crawl. Inside the bedroom, the close, steamy group of naked people parted to reveal Georgia on her knees working as much of Brents hogleg into her mouth as she could manage, which wasn't enough. I found Laura and she caught my eyes and came to me. I peeled her bra down off her tits and kissed each one. She held my head, shivering as I did so. I straightened and found Marie. I pointed at her. She made her way through the naked bodies to stand before me. \n\n\"She's yours.\" I said staring hard at Marie. \"Take her. Laura, she will be your maid, in your house. She is here from the Philippines and needs a job. You are her job.\" Marie's eyes went wide and she put a hand to her mouth. \n\n\"She a woman!\" Marie hissed. \n\nI grinned and nodded. \"Now she is your woman. You use her as you like but under these special conditions. When anyone is around, anyone that is not naked or dressed to fuck at least, you are the maid. You do what Laura tells you, no matter what it is. Never talk back, never argue, never complain. You will be the best maid anyone ever saw. But when you are alone or the other people are naked or dressed to fuck, like now, she serves you. She does what you tell her to do. You own her pussy and her mouth. You tell her whom to fuck and when and where and how and she will do as you say. This I offer you. Do you accept?\" \n\nTia Maria looked around the room, her eyes begging for a chance to think. She looked back at me and I saw her eyes click with the decision and then hesitate. \"You still own Maria?\" She asked, her voice small. \n\nI nodded. \"You do what I tell you. If I tell you to bring Laura, you bring her. You tell her to do what I want her to do, do you understand? Otherwise she is yours to use.\" \n\nTia Maria nodded. \"Laura? This is her name?\"\n\nI nodded. I watched the realization complete its course in her mind. She nodded.\n\n\"I own Laura. You own me?\" \n\nI waited. Behind Marie, Georgia continued sucking on Brent's cock. No one was watching though. I felt the satisfaction of that attention on me. I nodded. \n\nTia Maria exhaled. \"My name not Marie.\" She said.\n\nI grunted. \"In the presence of everyone else, you are Marie. Alone with Mrs. Wills, you will be Tia Maria.\" \n\nShe nodded. She reached out and pinched Laura's nipple. \"Come with me.\" She held onto Laura's nipple and led her from the room. \n\n\"Mrs. Wills be eating pussy, I think.\" Sammy chortled.\n\nI couldn't disagree. \n\n\"Annie, would you take Georgia in and clean her off. Its time.\" \n\nGeorgia released Brent's cock. Everyone watched Annie lead the taller, nude woman into the bath and close the door. The shower came on.\n\n\"Sonny, you are one fucked up dude.\" Sammy muttered. \"But you're our fucked up dude.\" \n\n\"If he's fucked up, the rest of us are just pathetic.\" Brent muttered. \n\n\"You just gave my mom away to a strange woman.\" Chris muttered darkly, but with a silver lining of memory in his tone. He'd doubted me before and the results had been both wonderful and excruciating at once. He'd learned circumspection when it came to doubting my coiled maneuvers. \n\n\"Yeah, Chris, but you get to have a maid now and you already know she fucks.\" \n\nChris was staring at me. \n\nI knew what he was thinking. He was wondering how this new wrinkle in his home arrangement was going to affect him, and his pussy. I'd clue him in about Lydia's new role in his life later, once I understood Morrison's hold on her, if any. Quilla and Tawny were another matter, but there's no such thing as too much pussy; Chris should understand that by now. \n\nI pulled Mrs. Kline around me. She looked like a drowned nymph, but one that had gone far off her fashion model diet. Her breasts swayed as she moved. \n\n\"Mrs. Kline just agreed to take my collar. She will no longer fuck anyone without my approval, if she wears my collar.\" I looked hard at Lovely. I left things that way. \n\n\"Mrs. Kline. Please come here and bend over the bed.\" \n\nShe nodded and did so, placing her palms on the bed and widening her feet. She expected cock. \n\nI went to Mom's closet, found her happy box and withdrew a shaped wooden paddle. Everyone moved back. The guys all claimed a remaining woman, except for Brent. I pointed to Tia Maria. \n\n\"Brent, see if she can take your cock.\" We all watched while they worked that out, or worked it in, as it were. He finally had to sit down on the other chair in the room. She faced away from him and sat down on his huge cock. We all watched while her face reflected the sensations ravaging her as she settled down onto him, her body adjusting around its girth and then the length. She leaned forward, placing her hands on his knees and lifted her ass and let it fall, trying him on for size. \n\nShe grunted with satisfaction. \n\n\"Chris, get Mrs. Kline's mouth on your cock. Sit in front of her on the bed.\"\n\nThey took a moment to get arranged. Becky sucked Chris' cock into her mouth, bent from the waist. The angle was not the best but she managed all right, at least up until I struck her ass with the paddle. \n\n\"Hey, bitch, no teeth!\" Chris cried out. He grasped a wet gob of her hair and held onto her head with it. She made some sound that surely was something like \"I'm sorry\" spoken in the cocksucker dialect. \n\nI struck her ass again. She arched her back and held still. \n\n\"Jesus, Sonny, is that safe?\" Brent muttered, peering around Marie. When I looked over at him, he hid behind her back, moving his hands to grip her pendulous breasts. Marie hissed through her teeth and wiggled her ass pinned onto his lap. He wore the woman like a party favor. She enjoyed his favor. \n\nI struck Becky's ass again. And again. And again. \n\nBecky gained control of herself after the third strike of the paddle on her ass. She even managed to bob her head a time or two. I struck her ass a dozen times before the shower went off. Everyone watched, spellbound by the sight of a woman being paddled while sucking on a cock. \n\nI was at twenty swats when the bathroom door opened and Georgia appeared, glowing with her shower. Her wet hair was scarlet and dark. \n\n\"Holy buttfucker.\" She muttered. \"What is going on.\" \n\n\"Just waiting on you. Chris, you can fuck Mrs. Kline or let Georgia suck you while I smack her ass.\" \n\nChris did not hesitate. He pulled Becky's mouth off his cock and stood up, glowering at me. He pulled Mrs. Kline around to the other side of the bed, duplicated her pose and thrust his glistening cock into her pussy from behind. She yelped as he cuddled up to her heated ass. \n\nI looked pointedly at Georgia. \n\n\"What? You want me to do that?\"\n\n\"Sister of mine, we are going to fuck your ass....\" I tailed off. \n\nThe impact of my words landed and she nodded mutely. She assumed the position. \n\nI spanked her ass till she cried. Tears streamed down her face but she counted each swat. Her ass turned a rosy red. I was not striking her very hard but the paddle had an impact. Finally she crumpled onto her elbows and then onto her face. She fell to her knees. I waited. \n\nWhen no one else moved, I went behind her and entered her. She screamed so loud, Laura and Marie appeared, peeking in the door. They joined us to watch Georgia get her first ride on the airtight express. \n\nI was planted in her pussy. Her ass cheeks were hot against me. I fucked her. Each time I thrust into her, she cried out, her voice ragged with passion. She grunted and finally she came with a screech I figured the neighbors would hear. \n\n\"Sun fuck the moon, Sonny.\" Sammy muttered. \"That's your sister, you're fucking.\" \n\nI twisted to look at him. \"I know. Messy Melissa is coming this week. You'll get yours.\" I laughed at the expression on his face. I hammered into Georgia. She lay before me, panting and grunting. I pulled out of her and got to my feet. \n\n\"Georgia, who do you want in your pussy?\"\n\nShe lifted her head and without hesitation, said, \"Brent.\" \n\nSammy rolled his eyes. \"Sure, always Brent.\" \n\n\"Hey, no fucking complaining.\" Landon growled. \n\n\"Not complaining. That was admiration!\" Sammy shot back with a sheepish grin.\n\nBrent got onto the bed, laying down right beside Georgia. Georgia sank to her knees on the floor and then yelped as her ass touched her heels. She got to her feet. \n\n\"And who do you want in Tawny's pussy?\" I asked. \n\nFor a long few seconds, no one moved or spoke. Tawny was staring at me, a glint in her green eyes. \n\n\"Landon.\" Georgia said finally. \n\nChris pulled his cock out of Mrs. Kline. \n\nWhen the group arrived, Charm had pulled the chaise armchair back into the corner near the head of the bed. Holly sat on her lap. \n\nI pointed at Charm. \"Want a taste of Georgia before she is swamped with cum, male cum, that is?\"\n\nCharm smiled grimly at me and shook her head. \n\n\"Been there, done that. This is her rodeo.\" She grinned broader. \n\nI shrugged. \"Mount up, girls. Guys, time to fuck my sisters.\" \n\nBrent and Landon lay down on their backs. Tawny and Georgia mounted their respective cocks. \n\n\"Dalia, we need lube.\" \n\nDalia nodded and disappeared. She returned a minute later and handed it to me. \n\n\"Ass?\" I said to the room. \n\nSean raised his hand. Sammy raised his hand. I tossed the lube tube to Sean. They got on the bed behind the girls, Sammy behind Georgia and Sean behind Tawny. \n\n\"Shit. We need pillows.\" Since we weren't filming a porno, we didn't need to be able to see what was happening. This was strictly for the girls. We guys were happy to contribute our cocks to the endeavor. \n\nWhile Dalia went for more pillows, Charm unseated Holly who had become curiously comfortable in the taller woman's lap with hands on her bare tits. Charm walked around to our side of the bed. \n\n\"I should kiss you before you taste like cum, Georgia. Thank you for putting me up. I doubt I'll see you in the morning since I have an early flight.\" She kissed Georgia till Dalia returned. Charm ended the kiss. She looked at me. \"I have never before kissed a woman filled with cock like this. It's, it's interesting.\" \n\nShe walked among us like a ship though fog. We swirled around her lean elegance but not one of us touched her. I watched her eyes and she never looked at the cocks bouncing around her. When she got back to her chair, she pulled Holly into her lap once more, bent the smaller woman's back over the arm of the chair and kissed her ravenously. I waited till it was clear that the kiss was not an intermission but was the main feature. \n\nWe got the two couples on the King sized bed arranged. Tawny and Georgia tilted over the top of Landon and Brent. Sammy and Sean fingered their ass holes, lubing my two sisters in preparation for mounting their asses. The two guys rose up like two synchronized dancers, placed their cocks against my sisters' assholes and pushed into them. Tawny grunted and pushed back. Georgia bent and kissed Brent soundly on the mouth. \n\nBack and forth Sean and Sammy rocked the bed. Sammy's black body contrasted with Georgia's white, freckled skin. The whole bed rocked as the two men penetrated the two sisters. \n\n\"Oh god, Tawny, I have two cocks in me!\" \n\nThe light went on. Georgia needed someone to talk to while she was being fucked! I almost grinned with the recognition.\n\n\"Nova, Christ, I feel so full. I have two cocks in me, too!\" \n\n\"I am fucking a man under me while another is fucking me in the ass.\" Georgia muttered, almost distractedly, which would not be surprising. \n\n\"Landon Clark is in my cunt.\" Tawny panted. \"A, ah....\"\n\n\"Sean.\" Sean grunted from behind her.\n\n\"Yeah, Sean is in my ass. I think I can feel the two cocks almost touching inside me!\" Tawny's voice twanged with amazed arousal. \n\nI glanced at Chris. \"Time to quiet them down, don't you think?\" \n\nHe smiled and it was a sinister smile, full of unexpressed meaning. He had questions and he wanted my answers before he found his own. He nodded. \n\n\"It's getting late. I'll have to go soon.\" \n\n\"Oh god, she's so hot.\" Sean muttered, his cock buried in Tawny's ass. \n\n\"Georgia?\" Sammy said, his voice suddenly piping high.\n\n\"Ugh, yes, ugh, yes Sammy?\" \n\n\"I am in your ass.\" He said. \n\n\"Oh, god, yes Samuel.\" \n\n\"Oh Jesus, don't call me that! Only....\" He stuttered to a halt. \n\n\"Chris, Tawny or Georgia?\" I said. \n\nHe appeared like he had not yet addressed that particular choice. The old Chris appeared and then flitted away. His eyes hardened. \n\n\"Georgia.\" He rasped, coming around the bed. Sammy pushed against Georgia's ass and she tilted forward. She reached up to the headboard to balance and twisted her torso, cocking her head to the side. Her drying hair fell down onto Brent's chest. Chris approached her and presented her his cock. She kissed the end and sucked on it. The room was dead silent except for the squishing of the four cocks in the two women. \n\n\"Sonny, goddammit get over here. We want to be airtight together!\"\n\nI moved around the bed. Tawny was twisted and canted, her body straining to accommodate both cocks in her. Landon arched under her and I saw her control flicker as her bravura tits swept across Landon's hairless chest. He arched under her, rocking them all. \n\n\"Oh god, Landon, don't do that. I'll come.\" \n\nHe did it again and sure enough, her body bucked and bucked. I am sure I heard her teeth clicking together and decided I might have been lucky to miss that particular cataclysmic orgasm. Tawny had both her hands on the headboard while her body thrashed through its response to the two cocks. Her tits wobbled below her. I stood to her side, my cock aching hard. Behind me, Charm was kissing Holly's tits. Holly seemed utterly mesmerized, one hand stroked Charm's hair while the woman licked and suckled. \n\nWhen Tawny quit flailing, I moved closer. She twisted once more. With one hand she reached out, took my cock in her hand and drew me closer. At the edge of the bed, I leaned in and she kissed the head of my cock. She licked it and then looked up at me. \n\n\"Sonny, you'll think I'm crazy but would you put it in Dalia, uh, before I suck it. I mean....\" \n\nI chuckled. What an idea!\n\nI backed away. \n\n\"Jesus Christ, lets not turn this into a family ritual. I want to come before taxes are due!\" Brent wheezed from below Georgia. \n\nDalia appeared before me. She stripped her panties down her legs and off, tossing them aside. She lifted her skirt. She turned and bent over, holding to the arm of the chair where Charm was kissing Holly on the mouth. Holly seemed unaware we were looking at her. Her eyes were closed. Her transition appeared much easier than I'd feared, or Charm was a marvelous missionary. Then I noticed one of Charm's hands was between Holly's legs. Holly was moaning. Behind me, Tawny was moaning too. I heard Georgia's voice playing on the cock in her mouth. \n\nI lifted Dalia's skirt. \n\n\"Fuck me, Sonny!\" Dalia grunted tightly. \"God, put it in me. Please!\"\n\nI fingered her. She jumped like I had a hangnail. I found her entrance, approached and pushed into her. She grunted. She pushed back. I sank once more into my middle sister. She cried out.\n\n\"Finally!\" She hissed. \n\nEveryone around us chuckled. I had hold of her hips and naturally trotted into a regular motion.\n\n\"Hey, asshole! Forgetting something?\" Tawny called from behind me.\n\n\"Oh, fuck, yeah.\" I muttered. I pulled out of Dalia's pussy, letting the skirt hide her. She stood up immediately and gestured me back over to the bed. I followed her directions. This time, Tawny did not reach out but merely opened her mouth. I lay the head of my blurry cock against her lips. Her tongue tasted her sister for the first time. \n\nMore and more of Dalia's dew decorated Tawny's tongue. She licked and kissed and finally sucked my cock into her mouth. Out and back, she bobbed her head awkwardly, sideways and up and down in an odd motion. She sucked at my cock. \n\n\"Christ, finally. There, airtight. Let's fuck 'em!\" Sammy growled. The bed heaved under them as all of them moved together. \n\nGeorgia screamed around the cock in her mouth. Tawny grunted and then her body shook and she screamed, a muffled sound that seemed to make her neck swell, strained as it was. Her teeth vibrated nearby where my cock lodged in her mouth. She twisted a little and pushed her head onto my cock, taking me deep into her throat. When she moaned, I felt the shimmer. Her body began to twist and jerk. She screamed around my cock, then returned to sucking. Georgia joined in again, her voice plugged with passion. I knotted my hand in Tawny's hair and let her suck me while they fucked her. \n\nShe came several times while Sean pumped into her ass. In moments, Sean came, humping her ass while he ground against her. Tawny accepted it, her hips popped up and down but the motion served only to plant Landon's cock deeper into her. She came again. Georgia was keening around the cock in her mouth. Tawny's mouth on my cock sucked hard at me, pulling me deeper and deeper. I thought it was sure to disappear from sight, utterly consumed by my sister's voracious mouth. It dawned me that her technique had improved and I wanted to comment to Chris about it but I came instead and my verbal scores declined to that of a rock. I pumped cum into my sister's mouth till cum bubbled around her lips and streaked her face. \n\nGeorgia was thrashing, bucking and moaning. Sammy came in her ass. She screamed louder. Chris erupted in her mouth. She swallowed and sucked, swallowed and sucked, the sound was like a gallon jug of milk turned upside down with too small an exit. I pulled away from Tawny, my knees quivered. \n\nLaura appeared with a towel. She kissed Tawny, licking at the spilled cum and then dabbing her clean. Laura turned to me, smiled a fearful smile and got to her knees. She licked at my cock and sucked at it. It responded immediately When I was nice and hard, she left me hanging and went to her son. I looked around at the array of naked women. I selected Marie, pulled her to the bed, bent her over Landon's head and entered her. She whispered and accepted me into her body. I held her hips and fucked her. Tawny sat back on Landon's cock and watched us. \n\nChris followed suit and fucked his mother on the other side of the bed. Sean and Sammy dismounted and stood aside, then went to the two bathrooms to clean up. \n\nI thrust into Marie. She swelled around me, clinching while her back arched. Her arousal shimmered around her. She twisted, her mouth seeking my lips out of reach behind her. One arm reached awkwardly back and grasped the back of my head and pulled me onto her mouth. She groaned because I slammed into her, pulling against her waist while she tried to kiss me. Buried in her pussy, my cock felt captured and held in her body. My god, I thought, she is a fucking prodigy and I was about to give her to Chris. I nearly laughed, kissing the woman and feeling her excitement, her helplessness in the throes of her own lust and the whirling pleasure that rolled around inside her like a tornado of desire. I understood Jeb's dilemma. I ground into her, frantic with need. ",
        "Tawny lay under us, her eyes peering around Landon while I fucked the woman. One of Tawny's hands reached under the bent woman and clutched Marie's tit, mashing it against her twisted body. Marie bucked and came, bucked and came, humping her fine ass against me, ramming herself harder and harder onto my cock. If felt the reaction deep inside Marie, her body writhed and I presumed Tawny was pinching her nipple. I had firm hold of her waist, moved my hands down to her thighs and pulled her up onto my cock. She arched her back. She twisted, proving impossibly limber; she kissed me, even while I fucked her from behind. \n\nLandon roused under her as she broke our kiss. Her mouth found his and they engaged in a raucous French kiss, with none of the superior disdain of the French and all of the animal fury of a woman in heat. Tawny still sat astride Landon's hips and he must have regained his erection because my sister began to ride him, rolling her hips and shimmying down onto him as he presumably grew up inside her once more, a new meaning to adulthood. \n\nGeorgia was in much the same condition. Laura was bent over Brent right in front of Georgia and Chris had mounted her from behind. Her hands clutched onto Landon's arm, holding him while her body jerked and bucked from the pounding her son was giving her. Her face bobbed up and down, twisted with the proximity of orgasm and constrained to resist, perhaps by the many restrictions I had imposed on her in times past. \n\n\"Mrs. Wills!\" I grunted, increasing the ferocity of my assault on Marie, an ardor that barely matched her own. \"Mrs. Wills, come if you want to. Come. Come!\" I ground out the words like imprecations against evil. Her head came up, her blond hair a mane of tendrils gone dark with perspiration. Her face twisted in consternation and then, I could see it happen, the words found her conscious mind and she translated it into a beatific expression of pending ecstasy. Chris focused on Marie, seeing her for what she was to become, the new pussy in his house. It seemed to turn into his own version of my frenzy. He hammered his mother as though inspired by the promise of Tia Maria becoming his to use as he liked. \n\nI slammed into Marie. Marie's head rose just as Laura screamed. Mrs. Wills' body froze. Brent found a breast and pulled the blond woman's torso askew and sucked her dangling breast into his mouth. For a vast moment, Mrs. Wills did not move. Her son thrust into her and Brent sucked on one breast and mauled the other. \n\nGeorgia, not to be left out, took that moment of stillness to bend and twist to kiss the woman before her. The connection was awkward and partial but one of Laura's hands found Georgia's head, twisted in her red hair and the kiss sparked off an explosion in her. Georgia sat up, rocking her hips as Brent's cock strengthened inside her. She put both hands behind her head and fucked him, making her great breasts dance and roll, utterly out of sync with her own motions, like a dance troupe with poor rhythm. She seemed oblivious to the crashing orgasm in the woman being fucked before her, albeit, clinched closed, eyes. \n\nLaura bucked. She gasped, she squealed, she canted her hips this way as that as Chris pummeled her from behind, slapping together with a wet rhythm that got faster and harder. At last, she froze again, her voice keening as the orgasm rampaged through her body. Her shoulders shook, her hips bucked, head bobbed. She gasped for air and finding some surfeit, swelled up and screamed her fool head off. Her whole body thrashed under Chris' assault. \n\nI realized at the last that I had coasted to a near halt, my cock rooted inside Marie. She had risen up and was watching Laura's encounter with ecstasy as well. When Mrs. Wills collapsed onto Brent, nearly smothering him with her tits, Marie twisted round, catching me with one eye. \n\n\"Mrs. Wills?\" She mouthed, some look I could not catalog in her eyes, an expression so odd, so strange her comportment did not translate to me that I had called Laura by her married name and Marie must certainly understand who it was that had just orgasmed across the bed from her. \n\nLaura lay on the bed, senseless, utterly surrendered to the orgasms wracking her. Chris continued to pump her from behind, fairly holding her up by the hips. \n\n\"Chris, did you come in your mother?\" I asked in a voice that seemed overly loud in the close room, stuffed with naked people. \n\nChris opened his eyes. \"No. Uh, not yet.\" \n\nI pulled out of Marie. \"Please, take Marie and fill her up.\" I said. \n\nMarie straightened and turned in her own radius, scraping her tits across my bare chest. I wanted to thunder fuck her then but saw the look of wonder on her face. \n\n\"He pretty! So pretty. You give me to him?\" Marie had divined my subtle purpose in injecting her into this get-together. Her role was finally clear to her and it lit in her a flame that flared brightly in her eyes. \n\nI nodded. \"I think we can work something out. Go. He wants to fuck you!\" \n\nShe nodded wildly and pushed me out of her way. Chris collided with her at the end of the bed and she mounted him, grasping his cock and pulling it down to her pussy. She tried to climb up his body. Chris lifted her and she enveloped his cock with her pussy, sliding down onto him. He staggered. Quilla steadied them and directed them over to the doorway to the bath. Chris fit Marie against it and rammed into her. She screamed, taking the cue from Laura to give voice to her ecstasy. She cried out the anguish of her little death, bucking aloft, pinned by cock to the wall, her arms clutching Chris to her while her legs waggled about him before she gained control of them and cliched them around him. Chris was undeterred, slamming into the woman with abandon, even while she gasped and shrieked with orgasm. Each one left her less and less air to expend in screams of ecstasy until she could only grunt and buck. \n\nI felt a hand on my arm. \n\n\"Sonny, god, please, let me now.\" \n\nI turned to find Holly had escaped Charm's charms and stood before me, her hands pulling at her bra trying to get it back into place over her tits. \n\n\"What?\" I asked, darkness in my voice.\n\n\"I want it too. That. Or just a cock. She, she's been sucking on my tits and kissing me so now I am so horny I could fuck a dead man and make him come.\"\n\n\"That'd be weird.\" I muttered. \"Oh. Right. Zombie love.\" \n\nHolly bumped me with the heel of one hand. My slick cock bobbed between us and I noted she did not touch it or take hold of it. \n\n\"Sonny, please. God, I'm at an orgy and you're telling me I can't fuck? Really? Is that how it is?\" \n\nI shook my head, just to mollify her. I moved to the headboard of the bed and stretched across Tawny and Landon who were back to fucking. I poked Tawny in the ear with my cock as I struggled to find the release on the far pair of cuffs. \n\nHolly stared at me when I turned around. \n\n\"What are you doing with those?\" \n\n\"Come with me.\" I growled. I was so horny, I had no confidence I wasn't going to fuck this woman. I wanted to. I was down the hill and had walked so it seemed like I had what it took to fuck them all. I groaned a little, grasped Holly by one wrist and led or dragged her out of the room. Sean and Sammy appeared and mounted Tawny and Georgia again, switching this time. I heard Tawny screeching as Sammy inserted his cock into her ass. Georgia was quieter but barely and not from lack of trying. \n\nI watched from the door and when Sean seated his oddcock into my sister, I tugged Holly out of the room, down to my room. I was naked. Holly's leash dangled from her collar but I ignored it. I dragged her into my bedroom and tossed her onto the bed. She rolled onto her back and opened her legs.\n\n\"Finally!\" She snarled at me. \"God, I am crazy horny. God, fuck me or I swear, I'll explode and you'll have cum in every nook and cranny of this room!\" She cackled wildly. \n\nShe lay on her back, hips on the edge of the bed, knees up and wide, her bare pussy peering at me from between her open legs, one winking eye. Her hands held her legs up and open. I roughly twisted her lengthwise onto the bed and rolled her onto or face on the bed. I got onto it, sitting astride her ass. She moaned, arching under me. She had extended her arms over her head, hands against the headboard. I wrenched them roughly down, pulling at them till I had her elbows touching. I hooked a set of cuffs to her wrists and the other to one elbow before wrapping the length of chain around her upper arms and clicking the other cuff around the opposite arm. \n\nHolly got to her knees, an impressive display of core strength.\n\n\"Goddamn, Sonny, I am so ready! Fuck me! God, I am begging for it. Isn't that what you want. Sonny?\" \n\nShe felt me get off the bed. Her head turned, wild eyes finding me. I could see the fury in them, the fury from frustration and the desperate need pulsing in her, like a rider on her heartbeat that could not be ignored. \n\n\"Sonny? Goddamn you, Sonny, you have to fuck me!\" She cried. \n\nI got onto the bed behind her and she quieted. I felt it, the confidence that her outburst had garnered her what she wanted. I flipped up her skirt and entered her. Her little pussy resisted. I pulled back and burrowed forward several times, screwing into her till I was seated deep in her body. \n\n\"Oh god, yes!\" Holly hissed, her body quivering against me.\n\nI withdrew. \n\n\"Sonny? Sonny! Goddammit, fuck me. Don't! Hey. No! Goddammit...please, oh god, don't leave me like this!\" Her voice carried her anguish to my ears. I was irate, I confess and I decided a bit of pettiness could be excused. \n\n\"Be silent. When you cool down, maybe I'll let you rejoin us.\" \n\n\"What? No, fuck you, Sonny! Goddammit, let me go. I want cock. Now. Give me cock. If you're too chicken shit, I know one of your buddies will fuck me. I'll fuck them all.\"\n\nI bent over her, putting my face next to her ears. She lay on her shoulder, face turned towards me, still crouched on her knees. \n\n\"Not your time. Not your night. Shut the fuck up.\" I muttered intensely in her ear. \n\nShe screamed. She levered her impressive body up, grunting before giving voice to a whole new voice filled with her sexual angst. She wavered, standing on her knees and toppled to the side, losing balance. Her head rapped on the wall and that quieted her for a moment. I found a kerchief in my drawers and took a scarf from the back of my door. \n\nHolly resumed screaming. \n\nI went to her. \"Shut up or I'll gag you.\" \n\nShe ignored me. \n\nI gagged her. She fought it loose. I found a pair of dirty socks and wadded one up and filled her mouth with it. She went bonkers, twisting and bucking and spitting. I subdued her, held her head and stuffed the sock into her mouth. I tied the gag in place. I rolled her onto her face, put a pillow under her impressive tits and then tied the scarf to the chain between her elbows and to the headboard. I found two spare belts and locked her ankles and knees together. I bent over her. \n\n\"I invited you here to watch and observe Laura. You have forgotten our agreement. I own you while you wear that collar and when you disobey, I will deny everything you want. Want something from me? Obey.\" I said, my lips against her ear. I did not want to see her eyes. \n\nI left her like that. I found Laura leaning against the doorway to mom's bedroom, bedraggled and glowing. She looked at me, eyes hazed with sexual excitement. There was none of that bland, \"this doesn't excite me\" sort of superior attitude. She was consumed by her orgasms and the echoes still vibrated through her. \n\n\"Check on her every few minutes to make sure I didn't hurt her and that she can breathe okay. She has to learn. She wants to be like you but I don't think anyone can be like you. Flattering that she wants to, though, right?\" \n\nLaura nodded. \"I'll look in on her. She screamed but I could tell it wasn't from pleasure.\" \n\n\"Frustration but she has to learn. Not her time.\" I muttered and moved past the quivering blonde back into the scene where my two sisters were fucking two men, four men at the same time.\n\n\"Tawny, I have a cock in my pussy and a cock in my ass.\" Georgia announced, her voice rigid with excitement. \n\n\"Oh god, me too!\" Tawny moaned. \n\nChris appeared from down the hall, leading Marie on the chain. \n\nHe approached me, the brown woman padding along behind him. \"She says you gave mom to her? That she's moving in with us?\" Chris said to me. \n\nTwo naked guys in a room of naked women and he wanted to talk shop? I shrugged. I never liked to demand my agenda be primary. I am convivial in that way. \n\n\"So? That a problem?\" \n\nChris glanced at Tawny. \"What about her?\" \n\n\"I am going to hand her around to the others.\" I said. \"She wants to be popular with the guys. I don't see any reason to refuse her, do you?\" I looked pointedly at Chris. Lovely approached and cuddled up to me. Quilla was close behind, trailing like steam from a locomotive, enthralled by what she was watching. She stood on the other side of Lovely and waited after I hooked an arm around the amorous tyro. \n\n\"Sonny, you know what I want and how I feel about that.\" \n\nI nodded. \"I think I do but you have your own queue to work through, while she's off mounting her own mountains. I think I am going to need you to use Mrs. Favors the way Sean used Laura. I think. I'll need to let you know when she is ready.\" \n\n\"Ready?\" Chris shook his head. \"Whatever. I get it.\" He peered around the room, made the connection with Rebecca Kline and moved past me to her. He said something and she turned to bend over the end of the bed. Chris cozied up to her behind and mounted her, riding her hard. \n\n\"Sonny?\" \n\nQuilla's small voice winkled out of the huffing and puffing in the rest of the room. \n\n\"Sonny?\"\n\nI peered around Lovely's tits, had the urge, and turned us around, pulling her into the doorway of the room. I pushed Lovely against the doorway, facing it, crouched and entered her from behind. She flowed onto me like a falling scarf onto blown snow. Her body enveloped my cock. She reached up the door frame with her hands and arched her body to accept me into her. Her tits nuzzled against it, one inside and the other outside the room. I hammered into her and Lovely bucked with approval. Her body surged against me, chock full of cock.\n\n\"Sonny. That woman, the, the lesbian...?\" Quilla's voice penetrated my intense coupling with Lovely. I turned my head. \n\n\"What?\"\n\n\"I wonder, would it be okay if I, if I, if I tasted her?\" \n\n\"You mean, if you went down on her?\" I growled through gritted teeth. Lovely was pumping her ass back at me while I pounded cock into her from behind. She'd found a perfect pose that provided leverage and balance and now she seemed intent on chasing down her flighty orgasm and grinding it to dust. \n\n\"Yes.\" Quilla's voice became stronger. \n\nI pulled out of Lovely. I turned her. Lovely sagged against the doorframe. Everything about her said, I am yours, do with me as you will. I wanted her to service my friend. \n\n\"You like pussy, right?\" \n\nLovely nodded.\n\nQuilla answered too, assuming I was speaking still to her. \n\n\"I, well, yes, I like pussy. I like the feel of it on my tongue, particularly while she climaxes. I feel, god, I feel so powerful bringing another woman to orgasm, especially if she is full of cum. Man cum, I mean!\" \n\nI almost rolled my eyes but such honesty should be honored. \n\nI took both young women in hand and guided them over to where Charm sat studying her black fingernails. All around her, other women were enjoying a good cock fucking and she seemed unaffected, the very definition of a lesbian, I supposed. \n\n\"Charm, darling, these two young women would like to taste you. What do you say? Care to give us a demonstration? Show us how to eat and be eaten at the same time?\" \n\nHer eyes rose up to find me, like black tracers in a clear sky. \n\n\"You just want to see me naked.\" \n\nI nodded then shook my head. \n\n\"I do want to see you naked. You are naked, all that counts anyway but really, I want to see you in the throes of ecstasy. I feel bad that you aren't really included in this. \n\nDalia stood to the side, listening but her eyes were fixed on her sisters on the bed. \n\n\"No thank you. I prefer to keep what little mystery I still possess.\" \n\n\"Isn't mystery just a ploy to get attention? Do you really want attention? My attention? I'll just penetrate you with my mean old penis.\" \n\nShe smiled a little. \n\n\"It is a kind gesture but I decline. Thank you. Unless your two friends would be willing to let me take them to bed properly. You cannot watch, however, but of course, dear Dalia could.\" \n\nDalia's eyes jerked one direction and then another, producing that shiftiness in her eyes that no one should trust. \n\nI had both Quilla and Lovely in hand. I looked from one to the other. \n\n\"You girls mind if I hand you off to a true, pussy and tits lesbian as opposed to the cock and balls lesbian that I am?\" \n\nThey both looked at me but neither responded. \n\nI realized they wanted directions, like a stupid actress looking for instructions from a director in a scene she simply does not understand. I looked at Charm and smiled. I realized once it creased my face that it was an unctuous smile and I silently cursed Hassam for infecting my brain. Now I was being unctuous. \n\n\"Charm, please, as a token of my esteem, please accept these two women for your pleasure.\"\n\nCharm shook her head, regarding me from below her black eyebrows. \n\n\"God, Sonny, you are irrepressible!\" Then she grinned and stood. \n\nI handed the two nude women off to her and she left the room with them. \n\nDalia looked like she didn't know whether to shit or get off the pot. Her eyes darted from her sister's still in the clutches of dual double penetration, giving each other climax reports like bored meteorologists in L.A., to the open door through which Charm disappeared with two nubile and willing young women. \n\nI finally laughed. \"Go with Charm, she's leaving. I bet you'll see more of your sisters fucking.\"\n\n\"But not two at once!\" Dalia whispered, licking her lips. \"Not two at once.\" \n\nI shrugged. Tia Maria was the lone pussy unoccupied, if you didn't count Dalia. Chris and Becky had found a lot in common. Dalia finally left her place beside the closet door and walked delicately out of the room, I presumed to simplify things for me. \n\nI wanted more of Marie. She watched me approach. She had drifted back into the room and now stood against the wall beside the bathroom door. She enveloped me, accepting me against her naked body and kissing me hard on the mouth. When she shook the kiss loose, she looked up at me. \n\n\"You fuck, Maria now?\" she whispered. \"You give me to Jeb's wife and son. Oh by the virgin Mary, Mr. Sonny, I am so amazed, so excited. I will be a good maid. I have been a maid in the Philippines. I will make them very happy. How...what about Mr. Jeb?\" \n\nI took her by the arm and pulled her from the room. Chris followed us with his eyes, mounted behind Rebecca Kline but then returned to business as we passed out of his sight. On the bed, Sean and Sammy were hammering Tawny and Georgia again, the two sisters cavorted towards climaxes in tandem. \n\nAt the door to my room, I stopped. \"I am going to fuck you, Tia Maria. From this moment on, you know nothing of Jeb Wills. You are a friend of a friend I am helping. When Jeb appears in the house, you will not know him but you will know immediately how to deal with him. That will not change. Understood?\" \n\nHer eyes flicked around my face for a moment before she nodded. \"I understand perfectly, Mr. Sonny. You give Mrs. Wills to me and me to her son. When Jeb appear, I bow him down like he like and I have him and his wife on their knees.\" She smiled. \"Very nice. Very nice. You very nice man!\" She tittered. ",
        "I nodded. She understood the ploy just fine. So far, it had worked to perfection. She had the perfect poise required to make the situation work, for everyone. I felt the last bit of tension dissipate from my body and a shiver ran up my bones. I wanted to be in this woman, now.\n\nThere really is not room on my bed for more than one or two people. Three was definitely a crowd. Laura was in the room, her hands under Holly's clothing, feeling her body. She looked like she'd been caught with her hands in the cookie jar and so she had. \n\nI pulled Marie into the room, my intentions clear in every motion. Laura squawked and left the room, closing the door. I maneuvered Marie around the other side of the bed and had her lay down against Holly's bound body. Maria nudged Holly further to the side and finally had room enough to lay down. She draped one leg over the back of Holly's body and the other off the bed, barely touching the floor with her bare foot. She looked over at me. \n\n\"Come fuck Marie.\" She said softly. \"I want you cock.\" \n\nI agreed with her sentiment. I wanted her to have my cock. I got carefully onto the bed. She grasped my cock and pulled me down between her legs. Holly besides us, struggled to arch her body and turn her head, gagged as she was. She managed. \n\nHer eyes pinged off of me. I positioned myself between Maria's legs and entered her, shoving into her body while she grunted under me. Her hips pulsed up under me, caressing my cock with her pussy as I leaned over her. I had my hands planted at her shoulders, just above Holly's. Holly was even shorter than Maria but not by much. She lay on one cheek, one eye casting about at us as I slapped my body against Maria's, grinding cock into pussy till Maria began to pulse under me. \n\nMaria was liquid and hot around me. I wondered whom she contained and then felt the first twinges of orgasm nipping at the ragged edges of my awareness. I fucked Maria harder. She interpreted my force properly and met it with her own strength, rising under me like a welling geyser, pulsing and pumping her hips up at me while my cock poured into her. I rocked us, rattling the bed. Maria rolled with me, constantly moving, her hands first caressing my face then, gripping my shoulders, and finally taking hold of my waist and directing me down between her legs with stern concentration and urgent lust. I felt the passion well up in her. When she climaxed the first time, she rose up to kiss me, fixing her mouth to mine even while pulling me down between her splayed legs. \n\nShe groaned, she screeched, she bucked and orgasmed again. Then again. The chain reaction our connection set off went on for minutes. I lost count of her orgasms. She thrashed and bucked and cried out as each new wave vetted her body and passed it onto to the next test of her endurance. Over and over she bucked under me, thrashing with orgasm after orgasm that seemed unending at one point. \n\nMy climax injected a new element into her private delight. I ground us together. She realized what was happening and tried to close her legs. We nearly tippled off the edge of the bed, telling me how much we depended on her one foot on the floor for our equilibrium. It staved off my orgasm. I struggled to get us situated so I could hammer her properly and found we just didn't have the amount of bed we needed. Her open legs levered us off the landing strip beside Holly with little to spare. \n\nRather than surrender, I pushed Marie's legs high, bending her double and penetrated her at that angle. She grunted, as her pussy tightened with the strain. I sluiced in and out of her body, slapping against the plane of her thighs. My orgasm dropped on me and I ground down into her, releasing her legs. I grabbed onto the headboard and held us in place, even while I pumped cum into Maria's pussy. \n\nShe gulped my cum down, her pussy clasping at me like it could swallow and suck. I groaned out my pleasure, wanting to hold her ass while I came but dared not. When I ran down, I ran down. My weight squeezed Marie out from under me. She managed, somehow, god knows how, to slide out from under me and left us. I turned to Holly and cuddled up to her and sleep shut me down. \n\nWhen I woke, it was fully dark. Someone was moving in the dark room. My eyes adjusted and registered diffused light from out in the house coming in the open door. \n\n\"Sonny?\" \n\nIt was Chris. \n\nI sat up, a hand registering Holly still trussed beside me. One arm was cold. I needed to release her. \n\n\"Yeah, Chris, what's up?\"\n\n\"I have to get to play practice. The others, they're gone already. You, you want Mom to take Marie home, right?\" \n\nI nodded, felt stupid. \n\n\"Yes. Right. It's a favor for a friend of a friend. If it works out, fine. If not, I'll figure something else out.\"\n\n\"Oh, I think it will work out okay. You did say she was mine, to fuck I mean, right?\" \n\nI nodded, felt stupid again but chalked it up to being just barely awake. I realized I'd been dreaming of fucking Tawny in my sleep and I was hard as diamond studs. \n\n\"Right. If you want Laura to do something, tell Marie and have her arrange it. Laura is Marie's.\"\n\n\"Why?\"\n\n\"Because, its a favor. If you don't want...\"\n\n\"I can put her on the rail, right? Or dangle her?\" \n\n\"Sure. Make her clean the house though. Make sure she understands that she is responsible for all that.\" \n\n\"Why?\" \n\n\"Trust me when I say this, you'll thank me later.\"\n\n\"I always do but why? Why make her clean?\" \n\n\"So she has a way to serve you, Chris. You have to give them a way to do what needs doing but you must appreciate it. Really. It needs to be real to you so it can be real to them.\"\n\n\"Are we talking about sex or not?\" \n\n\"Not, but yes. A little. A lot. A lot. I can talk about it later. Try it out, if it doesn't work, we'll do something else.\"\n\n\"But I can fuck her?\" Chris asked. \"Tawny said she was staying here tonight.\" \n\n\"Marie? Yes, you can fuck her. I recommend it.\" \n\nHe left us abruptly. I had one more stop to make on his little journey. Well, two if you counted Lydia. God, I correlated her with Jeb and could not really imagine how that would work. I released Holly. Out in the house, Dalia was stripping beds and doing laundry. I sent Holly to help after I unwrapped her. She glared at me for a moment then looked abashed. We were making progress. Georgia and Tawny were fixing a late supper. Charm sat at the bar watching them when I arrived. \n\nCharm looked over at me. \n\n\"Sonny, that has got to be the most unbelievable thing I have ever seen. You are a ducking puppy.\" \n\n\"Uh huh.\" I said. \n\n\"Thanks for your two friends. I am telling you from a perspective of perfect objectivity, those girls know all about eating pussy.\" She grinned. \n\nI thought she looked almost relaxed for the first time since she arrived, like her barriers were down at long last. Much as I wanted to investigate what lay beyond those barriers, her inner space as it were, I had neither the energy nor the chutzpah to do so. \n\n\"Glad you liked them.\" I mumbled. I was starving.\n\n\"Your other little friend, she, I don't think she ever ate pussy before. Even if you have been the divee, it doesn't always translate to the tongue like you think it should.\"\n\n\"I don't think any such thing.\" \n\nGeorgia sat a sandwich before me and the first half disappeared before her tits quit bobbing. All the women but Holly were wearing one of Mom's robe collection. \n\n\"Well, thank you for including me. That was fun, or interesting or some other word I cannot readily find just now, that properly describes it.\"\n\n\"Orgy.\" Tawny offered, pouring milk for me. \n\nDalia came down from upstairs with an armful of sheets. \n\n\"Whose mama's little helper and why does she have a collar and chain on her neck?\" Dalia asked.\n\n\"She's in training.\" I said around my sandwich.\n\nDalia nodded. \"To become like Mrs. Wills?\"\n\nI nodded. Dalia caught on fast. She understood but I wasn't clear about her perspective...if it was purely academic or not. \n\n\"How long is she staying?\"\n\n\"I'll let know when I know.\" I returned. \n\nWe discussed the next day and I agreed that I'd rise at oh dark thirty and take Charm to the airport so the others could sleep in or get to work, whichever option seemed more viable. I had to get to class. I went to bed in freshly washed sheets next to an equally clean Holly dressed head to toe in flannels, almost a wubbicus suit but without footies. She cuddled up to me and went to sleep soon after ten. I couldn't sleep. I lay awake trying to envision how I was going to interview lay down assistants. \n\nAfter a while I got up and went into Mom's bed and lay down, my mind suddenly alive with the interviewing puzzle. That task was looming. I dreamed of cameras and positioning a woman for the camera and did not have the least inclination to do such a thing. I liked the intense focus of a woman in the private throes of orgasm. Fucking cameras would change that. The clock said one-fifty so I turned over and went back to sleep. My first family orgy was over. "
    ],
    "authorname": "Contrasting",
    "tags": [
        "sister sex",
        "mother daughter sex",
        "group sex",
        "erotic",
        "triple-teamed",
        "lesbian sex",
        "double penetration",
        "stranger sex",
        "submission",
        "blow-jobs"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/extending-the-milf-list-ch-15"
}