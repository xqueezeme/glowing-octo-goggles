{
    "title": "Anal Summer Ch. 06",
    "pages": [
        "This story is a work of fiction even though parts of it were inspired by real-life incidents. Any similarity to real people, living or dead, is coincidental. All the characters are 18 years of age or older. Do not read this story if it is illegal to read about explicit sex where you live.\n\n*****\n\nOnce finished with our early Tuesday morning fuckfest, Madison and I took another shower, this time together. \"Come, my dear,\" she beckoned. \"We have to rinse off the milk and honey.\" Showering with a sex partner was not a first for me, but it was still a novelty, and I couldn't keep from kissing her as the hot water cleansed our bodies while we were locked in a deep embrace.\n\nShe gazed at me through the water and the steam. \"Do you get it?\" she asked. I thought that keeping my mouth shut was the best policy since I really didn't get it. I felt overmatched. \"It's seminal fluid,\" she teased. \"You're milk and I'm honey. Milk from your cock and honey from my pussy.\"\n\n\"Mmmm, sweet honey!\" I replied, playing it by ear and flying by the seat of my pants as usual. We kissed again, long and deep. Almost everything seemed surreal, dreamlike, watching the suds collect and drip from her pointed aureoles when I soaped up her large, firm breasts. It was strange that I'd already had so many of my sexual fantasies realized with Madison and I'd only met her three and a half days ago. But I felt so close to her in some sort of strange sexual bond, a shared appetite for something between each other that was hard to find. To many, it was one that was frowned upon or considered disgusting or weird, unnatural or taboo. We were kindred in our love of anal sex, something rare for men and more scarce than unicorns when it came to women. \n\nShe loved receiving my cock anally just as much as I loved giving it to her there!\n\nStill, I was inwardly intimidated by her; her wealth and her beauty and the fact that I felt (or, deep down, knew) that she flat out didn't need me. I was still afraid to show her just how taken by her I was, for what could I give her beside screaming orgasms? Really, there was nothing outside of my cooking and fucking that made me the least bit valuable to her. I tried to push these thoughts away and be grateful for the fun we'd already shared. I didn't want to scare her away, and I knew what my role probably was: Boy Toy. And expressing any feelings of reservations would end my tenure in that position. \n\nOnce all the cracks, crevices, nooks and crooks of our bodies had been washed to our satisfaction, we stepped out to dry off. Madison opened a cabinet door and retrieved a large towel as I stood there. She took it in her two elegant hands, unfolded it, walked to me and dropped to her knees. Softly she sopped up the droplets of water that clung to my skin, starting with my legs. I'll admit that at first I felt insulted that she seemed to think I was incapable of drying myself, but then I realized my youth and lack of confidence were causing me to be stupid. She was just being sweet and caring, worshiping my body and showing affection. Working her way up, she brushed the towel over my groin so as not to arouse me and then continued to pat me dry once past my waistline.\n\nOnce we were eye to eye again, we were both in the mood once more, but we had a full day ahead of us. \"Wow! You just made me want to fuck you all over again!\" I exclaimed, relishing in the open, expressive sex talk.\n\n\"Yes, but we can't,\" she replied wistfully. \"But hold off and just think of how much better it'll be later tonight when we get together.\" The inner jump in my mood was hard to hide: She wanted to hang out with me again, and tonight! Madison smiled knowingly, having seen right through me again, peering into my soul and seeing my naked joy rolling around inside me. \"I'll come by the restaurant when you're about to get out. We can go for a nice, romantic stroll down to the harbor walk, see the boats down at the marina; then, through the park, pick up a bottle of wine, rent a movie and relax quietly together.\"\n\n\"Well, as long as you don't make me watch an over-the-top action flick full of violence and explosions,\" I said through my sarcastic smirk. We both laughed at that and got dressed, kissed our goodbyes and went our separate ways down Market Street.\n\nAfter hitting the gym and taking yet another shower, I stopped off to pick up two coffees and headed over to The Bistro to discuss business and my new position and schedule with Gemma. Because of Paolo's defection over to Big D at The Catch of The Day, coupled with our growing success and steady upturn in business, we had to hire two more chefs and figure out where I would best be utilized. Gemma greeted me with a wide, chipper grin. She was in a good mood and radiating energy despite being seated in the dining area with various papers and invoices. Paperwork, checks and balances, payment of bills, orders to be placed; this was the end of the business that I liked the least, yet I would inherit a good part of it as the downside of my promotion.\n\nThe bright sun through the window of the restaurant encompassed Gemma in golden light. Her hair was done up in a loose bun, and the crisp, white apron tied tightly around her waist adorned her trim, shapely form. She wore no makeup, this early anyway, and looked beautiful in that natural state. Damn you, Madison, I thought to myself. Gemma was my boss and a person I'd worked with until Madison began kidding me to see if an attraction existed. I always knew Gemma was very pretty but was always able to brush those thoughts away. Well, until I secretly witnessed Gemma expertly devouring Big D's cock like a pro. That woke something in me that made me view her in a more sexual way. She wasn't just good old Gemma any more. She was a woman! And, sure, I enjoyed stealing glimpses of her firm ass from time to time, but I tried to confine my view of her as my co-worker, and now, my boss. And now Madison's inquiries had sexualized Gemma to me and had her popping into my head at times when she ought to be the furthest thing on my mind. What idiot would hit on his boss? It would be the end of my tenure as head chef, not because Gemma would fire me but because I would never feel comfortable around her again.\n\nNot to mention that the thought that her rejection of any advances toward her would be scary and intimidating. Well, I was smitten with Madison anyway. \n\nGemma's blue eyes flew open with exaggerated excitement at the large coffee I brought her. \"Thirteen miles this morning,\" she exclaimed in an over-the-top proclamation about the distance of her morning run as she opened the sipping tab on the plastic lid of the cup. \n\n\"Wow, impressive,\" I retorted. \n\n\"Yup! Feeling stronger and going faster every day,\" she beamed. \"Thanks for the coffee,\" she added and then took a sip. \n\n\"Perhaps we should get down to business,\" I said, wanting to sound focused and ready.\n\n\"I have two guys dropping by for interviews in an hour,\" she said.\n\n\"What about Rocco?\" I asked.\n\n\"I don't have full confidence in him yet, and I think he needs to learn a lot more before he's behind the line.\"\n\n\"Yeah, but he knows the menu. We're going to keep him around, right?\"\n\n\"Yes. He's just not ready for the line. As far as you are concerned, I need you open-to-close Friday and Saturday--that goes without saying-and then on Sunday, open until the dinner rush is over. You'll have Monday and Tuesday off. Be back on Wednesday early to do the ordering and the prep work, then open 'til the dinner rush ends. The same on Thursday, okay?\" \n\n\"Sure. Not certain what I'll do with all the extra time off, but I'll take it,\" I said sarcastically, though with a smile.\n\nGemma held my hand and looked at me, a wave of seriousness washing over her. \"You are a very important part of the equation here, and I don't need another burned out executive chef walking away.\"\n\n\"I would nev...\" I began to interject.\n\n\"I know,\" she cut me off. \"Still, I want you fresh and rested, plus your new duties require you here in the morning to make up the specials and do the ordering,\" Gemma added. We continued to talk shop and iron out details. Gemma and I would interview the potential chefs together, however, I would have final say.\n\nThen she asked me about Madison and if I had seen her.\n\n\"I barely know the woman,\" I asserted, not entirely truthfully. \"We hung out on Saturday night, as you had put together.\"\n\n\"Yeah, I was nervous and out of line Sunday morning,\" Gemma confessed. \"I wanted to apologize, but we got so busy, and...\"\n\n\"It's alright, Gemma,\" I interrupted. \"I know you have a business to run, and you don't want the staff complicating things by...\"\n\n\"...fucking my customers!\" she cut in before I could finish my sentence, and her serious face cracked into laughter. I must say I was relieved when I realized she was putting me on but couldn't hold a straight face for long. We both laughed, and it seemed to snap us out of our awkwardness. \"I have no right to tell you what to do outside of here,\" she allowed in what was truly an apologetic admission. Gemma seemed truly sorry and embarrassed. \"I just don't want you to get into a rut again,\" and of course she was referring to the depression I went through when Kerry tore my heart out of my chest.\n\nGemma had been the one who saw me fall into that hole of despair and sadness. She had been the one who worried when I didn't show up for work at The Catch Of The Day. It was Gemma who called my best buddies Johnny and Tommy and asked them to find me. It was Gemma, with the help of Davey, who found me passed out in a rat hole of a bar on the wrong side of town. Davey and Gemma carried me to her apartment to sleep off the two-day Glenlivet bender I was on. And she did all this while orchestrating her coup d'\u00e9tat at Catch Of The Day. Gemma worried about me and cared for me while concurrently working her master stroke on Big D, leaving him and his restaurant flat and taking trade secrets with her as well as half the staff. Poor Big D! The big jerk never saw it coming, even though he had it coming.\n\nI'd awakened on Gemma's sofa the next day to Davey, Tommy and Johnny. \"Where am I?\" I asked, not fully awake or fully sober.\n\n\"You're at Gemma's place,\" said Davey. \"Look, kid, I know how bad you feel right now, but you gave everybody a scare.\" Johnny and Tommy didn't speak. They just gave silent, concerned looks. \"I understand your heart is broken now, but this is not how you fix it,\" Davey continued in his most tender tone, lecturing me with caution and compassion. \"Fuckin' women, they get us all, but you gotta man up, kid. Having your heart broken, it's a fuckin' badge of honor! You haven't lived until some fuckin' broad breaks your fuckin' heart. Even Frank Sinatra had his heart broken. Ava Gardner drove him fuckin' crazy!. There's no shame in it, but going on a drinking rampage all alone, now that's fuckin' stupid.\"\n\n\"I know,\" I mumbled. All I could do beside feel stupid was to listen, learn, and appreciate what good friends I had. \n\nDavey's handsome smile crept along his tanned face, and he said, \"I smoothed things out with your mama. She knows you're okay, and I told her you were at my place and you'd be home today. But I think there's still a chance she might fuckin' kill ya.\" \n\nJohnny broke his silence and added, \"I'm gonna kill him, too.\"\n\nNow that the spell was broken, Tommy chimed in: \"What did I tell you about those yuppie broads? Find 'em, fuck 'em, forget 'em!\" It was then that I realized that these were the type of friends you kept around for life if you were lucky enough, but Gemma had been the catalyst who brought this search party together. So, when she informed me later that day of her plan to leave The Catch Of The Day, I felt indebted to her and had to follow. \n\nSo much had happened so fast, and it seemed like such a long time ago. Now I was Gemma's Bistro's \n\nhead chef, a title I had coveted for quite a while, at any restaurant. I was staring at Gemma now, trying to figure out what was up with her, because I had the feeling she was holding something back. Why else would she ask me about Madison? And furthermore, where had she, Madison, Kate and the uptight little land baroness gone to on Sunday night? I had flirted with the ideal of asking Madison, but I didn't want to seem possessive or nosy and scare Madison away. \"So. Where did you and Madison and her friends go the other night?\" I asked, as if I was just making idle conversation. After all, Gemma had inquired about Madison, and that led me to believe something was up between the two of them.\n\n\"Davey's,\" she replied.\n\n\"You brought her and her friends to Davey's?\" I was perplexed by the notion. Davey's was that illegal, after-hours club, and it was almost sacrilege to take a \"new person\" there.\n\n\"Yup.\"\n\n\"And Davey was okay with that?\"\n\n\"Yup. I asked him first.\" \n\n\"Uh, well, I guess.\"\n\n\"Don't worry. Davey has it covered,\" she assured me.\n\n\"What do you mean by that?\" I wondered out loud\n\n\"Nothing. Just don't worry. We all wanted to talk, and now I guess it's time you and I talked about it as well,\" Gemma said. Here it comes, I thought, here's what Gemma has been holding back. \"Madison and that Margot woman have deep ties to the marina and real-estate all through the city. Madison's brother George has pull with the city and state, and Davey has dirt on all of them and would rather make some mutually beneficial deals with them and with us and maybe, just maybe, save some of the old neighborhood in the process.\" Wow, I thought to myself This is some real heavy stuff.\n\n\"I want to know what kind of dirt we're talking here,\" I heard myself say.\n\n\"I'm not sure a hundred percent, but it has to do with zoning and bending the rules, stretching all the way to fraud with Margot and just personal gain as far as your new girlfriend Madison is concerned. She needs a few strings pulled in order to close some real-estate deals and have some construction permits approved. But her brother, George, now, that's another matter entirely. In addition to political favors and deals like Madison's, he has more issues.\"\n\n\"What?\"\n\n\"Fast women, slow horses, and cocaine.\" Gemma allowed.\n\n\"Yeah, well, I guess that'll do it. How much is he into Davey for?\"\n\n\"I don't know. Davey is vague when he has to be, and there are probably debts and favors that are owed elsewhere. But Davey would be able to help him, or...\" her voice trailed off.\n\n\"Or what?\"\n\n\"Or not. That's how he has George by the balls. Davey doesn't have to do anything about what George is into him for. He just doesn't have to help, similar to how he has the mayor and some of those city councilors, with a careful, gentle grip on their balls. It's more something with the women as well. I guess George likes them young.\"\n\nThat thought was repulsive to me. My face must have expressed my disgust, because Gemma added, \"It's not that bad. Twenty-one year-olds impressed with his cash flow, and his wife is a city assessing department manager.\"\n\n\"Let me guess,\" I summed up, \"She doesn't know and is dirty, too, and Davey owns her.\" Gemma's half smile and silence were enough to confirm that I was correct. I found it funny how openly speaking about certain things was forbidden in the old neighborhood, as if interested parties could hear our conversation. \n\n\"So where do we come in?\" I asked. \n\n\"Well, we have to cater the regatta ball at the marina. In return, Madison is having Ernest Plorde write a favorable review of The Bistro in the paper and talk us up on his weekend TV show.\" Gemma was grinning like the cat that ate the canary.\n\n\"That guy can be brutal. Madison never mentioned.\" \n\n\"I asked her not to as a favor to me.\"\n\nI was flabbergasted and a bit hurt. How could they both keep this from me? Was I just a tool for both of them? A bargaining chip? A football? I began to protest. \"I feel like I was kept in the dark here, and I'm not...\"\n\n\"Relax!\" Gemma interrupted. \"This happened organically. I met Madison here on your night off. I saw her another time when I was out running. She was running in the opposite direction. She recognized me and stopped, and we talked. After that, Madison became more of a regular customer, and when you finally met her, none of this was on the table. That was Saturday. Sunday was the night we went to Davey's without you.\"\n\n\"Yeah, and?\" I still needed some convincing.\n\n\"That's when Madison, Davey, Margot and I all started talking, you see. You and Madison hooked up before.\"\n\n\"What's it going to cost to cater the regatta?\"\n\n\"All we have to supply is the sweat. The provisions will be paid for by the yacht club, city, state and private sponsors.\"\n\nThat was all very good news. I should have been above the moon, but I couldn't shake the feeling of being deceived and used. A sensible guy would have walked away from Madison, and perhaps even The Bistro. But the fact was, I was hooked on Madison guiding me through the sexual world. I was like a drug addict, and Madison's body was the cocaine. I was powerless to resist my desire to have it.\n\nThe Bistro was another addiction. We were the hottest new restaurant in town; I had earned one of the most coveted positions there, and there was no way I was going to go cold turkey from that drug, either. So I put my thoughts and emotions aside and focused on my work. \n\nWe had an impressive dinner rush for a Tuesday, but it slowed at about 8:15. Gemma approached a half hour later and told me to take the rest of the night off. I was somewhat shocked. \"Larry,\" she explained, \"you are the Executive Chef. Your line cooks can handle the last hour and clean up.\" She had a point. \"You need to be in at 9:00 am to take inventory in the walk-in and do the ordering. And also figure out the specials for Thursday and Friday.\" Gemma convinced me to trust our line and said I had to think outside of just the kitchen now. I went into the basement to wash up and change, emerging a short time later. I could see through the plate glass window the welcome sight of Madison waiting for me. I looked for Gemma to say goodnight. She was at a table with three men in business suits, sipping wine and putting on the charm with a spade shovel. I recognized one man as the neighborhood city councilman but didn't know the other two. Gemma raised her head and smiled at me, giving a friendly wave of emancipation and returned to schmoozing her audience. I waved back and headed for the door, counting down each second 'til I would be with Madison. \n\nStepping out of the air conditioning into the warm, muggy June evening paralleled the gears of life, shifting from me being all business on the line to barely being able to contain my excitement at being with Madison, who looked amazing in a sexy, strapless summer dress. She immediately took my offered hand in hers and asked me how my night was going.\n\n\"Better now!\" I replied with a smile.\n\nWe spoke of many things on our romantic stroll, but I lacked the nerve to ask about any of the details and dealings going on with Gemma, Margot, her and George, and Davey. Madison didn't offer, and I pretended not to know. I didn't want to risk spoiling the night. We both enjoyed the salty tang riding on the breeze, informing us that we were approaching the ocean, and therefore, the marina. The boats bobbed rhythmically to the beat of the waves and the tide, and we made a quick stop at a liquor store and then another stop down the street to rent a movie. Back in those days before when the Internet was barely new, people still rented their movies in cassette form at stores devoted expressly to that purpose.\n\nWe were looking through the available titles when I noticed a doorway near the back of the store. One look at the beaded curtain told me it could only mean one thing: x-rated films! I casually sauntered over to the back of the store for the purpose of sneaking into the adult section and renting a porno movie to watch with my new fuck-buddy. But what if she were offended? On the other hand, maybe she would love it! And then I was right by the doorway to the forbidden treasure chest of hot sex on film. My pulse was pounding! I looked all around the store to make sure it was empty of anyone I might know. The coast was clear. I looked for Madison, still not sure if I should ask her or surprise here instead, but she was preoccupied reading the synopsis on the back of some movie case in foreign film section.",
        "I decided to take a chance on surprising her, so I quickly knifed my way through the doorway into the adult film room. I was almost short of breath with excitement as I looked around for a particular movie I knew we'd both find stimulating. It was one of the few I'd seen and had helped shape my sexual tastes. It was titled, \"Caught From Behind\" and was as old as I was, if not older. I remembered the awful music, entertainingly funny, and the camera work that featured clear, exciting shots of the action. All of the women were hot with hairy bushes and sexy lingerie. I remembered all the sizzling ass fucking but really remembered being totally blown away with a scene with a woman and three men. Seeing this beautiful creature with her rectum stuffed with a monster cock while her hairy pussy was getting fucked by another cock at the same time. That particular scene had scorched itself into my memory as if done by a branding iron. I guessed it was what gave me the idea and the desire to finger Madison's ass while I fucked her cunt the night before.\n\nI pored through the titles, getting more and more aroused just looking at the artwork on the front covers of the cases. Sexy photographs, explicit poses that promised the very apex of pornographic viewing ecstasy. \n\nAnd then I saw: \"Caught From Behind II - The Sequel.\"\n\nI hadn't known a sequel even existed, but I was happy that they had it. Then, remembering how satisfying I'd found the first to be, I guessed every video store would probably have it. It was probably a lot like \"Citizen Kane,\" a standard in its class. I grabbed it and snuck out to go to the front, ducking around the shelves and looking around to get a beat on where Madison was. She was nowhere to be found.\n\nThen I saw her, sneaking into the adult section, unaware of my recent whereabouts! Well, well, this was intriguing! It seemed like the idea of watching porn together wasn't mine alone. I took my time confidently walking back to the curtained room, relishing every step, every second. Once back through the forbidden curtain, I saw Madison looking around the room. \"There you are!\" I said, as I placed \"Caught From Behind II\" back on the shelf.\n\nShe didn't even miss a beat and didn't even look away from the shelf she was perusing as she said, \"I thought you might like to watch one of these, so I came in here to find either you or it.\" This woman was a dream come true! She constantly added new and exciting things to my sexual growth.\n\n\"Well, yeah, sure,\" I admitted. This would be a new experience for me, watching porn with a woman in the room. But how did she know I enjoyed watching porno movies? She must have really been paying close attention the few times I mentioned them.\n\n\"You've alluded to your enjoyment of these during some of your shame-free sex rants,\" she explained, as if to read my mind.\n\n\"I have?\"\n\n\"Yes, when you're really into it and about to come. You'll say anything that's nasty and dirty at that point.\"\n\n\"Yeah,\" I confessed, turning red, adding, \"I've only seen a few and not that often.\" \n\n\"But you have seen them and thoroughly enjoyed them,\" she said, and it wasn't a question.\n\n\"Well, yes,\" I squeaked. \n\n\"Yes, you said that, and those few times you did were landmark moments for you, and I know you use your memories of them when you have... organ practice... don't you?\"\n\nNow I knew what was happening. She was being the dominant woman again and the master of her sexual Zen beliefs. She enjoyed the power she had over me, the force she used to squeeze every dark desire out of me, extracting all of my sexual secrets in a primal way. She just reveled in hearing the carnal truths about me.\n\nAnd no doubt moistening her vagina at the same time.\n\nShe tilted her head, pointing her nose in the air and looking down knowingly, those sexy, smoldering eyes demanding my honest answer.\n\n\"Yes... I do,\" I admitted finally, reminding myself that I had to be truthful with her, especially when it came to sex and desire. \"Have you see any yourself?\" I asked.\n\n\"One... called 'Story of O,' but I think that one's too artistic to be called porno. Well, I did see another back in college. We were at this huge party, and one was on, but I was too drunk and distracted to remember much, other than it being overly oral,\" Madison admitted.\n\n\"Well, I guess that you didn't see the right movie, one that matches your interests,\" I said, now becoming the expert, confident and convincing.\n\n\"You don't say,\" she answered in a deliberately slow cadence, acknowledging the boost in my confidence with just a twinge of sarcasm.\n\nI reached for the copy of \"Caught from Behind II\" from the shelf and handed it to her. \"This is more our speed,\" I stated with authority. There was a beautiful blonde woman on the cover with her back to the camera but turning at the waist to face the us. Teasingly, she was spreading her ass cheeks with one hand and fondling her tits with the other. Madison read the full title:\n\n\"Caught From Behind II - The Sequel\"\n\n\"Sensual Anal Erotica - Your Rx for Hardcore Sex!\"\n\nMadison stared right at me with those piercing, sexy eyes and held me captive for a long second. It seemed like an eternity. I didn't know if I'd gone too far and offended her, and I felt real fear.\n\n\"Well,\" she finally said in a soft, low voice, breaking the tension, \"I'll have to trust your expertise on this matter.\" I was relieved. We walked out of the adult section toward the front of the store where the mainstream films were shelved. Madison grabbed a title from the \"new releases\" rack, some artsy, period piece I'd never heard of, and we continued to the check-out counter with our selections. It was then that I realized with some foreboding that I would have to complete the transaction with the clerk, and I was suddenly shy about what we were renting. The situation had all the ingredients for a memorably embarrassing moment. I drew in a breath and walked like a man headed for the gas chamber. \n\nMadison's ESP-like ability to read my thoughts kicked in, and she sensed my trepidation. \"Are you going to be alright?\" she asked, half concerned and half annoyed. The tone of her words had another meaning in them: \"Man up and summon up the nerve to follow through.\" To make matters worse, the clerk was a middle-aged woman, but she was engrossed in some grocery store tabloid newspaper. She lifted her head only long enough to give a perfunctory smile and process our rentals, bagging them up without a word. I was grateful for her professionalism, if professionalism was the right word to characterize her disinterest.\n\nOnce outside the store, Madison said, \"I'm very proud of you,\" while she stroked my shoulder with the palm of her elegant hand. \"That was very brave.\" I was proud of myself, and the feelings of accomplishment and growth caused me to smile unwittingly. Any time she complimented me or gave any hint of approval or acceptance, I was overjoyed and unable to hide it. Madison took hold of my hand and hugged my arm with hers. \n\nWe walked briskly, our mutual anticipation of the sexual activities to come spurred us like stallions on their way to the stud farm. Almost at once, the sky opened on us with a light drizzle as if to cool our burning loins. As we neared Madison's condo, the drizzle turned into an all-out summer downpour. The rain soaked us to the bone, and we ran the rest of the way. Once inside the building, Madison removed her shoes and had me remove mine before we entered her door. She disappeared down the hall as I began to strip out of my wet clothes. The smell of the rain had given way to the nice, clean smell that always accompanied her condo. It was some mix of dry flower potpourri with eucalyptus being the predominant scent.\n\nTo this day, just a whiff of eucalyptus hardens my cock. \n\nMadison came back down the hall wearing a black, sheer robe and carrying an empty laundry basket in one arm and a towel in the other. \"We'll put these in the dryer,\" she said, taking the wet clothes and handing the towel to me. I dried myself, wrapped the towel around my waist and walked into the living room. \"It's getting late,\" she said when she returned. \"If we watch a movie, we may have to call it a night.\"\n\n\"But we walked all the way there and back and braved an ocean of rain in the process,\" I protested.\n\n\"Okay, but I'm not promising anything when it's over.\" She turned on the entertainment system and asked me with a wry smile, \"So. What movie do you want to watch?\" Within seconds, we were sitting next to each other viewing the FBI warning that preceded the movie. Madison produced a tube of K-Y Jelly from the pocket of her robe \"just in case.\"\n\nThe movie began with a silly but sexy, song, and the opening scene started with Ron Jeremy, \"the hedgehog,\" in lab coat, stethoscope, and one rubber glove. His character was \"Doctor Peter Proctor,\" owner and operator of \"Doctor Proctor's Anal Sex Clinic.\" His job was to educate couples who had certain \"sexual hang-ups\" about \"the anal alternative\" and that \"there was more to life than just the pussy.\" The silliness of this made me a little uneasy. I was feeling a little stupid and embarrassed, wondering if perhaps I had pushed this on Madison. She stared at the television with a stoic, emotionless mask of indifference.\n\n\"I feel stupid. Do you want to stop this? Are you mad or offended. I'm kind of ashamed of myself for making you watch this,\" I blurted out without my own permission. My inhibitions were fighting back once again. Madison, cool and calm, sat with her arms folded and her legs stretched out with her feet crossed in a picture of relaxed disinterest. Finally, she turned her stare upon me, those sexy eyes intimidating me. She said nothing, looking at me for a long second, then turned her gaze back to the television and the vibrant carnality unfolding on the screen. She was wordlessly telling me to just be still and watch, so I also turned my attention back to the TV. \n\nThe first sex scene starts. The female is a petite brunette with smallish but firm breasts. Her stud is wearing a ridiculous knit sweater and blue jeans with his cock sticking out through his unzipped fly. She's on her knees sucking him off. After a short time, he pulls out of her mouth and shoots his load on her pretty face, a flashing memory of Big D busting his nut all over Gemma's face jumped into my mind-another intrusive thought of Gemma while I was in a sexual situation. \n\nWhile the movie scene was enjoyable to watch, that first bit of action was just what Madison said about being \"overly oral.\" I really wanted her to like what we were watching, and I hoped it would get more diverse for her sake and for the future of us watching porn together.\n\nThe next scene has our same two stars paying a visit to Doctor Proctor's office, and it develops that the entertaining blow job is the extent of their kinky sexual activities. The kindly doctor tells them to broaden their horizons and try \"the anal alternative.\" The couple finds this interesting, but they are \"not sure.\" Soon, more sex ensues, oral, vaginal, and finally the female talent turns to her stud and says, \"Let's try it!\"\n\n\"Try what?\" is his response, his nonexistent acting skills glaringly showing through the thin veneer of the shoestring plot.\n\n\"The 'anal alternative' he suggested,\" says the wife, with prick hardening precision. Her acting was better, or perhaps she just had the good fortune of reading a more effective line there.\n\n\"You mean?\" responds the stud in a hammy, tongue-in-cheek way.\n\n\"Yes! I want it in my ass!\" And as cheesy and contrived as this ridiculous dialog was, when the actress recited her line about wanting it in her ass, I got an instantaneous erection. \n\nThe scene cuts to a shot of our heroine on hands and knees, the beautiful shape of ass adorned in fishnet stockings and garter belt. She braces herself to take several rock-hard inches of man meat to fill her rear end. The stud mounts her and slowly eases the head of his tube steak past the lubed ring of flesh. \n\nWatching the actress' perfect ass getting fucked had me riveted. I remembered I wasn't alone and snuck another peek at Madison. She was watching closely, gently biting her bottom lip, a subconscious habit of ecstasy and a telltale sign she was enjoying what she saw. \n\nMadison had told me in her own words that women were \"sexual beings just like men,\" and that \"we women masturbate just as much, if not more than men,\" and I believed her, having previously witnessed her masturbate both vaginally and anally. However, seeing her getting off to porn was a pleasant surprise. She'd suggested we rent some porno and hinted she wanted to, but I thought she was only doing it for me. Well, nothing is real until it's real, I thought to myself as I watched her hands move closer to her crotch. A stake was being driven through the heart of whatever doubt I had. Wow, she wants to masturbate to porn just as much as I do. That thought alone was enough to get me going. \n\nWatching this movie with Madison was definitely making me very horny! And then, suddenly, in a sultry, sexy tone, she asked, \"Does watching this make you hard?\"\n\n\"Yes. Very hard!\" I answered. looking down at my now fully erect beef pole. I stood up to let my erection speak for himself, giving Madison an eye full of my \"beautiful penis.\" \"Yes, I love watching these,\" I confessed, swallowing the shame as I sat back down.\n\n\"I'll bet you would love to stroke that beautiful penis of yours to what you're seeing. And shoot your come all over my floor. You can redeem yourself by showing me what an obedient boy you can be.\"\n\n\"What? How?\"\n\n\"I want you to stand up again. Stand up for me. I want to see you play with it. I want to watch you masturbate in front of me. I want to watch you do it and see your expression as you toss off,\" she said, and then she scorched me once again with those sexy eyes, the eyes that had a hypnotic power over me.\n\nI did as she commanded. \n\nI arose and then placed my hand on the base of my cock and just kind of held it there.\n\n\"Lube up your cock and play with it for me,\" she instructed.\n\n\"Wha...\"\n\n\"Don't ask questions. Do as I ask, please. I want you to jerk your cock now, while you watch these people having sex.\" I was turned on by this, especially the feelings of shame and stage fright of being watched. The rush of shame or conquering it, whatever it was, felt good, and I was in love with it. Madison handed me the tube of K-Y jelly, never taking her eyes off me, then she urged me to action with a silent nod of her regal head. The K-Y felt cool in the palm of my hand as I squeezed out a liberal amount and spread it over my entire prick and ball bag. This transitioned from applying the lubrication into full-out, full-fisted strokes up and down the entire length of my aching sex.\n\n\"Is this what you do when you're alone watching these?\" Madison pressed, her voice thick, dark and sweet as melted chocolate. It set me on fire knowing that watching me pull on my dick made her horny.\n\n\"Uh huh,\" was my retort, as sensation was taking away my power of speech. On any normal day, the images on the screen would have been enough to get me off, but being watched while I masturbated took this to another level. I never had the chance to spank it to a porno movie in person, having always watched them with friends, sometimes in large groups, so \"pumping one out\" was never an option before. I'd only been able to masturbate to the memories of what I'd seen. \n\n\"That's it, jerk it. I like watching you jerk off,\" she cooed. I continued to slide my hand up and down the shaft of my diamond-hard hog. I stopped when I felt myself nearing the edge of orgasm. I didn't want to come, not this way yet. \n\nSince Madison was watching and enjoying, I thought I'd ask a few questions of my own. \"Are you getting wet?\"\n\n\"Mmmm, yes, I've been wet since he started fucking her,\" she gushed, referring to the stud in the movie.\n\n\"I want you to undo your robe and show me your pussy,\" I said, using the word \"pussy\" eexclusively because that was the word we'd agreed on. It was a word that I was shy to use a few days ago, but now it flowed freely from my mouth. In slow motion, Madison reached down with both hands and parted the bottom half of her robe. The dark landing strip of pubic hair stood out against her creamy skin. \"Now I want you to play with your pussy for me.\" Her hands inched toward her snatch, and she parted her cunt with her right hand and started to manipulate her clitoris with the fingers of her left. \n\n\"So seeing her getting fucked makes you wet and horny, like it does for me.\"\n\n\"Yes, almost as much as seeing you beating your meat.\"\n\n\"Good! Are we enjoying ourselves?\" She answered by stimulating her clit with more vigor, and the wet \"tak, tak, tak\" sound it made was her wordless reply. My nostrils were soon filled with the aroma of hot, fresh, dripping cunt.\n\nI dropped down beside her on the couch. We both watched the sex unfold before us on the screen as we masturbated side by side. Every now and then I would give myself a break and just rub my ball bag with the well-lubricated palm of my hand so as not to come before I got to fuck Madison. At one point, we looked away from the screen and made eye contact. I continued to jerk my hog as we stared at each other, her lust-filled eyes along almost making me shoot my goo. I gave myself a rest and returned to watching the action. \n\nOutside, a driving rain had begun to fall, and the sound of it bouncing off the window panes created a cozy effect. The boom of thunder here and there drove home the ferocity of the storm, matched only by our passion-filled sexcapades. \n\n\"I can smell your pussy juice; you must be close to coming,\" I said, and I wanted to touch her, to feel her skin, her warmth, next to mine. I put my hand on her thigh and slowly caressed it. Madison purred her approval, letting me know she not only liked the porn and my touch at the same time, but that she wanted more. In a slow but steady journey, my hand made its way toward her erogenous zone, and with my hand flattened out, fingers together, I reached for her sex triangle. My hand took over for hers, and I began gently rubbing her entire vulva. My middle finger, parallel with the crevice of her sex, was already soaked by her wetness. \"Do you like what you see?\" I asked as I spread her swollen pink cunt lips.\n\n\"Mmmmmm.\"\n\n\"Does his cock look good to you?\" I asked, gesturing at the screen. \n\n\"Mmmmmmm, yes,\" she hissed as I began to rub her \"v\" with increasing pressure.\n\n\"I bet you'd like a nice, big cock like that going in and out of you.\" \n\n\"Mmmmmm.\"\n\n\"That looks so fucking good, it's getting me so hot.\" I proclaimed. In the movie, Doctor Proctor had joined some of his other patients, another couple, in their activities. Ron Jeremy's huge dick introduced a raven-haired beauty to the wonders of sex involving the rectum while the stud in the scene was fucking her honey pot: A double penetration scene that was the trademark of the original \"Caught From Behind.\" It was a scene I wanted Madison to see, because I wanted to see her reaction. I was curious to know if an anally inclined woman like her would desire two men fucking her at once.\n\nHave you ever had two cocks at once?\" I asked. \n\nHer enjoyment of the visual feast and the physical pleasure of my hand rubbing her pussy slightly hindered her ability to speak. \"Mmm, nuh, nuh, no.\" she managed.\n\n\"I bet you'd love it.\" I suggested. She was really into it now, and seeing the woman stuffed with cocks in two holes at once really had her going. \"Would you want that? Two cocks at once?\" I pressed.\n\n\"Yes! Mmm, yes, two cocks at once,\" she uttered.\n\n\"Would you suck one cock and let the other fuck your pussy?\" \n\n\"Nnnn, no. One in my pussy and one in my ass.\" This revelation gave me a slight pang of jealousy while also peaking both my libido and my curiosity. I was aroused by the thought of Madison being such a dirty, naughty woman up for anything but hurt somewhere inside by her interest in getting doubly penetrated. The thought of sharing her with another man both distressed me and intrigued me. I was sexually stimulated by that pang of jealousy just like my new found enjoyment of shame. Dismissing the negative part of the thought and embracing the sexy, fun part as fantasy heightened the mood.",
        "I looked at her. She was beautiful, sitting beside me on the couch, naked except for her black sheer robe with the fuzzy marabou trim. She sat upright, her perfect legs hiked up, feet apart and flat by her side, with one hand resting on one knee while the other hand fondled her own breast. I spread open the lips of her pussy, exposing its pink interior, glazed wet with her sexual juices. I felt a hand slowly petting my ball sac and then taking hold of my cock to jerk me off.\n\nWe sat there playing with each others sex organs and watching porn. This was really a wonderful moment, pleasing one another and watching nasty, naughty sex displayed on screen and shamelessly enjoying all the touching, the talking, the openness. The feeling overcame me, and once again I turned my gaze away from the screen and faced Madison. Our eyes met and locked on each other. I was staring into her sexy eyes as we masturbated one another.\n\nI leaned in to kiss her but then pulled back for a long second.\n\n\"I want to put you over my knee,\" I said in a commanding, yet sexy voice.\n\n\"Why? What type of things do you want to do to me?\" \n\n\"I want to spank your bottom 'til it's red. And then I want to subject you to some serious ass play, until you beg me to fuck you.\"\n\n\"Mmmmm! That sounds delicious, Chef Lawrence.\" She obliged me and I felt her skin on mine as she let go of my cock to climb over my lap. Once draped over my leg, she turned her head to get a good view of the next sex scene of the movie. I lifted the bottom of her robe to expose her perfectly shaped buttocks.\n\n\"So you want two cocks, do you?\" And before she could answer, I reached back, flattened my hand and swung at her. There was a satisfying, smacking sound when it connected with her exposed bottom.\n\n\"Ohhhh!\"\n\n\"Here you are, watching porn and fantasizing about getting double stuffed with cocks-very naughty!\" I let fly with another smack to her behind, this time to the other ass cheek.\n\n\"Yes! I would love to get fucked by two big cocks at the same time.\" \n\nI smacked her again. \"I think if you keep talking nasty like that, I'll have to get you a third cock to stuff your filthy mouth with.\" \n\n\"Oh, three! I would lo...\"\n\nSmack! This time, the blow caused the flesh of her hind cheeks to undulate and quiver. Those perfectly round globes of flesh were now flushed red from the impact of the spanking. Placing a hand on each buttock, I spread open her ass crack, and I was overcome with the urge to play with her fuck holes, and especially her rectum, while looking down at the magic ring of flesh in the center of her flanks. I remembered how I loved applying lube to her asshole, massaging it around the pink wrinkle of corrugated skin. \n\nMadison saw me reach for the K-Y Jelly I had placed on the end table. A quiet look of satisfaction crossed her gorgeous face, knowing that we were going to get very anal very soon.\n\nI removed the cap and squeezed out an ample amount on my fingers, then began to prep her rear entrance by spreading a large glob over it. As I slowly inserted my index finger in her ass while on the television, the stud was prepping his woman's asshole for fucking as well, first with his tongue, then digitally.\n\nIn our short time as sex partners, Madison had made a few subtle hints that she wanted more rectal foreplay, or \"ass play,\" as she called it, before our anal interludes, just some little hints when I would mount her and during pillow talk or some times while basking in the hot post-sex afterglow. Because it had been new to me and also because it was like a fantasy come true, I'd been eager to get down to business, and that may have been a slight disappointment to a woman so well in touch with her forbidden orifice. I wanted to give Madison all the ecstasy I could and to take our time and enjoy every second of our \"process of pleasure.\" Now, having already been in her ass, I allowed myself the patience to just relax and give her everything she could hope for. \n\n\"I want to see how many fingers I can fit in your ass while you're watching it happen on the screen,\" I told her.\n\n\"Ahhh, that would be nice.\" She now wore a smile of joyful anticipation and wiggled her beautiful bottom excitedly. This confirmed my suspicion. I had just cracked a code and won a point of approval from her, and her eagerness energized me just like telling a kid he could have anything he wanted in a candy store. Her nether region was mine to do with as I wished. I pushed my finger deeper into her tight ass. As soon as I felt her ring of passion adjusting to the finger penetration, Madison verbally confirmed what her anal muscles already told me as she shamelessly begged: \"More! I ww-want mmm-more fingers up my asssss, uhhh, pulleassssse.\" \n\nI relished watching her pink and brown starfish pucker like pursed lips about to bestow a kiss as I withdrew my finger slowly. With my finger removed, her anus was now dilated ever so slightly, and I applied more K-Y to it. A large glob of the clear jelly slid like melting ice over the folds and wrinkles of soft anal flesh. I pushed it inside the tiny aperture my finger had created, spreading the lube around just inside the opening. Then I slathered my middle finger with plenty of the gel. Once this was done, I crossed my two lubed fingers, only with the tips aligned together, and inserted both into Madison's hungry anus. As they made their slow descent down into her dark pit of pleasure, I teased her cunt with my other hand. \n\nMadison was in complete ecstasy and still staring at all the fucking going on in the porno. I could tell she was savoring both the internal sensations and the white hot sex being performed in \"Caught From Behind\" before her. As she and I watched and played, Ron Jeremy (a.k.a. \"Doctor Proctor\") was now ramming his giant rod into the ass of yet another beautiful starlet. \n\n\"Look at that ho getting fucked in the ass! Does it look good to you?\" I asked.\n\n\"Of course it does. Ohhh, uhhh, I want you to stretch my ass further, uhhmm,\" Madison moaned.\n\n\"What?\" I answered, knowing what she'd said but enjoying the words so much I wanted to hear her say them again. \n\n\"I want you to use more fingers and stretch my ass open more. I really want to feel open and stuffed back there!\" Her backdoor looked so inviting that I wanted to bury my prick in her immediately, but I held back and lubricated my ring finger instead and used all three to coax open the pathway to my sexual Valhalla. \n\nAnd then I worked up an idea. I would lube up my entire hand, compress all five of my fingers into the shape of a cone and slowly penetrate her with them all. The gape of her sphincter was larger than I had seen it before, and I could tell she was relaxed and waiting. My five fingertips were up against her bunghole, and all five slid into her with ease up to the first knuckle. Just then her hand reached back and grasped my wrist. She guided my hand into her rear deeper and deeper, and after a few short pauses it was almost completely submerged into her rectum. I marveled at what her ass could accommodate! \"How does that feel?\" I asked with the awe and wonder of someone who'd just seen the sun for the first time.\n\n\"Wonderful! I'm in fist heaven!\"\n\n\"Good. Now, continue to stimulate your clit.\" \n\nAfter a few minutes, Madison moved around, adjusting her position slightly so she could give me some head. She took my manhood into her mouth. I couldn't believe she was able to suck me with such skill while my hand was inverted in her ass. She was just getting into the rhythm of an amazing blow job when I stopped her as I neared my nexus. Madison looked puzzled. \"I want to save it for your ass,\" I said. Without a word, Madison stopped and stared at me, shocked as if her mind had been read and her deepest desire had been revealed. I could tell I'd hit the right note once again and that it was the sexual song she wanted to hear. Her blank expression barely hid her internal ecstasy.\n\n\"Like I said, I'm going to pound your butt hard all night.\" She digested that and finally broke her stare and just rested her head and watched the porno with my fist still in her bum. We lay there in a sweaty heap of sexy flesh, both near the apex, watching \"Caught From Behind II,\" every now and then masturbating each other to keep ourselves on that orgasmic edge.\n\n\"Do you see what your cock is like compared to the men in this movie?\" she asked.\n\n\"Um, I wasn't concentrating on the cocks, to tell you the truth.\"\n\n\"Well, do you see how much more attractive yours is compared to theirs?\"\n\n\"I guess. I don't find cocks attractive at all.\"\n\n\"Your cock is every bit as big, but it's a thing of beauty as well. You have the perfect cock.\"\n\nWow! This was the second time Madison complimented me on my cock, and I was tickled pink about it!\n\n\"And you are way better looking and in much better shape than any of the males in this movie. There really is nothing handsome or attractive about them, other than their big, fat cocks.\" Madison dragged out the last three words as if underlining the dirty parts. She paused briefly and shot those sexy eyes at me and said, \"You have got it all over them in that department as well.\"\n\n\"I should go to Hollywood and get paid to fuck beautiful women,\" I said with a smile. Madison smiled back. \"You know, my penis isn't the only beautiful thing around here. You, Madison Foss, are pretty awesome, too,\" I remarked, not wanting to sound too lovey-dovey and scare her but wanting to pay this carnal conduit of sexual joy a well deserved compliment.\n\n\"Enough talk,\" Madison announced abruptly. \"I want your cock. Now! And I want it in my ass!\" She was still over my lap with an assfull of my right hand when she turned on her side, slowly bent her knees, reached back and took hold of the wrist of my fisting hand. It was with the care and precision of a tightrope walker that she slowly pulled my hand out of her naughty pleasure passage. Her yawning anus gaped wider than I ever suspected was possible-you could have looked up inside her-and it was framed by her perfect ass cheeks that were still glowing pink from the punishment they'd received.\n\n\"Spoon me,\" she said, and I lubed up my cock once again and slid myself between her and the back of the couch. We were now spooning with me behind her, and I propped myself up on one elbow to anchor myself and get some leverage to my hips in order to fuck her ass properly. My jism engorged cockhead effortlessly slithered deep into her rear joy hole. Madison's backdoor to heaven was so open I was balls deep inside of a second, her rectal muscles showing little or no resistance to my intrusive dick.\n\nJust like the astronauts from Apollo 11 had inserted a flagpole into the moon and claimed it, I buried my beef pole into Madison's moon. I had done this in our last anal session, and it had worked for both of us. I loved having her as a fuck buddy, and she made me feel good. But I didn't think I'd ever want to share her. It occurred to me that I could test the water to see where we were as a couple by asking a question. If it didn't go well, I could just say it was \"Dirty talk\" and not an inquiry into our relationship: \"Whose ass is this?\" I insisted.\n\n\"Mmmmmmhhhh!\"\n\nSmacking her buttock with my free hand, I demanded again: \"WHOSE ASS IS THIS TO FUCK?\" I launched my pelvis into her bum full speed to emphasize my need for an answer, the wet slapping sound of our sweat-drenched bodies made when they collided was loud and echoed by the sound of my seed bag smacking against her dripping wet twat. \"Tell me it's my ass!\" I ordered.\n\n\"Uhhh, Ohhh, it's, uh, my ass,\" she responded. Was she deliberately being difficult, or did she just not get it? I unleashed another hell's fury fuckstroke, this time hitting so hard she almost came \"AHHH!\" was all she emitted.\n\n\"Tell me. Whose ass is this for the fucking?\" Before she could even think about answering I humped again as hard as I could. \"Now tell me it's my ass!\"\n\n\"Ahhhh, it's my ass.\" \n\n\"No! Say it's MY ass!\"\n\n\"It's your ass.\" I rewarded her compliance with another hard plunge.\n\n\"Whose asshole?\"\n\n\"Yuh, yuh, yours.\"\n\n\"That's right! This is my asshole to stretch and fuck with my 'beautiful cock.'\" I could clearly see her rubbing her clitoris as I slammed her. \n\n\"Whose asshole is it?\"\n\nSlam!\n\n\"Yours! It's your asshole to fuck, uhhh, fuck, fuck it!\"\n\n\"Very good! And as a treat, I'm going to fill it up with hot cock cream!\" Madison began to convulse in orgasm. \"Tell me you love having my cock in your ass!\" \n\n\"I uhhh, oooo, l-l-love having your cock up my asssss ooooooahhhh! I LOVE IT!\"\n\n\"Your ass feels so good!\" The sensation was different but equally good as before. Her rectum was so wide and loose, but deeper and more accommodating fur furious balls-deep fuckstrokes. I was humping her hiney so hard I thought my balls would fall in, too! Her rectum pulsed and spasmed as she came, and I exploded with satisfaction as I squirted load after hot, creamy load deep into her bowels.\n\nWe collapsed in a ball of intertwined limbs, bodies, and sweat.\n\nWhen the morning came we showered, dressed, and I headed out. Madison had to do some work from home that day, so I wanted to get out before her conference call began. I downed my coffee, kissed her goodbye and left.\n\nAs I closed the front door behind me, I heard someone in heels descending the stairs from the floor above. The first thing to come into view was a pair of heels and lovely ankles. As the mysterious feet made their way down, I saw them connected to a terrific set of legs, then to an hourglass body dressed in a short, business skirt. Then, finally, a familiar face: It was Kate, Madison's sexy friend. \"Hi,\" I managed to say in half surprise.\n\n\"Well, hello, and good morning to you!\"\n\n\"I didn't know you lived here.\"\n\nShe smiled. \"Madison didn't tell you? She owns the first floor. I own the second, and we share the roof deck.\"\n\n\"Wow! A roof deck. That sounds nice. The view must be awesome up there.\"\n\n\"It is. Now, tell me, did you and Madison ever figure out just who her ass belongs to?\"\n\nSuddenly, I felt faint, embarrassed, and totally blindsided. Kate continued to walk down the staircase to the landing I was on, now eye to eye with me, her pretty face close to mine, kissing distance, so close I could smell her perfumed hair. \"These ceilings are paper thin, sorry. But don't worry, you and your 'beautiful penis' and all your sexy secrets are safe with me.\" \n\nShe adjusted my shirt collar, lightly caressing my shoulder in the process. I could have been knocked over with a feather. Then she winked and sashayed her way down the hall, proudly waving her lovely ass like a banner."
    ],
    "authorname": "erotica881988",
    "tags": [
        "anal",
        "porno movie",
        "mutual masturbation",
        "anal play",
        "anal fisting",
        "older woman younger man",
        "oral",
        "spanking",
        "masturbation"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/anal-summer-ch-06"
}