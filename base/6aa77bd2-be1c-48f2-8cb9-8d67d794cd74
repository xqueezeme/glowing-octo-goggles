{
    "title": "Fire in the Embers Ch. 05",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\n Feedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\n This story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n\n\n Part 21 - Interdictions \n\n It was the early morning hours of Saturday, November 14th. And I was facing the greatest crisis of my TCPD career, maybe even worse than the time my nephew Ned fired a bullet into me in the Ward Harvester warehouse. It was now time to resolve this crisis, for better or for worse...\n\n * * * * * * * * * * * * * * * *\n\n The KSTD news van was parked at the Fairgrounds, and they were watching Police Headquarters like hawks. This did not suit Your Iron Crowbar very well at all, and I had Police cruisers ready. \n\n As the 'Tunnel Rats' SWAT Team pulled out, one KSTD van tried to follow them, when one Police car cut them off and another came up behind, blue lights flashing. When the KSTD van tried to go around, they were stopped again, and the crew inside arrested for trying to evade Police.\n\n Another van tried to follow Teresa's squad, and they were likewise stopped by Police cruisers. They did not try to flee, and so were not arrested, but held in place for the next hour.\n\n I had Cindy in my Police SUV, and we drove out of Headquarters and went north, the opposite direction of Fillmore Pharmacy and the impending raid. This was in case anyone else was watching me. Sure enough, yet another KSTD van began following us. I radioed the Police cruiser behind them to not pull them over until we reached the Bypass Road. Once there, the van was interdicted.\n\n * * * * * * * * * * * * * * * *\n\n The Tunnel Rats came out of their van in an alley behind another building, where they were completely hidden. They rushed to a manhole, opened it, and went down into a tunnel. They had night vision goggles and ultraviolet lights that couldn't be seen but gave them them the ability to see. \n\n They arrived at the 'T'. To the right was the tunnel that led to the back of Fillmore Pharmacy's basement. They blew up what looked like a rubber raft to block the perps trying to go the other way, and they were on the near side, ready for a party. The leader had the last man run to the manhole and up, to give a radio signal that they were in place.\n\n * * * * * * * * * * * * * * * *\n\n \"There's the signal.\" Teresa whispered. They were down the road from Fillmore Pharmacy, which stood alone on what seemed to be a bit higher elevation than other buildings. The approach would be difficult, but there was an unpaved access alley that was dark, with woods on the other side. Some officers would guard the back door in case someone tried to run out that way, but it was the front door through which they would go.\n\n Patrol cars had ridden by but did not stop there, in case anyone inside was watching. Spotters with infrared binoculars had crept up around buildings on the other side of the street, seeing if they could spot heat signatures inside. There had been one or two earlier, but now there were none.\n\n \"Ready?\" Teresa whispered. Hugh gave a thumbs-up. He went forward with several men. One had a battering ram. Like lightning, the ran up the steps to the door, and battered in the door. They silently cleared the front rooms, then two men cleared the back area that had been the pharmacy part.\n\n\u2028At the same time, Teresa led more men to the basement door. One man had a huge metal shield and led the way, Teresa right behind him, using him and his shield for cover. He couldn't really fire; if they met the Enemy, she would begin shooting.\n\n And she did.\n\n Ratta-tatta-tatta!\n\n The perps had swarmed out of a room to the left just as the front man got to the bottom step, firing their military-style weapons. Teresa fired around the side of the shield, and the four perps ran pell-mell the other way down the dark hallway. As Teresa and her team edged forward, they heard yells way down that passage to halt, followed by an exchange of gunfire, then silence.\n\n Teresa got to the room which was was a cage. Seeing through it, she saw Gor-don on the right side bed, sitting naked, his hands in the air. Then, on the left side, Jenna came into view. She was lying on the bed, naked, barely conscious.\n\n \"Oh my God.\" Teresa whispered, then went into the room. \"Are there any booby traps in here?\" she called out to Gor-don.\n\n \"No.\" he said. Teresa got to Jenna, looking around for something to cover her with. Someone brought her a blanket.\n\n \"Jenna, are you with me?\" Teresa asked. Jenna opened her eyes, barely, then nodded.\n\n \"Stay with me, Jenna.\" Teresa said. \"Medics are on the way.\"\n\n \"Where's.... Cindy....\" Jenna whispered.\n\n \"She's upstairs.\" Teresa said. \"The Iron Crowbar held her back, in case...\" She did not need to say more.\n\n * * * * * * * * * * * * * * * *\n\n Upon hearing the 'Go' signal on the radio, I turned on the blue lights and sirens and tore down University Avenue to Jefferson Avenue, as did a number of other Police cruisers. Hurtling through the streets, Cindy and I got there right before the EMTs did. I did not let her go inside, of course. We watched as EMTs took stretchers into the building. \n\n By this time, KXTC vans were pulling up. Having shown restraint and decorum, they were getting exclusive footage that KSTD would not be getting. Sergeant Rudistan already had a cordon around the area and was keeping the reporters back. Bettina was there, trying to get my attention, but I waved her off.\n\n The first stretcher that came out carried Gor-don on it. He was put in one of the two ambulances at the scene, which drove off to University Hospital. Then the second stretcher came out, and Cindy rushed to it. She held her face firm as the EMT's loaded Jenna in the vehicle, and let Cindy get in with her.\n\n Once inside, Cindy could not hold back the tears. \"Oh my God, what did they do to you?\"\n\n Jenna looked up through her swollen eyes. \"I was wondering where you were.\" she tried to joke.\n\n \"It took the Iron Crowbar himself to keep me from rushing down there.\" Cindy said. She gently patted Jenna's hair back from her face. \"I'm sorry, I'm so, so sorry...\"\n\n \"It wasn't your fault...\" Jenna said. She tried to reach up to touch Cindy's face. Cindy took Jenna's hand into her own.\n\n \"Just relax, baby.\" Cindy said. \"We're taking you to the Hospital...\" \n\n Part 22 - Aftermath Of Horror \n\n I looked at the metal shield the first SWAT man had used as they descended the stairs. The bulletproof glass square giving him vision was okay. But there were four deep pockmarks where submachine gunfire had struck the shield.\n\n \"That takes some stones, to walk into that.\" I said. \"Great jobs, guys.\"\n\n \"Just doing our job, sir.\" said Hugh Hewitt. \"We got the hostages alive. Too bad we can't say that about the perps.\" \n\n Once the perps had realized they were trapped and going to be captured, they'd all taken cyanide. Two had been mortally wounded by SWAT gunfire, but had been able to bite down on their cyanide capsules, which I surmised were in their mouths when they tried to flee.\n\n Fingerprints would later show them to be ex-cons with long rap sheets, and all of them recent parolees of the State Prison System. Jack Muscone made special note of that and sent a report to his FBI colleagues...\n\n * * * * * * * * * * * * * * * *\n\n It was four o'clock in the morning. A SWAT Team had gone to the manhole at Courthouse Square, gone into the tunnel and searched around, but had found nothing. I'd told them to be watchful of booby traps and bombs, but they found none of those, either.\n\n I told Myron to destroy the DVDs he'd made from the files on the servers, which he immediately did as Jack Muscone and I watched.\n\n It might have been for the good that Jenna Stiles was in and out of consciousness at the hospital. Crime Lab people were taking samples, including the rape kit. The doctors had confirmed that Jenna had been raped multiple times, and that she had been severely beaten as well. There were small cracks in the bones around her eyes and her jaw, but they were hopeful her sight would not be affected. She had bruises all over her.\n\n Gor-don had bruising on his face, especially his cheeks, but no broken bones, no hairline fractures. He had some bruising on the back of his thighs and his buttcheeks, but the doctor said he'd not been anally assaulted. He was giving statements to Detectives Nash and Cummings already, but it'd be some time before we'd get Jenna's statement.\n\n I felt exhausted as I went into the Chief's conference room. Inside were the Chief, Sheriff Daniel Allgood, D.A. Krasney, and Jack Muscone.\n\n \"Excellent work, Commander.\" Moynahan said as I closed the door and sat down in the nearest chair, to the Chief's right. He was at the end of the table nearest the door, the Sheriff across from me, Krasney to my right.\n\n \"Not me.\" I replied. \"The SWAT Team and Lieutenant Croyle and her Vice Squad got them back alive. Vice and their C.I.s got us the info on Fillmore Pharmacy, and Detective Cummings made the observations and deductions.\"\n\n \"Chief Griswold was right, you are too modest.\" said Chief Moynahan. \"I saw great leadership tonight, under the most extreme durrrressss. You were the glue that put that all together, kept it together, and everyone else was feeding off of that. You planned the raid, then let the right people lead it.\"\n\n \"I totally agree.\" said Daniel Allgood. \"And I'm proud of the entire Force. By the way, KSTD is screaming about their vans being pulled over, but I'll handle them myself.\" I nodded.\n\n \"So why was Stiles kidnapped?\" asked Krasney, his voice surly and unfriendly. \"Why did they kidnap her and brutalize her?\"\n\n \"She's an A.D.A., she's Cindy's fianc\u00e9e, she was a target of opportunity.\" I said. \"I tried to warn everyone that there was danger, that something was up...\"\n\n \"So what happened?\" demanded Krasney. \"How did they get her?\"\n\n \"From Gor-don's statements,\" I said tiredly, \"it would appear that they were getting into her car at the Courthouse when two men jumped into the backseat and put guns to their heads. They told Jenna to drive to the alley where we found the car. The perps then put blindfolds on them and drove them to where we now know is Fillmore Pharmacy.\"\n\n \"What I'm getting at, Commander,\" snarled Krasney, \"is that they kidnapped, raped and beat her to get at you. To force you to give up those tapes. They must be really desperate for those Burke tapes.\"\n\n The anger in the D.A.'s voice built as he continued: \"What the hell is on them, Commander? Why do so many people want them, and so badly? And don't tell me about some Federal agent being on the tapes... there is something on those tapes the perps want, and my ADA was brutalized and nearly killed to get that information. What is going on, here?\"\n\n \"Lighten up, Krasney.\" said Sheriff Allgood. \"The Commander is working his ass off trying to solve this.\"\n\n \"Dammit, Sheriff!\" Krasney shouted, his restraint breaking. \"I've got a woman in the hospital here! We're supposed to be working together, as a team, to put criminals away! But I can't help you do that if you keep me in the dark!\"\n\n Sheriff Allgood and Jack Muscone were both ready to reply, and not necessarily verbally, but I held up my hand. I spun my chair around to face the District Attorney.\n\n \"All right, Mr. Krasney.\" I said. \"If you want the tapes, I'll give them to you. Except for the Federally classified one. I'll give them to you, and you can try to find for yourself what's so fucking important that someone was ready to take it to the mattresses over. It's not like I haven't spent hours, even full nights of my life trying to figure it out, but if you want a shot at the title, by all means I'll let you go for it.\"\n\n \"That's not what I was trying to say----\" said Krasney, but I stopped him.\n\n \"You've been here longer than me, Krasney.\" I said. \"You've seen the corruption that was going on, firsthand. Your own ADA Sanders was a racist, and you let it slide. You know there was a lot of shit going on, including the unsolved murder of our last Sheriff, the attempt on the present one when he was a candidate, several attempts to kill me and some of my Officers----\"\n\n \"The last Sheriff had a heart attack, he wasn't murdered!\" gasped Krasney. I just looked at him with an 'Oh really.' look, and he began thinking about it. My eyes bore into him.\n\n \"What you are seeing, Krasney,\" I said, \"is the last gasp of the criminals that won't let go, that are fighting for their worthless, criminal lives. And they are going to be exterminated, no matter what it takes, no matter how long it takes. My only question is: are you with me? Or not?\"\n\n The room was deafeningly silent.\n\n \"It's very late, gentlemen.\" said Moynahan. \"We've had a long, long night. Fortunately, Ms. Stiles and Mr. Gor-don have survived, and it's time to get some rest. I'm going home, and I fully expect you, Commander Troy, to do the same. Go home, pet your dog, hug your kids, kiss your wife, and then get some sleep.\" Everyone but Krasney got up and left the room. He was only now realizing how deep and muddy the waters were.\n\n * * * * * * * * * * * * * * * *\n\n I went home. Laura was already asleep, having put the children to bed. Bowser bounded downstairs, very happy to see me. I sat down on the sofa in the den with him, and gave him a good skritchin' for a few minutes. Then I took him out to the backyard to do his business, while the cold helped me to think.\n\n As I sat on the patio chair, I realized that the Consultant of Crime had gone over the line in his desperation to find the Burke tapes. I could understand; the information I now had was the starting point that would put him in prison for the rest of his life, if he avoided the death penalty. But more than that, I wanted him to know the public shame and humiliation of being exposed for what he was: consummate Evil.\n\n He was a cool and desperate man, but he would pay for what he'd done to Jenna. And I hoped that his most recent, failed salvo would be his last, that more innocents would not have to suffer as we conducted our desperate battle.\n\n My hopes would be in vain...\n\n Part 23 - Saturday Sparks \n\n Saturday, November 14th, started off with me not waking up until 11:00am. Exhausted after two long days of police work and two long nights of raids, I slept in. Lt. Masters had a good system in place for the football game traffic to come, and Chief Moynahan was using the opportunity to learn our systems and our Officers. I also knew that Jenna Stiles would need more time to recover, and Cindy was still at the hospital with her.\n\n I was awakened by something crawling on me. Opening my eyes, I saw a toddler that was my daughter right in my face. \"Wake up, dad-dy.\" she said, grinning. I smiled back, then looked up. Laura was standing by the bed, having put Carole on top of me.\n\n \"Hey, Carole!\" I said, wrapping my arms around her in a big hug. \"Give me a biiiiig bear hug!\" Carole spread her arms and tried to hug me as I squeezed her gently in a big bear hug. Carole began laughing, as she always did.\n\n * * * * * * * * * * * * * * * *\n\n It was nearly noon, and I was in my office at Headquarters. I had the ballgame on the television in my office, and the University was beating a Conference opponent. After this would be an open date, and then the big one... State Tech. After what had happened to Nick Eastwood the year before, I knew that one was going to get ugly. Alas, I had no time to think about it. Sheriff Allgood was at my door.\n\n \"Come on in, Sheriff.\" I said. He came in and closed the door, and sat down at my hand-gesture invitation.\n\n \"Really good work last night.\" Daniel said. \"All of your people were magnificent.\"\n\n \"Thanks.\" I said. \"I totally agree. So what brings you here?\"\n\n \"How's Cindy doing?\" Daniel asked.\n\n \"I think she's holding up okay.\" I said. \"Her father, Dr. Eckhart, came to the Hospital last night and stayed with her for a long time. Nothing I can think of could've been better for her...\"\n\n * * * * * * * * * * * * * * * *\n\n Indeed...\n\n While I'd been at Headquarters the night before, supervising the aftermath of the raid, Cindy was in a waiting room at the hospital, with only Molly with her at the moment.\n\n Molly told me later that Cindy was barely responsive, just staring forward, not saying anything... and then Molly looked up to see the shock of white hair and the elderly man beneath it. Dr. P. Harvey Eckhart, founder and great leader of 'The Vision' self-help group, had come. Molly excused herself, saying she was going to go get Ross and go to The Cabin.\n\n \"Father,\" Cindy said as Eckhart had sat down beside her, \"it's late, and it's cold outside. You shouldn't be here.\"\n\n \"My dear,\" Eckhart said, \"for years I had to watch from afar as you struggled with your problems and your life. I had to see you lying in a hospital bed yourself, nearly dead, and I could not help you like I wanted to. I could not be there as the father I wanted to be to you. Now I can come and hug you and help you, so would you please be kind enough to indulge an old man and let me be a father to you?\"\n\n \"Of course.\" Cindy said, leaning into his arms. \"I'm sorry. I'm grateful you're here.\" \n\n \"So am I.\" said Eckhart. \"And I'm ready to help young Jenna recover from her ordeal, to the best of my meager abilities. But I'll not get in the way of Dr. Fredricson and her fellow psychiatrists. They are wonderful people, and Dr. Yates is one of the best in the entire Nation. Jenna will get through this. We all will get through this.\"\n\n \"Thank you, Father.\" Cindy whispered. Eckhart would end up getting Cindy to go home. While she cleaned up and took a shower, he exhibited his cooking skills and prepared a fulfilling breakfast for them. Cindy didn't want to eat, but her father cajoled her into it, and she finally realized she was starving and cleaned her plate. Then she headed back to the hospital.\n\n * * * * * * * * * * * * * * * *\n\n Back in the present, in my office in Headquarters, I stared right through Daniel as I said \"Okay, so why are you really here?\"\n\n Daniel gave me a brief smile in acknowledgement, then said \"Just want you to know that KSTD filed a legal complaint against the TCPD for interdicting their news vans.\" Seeing my face, he quickly said \"Now before you get upset, let me just say that D.A. Krasney issued a press statement promising a vigorous defense of the TCPD, and actually said that if KSTD had their way, the hostages would be dead and the criminals free due to KSTD's attempt to interfere, and that the Police actions to interdict the KSTD trucks saved innocent lives.\"\n\n \"Wow.\" I said. \"Considering how fired up he was last night, at us, for this happening to one of his A.D.A.s, I'm surprised his defense is so vigorous.\"\n\n \"He knows that you and your people saved his ADA's life.\" Daniel said. \"But what you need to know is that Robert Brownlee issued a public statement that you, and he named you personally, should be fired for interdicting KSTD and violating their Constitutional First Amendment rights.\"\n\n \"Their rights end where Jenna Stiles's nose and life begins.\" I said. \"So what the fuck is Brownlee up to now? Just what is his game plan in doing that?\" I was about to go into a reverie, when Daniel's voice cut through the haze of my mind.\n\n \"What I also came to tell you,\" said Daniel, \"was that my wife and I were talking last night. She wonders how Jenna and Gor-don could have been ambushed so quickly and effectively. She wonders how the perps knew where they were, which car was hers, what time they were leaving...\"",
        "\"Your wife is an intelligent woman.\" I said. \"Of course, it's obvious: Gor-don was in league with the criminals. He helped them to kidnap Jenna. Their 'forcing' him to rape her was a sham; that was part of his reward, not to mention mentally fucking with her mind. His injuries are very superficial: they hit him just hard enough to leave marks, but not to crack bones like they did to her. None of the blows to him were in areas that could truly injure him, just look visible to cameras, while she took blows that could've destroyed her eyesight or caused fatal internal bleeding. Shall I go on?\"\n\n \"No need.\" Daniel said. \"Melina figured he was involved. She wonders what the Iron Crowbar is going to do about it?\"\n\n I looked into Daniel's eyes and said \"Which one?\"\n\n \"Huh?\"\n\n \"Which Iron Crowbar? The Red one, or the Blue one?\" \n\n \"Oh, shit.\" Daniel said, suddenly understanding.\n\n \"Yes.\" I said. \"If Cindy figures it out... then blood will be spilled. So, if you'll excuse me, I'll go clean up the mess... before it happens.\"\n\n \"Just don't make one yourself.\" Daniel admonished.\n\n * * * * * * * * * * * * * * * *\n\n \"It's not hard to figure out, my dear Senator.\" he said, as heand Katherine Woodburn ate sandwiches and coffee in her office in her private residence. \"Commander Troy was seen having lunch with the County Intendent, Mrs. Peabody, followed by the journalist Wurtzburg reporting on a drug bust at a certain apartment complex...\"\n\n \"... a complex that once was the residence of young Jack Burke, Michael Burke's son, who was so brutally murdered in bed by the husband of his adulterous lover Marie Arruzio, that being Joe Arruzio.\" he continued. \"And young Burke was having a sexual liaison with the Intendent, Mrs. Peabody, as well.\"\n\n \"Ahhh, and that is why you wanted the Jack Burke tapes.\" said Katherine. \"To see if there is any information that might compromise you on those tapes.\"\n\n \"Well, indirectly.\" he said. \"Jack Burke was prolific Satyr, and blessed with a penis that all mere mortal men would envy. He was also very good at stealing industrial secrets. He would've done well working for me.\"\n\n \"Speaking of those apartments,\" said Katherine, \"what about that raid? I heard the Police found some very strange crystal meth there.\"\n\n \"Yes, I heard that as well.\" he said. \"The Douglas couple were working for the same people that employed Barry Bounel... that damned Bounel! He almost got those specialized drugs to my people... and then the Iron Crowbar crossed my path!\" \n\n He regained control from his momentary lapse, then said \"Yes, that research drug is very valuable, though it is the process for making it that is of true, moneymaking interest.\"\n\n \"So how can I help you?\" asked Katherine, coming around to asking why he wanted to speak with her this day.\n\n \"I need you to take care of your friend Gor-don.\" he said. \"He did good work for me, and he will be very handsomely rewarded, financially. But it will not be very long before the Iron Crowbar figures out his role in the most enjoyable treatment of that bitch Stiles.\"\n\n \"I'll handle it.\" Katherine said. \"But I am going to sample Gor-don's large penis first. I'm going to reward him with one hell of a good fuck.\"\n\n \"As you wish, my dear.\" he said. \"But do it tonight... while the Iron Crowbar is... distracted.\"\n\n \"Oh? You have something in mind for him?\" Katherine asked.\n\n \"You'll understand tomorrow.\" he said. \"Everything we've discussed will become relevant, and you will realize it after it has happened...\"\n\n * * * * * * * * * * * * * * * *\n\n TCPD Patrolman Brett Bryce took the phone call on his personal cellphone. \"Yeah?\" he said simply into it.\n\n A muffled voice at the other end said \"Thersites, I have need of your services.\" Bryce listened, acknowledged his orders, and moved out to complete his mission.\n\n In civilian clothes, Bryce went to the Bus Station, and retrieved a bag from one of the lockers. He then went to the apartment complex he'd been instructed to visit, and stopped by the manager's office.\n\n \"I need a list of your empty apartments.\" Bryce said.\n\n \"I smell pork.\" said the manager. \"Where's your warrant?\"\n\n \"This is not official.\" said Bryce. He then reached into his jacket and pulled out a paper-wrapped set of $100 bills, totaling ten thousand dollars. \"That's for your personal courtesy.\" said Bryce.\n\n The manager pocketed the money, and gave Bryce the list of empty apartments. Bryce visited apartments in three of the buildings, and also the one that James and Susan Douglas had lived in, knowing that if he were spotted and questioned by other police officers, he could flash his own badge...\n\n * * * * * * * * * * * * * * * *\n\n Detective Gayle Tunnin of TCPD Internal Affairs came out of Jenna's hospital room, with Detective Joanne Cummings in tow. I was in the hall to meet them, and Cindy was right there with me. Gayle looked at Cindy then at me, and I understood.\n\n \"It's okay,\" I said, \"Captain Ross can hear this.\"\n\n \"Yes sir. First of all,\" said Tunnin, \"Detective Cummings handled it very well. I believe she can begin working with rape victims after she takes the special Police Academy course. If you want Dr. Fredricson to help Detective Cummings, that would work well, also.\"\n\n \"Dr. Fredricson will be working with Jenna during Jenna's recovery.\" I said. \"Detective Cummings, are you going to be up this new assignment?\"\n\n \"Yes sir.\" Joanne said solemnly. \"It's not easy for anyone, but it's part of my job.\"\n\n \"Okay, what did you get?\" I asked.\n\n Tunnin said \"Her story matches Gor-don's for the most part. Two men surprised her and Gor-don as they got into her car. She doesn't know how the back doors were unlocked; she said she only unlocked hers, then got in and reached over to unlock Gor-don's. As he got in, the doors unlocked and the men got in the back. Jenna said it happened very fast.\"\n\n \"Sir,\" said Cummings, \"I've read reports about people's door locks being opened by a remote device, and then the cars burgled. Could that have happened here?\"\n\n \"It's certainly possible.\" I said. \"But let's go forward. What happened next, Ms. Tunnin?\"\n\n Gayle answered \"They forced her to drive to the alleyway where her car was found. She and Gor-don were then told to put on masks. After they got out of the car, a full hood was put over their heads. She said she heard a car drive up, which apparently was a van. She and Gor-don were thrown into the van. Here's the thing, though: she said they drove around for a while, and only then stopped somewhere.\"\n\n \"They drove them around the bypass three or four times, I would guess.\" I said. \"To confuse them. Go on.\"\n\n Tunnin said \"Jenna said she was carried in, slung over someone's shoulder. She was carried down stairs, then thrown down on the steel bed. She said there was one man at first, and he forced Gor-don to have sex with her, then he raped her. And then several other men came in the room, and they all took turns with her.\"\n\n \"What about Gor-don?\" I asked.\n\n \"He was chained to his bed.\" she said. \"They didn't bother with him too much. They made him rape her again, and someone gave him some baby oil to help lubricate her. That might've saved her from much worse vaginal damage than what occurred, though the damage is considerable as it is.\"\n\n Tunnin then added: \"Commander, what was interesting is that she said the first masked man, who was at first alone with them, Jenna said she thought that man's voice was familiar to her. However, when we showed her pictures of the dead criminals, she didn't recognize any of them at all.\"\n\n \"Hmm, wonder if he left the party early.\" I said.\n\n Tunnin replied \"That could be, sir. Jenna also said that one of the men that raped her was very well-endowed. But the M.E. assures me that none of the dead men would've been all that large.\"\n\n \"So two perps left the party early, and likely our Slender Man left as well. The only guys remaining were guards, and they did a poor job guarding.\"\n\n Tunnin continued: \"Jenna said that for the filming, they made Gor-don put her skirt back on and put on his underwear while a man with a camera came in and set up. As you know, everyone had full hood masks on.\"\n\n \"And the guy in the suit? Slender Man?\" I asked.\n\n \"She said she remembered him being behind the camera and the bright lights that were on either side of it. She couldn't really see him; he stayed in the shadows. But he was very tall, very slender, and everyone there called him 'Slender Man'... like you're doing now.\"\n\n \"Where have I heard of this 'Slender Man' before?\" Cindy asked.\n\n \"Google him.\" I said. \"He's this mythical urban legend figure, especially in England. Very tall, described as eight feet tall, and very slender. Wears a suit and tie, but has no facial features. Our guy had on a white mask or some kind of cloths on his face and head, but he's definitely imitating the legend of the Slender Man....\" I went into a reverie.\n\n \"Don?\" asked Cindy.\n\n \"I just realized...\" I said. \"The original Slender Man is purported to abduct children and kill them. Now who do we know that is involved in the abduction of children for illicit purposes?\"\n\n \"Oh, wow.\" said Cindy. I looked hard at her so that she would not mention the Oldeeds Group by name.\n\n Before Gayle Tunnin could ask about that, I had her continue with her narrative: \"After they taped the session, which Jenna thought was taped and didn't realize it was broadcast live, they forced Gor-don to rape her again, then a couple of them went at her again. After that, it calmed down for a while, until they heard noises upstairs... which turned out to be your rescue team. One guy pointed his gun like he was going to shoot her or Gor-don, but the others just said to run, and they went the back way... right into your ambush.\"\n\n \"Close call.\" I said. \"Close call. Can Cindy go in and talk to Jenna now?\"\n\n \"Sure.\" said Gayle. Cindy did not waste time, and disappeared into Jenna's room before I could hardly blink.\n\n \"Thank you, Detective Tunnin.\" I said. \"We'll get Cummings and also Torres trained up, but I'm glad to have your experience with rape victims, though I hope we won't need it very often in the future. You can go home, and don't come back until Monday... once your report is written up and sent to me. Cummings, you're with me.\" With that, we took leave of Gayle.\n\n \"So, Cummings,\" I said, \"did you interview Gor-don, also?\"\n\n \"Yes sir, or I was there while Detective Nash interviewed him.\" said Joanne.\n\n \"What did you think of his interview?\" I asked. Joanne looked dumbfounded.\n\n \"I... I don't know, sir.\" she said. \"His story agrees with Ms. Stiles's story, for the most part. He was forced to have sex with Ms. Stiles, then forced to watch the other men rape her. The part about the video was the same, as well.\"\n\n \"Come with me.\" I said. I went down the hall several rooms until I came to the one where Gor-don was the patient inside. \"Joanne,\" I said quietly, \"I want you to stay here and look out for me. If Captain Ross comes out of Ms. Stiles's room, I want you to peek into this room and say 'Time, Commander!' in warning. I'm going to be talking with Gor-don for a minute.\"\n\n \"Do you want me to come in with you?\" asked Joanne. And then her eyes widened as I took the red crowbar out of it's long pocket in my trenchcoat.\n\n \"No.\" I said. \"You just be on the lookout for Captain Ross. And one thing... I want you to think about this case, Detective. I want you to think about how Ms. Stiles was so easily ambushed, and what happened.\" Leaving her to think of that, I went inside.\n\n Gor-don was awake. He was scheduled to be released, and was itching to get his clothes back and get out of there. He was on the phone, telling someone he'd be out of there soon. Then he looked at the phone, perplexed. The signal had just gone dead... and that was because I'd activated my anti-bugging device, which jammed his signal, so sorry.\n\n \"What are you doing here?\" he snarled at me as I approached him, tapping the crowbar in my palm. \"I was on the phone.\"\n\n \"Apparently you lost the signal.\" I said quietly, menacingly. \"You can call them back. Later. Right now... you're going to tell me the truth, Gor-don.\"\n\n \"I've already given my statement.\" said Gor-don. \"What more do you want?\"\n\n \"Like I said... the truth.\" I said. \"Let's not fool around, here, Gor-don. I am really insulted at your lack of respect for my intelligence if you think I am fooled by your little performance.\"\n\n \"What the fuck are you talking about?\" he snarled, but I noticed his hand reaching for the nurse-call button at his bedside.\n\n \"I'm talking about you being in league with the perps that kidnapped Jenna.\" I said. \"You unlocked the back doors from the passenger side so they could get in the car. She didn't notice, and of course she didn't try to fight back because they had a gun to your head, too. And then you raped her along with the rest of them...\" \n\n \"It's not like I haven't fucked her before.\" Gor-don said. \"Many times. Her bitch girlfriend doesn't even know that Jenna's been cheating on her.\"\n\n \"Yeah, I know you've been laying pipe to her.\" I said. \"But to help her be kidnapped, raped and beaten nearly to death? Now that... is going to get you fucked over.\"\n\n \"You gonna hit me with that crowbar, asshole?\" Gor-don asked, trying to bait me.\n\n \"Noooo,\" I said. \"Like I said, you are disrespecting my intelligence. I'm not rising to your bait. But you will tell me who your boss is, who put you up to this. Because if you don't...\" I just chuckled menacingly, then finished: \"... then I'm going to tell Captain Ross of your involvement... in the middle of the night... after you have been abducted and taken to a nice, quiet place...\"\n\n I turned to go. \"I doubt Captain Ross is going to to give you the chance to live by telling me everything that you know... and nobody is going to see a thing, it'll be just you... and her. And may the living God have mercy on your fucking soul...\"\n\n Just then Joanne peeked into the room. \"Commander, Senator Woodburn just got off the elevator. She's headed this way.\"\n\n \"Good.\" I said. I went out of Gor-don's room and down the hall, meeting Katherine Woodburn just as she turned the corner onto this wing.\"\n\n \"Well, Commander Troy.\" Katherine said, her voice a sneering snarl. \"What a surprise to find you here.\"\n\n \"Just wrapping up my investigation of this crime, Senator.\" I said, my eyes boring into her. \"Why are you here?\"\n\n \"To visit our A.D.A., and pay my respects, of course.\" said Katherine, then said in a studied manner, as if it were an afterthought, \"And her assistant, as well, of course.\"\n\n Just then, Cindy came out of Jenna's room. She had a funny look on her face. I told her that our State Senator was here to visit, and Cindy just nodded. We left. I sent Joanne to Headquarters to finish her reports, then to take the rest of the weekend off.\n\n \"You okay?\" I asked as Cindy and I left in my Police SUV.\n\n \"Yeah, I'm fine...\" she said, her voice trailing off. I didn't say anything, so she looked over at me and then said \"I might as well tell you... it was... strange. Jenna told me I could go on home and get some sleep. I wanted... I wanted to stay, and be there for her, but she said it was okay, she would be fine. I... she was kicking me out of there, being nice about it, but she didn't want me there...\"\n\n \"Well, maybe she needs some time.\" I said. \"And it's not over for her, at least not in her head. My wife is going to be treating her, and while it will be better in the end, it won't be fun getting to the end. You know all too well about the two couches in her office.\"\n\n Cindy nodded. I changed the subject. \"So, I can take you to your place, or to The Cabin where Molly and Ross are. Either way, you get to sleep for a while. And that is not a request on my part.\"\n\n \"And you won't have to 'request' twice.\" Cindy said. \"Right now, The Cabin sounds like a good place to be...\"\n\n * * * * * * * * * * * * * * * *\n\n While Cindy showered and got ready for bed, I told Molly to keep an eye on her sister. I told Molly that if Cindy got the idea that Gor-don was involved in Jenna's ordeal, to get ahold of me very quickly. Molly was shocked at what I'd implied in that, but agreed to watch Cindy for me.\n\n With that temporarily resolved, I went to Headquarters again. Julie Newton and Lindy Linares were at Julie's desk in Vice, so I dropped in and pulled up a chair and sat down. \"How's it going, ladies?\" I asked. \"Whaddya got for me?\"\n\n \"Several threads on the Beanstalk Gang, sir.\" said Julie. \"They mostly traded money for drugs using cash. A couple of the mid-level perps have taken plea deals, and have told what they know about how the money was laundered. They've been laundering through several delicatessens, a couple of moving service companies, and a farm equipment company that is a big customer of Ward Harvester.\"\n\n \"Ahhhh,\" I said, suddenly becoming filled with interest.\n\n \"Don't get too excited, though.\" said FBI Special Agent Lindy Linares. \"We can't find any laundering through Ward, just that this farm equipment store bought from them. But as you can see from these printouts, that store, as well as the restaurants and such, are working the extra money through buying and selling from each other at higher prices than normal, until the money gets into banks. And then gets transferred to other banks, which is where the FBI starts tracing them.\"\n\n \"This is good work.\" I said. \"Great job, both of you.\" As I perused the data, I could see how the money was being laundered: as one example, a delicatessen was being paid a lot of overhead for a large order of meats, or perhaps a large catered event. He then paid more than average to the meat supply company, as well as a company providing things like paper napkins, condiments, spoons, forks, etc. \n\n \"Okay, ladies.\" I said. \"Find a stopping point, and go home for the weekend. Unless there's something you think can't wait until Monday, this will keep.\"\n\n \"How is Jenna doing?\" asked Julie.\n\n \"Hard to tell.\" I said. \"I don't think it has set in yet.\" Neither of them needed to ask what I meant by that.\n\n An hour later, I was looking through what they'd put in the evidence servers. I was seeing what I had expected to see: the Beanstalk operation had been large, very large. But the money laundering, which had been large, had been winding down ever so slowly, and was barely a trickle of what it should've been.\n\n We'd interdicted a couple of large caches of cash and drugs in addition to what the Thursday night raid had netted us, based upon perp confessions in taking plea deals. But the cash was a lot lower than I'd expected, about a tenth of what it should be.\n\n\u2028This confirmed what I'd thought: the Consultant had pulled a lot of the cash out... and had brutally betrayed the Beanstalk Gang, letting the Police capture them. He had a way of doing that... betraying loyal people. Kind of like what the Black Badge people and the Superior Bloodlines power players would do.\n\n Loyalty is a two-way street, Mr. Consultant, I thought to myself. And your lack of loyalty is one of your weaknesses... with which I intend to take. you. down.\n\n Part 24 - Prelude To Disaster \n\n At 6:00pm I drove up to The Cabin. Laura had brought my mom Phyllis, the kids, and of course Bowser, and they and Molly had cooked up a feast.\n\n \"It's too bad Todd couldn't join us.\" said my mom as we sat down to eat.\n\n \"Nor Teresa.\" said Laura. \"I invited both of them.\"\n\n \"Oh, I think they're having a more... private... celebration.\" I said.\n\n \"You might end up with more great-grandkids yet, Phyllis.\" Molly said. My mom smiled brightly at that thought.\n\n \"At the moment, I'm more interested in what this grandchild of mine is doing.\" Phyllis said, looking over at Carole. My daughter was doing what children of all of time have done: she was feeding Bowser the food items she did not like. Her mother was not amused. Laura was even less amused when I broke down in almost uncontrollable laughter, which led to Phyllis and Molly breaking down as well.",
        "But not much was touching Cindy. I asked my mother to have a good talk with her upstairs while the rest of us chatted in the greatroom.\n\n \"Well, Laura,\" I said to my wife, \"your professional expertise might be more needed with Jenna's fianc\u00e9e than Jenna herself.\"\n\n \"Yes, I've noticed.\" Laura said. \"Jenna is trying to be strong on the outside, but in doing so she's blocking out the people who care for her the most. And that is hurting Cindy.\"\n\n Molly said \"There's something else I've noticed, over time. I haven't said anything because of the family friction over Cindy's orientation. I don't want to exacerbate the problems, nor have Cindy misunderstand me. But I think there were already some strains in that relationship, and this might be brining some of that out.\"\n\n \"Could be.\" I said.\n\n * * * * * * * * * * * * * * * *\n\n \"A most unhappy conclusion.\" he said as he sipped his sherry, looking at the lovely, slender woman sitting next to him. She was wearing a white blouse, red plaid skirt, white stockings and black high heel pumps. But even her good looks did not stir his loins.\n\n \"How so?\" she asked, sipping her glass of sherry, enjoying the smooth, mellow taste of this rare and expensive brand.\n\n \"We did not get the information we needed by capturing A.D.A. Stiles.\" he said. \"The Iron Crowbar somehow managed to figure out where she and Gor-don were, and sent his people in to rescue them. I will freely admit that I have underestimated the professionalism of the Town & County Police Department. They were not always this... competent.\"\n\n She smiled. \"Yes, it was TCPD Vice that led that raid, as well as the one on the Beanstalk Gang. They are getting good... because they've had way too much practice.\"\n\n He gave a brief, mirthless smile. \"Yes, too much. But I think... that maybe the information on those tapes can be made useless... by them being destroyed. Tonight, my dear Sinon, it will not be the Police getting practice... but the Fire Department.\" He said no more; she did not ask.\n\n \"So, my dear,\" he said, \"what are your plans for the evening?\"\n\n \"Well,\" she said, standing up and strutting over to him, \"I am one very horny woman right now.\" She straddled him, easing onto his lap. \"Why don't give me what I need right now...\" He didn't respond, and she realized it. \"Or... am I too old for you? You prefer those teen girls... or what the Oldeeds Group is providing men of your stature, and means?\"\n\n He smiled wanly. \"Yes, I admit I have a taste for the flower of youth.\" he said.\n\n \"You should get Alison Sweet into bed.\" she said. \"She worships you.\"\n\n \"Yes, I have my eye on her.\" he said, his loins stirring for the first time at the thought of eighteen-year-old Alison. \"But in the here and now, we need to satisfy your cravings, and of course I have the perfect solution for you.\" He pressed a button, and a young man came into the room, clad in all black.\n\n \"Mmmm, he is handsome.\" she said, getting off of him. The young man's eyes looked over her appreciatively.\n\n \"His real name is Scott.\" he said. \"My name for him is 'Epeius'. He is one of Rita's Satyrs, and my mole inside her insidious organization. I am sharing this secret with you, as well as giving you the gift of his sexual prowess, in the event that something happens to me, whereupon you will be taking over my organization.\"\n\n \"Mmmm, something to celebrate.\" she said. \"And I know just the right way to do so.\" She walked up to young Scott, who took her in his arms and gave her a warm, deep kiss, their tongues twining.\n\n He watched, then said \"It will be interesting to see which of you exhausts the other tonight. The bedroom across the hall is available to you.\" He watched as the lovely woman and her young stud walked arm-in-arm out of the room.\n\n Going to his desk, he turned on the secret camera to that bedroom, and he watched. He enjoyed the sight of what he was seeing: a young couple having an intense, illicit copulation. He poured himself a bit more sherry, then sat back and watched.\n\n Scott's huge cock was plunging in and out of the lovely 'Sinon' and she was fucking him back as hard as she could. The young Satyr worked the lovely woman through three hard, deep orgasms, then they switched to the rear entry position. She knew not to call it 'dogstyle' in front of him... he hated dogs ...\n\n * * * * * * * * * * * * * * * *\n\n It was getting late in the evening. Cindy and Molly were going to crash on the hideaway beds on this floor, my mom would be in the guest bedroom, and Laura and I would be in the master bedroom. \n\n \"Anyone want more wine?\" I asked. I was already getting up to go to the kitchen, when my eyes were irresistibly drawn to the windows to the outside.\n\n \"Whoa, what is that?\" I said, mostly to myself, but loud enough for the others to hear. I opened the backdoor and went outside onto the deck, oblivious to the cold air.\n\n \"What is it, Don?\" asked Molly, who had come out behind me.\n\n \"See that spot of glowing orange?\" I said, pointing to an area of Town I knew to be south of the Courthouse Square and Downtown areas. \"That's not right... I think that's a fire.\"\n\n Just then, my police radio went off, and my cellphone rang. This caused the redoubtable Bowser much consternation, which he voiced by barking.\n\n The phone call was alerting me to a fire at an apartment complex. The radio alert was for the same thing.\n\n Cindy came flying down the stairs just as I was getting my coat. \"I got a phone call, there's a fire at---- oh, never mind, they called you, too.\"\n\n \"Yes, they did.\" I said. \"Okay, everyone, y'all can hunker down. Bowser, watch over Carole, Jim, and Ross for me! Cindy, want to come with me?\"\n\n \"Of course.\" my partner said. With that, Cindy and I left for my SUV, not knowing that Acts of Heroism would soon be transpiring.\n\n To be continued.\n"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/fire-in-the-embers-ch-05"
}