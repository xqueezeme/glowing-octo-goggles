{
    "title": "Happy Birthday to Me Ch. 05",
    "pages": [
        "<p align=\"center\">Happy Birthday to Me \u2013 Chapter Five</p>\n\n<p align=\"center\">Ten minutes past midnight\n\nLeaning out of the window to see the dim light outside\n\nLost quiet rainy night kisses passersby\n\nOnce you whispered in the rain:\n\nHappy birthday my loved one</p>\n\n<p align=\"right\">Ten Minutes Past Midnight, Sally Yip</p>\n\n<p align=\"center\"> * * * * * * * * </p>\n\n\"Penny for your thoughts?\" David's voice jerked me back to awareness.\n\n\"Huh?\" I jumped. I'd been sitting at my workstation in a golden daze, looking at the words and the numbers on my monitor, not seeing them at all. What I was seeing was something completely different. Me. In bed. With Kam fucking me from behind and Jim's cock fucking my boobs. I felt totally confused. How could I have done that? How could I have let another man use my boobs like that and then cum on me while my husband fucked me. Not to mention what had happened after that, with Kam and Jim feeding me their cum. My mouth flooded with saliva at the memory.\n\nWhy, now, when I should feel ashamed and embarrassed and even guilty, did I feel none of those things? Why did the memory of those all too recent acts instead excite me? Leave me glowing? Why had it excited my husband so much to see another man doing that to me? Why had I taken Jim's cock in my hand and stroked him? I'd only ever touched my husband's cock before. Sitting there, I could still remember how Jim's cock felt clasped in my fingers. Hot and rigidly hard, the silky skin, the sheer size of him. The memory of holding him while my husband fucked me took my breath away. Why had my husband permitted that to happen? Why had I?\n\nPermit? There was no permission. Not from me.\n\nMy husband had asked Jim to do that. He'd outright told Jim to fuck my boobs and cum on me. And when Jim had asked me, I'd meekly said yes. Yes? I hadn't just said yes and let him do it, I'd actively participated. I'd held my boobs for him to fuck. I'd actually squeezed his cock with my boobs while he rubbed himself against me. I couldn't believe I'd done that. Me? Isabelle. I'd done that and I still found that hard to believe. Not only that, I'd stroked his cock with my hand. Nobody had asked me to do that either, nobody had told me to. I'd done that myself. That it had excited my husband was immaterial. It had been my choice and mine alone to do that, to take his cock in my hand and hold him, stroke him. Why? Why had I done that? Why was it so exciting? Exciting enough that even now, my nipples were swollen hard and I was wet again just from thinking about it.\n\nI was married. I knew I should feel guilty and ashamed that I'd allowed another man to see my body naked, to caress me and touch me, to do what Jim had done to me. That Fan and I had more or less intended something similar to what had happened last evening was irrelevant. I shouldn't ever have considered anything like that. That my husband, Kam, had been the instigator shouldn't make any difference to the way I felt either. None. A good girl didn't do things like that. \n\nFan did, I knew. But by no stretch of the imagination could Fan possibly be considered a good girl. Fan was a bad girl by anyone's standards. A very bad girl by my standards. Not only that, she wasn't married. She'd never promised to be faithful to anyone. Not like me. I had, so what about me? What did that make me? I didn't feel bad. I didn't feel ashamed or embarrassed or guilty. Not at all, even as I thought about last night and this morning.\n\nNo, I wasn't any of those things. But I was excited. Very very excited.\n\nSo what did that make me? Was I really a bad girl too?\n\nI felt so confused.\n\nI knew I wasn't like Fan. For a start, I loved my husband and I was totally faithful to him. I'd never even fantasized about doing anything with another man. I'd never been tempted even. Not at all. Not ever. I mean, David's interest in me amused me, entertained me, but I'd never thought of David like that. I'd never ever looked at another man and been curious, let alone tempted. But last night and this morning I'd shamelessly displayed myself before both Fan and another man, a man I'd only just met. I'd let Jim run his hands over my body, kiss me, touch me. Touch me where nobody but my husband had ever touched me. I'd had sex with my husband while Jim and Fan had watched me and I'd watched them. \n\nNot just watched. I'd held Jim's cock in my hand. I'd stroked his cock. I'd held my boobs as his cock used them. Jim had cum all over me. Not just cum all over me either. I'd swallowed his cum. His and my husband's. My husband had fed Jim's cum to me and then fucked me and I'd loved every moment of it. I'd had the best orgasm I'd ever felt, the first orgasms I'd ever had while I was being fucked. I wanted to feel that pleasure again. Badly. I found myself squirming on my seat, wet, hot, wanting my husband badly. I still felt a little sore from last night and this morning. But that soreness was nothing, just a slight ache that said I'd been used well by my husband. I liked that feeling. A lot.\n\n\"Earth to Isabelle.\"\n\n\"Huh.\" David was looking at me, laughing. I hadn't even noticed him standing there. I had to smile back. I blushed as well.\n\n\"Why don't you take a long lunch Isabelle,\" David was smiling, \"its quiet today, take it easy, go shopping or something.\"\n\n\"Okay, you know what, I will. Thanks David.\" \n\n\"Grab me for a coffee when you get back.\"\n\n\"Okay.\"\n\nDavid wandered back towards his office. I didn't even think. I picked up my headset and clicked Kam's number on the softphone. His phone rang. There was no answer. Well, he was only a few floors away. I stood, slipping my jacket on, picking up my handbag. \n\n\"David, I'm popping out now.\"\n\n\"See you when you get back, Isabelle.\" He was watching my boobs again. That gave me a strange little thrill. Was David thinking thoughts similar to those that Jim must have been thinking? Would David like to do to my boobs what Jim had done? From the way he looked at me all the time, I imagined he would. I felt my insides clench hotly.\n\n\"I will,\" I smiled.\n\nFive minutes later I walked into Kam's company's reception. Fan looked up, smiling. \"Oh, hi Isabelle, everything okay?\"\n\n\"Yeah,\" I smiled happily. \"Couldn't be better. How about you?\"\n\n\"Oh, I'm feeling just great.\" She looked like she should be purring.\n\n.I giggled. That made two of us. \"Meet up after work tonight?\" Say yes, Fan, please. I want those lessons.\n\n\"Sure, I'd love that Isabelle.\"\n\n\"Meet in the bar downstairs? Around six?\"\n\n\"Sounds good.\"\n\n\"Anyhow, really, I just popped in to see Kam.\"\n\n\"Oh.\" She smiled. \"He's in his office, just go right through.\" She winked at me. God, she was glowing. Did I look like that? I felt like that. Like I was walking on air.\n\n\"Thanks Fan.\" Perfect. \n\nFan went back to her work as I walked through. It was nice that the company had a large office but not that many staff. The cutbacks mandated by their Head Office had had some benefits, I could see that now. I was still smiling when I walked into Kam's office, shutting the door quietly behind me. Kam wasn't there, but I could hear his voice from the connecting meeting room. Okay, he was on a conference call or something. Great. That gave me some time. I'd never done anything like this before. Kam had wanted too, but I'd been too shy. Too conservative. But not today.\n\nLast night and this morning had somehow given me a lot more self-confidence. And desire. Let's not forget the desire I felt as I stood in Kam's office, almost panting. Shivering with excitement, every inch of me tingling and alive with anticipation, I eased my bra off and out from under my top, slipping it into my handbag. My panties followed. I was very wet, a wetness that the cool office air on my naked skin accentuated. Wet and hot and very very ready. Kam had wanted to do this in the past, make love to me in his office, but I'd been too timid. Now, after last night and this morning, I wanted to give him something else that he wanted. Something that I wanted as well.\n\nBreathing hard, I hung my jacket on the hanger behind his door. When I looked at his office door, it had a lock. Yes! I turned it. Nobody could interrupt us accidentally. Now my heart was really pounding. I could feel my wetness on the insides of my thighs. I perched myself on the edge of his desk, slipped one hand under my skirt, touched myself gently with my fingertips, feeling my wetness, parting my lips with my fingertips, stroking my clitoris lightly with the fingertips of my other hand, making myself flutter and tighten.\n\nYes! Oh yes, Kam! This was something he'd often fantasized about. He'd told me so. He'd asked me to more than once. He wanted me. On his desk. And today I was going to let him do it. I was going to let him do me anyway he wanted on his desk. Over his desk. On the floor. Whatever he wanted. Perched on his desk, braless, without any panties, touching myself delicately, I felt such a wanton. I wondered if this was how Fan felt as I threw my head back, touching myself, my fingers sliding wetly on my lips, breathing harder. Maybe I should open the door to the conference room and surprise him instead. But no, Kam didn't like surprises that much and he might actually be in there with someone. I'd just wait, playing with myself. So I did.\n\nAfter a couple of minutes, I wondered what was keeping him. I hadn't heard his voice for a while. Curious and just a little frustrated, I decided to take a peek through the door into the meeting room next door. Maybe I could attract his attention, persuade him to cut short whatever call he was on. Silently easing the door open until it was slightly ajar, I paused, listening.\n\n\"I'll see what I can arrange.\" That was Kam's voice.\n\n\"Please Kam, I really want to go to the Orchid Venture banquet next weekend, I'll be able to make some new connections for us, I'm sure.\" A female voice. One of Kam's staff.\n\nI recognized that voice. The name escaped me for just a second before it came to me. Cindy. Cindy Chung. The new grad they'd hired a few weeks ago as a junior. Smart, good-looking, totally ambitious, she was on the management fast-track program, so Kam had told me. He'd interviewed her, I remembered. He'd come back from that career fair looking very pleased with himself. He'd hired her right out of completing the MBA program at the National University of Singapore. She had to be smart to get through that, and now she was working as a Junior Account Manager reporting to Kam. He'd been spending a lot of time training her up, I knew.\n\n\"Okay, I think I can swing it, but that depends on you, Cindy.\" Kam sounded thoughtful. I could picture exactly how he looked with that expression. I loved that look on his face. Especially when he looked at me like that. \"Albert mentioned one of their Brit ex-pat clients was looking for somewhere else to invest, the chap's a bit of a ham-sup-lo, but if you don't mind going with him?... uhhh ... this guy, Daniel, he's not married, apparently got a lot of money to park, he'd be worth working on...\"\n\n\"Kam! Aiiyaaahhhh! Thankyou thankyou thankyou!\" God, Cindy was a squealer! I wondered if she squealed like that in bed. I had to stifle a giggle. Probably she did. That triggered another image in my mind. Jim fucking Cindy and her squealing like that while Kam fucked me and I watched her and Jim. That'd be so hot. So exciting. The couple of times I'd met her, she looked exactly like the sort of girl someone like Jim would go for. I wondered if she really did squeal like that when she was in bed. I had to bite my bottom lip to stop myself from moaning out loud. \n\nGod, I had to stop thinking of other girls like that. Fan was bad enough. But I couldn't help it. I thought of Cindy again, on her hands and knees with Jim behind her, squealing as she was taken and my pussy seemed to pulse hotly. God, why was I thinking things like that? I shivered, one hand under my dress, teasing myself with one fingertip. Hurry up and finish in there, Kam, I want you so badly.\n\n\"Uhhh ...,\" Kam continued, \"this guy, Daniel, he's coming to Albert's party after the banquet, he'd, you know, expect you to come too, with him.\"\n\n\"To Albert's party?\" Cindy sounded a little subdued. \"Oh!\"\n\nKam chuckled. \"Thought you might have heard about them.\"\n\nHuh? But Kam and I, we were going to Albert's Party after that boring banquet next weekend. He hadn't said anything to me about Albert's party, nothing that would make me sound as suddenly subdued as Cindy suddenly sounded anyhow. What did she know that Fan didn't.? Fan was going with Jim. Maybe I should ask her? But surely she would have told me if she knew anything? I knew Albert, he'd danced with me a couple of nights ago. I knew he was a ham-sup-lo, he'd rubbed himself up against me, him and his friend Harry both. But why the concern about his party? He seemed like a nice guy, apart from being a ham-sup-lo that was. But then, most guys were. Even Kam.\n\n\"Well, I have,\" Cindy said, still subdued. \"Gossip anyhow.\"\n\n\"The gossips probably correct, they can get pretty wild, especially later on,\" Kam chuckled. \"But this guy Daniel's apparently got a lot to invest. If you signed him up, it'd be your account right from the get go, full commission, I can guarantee you that. Hell Cindy, I'll waive my percentage, you'll be doing all the work.\" He sounded rueful now. \"We won't get him any other way, you're going have to take one for the team to sign him up. Do that and you absolutely get the full commission.\"\n\nTake one for the team? What was that expression, some kind of slang? Then I got it. Some kind of American slang. That figured, Kam and Cindy had both studied in America. I knew Kam had, and Cindy had told me when we first met. She'd sounded a bit snooty about it. \n\n\"I'm not saying I'll do it, but if I do, the account's really all mine, right?\" Cindy asked, \"How much does he have to invest, do you know?\"\n\n\"Albert says minimum twenty million US, he's spreading his offshore investments around. He might go to thirty max but he's loaded. Albert's already got all he'll invest with him, that's why he mentioned it to me. I have to let Albert know by early this afternoon though, so you need to make up your mind. If you don't want it, I'll have to ask Mei-Ling if she wants to work with this guy, if she doesn't, he's going to go somewhere else, not us, but he was willing to talk to anyone Albert recommended.\"\n\n\"Her!\"\n\n\"I know, I know, but apart from you and Mei-Ling, I haven't got anyone else he'd go for and Albert says it's a deal-breaker for this guy, Albert had a hell of a job getting one of his female reps on board but he did and they got the account. Anyhow, apparently he only works with female reps and likes to, you know, I'll be honest with you Cindy, Albert says he likes to fuck 'em and they have to be good. I know Mei-Ling's nowhere near as hot looking as you are Cindy, that's why I asked you if you wanted it first. You've got the best chance of getting us the account.\" \n\nI smiled, shivering with excitement at the thought of Cindy being fucked one of Kam's client's. That was my Kam. Practical. I wondered if Cindy would agree. God, thinking about it was so exciting. I closed my eyes for a moment, breathing hard, touching myself, imagining myself to be Cindy, giving my body to some gweilo client to use for sex in return for is business. God, that was just like being a hooker, selling your body for money. That was how Jim had thought of me that first time we met downstairs in the mall. He'd thought I was a hooker and he'd wanted me. \n\nAnd if Cindy agreed? That would make her a bad girl, just like Fan. Worse. Fan didn't do it for money. Not that I knew of, anyhow. I thought again about doing with Cindy what Kam and I had done with Fan and Jim last night. About watching Cindy being fucked while Kam did me. My fingertips teased my lips, my swollen clitoris, sending little thrills rippling through me so that I wanted to moan and spread my legs wide. Jesus, Kam, finish up in there. \n\n\"Yeah, and I'm the one you're asking to take one for the team, Kam. I'm not a hooker for goodness sake, I've got my MBA. I worked like a bitch to qualify for this, you should know how hard it is to get a job in this field.\"\n\n\"Yeah, and I know how hard it is to sign up a major client as well Cindy. Hell, I'd take one for the team to win a client like this guy.\"\n\nI snickered silently. The thought of Kam taking one for the team was verging on the ridiculous. He took good care of me, which was likely because he loved me so much, but apart from that, he'd cut his own grandmother's throat to win a new account and get one over his competitors. He'd whore Cindy out in an instant if a potential client sniffed and expressed an interest. Thinking about it, I wasn't at all sure that he wouldn't whore himself out for a sizable client account. For a second, I contemplated the thought that Kam might even whore me out for a large client's account. But no, he loved me, he wouldn't do that. Not toe me, I was his wife. Although it was exciting to think he might. But yeah, Cindy he would, without a thought. Kam was the most self-centered guy I knew. And in the wealth management industry, that was saying something.\n\nSo I can't say I was surprised at what he was outright asking Cindy to do. It was a cutthroat business securing new clients, especially ones on Daniel's scale. Even more so when you're a small boutique trading bank with private clients with a high net worth. Anyhow, I found the thought of Cindy \"taking one for the team\" wildly exciting. I wanted to watch Cindy take one for the team. Taking a big one, like Jim's, for the team. Ohhhh yes, do it Cindy, take one for the team. Say yes, I want to watch you.\n\n\"Damn it Kam, why don't you get Fan to take care of this guy? She's a total little slut. Hell, or Isabelle, she's better looking than I am and I'm sure this gweilo ham-sup-lo would go for her boobs. Every guy who sees her does.\"\n\nWhat a bitch. Jealous of my boobs are we? I wasn't too concerned with her saying that about Fan. Fan was a slut. Well, maybe not a slut, but she was certainly easy. First date easy, I knew. She'd be the first to admit it if anyone asked. She enjoyed fucking guys, she'd told me so outright. But talking about me like that? Huh! I didn't work for their company. I didn't need to sign up clients. I didn't get a commission. I sure wasn't planning on taking one for the team. Not even for Kam. \n\nI smiled, breathing hard. Fan and Jim last night, that had been so hot. And okay, that Cindy, she wasn't bad looking at all. Being honest, she was hot, although her boobs were pretty much non-existent. Not quite flat as an airport runway, but close. I knew Kam would persuade her in the end. Kam was persuasive. I mean, he'd persuaded me to marry him.\n\nKam chuckled again. \"Now you're being bitchy Cindy, and if you're worried about Albert's Party, Fan's coming with that new gweilo client, Jim. And I'm coming with Isabelle. So it's not just you taking one for the team, okay. We're all in there together.\"\n\n\"You're bringing Isabelle to Albert's party?\" I could hear the disbelief in Cindy's voice. Huh? Really? What was it with Albert's Party? And this \"we're all in there together\" nonsense. I wasn't.\n\nMy husband chuckled. \"After what happened last night, I think she's ready for it.\"\n\n\"Really? Isabelle? She is?\" Cindy didn't sound like she believed Kam. Me? That mention of me and last night and Albert's Party had me puzzled and startled. What were they talking about? And why mention last night to Cindy? That was between me and Kam. Well, and Fan and Jim as well, but not Cindy. Definitely not Cindy. Not yet anyhow. \"So what happened last night that you think she's ready? I mean, you married Miss Conservative of the Year there, Kam. She's as straight-laced as they come. I mean, really, she doesn't seem like your type at all.\"",
        "Hey! Me, conservative? No way. I was well brought up and I wasn't a slut; that was all. Well, and I was a little conservative. Especially if you compared me to Fan. And I certainly wouldn't consider taking one for the team. Not like Cindy seemed to be. What was it with Cindy? And what were they talking about now? Me being ready? Ready for what? And what sort of \"type\" did Cindy think suited Kam? I thought I suited Kam perfectly. \n\n\"Isabelle?\" My husband chuckled. \"Ohhh, she's my type alright Cindy, believe that. You know I like you \"butter won't melt in my mouth\" types. And she's not as conservative as you think, Cindy. Not really. I got her into bed last night with Fan and that gweilo guy you met this morning, Jim. All night...\"\n\n\"You're joking?\" Cindy sounded stunned. Was I that conservative that it was that unbelievable? And okay, if you'd asked me a few days ago, I wouldn't have believed I would have done what I had done last night either but that was me.\n\n\"No, no joke. Seriously, she let Jim fuck her boobs and cum all over them when I told him too this morning, she was even jerking him off before that while I was fucking her and I didn't have to tell her to or anything.\"\n\n\"Isabelle did that?\" Cindy sounded stunned. \n\nMe? I felt stunned as well. Kam was talking about me. To Cindy. Talking about me and last night and what we'd done. I mean, I understood guys talked about sex and stuff between themselves, but I was Kam's wife, not a girlfriend or a casual pickup in a bar or a nightclub. Now guys talking about a girl like Fan, that was something I could understand. But my husband talking about me? And not too a guy either, but to a girl that worked for him. \n\nThat was so not acceptable! \n\nI didn't even hesitate. Not for a second. I fished my iPhone out of my handbag and started videoing through the crack in the door. Kam and I were so going to have a little discussion about just what it was appropriate for a husband to share about his wife. Apart from his wife, of course. Oh yes we were. I loved Kam. Okay, I loved Kam enough to do what I'd done with him and Fan and Jim last night. And yes, I had enjoyed it very much despite my initial trepidation. So much that, okay, yes, I admitted it to myself, I'd do it again happily if he wanted to. But no, I wasn't gossiping to anyone in my office about it. Not like Kam seemed to be.\n\nKam smirked. That's the only way I could describe his expression. A self-satisfied and very smug smirk. Now I was getting mad. \"Oh yeah, you'd have loved watching her, Cindy. She was scared and nervous as hell but the whole scene just turned her right on. She let me strip her pretty much naked in front of Jim and Fan and then she was so wet when I was fucking her and she didn't say no once.\" I heard Kam chuckle again. \n\nReally, Kam! Now I was angry. Angry that he'd shared that with Cindy. And why? Why would he tell Cindy that? Why were they talking about me so openly? Why was Kam telling her all this? This was just so embarrassing on top of any other concerns I had. I made sure my iPhone was getting all this. Oh, Kam and I were so going to have that little talk.\n\n\"Ohhh, you loved that didn't you, Kam,\" Cindy murmured. \"I bet you just loved that. What else did you do to the poor girl?\"\n\nHuh? Poor girl? Me? What was going on? What was she talking about? Well, I had that figured out. Me. But why did that make me the poor girl in this? I'd loved what had happened. Really, just what was going on between her and Kam? Why was Kam telling her all this? Why why why?\n\n\"Not much, not half as much as I'd have liked, I just fucked her in front of Fan and Jim last night and I had her showing them her pussy, spreading her legs wide so they could see her better while I fucked her, that sort of thing. But this morning, after Jim shot off all over her boobs and I'd cum in her pussy, we fed her our cum and she swallowed it all and then I gave her another good fuck while I fed her Jim's cum. Really turned me on watching her swallow it all. Jim got so hard watching he had to fuck Fan again.\"\n\n\"Ohh Kam, that's just so dirty, doing that to Isabelle.\" Cindy giggled breathlessly. \"It really turned you on doing that to her didn't it, you're all hard again just talking to me about it.\"\n\n\"Yeah.\"\n\n\"And now you're going to take her to Albert's Party after the banquet next weekend? Poor Isabelle. Don't you think that'll be a bit much for her, all at once?\"\n\n\"No, I don't think so, not after last night and the way she reacted. I think she'll watch to start with and after that I'll just see how far I can get her to go. Besides, I've got this weekend and all next week to persuade her to go a lot further, by the time we go to Albert's after the banquet next weekend, it should only be a little bit further for her by then. I hope. I'm going to have fun seeing how far I can get her to go this weekend.\" There was that chuckle again. \"It's going to be fun training her.\"\n\n\"You're evil Kam. It won't be such fun for Isabelle, believe me. But I want to be there and see what she does at Albert's party... Okay, this gweilo guy, I'll do it.\" She sounded decisive all of a sudden. \"Dennis or Daniel or whatever his name is, I mean, for the banquet. \" She giggled. \"And Albert's Party. You'd like me there as well wouldn't you Kam, even without this gweilo guy?\"\n\nKam chuckled, that low throaty chuckle that always excited me. Even now. \"Oh yeah, you know I like watching you being fucked Cindy.\"\n\nHuh? What the heck? He'd watched Cindy? He'd watched Cindy being fucked? What the fuck?\n\n\"Ohh, I know you do Kam, I know you like that. You've made a total little slut of me and you like that you've done that to me, don't you. You're a bad man.\" She rolled that of her tongue so sensually it sent a shiver through me. Then I thought about it. He'd made a slut out of Cindy? How? When? He'd only hired her a few weeks ago? What was going on here? \n\nNow I was getting really upset. Upset and, actually, I felt jealous and worried as well as angry. I mean, what we'd done with Jim and Fan, that was me and Kam together. It was sounding suspiciously like Kam was having an affair with Cindy. No, it sounded like he WAS having an affair with Cindy and that just was not on. Okay, so now I was starting to feel officially upset. Upset. I was feeling officially furious!\n\n\"Yeah, well, I told you I was going to turn you into a little slut back when I fucked you that first time.\" Kam chuckled again. \"You liked the idea back then.\"\n\nHe'd really fucked Cindy? Back then? Just how long had this been going on? Now I was feeling like someone had hit me with a hammer. Oh God. Oh my god. My Kam? Fucking that little bitch? Oh. My. God!\n\n\"I know. I didn't believe you would though, not back then.\"\n\n\"I know you didn't, that was why you were such fun. But you believe me now though, don't you?\"\n\n\"Well, I have to believe you don't I Kam. I'm a little slut all for you. Because you want me to be one. Because you turned me into one.\"\n\n\"Oh yeah, I did didn't I Cindy. I enjoyed that too.\"\n\n\"I know you did. I mean, when I met you I was like Isabelle is now... wasn't I?\"\n\n\"Yeah, you were, just like Isabelle. A bit shy and sweet and totally fucking hot and now you're a little slut that fucks anyone I tell you too. Aren't you?\"\n\n\"Yes... Yes, you know I am, Kam.\"\n\n\"And now I'm telling you to fuck this guy Daniel, okay.\" \n\n\"Okay, okay, I said I will.\"\n\nThere was that chuckle again. \"And you know what, by the time I'm finished with Isabelle, she'll be just like you Cindy...letting anyone fuck her who I want to fuck her.\"\n\nI felt ... horrified. This wasn't the Kam I thought I'd married. It was like Jekyll and Hyde.\n\n\"You like the thought of watching somebody else fuck Isabelle too, don't you Kam? I know you do. You really do want to turn her into a little slut, just like me, right?\" Cindy sounded all breathless, like that thought was exciting for her. Bitch.\n\nMy husband snorted. \"Oh fuck Cindy, that's what I just said, but yes. You got that one right. Just like you.\"\n\n\"She's your wife Kam, you married her. You really don't mind somebody else fucking your wife?\"\n\n\"No, it totally turns me on. Just like watching someone else fuck you turns me on.\"\n\n\"Yeah, I know it does.\"\n\nI leaned against the doorframe, shaking, speechless, feeling faint. Feeling slightly ill. All of a sudden one of the certainties of my world had been destroyed. I wanted to scream. I wanted to hit something. I wanted to hear what else they said. What else was going to come out of their mouths? What else were they going to say about me? What was Kam thinking? What did he really think about me? Did he love me? Now I knew what was going on between Kam and Cindy. I'd never suspected a thing. But wasn't that what they always said. The wife was the last to know. I felt like an idiot.\n\nKam chuckled again. \"Remember that first time you did what I wanted, you let me fuck you while Ricky and Alan watched? Remember how you felt?\"\n\n\"Yeah.\" Cindy's response was a gasp. Almost a moan. \n\n\"Well, that was Isabelle last night, except she went a lot further than you did. With Jim.\" My husband chuckled. \"God, I'm totally hard thinking about it, the way she let him fuck her boobs.\" Even now, just mentioning what Jim had done with my boobs made me shiver with excitement. Despite being furious with Kam.\n\n\"I can see,\" Cindy giggled. \"So, what does your devious mind have planned for Isabelle this weekend? Obviously something, if you're planning on taking her to Albert's party after the banquet.\" Now this was something I wanted to hear. Just what had my bastard of a husband been thinking.\n\n\"Oh yeah,\" Kam breathed. Knowing him as I did, or at least, as I thought I did, I could hear the desire in his voice. The lust. Even now, after everything I'd overheard, that tone of his voice turned my knees to jelly, made my pussy pulse wetly. \"Another double date with Jim I think. She was fascinated by his dick. Play it right and I'm sure I can get her to let him fuck her.\"\n\n\"That'd be so hot, watching someone else fuck Isabelle while you fuck me.\" I could hear the shiver of excitement in Cindy's voice. \"Watching Isabelle watch you fuck me. God Kam, I'm so wet just thinking about it.\" There was a short silence, broken by the rustle of clothing, a little gasp and then Cindy's voice moaning. A soft \"oooohhhhh.\" I couldn't bring myself to actually look. No, no, I didn't want to see anything.\n\n\"Yeah, you are aren't you.\" Despite myself, I felt my own shiver of excitement. I mean, I was horrified by everything Kam had said but the thought of Jim's cock; that still excited me. Thinking of watching Kam fuck Cindy, that made me feel intensely jealous and excited me all at the same time. Thinking of Kam and Cindy fucking while they watched Jim fuck me, my knees began to buckle. I thought of Jim's cock, huge in my hand. So much longer and thicker than Kam's. What would it feel like sliding into me? Would it stretch me? Would it go further up inside me than Kam's? It was longer, of course it would. And when he came, there was so much semen. What would that feel like, flooding me, spurting out inside me in such copious quantities?\n\nNooooo! I had to stop thinking about Jim. Even if Kam was cheating on me, I wasn't going to do that. No, I wasn't. I was married to Kam, I loved him. I was only his and Kam could keep dreaming about the rest. Well, okay, I'd let Jim fuck my boobs again, he could cum on me of Kam wanted that, but nothing else. The direction my thoughts were going in was just to confusing, to weird. \n\n\"You like that thought do you Cindy? Maybe I should bring you along for Jim to fuck instead of Fan.\"\n\n\"Okay.\" I could hear her breathing hard. \"Yes ... Yes please Kam ... bring me.\"\n\n\"You know what Cindy, you're too easy, you really are a little slut at heart you know, I think you were all along, right from that first time I fucked you.\"\n\n\"Kam!\"\n\n\"Yeah, I remember Cindy, I remember were so fucking easy, you were waiting for me all afternoon, I could see you and then you just about chased me out of that career fair and down the street.\" Kam laughed. \"I still remember that look on your face when I tossed you that hotel room card and told you that if you wanted the job, you'd be waiting there for me in an hour's time.\"\n\n\"And then you went and had a coffee and I was sitting there waiting and just about having a heart attack.\"\n\n\"Bastard, wasn't I? But you went there and you waited.\"\"\n\n\"I wanted the job.\"\n\n\"You wanted me to fuck you as well.\"\n\n\"You didn't even ask. You just walked into the room and started taking your clothes off.\"\n\n\"Hey, I was interviewing you at the same time and you didn't leave.\" Kam chuckled. \"I have to say, as job interviews went, you passed with flying colors.\"\n\n\"Yeah, well, I'd have been a bit upset if you hadn't given me the job after what you did to me. Honestly, I thought you were never going to stop.\"\n\nKam laughed again. \"Well, all I can see is that the second time round it was you who sucked me hard and sat on me and did all the work. You were good too, good for someone who was doing it for the first time, I was impressed. Anyhow, fucking you was a bonus, I probably never told you but I'd already decided we were going to offer you a job before I left the career fair. So when you chased me down the street, that was a complete fucking bonus.\"\n\n\"You never told me that.\" Cindy sounded upset now. Well, I would have been too. Jesus, I was sympathizing with her. She was the one having an affair with my husband.\n\n\"Hey Cindy, fucking you's still a bonus. Now why don't you take stop talking and take your panties off for me?\"\n\n\"What if someone comes?\"\n\n\"Don't know about someone else, but I'm going to cum babe. In you. Get your pantie s off now.\"\n\nShe did. I watched Kam watching her as she slipped them down and kicked them off. He was still talking. I was still listening. Horrified. Fascinated. Excited. \"You know Cindy, I really think Jim's the guy to fuck Isabelle. He's really got the hot's for her and she's fascinated by his dick. She couldn't take her eyes of it last night and this morning. And watching Jim fuck you to start with, that'll get her hot enough for him and me to tag team Isabelle.\"\n\nWhat? What the...? Kam? Kam actually really did want Jim to fuck me. And he really was fucking Cindy. The reality hit me like yet another physical blow, staggering me. What was worse was that I knew, I absolutely knew, that if I hadn't heard Kam spelling it out, it might have worked. I mean, last night, last night I'd have let Jim if he'd taken that step. Probably.\n\n\"Oh yeah? Well, I'll do it. Jim can fuck me.\" I could hear clothing rustling. Heavy breathing. Kam was undoing her top, she was unzipping his trousers. I could see his cock, see how aroused and excited he was as he turned her round and bent her forward over the conference table. \n\nNo Kam, no, don't do this. I wanted to scream and sob and play with myself all at the same time.\n\n\"You know I'll do it Kam. You know I'll do anything you want.\"\n\n\"Yeah, I know that Cindy. Isabelle, she was so turned on, she was dripping. Like you are now. Bend over, babe.\"\n\nI heard a flurry of movement, clothing rustled. I was so totally stunned by everything I'd heard. I just stood there, panting, my eyes closed. Until I heard Cindy.\n\n\"UUUUUGGHHHHHH.\"\n\n\"Is that what you want huh Cindy?\" Kam's voice, urgent. \n\n\"OOOHHHHHHHHH.\" Cindy, moaning. The unmistakable sound of bodies slapping against each other. Oh my god! Kam! I should have felt angry. Furious! Jealous! My husband. With another woman. My husband was fucking another woman! When my eyes flew open, I could see him. See them. I could see her push her butt back, push herself back onto my husband's cock so that he slid half into her.\n\n\"Deeper Kam ... Please ... I want it in me... deeper.\"\n\nI knew exactly how she felt. Kam did that to me too. My knees turned to jelly.\n\n\"You know what? If I can get her to let Jim fuck her this weekend, it'll be fun to see how far she'll go at Albert's.\"\n\n\"Yeah? Fun for you, Kam. You're not worried about Isabelle are you? Or me?\"\n\n\"Cindy, you're a born slut, you love all this. And Isabelle, she's mine, I know her, she's just like you, she's going to love it as well. And me, I'm going to have a ball with both of you.\" He laughed, still fucking Cindy. \"Now that guy Dennis, Daniel, whatever his names is, Albert tells me he's into doing sandwich's, he likes to fuck the girl's ass while some dude fucks her pussy.\"\n\n\"I'm not doing that, Kam.\" Cindy didn't sound at all certain.\n\n\"You did it with me last month babe, me and Ricky. Remember. But I was thinking of Isabelle. With Jim and that guy.\"\n\n\"UUUGHHHHHH ... ughhh ... yeah, yeah, it hurt like fuck Kam. It'd be too much for Isabelle.\"\n\n\"Yeah, well, maybe, maybe not. Albert's party, you're gonna let Dennis and Ricky do that to you babe, where Isabelle can see you. And Jim and I are gonna tag-team Isabelle until Jim's got her squealing, and then I'm going to leave her to Jim and finish up with you babe and let Dennis and Jim sandwich Isabelle. Hey, maybe Ricky can fuck her boobs with Dennis and Jim fuck her ass and pussy.\"\n\n\"I want to see that. I want you to fuck me while they do Isabelle. I want Isabelle to see that. Promise?\"\n\n\"I promise, she will, babe. Now what're you going to tell your boyfriend about next Saturday night.\"\n\n\"Nothing. Just that I'm out on a date with someone else. He dates me, he doesn't own me.\"\n\n\"Coz we all know who does, right.\"\n\n\"Yeah. ... Oh Jesus ... oh Jesus ... Kam ... Oh god ... Yes ... yes ...Fuck me ... fuck me hard...\"\n\n\"You're going to let this guy Daniel fuck your ass next weekend aren't you?\"\n\n\"Uuughhhh ... okay ... Yes ... If you want me too ... Ohh Kam ... Kam...\"\n\n\"I want you to, okay.\"\n\n\"Yes ... Yes... just fuck me now...\"\n\nI had to see more. I had to look and see more. I felt slightly sick and more than a little excited at one and the same time. I wasn't angry or upset though and that was weird. I should be angry and upset at everything he'd said, at his plans for me, after all, Kam was my husband. Mine! And he was planning to have that guy Jim fuck me. And this other gweilo guy, Dennis. Both of them. At the same time. Jesus Kam. I knew I should be furious, but really, I had no idea what to think. None at all. My mind was a blank. Except for an image of me, on my hands and knees, with Jim's cock plunging into me while I watched Kam and Cindy. Noooooo! I didn't want that! I didn't want to think that!\n\nBut I did know that my hand was under my skirt, between my legs and I could feel the incredible heat there. Heat and wetness.\n\nI eased closer to the doorframe, heart pounding, breathing hard. Bringing my eye up close to the crack, I peered through. Now I could see much more clearly into the meeting room, see very clearly indeed. Cindy was bent forward over the conference room table. She would have looked very elegant in that business suit and blouse except that the jacket was on the floor, the skirt was rucked up around her waist and her blouse hung open with her bra pushed upwards to expose both her tiny little breasts and one knee was up on the conference table.\n\nAnd Kam was standing behind her with his trousers round his hips fucking her. I could see that her pussy was shaved completely. Like mine. His hands held her hips, his cock ... MY COCK ... was busy sliding in and out of her. Kam was taking his time with her and I could see she was loving it. Just as I did when he did that to me. I found myself wondering if I looked like that when Kim did me. Except my boobs were a lot bigger than Cindy's. Cindy was almost flat.\n\n\"Next weekend,\" Cindy gasped, \"at Albert's Party.\"\n\n\"Yeah.\" Kam grunted.\n\n\"I want to lick Isabelle's pussy. I want to help you fuck her. And after you finish in me and those other guys finish with her, I want you to make her to lick your cum from my cunt when you're done with me.\"",
        "I shivered, one of my fingers slipping inwards between my swollen lips, thinking about that. Something I'd never thought of before. Licking another girl's pussy. Another girl licking my pussy. I thought of this morning, when Jim and Kam had scooped fingerfuls of their cum from my breasts and my pussy and fed it to me ... and how I'd swallowed it. How I'd licked it from their fingers. How I'd licked their fingers clean. Then I thought about licking Kam's cum from Cindy's pussy as my finger brushed my clitoris and I shivered again, biting my lip hard, stifling a moan. My next thought was of Cindy licking Kam's cum from my pussy and I just about had an orgasm then and there.\n\n\"Oh yeah babe, I'd love to see that.\" Kam threw his head back, driving himself into Cindy. Who moaned with pleasure, just as I had earlier this morning. \"We can share her,\" he grunted. \"She can lick your cunt out while I fuck her from behind.\"\n\n\"Do you think she'll really do it?\" Cindy gasped. God, I had to close my eyes. The thought was making me weak at the knees. No way was I doing that. No way in hell. But Cindy licking Kam's cum from my pussy while Jim fucked her from behind, now that I could see myself doing. Oh yes.\n\n\"I think so,\" Kam groaned, \"she was almost there last night and this morning. If Jim had moved on her, she'd have let him fuck her, I could see her face. She wouldn't have said no.\" His cock was moving in and out of Cindy's pussy as he spoke.\n\n\"God, I hope so, Cindy groaned. I watched in fascination as his cock disappeared completely inside her. She clutched at the conference table, I could hear her breathing, see the look on her face. My fingers sound their way to my aching clitoris, finding it, stroking so that my legs shook. \"I want her to lick your cum out of me so bad Kam ... So bad.\"\n\n\"You'll have to settle for me cumming in your mouth tonight,\" Kam grunted.\n\nHuh? What?\n\n\"Oh ... ohhhkay...we're going out tonight? Cindy moaned.\n\n\"Yeah, I'll call Isabelle, tell her I'm working late, I want to fuck your ass again tonight.\"\n\n\"Kam... That hurt last time...\"\n\n\"Yeah, but it felt real good for me, I want to get your ass used to taking it before Albert's party.\"\n\n\"Oh god, Kam... Please.\"\n\n\"You want it tonight or not Cindy?\"\n\n\"Ohhh ... ohh.\" Cindy was pushing herself back on Kam. \"If you want Kam ... you know you can do whatever you want to me...\"\n\nHe could? That bastard. He was doing whatever he wanted to Cindy as well as to me? God, my pussy was so wet and I badly wanted to finish myself of. I wanted an orgasm. I wanted to be fucked so badly. Enough. I'd heard more than enough. I flipped recording off, slipped my iPhone into my handbag, eased myself away from the door and retrieved my jacket on trembling legs. I could still hear Cindy's moans from the other side of Kam's office. He was going at her harder now. I smiled. Opening the other door, loudly, I turned as if I'd just walked in.\n\n\"Hi Kam, ...oh,\" I said, loudly. The moans cut off. There was a flurry of whispers, silence for a moment, then...\n\n\"Isabelle, uhhh .. hi ... hang on, just finishing a client call ... be with you in a moment\"\n\n\"No problem, I'll grab a coffee, don't rush.\" I backed out of his office and walked across to the coffee machine as nonchalantly as I could, my inner thighs brushing slickly against each other with every step. Out of the corner of my eye I saw a tousled-looking Cindy emerge from the conference room and hurry away in the other direction, hands fumbling at her clothes, bright red shoes pittering down the carpet. My eyes tracked her. She must be panicked. Her panties protruded slightly from one hand. Mad as I was, I had to stifle a giggle. And to think I'd liked her when we'd met. She was actually rather a nice girl. But then, so was I. And Kam had had his way with both of us. The cheating lying bastard.\n\nWhen I wandered back into Kam's office, he was already there, the door to the adjoining conference room firmly closed, looking as immaculate as ever. Except for the bulging erection that pushed the front of his trousers outwards. \n\n\"Isabelle.\" He swept me into his arms, kissed my forehead.\n\n\"Kam, honey.\" I stood on my tiptoes and kissed his lips, my tongue sliding into his mouth. Oh that dirty cheating bastard, I could taste pussy on his tongue as he kissed me back. That could only be Cindy's pussy. I was still furious with him, but the taste of her on his tongue was also exciting. My hand stroked that bulge. Stroked the erection that Cindy hadn't managed to satisfy. That I hadn't given her the chance to satisfy. Well, she wasn't going to get it after I left either. \n\n\"You ARE happy to see me,\" I purred, my hand stroking him lightly. \"Was last night and this morning that exciting for you.\" \n\nI dropped both hands to his trousers, unbuckling his belt, unzipping him, working his trousers and his boxers down, feeling his erection spring free. It was still wet from Cindy. I held him in one hand, stretching upwards to seal my mouth to his for a long passionate kiss. \"I guess it was,\" I breathed, adding with a giggle, \"that was so hot this morning darling, you didn't mind Jim using my boobs with his cock did you?\" I felt his cock jerk in my hand. No, his cock didn't seem to mind at all. Bastard. I slipped my hand down to his balls, held them, caressed them.\n\nA quick squeeze? Balls, they're the consistency of a ripe plum and about the same size. One good squeeze and a twist and I'd have my revenge then and there. Kam would need an ambulance of course, but no, then there'd be police and all sorts of trouble. And besides, I badly needed fucking and Kam was my husband. MINE. Even if he was temporarily being unfaithful to me. Well, husbands were generally like that, so some of the older ladies at my office had confided. And I did love him. Very much. \n\nNo, no physical damage. Any punishment I inflicted on Kam would be more subtle than that. I needed to think carefully about what was suitable. How to put a stop to this little affair of his to start with. How to put a stop to these ideas he had of sharing me with other men. But not yet. Not immediately. No spur of the moment decisions. I had so much to learn. There was so much I didn't know. And Cindy, thinking of watching Cindy was exciting. Although Cindy wasn't going to get what she wanted. No, definitely not. She was going to get what I wanted instead. I was going to think about this some more. And meanwhile, oh god, I wanted Kam's cock in me so much. I needed fucking and I didn't want him to waste that nice hard erection on that slut Cindy.\n\n\"Did you mind Jim doing that darling? It looked so hot and his cock was huge...\"\n\nI stroked Kam's cock slowly, feeling my own wetness, enjoying that feeling of anticipation. Enjoying knowing I was going to get this and Cindy was going to be missing out. I know, I sound like a jealous little cat, but Kam was MY husband. Mine. And that meant his cock was mine too.\n\n\"Uhhhh,\" I breathed as Kam forced two fingers into me, raising me up onto my tiptoes. \"Uuughh ... no ... no ... Yes, I did ... but you wanted him to Kam ... you told him to ... To fuck my boobs... So I let him...I let him for you.\"\n\n\"You liked it though, didn't you?\"\n\n\"I liked it because you wanted it Kam, you wanted him to ... and I want to satisfy you. I always want to satisfy you honey.\" I smiled as his fingers moved inside me. God yes, I so wanted to satisfy Kam. \"I want to satisfy you now, Kam.\" I sank to my knees before him on the carpet, my hands tugging his trousers and his silk boxers down to his ankles. I'd never done what I was going to now for him before either. He'd wanted me to but I'd always declined and Kam hadn't pushed it. But today I was going to. \n\nI took his cock in my hand and held it in position for my mouth. After a last glance up at him, I lifted his cock up and with my other hand found his balls and gently cupped them, drawing them up and out, tenderly licking them, delicately running my tongue over them as I held him in my hand. I heard Kam make a little noise of appreciative enjoyment and I knew I was pleasing him. My tongue licked its way from his balls to the base of his shaft before working slowly upwards. I slowly coated his length with my saliva, my hand continuing to stroke him slowly as my tongue reached the upper half of his length. I lapped at his swollen glans, running my tongue around it, inadvertently licking a large drop of pre-cum from the tip as my tongue ran over him. \n\nI savored the salty taste of him as I opened my mouth wide and took him in, sliding my lips down his shaft, my tongue sliding down under him until the tip of his cock brushed the back of my mouth. I could taste that bitch Cindy's pussy on his cock. Saliva flooded my mouth as I pulled back until only the head of his cock was inside. Okay, why hadn't I done this before? Having his cock in my mouth really wasn't as bad as I'd thought it would be - actually it was far more exciting than I'd thought it would be. Tasting Cindy's pussy on him was exciting too, in a very weirdly different way.\n\nKam's hands moved to hold my head, brushing my hair back. I could see him looking down at me, smiling as I bobbed my head on him, my mouth servicing his cock diligently, each time taking as much of him in as I could and doing my best to press and move my tongue on him as I did so. \n\n\"Fuck, that's so good Isabelle.\" I could tell he was enjoying what I was doing, his voice was approving. One of his hands was stroking my head, running through my hair, sending little shivers through me. I enjoyed brushing my hair; Kam's stroking of it always resonated within me and now was no exception. Glancing up again as I bobbed my head on him, I could see him watching, enjoying the sight of his cock burying itself in my mouth, watching himself and me as my lips slid down and back on his cock. But I didn't want this to finish with him exploding in my mouth. I wanted fucking. I slid my mouth of him with a little wet pop, my hand continuing to slowly stroke him.\n\n\"Sit down,\" I gasped, urging him back down into his chair. Taken by surprise, he half fell into it, his eyes widening as I lifted my skirt up and swung myself astride him, still holding him with one hand. \"You're going to be fucked,\" I breathed in his ear as I lowered myself downwards, guiding the head of his cock to my wetly ready slit. Oh yes, I was so so ready. This was one erection Cindy wasn't going to benefit from. \n\n\"Ohhhh fuck Isabelle.\" Kam threw his head back, his muscles tensing as I lowered myself down on him. I couldn't believe how slickly wet, how liquidly wet I was. My pussy just slipped down his length until he was completely buried in me and I was seated astride him, all of him inside me. I just sat there for a moment, feeling him in me, feeling myself all around him as he impaled me so beautifully. It just felt so good. I wondered what Jim's cock would feel like inside me, so much bigger than Kam's. So thick and so long. Oh Jesus, if Kam could do this with Cindy, maybe I could with Jim. But no, I wasn't going to cheat, not on my husband. No way. I was a good wife. I wasn't like Cindy or Fan. Even if I now thought I might like to be.\n\n\"Ohhhhhhh Kam...\" I had to sigh, his cock just felt so good in me. So good. I wanted to stay seated on him forever. \n\nThen I had to move on him. I didn't care that a few minutes ago it'd been in Cindy's pussy. The slut who tried to steal other girl's men. Although I was probably being unfair on her, it sounded like Kam had the same effect on her that he had on me. Now, Kam was in me and I was going to satisfy him. I was going to drain him dry. Only then was I going to think about what I was going to do. \"Do you like my pussy Kam?\"\n\n\"Oh fuck yes Isabelle, I love your pussy.\"\n\n\"Am I tight for you?\" I squeezed myself around him as I raised myself up, then relaxed so that he slipped up inside me as I lowered myself. Thinking how much tighter I would be on Jim. Noooo. Stop it Isabelle, don't think about Jim and that big hard cock of his, so big, so much cum ... Stopitstopitstopit!\n\n\"Yes ... oh fuck yes,\" he groaned as I squeezed myself on him, moaning softly, doing my best to push myself down on him. I wanted as much of him as I could get inside me. Oh yes. Yes please.\n\n\"Undo my top,\" I breathed as I rose.\n\nHe did, jerkily unbuttoning me as I slowly eased myself up and down on him. Completely unbuttoning me, he brushed my top open, his hands grasping my hips and now he was moving me as his mouth closed on one breast. My nipples were swollen, hard, jutting out. I tweaked the one that he wasn't sucking on, stifling a squeal of pleasure. \n\n\"Do you like this?\" I breathed, pushing one breast up against his mouth.\n\n\"Fuck yeah ... Oh fuck yeah,\" my husband's voice was muffled.\n\n\"Did you like watching Jim fuck my boobs this morning Kam?\" I sobbed, \"Would you like to see him do that to me again?\" His cock throbbed hard inside me. I knew his answer before he spoke. \n\n\"Ohhh fuck Isabelle, that was so hot this morning.\" He raised his face, looking into my eyes. \"You didn't mind doing that? I know I got a bit carried away, I'm sorry if I pushed you to do that.\"\n\nOh, right. Apologize now. Liar. Mind you, Fan and I had planned to ask Jim and Fan around ourselves and if we had, probably the same thing would have happened. Oh god, I was making excuses for Kam now. What about him and Cindy? Fuck, I was so confused. But I wanted him to fuck me hard. I wanted to be fucked hard. And I knew what excited Kam.\n\n\"Kam ... Kam honey ... you know I love you so much ...\" I did. I loved him dearly. Even if the lying bastard was cheating on me.\n\n\"I love you too honey.\" \n\n\"I love you honey ... If you want Jim to fuck my boobs again, I'll let him ...\" I sank myself down on Kam and squeezed him with my pussy, milking him. \"If that's what you want, honey.\"\n\n\"Oh fuck ... Oh fuck Isabelle ...\"\n\n\"Why don't you ask him to come on a double date again tonight honey.\" My heart threatened to explode. There. I'd said it myself. My pussy was so wet I was going to melt, I could hear those wet wet noises again. I leaned back, rested my elbows on Kam's desk as I raised and lowered my hips, pushing myself down on him.\n\n\"Ohhh fuck ... ohhh fuck ... I'll call ... I'll ask Fan again...\"\n\n\"No ... No honey ... not Fan,\" I gasped, \"give Jim some variety ... he's a visitor to Singapore ... he needs to try out some different Singapore girls ... what about that Cindy girl that works for you ... she seems like a little slut ... a little slut that'd fuck ... fuck any gweilo who wanted her ...\"\n\n\"Yeah,\" Kam gasped, \"yeah, you're right... She would...\"\n\n\"Call Jim now,\" I gasped, \"Call him while I'm fucking you ... I want to hear you ask him.\" My pussy convulsed as I thought of that big hard cock of Jim's. Of seeing it again. Of touching it again. I scrabbled for Kam's cellphone, passed it to him. He didn't even pause, he hit one of his speed dial keys.\n\n\"Hi Jim, it's Kam. ... Yeah, it was wasn't it ... yeah, wondered if you had anything planned tonight? ... You don't ... great ... No, not Fan, one of the other girls at my office Jim ... Cindy, Cindy Chung, she's hot ... yeah, yeah, she's hot Jim ...\" Kam grinned at me. \"Like last night ... yeah, I'm sure she will ... okay, see you at the restaurant ... You too ... bye Jim.\"\n\nKam hung up with a smugly satisfied look on his face. A look that changed into a groan as I sped up, moving faster on him. Kam's desk phone rang. He looked at me. I shrugged. My boobs bounced. Kam's cock throbbed inside me. Well, I had him where I wanted him and I was willing to take my time. \n\n\"Answer it,\" I gasped. I clicked the speaker button.\n\n\"Hi Kam, it's Cindy.\" She sounded anxious.\n\n\"Cindy, I'm with Isabelle right now.\"\n\n\"Oh.\"\n\n\"Hi Cindy,\" I chirped, moving on Kam, raising myself a little, then sliding back down on him. I wondered if she could hear the wet noises my pussy was making. I hoped so. \"Kam and I were wondering if you'd like to join us and a friend for dinner tonight and then drinks after at our apartment.\"\n\n\"Sure, yes, I'd love that Isabelle.\" Cindy sounded a little confused.\n\n\"Kind of a double date thing,\" I said, \"one of Kam's clients, Jim. We thought you could come out to dinner with us and Jim and then maybe come back to our apartment for a few drinks afterwards.\" Jesus, I'd just repeated myself. It was soooo hard to think while I fucked Kam. So hard to thing when his cock was busy fucking me. My pussy did a spastic little dance on him.\n\n\"Uhhh ... sure, yes, I'd love to,\" Cindy really sounded confused.\n\n\"If you're not doing anything else of course Cindy,\" Kam asked.\n\n\"No, no of course not,\" Cindy said.\n\n\"Great, see you after work Cindy,\" I purred, \"wear something really sexy for Jim, I'm going to dress up for Kam and I don't want to be the only one.\"\n\n\"Ohhh ... okay,\" she said.\n\n\"Why doesn't she borrow one of your dresses,\" Kam suggested, his hands pulling me down onto him, hard. \"That way she doesn't have to go home and come back in.\"\n\n\"Uggghhh, that'd be fine with me,\" I gasped, \"you ooohhhhhkay with that Cindy?\"\n\n\"Oh yes, yes that would be great,\" Cindy said.\n\n\"Ohhhh ooohhhhkay, I'll come by aaaahhhhfter work and pick you uggghhhhhp,\" I gasped. \"See you lateuughhh.\" Kam disconnected. That was just as well because soon I was going to scream and bite him.\n\nOh yes. I was going to enjoy watching Jim fuck Cindy with that giant cock of his. I was going to enjoy Cindy licking Kam's cum from my pussy after Kam came in me too. I was going to enjoy coaxing Jim into fucking Cindy up her jealous little ass. I was going to enjoy keeping Kam thinking all through the night that Jim was going to fuck me while he watched. \n\nBut right now I was going to enjoy Kam fucking me hard and then cumming in me. I smiled at him. \"Want to bend me over your desk and fuck me hard?\" I whispered. He'd always wanted to do that to me. I'd always said no way. He didn't even answer. Next second I was being lifted and turned around and his cock was ramming back into me as I bounced face down on the desk, scrabbling to support myself as he kneed my legs wide apart and surged up inside me.\n\n\"NNUGGHHHHH ... HHNNGUUHHH ... OOHHHHHH ... NNAAAHHHHH.\" Oh fuck that was so so so good. I couldn't even speak as his cock rammed its way into me. All I could do was lie across the desk and moan as his thrusts jolted my body, filling me, taking me, using my pussy. Oh god yes, this was what my pussy was for. Being used by my husband's cock. Used so hard. Behind me, Kam was pumping himself into me, his fingers gripping my hips mercilessly tight, grunting with every thrust, his body slapping up against mine.\n\nResting my cheek on the desk, I saw the conference room door move slightly, open an inch. Someone was looking at us, watching us through the crack, just as I'd watched Cindy and Kam. I saw a shoe at the bottom, recognized that bright red. Cindy. Cindy was watching us.\n\n\"Fuck me hard, Kam...\" I moaned, then, \"I want to see Jim fuck Cindy tonight honey, will you let Jim fuck her?\"\n\n\"Yeah ... yeah ... Jim can fuck her,\" Kam gasped.\n\n\"Fuck her hard ...\" I moaned, \"I want to see that big cock of Jim's fuck her hard while you fuck me. Can we do that honey?\"\n\n\"Yeah ... oh fuck yeah ... Jim, he'll fuck her as hard as you tell him too honey ... are you going to tell him ...\"\n\n\"Yes,\" I moaned, \"Yes ... if you want me too, I'll tell him .. he can fuck her like you're fucking me now...\" And Kam was, he was fucking me so hard, banging me up against his desk. Jesus jesus jesus it was so good. He'd spread me wide, my legs so wide apart, his cock pumping wetly into my pussy.\n\n\"You like that huh ... you like looking at Jim's cock?\" Kam grunted as he took me.\n\n\"Oh yeah ... yeah ... It's so big ... so big ... how did Fan's pussy take it?\" I moaned.",
        "\"You wanna see Cindy's pussy take it too huggghhh?\"\n\n\"Yeah ... yeah .. I want to see that Kam ... I want to see him make her squeal.\" God, if she squealed like she had when Kam was fucking her, it was going to drive me crazy tonight.\n\n\"Oh yeah baby ... yeah ... I wanna see Jim's cock make you squeal too...\"\n\n\"Oh yeah ... yeah ... I want that ... I want that ...hhugghhhh? ... Kam ...\"\n\n\"Oh fuck Isabelle ... Imagine Jim's cock in you ... fucking you... Oh fuck...\"\n\n\"Fucking me ... Like ... like you are now...\"\n\n\"Yeah ... oh yeah ... fucking you hard...\"\n\n\"Fucking Cindy ... then me ... taking turns with us?...\"\n\n\"Yeah ... yeah ... I want to see that ... oh fuck ... Isabelle ... Isabelle ... It's cumming ...\"\n\n\"Cum in me,\" I moaned desperately, \"I want you to cum in me ...\"\n\n\"Oh yeah...\" Kam grunted, \"oh yeah, I'm going too ... I'm going too...\"\n\n\"Cum in me like you're Jim cumming in my pussy,\" I moaned.\n\n\"GGAAAAAHHHHHHHH UGGHHH UGGHHHH UGHHHH UGHHHHH.\" Just like that he howled, his cock exploding inside me, great jets of cum erupting deep within me, flooding me. My pussy convulsed on him, I pushed back onto his spurting length, moaning as my body was carried away in another of those marvelous orgasms. His hand in the middle of my back pinned me to the desk as he humped me wildly, his cum still spurting out inside me, his cock throbbing in me as my pussy danced on him, milking him as my orgasm washed through me in golden waves that only slowly faded away.\n\n\"Oh fuck Isabelle,\" Kam groaned, buckling at the knees and collapsing back into his chair, his cock sucking out of me, leaving me empty. \"Fuck, that was amazing.\"\n\n\"Oh yeah,\" I moaned, face down on his desk, his cum trickling wetly down my inner thighs. \"Oh yeah, that was.\" I couldn't move. It was all I could do to lie on the desk, my eyes closed, breathing hard. Now that had been a fuck. I liked it.\n\nIt took me a couple more minutes to get my breath back. By then his cum was dripping from my pussy to the carpet in long sticky threads. I didn't care. I was in no hurry to move. I knew Kam would enjoy looking at me like that. But I did have to get back to work so eventually I managed to push myself to my feet, grab a handful of tissues and wipe myself off. Kam laughed. I poked my tongue out at him as I slipped into my panties.\n\n\"Good idea,' he said, \"you can lick me clean.\" He gestured.\n\nI looked at him. After a moment I smiled and sank to my knees before him. \"Okay,\" I said meekly. I heard a slight gasp from behind the door as I took his sticky length in my mouth and licked and sucked him. The taste wasn't bad, quite palatable in fact. After I'd cleaned up rather thoroughly, he was still limp so I carefully tucked him away.\n\n\"Until tonight\" I smiled, giving him a little pat. \"See you when I come to pick Cindy up.\"\n\n\"Yeah honey, see you then.\"\n\nHe stood to hug me, I made sure I kissed him, my mouth wide open, sucking his tongue in, giving him a good taste of his semen and my pussy juices. If that bitch Cindy kissed him after I left, she was going to taste me. I liked that thought. Oh yeah, I did! I was already enjoying thinking about how I would tease him some more, keep him on tenterhooks tonight, while all the time not giving him what he wanted!\n\nYes! Now THIS was fun.\n\nAll the way back to my office, I thought about tonight. The possibilities. Oh yes, the possibilities. I'd teach Kam to cheat on me. I'd punish Kam for planning to share me with other men, Without even asking me. With no consideration for whether I was even willing or not. \n\nThe bastard. \n\nAnd all the time I knew, I knew that if I hadn't heard him talking about me to Cindy, I'd probably have ended up giving him exactly what he'd wanted, exactly what he'd planned. He knew me well. Far too well. Better than I knew myself, I realized. Even now, the thought of giving him what he desired from me was exciting me. Tempting me. I couldn't stop thinking about it.\n\nEven if I was REALLY mad with him.\n\nMad with him or not, I found myself actually excited as I sat down in my cubicle and thought about tonight. About Kam and Jim and Cindy. But what about Fan? I'd asked Fan if she'd like to get together tonight too and I'd forgotten all about that..\n\nNow I was mad AND confused AND upset AND excited AND feeling a little guilty for forgetting Fan. I'd have to call her. Apologize.\n\n\"Penny for your thoughts?\" David's voice jerked me back to awareness.\n\n\"Huh?\" David was standing next to my cubicle, looking down at me, his nostrils flaring. I was suddenly acutely aware that I was all sweaty and I wasn't wearing a bra. It was sitting in my handbag on the side of my desk. I hadn't brushed my hair either and my lipstick was probably smeared. God, I was so sure I looked and smelt like I'd been freshly fucked. I could just about feel David's eyes burning into me. Burning into my boobs anyhow. Typical gweilo ham-sup-lo. I glanced down. Oh yes, he was definitely excited. And that bulge was big. As big as Jim's. My eyes widened. I smiled. Ohhhhh yes.\n\nI looked up at him. \"Are you doing anything tonight, David?\"\n\n<p align=\"center\"> * * * * * * * * * * * * </p>\n\nComing up next: Happy Birthday to Me, Chapter 06: Isabelle and Friday night's ..."
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "young wife",
        "innocent",
        "voyeur",
        "desk sex",
        "office sex",
        "cheating",
        "singapore",
        "chloe tzang"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/happy-birthday-to-me-ch-05"
}