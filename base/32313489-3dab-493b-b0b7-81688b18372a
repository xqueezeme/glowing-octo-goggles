{
    "title": "The Arete - Princess-Consort Ch. 05",
    "pages": [
        "Chapter Five: \n\nThe Captain\n\nKemptrux and Vostiv saddled their horses next to me in silence and remained mute as we led our warchargers into the courtyard. Training and tournaments were all good fun, but a different sort of dread fills even the bravest of hearts the first time they ride toward real danger and death.\n\nThe courtyard was much the same. The knights who were leaving were fine and arranged by house, but those 300 or so young common guards Kemptrux's age - all due to join the army in the next campaign - twitched and milled confusedly.\n\nShaking hands dropped weapons and fumbled with reins. Ashen faces looked ready to cry or to vomit. The air stank with fear and uncertainty.\n\nI looked about myself and saw that I was the ranking regular officer present. Only by virtue of my marriage placing me in the fortress, but there I was.\n\n\"Oi then,\" I called out to ten green cavalry guardswomen I knew, \"Meirbax, Teprex, Fairax, Driquex, Zellix, Morpox, Jozix, Glascix, Vewpax, and Bippex form up. The rest of you, fall in in ten columns behind them. Foot soldiers, form in fifteen columns behind the cavalry. If you're to be infantry, you might as well get used to the smell and texture of walking in horse shit now. It will be your whole career.\"\n\nA few smiles and jeers followed and we had something like an organized column when General Heoldax arrived with Ser Gharntex, a few dozen more mounted hetaireia, and more knights. I split the bags of gold among Savaran, Sanguine, and Stygian quietly. The other knights rode over to join General Heoldax's party.\n\n\"Ser Taiglox, you will take the common cavalry and ride with all prudent speed to Proquian Rock within four days, passing through Trentava to collect recruits from there. Ser Gharntex, you will take the common infantry and wagons and march with all prudent speed to Proquian Rock within six days, passing through Ninvara to collect recruits from there. At Proquian Rock you will integrate your troops into companies as is fitting and await my arrival. I'll take these dozens and all the palace's spare horses with all possible speed through to Houses Rivadya and Faquardya, as they have not committed numbers of women-at-arms commensurate with their population and our need. I will be there in no more than eight days, but hopefully three.\"\n\nAnd so Heoldax was gone with her dozens and their spare horses raising dust behind her out the fortress gate and down the broad city street.\n\nI addressed the two mounted members of my household. \"Kemptrux, on my left. You will serve as my First Sergeant. Vostiv, on my right. You will serve as my Adjutant.\"\n\nThen we rode to the front of the column of uncertain horse to face 104 unblooded young women, most of whom were shaking in their stirrups. They were girls really, none younger than 16, but none older than 20 either.\n\n\"Company, attention,\" I ordered my newly minted troops, \"You have been called upon to serve in your country's hour of need. Doubtlessly you expected more time to prepare, to adjust to the idea of risking death and dealing death in the violent clash of battle.\"\n\nA few nods and some quick glances confirmed my statement.\n\n\"That time is gone. We ride to war. If you ride through those city gates following me, you are soldiers in the Queen's army, in my company. Should you be too craven, too rebellious, or too pacific to bear arms in Her Majesty's name, do not follow me. Slink off into the city and drop the ''x' from your name. Take up farming. Become a shopgirl. Spread your legs for gold.\" \n\nAgain, they glanced amongst themselves, seeing if any would break formation.\n\n\"Shame will rightly dog your steps if you fall out now, after all your training and opportunity, but the cost of cowardice as Her Majesty's soldier is much higher. Disobey my orders and I will beat you. Break in battle and I will flog you. Desert your company and I will hang you.\" I paused and let the gravity of the clear and specific death threat sink in, \"If you follow loyally and fight bravely however, I will justly and unreservedly reward you with gold, praise, promotion, and honor.\" \n\nI wheeled Savaran and set a fast trot. \"Make your choice!\"\n\nIn my peripheral vision, I saw Kemptrux still on my left and Vostiv on my right, but I did not check to see who still followed. Not until we were a quarter mile clear of the city gate, ready to turn toward Trentava, did I reassess.\n\n\"Company, halt,\" We wheeled on the head of the column again, \"Adjutant, head count.\"\n\n\"98 soldiers, ser!\" Counting was made easy by the rows of ten.\n\n\"98!\" I repeated. \"You 98 serve in the Queen's army. You will go where you are told, do what you are told, and kill whom you are told. I swear you now on your lives and your honor to the Queen's service, to the Queen's wars, and to the Queen's victory. As of this day, you are Queen's soldiers, 1st company, 1st cavalry regiment, 1000th division. Now to Trentava!\"\n\nTrentava was a day and a half's ride, less than a day with hard riding. But we had no mounts in reserve and would be of no service to anyone if we lamed our only horses. So, come nightfall, I halted the company again to make camp near a stream.\n\n\"Water your horses first, and then yourselves,\" I ordered the company in general.\n\n\"Adjutant,\" I spoke to Vostiv as we dismounted, unsaddled, and I handed her mine and Kemptrux's reins, \"You know how to make a horse blind?\"\n\n\"Yes, ser.\"\n\n\"Conscript two dozen soldiers and what lances and rope you need to build 12 at the edges of that copse. Station them in 8 man 2 hour watches to stand guard over the horses. Have two dozen other soldiers hold the horses while you work. Station them in 8 man 2 hour perimeter watches in pairs.\"\n\n\"Aye sir.\" She ran off with the three horses to affect my orders.\n\n\"First Sergeant,\" I spoke to Kemptrux, \"You have a full kit with you?\"\n\n\"Yes, ma'am,\" she answered, proud of her own preparedness in bringing full saddle bags.\n\n\"Inventory it aloud.\"\n\n\"Bedroll, two changes of garb, flint set and tinder, three days' hard tack and black bread, short knife, water bladder, horse bladder, and halter.\"\n\n\"How many of our soldiers have the same full kit?\"\n\n\"Uh...\"\n\n\"'I don't know, but will find out, ma'am' is the answer, First Sergeant,\" I supplied.\n\n\"I don't know, but will find out, ma'am.\"\n\n\"Very well,\" I handed her a writing tablet and charcoal, \"Tally the lack. And give me your flint set.\"\n\n\"Aye, ma'am.\"\n\n\"Meirbax!\" I called out.\n\n\"Yes, ser!\"\n\n\"'Ma'am,' out here, soldier,\" I corrected gently.\n\n\"Yes, ma'am.\"\n\n\"You know how to pick dead wood and build night fires?\"\n\n\"Yes, ma'am!\"\n\n\"Take these two flint sets and yours if you have one. Bring 7 soldiers with you, collect wood, and build 10 night fires in this clearing for the company to sleep near.\"\n\n\"Aye, ma'am.\"\n\n\"Yeughix!\" I called out.\n\n\"Yes, ma'am.\"\n\n\"Take 4 soldiers, check all the saddle bags and knapsacks for hard tack and black bread. Gather it all and issue each soldier one piece each for the night and for the morning. Start with these.\" I handed her my, Kemptrux's, and Vostiv's rations, enough for between us for about three dozen soldiers to have two small meals.\n\n\"Aye, ma'am.\"\n\nWith the bulk of my force preparing camp, I lifted my bedroll, Kemptrux's, and Vostiv's.\n\n\"You three,\" I called out to a small grouping of young soldiers who were not engaged, \"Names and ages.\"\n\n\"Traddox, Saquax, and Frenibix, ma'am,\" Frenibix answered, \"We're all sixteen, ma'am.\"\n\n\"You have bedrolls?\"\n\nSaquax looked at the dirt and looked back at me, \"No, ma'am.\"\n\n\"Have these then,\" I handed ours to them, \"And look after them, because you'll likely buy your next for yourselves.\"\n\n\"Thank you, ma'am.\"\n\nI went to the horse blinds and brushed down Savaran, then returned to the main of camp where my First Sergeant and Adjutant stood waiting for me. The fires were built and most of the food was handed out.\n\n\"Company,\" I called out, \"Eat if you haven't and sleep. We ready to leave in six hours. Yeughix, see that those on watch have food for tonight and the morning, then you lot sleep too.\"\n\nI turned to my corporal-cum-First Sergeant and my squire-cum-Adjutant.\n\n\"First Sergeant, you take first watch walking the camp. I'll take mid and Adjutant will take last.\"\n\nVostiv went to her gear, \"Ser, my bedroll?\"\n\n\"First Sergeant, how many soldiers brought bedrolls?\"\n\n\"Less than a third, ma'am.\"\n\n\"Adjutant, what did I tell you about sleeping better than your soldiers?\" \n\n\"Not to, ser,\" she grumbled a little.\n\nI balled up a change of garb as a pillow. \"That's right. Now a few hours' sleep on soft ground next to a warm fire wouldn't hurt any of them. It'll be a good lesson even to keep a full kit for those who haven't. But you will not fare better than your soldiers.\"\n\n\"Aye, ser.\" Vostiv followed my lead and balled up a change of garb to put under her head.\n\nAbout an hour and a half later, Kemptrux woke me and I sent her to sleep, but didn't wake either her or Vostiv again until it was time to break camp. (I'd spent weeks sleeping in a soft bed and didn't need more rest.)\n\nInstead I walked the camp and spoke with the 16 soldiers standing watches over the two periods. I learned names and backgrounds, spreading cheer and knowledge where I could. \n\nWell before dawn, I woke all the soldiers to eat, saddle up, and break camp. We reached Trentava before noon.\n\nTrentava is a middling town on the verge of being a city. There are high walls and a gate, but of wood not stone. There is a large market and many smithies, but no luxury shops. The streets are broad and hard, but not paved.\n\n\"I am Lieutenant Taiglox, Company Officer, 1st company, 1st cavalry regiment, 1000th division of Her Majesty's army,\" I addressed one of two slack-jawed gate guards from the head of my column, \"I am come on Princess Heoldax's orders and must speak with your Mayor. I ask succor outside your gates for my soldiers and our horses.\" I added the last bit as a polite formality as taking water from the open spring near the gate wouldn't be denied to any strangers.\n\n\"I'm Keilox, ma'am. And this is Wrenax. And er well, I am, um...\" Keilox struggled to answer.\n\n\"You're a bleeding idiot is what you are,\" a veteran soldier answered from one post over, \"run along and tell the Mayor a company officer is here to see her on the Crown Princess' orders and that she's a Knight of the Order Royal Indomitable no less.\" There's a reason we introduce ourselves through the badges on our clothes and through set words. It tells veteran soldiers what they need to know for quick and informed decisions..\n\nKeilox ran off and the veteran addressed me, \"Ma'am, I'm Warrant Corinox, 4th company, 2nd siegecraft regiment, 4th division of Her Majesty's army. And unfortunate enough to be Captain of the Town Guard while the army is furloughed. You and any Queen's soldier are welcome to drink and rest by our stream.\"\n\n\"Well met, Warrant, and thank you.\" She looked a sterotypical warrant officer, ribcage like a barrel and limbs like tree trunks. Face like a minotaur when it's angry. \"My mission here is to rapidly recruit forces to repulse a gathering horde in Arashnia. I doubt your Mayor would object to your smoothing the way for her likely acquiescence. You may should stay yourself though,\" I added, \"a siege on Trentava is not unlikely if we fail.\"\n\n\"Caw. Aye, ma'am. I'll send runners to gather all the soldiers in the region,\" the warrant officer answered and ordered the other gate guard, \"Bring the Lieutenant to the Mayor's house.\"\n\n\"Ma'am, both gate guards are absolutely never to leave at once under any circumstances,\" the young guardswoman objected uncertainly, not really grasping the portent of our conversation. \"the town's safety must come first.\"\n\n\"And what the fuck, pray tell Wrenax, are you going to do to stop the unknown pack of vandals that unexpectedly arrives and overcomes the company of Queen's cavalry at our gate while seeking entrance to the town?\"\n\n\"Nothing much, ma'am.\"\n\n\"'Nothing much' indeed. Permission to fucking think, Wrenax. And if you can't fucking think for yourself, permission to fucking follow orders like a damned soldier instead of questioning them,\" Corinox seemed at the end of her tether in dealing with soft guardswomen instead of hardened soldiers. I couldn't blame her. \"Ma'am, I'll be along in a half hour, once I've spread the word.\"\n\n\"Thank you, Warrant. Lead on, Wrenax. Come with me, Adjutant. First Sergeant, you have the company.\"\n\nChastised, Wrenax led us to a large house in the center of town where an elderly woman stood in House Clatradya colors of tan and burgundy. Her hair was pure white and her face heavily wrinkled, but her back was straight and her eyes clear. A retired officer if I've ever seen one and I breathed a sigh of relief.\n\nI dismounted and Vostiv with me, well-trained at that point to take Savaran's reins along with Stygian's.\n\n\"Grandmother,\" I addressed her with the respectful term for an officer meeting a retired officer, \"I'm Lieutenant Taiglox, Company Officer, 1st company, 1st cavalry regiment, 1000th division of Her Majesty's army. This is my adjutant, Vostiv. We are sorry to meet you in such troubled circumstances.\"\n\n\"Troubled are they? Well, well met, nevertheless. I'm Gotirox, retired Major, 6th heavy infantry regiment, 4th division and the Mayor of Trentava in Clatadya's name,\" she smiled grimly, \"An honest soldier in House Laerdya colors wearing a Royal Indomitable patch on her shoulder. You must be the new Princess-Consort. Congratulations on your nuptials. Sorry your honeymoon must've been cut short.\"\n\n\"As am I.\"\n\n\"Your squire is your adjutant and you have no division, so I'm guessing your company is whatever women-at-arms you could lay hands on to help reinforce the regular army?\"\n\n\"You've hit the nail on the head, Grandmother. I'm under orders to gather more soldiers here to face the gathering horde in Arashnia.\" I handed her some of the gold I'd the foresight to bring. \"I would also ask for wagons, horses, provisions, armor, and arms in whatever amount you can afford without dangerously depleting your own resources.\"\n\n\"Ah. An order that I'm sure would have been given you, if more time and thought had gone into planning out building an ad hoc force great enough to repulse a plains nomad horde,\" she shook her head, \"Although I doubt the order would come with concern over how Trentava's resources might be depleted and I doubt equally that any knight has ever offered payment for resources needed by the Queen's army.\"\n\n\"As you said, Grandmother, I'm only recently a knight. I've been a soldier far longer and I believe both prudence on your part and recompense on the army's part are right,\" I shrugged and smiled back just as grimly, \"If I'm deemed right, I might be recompensed in turn. If I'm wrong, it's my gold to spend as my conscience demands. And, if we fail in Arashnia, it doesn't much matter how much gold I have with me when I die.\"\n\n\"Well reasoned. I'll add to it what you're too polite to mention. Even at our full martial strength and with plenty of food, if a horde reaches my city gates, the siege will be short, brutal, and doomed.\" She shook my hand and chuckled with the dark humor of a battle-tested soldier. \"You'll have all the women and resources I have to spare at the gate by dawn. You and your adjutant may stay here if you like?\" she ended politely.\n\n\"My camp is outside, Grandmother, but we thank you. I'd impose upon you hospitality differently to ask for 100 full kits tonight however?\"\n\nShe clapped my shoulder. \"You're a good officer, Lieutenant, whatever you may be as a knight. You'll have them. Farewell and find victory.\"\n\n\"Farewell, Grandmother.\"\n\nThe Mayor was already giving orders to be relayed to Corinox and others as Vostiv and I rode for camp.\n\nUpon arrival, I relieved Vostiv and Kemptrux of their recent positions, with the former again being only my squire. I named my corporal Chief of the Horsegirls and assigned the youngest 32 former guardswomen and near half the girls ahorse sent to me from Trentava to her, all too green to be named anything more yet. I named another officer to be my temporary Adjutant and gave her the green foot soldiers to serve as untrained \"quartermaster\" labor for the supply train. Four more officers were needed to be the temporary Masters of Infantry, Scouts, Sappers, and Cavalry, which was about as densely as I could safely clump the different types of soldiers together for the march. \n\nFour of the five temporary officers ranked me, but all tacitly respected my equally temporary command.\n\nBy dawn, I had a force of 550 women of varying skill and experience. I also had hundreds of horses, herds of cattle and sheep, and many many heavily laden wagons of food, weapons, armor, and material. All the resources I'd gained together were probably worth more than the gold I'd paid, but I'd difficulty in reckoning in the chaos and more to worry over in the moment. \n\nThe animals and wagons did slow our arrival by three days. Still, my \"company\" eventually reached the main body of the army and were absorbed into its mass. New soldiers and old were sorted into real companies, the spare horses were given into the care of horsegirls, and the sheep and cattle and other valuable resources were turned over to quartermasters.\n\n\"Taiglox,\" Heoldax greeted me happily on my reporting to her tent, \"I'd have you flogged for being so late if you hadn't brought such bounty with you. How did you garner such support?\"\n\n\"Mayor Gotirox is a reasonable woman, Your Highness,\" I answered, \"And I asked nicely.\"\n\n\"You 'asked nicely!'\" she exclaimed in disbelief, \"You get nearly as much from a town as I got from a fortified city at kopis-point and you did it by asking nicely? I might send you on all my negotiations.\"\n\n\"Thank you, Your Highness, but I'm better trained to kill enemies at kopis-point myself.\"\n\n\"That you may be, but you'll report back here at dawn as an aide-de-camp all the same.\"\n\n\"Yes, Your Highness,\" I took my leave and dismissed Kemptrux with a letter of introduction to join the horsegirls, sent Vostiv to a grouping of tents for the squires to find an empty spot, and found an empty spot in an officers' tent for myself. \n\nBefore I slept, I wrote a letter to my bride. \n\nDearest Caeli,\n\nI love you and miss you greatly. \n\nThe camp here is safe behind the mountains. General Heoldax is running things well and organizing the army to defend our country. Kemptrux is among the horsegirls, happily fitting in and putting her training to use. Vostiv is less happy to be a squire to a papercarrying aide-de-camp, but will adjust. As will I.\n\nI rode here through Trentava. It's a lovely little town. We should go and visit under better circumstances.\n\nThere's so much of the world I want us to see together. I hope to be home to you soon.\n\n-Yours, \n\nTaiglox\n\nThe morning meeting went quickly with Heoldax running it, dispatching orders to the Masters of What-have-you to be dispatched in their various regimental meetings. Unlike my makeshift tasking on the road from Trentava, General Heoldax had her principal officers broken out more properly for a large force, separating out Heavy and Light Infantry, Heavy and Light Cavalry, etc. A dozen or so such important women filled the room, listening into order to later relay the General's direction down their respective chains of command. \n\nWithout any tasking for myself, I surveyed the wartable to confirm that the facts were indeed grim and victory unlikely.\n\nHeoldax maintained her composure while receiving her morning briefs and giving corresponding directives, but she sat heavily in her armchair and groaned with her head in her hands when the last of them left.\n\n\"Taiglox, I have 4,000 women-at-arms against their 10,000 or more. If I had all army regulars, I'd say the odds were even enough and roll the dice, but half my soldiers aren't even blooded. Over a thousand I've named as reserves. I don't see the answer.\"",
        "\"You have reinforcements coming, Your Highness?\"\n\n\"Not enough and not soon enough. These barbarians are almost all light horse archers. They'll be at our border inside a week. Maybe two if they dally for some raping and pillaging. At best I may have half their number by then. And they'll be gathering what tribes they don't rape and pillage on their way.\"\n\nI nodded.\n\n\"Taiglox, you're looking at this with fresh eyes and you may've studied more war text than anyone in camp, thank the Queen. Advise me.\"\n\n\"Battle tactics, Your Highness. I leave strategy to generals, as I should.\"\n\n\"Spare me your modesty and give me your opinion. Even a restatement of the problem might jog an idea.\"\n\n\"They'll have advantage of speed on the march,\" I looked down at the map, \"You'll need to pick a defensible position and let them come to you so as not to be flanked and drowned.\"\n\n\"Yes, Taiglox, I had considered that most fundamental aspect of the situation. I suppose that means that I should simply select the most 'defensible' rolling field on the open plains along the border?\" she snarked and then apologized, \"Forgive me. I asked. I'm just frustrated. Continue.\"\n\n\"Time is our weakness, but we need to make it theirs. Victory is obviously always our aim, but perhaps simply avoiding defeat may be sufficient to protect our borders over time, though we clearly can't hold our borders where they are at the moment.\"\n\n\"You're not suggesting paying tribute like the rest of those cowards?\"\n\n\"No. 'An enemy paid is a usurer who will bleed you dry.'\"\n\n\"Agreed. What are you suggesting?\"\n\n\"That our borders are the key. They are invisible lines with no tactical value. It's admittedly arguably shameful, but we needn't risk likely defeat in open battle on the plains merely to hold invisible lines.\"\n\n\"You are suggesting we cede territory?\"\n\n\"Yes, but in such a manner that they cannot hope to hold it. We choke them out. They can't camp long in the mountains in their numbers and with their garb. Nor the badlands.\" I moved two spare tokens on the map. \"We hold Crasarn Valley, something we could do with 600 good archers and 300 heavy infantry against even fifty times their number. Then position the main army in Tarkinian Valley to grow with every passing day in number. \n\n\"An army in being, as it were?\"\n\n\"Yes, and one that they couldn't ignore or avoid and still do us harm. They could attack the pass, of course. And they might win against us there, but only with extremely heavy losses on their side. It would at best for them be a pyrrhic victory.\"\n\nHeoldax sat up as I continued.\n\n\"A horde like that is a wild beast that must be fed. It needs momentum to maintain itself or the tribes will fight amongst themselves and desert in droves. First, we bring our own people living between the arbitrary border and the mountains to temporary safety behind the main army camped Tarkinian Pass.\"\n\n\"It'd be difficult and imperfect, but those lands could be functionally evacuated within the week. We'd need to house them all in the valley and find a way to feed them, but it can be done.\"\n\n\"Then we empty the unconquered plains of dissenting tribes and their resources that would serve as fodder. Offer them our hegemony on the other side of the pass or just point out their doom if they don't acquiesce. Move the weak behind our lines and use their warriors as auxiliaries. Best case scenario, the horde disbands or redirects elsewhere after a lack of victory. Worst case, they face our bolstered numbers after a march with no fattening victories.\"\n\n\"That would work,\" Heoldax stood, \"It's not victory, but it's not the humiliating and costly defeat we're facing now.\"\n\n\"Not a victory now, Your Highness, but I would recommend, for the sake of the Queen's pride and for retribution against a threatening enemy, that we come back with our full force in campaigning season and erase every tribe who joined this ill-conceived horde from fucking memory.\"\n\n\"I couldn't agree more. And we'll get a new province for our trouble,\" she nodded vigorously, \"Pages, fetch my principal officers!\"\n\nHeoldax laid out the plan to the Masters of What-have-you, sent 400 heavy infantry and 900 mixed archers to Crasarn Valley under her Master of Mounted Archers, sent her Master of Light Infantry and six companies to clear our citizens from the border to the pass, and announced that the rest of the army would march on to Tarkinian Valley. She left Ser Gharntex and 40 guardswomen at Proquian Rock to direct reinforcements.\n\n\"Ser Taiglox, you will take one company of light horse, one company of mounted archers, and a squad of scouts. Go forth and affect the removal of as many tribes as possible as quickly and as peacefully as possible. Raze the earth and poison the wells behind you, though. Leave no fodder.\"\n\nNo one present questioned aloud why the Crown Princess assigned such a task to me, including me, but I'm sure that we all wondered quite lucidly in our thoughts why I'd been picked. I was an odd choice to say the least as a cataphract-cum-aide-de-camp. But, qualified or not, off I would go.\n\n\"Yes, Your Highness. Request a small contingent of auxiliaries to serve as guides and translators?\"\n\n\"Take whom you need, not to exceed twenty women and leaving by nightfall,\" Heoldax nodded sagely, understanding that linguistic and cultural translators might be valuable, \"You are also field-promoted to captain.\"\n\nI bowed in thanks, the moment not being right for a long speech of gratitude. In any case, I was mostly glad to be going afield. \n\nI stopped the Master of Scouts on the way out, a sharp young high-bred noblewoman wearing heavy red copper armor inlaid with large round pearls, the red-orange and ivory of House Faquardya. \"May I meet my squadron leader, please?\"\n\n\"I am Ser Yeanitix, secondborn of Faquardya,\" the bejeweled knight answered back stiffly.\n\n\"Sorry,\" It is speedier to apologize when formality is prioritized over expediency than to argue rightness instead, which would only incur ire that would further lessen expediency. \"I'm Ser Taiglox, thirdborn of Trijox, House Laerdya.\"\n\n\"Yes, I know who you are, Princess-Consort,\" she looked at me with disdainful dubiousness, \"Though why you'd speak first to a few scouts is beyond me. Nonetheless, the scouts are camped over that ridge. Take whichever squad you like.\"\n\n\"Thank you, Ser Yeanitix,\" I expressed gratitude politely, even if - as she said - my reasoning was \"beyond\" the understanding of her limited warfare experience. Due to their small companies and least violent mission, scouts are frequently considered by officers to be the least esteemed of the army, along with the sappers and quartermasters. I'm sure Ser Yeanitix was only marking time until she could be named to Master of Light Cavalry or some other more prestigious billet. \n\nIf made to choose among my force of regulars for my current mission however, I'd leave the companies of light horse and mounted archers and take only the squad of scouts with me. For riding fast and hard, for treating among foreign enemies, and for sound judgement in imminent danger, there are none better than squads of hard-bitten, well-trained, and battle-tested army scouts. \n\n\"Ho there,\" I called out as I crested the ridge, \"First Sergeant?\"\n\nThree grizzled heads popped up, but one waved at the other two to stand down as she walked toward me. \"I'm First Sergeant Krefinax, 3rd scout division. What business does a cataphract officer have with us?\"\n\n\"I'm Captain Taiglox, 1st mixed regiment, 1000th division,\" I introduced myself and related my purpose. \"I've been given a mission from General Heoldax for which I'm to bring a squad of scouts. I'd also ask advice, First Sergeant?\"\n\n\"You'll have both, Captain.\" The agreement wasn't what you'd call warm, but it was respectful.\n\nI drew my kopis and used it to draw a crude map in the soft dirt. \"General Heoldax is splitting the army to hold the two valleys, but I'm to take a smaller mounted force ahead and clear the plains of unaligned tribes as much as possible in advance of the horde's arrival.\"\n\n\"To make their reinforcements and resources ours and starve 'em on the ride. Smart,\" Krefinax understood immediately and used the point of her razor-sharp espasa to draw exes on the makeshift dirt map to mark where tribes centered, \"How do you intend to affect that?\"\n\n\"Negotiation as much as possible. Making our cause their cause and offering safety, winter provisions, and fallow lands on the other side of the valley. Others might be bribed by an increase to power and place amongst the tribes once the horde is disbanded or defeated. Many warbands might join to become part of the auxiliary in a larger and more victorious army. Actual battle would be a last resort.\"\n\n\"Why is fighting your last resort?\" the experienced first sergeant asked, clearly weighing me by my answer.\n\n\"Strategically, because we need to avoid depleting our numbers at almost all costs and increasing those numbers instead would be of great value. Pragmatically, because we don't have time for endless small skirmishes. Personally, because I have no stomach for killing harmless wives and innocent children. Or for leaving the elderly and orphans to die of hunger or at the blades of the next raiders to chance upon them,\" I answered her frankly. \n\n\"Fair,\" she looked at me more favorably.\n\n\"Yet, I'm not familiar with these tribes and therefore don't know which appeals would be most likely to motivate them. I need advice from scouts who either know their ways or know which auxiliaries will.\"\n\n\"Also smart,\" she acknowledged as she pointed to the map, \"My own tribe swore to the Queen's army while living not twenty miles from that valley in my grandmother's day. We're full citizens now, but I've ridden in these lands since I was but a wee little thing, trading and fighting. I'll come with you myself, if you'll have me, and handpick scouts and auxiliaries to bring with me.\"\n\n\"You could not be more welcome First Sergeant Krefinax,\" She was exactly who I needed, \"But I should warn you, I'm to raze the ground and poison the water behind me. Mercy to intractable tribes is not mine to give.\"\n\n\"Nor will mercy be requested. My oath is to my Queen's service, my Queen's wars, and my Queen's victory. I'll have the right women ready before dusk.\"\n\n\"We'll meet on the east tip of camp at dusk then,\" I took my leave and hied myself to Vostiv's tent, but she was off looking after Savaran and Stygian.\n\n\"Vostiv, I need you!\" I hollered at her.\n\n\"Yes, ser?\" she ran to me.\n\n\"I leave at dusk for a forward mission. You'll take over my duties as aide-de-camp to General Heoldax and leave with the main army at dawn. Meanwhile, take what gold you need from my tent and get me a set of leather armor with a brigandine, gorget, and helm, tack for a jennet, and two jennets.\"\n\n\"Aye, sir. I'd be of more help going with you?\" my brave squire looked at me hopefully.\n\n\"Circumstances are not so dire that I'll bring a child into combat, as brave and skilled as that child may be,\" I declined gently, \"Your time will come. Until then, stay close to General Heoldax and be a help to her.\"\n\nI came to the Master of Mounted Archers next, a much more experienced colonel from House Haecardya.\n\n\"Captain Taiglox,\" she greeted me warmly, \"Colonel Pacix, secondborn of Haecardya. My daughter Plinit mentioned you in a letter, 'the fearsome soldier' who would marry the princess. I also surmise it was your plan to hold the valleys. I am not ungrateful. You've come for your company?\"\n\n\"Yes, ma'am. I need them at the east tip of camp at dusk.\"\n\n\"Done,\" she called, \"Lieutenant Bascinax, report with your company to Captain Taiglox at the east tip of camp by dusk.\n\n\"Aye, ma'am,\" we both answered and I was off to see the Master of Light Cavalry.\n\nShe was younger, but well-blooded, and wore the tan and burgundy of House Clatradya.\n\n\"Captain Taiglox,\" she also greeted me warmly, \"You've come to ask about your company?\"\n\n\"I have, ma'am. I need them at the east tip of camp by dusk.\"\n\n\"My cousin, Mayor Gotirox, sends me word that you're an honest thief?\"\n\n\"So I'd like to be known, ma'am.\"\n\n\"She entreated me to show gratitude to you for your fairness. 1st company, 1st regiment, 1st light cavalry division will await you at dusk.\"\n\n\"Thank you, ma'am.\"\n\nI returned to my own tent; ate a full meal; checked my weapons and kit; wrote another letter to Caeli averring my love but leaving out details that would only serve to frighten her; tucked more paper, a flask of ink, and three writing styluses into a pocket of my tunic; and forced myself to sleep. \n\nA couple hours after noon, Vostiv brought my armor and saddled horse and spare, wishing me luck and promising to post the letters to Caeli as I left for the edge of camp.\n\nStill two hours before dusk, I arrived. My lieutenants and first sergeant were already there, but the troops were still gathering. \n\nI called a quick war council, verifying that spare horses and provisions had been acquired and restating the plan with a similar crude map on the ground.\n\n\"Captain, where do we ride first?\" my light cavalry lieutenant. She was a likely young officer from House Vexenya named Zentix.\n\n\"For that I turn to First Sergeant.\"\n\n\"The Ornifians. They're among the closest tribes, good trading partners, and as they go will go at least six other tribes.\"\n\n\"The Ornifians, then,\" I agreed. We rode four days to the Ornifians, convinced them and fifteen other tribes to leave for lands behind the valleys either permanently or until the danger passed, and watched them drive their herds and people from their native land.\n\nMoreover, many warriors joined our division in the field, growing our numbers to over four hundred women-at-arms. A small army in our own right at that point, negotiations became easier. We grew to over seven hundred women-at-arms as we convinced another twenty-some tribes to follow suit.\n\nThe Vicranians and Rythraians were eager and large, wanting as a majority to move into good farmlands over the mountains. So much so that some of their most fierce warriors splintered off to join the Yontians, a tribe with no interest in our country or army any further than defeating the coming horde.\n\nThe Paxitians and Ghaquians, smaller tribes of mostly herdswomen, also wanted to avail themselves of the safety behind the mountains. For generations, they'd guarded their flocks and driven them to sparse grasses in often rare oases. And for generations, they faced hard to impossible winters when raided by larger tribes and forced to rebuild their herds and lives in the cold and barren plains.\n\nOther tribes joined with the planned goal of joining the Queen's army. More warriors than farmers or herders, the Farankians, Jalians, and Yalwians had served as auxiliaries for generations to the Queen's army. The coming horde was the catalyst they needed to ask for citizenship. How much better to have your children safe behind fortified defenses when fighting for the Queen for full army pay and benefits? \n\n\"Captain,\" Krefinax warned me, \"the Gartifians are the only tribe of size remaining, best count is two hundred warriors and half again as many non-combatants. They are the most likely to be 'intractable' as you would put it.\"\n\n\"They've no angle for us to play? No hatred for the horde or desire for better lands? No fear of being overrun?\"\n\n\"They'll probably join the horde on arrival, ma'am.\"\n\n\"Very well,\" I sighed, \"We'll still parley first.\"\n\nI arrayed my forces on a ridge above their valley encampment in good position, far enough away so as not to instigate but close enough to intimidate. Then I brought my First Sergeant and a mix of fifty women-at-arms with me under a white flag of peace, stopping just out of arrow range to wait.\n\nA band of nearly a hundred warriors rode to us, headed by a leader taller than me.\n\n\"You are unwelcome here, barbarians,\" the tall warrior threatened and spat.\n\n\"We are here nonetheless. We offer you peace to leave your lands and take refuge behind our army against the coming horde.\"\n\n\"Your army will be annihilated by the coming horde.\"\n\n\"Not before we annihilate you and your warband. We offer you peace or war. With us or against us.\"\n\n\"Against you then. You can't afford to fight us with a horde coming.\"\n\n\"I've orders to do just that.\"\n\nAgain, a lugee was hoked and spat. \"Orders, pah. You cowardly barbarians always follow orders. We do not fear death.\"\n\n\"Face me in single combat then. Winner takes all.\"\n\n\"Why on earth would I do that?\"\n\n\"I would spare your people the consequences of their leader's pride. Presumably, that same pride would urge you not to cower in fear from the challenge of single combat with a barbarian.\"\n\n\"Pah.\"\n\nI looked to the other warriors, \"You all agree. You'll all die pointlessly when favorable peace is offered?\"\n\nAs one, they nodded and spat.\n\nI shook my head in frustration, \"Why?\"\n\n\"We are Gartifia!\" they shouted and broke into war screams and wild howls.\n\nI looked to Krefinax. She shrugged.\n\n\"Fine,\" I gave up in disgust, \"meet us in the field with every idiot who wants to die with you. We'll attack once you've gathered.\"\n\n\"You won't ride on our camp?\"\n\n\"No,\" I answered in greater disgust, \"We don't want to kill any of you incredible morons. I do want to beat some sense into the lot of you, but you can surrender at any point. We certainly won't murder your innocents.\"\n\nThey wheeled away. We returned to the ridge and formed up. Within an hour, two hundred some fools were charging uphill at us in poor or no armor, screaming at the top of their lungs.\n\nIt was an absolute slaughter, maybe twenty reached us through the rain of arrows. Those twenty would not surrender either and were killed in ninety seconds. Our side had ten injured by arrows and one fumbling her own blade.\n\n\"Lieutenant Bascinax, send your bowwomen to gather all the arrows, then come with me. Lieutenant Zentix send your horsewomen to gather all the loose horses, then come with me. First Sergeant, bring a hundred auxiliaries and come with me.\"\n\nWe rode down to the encampment, but were unprepared for the horror we found. \n\nFully dressed corpses littered the dusty dry ground in dozens with blooming fresh red slices on every wrist. All the adults - from fresh faced youths to gray-headed elders - had evidently stepped outside their yurts and voluntarily killed themselves with knives.\n\nOver a hundred crying and confused children remained. None made any move to attack us. Most didn't recognize our presence, being too traumatized by the immediate and violent deaths of their caregivers.\n\nI turned to Krefinax in utter bewilderment myself.\n\nShe shook her bowed head. \"The Gartifians are a bizarre people. Were a bizarre people rather.\"\n\n\"They're not all dead.\"\n\n\"These children won't survive their parents long.\"\n\n\"We can't leave them to die here. We won't. It's tantamount to murder.\"\n\n\"We won't?\" Krefinax looked at me with another weighing glance. \"What happened to 'no mercy?'\"\n\nI locked eyes with a terrified girl, no more than ten years old, holding a fussing infant tightly, as though any one of us might try to snatch the poor little motherless babe from her.\n\n\"For violent resistance, yes. Not for helpless children. What are we if there's no mercy for helpless children?\"\n\n\"I don't disagree with you, ma'am,\" Bascinax spoke up, \"But we're not exactly outfitted to take on a hundred children. The babies will need milk. Few if any will be able to ride. We can't continue on with our mission bringing little ones with us.\"\n\n\"This is clearly a winter encampment, which means they must have food enough in reserve for five hundred people for a few months at least and enough for a couple thousand for a while,\" I reasoned, \"Lieutenant Bascinax, you will remain here with twenty archers, twenty light cavalry, and forty auxiliaries. Try to get those with children or younger siblings or something. Find out if anyone knows if babes can drink cow milk or goat milk from the herds on the plain. And all the other questions that might be easily answered by any mother.\"",
        "\"And the rest of us? The horde will be here in a week or less if it heads this way,\" Zentix queried.\n\n\"There are eight tribes left by our reckoning, yes? All relatively small, poor, and peaceful?\" I asked First Sergeant in turn.\n\n\"Yes, Captain,\" she confirmed and mapped them out, \"Three north, three north east, and two south. The two to the south are a few days ride, but the six small northern tribes can be reached in a day and a half's ride.\"\n\n\"Then, First Sergeant, you will take your scouts and twenty light horse, gather the northern tribes and bring them back through here. I'll do the same with twenty auxiliaries for the southern tribes. It's not far out of the way and they'll have herds, possessions, and elderly to slow them anyway. Whichever of us arrives back first will leave with Lieutenant Bascinax and the children.\"\n\n\"Aye, ma'am,\" Krefinax frowned. She didn't say it, but she knew full well she should arrive back first and handily.\n\n\"Lieutenant Zentix, you'll take charge of the remaining hundred and forty regulars and the remaining six hundred auxiliaries. That represents a significant increase to our numbers. Ride for the valley at dawn.\"\n\n\"Aye, ma'am,\" Zentix answered.\n\n\"For tonight, strip, pile, and burn the dead. Out in the field and away from the orphans. Save anything of value for the children. We may need to barter their grain, caches, herds, and valuables to get them fostered on the march.\"\n\nMy lieutenants left to execute orders, but not before I gave what letters I'd written to Zentix to be posted by the main body of the army behind the mountains. \n\nFirst Sergeant stayed. \"What odds do you give that I return with all six tribes before you even reach one.\"\n\n\"Three-to-one. Maybe better. But if they've all been wiped out by a random plague or wildfire?\"\n\n\"Then I'll ride my thirty back to Lieutenant Bascinax's eighty and we'll get the children to the valley. I thought I'd need to talk you into saving those kiddies. You can rest assured that I'll do it. Which means you can send your two southern tribes back in a straight line.\"\n\n\"Thank you.\"\n\n\"I'll have the Lieutenant's eighty building carts though. Will make things easier with so many children to move and will give them something to do in shifts other than herd kids and cattle.\"\n\n\"Alright, I'll ride now.\" \n\n\"What do you think your odds are of reaching those two camps in time to do anything useful?\"\n\n\"Not that bad.\"\n\n\"Maybe a coin flip. At best. That's why you're not risking any regulars and no more auxiliaries than you need to be legitimate.\"\n\n\"A coin flip to deny needed resources to an enemy seems a fair risk of an aide-de-camp and twenty irregulars, yeah.\"\n\nKrefinax shook her head, \"Might be a waste of a good captain though.\"\n\nI smiled grimly, \"Good thing I'm such a shit captain then.\" \n\nI rode over to where the Yontian tribe camped. Even among the hard-bitten horse nomads, they were renowned for their speed and courage. A good death held far more value to them than a good life.\n\n\"Thothoa,\" I called out to their leading warrior, \"I'd like twenty of your best riders for a fifty-fifty shot at death.\"\n\n\"Sounds fun. Count me in,\" Thothoa grinned. Not enough discipline for the regular army, but I loved the enthusiastic engagement of mortal risk. I was less a fan of the rib bones they wore sewn into vests over their own ribcages, but most tribes had a few peculiarities. \"When do we leave?\"\n\n\"Now.\" \n\nWe rode deep into the night, switching our horses for fresh ones before resting a few short hours and riding again. My only concession to my vestiges of civility were a line or two written to Caeli each night. We only took three days to ride what should have been at least four. \n\nGreat riders or not, neither we nor our horses were magical. We couldn't outride the wind.\n\nThe wind itself was harsh and the grasses high, dry, and brittle with the lack of rain. The long blades stabbed and cut any exposed flesh, horse and rider alike. Still we rode on across the endless brown plains.\n\nLife existed, even in the barren grasslands. Occasional springs gave some water around which small stands of trees would grow and large cats would prowl. Small herds of wild deer and wild cattle roamed and, to avoid the tall sharp grasses, we trod their well-worn annual paths whenever they pointed south. Various rodentia ran underfoot, avoiding both our horses' hooves and the keen eyes of great hawks on the wing. Buzzing from endless insect pests of every type and size assaulted us and we heard the rattle or hiss of defensive snakes more than once. \n\nIt occurred to me that the droughts themselves probably were the largest driving factor that enabled the creation of such a large horde. A motivator like hunger could grant a charismatic leader of a very large tribe with enough political power to band together other warring tribes into a rolling horde of death intent on resources they didn't have at home.\n\nLike most hordes though, they'd have long since degenerated into a wild warband incapable of capitalizing on its gains to do more than feed itself and keep its momentum. \n\nArriving at the first tribe's camp, we took pains to be quick in describing the locals' upcoming plight and our solution. They'd no great desire to serve our Queen in any capacity, but even less to be overrun by a raging horde. They were moving their remaining herd and people toward the valley within two hours. \n\nWe slept there before riding again at daybreak. As we rode farther south, the land became more bleak. The grasses were dead, choked out by gritty dust, broken rockiness, and hard dirt. Dry rivers snaked through wide gorges. The sky remained an unrelentingly cheerful bright blue, completely free of clouds so that the sun beat down on us without cease or remorse.\n\nStarving vultures circled above, looking down on us in fevered hope. \n\nThe second tribe - the Lanchalians - was decimated by the drought and would have agreed to anything. They were ready to leave nearly before we'd stopped talking. We shared what food we had, knowing it'd do little and less on the long trip to the valley, but confident we and their more able-bodied could forage for more along the way as we reached more favorable lands. The drought had left them with very few elders or younglings to slow travel or to eat without contributing.\n\n\"Chief Wisoiti,\" I spoke to their leader, \"I know the road is hard, but you have my Queen's guarantee that your survivors will have a place as citizens if you want it.\"\n\nThe chief gazed at her people, starving. All the livestock and horses were long since killed and no visible babes suckled at the breast. Once strong adults had boiled their leather armor and were thin to the point of their ribs showing. \n\n\"We weren't always this way,\" she lamented, \"when I was Herafu's age, we rode with impunity. Now, the next set of raiders will wipe our name from memory, be they a raging massive horde or merely nameless wandering scavengers. If we have a clear way to the safety that we need to rebuild, we'll take it. And I'd like to rebuild as farmers and soldiers. It may be hard for the few of us old timers who remember our glory days, but our young have known only hunger and fear from the grasslands and will see it as a promised land.\" \n\nI sympathized with the proud aging leader, \"We've three or four horses for each of our riders and don't fear walking. They should help move your people.\"\n\nAs they packed their relatively meager possessions, we heard thumps. A lot of thumps. The unmistakable sound of pounding hooves in great numbers.\n\nReaching into my leathers, I pulled out my sheaf of papers, my small flask of ink, and my stylus.\n\nGeneral Heoldax,\n\nThe Lanchalians need Her Majesty's guarantee. Please help?\n\n-Captain Taiglox\n\n\"You're not coming with us?\" Wisoiti asked me after I quickly explained the addressee and portent of the short letter.\n\n\"I'm of more value to my Queen here.\"\n\n\"Farewell then, Captain Taiglox,\" she shouted over her shoulder and rushed to set a girl in front of Herafu on her horse. \n\n\"And you, Chief Wisoiti,\" I shouted, helping an old woman into a small wagon with other surviving grandmothers and little children. I was sending them away in the dozens with little more than the cloth on their backs. Enough for maybe two or three days of travel in the unforgiving graveyard of the grassland. \"Thothoa, go with them and help. To the valley!\"\n\n\"We stay with you, Taiglox. They know the way and they've grown women who can hunt,\" Thothoa had come to know me a mite too well, \"What mad danger are you risking yourself in that you'll not even bring us?\"\n\n\"Scouting a horde.\" I sat a reasonably fast jennet (my last spare horse I'd already given to Herafu, who was armed with a hunting bow and gave every impression of knowing how to handle both horse and weapon) and had a chance to get a count of the crown's enemies. \n\nThe hooves weren't growing closer and were lessening besides, so the horde was making camp. As generically outfitted as I was, I'd be able to near their lines close enough to count fires.\n\n\"A fine death indeed, taking on a horde with less than two dozen of us.\"\n\n\"Not taking on the horde, Thothoa. Scouting's only worthwhile if we come back alive.\"\n\n\"You come back alive. We ride to gore and glory, outnumbered beyond reckoning!\"\n\n\"About 700 to 1 actually. Not really beyond reckoning, but certainly beyond victory.\"\n\n\"Not if a dauntless, dashing, daring death is my victory.\" \n\n\"I don't suppose I can stop you, but it seems a waste.\" Soldiers in the Queen's service are trained that it is a great honor to die in battle for Queen and country, but only to further the aims of Queen and country. Throwing your life away to no end was a fool's choice that robbed Queen and country of a soldier dishonorably. \n\nStill, I charged forward, \"You need to toss your rib vests and any other identifying aspects. We'll pose as a foraging party, get in and get a count, then ride back out. And once more in again for you lot, I guess,\" I added, always practical and somewhat disturbed myself at the speed with which I could move past my comrades' essentially suicidal intentions. \"And make sure you've given all your spare horses to the Lanchalians, if you don't plan to ride back out.\"\n\nWho was I to judge their cultural mores?\n\n\"Taiglox, you'd have made a fine Yontian if you'd been a bit less repressed,\" Thothoa took off her vest and left it in the dirt. The rest of her kin followed suit and rebraided their long black hair, though I couldn't tell you the difference in their new styles. \"Best let Rhetroa tie up your hair. Better let me talk too. They'll know you for a Queen's woman the second you open your mouth.\"\n\nWe rode even harder still, pausing only to shoot two sad rabbits, a sickly bobcat, and a starving racoon. We didn't eat or even clean our kills, only needing to be plausible as a foraging party.\n\nIt was deep in the night when we reached the horde itself. They'd made camp in a grassy canyon, the tiny drying pond in the center providing some water and the steep sheer walls providing protection. \n\nProtection from enemies that is, and not the weather. The rear of the canyon was only wide enough for about four to ride abreast, easily monitored by a few guards and protected from above by a dozen archers. But a massive wind tunnel for the bitter northern wind was created by the high canyon walls, causing most of the barbarians to huddle in tents if they had them and to sleep in piles together if they didn't merit tents. \n\nThe front of the high canyon was undoubtedly how the host had entered, smartly. And they'd backed in to set a parameter about twenty yards inside the beginning of the high canyon walls. For the one night at least, they need only worry about attack from the canyon mouth and could thereby minimize patrols and sentries. Although none could hear each other from any distance over the roaring wind.\n\nWe held up our downed game for the sentries to see and weren't even questioned. With the size of the horde, two naturally occurring weaknesses were available for us to exploit. For one, no one could know who everyone else was, let alone what they should be doing, so we could move about fairly freely. For two, the huge size of the horde created a false sense of safety from individuals.\n\nI couldn't take my count from the top of the canyon wall, which would have been my preference. That would have been too obvious, even with anonymity and complacency. But I got a reasonably good count while walking through the screaming wind, estimating their numbers at between twelve and thirteen thousand strong. \n\nThothoa shook her head, \"Too many. Too many by far. This canyon fairly bursts with them.\"\n\nI cocked my head and looked about myself, a wild thought worthy of a Yontian entering my mind. \"We could light them up like a torch.\"\n\n\"How?\" Thothoa asked. Not what and not why, but how. I love Yontians.\n\n\"Set fires along the perimeter. The wind will blow it into the blind canyon. Blind enough with the way they'll funnel into the little alley in the end, trampling each other to get out of the flames.\"\n\nThothoa grinned, \"That's death worth causing.\"\n\nBut my Yontian flash gave way immediately to a company officer's actionable plan. \"Everyone take an hour to find any accelerants you can throughout the camp. Meet back here and we'll head out like we're on a mission as planned. Stop about 5 yards inside the canyon and spread quietly. Pour what you have and light it up. If the wind takes even three or four of the fires into the horde, we will cause death and confusion well beyond our numbers.\n\nAn hour passed and 20 of the 22 of us had returned. Most carried a few skins of oil like me, but a few had gotten casks of pitch carried by unknown horses and two had laid hands on a barrel of Greek Fire pulled by a mule. \n\nEach of us spread and wandered quietly into position in the high dead grass, Thothoa's first fire was the signal we waited for. With a flash, but no sound, she spilled her casks of oil, struck her flint for sparks, and the fire was started. \n\nThe rest of us set our accelerants alight, starting twenty bushfires in conditions where a mere spark could become a wildfire in the bellows of the northern wind.\n\nThis will seem cruel and indeed it was, but the pitch and Greek Fire were lit while still attached to horse or mule, causing the animal to run screaming into the camp while spreading liquid fire behind them.\n\nThose of us with oil had carefully doused the grasses and then started fires that would be spread by the wind and sustainable.\n\nThothoa was back on her horse once her fire was blazing and only a few dozen feet from me, but riding the wrong way. \n\n\"Through the fire!\" she shouted over the wind and her tribeswomen rode with her toward the horde, which only just begun a rippling eruption inward in response to the flames.\n\nAs a good soldier, I ought to seek an objective worth dying for instead of Thothoa's death worth dying for. Joining a mad battle amongst the burning horde would add to the general confusion and allow me to kill up to dozens of the Queen's enemies, so I could reasonably expect that my death would be useful and honorable. \n\nThe same argument cut both ways. After all, my death would be a relatively pointless loss of a soldier that would only imperceptibly add to the body count. Bringing back word of the horde's loss would be of more value to Queen and country.\n\nNot that I considered long and hard what I ought to do.\n\nMy instincts took over in the wind, fire, smoke, and battle. My burning objective was more than accomplished and my blood ran as aflame as the horde. Without thought, I was back on my jennet and whirling toward the spreading heat and smoke, following Thothoa's call. My knees urged the jennet forward of their own accord. \n\nThe animal was not Savaran though. She snorted and balked, clearly wanting to run away from the fire with all haste. Any horsewoman who doesn't pause to evaluate when her horse balks is no horsewoman, but my pause shouldn't have been so long.\n\nA year earlier in the same circumstances, I'd have decisively forced the fearful jennet into the flame and let come what may. My comrades had already joined the battle and my hot blood raced and urged me forth with them.\n\nOnly Caeli's voice in my head gave me pause. Her words, her crying, and my promise had stayed with me in the back of my mind and their pertinence in the moment brought them raging to the fore.\n\n\"I love you, too, Tai. So don't die.\"\n\n\"I'll do my best to get back to you alive, my love.\"\n\nPerhaps it was base cowardice that kept me from immediately exerting my will over my horse, but I like to think it was finally having someone to live for that made me waver. I finally valued my own life.\n\nAs I hesitated, my jennet didn't. The terrified horse threw me and ran, I know not where.\n\nAfoot, I looked into the labyrinth of fire and chaos, unable to see a break in the flames to even enter the fray, not without a horse. Smart enemies near the entrance had saddled quickly and ridden through the flames too though, risking the burn over the more certain death by trampling happening deeper in the wildly retreating and rapidly piling ranks.\n\nI stabbed up sharply with my kopis when a fleeing hordeswoman rode too near me, taking hold of the horse's bridle even as the unarmored rider fell stone dead from the saddle.\n\nLeaping astride, I made my choice, flying the fiery chaos I'd created. Dozens or hundreds or thousands of my enemies rode away around me, seemingly dispersing into the fierce winds. I knew not how many survived with me, but later estimates put the death tolls at well over ten thousand, so it couldn't have been more than a couple thousand. \n\nPersonally, I doubt that it was even a thousand strong that survived and I also doubt my staying to die with my comrades would have changed those estimates at all.\n\nI chose Caeli over a pointless death. I didn't truly do it for Queen or country, not in my heart. If it was wrong, it was wrong. I'll not apologize for it anymore.\n\nThe horse I'd managed to wrangle was an aged rouncey who ran in fear from the growing wildfire like all the other terrified beasts and humans, but could only carry a rider for a couple hours at a time in the best of circumstances. Luckily, most of my fellow escapees were simply going north or south far enough to outmaneuver the flames before heading back east to regather their lives and reorganize their power structures. \n\nNot having guides or knowing the region well enough, once I cleared the aimless hordeswomen, I maintained a course of due west, following the sun in the day and The Golden Yardarm at night. When clouds blocked my points of reference, I used sticks as I'd been trained, but that took time and I needed to hurry. \n\nI walked while leading the aged rouncey about three quarters of the time and rode at a walk for the rest. With the slow pace he set, the horse and I barely traveled twenty miles a day before night came and I'd build a fire if I could and write a few lines before sleeping. \n\nSince my companies and I'd done a rather good job in clearing the grassland, I couldn't reasonably expect to find any camps on my way. Nor was I likely to happen upon any of the few groups still moving west with me in the vast grasslands.\n\nPutting an arrow through a starving lone wolf that tried to attack my hobbled rouncey the first night gave me food for a few days, however disagreeable. I rode hungry for a couple days after that, until a dying baobab by a dried riverbank provided two days more sustenance. \n\nA day later, the grass was alive again in patches and brackish stillwater enough was available for the horse. I was glad for the discipline that kept me from drinking any more from my waterskins than I needed, but I was still beyond relieved at the first fast running stream I came across to replenish.",
        "The mountains rose in the distance, signaling that I was within four or five days of the end of my westward journey. Determining what pass might be closest was beyond the poor limits of my geographic knowledge, ignorant as I was of my latitude.\n\nStill, I walked on, deciding I'd turn to follow the next flowing water source I found that seemed to head into the mountains. Three days passed without me finding any such source of life, but my despair soon ended. \n\nA squad of Queen's scouts found me instead.\n\n\"Halt where you are!\" the point rider called out to me. \"Identify yourself.\"\n\nOnly then did I realize that I still had the braids and garb of a nomad. Coupled with my matted hair and shallacking of grime, I looked very unlike a captain in the Queen's army. Nor did my beaten leather armor - still only weeks old but already having seen more hard use than most officers' armor ever would - have any insignia denoting my knighthood, house, or rank sewn or stamped on to identify me.\n\nNonetheless, I am what I am.\n\n\"Captain Taiglox,\" I announced as I unbuckled and dropped my weapons belt as is a customary token of peaceful goodwill in such scenarios, \"1st mixed regiment, 1000th division, Queen's army.\"\n\n\"You may be. You may not. Get the fuck down on the ground and stay down, either way.\"\n\nI threw my identification necklace to the ground a few yards ahead of me, then lay flat on my stomach and waited.\n\n\"You've no reason to be out here alone. You claim no real regiment. How do we know you're not a deserter who killed her officer and took her necklace and weapons?\"\n\n\"You don't. I submit to being bound and brought to your commander.\"\n\nAnd so I was. \n\nThe scouts were decent though, giving me food and water that could be consumed with bound hands and letting me ride instead of being dragged behind.\n\nOn arrival to camp, I was jeered a bit, but nothing too awful and I certainly didn't respond as I was led to the commander's tent.\n\n\"Ser Taiglox, as I live and breathe. You look like dog shite but still kicking, thank the Queen,\" Colonel Pacix greeted me as the scouts brought me inside, \"Unbind her and restore her weapons. Fetch her water.\"\n\n\"Colonel Pacix, our mission to clear most of the tribes in the nearby grasslands was successful,\" I reported as I rebuckled my weapons belt and took a few belts of fresh clean water. \"Further, upon reaching the horde itself in an attempt to scout numbers, twenty irregulars and I seized an opportunity to set a fire that killed many or most of the horde. Best guess is that they're at no more than half their numbers. Probably much less.\"\n\n\"Lieutenant Bascinax briefed the first,\" the Colonel took a deep breath as relief washed over her, \"the second, well, that would change our position drastically. But it's not my call.\" \n\nI nodded, fairly sure of what would be asked of me next.\n\n\"Can you keep riding? I'd rather send word from the horse's mouth, as it were.\"\n\nMy body wanted rest, but I knew it'd only be another day or two in the saddle. \"I am a cataphract, ma'am.\"\n\nShe nodded in turn with a bare smile, \"So you are. Take this squad of scouts with you and report to General Heoldax post haste,\" she gave another order to her second-in-command, \"Major Whurix, prepare for decamping.\"\n\nAs we left the tent, the squad leader - the one who'd ordered me on my face and had me bound - spoke, \"No offense meant, ma'am. I'm Sergeant Mitchux, 4th squad, 1st scout regiment, 5th division.\"\n\n\"None taken, Sergeant. I'd have done the same. Can I borrow a couple jennets though?\"\n\n\"Ma'am, you can have a dozen if you like,\" she looked at me for a moment, \"Ma'am, still meaning no offense, but you're not actually a knight?\"\n\n\"I am. Of the Order Royal Indomitable and by the Queen's own hand no less,\" I chuckled, \"But you heard me. I'm a cataphract first and I don't assume horses.\"\n\n \n"
    ],
    "authorname": "LesbianChickLit",
    "tags": [
        "fantasy",
        "historical fantasy",
        "historical military",
        "lesbian",
        "lesbian drama",
        "lesbian novella",
        "lesbian romance",
        "love",
        "love story",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-arete-princess-consort-ch-05"
}