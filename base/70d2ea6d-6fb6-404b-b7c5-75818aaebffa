{
    "title": "Pool Boy Ch. 38",
    "pages": [
        "It was Sunday afternoon after the party/orgy. The Caterers had come to cart away all the extra food. Chase had returned to take his Karaoke Machine. Alexis and I had cleaned every surface from furniture to counter-tops to floors. Laundry was going and Noah came down the hallway from the main part of the house and more or less collapsed into a recliner-chair in the living room. He was all disheveled in a miss-buttoned shirt. The crotch of his pants was stained with a wet substance that was unmistakable. He had bright red lipstick smeared on his lips and cheeks.\n\nWe had been sitting in the living room drinking a cup of coffee when he stumbled in. We looked at each other and burst out laughing. He muttered something like, \"Jesus Christ. Those two are as insatiable as Crystal. What do they say about older women reaching their sexual peak? Rachel is a wild woman.\" He looked at us looking at him and continued, \"Fuck. Listen to me; complaining about being fucked out. What an idiot.\" We all nodded and laughed. \n\nWe knew he would lay the details on us first thing and he didn't disappoint. \"Rachel wanted to try every position in the Kama Sutra, I think. Some of them were new to me and I thought after Olivia and Sophia that I had done them all. I lost count of Rachel's orgasms and she wanted more but I couldn't get it up anymore. Mitch was more reserved with me but a crazed harlot with her mother.\" Alexis giggled at his word \"Harlot\". Noah looked down and noticed his shirt and he re-buttoned them in order. He brushed his hands over the crotch of his pants and groaned.\n\nNoah looked at us drinking coffee and he mumbled something about 'needing some of that' as he struggled out of the recliner and headed for the kitchen. Alexis took a sip off her cup and said, \"Let's discuss our plan with Noah.\" I nodded and when he got back and sat back in the recliner again with a cup of coffee, Alexis said, \"Noah. Do you have to get back home today?\" Noah looked at Alexis and then me. He had a confused look on his face but he shook his head 'No'. Alexis continued, \"Hunter has to stay here for a few more days to get ready for the Bowl game a couple days after Christmas. I was going to go home Tuesday morning but I've moved it up to tomorrow and then Hunter would drive the van home a couple days later. You have to drive right past the city to get home so we thought maybe you could drop me off at our condo on your way. Then we would only have one vehicle to drive back after semester break.\" She smiled her sexy little smile to cap her request.\n\nI knew there wouldn't be any problem. Any time that Noah could spend around Alexis was a bonus for him. He vigorously nodded his head and grinned at Alexis. The decision was made. Noah looked around and commented on how much cleaner everything was since he had left three hours earlier. Alexis told him he had fresh linens on his bed and he appreciated that. He and Crystal had basically destroyed the bed in his guest bedroom last night and this morning. Noah asked for Crystal's contact information but we didn't have it. His best bet was to go back and ask Rachel. He was reluctant to do that.\n\nOther than the Football practice sessions, we just lounged around in the apartment and recovered from Saturday night's orgy. It had been a great party and Noah wanted to know all about Alexis' friends. He had seen several of them on TV before but as usual, he only had eyes for Alexis and had paid them no attention. We took Noah to our Bar-B-Q joint for dinner and he agreed it was the best ever.\n\nThe next morning, Alexis and I enjoyed our favorite shower sex in a long, slow, sensual session of love-making. Alexis had two orgasms and I had one in synch with her second. Noah bitched because we had used all the hot-water. I would have to tell Rachel that it looked like the hot-water heater was still not right.\n\nAlexis packed a huge suitcase and a duffle-bag and I loaded it into Noah's car. Noah loaded his and then we man-hugged and shook hands. There was no emotion in our parting. I probably wouldn't see him again for a while but we had parted hundreds of times over the years since we were five, so it was always 'until we see each other again'. I kissed and hugged Alexis for a long time. Any time away from her seemed like an eternity. Tears popped out of her eyes and rolled down her cheeks and she got me going too. It was Monday and I would be home on Wednesday afternoon for Christmas Eve.\n\nI wished Noah a Merry Christmas and asked him to relay that to his parents. He nodded, hugged me again and climbed behind the wheel. They drove off with Alexis waving and throwing kisses until they were out of sight. I stepped into the garage and pressed a button to open the cast-iron perimeter gate. It would automatically close when a sensor picked up on the vehicle passing through. I stepped back out into the driveway just to enjoy the total silence. It was cold and I blew on my hands as my breath formed a fog that drifted away in a slight breeze.\n\nI reluctantly pulled myself out of my reverie and slid up into the van driver's seat and went to morning practice. I was late and the field house parking close to the entrance was full, so I found a slot way in the back row. There was an old style Cadillac Fleetwood parked in front of me. I started to get out of the van when I noticed movement in the car that I had parked nose to nose with. It was Coach Hannah's car and she was sitting in the passenger side front seat with a pair of legs draped past her head over the front seat. Hannah's face was buried in a pussy so she didn't see me looking down from my higher perch through my windshield and hers only ten feet away. Sprawled on her dashboard was the torso of one of Hannah's Cheerleaders. She was in uniform with her sweater pulled up over her tits and her pleated skirt pulled up around her waist. Her panties were probably on the floor. Hannah's hands were mashing the girl's tits as she was drilling her tongue deep into her pussy. The girl was writhing everywhere. Her hair was basically wiping the inside of the windshield as her lead rolled from side to side in obvious ecstasy. \n\nI was getting a boner as I watched them. I pulled my cock out of my pants and started jerking off. I reached under the seat and found my clean 'cum-towel' and laid it across my thigh. At one point Hannah came up for air but she wasn't looking at anything beyond the girl's tits and pussy. I couldn't see much of the girls face but her hair color and the style was familiar. I had never been introduced to her and I didn't know her name. \n\nSuddenly, the girl began humping her hips up into Hannah's face in an obvious orgasm. Hannah did her best to stay with her. I could see the girl's mouth open in an apparent scream but I couldn't hear anything except the rhythmic tinging of the van's engine as it cooled. In a minute or so, the girl pulled her legs back into the front seat and Hannah lay over on the bench seat and the girl maneuvered into a sixty-nine position with Hannah on the bottom. All I could see now was the girl's ass rocking forward and back with Hannah's hands on her hips and the girls head bobbing up and down as she was obviously eating Hannah's pussy. \n\nI could feel that familiar sensation coming on and I let it come. I let out a grunt as my lungs seized. I grabbed the towel and wrapped it around my cock. As my first rope of cum blasted into the towel, I let out a \"GGGGYYYYYAAAAAA,\" sound as my head rolled back on my neck. My flailing hand accidently hit the steering wheel and the horn tooted. I was in mid groan and when I looked forward again, Hannah and the Cheerleader were sitting up looking at me. Hannah had an ear to ear grin on her glistening face. The Cheerleader was looking back and forth from me to Hannah and was confused by the look on Hannah's face. She obviously just wanted to get out of there. I was in mid orgasm and nothing in the world was going to interrupt that. I kept on flailing my cock with my hand and from the motion of my right arm and shoulder; Hannah knew exactly what I was doing.\n\nThe huge door of the Fleetwood swung open and Hannah, stepped out as she smoothed down her skirt. She reached her hand back into her car and pulled the Cheerleader across the seat to stand beside her. Her sweater was still above her tits and she didn't seem to notice. Her pleated skirt fell back into place. Hannah maneuvered the girl out of the way and slammed her door. Hannah's grin had not diminished as she walked toward my van pulling the girl with her.\n\nFrom the lascivious look on Hannah's face, I knew what she was planning. The girl looked like she was looking for a way to escape but Hannah didn't release her grip on the girl's wrist. Hanna opened the sliding door on the passenger side and climbed in as I was blowing my last salvo of cum into my towel. She pulled the girl in behind her and slid the door shut. She looked around the back of the van and found nothing except for two rolled up yoga mats. She didn't say a word as I rotated my seat toward the center. She rolled the yoga mats out on the van floor and positioned them side-by-side. Hannah was on her knees and the girl was stooped over as she stood there. She was trembling and when I pulled my towel off the end of my cock, her trembling turned into a vibration. Her eyes went wide and her mouth opened as she mumbled, \"Holy Shit.\" She didn't have that 'I've got to get out of here' look on her face anymore. \n\nHannah noticed the change too and motioned for the girl to come down on one of the mats. Hannah pulled the girls sweater over her head. She wasn't wearing a bra, even though she should have. Her tits were large and firm. Her nipples were extremely hard and the girl immediately started running her index fingers around them. The girl unzipped her pleated skirt and slithered out of it. She was now wearing socks and sneakers and a gold waist chain. Her pussy was drenched from her tryst with Hannah.\n\nThe girl was pretty in a 'girl-next-door' way. She had light brown hair that hung straight to below her breasts. Her stomach was trim and her hips narrow, which made her large tits look even bigger. She had an obvious thigh gap that I couldn't pull my eyes away from. From what I could tell when her ass was in the air in Hannah's front seat, her ass was spectacular. I couldn't confirm that as she stood facing me staring at my cock in my fist. I was stroking my hard cock as she watched. Her voice trembled as she said, \"You're 'Meat' right?\" I nodded. \"I'm Vanessa or just \"Nessy\" like the monster. Speaking of monsters, I'm glad to finally meet you and I'm delighted to see that your nickname suits you perfectly.\"\n\nHannah pushed one of the yoga mats between the two front seats and guided Vanessa to her knees between mine. She smiled at Hannah as she backed off and started getting undressed. Vanessa looked up at me and then down to my cock. She placed her extended fingers on my glans and waited to see if I would release my cock to her. I smiled at her and pulled back my hand. She wrapped her fingers around as much of my shaft as she could and started a double fisted hand-job. She'd obviously done this before. She smiled up at me as her hands counter-rotated on my shaft. I looked from Vanessa over to Hannah as her bra came off and was deposited on top of Vanessa's clothes. Hannah's skirt dropped and she had no panties on either. She kicked the skirt over with the rest of their clothes. Hannah's nipples were as hard as stone. Her pussy glistened from Vanessa's saliva and her own lubrication. \n\nHannah came over and knelt down beside Vanessa and watched her hands working my cock. She looked up at me to see my reaction. She grinned at me and I grinned back. I figured that Hannah would take over the show but instead she maneuvered herself in behind Vanessa and sat down on the mat with her legs stretched out toward me. She pulled herself up close to Vanessa and pressed her tits into Vanessa's back as she reached around Vanessa and cradled her large tits in her hands and rolled her hardened nipples with her index fingers and thumbs.\n\nVanessa switched from a double-fisted hand-job to a single hand and cradled my balls with the other. Hannah released Vanessa's tits and moved one hand up under her ass and started finger-fucking her pussy. With her free hand she gently pushed Vanessa's head toward my cock. Vanessa resisted at first but then relented and leaned forward and put her lips on my velvety crown and kissed it as she looked directly into my eyes. She pulled her head back and spit on the crown and then pushed the crown into the corner of her lips and stretched them over the knob. She continued to stroke with a single hand from balls to her lips. She stopped as her lips locked around the ridgeline. Her eyes started to water and she pulled off with a huge glob of saliva following close behind. She gathered the glob in her hand and rubbed it into my cock for lubrication.\n\nI looked at Hannah. She was smiling as she was trying to push Vanessa's head back on my cock with her open hand on the back of her head. Vanessa was resisting and Hannah finally got frustrated with her and got up on her knees and leaned over Vanessa's shoulder trying to get her own mouth on my cock. She resorted to nudging Vanessa aside and taking her place between my knees. She grinned up at me and grabbed my cock away from Vanessa and struggled to get her lips over the knob. Her grin broadened when she was successful. She proceeded to give me a great half-cock blow-job. Her hands were on my thighs as her head bobbed up and down. I looked at Vanessa. She was concentrating on Hannah's blow-job with a wistful smile on her face.\n\nAfter a few minutes of Hannah's blow-job, she pulled off and leaned back. She pulled me off the driver's seat to the mat in the middle of the van. She pulled me along as she sat back on the mat and then lay back with her knees up and spread wide. I was on my knees inching my cock closer to her pussy. I pressed my knees up against her ass. Hannah lifted her hips with her legs in search of my cock. I guided it to her and pushed in at a steady pace. I stopped at the usual spot. Hannah had given me a blow-job on the plane but we had not fucked yet. She was anxious and she grabbed my hips and pulled me hard into her as she let out a scream. She stopped pulling on me and in a moment she was okay to go and I pushed the rest of the way in. \n\nVanessa came up behind me and cradled my balls as I started fucking Hannah. I didn't go easy on her and picked up my pace. Hannah was handling everything I could give her and then she motioned for Vanessa to come sit on her face while I fucked the shit out of her. Vanessa complied by setting her pussy down on Hannah's face as she faced me. She pushed her tits up to my face and I began sucking on her tits and nipples. She started groaning as soon as Hannah began her tongue attack. \n\nFive minutes later, Hannah started to seize her muscles. I could feel her pussy on my cock. Her orgasm took over her body and she lost Vanessa's pussy as she moaned, \"Oh my gggawwwddd. I'mmm cumminnngggg. Oh shit.\" \n\nVanessa had been getting close herself and she was disappointed when Hannah abandoned her pussy. She was frantic to find a replacement for Hannah's tongue and she opted to slide down Hannah's body, push me out of Hannah's pussy and then slide her pussy on my cock. I took her weight in my hands and began heaving her back and forth on my cock. She let out an incredibly loud scream as she writhed in my arms. Her head crashed down on my shoulder as she screamed, \"JESUS. JESUS. FUCK ME. HERRRREE I GOOO.\" She threw her arms around my neck and started driving her pussy on my cock. I could feel her muscles seize and release as she gasped for air.\n\nHannah was recovering from her orgasm and was watching Vanessa grinding her pussy on my cock. Vanessa was grinding so hard that I was forced back to sit on my ass. Vanessa's pussy came with my cock and she pushed me back on my back and slid into a cowgirl position with her knees at my waist, rocking her hips frantically. Vanessa was crazed. Her face was scrunched up into a mask of grim determination. \n\nVanessa slowed her attack and I thought she was done. She put her hands down on my pectorals and grinned at me. She said, \"I want another one. Are you ready to go?\" Apparently it was a rhetorical question because she renewed her attack and fucked me with everything she had. She was tiring quickly and I grabbed her hips to help her. I lifted her hips with mine so she came up my cock and then I held my hips up so she couldn't push all the way back down again. I had four inches of cock in her and I started my piston-fuck action and she exploded into a scream and in thirty seconds she was groaning her way into another orgasm and when I drove my full length into her with my first shot of cum increased the power of her orgasm. I was groaning hard and she was screaming.\n\nHannah didn't want to miss out so she came around and pulled my cock out of Vanessa's spasming pussy and caught a shot in the face before she could get my cock into her mouth. She was so sure she could handle any load she didn't even try to swallow. Big mistake. In two shots, her eyes were bugging out and her cheeks were too. She tried to start swallowing but it was way too late. The next salvo blew her off the knob and she was frantically trying to push my cock back in Vanessa's pussy but caught a round in the face first. Vanessa was anxious to get it back too as she was wagging her ass in Hannah's face searching for it. When she got it back, she let out another scream as she sank down hard on it. \n\nSuddenly there was a banging coming from the outside of the van. A male voice yelled, \"All right; open up in there.\" The sliding door handle jiggled but it was locked. A face appeared at the passenger side window with his hands trying to block the reflection. I knew he couldn't see anything through those black-out filmed windows. He banged again and said, \"Come on Hannah. I know you're in there. What poor young unsuspecting girl are you corrupting now?\" \n\nVanessa had stopped immediately and she was quiet except for the heavy gasping for air. I looked over at Hannah. Whoever it was had Hannah's number. She was not pleased. She yelled back, \"God Damn it Jimmy. You're stalking me. Go away. I'm having a business meeting.\"\n\nFrom what I could see when he pushed his face to the window, Jimmy was a campus security guard. Jimmy laughed and said, \"Yeah right. I've got your business meeting right here in my hand. Come on. You know the drill. One little blow-job and I'll go away.\" It sounded like Hannah's payment plans to stay out of trouble around the University was a blow-job.\n\nHannah yelled, \"God Damn it Jimmy. Okay. Pull your cruiser up behind the van and don't lock the door so I'm standing in the parking lot in the nude like last time.\" He laughed as we could hear him walk away. While he was gone, Vanessa pulled off my cock and stood up. She was pulling her sweater and skirt back on when we heard a car pull up behind the van and the horn toot. Hannah looked at Vanessa and then me and said, \"Shit. Shit. Shit.\" She unlocked the side door of the van and slid it open. She stuck her head out looking to see if anyone else was around and then stepped out and made a dash for the cruiser.\n\nVanessa and I maneuvered ourselves so we could see behind the van from our higher vantage point in the side-view mirror. We couldn't see everything but we could see enough to know exactly what was going on. Hannah slid into the front seat and closed the door. She immediately began unzipping the campus cop's zipper. We could see the cop looking down into his lap and we could see Hannah's naked shoulders and head as she bobbed up and down on the cops cock. His head lolled back on her neck and his mouth hung open. He may have been groaning but we couldn't hear anything. ",
        "Jimmy had terrific stamina or he was intentionally holding back his orgasm just to piss Hannah off. I was betting on the latter. Hannah's head bobbed fast and then went slow as she tried to get him off. She lifted her head at one point and she was having a heated conversation with the cop as she jerked him off with her right hand. Her head went back down and after more than five minutes the cops hips humped up banging Hannah's head into the steering wheel. Hannah never pulled back as she obviously took all of the cops jizz and a minute later she lifted her naked ass above the side window as she maneuvered herself to get out of his car. Jimmy lips moved as he was saying something. Then Hannah's lips moved and it wasn't hard to lip read \"Fuck You Jimmy.\" She pushed open the door and slid out on to the ground. Jimmy sped off leaving her standing in the open in the nude. She threw him 'the bird' and rushed back to the side door of the van. She slid it open and got in slamming the door behind her. She had cum all over face. It was dripping off her chin onto her tits. Vanessa looked at her and giggled and then slid open the van door and jumped out. She slammed the sliding door behind her and headed for the Field House. \n\nHannah looked up at me and said, \"That God-Damn Athletics Director has requested that campus security keep him up to date on my sex life. I'd rather blow Jimmy than drag Vanessa in front of the Director for God knows what ever perversion he can think of. It's bad enough that I have to blow that son-of-a-bitch on a regular basis just to keep my job. I don't want to include Vanessa or the next Vanessa.\" She chuckled. I didn't say anything but it looked like Mindy had got the straight scoop from the Director's secretary.\n\nI got up and started getting dressed. Hannah took the hint and did the same. We walked together across the parking lot to the Field House. I was so late it didn't make sense to even get dressed and go out on the field. Instead, I pulled on some gym shorts and a baggy tank-top and went to the weight room for a workout.\n\nI was surprised to see Jan and some other girls working out in the weight room already. One of the other girls was much taller than Jan and she was 6'2\" tall. Jan was spotting for one girl lifting heavy weights on the incline-bench. Jan said, \"Hey,\" when I walked in and began stretching. She watched every move I made to the point where the girl had to get her attention back to help her get the bar-bell back up on the hooks again. When the girl on the bench sat up she turned back to Jan and said loud enough for me to hear, \"Do you know that guy?\"\n\nJan kept her voice low in response but I heard her say one clear word, \"Meat\". The girls looked over at me and said, \"No kidding. So that's the infamous Meat.\" I smiled to myself as I heard,\"infamous Meat\". Two other girls came over. They were both attractive but nowhere near Jan's beauty. One of them was a black girl who must have been 6'7\". Besides being tall, she was a big girl. She must be a hell of load on the basketball court. The other girl was white and stood around 5'10\". They had been working together until they heard the word \"Meat\" and they came over to Jan to see what was up. \n\nNow that they found out that Jan knew me they had to find out how she knew me. Jan was explaining her friendship with Alexis the leader of the 'Smoking Hot 5'. They obviously knew who Alexis was. I was trying to ignore them but they were all talking loud enough for me to hear them. Jan tied the connections when she told them I was Alexis' fianc\u00e9. The lights came on in all of their eyes at once. They all stood there watching me stretch. I was uncomfortable having them watching me so I decided to go to the sauna and hoped they would be gone when I came out.\n\nI wrapped a towel around my nakedness and went to the sauna. There was no one else there. I turned up the heat and the only sound was the ting...ting...ting of the aluminum fins on the sauna heating unit as the heat came on. I sat down and within five minutes I was sweating profusely. I sat back with my head against the wall. The only light in the sauna came through a small glass window in the wooden door, so when the light was blocked by someone looking through the window it was obvious to me, even with my eyes closed.\n\nThe sauna door opened and Jan and her three team mates walked in with towels wrapped around them and sat down, two on either side of me. I opened my eyes when I heard the door open. I watched them file in and sit down and then tipped my head back against the wall again and closed my eyes. My flaccid cock was lying on my left thigh and the towel laid over it, but it was obvious to anyone in the room what was under the towel. \n\nI heard the unmistakable sounds of kissing so I opened my eyes to see what was up. The tall black girl was sucking face with the white girl who had been working out with her. Jan and the girl she had been spotting for were sucking face too. Jan was looking at me as she kissed her partner. Their lips separated and the girl worked her way down Jan's neck and pulled down her towel to suck on Jan's tits. Jan smiled at me and then grinned when she noticed my cock hardening under the towel. Jan groaned from the girls attack on her tits. \n\nThe tall black girl and her partner were moving into a sixty-nine position as the towels were discarded. My cock was lifting the towel up in front of me to form a tent. Jan watched my cock moving and she looked up at my face and grinned. Jan and her partner moved into a sixty-nine position too and I pulled back my towel and began fisting my cock as I watched these four girls enjoying each other. I had heard that the women's basketball players were all lesbians. I knew Jan was bi-sexual. I had also read an article on the internet about 95% of the WNBA player being lesbians. 'Whatever' was my attitude? Who cares? I was thoroughly enjoying the show, whatever their sexual persuasion was.\n\nJan had rolled onto her back on my left side. Her head was a foot or so from my left hip. Her partner was on top pushing her pussy down into Jan's face. The partner was face down in Jan's sex. In moments, they were both groaning hard. I looked to my right and the black girl's ass was in my face as she had dropped her sex into her partner's face. Her legs were so long that her ass was nearly at my face level. I slowly stroked my steel hard shaft.\n\nJan was doing her thing in her partner's pussy but she lifted her hands over her head and after a few tries she found my cock. I let her have my cock and she started jerking me off. I sucked my left index finger into my mouth and then moved it over to Jan's partner's anus. Jan saw what I was going to do and she nodded her head. I pushed my left index finger to her anus and lightly rimmed it. Jan's partner groaned assuming that Jan was doing it. She pushed her ass back at my finger and I gently pushed it inside her sphincter. She lifted her head out of Jan's pussy to groan as I continued to push in all the way to the third knuckle. When I stopped, she dropped her face back into Jan's pussy and Jan closed her eyes and let out a groan as she was driving her tongue in and out.\n\nI looked over to my right at the black girl's shapely hips in my face. I ran my right index finger into my mouth and lightly rimmed her anus. She groaned and pushed back as I guided my finger all the way in. She pulled her face off her partner's pussy and said, \"Oh fuck. Yeah. That feels great. Fuck me with your finger, Jo.\" She obviously assumed that her partner 'Jo' was finger fucking her. I did as she asked and started fucking her ass with my finger. \n\nWith the additional finger-fucking, the black girl was the first to burst into her orgasm and her partner, underneath was next to go. They both continued to administer to the other's pussy until they collapsed in a heap to my right. I pulled my finger out and watched her vagina clenching hard as she tensed every muscle only to explode in release. \n\nJan's partner was the next to go with the addition of my finger to her ass. She was trying to keep her attack up on Jan's pussy but she lost control of her pulsing body and she collapsed against the wall I was leaning against. Jan swung her body out from under her partner and made a very athletic move to swing around and plant her pussy on the end of my cock. She made a final adjustment and sank her pussy all the way to my balls. She screamed at the thickest part but kept on going. She started immediately fucking on my cock. I cradled her tits in my hands. Jan pushed forward and kissed me passionately with open mouth. \n\nThe other three team mates sat up and watched Jan fucking me hard. The one whose name was 'Jo' said, \"Don't finish him off Jan. We want our piece too.\"\n\nJan broke off our kiss and looked at 'Jo' and said, \"Don't worry. I'm not sure I've ever seen him soft. There will be plenty for everyone.\" The others looked at me as if I was supposed to provide some confirmation to Jan's statement. I just nodded and concentrated on fucking Jan's pussy. \n\nJan was trying hard to get me to cum with her but I wasn't ready and she was. She tensed every muscle and her breathing had caught in her throat as she exploded into a crushing orgasm. She groaned hard as she announced it. When her pussy stopped clenching on my cock she lifted herself off and sat down spread-eagled on the bench along an opposite wall.\n\nJan's partner spun around in a doggy position inviting me in. I pumped my cock with my hand a couple times and got on my knees and lined up my cock with her pussy and pushed in slowly. When my glans pushed inside, the girl screamed and pulled away. She yelled, \"Jesus Christ. I see why he's called Meat. Mother-fucker it's huge.\" She cautiously pushed back on my cock and after more than a minute I was buried in her pussy. She was groaning constantly but she started the fucking motion and then I took over control as I ramped up the pace. Several minutes later I could feel my orgasm approaching and judging from the tensed muscles and the contortions in her face she was very close too. I grabbed her hips and started piston-fucking her pussy and that pulled me over the top and my first cum shot pushed her over too. She was screaming and I was groaning hard as I launched around six long powerful bursts of cum. She screamed with every separate launching.\n\nJan's partner pulled forward off my cock and collapsed down on the bench. The two girls on the right side had maneuvered to see my cock in the hard state. They weren't convinced that I would stay that way for long. I sat back down with my granite hard cock in my hand. Cum was drooling down the shaft and Jan moved over to suck my knob into her mouth to clean me. She pulled off, smacked her lips and looked at the tall black girl and said, \"Jemelle, do you want a go?\" \n\nJemelle was staring at my cock. She heard Jan and she looked at me and said, \"What's your preference Mr. Meat?\"\n\nI smiled at Jemelle and said, \"I absolutely love fucking women taller than me and I don't get many chances.\" She grinned at me and stood up and stood with her chest against the wall. She spread her legs and reached down and spread her dark labia. I stood up and moved in to take advantage of her invitation. She was two inches taller than me and much of her height was in her legs so I had to go up on my tiptoes to push my cock to Jemelle's pussy. She used her fingers as a ramp to guide me inside and she immediately tensed from the size of my cock as I slid in. She was muttering, \"Oh fuck. Oh fuck. That's big. Oh fuck.\" When I hit bottom I reached around Jemelle and cupped her big tits. She groaned as I began fucking her pussy. We fucked for a few minutes and then she turned her lusty face to look back at me and said \"Fuck my ass.\"\n\nThis was just getting better and better but her request was going to be a problem. I was on tiptoes to reach her pussy. There was no way I was going to reach her anus. She already knew I'd have a problem and she was already maneuvering herself to kneel on the sauna bench. She was taking my cock with her. When she got her knees down on the bench with her torso plastered to the wall, I pulled my cock out of her pussy and guided it to her anus. Now she was a little too low so I bent my knees. She braced herself against the wall to accept my first push. She screamed hard when my glans popped into her ass. I stopped and waited for her to send a signal. She pushed back and we were off. I was groaning hard and so was she. I fucked her for several minutes until I surged into another orgasm. When my jizz was rocketing up my shaft into her bowels she yelled out, \"Fuck. I'm cumming too. Jesus Christ. You're filling me up.\" Jan was strumming her clitoris as she watched.\n\nWhen I was done launching my load in Jemelle, I backed away and stroked my cock. Someone had left a cup of water to throw on the heating element to increase the humidity. I dumped the cup on my cock and wiped it clean with a towel. I turned to look at \"Jo\". She was about the same height as Alexis but had a bit more weight on her but her tits were smaller. She was a pretty girl. She kept looking at my face and then at my cock which showed no sign of softening. She said, \"That's incredible. I was sure you were done with Jemelle.\" I flexed my cock manually and it jumped several inches. Jo was a lesbian and although she was fascinated by my cock, she refused any offer of a fuck. She did however express an interest in putting my cock in her mouth. \"Just to see what it was like,\" she said. She slid over to where I was standing and took my cock in her hand. She had obviously never even done that before. Jan came over and sat beside her and showed her what to do. Jo grinned up at me as she tried to wrap her fingers around my girth. She had quite a grip. Jan loosened her grip a little and took her wrist and guided her motion.\n\nI gave her a fake groan to encourage her and she grinned at Jan. Jan looked up at me and smiled. She pursed her lips and sent me an air-kiss. I smiled at her and Jo as she was stroking my cock in very awkward non-synchronous strokes. Jan noticed the awkward motion and she set her hand on Jo's and took control of the action. After a few minutes Jo was apparently growing bored with jerking me off and she bent forward and kissed the velvety knob. She pulled back and said to Jan, \"It's so soft and velvety. I had no idea.\" Jan just smiled and Jo pushed forward again and licked her tongue around the ridge of the knob. When she found the nerve bundle, I groaned for real and she grinned up at me and kept licking her tongue there. \n\nIt took her several minutes to get up the gumption to push her lips over the glans. Jan showed her what to do and explained that this cock was way bigger than most and she needed to stretch and wiggle her lips over the knob. She followed directions to the letter and after a few tries she was actually giving me a blow-job. Jan put her hands back on it and showed her how to hold my glans in her mouth and jerk on it with one hand and then two. She liked the two hand counter-rotating hand-job with the tip of my cock in her lips. Fuck, I did too. \n\nJo continued like this for a few more minutes and was groaning for real. Jo pulled her lips off my cock and said, \"Don't cum. I don't want anything to do with cum. She released my cock from her hands and it just bobbed there in front of her face. She slid back to her original position on the bench. \n\nJan said, \"Well, girls. We can't leave him like that. She turned to her original partner and said, \"Julia? Finish him off. Okay?\" Julia's eyes sparkled as she slid into Jo's place in front of me. She glanced up at me and grinned as she stretched her lips over the knob. She was an accomplished cock-sucker so she didn't spend all her time with her face buried in pussies. She couldn't deep-throat but she gave me a blow-job/hand-job for the ages. She was good and in five minutes I was blowing my load again. She was not ready for the volume though and she pulled her lips off my cock after the first salvo. Jan saved the day as she guided my cock into her mouth but not before I splattered two shots on Julia. Jemelle slid over and began licking cum off Julia's face and tits as Jan finished draining and swallowing the rest of my load. She pulled back when I was done and said, \"Mother-fucker, I don't know how you cum so much on your third orgasm in a half-hour.\" I just shrugged my shoulders. I didn't know either. It had just always been that way.\n\nWe were all soaked with sweat from the heat and the physical activities. The girls grabbed their towels and wrapped them around themselves and left the sauna. I sat back down to catch my breath. My cock was beginning to soften and I was thankful for that. \n\nThen the sauna door pushed open and the women's basketball coach was standing there fully clothed. She let the door close behind her. She just stood there looking down at me and my cock started back up again. I went to pull my towel over it but the coach said, \"Leave the towel.\" I complied and let the towel fall back where it was. She just stared down at my cock and in no time it was at full size again pointing straight up at her. I was wondering what she was going to do. She finally spoke, \"I don't want you and that monster screwing with my girls. Okay?\" I nodded. She didn't say anything else for awhile. She just stood there watching my cock bobbing up and down. She sucked her lower lip between her teeth and started nibbling on it. I could tell that she wanted to strap me on but something was holding her back. Her breathing was getting ragged. It could have been from the heat but I was guessing otherwise. She spun on her heels and pulled the door open and I thought she was going to leave. She stopped in the open doorway and said back over her shoulder, \"Get that towel on and follow me.\" I did as she requested and left the sauna with a grin on my face watching her skinny ass in front of me. The towel hid the flesh but couldn't hide what was under it.\n\nShe walked into her office and I followed her through the door. She closed it behind me and pulled the blinds. She told me to sit down and I did. She leaned her ass back against her desk and said, \"So, you must be the infamous 'Meat'. Coach Hannah has told me all about you. You'll find out that most of my girls have no interest in that,\" as she pointed at the bulge in the towel. A sultry look appeared on her face as she pushed off the desk and walked over to stand directly in front of me. She scanned me from head to toe and said, \"But you have a number of things that interest me. She bent down and ran her fingers over my ripped chest and abdominal muscles. Her hand roamed up my ripped biceps and triceps and over the deltoids and around to my lats. I trembled from her touch.\n\nShe lifted my towel and stared down at my granite hard cock. She said, \"Jesus Christ. That is a fatty. I took Coach Hannah's description with a grain of salt. She actually didn't do it justice.\" She reached down and pulled my cock lower and released it to watch it spring right back up and bounce. She turned around and went back to her place leaning against the desk. I had seen her around campus before and thought she was pretty hot. I didn't know her name and I searched her office for something that would tell me what it was. On the bookcase was a placard that read \"Coach Jennifer Fontaine\". I smiled at her. I thought she looked like a Jennifer.\n\nI stood up and said, \"It's been real nice meeting you Coach Fontaine, but I really have to get going.\" She pulled her ass off the desk and stood blocking my way. Her face was flushed. She didn't wear much makeup to hide it. The flushing extended down her neck to her chest which was exposed by two loose buttons of her white blouse.\n\nShe spoke and her voice had gotten kind of husky. \"Take my clothes off.\" I stood there in front of her contemplating doing as she asked. I scanned her for the first time and liked what I saw. She stood about 6' tall. She was obviously an athlete. I took a guess that she was in her early thirties. She was very attractive even without makeup. Her long blonde hair was pulled back in a pony-tail on the crown of her head. Every single strand of hair was captured. There were no stragglers in front of her ears like I see on most women with pony-tails. Her breasts were average, probably a \"B-cup\". Her waist was slim and so were her hips. I had noticed before that she had a skinny ass. She basically had few curves. My preference was for women with feminine curves. Her chest, waist and hips were nearly the same size. She watched me scan her like she had scanned me. She smiled and said, \"If you like what you see, take my clothes off.\"",
        "I stood there a moment and then let my towel fall to the floor. She glanced down at my bouncing cock and reached out and wrapped her fingers as far around it as she could and shook it like she was shaking my hand. She said, \"Hello Meat. I'm Jennifer. It's very nice to MEAT you.\" She giggled at her pun. I reached up and placed one hand gently on either side of her face. She froze with my touch and her eyes flitted around my face. She was used to being in charge but she wasn't in charge of shit at that moment. She was already breathing hard. She sucked her lower lip between her teeth again. I leaned down and kissed her gently on the lips. She groaned into my mouth as she took the initiative and began passionately kissing me with her open mouth desperately in search of anything she could lock her lips on. She trembled and threw her arm around my neck and pulled her lips to my ear. She whispered, \"Jesus, don't leave me like this.\" She gasped in a breath of air and continued, \"I need to be fucked so badly. Please.\"\n\nI kissed her again and moved my fingers to the buttons on her blouse. She was in heat and wasn't about to wait while I sensuously stripped her. As I unbuttoned the two upper buttons, she more or less ripped open the bottom four buttons. Her hands were stuck in her cuffs and she was frantic to get the sleeves off. She tore at it so hard the buttons at her wrist flew across the room. She threw her blouse over her head. I was working on the zipper of her skirt as she quickly unhooked her bra and threw that in a different direction. She was frustrated with my slow progress and she just pushed me away and hoisted her skirt up to her waist and stripped off her panties. She was beyond wet. She was gasping in air as she pushed her ass up on her desk and laid back. She had my cock in her hand and she yanked me into place between her legs. Between gasps, she was muttering, \"Oh fuck. Oh fuck. Oh fuck.\" She pulled me in closer and when my cock touched her pussy, she threw her legs around my waist and locked her feet and pulled me into her as hard as she could. She almost instantly regretted that move. Her eyes went wide and a look of pain washed over her face. Her breath caught in her throat as she tried not to scream. I helped her out by pulling my cock back an inch or so.\n\nCoach Fontaine collected herself and gently pulled me back in with her legs behind my back. She was holding her head up so she could watch as my cock slid into her pussy. When I was buried in her pussy she looked up at me and said, \"Fuck. You are one beautiful young man.\" My face reddened from her compliment. She giggled at my embarrassment.\n\nI reached down and took her legs as she released me. I lifted them up over my shoulders and lifted her ass up and I drove my cock even deeper. She whispered, \"Oh fuck yeah. Fuck me hard you beautiful man,\" as she giggled again. I reached forward and put my hands on her tits. Her nipples were rock hard. She placed her hands on top of mine to hold them there. I started fucking her in long deep penetrating strokes and her head began rolling from side to side. She was mumbling something unintelligible. Her eyes glazed over and her mouth opened to form an \"O\" as she moaned a continuous \"AAAAHHHHHHHHH\" that was presented as a slow staccato burst of \"AHHH's\" caused by interruptions by my momentum from plowing my cock into her.\n\nHer hands came off mine and went searching for my torso. She was running her fingers over my pectorals and as much of my abs and obliques as she could reach. She obviously wasn't a Lesbian as evidenced by her lusting for my masculine form. I fucked her through one climax and kept right on going. She was trying hard to remain quiet. She didn't need the type of scandal that Coach Hannah had gotten into.\n\nI pulled my cock back and she looked up with a frown on her face. I pulled her up off her desk and she started to protest. I put a finger on her lips and turned her around and bent her over her desk. She put her arms out to take her weight as she pitched forward as my cock drove back into her pussy. She squealed a little and mumbled, \"Oh my gawwwddd. Yes. Fuck me forever.\" I had her skinny hips in my hands as I pulled myself into her. I could feel an orgasm approaching and I picked up the pace a little. She was groaning constantly as she let her forehead come down on her desk so she could watch between her hanging tits as my cock plowed into her pussy.\n\nAs my orgasm got closer, Jennifer recognized the extra hardness and she blurted out, \"Fuck yes. Cum in me. God damn it, cum in me.\" She began rotating her hips against me and I exploded into my orgasm. I launched my hips hard into her in synch with my first cum shot. Jennifer shoved a hand to her mouth to squelch her scream and she exploded into her second orgasm. She grabbed her tits that were pressed into the top of her desk. She was wagging her ass back and forth and rocking her hips up and down as I pumped at least half-dozen long powerful shots of cum into her pussy.\n\nWhen I was done, she continued her vaginal clenches on my cock. She was desperately gasping for air as her back surged up and down with each breath. As her clenches diminished, I slowly withdrew to a long drawn-out groan. I bent down and grabbed my towel and was about to wipe my cock on it when Jennifer said, \"Stop.\" I stopped. She pushed herself off the desk top and went to her knees and sucked my softening cock into her mouth. She smiled up at me as she lashed her tongue around my shaft cleaning the combined cocktail of fluids from my cock. She took suction on it and pulled off with a loud \"Pop\". She giggled and I helped her stand. Cum was drooling down her legs and she took my towel from me and wiped between her legs.\n\nJennifer was trembling. It might have been cold but my guess it was some other cause. I wrapped my arms around her and pulled her in tight. She was sobbing with her face pressed against my chest. I just held her and in a minute or so she stopped. She pulled back and wiped the tears from her eyes and cheeks. One tear was rolling down her chest. I reached in and flicked the tear off her nipple and stuck my finger in my mouth and smiled at her. She smiled back and then turned around to look for her clothes. She pulled on her soaking wet panties and pulled her skirt down and smoothed it out with her hands. Her bra was hanging over the back of a chair. She pulled that on and I snapped it for her. She had to crawl down over her desk to find her blouse. I buttoned it up as she looked at me. The buttons on her wrist were gone so she just rolled up her sleeves.\n\nI wrapped the towel around me and was heading for the door. From out of the blue, Jennifer said, \"Men assume I'm a lesbian simply because I'm an athlete. I'm not. But still, no one will ask me out. In spite of what you saw today, I'm not the type to take things into my own hands like the girls do these days. I'm pretty traditional.\" She was scanning the floor at my feet. She had more to say and I let her figure out how to say it. She looked back up at me and said, \"That was the best fuck of my life. I don't usually cum even once and you got me twice. I don't suppose... I mean, umm. Maybe we could get together again sometime? Hannah says that you're engaged to that Alexis girl. She's gorgeous, by the way. Hannah says you guys are pretty open in your relationship. I just thought maybe...\"\n\nI lifted her chin forcing her to look at me and said, \"That sounds like fun. After the semester break. Okay?\" Jennifer grinned so hard I thought her face would break. She looked at me and said, \"Will you be okay to get back to your clothes without raising an alarm? I nodded. She said, \"Let me look around out there to see if anyone is around that might see you coming out of my office like that.\"\n\nJennifer came back and said that the coast was clear. I left and collected my gym shorts and tank-top and went back to the weight room to do my work out. Then I showered and got dressed and walked back to my van. Hannah's Cadillac was gone. There was a note under my windshield wiper. I pulled it out and read it. It was from Vanessa and it included only a phone number. I slid behind the steering wheel and pulled out my cell phone and added \"Nessy\" and the number to my contacts list. \n\nI contemplated stopping for lunch but I didn't want to eat alone so I just drove home. It was quiet in the 'palace' which I thoroughly enjoyed for about an hour. I missed Alexis. I called her cell phone. She answered on the second ring. Before I could say anything she said, \"I miss you. I love you.\"\n\nI laughed and said, \"That's what I was calling to tell you.\" She told me about her ride home with Noah. She had never had a chance to really talk to him and know him. I hadn't pushed him on her. She either liked him or she didn't. It wouldn't affect our friendship. Yeah, he needed a swift kick in the ass to jump-start his adult life. Maybe being exposed to all the college kids his age would spark some kind of motivation. Alexis didn't indicate that he talked about applying for admission next semester or even next year.\n\nAlexis asked how my day was so far and I told her all about Hannah and Vanessa in the van and then Jan and her teammates in the sauna and finally Coach Fontaine in her office. I never even contemplate keeping anything secret from Alexis. We didn't do that with each other. She was excited about Jan's friends and Vanessa and wanted to know all about each of them. I described them and what we did sexually. I hadn't intended for this to be a phone sex call but that's what it turned into as Alexis told me she was masturbating to my descriptions. She wanted a detailed description and I relayed the information like it was happening right there in front of me right then. Through the tinny speaker of the phone I could hear her burst into an orgasm. She was groaning and relaying the details back to me. My cock was getting hard now. I ignored it. When Alexis' phone sex orgasm subsided we said our good-byes. I would see her tomorrow afternoon. I lay down on the sofa and dozed off.\n\nI couldn't believe that I slept so long that it was dark when I heard a voice coming down the hall to the kitchen. All the lights were off and the only light was the nightlight by the sink and the digital clock displays on the microwave and the stovetop. It took me a few moments to come around and then I recognized the voice as Rachel's. She walked into the kitchen and said, \"Hello? Hunter, Alexis. Are you here? I'm here for my playtime.\" \n\nI groaned as I remembered that I had made an appointment with Rachel for Monday evening for \"Playtime\". I had made the appointment in jest thinking that the party/orgy on Saturday night would negate the need. Apparently, in Rachel's mind, we were still on and unless I missed my guess, Mitch would be along shortly. I swung my feet to the floor and said, \"I'm in here.\" She stepped into the living room and flipped the light switch on. I squinted from the brightness.\n\nI had heard the sound of her heels on the tile and marble floors and without looking I envisioned Rachel in one of her classy, expensive suits. When I looked at her she was model posing with one hand on the door frame in a skimpy, bright red bikini. I did a double take and said, \"Holy Shit, Rachel. Umm. Holy Shit.\"\n\nShe giggled and said, \"What do you think? I've never owned a bikini in my life but my view of myself has changed considerably over the past few days. Mitch encouraged me. Do you like it?\" She attempted the cat-walk cross-over step as she walked toward me. She pulled it off well enough to make my cock harden thinking about how Alexis does that walk. She stopped in front of me and did a quarter-turn pose. She was fifty years old and she was hot and she could tell I thought so from the look on my face. She burst into a grin as she hefted her tits into the small patches of cloth over them. She looked down and said, \"I know I have some bikini waxing to do. I bought some thongs too. Those things take some getting used to.\" She giggled and I envisioned her wearing one. Still hot.\n\nShe sat in a recliner across from me and said, \"I know you set up this appointment thinking that it was just to keep the intent of the party on Saturday a secret and it worked. Mitch and I still have our relationship and we know that sex with others, either male or female, won't endanger that. I wanted to thank you too for Noah. He's a wonderful boy. He doesn't have your stamina but I don't think anyone does. I think Mitch and I fucked him nearly to death yesterday. He's too young for Mitch but I know she likes him. I'm way too old for him but I love his cock.\"\n\nI laughed and said, \"Well, he was fine this morning. Alexis left with him. He has dropped her off at our condo in the city. I talked to her earlier.\" Rachel seemed disappointed that Alexis wasn't here.\n\nRachel stood and said, \"Well, I should probably go.\" She turned and headed for the kitchen.\n\nShe was nearly to the kitchen when I said, \"I love your bikini. You look fantastic in it. I can only think of one way that bikini could make you could look better.\"\n\nShe stopped and turned back to me and said, \"Really. How?\" She cocked her hips in a sensuous pose.\n\nI stood up from the sofa and said,\"Drop it to the floor.\" I unzipped my fly and pulled my erect cock out and let it bounce in front of me.\n\nShe looked at my cock and said, \"Hunter, you say the sweetest things.\" She reached behind her neck and untied the bikini top and then she reached behind her back and untied it there. The tiny triangles of material fell off her large tits and dropped to her feet. She untied the bows on each hip at the same time and she spread her legs to let it drop too. She cocked her hips again and watched to see what I was going to do next.\n\nI unbuckled my pants and let them drop to the floor. I was dressed commando as usual. I looked down at her bikini on the floor and said, \"See. I was right. Rachel, you're a stunningly beautiful woman.\" I was exaggerating a little and she knew it but she loved hearing it from me anyway. The truth was that I wasn't exaggerating anywhere near as much as she thought I was. She walked over to me and pushed me firmly back down on the sofa and dropped to her knees. She grabbed my shirt tails and pulled it over my head. She muttered, \"Jesus, what a body,\" as she bounced her finger-tips over my washboard abs.\n\nRachel pressed my cock against my stomach and licked her tongue around my balls and then up the underside of the shaft. She licked her tongue around the ridge of my glans and then drilled her tongue into the nerve bundle. I groaned hard from her attack and humped my hips up at her face. She grinned at my reaction. She pulled back and said, \"I've been watching porno clips on the internet. They should put those on educational websites. She giggled. She had learned a lot from her recently expanded sexual experiences with me and Noah and now I find out she has been watching porno movies. She knew little to nothing from her husband who only fucked missionary style and I was about to find out what she had learned about giving blow-jobs which her husband thought was gross. She had related all of her meager knowledge of sex to Mitch thinking it was all she needed to know and now Mitch was in catch-up mode too. \n\nRachel hadn't even put her lips over my knob and I was already amazed at what she had learned. She pulled her tongue down my shaft again and then started a double-fisted counter-rotating hand-job. I groaned again and she was pleased with my reaction. She smiled and said, \"I want you to cum in my mouth after you fuck me to an orgasm. I can't believe I went all these years and never even knew they existed. I have orgasms with Mitch but they're different. I bought a big black vibrating dildo so I can give myself orgasms. I can't seem to get enough since that first day with you.\n\nI offered my hand and pulled her up. I said, \"Have you put any thought into positions that you've seen on the internet?\"\n\nShe smiled and said, \"I have. I want you to fuck me on the kitchen counter. I have a fantasy about fucking on my own kitchen counter but there's staff everywhere so doing it here will have to be good enough. I stood up and led her into the kitchen. \n\nI said, \"Do you want it sitting on the counter or leaning over the counter?\" \n\nShe hesitated a moment and then smiled and said, \"Yes.\" I grinned and picked her up by the waist and set her ass gently on the counter. She was so excited that she started trembling hard as I pushed myself between her legs and guided my cock under her sex toward her anus and then dragged my cock up the full length of her pussy to her clitoris. She groaned as her super-sensitive clitoris was touched. I dragged my cock back down and found the entrance to her vagina and pushed my cock knob inside. She tensed her muscles and I stopped to let her relax. Then I pushed all the way inside. Her head tipped back against a cabinet as I started a fucking motion. She was in a constant groan as I ramped up the pace. I cradled her tits in my hands and tweaked her hard nipples. She reached her hand down to her sex and spread her fingers so my cock slid between them. \n\nRachel lifted her legs and wrapped them around my waist and pulled me into her. I picked up my pace again and Rachel screamed, \"Oh fuck. Yes. I can feel it coming. I'm gonna cum. Oh my gawwwdddd. Fuck me. OHHHH.\" Before I could change anything, she screamed again, \"OOHHH MYYYY GGAAWWWDDDD,\" as she dragged in a huge breath of air and held it as her hips fired spastically and her pussy began clamping hard on my cock. Her legs were pulling on me as her climax rolled through her. She was moaning hard as she tossed her head from side to side until her orgasm started to diminish. I pulled my cock back from her pussy when the clenching stopped. She let her legs drop and dangle off the counter-top. She looked up at me with a smile and said, \"What's next?\"\n\nI helped her off the counter and lifted her right leg up on the counter which presented her pussy for easy access. She smiled back at me as I pushed my raging hard cock to her pussy again. To tease her a little, I lifted my cock up higher and touched her anus. She yelped and pulled away. She said, \"Not there. Not yet. I'm working up the courage though.\" I pushed my glans back into her pussy and immediately began fucking her. I dug my finger-tips into her hip bones for leverage and proceeded to fuck her hard. Her face was bumping into the cabinets as my momentum drove her forward. \n\nSeveral minutes later, I could feel my own orgasm coming on. My cock hardened and Rachel groaned, \"Oh fuck. I can feel your cock getting bigger or harder or something. You're going to cum. I want you to cum in my mouth.\" I pulled my cock back from her pussy and she pushed herself back off the counter. Her right leg was numb from lack of blood flow. She stumbled forward into me and went down to her knees. She grabbed my cock and held it as she stretched her lips over the glans. She started jerking me off with both hands again and my orgasm came rushing up on me. I blew the first stream into her mouth and she was already unable to control it. The second stream forced Rachel's lips off my cock and she aimed my cock at her face as two more steams blasted her in the face. She opened her mouth to catch some cum but more fell out than went in. She let the remaining cum shots splatter across her chest. She pressed her nipple up against my eye as the last shot sprayed everywhere. She looked up from my cock on her tit and grinned broadly.\n\nI helped her up but her right leg was still giving her some problems. I picked her up in my arms. She threw her right arm around my neck and aimed her lips at mine. She grabbed the dish-towel off the handle to the oven as we went by and then kissed me passionately until I set her down in a recliner chair. I sat down on the sofa across from her. She stuffed the dish-towel in her crotch so she wouldn't leak on the chair.",
        "We sat there in the nude for quite awhile. Rachel was interested in Alexis' relationship with her mother. I didn't feel comfortable telling her much and told her she should talk to Alexis about that. She nodded. She asked me about my parents and I enjoyed telling her about them and how they raised me. She asked if they knew about our life-style. I laughed and told her that they knew we were living together. They understand that times have changed from when they were our age. Rachel laughed at that and indicated she totally understood their position. I hadn't even thought about it before but Rachel was actually older than them. \n\nRachel wanted to know all about Noah and I told her how we had been friends since we were five and lived a couple blocks apart. I related that I'm concerned about what he's doing with his life or rather what he isn't doing. I was hoping that if he came up here and met some students his own age that he might get motivated. I also related that Alexis' conversation with Noah on the long drive home didn't lead her to think he had any thoughts in that direction.\n\nWe talked about Mitch and what her plans were. Rachel wasn't happy that she seemed content to live off Mommy. Mitch had said something about getting a job after the holidays but Rachel thought it was just talk. She could get Mitch a job on campus in a second but Mitch had always declined. It was ironic, but she said she didn't want to live off her mother's charity. She was twenty-six years old with a college degree, sitting at home. She and Noah were siblings in arms, heading for the same location called nowhere.\n\nAs if on cue Mitch's voice echoed down the hallway, \"Mom? Are you here?\"\n\nRachel leaped out of her chair and mouthed the words, \"I'm not here.\" She bent down and grabbed up her bikini and ran for the bedrooms. Her tits were going everywhere. It was a sight I couldn't resist watching. This was going to be weird. I'm sitting on the sofa in the living room, naked with my clothes in a heap on the floor. I was sure I didn't have enough time to pull them on.\n\nMitch's voice got louder as she yelled again, \"Mom? Hunter? Alexis? Is anyone here?\" I grabbed my pants and yanked them over my feet and stood up. I had just pulled them to my hips when Mitch walked into the kitchen. I grabbed my shirt and had it half way down my torso when Mitch came through the doorway into the living room. She paused and stared at me. I'm sure she was wondering what I had been doing with my shirt half on.\n\nAfter a pause Mitch said, \"Is my mother here?\" I just shook my head and looked around. I'm a terrible liar and somehow, she knew I was lying. The somehow became apparent when Mitch said, \"I know she's here or has been here recently. I can smell her perfume.\" \n\n'Fuck,' I thought. 'I never think of such things.' Rachel appeared in the doorway from the hall to the living room. She was wearing a robe. She also had a towel around her hair and she was acting all nonchalant as she rubbed the towel on her head as she walked into the living room. She said, \"Hunter, thank you for letting me use your shower. Mine is bro... Oh, hello honey. You found me. My shower head is broken and Hunter offered to let me use his.\" She never stopped rubbing the towel around on her head like she was drying her hair. I looked from Rachel to Mitch to see if Rachel's ruse would work.\n\nNot a chance. Mitch said, \"Oh come on Mother. You came over to show Hunter your new hot bikini. I can see it. Your robe is separated. Rachel glanced down and then pulled her robe back together and tied it firmly. Her face was flushed red with embarrassment when she looked back up at her daughter. Mitch turned to look at me and said, \"And Hunter is the worst liar I've ever seen.\" I nodded and laughed. Mitch looked back at Rachel as she came in and sat down a few feet down the sofa from me. \n\nMitch sniffed the air and smiled. \"If you took a shower, why do you wreak of sex. She got up and walked over to Rachel and pulled the towel off her head. Rachel's hair was completely dry and only a little disheveled. Mitch pulled open Rachel's robe. She was wearing her sexy bikini but Mitch was examining her mother's crotch and the bikini material readily showed that it was soaking wet. She reached down and ran her fingers through her mother's crotch and first sniffed them and then sucked them, one by one, into her mouth. She was savoring the taste like a wine-connoisseur. She broke into a grin and said, \"Yummy. You taste like there's a little cum in there too.\"\n\nRachel's face went red again as she looked down at the floor. I was impressed that Mitch, with so little experience with men, could recognize the taste of cum mixed with her mother's vaginal juices. Either she was taking a wild guess or she really did know. Rachel wouldn't look up at Mitch so Mitch looked at me instead. It was pointless to lie so I just nodded.\n\nMitch had a curious little smile on her face as she looked from me to her mother, who still wouldn't meet her eyes. She looked back at me and said, \"Do you have anything left in that thing for me?\" She pointed at my crotch as she emphasized the word \"thing\". That brought Rachel's face up. Instead of looking at Mitch, she looked at me as if to say 'Well do you?' My cock was already answering their question as it jumped hard in my pants. Mitch grinned when she saw the bulge in my pants. \"Well, look at that Mom; just when you think the game is over, there's a bonus round.\" Rachel grinned at Mitch and then shucked off her robe and slid over next to me. Mitch appraised her mother in her sexy red bikini and said, \"Mom? Just where do you think you can wear that bikini anyway. A woman your age shouldn't look that hot; especially one in your position.\" Rachel frowned at Mitch and then went to work on my zipper. I had never got the chance to buckle my pants.\n\nMitch just stood there watching her mother pull my cock from my pants. Rachel cradled my balls and then slid her fingers around the girth and wagged it at Mitch. She pulled her eyes away from my cock and looked at Rachel for a second and then back to my cock. Her hands went to the buttons of her blouse and she fumbled badly as she attempted to remove her shirt. She finally grabbed the bottom and pulled it up over her head. She was wearing a very sexy lace demi-bra. It was aqua-blue and her hardened nipples poked over the top of the cups. She yanked down her skinny jeans and fought with them trying to extract her feet. She was wearing a matching thong. She was incredibly sexy standing there like that and my cock pushed out to full dimensions.\n\nRachel felt the expansion and said, \"Holy Shit. It just gets bigger and bigger.\" She motioned for Mitch to come over and she offered my cock to her. She licked her lips as Mitch knelt down in front of the sofa and took my cock in her hand. Rachel was reluctant to release it but Mitch wrestled it away from her. Rachel slid off the sofa to her knees beside Mitch and watched her daughter start with and a hand-job and followed that up with a blow-job. She could only take about a third of my cock before she gagged; but that, along with her two handed hand-job felt fantastic.\n\nMitch switched from hand-job to blow-job/hand-job several times and even let Rachel join in with a blow-job too. Rachel could take nearly half of my cock into her mouth before gagging. That was way more than just a week ago. I figured she had been practicing on her new dildo. Mitch never relinquished my cock and she pulled it from her mother's mouth. Rachel frowned but she knew she had to share.\n\nAfter many minutes of blow-jobs and hand-jobs, Mitch pulled her mouth off the knob and stood up. Her thong was soaking wet and her face, neck and chest was flushed red from blood coursing through her veins. She was breathing very erratically. She pushed her thong off her hips and let it fall to the floor. She reached down and spread her labia to show how her clitoris had become so erect. It was almost purple. She extended her index finger and with feather light pressure touched it and her hips launched forward as her chest and head snapped backward. She groaned hard as her hips snapped back. She touched it again with the same reaction. Rachel had taken over stroking my cock as we waited for Mitch to make her move. \n\nMitch sucked saliva off her lower lip and moved lateral to us to the opposite end of the sofa. She climbed up with her knees on the seat cushion and her elbows on the back. She looked back at us and waggled her ass. I knew almost everything I needed to know. I stood up extracting Rachel's hand and moved up behind Mitch. I was ninety percent sure that Mitch wanted my cock in her pussy but there was that ten percent chance that she wanted me to fuck her ass. We had never done that and I was pretty sure she never had with anyone else. Still, I was sure Mitch was watching porn on the internet like her mother confessed to and she certainly could have seen it there.\n\nWhen Mitch looked over her shoulder at me and then reached back with her hands and spread her ass-cheeks to more thoroughly expose her already exposed anus, I had my answer. I looked over at Rachel to see her reaction. She was looking up at me as she lightly bit her lower lip. Rachel moved over close to Mitch's face and whispered, \"Are you sure Honey. I've never tried it but it looks like it hurts like hell. Are you sure you want this. His cock is awfully big.\"\n\nMitch smiled and whispered back, \"Mom, I've been trying it with that plastic dildo you bought. It's fucking incredible. I want to feel the real thing.\" She waggled her ass again.\n\nRachel stood up beside me and whispered, \"Be very gentle with her. Please.\"\n\nI nodded and whispered back, \"Go into Alexis' night-table and bring back her tube of lubrication jelly. I'll get her started.\" Rachel grinned and was gone an instant later. I pushed my bouncing cock down and guided it to her pussy. She pulled forward and lowered her ass indicating that she didn't want it in her pussy. I pulled her hips back up and tried again. She tried to lower her ass again but I held her in place as I pushed my cock into her pussy. She groaned hard, \"OH FUCK. THAT'S BIG.\" She relaxed after a moment and pushed back against me. My cock slid all the way to the bottom as she groaned the whole way in and then pulled out to the ridge and repeated a couple time.\n\nRachel hurried back into the room with the tube. I took it from her and squeezed a glob on the jelly on my palm and then pushed the tube to Mitch's anus and squeezed a generous amount around and into her anus. Mitch was so engrossed in the vaginal fucking she was getting that she apparently didn't even notice the tube touch her anus. She felt it when I pushed my finger in though. She reflexively pulled forward to escape my finger. I followed her ass with my finger until she had pinned herself against the back of the sofa and there was nowhere else to go. I pushed my finger inside and Mitch groaned hard as she dropped her forehead onto the back of the sofa. I leaned down and said, \"That's just one finger. Are you sure you want to do this?\" She nodded into the sofa and pushed herself back on my finger. \n\nI pulled my cock back and then out of her pussy. She groaned as the fat knob pulled out of her vagina. I took my palm that contained the glob of jelly and ran it all over the head of my cock and down the shaft to my balls. Rachel moved in close to watch. She was diddling herself and she couldn't resist replacing my cock in Mitch's pussy with her free hand. Mitch looked back at her mother and grinned and nodded.\n\nMitch's anus was gaping slightly from my finger and I guided my super-slick cock up to it. When it made contact, Mitch lurched forward again. I said, \"Last chance. Are you sure?\" Mitch vigorously nodded her head and pressed her tits into the back of the sofa to gain purchase to push back at me. I slowly and gently but steadily pushed my velvety crown against her gaping anus. Her constant groan rose in volume and pitch as I pressed in harder. She turned her head to look at Rachel. Her eyes were watering and her teeth were clenched with her lips pulled back like a feral dog.\n\nSuddenly, there was movement and my glans slid through. Mitch's groan went straight to a scream. I stopped and waited. This would happen several times as Mitch tried hard to relax her sphincter. I was patient and gradually Mitch was taking more of me each time. Rachel looked up at me and grinned as she knew she was going to watch her baby-girl get fucked in the ass.\n\nOnce my cock was fully embedded in Mitch's bowels I stopped and waited for Mitch to signal she was ready. She was reluctant to pull herself off my cock and she kept pushing on me like there was more of me to go. When she started to pull herself off me she discovered it hurt nearly as bad as going in. We went slow as I kept reminding her to go as slow as she needed.\n\nRachel, who had been squatting at Mitch's ass, suddenly fell back against the sofa as a self-induced orgasm crushed her. Her hips were humping up and down on her fingers. Her mouth hung open as she moaned out, \"AAAHHH AHHHH AHHH AHHHHH.\"\n\nMitch's concentration shifted from her anus to her mother's orgasm and she muttered, \"Wow Mom. That looks like a big one.\" With Mitch's distraction, I pulled my cock most of the way out and Mitch's attention was instantly pulled back to her ass. She groaned hard but she didn't scream. That was a good sign. I continued to slowly pull my cock back and with her sphincter at the ridge of my cock, I pushed more steadily back in. She groaned again but more so in pleasure than pain. \n\nIn another minute, I was fucking Mitch's ass and she wanted more and she wanted it harder. I was careful as I increased the pace. She reached down between her legs and pushed three fingers into her pussy to replace Rachel's fingers that had vacated Mitch's pussy when she had to attend to her own orgasm. I could feel her fingertips through the thin membrane separating her vagina from her bowels and it was adding to the urgency of my own pending orgasm. I doubted that Mitch would have an anal orgasm on her first time but a vaginal orgasm was probable especially with her frantic fingers pistoning in and out of her pussy.\n\nAs my orgasm became inevitable my cock grew harder and Mitch felt it too. She screamed, \"OH MY GAAWWDD. YOU'RE GONNA SPLIT ME IN TWO.\" Then only seconds later, \"OH FUCK. MOM. I'M CUMMING. JESUS CHRIST.\"\n\nRachel looked up at her scrunched up mask of a face and said, \"I see, Honey. It's a big one too.\" Rachel looked up at me and my face must have been all scrunched up too as she giggled at the sight. I groaned hard, \"OH FUCK. HERE IT COMES.\" My cock was so hard I thought it might split too. I was humping my hips at Mitch's ass as hard as I could and she was screaming from her own huge orgasm and the effect of mine.\n\nI spewed what seemed like gallons of cum into Mitch's bowels and she groaned with every single long, powerful spurt. They seemed to go on and on and on. Rachel was watching my hips firing and her smile turned to awe as she said, \"Holy Fuck Hunter. You're still shooting?\" Every muscle tensed and released over and over again as though it was my muscles ejecting cum from my cock like squeezing a wet sponge. I grunted and groaned from the first shot to the last. \n\nWhen I was done, I realized that Mitch was patiently waiting for me. She had recovered from her orgasm and was watching with fascination at my facial and muscular contortions. When I finally opened my eyes and looked down. Mitch grinned at me and said, \"Wow. What a ride.\" She turned to her mother and continued, \"Jesus, Mom. You've got to try that. A whole new experience. Holy shit.\"\n\nRachel grinned at Mitch and said, \"Perhaps some other time.\" I eased my cock out of Mitch's anus and it was gaping wide open at least a couple inches and slowly closing. Rachel moved around to see and she gasped at what she saw. Mitch heard her and wanted to know why. Rachel said, \"Nothing Honey. Your butt-hole is gaping open but it will go back to normal.\"\n\nMitch tried to see but her efforts were useless. She settled for putting her fingers there and she gasped too. \"Holy shit.\" Her eyes were wide. Then she laughed and said, \"Fuck, I could hide all kinds of things in there.\" Rachel started laughing too. \n\nI went to the bathroom for a washcloth to clean my cock and her ass. When that was done I moved over to the recliner that Rachel had been sitting in. Rachel and Mitch got up on the sofa. Mitch had stuffed the washcloth between her butt-cheeks to collect the gobs of cum leaking out of her. \n\nRachel stood up and handed me the robe she had taken from the master bathroom. She extended her hand to Mitch to pull her off the sofa. She clamped the washcloth between her thighs and bent down and grabbed her clothes. She pulled her jeans on leaving the washcloth in place. She unbuttoned her blouse and pulled it on. Rachel buttoned her blouse up and said, \"We don't want John wondering what we are doing over here.\"\n\nMitch said, \"Oh come on Mom. He knows exactly what we're doing over here.\" She giggled at her mother's naivet\u00e9.\n\nAfter Mitch and Rachel left, I rummaged through the refrigerator and cabinets for anything to eat. We had purposely let our stores dwindle to nothing in anticipation of a month long hiatus for semester break. We had done such a good job that I actually found nothing to eat. I gave up the hunt. I went to the bedroom and climbed up on the bed and called Alexis. I just wanted to hear her voice. We talked for two hours. She'd had Fiona over for a 'thing', as she called it. Fiona lives in a high-rise apartment across the street at about the same floor level. We sent air-kisses to each other and I told her I loved her and she said the same. She hung up and I pressed the 'end' button on my phone. I fell asleep without even getting undressed or under the covers.\n\n*****"
    ],
    "authorname": "BigZeke13",
    "tags": [
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-38"
}