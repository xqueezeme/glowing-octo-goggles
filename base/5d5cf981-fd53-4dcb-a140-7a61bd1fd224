{
    "title": "Not in That Way Ch. 05",
    "pages": [
        "Chapter 5: An emotional night finally brings out the truth\n\n.\n\n.\n\n.\n\n.\n\n.\n\nA few days after the explosion, Gabe sends me a text that he's leaving for the funeral. I try to talk to him some more but it's clear that he's preoccupied. He sends me an apology later on, saying \"Just trying to get through this. I promise we'll talk when I'm back.\"\n\nI acknowledge it, not able to imagine the flurry of emotions he must be dealing with.\n\nHe takes the train back to our hometown and drives down to Fresno with his mom- both of whom feel extremely uncomfortable about the whole thing. After he left my place that day, he had a long talk with his aunt- mostly going over details of the arrangements she wants his input in.\n\n\"How the fuck am I supposed to pick out flowers for a man I haven't spoken to in years?\" Still, he plays along, doing whatever he can to get through this and hopefully bury his trauma along with his father.\n\nI tell my family- partly because my parents actually knew Gabe's dad and partly because I can't possibly deal with this on my own. Grace is immediately spitting off question after question, scrambling to see what they can do for Gabe and his mom. They're family at this point- and there's nothing we wouldn't do for them.\n\n\"I just don't know what I'm supposed to do, Grace!\" I say, frantically in my empty apartment.\n\n\"I don't know if I'm supposed to agree with everything he's saying- which includes shit talking his dad who I barely spoke to.\" I sigh, \"Or if I'm supposed to try and play devil's advocate.\"\n\n\"How was he the last time you spoke to him?\"\n\nI sigh, \"On edge. Then again, he's always like that whenever we'd talk about his dad.\"\n\n\"He needs to let it out, Dustin.\" She says, calmly. \"He's probably kept all these emotions in for years and you're the only one that he trusts to listen.\"\n\n\"Okay.\" I say, feeling a bit relieved. I thank her and she tells me she'll call me later with whatever she and Andy have planned.\n\n***\n\nIt's almost evening when I get to Gabe's apartment, carrying bags of stuff up as I use my spare key to get inside. I've never used it when he's not around- that's in the list of things that boys with crushes shouldn't do. But he's got bigger things to worry about than me stopping by.\n\nI step inside, and there's this scent in the air that comforts me. It smells like him- like your friend saying the jacket you lent to them smells like your house. I can't exactly make out what it is, but it smells like Gabe.\n\nI go into the kitchen and move some stuff around in his fridge to make room for all this food. Grace had me swing by her house to pick up a week's worth of meals that she and Andy made, along with some other stuff from the kids. She figures that I'm carrying the brunt of emotional support, so the least she and Andy can do is give him something tangible. I stack them accordingly, making sure to keep her reheating instructions intact before hearing the front door open.\n\nI close the fridge, calling out, \"Hey I'm here\" so as not to scare him.\n\nGabe walks in and his face softens when he sees me. He's still dressed in a suit, but with the cuffs undone and the tie simply hanging from his neck. He looks exhausted- like a person with a fear of heights who spent the day on rollercoasters.\n\n\"Dust.\" He says softly, \"What are you doing here?\"\n\n\"Grace asked me to drop over some meals. She and Andy didn't want you to have to worry about cooking for a while.\" I say, opening the fridge to show him. \"My parents did the same thing with your mom.\"\n\nI reach over to the last unopened bag and pull out a large piece of paper that Grace had laminated. \"The girls- they don't really understand what's going on. Andy just told them that Uncle Gabe is really sad and they wanted to draw you this picture to cheer you up. They even gave Mikey a crayon- that's what those little scribbles in the corners are.\"\n\nGabe takes it from me and examines it. I can see his hands trembling as the paper moves, the more he holds onto it. He presses it against his chest before carefully setting it on the counter.\n\nHe pulls me in for a hug and I press into his body, hoping my touch and do more than my words ever could.\n\n\"Thank you.\" He says softly. \"I don't deserve you guys.\"\n\nWe let go and he motions me to the couch. He sits and lets out a relieving sigh- like he's been holding it in all day.\n\n\"How was the funeral?\" I ask.\n\nHe shrugs, \"As good as it could have gone, I guess.\"\n\n\"Once we got there, everyone made sure to give me time alone with him before all the guests came.\" He paused \"It was surreal- seeing him lying like that in the casket. I hadn't seen him in so long that I almost didn't recognize him, apart from the name tag on that Army uniform.\"\n\n\"I wanted to shake him and ask why he had to leave.\" he says, as I see him start to crumble.\n\nHe shakes his head, \"My mom refused to go in. We got to the parking lot and she admitted that she only came to make sure I was okay. She made peace with his absence years ago\" He looks at me, \"I get it, I really do- I mean I don't think anyone expected his ex-wife to come...\"\n\n\"But that left just me- awkwardly sitting there while people I barely knew came up and told me how much he'll be missed and how great of a man he was.\"\n\nHe spits out, \"How the fuck am I supposed to take all that, Dust?\"\n\nI shake my head, not knowing how to respond. I just sit there and let him uncork the bottle of pressured emotions that so desperately need to be released. I reach for his hand and he takes it willingly, and holds onto it like it's the only thing that's keeping him together.\n\n\"I'm sitting next to my Aunt Isa who spends the whole time balling her eyes out because of how much she loved her brother. And then there are these cousins that I barely knew, and they're all sad because they miss their uncle Manny.\" He shakes his head, \"There was even his old Army buddy who admitted that he didn't even know he had a son.\"\n\n\"Why was I expected to just sit there and cry for a man who didn't accept me?\" His eyes welled up with tears.\n\n\"Why wasn't I good enough for him?\"\n\nGabe breaks down in front of me as he tears off the jacket and struggles with the buttons at his cuffs. He tosses the tie aside and undoes a few buttons on his shirt, forcing air into his chest.\n\nI steady him and grab onto his fists, feeling him struggle with me for a few minutes before I manage to subdue him. For a minute, it felt like he'd forgotten it was me trying to calm him down, and not one of the strangers at the funeral home. He softens, feeling almost guilty for putting up a fuss.\n\n\"Gabe.\" I say decisively, but he hides from my face. \"Gabe!\" I say again, this time, forcing him to look.\n\nThere's so much pain in his eyes, I feel mine well up with tears too.\n\n\"It's not your fault that he left.\"\n\nHe shakes his head, \"But it is, Dust! You don't understand! He left because of me!\" He's crying so fucking hard at this point- this is the most broken he's ever been and part of me worries, he won't be the same after this.\n\n\"He made a huge fucking mistake!\" I cry with him.\n\n\"You're the best person that I know. How could anyone leave you?\"\n\nI yell back as I dig my face into his shoulder, feeling his arms wrap tightly around me.\n\nI know I was supposed to talk him down. I know it's my job to comfort him. But these emotions are hitting too fucking hard that I can't help but feel.\n\nTime passes until the both of us don't have anything left to cry. We let go, finally, and I feel him tugging at his shirt like it itches.\n\n\"I need to get out of these clothes.\" He says before pulling it off and undoing the top of his pants. I try not to look as he turns and walks into his room. He comes back after a few minutes in a hoodie and sweatpants.\n\n\"Feel better?\"\n\nHe nods, \"it felt like I was ripping off a costume for a role I was supposed to play.\"\n\nI watch as he goes into the kitchen and comes back with a six pack of beer. He gestures to the door, \"Let's go up to the roof.\"\n\nIt's weird, considering how cold it's been lately. But I nod and follow him up there anyway. Maybe he needs fresh air, and god knows I could use some too.\n\n***\n\nWe get up to the roof and there's a pair of lawn chairs set up by the landlords. Gabe sits on one and I follow suit as he places the six pack between us. We tap our bottles together and watch as the night sky fills everything between the buildings that fence us in.\n\nGabe is clutching that bottle of Heineken as he reaches into the recesses of his exhausted state and pulls out a memory.\n\n\"Do you remember that night of Homecoming Senior Year?\"\n\nI take a swig of mine, not sure where he's going with this. Part of me feels like we haven't fleshed out what happened earlier, but another part of me thinks that Gabe could use this trip down memory lane as a distraction.\n\n\"The night when Michael Tran showed up with Anna Stanford even though he promised we'd go together?\" He nods.\n\n\"How could I forget? We were secretly dating for three weeks and somehow I thought that Homecoming Night could be the push he needed out of that fucking closet. But instead, I sat in disbelief next to you and Mel as he walked in with Anna like I never even existed.\"\n\n\"And do you remember what else happened that night?\"\n\nI nod, \"I remember Mel flipping some switch and ditching you for the rest of her friends which left the two of us alone in tuxes, without dates or any clue what to do next.\"\n\nI rode the wave of nostalgia as it all came back to me. \"We bailed after a couple songs and you were doing everything you could to cheer me up.\" I laughed, \"I remember you snuck into the hotel kitchen and stole a bottle of champagne- determined to salvage that shitty night.\"\n\nGabe is looking at me with a smile on his face as I retell the story.\n\n\"You led us outside the ballroom to this small clearing in the back courtyard with just a few overhead lights and the sound of the DJ still pretty loud from where we were.\" He smiled, \"You took some swigs of the bottle and forced me to my feet where you proceeded to pull me into a half slow dance-half us trying not to fall on our feet. You looked at me and said.\"\n\nGabe cut me off, repeating the words I heard that night. \"I said, 'Dustin Green, can I have this dance?\"\n\nI rolled my eyes- the second time I'd done that after hearing that phrase verbatim. \"And then you proceeded to insist that we have at least one dance- that we only got one Homecoming, and that we'd look back on that night and laugh about how we'd have a better time just the two of us, than with any date.\"\n\nHe smirks at me, \"Isn't that what we're doing? Wasn't I right about that night?\"\n\n\"You were.\" I corrected, \"You are.\" I took another sip of my beer, \"That did make for a memorable- less shitty night.\"\n\nHe nodded as our laughs died down. Gabe looks off to the distance, filling the space between us with silence. Finally he spoke up as I neared the bottom of my bottle.\n\n\"There's more to that night, you know.\" He says, ominously.\n\nI shake my head, \"How could there have been more to that night? You dropped me home and we both went to bed.\" He stayed quiet for a few more minutes, almost like he wished he hadn't said that.\n\n\"Right?\" I asked again.\n\nGabe sighed, \"Mel didn't just flip a switch and ditch me. I pulled her aside when you went to the bathroom and told her some bullshit that I didn't wanna go with her in the first place. She called me an asshole and stormed off.\"\n\n\"Why the hell did you do that? You'd been talking about taking Mel for weeks! And she avoided you for the rest of the year because of that!\"\n\nHe shrugged his shoulders, \"I needed to get rid of her and that's the only thing I could think of.\"\n\nI peered my eyes, still trying to understand, \"Why did you need to get rid of her?\"\n\n\"Because Michael fucking Tran showed up with another girl and it crushed you!\" He finally spat out. \"And there I was, all dressed up with the girl I'd been wanting to go with for weeks and I couldn't stand to enjoy any of it because my best friend was so miserable.\"\n\nHe adds, \"You were two seconds away from leaving and spending the night at home, alone.\"\n\nI sat there in disbelief, remembering how raw it all felt that night. I felt gutted, and the only reason I kept it together was because of Gabe.\n\n\"I can't believe you forfeited your shot with Mel all so you could comfort me.\" I pulled him into a hug and was greeted by his warm embrace and the faint scent of his cologne on my skin.\n\n\"I didn't even think about Michael after that night.' I chuckled, \"All I could remember was the two of us dressed all fancy, drinking champagne and faking our way through a slow dance.\"\n\n\"That was the first time anyone's gone out of their way to make me feel better.\" I admitted.\n\nHe sighed, once again filling up that space with silence. There was more that he wasn't telling me, but I needed him to release it at his own pace. I caught him staring down the nose of his bottle, almost like he was filling it with secrets that he could cap off and toss into the ocean, never to be found.\n\nGabe was the type of person that you could know everything about, but still leave, thinking of him as this mystery.\n\n\"I'd had this feeling- this inclination- since we became friends.\" He starts.\n\n\"I guess it all started when we hung out and I saw how kind and compassionate you were. I know I came off really strong, but that's just because I wanted you to like me so bad.\"\n\nI don't respond, feeling like he was releasing pressure on a hose he'd kept shut for years.\n\n\"And then when we were outside and you finally agreed to dance with me, I remember feeling so happy.\" He's smiling up at the sky. \"You were there and all I kept thinking about was how handsome you looked in your tux, how perfect the night was with just the two of us, and how Michael was a fucking fool for choosing to go with anyone but you.\"\n\n\"You looked at me with those green eyes while we swayed and it was in that moment, I knew there was no question about who I was.\"\n\nI gulped, feeling all the noise of this city disappear until only Gabe's words were left. \"Why are you telling me all this?\" I asked as I searched for his eyes, \"Why now?\"\n\n\"Just let me finish, Dust.\"\n\nI nodded as he took a last sip and tossed the bottle into the trash can. I heard the glass break as it hit the concrete sides, certain that any hopes of casting messages in bottles were shattered.\n\n\"That night wasn't a good time. I had enough sense to know that telling you- after Michael had dumped you, and after we'd both been drinking. You just deserved better than that.\" He sighed, \"So I dropped you off and went home.\"\n\n\"I got to my house and sat in the driveway for twenty fucking minutes just trying to talk myself through what I was going to do. And I wanted to call you, I really wanted your advice, but I just couldn't\"\n\n\"What are you trying to tell me, Gabe?\"\n\nHe looked over with those eyes- the ones I've stared into dozens of times, hoping he wouldn't notice. \"I told my parents that night, Dust.\" He said with heavy breaths, \"I finally just went in and they were both awake in the living room and I told them.\"\n\n\"I told them I was gay.\"\n\nMy heart sank. I thought back to all the conversations we've had since then- all the times after he came out to me and, thinking back now, Gabe was always pretty vague about it. He's an open book, except when he's not.\n\n\"How did they take it?\" I ask, bracing myself for an answer I didn't want to receive.\n\nHe gripped onto the edge of that plastic chair and I swear I could feel the pressure reverberating to where I was sitting. \"My dad was immediately in denial- he got up and kept saying that I was confused or that it was some phase.\"\n\nI listened as a bitter taste filled my mouth and numbed my tongue.\n\n\"I tried to tell him that I knew- that I'd always kept it in the back of my mind. But that night, it just felt like it needed to be released.\"\n\nHe shakes his head, \"And then he started yelling. He walked up to me and started screaming to my face, telling me how he wouldn't allow his only son to be a faggot- how he should have known because I only hung out with you and that there would be no coming back from this.\"\n\nI felt my chest start to close up. Even just hearing this second-hand, I felt like I was there- like I was right beside Gabe, taking the verbal abuse with him and feeling so insignificant. The buildings around us grew taller, and I felt like I couldn't move.\n\n\"I've never been more scared, Dust. I just stood there, trying not to cry in order to prove to him that I was stronger than he thought I was, but he just kept yelling. He told me that he wouldn't allow it, and that I'd have to change. And then my mom started crying and telling him to stop.\"\n\n\"I can still hear her yelling out his name, begging him to accept me. She kept reminding him that I'm their son, but he refused to listen.\"\n\nIn shaky breath, he looked at me with those tear-soaked eyes. \"We were having the best night and I was so sure that I wanted to be with you- I was so sure of us! And then it ends like that, with my dad slamming the door to the guest room and my mom sobbing on the couch, unable to look me in the eye.\"\n\n\"Oh my god, Gabe, why have you never told me this? You're supposed to be able to tell me everything!\" I said, swinging an arm over him and feeling his body tremble under my touch. I knew how much of a hypocrite I sounded just then, like all my years of repressed truths could ignite and have me burning at the stake.\n\n\"How could I tell you of all people about the worst night of my life? What was I supposed to say, Dust? That I realized I had feelings for you, and that coming out to my parents tore my family apart? I couldn't force that on you!\"\n\n\"I know that in all the years we've been friends, I've managed to drag you into my shit, whether you asked for it or not. But this time, I had a choice, and I knew you didn't deserve that.'\n\nI wanted to scream out that he should have told me sooner- that we don't keep secrets from each other. But the cold air swept across me like a slap in the face- reminding me that there are things I haven't told him.\n\n\"I've always had feelings for you since then.\" He finally admitted, \"But every time I work up enough courage to do something about it, I'm brought back to that night. I'm seventeen and my asshole father is telling me how worthless I am for being gay and that you were to blame.\"\n\nHe finds my eyes, \"It's so fucked up how much of a hold that has over me.\"\n\nI want to tell him it's okay. I wanted to just accept this hidden truth so we can move past it, but I still have questions. I still feel like he's half with me- half running away.\n\n\"Why can't we be together?\" I ask.\n\n\"You admit that you have feelings for me, and I know that you can't possibly be that oblivious to not see that I've been in love with you since we were seventeen.\" I tear up, \"So why, Gabe? Why were you able to date every other guy except me?\"\n\nGabe's face goes cold. It feels like the two of us have rehearsed this conversation in our heads multiple times, but seeing it play out feels too real.\n\n\"Because I'm going to fuck it up!\" He spits out. \"I'm gonna fuck it up and then you're going to leave and disappear and be anywhere in the world except here with me!\"\n\nHe wipes his eyes, \"You're the best thing that's ever happened to me, Dust. And I can't physically take the thought of losing you.\" He reaches for my hands and I turn to face him. Our knees fall easily between each other like a zipper.\n\n\"I'm scared of losing you too.\" I say with shaky breath. \"But this thing- this little game that we play where we pretend the other person has no fucking idea-\" I shake my head, \"it's eating me up to where it hurts being around you sometimes\"\n\nHe nods, knowing exactly what I'm talking about.",
        "\"I want to be with you, but I can't help but feel like you deserve so much better than I could ever offer.\"\n\n\"Where does that leave us, Gabe? We can't just go back to normal- not with everything that's been shared.\"\"\n\n\"I'm trying.\" He says, gripping onto my hands, \"I'm trying to move past that fucked up shit all those years ago and be the guy who deserves you.\"\n\nHe sinks his head down, \"But I'm scared. I've always been scared.\"\n\nHe's pleading in front of me, begging for me to not give up on him. Part of me thinks we'd both be better off if we tried to forget about each other.\n\nBut it's Gabe. It's the boy I've been in love with for nine years telling me that he has feelings for me too. It's messy and this whole thing is fucked up, but deep down I understand why things had to be the way they were.\n\nI reach up and pull his face back up, pressing my forehead against his. \"I'm scared too.\"\n\nEventually the cold sets in and we go back down to his apartment. We're silent, but I catch him looking back every so often, making sure I'm still following him.\n\nWe make it back to his place and I grab the empty totes from his counter, thinking that we've said all that could have been said tonight.\n\nI turn, ready to reach for the door when I hear his voice. \"Dust.\" He says softly, \"Don't leave.\" He reaches for my hand and I can feel him rubbing his thumb against my palm.\n\n\"Please stay with me.\"\n\nI want to tell him no. I want to tell him that all of this is too confusing- that there was so much said tonight and that I need to be alone to process it.\n\nBut I also want to stay.\n\nI nod as he reaches over and turns off the overhead light. He leads us into his room and I watch as he strips out of his clothes, leaving only his pair of boxers. I know that's how he sleeps and I know that I can't possibly fall asleep wearing as much clothes as I am. So I strip too, seeing him take in my body like he's seeing me in a new light. We stand there across each other from the bed as he slips in, and I follow him. I face the wall after drawing an invisible line that I tell myself not to cross.\n\nIn all our years of friendship, we've never slept in the same bed together. Even when we were in high school and before I knew he was gay, I always found a way to avoid it. It always just felt too intimate, and I couldn't allow myself to get confused at one-sided moments like that.\n\nGabe throws all that out the window. He comes up behind me and I can feel his arms surround my body. I can feel the warmth of his flesh and the soft hitches in his breath after having cried earlier.\n\n\"Is this okay?\" He asks with his breath on my neck.\n\n\"Yeah\" I reply, not caring about anything else except the lack of space between us.\n\n\"Good night Dust.\" He says to me, before falling asleep. I listen to his breathing for a bit and press my back further into his as his fingers interlock at my chest. It feels good- too fucking good- like this. And after a few seconds, I'm knocked out too.\n\nFor the first time in nine years, I can't hear that clock ticking anymore."
    ],
    "authorname": "thealphamale",
    "tags": [
        "romance",
        "latino",
        "interracial",
        "erotica",
        "gay romance",
        "best friend",
        "attraction"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/not-in-that-way-ch-05"
}