{
    "title": "Duplicity Ch. 03",
    "pages": [
        "Hello everyone- I hope you enjoy this chapter. Don't be shy and please comment. Not only does it really make my day when I read them but I often get ideas for your observations. ;) So thank you in advance for your comments and ratings. Also many thanks to honeybree for her great editing.-p2p\n\n*\n\nWhen they got back to Santorini it was evening and there was a visitor waiting for them. The man was tall, had pasty white skin and dull gray eyes.\n\nHis hairline was receding as if his hair had found out some shocking news and decided to run for cover.\n\nHe had a greasy cowlick styled to one side. His bushy brown mustache collided with his nostrils and he wore eyeglasses. He was a heavy set man. Under his long-sleeved shirt you could see his squishy thick arms. His large pot belly set itself up high and was adorned with a fanny pack. His khaki pants were a bit too short and his white tube socks were visible.\n\nHe smiled as if excited to see Sienna and Jason.\n\n\"Can I help you?\" Sienna asked.\n\nJason squint his eyes at the sight of the stranger. He chuckled but quickly covered it up with a cough.\n\n\"Princess, don't you recognize him? It's cousin Merle, from Long Island.\"\n\nSienna wrinkled her brows but then smiled. She giggled and gave Merle a tight hug.\n\n\"Welcome to the island, Merle. We're so happy to have you! And this is Layla our wedding planner.\"\n\nLayla shook the hand of the groom's cousin in a professional way while Merle creepily stared at her through the top of his glasses. His gaze was steady on her every move.\n\nShe slightly cringed inside. Eww...as if. She thought.\n\nLayla knew she had not lost her mind as of yet. This guy's looks couldn't be saved even being related to Jason Bane. He must have gotten daily beatings with the ugly stick.\n\nLayla suddenly remembered a couple of excuses to get the hell out of there... and away from gross cousin Merle.\n\n\"If you will excuse me, I really must go tend to some arrangements. It was nice to have met you Merle.\"\n\nMerle nodded and watched her walk away.\n\n\"Why don't you come inside? We really should catch up.\" Jason said and made arrangements for his luggage to be brought up.\n\n\"Let me show you to your room... Merle.\" Sienna grabbed his arm and sped away with him to the 4th floor.\n\nThe room they chose for him was purposefully isolated from the rest. Layla's room was the closest but was still around the long hallway's corner. It was like a studio apartment, he had all of the essentials he would need.\n\nHe had a fully stocked kitchenette, completed with a full bar, a master bathroom, a separate living room with a sofa and a balcony. Sienna and Jason wanted him to feel comfortable so he would stay as long as possible. They also set up an adjacent room as a gym for him. And coincidently the room's position in the house was centrally located in case of an emergency.\n\nWhen they got to the room, Sienna closed the door and couldn't contain her laughter and excitement as she bounced on the bed.\n\n\"Holy shit Sean! I didn't even recognize you. How did you manage to look like a pudgy older white guy?\"\n\nSienna started poking his arms and was amazed to find the fake skin was soft and realistic. His hands were his own but it didn't look completely out of place. Any exposed skin on his neck, face and hands were airbrushed to a natural-looking peach color.\n\nBefore he could respond there was a knock on the door. Sienna peered through it slightly and then opened it to let Jason in.\n\n\"Welcome man, we've been waiting for you to arrive.\" Jason clasped Sean into a one armed hug. He couldn't help but laugh in wonder as he inspected Sean's disguise.\n\n\"God damn Sean, this is amazing. It looks so real. When I sent you pictures of my family I didn't know what to expect. But you really look like we could be related. But I guess you got all the nerdy unattractive genes.\"\n\nSean scoffed and said, \"Yea, I guess I did. So you don't have to worry... you get to stay the pretty boy of the family. The disguise isn't perfect but it'll do. If Sienna couldn't recognize me then we should be fine.\"\n\nSienna nodded but cautiously said, \"But did you have to look so...\"\n\n\"Ugly?\" Jason finished the question.\n\n\"Geez, you people are making me feel like a science experiment gone wrong... Listen, when you're trying to blend in, you should try to always look low key. You'd be surprised how easily unattractive people get overlooked.\"\n\n\"That makes sense.\" Sienna put her hands to Sean's cheeks and squeezed them as if touching a baby. She looked into his eyes.\n\n\"The details on this thing are amazing... You even have bluish gray contacts to match Jason's eye color. Where did you get all this stuff anyway?\"\n\n\"I got my connections...\"\n\nIt was obvious from Sienna's expression that she expected him to elaborate.\n\nSean sighed. \"Alright alright, it's basically from a manufacturer that sells to mayor movie studios. I got a hookup from a guy I did a favor for once. He can design any mold to look just like anyone. But this disguise is a bitch. I have a full body suit underneath and it's hot as hell. I'm carrying about 60 pounds of extra weight. But it will work because I can wear anything and I'll look like a normal overweight guy. I even brought Merle some swim gear to impress the ladies.\" Sean chuckled as if he couldn't wait to get into his persona.\n\n\"Oh no, don't tell me Merle likes Speedos...\" Sienna made a face.\n\nSean laughed. \"Hey take it easy on cousin Merle. It's not easy being a big guy.\"\n\n\"Well, I hope you can take the heat. It gets really hot on the island sometimes.\" Jason said.\n\n\"Please... I'm a professional. But speaking of bringing the heat...\" Sean looked off towards the door. \"I think I'm going to like my stay here.\" He said smugly.\n\nAlready knowing where Sean's mind was going, Sienna shook her head and tutted disapprovingly.\n\n\"Hey Casanova, you might want to dial it down a notch. You look just like the serial killer from that movie The Lovely Bones. I think you should go for more of the mysterious quiet type. Layla is very reserved and proper. There is no way she'll venture out to play with you... especially not with cousin Merle.\"\n\n\"What? Cece... I was talking about the weather here.\" Sean said cheekily.\n\n\"Uh-huh. Sure you were. I know my brother a little too well I'm afraid.\"\n\nSean reached out and kissed the top of Sienna's head and smiled. \"Yes, you do.\"\n\n\"So I think we should always refer to Sean as Merle. Just in case we slip up somehow. I know it'll be hard but we have to help Sean remain in character.\" Jason reasoned.\n\nSienna and Sean nodded in agreement.\n\n\"I hate that fucking name by the way.\" Sean grumbled.\n\n\"Hey! Show some respect, it's a family name.\" Jason said good-naturedly.\n\n\"Well I have to say that I'm impressed, Shhu... I mean Merle.\" Sienna said quickly.\n\n\"Cece, don't think too much about it. Just focus on how I look at that moment and remember that I'm Merle... and Sean.\" Sienna wrinkled her eyebrows while Jason scratched his head.\n\nJason and Sienna said their goodnights and left him to get settled for the night.\n\nSean removed the body suit and all the props and felt immediate relief. It was like he could breathe again. He would have to get used to wearing it most of the day. He unpacked and carefully arranged the closet so \"Merle's\" clothes were neatly in front while all the disguise materials were behind.\n\nSean took a long hot shower as his mind drifted to what was to come. He hoped his plan worked. He was so preoccupied with his thoughts that it wasn't until the water began to cool that he realized how long he'd been in.\n\nIt was odd to be back with Sienna and Jason. He was surprised at how quickly their relationship blossomed. And Jason was quickly becoming the brother he never had.\n\nAs he stepped out of the shower he got goose bumps as the cold air touched his tanned skin. Sean toweled his heavily muscled body and tied the large towel at the waist.\n\nHis moist chest rippled and tapered off into pronounced abs and obliques topped by a sprinkling of hair. His throbbing veins ran up and down his arms. And his bright green eyes caught sight of it.\n\nThe scar on his right shoulder reminded him, of his recent travels. It reminded him of the task that was to come.\n\n_______\n\nThe next couple of days went by quickly. Sienna spent a lot of time with 'cousin Merle.' They discreetly talked about old times and about future plans. Even though there was still some residual ache in the pit of their stomachs; they trudged on and were grateful to have been reunited. It was time to heal.\n\nWhen Sienna or Jason weren't around, Merle kept to himself and barely spoke to anyone else. It was interesting how people reacted to his disguise. For some reason, people seemed to talk to him even without him initiating conversation; they felt comfortable around him. The housemaids enthusiastically chatted with him about their home life or what problems they were facing. Merle just took it all in stride.\n\nHe could always be found in a spot off to the side of the courtyard's bar. He would read, work on his laptop and drink... but mostly drink. A habit he picked up in Afghanistan.\n\nFrom that vantage point it was easy to see all the movement in house. And there was a lot of movement. The place was slowly transforming into an elegant reception venue.\n\nThe workers would come and go, bringing materials in. They put up reams of white fabric and with it create a massive tent-like structure.\n\nMerle kept close watch. He had to observe any suspicious behavior among them.\n\nBut most of all he observed Layla. She was an interesting character.\n\nShe was definitely a leader. She directed decisively and was available when any employee had any questions. Everything was handled gracefully and with decorum.\n\nWhen she spoke... people listened.\n\nShe didn't seem to smile much though.\n\nWhen the table linens mistakenly arrived in an off-white color instead of bone; she demanded their immediate return. She hadn't even opened the package completely and knew it was wrong.\n\n\"Off-white is off-white and bone is bone\". She patiently explained to the phone representative. She had only been on the phone for 15 minutes and somehow managed to talk directly to the owner of the company.\n\n\"Yes, well close enough will not suffice. The words... close but not quite, will be what your company says when asked if your linens were used in the Bane's wedding...\"\n\nLayla continued, \"Mm-hmm. That's what I like to hear. I'll expect the replacement package here bright and early tomorrow morning. Thank you.\"\n\nWhen Layla hung up, she happened to catch Merle's gaze. It stopped her momentarily but she continued her tasks unfazed.\n\nHer quick dismissal bothered Merle. Even though his goal was to not draw attention to himself... she didn't have to seem so unaffected by it.\n\nHe refilled his flask with straight up vodka at the bar.\n\nLayla walked outside down to the entrance of the long driveway. She needed to ask the guard about another delivery she was expecting. Merle didn't know why but he followed her.\n\nLayla was handling a box cutter with some orders that had just arrived. She was going through her mental checklist of the things she needed to do.\n\n\"For fuck's sake... be careful handling that thing.\" Merle's annoyed deep voice grumbled behind her.\n\nAs Layla turned to see him, he took another swig of alcohol from a flask.\n\n\"Isn't it a little early to be drinking, Merle?\"\n\n\"Never too early, never too late for alcohol. And don't you ever stop working? I swear you're like a machine.\"\n\n\"It's my job... I'm not here for vacation. This wedding will go on without complications.\" She said as she continued to cut open the box. Unfortunately, she accidently applied too much pressure with the cutter. It slipped and nicked a slice down the side of her thumb.\n\nShe let out a surprised scream and cursed herself for allowing her concentration to slip.\n\n\"Shoulda listened to me.\"\n\nLayla inhaled and exhaled. This was partly because of the sting and partly because Merle was annoying the hell out of her.\n\nShe was seriously thinking of sharing the pain with that handy box cutter. But it wouldn't be appropriate to have an all-out knife fight with the groom's cousin.\n\nWithout asking, Merle grabbed her hand and looked at the wound.\n\n\"This is going to get infected if I don't do this right now.\"\n\nMerle's brow scrunched in concentration.\n\nHe had this self-righteous confidence as if he knew exactly what he was doing. He lowered his lips to the wound and gently blew on it.\n\nHis breath vibrated throughout her body. Suddenly Layla was uncomfortably distracted by his presence. She never noticed how tall he was before or how massive his chest was.\n\n\"It's not that bad. Just a light flesh wound. Now hold still... this is going to sting like hell.\"\n\nMerle looked at her deeply and she felt herself slightly shivering. There was something about the intensity she found in his eyes that knocked her off kilter.\n\nHe had these eyes that just looked right past you, through you and into you... all at the same time.\n\nMomentarily forgetting about her hand; she felt open and exposed... she recoiled at the possibility.\n\nHe pulled his flask and poured the contents on her hand.\n\nShe felt the sharp sting. But in truth, what bothered her more was that she wondered what it would be like to kiss him.\n\nMerle pulled out a clean handkerchief he had in his back pocket. With one hand on the liquor flask and the other holding hers steady... it seemed he was out of hands.\n\nHe slowly lowered his mouth to the handkerchief and with his teeth tied the ends tightly around her hand.\n\nLayla followed his every movement. She felt herself get wet from having his lips so close and knowing that his teeth were tugging her secure.\n\nThe pressure and sting set in and it broke Layla out of her trance.\n\nLayla cleared her throat and whispered, \"Thank you.\"\n\nMerle nodded and walked away.\n\nIn truth he didn't really have to pour alcohol on her immediately. She could have safely walked back to the house and gotten treated with a first aid kit.\n\nBut he had this irrational impulse to heal her, punish her and heal her all over again.\n\n_________\n\n\"Hey there you are. Jason and I wanted to see if you wanted to go out to dinner. There's this little place on the other side of the island.\"\n\n\"Fine.\"\n\nSilence.\n\nSienna stopped walking and faced Merle. Sienna squinted her eyes... intently studying his face.\n\n\"You know it's funny that even though you look like this completely different person, I can still read you.\"\n\nMerle sighed, \"Spit it out, Cece.\"\n\n\"Nothing, I just wanted to see how you're doing.\"\n\n\"I'm fine.\"\n\n\"Yea, keep telling yourself that. You're not fine. Something has gotten under your skin.\"\n\n\"What do you want from me?\"\n\nSienna inhaled and exhaled. This was obviously not going in the direction she wanted. She would just have to try another time. She wondered how she could get him to open up to her.\n\n\"Actually, I need you to go into town tomorrow and get your measurements for your tuxedo. Layla will get you all set up. And I hope you don't mind but I've volunteered you to help her with some wedding stuff.\"\n\n\"Me... You want me to help that woman who looks like she has a permanent stick up her ass?\"\n\n\"She's not that bad. And yes, so stop complaining. She needs the help. She's been working hard and you seem to just be sitting there... alone.\"\n\nMerle silently grumbled, \"Well don't be surprised if I replace that stick she has up her ass wi-\"\n\n\"What was that?\"\n\n\"Nothing.\"\n\nSienna gave him a hug and walked away. Shaking her head and laughing to herself at what she heard him say.\n\n______\n\nThe next morning, as always Sean woke up at dawn. It was his routine and he needed little sleep. He put on some sweats and a hoodie and sneaked off to the small gym next door. He needed to work out. He seamlessly ran 5 miles on the treadmill, did some weights, pushups and sit-ups. By the time he was done, he was covered in sweat. He took a shower and made some coffee in his room.\n\nThen he went through his routine in creating Merle. He airbrushed his hands, neck and face. Slipped the body suit on and made sure all the seams were undetectable. He affixed his silicone nose and with a liquid adhesive brushed the edges down. He then set his bushy mustache and eyebrows. He made sure his greasy strands of hair clung to his bald head. He added some finishing touches to the airbrush makeup. He put the contacts in and finished with his glasses.\n\n\"Merle.\" He nodded at the reflection in greeting. It didn't matter how many days went by, it was surreal to see himself transformed into a completely different person.\n\nAs he gathered his things and left the room; he thought it was time that Merle became a little more proactive.\n\nHe went downstairs and found everyone at the breakfast table. Sienna smiled when she saw him and gave him a hug and kiss on the cheek.\n\n\"Are you hungry? Here, have some bacon and eggs.\"\n\n\"I hope you slept well Merle.\" Jason said.\n\n\"I slept like a baby.\"\n\n\"Good. Well after breakfast you'll go with Layla to get your tuxedo measurements. And Jason and I will have to run some errands. Do you need anything while we are away?\"\n\n\"Nope. Layla and I will be just fine, won't we?\"\n\nLayla who was trying very hard to ignore the whole ordeal was suddenly the focus of attention. She plastered a fake smile.\n\n\"Of course we'll be fine. You two don't have to worry about a thing.\"\n\n\"Ok then, Sienna and I will probably be back by dinner time.\" Jason said as they left.\n\nLayla and Merle were left alone.\n\nMerle munched on his scrambled eggs while staring at Layla in curiosity. It was time to test the waters and see what kind of woman Miss Layla-the-wedding-planner was.\n\n\"Sooo... are you going to be assisting in... my fitting?\" Merle asked and wiggled his eyebrows.\n\n\"I'll be present to make sure everything goes as scheduled.\"\n\n\"Oh, but I think I may need a little extra help if you know what I mean.\" Merle reached out and touched her hand.\n\nLayla instinctively smacked his hand away.\n\n\"Don't think I don't know what game you're playing.\" Layla said seriously.\n\n\"Whatever do you mean?\" Merle said coolly.\n\n\"I've seen how you try to come off as a mellow quiet guy. But there's always some wise ass in every wedding who thinks he can make a play for the wedding planner. Don't think just because you're some rich older white guy related to Jason Bane that I'll fall at your feet. I won't tolerate any inappropriate behavior from you. Although I am simply an employee at this event, you will respect me. Or so help me God, I'll stick my foot so far up your ass you'll taste my toes in your throat... Do I make myself clear?\"\n\nMerle chuckled and almost choked on his eggs. He did not expect Miss Proper to say that.\n\n\"Crystal.\" He said after swallowing.\n\nHe was rather impressed with the fire she seemed to have all of a sudden. He really was just testing her out to see how she would react.\n\nHe needed to know who this woman was. In this environment, you can never be too careful. At least that is what he told himself.\n\n\"I'm sorry if I offended you. What can I say; I had to give it a shot, right?\"\n\nLayla pursed her lips and arched her eyebrows.\n\nShe cleared her throat. \"I'll be downstairs in 10 minutes. Please be ready to leave by then.\"\n\nHe watched her leave the breakfast table. He couldn't understand why but he rather enjoyed seeing Layla uncomfortable and flustered.\n\nThere was something about her that piqued his curiosity. Merle memorized her expression when she told him off and threatened him with bodily harm.\n\nIn that moment, he saw a speckle of vulnerability in her eyes... and in that speckle he found honesty.\n\nAs they approached the car, Merle courteously opened the backdoor for her to get in. But Layla's face remained neutral as she walked across the other side of the car, opened her own backdoor and climbed in.",
        "Merle smiled and climbed into the car as well. He was going to enjoy this.\n\n\"So you don't like people opening doors for you? I thought all women like that sort of thing.\"\n\n\"I don't need your help Merle, with opening car doors or anything else.\"\n\n\"If you say so.\"\n\nAlthough the driver, Nico, was supposed to be native to the island, they still managed to get lost. Apparently Nico misunderstood and drove them all around town looking for the tailor shop. And after 2 hours, Layla was not taking the delay well.\n\nMerle silently observed her as she relentlessly tried to talk to Nico in broken Greek. She tried to string together words using her thick language book.\n\nMerle wanted to laugh but mostly felt bad for Nico. Layla was getting frustrated and Merle didn't think Nico understood the things Layla was muttering under her breath. Nevertheless they kept talking over each other. Layla positioned herself by reaching over from the backseat with her book. The problem was that every so often there would be a pot hole in the road and everyone in the car would bounce in the air. Merle thought he had enough of the show.\n\nSuddenly in perfect Greek, Merle said. \"That's enough Nico; take a right at the next light. In that intersection make a left. The place we're looking for will be on that street to the right. We've already passed it 4 times. Next time do not waste our time like this.\"\n\nLayla stared at Merle in wonder. What, How? When?\n\n\"But sir, I did not know where it was, I swear.\" Nico pleaded.\n\nMerle continued, \"Do not lie to me, Nico. I will take that personally. I know you just liked how the lady's tits kept bouncing in your face.\"\n\nNico's face turned beat red at being caught.\n\nThe fact of the matter is he did know where the place was all along. He should... it's his uncle's tailor shop. He didn't think anyone knew. Nico just liked how every time the pretty wedding planner hunched over, her ample cleavage was on display.\n\nNot that Merle was complaining. But he hated when people acted stupid for the sake of getting a free show.\n\nLayla's brow set in a determined way and was now completely infuriated at the fact that dear old cousin Merle knew how to speak Greek all along. And here she was sweating bullets just to get them where they needed to go.\n\nShe slightly trembled in anger and she clenched her teeth. The nerve of this man! Does he not know they are on a schedule?!\n\nMerle looked at Layla as she looked like she was going to murder him with her bare hands. It was distracting at how attractive she was in this angry state. If she was like this now, imagine when she wa-...\n\n\"What?\" He shook his wayward thoughts back to reality. He had no idea what Layla had just said. He chose to ignore her and started to exit the car.\n\n\"Hey! You mean to tell me you are fluent in Greek this whole time?\"\n\n\"That's right.\"\n\nLayla got out of the car as well and said, \"Well why in God's green earth, did you not say something?\"\n\nMerle stood at his full height and stared at her intently. He got a little too close in her personal space and whispered, \"You had it all under control, sweetheart. You don't need my help remember?\"\n\nLayla stood there perplexed while Merle walked inside. Not only was she perplexed because those were indeed her exact words but also because she felt something strange when Merle was near.\n\nShe didn't usually lose her cool this quickly. She was always calm, collected and methodical. But it seemed that every time Merle spoke she wanted to punch, slap or strangle him; or a combination of all three.\n\nHe was always so arrogantly confident and deliberate in his actions. Although his appearance made him look like he shouldn't be anything but those things. His piercing gaze demanded your full attention.\n\nAnd it made her uncomfortably powerless.\n\nThey finally arrived at their destination. It was actually a large house that the owner had converted into a shop. The short good natured old man was quick and efficient. Merle stood while the man's worn hands took precise measurements of Merle's large body. He laughed and good naturedly remarked on Merle's ample size.\n\nBy the time they were done it was past noon. Merle heard a soft rumbling coming from Layla's stomach. He told Nico they were going to walk to the market for some lunch.\n\nLayla didn't understand what Merle had told Nico in Greek but was curious and hoped it involved food. She had given up trying to stay on schedule for the day; she was just tired and hungry.\n\nShe followed Merle as they walked down the cobblestone road. The uneven surface made walking in heels challenging.\n\nEvery time Layla almost tripped, Merle wasn't too far away making sure she stayed upright. But Layla would stubbornly straighten herself and kept walking. She thought Merle was quite agile to look so out of shape. Merle smirked to himself correctly assuming Layla's thoughts.\n\nThe sun was bright and the air was clear. And there was a pleasant smell of the ocean and burning firewood.\n\nA few minutes later, they arrived at a busy seaside market. The local merchants sold fresh fish, fruits and vegetables.\n\nThey found a small caf\u00e9 where the locals seemed to eat. They ordered some food. Layla chose a fish platter with a salad and Merle went for a dish that had lamb, rice, grape leaves and salad. They topped it off with complimentary cups of wine. They took their food containers and walked down towards the beach.\n\nUnder a large shady sea grape tree, there was a small white plastic table and two chairs just waiting to be occupied. They walked on the sand to reach it but they sat contentedly. Layla was so relieved; she quietly slipped her shoes off and wiggled her feet in the sand. She hadn't been to a beach in so many years; she forgot how silky and cool the sand could feel.\n\nForgetting about decorum, Layla dived right into her food. She softly moaned at how good the food was.\n\n\"Mm-mm.\" God she was hungry and this food was delicious.\n\nIt was so peaceful there. The cloudless sky and the ocean were perfect compliments of each other. Layla looked at Merle in curiosity. He was quietly enjoying his meal and seemed distracted in his thoughts.\n\nMerle was trying to concentrate but was having trouble with Layla and the sounds she was making.\n\n\"How did you know to come here? Have you been here before?\" Layla asked between mouthfuls.\n\n\"No.\"\n\n\"Then how did you know?\"\n\n\"You just have to be observant. If you are observant you will usually get all the information you need.\"\n\n\"What does being observant have to do with anything?\"\n\n\"Well I saw there were some workmen who was walking in the same direction and its lunchtime. There was a little girl with a water jug who was bouncing in this direction as well. This area of Santorini isn't heavily populated so I figured they were all going to a caf\u00e9 or a market.\"\n\nLayla looked at him and nodded. \"So you can figure anything out just by observing people?\"\n\n\"Yep that's right.\"\n\n\"Alright.\" Layla straightened and put her dish to the side. \"So what can you tell about me?\"\n\nMerle looked at her expectantly and shook his head.\n\n\"Go ahead. I promise I won't get offended.\"\n\nMerle shrugged his shoulders. He took his sweet time perusing her features. \"You look to be about 23 years old and just started your own business.\"\n\nLayla nodded and said, \"Yes, but you could have Googled that.\"\n\n\"True.\" Merle said as he stared intently in her eyes. His gaze unnerved her and she looked away.\n\n\"You've been in several relationships but considering that you've only been in love once.\"\n\nSilence...\n\n\"Lucky guess,\" Layla said nonchalantly.\n\n\"From the way you interacted with Nico, I'd say he was foreign and it did not end well.\"\n\nSilence...\n\n\"The perfume you're wearing can't be found in the U.S. so I would say he was French. There is a thin line on your left ring finger so that means you were also engaged. From the faint line I'd say it's been at least 6 months.\"\n\nLayla's expression sobered. She looked at Merle as if he were reading her palm but remained silent.\n\n\"Am I close?\"\n\nLayla pursed her lips. She sighed. It was her fault, why did she have to ask him to read her? Now there was no way of stopping him.\n\n\"I think he cheated on you because I definitely see you have a healthy dose of mistrust for men. And it hurt you deeply... because you trusted him and you don't trust easy.\"\n\n\"Ok. I think that's enough of that. Thank you Merle, for letting me know how easily I can be read.\" Layla plastered a fake smile trying not to let his words affect her. She knew it wasn't his fault but it was painful to hear your life so pathetically spelled out.\n\nLayla got up and threw away her food. When she turned around she barreled right into Merle's massive chest. She was close to falling over but Merle caught her and steadied her on her feet while she grabbed ahold of his arms.\n\n\"I'm sorry.\"\n\n\"You don't have to apologize. You were completely right.\"\n\n\"I'm not sorry I said it... I'm sorry that son of a bitch made you lose faith in men.\" He softly nudged her chin up so she could look at him. \"Hey, we aren't all bad.\" He said lightly.\n\nLayla looked into his eyes and her breath caught in her throat. In his molten gaze there was an electric current she couldn't quite understand.\n\nShe didn't notice his protruding pot belly or his greasy strands of hair on his head. Or the fact that he was completely unattractive.\n\nIn that moment there was something greater than attraction. What it was, she didn't know. But she knew she had never felt it before.\n\nHis breath was shallow and his chest visibly rose with every breath. He had an intoxicating lingering smell of sweet wine.\n\nShe suddenly was aware of how strong and sturdy his arms were, like oversized cranes holding her frame up.\n\nThere was a certain perfection about the way he held her. And how his strong hands cupped her back.\n\nShe noticed how his deep voice did something inexplicable to her nether regions. His deeply timbered voice reminded her of a finely tuned motorcycle. Rumbling its way through her body.\n\nShe was drawn to him without any willpower of her own. It was as if he was the center of a tornado and she spiraled through him.\n\nMerle's head slowly descended towards hers as if in a trance... and her head followed his lead.\n\nSuddenly, a car beeped its horn for a bicyclist to move out of the street.\n\nThat seemed to break the spell and Layla was brought back to reality. She cleared her throat, looked away and righted her clothes.\n\nWhat the hell was wrong with her? Maybe she fell and bumped her head without realizing it. She was about to kiss the groom's ugly duckling cousin? She wasn't even attracted to him... she didn't even like him... she didn't want to kiss him in the slightest bit.\n\nOr that's what she kept telling herself.\n\n\"I'm sorry if I gave you the wrong impression Merle. I don't feel that way about you. We will never be more than just a wedding planner and the groom's cousin. It's not appropriate.\"\n\nMerle's expression changed to something unreadable. Just as they started to leave, he stopped and turned around to face her. His strong arms grabbed her tightly; not caring if he might be bruising her.\n\nHe brought his face close to hers and whispered, \"Fuck that.\"\n\nLayla was in a daze and wasn't completely sure of what was happening. But was aware she closed her eyes as her face drew close to his. Her chin unconsciously tilted up and waited...\n\nHis thick lips descended on hers softly. He tentatively peppered her with kisses until he felt her mouth give way to more access. He angled her head and delved into her mouth, exploring her for the first time. She tasted better than he expected.\n\nThey kissed in that unmovable pose for what seemed like an eternity and a split second all at the same time.\n\nThe kiss quickly intensified as they nibbled each other's lips and their tongues battled. Layla let out a soft moan when she felt herself become dripping wet.\n\nHe tasted so good to her. She stood breathlessly as he traced down her arm with one thick finger... all the way down to where she had been previously injured. The faint touch left an emblazoned trail of heat in its place.\n\nThis man invoked all kinds of desires in her.\n\nMerle slowed the kiss and gathered her face in his brawny hands. His thumb softly rubbed behind her ear. How did he know that was one of her spots?\n\nHe pulled away but his gaze held a million promises.\n\n\"We should get back.\" He whispered.\n\n___________"
    ],
    "authorname": "partial2passion",
    "tags": [
        "black female",
        "santorini",
        "white male",
        "greece",
        "disguise",
        "secrecy"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/duplicity-ch-03"
}