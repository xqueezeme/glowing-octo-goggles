{
    "title": "The Second Hundred Years Ch. 06",
    "pages": [
        " Chapter 6\n\n   The Conclusion \n\nBy Woodmanone   copyright November/2010\n\nPlease read Chapter 1 to 5 so you will be able to understand the characters and the events that have led to this point.\n\nConstructive comments and emails are welcome and appreciated.\n\nThanks for taking the time to read my work. I hope you enjoy the story.\n\n<CENTER>********************</CENTER>\n\nYeah, we've got a cattle ranch, Lewis said to himself two weeks later. I'd forgotten how much work it was going to be. When I was a kid I thought you just put the herd to out to graze, set back and waited for them to fatten up. Now I'm a nursemaid for a bunch of cattle. Then he laughed at himself; I'm as bad as the dudes we plan on having here. \n\n\"What are you thinkin about boy?\" William asked as he joined Lewis on the porch. \"You look like you're a hundred miles away.\"\n\nLewis grinned and replied, \"Just thinking how much I didn't remember about ranching.\" He paused to think about where he'd been a year ago and in a more serious voice added, \"But I'm glad to be here doing the work.\"\n\nWilliam knew Lewis was thinking about Iraq and his friends that hadn't made it back. \"I'm glad you're here too, son.\"\n\nShaking himself Lewis asked, \"What's on the schedule for today?\"\n\n\"Well...We got all the cattle tagged, we've dipped them for ticks, and spread them out over the valley grazing lands, so not much to do today. Jim said he was gonna climb the trail up to the cave. Tom and I are going into Prescott to see about winter feed. Unless you want to climb a mountain or ride to Prescott I guess you can take a day off.\"\n\nLewis nodded and smiled. He stepped back into the house, got his coat, and headed to the barn. In a few minutes William heard the roar of a Harley motorcycle and Lewis rode out of the barn and up to the porch.\n\n\"Going over to see Alyssa,\" he said with a smile and a wave. \n\nWilliam nodded and watched him ride toward Josh Benson's ranch. Like that was a big surprise, he thought with a grin. Like I said, that boy is roped and hogtied.\n\n<CENTER>********************</CENTER>\n\nJim stepped off his horse and dropped the reins to the ground. The horse was trained to ground tie and would move no more than a few feet from that spot. William's got well trained horses, he thought. Good animals that do their job very well. He started to pull his Winchester 73 out of the saddle scabbard but put it back. If I remember the trail right, it gets pretty steep, Jim said aloud. Better just depend on the .45.\n\nThe Colt .45 Peacemaker was the same pistol he'd carried before his long sleep in the cave. He and William had been talking about Jim's desire to see the cave that he'd spent so many years in sleeping. Jim mentioned that it would hard climbing the trail carrying the Winchester.\n\nWilliam said, \"Damn, I must be gettin old. I forgot I've got something that belongs to you. Just a minute, I'll be right back.\" \n\nHe left the room and shortly returned carrying something wrapped in several layers of material. William set the bundle on the coffee table and began to unwrap it. The first layer was a heavy material that Jim didn't recognize. The second layer was a piece of buckskin and the third layer was a soft cloth material. \n\nWhen the last layer was unwrapped, Jim smiled and felt his eyes tear up. There was his Colt from all those years ago. He picked it up, checked to see if it was loaded, and looked up at William.\n\n\"I remembered the Winchester because it was hanging over the fireplace in my bedroom and I saw it every day,\" William explained. \"I didn't think about your Colt until you mentioned how steep that trail is\"\n\nJim handled the pistol with an ease that told of years of use. The Colt, just like the Winchester, was a bridge back to a life and time he could never return to. Somehow the weapons and the totem over the ranch house door kept him from feeling totally lost. He nodded his thanks to William and put the pistol in the hostler that William handed to him.\n\nNow at the trail head, Jim pulled the Colt and made sure for the tenth time that it was loaded and ready to be used. Looking up the trail, he took a deep breath and started his climb. \n\nMaybe I should have worn those \"sneakers\" that Lewis gave me instead of my boots, he thought as he slipped and slid on the trail. It took him almost an hour to reach the tall rock butte that Lewis had told him about. Jim stepped around the edge of the wall and across a small canyon he could see where the cave had been. The mountain had fallen in on itself just like Lewis told him. But he'd wanted to see it for himself.\n\nJim had never been afraid in his life. He'd been wary, concerned, and downright mad in his life; but never afraid. He was afraid now. The hair on the back of his neck stood up and his breathing increased. He felt a chill down his back and he felt like running away.\n\nHe took a deep breath to calm himself and faced the rock filled entrance to the cave. Jim stared at what had been his prison for over a hundred years. After several minutes he shouted at the cave entrance, \"I escaped your trap Spirit Healer, you son of a bitch. I'm still here and you're just dust.\"\n\nJim turned and headed back down the trail to his family and his new home.\n\n<CENTER>********************</CENTER>\n\nLewis had more than one reason to ride to Josh Benson's ranch. The main reason was Alyssa. He hadn't seen her for three days and that was too long in his mind. I'd like to see and be with her every day. Lewis also wanted to talk to Josh about an idea he had. If anyone in the area could help him it would be Josh Benson.\n\nThe balanced roar of the Harley's pipes as he pulled up in front of the house announced his arrival. Alyssa came bouncing out of the front door to meet him. Laughing she ran out and hugged him. I think she's glad to see me too, Lewis thought. \n\nRight behind Alyssa was her grandfather Josh Benson. Standing on the porch he waited until Lewis shut down the Harley and said, \"Come on inside Lewis and tell me why you're here.\" As if I don't know, Josh thought to himself with a smile.\n\n\"Gramps, stop teasing Lewis,\" Alyssa said. \"You know very well he came to see me.\"\n\n\"Actually I did want to talk to Josh about something,\" Lewis admitted. \n\n\"C'mon into the office then,\" Josh offered.\n\nOnce seated in a big overstuffed chair with Alyssa sitting on the arm next to him, Lewis looked at Josh. \"Mr. Benson, I mean Josh,\" he said seeing the look on Josh's face. \"I want to buy some horses and I thought you might be able to help me.\"\n\n\"I'd be glad to help if I can Lewis.\"\n\n\"Well, I want to buy two maybe three horses. I want to get a couple of real good animals for Grandpa and me. But I want one more and it has to be special. It's for Jim. I don't have any idea of where to look or how much money I'll need. That's why I came to you.\"\n\n\"Good animals aren't that easy to find unless you know where to look,\" Josh agreed. \"What kind of horse do you want for Jim?\"\n\n\"I'd like a horse that's quick and fast enough to work cattle close in, sort of like a quarter horse. But I want an animal that's got more long distance bottom to him. Maybe a quarter horse cross breed or something,\" Lewis explained.\n\nJosh nodded. \"I understand what you want, but now the big question. How much do you want to spend?\"\n\n\"I've managed to save about 6 thousand dollars. Will that be enough?\"\n\n\"You're willing to spend all your savings?\" Lewis nodded and Josh continued,\" Well that might be enough if we look in the right place.\"\n\nHe thought for several seconds and said, \"I haven't any stock for my ranch yet but I know a fella that's got horses that will fit the bill. Bill Jackson's got good stock and they're usually well trained as working animals. He's got a buckskin stallion and a sorrel filly that would be good choices for you and William. I was talkin to him over to Cole's just last week.\"\n\nAlyssa was playing with Lewis's hair and Josh looked to see if Lewis was paying attention. \"Bill usually gets top dollar for his horses but he owes me a favor or two and we might get a break on the price. If you're interested I'll set it up for us to go look at them.\"\n\nLewis nodded and asked, \"What about a horse for Jim?\"\n\n\"Bill's got another animal he was telling me about a couple of weeks ago. From what you say, it sounds like the horse for Jim,\" Josh told him. \"I won't tell you anything about the animal and let you make up your own mind when you see him.\"\n\n\"When could you go see these horses Josh?\"\n\n\"Any day this week,\" he answered. \"Bill's place is just this side of Kingman. If you're not too busy we could go tomorrow,\" Josh told him. \"We could be there and back by late afternoon.\"\n\n\"I'll check with Grandpa and Jim and see what they've got me doing tomorrow,\" Lewis said with a grin. \"Call you tonight if they can spare me.\"\n\n\"We can take my truck,\" Josh said. \"I'd rather drive it than sit on the back of that motorcycle.\"\n\nHis business done with Josh, Lewis and Alyssa spent the rest of the day together. She bundled up a little and climbed on the bike behind Lewis. It was early summer but the wind could still be sharp, especially on a motorcycle. They went to Prescott and Lewis withdrew all of his savings; $6200. He left a hundred dollars in the account to keep it opened. \n\nLewis followed Alyssa as she browsed through some of the shops around the courthouse square. After eating lunch at the Pioneer Saloon, Lewis headed the bike for the Lynx Creek area. He wanted to see the place that Jim had found some of the gold over a hundred years ago.\n\nThey sat in an opening on the creek bank and let the sun warm them. Alyssa turned to him, putting her arms around his neck and kissed him; he kissed her back. After several minutes they pulled away breathing hard and aroused. Lewis held off, not because he didn't want her, but because she was special to him. She deserves more than a romp in the woods, he thought.\n\nLewis smiled, kissed her on the nose, and said, \"I guess we better head back or we may be here all night.\"\n\n\"Yeah, it'd get cold tonight,\" Alyssa replied returning his smile. She held onto Lewis tighter on the way home.\n\nIt was early evening when Lewis got back to Eagle's Nest. William, Jim, and Tom were already there; they'd waited supper for him. \n\n\"Y'all didn't have to wait on me, but thank you,\" Lewis said.\n\n\"Figured you'd need a lot of food to replenish your strength,\" William said with a big grin. At the look on Lewis's face he added, \"Just teasin you son.\"\n\nHe returned William's grin and sat down at the table. As he filled his plate with food, he thought of how different his relationship with Alyssa was.\n\n\"It's sort of funny Grandpa, Alyssa and me, I mean. I think if we do get together it'll be after we're sure of how we feel about each other,\" Lewis said. \"It's easier to wait when you've got something worth waiting for.\"\n\nWilliam stared at Lewis for a bit. \"I think you're right son; you have grown some since you came back to the ranch.\"\n\nLewis nodded and said almost to himself, \"It's different with Ally than it was with Julie.\"\n\nTom was lost. He hadn't met her but he knew about Alyssa. He had to ask, \"Who the hell is Julie?\"\n\n\"She's my ex fianc\u00e9e,\" Lewis replied laughing at the look on Tom's face. \"Part of my past.\"\n\n\"Speaking of loved ones, what's your wife think about you being gone so much Tom?\" William asked.\n\n\"Helen says she glad to get rid of me for a while,\" Tom replied laughing. \"Said it's like taking a vacation every week.\" He continued in a more serious voice. \"No, she's fine with it. Helen knows I'd rather be doing this than working in that office. And getting to go home at least three days a week helps too.\"\n\n\"How long can you keep that up though?\" Lewis asked. \n\n\"Well...I'll tell ya. I'll stay until after we get the cattle to market this fall,\" Tom said. \"If y'all decided to keep ranchin I'd like to stay on.\" William and Jim nodded. \"Okay then, Helen and I will sell our place back in Prescott and find somewhere to live closer to the ranch.\" Tom smiled and added, \"Helen's been wanting to quit her job anyway.\"\n\nLewis changed the subject by asking, \"Can you get by without me tomorrow? I got some errands I'd like to run.\"\n\n\"You had today off,\" William replied trying to be stern. He couldn't do it and laughed. \"Sure Lewis, you go get done what you need to do.\"\n\nLewis stood and said, \"I need to make a phone call, be right back.\"\n\n\"Tell Alyssa I said hello,\" William responded and Jim laughed.\n\nLewis made his call and the next morning, just after first light, he rode his Harley to Josh Benson's place. In spite of the early hour, Alyssa came out to meet him.\n\n\"I'm going with you today if you don't mind me tagging along,\" she said as she put her arms around Lewis's neck.\n\n\"I was hoping you'd go, but didn't want to ask you to take the long ride,\" Lewis replied.\n\nJosh joined them carrying a thermos of coffee. \"Let's get going before you two decide to ride off on that motorcycle again,\" he said.\n\nThey jumped in the truck and headed to Bill Jackson's place. When they got there, Lewis and Josh examined the two stock horses Jackson had for sale; the buckskin stallion and the sorrel filly. As they looked at the horses, Jackson kept up a running monologue on the virtues of the two animals. \n\n\"Bill you make em sound like they're related to Pegasus,\" Josh said laughing. \"You've known me too long to try and fool me, my friend. Where's this wild horse you told me about?\"\n\n\"He's in his stall, c'mon this way,\" Bill said as he led them into the barn. When they entered the barn a black horse stuck his head out of his stall and watched the humans approach. He didn't act concerned or afraid, just curious. Jackson attached a lead to his halter and led the animal out of the stall. The horse tossed his head several times and then settled and stood still.\n\n\"He is a big horse isn't he?\" Lewis said.\n\n\"Yes he is. He stands just over 16 hands. Crossbreed of quarter horse and Andalusian and is just over 4 years old. He'll fill out some and get stronger as he gets older. He'll carry you all day at a lope but is still quick enough to cut cattle. He's got more bottom than a quarter horse and is almost as fast off the mark. Damn fine animal.\" Bill finished his description of the horse.\n\nJosh slowly and carefully ran his hands over the horse's legs, chest and rump. Turning back to Lewis he nodded. Unless the horse had been unsound Lewis had already decided that this was the animal for Jim. Fits the description Jim gave us of Sampson pretty close, Lewis thought.\n\n\"How much for this black and the other two we looked at?\" Lewis asked. It was time to get down to horse trading. Lewis was no stranger negotiating deals. That was part of his job back in St. Louis; usually he worked with amounts in excess of 100 thousand dollars.\n\n\"Well...since you're a friend of Josh's and since you brought this pretty young lady to see me, I'll give them to you at the bargain price of eleven thousand dollars,\" Jackson replied.\n\nLewis didn't hesitate and said, \"Thanks for your time Mr. Jackson. I guess I'll just have to keep looking. C'mon folks, we need to get home.\" Lewis, Josh, and Alyssa started back toward their truck.\n\n\"Now wait a minute boy. Like I said, Josh is a friend. Maybe I could do a little better,\" Jackson told him. \"How about ten thousand for all three? And I'll deliver them to you.\"\n\n\"Sorry to waste your time Mr. Jackson,\" Lewis replied and kept walking toward the truck. \"That's more than I can afford.\" \n\nJosh stopped walking, turned to Jackson and said, \"Bill you said yourself that your regular customers don't want a spirited horse like that black. What are you gonna do, keep him around as a pet?\"\n\nJackson nodded and thought for a few seconds. \"Bottom line Lewis, how much can you spend?\"\n\nNow it was Lewis's turn to think. Looking at Jackson he decided to be honest. \"I got $6200 Mr. Jackson; that's the whole bankroll.\"\n\nShaking his head, Jackson replied, \"I'd like to help you Lewis but I can't let em go for that. I've got close to that tied up in them.\"\n\n\"What's your bottom dollar Bill?\" Josh asked breaking into the discussion.\n\n\"I have to get $8000 to make a little profit Josh.\"\n\n\"Take the deal Lewis,\" Josh ordered. Lewis started to object and Josh repeated, \"Take the deal. I'll cover the shortage.\"\n\nLewis and Jackson shook hands. \"I'll have cash money for you when you deliver them, Mr. Jackson.\"\n\nJackson nodded and smiled. \"I'll bring em over tomorrow Lewis. Now get out of here before you end up owning my ranch for another $100.\"\n\nBack in the truck, Lewis asked,\" Why'd you get involved Josh? I won't be able to pay you back until after we market our cattle.\"\n\n\"I figure you're good for it Lewis.\" \n\nAlyssa grabbed Lewis's arm and said, \"If Gramps hadn't of stepped in I was going to.\" Before Lewis could say anything she added, \"You're not a chauvinist are you Lewis?\"\n\nHe looked at Alyssa for a few seconds, smiled and replied, \"Not me.\"\n\nJosh changed the subject. \"I didn't know you knew about horse trading, Lewis.\"\n\n\"It's not any different than trying to get a better price from your suppliers. It's what I used to do,\" he replied.\n\n\"Then why did you let Jim do the dickerin for the cattle?\"\n\nLewis chuckled and said, \"You two seemed to be having such a good time, I didn't have the heart to step in. Besides we both got a fair deal; don't matter much who did the dealing.\"\n\nThey stopped for lunch at a roadside caf\u00e9. Alyssa and Lewis talked excitedly about the new horses and Josh sat back and enjoyed the young people. I wish I still had all that energy, he thought.\n\n\"You must think a lot of your Jim,\" Josh said. \"You bought a couple of good horses for yourself and William, but that black is somethin special.\"\n\n\"Yes sir, I do. Jim's something special too.\"\n\nAfter saying goodbye to Josh and Alyssa, he spent a bit more time saying goodbye to Alyssa, Lewis rode his Harley back to Eagle's Nest. My biggest problem now is keeping my mouth shut about the surprise for Grandpa and Jim, he thought.\n\nAs he walked into the kitchen William asked, \"Get all your errands ran?\" Lewis nodded. \"Gonna need you here for the next couple of days, if you've got nothing planned. Jim, Tom, and I are going into Prescott to talk to a couple of cattle buyers. Let them know we'll be shipping cattle this fall. We're gonna arrange for the trucks to haul them to market too. We might decide to spend the night; just depends on how late it gets to be.\"\n\nLewis nodded again, thinking this will work out perfect. Mr. Jackson will deliver the horses tomorrow to the Benson's and I can bring them over here and surprise Grandpa and Jim. \"That's fine, I'll be here,\" he replied.\n\nThe three men left early the next morning and they hadn't been gone more than ten minutes before Lewis called Bill Jackson and asked to have the horses delivered to Eagle's Nest. Then he called Josh and told him about the change in plans. Josh said he and Alyssa would be right over; he wanted to be there when Jackson delivered the horses. Lewis and Alyssa got to spend almost two hours together before Bill Jackson showed up.\n\nHe backed the horse trailer up to the corral and dropped the tailgate. The first horse off was the buckskin. He looked around as he was led into the corral and as soon as the lead was taken off his halter he trotted to the feed trough on the far side of the corral. Next the sorrel filly was led out of the trailer and she immediately joined the buckskin.\n\nThe big black came out of the trailer prancing. His ears were up and perked forward and his head was turning from side to side inspecting the area. When he was released into the corral he trotted around and around looking over the top rail. The other two were a little skittish about their new surroundings. The black was interested but not cowered or afraid.",
        "He and Jim will be a good match, Lewis said to himself. Neither one of them has a timid bone in their body. Jackson accepted payment for the horses, wished him luck, and headed back to his ranch. Lewis got an apple, cut it into pieces, and sat on the top rail of the corral and watched the horses for a few minutes. The black stopped his circling and stood about ten feet away, studying the human.\n\nLewis talked softly to the horse and after a couple of minutes the big horse stepped closer and stretched his neck out toward Lewis's outstretched hand. The horse snorted and gently took the offered piece of apple. As he moved away, Lewis got down into the corral and slowly moved toward the other two horses talking softly. He was able to feed them their share of apple and run his hands over their necks and ears.\n\nJosh watched Lewis with the horses for a few minutes and walked over to the corral. That boy knows more about horses than he lets on, Josh thought. \n\nAlyssa led the filly; Josh led the buckskin, leaving Lewis to lead the black into the barn and into their stalls. Two of the horses went to the feed boxes in the back of their stalls; the black stuck his head back over the door and looked around with his ears perked up.\n\nJosh and Alyssa stayed around for about an hour after the horses were delivered. Now all Lewis could do was wait for William and Jim to get home. I hope they don't stay overnight, Lewis thought. I can hardly wait to surprise them.\n\nAt dusk Lewis had given up on William and Jim getting home that evening. Headlights shining on the front of the house proved him wrong. Lewis quit pacing and sat down in a big easy chair. William, Jim, and Tom came into the house and greeted Lewis. He listened as they told him about meetings with two cattle buyers. \n\nLewis caught Tom's eye and motioned for Tom to follow him outside. He explained about the horses and the surprise he had planned. Tom hustled down to the barn while Lewis went to get William and Jim. At his request they followed Lewis to the barn.\n\n\"If we're going to be cowboys Grandpa we need good horses,\" Lewis said. Tom led the buckskin and the sorrel out to the men and went back into the barn. \"I bought these for us. You get your pick and I'll take the other one.\"\n\nWilliam was speechless and touched. He looked at Lewis for a few seconds and walked over to look at the horses. He took a deep breath and cleared his throat. \"Think I'd like the sorrel. Thank you Lewis.\"\n\nJim watched William and smiled. Nice thing for the boy to do, he thought. \n\n\"I didn't forget about you either Gran...Jim,\" Lewis continued. Tom returned, leading the big black. Lewis saw Jim's eye open wide and said, \"This one's for you. Man of your experience should have his own horse.\"\n\nJim looked at the black and got tears in his eyes. The horse looked very much like his beloved Sampson. He wiped his eyes with the back of his hand and walked over to the horse. The black was prancing and tossing his head. Talking softly to the animal Jim reached out and stroked his forehead and scratched his ears. The black settled down and closed his eyes in contentment at the attention; all signs of wildness gone. The Randals spent several minutes looking at the new horses and then put them back in their stalls. \n\nBack at the house in the kitchen William was the first to speak up. \"Thank you Lewis that was a fine thing to do.\"\n\nJim cleared his throat. \"Thank you. That horse makes me feel at home. Thank you son.\"\n\nLewis was almost bursting with pride that he'd done something for the two men who meant so much to him. \n\nLate that night, actually the early morning, Lewis came out of his bedroom going to the kitchen for a drink of water. As he passed, He noticed that Jim wasn't in his room. Lewis went out to the porch thinking Jim was out there; he wasn't on the porch. Looking around Lewis saw a light on in the barn. Who can that be? \n\nLewis walked down to the barn and peeked around the open door. He smiled when he saw who had the light on. Jim was sitting on a couple of hay bales in front of the black's stall and talking to the horse. The animal had his head hanging over the stall door and seemed to be listening to every word Jim said. Lewis stayed outside not wanting to interrupt Jim as he bonded with his horse.\n\n\"You and I are gonna get it done boy. We'll show em what a cowboy with a good horse can do, won't we?\" Jim grinned at the horse and gave him a piece of apple. \"Gotta have a name for you I can't keep calling you boy now can I? Let's see.\" Jim thought for a short period and said, \"I've got it. I'll call you Joshua.\"\n\nHe stood and walked over to \"Joshua\". Rubbing the horse's nose he added, \"Your spirit horse I called Sampson, a hero from the Bible. Joshua was another hero so I'll call you that.\" Jim continued to talk to \"Joshua\"; Lewis went back to the house.\n\nFor the next two weeks it was fun for Lewis to watch Jim train Joshua. As he watched Jim and Joshua working together one morning he said to himself for the fiftieth time, I done good. Jim had always had a layer of sadness but since Joshua came into his life he'd changed. He didn't spend as much time staring off into the distance and he seemed happier.\n\nLewis was pleased with his buckskin too. He named the horse, Casey, after the Guardsman that he'd pulled out of the destroyed Hummer. Casey was like a big dog, so anxious to please that it was almost comical. The horse was trained to neck rein and ground tie. The slightest touch of rein on his neck and Casey turned quickly. He was a bit big for cutting but he could run all day and still have something left at the end of the day. All and all, Lewis was very happy with Casey.\n\nWilliam felt the same about his sorrel filly; he called her Susie, after his wife. Tom said she was one of the best cutting horses he'd ever seen.\n\n<CENTER>********************</CENTER>\n\nIt was coming up on midsummer and Jim suggested they go to the high country pastures to see if there was enough grazing to move the rest of the herd. Lewis offered to make the trip and invited Alyssa to go with him. They reached the north pastures and found there was more than enough grass to move the rest of the herd up the mountain. On the way back, they stopped by a small creek for a lunch break.\n\nOne of the things they talked about was the three horses that Lewis had bought. Lewis bragged a little on Susie and Casey. \"But the prize was Joshua,\" Lewis admitted. \"He and Jim together are about the best pair of cowhands I've ever seen. Tom thinks so too.\"\n\n\"I wanted to ask you about Joshua,\" Alyssa said. \"You must think a lot of Jim to buy that horse.\" Lewis nodded and she continued, \"You treat him with a lot of respect, love too I think. He must be special to you.\"\n\n\"Jim is special, to me and to William,\" Lewis replied. Lewis turned quiet and Alyssa asked him if something was bothering him. He smiled and took a deep breath.\n\n\"I've got something to tell you, actually a couple of things. But I need you to listen to me without interrupting before I finish. Okay?\"\n\nAlyssa smiled and nodded her agreement.\n\nSo Lewis told Alyssa the story of finding Jim in the cave, nursing him back to health and finding out who he is. He explained about the family resemblance, that Jim knew things about the family that only he would know, and the picture of Jim and Chante. When he finished he said, \"I know it sounds crazy but I swear it's the truth.\"\n\nAlyssa looked at the creek for a couple of minutes; Lewis waited for her reaction. Finally Alyssa looked directly at Lewis. \"You're right; it sounds crazy. How could this happen?\"\n\nHe shrugged. \"Doc Samuels and me think that smoke coming off the flame had something to do with it. But there was the cave in before we could get samples.\"\n\n\"You're not crazy or a fool,\" Alyssa said. \"And neither is your grandfather; if you say it's true I believe you.\"\n\nLewis smiled and said, \"Now I can tell you the other thing I wanted to talk to you about. Taking another deep breath he said, \"Ally I love you. I think I have since that first day in your grandfather's office.\" She smiled at him and he was encouraged. \"Ally will you marry me?\"\n\nAlyssa waited all of three seconds and replied, \"I always wanted to marry a cowboy.\"\n\n\"Is that a yes?\"\n\n\"Yes that's a yes silly,\" she said leaning in to kiss him.\n\nThey were a couple of hours late getting back to the ranch house. Jim was standing on the porch when they rode in. Alyssa greeted him but didn't dismount; she was headed on home.\n\nJim took one look at the pair, smiled and said, \"It's about time. You two have been mooning around here for the last three or four months.\"\n\nBoth Lewis and Alyssa blushed. He leaned over and gave her a quick kiss goodbye. \"Talk to you tomorrow. If this old work horse here will let me go, I'll be over to see you.\" Alyssa waved at Jim and rode home. \n\nLewis walked Casey down to the barn with Jim following him. Jim watched as Lewis took care of his horse. When he finished Jim put his hand on Lewis's shoulder.\n\n\"She's a fine young woman Lewis,\" Jim said. \"You could do a lot worse.\"\n\nLewis nodded his thanks and then smiled. \"Hell, I have done a lot worse and not too long ago either.\"\n\n\"Y'all planning on gettin hitched?\"\n\n\"Yes sir. We thought just after round up and we got the cattle to market would be a good time.\"\n\n\"Well...we better get back up to the house and let William know we got a new boss movin in soon,\" Jim said with a laugh. \"I don't think he's gonna mind too much. He thinks the world of that girl.\"\n\nWilliam's only comment when he was told about the upcoming wedding was, \"I wondered how long it would take for you to come to your senses. Anyone could see that Alyssa is crazy about you. Congratulations Lewis.\" He walked over and hugged Lewis, embarrassing both of them.\n\n\"We'd better break this up and start planning to drive the rest of the herd up to the high country,\" Jim said.\n\nFive days later, just after sunup, the drive started. The Randals had 168 head to push up to the northern pastures but they had lots of help. Tom was going of course, he was the range boss. Alyssa was there, as if she would be anywhere else. Josh surprised them by offering to come along. \n\n\"I haven't been on a real cattle drive since I was a youngster,\" Josh explained. \"Thought I'd see if it is as miserable as I remember.\"\n\nEven Tom's wife, Helen, decided she'd give them a hand. \"Got tired of waitin for Tom to come home so I thought I'd make sure he wasn't up to any mischief,\" she said.\n\nTom rode point, leading the herd in the right direction. He'd worked at Eagle's Nest for years and knew the best trails to take; Helen rode with him. Alyssa was in the swing position on one side of the herd with William and Josh on the other. Jim and Lewis rode drag, pushing the cattle along.\n\n\"How's Casey doing?\" Jim asked.\n\nThis was the first time that Lewis and his horse had actually worked the cattle. Driving a herd was very different than just riding around checking up on them.\n\nLewis nodded. \"This was what he was born to do. Look at him, his ears are perked up and he's almost prancing.\"\n\nCasey stretched his neck forward and nipped at the rump of a steer that wasn't moving fast enough to his way of thinking.\n\n\"See,\" Lewis continued. \"I don't even need to be here. Casey can handle it without any guidance from me.\"\n\nJim laughed and nodded. \"William's Susie is doing good too. She runs around pushin cattle back into the herd when walkin would do but she's young, she'll learn.\"\n\n\"Why are you back in riding drag?\" Lewis asked. \"You're the ramrod; I thought you'd be out front.\"\n\n\"Tom knows the way as good as me,\" Jim replied. \"Joshua needs some training on ridin slow and doin the job. He wants to run and rush around everywhere he goes.\" Jim reached down and patted Joshua on the neck. \"He'll learn too. But that don't mean he likes it\"\n\nThey rode without talking for several minutes. Lewis looked around, feeling grateful that he'd made it back to Eagle's Nest. Looking Alyssa's way he thought, this is where I was meant to be. \n\n\"I told Alyssa about you,\" Lewis said to Jim. \"Thought it might come out later and I didn't want any secrets between us.\"\n\nJim stared at Lewis, thinking about what he said. \"How'd she take it?\"\n\nLewis smiled and replied, \"She just said that now she had a great, great, grandfather too. Then she laughed and said you were just one more Randal for her to care about.\"\n\nAfter a minute or two of silence, Jim said, \"Reckon I'll go trade places with Alyssa.\" He turned Joshua and rode over to Alyssa.\n\nThe crew pushed the cattle hard and made the pastures just about dusk. They camped overnight and the next day they divided the herd among the three meadows where they would graze until fall. Helen, Alyssa, and Jim of all people, fixed a big supper when they got back to the ranch house late that afternoon. \n\nNow there was nothing left to do but let the cattle fatten up on the lush grass. About every third day someone would ride up to the high country and check on the cattle. It was mostly to make sure that the pastures weren't getting over grazed and that the herd was eating well. Most of the time it was Lewis and Alyssa that made the ride.\n\n<CENTER>********************</CENTER>\n\nTime for round up and shipping Lewis thought as he saddled Casey. It was the last week in August and they were going to bring the herd down from the high country. Besides the Randals and Tom, they had a few additions to the group. William looked at his \"crew\" and smiled. Alyssa was there of course; these days it seemed like if Lewis was around so was Alyssa. Josh had joined up for one more cattle drive to relive old times.\n\nTom's wife Helen had decided to move out to the ranch; she moved into Tom's room in the house. Helen said since Tom was going to stay on it was silly for him to drive back and forth to Prescott. She immediately took over the cooking and housekeeping chores. Helen was also going on the drive as the camp cook.\n\nOne more addition to the crew was a young couple that Helen knew, the Campbell's. They'd just moved to Prescott from some big city back east and were fascinated with the west and cowboys. Knowing the plans for Eagle's Nest, Helen arranged for the Campbell's to be the first \"dudes\" at the ranch.\n\n\"It'll give you an idea if you want to do this on a bigger scale,\" Helen told William when she informed him that he would have guests.\n\nRoy and Shirley Campbell arrived about two the afternoon prior to the trail drive. It was obvious from the way they were dressed that they knew very little about working on a ranch. Roy was taller than Lewis's 6' 2 and built like a string bean; Shirley was much shorter at 5' 6 and almost voluptuous. Their clothing was new and more appropriate to an Urban Cowboy setting than to a working ranch. The shirts had sequined designs on the front, the hats were oversized, and the boots were dressy and made to show off.\n\nShirley wore a split riding skirt, also with sequins on the front while Roy wore whipcord western dress slacks. Jim almost hurt himself trying not to laugh when he was introduced to the new comers. He quickly turned and walked toward the barn. Damn, that boy's belt buckle is as big as a pie plate, he said to himself.\n\nIt was left to Helen to suggest more appropriate and useful clothing to the Campbell's. She tried to tactfully tell them that although they looked very nice their clothing wouldn't really work on a cattle drive. The Campbell's and Helen were discussing what they needed when her husband walked up.\n\n\"Y'all look like dudes going to a gall darned rodeo,\" Tom said laughing. \"Best get your working duds on before we start the drive.\"\n\nLewis and Alyssa took the Campbell's to Cole's Corner so they could get working clothes. When Tom saw them the next morning he nodded his head in approval. \"Now you look like cowhands instead of drug store cowboys.\"\n\nThe drive was scheduled for three days. They rode up to the northern pastures on the first day. Helen, Lewis, and Alyssa set up camp while Tom, the Randals and their guests, the Campbell's, handled the round up. They worked all day gathering the cattle into one meadow. The next morning they started the herd back to the valley.\n\nThe next day was more of the same. Head the cattle back onto the trail, stop at midday for lunch and let the cattle rest and graze for a couple of hours, and back on the trail until late afternoon. They made camp and started all over again the next morning. They pushed the herd back into the home valley late on the third day.\n\nAs they were leaving, the Campbell's told William that this was the best vacation they'd ever had and they wanted to come back next year. They handed him a check made out to the Eagle's Nest for $1500. \n\nWilliam walked into the house as Tom was talking to the transport company. \"The trucks will be here day after tomorrow,\" Tom said to William.\n\nHe nodded, paused, and held up the check. \"I guess we got a dude ranch too,\" William said with a smile.\n\n<CENTER>********************</CENTER>\n\nEagle's Nest had a good year. In September they shipped 112 head to the stockyards in Phoenix and cleared just over 85 thousand dollars. Lewis used part of his share to pay Josh back for his help buying the three horses. It was enough to encourage William, Jim, and Lewis to stay with cattle ranching. The Dude Program looked financially promising too. The next order of business was Lewis and Alyssa's wedding.\n\nThe wedding was scheduled for the first weekend after shipping the cattle. Josh rented the dance hall at Cole's Corner for the wedding and reception. William was touched when Lewis asked him to be his best man. Alyssa and Helen did most of the planning for the wedding; the only input Lewis had was that he refused to wear a tux.\n\nJosh and Alyssa called her parents to invite them to her wedding, but they said they would be on a cruise that week and couldn't make it. Her father suggested she move the date; Josh suggested that he and his wife go to hell. \n\nThere was one other bump in the road for the ceremony. Alyssa asked Josh to give her away but three weeks before the actual day, Josh had an accident. He took a fall off one of the young horses he was working with and broke his leg. Josh was okay but with his leg in a cast he wouldn't be able to escort his granddaughter down the aisle.\n\nAlyssa got her grandfather home from the hospital and made him comfortable. The next day telling Josh she'd be back in a couple of hours, she saddled her horse and rode to Eagle's Nest. Lewis was surprised to see her as they'd planned to get together that evening for supper.\n\n\"Where's Jim?\" She asked after hugging and kissing Lewis. He pointed down to the barn and then followed her.\n\nJim was brushing Joshua and talking to the big horse. He saw Alyssa and stepped out of the stall to greet her. \"Hi little girl,\" he said with a big grin. He loved to tease her.\n\n\"I need a favor Jim and you're the first one I thought of,\" Alyssa told him.\n\n\"Sure Honey, anything you need.\"\n\n\"Granddad was supposed to give me away but he broke his leg. Do you think you could stand in for him and walk me down the aisle?\"\n\nJim looked at her for several seconds, swallowed the lump in his throat and replied, \"I'd be proud to little girl.\"\n\nAlyssa smiled, hugged Jim for about ten seconds and kissed his cheek. \"Thank you grandfather.\" She wiped a tear away and said, \"Got to get back home. See you later Lewis.\" \n\nTurning to Lewis, Jim rubbed his hand over his eyes and said, \"Now ain't that somethin?\"\n\nThe wedding was a great success and the reception was just as good. Several people said they'd never had such a good time at a reception. Lewis and Alyssa slipped away around midnight. No one, including William and Jim, knew where they were headed. They were back three days later with smiles on their faces.",
        "Things settled down after the uproar of the roundup and the wedding. One evening after supper, Helen and Tom were discussing where to look for a home in the area so they could be close to Eagle's Nest. Helen said she would take a couple of days next week and begin their search. She also said she would look for a part time job.\n\nWilliam, Lewis, and Jim had already talked about Tom and Helen's living arrangements among themselves. Lewis acted as spokesman and explained their idea to Tom and Helen. The Randals offered Helen the job as their housekeeper and cook; she'd been doing it anyway ever since she joined Tom at the ranch. Lewis also said they would renovate the bunkhouse and Tom and Helen could live there rent free.\n\nHelen and Tom looked at each other and Tom said, \"Sounds good to us.\"\n\nWilliam took over and suggested that when they got the dude ranch up and running, Helen could be the housekeeper and cook for that part of the operation too. She could travel with the herd on the drives in a chuck wagon and be the camp cook. Helen would be paid an extra salary when there were guests at the ranch. She could hire someone to help if needed but she'd be the ramrod. \n\n\"Why don't you two talk it over tonight and let us know what you think in the morning?\" Lewis suggested.\n\nHelen glanced at Tom and smiled. \"No need, I'll take the job.\" \n\nIt took Tom, Helen, and William two weeks to fix up the bunkhouse; Jim and Lewis took care of the normal chores around the ranch. Alyssa split her time between helping both groups. When the renovation was finished, Tom and Helen held a house warming party for the family.\n\nIt was at this party that Alyssa told them about an idea she'd been kicking around since the round up. \"You had your first paying guests during round up. I think you should start doing some advertising about your dude ranch.\"\n\n\"There's just one problem with what you said,\" William interrupted. \"It's our dude ranch. You're part of the family Alyssa. So are Tom and Helen.\"\n\nAlyssa walked over, hugged William, and said, \"Thank you.\" \n\nAs she returned to her chair, Jim spoke up. \"What about me? I think you're part of the family too.\"\n\nAlyssa grinned and hugged Jim. She sat down, Jim smiled and teased, \"Mores' the pity for you little girl.\"\n\nShe turned to Lewis and asked, \"I guess you want a hug too?\"\n\nLewis smiled, looked her in the eye and replied, \"Later darlin.\"\n\nAlyssa blushed but she returned his smile. \"Anyway,\" she continued. \"I have an idea. You, I mean we, need to put ads in vacation magazines and other publications. But the best thing we can do is set up a website.\"\n\n\"How will we monitor the site?\" Lewis asked. \"The only access we have to the internet is dial up service and it's so slow I don't know if it will help.\"\n\n\"We could get satellite internet service; something like HughesNet or Wild Blue. That would give us the access we need,\" Alyssa explained. \n\n\"A website?\" Jim asked not understanding.\n\n\"I'll explain later if we get it and after it's all set up,\" Lewis told him. \n\nWilliam listened to Alyssa and Lewis's ideas and understood that if the dude ranch was to prosper, they'd have to get the information out to the public. They couldn't depend on just word of mouth like the first couple that Helen had brought them. After a brief discussion concerning costs they decided to go ahead with Alyssa's plan.\n\nLewis knew something about computers, as did Alyssa so they went to Prescott and bought a powerhouse of a computer. Before she and Lewis even got the computer set up, Alyssa contacted HughesNet and within two weeks had the system up and running. They developed a website showing pictures of Eagle's Nest, the adventures the guest could have, pictures of the owner family and the \"wranglers\". They listed the dates and details of the three cattle drives available and contact information for the ranch.\n\nLewis suggested that they change the date of the next fall round up to Labor Day weekend. \"A lot more people can take vacations over Labor day than they can in the middle of October. And sometimes the weather gets nasty at the end of September.\"\n\n\"What will we do with the cattle until it's time to ship them?\" Alyssa asked Lewis.\n\nHe smiled, remembering that her granddad's ranch didn't have mountain pastures so they didn't move a herd back and forth. \"Won't make a lot of difference Honey. We'll just let em graze in the valley. The grass is better down here that time of the year anyway.\"\n\nWilliam agreed. \"We'll just ship two or three weeks later and still get the guests to come visit.\"\n\n\"Now all we have to do is sit back and wait for the onslaught of customers,\" Alyssa said. She added, \"At least I hope so.\"\n\nLewis talked to Jim one evening after the web site was built. \"C'mon Jim, I'll explain the computer and the internet to you.\"\n\nFor the next three hours Lewis showed Jim what a computer could do, where the internet could take you, and how you could keep in touch with people by email. Lewis showed and explained how the accounting software and Excel spreadsheets took the place of the handwritten records that Jim used to keep. He started to explain the technology behind the system but Jim's eyes sort of glazed over so Lewis went back to the what and not the how. The thing that impressed him the most was the Eagle's Nest web site. \n\n\"That's our place,\" Jim said pointing to the monitor. \"And that's me,\" he added when Lewis clicked on the pictures of the wranglers. \"And you say people all over the country can see this?\"\n\n\"All over the world Jim, all over the world,\" Lewis replied. \"Anyone, any place that can get to a computer can look at our ranch, and at you.\" Jim just shook his head in wonderment. \n\nThe group at breakfast had grown. In addition to Jim, William, and Lewis there was Alyssa, Tom, and Helen. Alyssa and Helen, with Lewis's help, cleaned the kitchen. As they were getting ready for the day's work, Jim spoke up.\n\n\"Reckon we ought to talk about building someplace for the dudes to sleep....and eat for that matter. Need to decide where we're gonna put it, how big, and if we can do all the work.\"\n\nWilliam smiled, grandfather may be from a different time but he knows how to get things going, he thought. \"Jim's right, this is a good time to make plans and get started cutting trees.\"\n\nFor the next two hours they discussed, debated, and planned the bunkhouse. William and Tom had both worked in the construction business in the past and Jim had built the ranch house and barn. It was mid October and the weather would soon be getting colder. They hoped to have the building under roof before the rain, snow, and sub twenty degree temperatures hit them. \n\nTom began work on the foundation while William, Lewis, and Jim cut the necessary trees. At the big grove of Ponderosa pine, they marked the trees to be cut. Jim watched and learned as Lewis cut the first tree. He explained to Jim that the technique was the same that Jim had used when he built the house and barn.\n\n\"You still cut a notch and then cut in from the other side just like you did with an axe and buck saw,\" Lewis told him. \"We just do it faster and safer using a chainsaw.\"\n\nLewis watched as Jim cut his first tree with the \"new fangled contraption\" as Jim called it. He had to smile at Jim; every time Jim cut a tree and watched it fall he got a big grin on his face. Jim was having a ball.\n\nBy the fourth day they trees were cut, trimmed, and at the building site ready to use. Working seven to eight hours a day including the weekends, using the ATVs and a block and tackle they were able to get the walls up in less than a week. Another three days and the roof was completed. The day after the last cedar shake shingle was nailed on, the first winter storm rolled through the valley. They were able to continue work on the interior of the new bunkhouse. \n\nThey were sitting at the kitchen table with a last cup of coffee after supper one evening when Tom brought up another problem.\n\n\"What are we gonna do about horses for the dudes? We've got enough for about four guests.\"\n\n\"I was thinkin the same thing,\" Jim added. \"We're gonna need more horses if we fill up that bunk house.\"\n\n\"There's your three mounts,\" Tom continued pointing to William, Jim, and Lewis. \"Don't think y'all wanna let some know nothing dude ride them. Alyssa's got her own cow pony and I brought two with me when I started work. Don't mind letting a dude ride Jenny; she's as gentle as a heel hound. That gives us four horses for guests, counting the three y'all had before.\"\n\n\"I'd hate to buy and take care of a bunch of horses with just the possibility of needing them,\" Lewis said. He looked at William and Jim. They looked as unsure as he felt.\n\n\"For smart people, you're not too swift sometime,\" Alyssa said chuckling. \"Why don't you talk to Granddad about leasing horses on an as needed basis? He's got a string of work and stock animals that he'd probably let you have.\" Then added with a big grin she added, \"If the price was right that is.\" \n\n\"I've got one thing too,\" Helen said joining in the discussion. \"How many guests do we need to cover the cost of having them? And what's the largest group we want to handle?\"\n\nLewis gave a quick snort of a laugh. \"I've got a MBA, I should have thought about that,\" he said to Helen with a smile. \"It's a good thing we've got you and Tom to keep our heads on straight.\" \n\nHe thought for a minute and continued. \"There's no minimum number of guests we need to cover costs. We can make money with just one guest.\"\n\nHelen gave him a puzzled look but William nodded his head. Now that he thought about it he knew what Lewis meant.\n\n\"We're already paying Tom and herding guests isn't much different than herding cattle; it's part of his job.\" Tom nodded in agreement.\n\n\"Don't make no never mind to me,\" Tom replied. \"Cattle or dudes, I'll prod em where they need to be.\"\n\nWilliam and Jim smiled at the old range boss. Lewis went on by saying, \"We'll pay you extra Helen when we have guests; they add to your duties and you should be compensated for the extra work. But our rates take your additional wages into consideration Helen, so our only expense will be food, horses plus some saddles and bridles and bits. It'll depend on the deal with Josh to see if we need to raise our prices to cover the cost of his horses and equipment.\"\n\nLewis stopped and looked at the group to make sure they understood his reasoning. \"I'm inclined to think that about ten guests on a drive are as many as we can handle. That'll give each one of us two dudes to keep an eye on.\"\n\n\"I don't think we should raise our rates because we use Josh's horses,\" Lewis added. \"If we absorb that expense we can keep our prices below most of the other guest ranches. We'll make up on volume what little extra expense we have.\"\n\nAlyssa smiled in pride at her husband. Once Lewis gets his teeth set on a problem, he worries at it until it's solved, she thought. She could see that the others at the table agreed with Lewis's ideas.\n\nThe next morning Lewis rode his Harley to see Josh. It was a little cold but Lewis hadn't ridden the bike much of late and just plain wanted to. Josh came out onto his porch to greet him.\n\n\"That's a strange looking horse,\" he said with a grin. \"Damn noisy one too.\"\n\nLewis returned the grin. \"It works better on roads than a horse and can go farther quicker.\" He got off the bike and joined Josh on the porch.\n\nJosh led him into the house and to the kitchen. Poured Lewis a cup of coffee after his cold ride and asked, \"Not that I'm not glad to see you but what brings you to see a poor old man?\"\n\n\"How are you doing with the horse ranch? I took your best hand,\" Lewis said.\n\n\"I'm doing fine. I'll hire a couple of college kids for the summer and I got two of my retired friends camping out with me and helping the rest of the time,\" Josh explained. \"Horses don't require as much tendin as cattle anyway.\" \n\n\"That's good. Wouldn't want you to work yourself too hard,\" Lewis teased. He hesitated and said, \"Like to talk to you about leasing some stock horses when we have guests at Eagle's Nest.\"\n\nJosh nodded and answered, \"Reckon we can work something out. I've got about a dozen that I'd consider leasing to you. They're all good workin cattle and are real gentle. They won't go buckin off your dudes. How much are you willing to pay for my superior horses?\"\n\nLewis laughed and the negotiations started. They both knew they'd come to an agreement but they enjoyed the 'horse trading'. An arrangement was made and they shook hands on the deal. Eagle's Nest would pay a daily fee for the use of the horses. The Randals would feed, water, and take care of the animals while they had them.\n\nThe only small bump in the road was the two days that Jim couldn't work. They had finished the walls but Jim wasn't up to helping with the roof. He said he didn't have much strength.\n\nLooking around William quietly suggested, \"Take a day off and rest.\" Then with a smile he added, \"You're not a youngster any more Jim; you're over a hundred now.\"\n\nWhile he rested he drew some sketches of the lodge pole beds he planned to build for the bunkhouse to save money. Jim took off for one day but was able to go back to work and help with the shingling. Alyssa and Helen took over the routine day to day chores of the ranch while the building was going on. Alyssa using the computer found good deals on bedding, linens, as well as kitchen equipment.\n\nThe bunkhouse was completed just before Christmas. The Randals and Tom and Helen made a final inspection to make sure everything was done. As they started back to the house, a truck pulled into the yard. Charley and Dotty Samuels got out. It was the first time that the Samuels had been back to Eagle's Nest since their visit to tend to Jim.\n\n\"Hello Doc,\" William greeted them. \"Hi Dotty.\"\n\nThe Samuels greeted everyone and were introduced to Tom and Helen. \"Understand we missed a wedding,\" Dotty said looking at Alyssa and Lewis. She hugged them both and said, \"Congratulations.\"\n\nCharley shook Lewis's hand and asked, \"Am I too late to kiss the bride?\" Alyssa laughed and kissed him on the cheek.\n\n\"Haven't seen you for a while,\" William said. \"Where you been keeping yourselves?\"\n\n\"Dotty was teaching a class in urgent care nursing out in California,\" Charley replied. \"She couldn't stand to be away from me for the six months so I went with her.\"\n\n\"More like he wouldn't know what to do with himself without me to keep him on the straight and narrow,\" Dotty said with a big grin. \n\nCharley laughed along with everyone. Glancing at Tom, Helen, and Alyssa, he looked directly at Jim, turned and asked, \"How've you been, William? You look tired, you been doing okay?\" \n\nWilliam realized that the question was really for and about Jim. \"Been doing pretty good for my age,\" he replied. \"Had to take it easy for a day or two. Guess I'm not as young as I used to be.\"\n\nDotty heard the exchange and saw the concerned look on her husband's face. \"William why don't you give us a tour of the new bunkhouse?\"\n\nWilliam nodded, \"Sure be happy too.\" Turning to the rest of the group he said, \"Helen could you set two more places for lunch please? I'll show off our work and we'll be right there.\"\n\nHe led Charley and Dotty back to the bunkhouse, telling them about how it was built. Inside he explained their plans for sleeping and eating arrangements.\n\n\"Good plan, nice place,\" Dotty said. \"Now, what's wrong with Jim?\"\n\nBefore William could answer Charley said, \"He's aged some since we saw him. A few more lines on his face and a little gray starting to show in his hair.\" William shook his head and Charley continued, \"You see him every day so you probably didn't notice the change.\"\n\n\"Of course that could be because of working outside,\" Dotty added. \"But I don't think so. Something's going on with Jim.\"\n\nWilliam told them that Jim took several days off because he felt tired but other than that he seemed fine. \n\n\"Well, if he has another episode like that call me,\" Charley directed. \"I'll come over and check him over. Now let's go get some lunch.\"\n\n<CENTER>********************</CENTER>\n\nWilliam and Lewis rode back to the corral. It was late April and calving season was beginning so they'd been out checking on the cattle. Alyssa was waiting for them as they entered the house; she was very excited.\n\n\"Guess what?\" And before either William or Lewis could answer she continued, \"We've got our first reservations; a family from Kansas. A Mr. Riley, his wife, and their two teenage sons want to go on the second drive up to the high pasture in July. They've sent a deposit and everything. Plus we have six other inquiries asking for more details\"\n\n\"Well that's the best news I've had in a while,\" William replied. \n\n\"That's not all. The Campbell's are coming back for the spring drive and they're bringing another couple with them,\" Alyssa added. \n\nThat evening at supper the talk was mostly about the spring drive and the guests that would be coming. They decided that the drives would be three day events. They'd stop half way the first day and camp overnight. The second day they would complete the drive and make camp again. And the third day the crew and the guests would return to the ranch and have a big cook out that evening to celebrate the end of the trail. The big drive back down the mountain in the fall could have an extra day tagged on because of the larger herd.\n\nLewis suggested they have the guests sign a waiver before they start on the drive. \"We don't want someone falling off a horse or something and filing a law suit against Eagle's Nest. But just to cover our butt we'll need to get some type of liability insurance. Let's see what the additional costs really are before we raise rates. \n\nAlso we need to form an LLC. A Limited Liability Corporation will keep the Dude Business separate from Eagle's Nest so no liability can pass to the ranch or our personal money.\n\nWilliam agreed, knowing some people are just waiting for a chance to sue someone. \"One more thing,\" William offered. \"You know we can't get cell phone coverage in the high country so we should add two or three handheld radios, sorta like walky talkies, for emergencies on the drive. If Josh agrees we could put another base unit at his place.\"\n\n\"We might have to hire another hand or two for that fall drive,\" Lewis informed them. \"You'll have to count Alyssa out. She won't be able to go\"\n\nWilliam was surprised and replied, \"Okay, but I thought you liked going on the drives Alyssa.\"\n\n\"Yes I do but I won't be able to ride by that time,\" Alyssa answered. Now William really looked confused. \n\nAlyssa took pity on William and added, \"Lewis and I are going to have a baby and I'll be too far along to ride.\"\n\nWilliam's mouth dropped open, his eyes got big and he sputtered for a few seconds. \"You mean I'm going to have a great grandchild?\" He asked with awe in his voice.\n\nLewis chuckled at his grandfather's reaction. \"Yes Grandpa, you're gonna have a little one to spoil just like you spoiled me when I was small.\" He turned and looked at Jim. \"And Cousin Jim, you're gonna have a little one to teach all the things you know.\"\n\nNow it was Jim's turn to be surprised. He said, \"Well, I'll be.\" Looking at Lewis he promised, \"You can count on it Lewis.\"\n\n<CENTER>********************</CENTER>\n\nThe spring drive went as planned with no major problems. The Campbell's and their friends the Bakers had a great time and promised to come back.\n\nOn the summer drive there were six wannabe cowboys. One of the young men, Jerry Pace, was the nephew of the Campbell's. He seemed to have a talent for riding and herding cattle. After talking to Jerry during the drive, Lewis offered him a job at Eagle's Nest for the fall drive. He accepted and Lewis had Alyssa's replacement for the big drive.",
        "The fall drive was the biggest as the whole herd would be brought down from the high pastures. They had over 300 head of cattle to bring back; it had been a very good season for calves. They also had the largest group of 'dudes' so far. Eagle's Nest had ten people visiting and reliving the old West. \n\nTwo days after bringing the herd home, Eagle's Nest shipped 100 head of cattle to market. Between the profit from the cattle and the profit from the 'dudes', the ranch was in better shape financially than it had been for many years. They received $78,000 for the cattle and took in just over $67,000 from the guests at the ranch.\n\nThe big drive was over and Jerry went back to his home. One week after shipping, William and Tom had ridden out to inspect the fences along the southern border of the ranch. Alyssa and Helen had gone to Josh's place for a visit, leaving Jim and Lewis at the ranch house. \n\nLewis had fixed lunch for them and went out to call Jim who was at the barn. Jim had said something about taking a ride after lunch. Lewis saw Jim's horse, Joshua, saddled and standing just outside of the barn door. That's strange; did Joshua get away from Jim? Lewis asked silently. He stepped off the porch and walked toward the barn. As Lewis got closer he saw Jim lying crumpled inside the doorway.\n\nJoshua didn't move more than a step or two as Lewis rushed to Jim's side. The big horse was trained to ground tie; his master had put him there and by God he wasn't moving. Lewis knelt and examined Jim before rolling him onto his back.\n\nJim's eyes fluttered and opened. Lewis started to pick him up but Jim ordered, \"Take the saddle off Joshua and put him in his stall.\" Lewis started to object but Jim interrupted. \"Take care of my horse first son.\"\n\nLewis quickly did what Jim asked. Then he picked Jim up in his arms, struggled to his feet, and carried him to the house. Jim was burning up with fever as Lewis laid him on his bed and called Charley Samuels.\n\nDotty answered the phone. \"Jim's collapsed Dotty,\" Lewis almost yelled. \"He's running a high fever. Can Charley come over right away?\"\n\n\"He's at Cole's Corner, I'll call him,\" Dotty promised. \"In the mean time I'm on my way. Wet some towels and cool him down.\"\n\nLewis heard a car drive up as he was putting a third towel on Jim's forehead. Dotty rushed into Jim's bedroom, felt his cheek, and took charge.\n\n\"Get his clothes off and put wet towels all over him,\" she ordered. \"We've got to get that fever down before he goes into convulsions.\" Following Dotty's orders, Lewis stripped Jim and began to try and cool him down. \n\n\"How'd you get here so fast?\" Lewis asked her.\n\n\"I drove my Jeep cross country; it would have taken too long following the road,\" Dotty replied. \"Although I don't think the Jeep is going much of anywhere until I get it fixed.\" Lewis gave her a questioning look and she added, \"I think I tore something off underneath. It was making a loud noise when I got here.\"\n\nThey continued to watch Jim, changing the towels to keep them cool. It was about 45 minutes before Charley arrived. He went into his doctor mode and examined Jim. \n\n\"Good move Honey,\" he said to Dotty. \"That's about all we can do right now.\"\n\nLewis heard another car slide to a stop outside. He went to the door to see who was there. Alyssa supported by Helen and her father slowly came into the house. Lewis immediately went to her.\n\n\"What's wrong?\" He asked with concern and fear.\n\nHelen smiled and answered. \"It's okay Lewis. Alyssa felt it was time for the baby and insisted on coming home.\"\n\n\"Our son is going to be born at Eagle's Nest,\" Alyssa vowed. \"It's his birthright.\"\n\n\"The baby might be a girl,\" Lewis said to Alyssa. \"We didn't want to know the sex.\"\n\n\"It's a boy Lewis. I know it's a boy.\"\n\n\"I tried to get her to stay at my place,\" Josh said. \"But she told us either we bring her home or she'd drive herself.\"\n\nHelen and Lewis got Alyssa into the ground floor bedroom at the back of the house. Dotty came into the room as they helped her onto the bed.\n\n\"Lewis go boil some water please,\" Dotty asked. Lewis left, Dotty smiled at Alyssa and said, \"We really don't need the water but it will keep him busy. We don't need Lewis underfoot right now.\"\n\nCharley checked with Dotty and saw that she had everything under control with Alyssa. He went back to Jim's room. He rechecked his blood pressure, timed his pulse and listened to Jim's breathing. William stood by the bed and watched Charley with a worried frown on his face. Lewis didn't know what to do. He would look into Jim's room for a couple of minutes then go to Alyssa for a while and then go back to the kitchen to see if the water was boiling.\n\nCharley started an IV and stepped out of the room, motioning for William to follow him. Lewis joined them.\n\n\"What's wrong with him Charley?\" William asked. \n\n\"Short of a complete blood work up and a lot of tests, I can't say for sure,\" Charley replied. \"But I've got an idea. This is going to sound strange, but then again Jim even being here is strange.\" He saw the expectant look on William and Lewis's faces. \n\n\"You know we thought that the smoke from that rock put Jim into a suspended animation right?\" William and Lewis nodded. \n\n\"But....\" William started.\n\nCharley interrupted him. \"When I came back from California and saw Jim, I thought he looked like he'd aged five years in the six months I was gone. It's only been a few days since I saw him the last time and he looks at least five more years older; he has more gray in his hair and several more wrinkles on his face. I think whatever effect that smoke had on Jim has worn off.\"\n\n\"What can we do for him?\" Lewis asked.\n\nSighing Charley said, \"Nothing. His heart rate and pulse have slowed and his breathing is becoming labored.\" He paused for several seconds and continued, \"Jim is dying of old age at an accelerated rate right in front of us and there's nothing we can do. Nothing except make him as comfortable as we can.\"\n\nThe three men stared at each other for more than a minute. Neither of them knowing what to say or how to react. Charley said, \"The IV should help control the fever and I can give him meds to ease his pain. But that's about all we can do.\"\n\n\"How long?\" William finally asked. Charley just shook his head. \"Don't give him pain medicine if you can keep from it. Jim wouldn't like it.\"\n\n\"Lewis you need to get in here,\" Dotty said from the bedroom doorway.\n\nHe rushed to the other bedroom expecting the worse. What he got was the best.\n\nAlyssa was leaning against the headboard propped up by pillows. Her hair was stringy with sweat, her face was flushed and she looked tired; but she also looked triumphant. In her arms she held their baby. She motioned for Lewis to come closer.\n\n\"Come meet your son Lewis,\" she said. As Lewis sat on the bed beside her, she proudly added, \"Told you it was a boy.\"\n\nLewis smile with tears in his eyes. \"Yes you did Ally, yes you did.\" She handed him the boy and he held his son for the first time. He waited until he could talk and asked, \"What are we gonna name him?\"\n\nAlyssa smiled and put her hand gently on the baby's head. \"The name you suggested when we found out I was pregnant should work just fine. Don't you think?\"\n\nThe two new parents bonded with their son. Helen and Dotty smiled, wiped the tears away, and left the room.\n\nAfter several minutes Alyssa asked, \"What's going on with Jim? I heard Charley and Dotty talking just before the little one was born.\"\n\nLewis explained Jim's condition and what Charley thought. \"I think he's right, I think Jim is dying.\"\n\nThe rest of the day and that night, Jim was unconscious or hallucinating. After Alyssa went to sleep, Lewis went into Jim's room and gave William a chance to rest and relax a little. \n\nJim mumbled in his sleep and then said plainly and loud enough for Lewis to hear. \"I'll see you soon Chante. You too Iron Buffalo. Boy do I have a lot to tell you.\" Then he drifted away again.\n\nThe next day Alyssa sat with Jim for about an hour. She wiped his forehead with a cool wet cloth and talked to him. Before she left she leaned over and kissed him. \"Thank you Jim, I'm gonna miss you.\"\n\nCharley and Dottie stayed over. Though there was nothing they could do for Jim, they couldn't leave. Everyone took turns sitting with him, just in case he woke and needed something.\n\nIt was around midnight when Jim came out of his delirium. He was alert for the first time since he'd fallen in the barn. Lewis was sleeping, slumped in an easy chair beside his bed. Jim smiled at the boy.\n\n\"There any water in this place?\" He asked, waking Lewis.\n\nLewis was startled but quickly got him a drink. \"I'll call Charley,\" Lewis said and headed for the door.\n\n\"No, let him sleep boy,\" Jim ordered. \"I'm not gonna be around that much longer and he can't do nothing anyhow.\"\n\n\"But...\"\n\n\"Don't argue with me son. I know my time is over; I can feel it in my bones.\" Jim took another drink of water. He smiled and said, \"It's been a hell of a ride ain't it? Just sit and talk with me a spell.\"\n\nInstead of sitting down, Lewis held up his hand. \"Just a second, I'll be right back. Please don't leave yet.\" He left the room, almost at a run.\n\nLewis returned carrying something; Jim couldn't make out what it was. Walking over to the bed, Lewis sat next to Jim and unwrapped what he had in his arms.\n\n\"Grandfather, I want you to meet James Ambrose Randal. He's your great, great, great, grandson.\" He held the baby close to Jim.\n\nJim reached out to touch the baby's hand. James Ambrose grabbed his finger and held on. Jim was almost overcome by emotion. \"You named him after me?\"\n\nAlyssa walked into the room and said, \"Couldn't think of any other name that fit Grandfather. It's a proud name and he'll carry it well. Lewis and I will see to that.\"\n\n\"One life leaves, one life begins and life goes on,\" Jim said. \"Chante will be pleased when I see her.\" He leaned back and said, \"Think I'll rest for a bit.\"\n\nLewis turned and handed the baby to Alyssa. When he turned back Jim had gone to meet Chante.\n\n<CENTER>********************</CENTER>\n\nWilliam thought that Jim would like to be buried the Lakota way. He and Lewis climbed the trail and cut lodge poles. The poles came from the same stand of trees that Lewis had cut to make a stretcher to get Jim down the mountain.\n\nAt the top of the trail, just behind the tall rock butte and facing the blocked cave entrance they fixed four seven foot long poles into the ground making a sort of rectangle. Going back to the tree grove, Lewis made a stretcher using lodge poles and smaller branches woven between them. They carried it back down to the truck at the trail head. William and Lewis laid Jim's body on the stretcher and carried him up the trail to the rock butte. They placed the stretcher onto the four uprights with one of the poles at each end and tied it in place. This would be Jim's final resting place.\n\nJim was dressed in jeans, cowboy boots and his Stetson was laid beside him. On his wrist they'd put a woven horsehair bracelet; the hair was from the tail of his horse Joshua. Laid next to him was a flat piece of oak with the Eagle's Nest brand carved into it. The last item with Jim was a picture of William, Lewis, Alyssa, and James Ambrose. They had wrapped Jim in the buffalo robe that had hung on the wall in his bedroom.\n\n<CENTER>********************</CENTER>\n\nIt's been two months since Jim left us, Lewis thought one evening at supper. \n\nTwo months of mourning and sadness with little laughter. Young James Ambrose brought smiles to his parent's faces and to William too, but the happy, full of life discussions around the supper table were gone. Reacting to something the baby had done, Tom, Helen, and the Randals smiled but their smiles very quickly disappeared.\n\n\"Jim wouldn't like this,\" Lewis said surprising everyone. \"He wouldn't like us sitting around moping about him.\" Lewis looked at his family and friends challenging them to disagree. \"Jim always said you took what life threw at you and beat it at its own game.\"\n\nHelen sniffed and dabbed at the tears that came into her eyes. Alyssa put her hand on Lewis's shoulder, knowing that he maybe more than anyone, he was hurting.\n\nLewis laughed. \"He always said don't worry about what you can't change. Just go on and get the job done the best you could and the hell with the rest.\"\n\nTom chuckled, remembering the times he'd spent with Jim working the cattle. Helen gave Lewis a small smile and William laughed out loud.\n\n\"You know my unit sergeant in the Guard said the same thing, different words, but the same meaning,\" Lewis told them. \"He was a grizzled old bear with twenty years in the Marines and another ten in the Guard. When we'd start complaining and bitching about the heat, or the lack of beer, the lack of female companionship or anything else that we couldn't change he'd say, \"Soldier, shut up and soldier\". That's what Jim was saying too.\"\n\nThat evening they stopped mourning and just remembered the good times. They frequently told funny stories about Jim's reaction to modern technology. Lewis talked about Jim's fascination with the truck and the ATVs but that his first love was the horses. They laughed at Jim's yelling into the phone in spite of being told that he could talk in a normal voice. William remembered how Jim would watch the TV but still called it a damn babble box. All of these stories made everyone feel better as they remembered the good times. The atmosphere at the ranch improved and soon everyone was laughing and joking again.\n\nThere were several changes in the lives of the people close to the Randals over the next few months. Doc Charley Samuels and his wife Dotty decided that a life of retirement leisure wasn't for them. They made a deal with Ted Cole, the owner of Cole's Corner, to build a small cabin on his property. When the construction was finished, the Samuels opened a medical clinic for the people living in the area.\n\n\"It's what I've done my whole adult life,\" Charley told William one day. \"I don't want sit around telling myself how good I used to be. Dotty and I want to continue helping people as long as we're able to.\"\n\nCharley and Dotty helped everyone that came to them. The ones that could pay them did, but they never turned away anyone that needed help. Sometimes they received money for their work and sometimes they got sides of beef, or chickens, or hams; whatever their patients paid it was fine with them. \n\nRoy and Shirley Campbell became fixtures at Eagle's Nest. They would come out once or twice a month and spend the weekend being cowhands. Roy became a good source of word of mouth advertising for the ranch; he told all his friends in Prescott and back east about Eagle's Nest and the cattle drives. Several people followed his advice on finding out what the real West was all about.\n\nJerry Pace, who Lewis had hired to replace Alyssa on that one drive, decided he wanted to be a rancher. He was going to college in Prescott for book learning, as he called it, about ranching. Jerry would come out to Josh's place or to Eagle's Nest almost every weekend. He said working on the ranches taught him what real life ranching was about.\n\nTom and Helen did a great job, both with the day to day operation of the ranch and with the guests. Lewis, William, and Alyssa gave them 5 per cent of the business.\n\n\"You two have been working hard,\" William told them. \"But you always work a little harder for yourself.\"                 <CENTER>********************</CENTER>\n\nIt was late October and just over a year since Jim had died. The fall roundup was over and Eagle's Nest had shipped its cattle to Phoenix. Lewis, Alyssa, and William rode to the trail head leading up the mountain to the high rock butte and the fallen cave. Lewis had James Ambrose in a backpack carrier and rode Joshua. They were going to visit Jim's resting place.\n\nJames Ambrose was now a year old and the family resemblance to his parents was plain. He had the same piercing green eyes as his mother and the dark, almost black hair of his father. James inherited his complexion from his great grandfather, William. But his most startling feature at this young age was the streak of white hair over one ear; just like his father's.\n\nSlowly and carefully they climbed the trail to the rock butte. William built a small fire, raised his arms toward the sky, and chanted a Lakota death song. The song completed, they each said a prayer according to their own beliefs. This was Alyssa's first visit to the burial site and she looked around with interest.\n\n\"Is that the cave over there?\" She asked pointing to the collapsed entrance. Lewis nodded. \"Why put Jim up here?\"\n\nWilliam smiled and replied, \"The Lakota believe that life is a circle so this place sort of completes the circle for Jim. His old life ended here and then his new life with us began here; Now that life will end here. And Jim believed he would join Chante when he was done with this life.\"\n\nHe stopped for about a minute and looked up at Jim's resting place. \"Besides he can watch the eagle's nest from here,\" William added and pointed to several eagles soaring over the rock butte. \"It just seemed the logical place.\"\n\nLewis had moved little James around in front of him. As they turned to leave, James turned his head and stared.\n\n\"What are you looking at Jim?\" Lewis asked his son. \n\nJames Ambrose lifted his small hand and pointed at the cave.\n\nThe End."
    ],
    "authorname": "woodmanone",
    "tags": [
        "western",
        "action adventure",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-second-hundred-years-ch-06"
}