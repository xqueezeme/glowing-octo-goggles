{
    "title": "Gosh!  Ch. 02",
    "pages": [
        "Coach Wise sped all the way to Randy Hymen Fields, one of the team training grounds that was down in a gully under a bridge high above. With no residences within earshot it was a perfect place for a 'party' of the kind planned to welcome Cindyslut to Malibu High School.\n\nHe couldn't help but squeeze his cock through his jeans on the way there... something countless others had done while also making their way down to the fields.\n\nNotices had been placed in adult bookshops the day before, and on the Internet site only hours before, along with fliers around the school, as well as the local college and fraternities. Young and old men were turning up in their droves, roaring into the parking lot and passing signs saying \"Quiet! Slut this way!\" with an arrow!\n\nPoor Cindy, who had just been gangbanged senseless, was on a high and in a constant blush. She found herself sitting between two 'friends' on a bench in the girls change rooms. As the effect of the hash cookies slowly had worn off, Andrea had slipped two ecstasy tablets into a liter of water Cindy was forced to drink, well... 'encouraged' is the right word, but she had to drink it all.\n\n\"Drink!..drink!..drink!..drink!..\" Everyone joined in.\n\n\"But it's only water,\" said a cum streaked Cindy.\n\n\"Yeah,\" said Andrea, the Head Cheerleader, \"but you are going to drink a LOT tonight...\" The other girls started giggling madly, \"and you know it's better to be well hydrated before you drink.\" The rest of the team fell about laughing and Cindy joined in... though she was not really sure what was so funny...  She smiled when the first beer was pushed into her hand and she raised the bottle.\n\n\"Cheers!\" she yelled and everyone cracked up again. Once the noise had died down, Andrea announced, \"Ok, nearly ready... hold her down and cuff her, it's time to get the nurse!\"\n\nAndrea's brother, Jake Baxter, the quarterback from the schools team, was busy doing what he knew best. That is, organising people. He felt like a traffic cop directing people to different parts of the field. But sure enough most complied, even if some were difficult.\n\n\"What do you mean I gotta sit over there?\"\n\n\"Well, we have events of all kinds to welcome the new slut, I mean cheerleader, and everyone will eventually get a turn at her, I mean a picture with her, I promise you that...\"\n\n\"Oh... ooook...\"\n\nThe conversation was typical of many Jake had as the evening turned into night and the lights of the Fields began to do their job... He and a few others from the team were basically directing traffic... setting up games and trials and hoops for Cindy to jump through. All with an audience of horny guys watching. Every time Jake looked around at the hundreds of guys now gathered, he smiled and tried to control his own hard-on.\n\nJesus, it's all been so easy, he thought to himself. I mean I know we got the heads-up from my cousin at Cindy's last school, but who would have thought that this girl would have been so easy to use and abuse... it's like there is no-one on her side... no-one... \n\nJake surveyed the Randy Hymen Fields with satisfaction... it looked like all was in readiness... Andrea would be pleased... \"I just might get that blowjob from my sister after all,\" he thought. He shook his head at all the cameras being tested and pointed at the various places around the Fields where Cindyslut would be 'performing'...\n\nCindy struggled a bit as the catheter was inserted into her urethra by the sneering school nurse who kept looking up and smiling into the cam-corder held by one of Cindy's cheer-leading 'friends'. The cuffs holding her arms behind her back had started to pinch, but before Cindy could protest, a tube was pushed into her mouth and taped.\n\n\"Ooooo, uckkyyy!\" Cindy garbled as her own piss began seeping into her mouth. She knew it was piss, she had tasted piss before! She immediately realised she would have to stop herself peeing or keep swallowing just so she didn't drown! She didn't want to further ruin her cum-stained cheer-leading outfit, even if it was 2 sizes too small!\n\n\"Cindy...\" said Andrea with a serious look on her face, \"You DO want to join the Slut Club don't you?\"\n\n\"Oh yesh!\" cried Cindy, the tube taped into the corner or her mouth distorting her speech. \"I wann oo bee oh'ular ike uh resh oh oo... at'ss all I e'er wann'ed!\"\n\n\"Cindy, I just KNOW you are gonna love the rest of your initiation girl, and who knows... when you are done... you just might be the most popular girl in the whole county!\"\n\n\"Weally???\" said Cindy, wide-eyed and with cum still dripping down her neck.\n\n\"Yeah for sure, but if we are gonna make this initiation party then we had better get going...\"\n\n\"Well ok en... but um, oo I et to glean up blease Anwea?\" Cindy pleaded...\n\n\"Oh come on girl, it's the Slut Club you are trying to get into, not the Country Women's Club,\" and the whole team cracked up as Andrea quickly blindfolded Cindy, dragged her to her feet spluttering, and led her by her cum streaked arm out into the parking lot and into Andrea's convertible. Cindy was thankful Andrea uncuffed her wrists then recuffed them in front of her. That way she could wash down her piss with the beers being constantly pushed into her hands!\n\nThe multitude of men were getting restless and Jake and his pals found themselves busy quietening and reassuring most of the 'patrons'.\n\n\"Sure, she'll be here soon, I can guarantee it, just remember... complete silence when the signal is given...\"\n\n\"Yeah yeah, I got it...\"\n\nJake found himself shaking his head again as he looked across the fields... \"Jesus there must be 500 guys here,\" he thought... I wonder what Andrea would do... then he snapped his fingers and his eyes lit up...\n\nQuickly he passed the word around to his teammates and then out into the crowd... to begin with only a few volunteered, but when he added \"the cheer-girls are helping,\" anxious guys started standing and walking to the Donation Tent... in no time at all there were several lines of willing volunteers waiting to help out!\n\n_______________\n\nCindy was sitting crushed between her teammates in Andrea's car on her way to god knows where, with a beer bottle in each hand. All she knew was that her shirt was bunched up above her breasts and her nipples were being tweaked and the wind was in her hair! She loved the wind in her hair, but her hard nipples were such a distraction that she could hardly speak.. \"Oh c..cumm on oo ..uys...\" she complained and drained another beer...\n\n\"Wh.. where ah ee oing Anwea???\" Cindy yelled above the screaming wind. \n\n\"Oh you'll find out soon enough slut!\" replied Andrea, laughing with her teammates and directing the car straight to Randy Hymen Fields. \n\nIn her rear-view mirror Andrea could see one teammate pulling hard on one of Cindy's nipples and she squirmed and rubbed her thighs together... \"Damn she's got a great body for a slut...\" she thought. Then another car passed and she saw once again how her teammates stood in the back and theatrically pointed at Cindy to get the passersby's attention. Andrea also turned her head to the passenger seat to make sure Trudy Dunbar, the Vice-Captain of the team, was getting great shots of the long blonde-haired buxom slut's predicament with her digital cam-corder...\n\n\"I'm gonna make a fucking fortune tonight...\" thought Andrea to herself as she put her foot down...\n\n\"Ok... time to make everything happen...\" said Horace Mortimer out loud, and yet to no-one in particular...\n\nHe punched a couple of buttons and turned a dial or two and sure enough the Internet sprung up and screens in front of him flickered to life, as did the voices in the ear-piece now pushed into his ear...\n\n\"Ok you guys keep it down...\"\n\n\"Oh sorry Mr Mortimer,\" cried a chorus of voices, followed by various explanations of where the proceedings were up to.\n\n\"Ok, ok... 'Slutcam 1' are you there???\"\n\nThere was a crackle in his ear-piece followed by Andrea's sweetest voice, \"yes Mr Mortimer, I'm here...\"\n\n\"E.T.A. pet?\"\n\n\"About ten minutes Sir...\"\n\n\"Ok.. ok... 'SlutMaster 1', everything in readiness???\"\n\nJake sprung to attention, \"Ah, yes Sir... made a couple of last minute changes but I am sure they will meet with your approval Sir...\"\n\n\"Wonderful.. wonderful... ok... and the rest of you... all in readiness?\" asked School Inspector Mortimer.\n\n\"Yes Sir!\" erupted the voices... half of which he didn't recognise. Well why would he, there weren't any cute girls at all in the photography club. He snickered and brought another screen of the panorama of Randy Hymen Fields into focus... \"What's that there?\" he asked out loud, \"Jesus... is that??... Oh my god Jake you are a genius...\" ahahhahahhahahaaaaaa he laughed as he started the web-cam feed on www.Cindyslut.com...\n\n\"Ladies and gentlemen... let the fun begin!\"\n\nAndrea squealed behind the wheel she was so horny... \"God there is gonna be so many horny guys there...\" she thought to herself, as she rounded the last corner and brought the car into the packed parking lot, \"lots and lots and lots of hard cocks!\"\n\nCindy squealed too, but she squealed cause someone, she didn't know who, had once again twisted her nipples savagely. They were so hard they ached and she could feel the puddle of cum and her own juices she was sitting in. She was drinking beer and piss and not giving a damn! She felt like she had been blushing for hours! For some reason, she actually felt goooood. She guessed it was all the attention from her friends that made her feel special, but unbeknownst to our heroine, she was under the influence of two ecstasy tablets and along with the beer she had been fed all the way to Randy Hymen Fields! She was feeling no pain at all! \n\nHorace was cutting from camera to camera showing the wide eyes of the gathered throng as well as the diminutive beauties leading the blindfolded cheerleader... \"Ok, Jake she's about to come around the corner... give the signal for silence... then when she's in center stage lets get a roar out of the crowd, eh?\"\n\n\"Yes Sir!\" Jake gave the signal and a hush fell over the crowd as Cindy was led around the corner. She felt the presence of males... their sweat, their scent and their breath, and despite Jakes best efforts, there were murmurs coming from the crowd as people shifted positions to get a better look at the scantily clad, blindfolded and handcuffed cheerleader.\n\nCindy blushed and shuddered behind the blindfold. Her legs felt weak and she had a bad feeling about all this. Andrea had recuffed her hands behind her back again. Suddenly she felt she was in a crush of cheerleaders bodies as her team gathered in close, and whispers from different members invaded her ears. \n\n\"So you want to be in the Slut Club huh?\"\n\n\"It's a very exclusive club Cindy.\"\n\n\"Yeah very exclusive.\"\n\n\"Only the most 'popular' girls are in it.\" \n\n\"Yeah only the most popular.\"\n\n\"But you have to get through this to be accepted.\"\n\n\"Yeah, you have to get through it.\"\n\n\"Yeah.\"\n\nJust then Cindy felt a collar being fastened around her neck. She knew it was a collar because she had worn one a couple of times before. And whenever she did, she knew that something bad was about to happen. Cindy struggled a bit as hands tightened their grip on her. \n\n\"Oh nooo, nooooo. 'ot are oo 'oing? 'ot are oo 'oing to d... owwww!!!\" screamed Cindy as her wrists were pulled up high behind her back and clipped to the back of her collar, pulling her shoulders back severely and jutting her tits out obscenely.\n\n\"Ugh...\" Cindy grunted as the cheers-quad fell away from her and Andrea, facing her, grasped her thick and protruding nipples firmly between thumbs and fingers. Andrea appeared to be laughing but she couldn't be heard. The crowd had erupted into cheers and jeers at the sight of the cheer-girl having her big tits wobbled all over the place by the nipples.\n\nCindy's knees almost collapsed from the shame she felt at that moment. She could hear lots of voices, maybe a hundred. Oh god maybe more... \"What is going to happen to me?\" her brain cried. And yet, to her further shame she could feel her pussy juicing up and thoughts began racing through her head. Oh god no... They won't they can't... It can't be happening all over again... God I hope I don't have to blow them all like at Rigby High... Or like at Hamilton High when all the teachers and the black janitors fucked my ass... Or like at La Perouse High where all my so called 'friends' made me wear a buttplug for a whole semester, and clean it and reinsert it every lunchtime, in front of everyone. God it's happening to me again! She suddenly realised her mouth was full of her own piss and she had to swallow quick!\n\nAt that moment Cindy's cheer-girl top was jammed down over her shoulders and her enormous rounded breasts jumped out at everyone, nipples huge and throbbing. The stretchy lycra top effectively bound Cindy's elbows to her sides, and, with a few precise adjustments from Andrea, also cupped the lower half of her huge firm tits, making them look even higher on her chest than they actually were. \n\nAndrea's abuse of her nipples had them throbbing and thickly erect on the tips of her big globes. The crowd had gasped into silence at Andrea's sudden swift move and as she stepped away from Cindy, a collective sigh of wonder hushed over the crowd. Cindy's eyes blinked behind her blindfold, wondering what god-forsaken use would be made of her. She shuddered at her exposure and instinctively rubbed her thighs together trying to relieve the hot itch... \"Oh god no, I have to stop doing that!\" She thought, \" My cunt is so wet!\"\n\nJust then Jakes booming voice was met with riotous cheers and applause as he announced, \"May I present 'Cindyslut', certified dumb-assed whore and next pledge to the Slut Club!\" The crowd went wild!\n\n\"I know you are all here wondering what is going to happen...\" Jake continued, \"so I'm going to tell you how proceedings are gonna go...\" Again cheers rang out and Jake waited for them to abate before continuing.\n\n\"Cindyslut here has an full initiation to get through tonight, and we are all here to witness it...\" More applause and wild cheering.\n\n\"And Cindy... if she can get through all the tasks and torments we have planned for her... will become the most popular girl in the whole town!!! Courtesy of the Slut Club!!!\" \n\nThe cheers and applause were deafening. When they finally died down, Jake announced, \"Alright people, if you will take up positions around the shot-put area, we will begin... First up is the Piss Test!\" Once more the crowd erupted in wild cheering and moved en masse over to the shot-put area.\n\n\"C'mon slut,\" said Andrea \"get your ass into gear, we haven't got all night.\"\n\n\"Bud I caaan't Anwea... I'm too... urghh ...I cand talk pro'erly..\" Cindy whined. Andrea pulled the catheter out of Cindy's mouth and untaped it then whipped her arm back ripping it from Cindy's piss-hole. \n\nCindy almost got to cry out before Andrea's tongue slid into her mouth and her lips were covered. \"Mmmm... no wonder you like to drink your own piss Cindy, it's quite delicious!\"\n\n\"But, I...\" \n\n\"Oh stop your complaining, don''t you know how good it is for you? Haven't you read how it's great for your skin, helps you diet and even makes you a little high? Gee Cindy, you really have to read more...\" \n\n\"I.. I'm sorry, I just didn't know...\" Gosh.\n\nShe just wanted to get out of there. And she hadn't caught Jakes words properly and she sorely needed to go to the little girls room. But she had been trying desperately to hang on. And now she didn't seem to need to go so bad. She was so confused. Was it still about the Slut Club or were they just using her like in the past? What if it is about the Slut Club and I fail and I don't get in? I'll have blown it all over again!\n\n\"At least let me take a piss Andrea, pleeeease!\"\n\n\"Not a chance slut, you're gonna need it for the first task! Now get your fucking feet moving whore, or it will be a whipping for you between the goal-posts.\"\n\nAt this last remark Cindy's resolve flew out the window. \"Jesus,\" she thought, \"I don't want to get a whipping in front of everyone, god how humiliating!\" She straightened her back in a stupid attempt at courage and was suddenly pulled hard by the nipple and she whimpered as she was roughly led over to the shot-put area where Jake had again taken control.\n\n\"Friends, we are all here this evening to witness Cindyslut's attempt to enter the Slut Club. As I said she has various tasks and torments to endure. We are her witnesses. And we are her judges. If anyone sees her cheating or scrimping or cutting corners you are to raise one hand immediately whereupon proceedings will cease. The 'problem' will the aired loudly and we all will judge. Understood? I will decide whether the task is completed, done again, or whether punishment will be the penalty. Punishments will be administered between the goal-posts at the southern end.\" Cindy winced and shuddered again at the mention of the goal-posts. Her face burned hotly and her pussy throbbed at the thought of being whipped. She always came when she was whipped. God.\n\n\"Yeahhh!!!\" Nods and agreements filled the air as Cindy stood shivering in fear, hoping no-one would notice the trickle of piss running down the inside of her leg.\n\n\"Ok, ok quieten down please,\" said Jake, his arms flapping slowly like a seagull, \"Task 1: Piss further than three yards while blindfolded. Rules: One hand must be on the ground at all times. Torment: Andrea, nipple clamps please!\" The crowd oooed and ahhhed and all Cindy could think was, \"Nooo, nooo, nooo they'll make me horny!\" Andrea stepped up to Cindy like an assistant on a game-show, and with a flourish, presented the clamps on a chain to the crowd amidst the cheers.\n\n\"Arghhh!\" cried Cindy twice as the clamps bit into her nipple flesh and she shuddered and felt her pussy juice up even more. \"Nooo, nooo, please not clamps!\" she thought as she bit her lip and felt another trickle of piss run down her inner thigh.\n\n\"She's as ready as she'll ever be!\" yelled Andrea as she pulled poor Cindy into the shot-put ring and crumpled her knees with a push behind them. Cindy fell to the ground and groaned as piss pains ran through her abdomen.\n\nThe crowd took up the chant, \"Piss! Piss! Piss!\" Cindy positioned herself with a hand on the ground as instructed and spread her thighs and gasped as another shudder of shame burned through her. \"Oh god this is awful I cant believe I'm gonna do this... but it's not as bad as being whipped... god my nipples ache...\"\n\n\"C'mon slut! Do it!\" hissed Andrea in her ear and Cindy heard the voices of the rest of the team take up the chant, \"Piss! Piss! Piss!\"\n\n\"Jesus three yards...\" Cindy thought, as she welled up her piss and slid two fingers down to part the pink puffy lips of her cunt. She suddenly exploded with piss and let out an ungodly \"Ahhhh!\" easily clearing 4 yards and drenching one poor guy holding a cam-corder. \n\n\"Great shot! Great shot! Now quick zoom into her cunt!\" screamed an excited Horace into his microphone. The screen in front of him lit up with his step daughter's pulsing pink pussy still dripping piss and the directional microphone picked up Cindy pleading, \"Did I do it? Did I?\" \n\nHorace laughed like a maniac as the hit meter on the web-site went nuts.\n\n\"Get that little fucking tart to the next task Jake, everyone's aching for it!\"\n\n\"Yes Sir,\" he said into his mouthpiece, then to the crowd, \"Ok everyone! Next task! 'Beer or bust!' Over to the Donation Tent!\"\n\nAndrea pulled Cindyslut to her feet by a pigtail and she squealed and everyone laughed and jeered.\n\n\"Why are they being so mean, I did good didn't I?\" Cindy whined as she was dragged blindfolded and stumbling. Donation Tent? She wondered if she was doing something for charity! \n\n\"Oh shut up you stupid slut,\" giggled Andrea as the crowd settled in a semi-circle around them. Cindy couldn't help it and giggled too! She was plonked onto a chair and felt the undersides of her breasts resting on a table in front of her. The clamps were still tight on her nipples. She liked them and hoped they would stay. She felt little pulls and pushes on them as electrodes were attached to the clamps. ",
        "\"Right slut are you ready?\" Buzz! Buzz! Jake pressed the button on the remote in his hand and Cindy stiffened and gasped! Her nipples were suddenly on fire!!\n\nShe just about screamed, \"Yes Sir!\" And the crowd cracked up as four pitchers were brought over in front of Cindy by her cheerleader friends. Two pitchers obviously contained beer but the other two swam with thick ropey cum. Two pitchers filled with the cum of over two hundred men. The thick slime had an acrid smell Cindy recognised immediately. She crinkled her nose and swallowed instinctively.\n\n\"This task is relatively simple...\" said Jake, \"You choose two pitchers out of the four in front of you, then it's two minutes to down each pitcher, two pitchers to down, or it's a whipping! Any spillages and your tits get zapped!\" \n\nThe crowd went bananas! Jake quietened them with his impression of a seagull again. \"Alright, alright, that's enough, we don't want to be here all night!\" \n\n\"Why not!\" shouted a heckler to more guffaws from the crowd. \n\n\"Ok, ok, settle down ...Now Miss Cindyslut, there are four pitchers in front of you...\" the crowd gasped and collectively shook their heads as, blindfolded, Cindy nodded at two and chose her poison. Andrea quickly stepped in and made sure Cindy's choices were one pitcher of beer, and one pitcher full to the brim with warm cum, much to the delight of the cheering crowd. The other cheerleaders fought over the two remaining pitchers, pushing and pulling them back and forth and spilling half the contents of each down their fronts! They were all laughing. Many in the crowd were stroking hard cocks through their pants. Some had even pulled them out!\n\n\"Alright! Let's begin!\" Jake shouted. Cindy wondered how on earth she could do it with her arms strapped up behind her back!\n\nAndrea had been looking forward to this from as soon as Jake suggested it. She moved in behind Cindy and pushed her cunt against Cindy's fingers. She leaned over and with each arm coming around from behind Cindy, she picked up the pitcher full of beer. \n\nSeeing all was in readiness, Jake announced, \"Ok, two minutes! Go!!!\"\n\nAndrea tipped the pitcher up to Cindy's mouth but of course it was hopeless. She could hear the stupid slut swallowing then coughing and spluttering. Jake kept pushing his remote control zapper and Cindyslut didn't have a chance! \n\nIn her haste Andrea tossed the empty beer pitcher over her shoulder. It bounced off Trudy Dunbar's head and almost knocked her out! Trudy, the Vice-Captain of the cheerleaders, was livid and pounced on Andrea's back just as she was about to pour the pitcher of cum down Cindy's throat! Andrea dropped the pitcher of cum when Trudy pulled her to the ground by her hair. Somehow the pitcher snagged on Cindy's fingers on the way down!\n\nThe crowd roared!\n\nSuddenly Andrea was being accosted from all directions by her own team! Two lycra-clad cheerleaders were sitting on her arms and another had straddled her thighs. Two more were slapping her face and tits, yelling something about how she never gave them any attention and now she was gonna pay!!! And the crowd was egging them on!\n\nHorace Mortimer couldn't believe it! He knew he should never have trusted those damned kids! He watched in his monitor as the action switched from Cindy to Andrea. He'd have Jakes balls for this!\n\nThen he watched fascinated as Trudy pulled the three quarters full pitcher of cum free of Cindy's fingers and she sat on Andrea's comfortable chest. Of course this knocked the wind out of Andrea, who's nose was also being held closed. She gurgled as the pitcher of cum was poured down her throat. The sight of Andrea swallowing over and over was caught perfectly in close-up from three different angles!\n\nIt was a disaster, but at least the hit meter was still going bananas! He caught sight of Jake untying Cindy and leading her away. \"What the fuck does he think he's doing!\" screamed Horace to no-one at all.\n\nMeanwhile the crowd was out of control. Men had queued up in four or five lines to step up and cum all over the writhing mass of cheerleader flesh. Once Andrea was stripped and staked out the others shrugged and pulled off their uniforms too. They each took turns sitting on Andrea's face and slapped and pinched her tits if her tongue got lazy. Half the men there wanted to ride the new slut. So the cheerleaders sucked them till they were hard enough, then they just climbed right on and fucked her!\n\nThe only times Andrea's face wasn't covered in cunt was when each man came in her cursing and complaining mouth! And they made sure she got every blast. All the cheer-girls were either on their knees sucking cock and waiting for Andrea's cummy face to be free, or taking turns whipping her, in between being fucked again! For the few souls who couldn't hold back and who blasted straight into a cheer-leader's mouth, the girl just turned around and spat it onto Andrea! \n\nHorace shook his head and muttered... \"looks like I'm gonna have to start a new web-site!\"\n\nBut Jake had a better idea. He put poor Cindy under a hose and sprayed her off. He wasn't going to have her stain his Firebird. Cindy couldn't stop blabbing her thankyou's as Jake sprayed the filth from her. When he was done he looked at the naked and shivering slut and felt a pang of guilt.\n\n\"Look Cindy, if you promise to give me the best head in the world, three times a week for the rest of the semester, I'll get you out of here.\"\n\nCindy thought all her Christmas' had come at once! \"Is that it? Like, I don't even have to let you fuck me?\"\n\n\"Nope, just the best head in the world Cindy, it's what Andrea promised me to help her gang up on you.\"\n\n\"Oh Jake, I'll give you blowjobs that are like totally phat!!\"\n\n\"Ok, it's a deal!\" He grinned as he helped Cindy into his car.\n\nJake drove down the ramp onto the freeway. Cindy had opened his pants and was stroking his long, thick and pulsing cock in her hand. She smiled and batted her eyelashes at him.\n\n\"You know you can like, fuck me if you want...\"\n\n\"Yeah, I know,\" he said as he pulled Cindy's mouth down by her pigtail.\n\n\"Gosh!\" She mumbled as her mouth filled with cock."
    ],
    "authorname": "Sir_Nathan",
    "tags": [
        "naive",
        "embarrassment",
        "drunk",
        "stupid",
        "slutty",
        "cindy",
        "cheerleader",
        "taken advantage of"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/gosh-ch-02"
}