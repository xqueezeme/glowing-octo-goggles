{
    "title": "Home Sweet Cave",
    "pages": [
        "Author's Note: I wasn't sure which category this story should have fallen into, so I chose Group Sex because there are three people involved. Like most of my stories, it starts a bit slowly with setting the scene. As always, comments and especially voting are appreciated. They are how I see how I'm doing entertaining you, the reader. Please enjoy...\n\nHome Sweet Cave\n\nWeird Fallout from Being a Good Samaritan\n\nI was sitting in my cave, looking out over the treetops of the valley getting hammered by the thunderstorm and in the flashes of lightning, watching the two miserable, bedraggled human forms trying to scale my cliff.\n\nI call it \"my cave\" and \"my cliff\", although in fact, it belongs to the Great Smokey Mountains National Park, and hence to the Federal Government via the National Park Service. But my ancestors were hunting and making 'shine in these hills long before the land was set aside in 1934. I'm not interested in any government entanglements, so I'm not going to tell you exactly where it is.\n\nWhat it is, though, is comfortable. It's been my retreat, my refresh-my-soul getaway since my Old Man showed it to me when I was about three. It isn't easy to get to, so most tourists and the Feds leave it alone. It's got a narrow triangular \"front porch\" in the side of a cliff and the main room extends about thirty feet back into the mountain. After you clear the entrance, the ceiling is about ten feet up with a gentle arch to it and a couple of fissures that run to the outside and carry out the smoke from my fire. The natural drafts help with that.\n\nI've fabricated a screen from pine boughs, camouflage netting and rope that I can lower over the entrance to hide it from sight, if I want to. Normally, in a storm like this, I'd have the fire up and the screen down and be roasty-toasty warm. The wind could howl, the thunder boom and the lightning rip the sky with blinding flashes and I'd be wrapped in the Stillness of Nature -- no annoying human interruptions. Just the sounds of the most powerful force on Earth.\n\nBut in this case, I had the screen up, knowing my firelight was visible to the valley, watching those two wretched souls trying to find shelter from the torrential downpour. They had spotted my fire and were headed my way -- and I let them come. I wasn't worried about a couple of greenhorn backpackers who'd screwed up in my forest and now needed rescuing. They were learning a valuable lesson. And besides, I believe in armed self-defense, and no city-slicker tourist was going to be a problem for me.\n\nI figured if they made it to my cave, I'd help them warm up and dry off, and give them some shelter for the night... and impress on them that if I ever saw them again, I'd shoot first. Same for if they opened their mouths about my little hidey hole and it got back to me, in any form, visits from the Feds included.\n\nSo I was watching with a certain amount of curiosity and amusement as they struggled up the face of the cliff. I guess they must have lost most of their gear, or were really stupid day-hikers, because all they had on were soaking wet jeans and hooded sweatshirts and some kind of utility belt, each. They'd gotten to a ledge about twenty feet or so below my front door when I decided to be kind. I tossed down a knotted climbing rope of one-and-a-half inch twisted sisal. It'd hold both their weights, no problem -- even if they were big, burly men, which they didn't look much like. Then I stood back in the shadows at the rear of the cave and waited.\n\nThe first one made it to my front porch and came slowly, cautiously, crawling over the edge, easing to the side and waiting for her companion to make it up.\n\nYes, \"her\". The first one in was definitely female. She looked like a drowned cat, her soaking wet clothes plastered to her and her hair all messed up and in her face. But even before she pushed the hair aside to look around, I could see she was female. Men don't have curves like that.\n\nAnd then her companion eased over the threshold and guess what? It was another she. And they were both shaking like crazy as they looked around the inside of my cave. I put my 1911 back in its holster.\n\n\"Come on in, into the firelight,\" I directed them. They both jumped like they'd bumped into the electric fence. \"Nobody's gonna hurt you,\" I told them, \"although you have no reason to believe me.\" I stepped out so they could see me and their eyes went wide like the proverbial saucers. I think mostly they were looking at my sidearm, because I know I'm not pretty enough to warrant that kind of staring. \"C'mon,\" I went on, pointing to the fire. \"Over here.\"\n\nI've got to hand it to them. They may have been scared shitless, but they did manage to follow directions. They eased along the far side of the cave wall until they were opposite the fire. I left them there while I walked to my front door and closed the screen, shutting out the storm and helping the temperature in the cave come up rapidly. Then I turned around and came back, standing opposite them on the other side of the fire.\n\n\"You're going to need to strip out of those wet clothes,\" I told them. \"I don't want any hypothermia on my watch. Pick a couple of things that'll dry quickly, like panties and a T-shirt or something, and set 'em aside. Everything else goes in a separate pile.\" I didn't wait to see if they were going to do as I told them. I went back to my \"bedroom\" and dug out a couple of dry towels. My bedroom is actually a small alcove off the main room where I've built up a nest of furs and padding I call my bed.\n\nI went back to take them the towels and discovered they hadn't moved.\n\n\"I'm serious, ladies,\" I told them, holding out the towels. \"That wet stuff needs to come off and then dry off with these. I'll rig up your clothes so they'll dry. But you need to get close to the fire and get warmed up. Unless, of course, you want to come down with something like pneumonia.\"\n\nThe Alpha of the pair, I guess, was the one to move first. She got a kind of determined look on her face and slowly got to her feet.\n\n\"Thanks,\" she told me, putting on a brazen attitude as she started stripping off her boots and socks, sweatshirt, cargo pants and a flannel shirt. Those she dropped in a pile at her feet. Then she took a deep breath and looking me square in the eye, pulled off her tank top and stepped out of her undies, dropping them in a different pile and holding out her hand for the towel.\n\nWhich I gave her, without comment. In my head, of course, I was thinking damn nice body!, but I wasn't going to voice anything crude. Not with the attitude she was wearing. She began toweling off and moving nearer the fire.\n\n\"C'mon, Chrissie,\" she told her companion, with just a bit of sarcasm. \"Do what the nice man told you.\" She wrapped the towel around her and sat down on one of my makeshift chairs near the fire.\n\n\"Chrissie\" got up slowly and did pretty much the same thing as the Alpha Bitch, but without the attitude. She looked a lot more subdued and scared, but she did lose the wet clothes and I handed her the towel. She went to join her friend at the fire.\n\n\"You drink coffee?\" I asked as I went over to my \"kitchen\" -- another small alcove where I kept my larder, fresh water and cooking supplies.\n\n\"Oh, God, yes!\" Chrissie exclaimed, then suddenly looked surprised that anything had come out of her mouth.\n\n\"Okay, that's a fresh pot on the fire -- you'll have to use the hot-mitt next to my chair,\" I told them. \"And here's cups, sugar and fake cream, if you want it,\" I added, walking over to them and giving them a couple of mugs and a box of packets. \"I'll start workin' on your clothes.\"\n\nI was studiously avoiding staring. I wanted to stare, sure -- I mean, I'm a red-blooded American guy with the same testosterone poisoning the rest of us have -- and these two were lookers.\n\nThey were young. At least to me. Early to mid-twenties to my jaded eyes. One blonde, the submissive, with blue eyes and one brunette, the Alpha, with green eyes. Both were close to 34-24-36 at a guess, and around 120 to 130 lbs., a lot of which was muscle. Cup size was probably C or D. Certain parts of my nethers were definitely taking notice, but I knew I needed to concentrate on business. I mean, I had decided to be the nice guy, you know?\n\nI went and retrieved the mesh grille I used for drying out my own wet clothes and put their shirts and panties on it, then put it over the fire. Five minutes on a side and in ten, they'd be dry. The girls watched me with a mix of apprehension and curiosity while staying huddled near the fire with the towels wrapped around them, sucking on coffee. Which was fine by me. No matter how horny I was, I had decided to be the Good Samaritan.\n\nA quick word about me... most people know me as Charlie, and I've lived in these hills all my life -- except for six years in the Navy on a submarine and two years at UT Knoxville getting a bachelor's in engineering. I'm forty-five and single, in decent shape and mostly stay to myself. Because of being the favorite nephew of a bachelor uncle who died and left half his estate to me, I'm pretty much set. I don't have to work if I don't want to.\n\n\"So, what your story?\" I asked them as I made sure I didn't burn their clothes. Alpha decided to answer.\n\n\"We were camping in the valley, near the river, when the storm broke,\" she told me. \"The winds whipped through and pretty much tore everything down and sent it downriver. Then the rains soaked everything else. We had our packs and decided to hike up to the highway, to try to thumb a ride. Chrissie fell in a ravine in the dark and lost her pack. I fell in trying to help her.\"\n\n\"Because of the rain and the mud, we couldn't get up to the highway. Then we saw your light. We figured there might be help. We were going to freeze to death if we didn't do something about shelter. Then I fell on that escarpment by the big clump of birches and got my pack torn off. We were pretty damned desperate when you threw down that rope. I guess we ought to thank you.\"\n\n\"Okay, so she's Chrissie,\" I nodded. \"And you are?\"\n\n\"Aine. But nobody ever pronounces it right, so I usually go by Anya,\" she told me.\n\n\"Driver's licenses,\" I said, holding out my hand. \"And are you hungry?\"\n\n\"What?\" Anya asked while Chrissie just looked confused.\n\n\"I'd like you to show me your driver's licenses and tell me if you're hungry,\" I iterated, walking over to my jacket and pulling out my cell phone. No good as a phone here, but the camera worked.\n\n\"Um, yeah... I guess we're hungry,\" Anya answered, then added suspiciously, \"why do you want to see our driver's licenses?\"\n\n\"You do all the talking for the two of you?\" I asked, walking over and holding out my hand again.\n\n\"Um... no...\" she said, looking a bit intimidated. \"I mean, not usually... not all the time...\"\n\n\"I want to see if you are who you say you are,\" I told her. \"I'll fill you in on the rest of it later. Driver's licenses.\"\n\nIt was actually Chrissie who stood up, went to her pile of wet clothes and -- doing a valiant job of trying to keep her towel around her -- fished out her wallet. I was amused to see that she carried a guy's style wallet in her jeans. She tried extracting her license, but being wet, it was stubborn and it wasn't any easier trying to hang on to the towel at the same time.\n\nFinally, she gave up in frustration, dropped the towel as she stood up and dug out her license, walked over to me bold as can be and handed it to me. I think she was almost daring me to comment on her nudity.\n\n\"If you're a rapist, it pretty much doesn't matter if I'm wearing a towel or not,\" she stated.\n\n\"I'm not a rapist,\" I told her as I took a picture of the front of her license. \"I only believe in consensual. Including in a marriage.\" She looked very confused as I handed her back her license.\n\n\"Yours?\" I asked Anya. She looked at me for a long moment before standing up, dropping her towel, retrieving her license and handing it to me.\n\n\"So why do you want our license information?\" she asked as she waited for me to take the picture and give her license back.\n\n\"Go sit down and wrap up,\" I told her. \"Your T-shirts and panties will be ready in a few minutes. I'll answer your question after I get some food into you two.\"\n\nI went and checked on their clothes and confirmed that my estimate had been right. Then I went to my larder.\n\n\"Either of you have a problem with meat?\" I asked over my shoulder.\n\nChrissie shook her head and Anya said \"no\", while shaking her head.\n\nI fished out some venison sausage, cheese, crackers and some \"doesn't need refrigerating\" fruit cups, then handed it over to the girls along with a cutting board, a knife and some spoons.\n\n\"It's venison,\" I explained. \"Pretty tasty. My Old Man's recipe. Go ahead... eat.\"\n\nIt was obvious they were starving and didn't want to admit it. I turned my back on them and went to make sure the front door screen was securely lashed down -- the storm was not abating -- and then pulled the grille off the fire and started shaking out their clothes. I noticed in my peripheral that Chrissie was the one to start cutting up the sausage and cheese and making little cracker sandwiches out of it. I figured she was the domestic one.\n\nI pulled out my clothesline while they ate, strung it up and hung up the rest of their clothes to dry. And started having a really strong talking to myself about whether I wanted to hit on them. They looked good. From the cherubic faces to the shaved pussies and tight asses, they looked good. And they knew it. I figured they must be a Sapphic couple. Hitting on them might prove pointless. I figured I'd wait.\n\n\"Wash up?\" Anya asked, indicating her slightly greasy hands.\n\n\"Water's in there,\" I told her, pointing at my kitchen. \"Waterless hand cleaner, too, if you want. And hand towels. Help yourself.\" I dropped their clothes on the edges of the seats they were in.\n\n\"Not sure what we're going to do about sleeping arrangements,\" I told them as I went back to my nest. I usually didn't keep extra sleeping bags or furs around. This is the first company I'd had overnight in a very long time. I noticed both Anya and Chrissie parading naked over to the kitchen to wash up, almost as if they'd decided to tease me or something. After they washed up, they put on their dry clothes.\n\n\"Where do you usually sleep?\" Anya asked as the two of them walked over to join me.\n\n\"Here,\" I pointed to my nest. \"A comfortable pile of padding and furs. Don't have any extra though, nor any sleeping bags. Got a few extra blankets...\"\n\n\"Well, that sure looks big enough to me!\" Chrissie exclaimed, kneeling down and feeling the fur. \"What is this?\"\n\n\"Mostly bear,\" I told her.\n\n\"Wow... that's really soft...\" she murmured as she ran her hand through the bearskin. \"You know, it's big enough, all three of us could fit. If you're not a rapist...\"\n\nAnya had been looking between Chrissie's delight in the bearskin and me. I would guess she was sizing me up.\n\n\"Are you horny?\" she asked out of the blue. I looked at her like she had two heads.\n\n\"Of course, I'm horny,\" I told her. \"What normal, intact, American male wouldn't be, with you two around? But just bein' horny doesn't mean anything's going to happen. And besides... I don't get between couples. Straight or gay, doesn't matter. I don't work like that.\"\n\nThe two girls looked at me... then at each other... then back to me before breaking out in laughter.\n\n\"You think we're lovers?\" Anya managed to ask.\n\n\"Well, yeah... aren't you?\"\n\n\"No... well, yes... but not like you're thinking,\" she told me. \"We're very close friends, but we're not a 'couple', if that's what you're thinking. But that's okay. If you're as good as your word, it'll work out. It's obviously going to be hours before our clothes are dry and we're not going anywhere with the storm raging as it is, so... you have anything to put in the coffee to make it a nightcap?\"\n\n\"Whiskey, vodka, rum... no ice at the moment,\" I told her. \"Name your poison.\"\n\n\"Whiskey,\" Anya told me.\n\n\"Same,\" Chrissie murmured.\n\nI nodded and went to dig out my bottle of Jameson Irish Whiskey. It'd make 'em feel warmer, even if it wasn't doing anything long-term useful. I figured they'd get lit, crash out, and I'd sleep on the other side of the nest. If I slept at all. I made sure, before I joined them back at the fire, that I'd secured my weapons locker. The only operable firearm was my .45 and the 8 rounds in it. And it was staying with me.\n\n\"So, turnabout is fair play, or whatever,\" Anya told me when I sat down. \"What's your story?\"\n\n\"I'm an Electronics Engineer by trade, working when I want to work, spending some of my time in Knoxville and some here,\" I told her. \"I come here to get away from people.\" Chrissie grimaced.\n\n\"Not very successful tonight, huh?\" she asked quietly.\n\n\"You didn't have to help us,\" Anya pointed out. \"Why did you? If you wanted to be alone, you could have just dropped your camo screen and ignored us.\"\n\n\"I don't know,\" I admitted. \"Felt like being a White Knight or something. Saw you trying to work your way through my forest and decided you needed help. Didn't even know you were pretty women at the time. Just dumb tourists.\"\n\n\"Not exactly dumb tourists,\" Anya snorted. \"But close enough from your point of view, I suppose. We're T-A's at the University. In Knoxville. We like to get away and go camping on a regular basis. We're usually prepared for the crap. This one caught us flat.\"\n\n\"What do you teach?\" I asked.\n\n\"I'm going for my DVM,\" Anya told me. \"I'm a T-A in Large Animal Clinical Sciences, most recently in Equine Surgery.\"\n\n\"Okay, that's impressive,\" I admitted. \"And you?\" I turned to Chrissie.\n\n\"I'm going for my Masters in Nursing,\" she told me gently and I suddenly realized how perfectly her personality would dovetail into taking care of others. \"I'm a T-A in the Clinical Practice Lab.\"\n\n\"Wow... that's pretty impressive, too,\" I told her. \"So here's the deal on the licenses. I took the pictures so I'd know who you were and how to find you. I don't want anyone, and I mean anyone, knowing about this place or opening their mouths to the Feds or any number of other unscrupulous people. I like my privacy. This has been 'my place' since my Old Man showed it to me, and it goes back in my family a lot farther than this place has been a National Park. So when you leave, you'll forget you were ever here. You won't mention it to anyone. Period. Understood?\"\n\n\"From a man who wears a sidearm,\" Anya pointed out. \"Yeah, I think it's understood.\"\n\n\"So who are you, then?\" Chrissie asked. \"What's your name? And how would we contact you if we wanted to, sometime in the future?\"\n\n\"Most people know me as Charlie,\" I told her. \"And I'll give you a cell number and an email before you leave... if I think it's a good idea. In the meantime, eat if you're hungry, drink if you're thirsty, and take the right side of the nest if you're tired. I'm going to go meditate on the storm for awhile. Your clothes should be dry by morning.\"\n\nI got up and stretched, then headed towards the front door, leaving them with the bottle of whiskey, the pot of coffee and their own counsels.\n\n* * * * * * * * * *\n\nThe storm was going to be a long one. From my perch looking out over the valley, I could see the thunderheads moving in as others were moving out. Lightning was providing a rather surreal, psychedelic view of the middle of the night and the incessant rain was coming in from behind my cliff, so at least I wasn't getting soaked.\n\nI looked at the pictures of the girls' licenses. Aine Mairead O'Connor -- definitely Irish -- and Christina Suzanne Blackbourne -- Scottish, maybe? Or English? -- both lived at the same address. So, roommates. They'd said they were close friends but not a couple. I suppose it could work like that.",
        "I felt someone coming up behind me before I heard her over the sounds of the storm. I turned to see Chrissie standing there -- naked. And blitzed. She put out a hand to my shoulder to steady herself and started to fall anyway. I caught her and she sort of fell/draped/twisted her way around to lying across my lap. She had both hands wrapped around my neck.\n\n\"We're goin' t'bed...\" she slurred with a silly smile on her face. \"We owe y'bottle...\"\n\n\"I don't think you're going anywhere unless I help you,\" I observed. In response, she just smiled more and pushed her boobs into me, pulling me down into a kiss. A very sloppy but heartfelt kiss.\n\n\"Y'r s'ch a nice mannn...\" she drawled as she eased up on the kiss. \"C'n ya help me t'bed?\" She was trying very hard to concentrate on what she was saying, and losing.\n\nI suppose I sighed. I know that inside I did. I got a grip under her thighs and behind her back and stood up, carrying her like a sleepy child back towards the nest. She kept pulling herself into me and nuzzling my neck as Anya watched me approach. She was naked, too, and sprawled out in the middle of the nest.\n\n\"I think I found something that belongs to you,\" I told her, easing Chrissie down into the nest.\n\n\"Tha's v'ry nice o' you,\" Anya told me, also apparently plastered.\n\n\"You two get some sleep,\" I told them as I drew a sheet over them.\n\n\"Y'ss'r...\" Anya mumbled as the two of them rolled into each other.\n\nTwo minutes and they'll be out like a light, I thought as I headed back to the front porch to do some more storm watching. I wonder if this is God's sense of humor...\n\nI spent another hour or so watching the storm roll over the valley, and willing the damned hard-on to go away, before I gave up, secured the screen and headed back to the nest. I banked the fire and turned on one of my battery-powered fluorescent lights so if the girls got up, they could at least see the cave a little bit. It occurred to me I hadn't shown them the garderobe.\n\nIt occurred to them, too... after about four hours.\n\n\"Sir?\" Chrissie was curled up against my back.\n\n\"It's not Sir, it's Charlie,\" I mumbled, partially waking up and realizing my habit of sleeping nude might work against me -- especially with the hard-on that didn't have the sense to leave.\n\n\"Charlie?\"\n\n\"Yeah?\"\n\n\"Is there a bathroom? Or do I have to go outside to pee?\"\n\n\"Halfway between here and the fire, on this wall, there's a hole,\" I mumbled. \"The garderobe is inside.\"\n\n\"The what?\"\n\n\"The garderobe. A rudimentary stone toilet. Just sit down and use it.\"\n\n\"Thanks,\" she breathed in my ear... and then realized her skin was plastered against mine.\n\n\"Ooooohhhh... nice!\" she added as she ran a hand down my arm to my side to my belly to my cock.\n\n\"Oooh! Very nice!\"\n\n\"Don't you have to go?\" I asked, trying not to be a boor.\n\n\"Yeah, dammit...\" she acknowledged as she slipped away and out of the nest.\n\n\"You've got two minutes and then I'm right behind you!\" Anya called out to Chrissie's receding back and I realized she'd been awake the whole time. Then she slid in behind me where Chrissie had been.\n\n\"What's very nice?\" she asked, starting to run her hands over my shoulders and chest.\n\n\"Nothin',\" I muttered and tried not to move.\n\n\"It can't be nothing,\" she admonished me as her hand slowly descended to my belly. \"or she wouldn't have said anything. Your skin feels so nice... warm... smooth...\" Then she ran into my hard-on.\n\n\"Oooh! That is very nice!\"\n\n\"Anya...\"\n\n\"Yes?\"\n\n\"Don't you have to pee?\"\n\n\"Hmmm... yeah, I guess so. Don't put that bad boy away just yet, though... okay?\"\n\n\"Trying to sleep here,\" I muttered, but she just chuckled and slid out of the nest.\n\nI am in so much trouble, I thought as I lay there, trying to clear my mind. This is what comes from being a Nice Guy... I slid the pistol under the pillow a little farther towards the head of the nest.\n\nWhen Chrissie returned, she snuggled up against me, spooning. I couldn't move any farther to the edge of the nest or I'd fall out.\n\n\"Sleep? Please?\" I virtually begged. \"I haven't been passed out drunk for five hours.\"\n\n\"Oh, alright...\" she pouted -- but kept her hands on my shoulders and chest. It was when Anya returned that the situation got a little tense.\n\n\"C'mon, Chrissie,\" she pretty much demanded. \"Move in. Give him room so I can get in on the other side.\"\n\n\"He doesn't want to fuck, girlfriend,\" Chrissie informed her in as crestfallen a voice as I had heard in a very long while. \"He wants to sleep.\" That gave Anya pause.\n\n\"Okay,\" she finally decided, \"move in anyway. I can keep my hands above the navel -- for awhile.\"\n\n\"Anya...\" I started to confront her. And then gave up. \"Fine,\" I told her. \"Chrissie, move in. I'll take the middle. And you two better be using me for warmth and nothing else.\" As Chrissie moved to the side, leaving me the middle, I sat up, withdrawing the pistol and moving it with me, back under the pillow, but in the middle, where my hand could rest on it. I think it had a serious effect on the two girls, because suddenly they just curled in against me, one on each side, and left my still hard, mind-of-its-own cock alone.\n\nThey must have still been tired because it didn't take long for them to fall out again, and I wasn't far behind them.\n\n* * * * * * * * * *\n\nI awoke to feeling two girls pressing their luscious everything, but mostly breasts, into my body and one hand that wasn't mine trying to circle my cock, while another that wasn't mine was cupping my balls. And when I checked, they both seemed to still be sound asleep. My nethers, however, were not.\n\nI knew sleeping between these two was a bad idea. I just hadn't been clear on why.\n\nThe \"why\" was because it had been a bit too long since I last got my ashes hauled. I had an occasional balling-buddy relationship with Rosie, the bartender down at my local waterin' hole, and she was damned good for me. Divorced mother of three grown kids, off at college or on their own, she liked it every which way and I was more than happy to oblige. When I was younger and trying to get laid a lot more, I kept having \"size problems\"... as in, I'm a little on the big side and my partners found intercourse kinda painful.\n\nThose guys that wish they were bigger? They can have it. A lot of budding relationships bit the dust, or turned into \"just friends\", because I'm too hung. It wasn't until I started dating older women, especially ones who'd had kids, that things improved. But by then, I was into my thirties and the drive to get a mate and settle down wasn't as much of a push.\n\nSo now I was lying there getting way more excited than I wanted to and not seeing any convenient way out -- that didn't involve waking the girls, in any case. I eased the covers down, hoping to slide out the end of the nest and cover them up while I hit the garderobe. I could hear the rain and occasional thunder still going on outside, but the wind seemed to have died down. That was good. Maybe I could send the girls on their way this morning.\n\nTrying to crawl out from between them, though, had a rather disastrous effect. Or I suppose I should say, the expected effect. Rubbing on them was getting me way excited and my moving around woke them up enough to get their attention focused on the \"task at hand\", as it were.\n\nAnya was the one with her hand around my cock and when she realized how swollen up I was, she began stroking me and breathed, \"there is a Goddess...\", which seemed a little strange to me. Not the stroking -- she was damned good at it -- rather, the words. Chrissie was even stranger. She began rolling my balls in her hand and murmuring \"finally...\"\n\n\"Ladies...\" I started. \"I appreciate you appreciating me and all, but I have to hit the head. And besides, if you don't stop soon... oh, fuck! Never mind...\"\n\nI laid back as I felt everything pull up and the cum start. I couldn't have stopped if I'd wanted to. And right then I didn't want to. They felt damn good and I ended up blowing a pretty good load all over my chest and belly. Those two kept milking me until there wasn't anything more to get out and I had weird shit light patterns dancing in my head.\n\n\"That is awesome,\" Anya commented as she finally eased up on my aching member. \"Wish I could get some of my stallions to do that well.\"\n\n\"That's not the end of it, is it?\" Chrissie asked Anya. Apparently I didn't count. \"We're going to get to fuck him, aren't we?\"\n\n\"I don't know, sweetheart,\" Anya told Chrissie, ignoring my presence. \"That depends a lot on him. He still has to pee and if he gets out of bed, maybe he'll decide he doesn't want to get back in it with a couple of rapists. Or maybe he's gay and we crossed some kind of line. For sure, he's a Nice Guy Good Samaritan type and maybe he thinks sex with us isn't a Nice Guy thing. I really don't know.\"\n\nI lay there listening to her and it kinda played out like a checklist.\n\nStill have to go pee -- Check.\n\nAvoid rapists -- Are you nuts???\n\nGay -- Negatori on that one.\n\nCrossing line -- um...\n\nSex isn't a Nice Guy thing -- Wrong!\n\n\"Will you two dominatrices let me up now, to go to the head?\" I figured it didn't hurt to ask.\n\nThey both smiled and moved out of the way so I could get out of the nest, Chrissie self-consciously and Anya like a predator sizing up her meal. I still had cum dripping from my chest, so I grabbed a hand towel from the kitchen before I went to the garderobe. Honestly, I was so turned on by those two, it took awhile for the erection to go down enough so that I could piss.\n\nI sat there a lot longer than I needed to, trying to make sense of what was happening. These two were coming on to me, not the other way around. I'd never been assaulted before. Hell, I don't ever remember being seduced. This was way weird. And they weren't frightened by my size, either. I wasn't sure I wanted to know why.\n\nI finished relieving myself and went out to start a fresh pot of coffee, only to find the two nubile and naked women already doing it.\n\n\"Hi!\" Chrissie greeted me brightly. \"It's still raining out, but not like last night. Maybe later Anya and I can try to find our packs or maybe some of our other gear. In the meantime, we thought a fresh pot of coffee and some snuggling would help ward off any chill!\"\n\n\"I'm not sure it's a chill that needs warding off,\" I told her, \"but thanks for starting the coffee.\"\n\n\"Do you usually use this griddle for making toast?\" Anya called over from my kitchen. \"Or this wire doohickey that looks like you squish the bread inside it?\"\n\n\"The wire doohickey,\" I told her. \"The griddle is for flapjacks, when I get ambitious, or mostly bacon and eggs.\"\n\n\"Okay, Kind Sir,\" Anya answered. \"Why don't you go get your really nice ass back in bed and we'll bring you breakfast?\"\n\n\"I was thinking more along the lines of getting you dressed in dry clothes, fed, and up to the highway where you could thumb a ride into town. You can always come back and look for your shit later, when the storm's passed. And besides, what the hell would you want with an old guy like me? I'd think some young jock would be more your speed.\" I was definitely trying to think with the big head, not the little one.\n\n\"Wow...\" Anya commented as she put the wire toaster over the fire. \"You're actually going to pass on a couple of hot babes that want to fuck your brains out... why? I know you're not dysfunctional. That was one impressive cum back there. And you're hung a helluva lot better than those jocks you're talking about. You aren't gay by any chance, are you?\"\n\n\"No, not gay...\" I told her. \"And believe me, your charms are workin' just fine. It takes a lot to keep thinking like Mr. Nice Guy and not Mr. Neanderthal, trust me.\"\n\n\"But you are a Caveman!\" Chrissie pointed out. \"Look around! And Nice Guys can like sex, too. In case someone forgot to tell you that.\"\n\n\"Look, just go back to bed and wait, okay?\" Anya asked. \"We promise we won't rape you.\"\n\nI looked at her for a moment, then over to Chrissie, then thought what the fuck? Why not? and walked back on over to the nest and sat down. True to their word, a few minutes later they brought scrambled eggs over toast, fruit cups and coffee for the three of us. We sat there quietly and ate until Chrissie poured a second round of coffee. Then Anya spoke up.\n\n\"For whatever reason, you're not into sex,\" she told me. \"Fine. We won't touch you. But you also asked why we'd want you? It'll be easier to explain if you'll just watch something I want to show you. So if it's okay with you, you can sit over there on the side of the bed and we'll explain.\"\n\nOkay, so I was confused. It wasn't the first time in my life. I figured what the hell? and moved over to the far edge of the nest where I could easily see the two of them. And pretty much had my mind rearranged.\n\nIn the simplest terms, the two of them crawled into the nest and started making out. Long, slow necking and petting girl-on-girl action that was like watching a live porno movie. They were sensuous and sexual and definitely into each other. I'm pretty sure the moaning and groaning wasn't faked.\n\nThey had each other pretty cranked up, and me pretty hard, too, when Anya murmured, \"okay, Baby... now...\"\n\nChrissie moved down Anya's body, kissing and petting all the way down to her pussy, where she spread Anya's legs and started going down on her. There was no way I was staying detached. I could keep my hands to myself, yeah, but my mind and other favorite body parts were glued to that tongue and those fingers pleasuring the very vocal brunette.\n\nThen gradually, as Anya writhed in pleasure, Chrissie slipped another finger in, and then another. She kept going until she had Anya stretched out to take four fingers and a fairly hard pumping. I thought Anya was going to launch herself out of the nest, she was writhing and moaning so much.\n\nThat's when the rearranging happened. Chrissie slid her whole hand into Anya and Anya damn near achieved orbit, before crying out and crunching down on Chrissie's hand. Chrissie was fist-fucking Anya and Anya was cumming her brains out, over and over and over.\n\nI was mesmerized. I literally could not look away. Chrissie kept pumping her hand, now buried past the wrist, into Anya and Anya kept moaning and groaning and crying out a string of epithets that would've made a muleskinner blush. And I was harder than a rock. Painfully hard. Like, tempered steel hard. And using every ounce of my willpower to stay on my side of the nest.\n\nChrissie looked over at me and smiled. One of those angelic smiles you'd like to get lost in.\n\n\"Want to take my place?\" she asked, nodding towards Anya.\n\nHoly. Shit. Holy shit. Holyshit-holyshit-holyshit... that's why they weren't afraid of my size. They wanted it. For once in my life, I actually started to panic. Damn straight I wanted to take Chrissie's place! With my cock! But I'd set myself a limit and really, really intended to be the White Knight and keep it platonic.\n\nWell... fuck that shit! This was the definition of a Fuck-it Moment if ever there was one. I was being invited... invited!... to screw at least one of these luscious ladies, no hassles. It was, as they say, an offer I couldn't refuse. So me and my telephone pole crawled onto the nest and Chrissie eased her hand out of Anya, to be replaced by me. I didn't have to worry about lubrication -- trust me, cleaning up the copious pussy juice all over everything was going to be a Herculean task.\n\nI knelt between Anya's thighs and lifted and separated her so I could get a clear shot at her pussy and pushed in. Deep.\n\n\"Oh, thank God!\" Anya cried out and started grinding against me. \"Please, Charlie! Please... fuck my brains out!\"\n\nI can be pretty good at taking instruction, when I want to. Having just cum recently, it was going to be awhile before I got there again, if at all, but that wasn't what the situation required. The phrase \"two feet long, hard as steel and goes all night\" came to mind. Of course, that's usually used derogatorily, but in this case...\n\nWell, in this case, Anya felt fantastic wrapped around my cock. Hot, wet and pulsing rhythmically -- and hard -- she had me well sheathed and she wasn't about to let me go. She hooked her heels behind my thighs and grabbed my ass with both her hands and just kept forcing me deep into her.\n\nHer moans and epithets continued unabated until they were muffled by Chrissie moving up and sitting on Anya's face. Which meant I was staring at a beautiful blonde with blue eyes and tits to die for. A beautiful blonde who leaned forward and pulled my face to hers, kissing me -- all warm and wet and tongue.\n\nAnya must have done something creative at her end, because all of a sudden Chrissie started moaning into my mouth and it was getting very intense, very quickly. Then she tensed up really hard, stopped breathing and started spasming. Definitely cumming. When she let me have my ears back, she put one hand on the nest to steady herself and the other went to Anya's pussy. My guess, from Anya's reaction, was that Chrissie was rubbing Anya's clit and making her crazy.\n\nNobody had told me to stop, so I just kept on screwing Anya into next week. None of that jackhammer shit where all you do is tire yourself out. No, I was a master at long, steady, forever fucking and when I got the angle right, so I was hitting her G-spot, my partners usually dissolved into masses of quivering protoplasm. Between Chrissie and me, we had that poor woman delusional.\n\nThen Chrissie leaned forward into me, putting her hands on my shoulders to support herself and burying her head in my chest so she could raise up a little from Anya's face. At which point, I saw what Anya was doing. She had three fingers in Chrissie and was stretching her out to take a fourth. And of course, that's when I had the epiphany.\n\nChrissie liked getting fisted, too, and my cock would be perfect, just like for Anya.\n\nFor some reason, I found that really exciting. So did Chrissie.\n\nShe held onto me and pushed back into Anya's hand until eventually it popped in and Chrissie went into a major orgasmic seizure. I don't know what else you'd call an orgasm that intense. And Anya kept Chrissie rolling over just like I was doing to her. How the hell that woman could be aware enough to pleasure her girlfriend, I have no clue.\n\nI don't know how long we were rocking like that, but it was damned nice. The only threesomes I'd done had been in the Navy, and they were getting paid for it. This one was like manna from heaven. I was completely lost in the scent and taste and feel and sounds of the incredible fucking going on all around me. I was somewhere just left of Nirvana when Anya reached out and touched my thigh, getting my attention.\n\nWhen I looked down at her, she mouthed \"switch...\"\n\nI looked quickly around, trying to figure out the best way to do it. When in doubt, go with simple, right? The simplest was to pull out of Anya, crawl around behind Chrissie, leaving them in a sixty-nine, and just take over fucking Chrissie. So that's what I did.\n\n\"Oh, Mother Goddess, YES!!!\" Chrissie moaned as I entered her, and I damn near lost it right there, because Anya decided those balls hanging down should be sucked on. As in, the entire testicle. In her mouth. At once. With her tongue running around it. Then she went after both of them... at the same time.\n\nChrissie dropped down onto Anya's belly and took over for my cock with her hand, adding her mouth all over Anya's clit. I had no idea women could keep cumming like that.\n\nI mean, I'd had multiorgasmic partners, and it was fun to see how many times I could get them off before they said \"Enough!\" But nothing like these two. My God! They knew how to trip all my triggers, and all of their own as well, apparently. And repeatedly. And again, I lost track of time.",
        "Again, I have no idea how long we were fucking like that, the two women getting off over and over and me staying harder than a ferrocement piling, loving every inch of them. I was starting to think about trying anal with them when Anya made it moot.\n\nShe stuck a finger up my ass, hit my prostate, and that was all she wrote.\n\nI managed to pull out before I actually started ejaculating, with Anya grabbing my turgid manhood and continuing to stroke it as she aimed it between them. And like before, it felt like I was cumming in quarts... I know I wasn't, but it felt like it. And it felt like it went on forever. Again.\n\nWhen we finally managed to calm down and my thighs were threatening to go into convulsions, I fell over sideways onto the nest. Chrissie decided to fall over my way, too, leaving Anya lying there with my cum all over her tits, minus whatever was on Chrissie's pussy and belly.\n\nIt looked hot.\n\n\"Thanks, Charlie,\" Anya moaned.\n\n\"Yeah, we needed that,\" Chrissie moaned in concert.\n\n\"You ladies are most certainly welcome,\" I told them and started to struggle out of the nest.\n\n\"Where do you think you're going?\" Anya asked, not moving.\n\n\"To go get warm washcloths, to clean up, then get dressed and go look for your shit,\" I told her, looking back. She and Chrissie both exaggerated a pout of their lower lips, like they had rehearsed it. Who knows? Maybe they had...\n\n\"You don't seriously think I could go another round, do you?\" I asked. They looked at each other, smiled, then turned the smile towards me, adding a look of expectation.\n\n\"Oh, no,\" I told them. \"Oh, no, no, no... not gonna happen. 'Get used to disappointment', or whatever that line is. I'm getting up and getting dressed and going out. Feel free to join me.\"\n\nI guess they figured that I really wasn't going to go another round, because they crawled out after me and pretty soon we were cleaned up and dressed in dry clothes -- not that they were going to stay that way for long. I banked the fire and we went to the front door and looked out on my valley.\n\nThe storm was down to a gentle drizzle at this point, so I pointed out to them the series of handholds camouflaged into the rock leading along my front porch ledge to a hidden chimney where I'd driven pitons to make climbing up or down a lot easier. I picked up one of my packs of climbing gear and with them being careful, we didn't have any accidents or surprises on our way down to the forest floor. Anya led us over to the base of the escarpment where she'd fallen and lost her pack. I could see it, snagged on a root, down in a crevice.\n\nI got out some rope and a grapple and manage to snag it and haul it back up. Anya shook her head as she pawed through what was left.\n\n\"I'll sort through this later,\" she told me. \"Some of it is salvageable. Let's go find Chrissie's.\"\n\nIt took awhile to find which ravine Chrissie had fallen into, and where exactly, but eventually we found the remnants of her pack, pretty well torn open from snagging on a tree. Chrissie gathered together whatever she could and stuffed it all back in, but I ended up tying it up for her with some line and giving the bundle to her to carry. Then we headed for the river.\n\nThere wasn't much left of their campsite. They'd packed in, so there wasn't anything heavy, like a steel cooler or something. The entire tent was gone. I could see where it had been ripped up, stakes and all. I walked along the path the wind would have taken it, but didn't find it. When I got to the river, I realized it had probably floated downstream.\n\n\"Sorry about that, ladies,\" I told them. \"You can come on back to my cave and sort out your shit. If you want to stay the night, I'm going back into town tomorrow and can give you a lift. Otherwise, I'll help you get up to the road and you can try to thumb somebody down.\"\n\n\"If we want to stay the night???\" they said in unison as they smiled at each other and then back to me. I was about to find out what \"fresh meat for the lionesses\" really meant.\n\nWe worked our way back to my cave and they went right into stripping off their wet clothes while I built up the fire. Chrissie had the mesh for the clothes set up by the time I was done. I wasn't soaked like they were because I was dressed for the wet weather. All I had to do was hang up my jacket and change jeans.\n\n\"Minestrone soup and bread okay for lunch?\" I asked as I pawed through my larder, realizing I was close to needing to restock. Getting affirmations, I pulled out a pot and several cans of good old Campbell's. \"Feeling domestic?\" I asked Chrissie, and when she told me \"sure\", I handed the pot and cans to her. She set about heating up lunch.\n\n\"What are you going to do?\" Anya asked as she sorted through the detritus from her pack. I was rummaging through my footlocker, looking for a couple of things.\n\n\"It occurred to me,\" I explained, \"that if your tent went the way of the river, it might have piled up somewhere near the bridge. There's a couple of places, upstream and down from there, where the currents could have pushed it ashore. So after lunch, I'm going to drive over there and see what I can see.\" I gestured to the binoculars I'd just hung around my neck.\n\n\"Mind if we come with?\" she asked, starting to hang clothes from the line I'd left up.\n\n\"I'd sort of insist on it,\" I pointed out. \"I don't have a lock on the front door, if you will, but most people don't know this place is here. Leaving you here alone wouldn't make much sense, from a security point of view.\"\n\n\"Like we'd rip you off after you saved our asses and were so nice to us?\" she questioned. \"Not hardly. I don't do that kind of shit. Especially since I hope this is the start of a long-term relationship.\"\n\nHuh? I hadn't said anything about long-term. Hell, I don't remember saying the \"R\"-word. I decided I'd let it slide -- no use poking the snake.\n\nChrissie finished lunch and we ate, and Chrissie salvaged a little of what was left of her stuff, hanging it on the line with Anya's. Then they got back into their damp clothes and we headed out. I showed them the other route out, which meant ascending the chimney rather than descending it. At the top, I led them along the barely discernible path which led to a small clearing and my Jeep. I took off the camo tarp and stowed it, then had the girls get in. I followed an old logging trail back to the highway and then on downriver to the bridge.\n\nI pulled off the road and parked, then walked out onto the bridge where I could get a decent look upriver and down.\n\n\"Why don't one or both of you scramble down to the river's edge and see what's under the bridge?\" I suggested. \"In case something got hung up under there.\" Both of them started working their way down the embankment, and it turned out that the idea had merit.\n\n\"There's a bunch of our stuff all tangled up in the tent under here!\" Anya called up to me.\n\n\"Well, pull out what you can!\" I told them. \"I'll help you schlep it up after I've looked around a bit more!\"\n\nI took a good look through the glasses and didn't see anything to be salvaged, so I went down to join the girls and start getting their stuff back up to the Jeep. The major stuff was surprisingly intact. The tent was one of those newfangled modular ones with the poles in sleeves supporting a nylon shell. Several of the poles were bent, but they could be replaced. Their sleeping bags were there, but soaking wet. They lucked out because they were Coleman's and could be washed and dried and pretty much be good to go.\n\nWe found the remains of a small Styrofoam cooler which was pretty much peanuts, but the bottled drinks and such they'd had inside were scattered but okay. They said there was a second cooler with food in it, but we never found it. Could have been carried off by the local wildlife, for all I know.\n\nWe gathered up what we could and put it in the Jeep, then headed back. When we got to the clearing, we left most of their stuff in the Jeep. They took a few things with them they wanted and we hiked back to the cave, getting back near sunset.\n\nWithout electricity, there was no such thing as frozen. Refrigerated meant finding a cold stream or digging a well. So most of what I had was dehydrated or canned. Or beans and rice. I love Zatarain's Red Beans and Rice, and their Black Beans and Rice, combined. Pretty close to what my Grandmother used to make from scratch. I had a big stash of it and the girls found it, plus some canned chicken. Dinner that night turned out to be pretty good.\n\nWe were sitting around, finishing up, when Chrissie asked me why I wanted to be a loner?\n\n\"Huh?\" was my less than brilliant response.\n\n\"Why don't you like people?\" she asked, rephrasing it. \"Why do you want to be alone? Did you get burned in some tragic love story? Or maybe some kind of PTSD or something? You're too damned handsome and nice for it to be your looks or your personality.\"\n\n\"Handsome and nice?\" I iterated, looking at her in confusion. \"Are we talking about the same me?\"\n\n\"Yeah, we are,\" she smiled. \"You're probably what? Late thirties? Early forties? You're trim and you're strong and you fuck like a porn star. Or what I imagine a porn star would fuck like. And you're smart, and you know your way around the woods. You're helpful without being demanding. I don't get how you can get this far and still be alone.\"\n\n\"Or maybe you're divorced. Some shrew of a woman who totally didn't appreciate you. Ran away with a banker. It's just... I don't get why you're the hermit.\"\n\nI looked down and shook my head as I thought about what to tell them. Then I decided, what the hell? How about the truth?\n\nSo I started to lay it out -- my early experiences, better known as Disasters In Dating, interrupted by service on a United States Navy vessel that demands friendship, respect and loyalty in cramped living conditions, then getting out and resuming college at an age farther along than most of the other students and not really fitting in... and then finding out that the women I was sexually compatible with were already married with kids... and finally getting fed up with the crush of the city and a decision to go back to the simper days of my youth.\n\nAnd that's how you end up with a forty-five year old single male who likes being alone in the middle of the Smokey Mountains. It wasn't that I was a loner. It was the lack of companions who met my admittedly high standards of ethics, loyalty and no bullshit. Kind of like Linus' quip in Peanuts -- \"I love Mankind! It's People I can't stand.\"\n\n\"Well, I think you just need to meet more people that you like,\" Chrissie opined.\n\n\"What? Like you two?\" I thought I was being facetious.\n\n\"Um... yeah?\" she answered. \"I hope you like us. We like you. And you're the best hetero sex to come along in ages! That's got to be worth something. Right?\"\n\n\"I suppose,\" I reluctantly agreed. \"You two have turned out to be a lot different than the inept tourists I imagined I was saving.\"\n\n\"Well, thank you!\" Anya jumped in. \"I trust you're up for another round or two this evening? Before we have to go back to the big, bad City?\"\n\nI smiled, thinking about this morning. \"Sure... why not? Just don't break me, okay?\"\n\n\"Oh, I hardly think we could,\" Anya smiled. \"You have no idea how nice it is to get a proper fucking that is actually satisfying. I intend to take very good care of you!\"\n\n\"Ditto!\" Chrissie smiled.\n\nThis was going to be a wonderful night... long, tiring... and wonderful.\n\n* * * * * * * * * *\n\nWe were up to Round Two. And all of us were wiped out and too greedy to admit it.\n\nRound One had started with the three of us lying naked in the nest, one of them on each side of me, necking and petting and the two of them alternating oral on me. I didn't have much trouble getting up again. I was still cranked from our last encounter, except now my body was recovered and had caught up with my lecherous mind.\n\nAnya moved to straddle my face in a sixty-nine while Chrissie went to fondling my balls and occasionally making out with Anya when she came off my cock. Then Chrissie turned around so I could diddle her pussy with my fingers while I was eating and diddling Anya. Both of them got very wet, very fast and it wasn't long before they both rolled over their first set of cums.\n\nAnya moved over to the side slightly, making room for Chrissie to move back and they started alternating who was sucking my cock and who was sucking my balls. And I was trying to pay attention to the two luscious heinies proffered before me. I started fingering both pussies, starting with two fingers, arched downward to rub their G-spots, then added a third and then as they stretched out, a fourth. I had four fingers completely into both of them when I decided to go for it.\n\nI tucked in my thumbs and pushed and they both pushed back into me with a satisfying thwpp! as my hands disappeared into their pussies. The soft cry from both of them told me they were happy to have me there. Pushing both thumbs down so they protruded below my fists, I began a steady fist-fucking, making sure to rub across their G-spots with my knuckles.\n\nThey went ape-shit.\n\nBoth started slamming back into my fist, the one not sucking me moaning loudly while the other was more muffled -- but they were both building up rapidly and I was loving it. They came within moments of each other, Anya going over first but Chrissie beating her to the next of their several, strung-together orgasms. And all along, they managed to keep me on edge. Not quite to cumming, but way close.\n\nThen Anya decided it was time to change things up -- she eased forward off my fist, then pushed Chrissie a little to the side so that she could face me while she impaled herself on me... all the way down. Chrissie decided it was time to switch, too, so she eased off of me and moved to straddle my face, making out with Anya while I ate the beautiful blonde. They both managed another couple of cums that way.\n\nThe next switch was for Chrissie and Anya to trade places, Chrissie sitting across me impaled while Anya rode my tongue and made out with Chrissie. They kept tripping over these mini-cums and I was definitely cranked, but for some reason my body wasn't cooperating and although I stayed hard, I couldn't seem to trip over. Of course, part of it was that my attention was severely diverted from my own pleasure to enjoying the hell out of how these two luscious ladies were getting pleasured.\n\n\"Hey, sweetheart,\" Anya mumbled to Chrissie at one point. \"Let's try something different.\"\n\n\"Like what?\" Chrissie asked in a sort of zoned-out tone of voice.\n\n\"Dismount,\" Anya told her, moving off of my face and to the side. Chrissie slowly eased herself off my cock and move to the side as well.\n\n\"Hey, Charlie?\" Anya asked. \"Could you sit up for a minute?\" I didn't see any reason not to, so I did.\n\nAnya reached forward and pulled Chrissie to her, flipping her off-balance as she did so that Chrissie ended up in the middle of the nest on her back. Anya moved over Chrissie into a sixty-nine position and told me, \"fuck me Charlie,\" then went down on Chrissie.\n\nAs I said before, I can be fairly good at following instructions. I lined up behind Anya doggy-style and slid my cock into her. The long, loud moan as my entering her tripped her over was amazing. Of course, it was kind of muffled because her mouth was plastered all over Chrissie's nethers. And when Anya got her brains back online, Chrissie was the next to yowl, her moans of pleasure echoing slightly in the cave.\n\nI was up and staying hard, but I wasn't cumming. That gave me time to get into mischief. I'd started to wonder about anal with these girls before -- interrupted by Anya sticking her finger up my ass -- but now I had this wonderful pair of buttocks framing her little rosebud, and it was just too tempting.\n\nWe had more of our lube slathered all over her pussy and ass than would ever have been necessary. The only question was, how tight was she? Or more specifically, was she going to tear my nuts off if I tried sticking my XL cock in her ass? There was only one way to find out...\n\nWell, actually, I supposed I could have just asked, but I didn't.\n\n\"OH MY GOD YOU'RE IN MY ASS!!!\" That's pretty much what exploded out of Anya. Right before she came. Hard.\n\n\"OH FUCK!!!\" I took that as instructions. And she came again.\n\n\"Hey!\" Chrissie protested. \"Me, too! Me, too!\"\n\nIt became my oh-my-God moment. These two were into anal, too! They were definitely moving into my \"perfect woman\" category, and there were two of them! My resolve to have a grand old time fucking them, drive them home and never see them again was beginning to disintegrate. Not the fucking and driving them home. The not seeing them again. My internal Professional Cynic was insisting that there had to be something majorly wrong with these two, but I was damned if I was seeing it. Maybe they'd end up being Fatal Attraction type stalkers or something.\n\nThen Chrissie insisted on getting her turn with me up her ass, and Anya moved to the bottom of the sixty-nine. And Chrissie was just as well-lubricated and just as sensitive as Anya, if not more so. I was starting to see the pattern... Chrissie took a lot longer to get to her first orgasm, but once she got it, she tripped over faster and more often than Anya. Anya, on the other hand, built up to her cums like the build-up to an earthquake -- and went over with just about the same energy.\n\nI was managing to keep Chrissie rolling them over when Anya crawled out from underneath and took up a position next to Chrissie, doggy-style, like before. I had my cock in Chrissie but I saw no reason not to stick a fist into Anya's pussy at the same time. Holding onto Chrissie's hip with one hand, my cock alternating between her pussy and her ass and my fist in Anya's pussy, keeping time with my stroking, I had the two of them on one long, rolling boil and I was digging the hell out of it.\n\nWhatever Powers That Be that had been fucking with my life were getting it right this time.\n\nThe girls wanted me to switch, so I did -- I went to fucking Anya and fisting Chrissie, and then back again, alternating between the two and switching every few minutes. This was probably the most fantastically hedonistic thing I'd ever done in my life and I was loving it! Apparently, so were they.\n\nFinally, out of nowhere, my orgasmic response decided to show up.\n\nI was balls-deep in Anya's pussy when I felt everything start to pull up and I guess I must have moaned something because the next thing I knew, Chrissie popped forward off my hand, knelt back so she could push me deep into Anya -- and keep me from pulling out -- and she reached between my legs and grabbed my balls, squeezing and twisting them.\n\nIt surprised the hell out of me that instead of being excruciating pain, her sort of crushing my balls blew me over the top, big time. Like, everything tensed up, my ass and cock went into spasms that were more like cramps, my vision went blurry and I screamed.\n\nWell, maybe screamed isn't the right word. Howled, maybe? Whatever it was, it was accompanying a massive orgasm and ejaculation where I just kept pumping cum, and more cum, and more cum into the raven-haired beauty impaled on my cock. I think I was starting to pass out when Chrissie let go of my balls and steadied me.\n\nAnya sank to her shoulders, her ass still high in the air with my dick in her pussy, and let go a monstrous sigh.\n\n\"Oh, my God, I have needed that forever!\" she told her audience at large. \"Thank you, thank you, thank you!\"\n\n\"Not to appear too ignorant,\" I panted as I tried to catch my breath. \"But what have you needed forever?\"\n\n\"A big fucking cock, and a big fucking load, from a big fucking guy who knows how to do a girl right,\" she told me. \"Charlie, I think I love you!\"",
        "\"Whoa, girl!\" I managed to get out. \"Let's not go throwing the 'L'-word around at the moment... besides, you two are delirious.\"\n\n\"I'm not,\" Chrissie spoke up. \"And I'm with her... but I'll back it off to Lust, if you want. It's still an 'L'-word, though.\"\n\n\"I think I need some water,\" Anya mumbled, her face pushed into the bearskin.\n\n\"I think we need to take a break,\" I told them. \"As much as I hate to admit it, my legs are shaking.\"\n\nWhich is what got us up to Round Two and the conflict between desire and reality.\n\n\"I know I sound like a whiny bitch,\" Chrissie spoke up as we sat around rehydrating. \"And I want Charlie to cum in me, like Anya.\" My eyebrows went up on that one.\n\n\"Um... I'm not sure I can do that,\" I tried to tell her gently. \"I'm pretty much a one-shot wonder these days, and that was one helluva cum.\"\n\n\"Bullshit,\" Chrissie informed me, and it was completely unlike her normal, subservient self. \"You got off twice this morning, very nicely and in short order, and you just came again this evening. No way you're a one-shot. And if she gets your cum in her, I get your cum in me. Period. Consider it your duty... to not play favorites.\"\n\nShe was serious. I mean, really. Everything in her body language and voice said she meant it.\n\nI started praying I could perform.\n\nShe set down her water and crawled over and onto me, slithering in a way that definitely got my attention as she rubbed her tits, belly and crotch all over me as she moved up my body. She definitely made sure to rub across my flaccid manhood which didn't have the smarts to stay that way.\n\nShe curled in under my arm, half on my chest with her breasts pushing into me, and ran her hand down my belly to start massaging the subject of her interest. She tucked her other hand in under my shoulder as she slowly, methodically and very effectively got me hard.\n\n\"See?\" she told me with a grin. \"This bad boy's ready to play again... definitely.\"\n\nThen she half sat up, curled over me and went down on said \"bad boy\". My head went back into the nest and my back arched up at the intense feeling of her warm, moist mouth and incredibly talented tongue. I'm pretty sure I moaned something unintelligible.\n\n\"Mmm-hmm,\" she agreed to whatever she thought I'd said as she pushed my hard-on farther and farther back in her throat, clearing her tonsils and making her throat bulge out from the depth and size of me. I was, to put it mildly, in awe.\n\n\"Okay, okay...\" I finally moaned. \"I surrender... what do you want?\" She came up off my cock.\n\n\"I want you to fuck me missionary, so I can look into your marvelous eyes and feel all of you in me and you rubbing against my clit and making me cum my brains out until you explode inside me and fill me with your cum,\" she told me. I'd say she was pretty good at \"explicit description.\"\n\nI don't know what \"marvelous eyes\" she was talking about... mine are a pretty plain old grey, to go with the streaks starting to show in my otherwise dark hair. But if she wanted to think \"marvelous\", then I guess I'd be marvelous.\n\nShe eased off me and I rolled up on my side, changing positions with her. She centered herself on the nest, spread her legs and held her arms out for me -- literally an offer I couldn't refuse. I moved up and knelt between her legs while Anya moved over to one side, I guess the better to watch. I reached my hands under Chrissie's \"marvelous\" ass and lifted her up as I leaned forward and speared her already wet and ready pussy.\n\nShe moaned like she had the first time I nailed her ass and drew her legs up, hooking them behind my thighs. The phrase \"locked in\" came to mind. I leaned forward onto my hands and knees, sliding farther into her as she murmured, \"deeper, Charlie, deeper...\"\n\nI was most of the way into her when she looked at me with a strangely wonderful, almost transfixed, gaze then reached her hands to my wrists and pushed up towards the head of the nest, hard, making me fall down onto my elbows and land on her big fucking tits. Then she wrapped her hands around my neck and pulled me down into a warm, wonderful, pretty romantic actually, kiss. There was a bit of animalistic in it, yeah... but it was also gentle and thorough and not frantic.\n\n\"Fuck me, Charlie,\" she told me softly, breaking the kiss and looking deep into my eyes. \"Fuck me deep and fuck me hard and make me cum and fill me up...\" She lifted her legs to my back and rocked her hips up, burying me even farther into her. So I did what I was told.\n\nBesides, it was my turn to start getting lost in \"marvelous\"... like, her marvelous blue eyes and silky fair skin, her pouty lips and firm but squishy tits... like a whole lot about her that I let myself start noticing. Things about her I'd tried hard to ignore when I was being the Good Samaritan. Just like I'd tried to ignore the similar characteristics in Anya.\n\nI began a steady thrusting and my cock had certainly decided to cooperate. Maybe it took two women like this to get him up and running in record time, but he was doing it. And it didn't take long for Chrissie to start building up to her cum.\n\nThat's when Anya tapped in.\n\nAs in, she tapped my shoulder and indicated I should get up on my knees, and when I did, she swung her already dripping slit right over Chrissie's face and sat down.\n\nChrissie obviously knew what to do with it. Anya's fervent \"oh, my God!\" as she leaned forward and grabbed my shoulders to steady herself was testament to it.\n\nI just kept fucking away. That's what Chrissie had said she wanted, and that's what she was going to get. Anya finally stopped shuddering and reached her hands to either side of my face and pulled me into a kiss -- the same sort of soft, warm, lover type kiss that Chrissie had laid on me. When she broke it, she looked at me with those emerald green eyes and I realized just how intense they were.\n\n\"I guess you like romantic, too,\" she murmured, not dropping her gaze. \"That's okay... I guess we could all use more romantic in our lives. You're pretty damned good, Charlie. I hope you're not going to forget about us.\"\n\nForget about them??? Jesus Christ!!! No way... no fucking way. This weekend was going to be branded on my brain for the rest of my life! I was going to say something about that when she gave another massive shudder and fell into my chest, holding on to my neck for support.\n\n\"Oh, God, yes...\" she murmured as she rhythmically convulsed with the aftershocks of the orgasm.\n\nWhen she finally calmed down a little, she looked into my eyes again and told me, \"you need to concentrate on fucking her, Charlie... I'll get out of your way. Feel free to blow a load so big, you make her squirt...\"\n\n\"Make her what?\" I asked as Anya dismounted and moved around behind me. She didn't answer me and pretty soon it didn't make any difference because Chrissie reached back up, grabbed my neck and pulled me down into another kiss -- one with a whole lot of Anya's taste all over it.\n\nI figured Anya was right and I needed to pay attention to Chrissie... and cum, if I could. I dropped to my elbows and started stroking faster and harder, burying myself completely and making her moan each time I hit bottom. I could feel my cum building up but I just wasn't there, yet.\n\nNot until Anya started tonguing my ass.\n\nI don't remember ever having a woman stick her tongue up my ass before. I mean, really stick it in and wiggle it around, not just lick around the outside. That woman had a very long, very strong and damned near prehensile tongue. I didn't know you could stimulate a guy's prostate that way. But she sure did. And I sure came. Like right along with her.\n\nI built up fast and hard, to the getting twinkly stars in my peripheral type of built-up. When I went over, Chrissie cried out \"OH YES!!!\" while Anya pulled out her tongue and stuck in a couple of fingers, pushing me forward and deeper into Chrissie, if that was possible.\n\nChrissie just kept chanting \"YES! YES! YES!\" as I pumped a gallon of cum into her -- well, it felt like it anyway -- and then all of a sudden, she started this moan that was more like a howl and she was squeezing me with her legs and jamming her pussy back into me, and suddenly her pussy clamped down on me and I felt a spray of hot liquid gush out from between us. I found out later it was a mixture of my cum getting squeezed back out and a torrent of what they call \"fem-cum\". I guess women can ejaculate, too, and she sprayed me.\n\nI thought maybe she'd pissed all over me, but it sure didn't smell or taste like urine, while Anya was laughing her head off, telling Chrissie \"you go, girl!\" And Chrissie and I just kept humping away, almost like it was in desperation or something, until we both collapsed. I tried to roll off of her, but she wouldn't let me. She had me locked in her legs and arms and she made me collapse on her.\n\n\"I can handle your weight, Charlie!\" she told me as I struggled. \"Give it up! Just let me hold you!\"\n\nSo I stopped trying to move off her and gingerly let my weight down on her, until I was sure she was right and that it really was what she wanted. I'm not a lightweight... I'm almost 200 lbs. of mostly muscle. I didn't want to crush her. Bless that girl, she just held me tight like she was a drowning woman and I just gave up and sank into her soft warmth.\n\nI felt Anya open my hand and put a squeeze bottle of fruit juice in it. She did the same for Chrissie.\n\n\"C'mon, girlfriend,\" she told Chrissie. \"You're going to have to move and let him take the middle if we're going to get any sleep.\"\n\n\"Not until I'm pregnant,\" Chrissie told her and my adrenaline shot through the roof! Pulse, respiration, blood pressure -- all off the charts, I'll tell you!\n\n\"What???\" is what made it out of my mouth while I tried to pull out of her.\n\n\"Relax!\" she told me as she kept me locked in. \"I'm joking! I'm not looking for a husband... although...\"\n\n\"That's not funny!\" I told her, trying to calm down. \"You could give a guy a heart attack that way!\"\n\n\"Naw...\" she smiled. \"You're too healthy. You'd probably make good babies, though.\"\n\n\"Chrissie, stop it,\" Anya chided her. \"You're scaring the man. Just be a good girl and tell him you're protected so he'll stop panicking.\"\n\n\"You want me to lie to him?\" she asked Anya with a big, wide-eyed, innocent look on her face. My blood pressure was headed back up.\n\n\"Chrissie...\" Anya warned.\n\n\"Oh, alright,\" Chrissie faux pouted. \"Yes, I'm protected. So is Anya. We're both on the pill, although you're the first real reason to need it in a long time. And thank you, by the way. That was one huge motherfucking cum!\"\n\n\"You're welcome... I think,\" I told her. I was hoping to have something to say about it, if I ever became a father. Idiot me hadn't ever thought about stocking my cave with condoms.\n\n\"Come on, Charlie... Chrissie... make some room and drink up. You definitely need it.\" Anya was kind of pushing on us to make room for her and we did. The three of us fell asleep like we had the night before, with me in the middle and the two of them curled in on either side.\n\n* * * * * * * * * *\n\nThe next morning the rain had stopped, although it was still overcast, and the girls' clothes were dry. We packed up their stuff to take home and they waited for me while I \"locked up\".\n\nI'd fabricated a \"front door\" that was like a portcullis made of rebar. The two halves slipped into holes I'd drilled into the rock, and then a case-hardened padlock secured it. Somebody would need a power saw or welding torch to cut through it. Bolt cutters wouldn't do it. Then I secured two wooden shutters over it, painted grey like the rock, also with padlocks. Dropping the camo screen on that, it meant it would take some pretty determined exploration for someone to find it.\n\nWe worked our way back up to the Jeep and I drove them into town, stopping for gas and some groceries before dropping them at their townhouse. I got very passionate good-bye kisses from them, and pleas not to forget them, and I decided giving them my cell and email would definitely be worthwhile.\n\n\"Hey, thanks,\" Chrissie told me as she noted it in her phone. \"We're free next weekend, if you want.\"\n\n\"After that it gets a little dicey until finals are over,\" Anya added. \"But we'd love to have you over for dinner...\" she added with a smile.\n\n\"To eat it or be it?\" I asked, trying to keep a straight face.\n\n\"Yes,\" they answered in unison and I had to smile.\n\n\"Okay, well, I'm not working right now, and you know how to get ahold of me when your schedule permits,\" I told them. \"Feel free to call, any time. Leave a message if you get my voice-mail.\"\n\n\"Will do, you most marvelous fuck,\" Anya told me as she gave me one more \u00fcber-kiss. Chrissie was right behind her to give me hers... and suck out most of my libido with it.\n\nI left them standing on their front porch with their pile of gear, waving as I drove away. And completely unlike me, I was already thinking about seeing them again. Maybe back at my cave, maybe a camping trip somewhere else... hell, maybe just coming over to my place for dinner and a romping good fuck.\n\nAnd also completely unlike me, I was wondering what it would be like to be a father... by both of them. "
    ],
    "authorname": "eidetic",
    "tags": [
        "ffm",
        "female bisexual",
        "bwc",
        "fisting",
        "mature male",
        "oral",
        "younger female"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/home-sweet-cave"
}