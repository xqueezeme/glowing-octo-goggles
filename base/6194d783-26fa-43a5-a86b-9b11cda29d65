{
    "title": "I Got Caught in Girls Underclothes Ch. 10",
    "pages": [
        "All characters in this story are over the age of 18 and are consenting young adults. \n\nThis is the final chapter of a story that got longer than expected and had some delays in delivering installments. Shit happens in the real world too.\n\n*****Mom and Dad return*****\n\nSaturday morning, Annie and Dave, our parents, came ashore from the sailing class, tired but excited. They had a quick breakfast and immediately got in their car and headed for I-8 and Phoenix. It was time to get home to their children.\n\nBefore they reached I-8, Annie took her husband's phone off the charger and set about checking on her children. She started to scan Dave's phone looking for important news from home. She had planned to check calls, but on Dave's phone she found herself in his email.\n\nAlready in the mail tool, she scanned down the list looking for emails from her children. Instead, what she found sent a wave of fear through her. She was disturbed to find emails from Chandler High, the Maricopa County PD, but the one that made her panic complete was from Chandler Regional Medical Center. There were others, but she couldn't get past that last one. Barely able to speak, \"Dave, pull over... PLEASE!\"\n\nSensing the anxiety in his wife's voice, \"Annie, what's wrong?\"\n\n\"We...\" She started to speak but her voice broke and she started again, \"We have emails... from the hospital and police department. Oh God Dave. Somethings wrong.\"\n\nAnnie wasn't the type to rattle easily but being 7 or 8 hours away from her children, she felt helpless and a mother's concern and imagination kicked in as her mind began constructing worst case scenarios. She fought to control the images from her imagination.\n\nTwo minutes later they had parked on the roadside and the two of them leaned shoulder to shoulder over the console of the car as they decided which email to open first.\n\nDave took over, \"Ok, hospital first. It's probably just a football injury.\" Breaks and even concussions weren't unusual, and they heal, but those weren't accompanied by emails from the police department. He tapped the hospital entry. Annie held her breath while the email opened.\n\nDr. Joseph had taken the time to write a personal note. 'Your son has been in a fight. He's been beaten, but he's not seriously injured although he may have sustained a minor concussion which shouldn't be a big concern. We just need to watch him for the next few days. The stitches and injuries should be much improved within a week.' He closed the note by inviting them to call him at any time and indicated, 'Tyler's in good hands with Katherine looking after him.'\n\nRelieved that my injuries were 'only' cuts and bruises elevated the police department email to top priority. CPD informed them that their son had been involved in a couple of incidents that were under investigation: 1) an altercation that had taken place on Chandler High School premises; and 2) an abuse case that I was needed for questioning in. At this point, Dave and Annie relaxed a little as their worst fears evaporated realizing that no one was dead or seriously hurt and the police department had not arrested anyone. Surely that meant something. \n\nDave turned to Annie, \"They're ok!\" He'd tried to be calm for Annie, but was as relieved as Annie to get past those two emails. \"While we're parked, let's see if there's anything else that shouldn't wait?\"\n\nAnnie scanned the list and one caught her eye, \"Here's one from Agnes (our aunt). She's probably telling us about the... 'altercation.'\" \n\n\"Let's see,\" as he tapped one of the links embedded in the note. It wasn't what they expected. \n\n\"Can't be any worse than the first two,\" Dave mused.\n\nConfused, Dave spoke, \"What's Agnes doing sending us a porn link? Maybe she's been hacked.\" \n\nAnnie was first to realize that the star of the porn link was their son, \"That's... that's Tyler!\"\n\nDave pulled the phone closer, \"Son of a bitch, you're right.\"\n\nHis next tap on the web link sent both of their anxiety levels soaring. Right before their eyes a video appeared of a blindfolded girl with a boy's head buried between her legs. From the moans, she seemed to be enjoying herself. The boys back was covered with lines of scratches. They couldn't see the boy's face, but both recognized their son and groaned.\n\nAnnie spoke, \"He's never even dated.\"\n\nSarcastically, Dave replied, \"Guess we can quit worrying about that.\" Annie gave him a look that said he should have kept that comment to himself.\n\nSeeing how badly Annie was taking the revelations, \"Ok! We're going to catch a flight and be back to Chandler ASAP! We'll leave the car at the airport and pick it up in a few days. I think there is a 10 a.m. flight. If we hurry we can just make it.\"\n\nAnnie squeezed her husband's hand and gave a subdued murmur, \"Thank you.\"\n\nOn the way to the airport, they tried to call the children. No answer on either phone. \n\n\"Annie, are you ok to check the rest of the emails?\" \n\nThe Principal's note was not an easy one to read either. It indicated that some 'disturbing information' had come to light. To himself, Dave thought, 'no shit.' She also informed them that Tyler would need to be finding another school for the fall. This shocked them with school ready to start in a few weeks, it would be difficult to even find a school that quickly. And of course, she wanted to meet with them as soon as possible to discuss his 'personal problems.' \n\nAnnie's emotions were a jumble of anger at the suggestion that her son had personal problems, and the fear that she might be right. Tyler had always been a good child. If there had been any trouble, it had been his sister, and she wasn't that bad, just a little wild at times. The web page had shaken what she knew of her son. \n\nCoach Barker had written a note as well. The tone of Coach Barker's note was contradictory to the Principals note. He mentioned the fight and said he would be checking on Tyler after he had time to recover and he hoped he would consider staying with the team as they would need him after the other boys in the fight were dismissed from the team. \n\nDave listened to Annie as she read the notes and tried to calm her, \"We obviously don't know all the facts. A fight is usually not a reason to force a kid to change schools.\" He didn't mention the video. That was in a different category than the fight, but surely it hadn't taken place on school property and it didn't look like anyone was hurt, at least not physically, and everyone seemed to be 'consenting,' although he realized that might not be the case. Tyler himself had just turned 18, and there were probably parents of a girl who would disagree with his assessment that 'no one was hurt' after seeing the video. \n\nHe continued to calm Annie, \"Coach Barker wouldn't be asking Tyler to stay with the team if he thought he was going to be thrown out of school. It's the other boys who are being dismissed from the team. We just need to try stay calm until we can get all the facts. And besides, Tyler's a good kid.\" He would have said the last with more conviction an hour earlier. He still believed it, but now he realized that they might not know their son as well as they thought. That in itself was disturbing. To himself, 'How much more was there?' This last question concerned him deeply but it wasn't the time to discuss it with Annie. She was panicky already. 'Get the facts first,' he told himself.\n\nThree and half hours later they were getting out a cab at their front door. They rang the doorbell. It wasn't comforting when no one answered. With keys in hand, Dave and Annie entered the house and began looking for their children. \n\nIn the kitchen, his search was rewarded with the sight of their son putting the finishing touches on the lawn. A t-shirt was draped around his neck leaving his chest in the open providing open air cooling. It was still pretty hot in Chandler.\n\nFinding Tyler mowing wasn't unusual. He was moderately surprised to find Katherine with a rake in hand raking leaves out of the bed under the shade tree nearby. This was unusual. She never did lawn work. She wasn't lazy, but normally the lawn was Tyler's and the house was hers. She seemed completely happy to avoid the 'dirty work' of the lawn. A vacuum cleaner or dust cloth were her normal tools.\n\nDave yelled at Annie, \"Found them.\" A moment later the two of them walked out onto the patio. This was when Tyler first noticed them. His immediate reaction was to shutoff the mower and begin trying to work his arms back into the t-shirt to hide his bruises from his mother, a task his sore ribs protested.\n\nKatherine turned instantly to see why the mower wasn't running, saw her parents across the yard, and saw Tyler struggling to get his t-shirt back on. She was at this side in seconds, positioning herself between her brother and her parents, blocking their view as much as possible, and working to help him get the t-shirt in place. If it had been up to her, she would have had him leave the t-shirt off. A little sympathy wouldn't hurt. \n\nThe t-shirt effectively hid much of the damage from the fight. The part that couldn't be covered up was his face. Annie and Dave hadn't been close enough to see the bruises before Tyler had covered himself.\n\nAnnie gently touched a finger to one of the sutured cuts on her son's lip, \"Are you ok?\" Her voice quavered and she fought the tears welling up in her eyes as she examined his face.\n\n\"I'm fine Mom. Just a few scrapes and bruises.\" He leaned down to give her a better view, \"See.\" He sounded just like the son she had always known, not the one in the emails. \n\nWatching Mom, Sis was soon tearing as well, \"It's all my fault. I shouldn't have let him go to school by himself.\" After a short pause to wipe her eyes, \"Tyler, take off your shirt... They're animals. I'd like to beat them all like they did Tyler. And this dummy mowed the lawn this morning. I tried to talk him out of it.\"\n\n\"It wasn't your fault, Sis. I don't want you near any of those guys. Besides, it's just a few bruises and scrapes. They'll be gone soon. And the lawn is one of my chores and it's already a couple of days late.\"\n\nDave nodded at his son. In spite of everything that had happened, whatever that was, Tyler seemed different, and more mature, and still a good kid.\n\nWith a little pain, my shirt came back off over my head to reveal bruises around my mid-section and back.\n\nMom's hand covered her mouth as she gasped, \"Didn't... didn't you think we needed to know about this... and... and that other stuff?\"\n\nDefensively, Sis countered, \"I did send you a video of the fight.\"\n\nDad asked, \"Who, exactly, did you send it to? I hope it's better than the one we did get.\"\n\n\"To Mom.\"\n\n\"Ok. That explains it. We never got past my phone. And it had plenty in it. Show us what you sent your mother.\"\n\nA minute later we were all watching the fight video, Sis off Mom's shoulder and me by Dad.\n\nMom and Sis were in the middle of a major cry, Mom seeing it the first time and Sis who had seen it more times than she cared to remember. \n\nDad's response was not what we usually heard from him, \"Son-of-a-bitches. Damned cowards!\" Dad didn't normally speak this way and Mom usually wasted no time calling him on it. This time, Mom didn't say anything. \n\nI could see anger under Mom's tears. In a caress similar to Sis's, Mom delicately ran her hand over me checking out the damage, \"Are you really ok? This looks... horrible.\"\n\n\"I'm fine Mom. Really. Nothing to worry about.\"\n\nDad picked this time to squelch some of the sympathy I was getting, \"We're glad that you weren't seriously hurt in the fight, but... it seems like we have some more serious things to discuss. It feels like you guys are not telling us... a few things!\"\n\nSis jumped in before I could collect my thoughts. Also before she had collected hers, \"We did mention it, sort of. I emailed you. Tyler wanted to tell you. I talked him out of it. And we weren't trying to hide it, not really. It's just that... well, it had already happened, and he is ok, and it's been five years since you guys had a vacation. We didn't want to ruin it. We were going to tell you all of it... once you were back.\"\n\nWith a look of disappointment, Dad looked at Sis and then settled on me, \"I expected better, particularly from you son.\"\n\nI knew I'd let them down but something about what he said bothered me. It took me a few seconds to digest it, \"Look, I know I screwed up really bad. But Sis didn't have anything to do with this. You expected better from me? So what would you expect from Sis?\" The depth of my anger surprised me and everyone else.\n\nSis squeezed my arm, \"Its ok. I'm used to it.\" Her comment hurt as well.\n\nHer comment brought a pained look to Dad's face, \"Katherine, I'm sorry. I didn't mean it that way.\"\n\nTo Mom, it seemed like a good time to switch subjects, \"Your father and I need to unpack and think. Could you two order pizzas for us. We can have THE TALK over pizza. Let us know when it's here.\" \n\nThe order was easy, a Deluxe Feast for them and Sis and I would have a MeatZZa Feast, the usual. \n\nSis and I spent a few minutes discussing the upcoming talk while we put up our lawn tools. Family pizza was usually fun, but I didn't expect much fun at this one. \n\nSis cautioned me, \"Be careful. Any time I've tried to hide something, it usually comes out sooner or later and it's always worse than just telling them up front.\"\n\n\"I agree... mostly, but not everything... \"\n\nSis flushed, \"Yes... there is that.\" Sis sighed, \"We don't even know what they know.\" Sis looked at me thoughtfully for a few seconds, \"If it gets bad, I'll tell them. It'll all be on me.\" \n\nI knew what she was offering, \"No way! You can't do that. I don't plan on mentioning names... any names, and absolutely not yours! Besides, if they find out what WE did... None of this other stuff matters.\" Sis frowned and nodded.\n\nWe talked a few more minutes and the doorbell rang. Our lunch was delivered, \"Mom. Dad. Pizzas here.\"\n\nThe fight was the obvious place to start. Mom and Dad would be sympathetic. This was Sis's suggestion. I definitely had Mom. Dad too, but he's a dad, not a mom. This led to a question which I was ready for.\n\nDad was the one to ask, \"Why were these guys out to get you? And I thought I taught you to stay away from fights whenever possible.\"\n\nThe questions didn't bother me, but Sis bristled, \"What do you mean he should stay away? Don't you think he would have if he knew what was coming? The call said he was meeting the coach and he was upset at Tyler. You've already decided all of this is Tyler's fault! Haven't you?\" Sis was furious.\n\n\"It's ok Sis. It doesn't matter.\" To me, Dad was right. It felt like my fault. \n\nDad looked at Sis and apologized, \"Look, I'm sorry. We both know your brother is a great kid and this isn't the end of the world, but some of the stuff we've seen, well, it's pretty disturbing and I'm not talking about the fight. I don't see how some of it isn't Tyler's... responsibility,\" avoiding the word fault.\n\nSis's eyes narrowed as she stared across the table at Dad, \"You need to learn to apologize. You don't say, 'I'm sorry BUT.' If you're sorry, you just say, 'I'm sorry.' It really doesn't work the other way. It sounds like you don't mean it.\"\n\nMom came to Dads aid, \"Katherine, watch your tone with your father.\"\n\nShe'd seen her brother. He wouldn't take care of himself. He'd just answer their questions and try to protect other people, and not tell them what they really needed to know.\n\n\"You're worried about my tone? My TONE?\" She might have been called for her tone again, but she didn't give them time. Her next words caused them to hesitate, \"You want to know why he's never dated? I know you've worried about it. You've even discussed it with me. Like maybe he was gay.\" \n\nThis was nowhere in my plan, \"Sis?!\"\n\nShe'd hit a sensitive subject with Mom and tone was forgotten, \"Katherine, what are you talking about?\"\n\nShe ignored us both. I would have stopped her and Mom would have insisted she continue.\n\nOnce started, she didn't plan to stop for anyone, \"When he was a freshman, a girl drags him into an empty room. She tells him he's cute. She likes him. She kisses him.\" Her tone turns angry, \"She shoves her tongue down his throat and puts her hand in his pants. She jerks him off.\" \n\nShe stopped for effect, but she needn't have. Her words had stunned Mom and Dad. \n\nIt shocked me too, but not for the same reason. I knew all this. What shocked me was that Sis knew details, things I hadn't told her. We'd talked about this, but not all the details.\n\nBefore we could recover, Sis moved on, \"He's never done anything like this. When he's finished, you know what I mean by FINISHED, and he's still stiff, she pulls him into the hall so some of her friends can see what she's done.\" Her voice quivered and she teared up, \"Next thing he knows, they're all laughing at him. Then the bell rings, but he can't go to class. He's got to get to a bathroom and clean himself up. Hopefully nobody will see him. He leaves his underwear in a trash can! Probably smells like cum. Can you imagine what he felt like? He makes it to class late.\" She sighs, \"You get a trip to detention for that.\" She glared at her Dad, \"Of course, that's all HIS fault. Now you know why he was never interested in girls, and why you and half the school thought he might be gay.\"\n\nThe graphic account worked as she hoped. Mom's face has gone white, her hand covered her mouth, \"Baby, you... you were raped. Why didn't you tell us?\"\n\nAlmost composed, Sis had an answer, \"That's easy. Because he believes it was his fault. Rape doesn't happen to guys. Everyone knows that!\" \n\nSis had been harsh. It had taken a toll on Mom. I looked at her, \"It was a long time ago Mom. I'm... I'm over it now.\" \n\nIt had taken its toll on Sis too. She looked exhausted.\n\nShe had one last thing to say, \"You can't blame Tyler for any of this. If you have to punish someone, it should be me. I'm the adult. I was left in charge,\" her head bowed, \"and I didn't take care of him, just like I wasn't there for him before.\"\n\nBy now, Sis and Mom's hands are resting on mine, \"That's not true,\" I said, \"She couldn't have done anything about any of this, not then and not now.\"\n\nDad was staring at me and he laid his hands on top of ours. He looked at me, \"No more blame and we can decide what needs to be done later. I hope you appreciate what a great lawyer you have.\" He turned to Sis, \"And you certainly can't blame yourself for what happened. If anything, I let him down.\"\n\nHe shrugged and looked at me before continuing, \"We'll need to hear the rest of this, but it can wait. It seems like we're going to have to fight the school, assuming you want to stay there, and we'll have to find out what the police department wants.\"\n\nI wasn't anxious to have this drag out, \"If it's ok, I'd like to finish now.\" Later Sis told me that was 'genius, while you have them on your side.' I hadn't felt that way. I just wanted it over.\n\nOver the next hour, I told them almost everything. That included the blackmail, helping the girls get out of it, the fight, and finally Hawkins abusing Peggy. Identity of the girls also came out. Sis took the sting out of that by pointing out that chances were Principal Thomas already knew them, and if not, Ms. Talmadge did. The story I told wasn't nearly as graphic as Sis's had been. Much of the stress had gone out of the house. \n\nWhen it was over, Sis beamed, \"See! Instead of getting expelled and grounded for life, he should get an award!\" \n\nDads took the opportunity to get back on the good side of his daughter, \"Well, I don't know about an award, but he did do pretty well didn't he. And by the way, you shouldn't worry about not taking good care of him. Your mother and I got an email from a Dr. Joseph who said he was in good hands. Seems like he was impressed with you.\" Sis perked up with a self-conscious smile.",
        "Later, when Dad and I were far enough from the girls to not be heard, \"Thanks. Sis needed that. She's taken what happened to me very personal.\"\n\n\"I can see that. She's got a mouth on her and you're lucky she does. And by the way,\" as he sighed deeply, \"I remember that detention, the only one you ever got. I gave you some grief over it. I'm sorry. I understand why you didn't tell us, but I wish you had,\" and gave me hug.\n\n\"That's ok,\" and I consoled Dad, \"I would have done the same thing if I were you.\"\n\nAs an afterthought, Dad had one more bomb to drop, \"We... uh... we got this... other video. We're going to need to talk about that soon. But it can wait until tomorrow.\" I wasn't certain, but pretty sure by his tone what might be in that video. I wasn't looking forward to it.\n\nAfter today's revelations, Mom and Dad needed most of Sunday to take it all in. In the end, there was to be no punishment in spite of the fact that they were concerned about me. I could see a lot 'parental guidance' in my future and I hadn't answered all their questions.\n\nWith Mom and Dad preoccupied, it gave me a chance to talk to Sis, \"Sis, I never told you all of the story. How did you know?\"\n\nShe laughed, \"Oh, you know who told me. They were here back in the summer waiting for you to get back from the store and I was talking to them. I was worried about you. They're really not good with secrets, at least around me. They didn't stand a chance,\" and she gave me a smug smile while putting her arms under her breasts and pushing them up. \n\nShe was right. They didn't stand a chance. No more chance than I had that Friday night at the beginning of Mom and Dad's vacation.\n\n\"So you knew BEFORE I told you.\" Sis nodded. \"Did you have to tell it the way you did?\"\n\n\"If I didn't, you would have been grounded for life. You were just going to sit there and meekly answer questions. This was better.\"\n\n\"I guess, but it was really rough on Mom. So, I should tell them about you?\"\n\nA look near panic crossed Sis's face, \"NO! That's old news and besides, I'm past it. And besides that, I'm not in any trouble. You were.\"\n\n\"That's bullshit Sis. If it weren't, you'd be going out with a doctor!\"\n\n\"That's not fair,\" and turned her back to me signaling the conversation was over. I let it drop. Sis can be really stubborn so I didn't push it then. I just needed to do something to help her.\n\nSunday evening, I had decided what I was going to do for Sis. It seemed inadequate, but it was all I could come up with, \"Carol, I need a favor. You still know some of the girls who were cheerleaders when we were freshman. Right?\"\n\nCarol was curious and eager to help me, \"Sure. I stay in touch with some of them. What do you need?\"\n\n\"Some of them or someone they know may have known my sister when she was a freshman. She dated a college guy for a while, and... he took advantage of her. I need to find him!\" Anger seeped into my last words.\n\n\"My God! That's terrible,\" and she paused, \"What are you going to do if you find him? You wouldn't... do anything terrible... would you?\"\n\nI thought about her question for several seconds before answering, \"That depends on him. What I want is for him to help Sis. Do for her what you and Bonnie and the other girls did for me. Let her know he's sorry and has regretted it. If he does, I think it could really help her... like you did me... if he doesn't, he's going to regret meeting me.\"\n\nCarol was silent for some time before answering, \"Ok. I'll see what I can find out, but promise me. You won't do anything stupid.\"\n\n\"Thanks Carol. I owe you.\" No promise made.\n\nShortly after talking to Carol, Dad knocked on my door, \"Tyler, I think we need to talk about the other video. I just got a call from a Mr. Anderson. He says Carol is his daughter and wants to come over tomorrow to 'discuss things' is how he put it. Is this the Carol you mentioned yesterday? That Carol?\"\n\nCrap! I looked away. \"Yes, that's the one.\"\n\nOpening the door without invitation, Dad came in followed by Mom and Sis, \"I think now would be a good time.\"\n\nMom and Dad sat on the end of my bed. Sis sat in the floor near me with her legs folded under her drawing unhappy stares from Mom and Dad; a silent invitation to leave, \"Well, I'm not leaving him to do this alone if that's what you think. Besides, I've already seen or heard it all.\"\n\nI squeezed Sis's shoulder, \"Thanks Sis.\" It was nice to have her with me.\n\nDad led off, \"Under the circumstances, it would seem like they owe you an apology... or something. But he didn't sound apologetic. Maybe a little angry in fact.\"\n\nWe'd said we would discuss the video, but I had been stalling hoping it would be forgotten or maybe they'd decide against it. I had. Guess some stuff just won't go away, \"Dad, you remember the video we were going to talk about...\"\n\nDad scowled, \"Hard to forget... Damn! Don't tell me the girl in the blindfold is... Carol?\"\n\nI shut my eyes and swallowed. All I could manage was a couple of nods.\n\nMom found her voice, \"Oh boy!\"\n\nSis couldn't contain herself, \"Well, I'm sure she enjoyed apologizing in that video a lot more than Tyler enjoyed what she did to him,\" then with heavy sarcasm, \"She sure looked like she was enjoying it in the video.\"\n\nMom and Dad are good parents. They even have empathy for other parents and their children's problems. This situation was challenging for them.\n\nI spent the next hour 'explaining myself.' \"This started as a stupid joke on me. I guess it was supposed to make her look big or something, and I guess in jokes like this if someone feels big, someone else has to feel small. And if you don't know them you can pretend no real harm was done. But they paid for it. A lot more even than I did. Some guys saw them. Those are the guys from the fight. Anyhow, Carol got to know me at practice and found out how it had affected me. She wanted to talk to me with Bonnie... I didn't know them and was afraid it was going to be the same as... before. But then the girls were crying and trying to apologize and... and one thing led to another... and you saw the rest of it in the video.\" \n\nMom was first to speak, \"Tyler... you didn't... please tell me you didn't... take advantage of these girls.\"\n\nMom's remark unsettled me, but Dad made it even worse, \"Tyler, do you know if these girls are eighteen?\" He didn't add anymore, but I knew what he was getting at. \n\nThis might explain Mr. Anderson's attitude, \"I... I... Uhhh, I don't know Dad. I never thought about it.\" Maybe I had taken advantage of underage girls. It wasn't like forcible rape, but I knew that might not make any difference. \"I'm sorry Mom, Dad. I'm sorry.\" I shut my eyes and my chin sank to my chest.\n\nSis was standing by me in an instant, \"YOU. DID. NOT. RAPE. THOSE. GIRLS. Do you hear me? You didn't. They're almost certainly as old, or older than you, and they were willing. If anything, you helped them. And besides, if you want to talk about statutory rape, how old were you when they raped you? Fifteen? If her dad wants to talk about it, I'll want to talk about that.\"\n\nThe best smile I could manage was pretty weak, \"Thanks Sis, but maybe I did pressure them. Not that night, but I was pretty rough on Carol earlier when we first started talking about what happened. Maybe they thought it was the only thing they could do to make it right.\"\n\nSis continued with the moral support as she hugged me and spoke softly, \"Tyler, I've heard this story, all of it, and you didn't force them to do anything. They may have been clearing their own consciences, but that's not your problem.\"\n\nDad said, \"Well, I'd feel better if I knew they were eighteen, but your sister makes some good points. Besides, seems to me you did all of these girls one hell of a favor... and got a trip to the hospital for your troubles. If Mr. Anderson wants to fight about it, that's what he'll get, but I can't really believe he wants that,\" then he looked at Sis, \"but I can imagine what I'd be thinking if that girl in the video was you.\" Sis saw the love in Dads words and gave him a smile.\n\nMom put an end to a difficult conversation, \"I can't really believe Mr. Anderson thinks Carol was raped. He's probably just in shock like we are. Come on. Let's all go have sandwiches.\"\n\nOur dinner table is normally noisy with everyone talking. The discussion about the video and Mr. Anderson had been a downer. Maybe I really had taken advantage of the girls. In that case, I'd be no better than the guys blackmailing them. That was a distressing thought.\n\nAs I stared at my sandwich, having eaten all of two bites in 10 minutes, Sis stood up and announced, \"I'm going to watch a movie,\" and she put a hand on my shoulder, \"Why don't you join me. Maybe it'll take your mind off things.\" She looked at Mom and Dad, \"You could use it too. Why don't we all... finish eating in the living room?\"\n\nIt was a good offer which I was more than willing to take, \"What'll we watch?\" I was prepared for a chick flick.\n\nSis came back immediately with a grin, \"Maybe we can get through Guardians from start to finish for a change.\"\n\nI laughed, \"What is this? Our third try?\"\n\nMom positioned herself in front of me and gave me a bear hug, \"You didn't do anything wrong. This has all been a lot for your Dad and I to process, but that's how we both feel.\" \n\nDad standing beside me put his hand on my shoulder, \"That's true. You may have to remind me that I said that during the next few weeks, especially if we have to get you in another school.\" He chuckled as he said this and I knew he was joking, yet concerned.\n\nTen minutes later we were all sitting on the large sectional in the living room. Mom and Dad were snuggled at one end close enough to have their own private conversation. Sis and I were sitting near each other at the other end. I don't think any of us were focused on the movie. \n\nAfter a while, Sis slumped over against me and dozed off. The only place for my arm was around her shoulder. Mom and Dad accepted the position as a brother and sister offering comfort in a stressful situation, just as I did. Soon we were both asleep. It had been a tiring day and I was mentally exhausted.\n\nI think Dad was the only one who made it through the movie. Sis and I awoke at 6:30ish the next morning, still on the sectional under a light bedspread. I guess Mom and Dad had decided not to disturb us. It was nice waking up with Sis resting against me. \n\nThere was the smell of bacon and coffee coming from the kitchen. One of Sis's hands had found its way to my morning wood and gave me a light squeeze. \n\n\"I see you still have your PROBLEM,\" Sis whispered, \"Sorry. You'll have to help yourself.\" She gave me a sly grin as she stood up and yelled toward the kitchen, \"Mom, do we have time to shower?\"\n\n\"If you can do it in ten minutes. And take your brother with you. He'll feel better after a good shower too,\" Mom answered.\n\n\"I'd keep the blanket if I were you and I'd hurry if you want to finish a shower and take care of... that,\" Sis advised as she looked down in the vicinity of a noticeable bulge in the bedspread.\n\nI rushed my shower and was in the hall waiting on Sis to emerge. From behind, I put a hand on her shoulder and she shivered for a second before shrinking away from my touch and spoke softly, \"You can't do that anymore. Otherwise, you'll forget and someone will see us.\"\n\n\"Ok. You're right.\" It made me feel good to see that little shiver as I touched her, but she was right. Things were going to be hard, pun intended, for the next week until Sis went back to UA. Then things would get back to normal even if it was a new normal.\n\nWe walked down the steps and into the kitchen where Mom and Dad were having a coffee. There were plates with eggs, bacon, and toast for the four of us.\n\nThe rest of the day was uneventful. Sis and I both spent a lot of time in our rooms avoiding each other. I made several trips to the bathroom to relieve 'pressure.' It was definitely going to take some getting used to not having Sis around.\n\nAt 6 sharp, a large black Mercedes pulled into our driveway. The Andersons, Tom and Betty, accompanied by Carol introduced themselves and made small talk for a few minutes. I guess they were easing their way into the main agenda.\n\nThe adults went to Dads office leaving Carol, Sis, and I in the dining room. I got us all a round of cokes from the fridge and we sat at the table.\n\nSis was giving Carol a cold stare.\n\nCarol fidgeted and asked, \"How was your weekend? I hope it was better than mine.\"\n\nRecalling the last night, \"Dad finally got around to... watching our video. It wasn't good.\"\n\nCarol tried to focus on me rather than Sis, \"Dad saw it the day after the... that awful fight,\" and her hand went to mine. \"Dad made me watch it with him three times. I think he cried! Bonnie and I have both been grounded for the semester; no car, have to ride the bus or Mom will take us, no going out with friends, no cell phone, internet, or social activities.\"\n\nEven Sis was impressed with the harshness of the punishment and almost sympathized, \"Wow! That's more than I got that time me and some friends went drinking and Johnna wrecked her dads car.\"\n\n\"It's the most he's ever done... but I deserved it,\" then something forgotten surfaced, \"By the way Katherine, Becky Kendrick says hi. Said you were friends.\"\n\nSis stared off in space for a few seconds, \"I hadn't thought of Becky in... a while. How do you know her?\"\n\n\"Sorry. I keep forgetting the last name thing. She's my sister. Half-sister actually. Mom is both our mothers, but Tom is my father but not Becky's natural father. He died a long time ago.\"\n\n\"Becky and I were best friends once upon a time. I... went in another direction.\" It was left unsaid, but the rape had done that, the one that Carol wasn't supposed to know about.\n\n\"You should give her a call. I'll text the number to Tyler.\"\n\n\"I'm not sure why she'd talk to me after all this time. I... kind of dropped her.\"\n\n\"I'm sure she'll talk to you.\" \n\nSis lightened up on Carol after finding that they had a connection, even if it was tenuous. \n\n\"Katherine. Is it ok if I talk to your brother for a minute? In private.\"\n\nSis's eyes narrowed briefly, but a minute later Carol and I were standing in the next room whispering. I'm sure Sis wanted to be part of it, but she didn't push.\n\nCarol got close, \"I found,\" and she paused looking in the direction of Sis in the dining room staring at us, \"what you were looking for, but I'm not going to give it to you unless you promise not to do anything stupid.\" If Sis overheard us, she wouldn't know what we were talking about.\n\nLouder than I planned, \"You said you'd help! You know why I need this.\"\n\nFrom the dining room Sis had overheard, \"You guys ok?\"\n\n\"We're fine Sis. Nothing to worry about,\" trying to allay her concerns. Otherwise, this conversation would be a 3-way soon.\n\nCarol said, \"Ok, so tell me what you plan on doing... with it?\"\n\nNeeding to be explicit but not overheard, I moved until Carol and I were practically touching and whispered, \"I'm going to take Sis to meet him. It's the only thing I can think of to help her. If he could apologize to Sis like you and Bonnie did for me, maybe it would help her. I never expected an apology to mean so much to me, but it did. It made things right between us. I hope it might work for Sis too,\" and I looked to the dining room where Sis was straining for snippets of our conversation.\n\nCarol leaned against me and hugged, \"What if he doesn't want to apologize?\"\n\nI confessed, \"I don't know what I'll do.\" \n\n\"Then there's only one way you're going to... get what you want and that's if I go with you. I'll give you directions after we're together.\"\n\nBriefly we argued, but Carol wouldn't budge, \"OK! We'll do it your way.\" I'm sure Sis heard the last, but all she heard was me giving in to Carol.\n\nShe hugged me again, \"Good. That's settled. I'll set it up.\" She seemed pleased with herself.\n\nAcross the way, Sis looked concerned. She must have heard at least a part of what we had said.\n\nWith 'business' concluded, the three of us continued talking at the dining table. Carol paused in mid-sentence, \"Oh, before I forget, let me text you Becky's cell number,\" and she fiddled with her phone. Seconds later my phone chimed and Becky's phone number appeared in my text tool. \"Give it to Katherine. I'm sure Becky would enjoy catching up with her.\"\n\nJust as I forwarded the text on to Sis, our parents emerged from Dads office. Mrs. Anderson came to me immediately and gave me a hug, \"We want to thank you for what you did for our daughter; all the girls really... and we're so sorry for what happened to you, for all of it,\" and she glanced at Carol as squeezed me again before releasing the hug.\n\nMr. Anderson gave me a 'man pat' on the back with a minimalist hug, \"We know you may still have some issues with Chandler High. If so, give me call. I can threaten to sue them.\" He winked, but I'm pretty sure he meant it. Somewhere I'd heard he was a lawyer.\n\nAs they went out the door, I overheard Mr. Anderson, \"Why couldn't she have met a nice boy like him when she started school. Then maybe you'd be that grandmother you always wanted to be instead of this.\"\n\nWith the door closed Sis showed that things were not all forgiven, \"She DID meet that nice boy... And we're doing THIS!\" She spat it out like something foul. Apparently trying to like Carol was taking some effort.\n\nThat night, she came to my room shortly after our parents had gone to bed, \"Are you going to tell me what Miss Carol has gotten you into. I heard you, 'I've got what you want.' So what does she have for you? I don't even want to guess what it might be.\"\n\n\"I'll tell you soon. I promise it's not drugs or anything bad. You just have to wait a bit... and trust me.\"\n\nShe pushed her body up against me, \"I could make you tell,\" and maybe she could have. A small part of me was ready to be forced to reveal all, but I couldn't.\n\n\"But you won't because you know we have to stop. I... I can't stop without your help.\" It was a play for sympathy. Part of me wanted her to try force me to tell, use her feminine wiles on me.\n\nAs she turned, unhappy with the standoff, \"All right, but I expect you to tell me. SOON!\" I could see her nipples standing erect in her thin sleep t-shirt, and hoped that she would not come back. I didn't want to cave, but I would have. I just needed a little time for Carol to get back to me with the arrangements.\n\n*****Back to School Week for Sis*****\n\nA number of things happened during the remainder of the week before Sis had to go back to UA. All of the ones that I considered important involved Sis, and they were some of the best and worst things that had ever happened to me.\n\nAt 1030 AM the next morning Carol called. I was still miffed at her for forcing the deal on me, but I was anxious to hear from her. We'll pick you up tomorrow night at 930PM.\"\n\nDamn! The deal had been that SHE go with us, \"We? Who is we?\" I guess she didn't plan on answering that question as she hung up before I had even finished asking. Shit!\n\nStill mildly angry at Carol, I made my way to Sis's room. She'd been spending a lot of time there, probably trying maintain some separation. I knocked and opened the door, \"Sis, be ready to go out tonight at 930.\"\n\nConfused, \"No. We... can't do that anymore.\"\n\n\"Please, it's not... that, and you won't have to be alone with me.\"\n\n\"Tell me what's going on.\"\n\n\"I'll explain at 930. We HAVE to do this! So just say you'll go. For me.\"\n\n\"It's against my better judgement, but ok. Now leave.\" Reluctantly I went.\n\nThe next stop was Mom, \"Mom. Sis and I are going out. It'll be late. Might be after midnight before we're back. Hope that's ok.\"\n\n\"Mind telling me what you're doing going out that late?\"\n\nIt was time for a white lie, \"I'm not sure. Whatever it is Carol cooked it up. Said we 'just had to do it.'\" Sis had taught me a little about lying. Keep it simple and as close to the truth as possible.",
        "At 830PM I received a text from Carol: 'bring $40'\n\nMy reply: 'why? where are we going?'\n\nCarol: 'can't tell you. just bring it. cu at 930'\n\nSis had been watching as I texted with Carol, \"Something wrong?\" She didn't seem concerned if something was wrong. Maybe she was even hopeful.\n\n\"Carol! She's almost as big a pain in the ass as you.\"\n\n\"Hmmph. Good for her!\" and she gave me a grin that said I deserved it. She didn't like being kept in the dark. I couldn't say I blamed her, but I couldn't take a chance on her bailing out.\n\nI checked my wallet for $40. It was there and all I needed to do was wait for 930 to come. I spent then next hour remoting in to a few of my customers' systems to see if anything needed attention. There were a few routine things that would need some work, but could wait a day or two. That was good since all I could really think about was Sis and whether or not it would go as hoped.\n\nAt 930 I was looking through the slats of the blind waiting for Carol's small car to appear on the driveway. The car that arrived was irritating; the Anderson's large black Mercedes. So who was in it? Surely not just Carol. It left me debating what to do. Go? Don't go? I really didn't have a choice.\n\nFrom downstairs I heard Mom, \"Tyler. Carol and her father are here.\"\n\nSis joined me. As we came down steps, \"Now can you tell me what's going on?\" She didn't plan on being held off any longer. \n\n\"Probably,\" as we stepped out the door to find Carol and another girl getting out of the car. \n\n\"Tyler, this is my big sister. Becky,\" Carol proudly announced. I'd never met her, but I saw the recognition and hesitation on Sis's face.\n\nBecky stepped to Sis and wrapped her up in a hug, \"It's really good to see you Kathy. I've missed you.\" After a few seconds of Becky's embrace, Sis returned it. At least that was positive.\n\n\"Carol, what's going on? This isn't what we agreed on?\" as I tried to figure out whether she'd been lying to me and just wanted to set this up, or how her father fit in.\n\nCarol launched into an explanation before I had a chance to speculate any further, \"You know I'm grounded. I thought I could sneak out, but he caught me using my cell phone and the only way I could do this was to get him to agree. He's a lawyer so I told him you needed legal counsel. Give him the $40. That's 10 for each of us.\"\n\nHer father objected, \"I'm not sure I want to take his money. Lawyer client relationships are for real legal issues. Not for you and your friends to play with. I think you better explain yourself young lady, unless you want to be grounded until graduation.\"\n\n\"Oh, don't be a legal prick Daddy. Besides, Tyler really may need a lawyer... and a parent tonight. So just trust me and take his money. That will make all four of us your clients. We need to be at Fashion Center by 955, so take his money and let's all get in the car. Tyler will explain once we're underway.\"\n\nShe herded the four of us into the car placing Sis and I in the back seat along side Becky. \"I'll ride shotgun!\"\n\nMr. Anderson glanced at his daughter as the car backed out of our driveway, \"You know a contract or agreement is unenforceable it if was made under false pretenses or duress. Don't you? And don't try pull that Daddy crap on me. I know your games.\"\n\nCarol shifted in her seat until she could see all the occupants in the back seat, \"Tyler. Tell him why we're doing this.\"\n\nI glanced at Sis who was as in the dark as Becky and her father, \"I... I can't. I promised.\"\n\nCarol gave me a glare that said she didn't want to be refused, \"Look, he took your money. That means he's bound by lawyer client privileges. He can be disbarred if he reveals what you say, and I'll disown him! Do you want to help Katherine or not?\"\n\nI was in a corner with only one way forward. I looked at Sis who was just beginning to suspect a small part of what was happening. She was sitting in a car with three people who weren't much more than strangers and realizing that I was getting ready to reveal a secret she had guarded and suffered with for six years. She was shaking her head mouthing the word 'no,' with a look of terror on her face.\n\nI made up my mind, \"Please don't hate me Sis,\" and I began at the beginning, \"When Sis was a freshman in high school, she dated a college freshman, and he raped her.\"\n\nSis looked at me, her betrayer, \"You promised.\" With tears flowing she was hauled in by Becky, as I sketched out what I had planned for tonight. It didn't take long as it wasn't much of a plan, more of a hope.\n\nUnderstanding came to Mr. Anderson. Now he understood why she wanted him to be a lawyer and why she hadn't wanted Tyler to do this alone. He glanced at me in his rearview mirror, \"Tyler. You... aren't armed are you?\"\n\nCarol was shocked, \"Daddy,\" but she did raise up in her seat and looked at me as if I might have a gun concealed on me. \n\n\"No sir. I'm hoping he will want to help. If not, I don't know what I'll do.\"\n\nMr. Anderson looked at his daughter Carol, \"I can see now why you wanted me along,\" and he switched his gaze to Sis, \"Katherine, I'll need more information if we're going to bring this guy to justice. We can discuss that later and fortunately there is not statute of limitations on statutory rape. We'll go after him, but I have to warn you, it's been a long time and may turn out to be your word against his, so the courts may not be able to help. Still, he'll be very uncomfortable with the legal heat we can bring.\"\n\nI could hear Becky speaking softly to Sis, \"I'm so sorry. I should have been there for you, but I never knew what happened. I am so, so sorry,\" as she stroked Sis's hair and clutched her to her chest. All three girls were crying.\n\nI was dying to know where we were going, \"Carol, so where is he?\"\n\n\"His name is Robert Stafford and he manages the Gap at Fashion Center. I just told him I was looking for a job. He tried to get me to do an online app, so I told him Katherine Perry sent me. He sounded like he wet himself when he heard her name.\" She looked smug. \n\nThen we were at the mall and Carol guided her Dad to a parking spot near the best entrance, \"I'm never going to shop at the Gap again,\" Carol said to no one in particular.\n\nWe arrived at the Gap about 10 minutes early and found benches for the girls while Mr. Anderson and I paced. It must have been time for the legal counsel I'd paid for, \"Look. I know how I'd feel if it was Carol we were talking about. This may not go well so I'm going to be nearby to make sure you don't... loose it. I'd rather that he be the only person here who needs legal counsel tomorrow.\"\n\nIt was then that I noticed a young woman holding the hand of a small girl standing near the entrance of a shop across from the Gap staring at us. When I noticed her, she started walking our way. \n\nWhen she reached us, \"I'm Teri Stafford. I guess you're Katherine's family?\" as she looked at Sis still being consoled by Becky and Carol. \"How's she doing?\" She looked depressed.\n\n\"I'm her brother and this is our lawyer,\" which I emphasized, \"And the other two girls are his daughters.\"\n\nFrom down closer to the floor, \"Why's she crying Mommy?\" And she tugged away from her mom's grip and raced to Sis, \"It'll be ok. Really.\"\n\nSis smiled weakly, \"Who are you?\"\n\n\"That's my Mommy and we're waiting on Daddy. He owns that store,\" while pointing at the Gap.\n\nLooking at the little girl, Sis shuddered, \"I... I can't do this.\"\n\nWe followed Teri as she retrieved her little girl, \"Roberta! Don't bother the lady.\"\n\nTeri addressed Sis, \"He's needed this for a long time. We almost didn't get married when he told me about you.\"\n\nI think we were all surprised that he had told her years ago and not after Carol's phone call.\n\nMr. Anderson leaned close and whispered, \"That's a plus.\" \n\nTeri continued, \"I know you probably want to hurt him,\" and she looked down at her daughter, \"but she needs him and so do I. He's... he's got an ulcer over this. Can't we work something out? I don't want her father to go to jail.\"\n\nMr. Anderson leaned in, \"You need to keep your sister strong. I can see how she's looking at that little girl. This case could evaporate before it ever gets started.\"\n\nI could see the truth in what he was saying. Even Carol and Becky seemed to be softening but I wasn't, \"He should have thought of that before he did... what he did. He needs to make things right with my sister.\"\n\nAs this was happening the security gate to the Gap was being lowered. The man who lowered it was taller than me, but looked out of shape and unhappy. He walked over to Teri and picked up his daughter who happily wrapped her arms around his neck. \"Teri, can you take Robbi down to the food court? I'll meet you as soon as I can.\"\n\nTeri refused to go and Sis suggested that the three of us walk a few yards down the mall out of earshot. Mr. Anderson protested, but Sis insisted. \n\n\"Katherine, is this your husband?\" and he stuck his hand out as if to shake and saw that I wasn't in the mood, and half suppressed a nervous laugh, \"I've dreaded this for the past 5 years.\"\n\nSis responded, \"No. He's my brother and for your information, it's been six years. Not five. Six years I've been dealing with this. I can't even date!\" \n\nI put an arm around Sis, \"Are you ok Sis?\"\n\n\"You fought me off. Made me stop. I thought, hoped that you were ok. I don't know how I'm going to tell my daughter. I promised Teri I would. I don't want to go to jail. Can we work something out?\"\n\nHis suggestion made me angry. He wanted to work something out, \"How? Do you plan on buying forgiveness?\"\n\n\"No. I know that won't help, but maybe if you,\" and he looked at me, \"You probably want to hurt me. I don't know. I could come back tomorrow without Robbi and Teri... and you could... get even. I know I deserve it.\"\n\nHis hand had dropped revealing a necklace and between thumb and forefinger he was rubbing a cross. Sis was fixated on his hand, \"That's a crucifix isn't it? You're Catholic?\" He nodded. \"Have you confessed?\" \n\n\"No. I was too ashamed.\"\n\nSis stared into his eyes, \"Then I want two things. One, confess your mortal sin, and two, keep your promise to your daughter,\" and she looked at him with disdain, \"The world is full of assholes and she needs protection.\"\n\nHe looked beaten, \"Thank you. I'll do both. She means everything to me.\"\n\nAnticlimactic, but soon it was all over. It didn't seem like enough, but I couldn't help grabbing his arm and making one last comment, \"I'm not as forgiving as she is. I'm still for filing charges. Maybe putting a few more assholes like you in jail would make it safer for girls like Sis... or your daughter,\" and I looked at the little girl who had watched everything.\n\nSis pulled my hand from his arm, \"Tyler, its ok. Take me home. Please?\"\n\nWe stood outside the mall and discussed what had been said. \n\nMr. Anderson noted, \"Katherine, it doesn't look like you want him in jail. He deserves it. Are you sure? I'd be happy to go after him... Pro Bono.\"\n\nCarol looked at her father, \"Daddy doesn't do much Pro Bono. He must like your case.\"\n\n\"I'm a Corporate Lawyer. It's mostly contract stuff. Nothing as important as this.\" Carol hugged her father proudly. Becky nodded approvingly.\n\nOn the way to the car I had to satisfy my curiosity, \"We don't even get to church but two or three times a year except weddings and funerals. How did you know he was Catholic?\"\n\n\"Cami, one of my roommates is Catholic. She wears a crucifix too and she explained it to me. If it was just jewelry, he wouldn't have been rubbing it. If you think he got off too easy, didn't you see him? That confession is going to be painful. And his little girl. I couldn't take her father away. I'll introduce you to Cami sometime. You'll like her.\"\n\nImpressed, Mr. Anderson commented, \"That was very observant of you. Not many people would have noticed that.\"\n\nOn the drive home, Mr. Anderson said, \"One last thing to do. I need to tell your parents.\"\n\nCarol cut him off, \"Daddy! You can't. You're their lawyer.\"\n\nMr. Anderson gave his daughter a sharp look, \"You played me! This was your game plan all along!\"\n\n\"Doesn't matter. You're still their lawyer. You can't tell Mom either. Not a word.\"\n\nUnhappy but trapped, \"Ok. But they still need to know,\" and he looked at Sis who was resting her head against my chest.\n\nSis raised her head, \"We can't tell Mom or Dad,\" and she deadpanned, \"Dad would kill him.\" Mr. Anderson stared at her a few seconds. Maybe he was thinking of his daughter but it was clear he understood why not telling Mom and Dad made sense.\n\nI looked at Mr. Anderson, \"He might. I thought about it,\" which brought concerned stares from Carol and her family. \"Well, I did.\"\n\nSis looked up at me, \"I'm glad you didn't,\" and she paused to take in my face and I took in hers, \"but thank you.\"\n\nSis laid her head back down against my chest with my arm holding her, \"I'll tell them... someday.\"\n\nThirty minutes later we were talking to Mom and Dad. Both were reading in bed waiting for us and Dad asked, \"So what did you guys do? Everything ok?\"\n\nI jumped in ahead of Sis. Normally she was the one with the quick answers or lies if you like, \"Mr. Anderson brought Carol's older sister Becky to see Sis. They used to be good friends. We had cokes and talked. She seems nice.\"\n\nMom looked as if she were sifting through memories, \"Becky. I remember her.\"\n\nSis looked at me with a half-smile, \"She's nice. I'd lost touch with her. I'll give her a call later.\"\n\nOn the way upstairs to our rooms, \"That was good thinking with Mom and Dad,\" and she slid up against me and I automatically wrapped my arms around her. \"Thank you. You're the best brother... or husband ever.\"\n\nAn hour later, I woke in the dark to find Sis standing by my bedside in her sleep t-shirt and panties. She leaned down and kissed me, \"Mom and Dad are asleep. You are the best. You don't know how important tonight was to me. I have only felt in control once,\" and she gave me a lopsided smile, \"actually twice, in the past six year,\" and her hands made their way up under the t-shirt and slid the panties down to the floor, \"No noise.\"\n\nThere was something different about Sis tonight. I wasn't sure what it was, but she seemed, for lack of better words, peaceful or content. It was still her, but she was different. Maybe it was just what she said. She seemed better. I liked it. I was stiff instantly. I wouldn't need to jerk off tonight. \n\nI started to rise to get into a missionary position, but Sis placed a hand on my chest and pulled the sheet back and set about freeing me. She sat beside me admiring me in the pale moon light that was filtering in to my room. She stroked me several times and then leaned over me and took me into her mouth. I didn't think I would ever feel this again. It was heavenly. She bobbed up and down on me slowly several times before I stopped her, \"I need something else.\"\n\nSilently Sis raised a leg up and over me and then mounted me. Her hand reached down between us and she moved me to her opening which was wet and ready and gave way to the tip as she slid it back and forth over and between her lips. She lowered her body and slid down on me just past the head, smiling all the while, then raised up and repeated. It was the sweetest smile I'd ever seen. A low grunt of satisfaction escaped from both of us as she then dropped until her butt was resting on my crotch, and she had taken in all of me. She then began a slow raising and lower of her body. Our breathing became erratic as the excitement overtook us and we tried to silence our breathing as if it would be heard downstairs in the opposite corner of the house. We both wanted this but had not lost our senses, at least not completely. My hands were caressing her thighs and I could feel the fine toned muscles of her legs tense each time she lifted herself.\n\nSis's chest heaved and her breathing came in small gasps as she reached her peak. I knew she would climax any time now. I struggled to delay the inevitable hoping to go with her. It was too much for me and suddenly I had an uncontrollable urge to thrust as the first stream of semen shot forward. I saw Sis's mouth open in an audible 'oooohhhh.' I needed one more thing for this to be perfect and I pulled Sis down to my chest and held her to me as I rolled over and she was underneath me. Then I pumped her for all I was worth until the last tiny contraction of my cock had ebbed away and then I thrust as tight against her as I could and held it. I could feel the muscles inside Sis's hot wet little pussy attempting to milk a few more drops from me.\n\nSis lay still under me with her eyes closed as we waited for our hearts to settle back down. I could feel Sis's heartne beating against my rib cage. I exhaled and inhaled deeply and deliberately for a couple of minutes to settle myself.\n\nSis pulled me down to her for one last kiss, \"Ok, I need to get some sleep,\" and then was back to a familiar Sis, \"Now, do you suppose you could not wake me jerking off. I haven't been able to sleep since Mom and Dad came home listening to you over hear.\" I assumed she was joking, not angry that is, but I guess she had heard me. If there'd been a light on she would have seen me blushing. I'm sure she was satisfied that she had 'gotten' me.\n\nShe pushed me off, placed her panties over her crotch, and kneeled down positioning her mouth near my ear, \"I love you Baby Brother,\" and walked out of my room. I watched her pretty little ass in the dim moon light as she exited the room. I was so excited that it was two hours before I calmed enough to even think about sleep.\n\nLate the next morning I woke hungry, stiff, and happy, looking forward to seeing Sis and the new day. She was waiting on me outside my door.\n\n\"About last night, it was a mistake. I'm sorry. I shouldn't have done that to you. It won't happen again.\" The happy satisfied girl I'd seen last night was gone. Apparently replaced by one regretting what we'd done last night.\n\n\"It didn't feel like a mistake to me,\" and recalling the excitement I'd felt last night, my voice raised from the almost whisper Sis had started with. I wanted her to know I was not unhappy about anything that happened, \"It was wonderful.\"\n\nA jolt of panic crossed both our faces as Mom's voice came up the stairs to interrupt us, \"What was wonderful dear?\" A couple of seconds later she was standing beside us, laundry basket in hand full of the items Sis had washed before Mom and Dad returned and not gotten back to.\n\nSis recovered first, \"Oh, Baby Brother was just telling me about sex with Carol,\" shrugging as she looked over at me, \"It's TMI.\"\n\n\"Listen to your Sister dear. It really is TMI. I guess I'm glad you enjoyed it, but none of us need to hear about it, at least not in the hallway where anyone could overhear you.\"\n\n\"Ok Mom,\" and I gave her a hug, \"Can I still get breakfast?\"\n\n\"Anything you want fix dear. Eggs and bacon are in the fridge. Our cook (that was Mom) went off the clock at 8.\"\n\nA few minutes later I was fumbling around in the kitchen opening a 3rd door looking for a skillet when Sis spoke up, \"Let me do it. You're so helpless.\" A bit of an insult, but if she was going to cook, I wasn't going to argue. It was easy to let Sis take care of me.\n\nI settled in behind her and placed a hand on her shoulder. It wasn't entirely innocent of me, but it was casual enough that Mom or Dad would not attach any significance to it. Touching had become something I looked forward to. I'm not a mind reader, but the little tremble that I felt from Sis told me she liked it too. Maybe so, but she wasn't having any of it as her shoulder shrank away from my hand as she whispered a plea, \"Please. Don't... do that. I can't.\"\n\nI know when she's serious and removed my hand as she turned to face me. I could see her nipples, which had been nothing more than the tiniest of dimples in her t-shirt, now stood up noticeably.",
        "Mom picked this moment to return with the empty laundry basket, and Sis who hadn't missed my stare looked at me with a slight flush, \"It's a bit cool. Be a sweetheart and go get me a shirt while I finish our eggs and bacon,\" and clasped her arms over her chest. She dropped her 'cover' when I was gone.\n\nMoms aren't completely blind to their surroundings, \"I guess it is cool,\" and she glanced down frowning at Sis's chest and back to meet her eyes, \"You know, much as we may want to avoid it, he's a young man now, and he notices things.\"\n\n\"Sorry Mom. I guess I still think of him as my baby brother and not a... man. I'll remember.\"\n\nIn spite of being off duty, our cook did manage to brew some coffee and we sat at the kitchen table and ate our breakfast while we talked about getting Sis ready for her return to UA. \n\nSis said she didn't need to shop. He clothes from last year were fine. This meant she was planning on a trunk full of jean shorts and plain, very plain, t-shirts with a few long pants and long sleeve shirts thrown in for cool mornings; no jewelry, no makeup, no electronics, nothing for the occasional party. This looked like a repeat of last year's pack job. I'm not sure what girls usually took to college with them, but felt certain it was not this.\n\nMom must have shared my feelings, \"Are you sure honey. I'd love to go shopping with you. We could get you few things.\"\n\n\"No. You and Dad are already doing too much,\" and that ended the conversation. She could stop a conversation with Mom just like she stopped them with me.\n\nThat night, it was me who couldn't sleep for the noises coming from across the hall. It must have been midnight, but I heard a rhythmic creaking from Sis's room. Her bed I presumed, and the part that got me; I heard what sounded like crying.\n\nI got up and crossed the hall to her door. Not wanting to wake Mom and Dad with a knock, I gently opened her door, \"Are you ok Sis?\"\n\nShe looked at me embarrassed and her hand jerked from underneath the sheet which had hidden it, but not what it was doing. I understood what was happening. But for her complaint from the night before, I might have been doing it myself. I'd done it in my bathroom earlier with the door closed to protect her, and my ego. \n\nShe stammered, \"I'm... fine. Now, leave... Just go. I'm fine.\"\n\nYou would have had to be blind to not know even in the darkened room, that she had been crying. Why would you masturbate and cry at the same time. I was on her bed side immediately holding her. She rested her head on my chest and sobbed without talking. \n\nWe must have been noisier than I thought, but a few seconds later Mom, with Dad just behind her, stood in the door, \"Is everything ok?\"\n\nSis lied, \"I guess I had a bad dream and... was crying.\" Minimalist. Sis was good at saying the fewest words possible when she was covering up. Mom and Dad could work out the rest however they liked. Interestingly enough, I who knew more, felt like I understood nothing. Mom and Dad who knew nothing at least had a satisfying explanation and were not happy with it, but satisfied.\n\nMom banished the men from the room, \"You get your sleep and I'll sit with Katherine for a while.\" She replaced me embracing Sis and sat caressing her hair, \"You're ok. I've got you.\"\n\nDad went back to bed and I sat at the top of the stairs waiting for Mom. Thirty minutes later she was staring down at me, \"She's sleeping,\" and I nodded appreciatively, \"You're a good brother, Tyler. Even your Dad has commented on how you've grown up and how close you and Katherine have become. It's good to see that. Family should be close. Now you get some sleep,\" and she walked down the steps to follow her own advice.\n\nHer kind words had brought a surge of guilt to the surface as I walked back to my bed. She wouldn't think I was such a good brother if she just knew. Sleep didn't come immediately. However, most of my sleeplessness was spent wondering what I had walked in on in Sis's bedroom. Was she ok?\n\nThe next day, Sis spent most of it holed up in her room rarely coming out. She had breakfast early and was back in her room before I got up. I called Billy and Bobby and met them at the Mall for lunch. It was better than sitting around and thinking about Sis and wondering if she was going to come out of her room. \n\nAbout five, IT happened. I had been home several hours and it was clear that Sis was avoiding me, not everyone. Just me. Only Mom, Sis and I were home. Dad was visiting a client. I came down stairs and at the entrance to the dining room, I found myself standing behind Sis. \n\nIt was an accident. I really didn't think about it and it wasn't meant to mean anything, other than just a friendly touch, a brotherly touch this time. I placed a hand on Sis's shoulder.\n\nHer body trembled and I recalled the last time and removed my hand. It was too late. She turned on me and I was shocked to see anger on her face. This was followed instantly by the flat of her palm striking my face, \"DON'T DO THAT. Why don't you just go fuck your cheerleaders and leave me the hell alone?\"\n\nI stammered out, \"I'm... I'm sorry. I didn't mean to.\"\n\nMom came out in time to see me with my hand to face. I'm not sure what I looked like, and just stood there. Sis is small so there wasn't enough force do any real harm, but it had hurt more than anything that I had ever experienced.\n\nMom gave me a pained look, \"Katherine Annabel Perry! With me. NOW!\" She entered a nearby room. Sis followed immediately.\n\nA couple of minutes later, they emerged. Sis was crying and she paused by my side as she passed, \"I'm sorry,\" and was gone.\n\nYou know how apologies between siblings go when you do something wrong and your parents' make you apologize. You do it, but everyone knows you don't mean it. This wasn't one of those. It had been short, but I could tell she meant it. \n\nI'm not sure whether Sis came out of her room or not the next two days. If she did, she was careful not to do it when I was around. She must have talked to Mom and Dad, and Saturday morning early they loaded her Corolla and she left for Tucson a day early with no company and no fanfare. \n\nThe plan had been that we would take two vehicles. She and I would be in her car and Mom and Dad would drive another. We'd go have a nice meal together and say our good byes. \n\nShe was nothing but tail lights on the street before I knew what was happening, \"Mom, is she ok? She was supposed to leave tomorrow.\"\n\nWe all shared the concern. Dad spoke up, \"She's an adult Tyler. Said she wanted to get back early and get her room set up. She'll be fine.\"\n\nIt was somber around the Perry household that weekend. I couldn't help but wonder how Sis was doing and sent her a text: 'You ok?' Several hours later I didn't have a reply.\n\nMoms always pick up on children's moods, \"She will be ok Tyler, but how are you doing? You know she didn't really mean what she did. Don't you? She loves you.\"\n\n\"I guess.\" It had to be my imagination, but my cheek still burned as if she had just slapped me.\n\n\"You'll be ok too sweetheart.\" I sighed and nodded but not with much conviction. She rubbed my back.\n\n\"Thanks Mom.\"\n\n*****Back to CHS and Counselling*****\n\nA couple of weeks later, CHS was back in session. I thought that would help me get my mind off whatever was going on with Sis. Whatever was going on, it didn't involve communicating with me. I had a string of unanswered texts, emails, and phone calls. It was irritating.\n\nMom's response, \"I'm sure it's nothing. She's probably just busy with her classes. I'll make sure she calls you.\" Apparently she was talking to everyone else. Just not me. Carol even said Becky had spoken with her. Shit! Shit. Shit. Shit.\n\nRemember I told you Dad said Mr. Anderson had sounded angry when he'd call to arrange to come over. He had been angry, but not at me. Principal Thompson had just told him that Daddy's little girl was going to have to go through counselling all of her senior year. Apparently he wasn't ready to hear that. In light of what had happened, the school now had two full time counselors on staff and their first victims (counsellees) included me and twelve cheerleaders. Regular punishment might have been better. I was on their calendar last period of the day, Tuesdays and Thursdays, until further notice. Crap!\n\nAnd I returned to the football team. Tried to anyway. There were a few of the older guys that seemed happy to see me. The rest seemed to think I was to blame for our season going down the tubes and we hadn't even played our first game. \n\nCoach was being careful and I wasn't supposed to be in full contact practice until the doctor said I was ok. That would be a couple more weeks. Apparently, the 'no contact' rule didn't get to everyone. I got hit several times, blindsided actually. \n\nThe new quarterback, who wouldn't have even be a starter, wouldn't throw to me, either not my direction or not catchable. \n\nTempers were flaring. I got angry and broke the no contact rule. The few who were on my side got angry and in general the locker room became toxic. Mostly the mood was we were going to lose and it was my fault.\n\nFinally, a topic for the counselors that I felt ok to talk about. They had tried to get me to 'open up' about how I felt about the girls. I tried to stick to short answers, one word where possible. I said things like: Ok. No. Yes. They're fine. We're fine. I'm fine. Counselors are worse than Sis had been for conversation. At least I'd wanted to please her. \n\nInitially, I'd been more cooperative with the counselors. Teresa was nice. Kind of cute. Had a good set of legs that a short skirt showed off. Bill was ok, but I never left his session having admired his legs. I think she worked it a bit as if that might make it easier for me to loosen up. She didn't go overboard or anything, but I think she thought if I enjoyed looking at a little thigh, it might distract me. It might have worked too.\n\nEarly on, they had wanted to discuss the girl that had started me down this path to destruction or wherever they thought I was. No one knew her. Mom and Dad were curious. Even Carol, Bonnie, Billy and Bobby were curious. Initially, I thought it might be safe to give them a few tidbits. Yes, I miss her. She was nice. Yes, I had sex with her. I liked her. They already knew all of this stuff.\n\nCounselors are sneaky. One minute you're not giving them anything useful, and the next they ask something dangerous like, \"Who is she?\" No way could I answer that one. \"Do you still talk to her?\" I couldn't answer that one either and I was still smarting that Sis hadn't gotten back with me and I didn't want people comparing notes. \"Are you still with her? Where's she at?\" It was that last question that caused me to shut down. I almost said, 'She had to go back to FUCKING UA.' That was when I realized maybe I'd already said too much. If I hadn't already given them too much of the puzzle, I wasn't going to give them another piece. Not one. Like computer security, I put them on a 'need to know' basis, and they didn't need to know anything.\n\nThe football team suddenly seemed like a safe topic, and I did need some advice. Actually, I already knew what I was going to do, but they could listen and 'help me figure it out.' They'd feel good for having helped me and I didn't have to worry about divulging anything. It was a win/win.\n\nI 'opened up' about all of it. How I thought I'd end up fighting if I was in the locker room a few more days. How the team needed all the help they could get to salvage the season. It put the coach in a bad spot. He'd said he would stick with me and I believed him. In the end, where I had seen the possibility of enjoying my senior season, I no longer saw that. If I stayed, morale would probably cost them a couple more games than they were already going to lose. I didn't want to do that to them. I needed to quit for the good of the team. The counselors had their first success when they helped me figure this out. I told you; a win/win.\n\nI went to the coach before practice after my counselling session and told him, \"I'm sorry, but I'm quitting. I think it's better for the team.\" Coach said he understood and was sorry it had been so rough. I cleaned out my locker before practice. A couple of guys stopped by in the lunchroom the next day to see how I was doing. I got a few 'quitter' cracks from the rest of the team. Carol and the girls were hurt. Bobby and Billy were philosophical about it but not happy with a lot of the guys. I'd been worried about telling Dad so I told Mom first and she helped me with Dad. He was more understanding than I expected and they both already knew how the locker room was going. He'd played football in high school and thought it was a valuable experience. He took it well.\n\nI tried calling Sis. It quit ringing on the third ring. Normally it rings a lot if you don't answer. The call didn't roll over to voicemail. She had DECLINED the call! Bullshit! She wasn't going to get back to me. Attempts every other day dwindled to once a week with a few texts or emails when I really wanted to know what was going on. I apologized. Practically begged. No answer. None of the other crap meant anything to me, but this was killing me.\n\nWe lost the first football game of the season to a patsy we should have beaten handily. Dads truck was keyed in the school parking lot the following Monday. It ruined the paint and ended up spending a month at the Ford body shop. I apologized to Dad. He was pissed about the truck but refused to allow me to accept any blame though I did feel it. He loved that truck.\n\nA few days later, he took me to a used car dealership and we bought a POS, short for Piece of Shit. It was actually a 2005 Camry that Dad said had been in a rollover and gotten a cheap paint job. That explained why so much of the paint was coming off the hood, roof and trunk lid. He said it was mechanically in good shape and based on its appearance, I wouldn't have to worry about it being keyed. He had that right. It was truly a POS. Dads a practical guy and he did spend for one extra; a set of run flat tires. I think they cost twice as much as the car, but he reasoned that if they let the air out of them, I'd still get home. He promised to get me a decent one when I started ASU next fall. Dad really is a good guy.\n\nThe truck was a safe topic for the counselors. It was nice to have something to talk about. Otherwise the silence could get awkward. I think Teresa's skirt got an inch shorter. I was definitely going to hold out now.\n\nCarol finally implemented her plan to 'get even with me' for the blindfold thing. It could have been a lot worse. Her sense of humor must be a bit like Sis's. You could call it a mean streak but I choose not to in both cases. You just have to be able to handle it.\n\nShe explained, \"I'm house sitting for an old couple. He just retired early at age 50 or something and they're going on a yearlong vacation. Are you up for a little fun? We'd like to try make up for the last three years. It would mean a lot to us if you'd let us.\" \n\nShe was definitely buttering me up for something, but I couldn't believe it would be anything bad from these girls. They'd turned out to be nice after we got to know each other. \n\nMost days I had lunch with some of the girls. Table pairings had definitely gotten strange; Billy, Bobby and I surrounded by girls. Cheerleaders even. Had it not been for the rift with Sis, things would have been great.\n\nCarol told me we'd need a cover story for our parents and the Counselors. She'd picked up on the fact that they might be worse than parents when it came prying into other people's business. \n\nIn her next session with Bill, she casually mentioned, \"Some of us have been thinking about getting together, maybe one night a week to go over what you and Teresa have been telling us.\" She intentionally revealed this to Bill. She could wear a short skirt as well as Teresa. \"So what do you think about us kids maybe getting together for a while at one of our houses? Kind of like a group therapy thing and we could rotate it around so no one family has too much bother. And we'd always have parents nearby. And we could discuss it in our next session if anything interesting comes up, and if there's nothing to talk about, we can just study.\" Bill liked the idea. I probably would have liked it too if I'd been sitting there with Carol selling it to me in the skirt she wore that day.\n\nCarol's plan called for keeping parents in the dark about our comings and goings. A different house each week. Different kids each week. We actually worked out a schedule; who would attend each; a few early or late arrivals. All to make sure the routine was anything but routine. The only regular thing about the plan was that it would be Wednesday's every week. \n\nCarol gave me the address to the house she was sitting and I made sure I knew exactly where it was at. For the first one, she said she would meet me there and let me know how things would go. The two of us would miss the first session. As it turned out a couple of other girls would miss too. Schedules for seniors in high school can be pretty unpredictable. The first meeting of our little group therapy session was at one of the other girl's houses. It wouldn't look right for Carol to miss the first meeting, especially if it was at her house or Bonnie's. Their turn would come.\n\nCarol and I arrived a little early and she explained what my duties were. They weren't complicated. She led to a guest bedroom, and there was the blindfold and an iPod. Carol explained, \"You know the drill,\" and she grinned at me, \"I told you I'd get even with you. And fresh sheets will be in the bathroom. Be sure to arrive early enough to put those out. No girl wants to do it on a dirty sheet!\" Together we prepped the bed. \"It will be your job to clean up when you're finished,\" and she turned serious, \"Be sure to have the blindfold on at the appointed time. Absolutely no peaking. Remember, none of these girls really know you, so they may be a little shy and not want to do it alone. So it'll mostly be 3-ways. I assume you're ok with that,\" and without giving me a chance to respond she grinned, \"I thought you would be.\"\n\nIt was now five minutes until my first 'appointment.' Carol put my blindfold on me. Made sure my earbuds were in place and the volume was correct, and then led me by the hand over to the bed, \"I'm leaving,\" and she snickered as she said, \"You need to be naked on top of the sheets when they arrive.\"\n\n\"You're evil Carol,\" and as I heard the bedroom door click, I knew Carol was gone. It's embarrassing getting undressed while blindfolded and getting ready for an unknown visitor, or visitors, but I did it. Couldn't let the girls down. You understand.\n\nIt was then that I heard Carol, \"You look perfect. Nice dick!\" She hadn't left after all and I shouldn't have had my fingers wrapped around my dick.\n\nAs I released myself, \"You really are evil!\"\n\nI could hear her laughing as she exited the bedroom leaving the door open this time and I heard the front door open and close behind her. The next five minutes were really strange as I lay there naked waiting and not knowing who was going to show up. Lots of things ran through my mind. What if the owners came back? I couldn't explain this. What if the police show up? That would be a disaster. The possibilities were endless. And then there was the possibility Carol had promised. I could do this.\n\nThe doorbell rang and I fought two urges: answer it or get dressed. I was nervous and excited as hell. I wanted to get under the sheets, but Carol had been specific. Under the sheets would have been easier, particularly since I had a raging hard-on bouncing around like a jack-in-the-box. I tried to steady myself. Complete waste of time.\n\nThen I heard giggling. It was giggles from two girls, \"Looks like he's ready for us,\" as fingers wrapped around my shaft. Then a hand grabbed my sack and worked the balls. The hand clutching me began to stroke. I tried to be cool about it, but I moaned. There was more giggling. ",
        "\"Carol said you might like a bit of this,\" and the bed shook a little and the next thing I knew, a warm moist mouth was wrapped around the head of my penis. \"Do you like it?\" Then there were hands rubbing my chest and moving about. There were hands everywhere. I was getting felt up shamelessly by both girls. \n\nIt's amazing how aggressive girls can be when they know you will ever know who they are.\n\n\"You need to take it easy,\" and I groaned, \"with that mouth. I can't handle much of that. If... if... you girls like, I could do you too.\" I groaned as they continued. There was a pause and I think they switched off with the oral. Both of these girls knew what they were doing. It was a bit of downer as I realized why they were so proficient and thought of the assholes I'd fought with forcing them to do this.\n\nI shrank as I thought about it, \"Are you ok? You suddenly don't seem to be in the mood.\" \n\nApologies burst forth, \"I'm sorry. I should have said this first thing. You don't have to do this. You girls don't owe me anything. I mean... I could understand if you didn't want to.\"\n\n\"Carol said you were a sweetheart. If you're serious, I'd like... to have some oral.\"\n\nFrom somewhere else nearby, \"Me too.\"\n\n\"Well, it's one at a time, but if you don't mind, if one of you could get... next to my face,\" and I paused as my next request might be too much, \"I'd really like to make love to both of you. Is that ok?\" \n\n\"That's why we're here,\" and I felt the other girl straddle me and guide me to where she wanted me. She was wet. If Sis was right, and she always had been, that meant she was definitely ready. I felt her lower her weight on me and in an instant, she had all of me. I heard a satisfied \"mmmm,\" and my cowgirl began to ride. \n\nThe girl who positioned herself near my face opened her legs. I really, really wished I could take off the blind fold. I could smell a nice aroma. It wasn't too strong. Not like any I had experienced, which admittedly was limited. The girl beckoned me, \"Just rest your head on my thigh and start when you're ready,\" she giggled, \"This is going to be fun!\"\n\nIt took a few seconds to collect enough of my senses to begin delivering my part of the bargain to the girl whose legs my head was between. I stuck out my tongue and almost missed. If I could have seen, I would have gone right down the middle. Instead, I ended up just grazing the sensitive stuff; off to the side just a little. Nevertheless, from the shriek she let out you would have thought I had just taken her entire clit in my mouth. A slight adjustment and I gave her an open mouthed suck and then munched down on her. This was followed by a long drag on her clit which I stretched as far as I dared not wanting to hurt her. It didn't seem to be a serious concern. She shrieked again and began moving her hips like the girl who was riding me.\n\nThe girl that I was pleasuring with my mouth suddenly went rigid and let out an extended grunt as her legs clamped down on my head. With her legs locked, she bucked several times against my face and then as suddenly as it began, she released. I drew in a deep breath. \"Sorry. I didn't mean to smother you. It's... been a long time since I... received.\" She sounded wistful.\n\nThe other girl hadn't stopped and my balls were tightening, \"Unless you want... everything, you've got to stop.\"\n\n\"Oh no. I want it all,\" which is what she got. I'm familiar with the point of no return and reached it just as she finished telling me she wanted it. Good thing she wanted it. I pumped five or six times and felt and heard her climax start when I was almost finished. With her fingers digging into my sides, she squirmed her hips several more times and I ran hands up her thighs and to her abs as she worked me. She had some serious abs under a little padding. I'd have to pay more attention to our cheerleaders. Maybe I'd see these abs again.\n\nThe girls were ready to switch and I suggested, \"You may want to get some hot wash clothes. Si...\" I had almost said 'Sis likes a hot washcloth after.' That was almost a serious mistake, \"I hear some girls like a warm washcloth after.\"\n\nThe bed shook a little and I think I was alone there, \"Do you want us to bring one for you?\"\n\n\"I guess.\" I didn't really care as I didn't mind mixing their creams. I heard the water run and a couple of minutes later the bed was disturbed as the girls positioned themselves. I was prepared this time and slid my face up close enough to be tickled by a fuzzy little patch. She let out a little moan as I disturbed her bush. The one getting ready to ride me wrapped me in a hot washcloth. I tried to control a grunt.\n\n\"Sorry,\" and she continued scrubbing me. With a few seconds of up and down agitating, I was both clean and erect. The cloth came off and I felt a knee on the bed beside me and then a little bobble, and I was mounted, again! \n\nI had my senses this time and was able to get to business on the girl whose pussy was in my mouth and still had enough of my faculties to try imagine who I was making love to. I kept both hands busy, one on a thigh of each girl. \n\nIf you are having sex, it has to be with someone. At least I need to think of someone. I couldn't just stare into the blackness of the blindfold without trying to make it someone. I cycled through all of the cheerleaders in my mind to see if these girls felt like one I was envisioning. I went through all of them. It was frustrating not to have 'someone' to be making love to. I tried to lock onto Carol, then Bonnie even though I was certain it was neither of them. I was certain I would have recognized Bonnie. She had a great pair of breasts. These were ok but not Bonnie. Neither did they 'feel' like Carol. I had to settle on someone. Even with the blindfold on, I closed my eyes to see who would come to me. I hadn't expected it, but Sis came to me. I knew it wasn't her, but once she was in my mind, she wouldn't leave. I worked harder. \n\nThe girl I was eating out came first. Her body spasmed. It was a different feel than the other girl had been and she was quieter. Still very satisfying to drive her over the edge with my mouth. When she finished, she said, \"Sorry. You already had me aroused. I just... couldn't stop myself.\"\n\nI told her, \"You were great.\" Was it appropriate to tell a girl she had a nice pussy? I decided against being that bold and left it at, \"Anytime you want eaten out, just call.\"\n\nShe giggled, \"I just might do that.\"\n\nHaving just climaxed recently, things were taking their time building up, but not my cowgirl. She was moaning loudly. For me, my ego helps out when a girl lets me know I'm doing a good job. This girl was saying it loud and clear. She kept riding after her orgasm and in a moment I was squirting too. I was sweating and breathing heavily.\n\nThe three of us lay in bed a few minutes calming back down and I had to say a few more words, \"Two things. One, you two are amazing, and two, I know you two said you weren't here for guilty consciences and I really want that to be true. Tell the other girls that if they have any doubts, don't come. I'll never know who it is anyway and I really don't think any of you owe me anything. We were all even when you apologized. You guys give good apology.\" This produced laughter and a couple of kisses on the lips. \n\nWhen the formalities were done, the two girls stopped and began examining the remnants of the fight. Fingers gently traced areas of my chest. Then one gently pushed indicating they wanted to see my back. I could hear sympathetic murmurs, \"Is this where they kicked you?\"\n\n\"I guess. It's pretty much all healed. Not much left. Don't worry. They don't hurt.\"\n\nThen some different murmurs and they began tracing lines down my back, \"They didn't do this. This was that girl whose,\" and her voice lowered like she might embarrass me, \"Whose panties you wore in the locker room. Are these going to heal?\"\n\n\"Not sure. The doctor said I might have them for a long time.\"\n\nImpressed, one of the girls said, \"You must have really done some stuff to her for her to do that!\" Then a question, \"Was it Carol?\" \n\n\"No. Not Carol,\" came out as a sigh.\n\n\"Mmmm. Whoever she is, you like her don't you?\"\n\nAs I've said, I'm not good at keeping my feeling from showing. It shows in my voice and may face, even with a blindfold on, \"Yes. I did. But I don't want to talk about her.\"\n\nFeeling they had gotten into a private area, I heard a pair of 'sorrys.'\n\nAs if looking at a watch, \"Oh. We've got to go. You wait ten minutes before leaving this room. Carol says that's a rule and you need to put the sheets and stuff in the tub.\"\n\n\"Ok. Good night ladies.\" They giggled.\n\nWhen I heard the front door close, I got up and gathered up the sheet and the stray washcloths we had used. All were placed in a pile in the tub. \n\nIt had been a good night. I had eaten out two girls, they had reciprocated, and I'd made love to them for real, and made love to a third in my mind. Damn, I wish she'd call me.\n\nMom was in the kitchen having a cup of coffee in her night gown. I'm sure she was waiting up for me, \"How did the therapy session go?\"\n\n\"Ok I guess. I'm still finding out how bad those girls were treated. I'm really starting to hate those guys.\"\n\nShe laid a hand on mine and gave me a comforting squeeze, \"Hate is a strong word, but I understand. I have a daughter of my own and I'm none too happy about what they did to you either,\" and she gave me deep gaze straight into my eyes, \"You're a good person Tyler. Now, if you don't mind, I'm up past my bedtime.\"\n\nA few minutes later I was in bed and wrote a short text to Sis: 'you ok down there?' I had just about given up on getting an answer, but I couldn't stop.\n\nThe night had worn me out and I dozed off while jerking off to Sis without finishing. If Mom came in, she found me on top of the sheets with my fingers wrapped around myself. God, I hope she hadn't come in.\n\nCarol was waiting by my locker when I arrived. She was grinning at me, \"So, how did it go?\"\n\nI guess I had gotten in the habit of short answers to personal questions dealing with the counselors, \"Ok.\"\n\n\"Ok? Ok? Is that all you can say. I know two young ladies who will be hurt to hear that.\"\n\n\"Alright. It went better than ok. It was actually great. There. You satisfied?\"\n\nShe punched me on the shoulder with a bony knuckle. I flinched, \"Ow. That hurt.\"\n\nHer face grew serious, \"Oh. I know you can handle a little pain, actually a lot of pain. My little punch isn't going to hurt you. The girls were... satisfied.\"\n\n\"So I say they're great and all you have for me is... satisfied.\"\n\n\"I don't want it to go to your head. Besides, it was like pulling teeth with you. On the positive side, if any of the girls had doubts, they won't after they talk to...\" and she paused. I think she was on the brink of giving me names, but caught herself. \"The girls from last night.\" \n\nTime for a question from last night that kept niggling at me, \"I was thinking about it last night. You need to tell me what it was like for you and the girls... during the last three years. The girls last night... it didn't seem like it was very good\"\n\n\"Hmmm, Ok. Some time.\" It wasn't a commitment but I wanted to know and wouldn't let it drop.\n\n\"One last thing. If anyone doesn't want to, I'm ok with that. You don't owe me anything. Make sure they know that. Please.\" \n\n\"Hmmm, your sweet, but they already know.\" Then it was time for class. She hugged me and we went our separate ways.\n\nFriday night I wrote a short text to Sis. I thought I'd try small talk: 'hows school going? schools started here but I guess you know that . its Friday night but nothing going on. feels strange this year without football. all of us are getting counselled. It's a big pita.' \n\nOur football team lost its second game to open the season 0-2. Ours was a team that had visions of going undefeated before the season. I guess we'd see how Dads strategy with the car worked.\n\nSunday night came and I knew that my last text was not getting any more response than the others. It was depressing and but for the fact that Mom apparently was speaking with her weekly, I would have really been worried. Now I was just pissed.\n\nCuriosity got the best of me, \"Mom. Is... Sis ok?\" I didn't want to sound as bad as I felt.\n\nShe gave me a sympathetic look, \"She still hasn't called you? She said she would. What is going on with you two?\"\n\nThe only thing I could say was, \"I don't know Mom.\" It was the truth. I didn't know what was going on with Sis, but said nothing about what might be going on. What was I going to say? 'Golly Mom. Do you think it had something to do with us having sex for two weeks while you and Dad were sailing?' Couldn't say that. There was only one person I could talk to about it and she wasn't answering.\n\nClearly unhappy, I turned to leave. Behind me, \"I'll talk to her.\"\n\nSunday night I got a call from Carol, \"Was last week ok with you?\" \n\nI knew what she talking about. I suppose she was calling from home and didn't want to say something too specific. \"It was good, but I'd really like to do this without the blindfold. If we could.\" I didn't expect any help here and that's what I got.\n\n\"No. Sorry but it's easier for them this way. They're all wanting to avoid any... complications. Besides, what have you got to complain about? You'll get to... MEET all of the cheerleaders.\"\n\n\"Do you know what it's like to have sex with someone and not have any idea who it is? You know it has to be someone, so in your mind you just keep going over the possibilities. It's not nearly as satisfying as you'd think.\"\n\n\"Was I one of the possibilities?\" she asked expectantly.\n\n\"Yessss,\" I hissed, \"You were but it wasn't you. Or Bonnie. I'm sure I would have known.\"\n\n\"So did you settle on someone?\"\n\nI had, but that info was not for Carol, \"No. I finally gave up.\" \n\n\"Is it so bad? We could stop if it's causing you... problems.\" \n\nIn my current situation, this was the only thing that provided a decent distraction, \"No. I'm fine. Every horny teenage boy in America would kill for this. I'm great.\" I'm sure I wasn't very convincing.\n\nCarol laughed, \"Well. Got to go. See you at school.\"\n\nI drove the POS to school Monday. We'd picked it up over the weekend with the special tires. I tried to park it in a spot I didn't usually use, not where I would have parked the truck. It didn't work. \n\nAt the end of the day, I approached the car from behind. It looked ok until I got to the driver's door. The windshield had something on it. A couple of minutes of inspection revealed that it was a milk shake, probably chocolate. The Arizona sun had baked it to a nearly impenetrable opaque layer. I had to go fill water bottles twice and ended up using my Albertson's card (no one has an ice scraper in Phoenix) to scrape the sticky substance off the windshield enough to allow me to drive home.\n\nMom was upset when I called to tell her why I was running late. When I got home Dad came out with a bucket of water and some soap. He let me do it, \"Gee thanks Dad.\"\n\n\"Well, at least they didn't do anything,\" and he chuckled, \"to the paint,\" and he laughed again. It made me mad at first, but I looked at the paint and we both laughed.\n\nThe next day at my counselling session with Teresa, \"I heard you had... car problems. Everything ok?\"\n\n\"They just gunked up the windshield. Took a few minutes to clean it enough to drive home.\"\n\n\"Glad it wasn't worse.\"\n\nIt would be easy to fall into this casual conversation mode and the next thing I knew she'd be asking something serious.\n\nTeresa was getting ready to try apply a little more pressure to hack my security. Her skirt was a little shorter than last week. Still within the socially acceptable range. A number of girls in school probably had them shorter, but not many.\n\nIt was time for me to try a more active defense. I'd hit on an idea on the drive to school this morning. \n\nI looked her over trying to look discrete. If my the time with Sis had taught me anything, girls like to feel attractive. Like their efforts are appreciated and compliments can go a long ways. I didn't want to be blatant. My inexperience was actually a benefit here. It was easy to look embarrassed. I did blush when I stared at her legs a second too long on purpose. \n\nTime to put the plan in action, \"Sorry. Didn't mean to stare. It's just that you seem to be in pretty good shape. Do you run? It looks it.\" I tried to sound as disappointed with myself as possible, \"I've not been able to exercise much lately,\" and I paused a few seconds for her to consider it and me, \"with everything that's gone on. You can really go soft in no time. Even my arms are losing tone.\" I leaned a shoulder toward her, \"Can you see it?\"\n\nEmpathy is built into counsellor's genes, \"No. You look fine,\" and she took the bait. She reached over and tentatively felt my biceps. They may not be the greatest, but I had worked out. I made a muscle and she responded, \"No. It seems fine.\" She blushed a little. On to the next step.\n\n\"Actually, it's my legs that I'm most concerned with. I haven't run in weeks! I bet you run daily. Don't you?\" and I played it as straight as possible. \n\nShe nodded and smiled, I'd seen this reaction from Sis. She was pleased with herself and with me for having noticed something. And it was harmless, really. She was still on her plan that said finding anything, no matter how far from the business at hand, that kept me talking could lead to something worthwhile, if I lowered my guard.\n\nI reached for her hand and placed it on my mid-thigh. It caught her by surprise. \"I'm turning to fat. Feel it.\" I had enough concern in my voice that I'm sure she wanted to make me feel better. That is what counsellors are supposed to do. \n\nShe gave it a small tentative squeeze, \"No. You're fine,\" and without being too obvious, pulled her hand away.\n\n\"No! I'm sure yours are better,\" and as I said this I maneuvered my chair closer and took her ankle and pulled her nearest leg up over my knee. She was shocked but trying to remain cool, \"Yours are way better. You lift weights some don't you Teresa? Let's see you do a leg extension. I'll be the weight.\" Without grasping her ankle, I closed my fist to make it look safe and put it against her ankle. Blatant touching would ruin this. It had to look innocent. I applied a little pressure with my wrist, \"There. Do an extension.\" \n\nShe was caught. If she did anything but continue, it would look like she thought I was a pervert or worse that WE were doing something wrong, and that wouldn't help our communications. I had been careful to make it look like it was just two athletes comparing their results. She did an extension.\n\nI openly admired. \"Nice! Yours really are better.\" She did have nice legs, and with this short skirt and her leg up, I could see all the way to a set of white panties. That wasn't actually part of the plan. Her thigh bulged a bit. I could see the muscles straining against the pressure of my wrist on her ankle. \n\nI moved to the next step, and took my free hand and grasp her about mid-thigh, right at the hemline and squeezed the muscle, \"Keep it tensed,\" and I glanced at her thigh. I used my fingers and probed the muscles a little. I heard a small catch in her breath. We were there. \"You have beautiful... muscles.\" \n\nIt wasn't difficult to look embarrassed. I could feel the heat in my ears. Something below the belt had swollen. Awkward but still part of the plan. I jumped up, apologizing all the way, and I looked down at myself. I hadn't found it necessary to leave my shirt tail out since Sis left. I knew she wouldn't be able to avoid moving her eyes to see what I was looking at. You can't avoid it. If someone looks at something like its important, you have to look too. If she'd had time to think, she wouldn't have followed my eyes because she would have known what she would have found, but she didn't have time to think.",
        "She was now standing, her skirt still hiked a couple of inches higher than intended. We were both blushing bright red. She was having trouble breathing regularly as she bent to pull her skirt back to its normal level. \"I think... we're done for today,\" and she glanced down just for a second. It was still there. Once aroused, this thing of mine is persistent. \"You should probably... untuck your shirt.\" I nodded and did it immediately, and she released me, \"You can go now.\"\n\nI made straight for the door but made sure I was untucked before going past any teachers that might be in the lounge area. I didn't want to get her in any trouble. She was just trying to help someone who wasn't looking for help.\n\nPrincipal Thompson did notice that my session had ended at the halfway mark, \"Is everything ok Tyler?\" \n\nI couldn't call her Teresa. What was her last name? Waddel. Teresa's name was Waddel, \"Ms. Waddel looked a little flushed. She may be coming down with something,\" and I was out the door before she could ask anything else.\n\nI was pleased with my little plan. I wasn't sure what it would buy me, but maybe a little less pressure. I'd almost made a terrible mistake once. I couldn't take chances.\n\nNext session, I saw the most obvious result of my plan. Teresa was in slacks, very conservative slacks to the ankles. I guess it had been a success but I would miss her legs. They had been the only thing I had looked forward to in our sessions.\n\n\"Tyler. Sorry about our last session.\"\n\n\"No. It was my fault,\" and here was a situation where the truth worked as well as a lie. She didn't believe me. She blamed herself for letting things get out of hand. \n\nHer tactics changed as much as her clothes, \"Bill and I have compared notes about you. It seems you're the only person we haven't gotten anything out of. Oh, we've learned quite a lot about you... indirectly. But there is one area that everyone seems to be in the dark about. As soon as we can clear that up, you're free to go. No more counseling.\"\n\nKeep calm I told myself, \"How can I help you?\" No reason not to sound cooperative.\n\nShe chuckled, \"Oh, we've heard that one before.\"\n\n\"No. Really. What do you need help with?\" No reason to start resisting yet. I was going to get there soon enough.\n\nShe fiddled with her computer which was unusual for her, \"Ordinarily, I wouldn't show material like this to someone your age, but since you've already seen it, why not?\" She hit one more button and up on the screen came photos I never wanted anyone to see again.\n\nThere were the shots from the locker room, me in the panties, the scratches on my back, and Sis's breasts. I shut my eyes. \"You're playing dirty.\"\n\n\"You haven't given me any other way to go. I can see these mean something to you. It's interesting that no one knows who the girl attached to these breasts is. That includes all of the cheerleaders which seems to be all of the girls you know at Chandler High. So I'm assuming she's not one of the cheerleaders. I've spoken to your parents. They're in the dark. For that matter your two sidekicks don't seem to know either.\"\n\n\"You talked to Bobby and Billy? You have no right. I liked you better when you were trying get me to talk with the short skirt. Counselling is over.\" She blushed as it dawned on what that comment meant. I closed my mouth and made a promise to myself that I wouldn't talk to her again. She'd gone to a place I couldn't take a chance and risk talking about. I tapped my phone a few times.\n\n\"What are you doing?\" I didn't answer. She tried to re-establish a conversation, but I just sat there as if my mouth had been sewn shut.\n\nForty minutes later, my phone alarm went off. I held it up so she could see. She knew what it meant, and I walked out. Session was over. \n\nI was steaming when I left. I went straight to my car. I left my backpack and my textbooks. I didn't even know if I had anything due tomorrow.\n\nI went straight to my room. Mom had to come to my room to let me know that supper was ready. I was still angry.\n\nIn typical Mom fashion, \"Tyler, are you ok? Did something happen today?\"\n\n\"You could say that. I found out that Ms. Waddel has been talking to you behind my back. She also interrogated Billy and Bobby!\"\n\n\"Bobby and Billy?\" I nodded. \"Well, we're all worried about you. You're keeping a secret from us. We haven't pressed, but you know what I'm talking about... The girl that got you into all of this. Who is she? Can we at least know who she is? Are you still... seeing her? We're not sure she's good for you.\"\n\n\"So you don't think Carol is the one that got me into all of this any longer? You can quit worrying about 'the girl.' It was just a short... thing. It's over now. I'll never see her again. You can all stop worrying. And Mom, get me out of counselling!\"\n\nMom called the school the next day and I was out of counselling. That was a big relief.\n\nMy relief lasted all of about eight hours. Teresa appeared at our door just after I got home from school wanting to speak to Mom and Dad. Dad hadn't made it home so she had to settle for Mom.\n\nI had answered the door and pretended to go upstairs. I know it's tacky of me, but I gave them enough time to get settled in Dads office and positioned myself out of sight by the door and listened in shamelessly. \n\nTeresa led off with an apology, \"I'm sorry Mrs. Perry, but I'm afraid I let Tyler down. I made a mistake handling him. I shouldn't have gone to his friends, but I did. Now he feels it was a breach of trust, but he hasn't given us ANYTHING to work with. All I know is what the girls have told me and what I've seen on Tumblr. He's great at creating diversions. But he just won't open up and... he's got a secret and I'm afraid it's an important one. From what I can tell, no one knows the girl that started all of this. He seems to have completely resolved any issues he had with the other girls. At least that's good.\"\n\nTeresa continued, \"As far as I can tell, the only animosity her harbors toward anyone is directed at the boys from the fight... and me.\"\n\nMom's anger rose at Teresa's last comments, \"Dave and I are feeling more than a little animosity at those boys too!\"\n\nThe two of them spoke a few more minutes and Teresa got to the subject which had brought her here, \"Bill and I have talked a lot about Tyler. Except for that one thing, we'd be happy releasing him.\"\n\nMom knew where she was going. I did too, \"You're wondering about the.... locker room. What kind of girl sends an innocent young man like our son into a locker room wearing girl's panties... and those scratches on his back!\"\n\nTeresa took it from there, \"So he hasn't told you anything about her either?\"\n\nBarely audible, Mom answered, \"No. Hardly a word.\" \n\nTeresa continued, \"It's surprising that no one knows anything about her and that's what worries me. Secrets can chip away at you. Pressure to protect someone. Fear that you'll let them down or be found out, and no small amount of guilt at lying to you and your husband. He needs someone to talk to and I'm sorry, but that doesn't appear to be me anymore. They didn't prepare me for this kind of failure in school. I guess you just have to learn it the hard way.\"\n\nThe conversation ended and I barely got out of sight before Teresa left.\n\nMom came upstairs and stuck her head in my door, \"Did you hear everything you wanted?\" She was just letting me know that I hadn't fooled her.\n\n\"Enough to know I probably owe her an apology.\"\n\nI had been happy to be out of counselling but with Teresa's visit not only did I feel bad about what I'd done, but I was also worried about my... 'secret.' She was right about one thing. It was already causing me issues. I wasn't sleeping very well and I wasn't very happy.\n\nThe next day at lunch, I saw Teresa sitting alone and decided it would be a good time to apologize. \"Is it ok if I sit down?\" Maybe she wouldn't want me anywhere around.\n\nShe surprised me and smiled, \"Sure. Is this just a social visit? I'm not your counselor anymore.\"\n\nI sat in the chair directly across from her. I'm awkward with apologies but I began, \"I heard what you told Mom yesterday. Thank you and I also owe you an apology.\"\n\nShe looked puzzled, \"What for? Obviously you didn't tell her what I did. That would have cost me my job and maybe my career. It was a mistake. I'm the one who owes you an apology.\"\n\nShe seemed determined to be nice, \"No. I really shouldn't have done what I did to you in your office. I was angry that you had gone to Billy and Bobby, and it felt like the only way to get you to stop asking questions.\"\n\n\"Well, that is what a counsellor does. Asks questions. Pry into your inner most thoughts. And give advice,\" Teresa explained, \"It's a hazard of the job. Makes us real nosy.\" \n\nI couldn't help but grin at her explanation. It seemed pretty much on target.\n\nCarol and a couple of cheerleaders walked up carrying trays, \"You two seem to be having a good time. Can we join or is this a... private party?\" Carol said insinuating that something might be going on, smiling all the while.\n\nTeresa gave her a look that said the teasing wasn't going to work, \"The more the merrier,\" and suddenly there were four of us seated talking to Teresa.\n\nNo longer in her office, Teresa dropped the air of a counsellor and we just... shot the bull. How's practice? How's the football team doing? This one drew all of the girls to my defense. It felt good. The closest she got to a counselling question was, \"Are you girls doing ok?\" I couldn't hold that one against her. I had wondered about that myself.\n\nLater, Carol caught up with me to make sure I knew tonight's routine. It was easy. After we finished, I was to give the girls a few minutes so they could get back to the meeting ahead of me, and then I was to come. That way, I wouldn't know who I had been with. And of course there was the damned blindfold. \n\nA couple of hours later I was on my way to the house and shortly I had fresh sheets laid out just as before. Then I was naked with the blindfold on, earbuds in listening to AC/DC. I guess Carol figured they would be loud enough to prevent me from recognizing anyone's voice.\n\nThe girls that showed up tonight were different than the ones from last week. The three of us kissed. I used my hands a lot and so did they. They both appreciated my efforts but I had to stop them from administering to me for fear that there wouldn't be anything left when we got to the real thing. \n\nIt seems that all of the girls were very into getting eaten out, \"Our friends say you are very good with your mouth. Could you... show us?\"\n\n\"Haven't any of you girls ever had that before?\"\n\n\"I think Carol and Bonnie were first, at least in a long time.\"\n\n\"You're not kidding are you?\"\n\nThen I hear, \"He can't see you shaking your head,\" followed by giggles. \n\n\"Sorry. Forgot the blindfold. No. I think they got off on... the control, and not doing for us. They just wanted... serviced.\"\n\n\"Jesus. Are any of you planning on taking these guys to court? I know a lawyer.\"\n\n\"We don't want to talk about this.\" I could see that it might be an embarrassing topic and that conversation died. \"Show us what you gave Carol. She said we wouldn't regret it.\" \n\nA few seconds later I was on my knees at the end of the bed with the two girls sitting, legs spread wide, just beginning to taste one of them. I heard a long exhalation of breath, \"Oh my God!\" as she began to squirm.\n\nOne of them ask, \"Do you need anything? I'm just sitting here.\"\n\nI paused, \"Some touching would be nice. If it's ok.\" \n\nThe bed bounced a little and a moment later I felt fingers wrap around my member. Soon I was being jerked. She was pretty good at it, and soon I had to stop her to keep from making a mess in her hand. In the meantime the first girl was beginning to arch her back frantically on the bed, \"Unhh, unnnhh. Just a... little more.\" \n\nIt occurred to me that I might need some recovery time, \"If we're going to have sex, maybe I should do one of you. That way I can recover while I'm eating the... other one of you.\" The blindfold made conversations strange. \n\nA moment later, one of the girls was holding my hand and steering me down onto the bed where the other girl was waiting, legs spread. I felt a hand on me and soon the tip of my erection was being slid back and forth between a wet pair of lips and then a little encouragement, \"Go ahead,\" and I pushed forward. \n\nI heard a satisfied groan as half of my length slid between her lips and I felt her hips rise slightly to meet me. I retreated until just the tip was still in and with the second thrust she had all of me. As I began pumping continuously, I could hear a catch in her breath each time I buried myself. \n\nJust as I had last week, I tried to envision the girl who was receiving me. Before I was ready to cum, just like last week, I found myself making love to Sis, not Carol or Bonnie. I had even tried Teresa, but no luck. By the time I finished, Sis had gotten a pounding and it felt good.\n\nThe second round went pretty much like the first. I got a chance to taste the second girl's pussy. I guess it could have just been the first one back for seconds. I do enjoy eating a girl's pussy. I think it has to do with how they react. Maybe it's all my ego just getting off on getting them off. Still, I love sucking, licking, and tasting a girl's pussy as she gets excited and climaxes. It's great.\n\nWhen the girls left, I laid on the bed a few minutes and thought about what it meant that Sis was the one I envisioned having sex with and running my hands over and eating. Sis really likes being eaten out. It was sad to think that I'd never get a chance to do that again. If she didn't answer her damned phone, I might not even get to talk to her. I guess she'd have to talk to me at Christmas break. \n\nBy the time I got to the 'group therapy' session, I was feeling depressed. As I walked in, Carol picked up on it immediately, \"You don't look happy. Didn't it go ok?\"\n\nI put on a smile. Not sure how successful that was, but it was a smile, \"No. They were great. It's just me.\" I ended up at the kitchen table surrounded by several concerned girls as I tried to convince them that I was, \"Really fine.\"\n\nAs I sipped a coke and worked on a slice of pizza, Carol suggested, \"I know something went wrong with your sessions, but you could go talk to Teresa. She really is ok. We all like her.\" Heads nodded around the table.\n\nSometime after midnight, I was having trouble sleeping and found myself jerking off thinking of Sis. I added a text to the growing list of unanswered texts, 'i'm still here. call me anytime.' But I knew she wouldn't. I had to keep reminding myself that she was talking to Mom, so she was ok. Nothing had happened to her, other than maybe deciding she couldn't stand her brother.\n\nAs I headed out the door after breakfast, \"I'm going to talk to Teresa again.\"\n\nMom flashed a relieved smile, \"I'm glad. Lately, you've look like you need to talk to someone.\"\n\nThe next day I walked by Teresa's office at what had been our appointed time. The door was open and she smiled as I peeked in, \"Carol said you might stop by. Come on in. What can I do for you Tyler?\"\n\n\"Not sure what I want to say,\" and that was true. I really wanted advice but there was no way to ask what I needed to know, and I froze.\n\nMaybe it was obvious, at least in a general way what I was having problems with, \"Is this about the girl with the red panties and nice breast?\" She'd seen all of the crap on the internet along with the rest of Chandler High.\n\nSuddenly it came back to me why I had hated counselling in the first place. Her specialty was getting people to talk and much as I needed to talk, I couldn't. I took a deep breath and apologized, \"I'm sorry I'm wasting your time, but I can't do this.\" I sat looking at something and nothing on top of her desk. \n\nTeresa came around the desk and rested her hand on my shoulder, \"I'm not your counsellor anymore, so anything you say would just be between friends. I am a pretty good listener, and then she planted a seed, \"It's not unusual for a young man to fall in love with his... first. She must be special or you wouldn't have fallen for her. I guess she doesn't feel the same way? I'm sorry. So what did she tell you?\" \n\nI had no answer for this so I just sat there as if frozen.\n\n\"You haven't told her, have you?\"\n\n\"No, not really. Besides, we both agreed that this would only last a few weeks and we'd never see each other again. We agreed. Besides, she's not talking to me. Hasn't spoken to me in weeks.\" I really hadn't planned to say any of this. It just came out. \"You... you said you wouldn't tell anyone. Right?\" I had revealed something I hadn't planned on.\n\n\"I think you really should talk to your parents. But no, I gave you my word so you don't have to worry about me talking to them,\" and her eyes narrowed as she looked down at me, \"She wouldn't be pregnant, would she? That can really complicate a young girl's life. Yours too.\"\n\nFor a moment, I was stunned. This hadn't occurred to me. We'd certainly done it enough, \"NO! She couldn't be. She's on the pill. She told me so.\"\n\n\"Well, she wouldn't be the first girl to... mislead a boyfriend and contrary to popular belief, they are not 100% effective. A girl can miss a pill. Shoot, leave them in the car one day in the Phoenix heat and they're cooked and she could be too!\"\n\nI thought about what she was saying, \"This girl wouldn't lie to me.\" It was the other stuff that worried me. Now I wasn't just worried. I was scared. \"I have to go.\"\n\nAs I walked out, Teresa called after me, \"Come back any time.\"\n\nAs soon as I was out the door, I took out my cell phone to text Sis: 'sis, we need to talk. you're not pregnant are you?' My finger hovered over the send for 5 seconds before I erased the text. \n\nThat night late, I was on google researching birth control and pregnancy. If I had gotten her pregnant, she might know by now, but wouldn't have known when she stopped talking to me. I don't know whether that was good or bad.\n\nI did finally send a text: 'sis, if you need ANYTHING, anything at all, let me know. i'll be there for you.'\n\nI didn't think she would answer and hoped that this was a false alarm. I had no idea how I would back up my promise that I'd be there for her if she were pregnant. She'd been there for me, but how do you help your sister carry your baby? I'd been stupid to take this risk with Sis. It occurred to me that it was way too late for this to be worth anything to Sis. Whatever was going on with Sis, the damage was already done.\n\nThat weekend, Dad was working, and I finally got up the courage to talk to Mom about the other thing Teresa had mentioned it. It had never occurred to me. I hadn't considered it possible, but It had been eating away at my brain since she'd mentioned it, \"Mom, how do you know when you're in love with someone?\"\n\n\"Whoooh. Wouldn't you rather talk about sex? Love is complicated. So, who are we talking about? Carol?\"\n\n\"No Mom. It's not Carol. She's just a friend. It's not one of the girls, and that's not important anyway. The important thing is how. You and Dad are in love, but how did you know and how long did it take you to know.\"\n\n\"I'll do my best, but it really is a hard question and we do such a poor job answering it in real life. Just look at how many of your friends have single parents, or a step parent or sibling. But let me tell you about the one case I'm familiar with: your father. I knew, we both knew, within weeks of meeting that we were meant for one another and a year later we were married. But how we knew is the difficult part. I can only tell you how I felt about your father and how he felt about me. We talked a lot and he was interested in what I said,\" and she got a dreamy look like she was focused on something in the distance, no longer seeing me. Her eyes closed and I saw a shiver go through her. Her mouth opened slightly as she took a deep breath. She blushed and returned to, \"Sorry. Just remembering your father when we first met.\""
    ],
    "authorname": "dbrains",
    "tags": [
        "brother sister sex",
        "brother sister incest",
        "brother",
        "sister",
        "brother sister",
        "sibling",
        "cheerleaders"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/i-got-caught-in-girls-underclothes-ch-10"
}