{
    "title": "Miss Callahan Ch. 21-27",
    "pages": [
        "Author's Note: \n\nWe've come to the end. Thank you so much for sticking with me on this story. Your comments, private messages and support has been amazing.\n\nOlivia Ellison one-shot coming in 2021.\n\n-FFF\n\n \n\nChapter 21\n\n\"Time check?\" Michelle asks as we sit back down at the conference table after doing our final run through of the day.\n\n\"Just over an hour,\" Jackie says as she looks at the stopwatch that we have resting on the conference table. \"Not bad.\"\n\n\"That would give us the last 30 minutes for the question-and-answer period, which seems like a good breakdown. Let's try to hit that pace again when we run through it tomorrow,\" Michelle says.\n\nI internally cringe at the mention of doing another run through tomorrow. I know we need to given the magnitude of this pitch, but just like with Interplay, and every other piece of business I've ever pitched, I hate rehearsing. I feel so wooden and forced until I have a real audience and I wish it was Friday already so we could be done with it. For so many reasons.\n\nThankfully, Guy and Sarah are sitting in for tonight's rehearsal so they can review and give us feedback. They are some of the only two people that have signed Ellison's NDA\u2014 Guy because he's the head of the office and Sarah because we needed to bring her in for the measurement pieces\u2014 and having other people to watch us helps me feel like it's a little more real.\n\n\"Damn, guys. That was smooth,\" Sarah says.\n\n\"Thank you, Sarah. Any real notes though?\" Michelle asks as she rubs her forehead.\n\nMichelle has seemed tense ever since the meeting with Olivia, which I suppose I understand\u2014 mainly because I've felt the same tension myself. But in the two years she's been my boss, I don't think I've ever seen her so serious and rigid through a pitch process. Even during our last rehearsal, she wasn't her confident, charming self and I wonder how much of Olivia's antics in that meeting really got under her skin. Usually, a compliment like that from Sarah would at least elicit a smile.\n\n\"Right,\" Sarah says looking back down at her notepad with a more serious look on her face. \"I really did think the opening and closing pieces were fantastic. The way you weaved the creative campaigns with the research was also really powerful. But I think the insight slides need to be pulled in sooner.\"\n\n\"Says the researcher,\" Jackie jokes.\n\n\"Hush now, my little coloring friend,\" Sarah replies to Jackie with an eye roll. \"As I was saying, you set up the situation well at the beginning. It's clear we understand what they're looking for, but we need to follow that up with our main insights. Right now, it goes from the opening statement into the history of Altitude and Ellison. They already know that history. If anything, I think that stuff could be held until the end.\"\n\n\"I agree. Olivia won't want to feel like she's being talked at about things she already knows,\" I say.\n\n\"Yes, but there are also new people in the room that we know we need to impress,\" Michelle argues. \"I agree we can move the slides down, but we will need them at some point to showcase to the board how deep our relationship history runs and the success we've had on their behalf.\"\n\n\"Agreed,\" Guy says as he finally chimes in. \"To quote Sarah, that was truly fantastic. You three have put together a compelling case. I have no notes on the actual presentation itself. The deck is beautiful and Emma nailed it as always. Michelle, I've already mentioned it to you when I reviewed the slides earlier today, but I just don't think the case study examples are right. Does San Francisco have any better sustainability samples besides the Port Authority campaign? We know Donnelly &amp; Schneider will be strong on that front. We need to showcase that we're not completely new to the space.\"\n\n\"I'll send you the samples San Francisco sent to me today. There's one great one from their campaign with Blossom Ridge, but it's very consumer focused,\" Michelle says.\n\n\"Given the fact that Ellison wants to go big with this, I think that's ok,\" he responds. \"Send me the case study slide and I'll review it. When's your next rehearsal?\"\n\n\"We'll do two more run-throughs tomorrow,\" Michelle says.\n\n\"I'll be around if you need an audience again,\" Guy replies. \"I can put together some mock questions to help prepare for the Q&amp;A section.\"\n\n\"That would be great actually. If you can join our noon rehearsal, that would give us time to rearrange some of the slides we just talked about,\" Michelle says to him. \"Jackie, can you work with Sarah on the research flow?\"\n\n\"I certainly can,\" Jackie responds and directs a playful smile at Sarah.\n\nThe two of them always have trouble being serious when in the same room and I often wonder how it is they ever get anything done, but somehow, they always do.\n\n\"Jackie and Emma, are you two prepared if Olivia decides to start the meeting early?\" Michelle asks us.\n\nJackie seems to finally notice how stressed Michelle is and she drops the smile that had spread across her face a moment before. It suddenly hits me just how much pressure Michelle must be under from leadership to win this account and I'm grateful I decided not to tell her about my relationship with Lauren.\n\nSo far Olivia has been quiet from Austin and I'm still holding out hope that Maddy didn't say anything. Though, Olivia could just be waiting until she gets back to Seattle to make a move.\n\n\"Yes, our calendars are cleared in case she does that again,\" I reply.\n\nSomething tells me Olivia never plays the same trick twice so that, mixed with the fact that key board members will be in the office with her, makes me think we will start at three, just like scheduled. And that alone already feels like a cruel trick\u2014 nobody wants to pitch at the end of the day on a Friday. It isn't even Thursday yet and I'm already exhausted.\n\n\"Then I think we can break until tomorrow,\" Michelle says and begins to gather her things.\n\nAn awkward silence settles on the room with Michelle's abrupt conclusion and even Guy has a slight concerned look on his face as he watches her put her laptop in her bag.\n\n\"Perfect timing, too,\" Guy says with exaggerated exuberance, apparently trying to smooth over the tension in the room. \"I told Paul I'd try to start getting home before ten o'clock at least once this week.\"\n\nBut Michelle just gives us all a tight smile before she's standing and moving towards the door. \"Tell Paul hello for me. Jackie and Emma, I'll see you in here tomorrow at nine,\" she says before she's out the door.\n\nGuy and Sarah are both looking at the door behind me where Michelle just left, but I can see Jackie's eyes trained on Guy with a confused look on her face.\n\n\"Who's Paul?\" she asks.\n\n\"My boyfriend,\" Guy says as if it was obvious.\n\nI have to look away so I don't react to Jackie's comically wide eyes.\n\n\"Is there a problem, Jackie?\" Guy asks, probably confused by Jackie's surprised face.\n\n\"No, not at all. None at all. Zero. I just didn't know...you had a boyfriend. You've never brought him to the holiday party.\"\n\n\"We started dating just after last year's,\" Guy replies with a slightly confused look on this face.\n\nSometimes when Jackie gets going, there's nothing that can stop the train wreck that comes out of her mouth if she's left unchecked. And right now, right before the biggest pitch of our life, is probably not the best time to tell Guy that she thought he was sleeping with Michelle. So, before things get worse, I decide to cut in.\n\n\"Anyway, thank you, Guy. We won't keep you any longer. It's getting close to your curfew,\" I say to him with as much charm as I can muster.\n\n\"No, thank you. I know how much work you've put into this and it shows. I'll see you all tomorrow,\" Guy says before getting up and leaving the room.\n\nOnce the door is closed, Jackie lets out a loud noise that sounds like a mix of a sigh and a laugh. \"Well, who would have guessed,\" she says.\n\n\"Guess what?\" Sarah asks.\n\n\"Guy's gay,\" Jackie replies.\n\n\"Obviously,\" Sarah says. \"He has a rainbow flag on his desk and his hair is coiffed.\"\n\n\"You two need to stop stereotyping,\" Jackie responds, pointing at Sarah and me. \"That would be like me saying you're gay just because your hair is short or you drive a motorcycle,\" she says to Sarah before turning her eyes on me. \"Or that you're gay because\u2014\"\n\nFor a moment her eyes roam over my dress and long hair, seemingly looking for something she can call out.\n\n\"You have short fingernails,\" she finally says.\n\n\"Well, you'd be right in all of those examples. Even if Emma's was a terrible example,\" Sarah replies. \"Oh, and you ride a motorcycle, you don't drive one.\"\n\nAs I watch Jackie roll her eyes at Sarah, I can't help but laugh. After all the late nights, last minute changes to the pitch presentation and rehearsal after rehearsal this week brought, it feels good to be bantering with the two of them again. And it's not lost on me how much friendlier Jackie has been since her night with Maddy. But thinking about Maddy and what she's most likely told Olivia only makes my stomach tighten so I push that from my brain for now.\n\n\"Anyway, what did you guys do to Michelle?\" Sarah asks.\n\n\"The meeting with Olivia Ellison was a bit tense and I think she's just stressed about this whole thing,\" I say.\n\n\"It is a lot of money. I'd be stressed too,\" Sarah replies. \"But if she needs a handler for Olivia Ellison, I'd be happy to step in. I'm a savant when it comes to dealing with hot, difficult women,\" she adds as she waggles her eyebrows. \"Feel free to pass along my personal cell phone number.\"\n\nI smile at Sarah, but the direction of the conversation is also making me feel slightly uncomfortable\u2014 as any mention of Lauren's ex does. I especially don't want to hear about how hot she is.\n\n\"Sorry to tell you, but I think Emma is more her type than you are,\" Jackie says, causing me to shift uneasily in my chair. Now we are definitely in uncomfortable territory.\n\n\"I'd argue that I'm everyone's type, but I have seen Olivia's ex-wife so I'm guessing you're right,\" Sarah responds.\n\nI feel like my heart skips a beat at the mention of Lauren and I just hope it didn't show on my face. Sarah is a good friend, but the Ellison pitch is messy enough without one more person knowing the truth behind it all.\n\n\"You guys knew she was married to Lauren, right?\" Sarah asks when Jackie and I just stare at her.\n\n\"Of course, we knew. She's basically our boss. But how did you know?\" Jackie asks.\n\n\"I've heard it from like five different people here. It's an agency. Worse than a high school. Why, is it supposed to be a secret?\"\n\n\"No,\" Jackie says casually and looks at me, but doesn't say anything else.\n\nSarah and Jackie are even closer than Sarah and myself so I'm grateful Jackie's not saying anything more even though she could.\n\n\"Well, it's too bad they broke up because that might be the hottest couple in the entire world.\"\n\nUsually, Sarah's brazen attitude about women amuses me, but right now her comment just causes my hand to dig into the armrest of my chair. I will myself not to say something snarky about Olivia, but it doesn't help that Jackie's eyebrows are raised and she's staring right at me, as if waiting for me to respond with some jealous comment.\n\n\"Should you even be looking? I thought you were still seeing the barista,\" I respond when Jackie just continues to sit there looking at me.\n\nI know my voice sounds more strained than it would in any normal conversation about women, but Sarah doesn't seem to notice.\n\n\"That one is over. Whenever her cat would fall asleep on the bed, she would make me sleep on the loveseat in her bedroom while she slept with the cat.\"\n\n\"An animal lover. How terrible,\" Jackie says laughing.\n\n\"Do you know how small a loveseat is?\" Sarah asks. \"I think it gave me permanent back damage.\"\n\nAs the conversation moves off Lauren and Olivia, and Sarah begins relaying a story about her latest round of unsuccessful dates, I begin to relax a little. I'm also reminded how much I miss hanging out with the two of them and how much has changed since Lauren came to town.\n\n\"Speaking of which, I have date number two with the DJ tonight so I need to go. Let's tackle the slides in the morning,\" Sarah says to Jackie.\n\n\"Fine with me. I'm about to fall asleep in this chair,\" Jackie says as we all stand up and begin to gather our things. \"Good luck with the DJ. We expect details tomorrow,\" Jackie says and I can't help but smile a little at her use of \"we\".\n\n\"Sure thing. Great job on the presentation, guys. I'd hire you,\" Sarah replies as she gives us a final wave and heads down the hallway towards her desk, which is on the other side of the office.\n\n\"Heading to your office?\" Jackie asks and when I nod, she motions for us to walk down the hallway.\n\n\"Do you think Michelle is ok?\" I ask as we walk.\n\n\"I think she'll be fine. She's probably just feeling like the win is her responsibility,\" Jackie replies.\n\n\"That's not exactly fair.\"\n\n\"No. If leadership had just addressed the real issue from the start, maybe we wouldn't be in this situation.\"\n\n\"What do you mean?\"\n\n\"If they were just transparent about why this is a longshot, instead of brushing Olivia's marriage vendetta under the rug, we'd be in a much more realistic frame of mind on whether or not we can actually win this. Maybe they could have even addressed it directly with Olivia. Now we're in some weird pretend world where Olivia is just another client.\"\n\nI'm lost in my own thoughts as we get closer to my office so I just nod in response. I agree with Jackie's assessment of the situation, but I'm also torn because I don't know what would happen to Lauren if it was all addressed with Oliva directly and now, I can't imagine her not being in my life.\n\n\"How are you feeling about Friday and seeing Olivia again?\" she asks me.\n\n\"I feel like I'm in a haunted house and I know some scary dead lady is going to jump out at me at any minute and I'm just sitting here, waiting for it to happen.\"\n\nJackie slows and turns to me with a confused look on her face. \"Um, what? What haunted house? Who's the dead lady?\"\n\n\"It's a metaphor.\"\n\n\"An oddly specific one.\"\n\n\"I'm just waiting for Olivia to do something, I guess. There's no way she finds out that the woman who rejected her in Seattle is in love with her ex-wife and just lets it go. Something tells me that's not her style.\"\n\nBut now Jackie hasn't just slowed, she's completely stopped walking. When I turn to look at her, she has an unreadable expression on her face.\n\n\"You love her?\" she asks.\n\nIt's not until she asks the question that I even realize what I said. I knew how I felt before, but this was the first time I have ever vocalized it and despite her thawed attitude towards me, Jackie is probably the last person I should have made that confession to.\n\n\"Yes,\" I reply in a quiet voice and look around at the framed awards lining the hall wall so I don't have to look in her eye as I respond.\n\nJackie doesn't say anything for a full minute, which causes me to finally bring my eyes back to her face. But when I look at her, she doesn't look as upset as I thought she would.\n\n\"I'm happy for you, Ems,\" she finally says.\n\n\"You are?\"\n\nShe gives a short laugh and a sigh. \"I mean, I want to be? I think maybe I can be in time. I don't think I'll ever be President of the Lauren Callahan Fan Club. I wouldn't even be the treasurer of that shit. But I'm doing my best to move on.\"\n\n\"That makes me really happy, Jack,\" I respond, smiling widely at her.\n\nI knew I missed Jackie, but I don't think I truly realized how much until tonight. Something about our exchange with Sarah felt so familiar and natural and I'm finally understanding how much I need her in my life.\n\n\"Ok, enough of that for one night,\" Jackie says waving off our emotional moment and walks the final few paces to my office door. \"You know, if you're worried, I could always ask Maddy if Olivia knows anything.\"\n\n\"You're still talking?\" I ask.\n\n\"Talking is a very strong word for what we're doing,\" she says with a raised eyebrow.\n\nI feel a sudden mix of emotions at Jackie's revelation. On one hand, I'm happy she's met someone she likes. But it also makes me nervous to have someone so close to Olivia at arm's length. Though, given my own ill-advised relationship with a client's ex-wife, I know I can't really criticize her.\n\nAnd while it is tempting to ask her to find out what she can, if Maddy didn't realize what Jackie had told her a couple weeks ago, or if she was too drunk to remember, it's better not to just offer up the information again.\n\n\"Better not bring it up,\" I reply.\n\n\"You're probably right,\" she says.\n\nOver the past few weeks, I've gotten so used to Jackie steering clear of my office that I'm surprised when I open my door and I can feel her follow me in. But when I enter and see Lauren sitting in one of the chairs across from my desk, scrolling through her phone, I stop in my tracks, causing Jackie to run into me.\n\n\"Jesus, Ems. It's called walking. You usually do it in a forward progression,\" she says as she steadies herself. \"Oh hey, Lauren. Must have been you that made Emma trip.\"\n\nLauren's face looks tentative as she stares up at Jackie, but she smiles regardless. \"Hello, Jackie. How was rehearsal?\"\n\n\"Good. Emma killed it as usual,\" Jackie responds but for once there isn't any bite in her tone. She isn't as friendly as I've seen her be with others, but I'd still call this an improvement.\n\nLauren stands up from the chair she was in and takes a step closer to us at the door. \"Listen, Jackie. I wanted to thank you. For telling Emma what Maddy said. I know you didn't do it for me, or even us, but thank you anyway.\"\n\nJackie gives Lauren a serious nod before a small smile creeps onto her face. \"Just take care of this one,\" she says, motioning towards me. \"She's scared of some dead lady jumping out at her.\"\n\nLauren looks to me with a furrowed brow and I just shake my head with a slight eye roll.\n\n\"Well, I've given this place enough of my life. I mean, night. Did I say life? Whoops. I think I'll be off,\" Jackie says as she turns back towards the door. \"See you tomorrow morning, Ems.\"\n\nLauren stares at the hallway that Jackie just went down with an amused expression on her face before moving over to the door and closing it. I need to answer a couple of emails before I can leave so I move over to my desk and pull out my laptop.\n\n\"What's this about a dead lady?\" Lauren asks, coming over so she can sit on the corner of my desk.\n\nAs Lauren crosses her bare legs in front of her, all I can do is stare at her for a moment. The entire position is so reminiscent of our first time together that I'm too distracted to answer the question.\n\n\"Ems?\" she asks when my eyes continue to just roam her body.\n\n\"Sorry. Forget about the dead lady. There is no dead lady.\"\n\n\"Ok, then,\" she says with a small smirk. Apparently, she knows exactly what dirty thoughts had been going through my mind only a second before. \"It seems like you two are doing better,\" she adds, nodding her head towards the door.\n\n\"Things are definitely moving in the right direction.\"\n\n\"I'm glad. I know you miss her.\"\n\nI feel my body heat up at her words, but not in the same way it did when I was looking at her legs. Lauren's understanding and her own lack of bite when it comes to Jackie is new and gives me a sense of hope for the future. Two weeks ago, I would have never guessed Lauren and Jackie might thaw towards each other.\n\n\"I do. I miss her a lot,\" I say and turn my chair towards her. The fact is, I can't get emails written when Lauren's perfume is hitting my senses and her bare legs are just asking to be touched so I figure that Jackie is right\u2014 I've given enough of myself to this place for one night. \"You're here late.\"",
        "Lauren must see the glint in my eye because she stands up and puts her hands on either side of my chair. She leans in and places her lips softly on my cheek before moving them closer to my ear. My body reacts as if she licked my pussy and my eyes slam shut at the sudden arousal vibrating through me. Flashbacks to that first night together are racing through my mind like a movie on repeat. A really, really hot movie.\n\n\"I came to seduce you in this chair again, but\u2014\" she says and brings her mouth down from my ear so she can lightly lick her way across my lips.\n\nMy tongue darts out on its own accord in an attempt to swipe at hers, but she's already brought her mouth away from mine. I can't help but let out a low moan at the way she's teasing me.\n\n\"But what?\" I ask in a breathy voice.\n\n\"Michelle is still in her office and by the look on her face, she isn't leaving any time soon.\"\n\n\"How tame we've become,\" I reply with a teasing smile.\n\n\"Yes, so boring, I know. Instead, I thought I'd take you home and help you forget about the stress of this week,\" she says as she dips her head and swipes her tongue across my lips in one fast motion. \"Would you like to know how?\" she says when she's pulled her face away again.\n\nI'm so turned on now that I don't think I can speak without sounding strangled so I just nod in response. Lauren moves her lips back to my ear and whispers into it, allowing her lips to hit my lobe as she does.\n\n\"First, I want to run a bath for you,\" she says and then runs her tongue down my neck. \"Then I'll rub lotion all over your body and give you the best massage you've ever had.\"\n\n\"That sounds nice,\" I'm finally able to pant out when she moves her head so she can kiss up the other side of my neck.\n\n\"Oh, that's not all, baby,\" she says, lapping her tongue against my ear again.\n\n\"No?\"\n\n\"I'm going to finish the night by tying you up and making you mine. Would you like that?\"\n\nHer mouth is back on my own and she wastes no time slipping her tongue into my mouth. And for a few minutes I'm lost in the kiss. It's passionate and powerful and it's as if our tongues have become so familiar with each other that they have a language of their own. They don't need silly words or proclamations. Our tongues are acquainted in a way I've never experienced with another woman.\n\nWhen her hands come up and grab onto my hair, I let out a moan that I know is too loud for our current predicament. Michelle's office may be on the other side of the building, but it's not that far away.\n\nLauren seems to agree because it's at that moment that she breaks her mouth away from my own. Her green eyes are dark and I can see a slight rise and fall to her chest that I know my own body is mirroring.\n\n\"God, yes,\" I reply when I can finally form words.\n\nLauren gently tugs on the hair that's still in her hand before giving me a stern look.\n\n\"Manners, Ems.\"\n\n\"God, yes. Please, miss?\"\n\n\"Much better. Let's go.\"\n\n \n\nChapter 22\n\nNow is not the time to be distracted, but as I watch Michelle rehearse her opening statement for what feels like the hundredth time, all I can do is think back on the night before.\n\nSomehow even with the impending pitch happening tomorrow, Lauren was able to take my mind off things. Like so many other times, she was the perfect mix of sweet and sexy and the slight sting I can still feel on my ass from our play session, only makes it harder to care about what Michelle is saying. Or maybe it's that I've heard this speech one too many times.\n\nLast night just made me want this week to be over even more than I already did. I know once it's over we'll still need to deal with the issue of HR and the difference in our roles, but with the pitch so close, it also feels like Lauren and I can finally be free of some of the underlying anxiety surrounding our relationship.\n\nJackie is sitting across the table and she seems to be about as focused as I am. To be fair, this is our third run-through today and I think it's fair to say we're both ready to go home.\n\nI already told Lauren I was going home to my own apartment tonight so I could focus before the pitch, which was partly the truth, but not the whole truth.\n\nDespite how relaxed she made me feel last night, the moment I stepped back into the Altitude office this morning, I could feel the tension seep back into my body and I'm at the height of anxiety at this point. Once we're done rehearsing, I just need the sanctity of my own apartment to re-center myself before tomorrow.\n\nIt doesn't help that I've now met Olivia and know exactly what she can be like and every moment that passes brings me closer to facing her again.\n\nI've rehearsed my part of the pitch so many times that I could sleepwalk through it so when Michelle steps aside and it's my turn to go, I move through my slides with ease before passing the torch onto Jackie.\n\n\"Do I really need to do this again, Michelle? I feel like I could rehearse this in Portuguese at this point,\" Jackie says.\n\n\"Your mom told me your Portuguese is terrible,\" I reply from my side of the room.\n\n\"My mom is known to lie,\" she quips back.\n\n\"I'll be sure to tell her that next time I see her,\" I reply. It feels so good to be joking around with Jackie again that I almost miss the seething look on Michelle's face. \"Sorry, we'll stop,\" I say to her.\n\n\"Oh, no, please continue since this pitch seems like a joke to you both,\" Michelle snaps back and it's the first time I've ever heard her speak like that.\n\nShe's often firm with us, but there's always an underlying warmth and usually she seems amused by us even if she acts like she's not. It's normal for teammates to try to bring some levity to a stressful room, but by the look on her face, this isn't one of those times.\n\n\"It's not a joke to us, Michelle. We're just tired. It's been a long week,\" I respond in an attempt to ease some of the sudden tension.\n\n\"Next week will be even longer if we don't nail this tomorrow. Every single person on the leadership team has their eyes on this. If we lose, we're all in a difficult spot,\" Michelle responds.\n\n\"As in we'll be fired if we lose a no-win pitch?\" Jackie asks.\n\n\"Enough, Jackie. If we go into this thinking we're going to lose, we will. We know what we need to do to win this and not all roads lead through Olivia Ellison. But the stakes have never been higher and it would help things if I knew you both understood that. Fair or not, how we do in this pitch will be seen by everyone.\"\n\nMichelle's speech manages to quiet even Jackie down and a much more serious mood settles itself over the room. When Michelle looks back to her laptop to move the presentation slides forward, Jackie catches my eye with a raised eyebrow.\n\nWe both know that the stakes are high for this pitch, considering the historical relationship with the client as well as how large the retainer is for it, but this was the first time Michelle has ever implied that there would be some kind of repercussion if we don't manage to win it.\n\n\"Now, let's run it again,\" Michelle says when she takes her place in the front of the room.\n\nJackie stands up straight as she dives into her section again, this time without any pushback or teasing. And once again, I'm counting down the hours until this is all over.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~.~ ~ ~ ~ ~ ~ ~ ~ ~\n\nI can feel my eyes start to droop as I go through the Ellison board member profiles, but luckily, I'm on the last one. I already read through them when the research team first delivered them to my inbox a week ago, but I like to refresh my memory on who will be in the room and what their role and history has been with the client.\n\nWhen I'm finally done and close the document, I notice that it's only five o'clock. Usually, I stay at the office until at least six, and often later than that if it's the night before a pitch, but Michelle isn't making us do another run-through and all I want to do is go home, have some wine and go to bed early. Not that I'll sleep much\u2014 I rarely do before a pitch.\n\nJust as I'm contemplating gathering my things so I can go, my desk phone rings. I recognize the Austin area code immediately, but I also can see that it's not Lauren's number. My stomach immediately drops to the floor, because somehow, I know exactly who is calling me.\n\n\"Emma King,\" I say in a professional voice as I pick up the phone and brace myself for the low, sultry voice I know will be on the other end.\n\n\"Hello, Emma King. Do you know who this is?\"\n\n\"Olivia Ellison.\"\n\n\"Should I be flattered you already recognize my voice?\"\n\nWe've only been on the phone for five seconds and I'm already rolling my eyes.\n\n\"Or you can just be impressed with my powers of deduction. You have an Austin area code,\" I respond.\n\n\"Very resourceful.\"\n\nThere's a pause and Olivia doesn't say anything else.\n\n\"Did you need something?\" I finally ask, not able to handle the silence.\n\n\"You didn't tell me last time I was in town just how much we have in common,\" she says.\n\nIf my stomach dropped to the floor earlier upon seeing her number on my phone, now it's in the parking garage. The thing I had most feared for the past two weeks has come true\u2014 Olivia knows about my relationship with Lauren. She doesn't sound mad, but I also know that showing any kind of anger or jealousy wouldn't be her style.\n\n\"I don't know what you mean,\" I reply, deciding not to give in to her vague phrasing.\n\nIf she wants to say something about Lauren, she can just come out and say it. But instead, Olivia just lets out a low laugh into the phone that I'm sure works to make other women's knees weak, but only grates on my senses.\n\n\"Oh, I think you do, Emma.\"\n\nShe doesn't say anything else, which makes me shift in my seat uncomfortably. Olivia knows very well that I can't just hang up on her\u2014 not with the pitch only a day away. But no part of me wants to play whatever game she's trying to set-up here.\n\n\"What do you want, Olivia?\"\n\n\"Come have a drink with me. Alone.\"\n\n\"And why would I do that?\"\n\n\"Because it's in your best interest to do so.\"\n\n\"Is it?\"\n\n\"There are things we need to discuss before tomorrow. If you care about her or her job, I suggest you come. Or I can just call over to Michelle's desk and see if she's free. I'm sure the extracurricular activities of Altitude's staff would fascinate her.\"\n\n\"So, you're blackmailing me then?\"\n\n\"I like to think of it as transactional encouragement. But I promise you, meeting with me will only help you.\"\n\nI know I should probably say no since no good can ever come from interacting with someone as manipulative as Olivia. But I also can't help but recall Michelle's words from earlier about the stakes of this pitch. Now that Maddy told her the truth, seeing Olivia now may be my only chance to stop her from doing something drastic to Lauren or even me. I'm also hyper aware that Olivia won't appreciate a second rejection from me now that she knows I'm sleeping with her ex.\n\n\"One drink. That's all,\" I hear myself say, despite the warnings going off in my head.\n\n\"Perfect, it's a date.\"\n\n\"It's not a date.\"\n\nShe lets out another low laugh before answering. \"Same hotel. I'll see you in the bar area in 30.\"\n\nI stare at the phone after we hang up and I don't know what I should do. My gut is telling me I need to tell Lauren, but I also know she'll tell me not to go and that just doesn't seem like a viable option at this point. I just want to be able to fix this for both of us and her knowing won't help. If anything, she'll just march down to Olivia's hotel herself.\n\nI open up our office's internal communications system and see a red dot next to Lauren's name, indicating she's in a meeting. I allow that to make my decision and without letting myself second guess it anymore, I quickly put my laptop in my bag and head out of the office and towards the elevators.\n\nI meant what I said and Olivia isn't going to get much of my time. But I need to do this\u2014 if there's any chance for me to end this charade, it's now.\n\nChapter 23\n\n \n\nAs I enter the bar area of the hotel, I see Olivia before she sees me, which I'm thankful for, since it gives me a chance to compose myself before walking over to the table she's occupying. She looks just as put together today as she did on her last visit, but this time, her hair is up in a ponytail like it is in so many of the photos I've seen of her online. The look only enhances the sharp angles of her face and the piercing color of her green eyes.\n\nThough she's wearing a crisp, charcoal suit tonight and not a dress like last time, she still looks incredibly feminine. Perhaps it's the high black heels she's wearing with the suit. As I get closer to her table, I can see she also has on a slim black tie and if I wasn't so annoyed with her presence in my life, I might even appreciate her style.\n\nI can also see that she already has an old fashioned in front of her\u2014 though the drink is clearly full and I doubt she's had any of it based on what Lauren told me about her drinking habits.\n\n\"Hello,\" I say as I arrive at the table.\n\n\"Emma,\" Olivia says and begins to get up, but when I simply slide into the chair across the table from her, she sits back down. \"You're looking very well. I don't think I noticed how blue your eyes are last time I was here.\"\n\nI'm not surprised Olivia has already started flirting since that seems to be one of the ways that she disarms people. But at this point, she has to know that I won't fall for that. Especially a line as lame as that.\n\n\"Are you sure you didn't notice?\" I ask with a slight bite to my tone. \"Because I've been told blue eyes and blonde hair is your type.\"\n\n\"Not just mine,\" she replies with smirk on her face.\n\nI'm saved from responding further by the server arriving at our table to take my drink order.\n\n\"A glass of champagne?\" Olivia asks me.\n\n\"Just water,\" I say to the server.\n\n\"Am I drinking alone?\" Olivia asks me.\n\n\"Are you even going to drink that?\" I ask back.\n\nOlivia narrows her eyes at me slightly but the same smirk she was wearing before reaches her face at the same time. She gives a slight nod to me before turning back to the server.\n\n\"Two waters, please,\" she says. Once the server leaves our table her eyes turn back to me and roam my face. \"Are you from Seattle, Emma?\"\n\n\"No.\"\n\n\"New York, then?\"\n\n\"I thought you did your research on me. Shouldn't you know that already?\"\n\n\"Yes, but it wouldn't feel like I'm getting to know you if you aren't the one to tell me that you grew up in Portland.\"\n\n\"This isn't a date.\"\n\n\"But I still need to ask you what sign you are and what you wanted to be when you were a kid,\" she responds in a teasing tone.\n\nIt's obvious she's enjoying whatever this is and I'm starting to feel an uncomfortable sense of regret for ever coming here. I should have told Lauren before I came instead of trust Olivia to actually make this meeting useful.\n\n\"Why am I here, Olivia?\"\n\n\"You tell me. You came.\"\n\n\"You didn't exactly give me a choice.\"\n\n\"I wanted to meet you.\"\n\n\"You've met me.\"\n\n\"No. I met someone who works for my agency and is about to pitch me on business. Now I'm meeting my wife's girlfriend.\"\n\n\"Ex-wife.\"\n\n\"Not yet.\"\n\nHer face loses its playful smile as the conversation finally turns to the real reason I'm sitting here and it's actually a relief to see a flash of the real her instead of the fake, charming version she was putting on before.\n\n\"That's it? You just wanted to meet your ex-wife's girlfriend? Because from what I've heard, you usually have a motive.\"\n\n\"Considering your source, I wouldn't be so sure. Tell me, Emma. What do you want out of all this?\"\n\n\"I want your business. And I know Altitude is the best agency for the work,\" I respond, doing what I can to veer this in the direction of the pitch itself, which is why I came after all.\n\nI was so engrossed in the moment that I didn't even notice the server had dropped off our waters until I see Olivia take a sip of her own. She gives me a thoughtful look for a minute before she says anything.\n\n\"You have to know that you're in a delicate situation here. Dating the wife of Altitude's biggest client is bold and I don't use that word lightly. How do you see this playing out?\" she asks.\n\n\"You guys aren't together anymore. Altitude is the best agency to handle this business, which I'll prove tomorrow. I'm hoping you can get past your personal feelings and see that. This doesn't have to be messy. In fact, you can surprise us all and make this quite easy.\"\n\n\"My marriage isn't a personal feeling, Emma. But I can appreciate your attempt at persuasion.\"\n\n\"Something tells me you're not that heartbroken about your marriage ending considering some of the things you pulled while in it.\"\n\n\"There you go again. Taking the word of a faulty source. And let's finally call her by her name. Lauren's specialty is to play the victim. I'd be careful not to trust every one of her sob stories.\"\n\nI'm not going to fall into the trap of asking about Lauren and what she meant\u2014 that feels like a betrayal to Lauren. Besides, I don't trust Olivia to tell me the truth anyway. Instead of responding, I take a sip of water and look around the bar. I hate that this hotel is now tainted with memories of Olivia when I had such an amazing night here with Lauren when we first met.\n\n\"There's nothing Lauren cares more about than success. Nothing,\" Olivia continues when I don't say anything. \"The fact that she's putting it all on the line for you makes me wonder.\"\n\nSomething about her tone causes me to look back at her. She has her finger on her pursed lip and is tilting her head in an exaggerated show of thinking something through. I hate the way she's looking at me so intently, but I also don't want her to know that so I just continue to maintain eye contact. Finally, a slow smile spreads across her lips.\n\n\"There must be something about you that's special. Something malleable maybe?\" she asks with a small smirk.\n\nBy the slight raise of one eyebrow, and her very specific word choice, I know exactly what she's implying and I can instantly feel my body tense. She was married to Lauren so she obviously knows what Lauren likes in the bedroom and I hate that she can accurately guess at something so intimate.\n\n\"Maybe you don't know Lauren as well as you think you do,\" I respond, but even I can tell my voice doesn't sound as strong as it did moments before.\n\nThe laugh that emits from Olivia holds no real humor and it makes my skin crawl. \"And it all becomes clear. Not to say I don't understand the appeal. Because I very much do. Lauren and I always did have similar taste.\"\n\nI have a handful of retorts sitting on the tip of my tongue but I hold them in. This is escalating into a territory I don't want it to go and I feel another rush of dread at the implications of me sitting here. I know I need to try a different tactic and decide in that moment to take a chance.\n\n\"I don't want to talk about Lauren. I'm here because you're my client. And we have an important meeting tomorrow. One that could help both of us.\"\n\nOlivia's eyebrows rise in slight surprise. \"Oh? And how will tomorrow help me?\"\n\n\"I know Ellison's Board of Directors' want to retain Altitude's services and quite frankly the Seattle office is more equipped to handle this than any of our other offices. I also know that switching to a sub-par agency just to spite your ex-wife won't look good for you. I will impress those men in the room tomorrow. For you, it's a win-win situation. You get to ingratiate yourself with your new board and also get the best agency at your fingertips.\"\n\n\"Have you been thinking about my fingertips, Emma?\"\n\nI was so close to getting through this meeting without an eye roll, but as she makes her latest brazen comment, I can't help myself.",
        "\"No. Is that all you took away from what I just said?\"\n\n\"I suggest you leave the board of directors of a multi-billion-dollar company to me,\" Olivia responds in a condescending tone. \"But I do look forward to seeing your impressive presentation tomorrow,\" she adds as her eyes roam down my body.\n\n\"On the phone you said you had something that would help me,\" I say.\n\nI know I'm not going to get anything more from Olivia, but I still ask, needing something that will help me feel better about tomorrow, and especially feel better about coming here tonight.\n\n\"Let's call it a warning,\" she replies.\n\n\"Is this where you tell me to break up with her or else?\"\n\n\"No. I don't think I'll need to do that. You're here with me after all. Somehow this already feels like a victory.\"\n\n\"I only came because you basically blackmailed me into it.\"\n\n\"And how does she feel about you being here with me?\"\n\nHer question catches me off-guard and I know I'm not able to hide the way my body shifts uncomfortably or the redness that suddenly splashes across my cheeks. This entire night I've had a knot in my stomach and Olivia's words only pull it tighter. I should have told Lauren I was coming and suddenly I feel like I completely betrayed my girlfriend.\n\nOlivia's smile grows as she watches me. \"She doesn't know,\" she says. \"Interesting. Maybe there's hope for you yet.\"\n\n\"Lauren would have told me not to come. But for the sake of her and both of our careers, I needed to see if you would listen to logic.\"\n\n\"What a sassy little sub you are,\" she says. \"Too bad you're dating such a wet blanket.\"\n\nI can feel things unraveling fast and know the best thing to do would be to leave. I can't just walk out and cause Olivia to make this even more personal, but I've also had my limit of her games. Something also tells me that whatever warning she's dangling in front of me isn't one I want to hear.\n\nBefore I can say anything though, Olivia continues. \"She won't be happy. You were right about what you so cleverly said last time I was here. Lauren doesn't like to share.\"\n\n\"She doesn't have to. This is a business meeting and nothing else.\"\n\n\"It won't matter. You still came. And here we are, alone together. It's me who is staring into those sweet baby blues. Me, who can smell that faint scent of vanilla and mint coming off your body. It's me who's close enough to touch that skin that looks so impossibly soft.\"\n\nOlivia reaches out to touch my hand that's resting on the table, but before she reaches me, she pauses and pulls back with a small smile on her face. I feel frozen to the spot and not because I want Olivia to touch me. And not because her words are having any kind of effect on me beyond repulsion. But with each passing moment, I'm realizing that everything Olivia is saying is correct. Lauren will be devastated I came here and I need to leave so I can tell her the truth.\n\n\"Tomorrow at the pitch, I do suggest you think long and hard about whether or not she's worth it,\" Olivia says next. \"Think about your future and who you really want to align with.\"\n\n\"And Lauren?\" I ask.\n\n\"Lauren is her parents' daughter and always will be. When you're given the choice, make the right one.\"\n\n\"What choice?\"\n\n\"I think that will be all for tonight. I do have an important meeting tomorrow and there's a blonde I'd like to look my best for. And I think you probably need to go.\"\n\nOlivia suddenly stands up and begins to put on the long, black jacket she has with her.\n\n\"And why is that?\" I ask from my chair. Something about her tone has my stomach tightening all over again.\n\n\"I'm sure Lauren is waiting anxiously for your return from the Evil Witch of the West.\"\n\nAs her words sink in, I finally understand the real game and for a moment, I feel a wave of nausea roll over me.\n\n\"Why would Lauren be waiting for me?\" I ask and I can't get my voice louder than a whisper.\n\nOlivia simply smiles and gives me a small wink. \"Sleep well, Ms. King. I look forward to seeing you tomorrow.\"\n\nAs I watch her walk away, I can feel my eyes sting with tears I refuse to let drop while still in the hotel. I feel so dumb for ever letting Olivia manipulate me into this and the sinking feeling in my body only increases when I look at my phone and see that Lauren hasn't sent me one text or call. The lack of communication is telling enough.\n\nOlivia told her I was here.\n\nChapter 24\n\nThe man on shift at the front desk of Lauren's apartment is the same one I've seen before and he doesn't question me as I walk into the building and head to the elevators. I had contemplated texting her first, but I'm afraid she won't answer so I'm going to just knock on her door an make her talk to me.\n\nThe tremble I felt begin to settle across my body the moment Olivia walked away from the bar only grows stronger with every step I take to Lauren's door and by the time I'm outside of it, my hands are visibly shaking. I close my eyes and take a few deep breaths before I knock lightly on the door.\n\nLauren is there almost immediately, as if she was expecting me. But the warm, excited look that always crosses her features when she first sees me isn't there. In its place is the cold, detached version of Lauren I've only seen when she's in her professional mode at work and speaking to people she doesn't know very well. She doesn't say anything and just moves back into the apartment. But the fact that she left the door open implies that I should follow so I close the door behind me and make my way down the now familiar hall.\n\nMost of the apartment is dark as I move through it, trying to find where Lauren went. But as I come into the living room, I can see her silhouette out on the dark balcony. I take another small breath before taking a tentative step outside so I can join her.\n\nIn any other situation I wouldn't be able to stop myself from going up to her and kissing her. Lauren looks so adorably casual in her big sweater and leggings. Her hair is up in a messy bun and she's holding a glass of wine as she looks out at the dark water.\n\nBut when my eyes roam her face and I can see the slight tightening of her jaw muscle, I know that kissing her isn't an option right now.\n\n\"I'd offer you champagne, but I can't afford what Olivia can buy,\" she says, continuing to look forward. Her voice is low and sounds just as detached as her face looked when I came in.\n\n\"Lauren, please turn around and talk to me,\" I say in a quiet voice.\n\nLauren turns around and puts the wine glass on the small table she has on the balcony, but her body language is guarded and the stern, unhappy look I've only seen her direct towards incompetent colleagues is now directed towards me.\n\n\"Did you really think she wouldn't tell me? That she wouldn't love to send me a text letting me know just who was going to have drinks with her?\" she suddenly asks.\n\n\"I was going to tell you.\"\n\n\"When?\"\n\n\"After I found out what she wanted. And it wasn't drinks. We just had water.\"\n\n\"That makes me feel so much better that you're hydrated. Is this why you wanted to stay at your own place tonight?''\n\n\"No, of course not. She called me at the end of the workday. This wasn't premediated.\"\n\n\"And you thought it would be better for me to find out like this?\"\n\n\"You were in a meeting,\" I say and instantly know that my words sound weak. Lauren seems to agree when she only raises one skeptical eyebrow at me. \"I thought I was helping us,\" I quickly add.\n\n\"Explain that to me,\" she says and crosses her arms in front of her body.\n\n\"She told me it was in our best interest to meet with her. She implied she had information that would help us. And then she threatened to call Michelle and out us if I didn't. What was I supposed to do?\"\n\n\"How about tell your fucking girlfriend that you're going to see her ex-wife instead of doing it behind her back?\" she asks before storming back into the apartment.\n\nFor a moment I can only stand there and let Lauren's words wash over me. But as they do, I feel my own frustration seep in. I know I should have talked to Lauren before just going to see Olivia, and I hate how she found out, but I'm not the one who put us in this position to begin with and all I've done since meeting her is attempt to make this situation work.\n\n\"And can you really tell me that you'd let me go?\" I ask as I follow her back into the apartment. \"Lauren, she was going to call Michelle. I did what I thought was right in that moment. I was trying to fix all this. I thought I could reason with her.\"\n\n\"Have you not listened to one thing I've told you this whole time? Olivia understands reason. She just doesn't care. She's a master of chaos. She wanted you there so she could tell me you went.\"\n\n\"She couldn't have predicted I would go without telling you. She didn't even find that out until the very end of our meeting.\"\n\n\"Oh, I'm sure she loved that revelation. No wonder she thinks you're interested.\"\n\nLauren walks out of the room and into the kitchen and I feel another flash of annoyance that I'm having to follow her around her apartment just to have a conversation.\n\n\"Would you please stop walking away from me?\" I ask when I come into the kitchen and Lauren is pouring herself a fresh glass of wine. \"What the hell did you mean by that? Why would Olivia think I'm interested in her?\"\n\nAnd now I know why Lauren came into the kitchen. She grabs the phone that's lying on the counter, presses some keys and then hands it to me where I can see the latest text from Olivia. It's right under the text she sent Lauren a few weeks ago alerting her that she was in Seattle.\n\nOlivia: We always did have the same type. Thanks for sharing her tonight. \n\nWhen I look at the time stamp, I can see that Olivia sent it around the time that I must have left the bar. Which means that when Olivia made me think she had texted Lauren, she hadn't yet. I led her right into that.\n\n\"You have to know I wouldn't have gone for that reason,\" I say putting the phone back down on the counter.\n\n\"Would I?\"\n\n\"Are you serious, Lauren? So, when you said you trusted me last time she was in town, that wasn't exactly the truth.\"\n\n\"Because you're so trustworthy tonight?\"\n\n\"Ok, I need you to say exactly what you think happened tonight. Because it sounds like you think I went there to sleep with her,\" I say putting my hands up and taking a step back.\n\nWe are so far past me coming here just to apologize for a mistake I made\u2014 one I made trying to protect us\u2014 that I can feel my anger rising quickly.\n\n\"Every woman on earth wants to fuck Olivia. I guess I'm finding it hard to believe you're the exception.\"\n\nI take another step backwards at her biting words and can feel the tears that emerged in the bar starting to prick the corners of my eyes.\n\n\"I can't believe you think I'd do something like that,\" I say and my voice is so quiet that I don't even know if she heard me. \"Do you have any idea what this has been like for me? Trying to balance not pissing her off while also worrying about you? Since I met you, I have hidden our relationship, I've worked tirelessly on a pitch so we can both save our jobs, and I've been here for you every step of the way. Always making sure you're ok.\"\n\nLauren doesn't say anything for a moment as she stares down at her wine, but when she finally looks at me, I can see that she also has a wetness around her eyes.\n\n\"And what did going there tonight accomplish?\" she whispers.\n\nMy mind races through the conversation I had with Olivia at the bar, but the only thing I can really remember is the way her eyes roamed my body. Ultimately, I didn't really find out anything useful and Olivia certainly didn't bite at any of my weak attempts to broker peace.\n\n\"She told me to align myself with the right side when the time came. That was about as much information as I could get,\" I say and instantly feel ridiculous again for thinking that going to meet Olivia would help.\n\n\"And did she hit on you?\"\n\n\"She always does, but I made it clear that it wasn't a date. Just like I did last time.\"\n\n\"So now you've rejected her twice and she knows you're in a relationship with me?\"\n\n\"What are you actually mad about here, Lauren? The fact that you didn't get to assert your control over me by telling me not to go? It's hard for me to believe you actually think I'd sleep with her.\"\n\n\"How about the fact that you're jeopardizing my entire career by playing her games?\"\n\n\"So, it doesn't have anything to do with me at all then. Perhaps Olivia was right and the thing you care most about is your own success. Well, this isn't just about your job, Lauren. The Interplay pitch put me within inches of my own promotion. But I guess everything is about you and your job and your fucking ex-wife.\"\n\n\"If you had just talked to me first, we wouldn't even be having this conversation.\"\n\n\"Yes, I'm so sorry for trying to fix the situation you two created in the first place,\" I respond sarcastically.\n\n\"I've told you how manipulative she is. How could you be so stupid to play into that?\"\n\n\"I wasn't the one stupid enough to marry her.\"\n\nI see the first tear fall down Lauren's face, but I'm in such an emotional state myself that it hardly registers in my mind that this is the first time I've ever seen her cry. I came here to apologize for doing what I did and now I don't even know what we're left with. Lauren's words are so cutting and so hurtful and I can feel a coldness between us that has never existed before.\n\n\"I think you should go,\" she finally whispers.\n\n\"I think so too,\" I say, but don't make a move to leave the room.\n\nPart of me hopes she'll say something that convinces me to stay and maybe she's feeling the same way because as I say those words, I can see her face fall even more.\n\nI turn and walk towards the entrance of the kitchen, but something won't actually let me walk through. I turn back and see that Laruen's face is now wet with tears. I don't know how we ever ended up in this situation, but the words she just threw at me keep rolling around my head and staying here doesn't seem to be making anything better.\n\n\"I only wanted to protect us. So, we could have a future. And maybe I went about it the wrong way. But now at least I know how easy you'll turn on me. Take care, Lauren.\"\n\nI can hear a short sob as I turn and leave the room and I force my feet to take me down the hall before I lose all resolve and go back to her in the kitchen.\n\nThe moment I'm out of Lauren's apartment, I lean against the wall of her hallway and let my own tears fall. Lauren seemed ready to push me out of that apartment the moment I entered it. And maybe I truly just don't understand the depth of damage Olivia left over from their marriage, but nothing I said in there seemed to matter. The only thing that mattered was that I went and that Olivia found out that I didn't tell Lauren I was going.\n\nLauren's words were hurtful, but I can tell by the raw emotion on her face that she's going through her own turmoil and I wonder how much of it is really even about me. She may not have reacted quite so strongly last time I went for drinks with Olivia, but it was clear that Olivia has a way of affecting her.\n\nI know I can't stay leaning against this wall forever and at this rate, I won't get any sleep before tomorrow's pitch. But as I push myself off the wall and head towards the elevator, I know it doesn't really matter when I get into bed. I won't be sleeping tonight.\n\nChapter 25\n\nMy eyes are stinging by the time I get to the final slide of the presentation. I decided to review my sections one more time before we head into the Ellison team, but with so little sleep, my eyes feel heavy by the time I finish. It probably doesn't help that I cried most of the night once I got home from Lauren's.\n\nI've yet to hear from her, but I guess that's not surprising considering how we left everything last night. And now that I've had a night to think about things, I'm even more confused as to how everything broke down so quickly.\n\nWhen I hear the knock on my door, my stomach immediately tightens even though I know it can't be Lauren. She won't be in the office again today due to the same leadership request she got last time Olivia was here. I feel an immediate rush of relief when I see Jackie's face poking into my office.\n\n\"Busy?\" she asks.\n\n\"No, come on in,\" I reply and close the presentation on my laptop. If I'm not ready yet, I never will be.\n\n\"Today's the day. Are we ready?\" she asks as she comes in and takes the seat across from my desk.\n\n\"As ready as I'll ever be, I guess,\" I reply.\n\n\"Whoa. What happened to you? Have you been crying?\"\n\n\"Is it that bad?\" I ask and quickly grab the mirror out of my desk drawer so I can check my face. The last thing I need right now is for Olivia to see how much of a mess she created last night.\n\n\"Nobody else would be able to tell. But I know you, Ems. What happened? Did she do something?\"\n\nI let out a harsh laugh at her question. \"Which she do you mean?\"\n\n\"I meant Lauren, but did something else happen?\"\n\n\"Let's just say Olivia knows. And I did something stupid in response. And I think Lauren broke up with me last night. Or we broke up with each other. I don't know.\"\n\n\"Hey, hey, hey,\" Jackie says and comes over to my desk so she can sit on the corner. The move reminds me so much of Lauren that I can't help but tear up again. \"None of that. Not right now. You're going to smear everything and then what will Ellison think,\" she says with a small smile on her face.\n\nShe reaches over my desk and grabs a tissue before gently pressing it against the corners of my eye to stop the flow.\n\n\"Now, tell me what happened,\" she says.\n\n\"Olivia called here last night and told me she would call Michelle if I didn't go get a drink with her. So, I went, but I didn't tell Lauren.\"\n\n\"Why didn't you tell her?\" she asks and I'm grateful that there's no judgement in her voice.\n\n\"I guess I thought I could be the hero and fix it.\"\n\n\"Lauren doesn't need a hero. She probably felt blindsided and scared.\"\n\nJackie's words hit me all at once and I'm immediately thrown back to the times I told Lauren I don't need a hero. But it's the final thing she said that really makes me snap my eyes up to her face.\n\n\"You think she was scared?\"\n\n\"I'm sure she was.\"\n\n\"Of what though?\"\n\nJackie gives me another small smile as if she was explaining something to a child. \"To lose you, Ems. I've seen the way she looks at you and she's all in. It used to drive me crazy, but I can clearly see the affection there. I don't know anything about her marriage, but maybe she's used to Olivia taking and winning.\"\n\nMy mind travels back to Lauren's tear-streaked face and the only thing I can feel is an overwhelming sense of regret. I should have never left her apartment last night. I should have held her and told her that she means more to me than this place. But I don't even think I realized that until this moment. I've been so focused on what all this will mean for our places at Altitude that I didn't even stop to think about whether or not I even care anymore. I want Lauren. Noting else matters.\n\n\"What if I've already lost her?\" I ask.\n\n\"I know you haven't. You should see her. She looks like more of a mess than you do.\"\n\n\"Wait, you've seen her? She's here?\"\n\n\"I saw her walk through the kitchen earlier. I don't know if she's still here.\"\n\n\"She's supposed to be home,\" I say and look towards the door as if I'd be able to see her out of it, despite the fact that it's completely solid. My heart feels like it's suddenly racing at the thought of Lauren and Olivia being so close.\n\n\"Ems, have you told her you love her?\" Jackie asks gently.\n\n\"Not yet.\"\n\n\"Maybe you should.\"\n\n\"I need to go find her,\" I say and quickly move out of my seat before I feel Jackie's hand on my arm.",
        "\"Easy, tiger. I meant tell her after the pitch. Olivia and her team are here,\" she says and we both automatically look up to the clock on my wall. \"In fact, we should go to Michelle's office and see if she's ready to head to Anchor.\"\n\nI take a breath and nod. I know she's right and we need to go. Running after Lauren and declaring my love for her won't help either of us with the Ellison team around and leadership's eyes everywhere.\n\n\"Do I at least look presentable?\" I ask Jackie turning so she can see my face.\n\n\"As beautiful as ever,\" she says with a smile. \"You're going to nail this. Like always.\"\n\nFinally feeling like I have Jackie back, mixed with the roller coaster of emotions I've been on for the past day and night, causes me to lose my composure one more time. But this time I don't cry. Instead, I grab Jackie and pull her into a hug and by the small gasp I can hear come from her, she wasn't expecting it.\n\n\"Thank you, Jackie. You're my best friend. You know that, right?\" I say as I squeeze harder.\n\n\"I know,\" I can hear her whisper into my shoulder. \"You're mine too. Now let's go win this thing.\"\n\nWe're both quiet as we leave my office and head to Michelle's. We still have fifteen minutes before the pitch starts, but the client team could be anywhere at this point so it's better not to say anything. This morning Guy even sent out an email to the entire office alerting them to Ellison's presence so people were careful of their hallway and kitchen conversations.\n\nMichelle is just leaving her office and I can already see that her face has the same tense look it has had all week. But as soon as she's in the hallway, I can see that she's not alone. Coming out of her office with her is the last woman I want to see\u2014 Olivia.\n\n\"Hello, Emma. So good to see you again,\" Olivia says and smiles at me.\n\nShe extends her hand and I'm happy that my body seems to have a professional autopilot because I reach out and shake it.\n\n\"Hello, Olivia,\" I respond.\n\nUsually with a client I would reply with some charming comment, but at this point, a hello is about as much as I can muster for this woman. I think I should get an award for not running down the hall in the other direction.\n\n\"Hello, Jacqueline,\" Olivia says next, extending her hand to Jackie.\n\n\"Welcome back to Seattle, Olivia,\" Jackie says, shaking Olivia's hand as well.\n\nOlivia's eyes come back to my own and as she talks, it's as if the others aren't even in the hallway with us.\n\n\"I should go make sure my team is set-up in the room. I'll see you soon. And Michelle\u2014\" she says, finally moving her eyes away from my own. \"Thank you for the chat. I'm happy with where we left things.\"\n\nMichelle nods but doesn't say anything and a moment later Olivia turns and moves down the hall. To anyone watching, the three of us would look like we were checking out a beautiful woman swaying her hips as she leaves us, instead of the truth, which is that I'm just waiting until she's out of ear shot to find out what that was all about.\n\n\"Let's step inside for a moment,\" Michelle says, nodding towards her office door.\n\nJackie raises her eyebrows at me before we both follow Michelle in.\n\n\"What was that about?\" I ask the moment the door is closed and we have more privacy.\n\n\"I'd like to adjust the presentation flow,\" Michelle replies.\n\n\"Isn't it a little late for that?\" Jackie asks and leans against the door.\n\nMichelle ignores Jackie's question and turns to me. \"Emma, I'd like you to do the opening and closing statements.\"\n\n\"But you're doing those. We've rehearsed that. Many, many times,\" I reply.\n\nAll day I've been waiting for Olivia to make some kind of move and seeing her coming out of Michelle's office gave me an instant feeling of alarm. I'm not sure exactly what I was expecting but Michelle handing me the entire presentation wasn't it.\n\n\"I'm changing it,\" she responds. \"You're the one who doesn't like rehearsals anyway. I need you front and center. And I need you to impress the board.\"\n\nJackie is quiet at the door, but when I look over at her, I can see that her brow is furrowed and I assume my own matches.\n\n\"I thought that was the plan. But why was Olivia in here?\" I ask her.\n\n\"We don't need to worry about her.\"\n\n\"What do you mean?\" I ask next.\n\nMichelle looks at her watch and then moves back over to the door, causing Jackie to stand up and move to the side. \"We have to go,\" she says. \"We'll discuss after. I'll kick things off and then I'll turn everything over to you two.\"\n\nMichelle is out of the room before either of us can say anything else. Jackie and I just stand there staring at each other for a moment while I attempt to wrap my head around what our boss just said to me.\n\n\"The pitch is in ten minutes. How am I supposed to step in and do her parts?\" I ask Jackie.\n\n\"We've seen her do those parts so many times. Plus, you're better than she is at presenting anyway. Just do your Emma thing.\"\n\nOf all the things that have stressed me out this week, taking over the presentation is probably the least of my worries. Jackie's right\u2014 I've done this before with less prep than I have now. But the whole thing still feels strange.\n\nJackie opens the door wider and motions for me to go through it and as I do, I can hear her whisper something beside me. \"Do you think Olivia is wearing red because she's actually the devil?\"\n\nEven though the next 90 minutes might be unbearable, Jackie's comment still makes me smile. At least this time I know that whatever I'm walking into with Olivia Ellison, I have my best friend back by my side.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~.~ ~ ~ ~ ~ ~\n\nThe first thing I notice when I enter the conference room is a sea of black suits. I've studied each one of the six board members' pictures and yet somehow, they all look the same when they're sitting along the same table. The only two people that really stick out are Olivia and Maddy\u2014 partly because they're the only women at the table and partly because they're the only ones wearing color.\n\nThe youngest man sitting at the table is next to Olivia and saying something to her. I recognize him immediately as Simon Simpson\u2014 one of the board members I need to \"impress.\" I'm glad her attention is elsewhere because it gives me a chance to survey the scene without her penetrating gaze on me.\n\nWhen we were outside of Michelle's office, I didn't want to seem like I was staring, but now I can see that Olivia is wearing a deep red blouse with what looks like high waisted black pants. I wish Jackie had never said anything because now I can't help but think about Olivia as the devil. Not that I'm religious, but the deep red against the black does its job to solidify her in my mind as a villain.\n\nOn the other side of Olivia is Maddy and for a moment I think she's staring at me, until I see that her gaze is settled on the person slightly behind me. When I turn my head slightly, I can see the small smile Jackie is directing her way and I have to wonder how this situation got so complicated.\n\n\"All set?\" Michelle says as she comes up beside us.\n\n\"Yes, ready when they are,\" I reply.\n\nEvery pitch is different in the way we present. Some clients are more casual and conversational and we'll sit around a conference table with them. But I can immediately see that the Ellison team is more formal than that, which is something we prepared for. They're all sitting across one table and facing us. We'll stand next to a screen while we present our slides and Jackie is one of the best there is at creating engaging slides that don't take away from the speaker.\n\n\"We're ready,\" Michelle says to Olivia from her spot in the front of the room.\n\nI finally see Olivia glance my way, but unlike every other time I've been in her presence, her eyes don't linger on me. \"Perfect. We're ready. Please begin,\" Olivia responds.\n\nShe doesn't look my way again and it feels almost as if she's intentionally not giving me the attention that she usually lavishes on me\u2014 not that I mind, but it's definitely a change.\n\n\"Thank you for joining us today,\" I suddenly hear Michelle say and her voice jars me out of my thoughts. I move over to one side of the screen so I can wait for her to pass things over to me.\n\n\"Especially for coming all the way to Seattle to meet our team. I wish I could have provided better weather, but you did come in November after all.\"\n\nAs always, it's during these first few moments that I'm able to tell how a pitch will go and the fact that the Ellison team is laughing so heartily at Michelle's lame weather joke, is a good indication that this pitch is already off to a good start. Even Olivia is smiling at Michelle, which is unnerving in itself.\n\n\"My name is Michelle Lee and I lead the development team here in Altitude's Seattle office. But it's not me you'll hear from today. A good leader recruits the best for her team and I try my best to be a good leader here. So please, let me take a step back and introduce you to the two people you'll really be hearing from today\u2014 Emma King and Jackie Silva.\"\n\nMichelle motions for me to step forward and then moves to the end of the conference room table to sit by one of the Ellison board members.\n\nAfter so many weeks of prep and so many stressful moments of wondering how this pitch would go, I can't actually believe that it's here. But the feeling I usually get when I'm about to start presenting\u2014 that feeling of tipping over the edge into adrenaline\u2014 is absent.\n\nThe only thing I feel is a sense of urgency. Urgency to get this over with, to get to Lauren, and hopefully not have to see Olivia again. After all, even if we win this, I'll be moving on to the next pitch. Some other sorry executive will have to meet with her.\n\nThat thought, mixed with the anticipation of telling Lauren how I feel, propels my feet forward so I can begin.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~.~ ~ ~ ~ ~ ~\n\n\"I think the thing I'll end on is more of a personal note. I've worked across a diverse set of verticals throughout my career and I've had the opportunity to represent some exciting brands. But it's times like these\u2014 when I'm presented with a truly important moment\u2014 that make me grateful for the work I do. This is so much more than just a brand campaign. This moment represents the future for both the world and your company. And you deserve an agency partner who understands the weight of that. An agency who has a track record of being at the forefront of cultural milestones and solidifying them in the fabric of our society. We don't just believe\u2014 we know\u2014 that Altitude is the best choice to sail into that future with you.\"\n\nI can see by the slightly relieved look on Michelle's face as I finally finish my closing statement that she's happy with how the presentation went. If I wasn't so anxious to get out of this room, I might even feel the same way.\n\nOlivia's face remains as passive as it was the moment I got into the room and all throughout the presentation, which I'm slightly surprised by. Part of me really thought she'd interrupt at some point to throw me off, but she stayed quiet and looked on thoughtfully. At points I even saw her taking notes on a pad in front of her.\n\nMichelle walks back up to the screen and stands next to me. Before she turns her face to the Ellison team though, she gives me a small nod and smile.\n\n\"Thank you, Emma and Jackie. You probably noticed that we only took an hour of our allotted presentation time,\" Michelle says. \"We think it's important that you are able to engage with us as well. So, for the next thirty minutes, we'd like to open up the floor to your team so you can ask us any follow-up questions on what you just heard. And of course, we are always available after if there are additional questions you need to email us.\"\n\n\"Thank you, Michelle. And thank you Emma and Jacqueline for the presentation. I speak for all of Ellison when I say we appreciate the time that went into this,\" Olivia says and it's by far the most professional I've ever heard her voice. \"Gentleman, I'll let you begin with your questions.\"\n\nApparently having her board present makes Olivia behave somewhat because she's not exuding any of the normal domineering personality that she showcased so proudly last time she was here. And for the first time, I almost believe Lauren and Michelle when they argued that this pitch is winnable.\n\n\"My name is Simon Simpson and I've been on the Ellison board for two years. Thank you so much for your presentation. Very intriguing. Within it, you showcased some of Altitude's work that's focused on sustainability. But does the Seattle office specifically have experience in that space?\"\n\nSimon's question was one we prepared for since we knew it would come up.\n\n\"All of the creative and measurement pieces of those case studies came out of the Seattle office, not San Francisco. One of the benefits of working with an agency like ours is the ability to leverage our cross-office resources. We don't limit client work based on geography of staff. But I'd argue that Seattle's true strength and experience, which is in technology, is much more valuable than just having experience in the sole vertical of sustainability.\"\n\nI know my answer is a bit of a spin, but as Simon smiles and leans forward in his chair, I can tell that he's engaged in the conversation.\n\n\"And you think you can get the attention from the right media and influencers with your experience in sustainability? You feel comfortable creating that kind of narrative?\" he asks.\n\n\"The narrative is the easy part. But getting that narrative in front of the right people and making something happen out of it, is different. I think it's better to have a phone number that gets answered immediately than have an expert on the line who never gets through. We have a reputation of being the most diverse agency in the world for a reason. We are adaptable and in every space we've entered, we've taken a fair share of the market. In some ways, I see a lot of similarities between our two companies. Altitude sees the future and we make it happen, just like Ellison.\"\n\nSimon nods and leans back in his chair, but I can instantly see from the look on his face, and the others around the table, that they're eating up everything I'm saying.\n\nOlivia systematically moves down the table, asking each board member if they have anything they'd like to ask. Alan Simpson, Simon's dad, went next, but his question, just like so many of the other ones, are benign. We had prepped for every single one they've asked and if Lauren's ex-wife wasn't sitting at the table, I'd say this was one of the easiest pitches I've ever done.\n\nJackie has been quiet throughout the question-and-answer period, which often happens when we're pitching an executive team or board who care more about the tactical than the creative. It's not until Olivia passes things off to Maddy that Jackie finally has a chance to chime in.\n\n\"While I appreciate the creative ideas you presented here, I also recognize that if we hire you, they will evolve drastically as our teams solidify our narrative,\" Maddy says. \"Since you two are on the development team, we can assume it won't be you on this account. So, who would be leading creative and how can we expect them to differ from the vision you laid out here today?\"\n\nIt's been a while since we've gotten a \"bait and switch\" question from a client since most brand teams understand that there's a team that pitches and a team that actually works on the account. But sometimes clients do want to know that the people they're meeting in the room are the ones they'll actually work with. That's not the case here, but we have also prepped for this kind of question.\n\n\"Our development team works very closely with new team members to transition strategies smoothly,\" Jackie says but I'm looking at Maddy and I wonder if she knows how obvious her eyes are as they roam down my friend's body. \"Every one of our creative teams takes the time to work hand in hand with our clients to make sure the vision you have comes to life. We would tailor who leads the account based on your specific needs and our overall timeline.\"\n\nJackie gave the standard answer we always give, which definitely doesn't answer the question, but Maddy doesn't seem to mind and I can see her giving a small smile to Jackie.\n\n\"Thank you, Jacqueline,\" Olivia says when Maddy doesn't follow-up with any more questions. \"We have three minutes left and I know many of you need to take other calls. Are there any final questions?\" she directs to the men down the table.\n\nI try to catch Michelle's eye for a moment, but she's staring at the Ellison team and won't look my way. But something feels completely off with this whole thing. The fact that Olivia didn't ask one question or even raise one eyebrow doesn't fit with the Olivia I've come to know. It all just feels too easy. A pitch this large shouldn't feel like we've already won. And yet it does. Normally that would feel amazing, but I know better than to trust Olivia to make anything easy.\n\nWhen none of the men at the table have any additional questions, Olivia stands up. \"I'd like to thank you all again for your time and your work on this. We look forward to the future. Michelle, if you could stick around for a moment, I think we can end here.\"\n\n\"Thank you, ladies,\" Michelle says to both Jackie and me when the men around the room start standing and chatting amongst themselves. \"I'll come find you both once the Ellison team is gone. Good work.\"\n\nA pitch is always a performance and you never know when the audience is watching so I simply give Michelle a polite nod and head back to my office. I assume Jackie will come by later to debrief, but for now, we both know we can't be seen gossiping.\n\nAs I finally exit the room, I let out one sigh of relief. Despite the weird feeling I have in my stomach, I'm beyond relieved that the Ellison pitch is finally over.\n\nChapter 26\n\nI don't really know what to do with myself once I'm back in my private office. After so many weeks of pitch prep and pushing all other accounts aside, I don't really have any work to do, which doesn't help distract me from what just happened.\n\nI desperately want to go find Lauren, but I can't with Olivia still around\u2014 something that seems to be becoming an increasingly common occurrence.\n\nI didn't close my door when I got back and I've only been sitting for what feels like minutes before I see Olivia striding into my office.\n\nWhen she walks in, I immediately stand up so she doesn't feel the need to get comfortable, but as I do it, I realize that it just looks like a sign of respect. I decide to stay standing so it doesn't look like I was rising just for her entrance.\n\n\"I've come to deliver my compliments on a job well done,\" she says as she does a fake, slow clap.\n\n\"Thank you. Can I help you with something, Olivia?\" I ask and now that we're alone, the anger I kept out of my tone when Michelle was around seeps in.\n\nIt's getting harder and harder to separate \"Olivia the client\" from \"Olivia the immeasurably frustrating ex-wife of my girlfriend\" and suddenly, everything from last night comes rushing back to me and I'm not just annoyed by Olivia anymore. I'm fucking pissed.\n\n\"Can't a client just come by to say a farewell to her favorite new executive?\" she asks in a fake, sugary voice.\n\n\"Or maybe you came by so you could try to sabotage my relationship again. At what point can I expect you to text her and let her know you're in my office?\" I respond.\n\n\"Still in a relationship then? Clearly, she's changed. That kind of thing would have set her off in the past. Or have you not experienced her intolerable insecurities yet?\"\n\n\"You don't know the real Lauren.\"\n\nI'm not a violent person\u2014 in fact, I've never touched anyone. But the low, condescending laugh Olivia lets out makes me question that.",
        "\"I know her better than you ever could, Emma. Lauren just wants to feel validated. A product of coming from parents like hers, I suppose. And it doesn't matter where she gets that validation. At the office or from a pretty face...or both. She needs it to survive.\"\n\nOlivia stares at me with a smile that looks challenging and it's obvious she knows I can't push the client boundaries any more than I have. If I say what I really want to say, there's a good chance she'll just march over to Michelle's office and pull the account. But I'm also not going to give her the satisfaction of reacting. I don't need Olivia to tell me who Lauren is and I'm not about to play this game with her.\n\nI try to keep a passive face, but I can tell the muscles in my face are tight as I swallow all the words that want to come tumbling out.\n\n\"Oh, you poor thing. You're in love with her,\" she says when I continue not to say anything and it grates on my last nerve how much her voice is dripping in what sounds like disdain. \"This will be hard then.\"\n\nMy eyes snap back to her own teasing green ones. \"What does that mean?\" I ask.\n\nThis entire day has felt like some kind of trap and the small smile that I can see slowly growing on Olivia's lips doesn't help to erase that feeling.\n\n\"Just remember what I said last night. What you did in there today was very impressive. No woman is worth giving this up for. But especially Lauren. I'm the only person who ever stood by her side. And look how she treated me.\"\n\nNow it was my turn to laugh. \"You poor thing,\" I say, mirroring her words form before. \"And you had nothing to do with the downfall of your marriage?\"\n\n\"Well, it doesn't matter now. You were right last night. We all need move on. And thanks to you, now I can. I wasn't the only one impressed today. The Ellison Board of Directors have made it clear who their choice is.\"\n\n\"How does that help you move on?\" I ask tentatively, not knowing where Olivia is going with this.\n\n\"I think you called it a win-win situation. And something about having you at my fingertips?\" Olivia says before glancing at the clock on my wall. \"And as much as I'd love to stand here and stare at that face all day, I have to go and I think you have a meeting with Michelle.\"\n\nOlivia gives me a final wink and moves over to the door. Everything in me is screaming that I should just let her walk out. And then I can go see Michelle and see if she can decipher the hidden meaning behind Olivia's statements, but every lesson I've ever learned in client decorum goes out the window.\n\n\"Do I? I don't believe I shared my calendar with you,\" I snap back.\n\nOlivia stops when she gets to the door and turns around. In any other situation, my biting tone and obvious sarcasm would have set a woman off. But I can visibly see Olivia's eyes darken with desire and her lips twist into a smile.\n\n\"Such bold sass, Emma. She must have so much fun with that mouth of yours. I know I would. See you soon, Ms. King.\"\n\nAnd with a final flick of her eyes down my body, Olivia walks out of my office. In all my years of working in the agency world, there's never been a moment where I've wished we'd lose a pitch until now. Because at this point, I don't care if there are some slight repercussions for that loss. As soon as Olivia is out of my life, the better.\n\nI take a few minutes and wait in my office until I know Olivia isn't lingering in the hallway before I head out to find Michelle. I have a feeling she knows more than she's told me.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~.~ ~ ~ ~ ~ ~\n\nBased on what Jackie told me earlier I knew that Lauren was around, but given the fact that Olivia was likely still lingering somewhere, the last place I expected to see her is sitting in Michelle's highly visible office.\n\nIn any other situation, I would wait outside Michelle's office until she was done with the person she had in there. But Olivia's words are still ringing in my head and I have a feeling that Lauren's presence in Michelle's office is linked to Ellison.\n\nInstead of waiting for them to be done, I push open Michelle's office door and walk in.\n\n\"What's going on?\" I ask Michelle.\n\nLauren has her back to me and I can see her straighten slightly when she hears my voice, but she doesn't turn around.\n\n\"Emma, this is a private meeting,\" Michelle says.\n\n\"It's fine, Michelle,\" Lauren says and stands up, but she's continuing to look at Michelle and not me. \"It sounds like we're done here.\"\n\nMichelle gives Lauren a serious look before she nods her head once. As Lauren moves towards me, I can start to smell her perfume and I have to put my hands behind my back so I stop myself from reaching out as she gets closer to the door.\n\nShe stops in front of me before she leaves the office, but the expression on her face isn't the defensive, angry one I saw last night. If I had to come up with a word to describe how she looks in this moment, I'd say she's heartbroken.\n\nWhen she sticks out her hand for me to shake, for a moment, I can only stare down at the odd, professional gesture. But the need to feel her skin on mine again wins out and I put my hand into hers. And even though it's just a handshake and not nearly as close to the intimate touches we've shared before, my body feels as if it comes to life the moment my fingers touch her own.\n\nWhen Lauren's lips part slightly, I can tell that she feels the same spark that I do. But just as quickly, she closes her mouth and pulls her hand away from mine.\n\n\"Congratulations, Emma,\" she says. \"I hear you were wonderful. And I'm not surprised.\"\n\nBefore I can respond, Lauren is out of the office and Michelle is speaking to me. I'm so distracted by what just happened and where Lauren might be off to that I don't hear a thing being said to me as my mind battles between running after the woman I love and speaking to my boss.\n\n\"Emma?\" I finally hear Michelle say. \"Will you please close the door and come sit down?\"\n\nAs if in a trance I close the door and walk over to the chairs across from her desk. I still want to go after Lauren, but something about Michelle's tone is keeping me here.\n\n\"First, let me reiterate what Lauren just said. Congratulations. What you and Jackie accomplished over the past month has been extraordinary and it's not lost on anyone here how instrumental you were in the success of this pitch. I'm happy to be the first person to tell you that we won.\"\n\nThere's a beat of silence before her words really sink in. And maybe that's because Michelle's delivery was so monotone. She doesn't seem happy we won, in fact, she's acting as if she's reading me some horrible news.\n\n\"We won? Isn't that a good thing?\" I ask when Michelle just continues to stare at me with a furrowed brow.\n\n\"It is. A very good thing for Altitude and this office. This win guarantees that Seattle will lead in revenue globally for the foreseeable future.\"\n\n\"So that's it? We just won? Olivia Ellison is just handing us the business?\" I ask, but my words are dripping in disbelief and I can already see from the look on Michelle's face that there's more.\n\n\"No. I wouldn't say that she's just handing us the business. She has two stipulations.\"\n\n\"Of course she does. What are they? That one of us name our first child after her?\"\n\nMichelle doesn't laugh at my joke, which is fine since I wasn't really being funny. At this point, I would put nothing past Olivia.\n\n\"The first is that you need to lead the account. A large team would be put under you, but you would be the direct client contact for both Olivia and Maddy.\"\n\nIf Michelle wasn't looking at me with such a grim expression, I might have even thought she was the one making a joke now. The idea of me leading an account is completely ridiculous considering my role at this company.\n\n\"I'm not an account person, Michelle,\" I say slowly as if speaking to someone who's never been inside an agency.\n\n\"You spent years on client services,\" Michelle says but her voice doesn't hold much conviction.\n\n\"And I left for a reason.\"\n\n\"This would mean a promotion for you, Emma. You'd be one of the youngest Senior Vice Presidents on the West Coast.\"\n\n\"But her stipulation isn't just a small condition. It changes the entire trajectory of my career. That's like asking Jackie to suddenly leave creative and join Sarah in analytics.\"\n\n\"Not quite that drastic.\"\n\n\"So, either I take on the Ellison account and forgo all the moves I've made in the past two years, not to mention the team I've built around me, or what? I'm fired?\"\n\n\"Emma, this is only one project. It will take your full attention, but it will be over eventually. It's not a life sentence to client services.\"\n\n\"It's a two-year contract with the option to extend,\" I argue and I can't help how loud my voice is getting now. \"That's two years of Olivia owning my life.\"\n\nSuddenly Olivia's comment about fingertips makes sense. I was the one who gave her that phrasing in the first place. But last night when I said she'd have an Altitude executive at her fingertips, I obviously didn't mean me. I don't work with clients like that. I pitch for new clients.\n\n\"A client doesn't own your life, Emma. That's not the kind of agency we run, not matter who the client is.\"\n\n\"Then it's clear you don't know Olivia Ellison like I do,\" I snap back. \"I can't wait to hear what her second stipulation is.\"\n\nI've never spoken to Michelle like this, but I've also never been this mad at work. I know my chest is visibly rising and falling and I try to focus on my breathing so I don't scream.\n\n\"We've let Lauren go,\" Michelle finally says.\n\n\"What?\" I respond in a whisper.\n\n\"This was always a possibility, but one we did try to avoid. We thought getting Lauren out of the Austin office would help, but Ellison found a way around that. And ultimately Altitude can't turn down this kind of a contract. Not for any employee.\"\n\nLauren's face before she left Michelle's office flashes before my eyes and the anger I felt only moments before rises exponentially. But as I sit there looking at Michelle's hardened face, suddenly none of this is surprising.\n\n\"Can we just be honest now? Olivia found a way around it. Not Ellison. And you acquiesced. So, I'm having trouble understanding what you mean when you say that's not the kind of agency we run. Because it sounds like you just gave in to a grossly unethical client request.\"\n\n\"I didn't make the final decision.\"\n\n\"Do you know how bad this will look for the agency and probably Ellison if this gets out?\"\n\n\"It can't get out.\"\n\n\"How can you guarantee that?\"\n\n\"The only internal people who know is me, the leadership team, Guy, Olivia Ellison and now, you. The NDA Ellison had us sign thoroughly protects the process of their final decision.\"\n\n\"And what about the woman you just fired? How do you keep her from talking?\" I ask, waving my hand behind me to the door Lauren went out not too long before.\n\n\"Lauren is smart. She knows what happened here and honestly, she didn't seem shocked by it. And on paper, she's not being let go because of Olivia. As you already said, we can't exactly make that kind of decision because of a client demand.\"\n\n\"What excuse did you come up with then?\"\n\n\"We didn't need an excuse. We found out from Olivia that Lauren has entered into a relationship with someone junior to her on her own team. And Lauren didn't deny it.\"\n\nIf there was any blood left in my face, it's all drains as Michelle speaks. Though this is the thing that should probably have surprised me the least. Ever since Jackie told me that Olivia knew about Lauren, I've been waiting for something like this to happen.\n\nBut Michelle's deliverance of the news holds no judgement or scorn, which seems odd considering she's sitting across from the person who entered into the relationship with Lauren.\n\n\"Lauren is protecting whoever it is and Olivia doesn't seem to know the person,\" Michelle continues. \"But Lauren put us all in a vulnerable position. The fact that Olivia even found out and was able to use it against her was careless.\"\n\nI'm trying to keep up with every new piece of information Michelle is telling me and even with my mind racing, I feel an immediate defensiveness over Lauren's actions. I'm obviously biased for being part of it, but Lauren isn't some careless executive sleeping her way through an office. Olivia only found out because the person Lauren's sleeping with is me.\n\nAnd yet, Lauren didn't tell Michelle that. She protected me when she could have easily told Michelle the truth and probably help her own case. It's not like Lauren's sleeping with some junior account coordinator. We're both in leadership roles. Olivia's claim that Lauren only cares about her career and my own insinuation last night along the same lines doesn't hold much weight in light of this recent revelation.\n\nAnd maybe Lauren knew it was a lost cause and there wasn't any point in ruining my career as well as her own. But I saw the look on her face when she left Michelle's office just a bit ago and I know the reason she kept quiet was much more intimate than that.\n\nSuddenly everything clicks into place for me and the last place I want to be is sitting here in this office. I need to find Lauren.\n\n\"Olivia lied to you,\" I finally say.\n\n\"What do you mean?\" she asks.\n\n\"She absolutely knows who Lauren is in a relationship with.\"\n\n\"How do you know that?\"\n\n\"Because the person Lauren is protecting is me, Michelle.\"\n\nI can see a realization finally hit Michelle's face as she regards me with a serious expression.\n\n\"I see. And you think Olivia knows that?\"\n\n\"I know she does. We've all been played.\"\n\nChapter 27\n\nThe first thing I see when I leave Michelle's office is Jackie and considering the daze I feel like I'm in, I'm instantly grateful.\n\n\"I need to find Lauren,\" I can hear myself say to her before she even speaks.\n\n\"I know. I spoke with her before you left. I'll drive you.\"\n\nI can vaguely feel Jackie leading me down the elevators and across the street to her car, but my body feels like it's on auto pilot and my mind is miles away. Jackie seems to sense that and doesn't say anything as she pulls her car out and onto the busy road.\n\nIt's not until we're pulling up outside of The Fairmont Hotel that I seem to shake myself out of my stupor and am finally able to turn to Jackie and speak.\n\n\"I need to see Lauren, Jackie. I need to go to her place.\"\n\n\"She's not there, Ems. She's here.\"\n\n\"Why is she here?\"\n\n\"Maddy thinks Olivia is heading to Lauren's apartment before going to the airport.\"\n\n\"Maddy told you that?\"\n\nI know I'm just repeating the words Jackie is saying but I'm having trouble wrapping my brain around Lauren being here because of Maddy...and well, Jackie too.\n\n\"Turns out Maddy's not as loyal to Olivia as we all thought. Or maybe I'm just that good in bed. Hard to say. But she didn't know Olivia had planned to leverage the pitch to have Lauren fired and once she found out, she wasn't happy.\"\n\n\"How do you know Lauren's here?\" I ask, looking out the window to the lobby doors of the hotel, almost as if I'll see Lauren just appear there.\n\n\"I caught her before she left the office. And I told her I've never seen you as happy as you are with her and some things are bigger than Altitude. I asked her not to run away from you before you've had the chance to talk,\" Jackie says as if it's the most casual statement in the world. \"She told me where you could find her.\"\n\nJackie's words, the adrenaline from the pitch, and the worry over losing Lauren hits me all at once and I can feel tears beginning to well in my eyes.\n\n\"Nope. None of that,\" Jackie says, reaching into her glove compartment and pulling out a small pack of tissues. \"Fix your face. You're about to declare your love for that woman in there. Don't waste tears on me. Look, you were with Michelle\u2014 and soon I need to know what happened in there\u2014 but Lauren was leaving and I knew you had things to say. So, I ran interference.\"\n\n\"I love you, Jackie Silva,\" I say as I launch my body across the car so I can hug her. But with the seatbelt still holding me in, I don't manage to go very far.\n\nJackie hugs me back as best she can in that position. \"Yeah, yeah. I love you too. Now go. Make up. Make love. Make babies. Whatever it is you kids do these days.\"\n\n\"How about just the first two things?\" I ask with a smile before moving out of the car. Before I close the door, I lean back in. \"Thank you, Jackie. And please thank Maddy for me.\"\n\n\"I will. Oh, and Ems?\" she says before I can close the door. \"She's in room 902.\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~.~ ~ ~ ~ ~ ~\n\nAs I enter The Fairmont, the first thing I feel is relief that Lauren chose this hotel and not The Four Seasons. I assume she knows that Olivia is staying there, but beyond that, that hotel has also just been tainted by the CEO's unwanted presence.\n\nBut as I get closer to the elevators, I begin to feel a mix of nervousness and excitement. I hope that Lauren's willingness to tell Jackie where I could find her means she actually wants to see me. And it's that small sliver of hope that propels me into the elevator and to her door on the ninth floor.\n\nI knock and after a moment, Lauren is standing there looking as beautiful as she ever has. Apparently even being fired can't affect her perfect face.\n\n\"Jackie told me I could find you here,\" I say tentatively.\n\n\"I didn't know for sure if you'd come.\"\n\nI can't tell from her tone if it's good or bad that I'm here, mainly because she just continues to stand there in the doorway, not moving to let me in.\n\n\"Can we talk inside?\" I finally ask.\n\n\"Yes, come in.\"\n\nDespite it being a different hotel, the room we move into is so similar to the one where we spent our first real night together and I wonder if Lauren remembers it like I do. So much has happened since then and when I turn around to finally face her, Lauren looks as nervous as I feel.\n\n\"Do you want something to drink?\" she asks and when I shake my head, she leans against the arm of the sofa.\n\nShe's wearing the same thing she had on in the office, but the casual grey t-shirt and jeans makes me think she hadn't planned on going in today.\n\nEverything I had planned to say on the elevator up leaves my mind as I stare at her. Because I don't want to talk about Olivia. I just want to go up to her and put my arms around her.\n\n\"I'm really glad you came here,\" she finally says.\n\n\"I didn't know if you would be.\"\n\n\"I was horrible last night,\" she whispers.\n\nI'm surprised by her statement, but when I look at her, I can also see how much more open her face looks than it did last night.\n\n\"I was too,\" I reply. \"I should never have gone. I was stupid. But I need you to know that I wasn't trying to lie to you.\"\n\n\"I shouldn't have reacted that way. I know you wouldn't sleep with her. I guess I've wanted our relationship to work so bad that I haven't really told you how deep some of my trust issues go. Olivia knows that. It's her I should have been mad at.\"\n\n\"You don't have to be perfect, Lauren. I want to know all of you and not just the pretty parts. You were right and I should have listened to you about her. But I also want you to be able to tell me more about your past.\"\n\nI can see Lauren visibly swallow and the light sheen that's now coating her eyes makes me think she's trying to hold in tears. The sight makes my own throat tighten.\n\n\"Has she contacted you?\" I ask.\n\n\"I turned my phone off when Maddy told me Olivia was heading to my place. I assume Michelle told you?\"\n\n\"Which part? That you got fired?\"\n\n\"Is there more than one part to this?\"\n\nI'd rather continue talking about our relationship, but I also know that I need to tell Lauren the rest of what happened with Michelle.\n\n\"They didn't just fire you,\" I say. \"Olivia also made sure that I'm her account lead. Her sole account lead.\"",
        "Lauren opens her mouth for a second before she closes it again. She repeats that action one more time before she finally speaks.\n\n\"But she can't do that.\"\n\n\"She also shouldn't be able to get you fired. But she did that too.\"\n\nLauren let's out a humorless laugh and pushes herself off the couch so she can pace in front of me.\n\n\"There it is. I was wondering what else she had up her sleeve. I knew getting rid of me wouldn't be enough. Not when she found out about you. She had to put you directly in her clutches. She knows it will destroy our relationship if she's calling you day and night with client demands,\" she says, her voice getting louder and her pacing more aggressive. \"She can't just let me love someone who's not her.\"\n\nEverything she just rattled off has already gone through my mind, but beyond that, I can't focus on anything except her last statement.\n\n\"You love me?\" I ask in a quiet voice.\n\nLauren stops pacing immediately and turns to me. And as she looks at me, I can see her face visibly soften.\n\n\"Of course, I love you, Ems.\"\n\nSuddenly all the drama of the day seems insignificant against this declaration. Lauren loves me and now I can't wait a moment longer to tell her just how I feel.\n\n\"Then I think should tell you I quit,\" I say.\n\nThat was obviously not the response she was expecting, evidenced by the slight widening of her eyes.\n\n\"Why?\" she whispers.\n\n\"Because I wasn't going to work for a company that did that to the woman I love.\"\n\n\"You love me?\"\n\n\"I should have told you a while ago and then we could have avoided this mess. I should have told you there could never be anyone else for me. Or any job that mattered as much. I love you, Lauren.\"\n\nLauren finally does what I've been craving since I arrived and walks up to me so our bodies are almost touching. She brings her hands up and cups my face.\n\n\"I think when it comes to this pitch, it was always doomed to get messy. At least now we don't have to have an awkward conversation with HR.\"\n\nI move my hands around Lauren's back and pull her in closer to me. Her hands drop from my face down to my shoulders and our bodies are now pressed fully against each other's.\n\n\"I have questions,\" I say.\n\n\"Ask them,\" she replies. \"But kiss me first.\"\n\nThis seems like a fair compromise so I close the small space between our mouths and initiate a kiss that I can instantly feel in every part of my body. It's as if we're both trying to put all of our feelings into this embrace and I don't know how long we're standing there kissing before we finally break away again.\n\n\"Why didn't you tell Michelle it was me?\" I ask in a breathy voice.\n\n\"Once I found out that Olivia didn't tell her, which makes more sense now that I know she requested you on the account, Michelle didn't need to know. And I thought it might save your job.\"\n\n\"Is that all?\" I ask.\n\n\"Are you just fishing for me to tell you that I love you again?\"\n\n\"Maybe,\" I reply with a smile.\n\n\"I love you. Better?\" she asks and leans in so she can place a quick kiss on my cheek.\n\n\"Much.\"\n\n\"What Olivia said last night was true. My job used to be the most important thing in my life. Which is a sad statement on my marriage,\" Lauren adds. \"But it's not anymore. She couldn't understand that since she never experienced it with me. I should have told you that last night.\"\n\n\"But I still don't understand why Olivia went through all this. Why not just leverage the retainer to get you fired from the start?\"\n\n\"She really couldn't just fire Altitude without burning a bridge with her board. But I think she was always going to at some point. With Olivia, there's always a long game. This route got her everything she wanted\u2014 the approval of her board and me out of the Altitude picture. Finding out about you was just the icing on the cake for her.\"\n\n\"She didn't get everything,\" I say.\n\n\"She certainly didn't.\"\n\nLauren brings her hands back up to my face and pulls me in for another long, deep kiss. And it's maybe the first time we've ever kissed where I just feel free to love her. There's no agency or ex-wife or threat of HR looming over us this time. Now it's just us. Allowing our mouths to explore each other's as if for the first time.\n\nAnd finally, it feels like we can have a future. One that is unclear and a little scary considering our new circumstance, but one that is finally filled with hope.\n\nWhen our lips finally part, I pull back so I can look into my favorite green eyes again.\n\n\"You know this means we're both unemployed and just burned a bridge with the largest agency in the world, right?\" I ask.\n\nLauren gives me a small smile before tugging on the end of my hair.\n\n\"I have a feeling we'll figure something out.\"\n\nEpilogue \n\n \n\nOne year later.\n\n\"Over the past hour, we've told you who we think this company is. As we've showcased, we believe you are the future of blockchain technology. You haven't seen the results you've wanted from your current agency partner, and that's understandable considering their size. A new product like this needs attentive and innovative thinking. Not a turn-key strategy that has been done hundreds of times before. Now it's time to decide who you believe you are and what you can accomplish given the right spotlight. But first, you need to decide who it is that can help get you there.\"\n\nLauren slowly walks down the length of the table and makes eye contact with each executive sitting there as she speaks. I've now seen her do this multiple times, but there's still no better thrill than watching the woman I love capture a room like this.\n\nI glance over next to me to look at Jackie's reaction. She may not be as turned on as I am watching Lauren do her thing, but she certainly has a look of respect on her face.\n\n\"I understand more than most the temptation to go with a global agency. There is a certain feel of glamour when you're in their ranks. In fact, the three of us have all worked for some of the largest agencies in the world, one of which you currently work with,\" Lauren continues and motions to the table where Jackie and I are sitting. \"The reason we left, and the reason we started this firm was so we could do what we could never do in the agency world. We believe that each brand needs to be treated as unique and not get lost in the shuffle of billable hours and useless meetings. We create tailored strategies that are a fit only for you. And that's why we believe so strongly that Callahan &amp; King is the right firm for SQ Virtual. You are unique. And deserve to be treated as such. Thank you for your time. I'll open up the floor for questions now.\"\n\nLauren joins us at the table so we can begin answering the SQ team's questions, but as she does so, I can feel her hand lightly squeeze my leg under the table. The gesture wasn't sexual at all and I know exactly what she meant by it. If this question-and-answer section goes smoothly, this account is ours.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~.~ ~ ~ ~ ~ ~\n\n\"That felt like a win,\" I say when we're finally across the street from the client's building and can speak freely.\n\nThe three of us gather around Lauren's car so we can have our normal post-mortem on how we thought the pitch went.\n\n\"Oh, that was most definitely a win,\" Lauren says. \"You were both really great. That was an absolute homerun.\"\n\n\"Now, why don't I feel included in that statement when you only look at Emma?\" Jackie scoffs from beside me.\n\n\"You were magnificent, Jacqueline,\" Lauren says, finally moving her eyes over to Jackie's face, who immediately rolls her own at Lauren's full use of her name.\n\n\"At some point that joke is going to get old,\" Jackie responds.\n\n\"And yet, it hasn't yet,\" Lauren replies with a smile I know is meant to annoy Jackie.\n\nI know I need to interrupt before this gets too far or we'll be here all day with them bickering. Over the past year the two of them have become more like sisters than friends. Which I'll take, but at times, they act like they're twelve-year-old kids fighting over a remote. Though, Jackie and I are often the same way so maybe my friend just brings it out in people.\n\n\"Ok, children. Let's focus on the real point here. If we win this pitch, that's the second piece of business we've taken from Altitude and the fourth pitch we've won over them,\" I say.\n\n\"We're not keeping track. We run a very different company than Altitude,\" Lauren replies. But when both Jackie and I give her a somewhat disbelieving look, she gives a small laugh. \"Ok, maybe we're keeping track a little.\"\n\n\"You literally have a tally board in your office that maps out our wins. I believe there are even multiple columns\" I respond but reach out to hold her hand so she knows I'm just teasing.\n\n\"Another win means that I'm that much closer to buying a boat that can eat Michelle's boat,\" Jackie says.\n\n\"As long as we get to come aboard whenever we want,\" I reply.\n\n\"I'll have to ask the missus. She really doesn't like to share time with me and we'll probably be busy having sex all over that thing,\" Jackie responds.\n\n\"Or I'll just text her myself and tell her you won't let us on your fancy yacht that you only bought because we so generously offered you better employment with a higher salary,\" I sass back.\n\n\"Or I can just go back to Altitude and take my brilliant creative ideas with me,\" she replies quickly.\n\n\"No, please don't do that. We need you,\" Lauren finally chimes in. \"I get sick on boats anyway.\"\n\n\"Aw, you do babe? I didn't know that. That's so cute,\" I say and lean in so I can kiss her cheek.\n\n\"You two are obviously going into gross mode again so I'm going to go. Besides, Ems, how did you not know that about your own girlfriend? Maybe you two need to be talking more and fucking less,\" Jackie says, pointing between us in an accusing way.\n\n\"Funny, I thought you said you were going,\" I respond. \"Will we see you back at the office?\"\n\n\"Nope. Maddy told me not to pick her up from the airport, but I'm going to surprise her by parking and being at baggage claim when she gets off the flight.\"\n\n\"How chivalrous,\" Lauren jokes.\n\n\"They don't make em' like me anymore. You missed out,\" Jackie replies to Lauren.\n\n\"Good thing there's a Texas girl for everyone,\" she says back with a wink.\n\n\"Maybe not for Olivia. She's lost two of you now,\" Jackie says.\n\n\"Something tells me she has more to worry about than women right now,\" Lauren replies.\n\n\"Can we not use the O word right now? The day was going so well,\" I say.\n\nI'm only partly joking\u2014 even a year later, the subject of Olivia Ellison makes me cringe. But as Lauren has reminded me over and over again, she's just part of our past. And Olivia has a lot more to worry about than trying to interfere with her ex-wife's life.\n\nWe lost our inside track on Olivia the moment the pitch was over and Maddy quit. But Maddy has told us that Olivia's fight with the board for power at Ellison goes much deeper than her choice of PR agency. And according to Sarah, who still works at Altitude, Simon Simpson has taken over as their client contact instead of Olivia.\n\nI'm sure Olivia wasn't happy when she found out Lauren offered Maddy a role at our new firm leading client services\u2014 one Maddy jumped on immediately\u2014 but it also sounds like she has bigger issues than losing an employee.\n\n\"All O words or just that one?\" Jackie asks. \"Because there are some really great O words. Like orgasms. Or oranges. Or or. You can't take or out of our language options. That's just illogical.\"\n\nThere's a beat of silence after Jackie stops talking when Lauren and I just both stare at her. I will forever love Jackie's ability to smooth over any awkward moment and make it better\u2014 even if what she says is completely ridiculous.\n\n\"Just the one,\" I finally say.\n\n\"Phew. Because that would stress me out,\" she replies. \"Anyway, I'm off to pick up our new employee. I'm the Callahan &amp; King Creative Director and HR department apparently. I should get a raise.\"\n\n\"You can't be HR if you're about to go have sex with said employee,\" I say.\n\n\"And you really think you can say anything to me about sleeping with an employee? You slept with the boss first,\" Jackie says before walking down the parking lot to her own car parked just a few spots away.\n\n\"No regrets!\" I shout at her before she gets in her car and can't hear me anymore.\n\n\"None?\" I hear Lauren asks beside me.\n\nWhen I turn my head, I can see her watching me with a soft look. I've grown so addicted to the green of her eyes, that I could probably draw them from memory, mapping out each specific shade they take. Right now, in the late afternoon light, they're my favorite hue. A seafoam that's soft and light and always the color her eyes take when she seems content.\n\n\"None,\" I say before moving in to place a light kiss on her lips.\n\nI don't deepen the kiss considering our soon-to-be-clients are just a street away, but when we break apart, neither of us seems to be in a hurry to move our faces away from each other.\n\n\"I could never regret meeting you, Lauren,\" I whisper.\n\n\"Good. Because I don't plan on letting you go,\" she says and lightly tugs on the bottom of my hair. \"Back to our office?\"\n\n\"I love when you call it that,\" I respond and reluctantly unwrap myself from her so I can get into the passenger seat.\n\n\"That's what it is,\" she says over the top of the car.\n\nI give her a soft smile before hopping in. \"Then yes, back to our office.\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~.~ ~ ~ ~ ~ ~\n\n\"Are we done for the day?\" Lauren asks as she motions for me to enter the elevator ahead of her.\n\n\"Well, the pitch is over and it's Friday afternoon. Let me ask the boss if we can be done,\" I say before pretending to think for a moment. \"There we go! She says we're done.\"\n\nWhen Lauren pushes the button for the 27<sup>th</sup> floor, I can feel the same excitement vibrating through my body I've felt every time I've seen that little button light up. I'm sure one day I'll just get into the elevator like any normal person, but for now, every little thing about our firm excites me, even the elevator that takes us back to our floor.\n\n\"You didn't ask the other boss,\" Lauren responds, moving closer into my body.\n\n\"Considering she's the one who asked if we're done in the first place, I assumed it was implied.\"\n\nI lean back against the elevator car and Lauren wastes no time setting her laptop bag down and pushing her body into my own. We're often charged after a pitch and I can tell that Lauren is feeling that now.\n\n\"It's dangerous to assume. But I'll let it go since I have a present for you,\" she says.\n\nLauren's lips are so close to my own and I've become more than addicted to the sweet smell of her breath. I can feel my eyelids grow heavy as I inhale her scent and attempt to capture her lips with my own.\n\nLauren doesn't stop me, but the ding of the elevator reaching our floor does and suddenly I'm less excited by the contraption.\n\n\"What's the present?\" I ask as she pushes her body off of mine and moves out of the elevator.\n\nBut as I get closer to the glass doors that will lead us into our office, I can already see something is different. Usually, the office is brightly lit and there's a bustle of activity from the handful of people we have on staff. Most of the office is an open-floor plan, so even before you enter the doors, you can see people working at their desks through the glass.\n\nBut right now, the lights are off and the place looks empty. Even Katie, our office admin, isn't sitting at her desk right inside the front door.\n\n\"Where is everyone?\" I ask. \"I know we said we'd cut out early, but it isn't that early is it?\"\n\n\"Stop asking questions,\" Lauren says and walks through the glass doors.\n\nI follow her through the dark lobby and across the office. The place is starting to come together, but even in the dark I can tell that we still need to fill it out with a lot of furniture and art. When we first started on our own, we mainly worked out of coffee shops and Lauren's apartment, which soon became our apartment when my own lease was up. But after we won a few accounts, it became clear we'd need a bigger space.\n\nOnce Jackie came on board, the three of us looked for a location that would allow some growth but would also maintain the boutique feel we want. We prioritized getting the lobby and conference room furnished and decorated in case we hosted client meetings. But the rest of the office is still clearly coming together.\n\nLauren heads to the back of the office space to where the three private offices stand. Jackie insisted that my office couldn't be right next to Lauren's for \"professional reasons\" so Lauren sits in the far corner one, Jackie is in the middle office and I'm in the other corner. It would be mean to tell Jackie that Lauren and I would be taking the corner offices anyway, so I just let her go on believing that her logic makes sense.\n\nSuddenly, Lauren stops walking and turns around to me. \"Close your eyes,\" she says.\n\n\"What? No blindfold, miss?\" I say in a flirtatious voice while also doing as she says and closing my eyes.\n\n\"We'll deal with that mouth later, darling. Now follow my lead,\" she responds.\n\nI can feel her gently grab onto my arm with one hand, while she places the other hand on my lower back. I can tell from the direction she's leading me that we're heading to my office and not hers.\n\n\"We've been busy,\" she starts to say in a low voice by my ear. \"And you've spent so much time getting the rest of the office ready. But I thought you could use something nice as well. Open.\"\n\nThe first thing I notice when I open my eyes are what looks like a hundred candles flickering around the office.\n\n\"How did you light candles?\" I ask.\n\n\"I had some help while we were gone.\"\n\nI forget the next question I had about the candles when I see a trail of rose pedals leading to the desk. And behind the desk is a brand-new office chair, replacing the fold-out one I had been using up until today.\n\n\"Every powerful executive has a good chair,\" Lauren says. \"Plus, an office chair is the first location I ever kissed you. Will you try it out for me?\"\n\nBefore I move over to the chair, I turn my head to hers and place a kiss on her lips. \"Thank you. Only you would light candles and spread rose petals just to give me a chair.\"\n\n\"There's more. Sit.\"\n\nWhen I see the nervous look on Lauren's face, I swallow my next question and walk the few steps over to the chair. Now that I'm sitting, I can see that the candles are all over the office and when my eyes lift up, Lauren's face is cast in a soft glow. She looks so beautiful, but when the light catches her eye and I can see a faint glossiness to them, I know she's on the verge of tears.\n\n\"Baby, what's wrong?\" I ask and begin to stand up before she puts her hand out to stop me.\n\n\"No, stay, please. I'm fine,\" she says and then takes a deep breath before giving me one of the smiles that always makes my body feel weak with want. \"I'm more than fine, Ems. And I know that to most people, an office space wouldn't be romantic. But it's where I first ever laid my eyes on you. It was in an office when I first saw that spark behind those beautiful blue eyes. It's where my craving for you began and grew into an insatiable need. It's the place we had our first kiss...and other things. And now we're here. We've built this firm together. And so, this office is the most romantic place I could ever dream of. Because it's our future. And it just felt fitting to do this here.\"\n\nEvery day since I've met her, Lauren has shown me more and more romantic and intimate sides of her, but right now feels different. Lauren has said many similar things to me over the past year, but the way her voice is shaking makes me think something deeper is happening. And as she begins to bend down onto one knee, what's different suddenly clicks.",
        "\"Lauren, what are you doing?\" I ask in a whisper.\n\n\"For a long time, I didn't trust that someone could love me like you do. But I do trust it. And I want to show you how much love I can give you back. For the rest of our lives. Emma King, will you marry me?\"\n\nI've never been asked an easier question, but I'm also so surprised by the sudden turn of events and moved by her words that all I can do is sit there as tears stream down my face.\n\n\"Ems? You need to say something now,\" she says.\n\nIn all the time I've known her, even early on when we went through some intense stuff, I've never seen her look so uncertain. And I can feel my heart clench at the sight. Because if there's anything I'm certain of, it's that I want Lauren Callahan by my side. For the rest of it.\n\n\"Yes, Lauren. Yes. Yes. Yes.\"\n\nI'm out of my chair in a second and at the same time Lauren stands up from her spot on the floor. She takes the gorgeous solitaire diamond out of the case and holds it up for me.\n\n\"May I?\" she asks.\n\nI hold my finger out for her and Lauren easily slides the ring on. When I look back up at her face, I can see tears streaking it that mirror my own.\n\nThere are so many things I want to say but before I do, I throw myself into her body and capture her mouth with my own.\n\nShe lets out a small laugh as she puts her arms around me so we don't fall but then our kiss deepens and we're both lost in a passionate embrace of lips and tongue.\n\nWhen we finally both need to breath, our mouths separate and I lean my forehead against hers, not willing to lose contact.\n\n\"When did you plan all this? Did you order the entire office to go home early?\" I ask.\n\n\"I promise you that nobody complained. And Jackie helped me coordinate.\"\n\n\"Jackie knew?\"\n\n\"Jackie's the first person I told. She even helped me pick out the ring. Well, actually, she was there when I picked it out. She was actually pretty useless.\"\n\n\"That sounds about right.\"\n\n\"But she and Maddy want to go out for dinner later to celebrate our engagement and Maddy's move.\"\n\n\"I can't believe you did all this,\" I whisper before placing another small kiss against her lips.\n\n\"You sure you're not disappointed that I didn't do this on top of the Space Needle or something?\" she asks and leans her head back so she can look into my eyes.\n\n\"This was perfect. And perfect for us. I love you,\" I reply.\n\n\"I love you so much. Can I kiss my fianc\u00e9 now?\"\n\n\"We get engaged and suddenly you're asking for permission?\"\n\n\"I see putting a ring on that finger didn't do anything about that sassy mouth of yours.\"\n\n\"Did you want it to?\"\n\n\"No.\"\n\nUntil Lauren, I had never been with a woman that I could feel such romance and intimacy with one moment and then a wild, hot passion for the next. But as we stand there, I can feel a different kind of energy between our bodies grow and can't do anything but lean in for another kiss.\n\nBut this kiss isn't romantic and sweet like our last one. We waste no time sliding our tongues against each other's and when the sounds of our mutual moans chime together, I feel a rush of desire for her.\n\n\"Take me home, miss. I need you,\" I pant against her lips when our heads change directions.\n\nLauren pulls her face away so I can see her eyes. After so much time together, I've become familiar with the many facial expressions of Lauren. It's hard not to when they're so specific.\n\nAnd right now, my own excitement grows when I can see her face so clearly transition between soft and romantic to my favorite look\u2014 Miss Callahan.\n\n\"We don't need to go home for that. What do you think the chair is for?\" she asks.\n\n\"Would you like me to sit, miss?\"\n\nIt's obvious we were already moving into our familiar way of playing, but my use of that word only solidifies it and I can see Lauren's eyes visibly darken as she looks at me.\n\n\"Topping from the bottom already, are we?\" she says with one eyebrow slightly raised.\n\n\"No, miss. Please tell me what you'd like me to do.\"\n\n\"I'm tempted to give you a pass on your punishment. Even though you've mouthed off to me twice since we left the pitch. Should I be a kind mistress tonight, my sweet fianc\u00e9?\"\n\nLauren knows what my answer is going to be before she even asked the question. For most couples this may not be the most romantic way to consummate an engagement, but for me, it is. Proposal or not, I'm not going to miss a chance to feel Lauren's hand against me. And like always, just the thought of it has my pussy throbbing almost painfully with want.\n\n\"Please punish me, miss. I want it,\" I respond.\n\n\"You always do, baby. Now remove your dress.\"\n\n\"Yes, miss,\" I say as my fingers begin to undo the buttons lining the front of my dress.\n\nWhen it hits the floor, I quickly scoop it up so I can fold it and place it on the desk behind me. I remove my bra and add it neatly to the pile.\n\nLauren loves punishing me, but she loves it even more when I follow the rules and when I turn back to her, I can see a slight rise and fall to her chest that's always an indication of her own arousal.\n\nBut it's when her eyes roam down my body and she sees my bare pussy that her lips actually part and I swear I can hear her take in an audible breath.\n\n\"Where is your underwear, Ems?\"\n\n\"In our underwear drawer at home, miss\" I say as innocently as I can.\n\n\"And why is it not on your body?\"\n\n\"The lines didn't work with my dress, miss.\"\n\n\"That's what thongs are for,\" she says slowly.\n\n\"I found this more comfortable, miss.\"\n\nLauren narrows her eyes and I can tell she's trying not to smile.\n\n\"I see. So, you decided to go commando for a pitch. How naughty.\"\n\nThere's a certain thrill at being naked in an office like this when I know we can do anything and won't be interrupted. I can already feel a wetness start to seep out from my pussy as I stand there and with every second that Lauren's eyes continue to stare at body, I want her more.\n\n\"Please, miss,\" I say in a whisper when she doesn't make a move.\n\nLauren is so calm and collected right now compared to me. I feel like my pussy could shatter from arousal and I'm ready to beg if needed.\n\n\"Please, what, Ems?\"\n\n\"Please, spank me, miss.\"\n\nLauren gives me a small smile and slowly moves in closer to my body. She's careful not to touch me anywhere but does push some of my hair behind my ear before leaning in so she can whisper.\n\n\"Stand at the desk with your back to me.\"\n\nI start to move so I can follow her directions, but before I can, I feel her grip my hair and pull. It's not painful, but it's so surprising that I let out a small gasp.\n\n\"Forget something, darling?\"\n\n\"Yes, miss. Thank you, miss.\"\n\n\"Better. Now move.\"\n\nI do as she says and situate my body so the end of the desk is in front of me and my back is to Lauren.\n\nThe office is quiet for a moment, but I can hear what sounds like clothes being removed. The next thing I feel is Lauren's bare chest pressing against my back.\n\nI can't help but let out a small groan at the feel of her nipples immediately hardening against me.\n\n\"Do you like the feel of my tits against you?\" Lauren asks against my ear.\n\nI'm momentarily distracted by her tongue lapping against my earlobe, but I know she'll want an answer so I try to make my mouth work.\n\n\"Mm. Yes, miss. I love it.\"\n\nLauren continues her tongue's journey from my ear down my neck as her hands come up my front and lightly play with my nipples. She pulls each between her fingers before cupping my whole tit and squeezing.\n\nAnd it's a good thing she's behind me, because at this point, I wouldn't be able to hold myself up otherwise.\n\n\"Fuck, miss. That feels so good.\"\n\nHer hands still and I can feel her mouth against my ear again. \"Is that sweet little ass ready for my hand?\"\n\n\"Yes, miss. Please,\" I pant out.\n\nI'm so turned on already that it doesn't really matter what she does. It will all send me over the edge at an embarrassing speed.\n\nLauren's hands are suddenly off my tits but before I can feel their loss, she's gently pushing me so that my body is pressed down on the desk. I prop myself up on my elbows so that I can push my ass up further.\n\n\"Good girl,\" she says. \"Look at me.\"\n\nI turn my head so we can make eye contact and I've been with Lauren for long enough to know exactly what is coming.\n\n\"Safe word?\" she asks and I nod. \"Ready?\" she asks next and I simply nod again.\n\nIt never takes me out of the moment and Lauren's desire for consent before we play only makes our sessions that much hotter.\n\nWhen I'm facing away from her again, Lauren begins lightly trailing her hand down my back. She doesn't touch my ass yet and I can feel myself pushing it higher.\n\n\"So eager, baby. Have you been thinking about this all day?\"\n\n\"Yes, miss. Please, miss. Spank me. I'm all yours.\"\n\nLauren lets out a low laugh. \"Oh, I know you are. But first I need to admire this beautiful backside. I've always admired your skin. So fair. I love how easily I can mark it.\"\n\nLauren finally moves her right hand down to my ass cheek and presses in. It may not be my pussy, but even that pressure causes me to let out a long moan.\n\n\"Just two tonight,\" she says.\n\nWithout any additional teasing, Lauren brings her hand down on my ass with a loud smack. Over the past year, she's worked up to spanking me harder and this one doesn't disappoint.\n\n\"Fuck,\" I scream out. \"Thank you, miss.\"\n\nLauren's hand gently cups the ass she hit before she brings it back down again, harder than before. I let out an unsexy grunt and have to grip the sides of the desk as I squirm in my spot.\n\n\"Breathe, Ems,\" she says and resumes her light trail of fingers down my back.\n\n\"Please, miss. Another.\"\n\nI can hear the desperation in my voice but all I want is Lauren's hand to come down on my ass again.\n\nLauren lets out another sexy laugh from above me. \"I suppose this isn't really punishment then. My girl does love her pain.\"\n\nI don't have to beg again though. Lauren's hand smacks across my left cheek before she brings it back down on my right again.\n\nMy head drops down on the desk as I let out a series of groans and swear words. I know that if I looked at my thighs, I'd see them glistening in my own juices and the sting of my ass only causes a deep throb in my pussy.\n\n\"Sit in the chair,\" I can hear Lauren command from above me and despite the fog I feel like I'm in, I manage to move off the desk and get in the chair with relative quickness.\n\nI'm instantly focused again when Lauren stands before me and I can finally see her bare chest. She looks into my eyes as she slowly unbuttons her pants and takes them off and the whole scene is reminiscent of our first time together.\n\nBut now I'm not looking at some executive who would only be in town for a few days. I'm looking at my soon to be wife. And despite the way we play, every look or touch from Lauren is wrapped in a love and intimacy I've never felt.\n\n\"I love you, miss,\" I say as she finishes placing her clothes on the desk.\n\nShe brings her eyes back to my own and gives me a soft smile. \"I love you too.\"\n\nOne of the things I love most about our sex is that we can have these easy, romantic moments before things transition back into our roles. Sometimes one of us can't help but tell the other something like I just did. Lauren seems to understand that this is one of those times, but a moment later, she has a determined look on her face again.\n\n\"Tell me how you taste,\" she commands.\n\nWithout breaking eye contact, I slide one finger into my folds. I knew I was wet but I'm almost surprised how easily my finger slides through. Once it's covered, I bring it up to my mouth and make a show of swirling my tongue around the finger. I suck it into my mouth before giving her an answer.\n\n\"Not as good as you, miss.\"\n\n\"I'll be the judge of that.\"\n\nLauren slowly moves down on her knees and places both hands on my legs so she can part them. It's only once I'm open for her that her eyes finally break away from my own and she's looking down at my visibly wet pussy.\n\nI've come to learn that this is one of Lauren's favorite positions. She may be on her knees, but there's never any doubt who's in control.\n\n\"I love when I can see how wet you are, baby,\" she says and then places a kiss on each of my thighs. \"Scoot forward for me and put each hand on the armrest. You are not to move them until you've come.\"\n\n\"Yes, miss,\" I reply and scoot my ass forward on the chair.\n\nIn the back of my mind, I note that I've most likely already ruined this beautiful leather chair with my juices, but Lauren's hungry look causes that thought to leave my mind as quickly as it came.\n\nLauren brings one finger up to my pussy and mirrors my motion from before, sliding it through my wet folds before bringing it out to her own mouth and sucking off the ample wetness there.\n\n\"Mm. Nothing could ever taste as good as this,\" she says. \"I can't wait to make you come as my fianc\u00e9 for the first time.\"\n\nI can hear myself panting above her and my hands are gripping the armrest, but after the spanking and Lauren's bare chest teasing me just inches away, I'm also not surprised I'm this turned on.\n\n\"Please, miss. Please, fuck me.\"\n\nLauren makes a noise that sounds almost animalistic as she dips her tongue into my pussy and that noise turns into a long moan as her hands tighten their grip on my thighs and she gets her first real taste of my overflowing juices.\n\nI can't lean back without moving away from her so all I can do is slam my eyes shut and grip the chair tighter. When I can feel her tongue move down my folds and slide all the way inside me, I let out my own loud moan that joins Lauren's.\n\nShe pumps her tongue in and out of me a few times before bringing it up and flicking it across my clit. I can already feel how hard it is under her tongue and know if she keeps doing that, I won't be able to hold off an orgasm for long.\n\n\"Would you like me to use fingers tonight or just my tongue, love?\"\n\nBut right after she asks the question, she begins placing tight circles across my clit and all I can do is pant above her as I writhe in the chair.\n\nLauren seems to understand my inability to speak when she's doing that so she brings her mouth fully off my pussy and looks up at me.\n\n\"Answer,\" she demands.\n\n\"Fingers, miss. Please. Yes, fingers,\" I shout out incoherently.\n\nLauren doesn't say anything else as she dips her head back down to my pussy and begins licking up and down the length. My eyes close again at the sensation, but soon I can feel a single finger slide back inside me. But this time she doesn't pull it out for a taste and begins a steady rhythm, pumping in and out of my pussy.\n\nI want more of Lauren inside of me, but I know that she won't add another unless I explicitly ask. \"Please add another, miss. I want more,\" I breathe out.\n\n\"Yes, baby,\" she says and quickly slides two more fingers inside of me.\n\nHer fingers go in as easily as the first one\u2014 a clear indication of how wet she's made me. Lauren lifts her body up on her knees so she can pump in and out of me with more force and I can feel the chair moving backwards slightly due to the velocity.\n\nEverything is so wet and beyond the noises coming out of my own mouth, I can hear Lauren's tongue and fingers lapping against my skin. The sound, mixed with the overall sensation and the sting from my ass, has me groaning in pleasure.\n\nAnd as her fingers start to curl up and her tongue begins the tight circles on my clit again, I can feel my orgasm closing in fast.\n\n\"Miss, I'm so close. May I come? Please, miss?\" I shout through a series of moans.\n\n\"Come, my love.\"\n\nI can feel Lauren's words vibrate against my pussy and the sensation sends me over the edge.\n\n\"Fuck, I'm coming. That feels so good. Please don't stop,\" I shout and Lauren obliges, continuing her flicks against my clit as her fingers drive into me.\n\nBut almost as soon as I say the words, my pussy is screaming for her to stop. I allow my body to draw out the last of the orgasm before I scoot back an inch, effectively breaking Lauren's mouth away from my pussy. She seems to understand since she gently removes her fingers and sits back on her heels.\n\n\"I can't believe I get that for the rest of my life,\" I say once I've finally caught my breath. \"You are so amazing.\"\n\nLauren lets out a small laugh. \"I'm glad to see the chair works,\" she responds, but I can see from the look in her eyes that she's in her own high state of arousal and needs some relief.\n\n\"Would you like to see if this chair can hold two people, miss?\" I ask.\n\nLauren stands up so she's right in front of me. \"Close your legs, baby,\" she commands.\n\nAs I do, she climbs onto the chair so she's straddling my lap and I can suddenly feel exactly how turned on she is by the wetness covering my legs. I keep my hands on the armrest and wait for her next command.\n\n\"Looks like it holds two people,\" she says as her eyes roam down my body from her spot on top of me. \"You are just so sexy, Ems. I can't believe I get this for the rest of my life either.\"\n\nI'm not about to break a rule when I've been so good, but I really want to reach up and kiss the woman. Lauren seems to have the same idea because she leans down and places her lips against my own.\n\nAs our tongues begin a messy battle, I can feel Lauren push her body up on the chair before she grabs my right hand and guides it to her pussy. Our kiss doesn't break as I slide two fingers straight into her folds. I gather some of her wetness across my fingers and then bring them up so I can lightly rub her clit.\n\n\"Put them inside me. I'm not going to last long,\" she says, breaking her mouth away from my own.\n\nI quickly oblige and move the same fingers down and into her pussy and the guttural sound Lauren lets out makes my own pussy clench again. Lauren puts one arm around my neck and the other on top of the chair so she can move her body up and down on my fingers, helping to drive her own pleasure.\n\n\"Yes, baby. That feels so good. Add another,\" she breathes out.\n\nAs I do, I can feel her walls start to get tight around my fingers and I can tell that Lauren was right\u2014 she isn't going to last long.\n\nWanting to make her orgasm hit as hard as I can, I scoot my body down further in the chair so my face can bend down and capture one of her nipples in my mouth. I swipe my tongue across both tits, not worrying about how messy I'm being.\n\nI finally break my mouth away when I know she's almost there and need to pump into her harder. I bring one arm around her body so I can hold her up as my fingers drive in deeper and deeper.\n\nLauren's moans are getting louder and as my thumb comes up to flick across her clit, she lets out one, low groan before dropping her head onto my shoulder. Her walls close around my fingers so tightly that I can tell she's coming.\n\nLauren doesn't seem to be in a rush to move and she feels so good on top of me that I could probably stay here for hours. I bring my other arm around her body and lightly rub up and down her back as she comes down from her orgasm.\n\n\"I'm really glad you said yes,\" I can hear her say against my shoulder.\n\n\"Did you think I wouldn't?\"\n\nLauren lifts her head so we can look into each other's eyes and even with us still being naked, I've never felt more comfortable or safe with someone. I gently remove my fingers from inside of her and she slides down further onto my lap.\n\n\"You could have anyone,\" she says and begins playing with the ends of my hair.\n\n\"I would never settle for just anyone,\" I reply with a small smile.\n\n\"I love you, Ems.\"\n\n\"I love you, Lauren.\"\n\nLauren lets out a long sigh and then looks out the glass windows of my office before turning her eyes back to me.\n\n\"I do think the cleaning crew comes in at some point,\" she says.\n\n\"Does that mean we need to put clothes on?\"\n\n\"Unfortunately. Besides, Jackie is probably losing her mind right now waiting for us to call her.\"",
        "\"Fine,\" I say with a small pout on my face.\n\n\"We'll make it a quick dinner with them. And then home. I promise.\"\n\n\"Only if you give me another kiss,\" I say.\n\n\"I always have time to give you another kiss.\"\n\nOnce our lips part for a final time, I take a last look at my fianc\u00e9 before I know we need to get up and get dressed. A slow smile reaches my lips as I think of one more thing I want to ask her before we leave.\n\n\"So, when we're married, will that make you Missus Callahan?\"\n\nLauren narrows her eyes slightly at me but returns my smile.\n\n\"I think Miss Callahan will do just fine.\"\n\nThe End\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "bdsm",
        "dominance",
        "girlongirl",
        "lesbian novella",
        "lgbt",
        "office",
        "romance",
        "spanking",
        "submissive"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/miss-callahan-ch-21-27"
}