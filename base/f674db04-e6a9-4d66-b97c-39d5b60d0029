{
    "title": "The Arete - Princess-Consort Ch. 06",
    "pages": [
        "Chapter Six:\n\nThe Hordesdoom\n\nThe scouts and I sent two young riders ahead at marathon speeds to deliver the gist of the horde's destruction to General Heoldax. So, over the four days' ride to the main body of the army, we relaxed a bit and just rode fast in the day. The lands behind the pass were safe, so the scouts' primary purpose was both to provide an honorguard of sorts for me and to protect against accidental mishaps on the road.\n\nSince I knew (or was reasonably certain) that I'd survive to return to Caeli, I wrote her a more honest letter before getting my first good night's sleep in what felt like months, albeit on hard mountainous ground. \n\nThe violence of battle remained glazed over in the long letter and I left out the Gartifian self-genocide, but I wrote frankly about my odyssey otherwise, the bravery of Thothoa and her kin, the arid waste of the dry grasslands on that sad rouncey, the desperation of the peaceful tribes to the south, and being mistaken for a deserter. I wrote of good things too though, bringing tribes to agree to cross the border, the beauty of a mountain stream, Herafu's pure joy as I handed her the reins to the jennet, and graceful hawks traversing the deep blue of an endless sky. Anything I thought might make her smile.\n\nI also bothered to remove as much grime from myself as was possible before reporting to General Heoldax, albeit with mixed results.\n\nArriving at the main camp late in the evening, the auxiliaries visibly outnumbered the regular army and the tension could be felt even as I walked to General Heoldax's tent. Moreover, I could see great numbers of their non-warriors arrayed in the safety of the valley behind the rank and file army as we rode in, thousands of them elderly and children.\n\nThe Crown Princess had already received the news of the horde's demise - and received it with joy - but recognized the new problem. Cold as it sounds, the eventual battle with the horde would have likely killed many allied tribeswomen and others would have returned to the grasslands as rich and dominant warriors. Now we had a huge army which was no longer set to face an enemy in a bloody - but ultimately cathartic - battle in which the winners would take the victory spoils and fill the power vacuum.\n\n\"Our citizens will simply resume their lives in their lands between the mountains and the far border. Yet the temporary loyalty of most of those tribes arrayed out there is built on a common enemy that - however thankfully - no longer exists,\" Heoldax acknowledged before lamenting, \"My nobles and the chieftains are at each others' throats already. The latter will be incensed at leaving a war camp with nothing and the former will be enraged at paying off 'a new horde we created.'\"\n\nI nodded. Ser Gharntex spat.\n\n\"There are several obviously poor options to choose from, but,\" Heoldax gave me a measured look. \"I think I should save myself time. Taiglox Hordesdoom, how would you handle this?\"\n\n\"You need gold and fallow lands to be garnered from your nobles, both to be given to unloved foreigners and both with as little cost to the crown as possible, Your Highness?\" I ignored my new nickname, not placing much stock in such things.\n\n\"Yes,\" Heoldax answered, \"And in no more than a month. Preferably far less. The thousands gathered must eat or riot.\"\n\nI sat down and put my head in my hands to think. Heoldax held out her cup to be refilled, which Vostiv did immediately, having not even greeted me yet and wisely not interrupting to do so.\n\nThe problem was complicated. Some tribes would willingly return to beyond our borders with no payout, but those would be more inclined to raid our relatively unprotected lands between the mountains and the border, particularly as they'd have little or nothing to get them through the hard season. Others would settle on the grasslands between the mountains and our border, but be more inclined to rebel and would be in a geographic location where most citizens only had a few generations of citizenship themselves. In both cases, the same mountains would protect them that protected us now in the event of invasion or rebellion.\n\nI thought like Tumnus, so hard that I could hardly breathe and made a Crown Princess wait. Eventually, I spoke.\n\n\"Were it me, I'd gather the highest ranking noble from each land-holding house and ask them to take equal portions of the thousands gathered. They won't want to, so one rich noble will introduce a buyout to not take tribes on their land. Almost all will jump on the idea, so make it a substantial cost and with a short deadline before the thousands are split. It'll be easier to raise the price and keep it high across the board if you introduce an exhausting debate on whether the buyout price should be based on the house's size in acreage, population, taxes, nobles, or levies. Plus, none will wish to openly admit before the others that they can't afford to pay by whichever method is eventually chosen.\"\n\n\"That would provide fast gold enough to pay off those who wish to leave, yes. But thousands would prefer to stay and will have no place. Moreover, I sent you with a guarantee that they could stay in the Queen's name.\" House Royal would not go back on promises authorized to be made in the name of the Queen, no matter the cost of keeping the Queen's guarantee and to whom the promise was made.\n\n\"Respectfully Your Highness, fulfilling the Queen's guarantee could be of value. Those who'd prefer to be poor and peaceful farmers over being wealthy and savage nomads are the ones you want to keep anyway. But not here on the border. Especially knowing we'll likely campaign over the mountains this spring, we don't want to install newly-minted civilians whose loyalty will be tested without need.\"\n\n\"I agree. Where would you put them?\"\n\n\"Piadya, Faquardya, Chrerandya, Gaphindya, and - forgive me Vostiv - Miwirdya all pled off portions of their soldier levies and grain taxes for the army last year by claiming a lack of agrarian labor due to various plagues and natural disasters killing off droves of peasants.\"\n\n\"It was no lie,\" Vostiv asserted defensively, \"House Miwirdya lost over a fifth of our farmers to a wasting sickness in our breadbasket.\"\n\n\"I did not mean to cast aspersions on the claims of those houses,\" I clarified, \"Only to identify that they might benefit greatly from an influx of hearty immigrants to serve as both peasants and soldiers.\" I probably should have chastised my squire, but I sympathized with her fidelity and wouldn't scold her before the Crown Princess.\n\n\"Of course, ser. I'm sorry, ser,\" Vositv chastised herself. \n\nI dismissed the offense with a gesture and continued, \"Were you, Your Highness, to send emissaries to those houses offering to reduce their grain taxes to the crown in the amount they will already have paid unwillingly in absentia to not take those same potentially useful immigrants, they'd likely overcome any xenophobia and take the offer.\" \n\n\"A small loss this year for the crown which would be made up in grain and soldiers many times over for the next decade,\" Heoldax smiled and stood, causing us to stand too. \"Take your squire and your squad of scouts and ride tonight for House Miwirdya to make the offer there. Ser Gharntex, put whispers in the right ears of foreigners and buyouts. Pages,\" she called and a half dozen smartly dressed noble youths entered the tent. She pointed to each in turn, \"Inform Ser Trycix of House Piadya, Ser Yeanitix of House Faquardya, Ser Konchux of House Chrerandya, Ser Faswax of House Gaphindya, Ser Quoprix of House Mayrtedya, Ser Pliplax of House Chilandya, and Ser Bortox of House Hiruwodya that I wish to breakfast with them tomorrow after quarters.\"\n\n\"Your Highness, I'd request to leave at dawn, giving me the chance to recruit some likely tribeswomen for Miwirdya to question and giving Vostiv the chance to consult her eldest sister present in camp for familial openness,\" I requested. Vostiv audibly sighed behind me at not having to face that awkwardness later.\n\n\"Of course. Take all prudent action and leave at dawn.\"\n\n\"Yes, Your Highness,\" I bowed and stepped out with Vostiv on my heels. \n\n\"It's good to have you back, ser!\" Vostiv hugged me suddenly.\n\n\"Good to be back, Vostiv.\" I patted my giant squire's back and released her, \"How've you been?\"\n\n\"Okay.\"\n\n\"How was your birthday?\"\n\n\"Quiet.\"\n\nNo one in camp probably knew but me, \"Right. Well, thirteen is a big one. We'll have to have a proper celebration once we get home. Do you understand everything well enough to talk with your sister?\"\n\n\"Yeah, I think so. But Pred's here and she's...not always the easiest person to talk to.\"\n\n\"Please try? I'll hopefully be back in a few hours if she has questions or you need support.\"\n\nVostiv nodded and set off. \n\nAfter alerting Sergeant Mitchux to our new orders and warning her to procure a few dozen more horses, I checked on Savaran, then went back to my tent, washed and changed, verified my tack and kit (responsable squire that she is, Vostiv had sewn in my Captain's badge), and took a bag of gold.\n\n\"The Gartifians,\" I asked a passing tribeswoman, \"Do you know where they've camped?\" \n\n\"Over that hill,\" she answered dismissively. Still not one of us, the rank, knighthood, and family colors that I'd re-donned with my armor meant absolutely zero to her.\n\nThose orphaned children had been preying on my mind. More specifically, the statement that I'd made to their leader, that I certainly would \"not kill their innocents.\" If the crazy Gartifian warriors thought that I meant that only children would be spared...\n\nEither way, being a decent person, I felt the need to check on them. I'm glad I did.\n\nThey weren't starving or endangered. Certainly they were not nearly as bad off as they would have been in the harsh plains alone. Still, they were huddled together in too few tents and guarded - or shepherded maybe - by too few soldiers.\n\n\"Corporal,\" I addressed the nearest of the too few soldiers.\"What's the story with these children?\"\n\n\"Abandoned, ma'am, and placeless.\"\n\n\"None of the others would take them in?\"\n\n\"Too broke themselves in lookin' after their own.\"\n\nI looked on the poor children that I'd left orphaned. \"I suppose. Do you know where the Lanchalians are camped?\"\n\n\"No, ma'am. I don't know the names of tribes.\"\n\n\"Very well, Corporal.\" I stepped away about twenty yards and found a tribeswoman who did know where the Lanchalians were. And the Vicranians and Rythraians. And the Farankians, Jalians, and Yalwians.\n\nI met with all of them to confirm they still wanted to become citizens and offer to broker their moving to the breadbasket of Miwirdya. In exchange, I asked for five upstanding tribe members to come with me to speak to their cultures, values, and intentions to House Miwirdya.\n\nOf the Lanchalians, I asked a personal favor.\n\n\"The Gartifian orphans,\" I spoke honestly to Chief Wisoiti, \"I am at least the agent of their being motherless children, if not the direct cause. Many of your mothers are childless and your tribe is missing the better part of a generation. I'd offer you this gold to take them in.\"\n\n\"Done,\" the Chief agreed. \"We could certainly use an influx of youth. And, as your General Heodax gave us provisions and shelter on reading your letter, we're already in your debt. For that debt and for basic human decency, I'd like to refuse your gold and still do right by those orphans,\" the good chief looked ashamed at needing to be paid to help, \"but we can't afford to take on so many without it.\" \n\n\"That's what the gold's for, Chief,\" I reassured her, \"I'll see your five on the west tip of camp before dawn.\"\n\nFinally, I took an extra twenty minutes to walk to the Yontians' camp. Not to recruit as I knew that would never be successful. But I owed the dead.\n\n\"Where is your storykeeper?\" I asked a random warrior, having learned a good deal of their social structure while riding with Thothoa.\n\nShe was pointed out to me, looking no different to me than the other warriors, \"What do you want, barbarian?\"\n\n\"To tell of Thothoa and her twenty riders, who sent a horde of 15,000 to a fiery death and died themselves killing and roaring in the flames. To ask that their names be known to the living as those names are now celebrated amongst the dead,\" I tried to say their words.\n\nThe Storykeeper removed a very old scroll and opened a vein. \"Their names will be known to the living as those names are now celebrated amongst the dead,\" she confirmed.\n\nI left, my chores through.\n\nAfter 3 bells, I arrived back at my tent. I'd walked nearly 15 miles in the night between Heoldax's tent, the corral, my tent, and the various tribes, and so was ready for an hour or so of sleep. \n\nBut I found three people waiting at my tent, Sergeant Mitchux, Vostiv, and a woman in Vostiv's house colors who looked for all the world like Vostiv a dozen or so years later.\n\nAnd Vostiv sported a new shiner on her left eye.\n\nMy hand hovered near my mace, \"Why is my squire wearing a bruise?\" \n\nVostiv's older sister was at least six and a half feet tall and looked like she'd been cut from a block of living granite, but I'd trounce anyone who assaulted my young squire. \n\nOr, more likely, I'd get my ass absolutely whupped. Either way, I'd at least put up a fight.\n\nNeither happened though as the hulking woman answered frankly, \"Because she swung when she should have blocked. But she at least fights as well as a horsegirl now and I'm given to understand that that's thanks to your training her. Laerdya or not, you seem to have taught her actual combat techniques, at least when you're not honeymooning or hordeburning,\" she reached out her hand, \"Major Predix, secondborn of Miwirdya. I'm told that you have a proposition for my house?\"\n\nI explained with equal frankness and concision the advantages and dangers of taking on the 2,000 nomads as I saw it.\n\n\"Can you vouch for all 2,000 of these nomads?\"\n\n\"No. I've asked for five representatives from each of the six tribes whom you can question yourself if you like. We plan to leave from the west tip of camp at dawn.\"\n\n\"I will, but who vouches for you? You shot and fought well enough at the tournament at the capitol, but that's no true measure of your troth or your will.\"\n\n\"I vouch for Ser Taiglox, Pred,\" my squire stood up for me pluckily.\n\n\"You're her squire, Vos,\" she dismissed her, \"I'd box your ears if you didn't vouch for her. But, you, Sergeant, how long have you known Captain Taiglox?\"\n\n\"A few days,\" the sergeant answered and then answered the implied request for a character witness, \"Thus far, she follows protocol and directives, she provides logical orders and listens to logical recommendations, she rides hard and works hard, and she neither takes offense where none is meant and nor assumes privileges where none are offered.\"\n\n\"Good enough,\" Predix answered, \"Lead on, Captain. Sergeant, you can return to your scouts. Report with them at dawn at the west tip of camp for orders.\"\n\nSergeant Mitchux frowned and looked to me. It was beyond rude for the Major to give orders to my soldier in front of me, but it's the order I'd have given anyway and not worth getting my feathers ruffled. I just inclined my head. Sergeant Mitchux headed out to her squad.\n\nPredix met with the gathered tribeswomen at dawn with the same inborn assumption of authority. I still hadn't slept.\n\n\"Who are you?\" she asked the thirty of them as a whole.\n\nNone answered for a few moments, looking amongst each other instead.\n\n\"I'm Herafu of the Lanchalians,\" the young hunter spoke up, \"May I ask who you are?\"\n\n\"Major Predix, secondborn of Miwirdya. I'm here to negotiate your taking up residence in my mother's lands.\"\n\nHerafu nodded and remained silent.\n\n\"Here's our offer. You march with us to our lands when we break camp. Based on your skills as a tribe, you'll be herdswomen or farmers and you'll be given the initial resources required to be successful. For tithe, you'll give forty percent the first year and sixty percent on successive years to your mense lord and you'll commit no less than half your able bodied young women under 25 years of age to the Queen's army in our regiments.\"\n\nA general grumbling between the tribeswomen ensued, but Herafu spoke out again, \"Lanchalia accepts, and thanks you, Major.\"\n\n\"Rythraia does not,\" an older warrior whom I hadn't met declined loudly, \"We're not slaves to be ordered about.\"\n\n\"That is your prerogative,\" Predix answered stiffly, \"To be clear, we seek for lawful and loyal citizens, not slaves. And the peaceful industry and commerce of our citizens is paramount to us, so any of you falling to bandity or raising political unrest will be hung, just as those who work diligently, fight bravely, and live honorably will prosper. Discuss and decide. We leave on the dawn.\"\n\nAll the tribes eventually agreed, after the Rythraian warrior was shouted down by her peers. None had better hope or prospects on the other side of the mountains, so they all returned to their camps to make ready to leave for Miwirdya on the morn.\n\n\"Ser Taiglox,\" Predix shook my hand, \"you're right enough. Keep training Vos,\" she nodded at her little sister, \"I expect her to be my Master of Cavalry when I take a generalship.\"\n\n\"I'm sure she'll do your house proud,\" I agreed and gave a free compliment to my impressionable squire. \"You leave so soon?\"\n\n\"I may be as eager to return home as you are, Hordesdoom,\" A momentary tenderness softened the major's hard features, but only fleetingly before she gave a more politically sound rationale, \"My own lands have been among the worst scorouged by disease and I've only recently put down a peasants' rebellion. This new blood will be good for my people.\"\n\nVostiv hugged her big sister and I shook her hand again before we parted for our own duties and preparations.\n\nI gave an order for the squad of scouts to return to Colonel Pacix. I'd no more useful enterprise for them and was sure that it would be better for them to break for home from their own regiment and for the Colonel to know as soon as possible what was taking place in the main camp. And I ordered my squire to return to see to the horses and to get some sleep.\n\nThen, like a good soldier, I reported back to General Heoldax.\n\n\"2,000? Just like that?\" She stood from her armchair. Ser Gharntex and a half dozen hetaireias remained at attention.\n\n\"You did send her favorite sister with me, Your Highness,\" I deferred, acknowledging that the shrewd politician had set me up for success.\n\nThe Crown Princess smiled, \"So I did. Still, 2,000 is better than I'd expected and I hadn't expected an agreement here in camp at all. I'll hold off negotiations with the other houses until Miwirdya leaves. It'll be a good example and bargaining point.\"\n\nI nodded.\n\n\"As for you, I'd promote you again if it wouldn't look like nepotism,\" Even if I had slew the whole horde hand-to-hand with my kopis, she was right. Lieutenant to Major in a matter of weeks would appear to be nothing but 'rank' favoritism. \n\nI nodded and said nothing.\n\n\"Meanwhile, I'll never hear the end of it from Caeli if you've defeated a horde only to die of administrative exhaustion in my service. Take 48 hours. Rest and do what you need to do. We'll break camp in a few days.\"\n\nI returned to my tent, greeted the other officers perfunctorily, and I slept, kopis beneath my pillow.\n\nIt must have been nine hours until I woke, and even then it was only because one of my fellow officers brought back a loud and amourous guest. I rolled away and slept for two more hours.\n\nThen I checked on Vostiv and the horses. And Kemptrux.\n\n\"Ma'am,\" she shouted on seeing me, \"No one believes me when I say I know Ser Taiglox the Hordesdoom. Did you really burn the whole horde alive on your own?\"\n\n\"A bit more to it than that, Corporal,\" I equivocated, \"How've you been? Looks like you joined a company.\"",
        "\"5th company of the 3rd regiment,\" she answered proudly, \"Sanguine and I are doing really well.\"\n\n\"I'm glad to hear it. Are you taking lands from your company officer?\"\n\n\"I'd rather return with live with you, if I may?\"\n\n\"Of course, you may. But with me or with Imogen?\" I teased my young corporal.\n\n\"Both, ma'am,\" she blushed, \"Now that I'm a full cataphract, we can be married and she can come with me in the spring campaign.\"\n\nI frowned. \"Married sure. But I don't think you should bring her into the field with us.\"\n\n\"Not as a campfollower! She'll be my wife. But she can sew and wash and such out here as easily as she can at the palace.\"\n\n\"As your officer, I'd advise you that a wife is a distraction in camp that will not help your career. But, as your friend,\" I laid my hand on Kemptrux's swordarm, \"I'd further ask you to look at the seamstresses and washerwomen Imogen's age and really see how many look to be her age. This is a hard place we've chosen and I don't doubt Imogen would follow you, but would that be best for her? When the other option is the safety and comfort of palace life with her sister?\"\n\nKemptrux hung her head, but agreed mercifully easily. \"I'm still marrying her as soon as we get back though.\"\n\n\"And many happy returns to you both, Kemptrux,\" I shook her hand and took my leave.\n\nWandering amongst the cataphracts, nostalgia gave way to melancholia as I surveyed my former life. But I needed to go see my old First Sergeant, since I could.\n\n\"Captain Taiglox the Hordesdoom,\" she greeted me in the most friendly manner she had to give, \"come to visit us mere mortals.\"\n\n\"How's the company?\" I accepted a beer and took a swig.\n\n\"The women are fine, but the leadership,\" she shook her head, \"Your letter was useful, but the damned lieutenant I found to replace you got thrown and broke her damned neck not a week in. Honest freak accident, I swear.\"\n\n\"And the newest one?\"\n\n\"Off whoring,\" she spat, \"It won't be by my hand, I'll swear to that too, but I won't be surprised when it happens. Too many floggings. Forced retirements. Not enough loot. Too chincy with land. Claims honors for herself. Naked ambition for regimental officer. Won't end well.\"\n\nI shook my head. \"Better luck with the next,\" I toasted.\n\nWe chatted awhile about old times and I left my friend, feeling worse. Through the muck and mud of camp I wandered, heading vaguely toward my own tent, but also feeling the lack of morale permeating the air. It didn't feel like a victorious army. Perhaps because there was no victory?\n\n\"You're the Hordesdoom,\" a campfollower approached me with a couple colleagues as I walked by, lost in my own head, \"the three of us can go with you...?\"\n\n\"I'm a married woman,\" I declined politely. My being so propositioned had been happening more frequently of late since I'd gained temporary renown, but my marriage gave me an entirely valid excuse for which I was grateful when so approached.\n\n\"To a princess,\" another of the three smiled widely, \"miles and miles away behind those high stone walls. We can teach you a few things she'd like when you get back to her.\"\n\nI shook my head. \"I'm afraid she likes me for my faithfulness above my paltry skills in the bedroom.\" I don't actually know if that's true, but I can imagine the pained look on my dear wife's face if I were to be untrue to her. I'd never hurt her like that.\n\n\"A shame,\" the third complained as she ran her fingers over my armored tricep, but I was already walking away.\n\nSimilar episodes happened on my way to my tent - and had been happening since I'd gotten back to camp - but I shrugged them off as well. Instead, I wrote a long letter to Caeli and posted it. I brushed down and rode Savaran. Then I read quietly in my cot for the better part of the day.\n\nThe next morning, I reported to Heoldax again, who started chuckling on my entrance. Ser Gharntex showed no expression.\n\n\"Have I missed something, Your Highness?\"\n\n\"Apparently you haven't missed it enough,\" I swear the stony Crown Princess nearly giggled at her own joke, but I didn't get it. \"You know you've had another title bestowed upon you?\"\n\n\"'Hordesdoom?' Yes. I'm sure it will wane soon.\" She'd called me that herself though?\n\n\"No, no, not that. But a play on it. You're being called 'Ser Taiglox the Whoresdoom.'\"\n\n\"hWhat, Your Highness?\"\n\n\"You being the hero of the moment, I guess a few ladies have offered? And you have universally declined those rather generous offers? More than a few ladies actually. Likely dozens or more? So now there's an informal but very real contest to see who can seduce you.\"\n\nVostiv broke into giggles behind me.\n\nI shot a reproving look at my squire, not for laughing at me specifically, but for losing her bearing.\n\n\"There are wagers, ser,\" one of the pages spoke up, \"and drunken fights about whom might ... succeed and how they might prove their ... success.\"\n\n\"Well that seems like a particularly good use of everyone's time,\" I scoffed.\n\n\"I imagine I needn't worry, but do continue to abstain,\" Heoldax warned and dry laughed, \"Especially now that it's become an encampment-wide challenge.\"\n\n\"I'll fight the urge to host campfollower orgies in my tent.\"\n\n\"Okay, I'll stop joshing you. I don't honestly question your loyalty to my little sister,\" Heoldax conceded, \"On actual business, those tribes that want to become citizens have been sent with welcoming houses and the others are dispersing in the next two days. Our own citizens are repopulating their towns and villages on the other side of the mountains and we're garrisoning a few thousand soldiers among them under Colonel Pacix in preparation and fortification for the spring campaign. We'll break for the palace tomorrow.\"\n\nHeoldax, her hetaireia, and those of us who resided in the palace rode off separately to comprise the official party the next morning, about 150 strong. The rest of the soldiers disbanded to their native regions.\n\nThe day of our arrival, stewards met us a ways outside the gate to take our horses, armor, and weapons, which we exchanged for fine tunics, cloaks, and jewelry from our own wardrobes. At that point, I released Kemptrux so she could go see Imogen, but Vostiv was stuck by my side in the grand procession of dozens of nobles as we marched up the city streets to cheering crowds and in through the thick high castle walls.\n\nGuardswomen and stewards stood at attention as we strode through the training yards and the palace halls to the throneroom.\n\nThe Queen sat on the throne and Lucax stood armed and armored behind her with three other hetaireias. High nobles were arrayed throughout the throneroom, but I only recognized Jelvix and Yonjax by sight initially. Then I saw Poumi and my dear Caeli in the balcony. \n\nHeoldax knelt before the throne, so we all followed suit.\n\n\"Arise all,\" We all stood at attention, \"General Heoldax, report.\"\n\nThe Crown Princess began a detailed account. She was maybe two sentences in when I saw Caeli running toward us out of the corner of my eye.\n\nOne of the guardswomen made a halfhearted attempt to verbally dissuade her, but of course wouldn't lay hands on a princess. I caught a grin from Yonjax that was zero help.\n\n\"Tai!\" she shouted as she threw her arms around me, \"You're back!\"\n\nI didn't hug her back or speak, but I couldn't help rubbing my face to the top of her dear head and smelling her hair. My fingernails dug into my palms as I kept my arms firmly at my sides.\n\n\"Ser Taiglox,\" the Queen interrupted Heoldax to address the interruption Caeli caused, \"take your wife to your apartments and instruct her on proper court behavior. Also, resume your honeymoon. General Heoldax, continue.\"\n\nEmbarrassed, I bowed and led Caeli out by the hand, swiftly taking her up the short passageways to our rooms and safely inside.\n\nShe hugged me tightly around the neck again immediately. This time I hugged her back unabashedly, but I kept my tone stern.\n\n\"Caeli, you really shouldn't disturb reports to the Queen like that. There's a proper decorum.\"\n\n\"I know the rules, silly bear,\" she reproved, \"I grew up here. But I've missed you so much! I couldn't just sit waiting through Heo's long boring report, as important as it is,\" she tossed her head rebelliously and leveraged my shoulders with her little hands to pop up onto her tippity toes to place a quick peck on my lips before hugging me again. \"Besides, my mother's not really mad. She was just giving me an excuse for you to leave early.\"\n\nI shook my head. My sweet princess could really do no wrong within the palace walls.\n\n\"Please? C'mon?\" Caeli took my hand that time and tried to drag me to our bedroom. Not actually something she could physically do, but I am her bear after all. I followed her very willingly.\n\n\"Yes, Caeli.\" I agreed with my eager princess. \n\nI'd missed her too. Deeply. But I'd pictured our reunion going more slowly. Drinking in one anothers' nakedness as we undressed each other one article at a time. Tender lovemaking gradually bringing her to climax in my arms.\n\n\"Help me take my gown off? Please?\" she urgently asked me instead. Apparently she'd sent her handmaidens away in anticipation of my arrival.\n\n\"Of course, my love.\" Trying to untie the tight corseted ribbons on the back of a gown is a tricky task however, and her literally bouncing on the balls of her dainty feet made things no easier. \n\nStill, I got her dress off and her underthings as well in short order. Her pretty dark hair was still painstakingly coiffed and her expensive jewelry was still on, but she was otherwise naked as a jaybird.\n\nShe pulled herself back onto her tippity toes to kiss me. \"I'm sorry. I love you, too. I just can't wait anymore.\"\n\n\"Nor shall you, Caeli.\" I lifted her onto the bed and laid atop her, still kissing her passionately.\n\nMy hands tried to caress her hips and sides, but she found my right hand with both of hers and brought the instrument of her pleasure to her sex.\n\nShe had already wet her thighs with her hot moisture. So much was her need that her lovely pussy fairly wept for my absent touch. I'd not disappoint her.\n\nMy questing lips went to her graceful neck, kissing, licking, and nipping, but certainly not bruising or breaking her delicate skin. My left hand slipped between her satiny back and the satiny sheet to rub and tickle her back.\n\nTwo fingers of my right hand passed her dew covered slit and into her greater heat. Her walls tightened on the two digits, squeezing my knuckles so that any movement was difficult.\n\nDespite her unintentioned and uncontrolled clenching, I managed to rotate and insert deeper, feeling along the inside of her pretty pussy until I found her most sensitive spot.\n\n\"Ooohhh, Tai!\" Her whole body twitched beneath me as I sent ripples of pleasure through her trembling form, \"There, there!\"\n\n\"I know, dear Caeli, I know,\" I concurred simply as I touched that place inside her over and over, thrusting my strong fingers into her as she writhed in utter joy beneath me.\n\nHer words became mostly incoherent, \"Tai\" and \"yes\" being the most easily understood. \n\nI breathed in her scent. Exertion combined with zanabaq and arousal. I adore her.\n\nCaeli's inner walls squeezed convulsively on my long fingers as her long awaited orgasm raced through her deprived body, finishing with an open-throated scream. \n\nOkay, yes, the scream startled me a bit, but I think she just really needed that release.\n\nAfter, Caeli's whole self relaxed. Her breathing calmed and she mewled quietly as I continued placing tender caresses and sweet kisses on her hot skin.\n\nHer only objection was when I started to lift myself off her to roll away, \"Nuh,\" she moaned disapprovingly, \"Stay on me.\"\n\nI bit lightly on the shell of her ear and whispered, \"Happy to, Caeli.\"\n\nStill fully clothed, I settled myself over her so that my weight was distributed evenly and wouldn't hurt her. I understood what she wanted, to feel the pressure of my frame over hers, to feel safe and covered and warm.\n\nSo I stayed on her, snuggling and whispering loving sentiments to her cute ear.\n\n\"Tai, I missed you,\" she eventually confessed again, quietly.\n\n\"I missed you too,\" I reassured her.\n\n\"I know,\" she kissed my jaw delicately, \"I got your letters. Yonjax read them all first to be sure they wouldn't upset me, but she said she gave them all to me.\"\n\n\"Good,\" I rubbed the side of my face to hers, \"Did you understand all of them?\" I was proud that her reading had continued to improve even in my absence.\n\n\"Mostly, but,\" she admitted, \"I asked Lucax to explain a few terms to me. You're not mad that other people saw them?\"\n\n\"Not at all,\" I suppose I should be grateful that Yonjax ensured my wife wouldn't be disturbed by anything she read, since it'd be all the more painful for her to learn when she couldn't help me from so far away. And grateful that Lucax was there to explain anything that wasn't clear or was outside Caeli's scope of experience. \"I prefer intimate letters to my wife to be read as widely as possible,\" I joked.\n\n\"You are mad?\" she worried aloud to me.\n\n\"No,\" I answered reflexively and yet also honestly. I couldn't be mad at Caeli - even if for some reason I ever wanted to - and it was hardly her choice. \"I'm not ashamed of anything I wrote you, darling. I love you. I don't care who reads it.\"\n\nShe hugged me. \"Good. Did you really get mistaken for a deserter?\"\n\n\"I did. It probably didn't help that my horse was geriatric and half-wild or that my hair was braided like a barbarian's and I hadn't washed in weeks through drought-ridden plains.\"\n\n\"Who braided your hair?\" Trust to Caeli to key in on hairstyles of all things. My wife's jealousy was adorable, but her question made me think of Rhetroa who'd almost certainly died by blade, fire, or trampling within hours of braiding my hair, which made me sad for a moment.\n\n\"A barbarian horsewoman braided it to help me sneak past enemy sentries.\" I left out Rhetroa's subsequent demise as I'd no desire to sadden my wife as well.\n\n\"Oh,\" Caeli considered, \"That's okay then. It's not a regular thing?\"\n\n\"Besides you, dear Caeli, no woman has expressed any interest in styling my hair for pleasure.\"\n\n\"Good,\" she paused, \"No other woman has...? I mean, I'd understand. You were at war, so...\"\n\n\"My darling, since the day I first laid eyes on you, no other woman has held any physical appeal for me a'tall,\" I kissed her cheek, \"And you have every right to insist upon fidelity from me.\"\n\nShe hugged me again and was silent for a few moments.\n\n\"I haven't either. Been unfaithful, I mean,\" she spoke up in a rushed manner, \"Not that I wanted to. Or that anyone offered.\"\n\n\"I am glad, my love,\" I pet her pretty hair, loosing it dotingly, \"And I would challenge anyone who did 'offer' you such a thing.\"\n\n\"Because you love me?\" she crowed cutely.\n\n\"Because I love you,\" I confirmed, knowing that how she wanted to hear that I cared enough for her to fight for her. Which was an easy thing to tell her, since I did and I do.\n\n\"Can I do your hair?\" she wheedled.\n\nI groaned, \"Because I love you.\"\n\n\"Can you be naked first?\"\n\n\"Yes,\" I answered immediately and hopped up, \"because I really like being naked for you.\"\n\nCaeli giggled as I unclasped my ridiculous cloak and threw it off into the corner. It was followed quickly by my only nice necklace and bracelet set, my tunic, my leggings, and my fur slippers. \n\nBuck naked, I jumped back into the bed with her, hoping she'd forget she wanted to style my hair.\n\n\"Ahem,\" she subtly reprimanded me as she sat up on the edge of the bed, \"We were going to...\"\n\nI guess I'm not that sexy. \n\n\"Okay.\" I honor my commitments, no matter how silly.\n\nSo, I knelt before her, but facing her. I kissed her pretty feet, her ankles, and the insides of her knees. Her legs opened unconsciously. I kissed the inside of her left thigh, moving up inexorably.\n\nCaeli moaned. \"You're diverting me,\" she stroked my long chestnut hair, \"I will not be - ah - sidetracked.\"\n\n\"Are you sure?\" I looked up at her cockily and licked long and wet, from the inside of her right knee right up to the top of her upper thigh, tantalizing myself with her pure taste.\n\n\"Yes,\" Caeli moaned again, \"I will - oooh,\" Another long lick, \"I will not be so easily dissuaded.\"\n\n\"Alright,\" I planted a final kiss on the inside of my determined little wife's perfect knee, then faced away from her, still kneeling. \"As you will, my love.\"\n\nFor what felt like hours, but was likely only a half hour or so, I held still while the most beautiful woman in the world parted, poofed, flipped, plaited, braided, teased, and poshed my hair in a variety of ways before she eventually satisfied herself with her results. It may have been a full hour.\n\n\"Done!\" Caeli announced, \"Do you want to see it?\"\n\n\"I'm good,\" I really didn't care in the most fundamental way, but then I looked up at her.\n\nShe was pouting.\n\nI sighed and stood, \"Let's go see your masterpiece, huh?\"\n\nWe walked to the full length mirror, but I still had to stoop a bit to see my piled hair.\n\n\"It looks wonderful,\" I complimented offhandedly. It was symmetrical and complex, and I'm sure represented well the latest fashion in court. Or would at least. Caeli's probably the primary trendsetter for palatial styles.\n\nShe leaned in to get a better look at her work in the mirror, so I pulled her into a warm hug from behind, looking at her instead.\n\n\"You are exquisite,\" I complimented with more commitment and inhaled from the crown of her head, \"I want to bring you back to bed?\"\n\n\"Please.\"\n\nShe giggled again as I picked her up and lifted her back to our bed.\n\nDeliberately, I lavished her body with devotion, kissing and touching every inch of her. I re-etched her into my mind wholly, getting the warm homecoming I wanted.\n\nOnly after that, after I'd already loved on every part of her, did I return to between her thighs. I found her again to be wet and willing.\n\nI lapped along her inner thighs, her puffy lips, and her slick slit, my nose tickled by her fluffy bush. Easing my tongue into her, I tasted her from her source. So fresh. So intoxicating. Her honeypot is delicious.\n\nPulling up, I blew on her hot sex to make her shiver, then I dove immediately back into her font.\n\nMy tongue teased and twirled, in and out of her center, between her lips, over her hood. Never stopping or building a pattern. Keeping her agitated without giving her more.\n\n\"Tai?\" she questioned. \n\nShe lay with her upper body bolstered by pillows, so she had a clear line of sight to me and my grinning face when I popped my head up.\n\n\"Tai!\" I could see her cute face too as she huffed at me.\n\n\"No,\" I answered the demand she so inelegantly made.\n\nMy wife is my world and I think the world of her, but she is also quite literally a spoiled princess. She'd been denied a small number of specific things throughout her life of course - the last big one being her request to keep me at the palace with her - but always for the greater good. More generally, any innocuous pleasure she desired was always afforded to her as soon as she voiced the desire.\n\nAlthough my withholding her immediate gratification annoyed her to no end, my not bending to her will also turned her on immensely. Hearing \"no\" was novel and exciting.\n\nSo I kept toying with her. Using fingers and tongue to keep her keyed up while she muttered and moaned, I got to keep tasting her. \n\nHer right hand went to the back of my head, pressing down. Or trying to. My neck muscles are far and away stronger than Caeli's forearm and wrist muscles. I shook my head a touch, still licking as my head shook.\n\nShe pulled my hair a little too, made both easier and harder by the braids and plaits still binding my chestnut locks. Again though, I stoically shook my head and kept good-naturedly needling my wife by providing more and more stimulation with no satisfaction. If anything, I enjoyed the slight pain of her insistent pulling on my hair.",
        "Eventually, Caeli huffed reiteratively, but still cutely, and flopped back, letting her arms fall to the bed above her head. \"Fine.\"\n\nI rubbed my cheek lovingly along the inside of her thigh, caressing the outsides with gentle fingernails. Leisurely, I got lower, onto my stomach with my abs and biceps engaged. Carefully, I put her knees up over my shoulders and wrapped my left arm around her legs. \n\nMy right hand I kept free as I was done teasing her. Using two fingers, I slowly pushed into her and slowly pumped. All the while, I planted wet kisses between Caeli's bellybutton and lips, nuzzling and breathing on soft skin.\n\nHer breathing changed, throatier and quickened, so I pumped my fingers faster and curled my thumb so the blunted smooth nail would tap her hood.\n\nCaeli's eyes rolled back and her legs trembled in my grasp. \n\n\"Tai!\" she shouted this time, pure pleasure ringing in her tone as I steadily drove her to bliss.\n\nMy two fingers sawed in and out of my beautiful wife, her pussy clamping at my knuckles.\n\n\"Tai!\" she groaned as her thrilled body began to seize.\n\nInvoluntary muscle convulsions overtook her lower body and she keened in what I assumed was a happy way. I released her to lay that sexy lower body flat on the bed, still tenderly kissing and touching Caeli from her ribcage to her mons until she calmed.\n\nShe remained sat up partially, so I scooted up a bit to lay my head in her warm lap and hugged her around her shapely hips. Contented, we both drifted to a serene sleep.\n\nI woke to Caeli carefully loosing my hair, a process that took nearly as long as tangling it up did. \n\nNonetheless, I wasn't irritated. I sighed to feel her nimble and sweet hands in my hair. And again once my hair was all down and she simply stroked and petted my long locks.\n\n\"Thank you, Tai.\" Caeli mused to me, \"I missed you. Not just physically, but...yeah, physically.\"\n\nExpanding my lungs, I breathed in her lovely scent as the lovely woman who'd dominated my every free thought for the past long weeks laid peacefully in my strong arms. I understood and sympathized with her yearning. \"I could not agree more, Caeli.\"\n\nIdly, she continued to pet me and I continued to revel in her attentions, until her stomach growled.\n\n\"We missed lunch, huh?\" I ventured.\n\n\"Yeah,\" Caeli confirmed, \"We could eat in here. It'd be nice to have dinner with everyone, but I'm so comfy.\"\n\n\"We can come back after,\" I disentangled myself from her, stood, and kissed her cheek before offering my hand to help her up out of bed. \"We have a couple weeks here together yet.\"\n\nShe stood, but her face grew sad and her voice grew pensive. \"You've promised that before.\"\n\n\"I know, Caeli,\" I pulled my dear naked wife in for a tight hug. \"I'm sorry, my love.\"\n\nCaeli didn't answer. There was no need for her to forgive me. There was really no need for me to apologize, except that I was legitimately sorry. We both understood that neither of us controlled when we'd be parted. \n\nMy lovely wife simply hugged me back and breathed deeply, nuzzling her sweet head to my chest.\n\nShe took my hand as I released her from my arms. I held her hand above her head and twirled her enchanting body. I think I only meant to spin her once, but she hypnotized me. Her gorgeous body in motion, so graceful, so free, so fluid.\n\nI twirled her back into me, tripped her with an ankle hooked around her calves, and tackled her onto the bed. With one hand I held her wrists down above her head. With the other, I groped her asscheek unsubtly.\n\n\"You promised dinner?\" she giggled, not disapprovingly.\n\n\"Later,\" I amended my promise as I aggressively kissed her neck, \"For certain. Just later.\"\n\n\"Uhhhah,\" she agreed. She also agreeably parted her legs as I physically suggested with my right knee.\n\nMy passion brought me back to her lips and a very hard kiss. My hand left her ass so that I could forcefully finger her ready pussy. Not roughly or violently, just forcefully pumping her with two hooked fingers punching into her g-spot with speed and accuracy.\n\n\"Uh, uh, uh, uh, uh,\" Caeli's adorable little grunts of pleasure coincided with each strike. Her pretty dark eyes swam, and her face and chest flushed with excitement.\n\nThe muscles of her flat tummy crunched. Her hips jumped and jerked. Her overworked sex released a fresh burst of fluid evidence of her renewed arosal.\n\n\"Tai?\"\n\n\"I'm here with you, Caeli,\" I whispered into her ear, which as was heated and rosy as the rest of her soft, smooth skin, \"Right here.\"\n\nHer back arched and her eyes rolled back.\n\n\"Ahuhahhhh!\" she cried out as she came yet once more at the mercy of my long lean fingers. \n\nSlightly overwrought, she actually cried.\n\nI kissed and licked away her tears. I held her tenderly. And I kept whispering, \"I love you, Caeli.\"\n\nThere is no one else in the world on whom I can unreservedly unleash all the love I have within me. I can be utterly besotted with Caeli, and can show unending emotional support and physical devotion. I don't have to be tough, reserved, stoic, or militant.\n\nI can be solely and completely Caeli's utterly and shamelessly enamoured wife when I'm with my sweet princess. No more and never less.\n\nAnd my wife's stomach growled again. \n\n\"We should go to dinner, darling,\" I offered.\n\n\"I believe we tried that, didn't we?\" she asked back cheekily.\n\n\"We did. And I'm afraid that I'm not really all that sorry that we failed, my love,\" I admitted.\n\n\"Me either. I love knowing how much you want me,\" Caeli smiled, less embarrassed at the confession than she would have been back before I'd left our honeymoon for war, \"But we should go see Vostiv and Lucax. And we should eat.\"\n\n\"Alright, Caeli,\" I smiled back and stretched before sitting up. \"You'll need to be strong for us both though, because I can always just eat you.\"\n\nShe blushed, whether from lingering modesty or at my terrible pun was unclear. More likely the pun I suppose. But she also took my hand as I helped her from the bed.\n\n\"No twirling this time,\" I admonished, as though it weren't all my doing the first time.\n\n\"I promise,\" she giggled as she went into her closet for a new dress, underthings, and jewelry. I watched as she donned everything, nearly as fascinated by my wife dressing as at her undressing.\n\nAs she did up her hair - plainly by her standards - I pulled on a simple blue linen tunic from my much smaller standing wardrobe - it was still a highly ornate piece of furniture made of gilded hardwood as befitted a princess' bedroom - and tied my hair back with a thong.\n\nThen I retook Caeli's hand and led her to the large dining room.\n\n\"As I live and breathe,\" Lucax looked up from her meal and greeted me, \"Ser Taiglox the Hordesdoom! Is it true that there were over twenty thousand-?\"\n\n\"Closer to ten,\" I cut her off, \"And it's not exactly polite conversation for dinner.\" I glanced, subtly, I hoped, at Caeli.\n\n\"Of course,\" Lucax demurred and changed the subject, \"Did you meet my cousin, Ser Dajtex, in the field?\"\n\n\"Ah, no,\" I confessed honestly, \"But I was only physically in camp for about a week total.\"\n\n\"I met her,\" Vostiv piped up, \"Redheaded. A knight of the Order Eternus Vigilantia, like you, right?\"\n\n\"Yes. The ginger hair she gets from her natural mother.\"\n\n\"Ah. Lieutenant Topex was with her.\"\n\n\"Not a knight of the Order Eternus Vigilantia,\" Lucax made her disdain clear. Not primarily because she was not of her order, presumably.\n\n\"No,\" Vostiv agreed and left it at that, \"But I also met...\"\n\nAnd so the dinner continued with the two sharing gossip on shared acquaintances. \n\nCaeli occasionally chimed in, but only once with feeling, \"Oh, yes. Turca is visiting the palace right now with Ser Kewintox,\" my wife openly yearned, \"I wish we could leave the apartments so you could meet her.\"\n\n\"Ah,\" I took an interest in the conversation for the first time since we sat. My sweet wife had not expressed much inclination toward companionship from women outside her family, and I rather thought that she probably ought, \"Is she a friend?\"\n\n\"More of a rival to be honest, I guess,\" Caeli colored.\n\n\"Huh,\" I asked the obvious question, \"Then why would you be so keen on our meeting?\"\n\nLucax smiled to herself silently, but Vostiv spoke out, \"Because she would get to show off that her Princess-Consort is the Hordesdoom. You're famously valiant, famously clever, and famously faithful. Turca would turn absolutely green with envy.\"\n\nCaeli didn't disagree per se, but she did defend her impulse. \"Well, she's always lorded things over me and easily, although we're the same age,\" Here my dear wife let some petulance into her voice. \"When we were eight, she got to visit the warcamp and watch the Battle of Jagged Maw. When we were twelve, she got to travel to Galisway and have silk gowns sewn by the most famous seamstress alive. And when we were teens, she got to marry a handsome knight first and went on a huge progress through the vast lands they'd inherit.\" \n\n\"And now you get to flaunt your more accomplished and more handsome knight,\" my self-satisfied squire fairly gloried in her reiterated and unusual perceptiveness.\n\n\"Yes, yes,\" Caeli agreed with her little cousin, but looked at me fearfully, \"You don't think I'm horribly and ridiculously petty?\"\n\n\"I don't think you're horribly petty,\" I teased my wife gently, but continued sincerely, \"And I'm ridiculously pleased that you're proud enough of me to want to flaunt me, even to a petty rival.\"\n\nIn a rare burst of public affection, she quickly brought the back of my hand to her lips and kissed my knuckles with a glad expression on her shining face.\n\nLucax rolled through onto a new conversation about how her horse - Seguidilla - was fairing, to which Vostiv added her growing and perhaps bloated estimation of her Stygian.\n\nNot feeling the need to tout Savaran's known prowess, I quietly held my wife's soft hand instead. The choice to hold hands with Caeli did force me to eat with my left hand, against all rules of propriety and at the expense of a gravy stain or two on my blue tunic.\n\n\"Can we go to the library after dinner?\" Caeli asked unexpectedly, and with an unaccountable rosiness to her cheeks.\n\n\"Of course, my love,\" I assumed she might be anxious that I mightn't be as impressed as she'd hoped with her progress into the world of literacy. Eager to assuage her concerns, I added, \"I'm sure I'll be dazzled at what you've learned.\"\n\nI was gazing down at my wife, but looked up as Lucax laughed so hard and so suddenly that she snorted wine.\n\nThe coughing Hetaireia Soma merely caused me to frown in confusion, but Caeli spoke up, \"You hush,\" she ordered clearly, shooting Lucax the same commanding look that she so often blazed at Yonjax and wagging her finger in the same way.\n\nI didn't understand the reason yet, but knowing that my tenacious wife was ruling her roost and running \"my\" household gladdened me. \n\nLucax held up her hands in brief surrender, and then took greatly focused interest in the green beans on her plate.\n\nMy squire caught my eye and laughed nervously, \"Wha-?\"\n\n\"You hush too,\" Caeli looked at each of us pointedly, \"Both of you.\"\n\nI hushed. If there was ever any actual doubt as to which of us was in charge...\n\nShe seemed to take a moment to gather her resolve, then my right hand was squeezed and she decided decisively, \"Let's go to the library.\"\n\nI followed my oddly determined wife without question to the library, where she closed the large, heavily-gilded wooden door behind us.\n\n\"Now you sit there,\" she directed me into the cushioned chair she typically sat in, then started adjusting the various lamps and candles in the room which augmented the light of robust warm fire that softly crackled in the large stone fireplace.\n\n\"While you were gone, I explored through the library.\" No mean feat, given the expansiveness of the collection. \"And I found some books,\" presumably the six tomes she carried with her and set on the end table beside me, \"with a lot of useful illustrations. Pictures alone weren't enough, so I did enlist Lucax's help with the text, much to her chagrin.\" Explaining Lucax's reactions.\n\nI nodded and remained silent as she seemed so intent on relating something to me.\n\nShe retook my hand. \"I want to be a good wife to you.\"\n\n\"You are,\" I tugged gently on her hand to pull her into my lap, but she resisted, \"Of course you're a good wife to me.\"\n\n\"I mean in every way.\" Caeli asserted. \"I haven't given you an orgasm and I should be doing that,\"\n\n\"Darling, that doesn't matter. I love you. I-\" I tried to console her. I didn't pull her into my lap like I wanted, but I didn't let go of her hand.\n\n\"I know,\" she stopped me, \"I'm not as naive as you think. Certainly not as naive as I let you believe. I know why they call you Hordesdoom, and I'm proud. And I know why they call you Whoresdoom, and I'm... appreciative.\" \n\nI swallowed as Caeli caressed my cheek with her free hand. I'm glad she's pleased at the causes of my monikers, but I don't like for her to think of me either killing people - even enemies - or being propositioned by people - even campfollowers.\n\n\"You shouldn't have to worry over such things, my love,\" I pulled her hand again, instantly wanting to wrap her in my arms and make her feel my love for her.\n\n\"Tai, I'm telling you that it's okay. It's okay that I know your actions and your reputation. I don't need you to filter your life and thoughts to protect an innocence I haven't actually had since the first time I heard Heoldax report a battle as a little girl. And, frankly, being here without you these last few weeks has given me free time to talk with Poumi and Lucax to learn some additional things that, to be fair, I'd not have been told before I was married.\"\n\nI raised my eyebrows, but she wasn't done.\n\n\"I don't want to be consigned to a false naivete by you or with you. I should be your lover, not your ward. In fact, I'm more sexually experienced than you in at least one way.\"\n\n\"How's that, my love?\" I asked in honest befuddlement.\n\nShe kissed the back of my strong hand, \"I know what it's like to have the woman I love bring me to sexual fulfillment. And I want that for you, too.\"\n\nI smiled up at my amazing wife and waited for her to continue.\n\n\"You're a good wife to me. And I want to be a good wife to you in every way. I studied for it. Extensively,\" Caeli patted the stack of books and she fixed me with the same reprimanding look she used to keep my fellows in line. \"I just need you to be patient and let me try.\"\n\n\"Okay, Caeli.\" Really, I had no reason to argue. And no one ever backtalked when given that steely look from my darling wife.\n\n\"Good,\" she crowed slightly before appearing slightly abashed. She made good arguments, but reading and discussing theoretical sexual acts is different than initiating and directing them in the flesh, so to speak, \"I, um, I do need you to stand up and take your tunic off, please?\"\n\nSmiling, I stood and took my blue tunic off over my head. Then I waited, proudly and comfortably naked before my intent wife.\n\nIntent she was, looking at me simultaneously as a specimen to learn on, a sexy woman, and her doting consort. \"Now I need you to sit back down in the chair and spread your legs,\" she directed.\n\nI complied.\n\nShe knelt fully dressed on the carpet in front of me. Her fingers naturally went to my open sex.\n\nI'd given her access to me before to play as she would of course, but never had she approached my nakedness with any studied foreknowledge beyond her self-experience and her few weeks of experience at my tongue and fingers. Now that she knew what she could do - or what she should be able to do - she seemed much more conscientious and hesitant than in her initial passion fueled forays.\n\nSo I petted her. I whispered loving words. She looked up at my face. I caressed her cheek. She nuzzled into my hand.\n\n\"No!\" she disagreed resolutely with the direction we were sliding and jerked her head back. \"No. You just keep your hands gripping the arms of the chair and you just stop lulling me.\"\n\nI gazed deeply into my wife's dark fathomless eyes and responded sincerely, \"I am not sorry.\"\n\nShe frowned at me, \"I know. You are incorrigible.\"\n\n\"I'll be good,\" I promised. And mostly meant it.\n\n\"Okay,\" she opened one of her books to a page that seemed primarily a very specific anatomical drawing. Her studious face is adorable. \"I just need to find...\"\n\nShe looked to the book and then to me and back to the book. I fought the desire to smile down at her in intrigued amusement. \n\nIt was even more difficult not to smile as she cocked her head, looking back and forth. Then I had to focus on controlling my breathing as feathered touches traced the edges of my outer lips.\n\n\"Hrmm,\" she muttered, not generally something I'd like to hear when she was where she was, but it was soon made clear that she was irritated by her lack of visibility rather than by what she saw.\n\nMy adorably fussy wife then got up and moved the candles in the room to better light her focus area between my spread legs. But then she also adjusted the candles lighting my face, which I found flattering, but odd.\n\n\"I need to see your face to know how I'm making you feel,\" she answered my confused expression.\n\nThat kind of hurt, my wife telling me that I lacked the bearing to control my facial expressions.\n\nShe read my face again though, proving her point really. \"No, no. My sweet Tai. No one is more stoic or disciplined than you, but your thoughts are written all over your honest face whenever I look at you,\" here she smiled, \"And there are signs I need to look for.\"\n\n\"And what signs might those be?\" I glanced down at her opened texts in curiosity, able to read a few words upside down. \"Princeps sanguinem,\" \"Foti\u00e1,\" and \"\u00e7i\u00e7ek a\u00e7ma.\" None were words that I'd associate particularly with lovemaking in a practical way, but I'd never read a practicum primer on the subject either.\n\n\"Don't you worry over signs right now,\" she implored me, \"Just, be patient, okay? I need you to be patient and let me try. And maybe not talk for a little?\"\n\n\"Of course, Caeli. Whatever you want, my love.\" I sank back into the luxurious chair as nimble little fingers spread me open to the warm air.\n\nI broke my word to keep my hands to myself almost immediately, gently caressing the dark glossy hair on the crown of her head as she brought her face between my legs to add to the stimulation from her fingers.\n\nShe huffed a little, but seemed to accept that I only meant to pet her to show love and encouragement.\n\nAnd yeah it took a while. And not chuckling on occasion required a bit of discipline, especially as I could only see the upper half of her face and - when she concentrates - her fine eyebrows knit tightly and comically together.\n\nIf anything slowed my progress, it wasn't her inexperience exactly so much as the range of pleasurable actions she was performing. Her quick tongue amongst my folds, teeth nibbling my lips, hands caressing my thighs, index and thumb lightly pinching my clit, tonguing my tunnel, fingering searchingly, then tonguing again. \n\nEven moving her hot breath over different portions of my exposed sex.\n\nBut then she got into a rhythm and it felt good. Really good.\n\nI continued to pet her pretty hair, more erratically as I started to lose my senses. But I focused enough to let her retain the reins in the lovemaking session.\n\nHer tongue lashed with increasing confidence. Her little fingers pistoned in and out of me.\n\nMy sweet wife did things to me that had never been done to me before, introduced me to things I'd never tried before. Not that I'd expansive experience myself, but my eyes rolled back in my head when one of her wet little fingers slipped into my ass.\n\nI still don't know which finger, but the wiggling in concert with the licking and thrusting sent me over the edge.",
        "I slumped down and back in the chair in satisfaction, my head drooping sleepily with the lovely orgasm following the large rich meal. \n\nThe welcome weight of darling Caeli climbing into my lap pressed me down a little into the cushy chair. \n\nThe fragrance of her zanabaq scented hair mingled with the smell of fresh sex as my equally - if differently - satisfied wife tucked her head under my chin.\n\nThe decadence of my life with her in those apartments washed over me. Nothing we did was in keeping with my normal spartan and austere philosophies on life, but I could not bring myself to regret the indolent pleasures we shared as we honeymooned together.\n\n\"Tai?\"\n\n\"Yes, my love?\" I murmured drowsily into the crown of her sweet head.\n\n\"Can we try more things I read about? In bed?\" she entreated softly.\n\n\"Now?\" I nuzzled her hair and pulled her more tightly to me.\n\n\"No. Not now,\" she giggled. \"Definitely tomorrow at the soonest.\"\n\n\"Of course, then, dear Caeli,\" I agreed sleepily.\n\n\"Can I tie you up?\" Same sweet tone, so sweet that the words themselves wouldn't register properly.\n\n\"I'm sorry?\" I asked, still bleary.\n\n\"Can I tie you up?\"\n\n\"I don't know how to answer that. Why would you want to tie me up?\"\n\n\"Because,\" she turned in my lap and started kissing my jaw, \"You're big,\" kiss, \"and strong,\" kiss, \"and I can never really be in control with you if your limbs are free.\"\n\n\"Is that something from one of these books?\" Still too blissed out to be bothered pointing, I inclined my head toward the half dozen books still piled on the floor.\n\n\"Not those exactly, but one in the library. And talking with Poumi and Lucax. Not about Yon or my mother. That would be weird. But, you know, generally.\"\n\n\"All right.\" There was nothing strictly dishonorable that I knew of in letting my wife tie me up and I could bring in some tact that would work easily. We were guarded day and night in the palace. The worst thing that might happen would be the embarrassment of her having to call in help to get me untied if she got in over her head. I could handle the risk of a little embarrassment for her sake. \"Anything you'd like, darling.\"\n\nShe kept kissing but I felt her smile, \"Can we invite Poumi and Yon for dinner tomorrow, too?\"\n\n\"Yes, dear Caeli,\" I nuzzled the crown of her head and drifted to a half-sleep.\n\nHer lips kept playing over my chin, jaw, and cheek. Her hand tenderly caressed my other cheek. \n\nTen bells rang out, rousing me a bit.\n\n\"Caeli, would you like to bring a book with us - perhaps a less racy text - and read ourselves to sleep?\"\n\n\"Yes, my sleepy bear.\"\n\nBearlike enough, I rose, pulled my tunic over my head and lumbered after her on pleasantly sex-deadened legs.\n\nHappily, I untied and removed her dress and accoutremount before we climbed into bed together, neither of us bothering with night clothes anymore. \n\nShe curled up inside my arm, her head on my chest. I took it upon myself to stroke her hair fondly and kiss her forehead, ready to drift to gentle slumber with dear Caeli instead of reading.\n\nEqually willing to forgo reading, my lovely wife did wish to talk, \"Tai?\"\n\n\"Yes, dear Caeli?\"\n\n\"Are you happy here? With me?\"\n\n\"Felicitiously.\"\n\n\"You wouldn't rather be off in camp? Having adventures?\"\n\n\"Not at all. Anywhere away from you is miserable.\"\n\n\"But, we can travel together, right?\"\n\n\"Certainly, dear Caeli,\" I labored to concentrate on awakedness, \"After our honeymoon ends, we can travel as you like.\"\n\n\"Good. I may have already asked my mother if we could do a progress.\"\n\n\"To which she said...?\"\n\n\"Yes. She said it was a good idea for next month. We'll go with Yon and Poumi and about a quarter of the court to visit Houses Laerdya and Miwirdya and a few other seats of power. She said she might even come herself.\"\n\n\"Sounds lovely, darling.\" I'd vague notions that we'd ride a few days' distance in the company of my squire and some soldiers and guardswomen, stay in nice inns, and see some of the countryside. But I suppose the prospect of her visiting important Houses in major cities with castle accommodations and a full retinue made better sense as she'd be more at ease among her peers. Probably there was political capital to be spent and acquired as well, though that was not my province to consider. \"Whichever manner of travel the Queen thinks best, doubtlessly is best.\"\n\n\"You're not mad that I,\" she seemed to search for a word other than 'dictated' to describe her planning out our near future for us without consulting me, \"decided while you were gone?\"\n\nI kissed her nose, making her laugh, \"Dear Caeli, I'm happy to be with you wherever you arrange for us. And you needn't worry over,\" I searched for a word other than 'manipulate,' not for lack of descriptive truth so much as for avoiding unnecessary harshness, \"convincing me. So long as your choices don't endanger you or incommode Her Majesty.\"\n\nMy lovingly wife caressed my wind-chapped cheek with her callous-free hand, \"You're the best Princess-Consort, Tai.\"\n\nI smiled and rolled to half lay on her, burying my face in her warm neck and finally getting to my cheerful sleep with my enchanting princess."
    ],
    "authorname": "LesbianChickLit",
    "tags": [
        "fingering",
        "historical fantasy",
        "lesbian",
        "lesbian drama",
        "lesbian novella",
        "lesbian oral",
        "lesbian romance",
        "lesbian sex",
        "love",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-arete-princess-consort-ch-06"
}