{
    "title": "Advanced Sexual Education Ch. 03",
    "pages": [
        "Day three. \n\nI was a bit more nervous, so I arrived earlier than usual. I got there about 10 minutes before class started. Because I was so early, I was the first one to arrive.\n\nI walked to my usual spot in the second row, and put my bag next to my chair. Before being seated, I took a big breath and readied myself for what I was about to do.\n\nThe reason I was so nervous today was Ms Sharon's instruction from the previous class: \"be naked before class starts\". In the previous classes, we were each named off, and stripped one-by-one at the command of Ms Sharon. When Ms Sharon told me to strip, I didn't have much choice. I either stripped, just like everyone else, or I would lost points for participation. Besides, I knew it was necessary for the class, and I wouldn't learn as much if I didn't.\n\nBut this time was it was a bit different. This time I would strip at my own leisure. I knew I could choose not to, and wait until class started, but Ms Sharon said to be naked before class started, and I knew there had to be a reason for that.\n\nSo, I took another big breath, and whispered to myself, \"here goes nothing.\"\n\nI grabbed the bottom of my purple t-shirt, and slipped it up over my head, lifting my arms high into the air. Just like the previous class, I opted for no underwear, since they'd be coming off anyhow. So, once my shirt was removed, I was standing there, alone in a classroom, topless. I felt a draft glide over my naked torso, and shivered. I dropped my shirt onto my bag before continuing.\n\nFor my bottom half today, I decided to wear a purple and black skirt made of a light material; maybe polyester. I knew it would be easier to remove a skirt than pants, and I wanted to make this as easy as possible for myself. So, I untied the side of the skirt, and slipped it down my legs, bending over.\n\nBefore I stood back up, I heard a whistle from behind, which made me jump. I snapped my hands to my chest and my crotch, and spun around to face my guest.\n\nAs I turned, I saw it was Filipe, who was zealously inspecting my entire naked body. I wondered how much he saw before announcing his presence. I couldn't be sure, but I'd bet he saw my pussy from between my legs while I was bent over.\n\n\"Sorry Samantha,\" he said, as he walked toward his usual spot on the left side of the classroom. \"I couldn't help it. You are just so sexy!\"\n\n\"Uh...well...\" I stammered, trying to think of a valid response, given the situation. \"Thank you, I guess.\"\n\n\"You're welcome.\" he replied with a smile, as he placed his bag on the floor. \"I see you've followed Ms Sharon's instructions. I suppose since you've set the example, I should join you.\"\n\nHe then pulled one arm into his shirt, and pulled it off his body, then his other arm, revealing his dark, toned abs. Then he unbuttoned his jeans, unzipped his fly, and pulled both his jeans and his boxers off, freeing his large, limp cock. It was around 4 inches already.\n\n\"Much better,\" he said, smiling at me. \"Now that we're both in our birthday suits, how about you lower your arms?\"\n\nI considered it for a moment. He was just as naked as me, so I might as well. I shrugged, then lowered my arms, showing him my the rest of my naked body.\n\nHe didn't try and hide his gaze as he looked at my tits and my bare pussy. I saw his dick grow in size a little. I smiled at that.\n\nWe both took our seats, and a few seconds later, the next student arrived: Latoya. She walked to her seat, one row behind me. Seeing that we were both sitting there naked, she quickly removed her clothes as well. As she did, Filipe and I both watched intently.\n\nLatoya was wearing a white tank top, and very short jean shorts. Around the edges, I could also see the straps of a black bra and the hem of black underwear She started by grabbing the bottom of her shirt with both hands and pulling her tank top off. Then she unbuttoned and unzipped her shorts, revealing her long, dark, smooth legs. Then she reached behind her back, and undid her black bra, dropping it to the floor, which revealed her A-cup breasts, and dime-sized nipples. Finally, she grabbed the sides of her black panties, and pulled them down, showing us her bush, which was neatly trimmed into a thin vertical line. Now finished, she sat down behind me, crossing her arms and legs.\n\n\"So, what do you guys think of the class so far?\" I asked, glancing around at each of them.\n\n\"Well, I'm enjoying the class so far\" replied Filipe. \"It's definitely been interesting so far, and I'm sure it will only get more interesting going forward. How about you?\"\n\n\"Well, I certainly think it's an interesting class. When I signed up, I was not expecting something so...risque. But, I think it's a very exciting class, and I'm determined to learn a lot. I've had a few sexual experiences, but it seems like every time I get into the bedroom with a guy, I don't have a clue what to do.\"\n\nLatoya laughed. \"Yea, I feel the same way most times. I think this class will certainly help with that.\"\n\nAs we talked, more people arrived. Each of them followed our example and stripped down completely naked. Most people were a bit hesitant, but if their logic was like mine, they figured that everyone else had seen it all before, and were eventually going to see it again. Also, it sounded like we would all become much more familiar with each other's bodies in later classes.\n\nJust at the start of class time, Ms Sharon arrived. She also took her own instructions to heart, as she had stripped before arriving. The only thing she wore was a bag over her shoulder and a smile on her face.\n\nHowever, the more interesting part of her arrival was that she was followed by a familiar face: Nicole from the library!\n\nNicole was dressed in a tight, dark grey t-shirt, with a sports brand logo across her mid-sized breasts. On bottom, she wore a pair of black, spandex yoga pants that clung to her body very tightly. With the two tight items, the curves of her slim body were very much apparent. So apparent, in fact, I saw a cameltoe between her legs. \n\nEven with her very tight clothing that didn't hide the shape of her body whatsoever, she was still a lot more clothed than the rest of us. She seemed quite out of place.\n\n\"Hello class.\" said Ms Sharon, as she placed her belongings on the desk. \"I'd like to introduce a new student: Nicole Jackson. Yesterday, she witnessed a sample of your assignment, in the form of a nude Samantha in the library. After their parting, she took an interest in the class and reached out to me about joining the class. I happily added her to the roster.\n\n\"Now, since Nicole is joining us a bit late, she will not get the convenience of an easy first day. She will be required to strip completely, just like everyone else. She will also be required to do some catching up, and thus, she must perform yesterday's activity before next class period. I have already given her a random action and location.\n\n\"Now, Nicole, I will ask that you strip, then tell us a bit about yourself, including your virginity status.\"\n\n\"Wow. Okay.\" replied Nicole, a bit shocked at the abruptness of the situation. She looked like she had just performed a cannonball into a lake on a January morning. \"Well, I'm-\" she started.\n\n\"Strip first, please.\", interrupted Ms Sharon. \n\n\"Alright.\" Nicole replied, and took a breath. \"Here goes nothing.\" \n\nShe placed her bag next to a nearby desk. She then grabbed the waist of her yoga pants, and slowly wiggled them down her legs, swaying her hips back and forth. Due to the tightness of the yoga pants, her panties came down as well. As she pushed them down, she bent over at the waist, allowing Ms Sharon, who was behind her, to get an excellent view of Nicole's womanly parts.\n\nOnce those were removed, Nicole kicked them over to her bag and started on her top half. She pulled one arm, then the other, out of the arm holes. Then she lifted the shirt over her head, and threw it over to her bag as well. Now that her shirt was gone, we could all see that she had one final tight piece of clothing remaining: a black and green sports bra. She quickly grabbed the bottom of the tight bra and pulled it over her ample breasts. She peeled it up over her head, and tossed it on top of her pile of clothes.\n\nI was wrong earlier, when I said she had mid-sized breasts. They only appeared mid-sized, due to the restrictiveness of the sports bra. Once that was removed, it was clear that she was easily in the top 3 in the class for breast size. I'm not sure if it was because of her large breasts or not, but her nipples appeared quite small in comparison.\n\n\"Well, now that I match everyone else, I'll introduce myself. As Ms Sharon said, I'm Nicole. This is my third year as a student here. I'm from Florida. I was interested in this class, as it directly pertains to my major: Human Psychology. Finally, to answer Ms Sharon's specific question: No, I am not a virgin.\"\n\nShe then took her seat, crossing her legs, but leaving her large breasts for everyone to see.\n\nMs Sharon stepped back to the front. \"Thank you very much Nicole. I'm glad you decided to join the class, and I'm sure you will gain a lot of useful information pertaining to your focus of study.\n\n\"Now, class, on to today's material. First, I wanted to review yesterday's activity, and get your feedback. So, what did you all think of it?\"\n\nAfter a moment's silence, Nicole raised her hand and Ms Sharon indicated she should talk. \"Well, having not actually done the activity yet, I can't speak to that aspect of it yet, but I think I can give a unique perspective, as I was able to view the activity from the outside. I think it was a great activity that I'm sure got everyone out of their comfort zones. It speaks to the courage of everyone here that you were able to do that. Also, to be honest, it was very sexy. I can honestly say that seeing Samantha naked in such a public place as the library turned me on quite a bit. I can't wait to do the activity myself.\"\n\n\"Thank you Nicole,\" said Ms Sharon, when Nicole was finished. \" That was indeed some useful insight. Anyone else?\"\n\nAfter another moment with nobody responding, Ken spoke. \"Well, I can definitely say it was embarrassing. I don't think I've ever been that embarrassed in my life. However, I can also say that I've never done something so exhilarating in my life. It felt amazing to walk around campus with everything on display. I felt like all the secrets of modern society were ripped from me, and I felt so free. Anyhow. That's my thoughts.\"\n\n\"Excellent. Thank you Ken. Since nobody else seems willing to share their thoughts, I'll continue. And that's fine. I know it was a very personal thing that you all experienced, and it's perfectly acceptable that you don't want to share that with the rest of the class. However, I hope you were all honest with your write-ups. The only two people who will read those are yourselves and me. Speaking of the write-ups, everyone please take those out. I'll come around and collect them.\"\n\nAfter a minute or two, Ms Sharon had all the papers collected into a pile, which she placed in her bag.\n\n\"Thank you everyone. Now that I've collected all of your first-hand accounts of your exhibitionist experiences, we will be moving on to our next topic. However, we are not done with exhibitionism in the context of this class. It will play a role in many topics we cover in the future, and it will be one of the options to be included in your final project. \n\n\"Now, as I've said, the goal of this class is to study human sexuality. Our first topic will build a foundation that we can build on for the rest of the semester. That topic is male and female human anatomies.\n\n\"In order to cover a real amount of detail for this topic, we will use live demonstrations. I would use myself as the female demonstration, but I wouldn't be able to properly point out each body part. So, I will need two volunteers; one male and one female.\"\n\nNobody raised their hands. I, for one, didn't want to be singled out in front of the class for this demonstration. Ms Sharon was being somewhat vague, but I guessed that whoever was being used for the demo would have their entire body closely examined by everyone in the class. I might have gained a certain level of comfort in my nudity around my fellow students, but this demo would take things to another level that I wasn't sure I could handle. My guess is that everyone else was having similar thoughts and feelings.\n\n\"Well, if nobody will volunteer, I'll have to pick two people at random. I figured this was going to be the case, so I've prepared two bags, male and female, containing each of your names. Each time we run into the case of no volunteers, I'll pull a names out of the bag. I will leave the names out until everyone from that gender has done a demo, then I will replace them. That will ensure that everyone gets a chance to participate, and that nobody gets singled out too much. Unfortunately, since there are less girls, that does mean you will each participate more often than the boys. Sorry, but there's not much I can do about that.\n\n\"So, I'll give everyone one more chance to volunteer on this activity. I will tell you that this is one of the more easy activities we will do this semester, so if you want to get your demo out of the way, feel free to volunteer.\" \n\nShe waited another moment for anyone to raise their hand. Nobody did. \"Alright. Then we'll leave it to chance. I'll pick one name from each bag today.\" She reached into the boy's bag first, and pulled out a small piece of paper, and read it aloud. \"Filipe.\" She then reached into the girl's bag, and pulled out a second piece of paper, \"Nicole.\"\n\nWow, I thought, that sucks for Nicole. Not only is she stripping on her first day in the class, but she's also doing a demo.\n\n\"Okay, both of you come stand up here, please.\" They stood and walked to the front of the class, then turned and faced us, standing about two feet apart from each other. They both looked very nervous about what Ms Sharon was about to ask them to do.\n\n\"Thank you. So, first we'll cover all of the non-sexual parts, although in some sense, you could argue that all body parts can be considered sexual, in one sense or another. Most of the body parts that we traditionally think of as non-sexual are the same between the male and female body. Actually, two thirds of the sexual parts are quite similar as well.\n\n\"So, we'll start at the head and move down the body from there. First, we have the hair. As you all know, on average, men tend to have shorter hair than women. Of course there are exceptions. Some men like to grow their hair out, and some women prefer to cut theirs short. But the social norm is that a girl's hair is long enough to come past her ears, and men's tend to max out at around the top of the ear.\n\n\"Next we have the face. Men tend to have sharper features, whereas women's faces tend to be more rounded. Another defining feature of the male face is facial hair. While women technically can grow facial hair, society has shunned it, so in most cases, it is considered a male feature. Women, on the other hand, tend to define their face via more artificial means, through make up, jewelry, and the like.\n\n\"Another important facial feature that we will touch on quite a bit in this class is the mouth. The reason that is important for this class is the fact that it's one of only three orifaces that are generally used for penetration. In the case of penetration of the mouth, it is known as oral sex. We will cover oral sex in detail, a few classes from now.\n\n\"Moving on down, we have the torso.\" And so she went on, describing the similarities and differences between the male and female body, skipping over the \"private\" parts. As she described each part, she would point out where those parts were located on Filipe and Nicole's bodies.\n\nWhen she was finished describing the feet, and how they were a specific fetish for some people, she said, \"That concludes the non-sexual parts. Now we'll move on to the more intimate parts of the body. Now, Filipe and Nicole, I understand that this part of the demonstration will probably make you uncomfortable, and that's understandable. However, this lesson crucial in order to eliminate any confusion that may otherwise occur in future classes.\n\n\"So, first, we have the chest. Both males and females have nipples.\" She pointed to each of Filipe's nipples, then to Nicole's. \"The very center, raised area is the actual nipple. The surrounding dark area is called the areola. The area surrounding that on females also has a name: the breast.\" \n\nShe pointed to the surrounding area of Nicole's breasts. Nicole blushed. \"It also colloquially has a few other names, including: tits, boobs, and knockers.\n\n\"In most societies, the breasts are considered a 'private' area, and thus, they are kept covered.\" she said, as she air quoted the word private. \"A woman's chest is also different from a man's, in that they produce milk. However, that only happens when the woman is pregnant, which Nicole here is not. So we obviously can't demo that.\n\n\"Moving on, we have the rear. Both of you, please turn around.\" They hesitated, but slowly did so, without question. She pointed to each of their asses. \"The rear has many names, including butt, ass, bottom, glutes, and several others. It is very similar between males and females. They both have two cheeks on either side,\" she pointed to each of Filipe's cheeks, then each of Nicole's, \"and a crack down the middle.\" She ran her finger down each of their cracks, causing them to shiver. \"Now, the last part of the rear is the anus. However, with a simple glance at Nicole and Filipe's bottoms, you will not see the anus. Both of you, please spread your legs, and bend over the table in front of you. You can lean on it for support.\"\n\n\"Ms Sharon, do we really have to do this?\" objected Nicole.\n\n\"Yes, Nicole, you do.\" replied Ms Sharon, in a stern voice. \"We must cover all the parts of the human anatomy, especially the sexual ones, and the anus is a very important part that we will be covering many times throughout the semester. If you can't handle this simple request, you will have difficulty with a lot more requests this semester. However, if you really feel uncomfortable, you can pass on this demo, but it will affect your participation grade.\"\n\nNicole sighed. \"No, that's alright. I'll bend over.\"\n\nHer and Filipe both spread their legs to shoulder width, and bent over at the waist, with their asses facing us. From this angle, I could see a good part of each of their asses, as well as Nicole's wet pussy, and Filipe's hardening cock hanging down, between their legs.\n\n\"Thank you. Now, we still can't really see the anus, so I'm going to have to spread your cheeks apart.\" She stepped next to Flipe, and spread his ass cheeks, revealing his tight ass hole. \"There's the male.\" She released them, and moved over to Nicole. She grabbed each of her ass cheeks and spread them wide. \"And here's the female. Nicole, can you please hold these for me, so I can point out important details.\" Nicole reached behind her and held her cheeks apart. \"Thank you. This is the anus.\" she said, touching Nicole's asshole. \"Like the other private parts, it has a few different names: anus, asshole, butthole, and rectum. It is a muscle that opens and closes, based on how relaxed the person is. As you can see, Nicole here is quite tense. Could you please relax, Nicole, so your classmates can see the difference?\"\n\nIt took Nicole a moment, but her asshole noticeably loosened. \n\n\"Thank you Nicole. The anus is one of three orifices that are generally used for sex. It's generally tighter than the vagina, and can be more painful for the receiver, if lubrication isn't used. There's a lot more to be said about the anus, but we will cover it in detail at a later date. Thank you Nicole. You may both stand.\"",
        "Nicole released her ass cheeks, and stood up. Filipe stood as well. Nicole was very red-faced, understandably. She just exposed one of the most intimate parts of her body to a group of about 20 people (most of whom she hadn't even really met yet), while another woman described it in detail, as well as a mention of it being used as a fuck-hole.\n\n\"Alright. Now we'll move on to the main sexual organs. This is the biggest difference between men and women. Before we start, I'd like everyone to move closer. Since these are such important parts of the human anatomy, I want everyone to get a good view. How about you scoot your desks back, and sit on the floor in front here?\"\n\nWe all stood, moved some desks around, and sat in a large group, no more than 10 feet from Nicole, Filipe, and Ms Sharon. The people in front were even closer; maybe less than 2 feet away. Because we were so packed in the front, trying to get a good look, most of us were touching each other in some way or another. Someone's knees were touching my lower back, and my knees were touching Amy's back in front of me.\n\nMs Sharon continued, \"Thank you everyone. Now, we'll start with the male genetalia: the penis. Nicole, you may join the rest of the class on the floor for now. Filipe, please sit on the desk, and spread your legs a bit.\"\n\nNicole sat in an open spot near the front, as Filipe took a seat on the desk, and opened his knees to about shoulder-width.\n\n\"Now, this is the penis.\" said Ms Sharon, touching Filipe's erect cock. \"It also has the names: cock, dick, balls, package, meat, and some others. It has two main parts: the shaft and the testicles.\" She stroked his shaft, then lifted it, and then pointed to his testicles. \"At birth, the shaft has some skin called the foreskin. However, Filipe here has had his removed. In modern society, many babies have their foreskin removed, for health benefits, in a process called circumcision. The merits of circumcision are debatable.\n\n\"Now, Filipe's cock is currently erect. That means the shaft is much larger, and more rigid than it normally would be.That usually happens when the male is aroused, but can also happen for other reasons. When the penis is erect, it's more sensitive, and can more easily achieve penetration. His appears to be around 7 inches long, which is on the larger end of the spectrum. I took a mental note of his size before we started, and it was around 4 inches. So that's a growth of about 3 inches.\n\n\"That's pretty much it for the shaft. As for the testicles, there's not a whole lot to say. They're the place where semen is produced, and they're very sensitive. When handled roughly, it causes pain to the man.\n\n\"That concludes the male genetalia. On to the female. Filipe, you may be seated. Nicole, please take a seat on the desk, lay back, pull your legs back toward your chest, and spread them as far as you can.\"\n\nFilipe and Nicole switched spots. Nicole walked to the desk, and sat on the edge. Like Ms Sharon said, she laid back, and spread her legs wide. That gave us an excellent view of her entire pussy. Nothing was hidden from our view.\n\n\"Perfect, Nicole. I know this is an uncomfortable situation, but it's necessary for everyone to fully understand the female anatomy. Now, the female genetalia is known by several names, including: vulva, pussy, vagina, twat, snatch, and many, many others. The pussy has several parts to it. Firstly, you have the labia majora.\" Ms Sharon touched both of the outer sides of Nicole's pussy. \"This is the part that is most easily visible, and covers the rest of the pussy. \n\n\"Nicole, don't be alarmed. I'm going to spread your pussy with my fingers, so we can better see the rest of the parts.\" She grabbed either side of Nicole's pussy lips with her index fingers and thumbs, and spread them wide. \"Thank you for cooperating, Nicole. Next, we have the labia minora. These are two more flaps of skin that protect the entrance to the vagina. Together, the labia majora and labia minora are known as the labia, or pussy lips. In the middle here is the urethra, where Nicole urinates from. Can everyone see? The next two parts are the most important. If you need to, move closer.\"\n\nSome of the students in the back moved around to the front, so we were all in a semi-circle around Nicole. We were all staring intently at Nicole's pussy. She seemed quite embarassed by this, but didn't put her legs down. She simply turned her head to the side, and closed her eyes.\n\n\"Good. So, here is Nicole's urethra. Now, the next part is the pleasure center of the most female bodies: the clitoris, or clit. The tip of the clit is located at the top of the pussy, but recent studies have found that the clit has a detailed internal structure as well. That outer part can sometimes be a little hard to find. Let's see if I can find Nicole's.\" Ms Sharon rubbed around in the top of Nicole's pussy, until she found it. \"Here it is. Since the clitoris is a vital part of female pleasure during sex, I want everyone to be able to find it in the future. So, I want each of you to come up and find Nicole's. I'll help you if you can't find it.\"\n\n\"What?!\" said Nicole, sitting up. \"You're going to have each of them touch my pussy?\"\n\n\"Yes, Nicole,\" replied Ms Sharon, as she put a hand on Nicole's shoulder and pushed her back down. \"It's a necessity. Just enjoy it. Filipe, you're closest, so you will go first. Come here.\" He stepped forward. \"Alright, now I want you to put your index and middle fingers right here.\" She grabbed his hand and placed his fingers right about where Nicole's clit was. \"Now rub around a little. You should be able to feel a little nub, and Nicole will squirm a little when you find it.\"\n\nFilipe rubbed Nicole's pussy for a moment, and Nicole twitched. \"There you go. That's Nicole's clitoris. Alright, next. Samantha?\"\n\nI stepped up. I was a little nervous. I had never touched another girl's pussy before. However, I knew exactly where my clit was, from much experience, so I knew it wouldn't be hard to find. I stepped between Nicole's legs, reached down, and immediately found her clit. I rubbed it for a few seconds, making Nicole squirm, almost to the point of making noises. Then I stepped back.\n\nFor the next couple minutes, each of the other thirteen students walked up, rubbed Nicole's pussy, and made her squirm. Toward the end, she was making quite a few sounds of pleasure, and I'd bet she was close to cumming.\n\n\"Good job everyone. Now you all know how to find a woman's clitoris. That will make each of your sexual encounters much more enjoyable for your female partners. Now, the last part of the female genetalia, and arguably the most important, is the vagina. The vagina is the opening in a woman's sexual organ that allows for penetration. It is also where a woman gives birth from.\"\n\nMs Sharon reached into her bag, and pulled out an odd, metal device. \"This tool is called a speculum. It is used by doctors during a gynecology exam, in order to get a better look inside a woman's vagina. Today, I will use this one to open Nicole's vagina, so you can all see inside. Nicole, please stay laying, with your legs spread wide, and i will insert the speculum. It might be a little cold.\"\n\nNicole stayed laying on the table, with her legs held apart. Ms Sharon placed the tip of the speculum at the entrance to Nicole's hole, and slowly inserted it, causing a small moan of pleasure from Nicole. Once it was completely inserted, Ms Sharon squeezed the handle, which caused the inserted part to spread, and thus, open Nicole's vagina. At this point, we could all clearly see deep inside of Nicole.\n\n\"Good. Now, you can all see inside of Nicole's vagina. What you are looking at is Nicole's cervix. Beyond her cervix is her uterus, or womb, which is where a baby grows. \n\n\"Now, for the last topic we will cover today. For the purposes of this class, the most important part inside a woman's vagina is her g-spot. This is a spot on the front, inside wall of her vagina. It's a little rougher than the spots around it, and it causes the woman lots of pleasure. Recent research has hypothesized that the g-spot is the place where the clitoris meets the vagina. Let me see if I can find Nicole's.\" Ms Sharon first removed the speculum, and placed it on the table. She then slid two of her fingers inside Nicole's pussy, and wiggled them around, until another moan escaped Nicole's lips. \"Yep, there it is.\n\n\"Before we move on to today's final activity, I will explain your homework. Before the next class period, I want you each to review the parts of your own body that we have discussed today. For the men, that would include the testicles, shaft, and anus. For the women, that would be the breasts and nipples, the anus, the labia, the clitoris, the vagina, and the g-spot. All of you should experiment with what happens when you continuously stimulate the most sensitive parts. However, I would advise keeping a towel nearby for cleanup.\" She smiled.\n\n\"Now, for today's last activity, I want you each to find and rub Nicole's g-spot. Once you've had your turn at rubbing it, you may get dressed and leave. Since Filipe was also used as a demo today, he may go first, and leave early.\"\n\nFilipe stood, and approached the table. He once again stood between Nicole's legs, with his semi-hard dick hanging no more than a couple inches from Nicole's pussy. He put one hand on Nicole's pelvis, and with the other, he slowly inserted his index and middle finger into Nicole's pussy, which was soaking wet, and eagerly accepted this penetration.\n\nLike Ms Sharon, Filipe wiggled his fingers around inside Nicole's pussy, but apparently, he wasn't as experienced with finding a woman's g-spot. It took him nearly a minute to find it. All the while, Nicole's body writhed with pleasure. Finally, he found it, and she released a moan louder than any she had made up to that point. Filipe continued rubbing for a few seconds, and then slid his fingers out of her pussy. She sighed out of frustration; it appeared she was close to orgasm.\n\nFilipe got dressed, gathered his belongings, and departed.\n\nNext up was Latoya. Like Filipe, she stood between Nicole's legs, with her sex very close to Nicole's. She slowly slid her middle and ring finger inside of Nicole, and apparently found her g-spot almost instantly, as Nicole wiggled and moaned with pleasure. Since Nicole was already so close to orgasm, it didn't take much to push her over the edge. Within seconds of Latoya's fingers penetrating her hole, she was moaning and thrashing with the pleasure of her orgasm. Latoya started to removed her fingers, but Nicole latched onto her wrist and moaned, \"No! Don't stop yet, please!!\" Latoya continued rubbing the inside of Nicole's pussy for another thirty seconds or so, until Nicole was spent, and finally released Latoya's wrist.\n\nBefore leaving, Latoya slowly got dressed and watched the next few people take their turns at pleasuring Nicole.\n\nOne-by-one, each of the other students stepped between Nicole's legs, inserted between one and three fingers, and rubbed the inside of Nicole's pussy. Most people took around thirty seconds to find the g-spot, with a few taking longer, and a few taking shorter. During that time, it appeared Nicole orgasmed around five different times.\n\nThis time, I was last to go, and the only people left in the room were Nicole, Ms Sharon, and I. I stepped between Nicole's legs, which were now quivering from all the pleasure. About half-way through, Nicole started having trouble keeping them open, so Ms Sharon was now standing on the other side of the desk from me, near Nicole's head, holding each of Nicole's ankles spread about three feet apart.\n\n\"Hi Nicole.\" I said to her, as I approached. \"I'm the last one. Before I start, I was wondering how you feel.\"\n\nNicole weakly lifted her head to look at me. She was smiling, but she also looked quite tired. \"Well, My legs are a little sore from being spread for so long. Also, my pussy is a little raw from all the different fingers being rubbed in and out of it. But overall, I feel amazing. I've never cummed this many times in such a short amount of time before.\"\n\n\"So, I take it you're still glad I ran into you in the library?\" I asked.\n\n\"Oh, definitely!\" she exclaimed. \"If I get to experience all this on just the first day, I can't wait for what's in store for us for the rest of the semester.\"\n\n\"Wow.\" I said, smiling back at her. \"I don't know if I could take all the attention and stimulation you have had today. Well, I'll hurry up and finish this, so we can leave.\"\n\n\"Thank you Samantha,\" she replied. \"But, since you're last, make sure it's a good one. I don't want to leave here on a low note. If you make it good, I promise that I'll pay you back for it another time.\"\n\nI smiled and replied, \"Deal.\"\n\nI then reached up with my left hand and grabbed Nicole's right tit, lightly caressing it. Then I rubbed the outside of Nicole's pussy until I found her clitoris. As I rubbed her clit and her boob, she started to moan lightly.\n\nAfter about 45 seconds, I slowly inserted my index and middle fingers into Nicole's gaping hole. Because of all the abuse her pussy had been given in the past ten minutes or so, it was quite loose, and very wet, but also quite red. I slid my fingers in and out of her hole a few times, before inserting a third finger. Then I rubbed around inside her pussy, until I found a slightly rough patch, which was also a little warmer from all the friction from the other students fingers. I rubbed it gently, which caused Nicole to moan louder, and start squirming. As I fingered her, I also rubbed her breast and lightly pinched her small nipple.\n\nI continued rubbing and finger-fucking Nicole for about two more minutes, until Nicole started screaming \"I'm cumming! I'm cumming!\", while her body writhed as much as it could with Ms Sharon still firmly holding Nicole's legs. I was sure that nearby classrooms would hear her screams, and the movement of the table shaking beneath her, but she apparently didn't care, and neither did Ms Sharon.\n\nAfter Nicole's final release of ecstasy, I removed my fingers, and Ms Sharon released her grasp on Nicole's ankles. Nicole lowered her legs, placing her feet on the ground, but still layed on the table, with her eyes closed.\n\nMs Sharon started packing her things into her bag, as she said, \"Good class today, you two. Samantha, I want to thank you for introducing our class to Nicole and planting the idea of attending. And Nicole, I really want to thank you for your participation today. I know it must have been a bit awkward for all of your classmates to not only see every intimate detail of your body, but feel those parts, and bring you to several orgasms.\"\n\n\"No, Ms Sharon. Thank you,\" replied Nicole, as she stood and slowly walked over to her pile of clothes. \"That was the best sexual experience I've had in my life so far, and I very much look forward to having even better ones in future classes. But right now, I really just want to take a nap.\"\n\n\"Well, I'd offer to let you stay in here, but there's another class coming in here soon, and I think they're covering some very conservative topic like History of Architecture or something. I'm sure they would be quite put off by your nudity.\"\n\n\"That's alright.\" replied Nicole with a smile, as she pulled on her tight yoga pants, without any panties underneath. \"I don't live far from campus. I'll just go home and take a nap.\"\n\n\"One more thing before you go, Nicole.\" said Ms Sharon as she was finishing packing her bag. \"In the last class, I mentioned to everyone else that there's an extra credit opportunity for anyone willing to participate in some sexual studies. I think you would be an excellent candidate for those studies. Please consider it.\"\n\n\"I will.\" said Nicole as she pulled her sports bra on. She picked up her shirt, and looked at it \"You know...I really don't feel like wearing this. I think I'll walk home without it.\"\n\nAt this point I had pulled on my clothes, so Nicole and I were dressed. The three of us departed the room together. Ms Sharon didn't bring any clothes, so she walked out naked, but she said her office wasn't far, and the faculty in her department were used to it. I walked with Nicole, chatting about the experience, until we got to a place where we parted ways.\n\nI then walked back to my dorm. When I arrived, I stripped out of my clothes, and laid down on my bed, immediately putting my hand on my pussy. I imitated what I did to Nicole earlier, and rubbed my clit. With my eyes closed, I was imagining being in Nicole's position on the table, and I imagined that my hand was one of my other classmates. In my daydream, my eyes were closed, so I didn't know whose hand it was.\n\nAfter rubbing my clit for a while, I slid a finger inside my pussy, and found my own g-spot. I rubbed it as fast as I could. As I continued daydreaming about each of my classmates fingering my pussy, I came. But I wasn't ready to be done, so I continued daydreaming and finger-fucking myself. I came a two more times, before finally deciding to stop. I was tired, so I fell asleep."
    ],
    "authorname": "smalltitslovr",
    "tags": [
        "class",
        "sex ed",
        "sexual education",
        "college",
        "anatomy",
        "fingering"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/advanced-sexual-education-ch-03"
}