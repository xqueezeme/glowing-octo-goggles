{
    "title": "David's Friend Vivian Ch. 02",
    "pages": [
        " (My name is David Thornberry.\n\nIt happened when I was just 18 in 1958 and I have to admit that I still feel rather ashamed at what I did.\n\nOne of my parents' closest friends had just died. He was a well respected member of the village His funeral was to take place at his place of birth which was at the other end of the country.\n\nMy parents planned to pay their respects and to leave early and stay the night there with neighbours from our village, leaving me on my own in the house for two days.\n\nI, in turn, had to entertain Vivian, the neighbours' twenty year old daughter for the duration as their house was without electrical power. This is part two of my tale.)\n\n*** In My Bedroom Again.\n\nVivian returned from the bathroom and I still lay there, on my bedroom floor, contemplating what we would do to while away the day.\n\nI was tempted to take her for a walk across the fields and around the village and pretend that she was my new girl friend. I visualised that we would walk hand in hand pausing only to kiss.\n\nThe weather, however, appeared unsettled and I did not want to be responsible for ruining her clothes, especially her shoes. \n\nI also toyed with the idea of just asking her to take off all her clothes but she appeared not to be interested in sex and she was probably a virgin just like me. Besides I had already wanked twice in her company and any other sexual requests made to my young visitor would be pushing it I thought.\n\nI lay staring up at Vivian who stood with her feet apart, astride my waist with her back to me. My penis lay like a shrivelled gherkin in its pool of semen amongst my pubic hair.\n\n\"Doesn't it hurt when you do that to your, yourself?\" she stammered.\n\n\"No of course not Vivian; it's fantastic and incredibly enjoyable,\" I said smiling and staring at her tan seamed stockings and high heeled shoes.\n\n\"Let's see you do it once more then,\" said the twenty year old tall slim girl with the blonde ponytail. \"Do you want me to sit on you again?\" she asked as my penis rolled to one side then began to stiffen.\n\nThe words 'to sit on me again' were like a trigger in my brain and I felt as if every nerve ending in my body was firing at double speed and that all of them were connected to the shaft of my penis.\n\n\"Yes, if you'd like to Vivian. That would be very nice,\" I blurted out, now shivering with anticipation.\n\n\"Well I shall sit on you facing your w w 'willy',\" she said and lifted her shoes over my shoulders and placed them squarely on each side of my neck.\n\nHer heels seemed really dangerous and I marvelled at the way she could stand in them without toppling over. Above me her petticoats swished about making scratching, rasping sounds as they slid over her stockinged legs. My penis became rock hard and ramrod stiff and I could tell that Vivian had noticed.\n\n\"Your 'willy' does look terribly swollen and painful; are you s s sure that it doesn't hurt when you do it to yourself Davy?\" said the long legged girl now squatting over my face. \n\nShe lowered herself so that my nose was pushed up into her anal cleft with just a thin layer of white nylon separating my face from her rear opening. She rested her vagina on my mouth and in an instant the now familiar smell of sexual secretions mixed with urine assailed my nostrils.\n\nMrs Lloyd, her mother, or Vera as I now called her, was a stone faced harridan as far as I was concerned; she had no sense of humour, and was mainly interested in her home, garden and dressing smartly. I could never imagine her having a mother-daughter conversation about reproduction so perhaps that was why Vivian appeared so naive about sex. I was beginning to think that Vivian was totally ignorant with regards to sex.\n\n\"Are you going to make me wet again Davy?\" said Vivian unexpectedly.\n\nI almost choked at the realisation that Vivian really had associated becoming damp between her legs with something that I was doing to her. She clearly had found it pleasurable too.\n\n\"Yes Vivian, if you would like me to,\" I replied, this time almost hysterical with uncontrollable lust.\n\n\"Oh yes please Davy,\" she giggled and shuffled further over me with her thighs wide apart. \n\nMy face was now rammed firmly into her genitals with just a thin layer of panty separating her from my mouth and nose. Her odour appeared very strong; she was clearly excited and her juices were flowing. \n\nIn a strange twist of fate she appeared to be controlling me, rather than vice versa. I lay flat on my back beneath her and revelled in having her wide arse spread over me and feeling trapped under her dress and stiff net petticoats.\n\nAgain I couldn't believe my luck. It was only three hours previously that Vivian had been delivered to my home, and I had already had two orgasms in her company and was destined to enjoy a third. Here she was, squatting astride my face with her buttock cheeks and vagina swamping my nostrils.\n\nI felt that nothing could be better than this except for actual penetration. Furthermore neither of us felt under pressure. Vivian was probably discovering what being a woman was like for the very first time and I, in turn, was acting out all my schoolboy fantasies.\n\n\"Ooooh that's all tickly,\" said my young dominatrix spreading herself over me, trapping my ears between her stiletto heels.\n\n\"Sorry,\" I relied as I licked her up and down her cleft.\n\nI had read about the 'clitoris' but I had never actually seen one or touched one; all I knew was that it lay hidden away above the vaginal opening. I stuck out my tongue and tried to touch it but I was at the wrong angle and judged that it would have been better if Vivian had taken her knickers off. I decided to 'bring myself off' first and then talk to Vivian afterwards.\n\n\"Aren't you going to do it, Davy?\" said Vivian.\n\nI wondered whether she was referring to my wanking or making her 'wet'. Selfishly I chose the former and began masturbating at the same time inhaling the rich mixture of odours which emanated from between her legs. It took me ages to reach that delicious 'point of no return'.\n\nMy third wank was not as intense as the second and there was not much volume of semen to expel. Nevertheless I swore and jerked out three violent strings of warm semen over my belly and hands. Vivian seemed to enjoy seeing me ejaculate and clapped her hands with glee.\n\n\"What a clever Davy,\" she said and pulled up her dress and ruffled my hair.\n\nShe must have noticed that my face was completely covered in her sticky slimy sexual secretions and that I stank only of warm vagina. She remained sitting on my face looking at the sticky globules drying on my stomach.\n\n*** Vivian Removes her Knickers.\n\n\"Vivian?\" I said wondering how to raise the subject of female orgasms and touching her clitoris. \"You know that when I nuzzle you between your legs you say it is nice and wet,\" I continued and she smiled down at me still pulling her dress to one side.\n\n\"Why do you ask? are you going to do it to me some more?\" said Vivian settling her bottom firmly on my face just as a brooding goose would do.\n\n\"I think it's better if you pulled down your panties,\" I shouted through the many layers of bouffant petticoat which she'd dropped over me.\n\n\"My panties? OK Davy,\" she said and quickly stood up and slid them down to her knees and stepped out of them, then kicked them to one side.\n\nI stared up at her pubic curls and before I could take in this vision of raw sexuality she had planted her vagina entrance firmly over my nose. I could hardly breathe and it was wonderful. She oozed with juices and she wiped her labia up and down my nostrils. I really began to think that I was drowning in her copious discharge. I never realised just how runny and lubricated a woman's cunt got and I just could not get enough of her.\n\n\"I'm not squashing you am I?\" said the long legged blonde rubbing her portals over my face.\n\nHer instincts seemed to be taking over and I licked her slowly along the fleshy walls of her inner lips.\n\n\"That's really n n nice,\" she stuttered and I smiled secretly to myself.\n\nSoon she began jerking herself over my face, seeking out suitable contours on my mouth, nose and chin to 'bring herself off'. All around me her petticoats hissed rustled and swished. I watched the underside of her thighs and the tight band of nylon where her stocking tops restrained her flesh. Everything under her dress was moving and I lay face up on my back allowing her to use my features as a masturbatory aid. \n\nI felt as if I was in paradise \n\nI have to admit that I was also enjoying one of the strongest, longest erections I had ever experienced.\n\nVivian noticed it too and told me to 'play with my willy' because she liked to 'watch it squirt'. I couldn't believe my luck.\n\nVivian seemed suddenly to be entirely sexual. I had been mistaken to think that I would be spending hours trying to persuade her to take off her knickers and sit on my face. Here she was, doing what came naturally and driving me wild with lust and lechery. I couldn't take any of this in; it had happened incredibly quickly, too quickly in fact, and it felt like a scene from an erotic novel.\n\nVivian was now rubbing her self violently over my face. I wondered how long she could squat on me before she collapsed with exhaustion. I admired her stamina and determination and 'willed' her to reach her orgasm whilst my face was still in one piece.\n\nMeanwhile I was vigorously wanking, and anyone walking into my bedroom at that point would have been amazed at the urgency and fury of our movements. It was becoming a race to see who would 'come' first. \n\nVivian was now crying out. She appeared to be in pain but she was laughing too. I felt white hot semen gather inside me and gradually fill my penis, then I lifted my buttocks off the carpet......\n\n\"Yes, fuck, yessss,\" I squealed and pumped out eight long jisms of sperm all up my chest and onto Vivian's dress.\n\n\"Oooh yessss,\" grunted Vivian as her pelvis juddered, shuddered and became gripped by a deep vaginal orgasm. Her whole body appeared to spasm violently as if she were experiencing a fit.\n\n\"Ooh Davy,\" she gasped as her climax slowly left her. Her breathing remained quite fast and she gulped in air as if she were drowning.\n\nAfter several minutes she pulled her dress and petticoats to one side and I smiled up at her. Her blonde pubic hair stuck in my teeth and I was one smelly sticky mess.\n\n\"We had better get cleaned up Vivian,\" I said and she smiled at me. At that moment I knew that the rest of the day would be wonderful and looked forward to my orgasm number five.\n\n*** The Shower.\n\nI ran the shower for Vivian and showed her to her room. It was a smallish bedroom but comfortable and this was where my aunt usually stayed. I nipped back to the bathroom and tested the temperature of the water. Our shower could be temperamental so I was pleased when it felt warm. \n\n\"There you are Vivian,\" I shouted and put a bath towel out for her. \"You can use my shower soap if you want, it's the one on a rope,\" I said and left her to it.\n\nTen minutes later I heard a scream. \"The water's freezing,\" yelled my guest.\n\nThen I suddenly remembered that I normally had my shower in the evening and the time switch had been adjusted to only provide hot water at that time. Vivian was clearly using up the residual hot water from the previous night and it had now run cold.\n\n\"Bloody, fucking buggery,\" I cursed and turned on the immersion heater. \"Are you OK?\" I shouted from the landing.\n\n\"No I'm not and I am coming, coming out,\" said the young woman from the now tepid shower room.\n\nI averted my gaze as she pushed past me wearing only a towel. \"I have never been so cold. You will have to warm me up,\" said the shivering blonde opening her towel and pushing herself against me.\n\nBefore I could take in the situation I had Vivian naked in my arms with a towel over her shoulders. She looked so different with wet hair and her shivering seemed to quicken in intensity.\n\n\"Rub me Davy,\" she said as if I were best friend or even her mother, although to be honest I couldn't imagine Mrs Lloyd providing any body heat; on the contrary she had the sort of face which appeared to be able to freeze water at twenty paces.\n\nI rubbed her back vigorously and pulled her tightly against my shirt. Her damp breasts felt amazing against my chest and her nipples were large and erect.\n\nOnce again I felt unbelievably lucky to have a naked woman in my arms. If anyone had told me that today I would have seen a girl's pair of knickers, been face sat, masturbated four times and taken a woman to her climax I would have thought them insane. \n\n*** Vivian's Bedroom.\n\nWe shuffled along the landing passageway to Vivian's bedroom, carefully avoiding the windows where Mrs Crabplank, the widow from next door, looked out.\n\n\"Well I suggest that you get into bed now Vivian, and warm up, and I'll bring you up a nice cup of tea,\" I said in 'jolly' chivalrous tone hoping that she may allow me to join her later.\n\nI found it very difficult making tea with an enormous erection bulging out in front of me. I had to stand in a very odd way to get near the kettle. Eventually the tea was ready and I took it up to her room.\n\nI wasn't prepared for the sight which greeted me as I walked in.\n\nVivian was not in bed where I had hoped but she had put on some fresh clean underwear and was parading around the bedroom. \n\n\"My bloody goodness,\" I said as my jaw gaped open.\n\nShe looked just like one of the saucy girls in my pile of dirty magazines.\n\nShe wore a black lacy bra which showed off her perfect breasts. She wore also a black lacy suspender belt supporting a pair of fine denier seamed black nylon stockings. To top it all she wore a pair of loose legged black nylon French knickers with a deep flounced lace hem.\n\n\"Do you like my black underwear Davy? My mother doesn't know I have these and she would be livid if she found out. You mustn't mention it to anyone. Do you promise?\" said Vivian stepping into her black stilettos and strutting around the bed like a French film star.\n\n\"Yes I promise but keep away from the window Vivian,\" I said and watched her pirouette about the room, and shake her bottom in my direction. She was now clearly an outrageous teasing flirt. How she had changed.\n\n\"How about some lunch; it's 1 o'clock and I'm feeling famished,\" I said and watched her put on a black A-line skirt, black lacy slip and white lacy blouse.\n\nShe combed her hair and quickly kissed me. Before I could say anything she led the way down to the kitchen.\n\n*** Lunch.\n\nI could hardly control my excitement at having Vivian in my life, albeit for only one day and one night. I watched her strut around the kitchen on her three-inch stilettos; each 'click', 'click', 'click' of her high heels on the quarry-tile floor was deafening and the sound made my penis stiffen for no obvious reason.\n\nI am afraid that I had not changed my clothes since my fourth orgasm so that my penis lay stuck to my underpants in the slimy semen which I'd spurted out earlier. Vivian noticed my discomfort and told me to get changed while she prepared the meal.\n\nI washed and changed into a t-shirt and jeans and in four giant leaps I was downstairs again peering over the tall blonde girl's shoulders at the meal she was preparing.\n\n\"I hope you like tuna; this is a salad my mum makes at home,\" she said and carried the two plates into the dining room. We ate in relative silence but stared at each other over our glasses of white wine. I think that we both knew that there would be plenty of time for orgasms during the afternoon and evening.\n\n*** After Lunch.\n\n\"Davy?\" said Vivian stretching her long legs across the soft leather sofa and onto my lap.\n\n\"What is it Vivian? Can I sense that someone wants to be made 'wet' again?\"\n\n\"Yes she does and she wants you to do it to her right now,\" said the girl leaning back on the arm of the sofa and lifting her foot up to my shoulder. She giggled at me.\n\nI quickly glanced at her black knickers and at the narrow band of black nylon where her stockings were supported by her suspenders. She opened her legs and pointed to her crotch.\n\n\"I'm all yours for the rest of the day,\" she said and shut her eyes and leant back so that her neck lay across the sofa arm. \n\nI was so knocked out by the sight next to me that I scarcely knew where to start.\n\nI was now beginning to suspect that Vivian was far more sexually aware than I was. This wouldn't have meant much as I knew only what I saw in magazines or from dirty jokes and conversations with the chaps at school. The full extent of my knowledge regarding sex could have easily been written on the back of a postage stamp.\n\n\"Aren't you going to make, make me feel all wet?\" said Vivian opening one eye and placing one foot on the floor and the other foot on the back of the leather sofa. The squeaking sound of leather against leather as she prodded me one of her 'cruel' heels drove me wild. \n\nI decided that the best course of action would be to kiss her thighs then play things by ear. I removed my glasses and placed them on a coffee table.\n\nEven with her wearing clean underwear I was aware of the pungent musky sweetness of her vaginal odour which appeared to pervade the space around her thighs.\n\nI kissed, licked and nibbled the soft smooth flesh on the inside of each thigh while focussing on the loose black nylon which hid her vulva from view. \n\nHer French-knickers were trimmed with very fine floral lace in a flounce roughly four inches wide. With my left hand I rubbed the front of them and felt the softness of her pubic hair beneath. This time I had plenty of time to caress her and explore her curves and clefts.\n\n\"Oh Davy you are a n n naughty boy,\" said Vivian.\n\nI persisted with my groping and nuzzling of her warm thighs and knicker gusset. Soon she had opened her legs even wider and I was holding a leg of her damp French-knickers to one side. The thin nylon was almost transparent with saliva and cunt juices. I wriggled my tongue into her knickers and felt her flinch and gasp.\n\n\"Oooh lovely,\" she sighed as I flicked the underside of her clitoris and coaxed it out of its hood.\n\nBy pure instinct I knew what to do. I took my time, deliberately allowing her to savour every little movement of my tongue over her most sensitive nub.\n\nI sat back and surveyed the scene. Vivian's legs were drawn up, with her knees bent. Her shoes remained on as if hanging in mid air. Her skirt and lacy slip were around her waist and her fingers were caressing her nipples through her white blouse and black bra. Her head hung backwards across the arm of the sofa and her tongue was out and her eyes were closed. She looked totally relaxed.\n\nI resumed my stimulation of her pubic area and soon she was breathing heavily.\n\n\"Lovely, fantastic,\" she gasped as I slid my tongue up and down her inner labia.\n\nThe smell of her was amazing; I just wanted to breathe her in, all of her. I was like an animal and mauled her and licked her savagely. She, in turn, gripped the back of my head and swung her legs over my shoulders. The sound of smooth nylon stockings sliding over my ears was almost too much for me to bear and I felt precum flow out of my fierce erection.\n\n\"Oh Davy, this is f f fantastic,\" said the long legged twenty year old jerking herself against my face.\n\nShe held my head and wiped her dribbling vagina up and down my nose and mouth with violent thrusts. My face became covered in her slippery secretions and I could hardly breathe. We went on and on like this for at least ten minutes with her bumping her pelvis off the sofa in wilder and more ferocious movements. \n\nMy mind was racing at the thought of the young woman's physical enthusiasm and how we would spend the evening and night.\n\n\"Oh yes, ooooh yes,\" screeched Vivian, now approaching her climax. I held on to her by her hips with my tongue up her dripping vagina while she held my head firmly against her.",
        "Soon her jerking became quicker and quicker. I felt that I couldn't keep up with her and her screaming. I watched her as she shuddered, then felt something well up deep inside her as she shook and shivered.\n\nHer vagina walls spasmed and I felt her grip my tongue with involuntary muscular ripples. She had orgasmed and now it had passed and she released the pressure on my face. I looked up at her, aware that I had pubic hair in the gaps between my teeth.\n\n\"Was it OK Vivian?\" I mumbled, smelling strongly of her juices.\n\n\"You are so, so sweet Davy,\" said Vivian pushing back her blonde shoulder length hair which had flopped over her face during her violent jerking.\n\n\"I hope I didn't wear you out Davy,\" she said smiling and ruffling my hair. \"That was the best 'wetness' yet,\" she said.\n\n*** Off The Sofa.\n\nI dashed to the downstairs toilet and washed my face, spitting out pubic hair and snorting out her fanny juice. I even applied aftershave and combed my hair. When I returned to the drawing room Vivian was wiping herself with some paper tissues from her handbag.\n\n\"I'm in a right mess I'm afraid and you won't want to smell me down there again,\" she said.\n\nI on the other hand was 'raring to go' and told her not to be silly and that her odour was the best smell in the world. \n\nShe smiled and watched me lie on the floor on my back with my trousers and underpants pushed down to my knees.\n\n\"It's my turn now Vivian,\" I said and smiled at her wildly.\n\n\"You want me to sit on your face with my knickers sopping wet?\"\n\n\"Yes of course, you clown,\" I said and laughed aloud with hysteria at her comment.\n\nI was determined that I was going to have as many orgasms as physically possible that afternoon and that Vivian was going to provide me with all the stimulation I needed to masturbate.\n\n\"How do you want me to sit on you? Facing forwards or facing back?\" she asked, getting up from the sofa and standing over me.\n\n\"I want you arse in my face again,\" I croaked, delirious with anticipation.\n\nVivian tottered over me with her high heels dangerously close to my neck. I stared up her legs and watched the soft flesh above her stocking tops quiver. \n\n\"I'll squat on you first and lean forward,\" said the long legged blonde above me. I stared up her wide skirt and flared slip at her arse which hung over me.\n\nHer black skirt and slip appeared to open as she bent her knees and lowered herself onto me, spreading her thighs so that her naked flesh above her black stockings engulfed my face. Immediately I nuzzled her buttocks and licked the undersides of her thighs.\n\n\"Hey that tickles, remember?\" said Vivian admonishing me.\n\n\"Well I don't care,\" I said and continued licking her between her legs.\n\nVivian switched from the squatting position to a kneeling position and placed both stockinged knees on my shoulders and upper arms. I had forgotten how heavy she was and how hard the floor was. \n\nShe lowered her French-knickered arse onto my face and spread her anal crack over my nose. With both hands she pulled her soft buttocks apart pushed down on me and then released them so that my nostrils were gripped between thin damp layers of black lacy nylon. I felt deliciously trapped and felt my penis stiffen.\n\nI breathed in her odours which were now more fetid owing to my position on my back under her wide spreading arse. I felt her arrange her nylon slip and black skirt over me and I was plunged into darkness.\n\n\"You can do it to yourself now Davy,\" she said and waited for me to start wanking.\n\nI had read about 'queening' in dirty magazines and wondered what it would feel like to be face sat by a woman. It was a lot raunchier than I could imagine. I felt totally dominated by Vivian and thought that this was the most natural position for any man to be in who fancied a wank. Again I couldn't believe my luck. Having my head under Vivian's skirt was a fantasy come true and once again I felt that I couldn't get enough of her.\n\n\"Come on Davy start 'wanking'\" said the girl on top of me, clearly impatient to see more action.\n\n\"You're smothering me,\" I yelled and she lifted her large arse off my face briefly while I breathed in cold clean air. She bore down on me like a ton of bricks and once again she trapped my nose between her large rounded arse cheeks.\n\nI reached down to my thick solid shaft and began masturbating. Vivian leant forward and stroked my belly. Soon she was ruffling my pubic hair and circling the root of my erection with her fingers.\n\n\"Show me how to do it Davy,\" she said and waited for my reply.\n\nI couldn't speak because my mouth was swamped by her warm buttocks and lacy French-knickers.\n\nI tried to demonstrate how to pull the foreskin up and down the side of the glans and waited for her to try. Her fingers felt so cool compared to mine and they seemed slimmer and longer. \n\nShe was a quick learner and once she got the hang of it I showed her how to increase the pressure and speed. We both used our fingers on my erection until I was happy that she had got the knack. \n\nMy penis was now entirely in her hands and I relaxed under her, luxuriating in the delicious sensation of being 'queened' and masturbated at the same time.\n\nI ran my fingers along her stockings and under her slip. I caressed her thighs and breathed in her odours. I just wanted time to stop and remain in this perfect position forever.\n\n\"Shall I speed, speed things up a bit?\" she said but I couldn't speak.\n\nI gave her the 'thumbs up' and felt her jerk me more firmly. I continued stroking her legs and buttocks and breathing in the 'natural' perfume which all women have.\n\nShe increased the pressure on my glans and now I felt that I was being well and truly 'milked' by the twenty year old blonde girl sitting on my face.\n\nMy breathing began to become laboured and irregular. I breathed in her odours like a maniac. \n\nSoon her fingers were wanking me at double speed and double pressure.\n\n\"Oh Vivian, that's fantastic, oh, ahhh.\" I shouted and then it was all over. I spurted out five streams of slimy fluid and I think it went absolutely everywhere.\n\n\"Good old Davy,\" giggled Vivian and she persisted in wanking me until I was completely dry.\n\n\"Stop, stop. Thank you,\" I murmured, trying to catch my breath under her arse. I gently smacked her on the thighs and she knelt off me and stood up.\n\nI looked down and saw the evidence of my fifth orgasm of the day. It was on my shirt and stomach, on the carpet, all over Vivian's hands, skirt and blouse. There was a tiny string of semen on Vivian's chin.\n\nI had a sudden idea how I would like her to 'bring me off' for the sixth time, and it would not require her to use her fingers.\n\n(Continued in chapter 3) "
    ],
    "authorname": "Thorilla",
    "tags": [
        "face sitting",
        "1950s",
        "femdom",
        "upskirt",
        "black stockings",
        "french knickers",
        "cunnilingus",
        "slip",
        "underskirt",
        "skirt"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/davids-friend-vivian-ch-02"
}