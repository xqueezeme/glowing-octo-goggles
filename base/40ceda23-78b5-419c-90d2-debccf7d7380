{
    "title": "The Twelve Vitali Ch. 20",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*\n\n\"Historians name Michael-Angelo, DaVinci and Raphael as the big three of the Renaissance period. Our ancestor, Timoteo, was the Master that Raphael was apprenticed to as a young man,\" Zion said as they came upon several drawings by Raphael within the family antiquities housed within the auction house Zion ran.\n\n\"That means your ancestor taught him how to paint? I've never heard of an apprenticeship for artists before,\" she admitted. She knew her lack of education meant that she was way out of her depth here in this amazing place with Zion and his sister, Aria.\n\n\"Artists were highly regarded in history, it is only more recently that artists have struggled to receive sponsorship from wealthy families,\" Aria said.\n\n\"I expect most families found photographic portraits cheaper and much easier to obtain in more modern times,\" Cat laughed. \"I love doing portraits though, because you can capture more personality than a photograph ever can. I've been working on some sketches for Matteo as a wedding present. Admittedly, it's more for myself than him, but I can show the subtle things others might miss if he posed for a camera.\" She tried to explain how she felt about the difference in portraiture. \"I expect sculptors feel the same way about enhancing some physical aspects and disguising others.\"\n\n\"Some people like the reality of photographs,\" Aria argued.\n\n\"Can you show me a photo on your phone that you genuinely feel is an accurate depiction of how you look to others?\" Cat asked, feeling like she needed to make a point. Aria had been so condescending all morning during her tour of the family antiquities while Zion seemed hell bent on giving her a history lesson. She didn't mind the history lesson, she actually found it fascinating, but she felt like an uneducated bogan and hated the fact that they were judging her in that light. Particularly Aria, who she had failed to find some common ground with and hoped that this might be it. She obviously loved art, but Cat's lack of knowledge when it came to the Masters seemed to annoy the young woman.\n\n\"I don't take selfies,\" Aria said quickly.\n\n\"How about your driver's licence?\" Cat asked.\n\n\"That doesn't look like me at all,\" Aria shook her head.\n\n\"But it is you, and possibly how the photographer saw you in that moment of time. All I am saying is that with a painting you get a picture of the best you, with all your character and flair instead of a snapshot of one moment in time,\" Cat explained in the light of her admission.\n\n\"She makes a good point,\" Zion said. \"So, you don't like photography?\" he asked.\n\n\"Quite the opposite, I love it, it's just different, and I prefer paintings for the portraits of the people we love,\" she said. \"I know that Peri was happy with the portrait I did for her of her family, and she had already had a professional photographer take their portrait and found it didn't convey what they all meant to each other.\"\n\n\"I'd like to see them both,\" Aria said, as if questioning not only her judgement but Peri's.\n\n\"I have them on my phone, if you would like a small look. It's not the same as seeing them up close though,\" she offered.\n\n\"I'd like to see,\" Zion said quickly. \"Do you know what prompted her to seek out a portrait artist?\"\n\n\"She has a degree in art history and has been working on the family history for a few years now. She has a love for how the families originally came together and were set up with such specific roles that always seemed to make the most of the men's skills and personalities. If you look at the photograph you can see them all, but it's difficult to tell what it is they do or the role they have,\" she explained and passed her phone to Zion, who looked at the official photographic portrait for the Donati table. \"If you swipe right you will see the painting,\" she added.\n\n\"I've met with Peri and her team a few times about our family history,\" Zion admitted. \"I know how passionate she is about it,\" he chuckled. \"This is great. Do you know where they hung it?\" he asked.\n\n\"I'm not a hundred percent sure, but I think it's at their house in the country, and Dante has a smaller print in the House of Lorraine,\" she frowned as the thought about it.\n\n\"And you did this in a matter of weeks?\" he pressed her.\n\n\"I worked on it all day every day in that time, I doubt I could do something on that scale in that time frame again,\" she admitted.\n\n\"You have to admit, she's good, Aria,\" Zion tilted the phone towards his sister. \"Can you send me the photo's?\" he asked.\n\n\"Sorry, but no, I don't think so,\" Cat said sadly. \"I signed a statement that I wouldn't circulate the images, or something along those lines. It was quite an involved non-disclosure agreement, but considering your family all knew what I had done, and some of them had seen the painting during the art show, I didn't think it would matter if I showed you the photos on my phone, but I can't send them to you, sorry.\"\n\n\"That's alright, I can check with Peri herself, if it will make you feel better,\" he shrugged as if it was no big deal. The more he talked with Cat, the more he liked her. She was loyal and obviously trustworthy, and she obviously made Matteo very happy. What she lacked in education she certainly made up for in other ways, despite his sister's disapproval. He knew that not everyone was fortunate enough to grow up in an affluent and loving family like their own.\n\n\"Yo, Zee! Where are you, man?\" Chase called out as he entered the Depositary.\n\n\"Here,\" he shook his head and walked toward the entrance. \"Just showing Cat some of the art she could use for their new penthouse.\"\n\n\"Paint something yourself, you're pretty good, from what I've heard and seen,\" Chase said.\n\n\"It's a time thing,\" Cat laughed. \"Matt wants something for when we move in, instead of waiting for me to find the time. Planning a wedding so soon is a bit time consuming, I have found out, but Theresa had been a wonderful help.\"\n\n\"Speaking of which, Trista called, she's expecting me for a dress fitting this afternoon. What colour did you go with?\" Aria asked.\n\n\"Champagne, I'm really not a fan of red, even though I know that was Theresa's preference,\" Cat said carefully, knowing a few of the Vitali women had wanted a red and white theme. She wasn't going to wear white and had kept her dress design a secret, even from the family after organising with Marina Battaglia to borrow Kate and Edith for a few weeks to make the gown.\n\nShe had been enjoying the tentative friendship with Marina that had started with a phone call after she arrived home. She still managed to speak to Lucia every couple of days as well, and had asked her to be her chief bridesmaid alongside Maryanne and Matteo's four sisters. Matteo wanted a traditional wedding which included all of his brothers as best men, and that had made it very difficult for Cat, who had never had many friends, and those from her past were just that, her past, and included ties to Ned. Lucia had understood the isolation that she had undergone with Ned and readily agreed to stand with her on her wedding day, becoming very excited about it and being her sounding board on dealing with Theresa and Matteo's sisters. There was a very fine line between asserting her own opinions and offending the Vitali women. Mia often sided with her, however, when she didn't like something Theresa wanted for the wedding, which helped a great deal.\n\n\"That's an unusual choice. I thought this was going to be a traditional wedding,\" Aria said with distaste.\n\n\"I think it will still be traditional,\" Cat smiled. \"Matteo approved the colour, and he's the one who wants all the traditions. I would be just as happy to elope, to tell you the truth.\"\n\n\"You can't be serious!\" Aria said as if she thought Cat was totally insane. \"You only get one day to be an absolute princess! No way should you, or anyone, give it up to elope!\"\n\n\"I'm up for elopement, let's go,\" Chase grinned.\n\n\"I sort of promised Matteo he could be husband number one. Could you wait a year or two? Just until the prenup kicks in,\" she laughed.\n\n\"Why would there be a prenup?\" Zion asked. He'd never heard of anyone in his family ever having one, but then they generally married women from the other tables.\n\n\"I was just joking; Matteo hasn't ever mentioned one, to be honest. Do you think I should? I mean, he might try to take half my paintbrush collection,\" Cat laughed at the look on his face.\n\n\"I'm afraid once you marry into this family that's it. There are no second or third husbands, you're stuck with the first one forever, and your paintbrush collection,\" Chase said with mock disappointment. \"The offer to elope still stands right up until you say I do, however,\" he chuckled.\n\n\"Tempting, but I did promise Matt, so I think I have to go through with it,\" she said sadly.\n\n\"Even if I have the keys to your new car?\" he grinned and shook a set of car keys in the air.\n\n\"You're making this very difficult for me,\" she laughed, \"Maybe I should see the car first.\"\n\n\"Chase, what are you doing?\" Aria said disapprovingly.\n\n\"Flirting with Matt's woman to drive him insane,\" he shrugged.\n\n\"You realise he's not here, right?\" Aria raised an eyebrow.\n\n\"Sure, but I've always been able to rely on you to tattle-tale,\" he chuckled, teasing his cousin and enjoying the look of chagrin on her face. \"Aww, don't look like that, you were always my favourite pain in the ass cousin,\" Chase grinned.\n\n\"Whatever happened to that plan we had to kidnap him and sell him back to the circus he came from?\" Aria huffed at Zion. She had a small smile that Cat was surprised to see. Aria always seemed to hold herself above everyone else, especially when her brothers and cousins teased her.\n\n\"Man, I would have loved that!\" Chase complained.\n\n\"That's what happened to that plan,\" Zion chuckled.\n\n\"Aria,\" Cat said, changing the subject back to why she was here. \"Do you think you could spare some time tomorrow to come and look at the penthouse and maybe advise me on the better pieces to choose? I hadn't realised what beautiful and significant pieces you had here, and I'm afraid I just don't have the understanding yet. I'm afraid I'll choose things that wouldn't go together in style or period,\" she laughed self-deprecatingly. \"I could really use another woman's point of view, and Vanessa has so much else to do, she has left the artwork up to me.\"\n\n\"I'd like that, it's hard to imagine these pieces anywhere but here, but seeing the new penthouse might help. Sometimes just a framing change can make all the difference to how a piece looks in a given space. Most of these are too heavy for residential use,\" Aria said, bringing out her expertise in interior design that she never got to use because everyone deferred to Vanessa.\n\n\"Great! Would nine be too early for you? I have a few other appointments tomorrow.\" Cat asked.\n\n\"Nine is fine with me. Will you leave my name with security so I can go up, or would you like to meet in Matt's office?\" Aria pursed her lips thoughtfully.\n\n\"I'll make sure security knows you're coming,\" Cat said, \"Though I'm sure Matt wouldn't mind seeing you if he's there. I better get moving though, or I'm going to be late.\" She turned to Chase, who tilted his head. \"Thank you for everything,\" she kissed their cheeks in farewell.\n\n\"Peace out, brother,\" Chase clasped Zion's hand and shoulder bumped him before kissing Aria on the cheek. \"Stay cool, li'l chick,\" he grinned.\n\n\"Grow up,\" she admonished, but smiled at Chase and embraced him.\n\n\"Growing up is overrated,\" he chuckled and walked from the room with Cat.\n\n\"I can't believe you managed to get this done in less than twenty-four hours,\" Cat said, walking out to see the small SUV she had chosen the day before.\n\n\"We had a small fleet ready to go for the out of town family members that are flying in for the gathering, and I just happened to have the exact one you wanted,\" Chase said. \"Ready to go for a spin?\"\n\n\"Sure,\" she grinned. \"If this was part of the fleet, then who do I owe for the car?\" She asked, making him frown at her.\n\n\"It came out of the family treasury, so I guess no one. You are family, after all,\" he said easily. \"Even if you change your mind about Matteo, you could still elope with me. Unless, of course, Ricco makes a fuss that he was first in line,\" he seemed to consider the idea before dismissing it. \"Nah, I am better looking and have a better sense of humour, it wouldn't matter.\" He chuckled as she rolled her eyes at him.\n\n\"Where to?\" Cat asked as she slid into the driver's seat and adjusted the position of it and then her mirrors.\n\n\"I'm meeting my father at Roberto's place. And I think you're expected there as well?\" he gave her a questioning look.\n\n\"Yes, I guess I am, but I've been let off the leash a little bit this morning, and I am enjoying the relative freedom,\" she laughed.\n\n\"Sorry, sweetness; no can do. While I'm happy to give my cousins a bit of grief, there's no way I am taking on Roberto and my father combined for making you late,\" he chuckled. \"I'm just not that brave.\"\n\n\"Don't tell me there's a flaw in your superhuman persona?\" Cat giggled.\n\n\"Just a small one,\" he grinned. \"The rest of me is one hundred present superpowered. Let me have your phone and I'll sync it to the car for you while you get a feel for it. It's probably a little different to the old car you were driving.\"\n\nThey drove on with Chase going through several of the features embedded in the car's system, including a kill switch for the engine and a panic button that, should anything go wrong, would send an alert straight to the security team in the HQ building.\n\nThe phone rang through the car speakers, turning off the soft music of the radio and startling Cat, who glanced around at Chase.\n\n\"Don't say anything when you answer it this time, but the button is on your steering wheel,\" he pointed out.\n\n\"Whaddup, bro?\" Chase said as she answered the call. \"Give us a minute until the car stops flipping over, would ya? The airbags are in the way!\"\n\n\"Sure,\" Matteo said calmly, this was his cousin, after all, and it didn't sound like the car was rolling, or airbags were deploying. \"Just let me know when you're good.\"\n\n\"You know you're no fun anymore, right?\" Chase grumbled. \"I told Cat she should just dump your boring ass and elope with me,\" he said pointedly to Cat, who laughed again.\n\n\"I think that boring ass is cute,\" she said loud enough for Matteo to hear and listened to his responding chuckle.\n\n\"You should know how cute my ass is, Chase, considering you always have to look at it when I beat you at everything,\" Matteo laughed.\n\n\"He beat me in a race once and has never let me have a rematch,\" Chase grumbled to Cat, but she could tell this was a running joke between them.\n\n\"Where are you now?\" Matteo asked.\n\n\"About ten minutes out from your father's place,\" Chase answered.\n\n\"Alright, I'll meet you there,\" he said, and Cat could hear the business-like tone in his voice that told her something was not quite right. \"Oh, and stop trying to steal my girl,\" he chuckled and ended the call.\n\n\"Wonder what that was about? Matt sounded pretty serious for a few moments there,\" Chase mused.\n\n\"You caught that too, did you?\" Cat asked as she continued to drive.\n\n*****\n\n\"I can't leave now,\" Cat frowned. \"There is so much to do, and I don't want everyone else making those decisions for us, for me.\"\n\n\"It's only for a few days, a week, at most,\" Matteo argued. He had to go and wrap up his overseas projects before the gathering instead of doing it during his honeymoon as he had hoped. There would be no time for a real honeymoon after the announcement of the new table, and he had hoped to convince Cat to come with him now to compensate for that.\n\n\"I know, but there is only this week to get most of the work done before the gathering starts, and there is so much more to do, on top of planning this wedding. I know you are used to people doing everything for you, but there are things I need to do myself that I am already worried won't get done in time,\" she sighed. \"I love you, and I don't want to be separated again either, but you will be able to do the work that much faster if I'm not there to distract you or make you worry about where I am and what I'm doing in strange countries. You realise I don't even have a passport, right?\"\n\n\"No, why...\" he stopped himself from asking why the hell she didn't have a passport as the realisation hit him of where she had come from. She would have had no need for one before now.\n\n\"I love you, that won't change. Besides, both of us will be so busy we won't even feel the time apart. You know Ricco will ensure I don't do anything silly,\" she added.\n\n\"Or he might encourage you to do silly things,\" Matteo complained and took her in his arms. \"I want you to come with me so badly!\"\n\n\"It's just not possible, even if I didn't have a million other things to do. But I will apply for a passport after the gathering,\" Cat promised. \"How do you think Mrs. Catriona Vitali sounds?\"\n\n\"Absolutely perfect,\" he murmured and kissed her. \"At least come with me to the airport.\"\n\n\"You're leaving right now?\" She gasped, \"I know I said the sooner you leave, the sooner you will be back, but right this minute?\"\n\n\"Yeah, I can possibly make Port Moresby late this afternoon if I leave now rather than doing it tomorrow after staying there for the night. If I leave now I'll already be half a day ahead of schedule if I fly through the night, maybe even more,\" he seemed to be replanning his trip as he spoke.\n\n\"Just let me talk quickly with Mama, and then I'll be ready,\" she said softly, remaining in his embrace and making no effort to move. \"I'm going to miss this so much!\" she tightened her arms around him.\n\n\"Then come with me,\" he complained again with a sigh, knowing now that it was impossible.\n\n\"Oh, good, there you are,\" Theresa said, walking into the living room with two other people Cat didn't know. \"We need to make some final decisions on centrepieces and gifts for the guests, as well as cakes.\"\n\n\"Cakes, plural?\" Cat asked. \"I thought we had decided on just the one wedding cake?\"\n\n\"Certainly, but there will need to be back up slabs as well as catering for different dietary needs. This isn't a dinner party we're planning. There will be hundreds of people we need to ensure get a piece of cake,\" Theresa sighed in frustration. It would have been easier if Cat had just allowed her to do it all herself rather than needing input into every decision that had to be made.\n\n\"It's okay,\" Matteo said as he saw her look up at him with concerned eyes. \"You stay here, and I will be back before you have time to miss me.\"\n\n\"I already miss you, and you haven't even left yet!\" Cat said softly.\n\n\"Go be Marie Antoinette and let them eat cake,\" he chuckled and kissed her. \"I love you for doing the big traditional wedding for me. I know it's not your preference,\" he said pointedly to Theresa. \"Try not to push her so hard she changes her mind and cancels the whole thing. She agreed to this wedding for me, but the possibility she could choose elopement is still on the table.\" Satisfied with his stepmother's horrified expression, he smiled back at Cat. \"You're all I need. I want the big wedding, but I would live without it. I can't live without you,\" he kissed her again trying to ensure she knew she didn't have to be bullied by his family.\n\n\"I love you,\" she whispered and hugged him tightly before finally letting him go and stepping back. \"Be safe and come back soon.\"\n\n\"You can count on it,\" Matteo said and kissed again. \"Goodbye, Mamma,\" he smiled and kissed Theresa's cheek. \"Look after my fianc\u00e9 like a princess, please. She's worth it.\" He said quietly and left for the airport.",
        "******\n\nCat looked up as Ricco entered the room. She and Theresa had been manoeuvring around each other all afternoon to get what they wanted for the wedding and Cat was exhausted from the mind games she constantly had to play to ensure her wedding was a reflection of herself and not just the Vitali Family. Maryanne, she had discovered, had docilely accepted whatever the family wanted, except for her dress and a song she sang at her wedding. Cat imagined this was the expected thing from someone brought up on one of the tables to just do as they were bid, but she wasn't, and wouldn't be like that ever.\n\nShe smiled seeing Ricco, and visibly sagged under the weight of the pressure being put on her. She knew that pressure was mostly being placed on her by her own need to make the decisions necessary for the wedding. She didn't want to have a starring role in someone else's vision of a wedding, she wanted her own dream day, and one that Matteo would never forget.\n\n\"Hey you, everything alright?\" Ricco asked, seeing her sag and becoming concerned.\n\n\"This wedding is a bigger production than most Andrew Lloyd Webber shows,\" she smiled crookedly.\n\n\"You know Mama would do most of this stuff for you,\" Ricco said.\n\n\"Then it wouldn't be my wedding, and she might as well walk down the aisle to Matteo,\" Cat shrugged, startling Ricco.\n\n\"Would you feel that way with a wedding planner?\" he asked carefully. \"She's just helping you plan, after all.\"\n\n\"Wedding planners wouldn't try to force their own preferences on the bride because they wouldn't get paid,\" she laughed. \"I get that this is a Vitali wedding, but it's mine too, and there has to be some compromise, doesn't there? I mean, you only get one day to be a princess bride,\" she quoted Aria's earlier words. \"Maybe I should have pushed harder to elope,\" she half-joked.\n\n\"Where is Theresa now?\" he inquired, looking around.\n\n\"She went to check on Stefano,\" Cat informed him. \"The bakers just left a few minutes ago.\"\n\n\"What did you choose?\" he asked.\n\n\"Who knew there were so many different types of Millefoglie. I liked a particular one very much, and I think it would work for the numbers of people we will need to feed, but...\" she lifted up her hands, spreading them wide palms up.\n\n\"But she had other plans,\" Ricco nodded. \"Why haven't you said anything before? I'm sure this isn't the first time you've disagreed with Mama.\"\n\n\"I'm not complaining, it just gets a little hard sometimes, that's all, but I am trying to stick to what I want, mostly. The Truth is I quite like the arguments, even when they're draining. No one has ever challenged me that way before. It's nice that she cares so much; it's like what I imagined having a real mother to fight with would be like. I'm just tired. Don't mention it to anyone, please?\" Cat put on a false smile and the mask of a happy young woman about to be married. Ricco saw the mask go on; he had begun to recognise Cat's masks as he saw them through Matteo's eyes in different situations. There were only a few people who got to see the real Cat with all her flaws and insecurities rather than the beautiful and confident young woman she projected to most people they knew.\n\n\"How's the new car?\" he changed the subject as she changed her posture and smiled brightly.\n\n\"So cool! I can't believe Chase got it ready to go so fast!\" she grinned.\n\n\"I thought you might want to take a drive down the coast and maybe get some take away for dinner?\" Ricco asked. \"With Matt not being here, we could make it really junkie food. Burgers and thick shakes?\"\n\n\"I'd love that!\" she enthused. While Matt didn't mind pizza at times, he hated fast food, and it had been forever since she had a burger and fries that wasn't some sort of healthy gourmet version.\n\n\"Great, I'll just go check on Papa and whichever brothers are home, and then we can go,\" he grinned to match her smile.\n\n\"I should talk to Mia too, I feel dreadful that my wedding is overshadowing hers,\" Cat said, feeling the weight of everything settling on her again.\n\n\"This house is so big, why don't you give her a call and see where she is,\" Ricco said.\n\n\"No need, we were just coming to find Cat,\" Mia said, entering the living room followed by Trista and Aria.\n\n\"This can't be good,\" Ricco looked at his sisters. \"Do you want me to stay?\" he asked Cat.\n\n\"No,\" she laughed. \"I'm sure I can take them if it gets physical.\" Cat joked.\n\n\"I told you we needed Vanessa as well, she'd struggle against all four of us,\" Aria said in her usual haughty tone, but her eyes sparkled with delight.\n\n\"Wouldn't make any difference, there are too many brothers in this house to come to her rescue,\" Trista grinned.\n\n\"I'll be back to check on you,\" Ricco said, eyeing his sisters warily.\n\n\"Is there a problem with the dresses?\" Cat asked Trista as Ricco left the room to find his fathers.\n\n\"Not at all, I love the simple design, it suit's all of us, which isn't easy to do. Even the neutral colour will work well, especially with what I have planned for the boys!\" Trista said enthusiastically.\n\n\"That's a relief, I'm not sure I could have fought another battle over the wedding today,\" Cat admitted.\n\n\"It's been pretty tough, huh?\" Aria asked, tilting her head. \"Dealing with Mama and all of us?\"\n\n\"No, it's fine. I know everyone is just trying to help,\" Cat said.\n\n\"I heard what Matteo said to Mama before he left,\" Mia informed Cat. \"Then Aria told me what you and Chase were joking about, and I'm concerned.\"\n\n\"You dumped him once because of me, and I couldn't bear it if you cancelled the wedding because you felt like you were being bullied into something again,\" Trista sounded upset by the idea.\n\n\"I'm not cancelling the wedding!\" Cat was shocked by the way this conversation was going.\n\n\"You're talking about eloping though. Not just you, but Matteo too, and by the look on Ricco's face just then, he'd encourage it,\" Mia accused.\n\n\"I only ever had David to deal with, I didn't even have a mother who cared enough to talk to me much, so it's challenging to have so many people trying to influence my decisions about the wedding,\" she admitted. \"I have different tastes to you all, and even when I think I am doing the right thing it isn't what's expected, and I end up disappointing someone.\"\n\n\"You know, most girls, Maryanne included, would have just gone along with whatever Mama wanted,\" Mia spoke again.\n\n\"I'm not most girls, and I didn't grow up in a family like yours with all this tradition and laws. I'm doing my best, but I still need to be me. Matteo fell in love with me; the uneducated girl from the wrong part of town, and while I am learning more all the time, and I've moved to the right side of town, I still need to me or the woman he loves will disappear entirely,\" Cat tried to explain. \"If you've come to ask me to just let Theresa do what she wants for the wedding, I can't do that.\"\n\n\"Okay, I'm here,\" Vanessa said, walking into the room. \"What's the big emergency?\"\n\n\"Emergency?\" Cat asked, looking at the other women.\n\n\"Matteo is threatening to elope unless we can stop Mama from bullying Cat,\" Mia said without pulling any punches.\n\n\"He what?\" Vanessa was appalled by the idea.\n\n\"That was my reaction when she brought it up earlier today at the House,\" Aria nodded.\n\n\"Matteo wants a traditional wedding,\" Cat hastened to reassure them. \"We are doing all this for him, not me. We won't be calling off the wedding!\"\n\n\"What he said was, that if we stressed her out even more, she might choose to elope and he would cancel everything and do it,\" Mia said. \"He intends to marry her in a few weeks with or without us.\"\n\n\"Everything will be fine, honestly. Matteo won't cancel it, and I have been digging my heels in about certain things and refusing to budge, no matter what was said,\" Cat tried to make the idea that Matteo was considering eloping because of her seem less likely. \"I'm fine, honestly, no stress, see,\" she shrugged and smiled widely at them.\n\n\"Okay,\" Vanessa came and had a seat with her sisters. \"What did Mama do today?\"\n\nCat sat back at that point and listened to them all talk around her and about her. Mia, it seemed, knew far more about what had occurred in her meetings with Theresa than she had realised. She was such a quiet and still presence it was often easy to not even realise she was in the room. Yet here, with her sisters, she was obviously the voice of authority.\n\nThese were obviously all strong, intelligent and, in their own way, powerful women who had each found a way to use their patriarchal family traditions and laws to their advantage. They were by no means the meek and mild women that her history lessons had told her she would encounter amongst the families of the twelve tables, and she began to see them through different eyes.\n\nShe listened and spoke when asked questions as they made decisions about the best way to tackle their mother and help Cat get what she wanted for her wedding. With Matteo's absence, the threat loomed even larger, because if he called and found her upset he would whisk her away, and all the plans would be for nothing. No matter how many times she told them she wouldn't cancel the wedding because she knew how much Matteo wanted it, they carried on with their plans to support her. Cat knew she could never organise such a huge affair on her own, all she wanted was to be able to make choices with colour and layout and food. This had all become a much bigger issue than it needed to be, and she sighed loudly, making them all look at her.\n\n\"I appreciate that this is how your family works, but this,\" she waved her arms at the four women, \"Just makes me feel stupid, and I have to wonder if marrying into this family at all is in anyone's best interests, particularly Matt's. Especially when no one thinks I am capable of arguing with Theresa without any hard feelings. I love that she is doing so much. I could never have even dreamed of pulling so much together in such a short amount of time without her. Yes, it's frustrating when we disagree, yes, Matteo is worried because I come home from here exhausted, but she has never treated me like I was stupid for my choices when she disagreed with them. We argue, and we compromise,\" Cat said sadly.\n\nThe sisters stared at her in silence.\n\n\"I have said at least twenty times that no one is calling off the wedding, and you refuse to listen to me. I've never had sisters before, and I was looking forward to it, but, seriously, this is over the top. I was joking with Chase earlier, while you know Aria and Matteo were just teasing Theresa and making sure I knew he would back my decisions. Mia, think about what you heard. It wasn't a threat. You are all overreacting,\" she sighed heavily again. \"I appreciate that you all came here to support Matt and me, but there is no emergency, trust me. I love Theresa; I even love arguing with her, because I never got to argue with my own mother, who didn't care enough about anything I was doing to argue about it.\"\n\n\"I see that I should have stayed,\" Ricco grumbled, coming back into the room.\n\n\"Everyone is just trying to help me,\" Cat laughed, putting on her happy bride-to-be mask. \"There was just a little confusion, that's all. I'll be more careful about what I joke about in the future.\"\n\n\"My fault,\" Mia admitted. \"Sorry, Cat, I'm just a little overprotective of Matteo and want him to have the perfect day.\"\n\n\"Trust me, as long as Cat shows up, it will be perfect for him,\" Ricco chuckled. \"That man is goofy in love.\"\n\n\"I know, right?\" Vanessa laughed. \"He's been control freak central about that building for years, and suddenly everything is wonderful, and he trusts my judgement! Speaking of which, I better get back to work,\" Vanessa gathered her handbag.\n\n\"Oh, I'm meeting Aria at the penthouse at nine in the morning if you want to come up,\" Cat said quickly. \"She's going to help me choose some artwork. I had no idea there was so much to choose from in the depository.\"\n\n\"Sure, that sounds like fun,\" Vanessa said, and blew air kisses on everyone's cheeks. \"You can see what we've done so far with the colour schemes.\"\n\n\"We should be going too,\" Ricco said to Cat.\n\n\"I'd like to see the penthouse too,\" Trista complained. \"Wouldn't you, Mia?\"\n\n\"I'd like to get the full effect when it's finished rather than in progress,\" Mia said, not wanting to push her luck by crowding Cat again. \"Besides, weren't you going to work on the dresses tomorrow? Maryanne is getting bigger every time I see her, she must be having triplets by the size of her!\" she grinned.\n\n\"I guess, and Lucia will be here the day after, so I have to get hers at least half done for the fitting,\" Trista sighed.\n\n\"As soon as it's all done I'll have you all over to inspect it, including Lucia and Maryanne,\" Cat said easily as she got to her feet to join Ricco.\n\n*****\n\n\"Mm, that was so good,\" Cat said, taking a napkin and wiping her mouth before helping herself to a potato scallop.\n\n\"I think it's the oil they use in little fish and chip shops like this,\" Ricco said around a mouthful of his burger. \"Lisa could make us burgers, but they wouldn't taste this good,\" he grinned and wiped a dribble of sauce from his chin. \"It can't possibly be good for us.\"\n\n\"It's definitely not good for us, and I have a wedding dress to fit into in a few weeks,\" Cat stuck out her belly and rubbed it. \"I'm not sure how Matteo will feel about my Buddha's belly, even if I tell him he can rub it for luck,\" she giggled.\n\n\"I don't think he would mind somehow,\" Ricco chuckled with her. \"I know I don't.\"\n\nThey lapsed into a comfortable silence. They'd become more at ease with each other since her confession, though they still hadn't been in any intimate situations, and the weight of that hung heavily on Cat. She knew he would have an expectation now with Matteo gone, but somehow it didn't seem right, almost like she would be cheating if he wasn't there with them.\n\n\"This was a good idea, thank you,\" Cat said, and started to pack up the debris from their meal as Ricco finished eating.\n\n\"Feel like a walk along the beach?\" he asked, looking out on the moonlit water. They had stopped during the sunset, and, while it was dark now, it was still quite warm for this time of the year.\n\n\"We could do that,\" she said warily.\n\n\"You don't have to be afraid of me, Cat,\" he said, feeling hurt by her wariness and the mask he could see closing over her features. He took the rubbish from her and stood, walking over to the bin near where they had parked the car. When he turned around, she had slipped off her shoes and was walking down toward the water.\n\nCat felt a tide of emotion hearing the hurt in his voice. She knew logically that Matteo wanted the relationship between the three of them to grow and include intimacy. She knew, on some level, that she still loved Ricco, not in the same heart full to bursting way that she loved Matteo, and she knew Ricco deserved better than that. She dipped her toes in the water and hissed, it was cold, and she went to take a step back and bumped against the hard body of Ricco who had come to stand behind her.\n\n\"I'm sorry,\" she said softly.\n\n\"You barely touched me, let alone come close to knocking me over,\" he chuckled.\n\n\"I'm sorry about that too,\" she whispered and turned to look up at him. \"It's just...\"\n\n\"I know,\" he said softly as she hesitated, and lifted a hand to gently brush a loose strand of hair from her face. His fingertips barely brushed over her skin, but he felt the sizzle of attraction for her that he always had. She seemed to relax, and his fingers brushed along her jawline to the back of her neck and he bent his head to kiss her. Not the soft, chaste kisses she had doled out to him recently, but a deep consuming kiss that told of his need for it and her. The patience and restraint he had shown her seemed to evaporate, and he pulled her closer in the kiss until their bodies touched and melded together. He could feel the heat of her and the tightening of her muscles everywhere they touched.\n\nCat tensed in Ricco's arms. Everything she remembered about their lovemaking was soft and gentle, but this kiss was hard and demanding and showed her how much he desired her. She closed her eyes as his tongue slipped over her lips and sought our hers as the kiss deepened once again and she forced herself to relax. This was Ricco, Matteo encouraged their relationship, she wasn't cheating, it was okay to enjoy the moment.\n\nRicco felt her relax slightly in his arms and extended the kiss, his hands running down her back to rest on her ass. When he finally broke the kiss, he rested his forehead on hers and looked into her eyes for signs of guilt or regret. He knew that without Matteo being there she was probably feeling both. He, too, felt a twinge of guilt, but they were finally alone on a moonlight beach, and he was only human after all.\n\n\"Wow!\" she breathed. \"I don't remember you kissing me like that before!\"\n\n\"This time I know exactly what I want,\" he whispered. \"No hidden agenda's or commitments to anyone but you and Matt. I love you both, and I want everything that comes along with that more than I've ever wanted anything else.\" He ran his fingers through her hair, tilting her head back even more, and kissed her again in a soul-searing, demonstration of that love and need.\n\nCat heard his words, and all of the ones that had come before rose up into her mind. He wasn't trying to steal her away from Matteo, he didn't expect her to love him less. He just wanted to be part of that love. She surrendered to the moment and his demanding kisses and hands, wrapping her arms around his neck and returning the feelings she had for him.\n\nRicco felt her surrender and felt a tremor run through him. Maybe he should have pressed harder for a date night alone with her before now. The problem would be when Matteo returned, he knew, but, for now, it was about making new memories for her and erasing his past mistakes. He broke the kiss and smiled down into her face.\n\n\"You are so beautiful,\" he murmured. \"If we don't start walking now I will end up doing something you're still not ready for.\" He took her hand and moved beside her, taking a step forward.\n\n\"Ned was super jealous,\" she said after a few minutes of silent walking. \"Even of my friendships with people. I guess that's why I never had many friends. He tolerated David because he knew how much I needed him. It didn't stop him from threatening David to get me to do what he wanted, but....\" She shook her head. \"It's hard to understand how you and Matt are happy with this relationship, even without sex it amazes me that you seem so happy living with us.\"\n\n\"I don't see it that way,\" Ricco considered his words carefully. \"I see it as you sacrificing a lot to live with us. Matt's my big brother, I've always loved him, and he loves me in the same way. We've become even closer, more than brothers, more than best friends, we're joined in a way I can't explain. In the last few months, he's shown me, not by pointing it out overtly, what an asshole Cobi was to me by treating me as his equal in all things. Cobi never did that. The two of us can and will do great things together, one heart, one mind kind of stuff. It's you who has to accept who we are, both as individuals and together, because once the table is announced and we have accepted our places nothing will tear us apart.\"\n\nHe stopped walking and pulled her close again, kissing her deeply. When he broke the kiss, he rested his forehead against hers and sighed as he admitted the truth.\n\n\"You still have the ability to do that,\" he added softly. \"If you asked him to, Matt would call off the wedding and leave the family and his future to have a life with you.\"\n\n\"I know,\" she whispered back. \"I've always known, which is why I let your crazy family order me around the way I do. I would do anything for him, including letting a Domme torment me for weeks on end,\" she gave a small laugh and started walking again. \"What normal person would agree to that unless they knew the stakes were much higher than anyone realised? I never wanted to come between Matteo and his family, but in doing all of that, it seems I have inherited this family in a whole other way, and then there's you. I wasn't expecting you. You have to admit there's been a lot for me to take on and try to wrap my head around.\"",
        "\"You know Matteo and I will help you with the crazy family, right?\" Ricco chuckled.\n\n\"Sure, just like your sisters wanted to help me with Theresa and the wedding. The thing is I am handling it all. I have made some friends who are helping me handle it who aren't as invested in the current family leaders and their way of doing things,\" she sighed. \"I need to do it my way or no one will ever respect me. It's fine for you and Matt; you were brought up to live this life and be strong leaders. I was brought up to believe I was nothing and would never be anything, so I'm a work in progress right now, and this,\" she lifted the hand that held his. \"Is just another thing I have to work through, and it's probably the scariest.\"\n\n\"Why are you scared?\" Ricco seemed bewildered. After all, she had said that she would find a relationship with him the scariest.\n\n\"Matt knows where I came from and how I met you and your father. He read it all in a report written by a third person who talked to the people that were there, and no doubt saw the court transcripts. It's easy for him to dismiss it as unimportant and say that my past doesn't matter,\" she tried to explain.\n\n\"It doesn't,\" Ricco frowned, trying to work out what she was saying.\n\n\"You were there; you saw what he did to me. You heard his threats, and one day all of that will come back to haunt us. If not Ned himself, then some reporter who thinks it will make a great story about the ex-girlfriend of a criminal marrying the Vitali heir for his money,\" she said without rancour. She felt an odd acceptance that no matter how far she ran she couldn't outrun the abused girl who had no choice but to accept mistreatment by the people who supposedly loved her. \"They will probably even dig up the fact that I traded up from you to him and make me look truly evil.\"\n\n\"Why does me being there scare you? I love you, and part of that love comes from seeing you at your most vulnerable and still having the strength to refuse help from anyone. You are the strongest woman I know. You've overcome so much in a year, done so much to change your life in a year. Yet you've still remained the same strong independent woman I met on that first day,\" Ricco gathered her tightly in his arms. \"We don't love you despite your past, we love you because of it and how it has made you who you are. There is nothing anyone could say about you that would make us love you any less.\" He knew he spoke for Matteo as well when he said the words. \"We want to marry you. Sure, Matteo will be at the end of the aisle and say I do, but I will be standing right beside him.\"\n\n\"That seems so unfair,\" she sighed. \"Don't you want a wife and family of your own?\"\n\n\"You don't get it at all. You will be our wife, our lover, and the mother of our children. You and any children that come will be mine just as much as they are Matt's. You spent time with Josh and Dante. Could you tell which one of them is the true father of their children? Did the children seem to favour one man over the other? Do we, for that matter, when it comes to Stefano and Roberto? Matteo Vitali will be the name on any birth certificates, but that will be the only deference paid to him over me so that we can ensure our children rise to populate the next Vitali Table.\"\n\nCat remained silent thinking about what he said. She'd known, of course, that they had two fathers and that Peri was married to Josh but loved both him and Dante. She just hadn't put it in terms of family life; she'd been so focused on the relationship and intimacy of the three. She considered how Theresa felt and if she knew who had fathered each of her children and wondered if it would be rude to ask.\n\n\"Did you ever wonder which one was your real father?\" she asked.\n\n\"It never mattered, they were both just Papa, one in the same person, really. It didn't matter who you asked a question of, they both gave the same answer, so we couldn't play them off against each other like we could with Mama,\" he chuckled. \"Families come in all different variations these days. Our kids will have an easier time accepting theirs is a little different than what we had growing up.\" The wind blew harder, and he swept a tendril of hair from her face. \"Are you cold?\" he asked with concern.\n\n\"A little,\" she admitted.\n\n\"We'll head back then,\" he said, turning them around. Ricco let the silence between them continue knowing she was thinking about what he had said and how it would relate to their life. Until she and his siblings, for that matter, started seeing him and Matteo for who they would become in the family, he would be seen as the third wheel. He needed Cat to accept what was happening before he could hope to win love from her equal to what she had with Matteo.\n\n\"Would you like me to drive back? I know the roads around here well,\" he offered.\n\n\"Then you will make an excellent navigator,\" she laughed and walked around to the driver's side. \"I don't want you messing up my seat or mirrors with your long legs and tallness.\"\n\n\"Fair enough,\" he shrugged, but came around to hold her door and help her in before getting into the passenger's side.\n\n\"Good talk?\" he enquired light-heartedly as she pulled the car out onto the road and started the long trip back into the city.\n\n\"Yes,\" she agreed. \"Not as good as the kisses,\" she laughed. \"Just as well you didn't kiss me like that before I left Melbourne or I might never have met Matteo.\"\n\n\"He said the same thing. He said if we had been honest with each other before you dumped me we may have made it work,\" Ricco said. \"He's pretty happy that didn't happen, so am I, now that things have worked out this way.\"\n\n\"You are, aren't you?\" she asked rhetorically.\n\n\"I'll be happier once you let me tie you up and spank you, but I can wait,\" he chuckled at her gasp of surprise.\n\n\"I'm not sure Matt would approve of that when he's only been gone a few hours,\" she gathered her wits and teased back.\n\n\"He approves. The man suggested it on the trip to the airport!\" Ricco was enjoying the constant look of surprise on her face. \"He's been encouraging you to be with me since you got back from Canberra. Why would you think that would change just because he's on a business trip?\"\n\nCat's jaw worked, but no sound came out. Matteo had been encouraging their relationship, but she found it hard to believe he would be happy with her fucking Ricco while he was out of town. He hadn't actually said he wanted to fuck her, but the tying up and spanking had an inevitable conclusion in her mind. The phone rang through her speakers, disturbing her train of thought, and she tapped the button on her steering wheel that Chase had shown her earlier to answer it.\n\n\"Hey, Kitten, I've been trying to call for the last hour! Where have you been?\" Matteo's voice sounded concerned.\n\n\"Ricco and I went for a drive in the new car. We must have been out of range for a little while, sorry,\" she answered immediately.\n\n\"It's all good now that I can hear your voice. How did your day go? Fighting the good fight?\" he chuckled.\n\n\"Indeed, and then I battled all four of your sisters, and now... well, now I am wondering if you actually suggested that Ricco tie me up and spank me tonight as I drive home from the unhealthiest dinner I've had since meeting you,\" she said with a smile and cheery voice.\n\n\"All four of my sisters? In the one Room?\" He asked, astounded by the fact that they had all come together, and wondered why.\n\n\"It seems you were overheard threatening to elope,\" Ricco chuckled. \"They put together some form of intervention, from what I can work out.\"\n\n\"Seriously?\" Matteo's voice had become serious. \"Cat, are you okay?\"\n\n\"Your sisters don't scare me. Ricco, on the other hand,\" she glanced over at him and shook her head.\n\n\"What did Ricco do?\" Matteo asked, suddenly feeling as if his life was spinning out of control in Melbourne while he was getting on a plane to Malaysia.\n\n\"He kissed me,\" she said, realising how ridiculous she sounded.\n\n\"Made her knees go weak!\" Ricco said proudly. \"You would have been impressed, if I do say so myself.\"\n\n\"And this is a problem because?\" Matteo asked, though his voice held a hint of amusement.\n\n\"He wants to tie me up and spank me!\" she blurted out.\n\n\"He's got a thing about rope, you have to forgive him for that,\" Matteo chuckled. \"Perhaps you should just admit that the idea appeals to you so much so you're thinking about letting him.\"\n\n\"She's blushing,\" Ricco chuckled. \"How'd it go in Port Moresby?\" He changed the subject because Cat looked so uncomfortable.\n\n\"All wrapped up and on my way to Kuala Lumpur. I'll be home before you know it, so you better make the most of this time you have together to get over this weirdness between you. I'd like us to move into the penthouse together the way we should be,\" Matteo said, keeping a lightness to his voice. This wasn't easy for him either, but... \"You're both making this much harder than it needs to be, just fuck already!\" he said bluntly. \"The tension is going to kill us all if you don't! You have my permission, my blessing, whatever you need, just get over this hurdle so we can all move on together!\"\n\n\"Sorry, it's me, I know,\" Cat sighed. \"I love you.\"\n\n\"I love you too. Nothing is going to change that in any way. You can trust me on that, and you can trust Ricco too,\" Matteo said in a much calmer voice.\n\n\"Love you too, brother, but I am sure this is not why you called,\" Ricco said evenly.\n\n\"I got a strange message from Mia apologising for interfering, I am guessing that was because of the elopement intervention,\" he chuckled. \"My planes about to take off. I'll call you from KL tomorrow. Have fun, but not too much fun,\" he chuckled. \"I'd like to think you miss me a little bit.\"\n\n\"I miss you,\" Cat said, but the call had already ended.\n\n\"We don't have to do anything you don't want to do,\" Ricco reassured her as the soft music came back through the speakers, and they lapsed into silence, each for their own reasons.\n\n*****\n\n\"Hello, Lisa,\" Cat smiled as she entered the apartment. \"We'll be fine tonight, you can go to bed. I'm sorry it's so late.\"\n\n\"No problem, Miss Leone,\" Lisa said, and gave Ricco a quick glance, who shook his head but said nothing. It was the first time he had seen Cat take charge, but then Matteo had always been here with them before. She was quite confident and in control when she spoke to his sisters as well. He hadn't noticed this change in her, and she did it so subtly that it seemed almost natural, even to someone who thought they knew her well.\n\nCat walked further into the apartment and, hearing Matteo's rebuke echo in her head for the hundredth time, she went to get a drink of cool water from the kitchen. \"You're both making this much harder than it needs to be, just fuck already!\" he had said, and he had sounded frustrated and disappointed in her. She could do this, just like she had fucked Hella knowing it was what he expected. The difference here was that feelings were involved, all three of their feelings.\n\nTaking the water jug from the refrigerator, she placed it on the countertop of the island bench and went to get glasses for them. She poured herself a glass and drank it rapidly, trying to cool down the heat of what she was feeling. Guilt and embarrassment warred with curiosity and need within her. She turned to offer Ricco a glass of water, and he tilted his head, watching her curiously.\n\n\"He was right,\" she said softly, placing her glass on the bench. \"The tension will kill us all if we don't do this,\" she said with a slight quaver in her voice as she reached up and undid the halter neck of her dress and let it fall, exposing her breasts to Ricco's view. His eyes widened with a sharp intake of breath, but he said nothing, so she undid the zip at the back and let the dress fall to pool at her feet revealing lace panties.\n\n\"What do you want, Cat?\" Ricco softly growled at the trembling, almost naked, beauty of the woman he loved. \"Not what Matt wants. What do you want and need? Be sure this is what you want, because once we start going down this road together, you won't be able to change your mind,\" he warned.\n\nShe swallowed and licked her lips but did not reply immediately.\n\n\"Are you sure?\" he asked differently, and watched as she slowly nodded, her tongue snaking out to lick her dry lips nervously again.\n\nRicco stepped closer until they were almost touching and pulled her close, grasping his hands around her wrists and lifting them behind her to the middle of her back so that her elbows bent and her shoulders twisted to the point of resistance.\n\n\"This won't be like last time we were together. I know what you endured at the hands of Hella and what your real likes and limits are now!\" he growled in a deep husky voice, then leaned down to glide his lips over her exposed neck and shoulder, breathing in the scent of her.\n\nCat grimaced and inhaled deeply through clenched teeth at the heat growing in her bent and twisted joints. The air hissed into her mouth as she took the breath. Still, she did not reply. Ricco grinned at her, and Cat was stunned by the look of heated lust written over his face.\n\n\"As you wish, I will take your silence as agreement. You have made me wait and watch you, and now there is a price to pay for that!\" he growled and shoved her back against the countertop. The water jug and glass rattled from the force of Cat's body crashing against the edge of the counter.\n\nRicco's growl sent shivers through her. She knew, despite this show of anger born of frustration, he was taking control and letting her know that he wasn't the sweet and soft lover who had left her wanting so many months ago. She deserved this from him, but more than that she wanted it from him... Needed it from him. She knew he loved her, and she trusted him to look after her, despite his momentary anger, so when he released her wrists and spun her around she bent over the countertop before he had to push her onto it.\n\nCat purred, parting her legs slightly as Ricco kneaded her firm ass cheeks. She leaned forward with both her palms placed flat on the counter's surface for support. She shivered when Ricco slid his hand between her legs and back up over her smooth skin and the thin lace covering it. He lifted his hand and she braced for the impact she knew was coming.\n\nRicco watched as Cat tensed for impact and didn't hold back. He knew what she could take and what she needed now. After three hard smacks that coloured the skin of her ass, he ran his hand over the lace of her panties, feeling the dampness and arousal, and smirked and wished he could share this moment with Matteo. He grabbed a fistful of her hair and pushed her face onto the cool counter. He hadn't realised how much he needed her complete surrender and wondered why Matteo hadn't taken more advantage of it, preferring hard, rough, but generally vanilla style sex. Perhaps that was because of him and the tension between them all, he would be very eager to test out the red room at the penthouse with his brother.\n\nHe began to spank her again, landing another half a dozen on her perfect upturned ass before bunching the lace in his fist and ripping it from her body. Such was the strength and power he felt and used that she cried as it strained, then ripped against her body. His hands glided over the swollen red flesh and dipped between her legs to tease her before adding several more smacks.\n\nUnable to hold back his need for her anymore, he quickly dropped his trousers and stepped out of them, all the while massaging the glowing cheeks of her ass. He tightened his grip on her hair and thrust into her without warning, making her cry out again for him. He fucked her like a man possessed, revelling in the breaking down of this last barrier between them. The rational side of his mind knew that the last barrier would be when the three of them experienced this intimacy for the first time, but this was what he needed, had needed and wanted since she left him.\n\nCat whimpered and tried to blink away the tears that filled her eyes. She moaned as he continued to smack her between thrusts and pull her head back and up by the hair. Her body began to shake, and she let out a long, loud cry as her orgasm began. Her pussy clenched around his cock, and he groaned deeply as he felt her milk his orgasm from him.\n\nRicco moved over the top of her and held her until her shaking subsided. Despite his orgasm, he was still hard and wanted more. Once he was sure she had settled, he pulled her up by the hair and turned her to stand before him. Her face, neck and the top of her chest was flushed a deep red.\n\n\"You suffer with such a rare, delicate, and almost breathtaking beauty, Cat,\" he said in a low husky tone. \"I had seen it so often when Matteo fucked you, and now it's my turn to enjoy your suffering,\" He kissed her deeply, possessively, his free hand trailing down over her breast as the other continued to grip her hair. \"Had I known what you wanted and needed when we were together, things may have been different, but, in all honesty, I am glad they have worked out this way. Matteo may always be your Prince Charming, but I will, at times, be your Prince of Darkness.\"\n\nCat shivered at his words. This was not the Ricco she knew or remembered, and it both thrilled and scared her. She watched as he picked up the glass of water she had poured for him earlier and took several mouths full. The last one he didn't swallow, but tilted her head back and lowered his lips to hers. She opened her mouth and he spilt the water from his mouth into hers. Cat swallowed the water, acknowledging her thirst.\n\nStill using his hand in her hair, he applied pressure with his now free hand on her shoulder, and she sank to her knees before him. She smiled and reached for his still erect cock with both her hands. She gripped it tight and pulled the skin back, fully exposing the throbbing, swollen, purple head. She looked up at him as she moved forward to kiss and then roll her tongue around the head, tasting her own essence on him.\n\n\"Yes!\" he hissed.\n\nCat locked eyes with him, licked her lips and placed them on the tip of his cock. She slid her lips slowly over the head of throbbing cock. When her lips slid over its ridge, she pulled her head back slowly until her lips reached the tip. She placed a gentle kiss on his cock and slid her lips achingly slowly over the head again.\n\n\"Fuck! Yes!\" Ricco growled, as a shiver ran up his spine and his balls tightened along with the hands he wound into her hair.\n\nCat continued to concentrate on how slowly her lips were gliding over his twitching cock's head. She wasn't going to be the only one to suffer, she thought. Her eyes were locked on his face, observing the pleasure she was providing, when she saw his expression change.\n\n\"I see you are still trying to top from the bottom. That might work on Matteo, but not on me!\" he snarled and grabbed Cat's head with both hands to steady himself, and thrust into her mouth, making her gag. He alternated between letting her suck and lick and catch her breath to fucking deeper and longer into her. She could take him all, eventually, and the sight of it drove him to want more of her surrender and submission. When he couldn't contain the pressure that had built up at the base of his cock any longer, he roared.\n\nCat kept still, the corners of her mouth curled in a satisfied smile as his cum filled her mouth. Once his cock stopped twitching between her lips, she made sure she locked her eyes to his and swallowed every drop. Ricco staggered back toward the kitchen table and chairs, sitting heavily and out of breath. Cat followed him and moved between his legs to lick his cock clean. When she was finished, he pulled her up into his lap and she wrapped her arms around his neck and placed her head on his shoulder. He placed a hand on the top of her thigh and gently caressed her skin. Cat purred when his fingers slid over the indentation on the top of her thigh where the edge of the countertop had left its mark.",
        "\"I like the marks,\" she admitted. \"I like the feel and touch of them,\" she traced her fingers over the line his fingers had just travelled.\n\n\"I'm not done yet, I believe I promised to tie you up,\" he grinned. Cat's pale skin glistened in the light. Her hard, pink nipples jutted out from her soft, firm breasts and begged to be sucked and pinched. His hand glided over them, knowing that her nipples were sensitive. He pinched one between his thumb and forefinger to test her limits and swallowed her whimper with a deep kiss.\n\nRicco picked her up and walked her into the bedroom. He positioned her facing the foot of the bed and smacked her still red ass. He walked away, and she turned her head hearing a rustling in the huge walk-in closet. When he came back, he threw several lengths of carefully coiled black rope on the bed. Cat watched him carefully, hoping for an explanation, but it never came as he reached for a coil of rope from the bed and unwound it.\n\nCat felt him place a hand in the middle of her back and quivered, feeling goose bumps rise on her flesh. This was his kink, and she knew it. He was a rope Master, and she gasped as he pushed her with some force so she fell face first onto the bed. He followed her, placing a knee between her legs, making sure she couldn't close them, and smacked her ass again, making her yelp in surprise and pain.\n\nRicco cinched the rope quickly around one wrist, pulling it from her side to midway up her back. With amazing speed, he had secured her wrists and hands along the opposite forearms so they were secured horizontally across the middle of her back. Her shoulders lifted from the bad and pressed her breasts into the mattress. He growled low and deep as she squirmed in the uncomfortable binding, and he saw her still. He understood her unspoken need for a token resistance and smiled. His hand dipped down between her legs, feeling her heat and wetness.\n\n\"Don't pretend you don't want this!\" Ricco growled and picked up another coil and whipped the loose end across her back. A red streak appeared instantaneously on her pale skin. The sight made his cock begin to stiffen again.\n\nCat cringed at his words and the sting between her shoulder blades and pushed her face into the mattress. She did want this; she embraced the pain and discomfort. She felt the rope whip across her ass. Cat let out a needful whimpering moan and pushed her hips hard into the mattress. A moment later she felt his hand on her hips, forcing her on to her knees, so she held her red ass in the air and her head lay on the mattress, which bowed to his weight as he knelt behind her and helped her kneel up properly and sit back on her heels.\n\nRicco wrapped a rope around her arms and over her breasts, two passes of the rope across the tops of her breasts and a single pass of the rope, tight, under her breasts. They swelled outwards from where the rope dug into her flesh. He reached around her with his hands and rolled her nipples between his finger and thumb. Cat squealed and tried to hunch her shoulders in an attempt to ease the pain, but found the ropes on her arms allowed her little movement. Ricco pulled them hard away from her chest. The hot pain that radiated from her nipples set off a tingling sensation that seemed to have a super highway to her clit.\n\n\"Beautiful,\" Ricco breathed into her ear as he released the pink buds of her nipples. \"You are so beautiful like this, delicate, sweet and stunning in your suffering. You make me regret all our lost time and feel the need to make you regret it too.\" Ricco pushed Cat face down on the mattress and rolled her onto her back to hover over her. He stared into the fire in her big, beautiful, hungry, blue eyes.\n\n\"I know who you are. I may not have realised before, but I know who you are and what you need now. It's not about the submission for you, is it? It's not about the coercion or the pain or the pleasure. It's the surrender you hunger for, the submission. The pain and pleasure are important, don't misunderstand, but what you hunger for is being made to surrender. It took Matteo to finally voice his frustration for you to agree as if he was forcing you to this point,\" Ricco said in a strange voice as his hands kneaded and tormented her breasts, making her whimper and squeal deliciously for him.\n\n\"What you will find now is something quite different to what you expected. You have been dealing with Dominant men up until this point, but I am a Master, and, while that will not mean anything to you as yet, you will come to learn the difference,\" he assured her. \"I won't ever go beyond Matteo's limits when we are all together, but when we are alone, you will know what it means to serve me and the dark, hedonistic pleasures I can give you.\"\n\nCat's mind whirled. She was beyond turned on, the discomfort and pain she endured, and the fierceness in his eyes and voice triggered something deep inside her. She wasn't afraid, she was curious. It was true; the moment of surrender in the kitchen thrilled her. His rebuke for trying to top from the bottom excited her knowing he would punish her in some way. He knew her limits, and she trusted him, but the adrenaline she felt at hearing of the darkness he promised her pumped through her veins and made her quiver beneath him.\n\n\"Look at you quivering in need. You need to surrender everything to me from this point on, your body, your shame at wanting that darkness, your need and arousal. I know you,\" Ricco repeated. \"I know you need a Master who is worthy of that complete surrender. I don't just want your submission, Cat, I want your complete surrender to me and my needs. You can be submissive to any number of people in a variety of ways. I demand more!\"\n\nRicco lowered his mouth to hers and kissed her, demanding more, even from this simple act, and she returned his kiss with passion. Her arousal built as she kissed him, her body became relaxed, her breathing was ragged but no longer laboured. Cat spread her legs and lifted her knees, offering herself to him and everything he promised her. There was no need in Cat to struggle against anything he could or would do to her. She gave him the surrender he demanded.\n\n\"Good girl,\" he said as he grabbed another coil of rope, unwound it and wrapped half its length around her thigh, then he bent her leg and wrapped the rest of the rope around her upper thigh and lower shin, just above her ankle. He took another coil and tied her other leg in the exact same pattern. Cat's body was beautiful, and he wanted to make it more beautiful with the rope and the symmetry he tried to weave into his work. He put pressure on her thighs, bending her hips outward, and lowered his head to taste her.\n\nCat's mind lit with the fire he had seen in her eyes, and she exploded almost immediately. Locked in the restraining ropes and the weight of his hands on her thighs, she couldn't move from the excruciating painful pleasure as her body sang with her voice and her eyes rolled in her head, threatening to take her into the darkness he had promised her. Then, abruptly, it stopped, leaving her a quivering mess of perspiration and cum, sucking in great gulps of air as she slowly receded from the ultimate high that had almost carried her away from him and the moment.\n\nRicco hovered above her, watching her carefully, seeing her glazed eyes refocus on his face. He pressed his throbbing cock against her pussy, running it up over her clit, feeling her body pulse with the contact. He leaned forward and kissed her, biting her bottom lip as he entered her and slowly buried himself to the hilt, letting her feel all of him as he felt her. She was tight, hot, slick and quivering, and he was in heaven.\n\nCat let her mind and body surrender to the moment. She felt as if her arms and legs would float away if it weren't for the ropes holding her together. Her mouth wide open, frozen in a silent scream, her eyes unfocused and rolled back as he took her to new heights. She had never before had felt as full as she felt at that moment before he began to fuck her again with the full force of his being.\n\nRicco saw her start to float again and slid his arms under her shoulders, pressing his mouth close to her ear and growling, \"Stay with me, beautiful, stay with me 'til the end!\" He held her tightly as she whimpered and mewled with each thrust, her breathing laboured as she panted raggedly with each forceful thrust.\n\nHe could feel the walls of her pussy get slicker and tighter as he brought her closer to the brink of yet another orgasm. Suddenly, she snapped her head back and her body began to shudder. Her pussy squeezed tight around his cock. The friction was almost painful as he continued to thrust in and out of her tightening pussy. His balls tightened, pressure built up quickly at the base of his cock. He growled loudly with every remaining thrust until he, too, came for the third time that night. He was barely capable of breathing, let alone thinking clearly, but he gathered his strength and, with the knowledge of a Master, he released her quickly from the binding ropes. Only then did he lay beside her and gather her barely conscious body into his arms to gather his strength and wits to care for her and the marks he had inflicted on her body tonight.\n\nThe lines where the ropes had wrapped around her chest and arms were stark against her pale skin, and he forced himself from the bed to gather some wet towels to bathe her and then smooth some specialised cream into her skin where every mark showed. She had passed out long before he was finished, and barely stirred as he gathered her into his arms and let his eyes close. He would never force Matteo into the darkness his brother had never fully embraced, but, when he was alone with her, Cat would learn to love it the way he did. He had never thought he would be able to indulge his inner Master with anyone but a Kept until Matteo had told him of her confession. Now he had everything he wanted in his life, and he would move heaven and earth to keep it.\n\n***** "
    ],
    "authorname": "xelliebabex",
    "tags": [
        "kinbaku",
        "shibari",
        "master",
        "dominant/submissive"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-20"
}