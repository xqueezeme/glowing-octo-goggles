{
    "title": "Efrain and Cory Ch. 27",
    "pages": [
        "Chapter 27 \u2013 Man Crush Saga \n\nJJ Teague's first order of business had been to whack my boyfriend upside the head. \n\nWe'd arrived a little earlier than scheduled for our little study session with the Brain Trust, and Teague apparently felt this was the perfect time to knock Efrain's ball cap off. \n\n\"What the fu\u2013\" Efrain's curse cut off in an undignified squawk as Teague pulled him into a headlock. \n\nEfrain frantically tried to pry Teague's arm off his neck, but the offensive tackle held fast. I felt a little guilty for checking out my boyfriend's ass as it wiggled indignantly in the air. I was particularly fond of the pair of black chino joggers that hugged said ass and did various other wonderful things to the rest of his lower half. \n\n\"What the hell am I supposed to do with you?\" Teague muttered. You could barely tell by his tone that he had 195 pounds of flailing wide receiver trapped under his arm. \"Getting there. What kind of bullshit is that?\" \n\n\"How the fuck do you know about that?\" Efrain demanded, but Teague just chuckled. \n\n\"The magic of pillow talk,\" he said. \"Isn't that what you told Indie?\" \n\nEfrain's struggled harder. \"That's it! You're not allowed to be friends with my roommate anymore!\" \n\nIn response, Teague dropped to his knees, forcing Efrain down with one of the most unmanly yelps I'd ever heard from him. I worried briefly about the potential damage, but Teague was one of those gentle giant types until you got him on the field.  \n\n\"I'm not friends with your roommate. I'm friends with Laurel Sage's bestie,\" he smirked. \"Who just so happens to be boffing your boy's bestie.\" \n\nI groaned inwardly; the \"bestie\" connection had been swift in passing the news as I had only told Preston and Keenan about Efrain's somewhat confession the other night. I think Keenan had understood Efrain's reticence, but Preston had not been pleased. \n\n\"And you're satisfied with that?\" Preston had demanded. \"You're already in love with him, and, bitch,\" he repeatedly jabbed my chest with his finger, \"Do. Not. Tell. Me. that you aren't.\" \n\n\"Of course I am,\" I told him. \n\n\"You're what?\" \n\n\"In love with him,\" I said. \"I'm in love with him. I love Efrain, and I'm pretty sure he feels the same, alright?\" \n\n\"But\u2013\" \n\n\"But, nothing. He needs time, so I'm giving him time. End. Of. Story.\" \n\nAnd then I had had to fend off Keenan's insistence that I tell my parents. With my relationship with Efrain progressing, with a kind of love confession and moving in together all in the same week, and his parents on board with Efrain being gay, it felt like a good time. Keenan's advice had made sense, but, dammit, I was getting a little tired of all our friends sticking their noses in our business. \n\nAnd, sadly, most of my frustrations boiled down to that little voice in the back of my mind that wondered if there would have been any developments in our relationship if someone hadn't prodded us. Would there be an \"us\" without our friends butting in when they had? Or had they simply sped along something that would have happened anyway? Would Efrain have admitted to falling for me (or even recognized that he was) had Teague or Indie not said something? If they hadn't said anything, would he have realized it on his own and given me an actual love confession instead? \n\nLately, I'd been throwing myself into school and football so I wouldn't have to think about just how much of \"us\" was really us. \n\nRealizing that there was no use in struggling against Teague, Efrain went limp. Teague sat back on his heels. \"Dude, you so need to man up.\" \n\n\"Bitch,\" Efrain snapped, still out of breath from his earlier exertions. \"Two words: Berta de la Cruz.\" \n\n\"Oh, fuck off,\" Teague laughed. \"That's two words and some syllables.\" He turned to me, patting Efrain's head with his free hand. \"Next time, take matters into your own hands.\" \n\n\"That's strange,\" I said, cocking my head to the side. \"I told Berta almost the exact same thing.\" I switched to my best Latina falsetto. \"Ohmigawd, like, how many times do you have to shake your tits at a guy before he gets it? Swear to fucking God, if JJ doesn't make a move, I'm fucking jumping his ass!\" \n\nTeague's jaw dropped and the corners of his mouth turned down into this face that kinda reminded me of Beaker from The Muppets. I arched my eyebrow. Your move, Buttinski. \n\nHis arms had apparently slackened enough for Efrain to finally wriggle out. Efrain smoothed back his hair and jerked his chin up at Teague as if to say, \"That's what's up\" before pulling back on his cap. He smoothly got back on his feet and set about straightening his clothes. \n\n\"You prayin' or something?\" Lithgow asked Teague as he walked into the room, pulling us all out of whatever moment we were in. \n\nTeague pointedly ignored us and got off the floor while the rest of the crew wandered in. We soon settled into chairs and pulled out study materials. Lithgow had a paper to work on for his journalism class, and Martinez needed Teague's help on some physics coursework, and I think the rest, like Efrain and me, were cramming for their other finals. Only a few of them joined me in going shoeless. \n\nIt didn't take long, however, for Baker to bring chaos into the mix. \n\n\"Alright, Garza.\" He had stood up and was now leaning his hip against the back of Efrain's chair. \"You 'n me need to have some words.\" \n\n\"Oh, really?\" \n\n\"Explain this.\" He waved his cell phone in Efrain's face. \n\n\"Explain what?\" \n\n\"What the fuck is this?\" Baker gesticulated wildly at the device in his hand. \n\n\"It is a cell phone,\" Efrain deadpanned. \n\n\"No, the picture,\" he said. \n\n\"What's wrong with the picture?\" \n\n\"What's wrong?\" he sputtered. \"Why the fuck does Card get breakfast?\" \n\nAnd I suddenly remembered the pic Preston had taken of Efrain and me the Sunday after Turkey Week. I had forgotten that he'd immediately posted \"Kitten! CHOMP!\" on his Instagram feed. Preston's and my shared social circles had gone nuts over it. \n\n\"He was there,\" Efrain shrugged, \"so he got waffles.\" \n\n\"Dude,\" he said, \"we've known each other for two years\u2014\" \n\n\"Seasons.\" \n\n\"Seasons, whatever,\" Baker said. \"But Card fucking comes along and suddenly you're calling each other by your first names and making pancakes 'n shit.\" \n\n\"I believe those are waffles,\" Efrain said. \n\n\"Pumpkin waffles,\" I added rather unhelpfully. At least I kept my mouth shut about the pancakes and quiche from all the other times. \n\n\"Your sweatshirt is what it is,\" Baker declared as if I hadn't spoken. \n\n\"My sweatshirt?\" \n\n\"Oh yeah, I got cold,\" I said offhandedly, \"so I borrowed your OVO hoodie.\" Efrain shrugged. While I had fifteen pounds on him, his looser clothing fit me, and we wore the same shoe size, so we sometimes wore each other's stuff. \n\nOften after ripping clothes off in our haste to get naked, and then having to hurriedly get dressed to get to class or practice on time. \n\nI resisted the urge to point out to Baker that Efrain was currently wearing one of my hoodies. Instead, I allowed myself to be distracted by how arousing he looked with the hood pulled up over his ball cap and those joggers accentuating his thighs. \n\n\"You never let me borrow your sweatshirt,\" Baker whined. \"But now the kid's on your couch calling you Rain or Efrain or whatever and stuffing his face with your pancakes.\" \n\n\"Waffles,\" Rice corrected. I think Efrain was trying just as hard as I was to not point out that Baker was butchering the fuck out of his name. The others looked like they were trying to hold in their laughter, if only to see how far Baker's rant would go. \n\n\"I mean, look at this!\" Baker zoomed in on the image and shoved the phone back at Efrain. \"Literally stuffing his face. Literally. Fuck, Card, just how much can you fucking fit in your mouth?\" \n\nTeague and Martinez snorted and I looked over at Efrain, who just rolled his eyes as Baker picked up steam. \n\n\"Christ, are you unhinging your jaw or something?\" Baker said. \"Do you even swallow?\" \n\nEfrain pulled the bill of his cap further down, shielding his eyes, but I could still see him smirking. If I knew my boyfriend, he was probably thinking about the answers to those questions \u2013 the whole damn thing, probably, and fuck yeah! \u2013 along with a plan to stuff my mouth full of something other than his waffles and make me swallow. \n\nOr maybe that was just me. \n\n\"I get that y'all have that fucking bromance shit going on, but why do you get fucking pumpkin fucking waffles?\" Baker ranted. \n\n\"I put out.\" \n\nIf there ever was a time for a record scratch... \n\nAn awkward silence fell over our study group. I did my best not to cringe at my accidental admission. Baker was supposed to be the one with a mouth that ran faster than his brain could keep up. \n\nTeague, bless his fucking heart, had been trying to hold it in, but it took little time for him to fall into laughing, dragging Martinez with him. Those two were like the fucking corner stones, and as soon as they fell, the rest of the crew collapsed. Efrain's jaw tightened. \n\nLo siento mucho vato, I texted him. It was a shitty apology, but was the best I could do given the circumstances. \n\nEfrain took a deep breath and sent a text back. \n\nIt's okay acho we'll get thru it \n\nLuckily, the guys were distracted enough to miss the look passed between us. My eyes stung with relief that Efrain didn't hate me for what I'd said. \n\nIf I thought, however, that the laughing meant that they'd all written off my dumbass blunder as a joke, one look at the teammate sitting directly across from me in our little circle of chairs was all that was needed to blow that theory all to hell. \n\nWhitlock had never laughed. Had never been in danger of doing so. He leaned forward, his elbows resting on his knees, and studied Efrain and me. If I looked half as stricken as my boyfriend did, we were so fucked. Whitlock shot another measured look between us before the corner of his mouth ticked up. He caught Teague's eye and pointed at us. It was Martinez, however, who nodded in affirmation at his unspoken question. Whitlock snorted and muttered, \"Figures.\" \n\nI got another text, this time a group text from Teague. Efrain was the other recipient. \n\nMartinez and Whitlock know \n\nOh shit. \n\nWait. How did Martinez know? I glanced at Efrain, who wore a similarly confused look. \n\n\"Ya hear that, Baker?\" Rice joked, oblivious to the shit going down on the other side of our group. \"All you gotta do is blow Garza. I'm sure you'll do fine with your mouth as big as it is.\" \n\n\"Fuck you, Rice.\" \n\n\"I ain't the one with the waffles.\" \n\nGuys you might as well tell them. They'll figure it out eventually. \n\nLithgow and Rice laughed at Baker's discomfort. \n\n\"Besides,\" Lithgow said, \"I don't think Card will be happy about you edging in on his boyfriend.\" \n\n\"Doubt it,\" Teague murmured quietly between Martinez and Whitlock, \"Garza's the jealous one.\" Efrain pinched the bridge of his nose and Whitlock winced. Martinez bit his lip as if stifling another wave of laughter. \n\n\"Those two might as well be dating with all the time they spend together,\" Rice said. \"Practically live together.\" \n\n\"Dude, they do live together,\" Lithgow corrected. \"Card moved in all his stuff last week.\" \n\n\"I can just imagine it,\" Rice added. \"A fucking love nest full of Converse trainers and Drake's hand-me-downs.\" \n\nTeague shot us another text. Trust me the guys might freak out at first but they'll come around. \n\nI thought back to the other night, when Efrain had complained about The Turkey Week Incident. \"For once,\" he had said, \"I'd like to come out to someone before people fucking figure it out.\" \n\nPreston had suggested coming out to the Brain Trust as a next step. \"They'd be cool, I think,\" Preston had told us. I didn't know if Efrain was as apprehensive about that I think as I was. \"Besides, if they can't handle the real you, or that you and Cory are a couple, then you're better off without them.\" \n\nThey're going to figure it out acho we might as well head them off \n\nI nodded. He took a deep breath and arched his eyebrow at me. Efrain didn't look that confident, but he still seemed resolved enough to do this. \n\nHere goes nothing... \n\n\"He is my boyfriend,\" Efrain said. \n\nBy that time, Rice and Lithgow had also pulled up \"Kitten! CHOMP!\" on their phones and were going through the comments. It was obvious that Lithgow and Rice hadn't even heard Efrain's admission. \n\n\"See? Even Card's GSA buddies think they're together,\" Lithgow said. \n\n\"Kitten and Wolfie are sooooooooooo sweet together,\" Rice read. \"Oh look, they're even trying to come up with ship names \u2013 Efry, Efory, Corain, Corin, Efy. Lame.\" \n\n\"Yeah,\" Baker said. \"Their first names are shit for shipping.\" \n\n\"Last names?\" Rice offered. Baker shrugged, and the three of them appeared to be thinking on it. \n\nI tried again. \"Guys, we really are dating.\" \n\n\"Dude,\" Lithgow said. \"Cardza.\" \n\n\"Garzard?\" Rice said. \"Garzy?\" \n\n\"Garzy is the least offensive,\" Baker said. \n\n\"Garzy it is,\" Rice said. \n\nLithgow turned to Efrain and me. \"We're calling y'all Garzy from now on.\" \n\nEfrain rolled his eyes. \"Fuck this,\" he said. He flipped through his phone before shoving it so far into Baker's face that he practically went cross-eyed to see it. \n\n\"What are you...?\" I started. \n\n\"Your birthday,\" he said. \n\nI blanched. \"I thought you deleted those.\" \n\nEfrain gave me a lopsided wolf grin. \"Not before I stored the non-PG ones on my computer.\" My face suddenly got hot. I had a sinking feeling that he'd kept the videos we shot with the camera on his laptop, too. Actually witnessing what I looked and sounded like when he fucked me had been embarrassing, even though Efrain told me it was the hottest thing he'd ever watched. \n\nLithgow grabbed Efrain's wrist and yanked his phone over so he and Rice could check it out. \n\n\"So, you're kissing his neck. Half of us have done worse on a dare. Besides, your shirts are still on,\" Rice said dismissively. Whitlock face-palmed. Martinez and Teague looked like they were five seconds from laughing again. \"Your bromance with Card isn't any weirder than Baker's man-crush on you.\" \n\n\"Fuck you,\" Baker retorted. \n\nGod bless ya, Rice. \n\nEfrain scrubbed his hand over his face and muttered, \"I'm going to fucking regret this.\" He turned back to them. \"Alright, remember that big fucking bite mark Cory had?\" They nodded. \n\n\"Yeah, from that crazy freak chick he was fucking?\" Baker said. \n\nEfrain narrowed his eyes at the \"crazy freak\" part, but Lithgow interrupted him before he could argue. \n\n\"I wonder if it was the same one that gave him all those hickeys,\" Lithgow added. \n\n\"Hell, it was like he'd picked up a Dyson vacuum,\" Rice said. \n\n\"Never loses suction,\" Lithgow quoted in his deep announcer voice. \n\n\"Fucking dumbasses.\" Teague rolled his eyes. \"Just fucking listen to him.\" \n\n\"It's why my friends call 'Rain 'Wolfie',\" I said. \"He likes to leave marks.\" \n\nThe way Rice, Baker, and Lithgow looked at me reminded me of how Bluebell, this seriously mentally challenged old dog my brother Connor used to have, would look at us when we tried to teach her to do tricks. \n\n\"In bed,\" I clarified. \n\nBaker's head cocked to the side, so like Bluebell. I kinda missed that dog. \n\n\"During sex,\" I added for good measure. \n\nLithgow narrowed his eyes at me. \"Y'all are taking this joke a little too far.\" \n\nTeague's eyes bulged. \n\n\"By this point, you're just being insensitive to the gay community,\" Rice said. \"I'm sure your cheerleader friend and Garza's roommate would be appalled.\" \n\nWhitlock, Teague, Martinez, Efrain, and I threw up our hands in disgust and defeat. \n\n\"Come on,\" I said. \n\n\"Oh my God,\" Martinez sighed. \n\n\"Seriously,\" Whitlock said. \"What the fuck?\" \n\n\"For the record,\" Efrain said, \"I'm neither a crazy freak, nor a fucking vacuum.\" \n\n\"Sure you aren't,\" Martinez recovered enough to quip. \n\n\"Alright, let's try this again.\" Teague leaned forward and got their attention. \"They aren't joking.\" \n\n\"So,\" Rice said, \"what you're trying to say is that Garza is...\" \n\n\"Gay,\" Efrain supplied. \n\n\"Since when have you been gay?\" Baker asked. \n\n\"My whole life.\" \n\nLithgow stepped in. \"And Card is...\" \n\n\"Bi,\" I answered. \n\n\"And, they've been hooking up since September,\" Teague said, as if trying to hurry it all along. \"And have been a couple since October.\" \n\n\"But, how can you be gay?\" Baker asked. \"You don't, like, check out anyone's junk in the locker room.\" \n\n\"He brought me to meet his parents two weeks ago,\" I added. \"And I moved in with him last week.\" \n\n\"And, they're totally in love with each other,\" Teague said. \"Even though they're being fucking pussies about admitting it.\" \n\n\"You've never checked me out in the locker room,\" Baker continued, despite the fact that we'd all tuned him out. \n\n\"Dude!\" Efrain pointed his finger at Teague. \"Not cool!\" \n\n\"Two words and some syllables,\" I reminded Teague and his eyes narrowed. \"Tend your own garden, bruh.\" \n\n\"...what, am I not good enough for you to check out?\" \n\n\"But, you don't act like you're together,\" Lithgow said. It finally seemed like we'd gotten through to them. \"Hell, you don't even act gay.\" \n\n\"Stereotypes, man,\" I said. \n\n\"And you don't room together for away games,\" Rice said. \n\n\"That's more for our benefit,\" Teague said. \"Their roommate says it's like industrial-strength Velcro when they think no one's looking.\" \n\n\"...are you saying I'm unattractive or something?\" \n\n\"Fuck, they're like that even when people are looking,\" Martinez said. \n\n\"What are you talking about?\" Efrain said. \n\n\"...am I unattractive?\" \n\n\"Oh yeah, completely forgot to tell you guys about my girl dragging me to Market last week,\" he said and I froze. \n\n\"What does that have to do with anything?\" Whitlock said. \n\n\"...I mean, I think I'm hot...\" \n\n\"I don't know,\" Rice said, \"but judging by how red Card is turning, it has to be good.\" \n\nThank fucking God Preston isn't here. \n\n\"So, I'm at Market with Abby for this drag show, trying to keep my head down, ya know, when she starts dragging me over going 'don't you know those guys?'\" Martinez said then pointed his thumb at me. \"And sure enough, Magic Mike over there was on the dance floor Channing all over Garza's Tatum.\" \n\nTeague fell off his chair. \n\n\"I was not!\" \n\n\"...Plenty of gay dudes think I'm hot...\" \n\n\"So were,\" he shot back and laughed. \"They were making bets on whether or not you'd keep taking your clothes off.\" \n\n\"...I think...\" \n\n\"Hey, I only lifted my shirt that one time!\" \n\n\"And the other times?\" he asked. \n\n\"...but, is that good enough for you?\" \n\n\"It was hot,\" I protested. \n\n\"It was pretty hot,\" Efrain chuckled. I narrowed my eyes at him; that pun was intended. \n\n\"I have no idea why you're giggling,\" Martinez told him. \"You were the one shoving your hand down his pants.\" \n\n\"Wait, what?\" Rice sputtered. \n\n\"...and then Cory comes along...\" \n\nTeague by this point was laughing so hard that he was in tears. \n\n\"What the fuck was I supposed to do?\" Efrain protested. \"They kept sticking money in his underwear.\" Whitlock gave him a funny look. \"Those candy-assed little fuckboys should be glad I wasn't fucking breaking their goddamn fingers.\" \n\n\"Vato,\" I said. \"Chill.\" \n\n\"Nope, I totally see it now,\" Lithgow said. \n\n\"...and it's fucking first names and pancakes...\" \n\n\"At least Elle convinced them that it was in their best interests to stop,\" I said. \n\n\"You thirsty-ass bitches need to quit tryin' to make it rain on White Bread,\" Martinez said in a rather decent impression of Elle Porcine. \"Y'all know Lothario's gonna lose his shit and kill one of you fuckers.\" ",
        "\"...correction, waffles...\" \n\n\"So,\" Whitlock pointed back to Teague, \"how the hell did you know about Garzy?\" \n\n\"...and sharing fucking hoodies...\" \n\nLithgow thought for a moment. \"You've known the whole time. That's why you kept trying to get Carey away from Garza.\" Teague nodded \n\n\"Carey's a massive twat to begin with,\" Whitlock said. \"Living with him must have been hell.\" \n\n\"Kinda wondered why you took Garza under your wing,\" Lithgow said. \n\n\"It also doesn't hurt that we get more ladies when they're around,\" Teague added. \n\n\"...never let me borrow your OVO hoodie...\" \n\n\"You've been using me as a chick magnet?\" Efrain asked, his voice flat. \"Somehow that's worse than designated driver.\" \n\n\"Yep, you lure them in, and when they give up on getting your attention, I sweep 'em up.\" \n\n\"...I mean, it is kinda lame...\" \n\n\"And then they come back complaining to me when you won't stop being a gentleman,\" I added. \n\n\"Is that how we acquired Card?\" Lithgow asked. \n\n\"Wait a minute,\" Whitlock interrupted. \"I think that was Garza. Remember when we were talking about bringing in another freshie, but none of us could remember their names?\" \n\n\"That's right,\" Lithgow said. \"Garza said Card was the only name he could remember.\" \n\n\"And the rest is history,\" Teague said. \n\n\"Although, you could have told us,\" Rice said. \"I can't speak for the rest, but I would have been cool with it.\" The rest (minus Baker) agreed. \n\n\"I'm still trying to wrap my head around this,\" Whitlock said, waving his hand between us, \"relationship thing, but that's my problem.\" \n\n\"...that fuckin' gold owl thingy...\" \n\n\"Guess Baker the Butthurt here might need some time to get over it,\" Lithgow said. \n\n\"God, Baker,\" Efrain groaned. \"Would you fucking knock it off?\" \n\nBut, Baker was in his own little Baker world. \n\n\"...but, like, what if I was fucking cold or something...\" \n\n\"Baker,\" Whitlock called. \n\n\"Yo, Baker.\" Rice snapped his fingers at him. \n\nI gave a short dog whistle \u2013 sometimes, that was the only way we could get Bluebell's attention. \n\n\"...you'd let me freeze, wouldn't you...\" \n\n\"Earth to Baker,\" Martinez tried. \n\n\"Baker,\" I said. He barely noticed the paper ball Rice threw at him as it sailed over his shoulder. \n\n\"...but, Cory will be all nice and fucking toasty...\" \n\n\"He's going to make us do this, isn't he,\" Teague said. \n\n\"Baker,\" Lithgow ventured before pinching the bridge of his nose. \"Paul.\" \n\n\"...and don't think I can't recognize Cory's hoodie...\" \n\n\"This is ridiculous,\" Efrain said. \"Fucking hell, Baker...Paul...whatever name you're going to fucking answer to.\" \n\n\"...never asked for mine...\" \n\n\"Paul,\" Whitlock said. \"Swear to fucking God...\" \n\nThis was going to take a concerted effort. \n\n\"...give you the hoodie right off my back...\" \n\nTeague counted down on his fingers while the rest of us cupped our hands around our mouths. \n\n\"...man, you really know how to show a guy that you care...\" \n\n\"PAUL!\" \n\nBaker started as if he'd just realized that he had been in a study group, in a very public place. He took in the seven other members of the Brain Trust and gave the Baker-est of Baker responses. \n\n\"What? What did I do?\" \n\n~*~*~*~ \n\nEfrain and I sat in his little blue Civic while it warmed up. \n\n\"That was...\" \n\nI nodded. \"That was.\" \n\n\"I'm out,\" he said. \"I never planned on that.\" \n\n\"Regret it?\" I asked. \n\nHe shook his head. \"Fewer people I have to hide from. Or to hide you from.\" \n\n\"Indeed.\" \n\n\"Takes it out of you, though,\" Efrain turned to me with a grin. \"I don't think I'm fit to drive until I recharge.\" He crooked his finger, motioning for me to come closer, and his mouth slanted over mine, our kiss quickly trending toward too indecent for somewhere so public, before he pulled back. \"Battery charged.\" \n\n\"That's not the only thing charged.\" \n\n\"Hm.\" He looked down at my lap. \"Suppose we could discuss what I'm planning to do about your little slip-up.\" \n\n\"My slip-up,\" I said. \"I thought...\" \n\n\"No, I'm not mad or anything,\" he laughed. \"But, I'm not one to pass up a good excuse.\" \n\n\"Is that so?\" I quirked my brow. \n\nHis hand slid up my thigh, fingers ghosting over my hard-on as he leaned in to brush his lips against my earlobe. \"You have exactly three minutes, when we get home, to strip down and get your ass on our bed.\" He paused. \"All fours, I think.\" \n\n\"What do you plan on doing to my ass?\" I giggled. My giggles cut off in a low moan when he grabbed my cock and gave a firm squeeze. \n\n\"Destroy it.\" \n\n~*~*~*~"
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "football",
        "interacial couple",
        "comedy",
        "nerd jock"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/efrain-and-cory-ch-27"
}