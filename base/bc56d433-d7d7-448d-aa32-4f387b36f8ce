{
    "title": "A Ring Named Ezzie Pt. 09",
    "pages": [
        "This chapter is a little bit of a BDSM slant with Dom/Sub and spanking. Nothing brutal or extreme, just Ben & Karen experimenting if you will. I want to thank everyone for the kind words with this story. I truly appreciate it, I hope you keep them coming.\n\nPS. This one goes a tad long.\n\nSaying goodbye to Karen was the worst. She cried, that made me want to cry, but I didn't. I didn't want her to see me so upset too. We vowed at least once a month one of us would drive to the other for a weekend.\n\nAs I am driving away I know that it will always be me going to her. All my classes are easy this semester, and if I do miss anything Ezzie can always help me smooth it over. I can easily blow off a Friday or come home late Monday.\n\nI am up at school only two weeks and I am bummed. I am missing Karen, and horny as all hell. We talk all the time, and have done FaceTime sex calls. It's just not the same.\n\nI am in a big house with four other guys and they have a party going on. The music is loud, and everyone is drinking. I have a few, but all the guys are breaking off with girls and my girl is 3 hours away. I just get up and go to my room, about 15 minutes later Karen FaceTimes me. She can see I am down.\n\nShe can hear the music, and asks why I am in my room. I tell her. \"All my roommates have girls and they are all in the living room probably getting blowjobs by now.\"\n\nShe laughs. \"No way.\"\n\nNow I have to be right. I am just in a shitty mood. \"Oh yeah. Wanna bet?\" I ask.\n\nShe smiles. \"What's the bet?\"\n\n\"Loser comes to the winner after Friday's classes for a long No Saying No Weekend. Loser can't leave until Monday morning.\" I say.\n\n\"That's a big bet.\" Karen says.\n\n\"I am missing you, horny and bummed. I just had three different things to do to you when I win, run through my head.\" I say.\n\nShe laughs. \"When you win?\"\n\n\"Hey Ezzie, please have every girl downstairs want nothing more than to go topless and blow her guy until he cums in her mouth.\" I think in my head.\n\nKaren stares at me for a moment. \"I don't believe you. I think you are pouting because you are horny.\"\n\n\"They are all removing their tops now.\" Ezzie says.\n\nI cut her off. \"Hey don't forget you have Beth to cuddle up to when you need to. I have nothing but my hand and FaceTime with you.\"\n\nHer face softens a little. \"I know Ben. I am sorry, but I still don't believe everyone is having sex. You are on, with one condition.\"\n\n\"And that is?\" I ask.\n\n\"The loser is the winner of a No Saying No Weekend next time.\" She says smiling.\n\nI don't even blink. \"Done.\" I say.\n\n\"Ok.\" She says. \"Walk me downstairs let's see.\"\n\nI walk downstairs and into the living room. I turn the corner with Karen getting a good look of four half naked women blowing my four roommates. I turn the phone to me and Karen has a bit of a shocked look. The music is too loud to talk on the phone. I walk up and get her a good close up of each woman sucking on each dick. Two of them look up, and when they see the camera on them they wave Hi.\n\nI walk back out to the stairs and I can hear Karen. \"Holy shit. I really didn't think all four would be going at it. I figured one maybe two.\" She says as I walk upstairs. I get back to my room and flop on my bed. \"Ben, I know this is hard on you.\" She starts.\n\n\"You know last year I went all year with nothing but a drunken blowjob at a party.\" I say.\n\n\"BENJAMIN!\" Karen says in shock.\n\n\"What it was literally almost a year ago, and it was nowhere near as nice as yours. We were both drunk and horny.\" I say.\n\n\"Just a blowjob? Not more?\" She asks.\n\n\"She pulled me into a bedroom and had just finished me off. I was hoping for more when two friends of hers opened the door and started razzing her about not taking me to her own room. She got up and basically ran out. I zipped up and left as the two girls just glared at me.\" I say.\n\nKaren is laughing. \"Oh poor Little Ben.\"\n\n\"HEY!\" I say. Now she is just laughing harder.\n\nWe stop laughing and I just look at her face on the screen. \"It was easier last year I guess because I didn't have you. I wasn't missing you....you know like this.\" I say.\n\nI see her fingers reach for the screen. \"Oh Ben, I am sorry. I miss you terribly too, but you are right. I have Beth to hold when I am down.\" She smiles. \"So I guess I am coming to you Friday to be your sex slave.\" Karen says.\n\n\"Oh to be my slave. Hhmmm. I think I could work with that.\" I smile as a few different thoughts run through my mind.\n\n\"Oh Jesus.\" Karen laughs. \"I don't think I like the look on your face.\"\n\n\"One of the guys showed me a bondage video. I think you would really like it.\" I say.\n\n\"Oh my god Ben, seriously? Don't you already like tying me up?\" She asks.\n\n\"That's just 100 level course stuff. The advanced courses look like fun.\" I say with a smile. \"Of course I would need to buy a few things, and there isn't time for Friday.\"\n\n\"See, that's not fair to me.\" She says.\n\n\"How so?\" I ask.\n\n\"I worked this summer to have pocket money and help pay for school. Any big purchases go on a credit card my Dad sees. I don't want him asking me what I bought at sexshop.com.\" She says.\n\n\"Wow, Karen I am sorry. I never thought of that.\" I pick up my iPad and send her $1000. I barely have put it down and I hear it ding on her side.\n\n\"BENJAMIN!\" She yells at me.\n\n\"What?\" I say.\n\n\"You can't give me $1000!\"\n\n\"Yes I can. In fact I just did.\"\n\n\"Ben...\". She starts to say.\n\n\"STOP! You know I am getting you a ring. I am taking care of my girlfriend, fianc\u00e9 or whichever label you want to use. I would hope you don't blow it, but use it whenever and for whatever you need.\" I say.\n\n\"I Love You.\" She says.\n\nShortly after that. We blow each other a kiss, and hang up.\n\nTwo days later Karen arrives and is knocking on the door. I open the door and pull her inside with a Yelp. I slam the door closed, hold her to the wall and kiss her hard. She just moans in the kiss. I slide my hand up under her shirt and push her bra up. I start pinching and twisting her nipples.\n\nShe moans as I nuzzle her neck. \"Ben, let's go to your room.\"\n\n\"I am not waiting another second.\" I say as I push my hand into her shorts. She isn't wet, but isn't dry. I just rub her clit.\n\n\"Please Ben. Your roommates.\" She moans.\n\n\"They aren't here, and even if they were, You Can't Say No!\" I say as I slip a finger in her pussy. \"If I want to parade you around this house naked, you would have to do it.\"\n\n\"Oh Ben!\" She gasps.\n\n\"You said it Karen. You will be my Sex Slave for the weekend. Say it again.\" I say as I pull her over to the couch and bend her over the back of it. I pull her shorts down and then mine. I rub my dick along her pussy. \"Say it.\" I say more firmly.\n\n\"I am your Sex Slave for the weeeee....\" She stutters as I push into her. \"...weekend.\"\n\nI just stand behind her fucking her. This is a fucking. I am extremely horny. I have missed her. I am giving her a nice firm fucking. Her body is flopped over the couch. She has pulled a pillow under her head. She is constantly moaning.\n\nShe wiggles her hips back. \"Oh right there. Please Ben, I am so close.\"\n\nI slobber spit on my thumb and slowly push it into her ass. She just groans and a moment later gasps out. \"Oh Fuck!\" Her body, pussy and ass all clench up, and a few seconds later relaxes and flops onto the couch. I am close but still fucking her.\n\nI am there. I pull her off the back of the couch and push her onto her ass on the floor against the couch. She knows what's coming. She opens her mouth and tilts her head back. I barely make it into her mouth and I start cumming. Karen just makes satisfied moaning sounds as I cum. She never takes her mouth off me. She swallows my cum and then starts sucking and licking me clean. She pulls her mouth off me with a pop.\n\nI am regaining my composure as I lean on the couch with both arms. I look between them and Karen is smiling up at me. \"Hi.\" She says.\n\nI smile. \"Hi. Welcome to my humble abode.\"\n\nShe runs her fingers along my balls and smiles at me. \"You shaved.\"\n\n\"I did. Just for you.\" She leans forward and sucks one of my balls into her mouth. \"Oh fuck.\" I moan. She gives my ball a quick suck and lick, and pulls back letting my ball pop out of her mouth.\n\n\"We are definitely doing more of that.\" She says with a smile as she reaches a hand up to me. I step back and help her up.\n\nShe bends down and pulls up her shorts after brushing off her bum. She sees me watching her. \"Your floor is dirty.\" She giggles.\n\nI pull up my shorts, and open the door to get her bag out of the car. I come back and she is standing just beyond the door. Her feet and hands together, her head down. \"What can I do for you Master?\"\n\nI can hear the smile in her voice. I drop her bags and with just a finger I tilt her chin up, and passionately kiss her. She sighs as I kiss her. I break the kiss and pull back from her, with a big smile. \"For now, I want my loving fianc\u00e9 to hug me. When I need my slave, she will know it.\"\n\nShe giggles and wraps her arms around my chest and buries her head against me. I just stand there holding her. I finally reach down and pat her bum. She steps back from the hug, and looks around.\n\n\"Ugh this is definitely a house a bunch of guys live in.\" I laugh and point to the stairs. We head upstairs and she looks around my room. \"You are Never in charge of decorating.\" She laughs. She looks at the twin bed. \"That is a problem.\"\n\nI have the bed against the wall to have an open floor. \"No it's not.\" I point to a shoebox sized box on my desk.\n\n\"An inflatable queen mattress. It will be like we are camping.\" She laughs.\n\n\"At least we won't fall off the bed in our sleep.\" I sit down on the bed and hold my arms out for her. She cuddles against me. \"God I have missed you.\"\n\nShe laughs. \"Yes, when you attacked me coming in the door I kind of got that.\"\n\nKaren sits up and climbs onto my lap facing me. \"Ben, all you have to do is ask, or like today pull me in the room and throw me over a couch, and I am yours.\"\n\nShe kisses me and then holds my head to her chest. Kissing my head, and softly rocking me. I pull back and look at her. \"I think I thought of something to do tonight that I don't think you have done, and I have only done once before.\"\n\nKaren looks at me. \"Why do I think I should be nervous? What have I never done, that you have done once?\"\n\n\"I am taking you to dinner and then a strip joint.\" I say.\n\nShe covers her mouth with her hand. \"No?\"\n\nI smile. \"Oh yes. I am going to get you a lap dance too.\"\n\nShe giggles.\n\n\"Then I am bring you back and fucking you until I have no more cum left to give you.\" I say.\n\nShe tries to give me a shy smile. \"What if I have problems with an all night marathon of sex?\"\n\nI open a draw and pull out a brand new large bottle of lube and smile. She just giggles. \"Yes Master.\"\n\n\"That's my good Slave.\" I pull her to me and make out with her. We sit there for a few minutes just kissing each other. Hearing a roommate in the hall kind of breaks us out of it.\n\nKaren is laying back on the bed, and I am over her. She reaches up and runs her fingers through my hair. \"So how does a girl dress for a strip joint?\"\n\n\"Sexy and skimpy!\" I say.\n\nShe smiles. \"I have just the outfit.\"\n\n\"You do?\" I say feigning surprise.\n\n\"I borrowed a dress from Beth. It's a surprise.\" Karen smiles at me.\n\n\"Ezzie, show me the dress she is thinking of please.\" I see an image of Karen looking at herself in a mirror on a door. She is in a blue dress with no back, a plunging neckline and it ties around the back of her neck. God she looks good. \"I am sure I will like it.\" I say.\n\nWe go for a walk around campus. It's nothing special to see, it's just another campus. We walk back into the house and three of my roommates are in the living room playing X-Box. Joe turns and sees me with a girl. \"Oh this must be Karen.\" He says. Matt turns and lears, and Jim makes a totally inappropriate remark. It pisses me off.\n\n\"Ezzie, make them all apologize to Karen, and treat her with nothing but respect, Forever!\"\n\n\"Of course, Ben.\" Says Ezzie\n\nThey instantly apologize and behave like gentlemen to her, but I still get roommate crap. They mention the poker game they run with some guys on Saturday nights. Tomorrow it's here. Maybe I should play and bring Karen for luck. I am about to say no when Ezzie speaks up. \"Gosh poker, George (the previous ring bearer) used to love to bring me to poker games. He would win every time.\"\n\n\"Wait a minute. You know poker?\" I ask.\n\n\"Oh yes! I know all the rules, and the winning hands.\"\n\nI interrupt her laughing in my head. \"And you can read the other player's thoughts so I will know what hands they have, and you could even make someone fold if I wanted them to.\"\n\n\"Of course Ben. That is exactly how George won all the time.\" Says Ezzie.\n\nI turn to Karen. \"Will you sit in my lap as my good luck charm?\"\n\nShe gives me a wicked smile. \"You know it's my favorite place to sit.\"\n\nThe guys smile at her remark, but don't comment. \"I am in.\" I say.\n\nWe go upstairs to change and head out for the night. We go to dinner, and Karen is nervous and excited about the strip club. She has an extra drink or two during dinner.\n\nWe arrive at the strip club and there are people there, but it isn't crazy busy. A sexy woman walking in dressed in a sexy dress gets a lot of attention.\n\nWe sit at a table and a waitress comes by. I order a beer and a wine. I look at Karen and she is just looking around wide eyed. \"So what do you think of your first strip club?\" I ask.\n\nKaren doesn't answer for a moment. \"Ezzie, is Karen ok?\"\n\n\"Yes Ben, she is just a bit overwhelmed by it all. In a good way.\" Ezzie says.\n\nI just squeeze Karen's hand. \"Honey?\"\n\nShe looks at me and smiles. \"Oh wow.\"\n\n\"Ezzie, is there anyone she finds pretty or sexy?\" I ask.\n\n\"Karen hasn't really focused on one person. I will let you know if she does.\" Says Ezzie.\n\nAs the drinks come over a girl in a doctor's smock comes to us. \"Would you like a back rub?\"\n\nI point to Karen. \"My girlfriend would. It's her first strip joint. She needs to relax.\" I say. Karen's eyes go wide and she stares at me.\n\n\"Oh by all means let me help you relax.\" Says the Doctor. She stands behind Karen and opens her smock, she has a small bra and thong on. She holds Karen's shoulders and says. \"Honey, you need to relax. I won't bite..... unless I am asked to.\" She says with a giggle as she pulls Karen against her barely covered chest. Karen's eyes go a little wider as she realizes her head is laying against this girl's very healthy chest. It's very sexy to watch, a scantily clad girl is about to give Karen a neck and back rub. The doctor has a very pretty girl next door look with brown eyes, and black wavy hair past her shoulders. The Doctor has pulled Karen's head back against the middle of her chest. She has to be a D cup. I am imagining the Doctor pushing her tits together around Karen's head. The girl starts rubbing Karen's shoulders and the look on Karen's face is priceless. This girl is doing a good job. The Doctor doesn't ask, she just tells Karen. \"This strap is in the way.\" And she pulls on the knot, and she reaches down and puts each strap in Karen's hand. Karen is sitting there with her eyes closed enjoying the massage holding both straps against her chest to keep the dress from dropping and exposing her boobs. The Doctor reaches her fingers down a little too far and slips her fingertips down off her shoulders, and just under the dress and back out. Karen's eyes open back up and she sighs. \"I just wanted to make sure you were really enjoying my massage, Honey.\"\n\n\"My name is Karen, and yes I definitely am enjoying it.\" Says Karen.\n\n\"My name is Candy.\" She says as she finishes up her massage. As gently as she untied the straps, she takes them and re-ties them behind Karen's neck. She leans down into Karen's neck and she looks at me as she kisses and licks Karen's ear and neck. \"I will be on the main stage in two songs. I want you both front and center.\" Karen just moans. Candy closes her smock and walks away.\n\n\"God, that was so nice.\" Karen tosses back her wine like it's grape juice. \"Where is the main stage?\" I finish my beer, take her by the hand and we walk over to the main stage. As we get settled the previous girl is getting off stage and they announce Candy is coming out.\n\nShe dances out, and when she sees Karen she smiles. As she dances, she loses her top, and then her shorts. She comes and stops in front of Karen. The only woman at the table. She lays flat on the stage with her head near us and bends/curves her back up and pushes up with her arms. She looks Karen in the eye. \"Karen, take off my bra.\"\n\nKaren stares for a moment. \"It's ok Karen. I am asking you to. Take off my bra.\" Says Candy. Karen leans a bit forward and unclips it. The moment it's unclipped you can see Candy's tits shift, as it comes loose.\n\nKaren stands up and reaches her arms around her to try and remove Candy's bra. Candy rolls over onto her hands and knees, and lets her bra drop to the stage. Karen is staring at Candy's D cup boobs hanging down. Each hard nipple poking out like a pencil eraser. With practiced ease Candy slips her body up and onto her feet, her knees bent, and her legs spread. Both mine and Karen's eyes look at the thin thong that barely covers her pussy. The material is so thin there is no doubt we are looking at Candy's pussy lips.\n\nCandy takes her bra and puts it over Karen's head and ties it under her chin. Candy stays squatting in front of Karen rubbing her exposed tits, and inner thighs. \"Karen, this is when people traditionally tip the dancer.\"\n\nKaren smacks my arm and puts out her hand. The first bill I grab is a $20. Karen takes it from me and holds it out. Candy just smiles and holds her thong out a bit. \"Put it in my thong Karen.\"\n\nShe dances over to other guys sitting at the stage, and I look at Karen. Candy's bra on her head, and her cheeks are a little red. \"Was that fun?\" I ask.\n\n\"Oh my god, it certainly was.\" Says Karen.\n\n\"Ezzie, was Candy just doing what a stripper does, or does she think Karen is cute?\" I ask.\n\n\"She thinks both of you are cute.\" Says Ezzie. \"But yes it is how she gets good tips.\"\n\nCandy makes the rounds collecting tips, and she comes back to Karen. Candy sits on the stage with her feet on the table below and holds Karen's head between her thighs. \"See anything you like?\" Candy asks as she pulls her bra off Karen's head.\n\n\"I know I do.\" I say as Karen just looks up at Candy and smiles.\n\n\"Maybe you two would like me to do a private dance in the Champagne Room in a few minutes? Would you like that Karen? Just the three of us alone in a dimly lit room?\" Candy asks.\n\nKaren stares at Candy with a little bit of lust in her eyes. \"Sounds like fun.\"\n\n\"Ezzie, does Candy usually play around or have sex with customers?\" I ask.\n\n\"No Ben, she never has.\"\n\n\"Does she have a boyfriend?\"\n\n\"No.\"\n\n\"Good. Let's get Candy a little worked up. Have her imagine having sex with us.\"\n\n\"Ben, Candy has never had a threesome.\"\n\n\"Have her use her imagination and think of all different ways the three of us could have sex.\" I tell Ezzie.\n\n\"Ok it's done, Ben.\"\n\nKaren and I get up and head to a table along the wall. Just a few minutes later Candy comes walking towards us with a short silk robe on. She stops in front of Karen with her robe almost open up top showing lots of cleavage, and her legs spread. \"Are you two still interested in that private Champagne Room dance?\" Candy asks.\n\n\"Ezzie, does Karen want the dance?\"\n\n\"She is afraid to say yes. She is afraid of what you will think.\" Says Ezzie.\n\nI will think she is horny and thinks Candy is cute like I do. \"Ezzie, have Karen say yes to the dance please.\"\n\n\"Done Ben.\" Says Ezzie.\n\nKaren looks at me. I just smile. \"It's all up to you.\"",
        "Karen looks at Candy. \"Yes, I think both of us would like that.\"\n\nCandy takes Karen's hand and I take Karen's as she leads us off to a private room. We walk past a large bouncer into a little bit of a cheesy room. She pulls a large heavy curtain closed and motions us to sit. \"One firm rule. No touching any covered body part, are we clear?\"\n\nKaren and I nod our heads. She starts by removing her robe, leaving her in a half shirt that is little bigger than a sports bra, and her boy shorts. She sways to the music, and moves from sitting backwards on my leg and then Karen's, rubbing herself against our legs. With her back turned to us she pulls her top off, and wiggles her ass.\n\n\"Ezzie, has Candy ever had sex with a girl?\"\n\n\"No Ben.\"\n\n\"Please have her want nothing more than to have Karen suck on her nipples.\"\n\n\"Done.\"\n\nCandy turns and straddles Karen's thigh. She puts her hand on the back of Karen's head and pulls her to her chest. \"They aren't covered.\" Candy says.\n\nKaren looks at me and I just smile, and watch as Candy slowly pulls Karen's mouth to her nipple. Candy sighs and holds Karen to her. I can see Karen sucking, and licking Candy's nipple. Candy pushes Karen's head to her other nipple as she turns her body. Candy has very dark, thick nipples. I bet they are a lot of fun to play with. She is definitely enjoying what Karen is doing. Not only does her face show it, but she is softly moaning, and running her fingers through Karen's hair as she sucks on her nipples. After a moment I reach out and pull on the knot behind Karen's neck. The straps just fall off Karen's chest.\n\nCandy looks down at Karen's bare shoulders and the top of her bare boobs. She then looks at me. \"They aren't covered.\" I say.\n\nCandy pulls back a tad and reaches down and plays with Karen's nipples. They both sigh as Candy gets up and continues to sway. Karen cuddles up next to me. \"You are too covered.\" She says.\n\nCandy gets a little serious. \"He has to stay covered. If he isn't and we are caught you will get kicked out, and I could get fired.\"\n\nShe drops her boy shorts and does a leg lift exposing her wet pussy. She turns and bends over spreading her ass cheeks for us. Candy is almost the opposite of Karen. She has normal nipples if you will, but real puffy pussy lips. Compared to Karen's puffy nipples and normal lips. I look at Karen and whisper. \"It's not covered.\"\n\nKaren smiles and reaches out and runs her fingers between Candy's wet puffy pussy lips. Candy just moans.\n\n\"Ezzie, does Candy want Karen to finger her?\"\n\n\"She is torn, Ben. She has never let a customer touch her like this. She has never been with a woman, but it feels so nice.\" Ezzie says.\n\n\"Ezzie, have Candy pull away. She desperately wants to but is afraid of getting caught. Have her apologize to Karen, and agree to come home with us if asked.\"\n\n\"Done.\"\n\nCandy pulls herself forward out of reach. \"Karen I want to, but I can't. I could get fired.\" She sighs.\n\nI lean down to Karen's ear. \"We could go to a hotel.\" Karen is wide eyed, staring at me. \"Ezzie, what is Karen thinking?\"\n\n\"She is extremely worked up, but is nervous about asking a total stranger, a stripper back to your room to have sex. What if she has an STD?\" Says Ezzie.\n\nCandy is swaying to the music just looking at us. \"Ezzie, can you have Candy answer us honestly please.\"\n\n\"Of course Ben.\" Says Ezzie.\n\n\"Karen, you know I can read people. Mr Reynolds, your Dad's suppliers. Do you trust me?\" I ask.\n\nShe squeezes my hand. \"Always.\"\n\nI turn to Candy. \"Candy, come straddle Karen's thigh and talk to us.\"\n\nCandy humps herself against Karen's leg as she sits. She rolls her hips to the music. \"Candy, could you please tell us your real name?\"\n\n\"Katherine Marie Snow. My friends call me Kat.\" She says softly.\n\n\"Kat, have you ever done more than dance for a customer before?\"\n\n\"No, never.\" Kat says as she continues to rub against Karen's leg.\n\n\"Kat, have you ever been with a woman or had a threesome?\"\n\n\"I have never done either.\"\n\n\"Have you ever thought about being with a woman?\" I ask.\n\n\"Once or twice.\" She says with a smile.\n\n\"Are you thinking about it now?\"\n\n\"Oh yes.\" Says Kat smiling at Karen.\n\n\"Why now Kat? Why us?\" I ask.\n\nKat puts her hands on Karen's cheeks. \"You are beautiful.\" And she gives her a long soft kiss. It is the sexiest kiss I have ever seen that didn't include tongue. Kat breaks the kiss and looks at me. \"You are a cutie too.\"\n\nThe bouncer ruins it by saying loudly. \"Candy you are on stage B in one song.\"\n\nShe hops up and puts her robe on. \"I have to go. This is my last stage dance. Then I am off for the night. Please stay and watch. You will see what I like.\"\n\nI look at Karen. Her eyes are on fire. I look down at the leg that Kat was humping and there is a slick spot, not just wet. I reach down and run my index finger through it all. Karen is staring down at her leg just watching me. I lift my finger to her lips. She doesn't hesitate licking my finger clean.\n\nShe smiles and takes my hand out of her mouth, and puts it back on her leg. She holds my finger while she rubs it around the wetness. She then lifts my finger to her nipple, and rubs my finger around her nipple. I am watching Karen rub her nipple so closely, I don't notice her other hand.\n\nShe takes her other hand and puts it behind my head and in my hair. She guides my head down until I take her nipple in my mouth and suck Kat's juices off it. I pull my head back. \"You either need to pull your dress back up, or I am going to flip you around and fuck you until you scream.\"\n\nKaren smiles at me. \"No, no, no, remember you have to stay covered or we get kicked out.\" She says as she pulls her dress up, and re-ties the knot. \"Plus we have to get to stage B.\" We walk out and the bouncer is just looking forward. Karen walks up right in front of him, and looks up at him. \"Stage B, so we can watch Candy?\"\n\nThis man is very big. Like football linebacker big. He looks down at Karen, and just points to a stage.\n\nWe walk over and this stage is off in a dark corner. As we get closer I start to notice this is a kinky stage. There is a big X frame with cuffs hanging from it, a few paddles and what I have recently found out are called floggers.\n\nA tall black haired girl comes out in a Dominatrix outfit. Its a solid thin vinyl body suit. It's so thin her hard nipples are clearly visible. She starts walking around the stage, and puts her foot up on a stool on stage.The outline of her pussy is plain to see under the thin vinyl. Her heels clicking as she walks around the stage. Her boobs almost unmoving under the tight vinyl bodysuit that shows zero cleavage. It goes straight up to her neck, and her ass cheeks are begging to burst out of the bottom of the suit. She is carrying a small riding crop in her hand, as she walks she is slapping her other hand.\n\n\"I am Madam Mary. You worms may call me Mistress or Madam. In a few minutes I am going to bring my pet Candy out. She was a bad girl earlier.\" She stops in front of us, and crouches down with her legs spread in front of us. \"It seems she was late getting ready for this set because she gave a certain someone.\" Mistress reaches out with the crop and puts it under Karen's chin. \"Too long of a private dance in the Champagne Room.\" She moves the crop to my chin. \"I wonder who that could be? She tried to explain it was for a couple, that kept her too long ahhh Talking.\"\n\nMistress takes her crop and taps the stage. \"I don't see another couple in the club so you two must be the reason my Pet was late.\"\n\nKaren looks up at her and starts to apologize. Mistress grabs her head and tilts it down to the stage. \"I Didn't Say You Could Speak! You will not speak or make eye contact with your Mistress without permission.\"\n\nShe gets up and starts to walk away. \"Ezzie, is Karen alright?\" I ask Ezzie.\n\n\"She is Very Excited right now Ben.\" Says Ezzie.\n\nI laugh in my head, as I look at Karen looking down at the stage. I hear Mistress's heels clicking as she walks the stage. \"Oh look who decided to join us on stage. You are late Pet.\" Says Mistress.\n\nI hear Candy's voice. \"I am sorry Madam.\"\n\n\"Oh you will be. Is that the couple you were dancing for?\"\n\n\"Yes Madam.\" Says Candy\n\n\"I was going to have some fun playing with you tonight my Pet, but now I have to punish you. I am unsure if I should use my crop or the candle on you?\"\n\nMistress starts asking everyone at the stage. \"Candle or Crop?\" As she gets to us she starts to walk past.\n\nKaren blurts out. \"Madam, it's my fault. Please punish me.\"\n\n\"What the Fuck? Ezzie?\"\n\n\"Karen is sure this is just an act, but she is extremely excited at the thought of being punished on stage While you watch.\"\n\n\"No Shit. This is getting interesting.\"\n\nI don't notice Mistress come up behind me, and I see Karen's head jerk up and she gasps out. I hear Mistress's angry voice. \"Did I give you permission to speak, you Slut Worm?\"\n\n\"No Madam...\"\n\n\"Stop talking Slut Worm.\" Mistress says and then slaps the crop across Karen's cheek hard enough to make a decent slap sound. Karen gasps, and Mistress goes back to addressing the crowd. \"I will let the people decide. Should I punish my Pet or the Slut Worm?\"\n\nWithout a doubt the crowd says. \"Worm.\"\n\nOh shit! \"Ezzie, are you sure this is an act? Mistress isn't going to really hurt Karen right?\"\n\n\"She is sure it will sting for her, but Mistress is actually looking forward to it.\" Says Ezzie.\n\n\"Fuck me.\" I sigh in my head.\n\nMistress is back in front of us. \"Slut Worm, get up, look at the floor and walk to your right, and come up on stage if you dare.\"\n\nI watch Karen move. I grab her arm quickly, \"Are you sure?\"\n\nKaren smiles at me. \"I am your sex slave this weekend, Master. Let me put on a show for you.\"\n\nOh fuck, my dick just twitched in my pants. I watch her go up on stage and I see Mistress tell Candy. \"Bring her to the rack you should be on.\"\n\nKaren is talking to Candy as she leads her to the rack. \"Ezzie, what are they saying?\"\n\nKaren is asking Candy. \"So you like this stuff? You said before you left. Come see what I like.\"\n\nCandy answers saying. \"You don't have to do this.\"\n\nKaren says. \"Promise me now you will come have a drink away from here, and we can seriously talk about you joining us tonight.\" Says Ezzie.\n\nMistress yells from the stage. \"I told you worms No Talking.\"\n\nKaren gasps as Mistress pushes her into the rack face first. She takes one wrist and attaches it. \"I see I will have to teach you an additional lesson. Pet, go get my special clamps, and be quick or I will use them on you too.\"\n\nI see Candy go off stage as Mistress straps down Karen's other wrist. Mistress crouches down and rubs her hands over Karen's legs. \"Look at these sexy legs, spread them for your Mistress.\" Karen spreads her legs and Mistress Mary binds her ankles too. Mary stands back up and swats at Karen's ass with her crop. \"Slut Worm, try to pull free.\" Karen pulls on the bonds, they jingle, but hold. I see Mistress put her hands under the back Karen's dress. \"Oh good you have a thong on.\" She lifts up the back of Karen's dress and tucks it into the top of her thong. The crowd cheers as Karen's ass is exposed. \"The best of both worlds for me. Your little Slut parts aren't exposed, and I have lots of bare ass cheek to spank.\"\n\n\"Ezzie, how is Karen?\"\n\n\"Extremely excited, and nervous.\" Says Ezzie.\n\nServes her right. She got herself into this mess, I think as Candy comes back. She hands Mistress what look like two weighted nipple clamps. Mistress says something to Karen.\n\n\"Ezzie, what is she saying?\"\n\n\"Mistress is asking for Karen's ok to pull down her dress and put on the nipple clamps. Karen said ok.\" Says Ezzie.\n\nMistress unties Karen's dress and lets the straps drop to her waist. Mistress turns back to the crowd and holds up the clamps. \"These are my favorite clamps. I am going to put them on Slut Worm's nipples while I spank her. She can't keep her mouth shut so I have to teach her a lesson. After I spank her I will explain more.\"\n\nMistress turns back to Karen, and reaches around her to her boobs out of sight to the people at the stage. \"Oh she has puffy nipples. These are going to feel ssoooo good for her.\" Mistress then laughs as Karen moans.\n\n\"Ezzie, is Karen still ok?\"\n\n\"Oh yes Ben. Mistress had to tighten them on her nipples to hold the weight. Karen is enjoying it. She told Mistress it's ok. She likes it rough.\"\n\nJesus Karen. Come on. She is going to kill you. I think.\n\nEzzie asks. \"I can stop it.\"\n\n\"Listen to Karen, and the Mistress, and watch out for Karen.\" I say.\n\n\"Always, Ben.\"\n\nMistress starts grabbing Karen's ass cheeks and shaking them. Like one big handful of each cheek. \"Slut Worm, you have One Chance to get this right. How many spankings do you think you deserve?\"\n\nKaren says nothing for a moment and then says \"Ten?\"\n\nMistress laughs. \"Ten it is. I would have accepted Five though. I can't wait to see my handy work when I am done. Count them out Slut Worm. If you miss one it never happened.\"\n\nSLAP. Karen yelps. \"One\". The other cheek. SLAP. I can see Karen tense. \"Two.\" Back to the other cheek. By the sound a little harder. \"Three and then Four\" on the other cheek. This continues the same through #8. Karen is now hissing with each hit. The crowd cheers with each hit. Mistress is hitting the same general area over and over.\n\nMistress swings again. I could swear I heard the crop zinging through the air. Karen yelps and hisses. \"Nine.\"\n\n\"Ezzie, how is my girl?\" I ask.\n\n\"It is the worst spanking she has gotten but wants to prove to you she can take it.\" Says Ezzie.\n\n\"Prove to me? Why?\" I ask.\n\n\"One more to go Slut Worm. I have to say I think I am impressed.\" SMACK! Karen hisses but doesn't count. She stays silent. \"Oh Little Slut Worm, you want to test me?\" SMACK! That one was definitely hard. Karen hisses again, but doesn't count. \"Last chance Slut Worm. After this I get the paddle.\"\n\n\"Ok Enough, Ezzie. Make Karen cry uncle.\" I say. Ezzie doesn't bother to respond.\n\nSMACK!\n\nKaren cries out. \"TEN. TEN.\"\n\nMistress moves to a shelf behind the rack and puts lotion on her hands and rubs Karen's abused cheeks. \"I am impressed Slut Worm. You take more than my Pet does, but you have one last punishment coming. My favorite nipple clamps.\"\n\nMistress turns to the crowd, leaving Karen fidgeting still strapped to the X. I am sure her ass stings.\n\n\"Ezzie, how is Karen?\"\n\n\"It hurt more than she thought but she wanted to prove to you she can take it. She feels you treat her like she will break when you get rough. She feels like you still hold back.\" Says Ezzie.\n\nI am impressed, amazed and in love even more with Karen. Mistress holds up a small remote. \"Who wants to shock the Slut Worm's nipples?\"\n\nHands start flying up in the air. You hear nothing but a chorus of me, me, me.\n\nMistress walks out to the stage. \"Start tipping boys. Best tip wins the privilege of shocking my Slut Worms nipples.\" Tips start landing on stage.\n\n\"Pet, go collect the tips, and tell me who wins.\" Mistress says as she strolls along the stage.\n\nAs Candy walks by I snap my fingers and hold up a $100 dollar bill. A moment later Candy announces. \"This man won Madam.\" I see the bouncer move off the stage, and stand behind me.\n\nMistress walks over to me. \"Worm, you want to shock my Slut Worm?\"\n\n\"No, I want to shock my Slave that I have allowed you to play with, and watch her face as I do it. She stares at me. \"This could be fun to watch.\" She looks at the bouncer. \"Let him up.\"\n\nI get up on stage and she hands me the remote. \"You will push the button Once. Try to do it a second time and Charlie behind you will press your button. Are we clear?\"\n\nI return her stare. \"Ezzie make Mary feel submissive to me.\"\n\n\"Done.\"\n\n\"Mary, you have played with my slave long enough. She is Mine.\" I say. Mary bows and lets me move beside Karen.\n\n\"Hi Master.\" She says softly.\n\nI smile at her. \"Slave, this is enough. I am Amazed and Proud of you, although it was a little stupid on your part to stop counting. I can see it in your face. You have had enough. When I hold up my hand with the remote, I want you to scream like I shocked you.\" I say.\n\n\"No sir. I am sorry I will not. I want you to shock me. I want to show you..... AAAAHHHHHH Fuuccckkk!\"\n\nThe crowd roars their approval. I wasn't fighting with her on stage. I zapped her. \"Ezzie?\"\n\n\"She is ok Ben. It surprised her and stung, but she is ok. She is thinking it wasn't so bad.\" Says Ezzie.\n\nMistress comes back and takes off the clamps. Karen moans as they come off. I see her moving her body. I am guessing her nipples sting with the clamps off. I reach up and release her wrists, and Mistress crouches down to release her ankles. I then pull her dress up. I hold the strings behind her neck in my hand as I put my arm around her, and hug her to me. Mistress looks at the two of us. \"Follow me.\"\n\nWe are off stage where the strippers get ready. Karen has moved a hand up to hold the dress up on her chest. Mistress takes a bottle of lotion off a shelf. \"This will sooth her nipples, and bum. I look Karen in the eyes for a moment. I can see it in her eyes. She did this for me. She wanted to show me she can take it. She wants this from me.\n\n\"Ezzie, is this what she has meant all along when she has asked me to Take Her.?\" I ask.\n\n\"To be honest Ben it is something that has grown in her. From you Taking her the first time. The women getting spanked over the Labor Day weekend, and now tonight. When she gets this urge it makes her happy when you do.\" Ezzie tells me.\n\nWow. I turn to Karen, no correction. I turn to my Slave. \"Slave, drop your dress.\"\n\nHer eyes sparkle. She doesn't hesitate she drops her dress. I drizzle some lotion on her boobs. She reaches up and rubs it in. She sighs a bit as she does. It is soothing her a little.\n\nAs if on cue Candy walks off stage and joins us. Let's play this up. \"Candy, kneel behind my Slave now.\" I tell her with a little authority.\n\nI can see Candy's trepidation as she kneels down behind Karen. I squirt some lotion on Karen's red ass. \"Gently rub it in.\"\n\nI turn and see Mistress Mary watching.\n\n\"Ezzie, make Mary obey me and imagine me spanking and shocking her on stage over and over again. Through her tears and screams I keep going. Then have her dream about it all night.\"\n\n\"Done, Ben. She won't get much sleep tonight.\"\n\n\"Your performance is done Mary, you may leave now.\" I tell her.\n\n\"Yes sir. Sorry sir.\" Mary says as she turns and walks away.\n\n\"Candy, we were thinking about asking you back to a hotel with us tonight.\" I can see her eyes light up. \"But then you cost my Slave a rather good spanking.\"\n\nCandy's eyes and head tilt down a little. \"Master, I am so sorry. I wasn't expecting her to volunteer to take my place. I wanted you two to watch me. I have Never thought of doing Anything outside of here with a customer, until tonight with the two of you. All I have been thinking about tonight is having sex with the two of you. I have never had sex with a woman before, but I so want to with you Mistress Karen. I can't help it. These thoughts are making me so horny.\"\n\nI use her real name intentionally. \"Kat, Karen is not Mistress. She is my Slave. When we are alone I am Master, Karen is Slave and you are at the bottom as Slut. Are you both clear on that?\"\n\nI get a chorus of. \"Yes Master.\"\n\n\"Slave, do your nipples and ass feel better?\" I ask.\n\n\"Yes Master. Thank you for asking.\"\n\n\"Slut, stand up and tie Slave's dress.\"\n\nKat stands and pulls up Karen's dress and ties the knot. She then fluffs Karen's hair around the straps.\n\n\"Slut, how much time do you need to get dressed in something sexy that is appropriate for a bar?\" I ask.\n\nShe answers with downcast eyes. \"Ten minutes.\"\n\n\"You will be in Jimmy's Bar, and seated at our table in 25 minutes, or Slave will be punished for your tardiness Again.\"",
        "\"Yes Master. I will not disappoint you or Slave. May I go and get ready?\"\n\n\"Go.\" I say.\n\n\"Ezzie, do they have any toys here?\"\n\nI see an image of Candy digging through a good sized box of toys getting the nipple clamps from earlier. I see a double ended dildo. Perfect! \"Ezzie, have Kat bring the double ended dildo with her please.\"\n\n\"Of course, Ben.\"\n\nI bend down and kiss Karen as I hold her against the wall. I break the kiss. \"Ezzie, I want Karen to be 100% honest with me right now. I don't want her to say what she thinks I want. I want to know what she wants.\"\n\n\"Yes, Ben.\"\n\n\"Karen, do you want to be submissive to me tonight?\" I ask.\n\nShe blushes a little, and nods her head. \"Karen, I want you to say it. Do you want me to dominate you? Do you want me to be your Master? Do you want to be my submissive sex slave sometimes?\"\n\nThere are dancers walking all around. I put my finger to her lips. \"Hold that thought.\" I say as I take her to the car. As I drive away I continue talking to her. \"Is this what you have meant when you have said you wanted me to take you?\"\n\n\"Oh god. This is embarrassing.\" She says.\n\n\"Before that we got rough sometimes it turned me on, but wow when I was on my knees with my wrists and ankles strapped together, and you put the ring in my mouth. I am surprised I didn't leave a puddle on the floor. The ring was a little hard to take, but just being at your mercy turned me on big time. Since then I have been reading about it, and it excites me.\" Karen says with a small sigh.\n\n\"So what have you read about? No wait. What have you read about that you know you don't want to do?\"\n\nKaren just looks at me, and blushes. \"I don't want to do bathroom stuff, get wrapped up in plastic wrap or to be choked. I have seen videos where the sub is crying in pain. I don't want that.\"\n\nI laugh. \"Wrapped in plastic wrap?\"\n\nShe giggles. \"It's a thing.\"\n\n\"So we will set some simple ground rules to start. When I am in the mood I will refer to you as Slave, when you are you will call me Master.\" I say.\n\n\"Sounds fair.\" She says with a smile.\n\n\"The safe word is always there to stop Everything for either of us.\"\n\nShe smiles. \"Yes. Independence.\"\n\n\"What about other men?\" I ask.\n\nShe just looks at me. \"Be honest.\" I tell her.\n\n\"That's still confusing for me. I know what I said previously, but then I had sex with our Dads. I mean I love them, and there is that. I couldn't just do that with any man.\" She says.\n\nI can see her still thinking about it. \"How about for now handjobs on command, but blow jobs only to guys I know and trust on command.\"\n\n\"Wait so handjobs to anyone?\" She says nervously.\n\n\"Yes. Maybe I will use my Slave to help close real estate deals in the future.\" I say with a smile.\n\nI actually see her swallow. \"Ezzie?\"\n\n\"She was first imagining you telling her to give the waiter from dinner a handjob for a tip. Now she is seeing you pulling her sundress off her, putting her on her knees to give Ron, the owner of your real estate company a blow job. She is more excited than nervous.\" Says Ezzie.\n\n\"Well?\" I ask.\n\nShe folds her hands in her lap, sits up straight and looks down at her lap. \"Yes Master, I agree.\"\n\nOh shit. This could be fun. \"Slave, when I ask you a direct question I expect you to look at me.\" I say with just a little tone.\n\nSlave looks up at me. \"Yes Master. I am sorry Master.\" I say nothing and she lowers her head back down.\n\nAs we drive in silence for a minute I think of something. \"Slave, I don't want to draw undo attention to us in public. In public, during these times we will use our real names, but if you act up or speak out of turn you will be punished at my earliest convenience.\"\n\n\"Yes Master. I understand. I will do my best.\" Slave says looking me in the eye. I say nothing and she looks away and back down. God my mind is spinning. I can't believe she is doing this, and wants to.\n\nWe arrive at the bar 8 minutes before Kat's deadline. Six minutes later I stand up and greet her with a big, tight hug. She is in a tank top with a cutoff style sweatshirt. The sweatshirt's neckline is nicely cut so it shows off her ample chest nicely, and not short shorts, but sexy looking shorts that look great, and cover her assets completely for going out in public. As I hug her and squeeze her chest to me, and reach down and pat her ass. \"In public you may call me Ben. Now go say hello to Karen and kiss her just a moment or two longer than a simple kiss hello.\"\n\nKat doesn't hesitate, she gives Karen a friendly hug, and kiss. The kiss is just long enough to anyone watching, that they have to assume it is more than a friendly kiss hello. She is sitting at the table with us, drinking a strong mixed drink special I ordered for both of them when Karen and I arrived.\n\n\"So Kat, do you have any questions for us?\" I ask.\n\nShe looks a little shy. \"Umm do you... do this a lot? Pick up dancers at strip clubs?\"\n\n\"No, and I can prove it.\" Kat is to my right. I take my right hand and hold it as a closed fist out of site of Karen. \"Karen, before tonight how many strip clubs have you been to.\"\n\n\"Zero.\" She says. I change my hand and hold up one finger.\n\n\"Before tonight how many times had I been to a strip club?\" I ask.\n\n\"Once.\" Karen says.\n\nKat sighs. \"Why tonight? Why do I keep thinking about it driving myself crazy? Why did I tell you to come watch what I like? Why did you take my punishment?\"\n\n\"That last one Karen can answer. She already told me.\" I say. I lower my voice. \"Tell Slut why you took her punishment Slave.\"\n\nKaren's face changes. She almost looks excited. \"Yes Master.\" She says softly. She turns to Kat. \"We have experimented with Dom/Sub stuff. He has restrained me, spanked me a little and we have done what we call No Saying No days. I was hoping Mistress Mary would be a little tough so I could prove to Ben I can take it. I have to admit the spanking was, well it did more than just sting. I stopped counting hoping she would get rough, and he could see I could take it, but Wow. Then when he came up on stage to shock me. He told me to scream when he raised his hand because he didn't want to cause me more pain. I told him I wouldn't. He didn't bother arguing with me, he just shocked me to end it. I did feel bad about you getting punished because we kept you late, but I did it for me too.\"\n\n\"How about you Kat. How did you find your way into this?\" I ask.\n\nShe mumbles for a bit. \"Kat, look at me.\" I say with a little tone. Both she and Karen look at me. \"Now Slut, tell us how this started for you.\"\n\nKat glances around. \"Yes Master. My late husband and I.\"\n\nI interrupt. \"Wait a moment please. Late Husband? As in deceased? You are too young to be a widow.\"\n\n\"He was killed in Afghanistan almost 2 1/2 years ago.\" Says Kat as she wipes her eyes. \"When he left I didn't know I was pregnant. He never got to see the birth of his son John Jr.\"\n\nKaren has gotten up and has her arm around Kat. Just hugging her.\n\n\"You have a son? Who is watching him?\" I ask.\n\n\"Another dancer is a single Mom. We alternate the nights we work, whoever has the night off watches the kids.\" Kat says.\n\n\"When do you have to pick him up?\" I ask.\n\n\"I don't have to, we are roommates. We share a 2 bedroom. The kids in one room the Moms in another. When I finish school in December I am going to move back home. When we were stationed here I started school. After my husband's death I was a little lost, and the other base families kinda looked out for me, but now they have all moved on or been transferred. The college is real nice to the servicemen and their families so I stayed to get my bachelors degree.\" Kat finishes her drink. \"I had to get a job with good pay and short hours. Here I am.\"\n\nKaren leans over and hugs her tight. I see Kat smile and hug her back. She honestly looks like she needed the hug.\n\nJesus, that was heavier than I thought it would be. \"So ladies, does anyone have an issue with me ordering a second round, and then booking a hotel room for the three of us tonight?\n\nThey both shake their heads. \"Ladies, I want you to repeat after me. I Slave or Slut agree that I want to have a threesome tonight.\"\n\nTheir eyes dart around looking to see if someone can hear, and the both softly repeat it. I continue. \"I further attest that upon agreeing to this threesome I am agreeing to accept that Ben is my Master.\" I let them repeat it. \"I am nothing but a Slave or Slut. I will allow him to do with me or to me whatever he pleases. I am his Fuck Toy to play with.\"\n\nThey both agree and repeat the entire thing. As Kat says the final part I can see a sparkle in her eyes. The drinks arrive while I am searching nearby hotels. I find a mid to high end room, so at least we know it's clean. It's a king sized bed, it's up high so we can leave the curtains open and not have to worry about people in the parking lot peeking in.\n\nWe finish our drinks and head out. Karen asks to go with Kat to get to know her.\n\nI tell them I have to make a stop, and I will meet them there. They look at me, but don't question me. I hop in my car and head to a 24hr pharmacy. I run in to grab some lube. Both girls are getting their asses fucked tonight.\n\nI have checked in online, but I want to put the girls through a little exhibitionism. The two of them get out of the car at the hotel, and I tell them. \"Front and center.\"\n\nThe two of them come and stand in front of me. I reach for the front pieces of the dress covering Karen's boobs, and I fold each side under making it about half as wide. She has side boob on display on both sides of both boobs now. I turn to Kat. \"Lose the tank top before I tear it off you, Slut.\"\n\nShe starts removing it under her sweatshirt like women do. \"Yes, Master.\"\n\nOnce it's off I tug the torn neck of the sweatshirt as far down as it will go. I am not happy with it. Knowing her husband died I ask. \"Does this have Any Sentimental value to you?\"\n\n\"No Master.\"\n\nI reach for an existing tear and rip it down more. Perfect now with it tugged down so it is just covering her nipples. I put out my arm for each of them to take one and we walk in. Once inside I walk to the desk and the clerks look up. Both women behind the desk look a little horrified. I ask for directions to the elevator, and they point.\n\nAs I walk away with the girls. \"Ezzie what are the clerks thinking?\"\n\n\"They are thinking you are a disgusting pig, bringing two hookers to the hotel.\" Says Ezzi.\n\nI laugh in my head and reach down and put my hand on each girl's ass. We turn the corner and I pat each bum. \"So would you rather those two clerks think you two are hookers I am paying for the night, or that I am your Master and you are willingly going upstairs with me. That you have already agreed to let me do whatever I want to you, and to do as I command?\"\n\n\"Ezzie?\"\n\n\"They are both weighing the options. A hooker would be embarrassing but they don't know them and probably will never be back. Admitting you are their Master is admitting a very personal choice that they would like to keep private.\" Says Ezzie.\n\nThe girls look at each other, and then at me. \"Hookers.\"\n\nI smile. \"Hookers it is, since that's what they are thinking anyway I am sure.\" I open the room and we all walk in and look around. I open the curtains so we can see the city in the distance. \"Slave & Slut come stand beside me.\"\n\nThey come and stand beside me. I step back. I had read that psychologically women don't like being stripped. They would rather take off their clothes while men are the opposite. I stand behind Slut and yank her shirt off over her head. Her body jerks. I kneel down and yank her shorts down. I grab an ankle and pull her shoe and shorts off, and repeat with the other ankle. \"Hands Behind your Head Slut.\" I say with as much tone as I can muster. Slut stands straight with her hands on her head.\n\nI step to Slave. I push her head forward and yank the knotted straps over her head. I pull her head back up by her hair, and drop to my knees. I push the dress over her hips and miss the thong. I again grab each foot, pull off her shoes and the dress. I stand up and bark. \"Hands on your Head Slave.\"\n\nSlut and Slave are now standing side by side. I reach down and rip the thong off Slave. She screams in surprise, and in pain I am sure. I ripped at it hard. \"Slut take her panties off her Now.\" Kat moves quickly, pulling them down off the one thigh that survived the ripping, pulling Karen's foot out, and standing back up with her hands on her head.\n\nI get an idea. I shut off the lights and take all three phones and turn on the flashlight. I drop them all on the floor in front of them, lighting them up while they stand in front of the window.\n\nI quietly sit on the bed leaving them standing there. The odds are really low that anyone would notice to even look, and if they did I don't know how much glare the lights would put on the glass, but they aren't thinking that I bet. \"Ezzie, what are they thinking?\"\n\n\"They are both watching the cars and people move below and are sure if they look up they will be seen. Then they are also wondering what's next.\" Says Ezzie.\n\nI sit quietly for about five minutes. There is no sound in the room, except the sound of breathing. I get up with a sigh and I start pacing behind them. \"Ladies, I hate to say this is last minute and I am not properly prepared, But I am not. We have no restraints or toys.\" I softly slap their ass cheeks as I walk back and forth. \"This will have to be an all hands approach.\"\n\n\"Master, May I speak?\" Says Kat.\n\n\"Looks like you already are Slut. Continue.\" I say.\n\n\"I grabbed two props before leaving work. It doesn't have to be by hand. May I show you?\" Kat asks.\n\n\"No you may not. No one moves. Where are they Slut, in your bag?\" I ask.\n\n\"Yes, Master.\"\n\nI open her tote, and there is the double ended dildo I had Ezzie make her get, and a black leather paddle. Oh you kinky little slut. I pull out the paddle and start slapping my hand as I walk back to them. I lean against the window next to Slut and look at them. Slave's face is a little nervous. Slut knew it was there, so she isn't as surprised, more like a bit of nervous anticipation. \"Why would my Slut pack a paddle? Do you want to be paddled?\" I ask as she bites her lip. \"Answer me Slut or Slave will not like the punishment.\"\n\n\"No Master please.\" Sluts says quickly.\n\nI thought that might work. \"Ezzie, what is Kat thinking?\"\n\n\"She is remembering her husband spanking her while he took her from behind.\" Says Ezzie.\n\nSlut continues. \"I thought you were a little mad at me at the club because Slave took my punishment. I thought you would want to punish me for it.\"\n\n\"And the other item in the bag?\" I ask.\n\n\"I thought maybe Slave and I could put on a show for you.\" Slut says.\n\n\"With a used prop from a strip club? I don't want a used anything near my Slave or Slut.\" I hold her chin in my hand. \"No matter what name I am calling you, I will always look out for you, do you understand?\"\n\n\"Yes Master.\" I lean over and give my Slut a passionate kiss. I break the kiss after a moment, and I see Slave with a loving smile on her face. I flip the paddle up, and slap her furthest tit and nipple. She yelps in surprise.\n\n\"Get that stupid smile off your face Slave.\" I say as I watch her face. That caught her off guard, and it stung I bet.\n\nSlave returns to looking forward. \"Yes Master. Sorry Master.\"\n\n\"But Master.\" Slut starts, until I turn and glare at her.\n\n\"This better be important to interrupt me again.\" I say.\n\n\"Yes Master, sorry. It is. The props are never really used. They are just props, it's against the law to actually use them on stage.\" Slut says.\n\n\"Good to know.\" I walk behind her and slap her ass with the paddle, and I am rewarded with a surprised gasp. \"No slouching.\" I see them both stand straighter.\n\nI walk to the side of Slave, and again lean against the window. I flick her hard nipple that I just spanked with the paddle. \"Slave, did I just find a new place to cause you pain and pleasure?\"\n\nSlave just keeps looking ahead. \"Yes Master.\"\n\nI reach down and feel her pussy. It's damp. \"Well you are getting excited. Let's check Slut.\" I walk back over and she is wet. \"Slave she is hornier than you. She is nice and wet already.\" I say as I noisily push two fingers in and out of her. Slut's moans are borderline discomfort.\n\n\"Ezzie, when was the last time Kat has had sex?\" I ask.\n\n\"The night before her husband deployed.\" Says Ezzie.\n\nOh shit that stops me for a minute. I slow down the vigorous fingering while I think. \"Ezzie does she fuck herself with toys?\"\n\n\"Between school, work and single Mom, she has almost zero time for it, and to be honest she has had little interest since losing her husband. You awakened the lust in her tonight, when you told me to have her imagine having a threesome.\" Says Ezzie.\n\nWell shit! This is a bit of a conundrum. I don't want to hurt her, but God I want to fuck her. \"Ezzie, have Kat imagine me fucking her hard from behind as I hold her face in Karen's pussy right now. Does she want it to happen?\"\n\n\"Yes Ben. She knows it will probably be uncomfortable, but she wants it. She feels her body needs it.\" Says Ezzie.\n\nScrew it!\n\nI pull my fingers out of Sluts pussy and lick her juices off. \"Mmmmm, a little sweet, a little tart. It's almost as good as Slave's pussy juice that you will be tasting Very Soon.\" I say.\n\nShe actually gets very red and blushes. \"Thank you Master.\"\n\nI reach out and for the first time grab Sluts nipples. They are hard and a little rubbery. They are going to be fun to chew on. Slut moans as I twist and pull. Her eyes are half closed. \"Slut look at me.\" Her eyes pop open. \"Kat, I know it's been a while for you. I am about to punish and play with you. Last chance, to call it quits, or you are mine.\"\n\nShe brings her hands down. She holds my face in her hands and gives me a soft kiss. She breaks the kiss, stands back up straight with her hands on her head. \"Yes Master I understand, your Slut is ready.\"\n\nOk then. \"Slut, get on the edge of the bed in the doggy position.\"\n\nSlut turns and moves to the bed. Karen turns with her hands still on her head. She give me a loving look. \"I love you Master.\"\n\nI walk up to her nice and close. \"Face forward Slave, or would you rather stand here all night?\" I say as I slap her ass hard enough to make her gasp. She still has a smirk on her face. I grab her nipple. \"Go put your sweet little pussy in front of her face, but stay out of reach until I give you the ok.\"\n\nNow she is smiling. \"Yes Master.\"\n\nI walk over to the bed, and realize I am still dressed. \"Slut would you like the privilege of taking off your Master's clothes?\"\n\n\"Yes Sir, please.\" But she is a good girl and she doesn't move. \"Then get over here Slut.\" I see Karen on the bed almost pouting. \"Slave do you want to help?\"\n\nKaren smiles. \"Yes Master.\" And Karen starts to move.\n\n\"Did I say you could?\" Karen stops moving and slumps.\n\n\"Master, may I ask a small favor?\" Slut says trying to act as humble and shy as possible as she stands in front of me.\n\n\"A favor so soon? I don't even know if you are a good Slut or not yet? How can I judge whether you deserve a favor?\"\n\n\"Actually it is a favor so that I may serve you better and please you.\" Says Slut.\n\n\"Oh this I have to hear. Continue Slut.\" I say to Kat.\n\n\"May Slave please come join us so I can watch her please you orally, and know what you like done when I am granted the honor of performing oral sex on you.\" Says Kat\n\nWell damn she has got me there. \"Ezzie, did Kat corner me like that intentionally.\"\n\n\"Yes and no, Ben. She wants an excuse to have Karen near, but she also would like to know what Karen does that you like when she is using her mouth.\" Says Ezzie.\n\n\"When you are granted the honor? Do you think that will be sometime soon?\" I ask.",
        "She looks at me with a shy grin. \"I am hoping very soon.\"\n\n\"Slave get over here.\" I say.\n\nKaren lets out a small cheer and bounces her bum across the bed to get off it near me. I have Karen on my right, and Kat on my left. They are working in unison with nothing more than looks at each other. They remove my shirt, and both plant soft kisses on my chest. As they crouch down they plant kisses on my stomach. They open my pants and pull them and my underwear down in one pull. Karen ignores my hardon that comes bouncing out, but Kat can't. I see her eye catch for a moment, and a small smile forms on her lips. She reaches down to catch up with Karen and they hold my pant legs so I can step out of them. Then the kisses resume this time up my legs, until they are both on their knees side by side with my hardon twitching in front of their faces.\n\nKaren smiles at Kat. \"Hold him in your hand. Feel his hardness and his pulse. I love feeling him throb in my hand and mouth.\" Says Karen\n\nKat reaches out and holds me so the head of my dick is poking out from her fist. \"Oh Master, you have a beautiful cock. It looks just perfect. Slave please show me how he likes you to use your mouth.\"\n\nAll of a sudden they are like two girls just gossiping.\n\n\"What he really likes is using a ring in my mouth.\" Says Karen. \"But it's for special occasions. It's a lot on my jaw.\"\n\nKat smiles like she is reliving a fond memory. \"Ezzie, why is Kat smiling like that?\"\n\n\"She is remembering how much her husband used to like using a ring on her. How he used to just take her mouth. He used to like to have her hang her head off the edge of the bed and fuck her mouth. She would wind up drooling all over her own face, and at the end he would take out the ring. Then he would pull her onto the bed and massage her jaw. She hasn't thought of that in a long time.\" Says Ezzie.\n\nKat looks at Karen. \"Slave, you have to practice with it. I am so glad I did. My husband loved doing it to me, I loved doing it for him, and I loved having him take me like that.\"\n\nI speak up, and grab Karen's head with a handful of hair. \"Enough talking Slave. Your mouth should be doing other things.\" I say as I pull her head forward. I am a little rougher than normal with her. Karen gags some. I usually try to ease up a little when she gags. Tonight I am making her take it a little longer then I release her head allowing her to pull off.\n\nI look down and Kat is wide eyed just watching. I reach for her hair and use it to pull her face to me. I swear her eyes are sparkling as she just tilts her head back and opens her mouth. I push her head down and she just takes me. No gagging no nothing as I feel the head of my dick slip in her throat. I push her head back, and pull it back down until her face and nose are squished against me. I push her back off some. I hear her suck in some air, and I shove back in.\n\nOh my God. She has zero gag reflex. I look over, and even Karen has a surprised look on her face. Spit is just drooling out of Kat's mouth. I push her off me, and she pops off me with a gasp.\n\n\"Your turn Slave.\" I say as I pull Karen back. She has done it before, and I decide she is doing it again. I push in a bit hard, forcing her head further down than she would like. I have a firm hold of her head, and I am not letting go. Karen is fighting the urge to pull back, but I can tell she is losing the fight. Then I hear Ezzie in my head.\n\n\"Let Karen go.\"\n\nIt surprises me. I let go of Karen's head and she pulls off me coughing and gagging. Kat holds her against her chest as she coughs. \"What was that Ezzie?\" I ask.\n\n\"I have told you Ben. I will always look out for Karen too because you love her so much. She didn't want to stop, but she was starting to panic as she realized she was seeing spots. You were being too rough on her.\" Says Ezzie.\n\n\"She hadn't hit my thigh like she has done before.\"\n\n\"She was so overwhelmed she wasn't even thinking of it. She was trying to fight what her body was telling her. She knows she can train herself to not have such a bad gag reflex. She was thinking of it like training, but it became too much too fast.\" Says Ezzie.\n\n\"Thank you Ezzie.\"\n\nI look down and Karen has caught her breath if you will. She went from leaning against Kat as she coughed, to holding Kat's tit up to her mouth, and sucking on her nipple. Kat is holding Karen to her like a woman would hold a nursing baby. It's written all over Kat's face, she likes what Karen is doing.\n\n\"Slave, did I say you could suck her tit?\" I ask with some anger in my voice.\n\nKaren straightens up, and leans back on her haunches. \"No Master. It just sort of happened. I am sorry.\"\n\nI reach my hand down, and help her up. I turn her real quick and smack her ass a tad hard. It makes a good slap, and she screams in surprise and a bit of pain. I am sure that one stung. \"Get on the bed like I told you to before.\"\n\nI turn Kat so her back is to the bed, and she is facing me. I drop all the Dom/Sub stuff, and hold her by her shoulders. \"Katherine, look at me.\" My softer tone and using her full name catches her off guard. I don't bother Ezzie, since earlier she told me the answer. \"Kat, why do I get the feeling the last time you had sex was with your late husband?\"\n\nHer eyes look down. \"Because it was.\" She says very softly.\n\n\"Katherine, please look at me.\" She looks up at me. \"Are you sure? After 2 1/2 years? We can just have a soft sensual threesome if you want.\"\n\nShe stares at me for a minute. She stands straight, puts her arms at her side. \"Master, I am yours! Please do whatever pleases you.\"\n\nI stare at her for a moment and then growl. \"Get on the bed like I told you to Slut.\"\n\nKat smiles, \"Yes Master.\" Kat crawls onto the bed. She gets on her hands and knees. Her knees are on the very edge of the mattress. She has her head and shoulders propped up on her elbows. She is between Karen's legs, but Karen is about a foot out of reach.\n\nI walk up behind Kat. God she has a nice ass. Her plump pussy lips are obviously wet with excitement. I pick up the paddle and spank her ass. She yelps and her body jerks, but she stays in position with a moan. \"Slut, what has you more excited? The thought of getting fucked for the first time in a long time, or licking your first pussy?\" I ask.\n\nShe moans. \"I am honestly unsure Master. Since I gave Slave the neck rub, I have done nothing but imagine having sex with both of you. It's driving me insane. When Slave's fingers rubbed my pussy during the private dance I don't know how I kept myself from pushing myself back onto her fingers. I want to lick her and taste my first pussy. I want you to put that beautiful cock inside me and fuck me. Please Master put me out of my misery.\"\n\n\"Slave scoot forward let her lick you. Be warned Slut no stopping until I command it.\" I say.\n\n\"Yes Master.\" I can hear the smile in her voice. As Karen moves closer Kat angles her body as far forward as she can to lick Karen as soon as possible.\n\nI can hear Karen sighing, and moaning. She is enjoying what Kat is doing. I reach for the bottle of lube I got and put a healthy layer on me, I don't want to rip or tear her inside by being too rough. \"Ezzie, I am going to ask you to listen to both of them. If I start hurting them, or they are considering the safe word please warn me.\"\n\n\"I will Ben.\" Says Ezzie.\n\nI look down, and my dick is all shiny and wet with lube. I am just about step forward to fuck Kat, when I hear Kat say. \"Karen, is this good, am I doing it right?\"\n\n\"What did you call her?\" I roar as I grab Kat's hips and pull her back off the bed. I push on the small of her back, pinning her to the bed, and grab the paddle. I give her two quick spankings that leave a bright pink mark behind.\n\nShe screams out in surprise, and pain. \"I am SSOOORRRRYYYYY.\" She yells as I spank her again. I don't give her a chance to answer. I turn to Karen. She is staring at me in surprise.\n\n\"She is making too much noise, come hold her face to your pussy.\" I tell her. She stares at me for a moment. \"Now! Unless you want to get a spanking right beside her?\" Karen shuffles forward, and guides Kat's face back into her pussy. The moment her face makes contact with Karen's pussy, I spank her other cheek a tad harder than I meant. Kat screams into Karen's pussy. \"Ezzie, is Kat ok? Was that one too hard?\"\n\n\"It was close to her limit. She can take it. I have never felt this before. She is sexually excited. She knows she called Karen by her name, and not Slave. She wants you to punish her, since you are her Master. Ben, she is totally into the submissive state of mind. I have felt Karen submit to you, but never on this level. Karen always knew it was a game and it could be stopped. Kat does too, but those thoughts are buried much deeper.\" Says Ezzie.\n\nI grab a handful of Kat's hair and pull her head back. \"What a shame Slut. I had my dick all covered in lube for you. I was going to be nice and slide it in slowly so you could get used to having a dick inside you again. Then you go and Fuck It Up.\" I spank her a little bit easier than the last two since I am hitting the already pink skin. She yells out again. \"Quick Slut how many times have I spanked you?\"\n\n\"Two times Master.\" She say's quickly.\n\n\"Wrong, Slut! I have spanked you four times. I was going to give you one more for five, but since you have only gotten two I guess you need three more.\"\n\nKat moans, and then Ezzie tells me something interesting. \"Ben, she knows it was four. She feels she deserves more punishment.\"\n\n\"No shit! Thank you Ezzie.\"\n\n\"Slut, since you can't count I am going to add to your punishment.\" I push her head back down into Karen's pussy. \"Slave, hold her head tight to you, or you will get spanked next.\" I can see Karen get a good grip of Kat's hair. \"You hear that Slut. You pull your face away from that pussy without permission and Slave gets punished.\" I can see Kat trying to nod her head yes. I step back and pull her ass cheeks apart, and I see my target winking at me. I still have lots of lube on me. Kat shifts her hips thinking I am trying for her pussy. I let one cheek go, and line up with her ass, and push the head in. I meet with some resistance, and feel Kat's body stiffen. I hear a small muffled moan, I push a little harder, and her ass opens letting me in.\n\nKat lets out a high pitched scream into Karen's pussy the moment her ass opens for me. I pause for just a heartbeat and then push all the way into her ass. I am rewarded with another hi pitch muffled yelp. Again I stay bottomed out for a moment and start fucking her ass. I start with slow, short strokes that make Kat moan. I have a slow full stroke going. \"Slut, hold some fingers. How many times have you been spanked?\" She holds up two fingers. I spank her again with a decent smack. I hear another high pitched moan into Karen's pussy, and Kat changes her fingers from two to three. \"Good girl.\" I pull out of Kat's ass. Since you are being so good right now I will give you some more lube before I really start fucking your ass. Her ass stays open for me. It's an easy bullseye to squirt in probably more lube than I need, but I am not really an asshole. I take the paddle and give her a good whack on her left cheek, I don't give her time to finish screaming for number four. She is trying to change her fingers and I use a backhand swing to give the other cheek number five, and I shove my dick back in her ass. I stay shoved in for a moment. Another scream into Karen's pussy, and she is holding all five fingers up.\n\n\"Oh yes, one other thing Slut. I am not stopping the ass fucking until Slave has cum. If I cum before her, I will just keep fucking your ass until I cum for the second time. You can ask Slave, that can take a while. I would strongly suggest you bite and suck on Slave's clit hard and make her orgasm before me, she likes it rough.\"\n\nJust a heartbeat later Karen's eyes sort of flutter. \"Oh fuck.\" She gasps loudly. I guess Kat took my advise. I slam into Kat's ass. I am putting this fucking into overdrive. As I do Karen almost screams. \"Oh yes Slut. Just like that. Please!\"\n\nKat is constantly just gasping out \"AHH. AHH AHH.\" Some are more muffled than others. I don't want to really have to keep fucking Kat's ass. She has taken her punishment like a trooper.\n\n\"Ezzie, is Karen getting closer?\"\n\n\"Oh yes, Ben. She is almost there.\" Says Ezzie.\n\n\"Ezzie, have Kat bite and flick her tongue across Karen's clit like I do.\"\n\n\"Of course, Ben.\"\n\n\"Oh FUCK!\" Karen yelps out, and starts humping her hips up as she holds Kat's face tight to her. That's it. I know Karen. She is about to orgasm. I hold Kat's hips and fuck Kat's ass nice and hard and fast. Not a minute later Karen is cumming hard. \"FFFUUUCCCCKKKKK!\" The funny part starts after she cums. I had told Slut that she was not to stop licking Slave until I told her to or Slave would be punished.\n\nKaren is sensitive after a good orgasm, and Kat won't stop licking her. Karen is trying to push her away. Kat doesn't want Karen to take another punishment for her and is now hugging herself to Karen to keep from being pushed away.\n\nKaren is almost hyperventilating. \"Please. Please.\" She keeps begging.\n\n\"Slut stop licking Slave.\" Kat lifts her head and Karen falls back onto the bed gasping. I fuck in and out of Kat a few more times. Her moaning sounds like she is about done, and so am I. I shove in one last time and explode in her ass. I stay buried there enjoying the last few shudders of pleasure. Kat doesn't move until I pull out.\n\nOnce I pull out she drops to the floor with a huge sigh of relief. \"AAAHHHHHHH!\"\n\nI turn and head to the bathroom, I am covered in cum and lube. When I come out a few minutes later. Karen is spooned into Kat. Kat has Karen pulled tight against her larger chest, and is reaching around on Karen and just rubbing her nipples softly with her fingers. I climb on the bed with the complimentary skin lotion from the bathroom. I snuggle behind Kat, and softly rub the lotion into her spanked ass.\n\nKat rolls her face towards me. \"Thank You Master. That feels so nice on my bum.\"\n\n\"I am proud of you Slut. You took your punishment well.\" I say as I rub her pink ass.\n\n\"Thank You Master. I am very sorry I misbehaved.\" Says Kat\n\nI have Kat's ass well lotioned. I pull on her shoulder and lay her flat. As I do Karen rolls over on the bed to snuggle back against Kat. I stay on my side propped up on my elbow looking at both of them. \"Slut, you were such a trooper when I punished you, I am going to give you a reward.\"\n\nKat smiles, and Karen leans into her and kisses her cheek to congratulate her. \"I am going to allow you a choice. Would you like me to fuck your pussy next, or would you like Slave to eat your pussy?\" I ask.\n\nKat actually blushes and turns to Karen. \"Slave, I have been imagining you going down on me all night.\" She turns to me. \"Master, I have been so horny all night imagining you fucking me, but I need some TLC. May I choose Slave?\" Kat asks.\n\n\"You may choose Slave on one condition Slut.\"\n\n\"Anything, Master.\" Kat says.\n\n\"After Slave has eaten you, and made you orgasm at least once, you put on a show for me using the prop in your bag to its full potential.\" I say.\n\nKat looks at Karen, and grins. \"I would love to do that for you, Master.\" Kat says.\n\nI reach out and brush her hair out of her face, and behind her ear. Karen has started running her fingernails lightly up and down Kat's thigh. Kat just moans. \"Actually I have two conditions.\" I say.\n\nKat almost sighs as Karen continues to tease her. \"Yes, Master.\"\n\n\"I want to hold my Slut in my arms while Slave goes down on you. I want to feel you respond to Slave's tongue lashing, and to watch her go down on you.\" I tell her.\n\nKat's face lights up, and she hugs me tight, kissing my neck and ear. \"Thank you Master. Thank you so much.\" She says with a lot of emotion in her voice. She pulls back from her hug and I grab her face and kiss her hard. She surrenders to me and the kiss with a moan. I push her softly back onto the bed, and I see Karen staring at us.\n\n\"Ezzie, is Karen ok. She is staring at me with an odd look in her eye.\"\n\n\"She is ok Ben, but she is extremely horny and can think of nothing but getting fucked.\" Says Ezzie.\n\nI laugh in my head. She has no idea what's coming with Kat's show. I start moving up against the headboard to hold Kat against me. \"Don't just lay there gawking Slave, get down at the bottom of the bed so you can be the first woman to lick Slut's pussy.\" I say to Karen, then I ask Ezzie for help. \"Ezzie, I want Kat to have a really nice orgasm. Please listen to her, and nudge Karen & I to do whatever she needs or wants to orgasm.\"\n\n\"Of course Ben.\" Says Ezzie.\n\nAt first I wrap my arms around Kat just under her boobs and hug her to me, and I start whispering to her. \"I can't wait to hear you moan as Slave sucks your clit into her mouth. To feel you shiver in my arms as you cum.\"\n\nShe sighs as Karen gives her pussy a lick. \"Oh yeah. Oh wow. So soft & nice.\"\n\nI reach up with my hands and pinch her nipples and pull, until I hear Ezzie. \"Softly! Softly squeeze, twist and pull. Be gentle. Kat's husband always rewarded her after a hard punishment with soft and loving. It's what she wants, and needs now. I have Karen thinking she will be soft because she just took a hard punishment. She feels like she should pamper Kat.\"\n\n\"Thank you Ezzie.\" I say as I ease up on her nipples. I look down and I see Karen looking up at Kat's face. Kat's eyes are closed, and her mouth open a bit as she enjoys the sensations of having Karen go down on her, and me teasing her nipples.\n\nI look down at Karen. \"Slave, I think Slut is really enjoying a woman eating her out.\" I say.\n\nKat opens her eyes. She looks back at me and then down at Karen's twinkling eyes. \"Oh god yes, Master. I am definitely enjoying what both of you are doing to me.\" See says as she covers my hands in hers against her chest. She then takes one hand and reaches down the Karen's head. She runs her fingers through her hair. \"Slave, you are so beautiful. I can't believe I have a beautiful woman licking me, and I have licked you too.\"\n\nI lean down to Kat's ear. \"No more talking. Just enjoy. Would you want this to stop, and have me punish you again because you wouldn't stop talking?\"\n\nKat looks up at me with a smile, and just shakes her head No. All of a sudden her eyes go wide, her mouth opens and she lets out a very sexy satisfied moan. I glance down and I can tell Karen is now fingering Kat. From that point forward her orgasm is like a ball rolling downhill. Her sighs turn to gasps. Her gasps to panting. Her panting to heavy quick panting. Her muscles start spasming.\n\nI just egg her on by talking softly to her. \"Do you like your Master holding you while a Slave licks you to orgasm? Are you enjoying having a woman lick your sweet pussy for the first time? I bet you can't wait to use the toy you brought? I know I can't wait to watch. That's it Slut cum for your Master. Let go and cum for me.\"\n\nI am looking down as I talk to her and I see her bend her knees, and wrap her legs around Slaves body. Then I notice Sluts feet. Her feet are arched with her toes curled like they were cramping, and just as I notice this, Slut lets out an actual scream and she orgasms. Her legs tighten around Karen's body, and her hand grips my arm and squeezes me tight. I swear when her orgasm peaked she stopped breathing. I can feel her body clench up as she screams, and her orgasm hits her. A few seconds later she lets out a big gasping breath, and slumps against me, while I watch her legs just slide down off Slave's body.\n\nKat is still slumped against me enjoying her after orgasm high. Karen is smiling up at us from between Kat's thighs. Her face is covered in Kat's juices. \"Slave come give your Master a kiss.\"",
        "Karen crawls up to me and kisses me. I can feel it in her kiss that she wants more, and suddenly I do too. I break the kiss and push Karen back, and I roll Kat over my leg and out of my way. \"Slut do you want to see how I reward Slave when she has been a good girl?\" I don't wait for an answer. I grab Karen, spin her around and pull her legs to me. I look down at her pussy, it's swollen, red and wet. She is so ready. I push into her rather hard. Karen moans loudly.\n\nI start out hard. Kat has crawled along side us and is watching me pound Karen. Karen's pussy wasn't just wet. She was soaked, and she is getting wetter, I can feel it getting me wet too. I realize as I am fucking her like this, I am pushing her down the bed. There is no headboard to stop her. After I reposition for the second time I turn to Kat. \"Slut get on the floor and hold Slave's shoulders. If I push her off the bed you will both be punished!\"\n\nI swear when Karen heard me say that it made her cum. I can feel her clenching me as I fuck her. It's not the big one but it's definitely an orgasm. I look down and she is gasping and panting with her eyes closed. She opens her eyes as she feels Kat's hands on her shoulders. Kat is kneeling on the floor, bent over the foot of the bed, her arms locked bracing her. Karen turns and gives Kat a smile.\n\nJesus, I can already feel my own orgasm creeping up on me. Feeling her orgasm clenching me started me down that road. The moment I feel it I grab Karen's legs and hold them to my chest and give her my all. Like Karen has always asked. I Take Her. I am pounding into her. I feel like I am trying to run a four minute mile. I look up and Kat is seriously bracing herself trying to keep Karen in place. Karen's whole body is jerking as I fuck her. I don't think she is capable of talking right now. She is doing nothing but grunting, groaning & gasping as I slam into her. God I love watching her tits flop around like this. I hear myself almost growl as I slam into her one last time and cum. It feels so good. I finish and fall off her onto the bed. I am panting as I lay on the bed, when I hear Kat just say. \"Wow!\"\n\nI don't turn or look. \"Don't stay on the floor Slut. Get between Slave's thighs and lick her clean. Be sure to make her orgasm.\"\n\n\"Yes Master.\" Says Kat.\n\n\"Ezzie, does Karen feel better now that she has gotten fucked nice and hard?\"\n\n\"Oh most definitely Ben. She was hoping for a second orgasm, and was a little disappointed she didn't get there before you finished. But she is sure Kat will make her orgasm quickly. She was almost there when you stopped.\" Says Ezzie.\n\n\"Thank you Ezzie.\" I feel the bed move, but I just lay there catching my breath. I then hear Karen moaning, as I am sure Kat has started licking her. I lay there and decide before this night is out I am fucking them both in all three holes. That leaves Slut's pussy, and Slave's ass. I push myself up, and reach for the lube. I move towards Kat. \"Give me your hand.\" Kat puts her right hand up. I drizzle lube generously all over it, I turn her hand sideways and split her four fingers two up and two down. \"Slave needs her ass opened up, put two fingers in each hole and finger fuck her.\"\n\nKat just looks at me for a moment. \"Do it Slut or I will spank your ass red.\" I say. Kat moves her hand forward and pushes her fingers into each hole. Karen groans as she does. \"Good girl. Now lick her clit and finger fuck her until she cums.\"\n\nI get off the bed and sit in an arm chair as I watch. I can't really see what Kat is doing, her hair is all over the place blocking my view, but I can hear the kissing and wet slurping sounds. So I just sit and watch Karen's face, once she gets used to the two fingers in her ass you can see the pleasure take over. Just based on the slurping sounds, and the look on Karen's face. I think Kat is doing a good job.\n\nKaren's head starts rolling side to side, and she is grabbing the sheets in her fist. Oh yeah she is about to orgasm. She lifts her legs up some and they shake. \"Oohh Ffuuuucckk.\" She moans loudly, and her legs drop back onto the bed as they twitch a little.\n\nKat lifts up her face from between Karen's thighs, and I see her ease her fingers out of Karen. There is no rest for these two. \"Slut, go get your toy and put on the show I told you I want.\"\n\nI can see Kat looking at Karen. \"Ezzie, does Kat think she should give Karen a moment to rest?\"\n\n\"Yes Ben. She feels Karen needs a moment to recover.\" Says Ezzie.\n\n\"Slut, are you thinking of questioning my order?\" I ask.\n\n\"No Master. I just know Slave needs just a moment to catch her breath.\" Kat says.\n\n\"Ok, I want a show though, so here are your two choices. You both put on a show now, or you use both ends at once. You can decide while you are getting the toy. When you get back on the bed you need to do one of the two.\" I say.\n\n\"Yes Master.\" Kat says as she gets off the bed.\n\n\"Ezzie, what is she going to do?\" I ask.\n\n\"She is going to do it solo. She is nervous since she has never had something in both spots at once. She feels she owes Karen for taking the punishment at the club.\" Says Ezzie.\n\nKat climbs on the bed so when she spreads her legs I get a good look at her ass and pussy. She folds the dildo in half and pours lube on each end. As she rubs it in I realize it's a good sized toy. This should be fun to watch.\n\nKaren looks up and sees the toy, and then you can see light dawn on her face. She realizes what Kat is about to actually do. Gets up to her knees and says. \"Kat, no I can't let you.\"\n\nI hop up and give her ass a good hit. She screams and falls forward. \"What did you call her?\"\n\nKaren realizes her mistake. \"I am sorry Master.\" She says. \"I called Slut by the wrong name. I am sorry.\"\n\nI can hear it in her voice. That shot was a little harder than I meant. It stung. I was going to spank her more, but I have a better idea. I will let them control the punishment.\n\n\"You two need more discipline. Why is it a simple thing like a name trips you up? I will have to think about how to better punish you both in the future. For now I wanted a show & Slave you called Slut by the wrong name so there needs to be a punishment. Here are your choices, and no bickering about it. You two decide and tell me your answer. Slut you put on the solo show as you were planning, and Slave gets 10 hard spankings. Or you both put on a show with the dildo in your asses for a minimum of five minutes.\" I just look at them. They realize I am done and they move closer to each other to discuss it.\n\nIt takes just a moment when they look at me and Kat says. \"We have chosen anal, Master.\"\n\n\"Be warned if either of you slip tonight, you both get spanked. I don't care who does what, you both get punished. Am I clear?\" I say.\n\nI get two. \"Yes Master.\"\n\n\"Then get to it.\" I say.\n\nThey get into position so I get a good view, and move themselves together. They alternate their legs so each woman has one leg over and under the others. Kat takes it first and pushes it in her ass. I have already given her a good ass fucking. She pushes it with a small grunt. Karen shuffles in closer, and holds it to her ass. She moans a little as she pushes, but doesn't get it in. She repositions and try's again. It takes her a moment, but she pushes it in and gasps. \"Oh that's big.\" She moans as she tries to adjust and get accustomed to it, but I don't give them the time.\n\n\"Ladies start fucking each other or I will come over there and make sure it's done nice and hard.\" I say. They each groan as Karen is the first to hump forward. I sit and watch as at first they are very slow and gentle as they hump each other. The groans have turned to moans, and Karen is taking a bit of the lead. She is being a little more aggressive with the fucking.\n\nThey haven't taken it deep yet. There is a good distance between them. \"Ladies get those ass cheeks together and take that thing deep.\" They both go to push harder, and wind up ass cheek to ass cheek with one simultaneous push. They both moan.\n\nI see Karen look up. She notices Kat is rubbing her clit. She glances at me, and I say nothing. I didn't tell them they couldn't. Karen reaches down and rubs her clit.\n\nIt has been a huge turn on watching them. They have found a good rhythm as they hump against each other. They both have their heads on the bed, a hand on their clit as they hump against each other. It's actually a very sexy thing to watch. Both women grunting and moaning as they hump against each other.\n\nKat is the first to orgasm. She is definitely loud when she orgasms. This time she doesn't scream as loud, but someone in the hallway would have heard her I have no doubt. I notice she locks her hand over her clit as she cums, and shivers. She instinctively rolls onto her side to relax her legs, and the toy pulls out of Karen as Kat has a tighter grip on it. This is enough. Karen lets out a sigh, and a moment later a soft. \"Oh Fuck.\" As her fingers rub her clit and she orgasms. Kat reaches down and sighs as she pulls the toy out of her ass.\n\nI start applauding. \"Bravo. Bravo.\"\n\nKaren looks over at me worried about punishment. \"Master, did we make the 5 minute time?\"\n\n\"Oh yes Slave, you did. You and Slut were at it for 8 minutes.\" I tell her.\n\nI can see it in Karen's eyes. I didn't tell her the time was up. Well truth be told they never asked me to, and never asked me the time either.\n\nI go to the bed, and Kat is closer. I lean down and give her a very soft passionate kiss. I crawl onto the bed and do the same with Karen. I climb up to the head of the bed, and pat each hand beside me. They take the hint and crawl up beside me. I put out arms for them to snuggle against me.\n\nThey are laying against me on each side. I have been hugging each one to me, and rubbing their backs. They are both relaxing with their heads on my chest. When I break the silence. \"There is just one thing left for both of you to do.\" I say. I let it hang for a moment, and I feel them both tense up. \"Well actually I have a problem. I am but one man with two beautiful and sexy women in my arms that I need to make love to. I guess my only solution is to lay you Kat and you Karen side by side. That way I can make love to both of you, swapping back and forth.\"\n\nKaren is first to recognize what I am saying by using their names. She moves herself up and kisses me hard. Just before Karen's lips land on mine I see Kat's face light up. She scoots up and starts kissing my neck.\n\nI nudge them back. \"I have just one rule ladies.\" They both look down at me with a big smile. \"No one is ever left out or not involved. Like the old song goes Loving, Touching, Squeezing, Each Other. Neither of you should just be laying to the side watching. Who is first?\" I ask.\n\nKaren is quick to answer. \"I insist. Guests first.\"\n\n\"I agree.\" I say as I sit up. I move out of the way and watch as the ladies shuffle closer to each other. I move towards Kat, and she spreads her legs for me. I look up at Kat. \"How is I haven't fucked this pretty pussy yet?\"\n\nShe smiles at me. \"Because I called Karen by her name and not Slave. So you fucked my ass as punishment. I will be honest though, it wasn't much of a punishment.\"\n\nI smile at her as I rub my dick along her pussy lips. \"Yes I did, and I came in that cute ass too, and I will remember it's not a real punishment in the future.\" And I push into her. Jesus she is tight. Wow!\n\nKat just moans and wraps her legs around me. \"Slow Ben. Please. It's been so long. I want you to make love to me. Will you do that please?\"\n\nI don't even get to answer. Karen is beside her. \"Of course he will. We will both make slow gentle love to you.\" Karen says and she gives Kat a soft gentle kiss as she reaches for Kat's nipples and gently rolls them in her fingers. Karen and I gently make love to Kat for a few minutes when I look at Karen.\n\n\"Your turn Karen.\" I say.\n\nKaren turns to me with a serious look. \"Don't you dare stop.\"\n\nI give her a confused look, and Kat says. \"No, we need to share.\"\n\nKaren puts her hand on my arm holding me down. \"No Ben, you are making love to her. No sharing. Make love to her and make her orgasm.\" She lets me go and moves to Kat. She rubs her fingers through Kat's hair, pushing it back out of her face. \"Sweetie, I can't imagine the pain and loss of losing Ben, and on top of that being pregnant, becoming a single Mom and working my way through college. Sweetie, you are my hero. I may not be able to help with that, but I can make sure Ben makes sweet, sweet love to you.\"\n\nKat starts crying. Karen nudges me aside and holds her. Kat just starts sobbing. \"I am so sorry. CRY. I so miss sex and someone holding me. CRY. I miss John. I used to Love being submissive to him. Just having him have his way with me. CRY. CRY. Ben is just like him. So firm and then so gentle at the end. CRY CRY CRY. I miss that. CRY. CRY. CRY.\n\nKaren just holds Kat and lets her cry. I sit there feeling bad on the bed. I was the one to put the thoughts in Kat's head. I opened these floodgates for her. It takes a few minutes for Kat and Karen to stop crying. I am not sure when Karen started crying, but her eyes are red and teary.\n\nKat looks up at Karen and sees her puffy eyes and they just hug again. Karen pulls back after a moment, sniffles and wipes her eyes. Then she points at me, and giggles. \"Aw we cried the hardon out of him.\"\n\nKat giggles. \"Aw poor Ben. What should we do?\"\n\nI lay back on the bed and smile as I spread my legs. \"Well I did shave my balls because Karen wanted to try sucking them. Hint. Hint. Hint.\" I say.\n\nKat looks at Karen. Karen giggles. \"I did tell him I read somewhere some guys like it.\"\n\n\"Some do.\" Says Kat with a smile.\n\nKaren giggles. \"Oh you dirty girl.\"\n\n\"Ladies. The way I see it I have two women with big mouths.\"\n\n\"Hey\" They both say.\n\n\"And I have a cock and balls that need to be sucked, or should I go back to Master mode?\" I say with a smile.\n\nKaren starts crawling between my legs. \"You call a guy Master a few times and he thinks you are his Slave.\"\n\nKat interrupts. \"Or his Slut.\" She adds with a giggle.\n\nKaren giggles with her. \"And he thinks he can just boss you around.\" Karen holds one of my balls up with her fingers and sucks it in her mouth. Oh shit. That's different, then I groan in pain.\n\nBefore I can say anything Kat says. \"Go easy Karen.\"\n\nShe lets my ball out of her mouth. \"I am sorry Ben.\"\n\n\"It's ok Honey. It was nice when it was gentle. Try it again please.\" I say.\n\nKaren smiles, and tries again. She is gentle this time and is watching me as she does. She sees my hardon twitch, and she smiles.\n\nKat giggles. \"I think that's my cue.\" She bends down and sucks me into her mouth. Kat does an amazing job sucking and licking on the head of my dick. Karen's head is in the way so Kat can't take me deep, but her constantly flicking tongue is amazing. I just moan. Karen softly sucks one and then my other ball, while Kat sucks on me.\n\nKaren lets my balls fall out of her mouth and nudges Kat. \"I think he is ready for you.\" Says Karen.\n\nI can see Kat's face change. \"You mean us.\"\n\n\"No Sweetie.\" Says Karen. \"I mean you.\" Karen leans forward and kisses Kat. She pulls back. \"Katherine, the last man you slept with was your husband, years ago.\" She looks at me and smiles. \"He literally attacked me the minute I walked in the door earlier today. This,\" She says as she wiggles my dick in her hand. \"Is yours right now, and you get to choose how.\" She caresses Kat's cheek. \"How do you want to Fuck Ben?\" Karen asks with a big smile as she emphasizes Fuck.\n\n\"Can we try missionary again. I want you beside me to kiss, hug and hold.\" Says Kat.\n\n\"Sweetie, nothing would make me happier.\" She playfully slaps Kat's hip for her to lay back. We shuffle around, and Karen hugs me. She says softly in my ear. \"Make soft, gentle love to her Ben.\"\n\n\"I promise.\" I say as she kisses my cheek, and she lays down next to Kat. \"Ezzie, I want this to be amazing for Kat. I want her to have a mind blowing orgasm. Nudge me and Karen for whatever Kat needs, and a help Kat however you can to get more excited, but I don't want to do anything to her. I guess if something feels good, I want her to think it feels amazing. Can you do that?\"\n\n\"I can to a point Ben. Women are more emotional than men. I can notch up her emotional responses to make it better for her.\" Says Ezzie.\n\n\"Ezzie, I don't want her getting sad and crying again.\" I say.\n\n\"No Ben, I know that. I mean her pleasure and excitement. I know she is fragile right now Ben. I will make sure this is nothing but enjoyable for her.\" Says Ezzie.\n\n\"Thank you Ezzie.\" I say as Karen is now beside Kat. A soft gentle hello kiss has turned into more with them. Ok game on. Let's try this again. I rub myself along her puffy pussy lips again. I know she is tight. I am expecting it, but I can't help but moan. God it feels good as I push in the head of my dick. Kat puts her hand to my chest. I just stay put for a moment.\n\nI then feel Kat put her legs around me again. She wraps her legs a little tighter around me and pulls me into her. She moans in pleasure as she keeps pulling me in. I let her control the pace, until before you know it I am balls deep. She holds her legs tight around me. \"Oh so nice. It's been so long.\" Kat looks me in the eye. \"Part of me doesn't want you to ever move, but at there is a louder voice in my head screaming for you to fuck me.\"\n\nI lean down and kiss her. I am as gentle, and soft as I can be as I slowly push my tongue in and out of her mouth. After a minute of kissing her like this, and having her moan as I kiss her, I break the kiss. \"Yes Please, Ben. Fuck me just like that....Please.\"\n\n\"It would be my pleasure, Kat.\" I say. I pull back out about halfway and push back in. Just a nice slow steady back and forth. It takes a minute or two to go from real slow half strokes, to full strokes at a slow to medium pace. Just an easy back and forth. I watch Karen and Kat kiss, Karen teases her nipples with her fingers and mouth.\n\n\"Just a little harder and faster Ben.\" Just as Ezzie says it I feel Karen's fingers on Kat's clit. \"I have Karen reaching down to play with Kat's clit. She needs just a little more.\" Says Ezzie.\n\n\"I start fucking her a little faster and harder. I start to feel Kat's pussy grip me every here and there. Then it becomes more regular.\n\n\"Oh Ben, you read my mind. Just like that please. I am going to cum.\" And just like that with a breathless, panting statement she does just that. She screams and her pussy grips me like a vice. Her head is rolling side to side, her eyes are closed and Karen and I aren't stopping.\n\nAs I see Karen pull her hand away from Kat's clit, Ezzie is in my head. \"Stop and pull out Ben. She needs a moment.\"\n\nI look and Kat is laying there her eyes closed, a sad smile on her face and she is softly mumbling. I can't make it out. Before I can ask Ezzie she is in my head.\n\n\"Ben, did I just do the right thing?\" Ezzie asks, sounding nervous.\n\n\"What do you mean Ezzie? What did you do?\" I ask.\n\n\"Kat was seeing her husband in her mind as her orgasm hit. She started to apologize to him for enjoying submissive sex again with another man and moving on. I had his memory tell her he wanted nothing more than for her to be happy. He wanted her to find love again and to live her life. She is sad but happy too.\" Says Ezzie.\n\n\"Ezzie, that was a very kind and beautiful thing to do. You are a very kind soul. She had locked everything up, and tonight I released a lot of it unintentionally by having you make her imagine having sex with us. Maybe she can start to heal a little.\" I say.\n\nKat opens her eyes and they are a little teary. She sees the concern on my face. \"They are happy tears.\" She sniffs. \"But I need a hug. I need a man to hold me.\"\n\nI drop to the bed beside her and hold my arms open. She comes to me and I hug her. She just sighs and relaxes in my arms. We lay there together for a moment. Kat just relaxes in my arms, with her head on my chest.",
        "After a few minutes Kat lifts her head and looks at my watch. She groans. \"I don't want to, but I have to go. I need to get home to my son.\" She looks at me, and then gets sad. \"Oh Ben, you didn't cum. I can't leave you hanging.\"\n\nKaren giggles beside us, and rubs her back. \"Katherine, I promise you the minute you leave he will be trying to rectify that situation with me. You need to wash up before you get dressed.\" Karen pats Kat's bum, and gets off the bed. \"Come on let's get you washed up.\" Karen puts her hand out to Kat.\n\nKat smiles. \"Yes Ma'am.\" And she lets Karen help her up.\n\n\"Wait a minute, two women in the shower? Can I get washed up too?\" I ask.\n\nKaren just gives me a loving look. \"Honey, I am just helping Kat wash her back. Nothing sexy. We can take a fun shower in the morning, I promise.\" Karen walks Kat into the bathroom, and I hear the door close. I flip back onto the pillow and next thing I know Karen is crawling into bed beside me and the room is dark.\n\nIt takes me a moment, but I realize Kat is gone. \"Where is Kat?\" I ask.\n\n\"She went home, about 15 minutes ago.\" Karen tells me.\n\n\"Why didn't you wake me?\" I ask.\n\nKaren giggles. \"Check your phone.\"\n\nWhat did they do? I grab my phone and there is a new group chat with me, Karen and a strange number. I open it up. There are three pictures, one of my deflated dick with Kat's laughing face, one with Karen's and then a group photo.\n\nKaren sees my face and now she is laughing. \"Come on. Really?\" I grab her and pull her to me. \"You know payback is a bitch.\" I say.\n\nShe leans down and kisses me. Karen pulls back from the kiss. \"Today has been amazing, but I want you to make love to me now. I want to have slow gentle sex with you. I want to kiss you, and to feel your hands sliding up and down my body. I want you inside of me when I orgasm. I want you.\"\n\nShe grabs me in her hand and smiles as she feels me stiffen. \"Oh you like the sound of that, don't you?\"\n\nShe crawls over my legs, and grinds her pussy against me. Once she is sure I am hard and she has rubbed her juices all over me she reaches down and slides me in. We spend the next 45 minutes at least slowly bumping and grinding. Her on top, missionary, doggy whatever. It was true love making. She came multiple times, and by the time I came we were both exhausted and fell asleep.\n\nI wake up the next morning and smile as I smell Karen's hair in my face and feel my arms wrapped around her naked body. I think about it every time I wake up with her in my arms. What an AWSOME way to start the day.\n\nIt's still early, and I don't care if she is asleep. I pull away from her and roll her on her back. I crawl to the bottom of the bed and spread her legs as I lay between them. She has just started to stir as I start going down on her. For about 30 seconds she moans and gasps as she wakes up. I think her subconscious mind has trouble reconciling dream vs reality.\n\n\"Oh Ben!\" She moans as she runs her fingers through my hair. \"Oh I could wake up like this everyday.\"\n\nI eat her for breakfast. I make her cum once, and I go back for seconds. She makes a delicious breakfast. She starts begging me. \"Please Ben. I need you inside of me. Please\"\n\nSorry Honey, this isn't a make love kind of morning. I reach up for her nipples and really squeeze down on each one. \"What did you call me Slave?\"\n\nShe groans with the pinch, and the realization we are in Master/Slave mode.\n\n\"Why do I have to keep punishing you for calling someone the wrong name?\"\n\nI can hear it in her moan. She didn't want a punishment she wanted sex. \"Slave I will make you an offer 10 spankings and a fuck, and if you misbehave again you could be spanked again. Or let's find out where your spanking limit is. I will spank you harder and harder until you find your limit, and then there will be no more spanking for the weekend. The weekend will only be pleasure.\"\n\n\"After you find my limit will have sex?\" She asks.\n\n\"Slave, I will never take sex with you off the table. Hard or soft, I will always fuck you. In fact I think it's appropriate if we are to be hard on your ass, it should be a nice hard fuck too, after last nights soft loving sex.\" I say.\n\n\"Ezzie, what is she thinking?\"\n\n\"She is nervous and excited. She knows it's going to hurt, but she is looking forward to finding her limits, and then having you take her.\" Says Ezzie.\n\n\"Thank you, Ezzie.\"\n\nI notice my clothes and I see my cargo belt that is made by vets with recycled firehose and then my sneakers or more to the point my shoe laces. I get up and go for my clothes. I point to the floor. \"Stand and don't move.\"\n\nI see Karen get up and stand on the floor. Like last night she puts her hands behind her head, and stares at the floor. I pull out a shoelace and then my belt. I loop my belt over my neck and walk in front of Karen. I can see the worry in her eyes as she looks at the belt around my neck. \"Hands.\" I tell her.\n\nKaren brings her hands down and I clasp them together and loop them twice around her wrists before tying it. I take the belt off my neck, fold it in half and Snap It. It makes a loud SNAP. Her eyes go wide. \"Kneel beside the bed, and lay across it with your hands stretched out in front of you.\" I take her chin in my hand, and hold her face looking at me. \"This is all on you. I will keep hitting harder and harder until you say the safe word. We need to find out where your limits are if you think I go to easy on you.\"\n\n\"Yes Master.\" She says softly. She is nervous. I can clearly see it on her face as she turns, kneels on the floor and bends over the bed. She turns and looks at me. \"I am ready Master.\"\n\nI turn and start with a firm swing. Karen gasps loudly and the belt leaves a clear bright pink mark. I turn and smack the other cheek just a tick harder. She yelps, and I give her a moment and I swing a little harder again one cheek, then the other. She buries her face in the blanket and yells out. Her hips are wiggling. These have hurt her.\n\n\"Ezzie, how is my girl?\" I ask.\n\n\"Ben, those last ones hurt her, but she is refusing to call out.\" Says Ezzie.\n\nI decide I will give her one more on each cheek. If she doesn't call it I will. I have no wish to beat her or to leave her with welts on her ass. I actually pull the last two a little. She cries out. She is trying to hide it, but I can hear her crying into the sheets. FUCK!\n\nI hold my Master tone, as I lay my belt across her ass. \"Don't move.\" I grab the lotion out of the bathroom, and come back. I pull the simple knot loose on her wrists. I can see a red mark from where she was pulling on it.\n\nI stand her up and hug her. \"She cries into my chest.\" I just hold her until she calms down some. I nudge her towards the bed and have her lay face down. I lay beside her and start softly rubbing in the lotion. Her skin keeps sucking the lotion in, so I have to add more. You can see the different marks on her ass. I am ok with the pink, and even the light red. I feel bad about the red ones.\n\nI lay down beside her and roll her onto her side so I can look at her. I push the hair out of her face. Her eyes are red. \"Karen why didn't you say the word?\"\n\nI can see fresh tears in her eyes. \"I wanted to prove to you I can take it. I feel like I let you down.\" She cries.\n\nI hold her to me. \"Honey, you couldn't be more wrong. I am in awe, at what you can take. But I don't want to Beat you. There is a big difference between that pleasure and pain line, and I am pretty sure I crossed it. I Never Want To Hurt You.\"\n\n\"I wanted to make you proud.\" She says sniffling.\n\n\"Honey, I have never been happier since we got together. I have always been proud of you, but that doesn't mean you have to let me beat you.\" I hold my hand to her cheek. \"Answer me honestly, were you excited when I tied your hands?\" She gives me a shy smile and nods yes. \"When I made you kneel at the bed?\" Another nod. \"When I gave you the first spanking?\" Again a smile and nod. \"And now be honest. The second and third hit?\"\n\nI can see her get upset. \"No.\" She whispers out.\n\n\"Then we found the pleasure/pain line. You didn't have to prove anything to me. I don't want you to Ever do something like that again. If anything Ever Hurts say the Word. Promise me that.\"\n\nShe wraps her arms around my neck. \"I promise, Master.\" She giggles and then says. \"I Love You! Benjamin.\"\n\nShe pulls away from the hug, and I see her smile. She climbs off the bed and resumes kneeling beside it, and bends over with her hands clasped together. \"We did part one Master. Are you going to fuck me hard like you promised?\" She asks as she wiggles her ass.\n\nI get off the bed and grab a fistful of hair and pull her up. She turns and just opens her mouth sucking my mostly soft dick into her mouth. I am rock hard in record time. I push her onto the bed. Kneeling she is too low. I pick up her hips and push her up onto the bed. I pick her hips up so she is now on her knees on the bed. Much better I push right into her. None of this is loving or gentle. I am fucking her. I am also trying my best not to grip and hurt the red spots on her ass. I bend my knees and try my best to fuck up into her. This she really likes.\n\nShe is moaning and groaning, but my knees are getting sore. This is an odd angle. I pull out and flip onto the bed on my back. I hold out my arms. \"Take me. Make me yours.\" I say with a smile.\n\nKaren jumps on me. \"Wow she likes that idea. She hops on and rides me. At first she is fucking herself up and down on me. This changes after a few minutes to her sitting all the way down on me and rolling her hips. That quickly changes to her angling her body so her clit is grinding hard against me, and she orgasms, but keeps going. Her orgasm squeezes me just right and next thing I know I am about to cum.\n\nKaren starts egging me on. \"That's it Ben, fuck me. I want your cum inside me. Do you like my little pussy fucking you? Do you hear how wet I am?\"\n\nI let out a big groan and hold her hips to me, as I stay nice and deep inside her as I cum. I look up, and Karen is smiling down on me. \"God I love watching you, knowing I made you feel that good.\" She says as she wiggles on me.\n\nI reach up and grab her arms and pull her down to me. We kiss passionately. I feel myself slip out of her, but we keep kissing. She pulls back. \"Shower?\" She asks.\n\nI just smile. \"Just a shower?\" I ask.\n\nShe climbs off me, looks at my crotch and giggles. \"It's about time you made a mess of yourself.\" I look down. When I had slipped out, she stayed in place kissing me. This allowed everything I shot into her to drip out onto me thanks to gravity.\n\nI smile at her. \"Yeah. Shower.\"\n\nI check out electronically and we walk to my car. Breakfast at the hotel looked ugly so we stop. We are planning the weekend when it dawns on me. \"I am playing cards tonight.\"\n\nKaren giggles. \"Yes you are, and I will be your personal cheerleader.\"\n\nCheerleader! My eyes light up. Karen's face drops. \"Me and my big mouth.\" She says with a half smile.\n\nI grab my phone, and text a classmate I helped with swimming lessons, to text his girlfriend to ask about a real cheerleaders outfit for school. A few back and forth texts and $100 later. We set up a time to meet his girlfriend at the athletic center. She is going to give Karen a brand new shirt and skirt in her size.\n\nKaren has white sneakers. \"Now you need school color socks and a thong.\"\n\n\"Don't I need tights or yoga shorts?\" She asks being hopeful. I just give her a Big Grin. \"Let me guess no bra either?\"\n\nI just keep smiling. \"No Saying No!\"\n\nShe narrows her eyes at me. \"I am so going to make you pay for this on my weekend.\"\n\nI just laugh. I hand the waitress the credit card to pay the bill. We hop in the car to go pickup the outfit, and then go shopping.\n\nWe are looking at the things for the right color and Karen sees a beautiful white silk and lace nightgown. She would look stunning in it. I reach over and grab her size. She turns to me. \"Ben, no. You buy me so much lingerie.\"\n\nI smile at her. \"You will have plenty of time to wear it all for me after we are married.\"\n\nShe grabs my face in her hands and kisses me so softly. \"I can't wait.\" She whispers as she pulls away.\n\nThe rest of the day is uneventful. We are in my room, after an early dinner getting ready for the card game. God bless my classmates girlfriend. She gave Karen the V-neck shirt. Man Karen fills it out nicely. It's nice and snug and shows off her C cups, and some very nice cleavage. The skirt is a short cheerleaders skirt. She will be flashing everyone her ass and more all night.\n\nShe sees me staring at her. She twirls. \"You like?\"\n\n\"I love it.\"\n\n\"You realize everyone is going to see a lot of me.\" She says.\n\n\"And I think part of you likes it. Just like when you went up on stage last night.\" I say.\n\nShe smiles. \"That was kind of fun.\"\n\nI laugh. \"Yeah I thought so. Don't forget though tonight is still Master and Slave without the names.\"\n\nShe looks at me. \"What are you planning in that head of yours?\" She asks.\n\n\"Other than winning at cards, and having my own little cheerleader, waitress, lap warmer, and Slave sitting in my lap all night. Nothing. Well no wait that's a lie.\" I say.\n\n\"I knew you had something in that head of yours.\" Karen says.\n\nI hug her to me. \"First off, how is your bum?\" I ask.\n\n\"I told you earlier I can feel it, but I am ok. What if someone notices it tonight.\" She asks.\n\n\"Make up whatever story you want. I will back you 100%.\" I say. We head downstairs and Karen stands out in the crowd as the only girl there, and god she looks good. Bob complains, but my roommates step in to defend her, thanks to Ezzie previously making them respect her.\n\nThe game starts and I pat my leg. Karen smiles and sits on my leg. I sit there rubbing her thigh. Buy in is $100, while chips are being passed out and cards shuffled. Ezzie and I talk. She tells me how she and the previous ring bearer worked it. She will call out all cards at first, and then advise me of anyone with a hand that can beat me.\n\nThe first few hands I try and get into sync with Ezzie. To be honest it's like having a TV announcer in my head. As I start getting comfortable, I start getting more aggressive in my betting.\n\nAfter Karen gets me a fresh beer she stands behind me and starts rubbing my shoulders. Wow it feels nice. She is so good at it. The next hand is dealt, and Jim coughs. I look up and they are waiting on me to pick up my cards. I pick them up in a neat stack and hand them to Karen. \"What should I do?\" I ask her.\n\n\"Ezzie, what is she seeing?\" I see the cards.\n\nKaren is too fast. \"You will fold and enjoy my back rub.\" And she tosses my cards down.\n\nFuck it. \"You heard the lady.\" I say as I push in my cards and bet. I lean back and enjoy my back rub.\n\nThere is one big mouth, Bob, at the table I use Ezzie heavily on. At first I bet enough to make him back out. He is losing and his mouth gets bigger. After having Ezzie make him fold. He loses it when I flip my cards intentionally to show him he would have won. He rants and makes reference to Karen.\n\n\"The only reason you brought her is because you know we all think you are a fagot.\" Bob says.\n\n\"Ezzie, is that true?\" I ask.\n\n\"No Ben. He is trying to make you mad.\" Ezzie says.\n\n\"Oh he is doing that, Ezzie.\" I tell her. \"Maybe I am. Maybe I am not. Either way I have a lot of your chips in front of me.\" I say.\n\nKaren speaks up. \"Well Honey, I know you Always put a smile on my face.\" She looks right at Bob. \"Is it cool if I liked having sex with another girl?\"\n\n\"Fuck yeah.\" He says.\n\n\"But it's not ok for two guys? You stupid narrow minded prick.\" She says.\n\nI pat her thigh, and kiss her cheek. \"He isn't worth it Honey.\" She turns and gives me a soul sucking kiss. She breaks the kiss and Bob is just staring. \"Thank you Honey.\" I say.\n\nThe dealer just starts dealing a new hand. I decide I want to wipe Bob out. Next hand I have crap. Jim has a decent hand, that is better than Bob's hand, but he has no confidence. He has been losing a lot, and is going to fold. I have Ezzie have him stay in, and bet big.\n\nBob is Sure he is bluffing Thanks to Ezzie and he raises and loses BIG. Jim is thrilled he won.\n\nNext hand it's me and Bob again. He is sure he has the winning hand with a high straight, but I lucked out and got a flush.\n\nHe raises me. \"Go ahead fagot, call me.\" Bob says.\n\nI have had enough. I look at his pot and raise him to make it all in. \"Ezzie, please have him call my raise.\"\n\n\"Done, Ben.\" Says Ezzie.\n\nHe pushes in his chips, and then screams \"Fuck You Fagot!\" After I flip my cards, he jumps up from the table. I jump up pushing Karen behind me. He just stares at me.\n\nMy roommates stand up. \"Enough guys. Bob, back up. If she gets hurt you will have a problem with all of us.\" Says Jim.\n\nBob storms off. I have had enough. \"Ezzie, can you make Bob imagine sucking a guys dick, and getting fucked up the ass?\"\n\n\"Of course, Ben.\" Says Ezzie.\n\n\"Can you make those images and thoughts get stronger every day, until he actually has sex with a guy?\"\n\nI ask.\n\n\"Yes Ben.\" Says Ezzie.\n\nFuck him. \"Do it Ezzie.\"\n\n\"Done.\"\n\nKaren is patting my arm. \"Easy Ben. I am ok. Easy.\"\n\nI didn't mean to, but I was holding Karen tight behind me when Bob started to flip out. I ease up and look at her. \"Sorry, Honey.\"\n\nKaren kisses my cheek. \"I love you.\"\n\nWe try to resume the game, but the mood was killed by Bob being an ass. We count the chips. I have a little over. $200. I basically have all Bob's chips. I'll take it.\n\nThe guys decide they should call their girls over and turn the night into a party. An hour later there are two joints being passed around and I am sitting there with Karen in my lap. I am letting my hands just roam over her body. I am thinking she deserves a reward for being such a good girl tonight.\n\nI start talking softly to her. \"You know 'the bag' is upstairs on my closet floor.\" She just looks at me like a deer in the headlights. She knows something is coming. \"I want you to go upstairs, put on the new lingerie and nothing else, turn on the remote and put it in your pretty little pussy. Then come back down to me.\" She looks at me. This is a new step for us. I raise my voice to a regular level. \"Slave are you questioning me?\"\n\nShe is quick to answer. \"No Master.\"\n\nI pat her thigh. \"Good girl.\" I pat her thigh. \"Go.\" She climbs off my lap and walks upstairs. I look up and everyone is looking at me. \"What?\"\n\nJim's girlfriend Diane speaks up. \"Slave? Master?\"\n\nI decide to keep it simple. \"She lost a bet and agreed to be my Slave for the weekend. The only rule is No Saying No. She can not refuse me.\"\n\nMatt's girlfriend Trisha asks. \"Just slave? No refusing you?\"\n\nI just smile. \"Would you feel better if I clarify it for you Trisha? I know what you are hinting at. Yes she agreed to be my sex slave, and she has been a very good girl so I just promised her a reward. She is upstairs getting it...and here she comes.\"\n\nEveryone looks at the stairs. Karen is coming down the stairs in the white lingerie I bought her. The silk top is hanging by two spaghetti straps, and is perfectly snug across her chest. From under her boobs to her waist is a sheer lace, around her hips is again the silk. It it just a few inches below her crotch. I swear my heart stops when I see her in something like this. I hope I never tire of looking at her.\n\nShe realizes all eyes in the room are on her, and she blushes and smiles. God I just want to bend her over the couch and fuck her, but I know she likes this too. She got so excited at the club last night.\n\nI sit up and have her stand in front of me. I look up at her, and I flick my finger along the hem of the dress. \"Slave, is this the Only clothing you have on?\"\n\nI see her blush a little as I call her out in front of people. \"Yes Master.\"",
        "I slip my hands up under the front of her gown, and feel her up. I feel no thong, and my fingers rub along her naked pussy. Then I feel the antenna for the toy. I pull my hands out, and pat her silk covered ass. \"Good girl. Go play waitress. Get everyone fresh drinks.\"\n\nShe smiles and turns to get fresh drinks for everyone. She brings me mine last. I pat my lap and Karen sits, trying to be careful of the hem of the lingerie. She is trying not to flash the room. I wrap my arm around her and pull her to me and kiss her. As I do I know I pull her gown up, because I hear one of the girls say a little surprised. \"What is that?\"\n\nI break the kiss and Karen shifts in my lap trying to cover herself again. I just smile. \"You mean the little antenna sticking out of my Slave?\"\n\nTrisha laughs. \"Um yeah.\"\n\nI hold up my phone. \"It's her reward.\" I hit the random button, and Karen gasps. \"It's a remote controlled vibrator. It's controlled by an app.\" I turn my phone to show them. \"Right now it's on random.\" Karen sighs as I am sure the speed changed.\n\n\"So you are going to just vibrate the poor girl in front of everyone.\" Says Trisha.\n\nI look at her. \"Says the girl that blew her boyfriend topless in front of three other couples doing the same thing.\"\n\nTrisha turns beet red. \"I don't know what happened that night. It was crazy. I still don't believe we all did that.\"\n\n\"Ezzie please have the other girlfriends agree to my next suggestion.\" I say.\n\n\"Guys I think you should return the favor, and make the girls orgasm. I think all the girls should pull off their pants, sit on their boyfriends laps with their legs spread and let their boyfriends finger them to orgasm.\" I say.\n\n\"Done.\" Says Ezzie.\n\nJoe's girlfriend is the first to respond. \"Fuck it. This is hot.\" She kicks off her shoes and pulls her yoga pants and thong off. She turns and whispers softly to Joe as she kisses him. She then turns and sits in his lap and spreads her legs.\n\nJoe's look is one of disbelief. He reaches between her legs and softly rubs her pussy. \"Ezzie what did Sheila say to Joe?\"\n\n\"He has been asking her to try anal. She got very turned on looking at and watching Karen. She told him if he is very gentle and gives her a good orgasm she will try anal later.\" Says Ezzie.\n\nOh you kinky girl I laugh in my head. I look around and all the women now have no pants on and their boyfriends are fingering them. I look at Karen. She is watching it all, until the random buzzing goes high. She rolls her head back as her eyes close.\n\nI whisper in her ear. \"See what your sexiness inspires.\" She just opens her eyes, and stares at me as I watch her orgasm. It's pure lust on her face. Just seconds after her orgasm the random vibrations go super low. \"Is that too low Slave?\"\n\nShe knee jerks and says. \"Yes.\" Then I can see in her eyes she knows she made a mistake. I flip the app to high speed, but keep the random vibes. Karen yelps and starts squirming in my lap.\n\n\"One more orgasm Slave.\" I say as I peel her shoulder straps down and tease her nipples. I start pinching and pulling a tad hard. She just moans, as she squirms in my lap. Her breathing is getting faster and shorter. I can feel her body tensing. I look up as I hear a woman moan.\n\nSheila has her hand holding Joe's hand between her legs as she orgasms. Diane and Trisha look close too. Both of them are humping their hips against their boyfriends hands. I am watching the women around us when Karen yells out. \"AARRGGHHHH!\" Her whole body is trembling. \"Please Master.\" She begs breathlessly. \"You promised.\"\n\nI tap the toy off. \"I was just making sure you were done.\" Karen slumps against me shivering. I hold her to me, and tilt her head up. \"Look at what you inspired.\"\n\nShelia is cuddled against Joe, Diane is kissing Jim after her orgasm and Trisha is shivering on Matt's lap. I just hold Karen to me. I give her a minute and say. \"Would you like to reward your Master?\"\n\nShe smiles and nods her head yes. \"Good. Go get the small and medium butt plug, lube and the mouth ring.\" I tell her.\n\nI can see in her eyes, she is disappointed with the mouth ring, but she says nothing and gets up.\n\nShelia looks up, and sees Karen leave the room. \"Is she ok?\"\n\n\"Yes Shelia. She went to get a little something to repay the favor.\" I say.\n\nDiane looks up. \"What could she possibly need to blow you?\"\n\n\"Ezzie, help me out. I know Joe & Shelia were talking anal. The butt plug is on them. Can Trisha or Diane deepthroat? Or do either of them think about bondage?\"\n\n\"Trisha has let Matt handcuff her when they have sex, and she enjoyed it. She tries to deep throat, but has had some difficulty doing it.\" Says Ezzie.\n\n\"Ok have Shelia agree to the butt plug so she can let Joe fuck her ass, and have Trisha reluctantly agree to the mouth ring.\" I say.\n\n\"Done.\"\n\nI see Karen coming down the stairs. I hold up my hand to stop her. \"She is bringing 3 different toys down. I bet there is at least one couple that will want to try one. If I am wrong I will forfeit my winnings tonight, that's a little over $200. If I am right the woman that does want to use it, has to agree to be her boyfriends sex slave until the sun comes up.\"\n\n\"That's a steep price.\" Says Trisha.\n\n\"Agreeing to having sex with your boyfriend is a steep price? I am not saying you are going to get whipped and beaten. It's just a night of, if your boyfriend wants to try something sexually you promise to try it.\" I say.\n\n\"Ladies look at your men. Do you think they want to hurt you? They just want to get laid and have fun.\" I say.\n\nAfter a moment of hesitation Shelia says ok. Trisha and Diane agree once Shelia does.\n\nI wave Karen to me. I point to the TV stand and Karen puts the ring, plugs & lube down. She comes over and stands beside me. I reach out and flick the antenna still sticking out of Karen. And of course Slave is done with this so if a lady would like just come over here and pull it out of her, I am sure my Slave would be happy to put in you.\"\n\n\"Diane, you asked earlier what would she need to blow me. It's not what she needs, but more what I love.\" I pull off my shirt and push off my pants to cat calls and whistles from the girlfriends. \"Slave get the mouth ring, the larger plug and the lube.\"\n\nKaren stands there holding the items. \"Turn around, and bend at the waist with your hands on the seat cushion.\" I lube the plug, and put a little or her asshole. I line up and push the plug in. She doesn't even groan. I should have had her get the big one.\n\n\"Now kneel.\" I say. Karen drops to her knees and holds the ring up in her hands offering it to me. I am surprised at the level Karen has fallen into the submissive roll. I take the ring from her, and I look around the room. Everyone is just watching in awe.\n\nOnce I have the ring Karen tilts her head up to me and opens her mouth. I push the ring in, and she bows her head down to give me better access to buckle it. When it's buckled she lifts her head up. I waste no time. I push my hardon into her open mouth. Her eyes just look up at me and they sparkle. I stroke her hair as I fuck her mouth. \"Are you ready to take it deep Slave?\"\n\nShe nods her head a little. I hold her head. I push into the back of her mouth and hold it. Then pull out. I hear her breathe in. I push back in. Again right to the back of her mouth, hold it and pull out. She gasps as I pull out. I give her just a heartbeat or two and push in. I don't stop until I feel myself pop into her throat. She gurgles as I hold her in place, and again pull out.\n\nDrool is running out of her mouth and down her chest and new lingerie. I give her a moment and push in faster this time. I hold her tight against me and enjoy her gurgling sounds and the feeling of her throat moving around me as she does. I have to stop. If I don't I will cum in her mouth, and I desperately want to fuck her ass. Her ass cheeks are still tender so I have to go easy, and I don't want to go too long with her for my second orgasm. I love playing the Dom/Sub stuff, but I still feel bad I was too hard with the spanking earlier.\n\nI pull out, and nudge her head forward. I unbuckle it and pull it out. I see Karen reach up and rub her jaw. I hold it up. \"Ok people. Be honest. I know one couple wants to play with something. I just know it. Say no, and I will put my poker winnings on the table.\n\nI look up and I see Joe and Shelia talking. Matt is whispering in Trisha's ear. Diane is just staring at Karen. Sheila looks at me. \"God, I can't believe I am about to say this. Joe get the small butt plug, and some lube.\"\n\n\"Yes.\" Says Joe in celebration as he gets up.\n\nI see Trisha sigh. \"Ok I will try. Go get it.\"\n\nMatt hops up and points to the ring gag. \"May I?\" He asks. I hand him the gag still wet with Karen's drool.\n\nDiane surprises me. I hadn't had Ezzie push her to do anything. She walks up to us. \"Can I try the vibrator?\" She asks softly.\n\n\"Of course you can.\" I turn to Karen. \"Slave stand in front of Diane with your legs spread.\" I say.\n\nKaren doesn't hesitate. She is standing within arms reach of Diane with her hands at her side and her legs spread. Diane looks at Karen. \"I have never... umm, touched another woman.\"\n\nKaren smiles. \"Neither had I before this summer. I am glad I worked up the courage to try it. It's a lot of fun.\"\n\nDiane just reaches forward and pulls on the antenna. It pulls out of Karen covered in pussy juice. Diane is holding it in her hand just staring at it. Karen lets her stare for a moment before she reaches out for it. As she holds it in one hand she takes her free hand and reaches for Diane's pussy. \"May I check to be sure you are ready?\" Karen asks.\n\nDiane just nods her head yes, and sighs as Karen's fingers run through her pussy lips. Karen pulls back her wet fingers. \"You feel ready to me.\"\n\nKaren takes the toy out of Diane's hand and rubs it along Diane's pussy. After a few rubs she pushes it in and Diane gasps. I goose the vibrator up to about \u2153 and back down. Diane jumps and yelps.\n\nI hand Jim my phone, as he grabs Diane around the waist and pulls her to him. She lands in his lap, and I see her stomach clench as Jim's finger is moving up and down the screen on my phone.\n\nI take Karen by the hips and walk her behind the chair we were in. I bend her over it, and pull her head up by her hair. \"Look at what you have inspired. I want you to stay right here and watch. I am going to step over to Joe and lube up. Then I am coming back here, pulling out your plug and fucking your ass until I fill it with cum.\n\n\"Yes Master.\" She says, and you can hear the excitement in her voice.\n\nTrue to my word I grab the lube that Joe has put down, while he is slowly pushing the small plug in Shelia's ass. She has her face buried in a couch cushion so I can't tell how she is reacting. I literally pour lube on my dick. So much it spills and drips off me as I move over to Karen.\n\nI step behind her and tug on the plug. It pops right out. I don't give her ass a chance to react. I push my dick in her ass, and Karen moans in pleasure. I hold her hips and pull her to me as I fuck her. She moans and gasps with every stroke. I look around the room.\n\nShelia is on her knees blowing Joe, and the base of the butt plug is clearly visible between her ass cheeks. Trisha is moaning I think in a little discomfort, while Matt buckles the ring to her head. Finally Jim has a big smile on his face, while he makes Diane squirm in his lap by flipping his finger up and down the screen changing the vibrations.\n\nI turn back to Karen, and lift a hand off her hip to smack her ass, when I see the red mark from earlier. I just can't. I rub the small of her back instead. She starts pivoting her hips and pushing back into me. I am sure Karen is grinding her clit against the back of the chair.\n\nI start to feel the tingle in my balls. Her ass has been trying to squeeze the cum out of me since I first pushed into her. I start watching my dick push in and out of her ass. When I hear Shelia moan. \"Slooowww.\" She is on her hands and knees, with Joe behind her I am sure fucking her ass.\n\nI realize as I look around. They are now all getting what they asked for. Shelia has a dick in her ass. Trisha is on her knees with Matt's dick fucking in and out of her mouth. She is making wet gurgling sounds as he fucks her face. Last but not least Diane let's out a small yell. I look over and she is orgasming and begging Jim to stop.\n\nJim has an arm wrapped around Diane. Her arms trapped against her sides as she starts to thrash in his lap. \"PLEASE.\" She screams.\n\n\"Not until you cum one more time.\" He says. He actually has to drop the phone to hold on to Diane; she is bucking so hard.\n\nI realize my own orgasm has snuck up on me. Two more strokes and I bury myself balls deep in Karen's ass and explode. Karen keeps pivoting her hips and grinding for about 30 seconds. Then with a huge sigh her whole body slumps against the chair. I wouldn't say it's the biggest orgasm I have seen her have, but it looks like she enjoys it.\n\nI pat her hip as I pull out. Karen lets out the smallest of moans. I sit back in the chair, and she takes her favorite seat it my lap cuddling in to me.\n\nI hear some distressed gurgling and I look up as Matt cums in Trisha's mouth and she is having some trouble handling it. He pulls out of her mouth, and a mixture of drool and cum drip out of her mouth. Matt sits down leaving Trisha to unbuckle it.\n\nDiane is still bucking against Jim, when she screams with another quick orgasm. True to his word Jim shuts off the vibrator. Diane slumps back against Jim with a big sigh, and is enjoying the orgasm overload feeling.\n\nDiane is in her own world but everyone else is now watching Shelia getting anal for the first time. She is moaning the entire time. I won't say she is 100% enjoying it. I am sure it's a tad uncomfortable for her the first time, but she is also enjoying it I think. \"Baby, your call, long, soft, and slow like this, or hard and fast?\" Asks Joe.\n\nShelia groans. \"Babe, I can't take long this time. Faster sounds better. Just fuck mmmeeeee.\"\n\nThe minute he heard faster sounds better Joe grabbed Shelia by the hips and pulled her to him while he fucked in harder. From there it is nothing but moaning, crying and begging from Shelia. \". Baby PLEASE. Oh god I can't. Ow ow ow. Please cum Baby. PLEASE!\"\n\n\"Ezzie, is she actually asking Joe to stop?\" I ask Ezzie.\n\n\"Yes and no Ben. That faster pace is painful for her, but she doesn't want him to stop. She wants him to cum. Joe knows she is uncomfortable. She was nervous to try it, but they had talked about it. She was curious what a guy cumming in her ass would be like.\" Says Ezzie\n\nJust a moment or two later Joe groans and holds her ass to him as he cums in her ass. He pats Shelia's ass and she pulls forward a with a gasp and moan. As she lays on the floor she reaches back and gently feels her asshole.\n\nMatt is the first to speak up. \"Ben, thanks for letting me borrow the gag, but I need to take her up to my room.\"\n\nI look at the ring gag with cum and drool on it. \" Of course you are going to clean that before returning it, right?\"\n\nTrisha gets up. \"I will take care of that now.\" She turns, and pulls the antenna out of Diane. \"I got this sweetie, you relax.\" She turns and grabs to butt plug by the base. \"That was amazing to watch Shelia. I don't know if I could do it.\"\n\nI can hear the smile in Matt's voice. \"We could take it upstairs and find out.\"\n\n\"One experiment a night is enough for me.\" Trisha turns and heads to the kitchen. A few minutes later she is handing Karen the toys all nice and clean smelling of dish soap.\n\nOne by one they all get up leaving Karen and I sitting there. Karen is against me with her eyes closed. I bend down and kiss her lips. She smiles and opens her eyes. \"How would you like to go upstairs and have sex with your fianc\u00e9?\" I ask her.\n\nShe looks up at me and smiles. \"I would like my Master to take his Slave one more time, before I cuddle up to my fianc\u00e9 for the night.\"\n\nWho can say no to that. I am not waiting for upstairs. I throw her off my lap, and onto the couch. I spend the next 15 minutes or so fucking her nice and hard, before I cum in her pussy. After a moment of recovering she gets up and pulls me to my feet. \"Now I want to cuddle with my fianc\u00e9 while I fall asleep.\" She says as she walks me upstairs to my room.\n\nWe get upstairs and Karen looks at her phone. I guess Kat texted her. \"Kat wants to get together for breakfast in the morning.\"\n\n\"Sure.\" I say not really thinking about it. Karen and I carefully climb onto the blowup mattress and soon fall asleep."
    ],
    "authorname": "ao1701e",
    "tags": [
        "lesbianism",
        "threesome",
        "ffm",
        "lesbian",
        "spanking",
        "group",
        "group sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/a-ring-named-ezzie-pt-09"
}