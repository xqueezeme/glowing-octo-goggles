{
    "title": "My Only Talent Ch. 40",
    "pages": [
        "Man is by Nature a Political Animal\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\nNora had arrived even later than planned and Lara and I had picked her up at DFW in Lara's daddy's Bentley, and we then had to go straight to Jay and Millie's wedding -- we plan to have our own little honeymoon after the happy couple departs. It was some time before I even checked the progress of the reception line. Lara and Nora emerged from the mysterious bride preparation chamber and walked purposefully towards me. Looks like it's almost showtime.\n\nIn the meantime, I was stuck sitting with Raymond \"Stuckey\" Jones, a part time professor at the junior college where my Mom taught, and local political commentator. Stuckey was a short, dumpy looking guy who was a legend in his own mind, and on the independent TV station where he had held forth for 30 years, spinning hypothetical election situations combined with election returns and biting personal insults. He hated all politicians equally and was very creative in communicating his feelings. He always thought he should be a featured analyst at a major national network, or at least CNN. Alas, he seemed to be permanently relegated to mediocrity in the Metroplex, sandwiched between local newscasts and old B movies that were the prime fare at the non-network station. He was lucky it was carried on the cable systems at all.\n\nStuckey always knew where the free food and drink was, and that is why he was sitting next to me at a table near the buffet lines. He was already three sheets to the wind despite the morning hour, and his usually acid wit was even more bitter and biting.\n\n\"There all sons of bitches, son!\"\n\nI had seen his act before. When he was invited to a collegial dinner with my mom at my house, at assemblies at the junior college, and while watching late night movies when I was stuck at home alone with the TV.\n\n\"Every got-dammed one o' them! Lyin' cheatin' low-life sumbitches. It's my job to suss out which ones are best at it. Your buddy Jay Kincaid is going to be a big-time pol if he doesn't fuck it up. He's got everything goin' for him, doesn't he?\"\n\nStuckey downed his drink and snagged another, and then resumed what would prove to be a long oration.\n\n\"Maybe the Kincaid boy will be different. God knows he doesn't have to worry about money -- he can be honest instead of sucking up to special interests and donors. He might have to suck up to Granddaddy and Granddaddy in law, though. Those two old fuckers are two of the biggest special interests in Texas all by themselves! Jay's good looking, and the sumbitch speaks Spanish, too. Not stumbling 7th grade pissant Spanish like the got-damn Bush boys, but fast and fluent like a native. He can go on all the Spanish language networks any time he wants and handle all the questions without looking stupid. Shit fire, that's worth a million votes in Texas right there!\" \n\nJay was a native speaker, in Spanish and English. He grew up on the ranch, surrounded by the kids of vaqueros and wranglers, many of whom were descended from the \"Texicans\" who lived in Texas before it became a Republic, much less a state. He learned Spanish and English simultaneously. The ranch also had a big satellite dish that picked up the signals intended for Latin America, so he knew all the Spanish novellas and variety TV shows. He cracked up some of the guys at ESU when he spoke \"Gobermiento\" like the Mexican equivalent of C-Span, and he could even do passable imitations ranging from old timers like Cantinflas and Flor Sylvestre to Gloria Trevi and Jose' Jose'. He came to several of the PIG costume parties as the legendary luchador Mil Mascaras.\n\n\"He looks comfortable on a horse, even did some competitive rodeo when he was in high school, plus this new wife Millicent is a potential political bombshell, too. Her family is as liberal as his is conservative, and they are connected all over the state, she's well spoken, very politically savvy, and she's hot. Maybe too hot, from what I hear.\"\n\nI was starting to get pissed off. Stuckey must have seen my face change. \n\n\"Not that there's anything wrong with having a few wild college days, eh, Robbie?\" He looked at me pointedly, but I didn't take the bait.\n\n\"But she's got to keep it under wraps from now on. If Jay Kincaid gets as much attention as I think he will, and I am never wrong about such things, then there will be a lot of media scrutiny. Some reporter could make their bones exposing something scandalous on the new golden boy! Speaking of which, what kind of stuff can you tell me Robbie? Aren't you his frat brother?\"\n\nEven a drunken Stuckey couldn't miss how pissed I was now. But my mom had seen his act long before I was born, and she had schooled me on his tactics. Get his interviewee pissed off and hope they said something stupid. They often did. I had certainly proven myself capable of that. Remember to engage brain before mouth, Robbie!\n\n\"He is in a different frat, but he is a good guy!\"\n\n\"That makes sense. Your family couldn't possibly have enough money to get in his frat, could you?\"\n\nI know I looked pissed now. Count to three before speaking, Roberts.\n\nStuckey pushed even harder. \"I understand you used to 'date' Millicent. Is that the proper term for it? How freaky is she in the sack?\"\n\nCount to ten Robbie. \"She is a wonderful young lady, and I am proud to call her my friend. Jay is my friend to. I wish them the best.\"\n\nNora and Lara walked up, and immediately sensed my discomfort. Lara recognized Stuckey, as she grew up in Dallas. He did not recognize her. She also remembered some of his personal peccadillos, too, a fact she immediately put to good use.\n\n\"Did you drive yourself here, Stuckey? Should I call MADD and ask them to arrange a video and a ride home for you? Perhaps in a police car?\"\n\nStuckey had several well publicized DUI arrests, all of which he wriggled out of without a conviction. One of the rival stations had gotten hold of the police videos, and gleefully showed them for days. Mothers Against Drunk Driving often protested his few personal appearances. He looked sourly at Lara. Now I was truly pissed off. She stepped between us.\n\nStuckey tried to assert himself, \"I haven't had the pleasure, Miss?\"\n\nLara looked down at him like he was dog shit on her shoe. \"You won't!\" \n\nShe turned on her heel and stalked off, with Nora close behind. I felt better. Stuckey was undeterred.\n\n\"What about Kincaid's crazy quilt positions on the issues? Don't they seem weird to you?\"\n\nI didn't know Jay's positions on any issues, except for our discussions on how to treat Millie in private. His grandfather was a Phi Iota Gamma legacy and a true robber baron arch conservative, but Jay's father, who died shortly after Jay was born, was supposedly a firebrand liberal hippie, or more correctly an Austin style 'cosmic cowboy'. \n\nWhile I was collecting my thoughts, Stuckey was still spewing forth.\n\n\"His grandfather is just barely to the left of the John Birch Society, but his father was a bleeding-heart liberal, way left of Hubert Humphrey or Daniel Patrick Moynihan. But those two would be considered neo-conservative sticks in the mud by today's Marxist zealots! So, may I assume Jay Kincaid will be another racist, misogynist, homophobic, transphobic Republican?\"\n\n\"I don't even know that he is going to run for office, much less what his positions are.\" I got in Stuckey's face. \"I was always taught to respect my elders, and I respected you when I was little. But I don't any more. I think you hate politicians because you know even the minor ones will have more effect on the world in one day than you have had in your whole life. And if you are rude to my friends again, I might show you how rude I can be, too.\"\n\nMutterings and movements told me the ceremony was about to begin. I looked up to find Lara and Nora and adjusted my path to join them on the way up toward the rows of chairs set up in the big dance hall of the ranch. We settled in on the groom's side. I spotted Cisco and Mae Ling with many of her Bi Phi sorority sisters on the bride side. She looked radiant. I had remembered to wear the Stetson she gave me. Everyone else who had been with her at the Horseshoe Bay condo wore theirs. Cisco had one too. The ultimate inside joke.\n\nA very trendy synthesizer manned by a tuxedo clad keyboardist began to play the wedding march, through a set of speakers that looked taller than the Republic Bank Tower, just as I sat down between Lara and Nora. \n\nThey leaned toward each other, whispering just behind my neck. \"Have you heard what's in the vows?\"\n\n\"No, have you?\"\n\n\"No, but we all need to talk after we hear them.\"\n\nMy neck started to itch. Our future arrangements have been hypothetical and fluid up 'til now, but marriage vows were not so flexible, even if our plan was highly unconventional.\n\nA few more last-minute guests filtered in. There had been a competition between the two prominent families to invite the most noteworthy guests. Jay's grandfather began with the Mayor and Governor, and Millie's grandfather countered with the House Majority leader, who he had known since the Democrats were big with the American Petroleum Institute (long before I was born). They lobbed competing invitations and announcements back and forth like tennis balls, until Millie finally delivered her putative kill shot by revealing that Sapiento and Erminia would attend as her guests. The press immediately noted that Sapiento had way more money than both the famous wedding families combined. \n\nThe crowd had reacted earlier to a grey Augusta helicopter arriving, and Sapiento and Erminia emerged and greeted everyone. They caused another stir as they filtered in and sat up front over on the bride side, waving to me and the girls as they passed down the aisle. \n\nStuckey did a double take at that wave and stared at me for thirty full seconds. Most of the press had been excluded, but Stuckey would talk to lots of people, perhaps garnering some attention I did not want. But I was soon forgotten, as the unexpected arrival of a Marine helicopter was followed by the entrance of the final guest, the Vice President. Game set and match to the Kincaid/Garner invitation side. \n\nJay moved down the aisle past us in a grey morning coat. He looked even taller than he was. He stopped next to the minister and turned, looking back expectantly for Millie to emerge. The bridal hymn swelled with electronic vibrato, and Millie and her father moved into the center of the aisle. She looked incredible. I heard a sharp intake of breath from the two girls next to me, and most of the women in the hall.\n\nThe crowd was completely silent as Millie made her way down the aisle, and all I could hear was my own heart beating, almost as loudly as during the marathon in Dallas. What's up with that?\n\nJay's little cousin was serving as the flower girl. She was suitably adorable, producing a chorus of ooh's and ah's from the crowd. Millie's little male cousin was just as cute as the ring bearer. Soon Jay and Millie were standing before the minister, or more properly, the Methodist Bishop of North Texas, who was an ESU alum and Phi Iota Gamma, too. My heartbeat accelerated even further.\n\n\"Friends, we are gathered together in the sight of God to witness and bless the joining together of Millicent and Jay in Christian marriage...\"\n\nWhy was I having trouble breathing? I don't remember the exact wording, but basically, they promised to always tell each other the truth and work together to use their strengths to overcome their weaknesses. Both Nora and Lara leaned on my shoulder and dripped tears onto my tux. I heard two new and unique Suzie signals from them -- somehow profound and resonant. I was shivering.\n\nSuddenly the music swelled again, and the newlyweds were moving back down the aisle. A waiter announced that the bar was open, and the crowd moved like the flood tide toward the adjacent reception hall, which was really a huge tent. \n\nI was expecting schmaltzy reminisces and cutesy stories about Jay and Millie as children, and there was some of that. But it was really sequenced like a press conference, but without any reporters asking questions. Both grandfathers spoke, and simultaneously congratulated the happy couple and announced their endorsement of Jay's bid for the Texas State House of Representatives. \n\nWe endured toasts made by a wide variety of people. Some were smart and insightful, some were cloying and boring, and some were drunk enough to be almost incoherent. Jay and Millie glided around elegantly for their first dance, and then a good many people took to the floor, dancing at various levels of grace. The happy couple then set up at a central table in sort of an informal reception line and began pressing the flesh and small talking with the crowd as it circulated around them. \n\nWe took our turn in the swim and finally congratulated Millie and Jay in person. Millie, Nora, and Lara swirled together in a succession of hugs, giggles, and whispers, while Jay took me aside for a one-on-one conversation.\n\n\"Robbie, I cannot thank you enough for introducing me to Millie! She is perfect for me, and I have learned how to meet her needs. I will have to work hard at it, but it's a labor of love for me now! She also helped me decide on a political career.\"\n\n\"How is that?\"\n\n\"Well, as you know, she is a political groupie. She's already hot as a firecracker, but political campaigns and politicians get her even hotter, more than anything else. So, I must be the hottest young politician around to keep her focused on me. I'll run for state rep, then state senate, then Lieutenant Governor, and then run for the United States Congress and go forward from there. I also am now a virtuoso with my trusty Hypervolt, and I play Millie like a musical instrument!\"\n\n\"What's a Hypervolt?\"\n\n\"It's a rechargeable handheld massager, with more power, cycles and attachment options than any other. Mostly used in gyms and by personal trainers for muscular massage, but I put it to sexual use. It's so powerful that it creates sensations nothing else can. In Millie's case, it has the dynamic range to go from tender titillation to outright pain, which is just what she needs. You friend Oiler hooked me up with a 3D printer guru who makes custom tips for the Hypervolt, and I can take Millie places she has never been before. We both enjoy the trip!\"\n\nAt this point, Millie must have shared some of these sexual techniques with Lara and Nora, as there were giggles and sideways glances at Jay. The photographer and videographer took control again for a while, and then Jay and Millie departed in a storm of rice and cheering. They got in a long limo and departed for the honeymoon. Politics reared its ugly head there too, as they planned a romantic getaway in Iowa, of all places. \n\nThey would begin in Mason City, at an historic Frank Lloyd Wright designed hotel that had been the backdrop for many past presidential campaign events. They would spend a week in Iowa, being highly visible at famous steakhouses, and meeting some local pols with national political connections. All the press attention at the wedding virtually assured that there would be further coverage of the Iowa trip. I wondered if Stuckey's prediction about the press looking for dirt would hold true.\n\nAfter the happy couple departed, the real drinkin', gossipin', and story tellin' began. I began to see why Tessa and her Tattler minions never missed a society wedding. Husbands who had been dragged unwillingly to the ceremony, after a few drinks, began to complain loudly about the wives who had dragged them. Wives whose husbands had not attended began to complain to other women about their wayward and neglectful husbands. Everyone continued to try to drown their sorrows in the free flow of booze that the wedding supplied, and tongues got looser and nastier. \n\nLara and Nora waded through the cloud of Bi Phi's and picked up all the latest Pan Hellenic news from Austin. While the football fans and many of the frat rats were talking about the new ESU freshman football phenom, Dicker the Kicker, sorority tongues were wagging about another kind of hero, Zucker the Cucker. It seemed that young Emil Zucker had gone from his Houston area high school to a three-year overseas stint with the Peace Corps. In his case, it may as well have been called the Piece Corps. \n\nThe thirty-something women who comprised the mid-level field management of that organization who were also straight soon discovered that young Mr. Zucker was eager to please and had the anatomy and endurance to do so. He soon learned what the older than average woman needed and wanted, and that if he supplied it, they would do almost anything for him. By the time he finished his Peace Corps hitch and arrived at ESU as an older than average freshman, his skills were well honed, and his taste for women between 35 and 50 was thoroughly established. \n\nIt didn't take him long to find a playmate. A famous tenured ESU English professor, who had years before married a student co-ed thirty years his junior, arrived home earlier than usual one afternoon at his comfortable campus area abode to spy young Zucker's muscular butt pumping up and down over his now forty-year-old wife's widely spread and vibrating legs. The professor was so shocked that he was struck dumb and frozen in place.\n\nAs he watched in stricken silence, he discovered two things. First, his wife was reaching levels of excitement and respiratory rates he had never seen. Second, he was as turned on as he had ever been, and his usual seventy-year-old semi-tumescent penis was now a raging rock that enflamed him beyond any previous experience. He watched in fascination as his wife reached a loud climax, and young Zucker did so just a few moments later, finishing off in his wife's greedily sucking mouth, something the professor had never enjoyed. \n\nHis response was that of a true academic liberal: he applauded. His wife was frozen in surprise, and young Zucker was too spent to react strongly. Before either one could say a word, the professor took a seat on the divan near the foot of the bed.\n\n\"Do go on young man. Do it again! I want to watch the whole process from beginning to end.\"\n\nHis wife's shock turned to excitement, and she discovered that she very much enjoyed putting on a teasing show for her staid husband, in addition to the younger man's attentions. Zucker discovered that he performed even better with an audience, and after young Zucker left the house, the professor took his turn with the now overjoyed wife, performing very well indeed. The chance meeting turned into a weekly ritual which all three thoroughly enjoyed. Thus, the legend of Zucker the Cucker was born.\n\nThe ESU faculty gossip network is anything but ineffective, and it didn't take long for Veronica Tappert to learn of Zucker's skills. He soon became one of her co-stars, and she urged her husband Rock to get young Zucker into a campus frat. Even Veronica recognized that Zucker, despite his bedroom skills, was not capable of the kind of academic effort required for UDP, or even PIG, so she suggested Sigma Nu. They found Zucker \"a little coarse\" for their membership, but he found a happy home with the Kappa Sigs. Unfortunately, he was much more successful at cucking and drinking than passing classes, and he soon found himself on academic probation and then transferring to Texas State.\n\nFinally, it was announced that the bar would soon close, and people began filing out of the wedding venue. Nora and Lara said their goodbyes, and then we piled back into the Bentley and motored majestically north to Lara's huge Turtle Creek area manse. Lara waved at the guard at the gate as we passed through and explained that her Dad and his honey Lillian Gush were away, traveling in search of another insurance company to acquire, so we had the place all to ourselves.",
        "I had a moment of sadness as I recalled Lara and I being with Suzanne the last time I was here, but the two girls on hand soon distracted me. To say that there was pent up demand for my services was a massive understatement. Both girls had been comforting each other in my absence, but despite Nora's stated intention of having some wild times of her own in graduate school, she had not yet done so. I was nominated to try to assuage the Vitamin D shortage they were both suffering from. Noblesse Oblige!\n\nLara and Nora disappeared into her bedroom for a few minutes, and then returned in matching and incredible outfits: white thigh high stockings held up by white garter belts, with no panties, and white cut-out push-up bras that fully exposed their nipples and the top half of each breast. They looked good enough to eat, and I think that was their plan, at least to begin.\n\nThey motioned for me to sit on the couch, and they sat on the coffee table in front of me and proceeded to carry on with each other as if I wasn't there. But each one of them would occasionally turn towards me and give me very hot look. Come hither, you may worship me now, etc. I realized that those kinds of facial expressions would be perfect for models in ads, or pornos, but the effect they had on me was very different from 'normal'. I knew both women well, and their looks no longer operated in isolation the way a stranger would perceive them. For me, each was a m\u00e9lange of all my memories and emotions associated with them -- a very heady mix.\n\nI realized I had a connection, operating at another level, with each of them. I immediately thought of the OSI and TCP/IP model levels we had studied in my embedded systems class. There must be different layers of sexual and emotional connections, too. Was my only talent some sort of \"session layer\" that most people could transmit and only a few could receive?\n\nBut what I had with Lara and Nora was an even higher level of connection. I not only could 'hear' their attraction for me, I was beginning to feel their other moods and emotions. Perhaps I was projecting mine? I no longer perceived them as one thing, they were many things to me. Their appearance had been subsumed into an overall gestalt that I reacted to.\n\nI grabbed them both and pulled them onto the couch with me. I had to touch them, to be with them, to be part of them, and let them know how I felt. We melted and melded, like a mass of snakes moving together for warmth in winter. It was just \"us\" there was no more \"me\" and \"them\". Their excitement was mine, their bodies were mine, and suddenly their emotions were mine. Touching them the way they wanted was automatic, like scratching an itch on my own body. Any way they touched me was perfect.\n\nTheir cute little outfits soon disappeared, as did my clothes. All our inhibitions were long gone, too. I sat back on the couch as Lara mounted me, slowly lowering herself deliciously down on my now soaring erection and leaning back until her left shoulder was under my chin. Nora knelt in front of the couch, and I felt her hot breath on both of us. Soon she giggled, and her tongue began to caress us.\n\nLara shivered, undulating her hips and circling them around on the couch. Nora's head and neck joined the same rhythmic motion, occasionally touching me, then Lara, then she was just touching us. I felt a connection to Lara, as deep as I previously had with Nora. I was astounded, then disappointed to sense that Lara had no egg in place for me to fertilize. What level of what protocol did I know that via?\n\nLara's spine began shake, Nora made funny noise and concentrated her tongue, and Lara popped an orgasm, one that I could feel, too. Lara gasped, Nora giggled, and I rocked on. Suddenly the girls switched places, Nora slid onto me, and Lara kneeled in front of us. Nora leaned back, and her silky platinum hair shook in my face, while Lara kissed her platinum pubes. \n\nAs soon as Nora was fully impaled, a realization flooded through me: Nora had an egg, ready and waiting for me! It was my duty to make it whole. That one thought dominated my being. It filled my mind and drove my body. I tried to increase my thrusting into her, and Lara's bobbing blonde head kept pace with my motions, stimulating us both. I could feel that Nora was right on the edge of coming, but I was not even close. Suddenly I thought I should switch positions, because having Nora on top was not giving my little swimmers the best chance to make it home. I had never thought about that before!\n\nNora came, grunting and bearing down on me with her pink pussy pliers, but I was not even close. I was desperate to bring it home, and I increased my pace and penetration, pushing up against Nora with everything my legs had, lifting her off the couch with each thrust. She came again, and Lara made a guzzling mouth noise, reveling in the wetness. I wanted to come so bad I couldn't think about anything else!\n\nNora began to jump down to meet my thrusts, rhythmically spreading her legs with each thrust and fucking me harder and harder. I grabbed her breasts and squeezed her nipples, and Lara sucked one of my balls into her mouth and tongued it. Blast off was imminent. \n\n+++++++++++++++++++\n\nSummer Mawn missed Robbie Roberts, and she realized that soon he would be out of her life for good. While he jetted back to Texas for that wedding, she joined her father for a week of his annual summer-long pilgrimage to the Isle of Man. He had been doing it for years, at the invitation of one of his former King's School students who was now a big-time international banker. He did some sort of consulting for the banking community, which was enabled by the island's separate parliamentary government and well-tailored banking regulations. \n\nIn between meetings with his clients, who mostly seemed to be Russian ex-pats who now lived in Cyprus and/or Hawaii and had some funky tattoos, Professor Mawn repeated his annual ritual of five summit toppings, from the shortest, appropriately named Mull Hill, to the highest, called Snaefell. He said these climbs afforded fresh air, good exercise, and time for thinking about things from a new perspective. \n\nSummer had a new perspective on herself, too, thanks to Robbie. She had always considered herself a very traditional yeoman type of girl, a bit of a 'stick in the mud' compared to the more beautiful and libertine English Society Girls she went to school with. She had married young and expected to stay that way forever. Her husband's death had changed all that, and meeting Robbie had introduced her to a much more interesting side of herself, and all the possibilities that opened for her.\n\nRobbie had promised to open a few more during the last few weeks of the summer, assuring her that some of her nastiest fantasies would soon become real. He wouldn't say which ones, and that somehow made them even more exciting to contemplate. She wouldn't mind massaging Robbie's hirsute male friend again, or more. Not at all. \n\nWhen Robbie returned, they would take a long weekend trip together to facilitate some of these planned adventures. They had already gone on a walking tour of Camden Town in London, owing to Robbie's faculty advisor's fascination with the life of Oliver Heaviside, who, like the aforementioned Professor Tappert, was considered a self-taught genius disrupting hidebound academic circles. That explained Robbie's unusual choice for a holiday in Torquay, where Heaviside spent his final, and most eccentric, years. Summer's father had mocked the town as a white bread middle class resort, known colloquially as the birthplace of Agatha Christie, whom he considered a writer of 'popular trashy fiction'.\n\nRobbie just wanted to take a selfie next to one of Heaviside's blue historical marker plaques, to show his professor that he had visited the site. Summer was hoping that something a little more memorable would take place during the trip. But she probably didn't want any photos.\n\n+++++++++++++++++++\n\nNora and I were locked together. She was struggling to reach her second orgasm, with the able help of Lara's tongue, blissfully unaware that my struggle was to fertilize her magic egg that had miraculously appeared. I had assumed that she was 'on the pill' since she wasn't 'wearing a patch' to disrupt her cycle, but there it was. It seemed that one of the side effects of My Only Talent was the ability to detect the presence of such an egg, coupled with an overwhelming desire to help it 'become diploid' as Summer would put it. This kind of biological imperative, which I suppose was driven by the subconscious desire to maximize the frequency of my genes in the next generation, also drove me to flip Nora over on the couch just before I came, driving myself down into her as much as possible and giving my little swimmers a downhill shot. \n\nShe was a little surprised at my last-minute gymnastics, but very receptive. I called out \"I love you\" and hopefully Lara assumed it was for them both. I had every intention of accomplishing the same mission with Lara as soon as I could. My, how my goals have changed since I started school last fall! We cuddled and cooed for a few minutes, bathed in afterglow, but in a few minutes, I realized that no joining of egg and sperm had occurred. Both girls asked me why I looked so sad. I lied to them.\n\nAs I lay there thinking, I considered the practical implications of my near miss. I wanted to finish my BS degree at ESU, Nora had just started her MBA program in Massachusetts, and Lara was about to start law school in Pennsylvania. Not being pregnant right now was okay. I told myself it was for the best. I lied to myself.\n\n+++++++++++++++++++\n\nThe night life on the Isle of Man was schizophrenic, at least to Summer's way of thinking. On the one hand, there were plenty of wine bars, pubs, and micropubs, targeted primarily at the locals and British tourists. There were some fine dining places, and plenty of restaurants and pizza places. Very conventional. \n\nOn the other hand, there were the parties thrown by the international banking crowd, at huge detached houses that they owned or rented. These were mostly ostentations oligarchs, anxious to outdo one another and impress the locals and European hangars on that were invited -- mostly great looking women and a few party boys. Through her father's connections she was invited to several of these parties. She realized that Robbie had had a huge effect on her self-confidence and attitude. She was nervous at first, but then she began to look at the partygoers like the people she met at the \"frottage club\" in London with Robbie, and the same combination of amusement and excitement flooded through her.\n\nHer growing confidence must have shown outwardly, because men began to hit on her at a much greater rate than ever before. \n\nThis shouldn't have surprised her. Most of the women there were skinny shorty blondes from Estonia or zaftig ones from Hungary, ever meek and deferential to their 'sponsors' and a big tall English woman with Summer's bold looks and fearless attitude fascinated the males in the crowd. What was that gleam in her eye about? They didn't realize she was visualizing most of them as potential 'fellatio night' dance partners. \n\nSome of the women fascinated Summer, too. Her discussions with Robbie had stimulated some night time dreams in addition to her daydreaming fantasies, and some of the women gave Summer what she decoded as knowing looks. Perhaps this was her chance to try being with a woman. But her biological knowledge base gave her pause. A mistress of one of these Russian guys had probably been exposed to lots of risky stuff and being with them would give Summer the same exposure. Being with a man and a woman at the same time here would be at least as risky, and likely much more so. She decided to content herself with flirting for now, but she felt a heat and an itch she knew she would have to scratch someday.\n\n+++++++++++++++++++\n\nI awoke to find my two girls cuddling and kissing next to me. It was still dark out, so it must still be early morning. I felt peaceful, but somewhat disappointed that I had not accomplished my reproductive mission. It was a lizard brain imperative. I just watched them for a while, drinking in their beauty and reveling in my incredible good fortune just to be here.\n\nThen, a striking signal arose from Nora's body, but not from Nora. It was the Suzie Signal equivalent of a trumpet blowing in my ear. Nora was pregnant! A boy! This changes everything!\n\nI lay there in shock. The girls had not yet noticed that I was awake. I closed my eyes and my brain sped up, racing through the probabilities. Decision trees swam around my head, and expected values appeared through an emotional fog.\n\nI rapidly reached some unavoidable conclusions. First, there could be no abortion. My lizard brain had already bonded with what it perceived unabashedly as my boy, not a 'fetus' or 'tissue mass'. I had been through all the arguments and all the sophomoric and serious discussions at the UDT house about the abortion issue, the derived privacy right, the separation of church and state, and all the points and counterpoints. But my Suzie receiver had picked up my boy as soon as fertilization occurred! That was a datum few people had.\n\nSecond, I had to be around to help the baby grow up. He would likely inherit My Only Talent, and I would need to be there to warn him off drinking and drugging during his early teenage years to protect the formation of his neural array and instruct him on how to interpret and use the signals he would be able to receive.\n\nThird, Nora had to know about all this and why it was so important that we stay together to raise the boy. And Nora and Lara had to know I wanted the same thing with Lara. We would have to work out the practicalities however we could.\n\nWhat I still struggled with was when to tell them all this. I certainly had an early warning system even better than the little test kits you could buy at the drug store. How long until it was obvious to Nora that she needed to use such a kit? I had to forestall any action she might take without knowing all the implications. Tell them both now? Propose to them both now? I suppose I could wait a month or so, but that was the limit, I was sure. \n\nI only have two more days here, then it's back to England until August. I should tell them before I leave. What's the best way to raise this subject? How much should I tell them? What will their reaction be?\n\n+++++++++++++++++++\n\nSummer left her father on the Isle of Man and journeyed back to resume her FRS shift schedule. Summer grass fires would soon give way to calls on people being foolish with space heaters, hopefully not fatally. It felt good to be back at the firehouse and in her routine, but it made her miss Robbie even more. Perhaps in anticipation of his return, she began to have some very explicit dreams. Disturbingly explicit. She wanted Robbie, but she also wanted his mystery man friend. Both at the same time. She awoke in a lather, literally and figuratively. Robbie would be back tomorrow, and next weekend was their planned trip to Torquay.\n\n+++++++++++++++++++\n\nI walked on psychological egg shells with the girls for the next 24 hours, as my self-imposed deadline for telling them all about my plans rapidly approached. But they were both perceptive enough to notice my discomfort. As we all sat down to breakfast in the huge kitchen of Lara's Dallas house on our last morning together, they let me know about it. Smart girls are always trouble.\n\n\"Robbie, something is on your mind. We have both noticed it. Why don't you tell us about it?\"\n\nThe tom toms were beating in my chest again. They both cried when I proposed. I had never envisioned asking two women to marry me at once, much less having them both accept. I had decided to lead with that, and close with the pregnancy. But first, I had to tell them the rest of the story.\n\n\"Well, my loves, I have a story to tell you. It begins with a girl in my old neighborhood named Suzie Packard, and it ends with you two, or maybe I should say begins again with you...\". \n\nI went through most things, leaving out many of the details, but leaving in all the important stuff. Nora already knew something about My Only Talent, but for Lara it was all brand new, and her jaw dropped.\n\nHer first reaction was to be royally pissed off. \"You little fucker! I thought you were such a masterful and confident stud, but you knew all along I wanted you and that I wanted you to top me. You weren't taking any risks at all, while I was risking everything giving myself to you!\" \n\nBut I thought I had taken a big risk, too. \"Lara, I could have lost that tennis game, and then you would have tried to top me, and I would have hated it, and we wouldn't be together now!\"\n\nHer eyes blazed. \"Well, well, you aren't so all mighty perceptive, then, are you? I never would have let you lose that game. I decided to let you win before my first serve. I just wanted to make it interesting. But you didn't sense that, did you, Mr. Suzie Signal?\"\n\n\"No, but I sure like hearing it now.\" I tried to touch her, but she pulled away.\n\n\"And then you made me get down on my knees and suck Suzanne's pussy, you perv bastard! Just to amuse yourself!\" Lara's face was red with anger. \n\n\"No, I did that to get you hot. It did get you hot, didn't it?\"\n\nLara got that pissed off look that women get when they must admit a man is right about something. But before I could respond, Nora spoke up.\n\nShe took Lara's hand. \"I knew about you before you met Suzanne. Robbie was trying so hard to learn how to please you. He was studying research articles and making project plans to get you off. No one ever worked that hard for me. I was so jealous of you!\" \n\nLara shook her head and began to cry again.\n\n\"Then he told me that you were a perfect female animal, and he respected you, that he was falling in love with you, and I wanted to scratch your eyes out! When we he said he was going to take Suzanne over just to make you hot, I was beside myself. I wanted Robbie, I wanted Suzanne, and you were the bitch that was getting them both instead of me!\"\n\nLara's face changed from hard to soft. She smiled sheepishly. \n\n\"Robbie told me what you did in his professor's office. He said you were magnificent, and that it would have been worth getting expelled for a woman like you. Then I hated you even more!\n\nLara got a faraway look in her eyes. She reached out and held Nora's hand.\n\nNora went on, still worked up. \"Then Suzanne told me how great it was and how amazing you were. How perfect it was to be with both of you. Lots of her soccer girls had hit on Suzanne, but you were the one she wanted to be with, and not me. I nearly died!\"\n\nLara took Nora's other hand. \"But I love you, too, Nora!\"\n\n\"I love you, too, now, and even more than I hated you before.\"\n\nI supposed that was my cue. \"We need to discuss the practical arrangements -- is it legal for us all to marry one another? Where will we live? Lots of questions.\"\n\nLara cleared her throat. \"Well, the legal situation is something I am still researching. We may need to establish residence in a state with favorable legal precedents. But we have time to work through all that.\"\n\nNora added, \"I have to be in Massachusetts for two years, and you in Pennsylvania for three, plus Robbie will be back and forth between ESU in Texas and several as yet unknown work assignments for at least three more years.\"\n\nI must have looked sheepish. Nora picked up on it first. \"Robbie? What is it?\"\n\n\"Well, there is another factor to consider. I want to have children, right away.\"\n\nLara spoke first. \"Wouldn't it be wise to wait on that until we know more?\"\n\n\"We can't wait. We have to figure it out quickly.\"\n\nThey both stared at me, then spoke simultaneously. \"Why?\"",
        "My heartbeat sounded loudly again. I looked them both in the eye for a moment. There was no way to avoid discussing this now. \"Because Nora is pregnant.\"\n\nTheir faces froze, their Suzie Signals halted, and my heart stopped."
    ],
    "authorname": "conanthe",
    "tags": [
        "wedding",
        "fraternity",
        "top",
        "sorority",
        "bdsm",
        "gossip",
        "threesome",
        "group sex",
        "oral",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-40"
}