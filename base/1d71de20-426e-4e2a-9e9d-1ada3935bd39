{
    "title": "Work The Problem Ch. 04",
    "pages": [
        "Tags for this story: lesbian, anal, furry, cunnilingus, fellatio\n\n<p align=\"center\">__________________________________________________________</p>\n\nSandra looked up as the door creaked open. The setting Nevada sun outside shone in briefly as the big man entered her little bar.\n\n\"Afternoon, Sandra,\" said Ned Chiang. The engineer wore jeans and a flannel shirt. Behind him came a few more people, most of them clad in camouflage-patterned loose clothing.\n\nShe gave them all a wave. \"Good afternoon, folks.\" She started filling mugs and uncapping bottles as the group bellied up to the bar. Ned was right in the center. It was early enough in the day that the bar's local patrons weren't here yet.\n\nSandra had to admit she was curious about the newcomers, along with the rest of the town of Hawthorne. They were apparently all working on some big project at the nearby army depot. It was big enough to cause the locals' tongues to wag. The Hawthorne depot was usually minimally staffed, but now it was bustling. Semi trucks were constantly going in and out, and some sort of huge bunker-like structure was being constructed. Most of the conspiracy theories that the townsfolk had come up with tended to center around the more...out-there ideas.\n\n\"So how goes the alien autopsies?\" Sandra asked with a grin as she slid a bottle over to Ned.\n\nNed laughed and slid back a few bills. \"Hey, I told you I'm an engineer. My job is to figure out their warp drive.\" He waved at a blonde woman at the other end of the bar. \"Cutting open the big-eyed alien bastards is her job.\"\n\nThe woman smiled and toasted them both with her own beer. Sandra tried to remember her name...Gina? No, Grace. Grace was some kind of doctor, that much she remembered.\n\nAfter a bit, the soldiers moved off and began playing pool in the back half of the tavern. Eventually Grace pushed off of the bar and joined the pool-players, leaving Ned and Sandra alone at the bar for the moment.\n\nShe gave the engineer a stare. \"Okay, all kidding aside. Are we in trouble?\"\n\nNed looked puzzled. \"Trouble?\"\n\nSandra leaned forward and spoke quietly. \"I've got kids, okay? That Army depot stores stuff out here just in case shit goes sideways and we wind up in a major war. I'm not asking for details. Just level with me if, you know, shit really is about to go sideways. I don't wanna wake up one morning with a mushroom cloud in my backyard.\"\n\nNed chuckled. \"Okay, I can understand that. And no, nobody is about to drop the big one on us.\" He glanced around at the people playing pool. There were shouts and catcalls along with a lot of betting going on. Nobody was paying attention to them. Ned leaned forward as well, bringing his head close to hers.\n\n\"There's going to be an announcement,\" he said. \"Next week, by the CIC.\"\n\nSandra had been around military types long enough to be able to decode their jargon. CIC meant Commander in Chief, which in turn meant...\n\n\"The President?\" she said in amazement.\n\nNed just leaned back, smiled, and drank his beer. \"Make sure you're watching. And tell your friends to watch too.\"\n\nSandra reached forward and gripped his forearm. It was the first time she'd touched him, and she was surprised to feel solid muscle under his loose-fitting shirt. \"Holy shit. It is aliens, isn't it?\" she asked.\n\nHe smiled wider. \"No. I can safely say it isn't aliens. Just watch.\"\n\n<p align=\"center\">__________________________________________________________</p>\n\nHolly regarded the machine gun from behind Sergeant Cal Forrester's substantial leg. He looked down and behind him in bemusement at her reluctance.\n\n\"It's not gonna bite ya, Holly,\" he said gently.\n\nShe was not so sure. The whole situation was just wrong for her. This place was in an area they called 'Nevada', and the weather was a lot hotter and drier than she had ever experienced. The sun beat down around the pair, although they were shaded by the corrugated steel roof that covered this side of the firing range. Holly looked over and saw a distant white target against a dusty hill. The target shimmered in the mid-day heat.\n\n\"Why do I have to do this?\" she asked. It seemed like a reasonable question.\n\nHolly felt the sergeant's big hand grasp her shoulder and gently scoot her out and around towards the gun. \"Just in case you need to,\" he replied. \"You'll be with our unit as we go through the portal back to your world. We're going to be unarmed at first. But just in case the eggheads are right and there are some nasty types invading your place, we need to be ready. I'd prefer starting you out with something smaller, but we don't have any guns that will fit your paws yet. This one you should be able to use.\"\n\nThe humanoid rabbit fiddled with the protective glasses that Cal had given her. The sergeant had also provided some foam plugs as ear protection. The latter felt a little odd, but she was getting used to them.\n\nShe looked at the thing in front of her. There was a long, complicated-looking tube on top of three metal legs. It almost looked like an evil metal spider getting ready to pounce. Holly realized she was being foolish. It really was just a machine.\n\nA machine meant to hurt and kill, whispered a little voice in the back of her head. She ignored it and nodded to the sergeant. \"Okay, let's do it.\"\n\nForrester smiled and knelt beside her. \"Good. This is a machine gun, and it's called an M2 Browning. It's also referred to as a Ma Deuce. We have it set up on a tripod which will take a lot of the recoil as it fires. Here, let me get in there.\"\n\nHe seated himself behind the gun. \"These handles in the back are how you hold and aim the gun.\" Cal demonstrated by gripping the two vertical handles at the rear of the long tube. \"You use the sights on top to aim. It's pretty intuitive, you line up the back sight with the front sight on top of the thing you want to shoot at. And to shoot it, you press your thumbs on this plate in between the handles. Okay so far?\"\n\nShe nodded, and he continued. \"Now, it's important to remember that this is a fully automatic gun. That means if you keep the trigger plate pressed the gun will keep firing until its ammunition runs out.\" He pointed at a box mounted on the side of the gun. A belt of bright brass cartridges led from the box into the back end of the weapon.\n\n\"This holds about 100 rounds,\" said the sergeant, \"but this gun can fire about 400 rounds a minute. You can do the math on how fast you'll run out of ammo. So you *don't* want to keep the trigger pressed all the time. It's much better to fire the gun in bursts.\"\n\nHe put on earmuffs and did another visual check of the gun, then pressed the trigger as he'd described. Holly jumped as the weapon chattered loudly. Small metal bits and hot brass flew out of it, and she saw puffs of dirt on and around the distant target.\n\nCal grinned at her wide eyes. \"It's loud, I know. That's why we need hearing protection. Now you give it a try.\"\n\nHolly took a deep breath and seated herself behind the gun. \"Um, how long should I hold the trigger down?\"\n\nThe human soldier looked a little embarrassed. \"Well, the most common way we do it is to use a chant.\"\n\nThe lagomorph gave him a smile. She had spent a lot of time around human soldiers, and had picked up on their habits. \"Let me guess. It involves cussing.\"\n\nThe sergeant actually blushed. \"Yeah. We usually say or think, ah, 'Die, Motherfucker, Die.' every time you press the trigger. That's about the right length of time.\"\n\nHer smiled widened at his discomfort. In many ways Cal was a lot more conservative than his fellow Rangers. He clearly didn't like cursing in front of a lady. Even if that lady was only four feet tall, had big blue eyes, sported long ears, and had a covering of gray fur.\n\nShe took a deep breath. \"Right. Let's give it a whirl. Die, motherfucker, die!\"\n\nOnce she got used to the noise, it was actually quite entertaining. It almost became like a game; how to get these bullets *here* into the center of that target over *there*. Eventually Cal pronounced himself satisfied with her progress.\n\n\"That was fun!\" she said as they walked away from the range.\n\n\"It can be,\" replied Cal with a smile. \"I just hope you never need to use one in anger.\"\n\n<p align=\"center\">__________________________________________________________</p>\n\nGrace Penn had a room to herself on the base, but the bathrooms were still communal. It was midday and there was nobody else in the large and white-tiled shower area. The blonde doctor set her towel down outside the shower and walked in. She chose the showerhead around the corner from the entrance, just in case somebody did come in. Grace was still a little body shy, especially around a certain female corporal.\n\nJust the thought of Leslie gave her a little tingle in her nethers. She ignored it as she turned on the shower, but as the water cascaded down her pale skin her thoughts returned again to Leslie Nowak.\n\nThe wiry redheaded Corporal had been with them since the first days at Dengar Research Labs. Grace had always gotten the impression that Leslie fancied her as much as she herself lusted after Leslie, but Grace had yet to act on it. Somehow it didn't seem right to be crushing on someone while working on research that would shake the modern world.\n\nStill...it was nice to daydream about Leslie's slim body writhing under her own. Grace had seen the corporal naked in the showers before, and so her imagination had plenty to work on. She fantasized about taking one of Leslie's dusky nipples into her mouth while teasing her down below.\n\nGrace realized she was stroking her own clit as the fantasy blossomed in her mind. She gave into her lust and probed deeper into her own pussy while she imagined running greedy fingers through Leslie's short red hair. Then she imagined gripping the soldier's pert ass, latching onto her clit, and sucking for all she was worth...\n\nGrace's rising orgasm was abruptly cut off by the sound of a voice.\n\n\"So is it anybody I know?\"\n\nShe jerked her stroking finger away and looked over in shock. An amused and very naked Leslie leaned against the door frame of the shower area with one raised eyebrow.\n\n\"Shit, I'm so sorry, I...\" Grace felt her face heat up as she turned beet red.\n\nLeslie laughed, but it was not a mean laugh. \"Grace, I've been on field maneuvers with a bunch of testosterone-laden Rangers. Trust me, I've seen shit a helluva lot more embarrassing than a pretty girl jilling off in the shower.\" She winked at Grace. \"I am kinda jealous, though. Who were you thinking about? Anybody I know?\"\n\nGrace cleared her throat, but it was still hard to speak. \"Um, nobody, it just sort of happened.\"\n\nLeslie shrugged as her grin widened. \"I don't know, Grace. That sure looked like you were thinking of somebody in particular.\"\n\n\"I, er...\"\n\nThe corporal just kept talking. \"Now, as for me I used to aim high in my fantasies. Angelina Jolie was my go-to for a long time. *Damn* I could get off like crazy when thinking about that woman. But lately I find it's more fun to think of somebody more accessible.\" She gave Grace a level look. \"Somebody closer.\"\n\nGrace's heart beat faster. \"So, ah, who is the lucky person?\"\n\n\"You say it first.\" Leslie stepped closer. The erect nipples of her slim breasts nearly brushed against Grace's more ample chest. \"Who were you thinking of?\"\n\nThe doctor swallowed hard. \"You. I was thinking of you.\"\n\nLeslie brought her face very close, and her lips barely touched Grace's mouth as she spoke. \"What a pleasant coincidence...Grace.\" Her eyes stared deep into Grace's as their lips met.\n\nThere was one moment of gentle kissing, and then Leslie pounced. Grace felt Leslie's strong hands grip her plush ass, the long fingers sinking in and finding the muscle underneath. The corporal's tongue slid deep into Grace's mouth and roved with abandon. Grace hugged Leslie against her and began to kiss back with equal fervor. She slid one hand down to the small of Leslie's back and ground herself against the soldier, feeling her mound rub against one firm and muscled thigh.\n\nLeslie broke the kiss, and while doing so took the time to give one of Grace's lips a firm suckle. \"I just realized,\" she panted. \"You have a separate room.\"\n\nGrace didn't trust her voice at this point and just nodded.\n\n\"Well then,\" continued Leslie, \"since I'm still bunking in the barracks, how about we take this to your place instead of mine?\"\n\n<p align=\"center\">__________________________________________________________</p>\n\nGrace had barely closed the door to her room before Leslie gently but firmly pulled her over, kissed her, then pushed her back on the bed. She pushed Grace's robe up to reveal that her lower lips were already leaking with her arousal.\n\n\"Mmmm. Tasty-looking,\" was all the corporal said before kneeling and planting her face right into Grace's crotch.\n\nThe doctor's head rolled back bonelessly as she felt Leslie's tongue roam up each of her lips, claiming the nectar that spilled from her channel. Grace's breath grew shorter as she felt that teasing tongue circle closer and closer to her clit. Leslie only teased her for a few moments before closing her lips over her tender nub.\n\nGrace gave a happy cry and wound her hand into Leslie's short hair. The slim corporal began to eat her out with a skill that told Grace this was not her first time around someone's pussy. Leslie slipped two fingers into Grace's sopping folds, coaxing another cry from Grace. Before long Grace could feel the telltale tremble in her thighs that meant she was getting close. Leslie must have felt it too, and she redoubled her suction and pumped her fingers ever harder.\n\nThe force of her climax made Grace bend almost double over Leslie's head. She gritted her teeth so hard she wondered if she'd crack them. As the aftershocks tingled through her, Grace flopped back on her bed and stroked Leslie's hair. \"Oh, Leslie, that was...\"\n\n\"Amazing? Yeah, I get that a lot.\" The soldier gave her a cheeky grin and then kissed her way up Grace's stomach. She nuzzled the robe off of Grace's firm and chubby breasts and gave her nipples a good licking.\n\nGrace couldn't stand it anymore. \"Now you,\" she said, and tried to turn Leslie over onto her back to return the favor. The corporal resisted the push just enough to let Grace know who was stronger, then relented with a smile and relaxed back on the bed. Grace hovered over her as she parted the soldier's robe. She stared with hunger at Leslie's lithe frame. There was a slight 'landing strip' of hair at the junction of the corporal's thighs, just above a pair of succulent-looking and plump lips.\n\nLeslie chuckled. \"Well, are you gonna stare at it or eat it?\"\n\n\"Bossy,\" was all Grace said before she lowered her mouth to Leslie's waiting cunny. She took her time to thoroughly lick and explore every inch of that wonderful pussy, and from Leslie's groans it was clear that the corporal was appreciating the attention. Grace felt Leslie's hands slide around her hips, and then the doctor's pelvis was lifted with wiry strength and placed right over Leslie's mouth.\n\nGrace slipped a finger into Leslie's clasping pussy as she twiddled the corporal's prominent clit with her tongue. She felt Leslie's hands grip her ass and pull her down towards the soldier's own questing tongue. Grace began to suck on Leslie's clit as the corporal's tongue roved over Grace's lower folds. Leslie's hands got a firmer hold on each of her asscheeks and spread them slightly. Grace felt her heart beat faster as Leslie's tongue danced along her perineum. Her suspicions were confirmed as that tongue encountered her rear pucker.\n\nGrace twitched at the contact, but Leslie's strong hands on her ass kept her in place. The doctor had never indulged in ass-play, but right now she was in such a sexual haze that she was game for anything.\n\nAnd turnabout was fair play, after all. Grace withdrew her well-soaked finger from Leslie's pussy and quickly replaced it with her other index finger. The now lubricated digit she pushed lower, seeking out Leslie's own back door.\n\nLeslie gave an approving growl as she shoved her tongue into Grace's ass. The sensation was electric, and the doctor felt her whole body convulse. Grace's questing finger found its own target and Leslie's ass greedily swallowed her digit. She began to pump both fingers into Leslie as the corporal shook with her own rising ardor.\n\nTime seemed to stand still, there was nothing but the sensation of Grace's fingers moving within slick tissues, the feel of Leslie's hard nub under her ever-moving tongue, the exquisite tingle caused by the corporal's tongue moving within her rear passage and her thumb firmly rubbing Grace's clit.\n\nAnd then they reached their mutual climax. Grace felt both of Leslie's channels clamp tight around her fingers, and she herself quivered and felt her rear spasm around Leslie's roving tongue.\n\nBy now they were both thoroughly soaked in sweat. Grace giggled a little at the thought that they'd just come from the shower and now were dirty again. She flopped to her side, then wormed up and around to face her lover. Without a word Leslie moved against her, and Grace felt a wonderful peace as her arms went around the soldier's warm body.\n\n\"So, on a scale of one to Angelina Jolie, how was that?\" Grace asked.\n\nLeslie kissed her neck. \"Angie who?\"\n\nThey both laughed, and smiled into each other's eyes.\n\nThen Grace saw the slightest flicker of doubt cross Leslie's face. \"Is this just a fling?\" asked the soldier. \"I mean, it's cool if it is. I understand if you wanted to just get your rocks off with me. I get that a lot, men and women who have a thing for hardbodies...\"\n\nGrace interrupted her with a gentle kiss. \"I'm here for as long as you want me, darling. Yes, I admit I lusted after your bod but I've also come to appreciate your other qualities.\"\n\nLeslie relaxed against her. \"Okay. I...I'm glad to hear that.\" The corporal snuggled against Grace like she was trying to crawl inside her.\n\n<p align=\"center\">__________________________________________________________</p>\n\nThe helicopter was huge, so big that Holly couldn't believe it actually flew. But fly it did, although the racket it made as it did so made her think that it might just disintegrate. But it landed with no apparent drama, and as its giant rotor slowed down Holly saw several forms jump from the aircraft and make their way towards her.\n\nHolly turned from the window. She was a small and cozy-looking reception area, which had been chosen just because of that coziness. \"I guess it's showtime,\" she said to Ned. That had been the one thing she'd insisted on. Any introduction to new people *had* to be in Ned's presence. He was her rock, the one person who could keep her from getting too nervous when introduced to strangers.\n\nHe smiled and gently scratched behind one of her ears. \"Don't worry. I'm sure the Secretary knows what she's doing.\"\n\n\"Says you. Come on, let's get ourselves hid.\"\n\nThere was a small office off of the main room, and as the pair waited they could hear the newcomers make their way into the room they'd just left.\n\nThe first speaker was male, with one of the deepest voices she'd ever heard. \"Ah, it's good to finally be here! While I always take pleasure in visiting your country's glorious deserts, Katerina, I have to admit that your choice of transport left something to be desired in terms of comfort.\"\n\nHolly had met the next speaker, the Secretary of State, on several occasions. \"It was the fastest thing I could arrange, Yuri. And the most discreet.\"\n\nThe other let loose a booming laugh. \"Da, I understand. Perhaps now you can drop the...how you say...'cloak and dagger' act and tell us all what's going on?\"\n\nA new person spoke up, speaking with a clipped but pleasant accent. \"Yes, I must second Yuri's sentiment. Much as I hate to agree with him on anything, eh what?\"",
        "The Secretary's voice was soothing. \"Gentlemen, I appreciate your willingness to drop everything and come out here on such short notice. And with such vague wording on my part.\"\n\nThere was a third new voice now, speaking English with a heavier accent than the others. \"Vague is putting it mildly. There was something in there about 'one of the biggest discoveries in all of history'. I trust you did not exaggerate.\"\n\nHolly could hear the amusement in the Secretary's voice. \"I think you'll agree in a moment, Deng. You see, my friends, I am almost certain that you have received briefs from each of your respective governments about this facility and the massive changes that have been occurring here lately.\"\n\n\"Perhaps,\" said the first deep voice.\n\n\"Oh, come on Yuri,\" said the second. \"Let's put all our cards on the table. Play according to Hoyle, yes?\"\n\n\"I agree, Bertie,\" said the third newcomer. \"I'll start. The PRC first saw by satellite the construction of the new building about two months ago. We originally thought it was a simple upgrade of an existing storage facility. But we are fairly certain there is now a nuclear reactor on-site. And there are also what appear to be out-buildings full of capacitor banks. Tell us, what is going on here which requires that amount of power?\"\n\nThe Secretary cleared her throat. \"Holly, Ned? Can you join us, please?\"\n\nNed gave her shoulder a comforting squeeze as they left the office and walked into the main room.\n\nHolly was used to the reactions of 'ape-men' upon seeing her for the first time. And this trio was no different. They all stared at Holly with varying degrees of shock. There was a big, almost shaggy-looking man with dark hair, a thin man dressed in a very sharp-looking suit, and a third man with olive complexion and narrow eyes.\n\nThe sharp-dressed man was the first to break the silence. \"Bloody hell, Kate. You weren't kidding.\"\n\nKate gave him a smug smile. \"Introductions are in order. Holly Arnbock, this is Yuri Vassili Sergeyevich. He's from a country called Russia. This is Bertrand Hopewell, from Great Britan. And last but not least is Deng Jianhong from the People's Republic of China. Gentlemen, may I introduce you to Holly Arnbock.\"\n\nYuri was the first to move. He lumbered forward and extended a hand. \"Is pleasure to meet you, Ms. Arnbock.\"\n\nHer paw almost vanished in the man's big mitt-like hand as she gave what she hoped was a pleasant smile. \"Thanks.\"\n\nIn the meantime, the Secretary of State was busy handing out folders to each of the delegates. \"This is a summary of what's happened so far, to the best of our knowledge. We're telling you this as a courtesy, so you can notify your respective governments before the announcement.\"\n\n\"Announcement?\" asked Deng.\n\n\"Yep, in about...\" Kate checked her watch. \"A little over four hours. The President's coming here to give an address to the nation. You might want to let your people know that they should tune in as well.\"\n\n<p align=\"center\">__________________________________________________________</p>\n\nNed watched the President bounce his way out of the limo. The man's salt-and-pepper hair gleamed in the lights that had been set up and pointed at the podium. There was the usual throng of reporters arranged in folding chairs in front of that podium, and he was surprised to see that the chairs were mostly filled. This Presidential address had only been publicly announced a few hours ago. He could see them casting curious glances at the tall step-stool that had been placed alongside the podium.\n\nHolly was behind him and out of view of the reporters. After some discussion, she'd decided to go with wearing a tailor-made pair of jeans and a pale red blouse. It didn't look too formal, and Holly had said she wanted something to make her look as 'normal' as possible.\n\nHe felt Holly's small frame press against his back in a gentle hug. \"I just hope I don't freak out,\" she said. \"I keep thinking about how many millions of people will be looking at me.\"\n\nHe reached behind himself and scratched between her ears. Holly all but melted against him at the act. \"Don't worry, babe. Just picture them all naked.\"\n\nHolly laughed. \"That doesn't help. Then I'll just want to jump them all.\" A furry paw reached down and groped at his crotch. \"Especially if they're anywhere near as well-endowed as you are, big guy.\"\n\nNed felt his face flush with embarrassment as one of the nearby technicians gave a little snort of suppressed laughter.\n\nThe President nodded pleasantly at the assembled group. \"Thanks for coming on such short notice, folks. The reason we're way out here instead of in DC will be clear in a bit. I won't be taking questions during the address, but we will have a Q&amp;A session afterwards.\" He turned to look at the technician that had just laughed. \"How are we doing?\"\n\nThe man straightened up. \"Good, sir. We're all set. I'll cue you.\" He held up a finger with four fingers extended. Then there were three.\n\nThen two.\n\nOne...\n\nThe President smiled into the cameras, and Ned felt himself smile automatically in return. The man definitely had a presence. \"My fellow Americans,\" said the President. Then he paused for dramatic effect. \"I'm going to change the standard format for reasons that will soon become obvious. Let me start again. My fellow humans. It is with awe and wonder that I come before you today. And what I have to announce is very simple, but profound. Seven months ago, we received absolute proof of the existence of alternate dimensions. And in those dimensions are beings just like us, with reasoning and the same innate curiosity that drives our own species. One of those beings was brought to our world completely by accident. And in the months between then and now our main goal has been to not only understand what has happened but to bring her home. So now, may I introduce to you all the very first brave traveler between our dimensions...Ms. Holly Arnbock.\"\n\nHolly gave Ned's junk one final squeeze, and then she moved around him to walk out into the glare of the television lights. Ned could hear the collective intake of breath from the reporters, and knew that the same reaction was happening in various places all over the world.\n\nBut the lagomorph took the sounds of surprise in stride as she hopped up onto the step-stool next to the President. Now she was at the same eye-level as him, and she stared out into the crowd with her big blue eyes. A pleasant smile was plastered on her face, but Ned could see the little jitter in one of her big feet that meant she was still nervous as hell.\n\nThe President was as smooth as ever. \"We'll be handing out briefs to you all regarding the specifics of what has happened. And, just to keep us honest, we also have present witnesses from several different nations.\" He nodded over to the other side, where stood the three delegates that Holly had met earlier. \"Within a few days, we will have more delegates arriving, and we also expect to have finished the machinery that will allow us to connect back to Ms. Arnbock's dimension. Then we will be able to open up true communication between our two worlds.\"\n\nThere was another pause, again for dramatic effect. \"We have one plea to everyone during this process, and that is...be patient. This is the first time that anything like this has been ever attempted, by either her people our ours. Mistakes will be made. But with good will and honesty on both sides, I believe that we can ultimately bring our two peoples together and forge an alliance that will stand the test of time.\n\n\"I thank you all. It is a truly humbling moment in my life to be the vessel that brings the human race such important news. Good night, and may God bless us all.\"\n\nThe president relaxed against the podium. \"Now, does anyone have any questions?\"\n\nThere was a moment of stunned silence, quickly followed by a forest of upraised hands and a chorus of shouting.\n\n<p align=\"center\">__________________________________________________________</p>\n\nHolly lay back on one end of the sofa and let Ned massage her feet. \"Whoof. I'm so glad that's over. I thought I'd never get away from those reporters.\"\n\nThey had finally been allowed to retire to their shared quarters. It was a lot nicer set-up than they'd had in Dengar labs, and a lot bigger than Ned had expected.\n\n\"You did great,\" he said. \"You looked really calm, although I did think your foot was going to vibrate off at one point.\"\n\nHolly growled a little. \"Honestly, it was the big picture questions that threw me the most. How should I know how my people are going to react to you all? I'm an accountant, for cryin' out loud.\"\n\nNed smiled. \"They're reporters. It's their job to ask stupid questions so that nobody else has to.\"\n\nHolly laughed. \"Our people have the same problem.\"\n\n\"So, one big thing down, one more to go,\" said Ned.\n\nShe stretched out her other foot and twiddled her toes. \"That's the real big one, isn't it? I just hope my people don't freak out too much.\"\n\n\"Well, that's why you're going through first.\" Ned switched his attention to her other foot.\n\nHolly gave a little murr of pleasure as his thumbs dug into her arch. \"Oh, yeah. That's the spot. You don't think that will be dangerous, do you?\"\n\nHe gave her a puzzled look. \"Why would it be? I mean, we'll send robots through first just to make sure the portal itself won't be harmful. And you'll be going home, so we monkey-boys will be the odd ones for once.\" He paused. \"Do you think your people will be cool with us?\"\n\nIn response Holly planted her currently un-occupied foot in his groin and massaged it with her nimble toes. Ned gave a little groan and felt his cock shift as he responded to her kneading. She gave him an evil grin. \"They will, once I tell them how good your people are in bed.\"\n\nNed whimpered as her toes gripped his still-clothed cock and squeezed it. \"That's right, you slut,\" she whispered. \"Get it hard for me.\"\n\nHer ears tucked down behind her head and she began breathing faster. Before he could blink she lunged for his crotch. Ned was speechless as she quickly unlaced his belt and opened his fly. Her paw dove in and fished out his by-now-rigid member. There was no licking or other foreplay as she took him into her mouth with one gulp.\n\nThe sensation of his cock being suddenly surrounded by wet and warmth made Ned's breath seize in his throat. He finally let out a gasp as Holly began to move her head. Ned had just enough presence of mind to reach down and stroke along Holly's ears, then down her back. She still had her clothes on, but the jeans she wore had a cutout for her tail. He took the opportunity to get in a good fondle of that downy-soft appendage, and he felt Holly's whole body shudder.\n\nIn response she shoved her pink snub nose right down into his pubic hairs. Ned gasped again as he felt her throat grip and massage his member.\n\nShe pulled herself off of his cock and gasped as well, then gave him a triumphant grin. \"You liked that?\"\n\nWith one hand he scooped her up and brought her into his lap. Her jeans-clad crotch ground against his wet erection as they stared into each other's eyes. \"You know I did,\" he said. \"Now get undressed.\"\n\nIn contrast to his aggressive words, once he'd shucked Holly's clothes off he took his time. After she'd impaled herself on him, he gripped her hips to hold her still. Then, while staring into her deep eyes, he ever-so-slowly pulled her up and then with equally agonizing slowness pulled her back onto his prick until his was hilted inside her.\n\nHolly shuddered. \"Oh, you teasing bitch,\" she whispered in delight, her eyes never leaving his. Ned grinned and kept up the slow-and-steady pumping. All the while he was ignoring the instinctual urge to begin pounding her like a jackhammer. Finally he couldn't resist it any more, and began to speed up.\n\nShe tucked her head down under his chin and gripped his shoulders to hold on as he thrust with ever-quickening speed. Somewhere in the middle she gave a little squeaking cry and shook against him. Ned was close himself, and began to buck up with abandon as her inner muscles milked at his cock. He felt himself pulse deep inside her as stars danced in his eyes.\n\nAs his breathing slowed, he heard Holly whisper. \"You'll be there when I go through, right?\"\n\nHe stroked her fuzzy head. \"I'll be right by your side the whole time, Holly. No matter what.\"\n\n<p align=\"center\">__________________________________________________________</p>\n\nSergeant Forrester knew that his orders were to show all possible courtesy to their foreign guests. But he was also told to keep them from poking *too* deeply into the guts of the portal equipment. Which in turn meant he had to act as an escort if any of them were in what was being referred to as 'Main Operations'. At least the Russian was a pleasant-enough guy.\n\nThe two men stood in front of what looked like an MRI made for Godzilla. The cavernous warehouse-sized room was filled with all of the machine's support equipment, and there was a definite chill in the air from all of the liquid nitrogen used to cool the huge cables leading into the massive torus at the center of the space.\n\nArnold was leading a veritable army of technicians as they roamed all over the machine, checked gauges, and read out the corresponding values to each other. Arnold himself had a checklist about three yards long and appeared to be only about half-way down it.\n\n\"Is quite impressive!\" said Yuri in his deep voice. \"But you say the portal is only going to be two meters?\"\n\nThe sergeant nodded. \"The eggheads say that's as big as they can get it right now. As we get better at it, who knows? At least it'll be big enough for most people to get through.\"\n\n\"Da,\" said the Russian, and slapped his paunch. \"Is good incentive to go on diet!\" He laughed, then looked down in puzzlement. \"Appears to be dog in here.\"\n\nCal looked down at a familiar blocky shape that panted next to Yuri's leg. \"Oh, that's Daisy. She has to say hello to anyone new.\"\n\n\"Dog is not dangerous, I assume?\" asked Yuri. As if in response, Daisy flopped on her side then rolled on her back and gave the delegate a look that clearly said Why aren't you petting my tummy?\n\nCal smiled as the Russian reached down and gave Daisy a friendly scratching. \"No, she's more like our unoffical mascot.\" He looked up again at the machine. \"One more day,\" he mused. \"And then everything changes.\"\n\nYuri straightened back up and gave a grave nod. \"Da, everything.\"\n\n<p align=\"center\">__________________________________________________________</p>\n\nRobert Hadley heard what sounded like a crack of thunder. He looked up in puzzlement and saw a few dark clouds in the sky, but nothing else. The weather forecast hadn't mentioned thunderstorms. The storms had been getting more prevalent in the last few months. The farmer was a little superstitious about such things, especially since one of his neighbors had gone missing during just such an unexpected storm.\n\nHis long ears twitched as he heard another, softer crack. Now he was sure that it was coming from inside his barn. Robert padded towards the structure, but some sixth sense made him stop at the door. Something was off, but at first he couldn't say what it was. Then looked down at his arm reaching for the door, and realized that the fur on that arm was standing up. He quietly backed up and saw his fur subside.\n\nRobert looked up at the barn. The big, two-story structure had several windows above the main door. He'd parked a tractor nearby which should act as a handy platform to take a peek through those windows.\n\nHe hopped up easily onto the tractor cab's roof, and once up there he kept himself low and out of the line of sight of the windows. Robert couldn't say why he was being so suspicious, but somewhere in the back of his mind he was thinking of his missing neighbor.\n\nRobert shuffled forward and then, ever so slowly, edged himself upward so that he could see down into the barn. Among the various storage bins and equipment was a large black 'hole' with glowing edges. He could see little bits of litter flutter around the strange phenomenon, as if the air was disturbed by its very presence. As he watched, the hole's glowing edges pulsed and the thing grew wider.\n\nSomething emerged from the hole. It was a metal box on a sinuous, tentacle-like arm. One face of the box had a large black lens, and Robert realized this was a camera of some sort. The camera spun with surprising speed on its supporting limb, and the lagomorph found himself staring right into that black lens. Almost on instinct, he did a backwards vault off of the cab that would have done credit to any human gymnast. There was a smashing of glass from above and behind him as his big feet hit the ground; that 'camera' must have fired something through the window.\n\nHe crouched for a brief moment, his heart hammering in his ribs. Then he turned and ran for his house as fast as he could. Hopefully his phone still worked, and hopefully he could remember the number for the local militia leader. As he ran, he could hear more smashing and crackling behind him as whatever-it-was did more damage to his barn.\n\n<p align=\"center\">__________________________________________________________</p>\n\nNed was still dealing with the notion of being famous. His whole part in Holly's adventure had been published along with the other details, and he'd had to shut off his phone to avoid the deluge of reporters trying to get an 'exclusive'. Both he and Holly had been all but imprisoned on the base; any stepping out of the gate would result in a big throng of reporters yelling questions and trying to surround them.\n\nThere was a small group of reporters nearby, but at the moment they had more important things to cover than him or even Holly. The cavernous room of Main Operations was filled with people, and all eyes were on John Dengar and Arnold Hunter. The two men stood at the main control panel. John was the one mainly operating it, while Arnold kept up a running commentary for the benefit of everyone else.\n\nAround the big torus of the portal itself was arranged Lt. Jenkins' Ranger platoon. The sight of the soldiers was a little disconcerting, but Ned's disquiet was mollified by the fact that they weren't armed. That had been the decree from the President himself. The first people through the portal couldn't be carrying so much as a butter knife. Right in front of the torus was a little six-wheeled robot with multiple cameras and a long cable that trailed back towards the main control panel.\n\nNed and Holly were just in front of the line of soldiers and right behind the robot. He took a deep breath to try to relax himself, and felt Holly's foot tapping the floor next to him.\n\nArnold's voice sounded throughout Main Operations. \"Okay, we've got a good charge on the capacitor banks. Those will give us the burst of power we need to initiate the portal. Once it's up, our on-site power plant will be able to provide enough energy to sustain it. Thirty seconds to initiation.\"\n\n\"Everything is green,\" said John. He looked back at the group nearest the main panel. \"We're all set, Mr. President.\"\n\nThe President nodded. \"Go for it.\"\n\n\"Twenty seconds,\" said Arnold.\n\nHolly's foot started to really go into overdrive.\n\nJohn's voice was calm. \"Ten seconds...superconducting cables are nominal...five, four, three, two, one, initiation.\"\n\nNed expected some sort of huge noise or flash. But it was almost anticlimactic. In the middle of the metal torus appeared the tiniest spark of pale blue light. In an eye-blink it had expanded to a ring of blue the size of a basketball, then more slowly it began to expand further. In the middle of that glowing ring was what looked like a field of long grass that waved gently under the light of a bright sun. The view through the portal wavered and shifted as if seen through water. Within a few more seconds the glowing ring was just a big bigger than man-sized.",
        "\"The portal is stable,\" said John. \"We did it.\"\n\nThere was a huge cheer from the assembled crowd as the little robot trundled towards the gate into another world. Holly's paw tightened around Ned's hand as the machine reached the plane of the portal. Without any apparent issue it rolled forward and through, and now Ned could see the robot sitting quietly in the middle of the grass. It had the same warped appearance as its surroundings.\n\nBrigadier General Gossett was monitoring the feed from the cable that now extended through the portal. \"We've still got good communication with the robot. Video images are now on-screen...\" His voice trailed off. Then, much more quietly, he said. \"Oh, no.\"\n\nThe assembled group turned to regard the huge screen that had been set up for the big event. In that screen now appeared a gently-sloping ridge, with that same field of gently waving grass marching up towards the crest of that ridge.\n\nAnd at the crest was a scene of chaos.\n\nSmall gray-furred forms darted back and forth along the ridge. They carried what looked like rifles, and were clearly making every attempt to stay low. Occasionally they would poke their head and rifle over the ridge to let loose a shot. Small cracks and distant yelling came through on the audio. Beyond the ridge were several columns of black smoke that loomed ominously over the battle.\n\nAs they watched, one of the lagomorphs stood up a little too much to make his shot. A bright red beam lanced out and up from somewhere beyond the ridge, and the unlucky rifleman simply fell apart as if sliced with a huge and impossibly sharp knife. There was a bright spray of blood as his various parts tumbled to earth.\n\nThe assembled crowd gasped, and Ned heard Holly give a high-pitched cry of shock.\n\n\"We're picking up shortwave radio, sir,\" said Gossett to the President.\n\n\"Put it on speaker.\" The President's voice was just as tense as Ned felt.\n\nThere was a crackle, and the room was filled with the sounds of panicked battle.\n\n\"...damn it, keep your heads down! Do not let them get a line-of-sight view of you!\"\n\n\"Sir, should we fall back?\"\n\n\"We can't let them past this ridge! Where are the damn mortars?\"\n\n\"On the way, sir. They finally found them in storage. It'll be at least four hours.\"\n\nThe voice of the commander sounded hopeless. \"In four hours they'll be past us.\"\n\nA new voice broke in. \"SIR! New portal has formed behind our position!\"\n\n\"Of course it has. Is there any movement?\"\n\n\"None, sir! Just a small wheeled vehicle on this side.\"\n\n\"Take it out.\"\n\nBefore Ned could blink, the robot sparked and jumped as several rounds went through it. The view of battle on the overhead screen went out.\n\n\"That was pretty good shooting,\" murmured Corporal Nowak from behind him.\n\nHolly spun. \"I need something blue!\" she called. \"We need to wave something blue through the portal! That's a signal for truce!\"\n\nOne of the reporters reached into her handbag and with a few seconds of rummaging pulled out a blue handkerchief. That was quickly brought up to the portal, along with another robot. Holly tied the bit of blue cloth onto the very front of the robot, and everyone watched with bated breath as the new robot rolled forward. It parked beside its fallen comrade, and the air was filled with the sound of radio transmissions again.\n\n\"...it's just sitting there, sir. Looks like a truce-flag has been tied on the front.\"\n\n\"The robot has transmission capability, sir,\" said General Gossett. \"Do we make contact?\"\n\nEveryone in the room turned to look at the President. Ned had always wondered why anyone would want such a crummy job, and had figured it took a certain breed of sociopath to put up with the constant downsides that came with the position. And now, especially, he did not envy the President one bit. The man seemed to wilt a little under that combined stare, but he quickly straightened up again.\n\n\"Radio them, General,\" he said in a firm voice. \"Tell them that we stand ready to offer assistance.\""
    ],
    "authorname": "Mr_Shoggoth",
    "tags": [
        "furry",
        "anal",
        "cunnilingus",
        "fellatio",
        "lesbian",
        "furry novella",
        "furry erotica",
        "supernatural",
        "humanoid rabbit",
        "lagomorph"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/work-the-problem-ch-04"
}