{
    "title": "Stepping through the Hedgerow",
    "pages": [
        "Author's notes\n\nHere is the next trip into my fertile imagination. Understand that this isn't a quicky sex story, but another one of my love stories. Please remember that this work of adult fiction is copywrited and all disclaimers apply. I need to thank Mercurylove for editorial services. Please feel free to comment and vote. \n\nEnjoy:\n\n\n\n\"But Father, I don't want to marry him!\" She pleaded for her life. She had only one shot at any type of freedom and she knew it. \"He's so old and stodgy. All he cares about is our land and how many of his dogs he can have doing his bidding. If I get married, I want my husband to love me, not some flea bitten cur.\" She pouted prettily.\n\n\"Stop it! You are quickly coming up to your mating time. He is the only eligible male in the tribe. We have to increase our lands. The hedge is shrinking. The humans keep encroaching into our territory with their wanton destruction. We have to do something.\" The tall grey haired male said with authority. \n\n\"But Daddy, He's so old. He looks like a shriveled up prune. I know I'm only two hundred, but still. Can he even give me children? If there are no more children, then we won't need the land anymore. That's what happened to so much of the old forests. The caretaker's forgot to have children and let the humans walk in.\" \n\n\"Enough...! I was there, I know what happened!\" He shouted at his only child.\n\n\"I won't do it! I won't marry some shriveled up old gnome. I rather marry a... a, human.\" She tossed her long stark white hair behind her and turned away from her sire, knowing he wouldn't strike from behind. \n\n\"You've been listening to your mother again.\" He sighed sadly. \"That was long ago. I've accepted my fate.\" He put his hands on his daughter's shoulders. \n\n\"But Daddy, you were born human. If only I could find someone like you...? Can't a girl dream?\" She turned to her father and pleaded. \"It wouldn't take that long... There are so many humans now. I should be able to find a good one in a decade or maybe two. I'd be back before the new millennium. I might even find one with land next to the hedgerow.\" \n\n***\n\n\"He's waking up.\" A disembodied voice said somewhere above him. Him... who was him? He struggled to remember even the simplest of things. Like his name, where he was, and why he hurt so badly.\n\n\"It's okay Mike, I'm here.\" A soft woman's voice said.\n\n\"Mike, is that my name? Why does that voce sound so familiar? Am I Mike? Who the fuck is Mike?\" He chanted to himself as the clawed his way out of the dark tunnel. \n\n\"When can I take him home?\" The voice said. He could hear the fear in the voice.\n\n\"We don't know. This is the first time he's responded positively to outside stimuli. His injuries are healing, but there are still too many unknowns. He's lucky that his groin was protected, even with the burns on his arms and legs. At least he'll be able to walk again if the head injuries ever heal... and with all the burns and shrapnel damage, we just don't know.\" A whiney male voice said.\n\nHis head pounded with the vibrations coming through his ears. He wanted to scream at them to 'shut the fuck up' but didn't want to move his jaw to do it. He hurt and was sore from head to toe. He winced when a bright light flashed in his right eye. Memories stabbed at his brain.\n\n***\n\n\"Echo Charlie Five Niner... we've cleared the barrier.\" He listened to his radio man as they left the relative safety of Firebase Searchlight. He could feel the vehicle move under him as he stood at the big fifty cal gun at the top. At least he could get some kind of breeze, even if it was a hot one. \n\n\"Rodger that. Head north twenty clicks and meet up with Foxtrot Alpha Seven, Seven; for further.\"\n\n\"Copy that. See you in hell. Out...!\"\n\n\"Already there Five Niner, and out.\" \n\nJust another lousy fucking patrol in the godforsaken desert. He again wondered why he joined up, but he did, and now it was game time. He knew the locals didn't like the foreigners on their land and wanted them out. Didn't they know he didn't want to be there either? If he had his choice, he rather be stationed in Alaska, Alabama, or the fucking South Pole; than there. \n\nHe kept his eyes moving, looking for anything out of the ordinary. He knew he might have just a second to see it before all hell broke loose. He had five extra bottles of water to toss to the kids that always followed them out of the small village that stood between them and the open road. He knew some of the guys who teased the kids with water, but he just thought that was mean. \n\nHe would smile as he tossed the bottle to the smallest or slowest of the kids, so they could get their share. \"You're a sap, you know that.\" Blake said into the head set.\n\n\"Yeah well were here trying to make friends and peace so we can get the fuck out and back to the real world.\" He answered back smiling.\n\n\"Shit, these fucking rag-heads would blow you away if you let them. I say kill them all and let god sort them out.\" Hernandez said into his radio. \n\n\"Oh, like you've got room to talk, you fucking Mexican bean dip. I bet you're momma's back was wetter than whore in a rain storm....\" Blake teased back.\n\n\"Shut the fuck up about my momma...!\" Hernandez said and clenched his fist. \n\n\"At-ease that bullshit...! Keep your mouths shut and eyes open.\" The team leader yelled, stopping the bickering. \n\n\"Bogie at nine o'clock.\" He spun his big gun and then felt the whoosh of hot air. \n\n***\n\n\"Why is he twitching like that? Make him stop, its gross. Is he going to be ugly now? How can I take pictures with an ugly man?\" A high pitched voice screeched.\n\n\"Shut up Susan, quit being so shallow for once in your life. We're lucky he's still alive.\" \n\n'Susan... who the fuck is Susan?' He asked himself. He wasn't sure he wanted to know. She sounded like a real bitch.\n\n\"I was engaged to the most handsome man in the tri-state area. We were Prom King and Queen, for god's sake. Now look at him. How do you expect me to look at that every day? Look at his face, he's so ugly!\" He flinched when he heard the loud slap. He remembered flinching.\n\n\"Susan, leave now! I don't know what my son ever saw in you. You're ten times as ugly as my son will ever be from his injuries. The only difference is that his is on the outside, while yours is on the inside. Tell Kelly to give you a ride home, because I'm not taking you!\"\n\n\"Ladies, quiet down! He's awake, even if he can't show it. If you are going to cause a scene, you need to leave.\" A brisk no-nonsense voice said. \"He's my patient and he needs his rest if he ever wants to leave this hospital.\" He heard the sounds as someone shoved the arguing women out of the room and the soft click of his door closing. \n\n\"It's okay solider boy. They're gone for now, you just get some sleep and let yourself heal. I'll keep those two alley-cats in check. I've got you. You just go back to sleep. Momma Salinger's got's your back.\" The voice took a soothing tone and he felt the warm fluid go up his arm and the darkness over take him again. \n\n***\n\n\"It is time for you to come home Estelle.\" Her father told her as he looked at the mess of the place he had once called home. \n\n\"But Daddy... I haven't found him yet. I know he's out here. I can feel him. I have felt him for years. He's out here somewhere.\"\n\n\"We've given you twenty five years. It is time for you to come home and face your destiny.\" Her father said as kindly as he could.\n\n\"I have one more year. Please daddy, if I can't find him in one more year, I'll marry the gnome, if I have too. But please daddy, it's only one more year!\" She begged.\n\nSighing, he lifted up and smelled the air. \"He is not here. You are looking in the wrong place. Come home and ask your mother. If she says yes, then I will give you one more year without interference.\" He reached down and stroked the young face that reminded him of his beloved wife's and sighed. He held her hand and pulled her through the hedge.\n\nThey walked through the dark woods until her father stopped. \"She is in there. I cannot go any farther.\" He said sadly.\n\n\"Why not...?\" She hated the sadness in her father's eyes.\n\n\"She won't let me. She has her reasons, so don't even ask.\" He warned her with steel in his voice.\n\n\"You two are being stupid. You love each other, but refuse to live together. I could have had brothers and sisters by now, but no... you two have to be stubborn about it.\" She spun and marched into her mother's clearing.\n\n\"Show respect daughter! I could bind you here for eternity if I so choose.\" Her mother's voice came to her mind as soon as she entered the small clearing.\n\n\"No mother, you can't. You might think you can, but as I learned when I was a child, I am stronger with the magic that you are. Queen or not, I am stronger. You might gain your strength back if you went home to father!\"\n\n\"Not this again. I made a mistake and I am paying for it. The forest is paying for it.\" \n\n\"Feldergast...!\" She spat angrily. \n\n\"Watch your mouth child; I am still your mother.\" She warned sternly.\n\n\"So mother, you are saying I am a mistake? I thought you taught me that there are no mistakes where life is concerned. If it brings life it can't be a mistake. Father misses you. He loves you and you are denying him your love out of penance? In the words of the humans, get real mom!\" She stalked around the clearing looking for where her mother was hiding.\n\n\"You are too young to understand.\" Her mother sighed. \n\n\"Then I'm too young to marry the gnome! Make up your mind mother. I'm either too young, or for once in your life explain it to me! In less than a hundred years I will be Queen and you can finally rest. It might be a good thing to have my father at your side. You made such great magic when you were together.\" \n\n\"And we almost broke the world doing it. It was too strong, I couldn't control it. My love was too deep. I could have lost everything.\" She flashed before her daughter, a taller, sharper version of the two.\n\n\"Feldergast...! And you know it Mother.\" She raised her hand. \"You have hurt my father for too long. The forest suffers from your neglect. So what if he was human... he isn't now. He is still strong enough to handle you I bet.\" She challenged her mother. \"Climb down from your trees and look at the world around you. Look at what your love made. I am the strongest since the flood. And you want me to marry the gnome?\" She asked sarcastically. \n\n\"I don't want to lose you. I don't want you to have to make the choices I did. I'm trying to protect you! Can't you see that?\" She told her daughter, unable to hold her gaze.\n\n\"Oh great Goddess, you're afraid. You are acting like the Goddess herself when she cracked the world when she and God turned their faces away from their misbehaving children. No wonder the humans can't get it right. It always takes two to create. No wonder the world is shrinking, both ours and theirs. If the parents are not...\" She looked up at her mother and saw the fear.\n\n\"How can you know these things?\"\n\n\"I'm young Mother, not stupid. I've spent over twenty years with the humans. They worship the Father in one of his many guises. We worship the Mother; and neither of us can see the other's point of view. They spend most their time in wars about who is right, when they are all wrong. What would God and the Goddess do if they knew? I wonder...?\" She stopped pacing for a moment in thought. \"What would have happened if they didn't leave and issue their prophecies? There is so much greatness out there and in here. We could be so good, if we came together. Get rid of the greed and pain. Let the forest grow and cleanse the air.\"\n\n\"I once had such dreams,\" Her mother said, touching her daughter's face, \"when your Father fell through the hedgerow. He was wounded and in such pain. He said he was fighting in a war that he should never have been in. He cried like a babe, begging me to let him die. I knew as soon as I touched him, he would rule my destiny. I loved him too much and when we mated, it almost cracked the world again.\"  \n\n\"No Mother, it didn't. It started healing a breach. I've found it. Yes, the world shook, but it wasn't cracking. It had to happen. There is a river that flows now that was hidden. This grove you live in is Father's, yet he is forbidden by his love for you to enter. Turn and look at father's home. It lies in ruin, just as your love for each other. Look at the place where I was conceived. You can hardly see it anymore.\" \n\n\"And I would spare you this pain.\" She tried to reason with her daughter. \n\n\"To have a mate love me as much as Father loves you, I would gladly endure whatever pain that has to come. Look in his eyes just once in the next year and you will see it too. He's waited so long. As you once told me; love can never be wrong. I love you mother, but I must do this. I promised Father I would be back before the Millennium. Until then, I will be on the other side of the hedge.\"  \n\n\"So be it! Know that I cannot protect you anymore.\" Her mother turned and faded into the woods.\n\n\"Yes, but you will try; and we both know it. I love you mother. I will see you in a year.\" She sighed and walked out of the glen. She was met by her father just where they had parted.\n\n\"How is she?\" He asked with his heart in his eyes.\n\n\"If you would drop that stubborn pride and go home, you would know.\" She hugged her father. \"She is tired and worried. She needs you more that she will ever tell. You need her. One of you has to be strong enough to break this cycle or it will all come to ruin.\" She warned her father.\n\n\"How is the house? Is she taking care of it?\" He asked trying to change the subject.\n\n\"Like your marriage, the foundation is still there, but the house is in ruins.\" She smiled knowingly.\n\n\"WHAT...! I gave her the house to stay in to get over her grief. Where does she live if not in my house?\" He yelled in shock.\n\n\"In the trees of course. She is the Queen of the Forest. Where did you expect?\" She knew she was pushing, but something had to be done.\n\n\"My Grandfather laid the footings of that house by hand. Each stone picked and stacked with the greatest of care. How could she let it fall into ruin?\" He demanded of his daughter.\n\n\"How am I to know? You two haven't talked to each other in over a century. Why don't you go do something about it? It is your home too.\" She smiled sweetly, pushing just as much as she dared.\n\n\"You...\" he took a deep breath. \"You are going to be a Queen to be reckoned with. Is my home really in ruin?\" He asked knowing her game and refusing to play.\n\n\"As close to it as I ever want to see again. Father, it is time to stop punishing yourself for something that isn't your fault. I hate to say it, but you both are wrong. It is time to fix it before it can't be fixed. The foundation is strong, but.... Well you're the builder. After so long, even that will be beyond repair. You both love each other. Now rebuild a house to be proud of. Somewhere to stay out of my way, when I become Queen.\" She smiled at her sire.\n\n\"I'll walk with you to the border.\" He said and folded his hands behind him. They walked in silence as he pondered what his daughter had said. \n\nNeither one cared as the moon shone down on them as they walked in peace. Estelle knew her father would need to think things over. He thought everything over. She just wished he would turn off his brain and listen to his heart, for just once. She knew she could use the magic on him, but she also knew this was something they had to work out themselves. \n\nWhen they reached the border, her father shocked her. \"Show me my home.\" He said and stood there like a statue.\n\n\"Are you sure? You could look yourself. You do have the power even if you don't use it that often.\" She looked at her father.\n\n\"I would only see what I wanted to see. Let me see it from your eyes.\" He sighed and knew Estelle would see it much clearer than he ever could. \n\n\"As you wish Father.\" She reached up and cupped her father's face in her hands. She sang the words and opened her mind to her parent. She held him fast until she had shown him everything she wanted him to see and then leaned in and kissed him tenderly. \n\n***\n\nMichael was walking the old deer path on his grandfather's land. He wished he could remember ever liking doing this when he was a kid, but those memories were locked away from him. They said he might never remember. He was surprised he even remembered the old place after they let him out of the rehab center. \n\nIt didn't take him long to hate the attention he got for being a wounded veteran. He didn't want to remember what he did over there. He didn't want to be treated like some type of hero. It made him feel like a murderer. Why would anyone take someone else's life? Why did he allow himself to pull the trigger? Could he ever wash the blood off his hands? \n\nHe sighed, knowing this was the day he was supposed to get married to that knock-out blonde. Well she looked like a dream, but acted like a nightmare. But still, it made him sad that he wasn't going to get married. He knew no one would want him now. All he had to do was look in the mirror and see the horror of what he had become. No wonder she ran off with that other guy. He really couldn't blame her.\n\nThe next thing he had to do, was get rid of his mother. He was tired of her hovering over him like he was a child in diapers. He would never be able to do what he knew had to be done with her around. He knew it was time for him to join his buddies. He knew it had to be a mistake that he survived and they all died. He knew he was supposed to die with them. Now he could rectify that situation. \n\nHe took a deep breath of the moist air and walked with purpose for the first time in over a year. At least he wouldn't be hot when he joined his teammates. That was one of the few things he remembered, the heat. The dry unrelenting heat. In less than an hour, he knew he would feel nothing again. Honestly, he welcomed it. It was long overdue. \n\nHe ignored the brewing storm. He was focused on getting to the ledge of the tall cliff. So what if he was killed by lightning? It wasn't like he was going to live to see another day anyway. It might do him a favor and kill him first. \n\nAfter a loud crash of thunder, Michael trembled under a tree, fighting the nightmare that had become his life. He was trying to tell himself. \"Quit being such a pussy and do this. It's just fucking noise.\" But he couldn't get his feet to move.\n\nThen he thought he was dreaming. He wiped his eyes to clear them. He saw a tall thin woman walk through the brambles next to the path. He could've sworn she said something and there was another crash of thunder. Then she smiled. \n\nShe took two steps onto the path and gasped. She saw Michael, and he was struck by her penetrating blue eyes. He shook harder as she walked up to him. He couldn't understand anything she said. He just wanted to run and get this over with. He had never felt like such a chicken-shit coward, in his life. At least he didn't think he did. \n\nHe finally found the guts to run, when her slim long fingered hand touched the scar on his face. In his mind he heard \"Sleep...!\" and darkness overcame him. \n\nEstelle grunted under the weight of the young man as he collapsed. She couldn't understand why someone so young craved death like he did. She walked through the Hedgerow, in a good mood. Her father was finally going to take measures into his own hands. She hadn't taken a couple of steps, when she felt the death pouring out of the man.\n\nHe was a good looking man, for being a human. Oh sure, he had scars, but he was tall and fit with great muscle tone. He moved with grace and purpose. Unfortunately his purpose was seeking his own death. She knew he couldn't understand her. Most humans couldn't. Estelle looked down and did something she had never done before. She reached into his mind to find the reason for his death wish. ",
        "Instantly her mind filled with visions of death and blood. Of killing and evil. She felt the heat and the blast. She saw the blood and the parts of the people around him splattering her with its gore. She felt his wish to die with his team. She felt his hurt, anger, loathing, and pain.\n\nAfter reliving his injury three times, she pushed harder against the block. She felt it waiver for a second and something clicked deep down inside her. \"No...! It can't be. I've looked for so long I couldn't just stumble over him like this.\" She jerked up straight as the rest of Michael's life flashed in front of her eyes. Then the door slammed closed. She tried to push again, but was blocked.\n\n\"The magic is forbidden to you until this is over.\" Her mother's voice screamed into her head. \"It is just-payment for showing your father what he should not have seen.\" Her mother scolded.\n\n\"Good luck Mother. I think you're going to need it. I've seen enough... for now. Tell Father I love him when you have regained your temper.\" She threw her answer back into her mother's thoughts and laughed at the slamming of the door in her mind. \n\nShe smiled again as the storm of her parent's argument raged around her. She knew she would have to find Michael shelter before her mother's temper got the best of him. She touched her necklace and sang. She lifted Michael up and followed his memory back to the warm cabin, deep in the woods. \n\nThe lights stayed on just long enough to get Michael to bed before a loud crash and total darkness. Estelle rubbed the necklace and a bright spark danced in her palm. Softly blowing the spark, instantly all the lamps and candles were lit, giving the cabin a soft glow. She looked down and touched his face and whispered. \"Heal...,\" and walked out. Her stomach grumbled and she started poking around the rambling cabin, to find something she could eat.  \n\n***\n\nMichael didn't want to wake up. He'd rather focus on the beautiful woman of his dreams. It didn't matter to him that she had white hair, or was reed thin. She didn't need huge breasts and a bubble butt to prove she was a woman. Her eyes captivated him. They were almond shaped and deep blue. They were almost lavender, ageless and deep. The sound of her voice was like the best music he had ever heard, not that he could understand the words.\n\nHe knew he had to be in heaven. His life was over and she was his angel. But then why would he have to relieve himself? It was the nagging sensation of his full bladder that made him realize it was only a dream. \n\nSighing as he got up, he hoped that maybe today he would be strong enough to do what needed to be done. He walked nude to the bathroom and started emptying his bladder. He was mid-stream when he caught something out of the corner of his eye. \n\nHe turned and there she stood. \"What the hell..?\" He gasped and tried to turn off the flow, as he blushed. \n\n\"Good you awake. Come eat when done.\" She turned and walked away, but not before Michael saw the small smile. \n\n\"God damn son of a bitch....\" He muttered as he shook the urine off his hand. \"Just what the fuck is going on here?\" He asked as he mopped up his mess. \"Jesus fucking Christ on a crutch.\" He continued to swear as he looked out the door, before bolting to his room, looking for something to cover himself with.  \n\nHe was still blushing when he followed his nose to the food on the table. \"What the fuck is this?\" He asked without looking at the woman in his cabin. \n\n\"Food... you eat, you need strength to heal.\" She said and looked at him. \"Why you curse so much?\" She asked tilting her head sidewise. \n\nHe could have sworn her ears had a slight point to them, but turned away so he wouldn't be caught staring at her. \n\n\"Did my mother send you to watch over me like some fucking child?\" He growled. \n\n\"Why, are you acting like a child?\" She looked at him, wanting to reach out and take the pain away. \"You talk like a child, who just learn curse words.\" She smiled. \"No, I not meet your mother.\" She flinched at the thunder that had been booming off and on the last few days as her parents argued.\n\n\"It's just more thunder. It can't hurt you.\" Michael said and sighed. He looked out the window and knew he couldn't make it to the cliff today. \"Fuck it all anyway.\" He breathed. \n\n\"I know, parents need to argue. It will clear the air after.\" She tossed her long white hair behind her and looked into Michael's eyes. \"Cliff is nice place, but you no go until you have healed.\" She told him with steel in her voice. \n\n\"What the fuck do you care?\" He flinched when he realized she knew what he planned. \"Why can't you leave me alone? Why won't you just let me die?\" He screamed at her, hoping to scare her away.\n\n\"Because, it is not your time. I will not let you yet. You must heal, then you can see cliff.\" She rubbed a flat stone that hung around her neck and told him. \"Time to sleep again. Sleep and Heal.\" \n\nHe didn't know why, but he got up and headed back to his bed. He got in and he felt her pull the covers over him. \"I want to die.\" He told her honestly. \"I don't deserve to live. I deserve to die. Life hurts too much!\"\n\n\"I know.\" She said and he slept. \n\nAnd so it went. Estelle would wake Michael up every couple of days to give him food and then put him back asleep. After the fourth day of listening to her parent's fight, she told them to take it somewhere else. She needed all her strength to heal Michael. She was surprised when they listened to her and the storm moved off. She felt sorry for where ever they decided to vent their anger, but she had other things to attend to. \n\nThen next time Michael woke up, he wasn't surprised she was still there, but stopped cold when he realized she was nude. Her skin was flawless and her hair flowed down her long neck, over her shoulder and swelled to her perfectly pert breasts. His eyes took in her beauty as they absorbed the soft contours of her hips as they flowed down to her sculpted legs. \n\n\"Now, we are as you say, even. We have both seen the other natural so you can quit getting red over me seeing you passing your water.\" She said and slipped into her form fitting fern green garment. \n\n\"I don't even know your name...?\" Michael said still stuck in place by the sight of such perfection.\n\n\"Estelle. Come eat Michael, you need your strength. It has been three days this time.\"\n\n\"How long have I be sleeping like this? Every time seems to blur in to the next.\" He asked sitting down at the table. \n\n\"One moon, twenty seven days.\" \n\n\"Fuck me...!\" He swore.\n\n\"No, never...! We have talked about all the swearing. That is ugly word.\" \n\n\"Sorry... I'm not used too.\" He tried to apologize, then stopped. \"Hey, wait a minute, this is my house.\"\n\n\"Yes, and I am your guest. Do you always curse your guests?\" Estelle looked at him and into him, making Michael think she knew everything about him.\n\n\"I never swore until I joined the....\" He cringed at the flood of memories.\n\n\"Yes, but you're no longer a warrior. You are free of that, if you want to be.\" She interrupted his thoughts.\n\n\"I'll never be free from what I've done.\" He said, convinced of his guilt.\n\n\"Flagsgraph... what have you done so bad?\" She bit out at him.\n\n\"If I didn't know any better, you just swore.\" He smiled at the look on her face.\n\n\"Yes, but it is better than your 'Fuck'... word.\" She squinted at him and his head filled with perverse visions of the most unnatural sex scenes he could imagine. \n\nJust as soon as they started, they stopped. \"So tell me, what have you done so bad?\" She sat back and crossed her thin arms. \n\n\"You have no idea what I've done. I've killed, I've bathed in the blood of my victims, I've, and I've... lived when I should have died...!\" He pushed away the half empty bowl in front of him. \n\n\"You also gave the young and weak water when you could.\" She reminded him.\n\n\"How do you know that?\" He spun on her in anger. \n\n\"You talk a lot in your sleep.\" She deflected his anger. \"You are a good man, if you want to believe it or not. If you were not, then you would not seek death like you do. You were a warrior. It was your duty to fight. But it was your gift to give the slow and the weak water over the strong and the fast.\"\n\n\"Who are you?\" He asked stunned.\n\n\"I am Estelle.\" She held up her hand to stop him. \"You are Michael. That is all we need to know for now.\" \n\n\"Where do you come from Estelle?\" He asked in awe of the woman sitting across from him. \n\n\"From the other side of the hedgerow. One more good sleep, then I will take you to the cliff.\" She said as she rubbed the flat multi-colored stone that hung around her neck and between her breasts. \n\nThis time as he slept, he had vivid dreams. In one, he was standing over the edge of the cliff and looking down. He didn't know why he wasn't falling when he heard Estelle's voice.\n\n\"That tree would have slowed your fall. The branches would have broken your back. You would have laid there for days praying to die, only to be found and taken to a healer. You would have lived for years in a cage, in constant pain. It is not your time to die. No matter what you do to your body, you will live until it is your time. I'm sorry about your friends, but it was their time. Only the Goddess and her Mate know the time. Sleep now and heal.\" \n\nThe rest of the night, he was being teased about having so many kids in his dreams. \"Don't you know how to fix that...? Is that all you two can do...? You're not going to repopulate the forest all by yourself.... Naww he's just bragging. Look at his face. He's proud she's pregnant again. It keeps her docile. Just wait....\" The voices teased him. \n\nIn front of him was a sea of faces calling. \"Father.... Father, we want to be born now. Please talk to Mother. She has to be Queen soon.... Please Father we want to be born.\" Michael jerked up in a cold sweat. \n\nHe felt the sun on his face from the open window, but didn't know what time it was. When he looked at the clock, all it did was blink zeros at him. He reached up and rubbed his face, feeling the beard he never knew he could grow. He stood up on weak legs and stumbled to the window. He was going to shut it, but then he saw her. \n\nShe was dancing in the sun. Her hair flying, with her dress whirling around her legs and hips. He smiled as a wave of joy hit him in the chest. He couldn't stop watching her even when he realized she knew he was there. She did a spinning jump as their eyes met. He thought she would fall, but she landed with a simple grace and nodded in his direction. \n\n\"Gailen grah; Est noma si talkin.\" She said as she skipped over the low bench. \"Good Morning Michael, the sun welcomes you and the Goddess awaits us to meet the day.\" She smiled at him as she walked to the front door. \n\nHe went down the five steps to the main floor and met her in the open great room. \"You're not one of them Wicca Whacko's are you?\" He asked irritated for some strange reason.\n\n\"How can you be a wise whacko? From what I've learned, isn't a whacko someone who is crazy?\" She asked with mirth in her eyes.\n\n\"I was just wondering, with all the goddess crap you've been spewing.\" He said, not knowing what to feel. \n\n\"Ah, I see... they worship the Goddess Earth. Some call her Lilith, others Pandora, even others have other names for her. Gaia is one, but no; I don't worship her. I worship the true Goddess. I worship the Universe. She who gave life to all.\" She smiled again. \"But, it is too early to talk about beliefs yet.\"\n\n\"According to what my mother believes, it was God... a male deity that brought forth life.\" Michael didn't know why he said that.\n\nEstelle just laughed. \"Oh, he was there to be sure. He had to be. Just like it takes a male to impregnate any female. But what man has the strength to give birth? It is the Woman who conceives. It is the male who gives it spark. It's the law of nature. Even your God, and my Goddess have to obey the law.\"\n\n\"You know there are places where they would stone you for saying that. I've been there.\"\n\n\"Yes, I know. It is sad really. But, we have other concerns. We need to go to the market and get food. You have no garden and the larder is getting bare.\" \n\n\"The what...?\" Michael asked. \n\n\"We have no more food. We need to go to the market and get food, or you'll have to hunt and scavenge for yourself and you are not yet strong enough for that.\" She said, as she slipped into fawn colored hose under her green top. \n\n\"Oh, I never... I didn't think.\" Michael was dry mouthed while watching her.\n\n\"Yes, I know, but you are getting better now. Some of your wounds will never fully heal, but you are doing much better.\" She looked at him as he stood there. \"Are you going to put clothes on? From what I remember, you have to be fully clothed to go to market.\" She laughed at him as he looked down and realized he again was standing there naked. \n\n\"Damn it. Why didn't you say something?\" He blushed and tried to cover his groin. \n\n\"Because you were too busy looking at me. Let's go, I'm hungry. Can I drive? I've never driven before. It looks like fun.\" She winked at him as he headed back to his room. She laughed at his grumbling, as he tossed things in the room, looking for clean clothes. \n\nShe waited for him by his truck until he came out in some jeans, a t-shirt and a flannel shirt over it. He was still tucking in the flannel shirt as he walked out. He didn't know why, but he opened the passenger door and let Estelle in.\n\n\"What, I can't drive?\" She asked as he closed the door. \n\nAfter climbing behind the wheel, he answered. \"What makes you think you could drive if you've never done it before? Where do you come from, where you haven't driven before?\"\n\n\"It doesn't look that hard. You put the metal thing in the hole and make it go. You turn the wheel when you want to turn. I've seen it done many times. I've just never tried it.\"\n\n\"When did you learn to speak my language so well? The first time you spoke to me I could hardly understand what you were saying.\" Michael asked just figuring out she had used contractions in her last sentence.\n\n\"It's not that hard. A bit confusing at first. You use so many words to mean different things but sound the same. I have been with you for over a full cycle of the moon. A month I think you call it. I had to learn your words and what they meant if I was to be able to help you?\" She smiled at him and made him forget what he was going to say.\n\nMichael shook his head to clear it and started the truck. He bit his lip as he carefully drove down the winding dirt road to the highway into town. He wanted to look at Estelle, but knew better. He had to concentrate on the road. It was only the second time he had been on it. When he turned onto the highway, Estelle opened the window and stuck her head out of it.\n\n\"Are you okay? Do I need to stop?\" he asked not knowing if she was going to hurl on his truck.\n\nShe looked at him, her eyes bright. \"It almost feels like I'm flying.\" He wanted to reach over and touch the soft point of her ear as her hair flew behind her. \n\nBy the time they had reached the grocery store, Michael had almost forgotten his disfigurement. Estelle had him smiling like he had done before he was marred for life. He was brought up short by the look on a woman's face when he parked. She pulled her small child behind her and quick stepped him to her car. \n\nMichael pulled up his collar and followed behind Estelle refusing to look at his image in the clean glass. Estelle sighed as she felt his pain. She knew he needed this more than the food they were going to purchase. \n\nMichael knew that every male in the store stopped and looked at Estelle. He started walking slower, so she wouldn't have to be embarrassed by him being near her. He would groan as every time he tried, she would just call him up to explain something she was trying to read on the food packages. \n\nHe felt the eyes of the two pretty boys. He knew they had to be in the local college. They had that vibe about them. Estelle acted like she was oblivious to their open stars. He knew the stare and the dare as one pushed the other. He knew they would come over and try and talk to Estelle. He knew it and could do nothing about it. \n\n\"Michael, don't they have any goat or lamb here. I refuse to eat pig and cow is only passable. Now, Beaver is flavorful.\"\n\n\"I'd like to eat her beaver.\" One pretty boy said to the other just loud enough to be heard. \n\n\"You wish. I'll be in the way.\" His friend said rudely. \"Watch this....\" He smiled. \"Hey sexy, where have you been all my life?\" He walked up all grins.\n\n\"In the Forest.\" She ignored the picture in the immature boy's mind. \"Oh, they do have lamb.\" She said and moved away.\n\n\"Crash and burn dude. Now watch the master at work.\" He smiled and approached. Michael wondered how Estelle would respond. \"Hi, I'm sorry about my friend. He doesn't know how to act around a real woman. Me on the other hand, I'd just like to know your name and we can take it from there.\" He reached out to touch her.\n\n\"How do you know if I'm a real woman? Are there unreal women?\" Estelle asked looking at the other boy.\n\n\"Because I'm a real man and I know my opposite when I see her. I'm Tony by the way Tony Aiello.\" He said it in a way that he expected her to know who he was. \n\n\"How interesting.\" She tried to ignore him also. \"Michael, what is this?\" She held up a bag of tripe and asked. \n\nTaking a deep breath he stepped up. \"Cow intestine, they call it tripe. I've never had it.\"\n\n\"Yuck... I don't blame you.\" She dropped the package and wiped her hands down her legs in a quick gesture of revulsion. \n\n\"Hey Grizzly Adams, why don't you step off? I'm talking to the lady.\" The guy who called himself Tony said stepping between Estelle and Michael. \n\n\"Dude, why don't you just leave her alone? If you can't tell, she isn't interested.\" Michael said in a flat voice, hoping he would catch a clue. \n\n\"I said step off Scarface. She might want to look at something better that your ugly mug.\" He spit out as his friend snickered.\n\n\"I think Michael is right. It was nice meeting you, but we have things to do.\" Estelle tried to move past the rude boy.\n\n\"Not so fast...! I want to at least to know the name of the woman I'm going to marry. Why don't you kick that loser to the curb, and we could make a great couple.\" He grabbed her arm.\n\nBefore she could bring her power to bear, Michael stepped up and grabbed the guy's hand. A second later there was a sickening crunch as the wrist was forced beyond its limit and the bones broke. As the guy gasped, Michael struck him in the throat to quiet any screams. He brought his hand back to finish him off, when Estelle's voice cut through the red haze in his mind.\n\n\"Michael...! Don't kill him. He hasn't harmed me. Stop it!\" She softly touched his arm and he dropped it. \n\n\"Dude... I'm calling the cops. You don't know who you're fucking with? His dad's like the Sherriff here.\" Tony's friend said looking at Tony, but stopped when he saw the cold look in Michael's eyes.\n\n\"You will do nothing.\" Estelle told the boy. \"You and you friend have brought this on yourselves. Didn't you mother ever teach you to never interfere with another man's woman?\"\n\n\"What's going on here?\" A tall man asked as he came rushing forward. He stopped instantly when Michael turned. He knew the look. He once had the same look after he came back from his war. \"It's okay solider, I just need to know what happened.\" He held his hands out wide. \n\n\"These boys were bothering me and would not leave. It would have come to nothing, but that one,\" she pointed at the one writhing on the ground, \"grabbed me.\" \n\n\"That's Sherriff Aiello's son. He didn't do nothing.\"\n\n\"He didn't do anything. And yes he did. If she said he grabbed her, then it would be the same as someone grabbing my wife. I would've done the same thing. Pick up your friend and follow me.\" The manager told the other boy.",
        "Michael stood between the other men and Estelle. When they started walking toward the back, he followed. \"Not you son. You and the young lady have a nice day. I also would like to thank you for your service.\" He offered Michael his hand. \"Been there done that.\" He nodded letting Michael know he too was a veteran.\n\n\"Come on Michael, we need to pay for our stuff. We are sorry this happened.\" Estelle said as the manager walked away. Estelle was silent as Michael paid for the food in the basket. She remained quiet as he loaded the truck. She didn't acknowledge him as he held the door for her.\n\nMichael sighed at the silent treatment. He didn't care. He would have killed them if he could. Maybe if he got in a fight, he could suicide by cop. He looked at Estelle and wondered if he could really end his life. For some godforsaken reason, this exquisite creature cared about him. \n\nHis thoughts raged in his mind as he drove. Every so often to be interrupted by a face of different children. He shivered when one little girl's face, with tears flowing down her cheeks, looked at him and it broke his heart. She looked just like a younger Estelle, but with mist green eyes. The same eyes, that looked back at him every time he looked into a mirror. \n\nEstelle could feel the torment and sorrow from Michael. For some unknown reason his actual thoughts were hidden from her. She felt bad that she had caused him pain. She was also mad at him for almost killing that stupid boy. He would have to learn control before he could ever take up the mantel of power as her husband and the Queen's protector. She didn't speak, because she didn't know what to say.\n\nMichael pulled up in front of the cabin and turned off the truck. \"I'm sorry....\" He said and got out. Estelle felt him close her out as he started taking in the supplies. \n\nShe tried to push against the barrier in his mind only to be met with darkness. He wasn't seeking death, but the spark of life hadn't returned either. She didn't know what to do. She knew she was fated to mate with this man, but not if she could ever love him, like her father loved her mother. It was the first time she ever stopped to think things through.\n\n\"It is about time Estelle.\" He Mother's voice rang in her head. \"You will be Queen sooner than you think. You must always think of the reaction to each and every action you make. You are not some shepherd's daughter, but a future Queen.\"\n\n\"Have you reconciled with father yet?\" Estelle threw back at her mother. \"Are you finished hurting him and the forest with your neglect?\" She didn't want or need her mother's interference in this. \n\n\"That is not your concern!\" Her mother shot back.\n\n\"I hope he makes you beg before he forgives you Mother. You tend your mistakes, and I'll attend mine.\" She spun and headed into the cabin, and closed the door in her mind. \n\n***\n\nAfter the chores were done and supper was in the oven, Michael waited out on the pole swing. He knew sooner or later the Sherriff would want to talk to him about hurting his son. Part of him didn't care and the other part just wanted the world to leave him alone. He sighed when he heard the vehicle on the dirt road. He waited as the four-wheel drive Sheriff's SUV pulled up. \n\n\"Can I help you?\" Michael asked as the tall man climbed out and put on his hat.\n\n\"Are you Michael...?\" The man asked, looking him up and down. \n\n\"That's what they tell me.\" He kept himself flat footed as he waited to see what the man in front of him would do. \n\nThey both looked as Estelle slammed the screen door as she came out. \"How is your son's arm?\" She asked kindly.\n\n\"Broken... thanks for asking.\" Looking at Estelle, he could see how is son would've been taken with the striking woman. \"I just need to know what really happened, from your point of view.\" He asked unemotionally. \n\n\"It wouldn't have come to harm if he hadn't grabbed me. He was just being an arrogant child, but when he grabbed me, Michael acted in my protection.\" Estelle said and walked up and placed her hand on Michael's arm softly.\n\n\"What's your last name son?\" He asked noncommittally.\n\n\"Sparks... Michael Sparks. This is my Grandfather's property.\" \n\n\"He was a good man.... Would you've really killed my son?\" He asked, looking for Michael's reaction.\n\n\"No...!\" Estelle said instantly.\n\n\"I don't know... it's what I've been trained for. Old habits die hard I guess.\" Michael shrugged, not caring. \n\n\"Who trained you?\" \n\n\"Army... Transportation Support, is what they called it. I was a 50 cal. Gunner.\"\n\n\"Damn it...!\" The Sherriff swore. \"Jeb Dawkins said you were a vet.\" He sighed. \"What happened and why did you....\"\n\n\"He was showing his ass. Making unwanted comments and bugging Estelle. He grabbed her arm and I reacted. I'm sorry if I've done any permanent damage.\" Michael folded his arms. \"His asshole friend started making threats and the store manager showed up. He said we could leave, so we did.\" His eyes never left the Sherriff's. \n\n\"Yeah, that's about what Jeb said. I just needed to check.\" He sighed. \"You going to be staying here long?\"\n\n\"Don't know. Just needed some space....\" Michael started but didn't finish.\n\n\"Just don't make a habit of hurting the people in town.\" He started to turn. \"If you need anything, call. Have a good night.\" The Sherriff went back to his SUV and got in. He backed out and headed back down the dirt road to the highway. \n\nThey watched the Sherriff pull away. \"You played a dangerous game.\" Estelle said quietly.\n\n\"No game, I just don't care. If he was going to throw me in jail, nothing I would have said would've stopped him.\" Michael responded and shrugged.\n\n\"Dounduff...!\" She said and walked away.\n\n\"Yeah, and I love you too!\" He replied and walked in the other direction. \n\nEstelle froze for a second at the word 'love' then shook herself and went to finish her favorite lamb dinner if the cloddish human wanted it or not.\n\n***\n\nThat night as Michael lay there awake, he was angry at himself. His head was swirling with long forgotten emotions. He had worked so hard in becoming numb. He fought them back as he tossed and turned on the big comfortable bed. In his mind, he heard the command.\n\n\"Sleep..!\"\n\n\"And what if I don't want to sleep? Leave me alone.\" He pulled a pillow over his head and tried to ignore everything and wallow in his anger. Without him knowing it, he did finally fall asleep. In his dreams, he walked the deer path. At the same spot he met Estelle, someone was waiting for him.  \n\nIt was the same little girl. She stood there and just looked at him. She wore clothes that blended in with her surroundings. He wanted to pull her in his arms and hug the worry from her sad eyes. She walked over to the same tree where Estelle had found him and sat down on a large protruding root. \n\n\"How can I help you?\" He asked as she looked at him. \n\n\"Father, the Forest is disappearing.\" She said simply. \"If you don't heal, my brother's and sister's will die with it.\"\n\n\"Why do you call me that? I don't have any children. I'm not likely too either.\" He again wanted reassure the sad child and comfort her.\n\n\"If you and Mother don't.... We love you Father, but if you don't let Mother heal you, we will all die. I have to go, Mother is worried. I am only a possibility and I am growing weak.\" She said as a single tear slipped down her cheek. \"We love you....\" She slowly faded as Michael reached out to touch her.  \n\n\"LAUREL, NO...! Don't go!\" He screamed and jolted awake, drenched in sweat. As the dream cleared from his mind, he realized he was sitting up in the bed clutching one of his pillows. \n\n\"It's okay now...\" Estelle soothed him as she sat on the bed. \"It was just a dream. You are safe. I am with you.\" She stroked his hair and tried to use the magic to take his fear away.\n\nMichael, overcome with emotion, tossed his pillow away and grabbed onto Estelle and hugged her. She kissed his head as all the grief that he had been holding back came pouring out. Somewhere in the back of his mind he realized Estelle was naked, but that didn't matter, as she held him while his body convulsed through his emotions. She sat there and supported him while the storm raged. \n\n***\n\nMichael avoided direct eye contact with Estelle over the next week as he tried to figure out what he was feeling. He woke up frustrated when she wasn't in bed with him. Every morning from then on he looked for her next to him. It was like something that was meant to be there, was missing. \n\nHis face would flush at the thought of crying like a babe all over her breasts. When the thought of her being there for him crossed his mind, his body would respond in a way he had thought would never happen again. He didn't know what to do with it.\n\nHe swore that he would not think about that. It had crushed him when he found the woman he was sleeping with over there, was killed. Then there was Susan. He was supposed to marry Susan. He had lusted after her all through school. It was because of her, that he joined the military. He wanted to offer her something more than a minimum wage job and being stuck in the same neighborhood they had grown up in. \n\nThe day she left him, he told himself that he would never go there again. He would never give a woman the power to hurt him. Yeah, he knew about her having sex with another guy. Hell he did the same thing with the young widow. It wasn't like either one of them were virgins. He thought Susan was pregnant when he joined, only to find out in basic training, that it was a false alarm. What shocked him was when he found out later that she had slept with all of his, so called friends, while he was away.\n\nWhat hurt the most were the pictures his sister had showed him after she got tired of him pining over Susan. It showed Susan in the middle of a bunch of guys. It was more pornographic than some of the mags his buddies had hidden in their war bags. She had one in her hand, one in her mouth and was riding another. He could see the shapes of other men's legs in the background. He only looked at two of the pictures then vomited. \n\nAs he thought of his war buddies, he got angry that he couldn't go to their funerals. It didn't matter to him that he was still in a coma. It was the principal of the thing. They were closer than family. They shed blood, sweat, and tears; together. He should have died with them, not left here lingering in his inadequacy. \n\n\"When you are done talking to the Mother, I would like to take a walk in the woods.\" Estelle said from behind him. \n\n\"Go ahead.\" Michael answered automatically.\n\n\"With you... if you want to join me?\" She smiled at him. \n\n\"Oh... um, okay.\" He got up and followed her to the path. \n\nShe slowed so he could walk next to her. \"You are lucky. There are many places where the forest is dying. This place is very peaceful.\" She said, trying to gage where his closed thoughts were.\n\n\"I hated coming out here as a kid.\" He commented thoughtfully. \"No TV, no place to ride my bike or friends to play with; I thought it was torture.\" He said, thinking about the little girl telling him about the forest. When they passed the tree, he paused and whispered, \"Laurel...,\" as he looked at the small root that had started protruding out of the ground. \n\n\"Who is this Laurel?\" Estelle asked with frost in her voice. \n\n\"Our daughter, I think.\" His eyes lost focus. \"She has your face and my eyes. She is sad, the forest is dying she said. She wants to be born.\" If he had been looking at Estelle, he would have seen her almost faint. \n\nIt was the way he said it. He was talking to the Goddess, not her. He had the same faraway look in his eyes that he has had over the last weeks. He was speaking the truth if she wanted to hear it or not.\n\n\"There have been none strong enough to do that in so long it can't be remembered.\" She said softly. \n\n\"She said she is getting weak. I have to help her.\" He turned and looked at Estelle. \"I'm sorry, it was just a dream. I didn't mean to assume...\" He blushed as he noticed her nipples through her top. \n\n\"Let us walk.\" She turned and tried to ignore the flash of heat from him. It did things to her that she didn't understand. \n\n\"And you never will!\" He mother's voice said.\n\n\"Flagsgraph...!\" She muttered under her breath. \n\n\"What..?\" Michael asked.\n\n\"Nothing.... Let us go.\" She reached to clasp his hand and started walking. \n\n\"Where we going?\" He asked confused.\n\n\"Not to cliff, but to special place I have found.\" Estelle said and marched them deeper into the forest. \n\n\"You mad at me...?\" He started to ask but was silenced by her look. \n\nThey walked in silence until she brought him to a clearing with a small pool in a falling stream. He looked around and was surprised at the beauty surrounding him. \"How did you find this place?\"\n\n\"It wasn't hard. It called to me. It is a better place for you to talk to the Mother and Father. The house was getting too full of your thoughts. Don't worry, I will watch over you.\" She left him standing there taking in the scenery. \n\nMichael found a comfortable place to sit and watched the small water fall as it filled the pool. He listened to the relaxing sound of the water tinkling over the rocks as his eyes lost focus. He didn't know how long he sat there with the sun shining. It warmed his skin as thoughts tumbled in his mind. \n\nHis brain caught a flicker of movement and his eyes focused on the spot. He throat went dry as Estelle came into view. She was swimming in the clear water, not making a ripple as her body moved across the expanse. In his mind, her lithe form was magnified as he watched her without blinking. He knew if he closed his lids for even a fraction of a second, she would disappear. \n\nA slight breeze bushed his hair across his vision and he flicked back the grey streak that had replaced his once blonde hair. He was surprised that it was actually long enough to get in his eyes. He was so used to having it short for the military. \n\nHe tensed when he saw a large brown animal approach the water's edge. Estelle laughed as she crested the water a couple of feet away from the bear. She held out her hand and let the animal smell her and then did a reverse flip back into the water. The bear looked at her and then dipped its muzzle into the clear water to drink. \n\nHe was still shaking when she approached. She was back in her fawn leggings and green top that she always wore. \"I didn't need protection. Their kind and mine are friends of sorts. Though we are wary of each other and respect the other's power. They will not attack us. She just wants to bring her cub down for a drink.\" Estelle said trying to calm him down.\n\n\"A lot of good that would do if that bear was hungry. I couldn't get to you. What were you thinking?\" Michael shouted. \"You could have been killed!\"\n\n\"I'm sorry if I worried you....\" She said trying to placate him. \n\n\"Worried...! I was scared shitless. How can I take care of you if I'm so far away?\" Michael responded with his fear and anger flowing through him. \n\n\"I don't need a keeper.\" She shot back, her voice going cold.\n\n\"Are you sure about that? Parading around the woods nude, waiting for any stranger to come and rape you. Frolicking with wild animals tempting them into a warm lunch. I think you need more than a keeper.\"\n\n\"I can take care of myself. I am not a child.\" Her eyes narrowed.\n\n\"I didn't say you were. But you are a defenseless woman in the woods.\"\n\n\"I am not...!\" Her voice rose. \n\n\"What...? A woman or defenseless?\" Michael shot back, spoiling for a fight. \n\nThey stood there for an hour hurling anger at anger, both of them blind to the underlying emotions. They gave as good as they got and then some. Estelle didn't realize she was pulling in the magic until she released it. \n\n\"Stop this..!\" She ordered, expecting him to be held immobile.\n\n\"Or what...?\" He shot back feeling the ripples in the air around him. \"What are you going to do about it?\" He stepped closer and looked into her shocked eyes. \n\nNo one ever had been strong enough to thwart her magic. Not even her mother. It took all the elders to teach her control. \"Sleep...\" she placed her hand on his cheek.\n\n\"I don't want to sleep, I want to fight. Try your faerie bullshit on someone else. I'm wise to you now.\" He spouted, the anger overpowering his reason.\n\n\"I am not some foolish faerie... pollinating flowers and teasing men.\" She spit back out indignant. \n\n\"What the hell ever you are, don't try that on me again. I'm not tired. I don't need rest. I don't need to be coddled like a child. I am a man. I have lived through hell and I'm still standing.\"\n\n\"A man... you are nothing but a youngling to my people.\" She met him emotion for emotion. \n\n\"Since I don't even know who the hell your people are, that must mean I'm not one of your people. I am twenty five years old. I am a man. I have finished school, slept with a woman, fought in a war and watched my friends die in front of me. Can you say as much?\" \n\nHe stood there dumbfounded as she ranted in whatever language she spoke. He knew by the tone she was reading him the riot act. Her hair literally crackled in the wind as she gave him the what for, even if he didn't understand a word she was saying. He felt things he had never felt before. \n\nShe was lovely in her anger, her movement's; poetry. As soon as his anger overcame him, it left. When it disappeared, he felt warm and somehow whole again. Instinct drove him as he reach out and pulled her into an embrace. Without thinking his lips captured hers. \n\nEstelle was shocked speechless. Part of her wanted to pull back and continue scolding him, and another part of her wanted to get lost in his emotions that she now fully shared. She knew this for him wasn't 'fuck'. This was special. He didn't want to do anything but kiss her. \n\nAs the kiss lingered, neither one noticed when their feet left the ground. Neither one saw the thunder squall move in. They stood there holding each other and let their lips linger until the first crash. Michael pulled back and felt himself flinch when there was nothing under his feet.\n\n\"Sodoma mia grah...?\" Estelle asked heavy lidded.\n\n\"With my life....\" Michael didn't understand that they hadn't spoken out loud. \n\n\"Flonggis mia esodda.\" She reached back up to him as he lowered back down and kissed again. This time as they kissed, Estella felt the magic flow. It flowed stronger than it had ever before. She knew if she unleashed it, she could make her heart's desire and not be tired. Could this be what her mother was trying to tell her? \n\nThis time as he pulled back, he tapped his toe to make sure he was still on the ground. He felt something solid under him, so he risked opening his eyes. He was still in the clearing, but the perspective was wrong. Without letting Estella go, he looked around. He gasped as he realized he was in a large tree. They were standing on a wide branch. \n\n\"What... how... who...?\" He tried to ask and looked into her eyes. Placing his forehead on hers, \"Lucy you got some splainin to do,\" he said in a bad Ricky Ricardo voice, from all the reruns he was forced to watch while he was immobilized in the hospital. \n\nEstelle laughed as she saw the visions of what he meant. \"But not right now.\" She spoke to his mind. \n\n\"How the hell do we get down from here? He asked prosaically.\n\n\"The same way we got up here.\" she said, like it all made perfect sense as she initiated the kiss this time. She took them down in long lazy spirals as they held onto one another. \n\n\"Wow... I've heard of a kiss spinning your head, but that was out of this world. Who are you, that you can do that?\" Are you really an Elf?\" He reached up and softly touched the tops of her ears through her hair. \n\n\"Stop that...!\" She giggled. \"It tickles....\" She reached up and pulled his head down to hers. \"It is better to tell you this way. I don't know the words in your language.\" As soon as their heads touched, they were sharing their thoughts. \"Ah grah mis esodda toddo juno tablue\" She pulled him into her mind. ",
        "\"We are the people of the forest, love. We have tended them from when the Mother and Father first made life on this world. As with your history, much of ours is also lost to legend and myth. We live just a half of a step out of sync from your world. We live just the other side of the hedgerow. I have spent over twenty years looking for you.\"\n\n\"I dreamed of you when I was a child. So, are you the wood elf of my dreams?\" \n\n\"I've dreamed of you for over a century. We are not what you call elves. We don't have a name other than the people. There are the bears, the beavers, the elk and we are the people.\" She sighed contently as they shared thoughts and emotions.\n\n\"Is that why you saved me from killing myself that day?\" He asked wondering just how much of a setup this was.\n\n\"No... I didn't even know you would be there. I just crossed the hedge from telling my sire goodbye. I've searched the world over, looking for you and you were always just right there. Half the world away from where I thought you would be.\" They stood there and shared their thoughts until the chill of dusk penetrated their bodies. \n\n\"When did it get dark?\" Michael asked looking around.\n\n\"Not too long ago. The moon will be rising soon. We need to get you back to the house. Tomorrow we need to get more food and a few things.\" She said as she wove her fingers with his and unerringly started back down the path to the cabin. Michael sighed contently at the warmth of her hand in his.\n\n***\n\nThe next day, he took her to an old quarry next to his grandfather's property. He shocked her when he handed her the keys. \"Here, you try it. There isn't much you can hurt out here.\"\n\n\"Really...?\" She gasped excited.\n\nMichael showed her how everything worked and then held on for dear life. For the next hour, Estelle laughed and Michael tried to keep his lunch down, as she tried to do laps around the big empty space. He finally had to call it quits and go to the restroom. When he came back, Estelle jumped into his arms and kissed him until his knees went weak. \n\n\"Thank you...! That was fun. Can I drive into town now?\" She asked with a mischievous smile on her face. \n\n\"Um, no... I don't think so. Maybe after you learn some control. Beside they have laws about who can drive.\" He kissed her again, never wanting to let her go. As they stood there kissing, a bright warm feeling washed over them. Michael looked at Estelle wondering if that came from her.\n\n\"No my love.... My parents have finally reconciled. This is a joyous day.\" She spun out of his arms and did a dance in her joy. \n\nMichael stood there transfixed. He watched her dance and wished. He wasn't sure what he wished for, but it was the first time he wished for a future and it had her in it. \"It's time to go. We have to get there before the store closes.\" He didn't want to interrupt her, but it was getting late in the afternoon. \n\nEstelle snuggled against Michael as he drove. They waltzed through the store, buying the things she said they needed. They smiled as Jeb, the manager greeted them. As they left, Estelle saw the monument in the park at center of town.\n\n\"What is that?\" She asked perplexed. \"Can we stop?\"\n\n\"Yeah, but not for long....\" He pulled into the small parking lot. \"It is some kind of memorial. You can find something like this in almost all small towns.\" He pulled into the parking place and helped her out of the truck. She held his hand as they neared. She could feel his apprehension grow.\n\n\"What's wrong?\" She asked not wanting to use magic for this.\n\n\"They place these things so we can remember the ones who have fallen in whatever battle they fought in. When will they ever learn?\" He said sadly. \"I wonder if....\"\n\n\"If what?\" She pressed.\n\n\"If they will ever put one up for the ones lost this time... and if I could ever look at the names?\" He thought of his team. Their faces passed before his eyes as he saw them the day they left for their last routine patrol.\n\n\"Well, look it here. If it isn't Beauty and the Beast.\" Tony sneered as he walked by.\n\n\"Ignore him.\" Estelle said as she felt Michael tense up. \n\n\"I can't... I just can't.\" He turned. \"Well hello; you useless, overeducated, idiot. Have you done anything worth a damn lately?\" He asked with sarcasm.\n\n\"You asshole... I ought to....\" He stepped forward.\n\n\"How is your arm?\" Estelle asked trying to interrupt the budding confrontation. \n\n\"Yes, yes I am... I've been trained for it. Now that we have acknowledged you are useless and I'm an asshole, what ought you to do?\" Michael smiled. \n\nEstelle sent out a silent plea for help. She didn't want Michael to get into another fight and she wished the arrogant boy no harm. She started feeling bad that she asked to stop. She sighed when she saw the big SUV pull up. \n\n\"Anthony... Mr. Sparks... Is there a problem here?\" The Sherriff walked up and stepped in between them. \n\n\"No... no problem. I was just showing Estelle the war memorial. She hadn't seen it, as your son walked by.\" Michael said tightly. \n\n\"He was talking about if his friend's names would ever be on one of these. Then they were discussing Tony's education and Michael's training.\" Estelle wanted to laugh at the look on the young boys face. \n\n\"Tony, go get in my vehicle.\" He looked at his son.\n\n\"But Dad... I didn't do....\" Tony protested.\n\n\"I said move. NOW...!\" He stepped close to his obtuse son. \"He's already handed you your ass once. He'll do it again. You just got the cast off.\" He shoved his son toward the vehicle. He turned to the couple. \"Mr. Sparks... Ma'am....\" He tilted his head and walked behind his son back to his SUV. \n\nMichael shook off his anger and smiled ruefully. \"I don't know why his type always sets my teeth on edge. I'm sorry, but... if you are going to yell at me about it. Please do it in a language I understand. Let's go home.\" He reached to to see if she would take his hand. \n\n\"At least you are learning control.\" She sighed and took the offered hand and walked with him to the truck.\n\nBack in the Sherriff's SUV, Tony was fuming. This was the second time his father had taken that fucker's side. He would know why.\n\n\"I'd take that look off your face before you see your mother.\" The Sherriff told his son.\n\n\"Why did you let him go again? He's nothing but a war mongering loser.\" Tony bit out.\n\nThe Sherriff rubbed the bridge of his nose. \"I guarantee you that he didn't want to fight in the war. But yes, he is a veteran; and he deserves our respect, if we like him or not.\" \n\n\"Why? If he was smart enough he would have went to college and made something of himself. Now, he's just a useless ugly loser and a drain on the economy.\"\n\n\"Son, you seriously need a wakeup call. That man was disfigured giving you the right to sit here and bitch. He lost his friends maintaining that right for you. You will show him the respect he's earned. You don't think I didn't want to tear him a new asshole when he broke your arm? I'm the Sherriff. But that also means I have to enforce the law equally. He defended his woman, who you should've never touched. I had to let him go. He could've killed you, if he wanted to, and been justified. Just like today. He didn't start it, you did! All because you've got the hots for his girlfriend.\" He tried to get through to his entitled, spoiled, son.\n\n\"He's just a nuisance and should be run out of town on the rail. I don't see what she sees in him.\" Tony huffed petulantly. \n\n\"Son, it's time for you to grow up! You're supposed to be a man now.\" He sighed, not wanting to deal with the ramifications of his decision. \"Son, I love you and I mean it. But, I think it is past time for you to learn about the real world. Not the one your Namby-Pamby professors' spout about it in school. I think it's time for you to find an alternate living situation.\"\n\n\"You're kicking me out?\" Tony asked shocked. \"How am I going to survive?\" He asked confused and terrified.\n\n\"Like everyone else, you'll go out and find a job or go hungry. We'll pay for your tuition as long as you pull your grades up to A's and B's. It's time you stopped floating through life. Welcome to the real world son. You've got two weeks.\" He started the vehicle and ignored his son's protests as he drove him home.  \n\n***\n\nThat night, Michael watched Estelle with a smile on his face, as she prepared dinner. He ignore the twitching of the damaged muscle, he couldn't help himself. Every time she called him 'love', his heart wanted to burst out of his chest. He had never felt this way before. This wasn't about getting her into bed. This was about wanting to share everything with someone else. If that was love, then he was deep in it. \n\nThat night as he dreamed, he saw himself as a white haired man, watching over his family in a golden wooden palace. His children sat at his feet, listening to every word he said as he told them the story of how he met their mother. \n\nEstelle entered carrying a long staff of power and her hair was held in place by a woven circlet. She smiled and stuck her tongue out at Michael then turned to face the crowd who waited her ruling on some matter of state or another. He would have to quiet two of his daughters' as they would tend to giggle. \n\n\"You must show decorum when the Queen speaks. Even if she is just your mother.\" He told his children. \n\n\"Yes father.\" They said in a choral voice. \n\nHe heard Estelle's voice, but it sounded older, richer more mellow and mature. \"As of now, I proclaim the Princess Laurel, to be my heir and successor. In five hundred years, if she or I do not perish before then, she will assume the crown and rule with the wisdom of her ancestors.\" Estelle held her arms open as a tall figure walked down the aisle. She stopped in front of Michael.\n\n\"Father, you must wake up. Mother needs you.\" She kissed his forehead and faded away. \n\nMichael jolted awake. He looked for Estelle, but she wasn't anywhere in the house. He looked outside and found her dancing in the moonlight. There was a new lushness about her as she glowed in the pale light. He didn't want to interrupt her dance, but he felt the urgency pulling him to her. He felt the warmth as soon as he walked outside.\n\nIt didn't register that he should've been cold. All he could do was keep his eyes on Estelle. As she danced in circles, he entered the space in between. When he caught her eyes, he noticed the deep change in them. \n\nEstelle spun closer to Michael. This wasn't how it was supposed to happen. She thought she still had more time. But the choice was upon her. She couldn't fight it any longer. She had to choose, nature demanded it. It was the time of her mating. She had become fertile and now her children were calling on her to be born.\n\nShe stopped in front of Michael. \"I'm sorry love.\" She said sadly.\n\n\"For...?\"\n\n\"The choice. I have made mine, now you must make yours. What we do this night cannot be undone. It is forever.\" Her pulse quickened.\n\n\"What choice? I need to know what I'm choosing.\" He tried to rationalize what she was trying to tell him.\n\n\"If we join, we will always be joined. If we do not, we never will. I'm sorry; I thought I had more time. But since mother and father have reconciled, there is now an urgency on me. I can't explain it and my mind is on fire so I can't even show you.\"\n\n\"Try....\" He leaned in and touched her forehead to his. At contact, an explosion of visions swarmed his mind. In the middle of the fire stood Estelle. He was either choosing her or denying her forever; right here, right now. \"Then I choose you.\" He answered her mind. \n\n\"Mia esodda... My love, my life, MY MATE...!\" Her mind screamed in ecstasy. \n\nThey stood there naked in the moonlight. She wrapped herself around Michael. As they kissed, the magic flowed. Michael grasped onto her like his life depended on her support. His mind and body craved her like no other. He needed her to complete himself. \n\nHe carried her to his bed, now their bed. He laid her down and stroked her warm skin. He saw the fear in her eyes and the passion that controlled her. He slipped into the bed with her and started kissing every inch starting at her feet and working up. \n\nHe avoided her sex for the time being, as he worshiped her body. When he moved up, Estelle opened herself to him. He knew she had never done this, so it was up to him to do it right. He put all his thoughts on her pleasure as he captured a nipple in his mouth.\n\nEstelle gasped at the intense contact. Her body writhed and the fire coursed through her. She tried to control the magic that bloomed inside her. She felt his mouth on her and welcomed it. She felt his hard manhood between her legs and wished for the connection to be complete. Once he speared into her, they would be one.\n\nHe felt her heat and moisture. He allowed himself to rub her furrow and gain lubrication. When they could stand it no more, he put the tip against her opening. He looked into her smoke filled eyes and knew what had to be done. He captured her lips in a fierce kiss and penetrated her in a firm fluid motion.\n\nAs her barrier broke, so did her control of the magic. It shattered into a million pieces as she tried to regain her senses. She knew they were now one. She could feel him fill her completely. She knew they were joined at the hip in the oldest of rituals. As the pain passed, she started undulating under her mate. The only mate she would ever have.\n\nMichael felt the movement and added to it. Every fiber of his being was focused on their copulation. He felt every cell of his member as it slowly moved in and out of her tight warm depths. He poured everything in his heart into the special creature who took him unconditionally. Taking action, he pulled Estelle on top of him without losing contact. He settled her on his hips as her eyes closed. He gave her the control of their loving. This wasn't just sex, this was so much more. He groaned as she started her hesitant movements. He held onto her hand full sized breasts to hold her up. He felt her nipples swell into his palms. He didn't know how long they danced. He didn't care.\n\nEstelle finally understood how it could be too strong. She felt her mate's heart and all the love he held in it. Her body craved the physical connection of their union, but her mind burned with the sensations of their shared experience. As her body moved faster and harder, she felt the magic build again. She hoped she could control it this time. But as soon as that thought crossed her mind, her body exploded. There was no warning, all of a sudden she was clasping and contracting on him. Sucking him in farther until he joined her and gave his seed to their future. It was too much. She couldn't control it. \n\nMichael felt her contraction and his mind burned with his orgasm. He shot volley after volley of his pent up seed into her. It crossed his mind that now his children could be born and then his mind went blank. Fast as he was fading he could have sworn that the cabin had moved with their climax. \n\nMinutes, days, weeks later, they came back to themselves. She was still astride him and though soft, he was still inside her. He was the first one to move. He reached up and pushed her hair behind her ears, tickling the tops. She contracted on him as she giggled. \n\nEstelle took a deep breath, not wanting to break the connection. She tried to move slowly but her body twitched with their motions. Her eyes went large as she felt him growing inside her.\n\n\"If you are trying to seduce me again... it's working.\" Michael groaned. He pulled her down into a kiss, that when done, he knew he was fully hard again. Carefully he turned his lover over and took control. \n\nEstelle gasped as he started the dance again. Her brain burned warmer, deeper with this mating. She felt him with every movement. She reached up and held onto his strong arms as he made her his completely. \n\nMichael took his time. He wanted her to have the pleasure without the work. He gave until he could give no more. He lasted until she started contracting on him for the third time. He didn't know or care how long they had been making love. They both cried out at the time of their completion. Then they slept.\n\n***\n\nIn the morning, Michael wondered briefly if it was all a dream. If it was, he never wanted to wake up. It was her warmth that told him that he might not have been dreaming. She was still there beside him. He opened his eyes and found her looking down into his. \n\n\"I was wondering if you were going to sleep the day away.\" She smiled.\n\n\"When did you wake up?\" He asked stretching.\n\n\"Only a few moments ago...\" She told her mate honestly. \"We need to get cleaned up. We are a mess.\" She nipped his chin playfully.\n\n\"If you keep that up, we're not going anywhere.\" He pulled her in for a quick kiss. \n\n\"Please don't start again. I find I am sore in certain places.\" She blushed. \n\n\"Sorry my love, but you did start it.\" He smiled and pulled her out of bed. \"Let's go take a shower.\" He pulled her behind him and headed into the big bathroom. After letting the water warm up, he pulled her into the spray and lovingly washed her body. \n\nNever had she experienced a bath like this one. As her body responded to her lover's hands, she wondered how her parents ever found the strength to stop the physical part of their love. She also wondered what had happened when the magic got away from her. She knew there would be a price to pay.\n\n\"So, does this mean we are married?\" Michael asked, thinking about the forever part of what happened.\n\n\"Not yet. The Queen must approve of our mating.\" She said and sighed as his hands relaxed her body.\n\n\"The Queen? Why not the King?\" He asked wondering just what he got himself into this time.\n\n\"We don't have a King. Remember we honor the Mother first. Our land is governed by the elders and the Queen. She holds the keys to the Magic. It will be the Queen who will have the final say. Her Protector can only counsel, not rule.\"\n\n\"Oh, I guess that works as good as any form of government.\" Michael said trying to piece it all together.\n\n\"Mother will be reasonable. She knew I was coming out here to find you.\" Estella said, automatically, not realizing the ramifications.\n\n\"Mother...? Your people call your Queen, mother?\" he swallowed hard as a stray thought crossed his mind. He realized he didn't really know that much about the woman he had just mated for life.\n\n\"Um... no, they call her Your Majesty. I call her Mother....\" She ducked her head.\n\n\"And who do you call your father?\" He asked so he didn't have to ask the question screaming in his brain.\n\n\"The Queen's Protector and Concubine is his official title. Her husband as you understand the concept. \" She said quietly.\n\n\"You're their Princess? Is that what you are not trying to tell me?\" He didn't notice the cooling water as he looked at Estelle.\n\n\"I wasn't hiding it, my love. There just wasn't enough time to explain everything.\" She said defensively. \"I never expected my mating to come on me so quickly. I thought I'd have time to tell you in a way you would understand. We have been growing closer every day.\" She reached and tried to turn off the water. \"Why, does that change how you feel for me?\" She asked with wounded pride.\n\n\"No...!\" He said seeing her fear and pain. \"You've bewitched me from the first moment I saw you. I've been waiting for you all my life. I'm just a bit shocked.\" He said trying to comprehend everything that had happened. \"How long have you been with me? I've seemed to have lost track of time.\" \n\n\"Seven moons, six of your months have passed since you first saw me.\" She said truthfully. \"I must return to my people before midwinter's eve.\" \n\n\"Do you always tell the truth?\" He asked, knowing it for what it was.\n\n\"With you, always! When I become Queen, I can withhold certain things but our society is based on the truth as we perceive it. But be careful, perceptions can be changed and twisted.\" She warned him. ",
        "They had walked back into their room. \"When do I meet your mother? What about my mother and sister? When can they meet you?\" He sat her down and hugged her, his mind swirling with thoughts of in-laws and family fights.\n\n\"Please don't close your mind to me now. I don't like not hearing your thoughts.\" She said and stroked his face.\n\n\"I'm not doing it on purpose. I was just thinking hard.\" He leaned his head against hers. \n\n\"Ah, I see now. Yes that might be a problem. Um, I hate to ask, but who does this land belong too?\" She kissed him. She never got her answer as they started another dance.\n\nThe weeks passed as their love grew. They made love when and where they felt the urge. First it was in every room of the house. Then outside in the swing, in the pool under the waterfall where they shared their first kiss. They walked around nude most of the time as she showed him hidden treasures of the forest. \n\nOne evening after dinner, she straddled him at the table and rode him until the magic burst out and in. She knew they started life. She wanted to tell her mate but they heard someone coming up the stairs to the house. They ran, giggling like errant children to their room, looking for clothes as the door burst open. \n\n\"Mike... where are you. It's been almost a year. Why haven't you called?\" He heard his mother's voice. \n\n\"I hope you are ready to meet my family.\" He smiled at his mate. \n\n\"Ready or not....\" Estelle tried to say as she pulled her tunic over her head. \n\n\"Michael Patrick Sparks.!\" His mother called. \"I know you're here I've talked to the Sherriff's office.\" \n\n\"I'll be down in a minute.\" He shouted and kissed Estelle. \"Give me five and then come meet them.\"\n\n\"Is he here mom?\" His sister called as she came in.\n\n\"I think we caught him napping.\" His mother said and then gasped. \n\n\"Mom, Kelly... what are you doing here?\" He asked as he came into the great room, tying his robe closed. \n\n\"What happened to you? I knew it was a bad idea to leave you here all alone.\" His mother gasped at the sight of her son. He looked like a scruffy haystack. \n\n\"How's it going Bro?\" Kelly asked looking for the depression she had seen in him before. \"Other than the reports mom has badgered out of the Sherriff's office, that you are here and still alive... We haven't heard shit from you.\" She came up and hugged her brother. If she was shocked by his long hair and scruffy beard, she didn't let it show. \"So, what's new and exciting in your life?\" \n\n\"I'm surprised she didn't have my checking account tagged.\" Michael smiled.\n\n\"I bet she tried.\" Kelly smiled back and kissed her brother. It was the first smile she had seen on his face since before he went overseas. \n\n\"The bank wouldn't let me. I've made sure I put some extra in your account if you needed it... Mike.\" His mom huffed. \n\n\"I love you too mom and I've told you, I prefer Michael.\" He kissed his mom's cheek.\n\n\"And why haven't you called?\" She asked again. \n\n\"Been kinda busy actually.\" He smiled.\n\n\"Doing what?\" His sister asked sniffing the air.\n\n\"Healing, resting, and looking at new things in the forest. Finding someone to love.\" He smiled at their shocked looks. \n\nEstelle timed it perfectly. She smoothed down her smock and walked out. \"Michael, are you going to introduce me?\" She asked looking into his eyes.\n\nHe ignored the gasps. He felt the same way the first time he saw her. \"Estelle, this is my mother, Adele, and sister, Kelly Sparks.\" He reached for her and sighed as their hands clasped. \"Mom, Kelly, this is the love of my life, Estelle. I wouldn't be here today if I hadn't met her.\"\n\n\"Adele, Kelly, it is nice to meet you.\" Estelle rubbed her stone. \"Kelly, thank you for protecting Michael, when he could not protect himself. Adele, I hope you don't mind, but I'm very much in love with your son.\" She said with her heart in her eyes.\n\n\"And we thought to surprise you...!\" Kelly said under her breath as her mother gaped like a fish out of water. \n\n\"Michael, please help your sister get the supplies they brought. Your mother and I would like some privacy while I fix them something to eat.\" Estelle said before kissing her mate and pushing him to obey. Michael went without complaint, knowing his mate would smooth over any ruffled feathers. \n\n\"Damn Mike, where in the fuck did you find her?\" Kelly asked as they walked to their mother's car.\n\n\"You wouldn't believe me if I told you. Oh, and by the way, she doesn't like the word fuck. So please don't use it around her.\" \n\n\"Damnnn, you've got it bad. That cunt Susan would be so insanely jealous if she saw her. What's with the white hair? She not an albino, the eyes are wrong.\"\n\n\"It's just part of her. It makes her special. She's different than any woman I've ever met sis. I would've never thought I'd meet someone like her, let alone have her love me like she does.\" \n\n\"So, when's the wedding?\" Kelly smiled.\n\n\"We have to talk to her mother first. We're already mated but there are formalities before the wedding. This is forever sis.\"\n\n\"What... huh...? I was joking!\" She spun on her brother. \"Aren't you moving a bit fast after Susan? How do you know she won't do the same thing? How can you trust her?\" She pressed.\n\n\"She was a virgin the first time we made love. I am the only man she has known and will ever know if I have a say about it. This isn't about getting laid. It was over a month from our first kiss to... well you know. Give her a chance and she will show you why I love her so much.\" \n\nKelly sat on the pole swing and crossed her arms. \"Okay, now I've gotta know. How did you meet that striking woman and where the hell is the depressed man I dropped off here ten months ago?\" \n\n\"I was walking to the tall cliff. I wanted to join my buddies when the storm broke. She found me hiding under a tree. She knew what I wanted to do and refused to let me do it.\" He started telling his sister the story of how they met. By the time he was done, he wiped the tears out of her eyes.\n\n\"Damn, how did you get so lucky? And she puts up with your attitude?\" Kelly could see the love in her brother's eyes. Something she never saw when he used to talk about Susan. \n\n\"She gives as good as she gets. Someday I'll tell you of our first argument and how we ended up kissing in a tree.\" He laughed. \"Let's get this stuff in. Estelle just said they are done talking.\"\n\nKelly looked at her brother as he gathered up the bags of stuff. She continued to watch him as they entered the house. In the now spotless kitchen, her mother was hugging Estelle with tears in her eyes.\n\n\"Thank you so much. I can never.... Welcome to the family.\" Adele sniffed. \"I could use a cup of tea if you don't mind.\" Estelle just smiled and sat Adele down in the closest chair. \n\nKelly had to admit, they looked like a couple in love. Not that she could ever understand what Estelle saw in her brother. But then again, it was her brother, so she wouldn't see it anyway. She just hoped they knew what they were doing. \n\n***\n\nIt was a week later when things changed. They had just finished making love and were laying in each other's arms when her mother, the Queen, called. \"Estelle, what have you done?\" \n\n\"I have found my mate mother. We have mated and started....\"\n\n\"You fool; you have released the Magic without control. The hedgerow is breaking. There is talk of war. I need you home.\" She demanded with regal authority. \n\n\"I will send her to you.\" Michael said, and startled the Queen.\n\n\"I come mother, now let me say goodbye in private.\" She told her mother and shut the door between them. \"I'm sorry love. I must go.\"\n\n\"I know... when the Queen calls... I understand. I don't know how I understand, but I do. I will wait for you. If you need me, call. I will hear you.\" He kissed her.\n\n\"I spend a hundred years in boring lessons, but don't have enough time with my new mate.\" She sighed. \"Walk me to the hedge.\" \n\nThey walked together to where they met. She kissed him at the thick brambles and then stepped through. Michael watched at about half way through, she shimmered and disappeared from his sight. He sighed and trudged back home. \n\nOver the next month Michael, to keep himself busy, started running again. It was one part of training that he never minded. He set a good double-time pace and started getting himself in better shape. His mother and sister came for awhile to stay. They asked where Estelle was and Michael told them that she had to do something at home. \n\n\"Her mother called her back. There was some trouble. She'll be back as soon as she can.\" He told them one night. \"I'm not worried, I'd know if something was wrong. We have this connection. I can't really explain it.\" He would spend his days going to the places they shared, hoping for her return.\n\nOne day, his mother came alone.  \n\n\"Son, I need to ask you something.\" She paused just to look at her son.\n\n\"Yeah mom...?\" Michael asked, wondering what his mother wanted now. \n\n\"Well, Kelly and I have been talking. I don't know if you realized it, but this land has been on the market for some time. No one so far has been able to meet our price.\"\n\n\"You'd sell grandpa's property?\" He asked shocked.\n\n\"Well, no one but you has come up here for years and with Kelly going to college.... Your grandfather wanted it to stay in the family, but if no one was interested, well selling it just seemed like a good idea.\" \n\n\"Is there an offer? How much are you asking for it? I have my VA loan. I could buy it.\" He didn't want to think about this place going to anyone else. \n\n\"No, not really. Well, that's not true. There is an offer, but it is still under what we'd want for the land. But, we are coming up to when we have to pull it off the listing, or sign a new contract.\"\n\n\"Let it lapse, I'll buy it. Take it off the market now if you want too. I want it.\" He said troubled.\n\n\"Are you sure? You hated this place when you were growing up.\" His mother pushed.\n\n\"Yeah, I'm sure. I'm comfortable here. I wouldn't want a development company to come in and ruin the place.\" He looked around. \"It needs some work, but I've come to see why Grandpa wanted the place.\"\n\n\"Okay, if you're sure. I'll tell Kelly and see what she has to say about it.\" She picked up her purse. \"Well I better be going. It's a long drive back into the city.\" She kissed her son as she walked out to her car. \"We'll see you next weekend.\" She said as she left.\n\n\"Okay, see you then.\" He waved as she negotiated the curvy driveway. \n\nOver the next few nights, he kept having dreams of the war. He remembered the fighting, the blood spattered buildings. The dead laying in the street. He tossed and looked for Estelle in his bed. He tried reaching out his mind to hers, but for the first time all he found was blackness. \n\nThat's when he started to worry. He was so worried that he didn't feel the elation he should have when Kelly and his mom told him that the property would be signed over to his name. When they saw his lack of reaction they had to ask.\n\n\"We thought this was what you wanted?\"\n\n\"It is. I'm... I'm worried about Estelle. I haven't heard from her lately and that's just not right.\" Michael said the concern on his face.\n\n\"How could she get word to you? You still don't have a phone or cell, not that it would do any good up here in this dead zone.\" Kelly asked hoping Estelle wouldn't hurt her brother.\n\n\"She has her ways.\" He sighed. \"I really do thank you. If you need me to pay for this, let me know. I'll use my vet benefits. I earned them. I might as well use them.\" He took the paperwork and put it in the drawer on her side of the bed and rubbed her pillow until he fell asleep. \n\nAs he slept, he dreamed. As he dreamed, he heard. \n\n\"FATHER...! We need you.\"\n\n***\n\n\"Laurel...!\" He jolted awake in a cold sweat.\n\n\"No father, Laurel is sleeping under mother's heart. We are her sisters.\" The choral voice said in his head. \n\n\"Am I dreaming?\" He asked aloud. \n\n\"No Father. We are using the power of our possibility. We don't have much time. Father, Mother needs you. Grandfather is hurt and she needs a protector. You must go through the hedge or she and we will die.\" \n\n\"No...!\" He jumped out of bed. \"How do I cross?\"\n\n\"You are still partly human. You must cross where mother crossed. You must walk in her steps. Hurry father, we are fading.\" The choral voice dropped many voices. \n\nMichael rummaged around, finding what he thought he might need if he had to go hiking through the woods on the other side. He wrote a quick note just in case his mother or sister dropped in like they had the habit of doing lately. \n\n\"Hurry Father, Mother is getting weak, she needs your strength.\" The voices called to him.\n\n\"I'm coming.\" He rushed out of the cabin just as the sun peaked out over the horizon. He rushed to the place where he met Estelle and looked for where she had passed. \"You must walk in her steps.\" He told himself as he looked for her small foot print in the packed soil. \n\nFinding what he thought might be a print. He stepped on it and stepped into the thorny bramble. As he walked through, he felt the thorns scraping every inch of his skin. He felt like he was being squeezed between two rocks as his breath wheezed out of his chest. He didn't think he would make it but called out to his mate.\n\n\"Estelle, I am coming.\" He cried out and pushed harder. All of a sudden he stumbled into a dark grove of trees. These trees looked different than any other he had ever seen. He stayed on his hands and knees, gasping for the cool fresh air. He felt like he had run a marathon. He looked up and saw the moon.\n\n\"Father... You must hurry, Mother's strength is waning.\" A set of twins stood there looking at him. \"We are all that is left unless you get to mother. You have the magic, use it. \n\nFind mother in your mind and take yourself there. Hurry father.\" The girls shimmered and faded.\n\n\"Finnan, Ginnan, no... I'm coming.\" He yelled as he tried to reach the two little girls. \n\n\"Hurry father. I will watch the hedge in your stead.\" A tall young man stood there. \n\n\"Blake... is that you?\" He asked his mind still spinning.\n\n\"I could be. That is up to you and mother.\" He smiled. \"Hurry Father, call to Mother and set the balance right. Only you can do it.\" He shimmered like his sisters and was gone.\n\n\"ESTELLE...!\" He screamed in mind and body. He searched for the beautiful woman who had saved him. \n\n\"Michael...? No, He will kill you. He is mad and seeks power.\" He heard her thoughts in his head. \"I cannot protect you and our child. He must not know. It will destroy everything I have fought for.\"\n\n\"Where are you, Love? I am here. Many have tried to kill me, even myself, but as you said. It is not my time. Our children called to us.\" He said and took deep breaths.\n\n\"In the Queens Grove.\" She said simply and showed him.\n\n\"I come.\" He said and took off running. He knew this is why he had started training again. His mate needed him. He ran as fast as he could, ignoring the branches they whipped across his scared face. Along the way, he tore off his shirt and tossed it aside. With every stride he felt Estelle stronger in his mind. \n\n\"Slow down Love, catch your breath or he will kill you as soon as he sees you.\" Estelle warned him as he got close.\n\nAs he took in huge gasps of air, he started hearing an angry voice in the middle of the clearing. \"For the last hundred years I've heard of this overwhelming power of the Princess Estelle. Where is her power now? As always, she is weak when she needs to be strong.\" The voice said in a placating tone.\n\n\"I am here.\" He told Estelle.\n\n\"Wait, you will know when. I've missed you my love. I grow stronger just knowing you are here.\" She responded tiredly.\n\n\"The Queen is incapacitated by her grief for her champion. Who can blame her? She knew the price of dabbling with those humans. We need leadership. Estelle was promised me. Make her say the Marriage vows and I will take up the mantle of leadership. It is time for a strong King, rather than a flighty Queen.\" He sneered. \n\n\"You see how easy I keep her here in the grove. I have the strength and knowledge. I just need the elders to agree. We need a strong defense against these marauding humans. Our groves have faltered long enough. I claim what is rightfully mine. What say you? Is there anyone who would stand against me?\" he asked those in assemblage.\n\n\"I stand against you.\" Michael shouted and walked into the clearing, looking at Estelle.\n\n\"The beast speaks.\" The ancient man said his thinning hair flying as he turned to face Michael. \"You are nothing but a youngling, human. What do you think you can do? What is this matter to you?\" He asked as he stalked toward the threat to his power.\n\n\"I am Michael. I am the chosen mate of The Princess Estelle, and the father of the child she carries. You will not have what is mine.\" He said as the people gasped.\n\n\"She isn't carrying a child, I would have felt it. You lie!\" he spat out.\n\n\"So much for your magic, if you can't see that much. Look at her. Her belly expands with our child. She has the blessing of my family and as soon as the Queen approves we will be wed.\" Michael stepped between him and Estelle.\n\n\"He's her protector.\" Murmured through the crowd. \"Look he protects her even now when he is out matched. A new protector.\" Swelled through the people until it was a wave of sound. \n\n\"He is a Human! They are why the hedge is breaking. Their wastrel has destroyed our lands.\" He spun seeing his support shrinking.\n\n\"Then challenge him.\" A male stepped out of the crowd. \"It is you who craves this war though you have never fought in one.\"\n\n\"What could this youngling know of war?\" He dismissed Michael like he was an errant puppy.\n\n\"I know in war, no one ever wins. I have fought in a war. How do you tell a mother that her son had been killed for no good reason? What do you tell the children wanting to be born when they cry for their parents who were killed before their time? How will they be born? I know that much about war.\" \n\n\"He shows the wisdom of a warrior. Challenge him or stand aside for the new Protector.\" A tall woman said, joining her mate against the ancient one. \n\n\"Fine, I challenge you. Take up the Protector's sword and fight me.\" He said and pulled out a long fine blade and looked steadily down its edge at Michael. \n\n\"What...? How churlish of you. This is the Queens grove. Even we humans know you cannot spill blood in the Queen's court.\" He took the sword that was handed to him. He didn't know how, but he could read the runes on the scabbard. \"This is the Queen Protector's sword. I am Estelle's mate and she has yet to be crowned Queen. I will not dishonor this blade. All it would prove that you have practiced with yours and I have no skill. Let us meet the challenge with the weapons the Goddess gave us.\" \n\n\"A challenge of wits and wills.... I accept.\" He sheathed his sword and smiled. \n\n\"Michael no...! It is what he wanted. He is one of the oldest and most studied of our tribe.\" Estelle screamed.\n\nMichael turned his back on the old man and walked up to Estelle. He leaned in and kissed her. \"Open your mind to me Love.\" He showed her his plan. \"If he wants war, I will show him war.\" He told her, ignoring the gasps from those surrounding him.\n\n\"Come youngling, let us begin. What are the tenants of war?\" the old man asked.\n\n\"The most important, is to survive. Could you survive this?\" Michael asked as he linked hands with Estelle. \"This is how Humans make war.\" \n\nHe flung all his nightmares at the old man. He made his opponent be in his place as the bullets ripped through bodies. He made him feel the concussion of a five hundred pound bomb as it struck its target. He relived the day he was ambushed and watched as the gore of his friends splattered over a hundred feet away from where their bodies once sat. ",
        "He kept pushing as he heard people gasp and gag in the crowd. He showed them the results of a suicide bomber. He showed the lifeless bodies of children as they lay in the dusty streets. He showed a pregnant woman having her womb explode as she walked. He showed all of them, the horror of war.\n\nThe old man flinched and writhed as the images overwhelmed his mind. He tried to wrestle control away from the human as the images burned into his brain. He felt the heat of the explosion. He knew how his challenger obtained the scars that crisscrossed his body He felt the death wish as he tried to close his mind.\n\n\"Enough... stop it. I can't take anymore.\" He cried out.\n\n\"Do you yield?\" The man asked from the sidelines. \n\n\"I yield. Just make it stop.\" He looked and found Estelle and Michael standing five feet above him on the air. \"Please, no more. I was wrong.\" He pleaded, broken. \n\n\"PEACE. I want peace in this Grove.\" Estelle's mother shouted coming out from a small stacked rock cabin. The crowd knelt in respect. Estelle took them down to the ground and ran to her mother. \n\n\"How is Father?\" She hugged her mother.\n\n\"He will live. It took all my power to see to it, but he will live.\" She looked around. \"What has happened?\"\n\n\"Balthazar tried to obtain revenge, gain power, and start a war. Michael stopped him.\" Estelle said.\n\n\"What is my mate's sword doing out here?\" She demanded imperiously. \n\n\"There is a new protector Highness. We thought yours had perished.\" One of the ladies said, her head bowed. \n\n\"Who is this new protector, and whom does he protect?\" She demanded irritated that someone would try and replace her mate.\n\nMichael knelt at the Queens feet. \"Mother, this is my Protector and mate, Michael. He would not use Father's sword. He said it belongs to the Queen's Protector.\"\n\n\"Majesty, I beg your daughter's hand in marriage.\" Michael asked formally.\n\n\"You beg for something you've already claimed.\" She smiled down at him. \"How did he defeat Balthazar?\" She asked her daughter.\n\n\"By a challenge of wit and will. Only one question asked and answered.\" She said proudly. \n\n\"And you did not interfere? I know you dreaded the thought of marrying him.\" \n\n\"She was too busy protecting our child. It was the truth of the realities of war, that won the challenge.\" Michael said, looking up\n\n\"You are with child?\" She demanded and put her hand over Estelle's womb. \"A new generation.... The babe is strong.\" She pronounced. \n\n\"Her name is Laurel. She will take after you Majesty, in height and bearing.\" Michael said truthfully.\n\n\"How do you know?\" The Queen asked, interested in how her daughter's mate would answer. \"The babe is too small even for me to tell what sex it will be.\"\n\n\"She's visited my dreams and told me. She will be Queen after Estelle, if she so chooses. She will be stronger in the magic than her mother. She will be the strongest since ancient times. For good or ill, she did not tell me.\" Michael fought the cramps from his chilling muscles.\n\n\"Yes, she will be, if she could call to you through time. None have had that skill in years uncounting.\" She smiled at Michael. \"Oh, get up and relieve the pain you are in.\" She said and offered him her hand. As he stood up, the Queen caught herself in a quick gasp.\n\n\"Now you see how he won so easily. The Goddess chose him well for me mother.\" Estelle said happily. \n\n\"Yes she has. I take it; it was his voice I heard when I called to you home?\"\n\n\"Yes mother, there are no secrets between us. He is strong in the magic. It was his strength that let me hide the babe from Balthazar. With him I can fly.\" She smiled.\n\n\"Not while you are carrying my grandchild you won't. We will wait until your father is healed to have the ceremony.\" She proclaimed to the cheers of the crowd. \n\nMichael lent his support to Estelle. Only he knew how tired she really was. \"I will take her to my home. When the time is right, call us and we will come. My mother will tend to her until then.\" He wanted to scoop her up, but didn't know how Estelle would react.\n\n\"Know on the day you wed, you will have to forswear the human race. Are you willing to do that?\" The Queen looked intently into his eyes.\n\n\"The day we joined, she told me this was forever. I chose her and will accept the price.\" Michael said solemnly. \"My only request is to be able to see my mother and sister from time to time.\" He asked, hating the formality of the situation. He just wanted to get his Estelle into bed so she could rest.  \n\n\"I am fine Love. I have your strength now. This is important.\" She answered in his mind.\n\n\"We shall meet. Only the Goddess knows what is to happen. Go now and keep your mind open for my call. For now you are one of the chosen.\" The Queen dismissed them and turned to the elders for an explanation of the events that had unfolded while she tended her mate.\n\nAs soon as they were out of the Queen's Grove, Michael picked up his mate and started jogging back the way he came. When he reached the border, he was surprised to see a gap in the hedgerow. \n\n\"What does this mean?\" He asked Estelle, to find her asleep in his arms. He shrugged and stepped through. He walked down the deer path to their home. Once he got home, he laid his love in their bed and went to take a shower. As soon as he was dry, he snuggled against her and they slept. \n\nWhen he finally woke up, he stretched and felt for Estelle. He had a mind to make soft slow love to her, but found her side of the bed empty. He smiled as he felt the warm sun through the window. When his mind cleared and focused, he heard voices. \n\nHe grumbled at the intrusion as he walked to the bathroom. He looked at his face and wanted to laugh. He pulled out a brush and brushed all the tangles out of his now long hair. He found a small leather strip and tied it behind his neck. He took his trimmer and cut the unruly mass of hair on his face, down to neat stubble covering his jaw. He kept it long enough that it made his face look even again. He pulled on jeans and a long sleeved shirt. If he didn't know better, he almost looked normal.\n\nWhen he entered the kitchen, he found Estelle and Kelly talking. \"Yeah I met this cute guy. We went out on a date. It ended abruptly when he found out my last name was Sparks. For some reason he just got up and left muttering about ruining his life and stiffed me with the bill.\" Kelly shrugged.\n\n\"What was his name?\" Estelle asked.\n\n\"Tony, something or other....\" She looked at Estelle and Michael as they just started laughing.\n\n\"I'm sure you can find someone better than that shallow idiot.\" Michael said as he leaned down to kiss his sister. \n\n\"Yes, I know many males that would love to meet you.\" Estelle smiled.\n\n\"Is mom coming up?\" Michael asked, looking for something to eat.\n\n\"If the snow isn't too deep.\" They heard voices outside. \"There she is now.\" Kelly smiled at her mother's timing. \n\n\"I'll get the door.\" Estelle said as she walked over to greet Michael's mother.\n\n\"Hey, I like you hair. It's turning more white than blond, but it looks cool.\" Kelly told her brother as she pulled on it. \"They say that people start looking like each other, but that's taking a bit far. If I didn't know about the scars...\" They stopped talking when they heard Estelle gasp.\n\n\"What's wrong dear?\" He asked.\n\n\"Mother, Father... Mrs. Sparks.\" She said surprised. Estelle didn't feel her parent's presence before she opened the door. Standing between the two taller people, Michael's mother stood in awe of the people she met when she came to see her son. They all were so striking. \n\nKelly stood up instinctually as she saw the two tall people with her mother. Estelle's mother looked regal and her father looked dashing. He stood a couple of inches taller than his wife. \n\n\"Kelly, I would like you to meet my parent's.\" Estelle said formally.\n\n\"It is nice to meet the family of my daughter's mate.\" Her father said politely. \"I am known as Adrian. This is my wife Bruneian. Please welcome our escort.\" He motioned to the people who followed them. \n\n\"Um, yeah sure...\" Kelly swallowed as four people just as striking as Estelle's parent's walked in behind the tall couple. She swallowed again as one of the men looked at her with unvarnished desire. His eyes were golden like a wolf's, with hair black as a raven's. He couldn't stop looking at her. \n\n\"The one who is staring is so rudely Tristan.\" Estelle giggled, teasing her childhood friend. \n\n\"Sir, Ma'am, Tristan.\" Kelly brushed her hands down her pant legs, feeling like a stooge.\n\n\"It is an honor to meet the lovely sister of the great protector. You shine brighter than a spring day that brings the blooming rose.\" Tristan kissed her hand and bowed over it. \"Mia esodda, granda filodoma.\"\n\n\"Fino, ganga mia botoa.\" Michael said sharply to Tristan.\n\n\"Yes Protector.\" He bowed in awe. \n\n\"Children, there is time for all that later.\" The Queen said and smiled warmly. This was working out better the she could have ever imagined.\n\n\"What just happened?\" Kelly asked Estelle under her breath.\n\n\"Tristan just said he has met his mate and that he will love you forever. Michael told him if he hurt you, he will face him.\" Estelle smiled wickedly. \"Your brother has a reputation among my people.\" \n\n\"Really... and they didn't even talk to me about this?\" Steel crept into her voice as she stared down the two males. \n\n\"Your rose seems to have thorns....\" Estelle laughed at the look on Tristan's face.\n\n\"All of them do, Highness. She will be worth it.\" He said confidently. \n\nEpilogue\n\nDeep in the forest, the hedgerow was moving. Within a few seasons, it would encompass the new land that was now joined by love and blood. Mother and Father said their vows under the tree that she had found him under. Kelly and Tristan held their heads together and dreamed of their mating. Between them, they held the infant Laurel, to keep me out of mischief. Aunt Kelly didn't make it easy for Tristan, but as he said, she was worth it. But, that is another story. \n\nAs the years passed, the forest grew for the first time in years uncounting. Estelle and Michael knew their children had to be born before she took up the scepter of responsibility. To give you a hint of their future, it was eighty years before my grandmother stepped down and my youngest sibling came into being. The Goddess made sure they had time between so they could enjoy the fruit of their labors. By the time they had finished expanding their home, it was a palace fit for a Queen and her large family.\n\nMy father and mother loved and made the strongest of magic. I have waited to look for my mate, knowing I could never find someone who loved me as much as my father loves my mother. Her home apartments sit on the same spot as the small cabin where they first shared their love and where I was conceived. \n\nMy grandmother Sparks resting place is close by. She could never make the transition once the hedge moved. But, she spent many happy years in the nursery with me and my siblings. Her favorite was my brother Blake. It is now my turn to step through the hedgerow and see what the world has become. My mother gifted me with her stone necklace when I told her I was going on the other side of the hedge to look for a mate. She even told me its secrets. I take a deep breath as my father and grandfather guide me to the border. They kiss my forehead and wish me well. \n\nAs I step through the hedgerow, there is a man hurt and alone.... \n\nEnd.\n\nPost Script:\n\nI borrowed the concept for this story from a book I read decades ago about how if you could just step through the hedge, what a wonderful place you could find. Please feel free to leave any constructive comments and please take the few seconds to vote. \n\nThank you"
    ],
    "authorname": "Myhands316",
    "tags": [
        "magic"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/stepping-through-the-hedgerow"
}