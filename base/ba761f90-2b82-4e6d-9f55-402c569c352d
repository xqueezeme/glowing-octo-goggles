{
    "title": "Lady in Red Pt. 02 Ch. 20",
    "pages": [
        "The Lady in Red group was approaching Blakely early the following afternoon when Gwen tapped Steve on the shoulder and indicated that she wanted him to pull over. She was addressing her friends as soon as they turned their bikes off.\n\n\"This may be a little tense up ahead, so we need to be cautious,\" stated Gwen. \"I don't have to tell any on you that our men are capable of handling almost anything if we stay out of their way. However, we need to be smart, not tough, when possible. We have to find the reasonable people in the town and work on them. \n\n\"I want to change places with Naomi and sit behind Jared. We're dealing with racial issues here and I think we need to show everyone that we don't subscribe to that type of stupidity. I'm as white as they come and Jared is pretty dark. Naomi is somewhere in between, but it'll be obvious to everyone that Jared and I are friends, as are Steve and Naomi. I hope that our friendship will help convince people to listen to us. Any ideas or suggestions?\"\n\n\"How about I climb on back of Billy's bike and Charlotte rides with Jeff?\" proposed Julie Wilson. \"Jeff is dark and Charlotte is fair skinned. Billy will have to live with my chest pushed against his back the rest of the way. If he can deal with that, we should get going.\"\n\n\"The only thing better would be if you drove and I rode behind you,\" grinned Billy. \"We'd both have our hands full.\"\n\n\"Dad! These awful men lust after your wife. You must feel terrible,\" pouted Naomi as she concealed her grin.\n\n\"Don't worry about me,\" deadpanned Jeff. \"Charlotte, that's not the handlebar you're gripping so tight!\"\n\n\"Sorry, Mr. Wilson!\" laughed Charlotte as she went along with his joke. \"I bet I can steer with it though. It feels like a big joystick!\" \n\nNational Guard troops were in Blakely when Steve and Naomi led the group into town. Pedestrians recognized them within seconds. Steve rode toward the downtown area not far from where the property they intended to buy was located. As they approached, it became readily apparent that there were some angry people on the streets.\n\nAs planned, the group stopped at various points along the main street. People were gathered in groups and the tension was tangible. Guard troops patrolled the sidewalks. Many of the businesses had plywood over the windows, although the doors were still open for business. It would only take the owners a matter of minutes to seal off their business if need be.\n\nSteve took Naomi's hand and walked into a small diner near where he had parked his bike. He saw that his friends were going into various businesses up and down the street as locals pointed at them and spoke excitedly to each other. \n\nSteve led Naomi up to the counter and offered her a seat before taking one himself. At older black man watched him from behind the counter and nodded when Steve took his seat.\n\n\"We'd like to get something to eat,\" stated Steve calmly. \"I understand there are some problems here. Do you have any trouble serving lunch to Naomi and me, Sir?\"\n\n\"Are you kidding? I'd be proud as hell to serve you both. I was in the Navy in Vietnam and I appreciate what you folks are doing for veterans. What would you like?\"\n\nSteve and Naomi ordered, and as they waited for their lunch, they questioned the old man about the situation in the area. He was a fountain of information and wasn't shy about expressing his opinions.\n\n\"The real problem, as I see it, is no jobs and no real education for most of these young people. The Madison Plant shut down last year and things have been sliding downhill ever since. Now we have outsiders, white and black, coming to town to try to keep things stirred up so they can be on TV and write books about their experiences. They don't care about this town or its residents,\" insisted the old man.\n\n\"Our company is interested in buying that plant to make action figures. That shouldn't be too much different than the dolls and plastic figures Madison made. How would that be accepted here?\" asked Steve. \"We have no interest in pouring money down a rat hole. We need employees that show up every day and aren't risking their lives to do so. What are the chances we could be successful here?\"\n\n\"I'd say they were good if you pay a decent wage and make it clear what you expect. If these folks had some money, they'd be a hell of a lot happier and much better citizens. That's assuming you'd hire locals and not have outsiders taking all of the jobs,\" replied the old man thoughtfully.\n\n\"We want to discuss this with people that are regarded as leaders of the community, from all backgrounds. We'll pay well over minimum wage. We'd donate to the local schools and a few other civic organizations, but we need to feel comfortable that it would be appreciated and we'd be welcome in this community,\" reasoned Naomi. \"My father is retired Navy and he, along with my mother, are going to be in charge of production here, if my friends are convinced that it'll work.\"\n\n\"Your parents are black, right?\" asked the old man before he smiled when Naomi grinned and nodded. \"There may be a few skinheads that won't work for a black boss, but most of these people really don't care as long as they can feed their families. We don't have a race problem, although you wouldn't know it from the media coverage. We have a survival problem. We need to be able to pay our bills and support our families. If the folks around here can do that, there won't be any race issues. I'm pretty sure of that!\"\n\nAn hour later the group gathered near Charlie's bike as agreed upon earlier. They quickly discussed what they had learned.\n\n\"It seems to be the opinion of most of the business people that the real issue here is poverty and crime,\" summed up Jeff Wilson. \"The race thing is a result of too many dogs fighting over the few scraps left in this town. They're desperate people and they're doing desperate things.\"\n\n\"The teenage boys kept asking about Steve and Jared,\" revealed Charlotte. \"They wanted to know if you guys would talk football with them. For some reason, Billy's exploits at state went unmentioned by these uninformed fans.\"\n\n\"All I heard about was how beautiful Gwen, Jordan, Naomi, and the rest of the women are,\" responded Julia Wilson. \"A few even mentioned they thought I looked pretty hot. I think you ladies could give these local girls some fashion tips and somehow bring in how important education is to them.\"\n\n\"You know what? Julia hit the nail on the head!\" exclaimed Lisa. \"We can't make people like or respect each other by telling them to do so. We need to change the atmosphere here. We should stay a few days and have the guys do some sports stuff while impressing upon the young men how important education, discipline, honor, and pride are. We ladies, especially the more famous ones, need to do the same about clothes, music, movies and fashion with the young women while explaining how education, self esteem, discipline, and honor are important in their lives.\"\n\n\"Let's turn this into a holiday sort of thing rather than some sort of riot,\" suggested Charlie. \"Let's offer to pay the businesses to provide services for the locals. Let's make it a big block party with lots of food and non-alcoholic drinks.\"\n\n\"We need to get things rolling then. The cable news networks are all over the place, just waiting for some violence to breakout,\" observed Gwen. \"Let's start doing some interviews. We'll tell them we want to meet with local leaders about possibly opening the factory, helping the school district, and the police department. We want to create good jobs, improve education, and lower crime. Sounds like a political speech, doesn't it?\"\n\n\"It does, except we intend to carry through and make it work,\" insisted Jordan. \"Let's find some of those news people and get the word out.\"\n\nTwo hours later, Steve and Gwen and their entourage were seated at the front of the meeting room at city hall. The place was packed to overflowing once the interviews had been broadcast. News crews and cameramen lined the walls.\n\nThe mayor, a distinguished looking older man asked for quiet and then stated the purpose of the gathering. \"We have the owners of a large company with us here today. They want to talk to us about the possibility of opening the Madison Plant again. They can tell us a little about their plans and then we'll be able to ask questions. I'll turn the floor over to them.\"\n\nLisa had been designated as the point person for the group. She stepped up to the podium and gave a brief introduction. \"Lady in Red Productions has an option to purchase the Madison Plant. We'd like to retool it and get it in production as soon as possible. We plan to make action figures, mostly of Jordan, Charlie, Steve, and my sister Gwen. We also expect a big demand for Naomi's figure.\"\n\nLisa stopped speaking. She laughed as many members in the audience, including her husband and his friends, all began agreeing quite vocally with her last sentence.\n\n\"Okay, maybe that was a poor choice of words, but it appears they were pretty accurate,\" continued Lisa as she selected her words more carefully. \"We'll have little plastic objects that resemble many of the rest of us, too. \n\n\"The only thing holding us back is the civil unrest here in Blakely. We're willing to invest substantial sums if we feel comfortable with the workforce, the work environment, and the safety of our people. We need your local civic leaders to convince us that we're wanted here. We need to know there won't be riots, arsons, murders, and general mayhem when we take over the plant. Does anyone care to comment?\"\n\n\"These people need guarantees that they'll be treated fairly and not...\"\n\n\"Please identify yourself, Sir,\" interrupted Lisa. \"Who are you and where do you live?\"\n\n\"I'm Reverend Big Bill Bendix! You must have seen me on TV. I have my own cable news show,\" blustered the large man as he glared at Lisa.\n\n\"Sir, we have no interest in what you have to say. We're asking for input from local leaders, not TV personalities looking for ratings,\" stated Lisa firmly. \"Are there any local leaders that would like to comment?\"\n\n\"You can't do that!\" complained Big Bill. \"I have a lot of viewers and...\"\n\nBy the time he managed to say that much, Jared and Chip moved in front of him. Jared spoke softly, but his voice carried across the room.\n\n\"Your choices are to either remain quiet, or leave the room. It's that simple.\"\n\nBig Bill quickly sat back down, but his anger was evident. Another man stood and spoke to Lisa.\n\n\"I'm Harvey Wingate. I own the gas station on the corner of Main and 2nd Street. This area needs jobs bad. The unrest we've been going through is mostly about despair and lost hope. We need you to open that plant, especially if you'll pay a decent wage. Most of the people that live in the area are honest, hard working folks, if they just get the chance.\"\n\n\"How many black employees will you have?\" asked a tall black man in the first row. \"I'm James Hardy and I'm on the school board at Central High.\n\n\"Good question,\" responded Lisa. \"We won't have black employees.\"\n\nLisa's statement set off a loud round of indignant reactions from the blacks in attendance and many of the whites. Lisa let the complaining continue for a short while before getting the crowd to quiet down.\n\n\"We won't have white employees, either. We won't have gay employees. We won't even have male or female employees,\" added Lisa. \"We want dependable, honest, capable employees. When we hire people, we will not designate race, religion, gender, ethnicity, or sexual preferences in our files. If the Feds decide that they need the information for their records, they can gather it themselves.\n\n\"I'd like to introduce the team that will manage this plant, if we decide to proceed with the purchase. They'll give you an idea of what we're expecting to accomplish. Will Jeff and Julie Wilson please come up?\" requested Lisa. \n\nAs the couple made their way to stand next to Lisa, she began the introductions. \"Jeff spent 30 years in the Navy. He retired as master chief petty officer, which he tells us means simply that he worked for a living. Julie Wilson has an extensive background in education and her most recent position was principal of Sherman Central High School.\n\n\"This couple has agreed, after numerous pleadings from Lady in Red Productions, to manage the plant, if we go through with the purchase. Make no mistake about this. We have complete and total confidence in these two. Their decisions will be supported without question by the owners. They will be in complete control of this plant.\"\n\nIt did not go unnoticed that Lady in Red Productions was placing a black couple to head up the new project. Even more impressive to those in attendance was the unequivocal support they received from the owners.\n\nMore citizens joined in the discussion. Lisa asked Jeff and Julie to respond to most of the questions regarding the plant, production, the workforce, pay and benefits. When Jeff stated the starting wage, everyone sat up straighter and paid closer attention. When he added the benefit package, even bigger smiles broke out all over the room.\n\n\"There are a few more things we want you to consider,\" summarized Lisa once it appeared that Jeff and Julie had answered most of the questions about the plant. \"Our company will offer a grant to the local police department. We will guarantee two million dollars a year for at least ten years if certain reasonable conditions are met. Half the monies each year will be spent on training and equipment, like vests and body cameras for local law enforcement. The other half will be used to hire new officers each year. These new hires will be military veterans, when possible. They will also be local. They will be hired based on qualifications, but we expect these new recruits to be a rather diverse group, if you understand what I'm saying. We've spoken to the police chief and mayor and they're onboard with this. \n\n\"We'll donate new computers, teaching aides, and other equipment to both of the local high schools. We'll set up scholarships for those that are accepted to college and can't afford to go. We'll also help those students that feel a trade school would suit their talents and skills more closely. We'll support and encourage the study of music and the other arts at these schools.\n\n\"In short, we want this community to thrive and to carry our production facility along with it. We feel it's a win/win situation, if this community can overcome whatever distrust, fear, ignorance, and hatred its citizens may harbor,\" finished Lisa.\n\n\"There are a few more items we'd like to share,\" stated Stephanie as she finished conferring with Steve, Gwen, Jordan, and Charlie. \"Jordan, Gwen, Naomi, and some of the rest of us women will be available to discuss all sorts of things that might interest teenage girls and young women. We'll be meandering down Main Street this evening and tomorrow. People, especially young women, are encouraged to ask us about making movies, music, fashion, and educational opportunities.\n\n\"At the same time, and again on Main Street, Jared, Steve and their buddies will be available to discuss sports, especially playing football, as well as various career choices and educational opportunities both in and out of the military. They'll even talk about making music and movies if there's any interest.\n\n\"We've contracted with all of the restaurants and eateries in the area to provide food and non alcoholic drink to folks tonight, free of charge! We're also offering incentives to clothing stores to offer huge discounts on their inventories. The National Guard has already planned to close Main Street to vehicular traffic after dusk, so we're going to make it a big block party. We've decided that if we find the local citizens willing, and hopefully, eager to join our company workforce, we'll be buying the plant and begin production as fast as possible. It's now up to the good people of Blakely to determine their destiny.\" \n\nWhen Stephanie finished speaking, those in attendance began clapping and cheering as they stood and prepared to leave the crowded meeting room. Smiles were seen on most of the faces as everyone discussed the events of the day and how it would benefit their town.\n\nNews stations had covered the meeting and reporters rushed to positions where they could broadcast back to their stations. All of the Lady in Red owners, along with Julie, Naomi, and Jeff Wilson were interviewed by various stations. Business owners and school students were asked for their opinions. It was soon obvious to the viewers across the nation that the anger, despair, and violence of the previous few days was rapidly giving way to hope and optimism.\n\nThat evening, cable news stations broadcast from Blakely, much like they had the previous three nights, but with one huge difference. While downtown was very crowded, there was very little animosity and only minor disputes. The people from Lady in Red Productions were shown interacting with the locals. Steve and Jared could be seen showing some older teens various football techniques and training methods. Steve entertained the crowd by throwing long passes to six different young men that played on the two local school teams. Jared spent time demonstrating different types of pass rushes and the basics of tackling.\n\nJason, Chip, Jeff, and Pete, spent a lot of time explaining what would be expected of military recruits and what the military offered that would benefit those recruits. Charlie worked mostly with kids interested in music, from playing instruments to composing. All of the men stressed how important degrees were, no matter what career the young people chose.\n\nThe women were besieged by girls wanting to know everything about careers in movies, modeling, and music. They devoted a great deal of time extolling the virtues of sound educations for the young women, regardless of what career track they pursued and how successful they were. \n\nGwen, Jordan, or some of the others were often seen taking a girl by the hand and heading into a boutique or clothing store to put together an outfit for them. No bill was ever presented to any of the young women being outfitted.\n\nJust before eleven PM, Governor Fisher of Illinois arrived on Main Street. He made a point of thanking Steve, Gwen, Jordan, Charlie, the Wilsons and all of the others for the incredible turnaround in Blakely. He commented on how much the National Guard was now enjoying its assignment, and how they'd better enjoy it since it appeared that they would be going back home very soon. \n\nBack in Washington, Vince and Cindy Rosen sat in their home watching the coverage with Senators Chatham and Mason. \"Last night we saw cars overturned and burned on the streets of Blakely. Tonight, it's a block party!\" observed an amazed Cindy Rosen.\n\n\"It's a remarkable turnaround,\" agreed Senator Chatham. \"That group, especially Gwen and Steve, seems to have no limit. They transformed a highly volatile situation into a cause to celebrate. They'll keep their word about jobs and what they'll pay. I've never met more honest, sincere people in my life.\"\n\n\"This has never happened before that I know of,\" began Senator Mason, \"And that has become a comment frequently used when speaking about those two. When I think about it, I've never seen a Navy Lieutenant and freshman congresswoman propel a candidate to win his party's nomination for the presidency of the United States before.\"\n\n\"They've made a huge difference,\" agreed Vince Rosen. \"Cindy and I have discussed it until we're blue in the face. Will they call in their markers at some point? They've never hinted that they expect anything from me in return for their support. That's another thing that never happens in Washington.\"\n\n\"I've been wondering about that, too,\" stated Chatham. \"What will they expect from you if they manage to help you get elected? My gut feeling is that they'll expect to have the chance to offer opinions on certain issues and perhaps ask you to exert some influence behind the scenes. They'll never ask you to betray your oath of office, or give them an unfair advantage. I'm sure of that.\"",
        "\"Look at how the kids are flocking around them, hanging on every word they say,\" pointed out Cindy Rosen. \"They're treating all the people very well, regardless of race, gender, or how they're dressed. What an example they're setting for the rest of the country. That's the strength of that group. They make us proud to be Americans, and that hasn't been happening a lot lately. We're watching history being made. Everything they do is bigger than life.\" \n\nSteve had been tossing passes to some of the kids that played on the local school teams. One tall black kid caught his attention. He appeared to be extremely fast and quite talented. Steve held the ball as he gave the kid instructions.\n\n\"I want you to run straight down the street to that second light pole. Then cut left toward the barber shop door. I want you to look for the ball after you make the turn and expect it in your chest as soon as you turn to look. Now, let's clear the street down there and see what you can do.\"\n\n\"I'll catch it, if you can throw it that far,\" guaranteed the tall teen. \"That's gotta be forty yards, at least.\n\n\"The ball will be there. Let's see what kind of speed you have, and if your hands are like a couple of bricks,\" responded Steve with a grin.\n\nBilly and Jared quickly got people to clear the street so Steve could throw the pass to the kid. People stopped what they were doing to watch. It became rather quiet as Billy stepped over the ball to snap it to Steve. The kid lined up on the right side and waited for Billy to hike the ball.\n\nBilly sent the ball backward to Steve as he stood in the shotgun position. Steve watched the kid fly down the street. Just before he made his turn by the light pole, Steve wired the ball. The kid made his cut and the ball hit him in the chest within two strides. Spectators were amazed at the velocity of Steve's pass, but even more stunned when the kid grabbed the ball as it hit his chest, seemingly with no effort.\n\n\"What kind of marks do you get in school?\" asked Steve as the teen trotted back with the football. \"What's your name? I think we need to introduce you to some college recruiters.\"\n\n\"My name's Rick Charles. I'm the guy with two first names,\" joked the talented teen. \"I get mostly B's and some C's in school. I don't know if I'm smart enough to go to college. No one in my family ever has.\"\n\n\"That attitude is the first thing we have to change, Kid,\" declared Billy. \"I only played division three football, but we never had a kid that could've made the catch you just made. You're obviously a smart kid. With some work on both your grades and your game, you could get a scholarship to a lot of different schools.\"\n\n\"Would you be interested in the Naval Academy?\" questioned Steve. \"The requirements are pretty strict, but they sure need a receiver with your speed and hands. If you tell me that you're willing to work your ass off, I'll promise to do my best to get you into Annapolis. If that doesn't work, we'll get you a scholarship to some lesser school, like Penn State.\"\n\n\"Hey! I heard that!\" boomed Jared. \"Penn State needs skilled players, so maybe he should forget about being a sissy Navy boy and shoot for the stars. He could go to Penn State and take ROTC and become an officer in the Army.\"\n\n\"You really think I could play for a major school?\" asked the kid in amazement.\n\n\"I'm formulating a plan even as we speak,\" replied Steve. \"Our company will get a few tutors lined up for the kids in your school that want to go to college and need to improve their grades. We'll hire a trainer to work with any guys that truly want to improve their mechanics, strength, and conditioning for football, or for any reason. What I'll need from you and a few others is your word that you'll do the absolute best you can in everything you try.\"\n\n\"I heard that idea! Let's include any girls that want to improve,\" insisted Jordan as she walked up to where Steve and the guys were talking. \"There are more than a few girls here that want to further their education and need to bring their grades up. I'm sure there are some that could get athletic scholarships as well, if they really work at it. Let's set something up!\"\n\nThe friends stayed out well past midnight, speaking to people individually and in groups. They answered questions about the opening of the plant, how they'd help the schools, and work with the high school kids to gain entrance into institutions of higher education.\n\nSteve couldn't help but notice the negative attitudes and remarks of more than a few locals, especially young men about his age. He also noticed that race didn't seem to know any boundaries when it came to young men that had lost hope and direction. He knew changing the outlook and attitudes of these characters would be a very difficult task. The school age kids and those just out of school appeared much more interested in the possibility of college and good jobs. Steve feared that the twenty-something group would fall through the cracks. He wondered if there was a way to reach them to any measurable degree.\n\nAfter the first peaceful night Blakely had experienced that week, Steve, Gwen and friends were up early. They enjoyed breakfast in the restaurant Steve and Naomi had first visited. By the time they had finished eating, they were surrounded by youth of various ages, races, and both genders.\n\nGwen and Naomi listened intently when a black teenage girl spoke quietly to Steve. \"Do you think Naomi is as pretty as the white girls in your group, or do you think white girls are prettier?\"\n\nSteve looked at the girl as he formulated his response. \"I honestly think that Naomi is beautiful. I've never seen a more beautiful woman. I've told her that quite a few times. You can ask her if you don't believe me. All of these women are beautiful, but none more so than Naomi. Look at her mother, sitting across the table from us. She's gorgeous, too.\n\n\"Are you really trying to ask me if black girls are as pretty as white girls? If so, let me say this. Skin color has no bearing on beauty. I've seen what appeared to be an attractive woman look really bad simply because of her attitude. If a woman is smart, active, capable, and sensitive to her friends and family's needs, men will find her attractive, regardless of the color of her skin. \n\n\"Beauty is also quite subjective. Some men prefer tall girls and some like shorter girls. Some like thin girls and some like more voluptuous types. But all men are attracted to women that are intelligent, honest, happy, and confident. You're a lovely young woman, but that isn't enough. You need to learn, to grow, to always be responsible for your actions, and to make good decisions. Naomi has done all of those things, and a great deal more. Her loyalty, discipline, and intelligence all make her beauty even more impressive. She's been blessed with a fantastic body and great looks, but she's worked hard to be way more than just a beautiful woman. She's a great person.\"\n\nAll of a sudden Naomi surprised Steve by dropping into his lap and planting a big kiss on his lips. \"You say the nicest things! I have no idea what I did to get such wonderful friends, but I'm so happy that I have all of you. I heard what you told this young woman. You sure have a silver tongue.\"\n\nAs she finished speaking, Naomi noticed the girl was looking in shock at Naomi sitting on Steve's lap. Then she'd look at Gwen and Jared to see their reactions and then back at Naomi.\n\n\"Don't worry about Gwen and Jared being upset. They know I love this guy, but it's as very good friends and not as lovers. As Steve just told you, we value loyalty and honesty. Gwen loves Jared and I'm cool with it. You can see why we ladies would fall for these handsome guys, but you know what? These guys will only be with their own lady and never with anyone else, if you know what I mean. All of us women feel safe and loved when we're with them. They're like brothers to us, except I probably wouldn't be sitting on my brother's lap and kissing him. Do you understand what I'm telling you?\"\n\n\"I think so. You and Steve like each other a lot, but you don't have sex with him, right?\" asked the girl.\n\n\"That's the very short version. My friends and I respect each other far too much to ever betray that friendship,\" responded Naomi. \"A true friend will never do something to hurt you and will do almost anything to help you.\"\n\n\"Were you a good friend to Steve and Gwen ever since you met them?\" questioned the girl.\n\n\"I'm not very proud to admit that I wasn't,\" recalled Naomi. \"I was a combination of an elitist, a racist, and a regular jerk. Gwen, Jordan, and Ashley pretty much set me straight, along with my parents. I couldn't wrap my head around Steve finding a black woman attractive and how well his friends, and not just his girlfriend, stuck up for him. I realized I was mostly insecure and jealous, which are not good traits in a friend. I came to realize that if I trusted them as friends, they would treat me the same way. I had to learn to have faith in people, and that race had nothing to do with character, respect, discipline, and friendship.\" \n\n\"That's right,\" agreed Gwen as she came over to join the conversation. \"You have to become a friend before you can have a friend. Good friends are great to have. Jared saved my life by taking two bullets intended for me. Billy did the same for Charlotte. Pete was almost shot saving Becky and Ashley. Billy, Jason, and Chip each saved Steve's life at least once. Steve has returned the favor with Jason and Chip. Charlie was wounded helping us rescue Steve and Chip from terrorists in Iraq. Even my dad was wounded on that trip.\n\n\"The point I'm trying to make is that these people put friends before themselves. They're loyal, honorable men that care for and protect us women. We'd do much the same for them, if the need arose. These men are now 'brothers' without any blood in common. That seems to be one of the really good things that military training teaches them. They absolutely have to be able to trust their team to have their back. Without that trust, they wouldn't be able to do what they do. That sense of trust and honor has carried over into their everyday lives.\"\n\n\"It's hard to imagine having a friend like that,\" admitted the girl that first asked Steve the question.\n\n\"It really is. Now imagine having as many friends as you see here today with Naomi and me. But, as I said earlier, to have a friend like that, you need to become a friend like that first. Relationships are not easy and they always need attention and effort,\" concluded Gwen.\n\nThe friends spent the rest of the day meeting residents and discussing the plans for the factory, schools, police departments, and civic organizations. The sense of despair and futility had been replaced with hope. Later in the afternoon, Gwen, Jordan, Charlie, and Steve put on a little street concert using just a couple of acoustic guitars and a keyboard. The atmosphere was much more relaxed as locals mingled and danced with little regard to race or religion.\n\nEarly evening saw Steve and friends say their goodbyes to Jeff and Julie Wilson, who were staying in town to work on getting the factory up and running. It did not go unnoticed that Julie gave each of the men a hug and a kiss, while the other women did the same to Jeff. It was quite clear that owners of Lady in Red Productions really didn't appear to have any prejudices.\n\nThe group had just returned the motorcycles to the Harley dealer and was preparing to climb into two vans to transport them to the airport when Lisa answered a phone call from her mother. It was immediately obvious that something was wrong. Lisa motioned for Jason to follow her as she led him off to the side for an emotional few minutes on the phone.\n\nEveryone waited with concern until Lisa returned her phone to her pocket and hugged Jason. It took her a couple of minutes to explain the situation to him between her sobs. Finally she managed to calm down. He hugged her shoulders as he led her back to the group to explain to them what Lisa had just been told.\n\n\"That was Paula. She and Diane took Theresa and Billy with them to the mall a little while ago to do some shopping. As they parked their car, two vans pulled up, one in front of their car and one behind it, effectively blocking them in. Several men with guns got out of each van and headed toward Paula, Diane, and the kids who were all still in the car.\n\n\"All Hell broke loose. Paula told Lisa that the guys with guns suddenly started dropping as they were immediately engaged by another group with guns. It was over pretty fast. The men still standing dragged two injured men back to the vans and drove off, leaving three others lying dead on the pavement!\" \n\n\"Was it a gang war or something?\" asked a stunned Kate. \"Is everyone okay? Do they know what happened?\"\n\n\"Paula told Lisa that once the vans left, three women ran to their car to see if they were alright. Each of them carried a handgun. That's when Paula realized that they were the ones that had engaged the men in the gun battle! Yes, they're fine, but they're all pretty shaken up. One of the women was bleeding from her leg, but it didn't appear too serious.\n\n\"I have a lot of questions,\" stated Jason.\" One of the first is; who were the women that defended our family so well?\"\n\nAs Steve listened to the story of the attack, he felt anger and relief battling for control of his emotions. Everyone was looking to him for an explanation, but he slowly turned to Charlie and arched an eyebrow.\n\n\"I made an executive decision a couple weeks ago,\" admitted Charlie when everyone's gaze turned to him. \"While we were in Russia, Steve asked me to find security for our loved ones, and I promised I would. I've interviewed a few agencies, although we were so busy, I had trouble finding the time.\n\n\"One agency really stood out, so I hired them on an interim basis until I could present the entire agreement to everyone for approval. They've been watching the folks back home and setting up living accommodations in Sparta for the last week. I was going to ask for a meeting with them when we returned from the Nimitz, but we wound up flying here so fast, we didn't have the time.\"\n\nLisa sobbed again as she flung her arms around Charlie and hugged him tightly. \"You saved my family! Thanks so much for being so dependable and so smart! You're going to be the best father possible. Those women were godsends!\"\n\n\"I didn't do anything special. I simply followed through on Steve's request to find security for everyone. He deserves the credit,\" replied Charlie modestly.\n\nGwen stepped in and embraced Charlie once Lisa released him. She kissed him soundly on the lips and then announced, \"I have the best sisters and brothers in the world. Jordan, you found a winner in this guy. Thanks, Charlie, for coming through for us!\"\n\nJordan beamed as everyone demonstrated how much they appreciated Charlie's diligence. Once everyone had hugged him or shook his hand, Jordan hugged Charlie's arm to her breast and smiled at everyone. \n\n\"He's pretty good, isn't he? Thank God these guys identified the problem and took steps to correct it. I agree that he's going to be the best father ever. He'll make sure our kids are safe!\" \n\n\"Yeah,\" agreed Kate. \"Those women were godsends, just like Lisa said. I guess that would make them Charlie's Angels!\" \n\nOn the flight back to Sparta, the women gathered to discuss the recent trip and the horrible attack on Paula and Diane. Gwen noticed that Steve, Jason, and the other men were having a very quiet discussion of their own. While they were not speaking loudly, Gwen could see the emotion wash across their faces. She decided that she would ask Steve about it later.\n\n\"I'll take point on this,\" insisted Jason. \"These pricks tried to kill my family! I'm just asking for cooperation and unlimited finances to track these bastards down.\"\n\n\"You've got it!\" replied Steve immediately. \"We need to be proactive on this. I'll be damned if we just sit around waiting for them to take another shot at our women and children.\"\n\n\"We're all tough guys, or like to think that we are, but I'm going to start carrying from now on, where possible,\" continued Jason. \"The girls need to be trained on weapons right away.\"\n\n\"That's one of the things I contracted the agency for,\" revealed Charlie. \"They have several qualified instructors and they'll be teaching all of the women how to handle guns safely, and how to use them when needed. I asked the builder at Asgard to draw up plans for a gun range. It shouldn't take long to construct.\"\n\n\"You're way ahead of us, Charlie, thank God,\" responded Steve. \"I'm going to make the perimeter wall and surveillance equipment a top priority. Pete, we're going to shift your duties to become head of security for Asgard. You can still travel a lot with Becky, but only after you make damn sure everything is set up and running smoothly with our home security. Any problems with that?\"\n\n\"Of course not! I was wondering if I'd be out of a job once these new security people came on scene. I understand computers and security pretty well and what I don't know, I'll learn real fast. You can count on me!\" promised Pete.\n\n\"There's one more thing we need to make clear right now,\" insisted Jason. \"When I find out who's responsible for attacking my family, I'm going to make damn sure they're never able to try again. I'm talking about permanently.\"\n\n\"I understand and agree,\" nodded Steve as he looked at his friends. \"The safety of our families exceeds any other consideration. This'll get ugly when we find the people responsible, and I don't care what shithole they're hiding in. We'll find them, and then we'll deal with them. Does this cause any concerns for any of you?\"\n\n\"I was thinking the same way,\" agreed Charlie. \"Jordan and our baby are more important to me than my own life. Count me in when the time comes to settle this. It's one of the reasons I'm so damn proud to have you guys as friends. You take care of family, come hell or high water.\"\n\n\"I don't think we need to explain this to the ladies,\" reasoned Chip. \"They'll have plausible deniability if anything goes south on us. The less they know about it, the better. Count me in on the reckoning.\" \n\nHelicopters were waiting to transport everyone to Sparta when the Red Lady touched down. Lisa and Jason were especially anxious to get home to be with Theresa. The helicopters landed on the recently constructed pads at Asgard. Everyone quickly made their way to Paula's house. \n\nLisa and Jason held their precious baby in their arms as Lisa's emotions overcame her and tears began falling. Once the girls finished hugging Paula and Diane, Steve held Paula's shoulders and simply looked at her face long enough to make Paula fidget. Then he swept her into a tight embrace as he almost crushed her to his chest. \n\n\"Thank God you're okay,\" whispered Steve so only Paula could hear him. \"I don't know what I'd do if something happened to you.\"\n\nPaula had a few tears trickle down her cheek as she felt Steve's emotion. As she began to understand how much she meant to her daughter's beau, she wrapped her arms even more tightly around his broad back and began sobbing.\n\n\"Steve's pretty emotional,\" observed Kate. \"The thought of losing Mom, Diane, Billy, and Theresa doesn't sit very well with him, does it? Mom didn't cry until he hugged her.\"\n\nDiane, Will, and Billy were also present and Stephanie was quick to greet them all with warm hugs and kisses, especially for her little brother. The other girls waited their turn to express their relief and gratitude that everyone had survived the ordeal unscathed. It didn't go unnoticed that when Steve finally released Paula, Diane was in his arms and crying into his chest as she clung to him.\n\n\"I think that they finally feel safe,\" observed Charlotte. \"No disrespect to Ted, Will, and the other men, but being in Steve's arms feels like the safest place in the world to the women in this family, and that includes all of us females. In a room full of alpha males, Steve is the top dog, so to speak. He's so cool about it that the other men don't feel competitive, or jealous. It's just how it is.\"",
        "Gwen had watched her mother and aunt collapse in her boyfriend's arms. It was evident that he was special to them and she had found the interaction a bit confusing until Charlotte expressed her theory.\n\n\"I think you're right,\" agreed Gwen as she considered Charlotte's statement. \"Mom and Diane needed to know Steve was back and prepared to face any situation to keep them safe. I don't think they even realize why they feel so emotional with him. I didn't until you came up with that idea. Steve is the center of this unit. He's the unspoken leader, especially in matters of our safety.\"\n\n\"Just as you are in most other areas,\" added Charlotte. \"Between the two of you, we look for answers to every problem. When you're both here in Asgard, we all feel safe and content. I know that I do.\"\n\nWhile Diane clung to Steve, Paula made a beeline for Charlie and embraced him tightly. \"Those three women told us that you were the one that hired them to keep us safe. Thank God that you did! I don't want to even think how things would have turned out if you hadn't.\"\n\nCharlie was pleased at the praise, but also little uncomfortable with it. \"Steve asked me to find the best security possible, so that's what I did. It wasn't my idea. I just implemented it when Steve asked.\" \n\nKate quickly spoke up. \"We call the three girls that saved you 'Charlie's Angels'. How appropriate is that? Where are they, anyway? I want to thank them.\" \n\n\"We're having a private lunch meeting at Billy's place tomorrow,\" announced Stephanie. \"This meeting is for all of us here and will not be opened to the general public. We'll meet the people in the agency Charlie hired and get to know them. We'll discuss exactly what will be expected of us, and of them. Once that's done, we'll go over some other business that concerns all of you. Be there by noon, and no excuses.\" \n\nThe following day saw everyone gather in a private room at Marsh's Landing. Beside the usual group, there were quite a few women present that were unknown to Steve and Gwen. Once everyone was seated, Charlie took the floor.\n\n\"These are the ladies that work for The Adams Agency. They come very highly recommended and I'd venture the opinion that they proved that the praise was well deserved. I'd like to introduce Mallory Burke, owner and founder of The Adams Agency.\"\n\nA pleasant looking woman the Steve guessed to be in her early fifties stepped forward to address the group. \"Charlie approached us right after he returned from your Russian adventure. He told me that your company wanted strong security, and he wanted it supplied almost exclusively by females. I told him that I felt I had the team for the job.\"\n\n\"Wait!\" interrupted Kate. \"Why would we want only females? Aren't guys supposed to be bigger and stronger, besides being a lot better to look at from where I'm sitting?\" \n\n\"I bet it was Billy's idea to hire females,\" guessed Charlotte. \"And the other knuckle draggers went along with him!\"\n\n\"I bet they insisted all the women either had big boobs, or gigantic boobs,\" laughed Kate. \"We know how these guys think!\"\n\n\"Please allow me to continue,\" insisted Mallory Burke. \"I think some of these issues will be cleared up. Charlie explained that all of the men in your entourage are quite physically fit and most are trained in hand to hand combat, as well firearms. They feel quite capable of protecting themselves and their ladies when they are with them. Their concern is when they are away, or in certain obvious situations where they cannot accompany you, such as when you visit bathrooms, locker rooms, and the like. \n\n\"He and his friends felt more comfortable leaving you alone with trained female security agents, rather than male agents. I believe Charlie words to me were that you are all incredibly beautiful women and male agents would find it difficult to remain professional and not ogle you ladies. He used the phrase 'having the fox watch the hen house'. Once I saw the uncommon beauty of all of you women in the group, I have to agree with Charlie's assessment.\"\n\n\"Yeah, and they can go with them shopping, to the opera, and soccer matches,\" added Billy. \"There are quite a few times they won't have us manly men around to protect them. How about baby showers, bridal showers, or girls' night out? I'm not paying some guy to help a tipsy Charlotte home. I'd worry more about the guy we're paying than anything else.\"\n\n\"Thank you, I think,\" chuckled Mallory Burke. \"We will have these twenty two female agents assigned full time to members of your entourage. They will live in the area we will always have several on call 24/7. We'll need to work out some living arrangements. If any of you ladies are going to be alone, even at home, I'd like one of our agents to be able to stay in your home with you. Any time your husband or boyfriend is not around, I want one of my agents to be near you.\n\n\"Another item that I insist upon is there is zero tolerance for sexual harassment. At the first indication of that happening, I will withdraw from the contract and will collect a hefty penalty. I want that understood,\" stated Mallory Burke firmly.\n\n\"In that case, we'll cut you a check for the penalty right now and part company,\" responded Steve firmly. \"There will be no sexual harassment clause in our contract, period.\"\n\n\"You can't think I'll allow these attractive women to be subjected to sexual references and innuendos without some sort of penalty!\" retorted Mallory Burke.\n\n\"That's exactly what I think and I'll explain why. My friends and I have been through the fires. We're men that are extremely appreciative of the female form. We work hard, play hard, and relax when we can. We make jokes and tease each other, as well as the women in our group. I don't want that to change.\n\n\"All of the women will groan when Billy makes some comment about their big boobs, ass, legs, whatever, but in reality they enjoy it because they know Billy. He's a great guy and one of us. He keeps the mood light and we need that more than you may realize. Charlotte and Kate make some pretty funny comments about us guys, our anatomies, and our sexual prowess. All of us do at times. It's what we do when we're relaxing. \n\n\"I won't allow that to be lost because we have a bunch of people with vaginas nearby, or within hearing or sight. I guarantee you that none of us men will ever molest, intentionally insult, or malign any of your agents. By the same token, Billy could make a comment about the red head sitting on the end with the big hooters,\" suggested Steve as everyone's attention was directed toward the obviously busty red head with the big smile sitting on one end of the group of agents.\n\n\"That may seem crude, impolite, and inappropriate, but it'll happen. I can guarantee it. If Red gets all huffy and runs to the boss to complain about it, we have a problem,\" concluded Steve as everyone else sat in surprised silence.\n\n\"Steve is the last guy you'll ever hear make a comment like that under normal conditions, but he was making a point and I think it's valid,\" stated Gwen. \"I have to admit I enjoy Billy's jokes, or the other guys looking at me or making somewhat suggestive comments. We're friends and we can do that. It makes us all closer. Do any of my female friends here ever feel uncomfortable with any of our male friends here? Do we have a problem I'm not aware of?\"\n\n\"You mean other than Billy?\" asked Jordan quickly. \"I couldn't resist that one! Truthfully, I like the way all of the guys show their appreciation of my charms, even when I have clothes on! It's what we do. We're all monogamous, but we love to flirt and tease! I agree with Steve that we can't give that up. There has to be another agency that can accept our interactions.\"\n\n\"Mother, I think we need to strike that penalty clause,\" stated a tall, slim brunette sitting next to the buxom redhead. \"Federal law covers sexual harassment already, but we really don't want to go there. This is a great opportunity for us individually, and for our agency.\"\n\n\"Let me ask the others,\" continued Mallory Burke's daughter. \"Are any of you concerned about working with these people? They may joke of make comments about your ass or your big boobs, except in my case, they'll tease me about my little ones. Are any of you worried about that? This isn't an office situation. We're in the field and we have to conduct ourselves professionally, but not like snobs or frigid bitches.\"\n\n\"Speaking only for myself, Steve Hammer can make comments about my 'hooters' all day long,\" grinned the redhead. \"I know a few things about the places they go and the things they do. I'd work naked if it gave me the opportunity to travel the globe, meet kings, queens, stars, presidents, and maybe my wealthy future husband. These are the good guys. There won't be any problems.\" \n\n\"I think we're adult enough to endure any gestures, comments, or jokes thrown our way,\" continued the younger Burke. \"If Lady in Red Productions is satisfied with our qualifications, I think we should get started. We can introduce ourselves and go from there.\"\n\n\"I often wonder who runs this agency,\" complained Mallory Burke jokingly. \"My name's on all of the bills, but Sybil seems to make the decisions. You've heard from my daughter. Her name is Sybil Burke and she's also my partner in this business. In the field, the others take direction from her. \n\n\"Next to Sybil is Janice Prince. She's the lovely redhead with the 'big hooters'. She's a top agent and she's a qualified firearms instructor.\"\n\n\"Excuse me?\" interrupted Billy. \"Did you just say that Ms. Prince is a top heavy agent?\"\n\n\"No, I didn't, but that is also accurate. Now everyone can see why I tried to get the sexual harassment clause in the contract. Poor Janice is very shy and quite reluctant to have anyone realize just how impressive her breasts are.\"\n\n\"Yeah! That's why she's always sunbathing topless and wearing those low tops,\" interjected Sybil Burke. \"Her greatest fear is that she'll meet someone with bigger, firmer boobs, or a guy that doesn't notice them.\"\n\n\"I sure won't be the one to disappoint her then,\" retorted Billy. \"However, Jordan is pregnant and I expect that she may become a serious threat as far as bigger ones go. Janice will have to be able to live with that possibility because we're sure not going to hide Jordan and her natural wonders away just to make Janice feel good.\"\n\n\"Why thank you, Billy,\" responded Jordan calmly. \"I appreciate how you stick up for me. I suspect that when my girls reach their full potential in a few months, you'll be 'sticking up' for me all of the time, if you get my meaning.\" \n\n\"I do, and I will,\" asserted Billy immediately. \n\n\"He already does!\" blurted Charlotte. \"No matter how tired he is, all I have to do is mention Jordan and he's ready for another round. Of course, he's that way no matter which of the girls I mention. When he's really tired, I ask him about Naomi's mom and he's all over me.\"\n\n\"That is way too much information!\" complained Naomi. \"Mom will be very pleased to hear it, but I'm just a little girl and I shouldn't hear how men lust after my poor mother.\"\n\nOnce the laughter died down, Sybil spoke. \"See how it is, Mom. They're having fun. It's not insulting or perverted. We'll be fine.\"\n\n\"Actually, Billy is perverted,\" responded Jordan. \"He's always asking us women to get naked and hop into the hot tub with him, or sunbathe with him, or Jello wrestle, or just about anything else that could possibly require taking off our clothes. We only recently learned that the other men here think exactly the same way and are just as perverted, but they lack Billy's more direct approach. Be prepared to be ogled by these mentally disturbed individuals if you're around us for any period of time. Take this as a warning.\" \n\n\"But understand that these are our men. Many of you will fall in love with at least a few of these guys, but nothing will come of it,\" cautioned Lisa. \"If one of you becomes too enamored with any of the guys, we'll probably ask that you be reassigned. We trust our guys, but we're not going to be stupid about it. You'll be spending most of your time with us women, and the kids that will be coming along. You will, by necessity, be around these handsome, virile men and Billy fairly often. They are not available, not even Billy.\"\n\n\"Thanks, Lisa,\" grinned Billy. \n\nAll of the female agents were introduced by Mallory Burke. \"I know you've asked to meet the ladies that thwarted the attack on Paula and Diane and the two children. I'm please to tell you that while any of the ladies here would have done the same, the three agents that day were Janice Prince, Helen Barnes, and my daughter Sybil. Helen received a minor leg wound from a stray bullet, but that was the extent of the injuries to my agents.\"\n\nJason and Lisa led the way to thank the three ladies. The rest followed closely. Gwen watched Steve as he waited for everyone else to thank the girls before he swept each of them into his arms and spoke very quietly into their ears as he embraced them. She decided to ask him about it when they were alone.\n\nOnce the meet and greet was over and lunch was consumed, Mallory and her agents left the restaurant. Stephanie stood and addressed the group. \"First, we all need to thank Charlie for doing such a great job finding security. His decision-making probably saved Mom, Billy, Aunt Paula, and Theresa. We're all in his debt.\n\n\"Now for some business. All of you are here because you may be involved in some of the projects. Kate finished her second movie script. She had it almost completed while she was in school. I don't know when she has time to study law.\n\n\"Once you hear the title, you may guess the star of the movie. It's called 'Single Handedly' and it's an action comedy about a very attractive woman that lost a hand while in Iraq, but kept her spirit, her nerve, and her smoldering sexuality.\"\n\n\"Is this about Charlotte?\" asked Billy as the others laughed.\n\n\"We want to begin filming right away. The hard part is that we want Gwen, Jordan, Charlie, and Steve to have roles in it. Becky is very popular, but we've concluded that the star power of the other four will increase the success of the movie and help take Becky to the next level. She'll be a bankable box office star. \n\n\"We realize that the other four are making movies now, but we're going to jam their schedule for a few weeks to get all three movies made. The preliminary word on the two movies already being made is 'Wow'. We expect great success, both artistically and financially. Now we're asking you guys to make a third movie this summer. If we're going to be able to fund hospitals, aid in disasters, and do all of the other charitable work we want, we require a pretty good income stream.\n\n\"I can't believe that you guys have that much confidence in me!\" exclaimed Becky. \"Now I'm starring in a movie named after my having only one hand and I'm grateful as hell! I hate that I lost my hand, but it sure has created a lot of opportunities for me. Thanks so much!\"\n\n\"Don't thank us. You've earned it, Becky. Our research shows that you're a bankable star now. We expect you'll be a major star by this time next year. We just hope you'll remember us when you become a huge success and you'll still make movies for us,\" replied Stephanie.\n\n\"Don't any of you ever doubt it!\" replied Becky immediately. \"No one else would treat me the way you guys do, and besides. I owe you way more than I can repay. That day Steve, Gwen, and Jordan stopped at our house was the day my life gained meaning and direction. I hate to think where I'd be if it weren't for them.\"\n\n\"We're going to give Pete a role to see how he does in front of the camera. If he does well, he'll be getting bigger parts in your movies. You don't get the pretty girl this time, Pete, but if you do well, you may next time.\"\n\n\"I understand. I'm just glad to have the chance. A year ago I'd be blaming my loss of a foot for not being made an immediate star. Watching Becky succeed has inspired me. I finally understand that I'm responsible for what I do and lacking a foot is no excuse for not working hard and making something of myself. I'll do my very best and make all of you proud that you took me into your group,\" promised Pete.\n\n\"We have two animated movies ready for voice over. One is about Gwen and Steve rescuing a school bus full of kids. The other is about Jordan and Charlie saving an orphanage. I know they sound a little childish, but that's the market we're trying to reach. \n\n\"Charlie and Jordan have pretty much completed a new album with new songs, which they also wrote. Charlie expects it to be ready for release by Labor Day. He was everything set up for Gwen and Steve to record one of those 'Great American Songbook' albums. He'll need you guys to work pretty steady with him evenings and weekends since your time is limited. Jordan and Charlie will sing back-up and as usual, Charlie is producing it. Once again, we've done the research and people want to hear more of the classics from you two. Later, the four of you will do another Christmas album. The last one was huge.\n\n\"If we get time this fall, maybe on weekends, we'll tape a few TV shows to sell to the networks as specials. There's a lot of interest in you guys performing some live TV shows from various cities around the globe. We'll try to work those in after the New Year. Are there any questions?\" concluded Stephanie.\n\n\"I'm tired out from just listening to all of that!\" groaned Jordan. \"I'll work as long as I can, but our baby will limit what I can do and where I can travel. The baby's health is always my first concern.\"\n\nIt was a week later that Jason and Steve learned that the men that attacked Paula and Diane were actually Chechen! Both men were totally surprised by that information. The FBI and Homeland Security assured everyone that they were making progress in finding the remaining attackers and would have them in custody soon, if they hadn't already fled the country.\n\n\"We both know that's total bullshit. They don't have any clue where those guys are,\" insisted a disgusted Jason. \"At least we know the bastards are Chechen. I'll add that information to the feelers I have out. I'm offering a lot of money to people that help us locate these killers. Are you with me on that?\" \n\n\"Absolutely,\" replied Steve. \"If we don't make a stand, every wannabe bad guy in the world is going to come calling at our door. Keep after them, no matter how long it takes, and how much it costs.\" \n\nA new normal quickly became routine in Asgard. Everyone started early and worked late to reach the goals Stephanie had outlined. Steve and Gwen worked very hard with Diane at the new dance routines for the film they were making. Becky's film began production immediately and often Gwen, Steve, Jordan, or Charlie had to go to that set to perform in scenes with Becky. Naomi was cast as Becky's best friend in the film, but Jared would only agree to a small role.\n\n\"I'll help any way I can, but I'm just not comfortable speaking on camera,\" revealed Naomi's boyfriend. That prompted Steve to begin planning an action film for the following year that would showcase Jared's good looks and toned body. Steve felt a good old fashioned 'Buddy' movie would get Jared more comfortable with filming.\n\nPete turned out to be surprisingly good in his first scenes, so the decision was made to give him Steve's role and let Steve take the part written for Jared.\n\n\"You're going to have a guy with one foot be the hero?\" asked Pete incredulously. \"I don't think that's ever been done.\"\n\n\"Look at it this way, we're not calling the movie 'Footloose', so it shouldn't be a big deal,\" teased Kate as everyone else on the set suddenly went very quiet.\n\nPete tried to glare at Kate for a few seconds before he broke into laughter. \"I guess I can't expect any sympathy from anyone around here. Maybe the sequel will be 'Single Footedly'?\"",
        "Steve pretended to pout when he was told that Pete would be taking his role and thus have the love scene with Becky. His eyes lit up and a huge grin crossed his face when he was informed that he'd have one with Naomi in Jared's stead.\n\nBecause of Steve's time constraints, he was busy filming 'Single Handedly' when he wasn't working on one of the others. He found himself doing the love scene with Naomi quite early in the filming. Jared had declined to be in attendance for the scene.\n\nJordan had done her best to convince him otherwise. \"Steve'll have her so hot; she'll need you to put out the fire. I've been there a few times and it's almost unbearable. You really should hang close.\"\n\nJared still declined, stating that he just wasn't comfortable watching Naomi romantically involved with some other man, even Steve. Jordan finally convinced him that he needed to be waiting for Naomi in her dressing room once the scene was done.\n\nThe director felt that he needed to take the time to coach Steve before the big scene. \"This isn't about race. It's about a man and a woman. Don't allow her skin color to influence how you respond to her. I think...\"\n\n\"You really need to stop now!\" insisted Steve as Naomi nodded in agreement. \"I don't need you to tell me to treat Naomi like the beautiful woman she is. I've known and loved her for years and our skin color is not a concern to either of us, but it sounds like it is to you. Think about what you were saying when you have a moment to reflect on it. This company will not tolerate any sort of racism, or discrimination. You direct the filming and we'll take care of the romance.\"\n\nIt required the afternoon to get enough footage to satisfy the director. Much of that time, Steve was in bed with a naked Naomi. More than a few times her leg or hand brushed his erection and she's glance at Steve and smile. At the end of the three hours of filming, Naomi quickly rushed to her dressing room and her boyfriend. \n\n\"I heard that you two were heating up the set, so I came over when I had some free time,\" stated Gwen as she sat on the bed next to a surprised Steve. \"I saw enough to know that your cock must be harder than Chinese math by now. Would you like to come to my dressing room so I can help you with it? Here's a bulky robe. It won't conceal that bad boy completely, but at least you won't be arrested when you get out of the bed.\"\n\n\"Gwen, it was terrible. I didn't want to hold her body like that or kiss her all over like I did, but I'm a professional and it was the role I was given,\" pointed out Steve as he pulled the robe closed to hide his raging erection.\n\n\"I know, Sweetheart,\" cooed Gwen. \"Those big boobs, her beautiful face and her overly large ass would tempt a lot of men, but you were strong. You only needed about twenty takes. You must be exhausted from hefting those oversized breasts so many times.\"\n\n\"It wasn't easy, I admit,\" replied Steve as he wrapped an arm around Gwen. \n\n\"You really like her a lot, don't you?\" asked a suddenly serious Gwen.\n\n\"I do,\" agreed Steve. \"She's the whole package. She has brains, beauty, a great body, a warm personality, and a very big boyfriend.\"\n\n\"Do you ever have second thoughts about me? Do you ever wish you were free to sew your wild oats? Am I holding you back?\"\n\n\"We've discussed this before, but it's worth saying again,\" replied Steve as he stopped walking and pushed Gwen gently against a wall, held her face with his hands, and spoke softly. \"I've never seen your equal. To me, you're everything I could ever hope for. I love you. I'd die for you. I never want to be with anyone else sexually. I never want you to be with anyone else. The longer we're together, the more I realize how amazing you are. I'll never betray you, Gwen. I can't. It's not in me.\"\n\n\"I feel the same, but it's nice to hear you say it after I watched you with Naomi. She's a wonderful friend. She's just so beautiful, smart, funny, athletic, and curvaceous that I find it hard to believe any man could not want her. I know that if you really wanted her, you could have her. You know it, too. It's the same for all of my friends, and even relatives. I just want you to know that I love you for being like you are and not acting on the power you have over women.\" \n\n\"Do I have any power over you?\" asked Steve as he ran his fingers over Gwen's cheek. \"Have I made you love me? Have I gained your heart? Will you give me your body?\"\n\nGwen pulled Steve down for a lingering kiss, oblivious to all the people working in the area. When she finally released him, Gwen saw Sybil Burke standing in the shadows, watching intently. Gwen nodded to the other woman and broke away from Steve's embrace and tugged him toward her dressing room.\n\nThree days later there was another terrorist attack in Paris. This one was far more deadly than the one on the orphanage, with well over a hundred people killed and hundreds more injured. News stations covered the story relentlessly.\n\n\"We'll need to fly over for a few days,\" observed Jordan to Gwen, Steve, and Charlie. \"I know they don't allow any demonstrations and mass gatherings will be discouraged, but I feel like we need to show our support. This is just awful!\" \n\n\"I think we all agree with you,\" offered Gwen. \"I'll have someone notify our pilots. Shall we plan on leaving Sparta in an hour?\"\n\nA few moments later, Steve was approached by Sybil Burke. \"You wanted to see me?\"\n\n\"Jordan, Gwen, Charlie, and I are flying to Paris. We're leaving here in an hour. We're going there to offer our support and condolences to the people of the city. I want you and a maybe three of your agents to come. This is a dangerous time and I want Jordan and Gwen to be as safe as possible.\n\n\"We can be ready,\" assured Sybil. \"Our company has agencies in Europe that we work with closely. They'll have the necessary paperwork for us to be permitted to carry. If it's an issue, we'll have some agents from Paris accompany us. I'll call there right now.\n\nIt was just an hour later when a helicopter left Sparta with the four friends and four security people. The switch over to the Red Lady took only minutes and soon the group was headed for Paris once again.\n\n\"I've seen on TV that President Hanson and his wife are going to represent the US at a memorial service the day after tomorrow. A few ranking members of Congress are going, as well,\" added Gwen. \"We have not been asked by anyone to represent them. We'll represent Lady in Red on this trip. I think we need to avoid the politicians and concentrate on the injured and the frightened citizens of Paris.\"\n\n\"I second that,\" chimed in Jordan. \"This isn't a political event. It's humanitarian. We'll just console those that need it and return home in a few days.\"\n\nIt was less than an hour after the Red Lady landed that a large van transported their group to their hotel. \"I guess I really shouldn't be surprised at how quickly we went through customs and how easily we received permits to carry,\" stated Sybil Burke. \"You and your company seem to have some influence here in France.\n\n\"That's no surprise!\" responded Janice Prince. \"Steve was still in high school when he pushed through that trade agreement that released that Russian spy and guaranteed France a steady supply of natural gas for years to come.\n\n\"Then there was that amazing visit after that attack on an orphanage in Paris. Lady in Red bought a new building for the orphanage, gave one of the most watched concerts ever, and Steve blew up a car full of terrorists, among other things.\"\n\n\"This trip is much lower keyed,\" asserted Gwen. \"We're not representing the U.S. and there will be no concert. We're just going to shake some hands and offer condolences to people still hurting.\"\n\n\"That doesn't mean that you agents can relax,\" warned Steve. \"There's always a certain amount of danger when Gwen and Jordan are out in crowds, and tension is pretty high here. Plus, there may be more terrorists waiting for their chance to inflict more murder and mayhem.\"\n\nRather than sleeping, to catch up on jet lag, the group unpacked and then left the hotel on foot. Sybil and her agents worked hard to keep Gwen and Jordan close as they strolled down the avenues and streets, embracing total strangers and offering their condolences. Steve translated as often as he could. When he heard Janice speaking French to a vendor, he quickly drafted her into being a translator for Jordan and Charlie. \n\n\"That way you'll always be close and able to keep an eye on them,\" pointed out Steve. \"No one will know you're a trained security agent. They'll all think you're just another big chested bimbo translator.\" \n\n\"You sure have a way with words,\" laughed Janice as she joined Jordan and Charlie and began translating for them.\n\nSybil remained close to Steve and Gwen as the two back-up agents trailed after them , but never strayed very far from either couple. Steve had the opportunity to observe Sybil at work and was thoroughly impressed. She was keenly observant and always alert. Steve decided to thank Charlie again when they were alone for his excellent decision in hiring the security firm.\n\nThe citizens of Paris went out of their way to thank the foursome for returning in their time of sorrow. Everywhere they traveled; they were hugged and praised for their efforts, both following the previous attack and for their compassion and concern after the current one. The Paris TV stations featured the report on world leaders attending the memorial service the next day, but managed to devote some of their coverage to the reception given Jordan, Gwen, Charlie, and Steve by the citizens of Paris.\n\nThe following day saw the friends visit hospitals in Paris. They were allowed to visit many of the less seriously injured victims of the attack. They would frequently pose for photos, sign casts and hospital gowns for victims, and offer encouragement as they made their way through each hospital. Steve marveled at how well Jordan and Gwen were able to handle the situation. Some of the victims had obviously been maimed and even disfigured, but the girls never failed to smile and hug everyone like long lost friends. \n\nSteve and Charlie were favorites of the female victims. They usually asked for photos with their phones of Steve and Charlie hugging them. Then they would immediately send them to social media sites to show their friends. By day's end, the four friends managed to visit six hospitals and speak with dozens of the injured victims.\n\nAgain that evening, the memorial service with world leaders had top billing on news broadcasts. But more actual time in the broadcast was devoted to the hospital visits by the four Americans, as well as the delighted reactions of those that had suffered injuries at the hands of the terrorists and how pleased they were when they had the opportunity to meet Jordan, Gwen, Charlie, and Steve.\n\nThe third day of their visit, Steve insisted that they hire a van to transport them to a funeral being held well outside the Paris city limits. They travelled to a small town north of Paris. Steve had seen the article in a Paris newspaper and felt they needed to attend the service.\n\n\"An elderly man that owned and operated a local bakery for almost fifty years was a casualty of the violence,\" explained Steve. \"We can't begin to attend all of the funerals, but I believe this one is representative of the situation.\n\n\"This man had been visiting his granddaughter, who had recently become engaged. They were celebrating at a small caf\u00e9 in Paris when the gunmen suddenly appeared. He pushed his granddaughter under the table and lay across her, shielding her from the hail of bullets. He was struck twice and died in her arms a short time later. Luckily, she was unharmed.\"\n\n\"I see why you wanted to attend this service,\" replied Gwen. \"That type of courage, especially within a family, appeals to your protective nature. This is going to be a very sad occasion.\"\n\nThe friends arrived at the country church an hour before the service was scheduled. They slowly walked the few streets of the small village as they waited for the funeral to begin. They had just passed the bakery the man had owned when they were stopped by a middle aged woman. \n\nShe spoke in French and Steve responded. Janice translated for the others. \"She's asking Steve if he and his friends will attend the services. When Steve assured her that you came here for that purpose, she just asked if you would sing at the funeral and perhaps deliver a short eulogy.\"\n\nSteve turned to his friends as Janice finished her translation. \"Would you be willing to sing here today? This lady is the daughter of the man that was killed. It was her daughter he was visiting and whom he saved.\"\n\n\"Of course!\" responded Jordan immediately. \"That man sacrificed his life. We certainly can make the effort to help celebrate his life with his family and friends.\"\n\n\"Unless the lady has a particular request, I'd suggest that we go with what we know that's appropriate for a funeral,\" added Charlie. \"Since the girls are the real singers here, no offense, Steve, I would think they could perform 'Amazing Grace' at the beginning and then again at the end. We all can do 'Bridge over Troubled Water' and 'Let It Be'. They're always well received and I'm sure that French speaking people are somewhat familiar with those songs.\" \n\nSteve spoke again to the woman who nodded vigorously and thanked Steve and the rest of his group profusely before hurrying away. The church was surprisingly large for a small village and it was filled to overflowing as the Americans, with Janice and Sybil next to them, made their way to the front left of the house of worship. The other two security agents hung back to watch over the situation from farther away.\n\n\"They'd like you girls to sing 'Amazing Grace' as they bring the casket in, and then again when it's removed. At the end of the services, Charlie will make his way to the piano and play while we all sing,\" explained Steve. \"The other thing is that we've been asked to say a few words. I'll handle that since I speak French, unless one of you wants the task.\"\n\n\"You do it, Steve,\" insisted Gwen. \"Many of these people are older and would never understand English. Besides, you have a way with words.\"\n\nAs the procession approached with the coffin, Jordan and Gwen did a masterful job singing 'Amazing Grace'. The acoustics in the old church were excellent. \n\nJordan and Gwen couldn't help but cry as they listened to the old priest conduct the ceremony. Everyone was very quiet and attentive when the ancient clergyman asked Steve to say a few words. \n\nSteve moved to the microphone, bowed his head for a moment, and then began speaking in French. Once again, Janice translated for Jordan and Gwen who were seated on either side of her.\n\n\"Pierre Badeau owned a local bakery for almost fifty years. Everyone in this area knew him by name. They knew his family. What many of you may not have known is that Pierre possessed the heart of a lion. He was about five and a half feet tall and well into his seventies, but when hell came calling that afternoon at a little caf\u00e9 on a Paris side street, Pierre reacted immediately and with courage, as a man should. Unarmed, and unable to stop his attackers, he pushed his granddaughter to the ground and covered her body with his own. He was shot twice as he protected his loved one.\n\n\"We are all greatly saddened by his death, as we should be. But he would want you to know that he did what he had to do out of love. His granddaughter held him in her arms as his life ebbed away. He had the good fortune to die knowing that his actions had saved his granddaughter's life. I am here to tell you that he was immensely relieved, and extremely proud to have responded as he had, and that Danielle survived. He died content in that knowledge.\n\n\"I know this because I held my father in my arms as he died from three bullets lodged in his body. He'd received them defending my life and the lives of others. When I reached his side, he managed to speak to me briefly. He smiled through the pain and told me how pleased he was that I had not been harmed seriously. He told me he had to leave me, but that he'd be able to face my mother with his head held high.\"\n\nGwen was stunned at Steve's revelations. She had assumed that is father had been dead by the time he made his way to him. Steve had never mentioned anything about the last time he had spoken to his father.\n\n\"He told me not to mourn; that he had lived his life as a warrior, and it was fitting to die as one, especially since his actions had helped save my life. He managed to express his pride in his life, and even his death. He told me to always be a man of discipline, to find a pretty girl like Mom, marry her, and to always treat her and my children with love and respect. He told me that someday I'd understand why dying with honor is good thing. He said that a man can ask for no more than to be given the opportunity to save his child, or grandchild, and to succeed. Any man, any father, who does so will die in peace because he will have given all that he had to give, right to the very end. Today I understand what my father was telling me.\"\n\nTears were flowing freely by the time Steve concluded his brief eulogy. He had tears in his eyes as the man's granddaughter, Danielle, rushed to him and hugged him tightly. When he released her, Gwen was waiting and quickly took him into her arms. Mourners watched silently as Steve clung to Gwen as he buried his face in her hair. Emotions were heightened when it became obvious to all that Steve was shedding tears as Gwen spoke quietly in his ear. Eventually they stepped apart and returned to their seats.\n\nSteve was fully recovered emotionally by the time he joined Jordan, Gwen, and Charlie in singing 'Bridge over Troubled Water'. He took the lead on 'Let It Be', although Gwen and Jordan backed him up so well that he knew they were making him look better than he was. Later, as the coffin was removed from the church, Jordan and Gwen once again joined in singing 'Amazing Grace'. \n\nOnce outside the church, locals crowded around the Americans, thanking them for remembering them in such trying times and for honoring Pierre so eloquently. It took several minutes for the group to make its way to the cemetery behind the church.\n\nDanielle asked them to stand next to her family as she held her fianc\u00e9's hand and sobbed. The old priest said a few words and it was over. As they moved back to the parking lot, mourners once again praised and thanked them for coming to France so quickly to show support during such difficult times.\n\nDuring a moment when Sybil found herself alone with Gwen, she was unable to hold her emotions in check. \"I always thought that you and your friends were playing things up for the media, that no one as wealthy and famous as you guys could be that concerned about other people. I was wrong. This trip has opened my eyes. I've got to tell you that Steve's little eulogy had me crying like a baby. I hope you realize that you've got the best man on the planet.\"\n\nGwen gazed at Sybil briefly and nodded. \"He is that, and I'll never forget it, but thanks. What did he tell you the day we were introduced to you? I know he whispered something to you.\" \n\n\"He told me that he'd never forget what I had done for his family and that he'd do everything in his power to be sure that I enjoyed a long and happy life. He certainly loves you and your family.\"\n\nBy that time, Gwen had reached Steve's side. She pulled him down for a quick kiss on the lips and then clung to his arm. When he looked at her with a question in his eyes, she simply smiled and mouthed the words, \"I love you.\"\n\nOn the ride back to their hotel, Gwen asked Steve about his father's passing. Everyone was quiet as they waited for Steve's reply.",
        "\"I've never been able to bring myself to talk about it before,\" admitted Steve. \"I can't describe how saddened I was by my father's death. His words didn't make any sense. How could he be happy about anything when he was dying from three bullets lodged in his body? What had I done to make him proud of me? He was the hero. I was just a kid. How would I ever be able to live up to his vision of me? \n\n\"Things began to become clearer when I met you, Gwen, but it's taken a while to accept and appreciate everything that I saw and heard that day. I don't know if I would have ever understood it, if it hadn't been for you, your family, and some very good friends. I can't help but think that you saved me when you went to that dance with me back in high school.\"\n\n\"I had no idea what you were going through! You need to always tell me everything, regardless of how it makes either of us feel. I can't help you if I don't know how or why you're feeling pain,\" insisted Gwen.\n\n\"And that's what you don't understand,\" replied Steve as he gently ran his fingers over Gwen's cheek. \"You do help me, all of the time, whether you know it or not. You've helped me heal.\"\n\nThat evening, the group's attendance at the funeral, along with Steve's eulogy, was featured on all the French TV stations as well as many back in the states. Social media had hundreds of photos of the Americans as they warmly interacted with the towns' people.\n\nThe next morning, as Steve and Gwen made their way to the dining room in their hotel, people in the lobby, hotel employees and guests, began applauding. The couple was caught off guard and their surprise was evident on their faces. Smiling, Gwen waved her appreciation and soon Steve followed suit. They were seated at their table when they heard another round of applause just before Jordan and Charlie appeared in the restaurant entryway. Jordan was beaming as she joined her friends.\n\n\"Sometimes I get depressed seeing the aftermath of so much hatred and violence,\" admitted Jordan. \"But then someone does something so nice that it convinces me to keep on trying. These people have been so good to us. We really need to visit here more often, but under better circumstances.\"\n\nOn the flight home, Steve and Gwen learned that Secretary Rosen had secured enough support to win his party's nomination on the first ballot at his party's convention. A spirited campaign was expected that fall since the candidates of both major parties were in a dead heat in most polls. \n\nOnce they were back in Sparta, the four friends began working long hours to catch up on their projects. Steve and Naomi were both expected to be back in Washington after Labor Day. Gwen and Charlotte were to report for their final year of med school the week before Labor Day. Jared was being deployed to Iraq again in the fall, while Kate was returning to law school in D.C. \n\nOf all their projects, Steve and Gwen were most excited about their new film. Diane had come up with some incredible dance routines for the movie. They required a lot of practice and hard work, but they both believed that they had been a part of something very special. Under Charlie's direction, the couple recorded the sound track for the movie. They performed all the numbers used in the dance scenes and came away convinced that some of them would be very successful when released as singles.\n\nThe last dance in the movie, where Gwen and Steve won the contest, was filmed in the Lady in Red Center. Their friends, along with Sparta locals were used as extras. The director explained how the spectators were to react to the dance when Gwen and Steve finished. They practiced their parts for almost an hour until the director was comfortable with the reaction from the crowd as portrayed in the movie.\n\nGwen couldn't remember ever being so nervous doing a movie scene. The thought of her neighbors and friends watching was daunting to her, but it also increased her determination to get it right. She and Steve had spent the last three days working on the routine, stopping only for refreshments, food and bathroom breaks. \n\nHer makeup and hair were done to perfection and her costume was fitted flawlessly. She looked at Steve as they prepared to go on stage and marveled at how strong and handsome he was. He seemed relaxed and confident, as usual.\n\nThe couple was cued. The stage went dark and the music began. Steve stepped onto the stage as a small but bright spotlight followed every step. No one had been told what the final number was, but within a few drum beats, it was no longer a secret. Steve danced to center stage and proceeded to display dance moves no one imagined he could have ever mastered. \n\nThe crowd was soon worked into a small frenzy and when the words 'Billy Jean, she's not my girl' played, Gwen joined Steve. What followed amazed everyone watching. They danced in total synchrony before Steve swept Gwen into his arms. They were in perfect step as Steve performed the famous moon walk as Gwen followed him across the stage. When they reached the end, they started back with Gwen moon-walking as Steve moved forward with her. The entire dance was very high energy and the couple performed it error free. Near the end, Steve lifted Gwen over his head and proceeded to moon walk back across the stage! He slowly lowered her to his chest as the song ended. \n\nThe audience was totally silent for a few seconds before pandemonium erupted. Whistles, cheers, and heavy applause filled the large room. People rushed onto the stage, ignoring the cameras, as they congratulated Steve and Gwen repeatedly. It wasn't the response the director had requested, but when he replayed it on his monitor, he knew it was even better. It was genuine and it was very enthusiastic.\n\nDiane had practically held her breath as the couple danced on stage. She had worked extremely long and hard with them to perfect the dance and when they nailed it, tears of joy poured down her cheeks.\n\n\"Mom! You're a genius!\" exclaimed Stephanie as she hugged her mother tightly. \"That was the most incredible thing I've ever seen. If this film doesn't win some Oscars, I'll eat my hat, or whatever.\"\n\n\"I thought our movie might have a chance for some awards, but after watching you two, I'd have to vote for you!\" praised Jordan as she hugged Gwen. \"I can't believe that dance. I don't know how you managed it. You must be exhausted.\"\n\nGwen was still gasping for breath as Jordan spoke. Steve was breathing deeply and grinning as he held Gwen's hand and acknowledged the compliments heaped his way. It had been a lot of work, but he felt that he and Gwen had given everything they had to making the movie as good as it could be. The rest would be up to the fans. \n\nNo one had been allowed to bring cell phones or cameras. They had actually been threatened as to what dire fate awaited anyone that tried to sneak out video or photos of the dance. That threat didn't stop those in attendance from going on social media and trying to describe what they had just witnessed. It was exactly what Stephanie and the director had hoped for. Word would spread and interest in the movie would be intense. People would buy tickets just to see the last dance. \n\n'Single Handedly' had recently finished filming and Jordan and Charlie's as yet unnamed movie was also in the can, so Steve and Gwen's big finale was the last footage needed to wrap up all three films. Labor Day would signal the end of summer and send the friends in different directions for a few months.\n\nTrue to her promise, Mallory Burke had instructors provide self defense and firearm lessons to all of the women in the group. They all became adequate with weapons, but Charlotte and Lisa had demonstrated superior marksmanship skills. Becky, Naomi, and Gwen excelled in the self defense lessons. Both Gwen and Naomi were tall and strong which worked well for them, while Becky was extremely agile and very quick. \n\nGwen and Charlotte left the week before Labor Day for school, but returned for the long weekend. The presidential campaign officially began that weekend and Rosen's campaign had scored big when it announced that Vincent Rosen would be kicking off his campaign with a free concert in Philadelphia by 'Lady in Red', as their group was known.\n\nBefore the four friends left for Philadelphia, Lady in Red Productions had a small post production party Friday evening. \n\n\"Did Gwen mention that she and I have been accepted to work on a World Health Organization hospital ship next summer? We set sail right after Memorial Day!\" stated Charlotte to the room in general. \"We'll spend about three months sailing around the Indian Ocean and the coast of Africa. We'll be treating sick children and updating immunizations for them. I suspect the generosity of Lady in Red Productions with both money and that London concert helped convince the Director to take us on.\"\n\n\"So we'll still be able to do our traditional Memorial Day concert here in Sparta?\" asked Jordan. \"I'll have a new baby by then and I'll be pretty busy, but I envy you guys the chance to help so many kids in need. It sounds great!\"\n\n\"Has anyone heard that I had a call from the owner of the Redskins?\" asked Jared, once Jordan had finished speaking. \"Here's some trivia for you. They drafted both Steve and me after our senior years. They knew we were going into the military so we weren't taken until the third round. I would point out that I was the fourth pick in the third round while Steve was way down around fifteenth.\"\n\n\"Thanks, Jared. If they ever give that answer on Jeopardy, I'll have the question,\" laughed Billy.\n\n\"Okay, Smartass,\" grinned Jared. \"As I was trying to tell everyone, the 'Skins' owner called and he wants Steve and me to sign contracts and play for them next year. He asked about this season, but I told him that we were both still active duty and couldn't possibly be able to play before next year.\n\n\"I thought Steve and I could trade in our military uniforms for burgundy, gold, and white. If we negotiated together, we'd be able to get a better contract,\" reasoned Jared.\n\n\"You guys are thinking about playing pro-football after all of this time?\" asked Naomi. \"Won't you be too old and slow by next year, at least for football on that level?\"\n\n\"Ye of little faith,\" responded Jared. \"Steve may be a little soft and have to work his way back into playing shape, but I could start for any pro team right now.\"\n\n\"What do you think, Steve?\" asked Gwen curiously.\n\n\"He's right,\" answered Steve simply. \"Jared would be a force to be reckoned with, that's for sure. I don't know where my skill level would be compared to professional players.\" \n\n\"You're so modest,\" chuckled Gwen. \"You know you'd be the best quarterback in the league. If you two played on the same team, and in Washington, Naomi and I'd probably be able to go to your games. Could we maybe visit you guys in the locker room?\"\n\n\"That would be a big 'NO'. The locker room is no place for ladies like you two!\" insisted Jared. \"You were kidding me, weren't you?\"\n\n\"Maybe, but they have female reporters go in, so why not Naomi and me?\" demanded Gwen as she batted her eyes at Jared.\n\n\"Those lady reporters don't look and dress like you girls. You'd cause a riot,\" stated Jared. \"Steve and I would have to bitch slap about forty guys averaging 250 pounds each, plus a couple of kickers, just to keep you safe.\"\n\n\"Are you guys really thinking about leaving the service and playing football?\" asked Gwen seriously.\n\n\"It was something Jared just brought up. We haven't discussed it and I certainly wouldn't make any decision like that without talking to you about it first,\" assured Steve. \"Would you be upset if I did?\"\n\n\"Upset? Hardly,\" replied Gwen. \"I want you to always follow your dreams and do the things that you want to do. If you'd like to play football, I'll try to make every game. I love you and want you to be happy.\"\n\n\"I'd have to leave the Navy and I'd have to make the team. After not playing for so long, it wouldn't be easy. I'm concerned about my future in the Navy. If Rosen gets elected, he'll be Commander-in-Chief. I can't appear to be friends with my superior. If the other guy wins, he could make life for me rather uncomfortable, to put it mildly.\"\n\n\"I never thought about that, and I should have,\" worried Gwen. \"With us supporting Rosen, you'll be in an untenable position regardless of who wins the election.\"\n\n\"More or less, but it would be a lot worse if Rosen loses. I'd have to bail out as soon as possible if that happens. If Rosen gets elected, I can bow out gracefully.\"\n\n\"On the bright side, it looks like you'll be playing football on Sunday afternoons next year,\" pointed out Gwen. \"I know how you enjoy that macho stuff, especially football.\"\n\nEveryone had a great time at the party, although some of the goodbyes were tearful. Ashley and Richard, along with Kate, Naomi, and Steve were headed to Washington after the holiday weekend. Gwen and Charlotte were returning to Stanford. Lisa and Jason were remaining in Sparta, while Chip would be traveling as he negotiated for properties to locate more of his family's tire stores. Becky was scheduled to appear in several TV action shows, while Pete would be assuming his duties as head of security at Asgard. He already had designed several improvements in the current plans for security at the Lady in Red compound.\n\nVincent Rosen planned on speaking to the crowd for a few minutes before the band took the stage and then again at intermission. He promised to keep it short because fans were attending to hear the performance and not a speech. The first concert was scheduled for Lincoln Financial Field in Philadelphia on Saturday evening. On Sunday evening, they would do the same thing again in Chicago at Soldiers Field. It was now obvious to all that Lady in Red Productions was promoting Vincent Rosen for president.\n\nBoth concerts were extremely well received. Both stadiums had been packed and the audiences responded enthusiastically to the music, and were patient and polite when Vincent Rosen briefly addressed the crowd. Knowing how fans could be in those cities, Rosen's campaign considered the weekend a great success. Later that week, Rosen would inch ahead by a percentage point in the polls.\n\nSteve reported to Senator Chatham's office on Tuesday after the Labor Day Holiday. \"You realize that you're my aide and you've been public in supporting a candidate for president?\" asked Chatham. \"I guess I should be glad that he and I are in the same party. The next couple of months are going to be interesting, to say the least. Politics are a dirty business, so be prepared to have the other party question your parentage, patriotism, sexual preference, morals, and intelligence. \n\n\"At least that would normally be the case. I'm not sure how they're going to respond to you and Gwen supporting their opponent. You two have a lot of political capital at the moment after the summer you had. You shone in Russia, North Korea, Paris, London, and on two of the best aircraft carriers in the world.\n\n\"However, I think you need to learn humility. To that end, you're going to be one of the chaperones for my daughter's school field trip to Philadelphia tomorrow morning. One of the parents had a car accident over the holiday weekend and the school called to ask me if I could find someone to fill in. You have to be at her school by seven tomorrow morning to board the bus. \n\n\"You'll be riding with a couple dozen hormonal teenage girls, so I expect you to be on your best behavior. I didn't tell the school who I would be sending, so the kids, including my daughter, have no idea that it's going to be you. I want you to wear civilian clothes and a ball cap of some kind. I'd really prefer that the girls didn't realize it was you. I think you can understand that. They'd be throwing their little thongs at you before you got out of the school parking lot.\"\n\n\"I see you're not asking me, so I won't bother protesting this assignment. I know that some of the makeup people we use in our movies are in town, so I'll have them alter my appearance so the girls won't even realize it's me. That should keep the pandemonium down,\" chuckled Steve. \"I'll just sleep on the bus on the trip up and back and stay in the background the rest of the time. If one of the kids needs help wiping their nose, I'll have one of the other chaperones handle it.\"\n\n\"Good idea,\" agreed Chatham. \"I do appreciate you doing this for me. I'll tell Grace after she gets back that you were one of the chaperones and she never realized it. I'll tease her about that for the next twenty years.\n\n\"You need to be aware that Vice President Larson's granddaughter will be on the bus, along with Representative Daniels daughter. I know he isn't your favorite character, but his daughter is a good kid. By now you must have guessed it's an exclusive private school.\"\n\n\"You think?\" laughed Steve. \"Spending time trapped on a bus with a bunch of spoiled rich kids is my idea of a great time. You'll owe me after this!\"\n\nThe next morning saw a man with a short, gray beard, a scar high on his left cheek, and with salt and pepper hair showing under a baseball hat slowly climb on the bus after showing his ID to the officials in front of the door to the bus.\n\n\"That guy looks like he can hardly climb the steps,\" observed one of the girls. \"I don't think he's going to be able to keep up with us when we tour Philadelphia. I just hope he doesn't act too creepy. Is he somebody's grandfather?\"\n\nSteve chuckled to himself when he heard the comment as he settled into a seat near the back. Within twenty minutes the bus was filled with students and three other chaperones, along with two armed guards that sat in front near the driver.\n\nSteve shook hands with the other chaperones and then made himself comfortable. He had learned long ago to rest when the opportunity presented itself and soon he was sleeping lightly. \n\nAbout an hour into the trip, Steve heard a sudden increase in the conversation. He opened his eyes and sat up to find the bus slowing down and pulling to the side of the road. Looking out the window, Steve saw a young woman sprawled on a sidewalk with what appeared to be blood on the concrete under her head.\n\nThe bus stopped and the two armed guards stepped out to help the woman. As they bent over her prone body, she suddenly rolled over on her back, raised a handgun, and shot both guards in the head. Screams filled the bus as four men rushed out from a wooded area near the walk. They grabbed the two dead men and quickly dragged them back on the bus before the stunned driver could even react. The woman shooter was the last one on the bus. She waved her gun at kids and spoke to them with a heavy accent.\n\n\"I will pass a bag back and I want all of you to place your phones in it. Follow orders and you'll live. Disobey me and you'll join those two dead rent-a-cops!\"\n\nOne of the strange men pulled the driver from his seat and put the bus in gear as the bag was passed around to collect everyone's phone. Not wanting any more shooting in such close quarters, Steve dropped his phone into the bag when he was handed to him. The lady with the gun watched him closely as he deposited it. Then she held it front of the next chaperone and she dropped her phone into the bag.\n\nThe bus soon pulled into an old warehouse and everyone was quickly herded into a the rear of what appeared to be a moving truck. As soon as they were all boarded, the doors were closed, and they were again in motion. \n\nOver two hours later, a full hour after they were scheduled to arrive at Independence Hall, Senator Chatham received a chilling phone call as she was eating lunch with her staff. They watched as she became agitated before firing off several questions which were obviously not answered to her satisfaction.\n",
        "Half an hour later, she was gathered with the other parents as they were briefed by law enforcement officials. It was an extremely frustrating time for Senator Chatham and the others as they were pretty much told that the bus had simply disappeared. An APB had been issued. Several police choppers joined in the search for the bus, as well as the FBI and Homeland Security. \n\n\"We need to verify the passenger list given to us by the school. We're trying to determine if there may have been an accident, a hijacking, or if they simply broke down in an area with no cell service. That is a real possibility in the hilly areas of Pennsylvania,\" stated a female FBI agent.\n\n\"I need to verify the passenger list. As I read the name, I'd like the parent or guardian to acknowledge that that child was on that bus to the best of their knowledge.\"\n\nSenator Chatham's daughter was the third child named and she quickly stated her daughter was on the bus. Once the children were identified, the names of four chaperones and the two guards were read to the group. Relatives of three chaperones and the two security guards verified that they were on the bus to the best of their knowledge.\n\n\"Does anyone know this Steve Smith?\" demanded he agent when no one from the school indicated that they had any idea who he was. \n\nEveryone was looking around at each other wondering if the unknown man might have had a hand in the disappearance of the bus. Senator Chatham was reluctant to divulge Steve's identity, fearing if there was a problem with some kind of criminal element, knowledge of who he was could place him in greater danger. She mentally wrestled with the dilemma for a full minute as the FBI agent once again asked if anyone knew who Steve Smith was and could they vouch for him.\n\n\"Yes!\" called Senator Chatham finally as everyone turned their attention to her. \"I know who he is and I can absolutely vouch for him. He went on the trip as a favor to me when the school called and asked if I could supply a chaperone to replace one that was unable to attend.\"\n\n\"We'll need some ID, like his social or something so we can vet him out,\" stated the FBI agent. \"Steve Smith is an extremely common name. Can you tell us anything about him, maybe a photograph or something that'll help us determine whether it's likely that he's involved in any illegal activity today. No offense Senator, but we need to know exactly who and what we have on that bus. If you vouch for him, he's most likely an upstanding citizen, but we need to make certain.\n\n\"Our people are going over every name and running all sorts of security checks on them. Can you tell us anything else about Mr. Steve Smith to help us get a handle on him?\" prodded the agent.\n\n\"Yes, his real name in US Navy Lieutenant Steven Hammer. He's my attach\u00e9, or aide. His photograph is all over the internet and print media. His fingerprints are on record with the Department of Defense,\" responded Senator Chatham. \n\n\"Are you trying to tell me that the Steve Hammer is on that bus?\" asked the stunned woman.\n\n\"To be perfectly clear, I am telling you that Lieutenant Steve Hammer, the same Steve Hammer that survived a near beheading by terrorists in Iraq, two terrorist attacks in his high school, a terrorist attack in Paris, and most recently saved the life of the leader of South Korea not too long after killing five Chechen terrorists in hand to hand combat to save the life of the Russian president's son is on that bus. I for one am damned glad that he is! I find a great deal of solace in knowing that young man is watching over our children, regardless of the situation they may be in. He won't fuck around with terrorists, or anyone else that tries to hurt those kids, pardon my French!\n\n\"If someone has taken those girls and plans them harm, you can expect bodies of bad guys to start showing up before long,\" insisted Senator Chatham. \"There is no man I'd rather have with our children at this moment than Steve Hammer. He's been trained by the U.S. Navy SEALS. He'll see this through and take care of our kids. I'm sure of it.\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "paris",
        "illinois",
        "civil unrest",
        "abduction",
        "making movies",
        "security team"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-20"
}