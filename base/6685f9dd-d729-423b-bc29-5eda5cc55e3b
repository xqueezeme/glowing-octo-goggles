{
    "title": "Ryne",
    "pages": [
        "Ryne sat atop the small hill and under a tree, the start of the steep bank, watching her little brothers play in the creek. It was low right now and her pa had said they could if she watched them. They nagged her until she agreed, but she brought a bag of mending with her. Since her mother had passed ten months back, all of Ryne's plans had changed. She put off moving to Ames, put off letting Billy Parsons call on her and so many other things she had planned on doing once she was out of school. She was coming up on nineteen in a couple months, her friends all married and some with babes already. Not her. She was still at home with her father, taking care of her little brothers.\n\nAt first she hadn't minded, her father was sad and mourning, but now she felt like he expected her to cancel her life and just stay. Keep the house and be a mother to the boys. All seven of them. She didn't want to do that, not at all. She wanted her own life with her own family.\n\nShe glanced back down the dirt road from her spot against the tree, looking to see if her Pa was outside now. He was, she saw, and there was a wagon in front of the house. She watched curiously as her pa talked to the lone man in the seat of the wagon a moment, then hand him something. The man looked at it, then seemed to motion at it and hand it back. Her pa looked at it and shook his head without taking it. The man nodded, tipped his hat and flipped his reins.\n\nHer pa turned and went right back into the house, not even looking in their direction. She looked back at the boys, yelling and playing, then back down to her mending. After a moment, when the wagon was closer, she looked up at the man driving.\n\nHe was watching the road, but when she looked up, he looked at her curiously. He wasn't as old as she had first thought, he had maybe ten years on her if that. Still, he had a sad, worn look about him. Defeated.\n\nHe looked down at the creek as he approached the bridge, watching her brothers. He reigned in, watching them. He looked back at the house, then back at her. He seemed to come to some decision as he looked back at the boys and climbed down from the wagon, still watching them.\n\n\"You need somethin' sir?\" she asked politely as he moved to the bank next to her, still watching her brothers. \"My pa send you to say somethin'? He need us to come back?\"\n\nHe didn't answer, just took a step back, bent down to her and jerked her off the ground as he put a hand over her mouth.\n\nRyne was shocked to stillness for a moment, unable to figure what was happening, but when she saw him hurrying to his wagon, she started kicking and screaming and fighting.\n\n\"Hey!\" Ronald yelled. \"Let her go!\"\n\n\"PA! PA!\" Ralphie screamed.\n\nShe heard them but couldn't see them as the man grabbed the reins and snapped them, taking off at a run. He held her across his lap, letting go of her mouth to pin her hands in the small of her back as he ran the wagon wildly.\n\n\"Let me GO! Please! Let me down! Why are you doing this? Let me go!\" she screamed, still struggling.\n\nHe said nothing, just held her in a firm hand as he raced away.\n\nRyne tried to hold back tears, but she knew it was useless. Her pa had had to put down Copper and they couldn't afford another horse. He'd have to run all the way to the Hanover place to borrow a horse, if they would let him now that he was drunk all the time, then come after her. This man would be long gone with her by the time he even got to the Hanovers. Her best bet was maybe Ronald, though he was only thirteen. He could run it and have a horse back before her pa could get there, but she feared her pa would say no. Ronald couldn't come alone, he was too small to face down a man alone. Her and all of her brothers were, her pa too. Her ma and pa had both been tiny of stature, that was how they had come together. Every one of their kids was just as small, save for Ryne. She was somehow even smaller than her mother.\n\nThis man had snatched her up with ease and held her down now with even greater ease. She could only hang over his lap and sob, hoping that someone would see him and stop him, wondering why he was running so hard. Or she could yell for help if they saw someone.\n\nAfter a long twenty minutes of running full out, he slowed the horses to a trot and sat Ryne up on the bench next to him. He reached in the back of his wagon and pulled out a ball of twine. He unwound a long length, then made a doubled over noose with it, slipping it around her neck and tightening it. He put the other end around his wrist and tugged it tight. If she pulled away even a little, the noose would tighten on her neck and choke her.\n\n\"Please, sir, I'm needed back with my family! Them boys, none of them can cook or clean! My pa ain't in a good way, he needs me! They all do! I need to go back, please? If you just let me down I will walk! My ma died and he ain't ready to take on all the boys alone. There's seven of them! Richie, he's only 4!\"\n\nThe man lifted a hand like he meant to backhand her and she flinched and threw her arms up reflexively. The blow didn't come, but she understood his meaning. She stayed quiet and looked around, hoping to see someone. That was unlikely as far out as they were and he was heading away from the closest town, as if he had just left it.\n\nShe turned in the seat several times, hoping to see someone riding up on them. Her father hopefully, or maybe even Old Mr Hanover if Ronald had run to them to ask for help.\n\nAfter a long and stressful hour, she turned back to the man who was scowling at the road. \"Please, sir? Cain't you at least tell me what...\"\n\nHe drew his hand again and she flinched away and went quiet again. Tears rolled down her cheeks quietly as she watched the road and him. He was tall and had seen work in his life and he also ate plenty. He was a solid man, well muscled. His fringe of beard looked unkempt and like he hadn't had time to shave, not like he was trying to grow it. His brown eyes held all of the sadness he seemed to be carrying. She knew there was anger too, she had seen flashes of it, but mostly he just looked sad and worn. A bit like her father had right after her ma had died.\n\nMaybe he wouldn't mind her talking if she spoke to him a different way. Tried to get to know him and appeal to him a different way. \"What's your name?\" she asked softly.\n\nHe didn't answer or look at her, almost like he hadn't even heard her.\n\n\"My name's Ryne. Ma said it's a river somewhere, but she spelt it wrong fore she knew the proper way of it. You live close to here? How much further are we goin'? If I knew...\"\n\nHe turned a glare on her, scowling down at her and she went quiet as she let out a breath.\n\nAfter another hour, she spoke again. \"You know there ain't much north, right? Not a town for days? See up there, them shadows? Them's the foothills. You thinkin' on headin' to the mountains? I ain't never been so far north as this, but I heard tell the mountains get awful cold, specially in winter. There's places in the Colorado's that stay warmer, but the higher up you go to the mountains, the...\"\n\nHe yanked hard on the noose, causing it to close around her neck. Not enough to choke her, but enough to get her attention and make her go quiet again. She stared at him wide eyed a moment before she reached up and loosened it slightly. His eyes went to her hands and he watched. She knew he was waiting to see if she tried to take it off, but she didn't dare try. She loosened it and put her hands back in her lap quietly.\n\nHe looked back to the road and ignored her again. She felt frustrated and angry, but there was little she could do against a man his size. A blow from him might snap her neck. She just stayed quiet and kept looking behind them until it was too dark to see. When it was too dark to see, she started to wonder if he could somehow see in the dark the way he kept going. She tried to look at him in the moonlight, but she could only see shadows under the brim of his hat.\n\n\"Them horse's'll break an ankle or worse. Plus they's probably tired too. And hungry and thirsty. If...\"\n\nHe jerked on the noose again, this time a little harder. Her hands went to it quickly, pulling it loose as she clenched her teeth shut.\n\nHe did listen though, pulling on the reins and easing the wagon to a stop. He said nothing as he grabbed her arm and pulled her down as he got down. He dragged her out to a tree and let her arm go, but kept hold of the rope as he turned his back on her. She knew what he was expecting, but she was panicking.\n\n\"Cain't I have a bit more privacy? Where can I go out here, I ain't got no shoes and...\"\n\nHis hand went to her shoulder and he shoved her to the ground hard. She rolled to her hands and knees, then got up and hiked her dress up to squat there, her face aflame with anger and embarrassment.\n\nWhen she stood, dropping her skirts and stepping away, he grabbed her arm and forced her to turn away as he pissed against the tree. She stood hugging herself and pretending she couldn't hear him a foot away. He dragged her back to the wagon and set her up on the back and tied off the noose before going to unhitch the horses.\n\nRyne eased the noose off and slid down off the wagon as he was unhitching and couldn't feel the wagon moving, then tiptoed to the treeline ducked down low. Once she made the treeline, she stayed low, but moved more quickly, hoping she didn't step on a snake or a branch. She kept her arms out and hurried until she found a pine.\n\nThis was her trick. Pines had dense branches and they were hard for most people to get into, but she was small and didn't mind getting poked and scraped if it meant she was well hidden. She worked her way into the pine and settled herself in as quietly as she could, then listened.\n\nSure enough, she could hear his rapid footsteps getting closer. She stayed still and forced herself to breathe shallowly and quietly as he got close enough to touch the tree she was in. He passed it by, but stopped a few feet away, listening. He stood listening for quite a while it seemed and she began feeling anxious. She couldn't see him, she had only heard him and now she heard nothing. Had he slipped on more quietly? Was he standing still and listening? She tried to listen for his breathing, but heard nothing but bugs and frogs. She stayed completely still, her body tense as she tried to listen, but she heard nothing at all.\n\nAn hour passed, then two. Her body was aching and she wanted to shift or move, but was still too afraid. Where was he? Why hadn't she heard him come back by?\n\nHer stomach growled loudly and she held her breath, her eyes wide as the sound seemed to fill the silence. If he was close, he had to have heard it, but if he was gone...\n\nA hand shot into the tree and grabbed a fistful of her hair, then yanked her out of her spot as she screamed in fear and pain as the limbs scraped her roughly. He dragged her all the way back to the wagon by her hair, not letting her even stand as she held his wrists and cried and begged him to let her go.\n\nShe had no idea how he found his way back to the wagon and horses in the dark, but they shifted and made a nickering noise as if upset for being woken up. He shoved her in the back of the wagon, holding her down as he got in. He immediately started binding her hands together with the rope, then her feet. He tied another rope to her wrists and looped the other end around his wrist before laying on his side next to her. His hand went to her mouth, covering it as he gripped her face tightly, squeezing and shaking roughly.\n\nShe whimpered, but stayed quiet otherwise as he let go. She understood. Stay quiet.\n\nHe went to sleep and she lay there silently crying.\n\nWhen morning came and sunlight woke him, she had not slept at all. She was curled up and shivering and her head ached. Her stomach was hollow and she was thirsty, but she was afraid to ask for a drink. Hunger she was used to.\n\nHe got up and fed the horses quickly before getting into one of the sacks and pulling out a hunk of stale bread and shoving it at her. He also shoved a skin of water at her and she managed to sit up and take a drink with bound hands. He ate quickly before going to the treeline again, then came back and hitched the wagon.\n\nHe still had yet to speak to her and she wondered if he couldn't speak.\n\nHe stepped up to the seat and snapped the reins, starting them on their way with her still tied in the back. She untied her feet quietly, then her wrists, though that was harder to do. Her circulation was almost cut off and her fingers were fumbly. She still managed it, then climbed up front with him. He didn't look at her or say anything.\n\nShe wondered about him as she sat there quietly. He hadn't laid a hand on her like she had thought he might, and he hadn't hit her yet though he had threatened. He had hurt her dragging her around, but not in a way that would actually cause her real harm. What did he want with her? Had her father made some deal with him? Sent her off? They had talked, she had seen it. No, she couldn't imagine her father doing that. He wanted her close, he would have no one else to take care of the boys.\n\nShe glanced at him again and again throughout the morning, but he stared ahead, scowling and never looking at her once.\n\nFinally, that evening, a town came into view among the foothills and she sat up excitedly. This might be her chance! There would be people!\n\nJust outside of town, he reined in and turned to her, taking her face in his massive hand. His fingers dug into her jaw almost painfully as he shook a finger in her face, then tapped her lips with it. She nodded, wide eyed.\n\nHe let her face go and started into the town, but put his huge hand on the back of her neck and gripped tightly enough to make her hunch. He could break her neck with ease.\n\nShe stayed quiet as they rolled into the small, sleepy town. He pulled in front of the general store and got out, pulling her with him as he went inside, which surprised her. She had thought he might leave her in the wagon.\n\n\"Cal! Good to see you back! You make the delivery ok?\" the shopkeeper smiled at the man.\n\nThe man, Cal?, gave the shopkeeper a nod.\n\n\"Those cards I wrote out work for you alright?\"\n\n'Cal' gave another single nod.\n\n\"Who's this then? Another delivery?\"\n\nCal shook his head slightly and waved a dismissive hand at her, moving in front of her to cut off the shopkeeper's line of sight.\n\n\"Alright then, what do you need? As promised, a line of store credit for fifty whole dollars for that delivery. Jilly and the kids get on ok? The man seem nice?\"\n\nCal gave another nod as he moved to point at things and put things on the counter. Basics. Beans, salt, flour.\n\nThe shopkeeper looked at Ryne again. \"What's your name then, sweetheart?\" he asked almost condescendingly.\n\n\"Ryne,\" she answered softly, looking at 'Cal' warily.\n\n\"And where did our Callum find you?\"\n\nCal quickly put a hand on her shoulder and led her to the small fabric display, pointing.\n\n\"Near Florence,\" she answered as Cal's hand squeezed almost painfully. \"Am I to choose one?\" she asked him.\n\nHe gave an angry nod, his face red as he looked down at her.\n\n\"I have no sewing kit, so fabric would do me little good without one. Do you have one?\"\n\nHe waved her off impatiently and gestured at the shopkeeper.\n\n\"I have sewing kits,\" the shopkeeper told her with a smile.\n\n\"Which of these is the least expensive?\" she asked him.\n\n\"The brown one with the red pinstripes. Fonda ordered it then never came in for it after and I can't seem to get rid of it. Give you a deal the more you get.\"\n\nCallum held up three fingers and the shopkeeper nodded, then went to cut the fabric. Callum pulled her away and went back to stacking necessities on the counter.\n\nThe shopkeeper came back around and gave her a smile before opening a jar and holding a piece of candy out to her. She felt herself blushing as she shook her head, upset that he assumed she was a child. \"It's alright, it's free,\" he told her, still condescending to her.\n\n\"No thank you, sweets make me queasy.\"\n\n\"Oh, well that's a real shame!\" he laughed, popping the candy into his own mouth.\n\nCallum handed her the fabric and sewing tin as the shopkeeper began totalling things up, holding her arm. He led her back outside, toting a bag and pulling her. He set her up in the seat and glared at her, shaking a finger before going back in to bring out the rest of his things.\n\nRyne didn't move, but she looked around and wondered where people were. Where the sheriff was in this place. If she could get to him, shout out to him? They seemed to know Callum in this place, it was his home. Would they care that he had just taken her? Maybe she should try and appeal to the shopkeeper, though she felt that might be fruitless. He couldn't see her past her height and he would think her a child making up stories. No one believed kids and most men hardly listened to women anyway.\n\nNo one appeared as she waited, even when they pulled away and rode through the rest of the town. She wondered how far out he lived and if they would get there before morning. She didn't have to wonder long, in an hour he turned off the trail onto a lesser trail among the trees. Fifteen short minutes later, he was reigning in in front of a cabin.\n\nShe looked it over skeptically in the dwindling light, along with the barn and animals in the paddock. He pulled her down and inside, pushing her into the house before going back out to start unloading the wagon.\n\nShe looked around, then went to the windows and opened the shutters to get more light. She was knelt in front of the fireplace when he came back in and he jerked her back and shook a finger in her face as he shook his head angrily.\n\n\"If I'm to boil water to clean this mess in here, I need a fire! And it ain't that warm in here that a fire would make it unbearable anyway!\"\n\nHe tapped her lips, still scowling, then shook his head again, pushing her back. He turned and knelt, building a fire and then hanging a pot on the arm before grabbing a pail and going out to fill it with water.\n\nHe hadn't cared about a fire, just her building one. Perhaps he thought she was an idiot.\n\nHe carried in the rest of the things and began putting them away, scowling at the lamps she had lit with a twig from the fireplace. She scowled right back. \"I know what I'm doing! I've built more fires and...\" she began loudly.\n\nHe stepped close, raising a hand and she flinched away, ducking back.\n\nShe sighed and turned away, then slipped outside to where she had seen the woodpile. He pulled her back before she made it and shook a finger at her again before picking up a stack of wood and carrying it in.\n\nShe was at a loss. Why had he stolen her away if it wasn't to wait on him hand and foot and do everything for him?\n\nShe went back in and picked up some of the wood to put in the stove, but he shook his head and pointed at the window. It was too late to start cooking. Instead, he handed her more hard, stale bread and she chewed on it while she put things away. That he let her do, watching her warily and making sure she didn't lift anything heavy or try and do anything else. He let her wash the dirty dishes piled on the counter and clean the table, watching her the whole time with a scowl.\n\nWhen she finished, he stood and pulled her to the heavy chair by the fireplace and forced her down to the floor.\n\nWas this when he would try and force things on her, she wondered, shivering. No. He wrapped a heavy chain around her neck and secured it with a bolt he tightened until his heavily muscled arms shook. He secured the other end to the heavy chair, above the joint where she couldn't free it. After, he pushed her head down to the floor, forcing her to lay down before he left, going to the back room.\n\nShe tugged on the chain and tried to undo the bolt, but there was no give and the chair was heavier than she was. All she could do was lay there on the floor and try to sleep. This time, it came more easily since she hadn't slept.",
        "She woke to him undoing the chain and pulling her out to the outhouse.\n\nThe quiet was almost maddening to her, she was so used to all of her little brothers and even her father being so noisy.\n\nHe built the fire in the stove, but allowed her to cook breakfast on it watching her carefully. After she fed him, he went outside to the barn without a word.\n\nShe took the opportunity to look around a bit. The room he had gone into was a bedroom and the bed was large enough for two. She wondered if he'd had a wife once? She wondered how old he was. She moved to the little dresser and there were three pieces of paper tossed on it, all three with writing.\n\n'My name is Callum Weston, I cannot speak' with a circle drawn in the lower corner.\n\n'Can I water my horses and fill my water skin' with a square.\n\n'Can I sleep here and have supper in trade for a few chores' with a triangle.\n\nSo that was what he had shown her father and what her father had said no to. Probably the water since that would mean showing Callum how to use the well handle since it was broken.\n\nShe put them back and moved to look in the chest at the foot of the bed. There were women's clothes, women's underthings, all for a much larger woman. A pair of shoes for feet more than twice her size. She put it all back and looked in his drawers on the dresser. He had a few clothes, but the bottom drawers were full of boy's clothes.\n\nShe slipped outside, watching the barn warily and the ground too, not wanting to step on something. She walked around the cabin and saw three rock cairns back along the tree line. She went to them and looked them over curiously.\n\nHad he lost a wife? Children? Only one of the cairns was smallish, the other two were large. They were also old, they had been there a long while. Long enough for moss and mud and weather to take its toll.\n\nHis hand on her arm made her jump fearfully and gasp. She hadn't heard him at all! He pulled her away and back inside, still scowling.\n\n\"Was that your wife?\" she asked him softly when he got her back inside.\n\nHe looked at her incredulously and almost offended, then shook his head. He motioned for her to stay inside, then left again.\n\nShe started dinner quietly and watched out the windows as he worked outside.\n\nThat evening, she asked him who was buried out back and he ignored her.\n\nHe always either ignored her or motioned her to be quiet. As the days passed, she did take note that he minded her speaking less if she did it softly. She tried to work in the garden or barn, but he always chased her back inside, motioning at her bare feet.\n\nA little over a week in, she asked him again who was buried out back. He gave her another scowl before going back to what he was carving.\n\n\"You can write it out, like on paper or with your finger so I could see.\"\n\nHe shook his head.\n\n\"You cain't read or write?\" she asked, shocked.\n\nHe shook his head again.\n\n\"How'd you...\" she began, about to ask about the cards, then remembered the shopkeeper had said he had made them for him. The shapes made sense now. So he could tell them apart. She looked at the shelf of books and wondered why he had them. \"Could your wife read?\" she asked him.\n\nHe gave her another offended look.\n\n\"Y'ain't never had a wife?\"\n\nHe shook his head, then bulled up and went back to carving. She knew that meant he was done responding to her.\n\nAnother week in, she showed him the chaffing and bruises on her neck and asked him if she could sleep without the chain, promising him she wouldn't try and run off. He looked at the sores on her shoulders, then put the chain away and let her sleep without it. Twice he was up in the night checking on her, but after that, he didn't bother.\n\nShe still had no idea what he wanted her there for. He hardly let her do anything but cook, never let her help with anything big or heavy, not even carrying in wood. He wouldn't let her near a fire no matter how many times she promised him she knew what she was doing.\n\nFall came and she had lost track of days, but she knew her birthday had come and gone somewhere in there. She'd kept hoping someone would show up looking for her, but no one ever did.\n\nThe days cooled and shortened and he spent more time indoors in his heavy chair near the fire. He ignored her unless she spoke to him or tried to do something he didn't like and she was used to that.\n\nFinally, boredom got to her and she climbed up to the high shelf to get one of the books down. He immediately grabbed her and pulled her down, shaking a finger at her.\n\n\"Well, I cain't reach'm and I just wanted to read one! I'm used to climbin' for what I need! I ain't gonna fall, I never do!\"\n\nHe shook his finger again and grabbed a book, thrusting it at her, then pointed to himself and the shelf.\n\n\"Why should I always have to ask you to do everything? I am capable, it just takes me a little longer! I ain't an idiot, Cal, though you seem to think I am!\"\n\nHe grabbed her face, his hand over her mouth and tilted her face up to his as he growled, shaking his head.\n\nShe huffed when he let her go and she went to the little bench near the fire where she sat, hugging herself. She opened the book, but sat glaring at him instead as he glowered at his work. Why was he so sour? And what the hell did he want from her?\n\nShe set the book down when he got up, never having started it and curled up in her spot on the floor grumpily. It was getting colder and she slept closer to the embers in the fireplace now, but it never helped in the middle of the night when she woke up freezing, the fire out completely.\n\nThe colder it got, the less sleep she got and the more irritable she got.\n\n\"I need shoes,\" she told him one day as he came in, the first snow of the year dusting his hair and shoulders. \"I don't care if they are made of leather from some animal you kill, but I need something for my feet! It's cold and I ain't got nothin'!\"\n\nHe didn't get upset. Instead, he set her up on the table and measured her feet against his hand.\n\nA week later, he handed her an awkwardly made pair of leather shoes.\n\n\"Thank you, but... these are huge? They'll fall off.\"\n\nHe made a motion, expanding his hands.\n\n\"No, they ain't growin' no more, I'm done with that.\"\n\nHe scowled, his hands on his hips as he cocked his head. He grabbed her and took her to the doorway to the bedroom and showed her the notches on it. She'd seen them before. He made a motion to his head, his height and pointed at the notches.\n\n\"Them was you growin?\" she asked.\n\nHe nodded, then pushed her to the door and put a hand to her head, marking her height. He pulled her back and made another motion, moving his hand up the doorway.\n\n\"No. I ain't fixin; to grow no more, girls stop growin' around thirteen or fourteen, maybe fifteen. I ain't grow'd none in seven years, not since I was twelve.\"\n\nHe gave her an astonished look, then pointed at her and made counting motions on his fingers.\n\n\"Nineteen this last fall if you're asking how old I am.\"\n\nHe stumbled back and sat down hard on the bed, looking poleaxed as he stared at her. He shook his head in disbelief.\n\n\"That why you won't let me build a fire or do nothing for myself?\" she asked angrily. \"You thought what? I wasn't old enough? Cause I'm small I must be young? Well I ain't and just cause your big don't mean you ain't an idiot for not lookin' past how tall I am! You thought you was takin' a girl? What did you want with a girl anyway? What kind of man steals away a girl?\"\n\nHe was still staring and looking completely lost. He shrugged and made another motion, raising his hand up.\n\n\"You thought I would grow? Well I ain't gonna so how bout you just turn me loose! I'll never...\"\n\nHe stood, shaking his head and putting a finger in her face. He tapped her lips once for silence, then pulled her shoes off of her and left.\n\nHe did not come back that night.\n\nWhen he came back in the morning, he brought the shoes back and set them on the table in front of her, smaller now. More well made. She slipped them on her frozen feet and thanked him quietly, still steaming over him thinking she was a child this whole time.\n\nHe poked her shoulder, trying to get her attention, but she refused to look at him. She got up and made his breakfast, pretending to think that was what he meant.\n\nHe got offended that she refused to look at him or acknowledge him and he ignored her the rest of the day.\n\nThe next morning she acted like nothing was wrong and he did the same. The difference was, she noticed he glanced at her now. Looking her over as if trying to figure her out.\n\nThat evening when she sat down with a new book, she noticed him look up from his carving and watch her. It was unsettling.\n\nShe cleared her throat and began to read out loud, something she had never done before. She expected him to silence her, but instead he leaned back and his hands stilled as he stared into the fire and listened. He didn't stand to go to bed at his normal time and she read out loud until a yawn had cracked her jaw for the fifth time. She set the book down and stood, then he did as well, stopping her with a hand on her shoulder before she went to her spot on the floor.\n\nHe motioned to the room. She looked back at the door, then up at him in surprise as what he was telling her to do became clear. She practically threw herself on the floor in her spot, curling up and half hiding her face.\n\nHe went to bed without a word, but the next night he refused to put wood on the fire after dinner, causing it to die down quickly. The room was cold before it was even bedtime.\n\nAgain, he motioned her to the room, but she went to the floor and huddled there.\n\nDays passed that way and she got almost no sleep, miserable day and night in the freezing cold weather as the snow began piling up and the temperature dropped.\n\nShe was shivering next to the fire after dinner one evening, cold even with the fire. He was watching her, looking pensive as he glanced at the book she was ignoring. Ignoring him and his demand to not feed the fire, she leaned across and picked up a log to put on the embers. He leaned up and jerked it away, burying a huge splinter in her palm. She cried out and clutched her hand as blood immediately began pooling in her cupped hand and welling out to drip on the floor.\n\nCal yanked her to him and up into his lap, facing her away from him to hold her hand up. He put the flat of his knife on her palm, the edge under the splinter and pinched it between the blade and his thumbnail and slid it out. Blood poured from it once it was out and she whimpered slightly, clenching her teeth. He grabbed up a kerchief from his table and pressed it hard to her palm as he wrapped it and tied it, pressing his thumb to the spot to stop the bleeding. He held her there a long moment, keeping pressure on it and tightening the kerchief to tie it more securely. Once it finally stopped bleeding, he still held her there and held her hand up, holding it securely in both of his as it throbbed.\n\nAfter a long twenty minutes, he took the kerchief off and took her over to rinse her hand off and inspected the area. He looked at her and tapped her palm, showing her the small splinter still buried deep in the hole. She nodded, knowing what he was saying. He took her back to the fireplace and sat down with her in his lap, then got a smaller pocket knife out to dig the splinter out. She looked away, but didn't complain, even when it brought tears to her eyes. He held the kerchief on it again when he got the splinter out completely, then took her and rinsed her hand off again, looking at it.\n\nShe pulled her hand back and held it close. \"It's fine now, all the wood's out and it ain't bleedin'. I'm layin' down, my head is achin' now.\n\nHe took her arm and pulled her back to the room and pushed her to the bed.\n\n\"I'm fine in...\"\n\nHe put his finger in her face, tapping her lips before pushing her shoulder again. He picked her up and put her on the bed, then knelt and pulled her shoes off. She pulled back quickly and rolled to the wall, burying herself under all of the blankets. She didn't look at him, but she felt him moving before he got into the bed. He rolled with his back to her and she let out a breath of relief, then passed out. She slept better than she had in months.\n\nThe next night, she didn't complain or balk at all when he stood to go to bed and motioned her to the room. After that, she didn't have to be told, going to bed without a word.\n\nAs he spent more time indoors as the snow got deeper, she started trying to teach him to read and write. At first he mostly ignored her, giving her glum looks, but she knew that after he learned to write his own name, he was pleased with himself. He was also pleased when he learned the alphabet. He still didn't communicate with her hardly at all, but she was getting used to it. Talking at him when she needed to and watching his facial expressions for responses. She was learning to read him.\n\nHe came in with a last armload of wood one morning and stood near the fireplace for a moment. She knew it was blistering cold outside and he had no gloves or hat to wear when he did his chores, so he hovered at the fire after he stayed out too long. She looked him over, then brought him some warm broth in a mug to warm his hands. He almost smiled at her!\n\nShe watched him and wondered about him again. \"So, them your folks out back?\" she asked him.\n\nHe looked down at the fire, then nodded slowly.\n\n\"How old was you?\"\n\nHe shrugged and held his hand up about chest high.\n\n\"Still young. The other one, that a sister or brother?\"\n\nHe nodded.\n\n\"Brother?\"\n\nHe nodded.\n\n\"How old was he?\"\n\nHe held his hand just above waist high.\n\n\"What did for'm?\" she asked sadly.\n\nHe put a hand on his chest.\n\n\"Same as my ma, I reckon. Cough in her chest so hard till she couldn't breathe no more, makin' her chest and throat rattle when she tried. Guess I'm lucky pa didn't get it too. How long ago?\"\n\nHe shrugged.\n\nShe turned away and went to the stove to stir the stew she had on for dinner.\n\nHis hand on her arm made her jerk and turn, but he wasn't looking to get her attention. Not really. His eyes were on his hand as he touched her shoulder, then his cold fingertips on her bare skin at her neck.\n\n\"That's cold,\" she scowled, pulling away and turning.\n\nHe caught her arm to keep her from walking away, but she refused to turn back to him. His fingers skittered over her shoulder, then her back as he held her other arm. He tugged the laces on her dress loose and she quickly held the dress up as she tried to tug away from him. He ignored her tugging as his hand slid over her bare back and then up to her shoulder as he pushed the dress off of her shoulder.\n\n\"It's cold!\" she repeated dumbly, too afraid to think of anything else to say. \"And I need to make up the dough if you want bread tomorrow! It'll have to rise up through...\"\n\nHe reached around and put his fingertips on her lips, then slid his fingers around to her jaw and pushed her hair out of the way to trace her ear. She shivered, the touch bringing up goosebumps.\n\n\"Let me go, Cal, I don't like this!\"\n\nHe pulled her across the room to his chair in front of the fire and he sat down, still holding her arm. He pulled her dress off, his strong hands insistent as she tried to keep hold of it.\n\n\"I don't like this!\" she repeated, trying to twist out of his grip.\n\nHe held her wrists in both of his hands as he looked down at her, pulling her arms wide so she couldn't crouch down and hide from him.\n\n\"Let me GO!\" she yelled, kicking at him.\n\nHe gritted his teeth and shook a finger in her face angrily, but she didn't care.\n\n\"Let go! I want my dress back right now! You can't just force a woman down to nothin' and look as you please, it ain't right!\"\n\nHe let her go with a shove, then bent and jerked her dress up off the floor. He bent and pulled her shoes off of her too, then went and put them all on the high shelf, glaring at her when he turned back to her.\n\n\"Give'm back!\" she screamed, hiding behind her hands.\n\nHe showed his teeth to her in a growling grimace, a silent snarl.\n\nShe fled to the bedroom and ducked under the blankets, but he followed her and pulled her off the bed, separating her from the blankets and shoving her back to the front room.\n\n\"Stop!\" she wailed, trying to hide herself again.\n\nHe sat back down, holding her arm and looked her over again, his lips parting slightly as he swallowed. He finally looked to her face and thumbed her tears away roughly. He leaned back, then patted his lap with his free hand, watching her warily.\n\n\"No! You lemme go and lemme put my clothes on!\"\n\nHe shook her, his eyebrows furrowing, then patted his lap again.\n\n\"No! It ain't right'n you know it! Leave over and lemme go!\"\n\nHe jerked her close and put a finger in her face as he snarled silently again.\n\n\"I don't CARE! You cain't just...\"\n\nHe clamped a hand over her mouth, his fingertips and thumb digging into her jaw.\n\nShe stared up at him, her eyes full of angry tears. His frustration was showing on his face, as well as his confusion.\n\nHe finally let her go with another shove and pointed to the stove.\n\n\"I want my clothes!\"\n\nHe shook his head and crossed his arms.\n\n\"Gimme my clothes!\" she demanded, yanking up the fireplace poker and hefting it.\n\nHe caught her wrist quickly and wrenched it away from her before bearing her down to the floor under him. He shook her hard enough to rattle her teeth as he wagged his finger in her face in admonishment. She clamped down on that finger with her teeth so hard she actually hurt herself when he jerked his finger out of her teeth. He looked down at her like she had lost her mind, then gritted his teeth and got up.\n\nTo her horror, he got the chain back out and secured it around her neck, then to the table in the kitchen. Away from the fires, away from everything but the front door. He had given it no slack at all, forcing her head to the floor next to the joint on the table. All she could do was draw her arms and legs under her and huddle there. She refused to ask him to let her go or even speak to him. He was being a monster!\n\nHe paced near her for a few moments, then stomped his foot near her, making her jerk and whimper. He did it again and again, as if trying to scare her or make her understand something. He went back to pacing, then pounded on the table angrily before kneeling and releasing the chain from her neck.\n\nHe carried her back to his chair and sat down with her on his legs. She tried to get down, but he pulled her closer and pinned her to his chest until she stopped struggling. When she finally went still, panting and sobbing brokenly, his grip loosened and he eased his hand around her front to touch her breast with a trembling hand. He moved to the other, and then back again, his entire body trembling. He rubbed them both, taking turns as he massaged one, then the other, his breathing becoming ragged. He pushed his hips up into her and she could feel his manhood pressing into her thigh through his pants. She shook her head and sobbed harder, but he ignored her as he moved his hand down to her hip, holding her tightly against him as he ground his cock into her thigh. He did it again and again, panting as he clutched her, gritting his teeth, his eyes closed. He kept moving, faster and faster as he rubbed his cock against her thigh frantically until finally he clutched her painfully tight and held her there. She could feel his manhood throbbing even through his pants and she grimaced and turned away from him.\n\nAfter a moment, he let her go, his arms going almost limp as he sat up and tried to catch his breath. She slid off of his lap and fled to the bedroom.\n\nHe was about to go and get her when she came back out in some of the old clothes from the bottom drawer. Boys clothes.",
        "She glared at him as she went to start the bread, wiping tears from her eyes constantly while she worked. After a few minutes, he set her dress on the counter next to her and put a hand on her shoulder gently.\n\nShe jerked away roughly and grabbed her dress, hugging it in one arm as she scrubbed more tears away with the other. He petted her hair and she ducked away again, turning to scowl up at him as she fled back to the bedroom to put her dress on. When she came back out, she still had the pants on under the dress and the shirt on over it. She didn't see his amused look, refusing to look at him at all.\n\nAfter dinner, she sat huddled up and hugging herself on her bench, still upset and angry at him. He watched her curiously as she sat staring into the dying fire, tears still welling in her eyes sometimes.\n\nWhen he stood to go to bed, she half panicked, looking up at him with a fearful expression. He had to pull her into the room and set her on the bed. She burrowed under the blankets and he immediately pulled her back out of them and began pulling off all of her clothes.\n\n\"Don't!\" she whispered, trying to fend off his hands as he untied her laces and tugged her clothes off. \"Please!\"\n\nHe put a finger to her lips gently and kept pulling her clothes off until she had nothing.\n\nShe dove under the blankets with a wail, sobbing as he undressed before climbing into bed. He moved across the bed next to her and tried to turn her to face him, but she fought violently when he did. He had to pin her down and hold her hands down and even still she bucked and screamed and tried to bite him.\n\nHe sat up and jerked her hard to her stomach, then landed a solid, heavy blow on her backside, making her bleat out like a sheep in shock and horror. She went still, shaking all over and he lay back down next to her slowly, pulling the blankets up over both of them.\n\nShe heard him swallow hard as he lay his head next to hers on her pillow, his hand sliding up her bare backside to her lower back and back down. He cupped her ass gently and rubbed, then slid his hand up again to her back, his fingers trailing her spine and her ribs. She shivered again and wiped more tears from her eyes as she stared at the wall.\n\n\"Why're you doin' this?\" she demanded, her voice thick with anguish.\n\nHe rolled closer to her, almost laying on her on that side. He smoothed her hair back so he could see her face as he leaned over her. He leaned closer until his lower lip was on her jaw, then he moved his head slightly, trailing his lips over her jawline.\n\nIt wasn't a kiss... not really. She wasn't sure what it was. Maybe he thought it was a kiss. Maybe he had been out here alone and didn't really remember his folks kissing and what it was like. Maybe that was why he'd done what he had earlier. He didn't know the real way of it and he'd just done what felt good to him. How long had he been out here alone that he didn't know the way of making babies? Surely he had seen the animals and he had to know at least that much? Her friends had all told her everything after they had been married and she had seen and heard her folks often enough that she was pretty sure she knew more of what needed doing than he did.\n\nThat didn't mean she wanted him doing any of it. He was still just the man that had stolen her away from her family.\n\nShe realized then that this was why. What he'd been waiting for. A girl to grow into a woman to be a wife to him. He'd seen a pretty girl he hoped would grow to a pretty woman and stolen her away to raise up as his own. Now he knew she was a woman and he didn't have to wait anymore. He meant to make her his wife.\n\nHe slid his shaking hand around and pulled on her shoulder, making her turn to her side so he was pressed against her back now. He reached around and groped her breast again, letting out a shuddering breath. She felt his cock, free now, pressing hot against the back of her legs.\n\n\"I don't want this,\" she whispered, shaking.\n\nHe pressed two fingers to her lips, shaking his head. He took her hand, holding it as he pointed to her, then himself.\n\n\"I don't! I don't belong to you and I ain't your wife! This ain't right!\"\n\nHe nodded, pointing to himself again as he held her against him with his other arm.\n\n\"I should have a say! You never asked me and I...\"\n\nHe pressed his fingers to her lips again, shaking his head softly as he dragged his lip over her shoulder. He stroked her hair back again and moved closer, trying to coax her to look at him with gently prying fingers.\n\n\"No! I know you aim to try'n kiss me and I don't want that! I don't want none of this!\"\n\nHe lowered his head, putting his lip back to her shoulder and dragging it over the smooth, warm skin there. He stroked her chin with the back of his knuckles, trying to soften her and bring her around. She stayed tense and refused to turn to him or give him anything at all.\n\nHe finally got frustrated and rolled to his back with a huff. After a moment, he grabbed her arm and forced her to her back as he pulled her hand across him and ran it along the length of his cock, forcing her to feel it. She tried to jerk back with a repulsed squeal, but he held her arm tight in one hand while the other held her hand open to stroke up and down the length of his cock.\n\n\"Let go!\" she begged frantically. \"Please!\"\n\nHe let go and she spun away, scrubbing her hand on the blankets as she rolled to the wall. He rolled again and tried to get her to turn over, but she wedged herself in tight and buried her face as she sobbed.\n\nHe huffed again and jerked her away from the wall, but she rolled to her tummy and buried her face in her arms.\n\nHe shook her shoulder gently a few times, but she refused to move or roll over.\n\nFinally he gritted his teeth and rolled over on top of her, nestling his hard and demanding cock along her closed thighs, the tip pressed against her ass. She tensed and wailed, gripping the blankets as she tried to roll from under him. He held her down as he pressed his hips against her legs.\n\nRyne grimaced as his cock pushed up, inching up to spread her ass cheeks slightly as he rolled his hips into her thighs. She kept her legs locked and her ass clenched as he shoved against her, holding her against him as his hips worked. When he spent his seed on her backside, she let out another wail of revulsion and scrambled out of bed as soon as he rolled off of her to go and clean it off. She pulled her dress on, shaking.\n\nWhen she got back into bed, he tried to pull her close and hold her, but she squirmed and fought until he finally let her go with a sigh.\n\nIn the morning, she slipped out of bed quickly and hurried to build the fire and make breakfast. He came out pulling his shirt on and looking at her warily. He went to her and bent as if to try and kiss her, but she spun away and ducked under his hand. He caught her arm and pulled her close as he went to a knee in front of her. He looked tortured as he tried to turn her face up to his, stroking and caressing pleadingly. He touched her chest lightly, then his own.\n\n\"I ain't. I ain't yours!\"\n\nHe nodded, holding her face in both hands, anguish in his features.\n\n\"No. You cain't steal a girl and make her your wife, it ain't right!\"\n\nHe grimaced and shook his head, his hands sliding back to her hair to grip her tightly. He moved closer, his eyes still pleading hers.\n\n\"You come near enough and I'll bite hard enough to tear your lip off! I ain't gonna kiss you! Or anythin' else! Get it out of your head! I ain't!\"\n\nHe scowled and closed his eyes, looking sad. He held her tight and pressed his forehead to hers and just held her there for a long moment.\n\nShe felt a small stirring in her heart for his sadness.\n\nHow long had he been alone? How long had he wanted someone but no girl would have him because he was a mute? He hadn't been mean to her, not really, even if he was quiet. He was never going to let her leave, though she'd been making plans to get away as soon as spring came and the snow thawed.\n\nAs far as men went, she'd seen worse for husbands. Meredith's husband had been thirty years older than her and he hit her all the time. Jenny said her husband always made her put her mouth on his privates and lick on him and kiss on him. Livy said her husband always made her go out to the barn and climb up on a special saddle he had made with a big opening and he'd get under it and poke at her and touch her while she was blindfolded. He'd use his mouth and sometimes other things too, she never knew what. She'd said one time she was pretty sure he'd let the farmhand Ronnie in to have a feel and let him poke around on her. Missy said her husband had carved up a ginger root and put it inside of her asshole and made her sit through church without movin' or makin' a sound. She said it'd hurt and she was almost hysterical and had to get up and run out before the service was half over. He'd beat her bottom until it was purple, then tied her down and put the ginger root in both holes and left her tied that way till the next day. She'd come into town a few weeks later and said he had ridden off to see his brother and hadn't come back yet. Ryne was pretty sure he wasn't visiting his brother unless his brother was in hell too.\n\nLynn, Verbena and Twila had all lucked out with nice husbands, but even Lynn complained about the older homely man her pa had matched her with. Still, she'd been happy last Ryne had seen her with a babe on her hip and another in her belly.\n\nIn a way, she guessed she was lucky. Callum was handsome and mostly nice even if he wasn't used to being around people. He wasn't too old. She wasn't sure how old he was. She'd thought him ten years older at first, but she'd started thinking he was younger than she'd first thought. He was just sad and worn and lonely.\n\nA lonely boy with no way to speak, left alone to fend for himself for years.\n\nHer heart broke a little.\n\nShe pulled back and shrugged out of his hands, moving to finish making breakfast as he stood with another sigh. He left out the front door, yanking his coat on. The old coat looked like it had probably been his fathers and it needed patching in some places.\n\nShe stood thinking long and hard over what she should do. When he came back in, rubbing his hands together, she had breakfast on the table. She said nothing to him, but she peeked at him a few times through her lashes as she ate. He looked a little sad as he ate.\n\nHe'd probably thought he'd have time to win her over before she had to be a wife to him. She'd have time to forgive him. Maybe he thought he had been doing her a favor, taking her the way he had. Getting her away from her father.\n\nHadn't she been lamenting that she was stuck there with him, taking care of his kids for him that very same day? That she wished she could marry and have kids of her own?\n\nShe peeked at Cal again and he was moving his food on his plate, not eating. He looked lost.\n\n\"I seen some yarn in that old basket up there on that high shelf,\" she announced loudly, making him blink hard and look at her with furrowed brows. He hated it when she spoke loudly. \"You get it down for me and I'll see what I have to work with. Or I can climb up'n get it myself,\" she shrugged.\n\nHe stood and pulled the basket down right there, setting it on her little bench.\n\n\"Thanks.\" She went to her bench and sat down to see what she had to work with. He watched her for a moment, looking confused and apprehensive. Finally, he sat himself down and picked up one of his carvings to work on.\n\nIn an hour, she got up and went to him, pulling his hand away from what he was doing to try the mitten on him. It had seemed huge to her, but it was a bit small for his huge hand. He looked at her in surprise, his eyes lit up as he tested the mitten.\n\n\"It's too small, I will fix it,\" she told him, taking it back to her seat. She made it bigger, then put the thumb on and tried it on him again. It fit perfectly as he flexed his hand. She took it and made another for his other hand, then started on a hat. This time, she measured his head first before she began. He was smiling at her as he held his head still, looking down at her in amusement.\n\nShe tried to ignore the pleased shine in his eyes, but she couldn't help the small smile that crept to her lips at how happy such a small thing was making him. When she tried the hat on him, he was watching her face from up close and he surprised her by closing the few inches and putting his lips to hers in a kiss.\n\nShe turned away quickly. \"Don't go doin' that again or I won't finish it!\" she told him, her cheeks burning. He took hold of her face and turned her back to him and leaned close to her again. She realized as she stood there that she had only turned away. She hadn't moved away or made any motion to stop him other than turning her face.\n\nHe stroked her jaw on both sides, looking her face over and she fumbled for something to say to forestall him. \"I... I have to finish this... it isn't long enough to cover your ears fully and...\"\n\nHe leaned close and pressed his lips to hers again.\n\nShe froze for a moment, feeling his lips on hers and how soft and gentle he was being, then she fled. She went back to her bench and hunched over the hat, her fingers moving quickly. After a few rows, she peeked up at him and he was sitting with a pleased smile, working on the carving.\n\nWhen she finished, she tossed it at him, then hurried to the stove to check the dough. She hardly got it moved to start folding when his hands turned her from behind.\n\nHe lifted her up to sit on the table, his eyes shining. He shook the hat and gloves at her, holding them in one hand, then stroked her cheek softly.\n\n\"You're welcome, now let me down. I need to get the bread ready for baking and...\"\n\nHe pressed his thumb to her lips, his eyes still shining. He leaned in as if to try and kiss her again and she turned away.\n\n\"Let me down! I just saw you needed to stay warm is all, it ain't an invitation to go pawin' and kissin' on me! Dinner will be late if you don't let me start it!\"\n\nHe shrugged a single shoulder, then picked her up and carried her back to the bedroom and the bed.\n\n\"No! No, this ain't happening, Cal! You just... NO! I said no!\" she cried as he pulled her dress off.\n\nHe caught her hands gently and pulled all of her clothes off as she fumbled for them and tried to fend off his hands. When he let her go to pull off his own clothes, she knew she wasn't fighting like she had been. He still looked amused and happy, like he knew she was giving in to him.\n\nShe dove off the bed rolling, then came to her feet in the doorway and ran for the door. He caught her arm as she reached it and yanked her back hard enough to make her lose her feet. He picked her up and carried her back to the bed and tossed her. She bounced and struggled to turn and he was laughing! He was laughing at her! He grabbed her ankles and yanked her close and she realized that he'd rid himself of his clothes completely. By the way he moved her and climbed on her, he definitely knew the making of babies and how things were done.\n\n\"Cal, you do this and hand to god I will poison your food! I can do it and you'll never know! You don't know readin' and whatnot and everythin' I know! I know how!\"\n\nHe only grinned and scrunched his nose at her like he thought she was being cute. Insufferable man!\n\n\"Please?\" she asked frantically as he wrestled her closer, yanking her hips close to his so his cock bounced off her belly.\n\nShe managed to twist and get a leg up, kicking at him, but he caught her and flipped her. He pulled her to the edge of the bed and bent her over it, pinning a hand in her back as she struggled. His hand touched her between the legs and she let out a terrified cry as she froze in place. She'd touched herself before, she knew it felt good, but somehow his touch felt different. It brought up a very different kind of pleasure, one that shocked her and gave her pause.\n\nWhat was he doing differently?\n\nHis fingers were awkward as they pressed and rubbed and tried to fumble at her and she knew that she knew the way of getting at what he wanted, but she was still puzzled. He wasn't getting at that spot she liked and he wasn't trying to force his way inside of her, but it still felt good. Just his fingers, just his touch.\n\nHis fingertip grazed her little nub and she sucked in a breath, making him go still. He only paused a moment, then his fingers went back to try and find what had made her react that way. He found it quickly and she closed her eyes and grasped the coverlet as she sucked in another breath.\n\nHe stopped trying to hold her down and dropped down behind her, going to a knee so he could see what he was doing. She hardly noticed, not actually caring, only trying to figure why his touch felt so much more than her own. His breath on her nether lips made her open her eyes and she blinked.\n\nHe was down, looking between her legs, looking at what he was doing and what she had down there. He explored with his eyes and his fingers as his thumb toggled her nub, pulling her nether lips open so he could see more clearly.\n\nShe wasn't completely sure how she felt about that. Part of her felt like she should have been ashamed, or furious, but mostly she felt curious right alongside him. What did she look like down there? She'd touched herself enough, but had never had a peek at it. What was he seeing?\n\nWhatever it was, he seemed very interested in it as his thumb worked harder and he slid another finger along her lips, making her note how wet she was now. Her excitement was obvious to both of them.\n\nHe leaned close suddenly and slid his tongue along her slit, moving his thumb so that his tongue could taste her there too. She didn't object, like she had started to, she went even more still for a moment, then let out a small moan as she parted her legs for him. He took it as an invitation and a sign she wanted more of the same as he gripped her hips and pulled her back against his mouth, his tongue tasting her again and again.\n\nShe wanted more.\n\nShe pulled away and rolled to her back, catching his hands as he tried to pull her back. She pulled him back close again as she lay on her back and pressed his face back down so he could keep tasting her while she wrapped her legs around his broad shoulders and held onto his hair.\n\n\"Just... not all over like that... just up on top there at my bud... just there! Yes! Cal! That! I like that! A bit harder... I think? Oh... I like how this feels!\" she breathed, her body writhing.\n\nHis hand slid up and he groped her breast, his fingers rolling her nipple until it was a hard point and she was whimpering.\n\n\"This aint playin' fair!\" she complained. \"How do you even know the doin' of this?\" she asked, pulling harder on his hair as his mouth toyed with her. \"Nnn, just... harder a bit! I feel... I am close to what I need! Don't stop that! Cal! Cal!!!\"\n\nShe let out another cry as her eyes opened and her body tried to jerk itself out from under her with pleasure. It was all pulled out of her forcefully. Her body unable to move under her power as he wrested the pleasure from her and forced it from her. She let out another cry as her body twitched under him, the pleasure he was forcing from her making her half crazed with want to have it continue.\n\n\"Oh, please!\" she whimpered as the bliss began to subside and her body became her own again. She forced her fingers to release his hair and he lifted his face up to hers, looking half lost with need himself. He staggered up off his knees and bent over her, moving her on the bed slightly before taking hold of her face to put his mouth on hers.\n\nHis kiss was unpracticed and forceful, but she was too tired to try and show him the right way. She simply let him kiss her, then tried to catch her breath again when he moved her higher on the bed, then climbed in with her, moving over her to kiss her again.",
        "Too late she realized he had much more in mind as his heavy cock slid across her hip as he moved.\n\n\"Cal!\"she managed, just as he pulled her legs apart again and moved so that he was where he needed to be to take her. \"Stop!\"\n\nHe shook his head slightly before putting his hand over her mouth, holding himself up on that elbow to reach down and take hold of his own cock, moving his hips closer to hers.\n\nShe slapped at his massive chest, trying to make him let her go or look at her as she screamed into his hand, but he closed his eyes as he gritted his teeth. He pressed his cock to her slit, but he was angled wrong and in the wrong position. Beating on him harder, she tried to get his attention, but he was still ignoring her as he let her mouth go and moved, yanking her hips up higher as he dropped down lower. He sat up, his legs wide, and pulled her hips to his waiting cock, then guided himself to her opening before taking her hips again and pulling her onto him.\n\nRyne screamed in pain fueled fear as his cock spread her open. She kicked feebly as he closed his eyes and lifted his head to the ceiling, gone in the pleasure of it. She pulled on the blankets, trying to twist away from him, but his hands held her tightly as he pulled her down hard on his cock. He eased her off slowly, then pulled her back again as she struggled.\n\nHe didn't seem to notice her pain at all as he looked back down at her, watching her pussy being spread open wide for his cock as he slowly bounced her hips off of his, his arms hardly straining at all with the effort of holding her up and moving her. He kept pulling her down onto his cock, his eyes focused on watching her engorged pussy and refusing to look at her at all as she pleaded with him and clutched his wrists.\n\nRyne let out another plea, shaking her head as he pulled her down the length of his cock, but this time when he shoved into her inner wall, there was more than just the excruciating pressure of her stretched cunt. There was a ripple of... more. It happened again, then again and again until his long, slow strokes were less pain and more pleasure.\n\nHe was clenching his teeth and trembling now as he watched his cock splitting her open with every pass, but she moaned as if enjoying it, his eyes flickered to her face. She looked surprised and full of need again, and lost in his efforts. She was no longer fighting or begging him to stop.\n\nHe slid his hands lower, adjusting his position and raised up slightly before he started moving her more quickly. She went almost completely limp in his hands as he began ramming into her and yanking her down on his cock with forceful thrusts.\n\nShe screamed again, but it wasn't in pain this time.\n\nRyne tried to find something to hold onto, his arms were too large to grip. Pleasure was trying to steal her away again, making her it's own creature and she needed something to anchor herself. There was nothing when it hit her and she felt her grip on his cock was all that kept her in the bed. Her pussy locked down on him and his fingers clenched around her hips, but it was her hold on him that kept her body from leaving. Her own screams seemed distant as she felt every single bit of him that was locked inside of her. Every vein, every inch, every slight curve. She could feel all of him as her body molded herself around his cock.\n\nOnce the bliss drew back and her muscles unlocked, she opened her eyes to see him panting over her, his teeth clenched as if in pain. He eased his cock out of her as her body let him go and she realized he had spent himself inside of her.\n\nIt was a fleeting thought as exhaustion rolled her under.\n\nHis mouth woke her, his lower lip dragging over her bare shoulder again and again, back and forth as his eyes watched her face.\n\n\"Mmmm, what?\" she asked sleepily.\n\nHe nudged her shoulder with his chin, wrinkling his nose playfully as he watched her face.\n\n\"I don't want to, can't you just have some leftovers? There's beans from...\"\n\nHe leaned in and dragged his teeth over her jaw, his eyes still shining.\n\n\"Fine! I'm up! Just... I just need a minute,\" she sighed, trying to stifle her amusement.\n\nHe nudged her again after a moment and she giggled. \"Who made you bread before you stole me away?\" she demanded. \"And who cooked for you? You went and wore me out, I cain't just jump right up.\"\n\nHe gestured towards the window, his expression more than a little amused.\n\n\"I don't care if it is dark! You can just wait for breakfast. Lemme sleep...\"\n\nHe cuddled into her, curling around her from behind and nudged her again.\n\n\"Quit harpin!\" she giggled, hiding her head under a pillow.\n\nHe tugged it away and kissed her shoulder gently.\n\nShe let out a huge sigh. \"Fine. Since you asked so nice,\" she grumbled, finally getting up. She went and started dinner, then finished the bread while he hovered close, watching her.\n\n\"Why don't you work on your little carving?\" she asked him without looking at him.\n\nHe moved closer, leaning on the counter to look down at her face while she worked.\n\nShe smiled. \"Yeah, fine. It wasn't so bad... but I still ache. And I said no! And you... You best just watch yourself, else I will poison you like I said I would. Go on and try on your hat, let me see if it needs bigger.\"\n\nHe was grinning as he pulled it down over his ears and she had to try hard not to smile up at him, reflect his own joy back at him and let him see how happy she felt.\n\nShe felt happy.\n\nThat realization hit her and she felt a contentedness wash over her.\n\nShe looked up at him and let herself smile, then took his hand and pulled it to her face, closing her eyes as she pressed her cheek to his knuckles. His playful grin turned soft as his eyes sparkled as he watched her.\n\nShe let his hand go, her cheeks turning pink and turned back to finish dinner. \"Why don't you put those up and lay your coat out so I can patch the elbows?\" she told him, floundering for a reason for him to step away from her. He was distracting in his overwhelming joy and smiles.\n\nHer own joy was just as distracting as she thought about it.\n\nHe stroked her shoulder a final time, then went and got his coat, setting it on her little bench. He started hovering again and she smiled as she worked.\n\n\"Ain't there somethin' you should be doin?\" she asked him without looking at him. \"You fed the animals yet?\"\n\nHe went stiff, then spun and started yanking his coat on, along with his new gloves and hat. Ryne was laughing outright as he rushed out the door, grinning at her.\n\nBy the time he came back in, she had dinner ready and the bread was baking. She would have to stay up late to pull it off the fire, but she didn't mind that so much. Cal was smiling happily as he ate and watched her constantly. Trying hard not to smile as well, she was largely unsuccessful and constantly blushing. She was grateful when she could get up and turn, checking on the bread.\n\nCallum caught her up from behind, lifting her up and spinning her, then standing her in a chair. Turning her to face him, he looked at her face with his sparkling smile and looked her over adoringly.\n\n\"Yes, fine. I like you too. A little. Sometimes,\" she blushed.\n\nHe leaned close and nudged her nose with his, still smiling.\n\n\"Ok, more than sometimes,\" she sighed, rolling her eyes and smiling.\n\nPulling her close he kissed her softly, then pulled back to look down at her again, his look significant.\n\nRyne sucked in a breath and looked down quickly. \"I ain't sure if I love you yet,\" she shrugged. \"I think I could, now that I'm lookin' at ya like that. You're worth lovin' and you seem mostly good. Better'n most kinds of men. I know I like ya a lot. I guess it's near 'nuff anyhow. Lemme down now to check the bread! Less you want burned up bread the next couple days!\"\n\nHe grinned again and kissed her, then eased her down to the ground.\n\nThe days passed too quickly after that, all of their spare time spent in each other's arms and in the bed. When the snow melted and spring came, he spent more time outside, but she went out with him and he finally let her. She was happy and she felt like her heart lived in his smile. That look in his eyes when he was watching her, looking so proud and so incredibly in love.\n\nSpring went by even more quickly and Ryne woke up one summer morning feeling queasy. She'd already been fairly certain she might be with child, but she was sure when she felt that sick feeling as soon as she got up and moved around. Her mother had had the same issues every time she got pregnant and Ryne had heard stories and her friends who'd had babies all talked too. She was pretty certain. Still, she was going to wait to tell Callum. She wanted to be far enough along to have no doubts at all.\n\nWaiting till her stomach settled some, she finally joined him out at the garden pulling weeds and he gave her his beautiful, happy grin.\n\nRyne felt giddy every single time he looked at her that way.\n\nKneeling next to him, she began working alongside him until afternoon when he went up on his knees suddenly and turned to look at the road.\n\nRyne knew that he heard things before she did, so she waited until she heard the horses and wagon herself before she stood up and turned to wait expectantly. Callum stood next to her with a giant hand on her shoulder.\n\nTo Ryne's shock, it was a sheriff and two deputies on horseback and her father and brothers in the wagon following behind.\n\n\"There she is! That's her, that's my girl! He stole her! Picked her up and carried her off, my boys saw it!\" her father yelled, jumping down from the wagon.\n\nRyne moved in front of Callum quickly as the lawmen all drew guns. \"No! No, it ain't like that! Me and Cal is married!\" she yelled at all of them. \"Papa, they were just confused at what they saw! He asked me and I said yes and he carried me to his wagon and we left! I told you I wasn't stayin to watch your boys forever, you were gonna have to do it! I ain't their mama!\"\n\n\"He snatched you up and ran off! Took off at a run! The boys all saw it! You even yelled for help!\" her father cried incredulously.\n\n\"If that was so then why didn't you come after me right away? Why wait this long? Unless you decided to make it up because you didn't wanna deal with takin care of the boys anymore! They cain't do for themselves and you don't wanna, so you come here and try to make me come back! Well I ain't gonna! Me and Cal is married! And I'm gonna have his baby soon!\" she yelled, her hand on her belly, though she wasn't showing yet.\n\nCal's hand clutched at her shoulder and she knew she had surprised him.\n\n\"Sherriff, he wasted your time. He's just a lazy old drunk who don't wanna take care'a his kids! Cal cain't speak so he thought he could come here and take me back with'm and make me be a mama to them boys. Well, I ain't. You'll just hafta figure it out, papa! Stop drinkin' and start thinkin' about more'n yourself! You ain't the only one that lost mama, we ALL did. Them boys did too! You quit tryin' to foist'm off on someone else'n raise'm yourself!\"\n\n\"That's enough outta you!\" her father yelled. \"You have no idea what I been through! And don't you keep sayin' you left with this man, he TOOK ya!\"\n\n\"If he took me, would I be standin' next ta him right now'n working beside'm? If I didn't wanna be here, would I be here? You know me enough ta know I'da brained him long before now and got myself home if that's what I'd wanted. Even now, if I wanted to leave, the law's right here and I could say so. I ain't sayin that. I'm here, this is my home, this is my husband and we're happy. Where's the older boys?\" she demanded, looking at the little ones in the wagon. Her two oldest brothers weren't with them.\"\n\n\"Takin' care of the farm,\" her father scowled.\n\n\"Alone?!? They ain't old enough for that! You cain't just leave kids all alone to do a man's job! You need to get home to them now and...\"\n\n\"Enough!\" the sheriff growled. \"Miss, this man steal you from your home or not?\"\n\n\"No sir, I said yes right out when he asked me to marry him. I wasn't about to spend my life liven there and bein a mama to them boys. I figured if I left, he'd hafta step up'n be a man. I didn't figure on his makin' all this up and comin' after me.\"\n\n\"And how old are you?\" he demanded.\n\n\"Nineteen.\"\n\n\"Sir, she's old enough to say yes to whoever she wants and leave home. I know Cal, known him his whole life. He was always a good kid and gentle. You don't hafta like it or agree with it, but the laws on her side. She has a right to marry and leave home whether you agree or not.\"\n\n\"But he stole her!\"\n\n\"Marrying a girl isn't stealing,\" the sheriff scowled. \"C'mon now, we're leaving these good folks alone. You've harassed them enough for today. Cal, good to see you happy, boy.\"\n\n\"Wait! Just wait a damn minute! Fine. Fine, she's married,\" her father growled. \"Just so, we come all this way. Least we could visit for a while and let her brothers say hello. Have a meal, set out back home in the morning.\"\n\n\"That suit you, miss?\" the sheriff asked.\n\nRyne turned and looked up at Callum who gave her a nod. \"That's fine I guess. Cal, can you bring in some'a that boar from the shed? And dig up a few potatoes?\"\n\nIn answer, he bent and kissed her head, then turned to go to the curing shed.\n\nRyne turned back to her father as the sheriff and his men all began leaving.\n\n\"You boys all go on in and wash up while I unhitch,\" her father grumped. \"Show'm where to wash up, I'll be in as soon as I have the horses in your barn there.\"\n\nRyne gave him a terse nod, then herded the boys into the house to clean them up as they hollered and tried to talk over each other to tell her stories.\n\nA few minutes later, Cal came in with the meat, smiling at her, then left to get the potatoes. Richie was in her lap on the floor when Cal came back in with a bag of potatoes. Setting them down, he pointed at the boys then held up his hands.\n\n\"He'll be in as soon as he's got the horses fed,\" she told him, kissing Richie on the head.\n\nCallum shook his head, pointing outside.\n\nJumping up, Ryne ran to the door to look out. The wagon and her father were gone. He'd taken off, left all the younger boys with her.\n\nShe let out a sigh and put her hands on her hips.\n\nCal turned her to face him and stroked her cheek lovingly. Reaching down, he put a giant, gentle hand on her belly and gave her a proud smile. He moved his hand, waving over all of her brothers, then put his hand on his heart.\n\nRyne smiled at him and hugged him close, tears filling her eyes. \"I know you will! I know you'll love'm all like your own! Thank you, Cal! You're already the best father I could hope for for our little ones! Come on now, all of you! Cal's gonna show you around the farm while I make dinner! He don't talk, but you'll all still mind'm just the same!\"\n\nCal kissed her head, then motioned for the boys to follow him. All of them but Richie followed, Richie staying close to Ryne and holding onto her skirts tightly like he was afraid she might disappear if he left her side. She let him stay, working around him and hugging him to her every chance she got.\n\nAs much as she had wanted away from her home and being a mom to the boys, she was glad they were here. She wasn't worried about them anymore, she knew they'd be safe, happy and fed. She guessed it was less about being a mama to them and more about having her own life while she did it.\n\nShe could deal with that.\n\n\"Wanna help me make a pie?\" she asked Richie with a smile. His grin was the only answer she needed as she stepped to the door and hollered at Callum to pick enough apples for a pie.\n\nThe very next morning, Cal took the two oldest out and they started working on building on to the house. Cal wouldn't let them do anything hard, but he showed them everything and patiently went over it as many times as they needed. Soon, all the boys but Richie were following Cal around, watching every thing he did and letting him show them things. Cal seemed happy to do it, grinning at her every time he caught her watching him.\n\nTwo weeks in, he caught her alone and pulled her to their room, pushing her against the door. Kneeling, he took her face in his hands and ran his thumbs over the corners of her mouth, tears in his eyes.\n\n\"I have been happy,\" she agreed, her hands on his face. I've been happy a good long time now, Cal.\"\n\nHe put his hand to his chest, tears still in his eyes.\n\n\"I know. I'm glad you're happy too and I'm glad you get on so well with my little brothers. They adore you.\"\n\nPutting his hand on her belly, he held up fingers.\n\n\"Probably about six more months? Around Christmas maybe, give or take. The baby'll come when it comes.\"\n\nGrabbing her face again, he kissed her, then pressed his head to hers and held her there until the boys started hollering and knocking on the door.\n\nThe next week, her other two brothers showed up, walking. They said their father had taken them as far as the town and told them where the house was and they'd walked the rest of the way.\n\nRyne had half a mind to go after her father and thump him with a stick! Instead, she brought her brothers in and found them a place to make a palette until the room was finished. They were going to have to either make it bigger or build another.\n\nThey ended up doing both. Cal made the extra room larger and as soon as it was done, he started on another room immediately, pointing to her belly when she asked why.\n\n\"How many do you think we're going to have?\" she laughed.\n\nHe shrugged, smiling, then held up all his fingers.\n\nRyne only shook her head, still giggling. \"Maybe two, but that's all! We have enough here!\"\n\n\"When I get married, I'm having NO babies,\" Ronald announced. \"Kids is hard work!\"\n\n\"You won't get much say in it,\" Ryne teased. \"Don't know who you aim ta marry round here anyway, you don't know no one yet!\"\n\n\"I aim ta start headin into town on Sundays. Meet me a girl at church! Plus, we're close enough and there's a school in town. I'm guessin I should be takin' all them to school. Not me, I'm too old'n don't need it anyhow. But all them.\"\n\n\"Actually, that's not a bad idea, but YOU need to be in school too. You're still young enough and I'm pretty sure Pa stopped makin' any of ya go at all. You all need it. I'll have Cal take ya all in ta see about it come Monday. They can't've gotten too far into the year yet, fall is only half done with.\"\n\n\"I know all I need to!\" Ronald whined. \"I'm old enough, I can stay and help around here and...\"\n\n\"There'll be girls your age there,\" Ryne smiled at him.\n\nThat shut him up. \"You... think any of'm'll be pretty?\"\n\n\"If they are, they wouldn't look at YOU!\" one of her other brothers yelled, laughing.\n\nThe next week, all of her brothers were spending their days at school. Call seemed to think that time was meant for them to spend doing nothing but playing and staying in bed, leaving all the work to be done later. Ryne tried to get him to let her do some washing and cooking, but he refused to let her out of his arms as long as the boys were gone.\n\nShe didn't mind it nearly as much as she pretended she did and he knew it.\n\nThey were wrapped in each other's arms just after the first snow when Cal suddenly jerked up and looked around.\n\n\"H'lo?\" came a call from the front room.\n\n\"Who's there?\" Ryne demanded, trying to find her dress around her cumbersome belly.\n\nCal didn't bother, jumping up and opening the door to look out. He scowled, then shut the door and moved to help Ryne dress.\n\nRyne looked out and her pa was standing in front of the fire, trying to warm his hands.\n\n\"What are you doing here?\" she demanded.\n\nHe wouldn't look at her, hunching in on himself. \"Farm got taken, bank sold it off.\"\n\n\"That's what happens when you don't plant any crops and don't make any money and take out loans against your house and your land. Frivol it all away to get drunk.\"",
        "\"Ain't go no place to go.\"\n\n\"Well there's no room here! We're full up to the rafters with one on the way!\"\n\n\"See that. Still. I figure ya might at least let me have a spot in the loft of the barn ta sleep.\"\n\n\"Why should we? There's no liquor here, pa. None, not a drop not ever. It ain't allowed. And there's work to be done, lots of it! All the time. That's every day!\"\n\n\"I can try'n straighten up, Ryne. I know I was lost a good while, but I see now. I lost everything, not just her. I look around and I ain't got a damn thing at all. Figure I could either put myself in the ground or start bein' a man again.\"\n\n\"You have one week,\" she snapped. \"In the loft in the barn! If you make it a week, you got one month. I mean it, you mess up and that's the end.\"\n\n\"I won't, Ryne. I wanna see my grandbabies and my kids again. Where's the boys? You send'm away?\"\n\n\"They're at school. You go get your wagon unhitched and unloaded. Your things stay out there in the barn'n I mean it! You don't get ta come in here of a day'n pester me'n Cal. Tomorra' he can show you round and what needs doin'.\"\n\n\"I promise, Ryne. I am to be a pa again and a man. Took me losin' everything, but I learned.\"\n\nRyne scowled at him, not really believing him, but she wanted to. \"Barn is out there,\" she told him, then left back to the bedroom.\n\nCal followed her and caught her arm, turning her to look up at him. Stroking her face gently, he gave her a concerned smile.\n\n\"I know... I probably shouldn't allow him in... and I'm sorry! I should have asked you!\"\n\nHe grinned and caught her in a hug, shaking his head.\n\n\"No, I should have! I...\"\n\nChuckling silently, he lifted her gently and laid her on the bed, then stroked her face lovingly. His concerned look came back and his hand slipped down to stroke over her belly.\n\n\"You worried he'd make me all upset and hard on the babe? Guess you'll just hafta keep'm outta my hair,\" she told him, grinning.\n\nHe shook his head, his eyebrows high as he leaned in close to kiss her shoulder.\n\nGiggling, Ryne pulled him into the bed with her and he let her, his eyes full of joy."
    ],
    "authorname": "gabthewriter",
    "tags": [
        "reluctance",
        "noncon",
        "romance",
        "love",
        "kidnapping",
        "period drama"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/ryne"
}