{
    "title": "The Seven Day Orgasm - Day 03",
    "pages": [
        "NOTE: This story is part three of an ongoing series. Though each chapter stands alone, please check out part one to get the full experience.\n\n###\n\nShe was putting the finishing touches on dinner. On Fridays she cooked. It was only six o'clock, and her eyes devoured the clock as if she could will it to fast forward to nine.\n\nTheir appointed hour.\n\nHe rested in the living room, sipping at a drink.\n\n\"Why don't we do it early tonight,\" she called from the kitchen with the casual deference of somebody planning to take the car for an oil change.\n\n\"Earlier, huh?\" she heard him reply. Then the creak of the chair as he rose.\n\nHe appeared in the doorway to the kitchen. She glanced over and saw his eyebrows raise.\n\n\"Earlier?\" he repeated.\n\nShe nodded eagerly, stopping almost immediately as she realized her zeal was shining through.\n\n\"Take off your clothes,\" he said.\n\nHer brain nearly exploded with glee, and she could feel herself quickening with arousal. She shrugged off the shoulder straps of her sundress and it drifted with gravity across the curves of her chest, stomach, hips, and legs as it fell to the floor. No bra. No underwear.\n\n\"I was feeling a little daring today,\" she admitted, quickly following up with: \"I just can't help myself since we started this! So how do you want me?\"\n\n\"Come here,\" he growled, giving her a come-hither motion with his index finger.\n\nShe crossed the kitchen to him.\n\n\"Bend over the table,\" he instructed.\n\nShe bent over their wooden dining table, her chest pressed against the table's surface, her ass thrust invitingly into the air. He came up behind her and pressed his palm against her right butt cheek.\n\nA yip of surprised escaped her lips when he suddenly spanked her. He did it gently, but with enough force that it lit up her nerve endings with sensation.\n\nThen he did spanked her other ass cheek. The fire from the strike went right between her legs and stoked the furnace of lust inside of her.\n\nA third spank came next. Then another. And another. Nine in total. By the end he could smell her arousal. He removed his hand from her ass after the final spank, and leaned forward to whisper in her ear.\n\n\"Nine o'clock,\" he whispered. \"And not a moment sooner.\"\n\nShe whined briefly in protest but he shushed her and crossed the room to her sundress. He looked over at the oven, where their dinner was just about ready to serve, and then back to the sundress.\n\n\"Since you're feeling so daring today,\" he began, reaching down to pick up the dress. \"Why don't you just stay naked until our appointment. I think it'll help keep you in the right frame of mind.\"\n\nShe stared daggers at him as he left the room, her dress bundled under his arm, but beneath her glare she was so worked up she wanted to squeal with delight.\n\n###\n\nAt nine o'clock she sat on the edge of their bed. Still naked. Still aroused. Thoughts of brushes dancing over her clit flitting through her mind.\n\nHe entered, her sundress in his hands and neatly folded.\n\n\"Here,\" he said, placing it on the bed next to her. \"Put this on.\"\n\nShe was a little confused, but knew better than to guess at his intent after the prior two nights. So with some hesitation she slid back into the dress.\n\nIt was the next article of clothing that really confused her. He held it in the palm of his hand. It looked like a string of pearls attached to a band of lace.\n\n\"What is it?\" she asked.\n\nHe let it dangle from his hand. Though she had never seen one, the pieces of the puzzle were beginning to fall into place.\n\n\"It's a pearl thong,\" he informed her. He gestured for her to take it.\n\nShe took the pearls from his hand and figured out quickly how it all worked. She stepped into the lace belt so the pearls were between her legs, and pulled up. As she reached the hem of her dress she let that rise with the pearl thong, giving him a view of her thighs, and eventually her pussy as the lace belt found it's home on her hips and the pearls slotted nicely into the crack of her ass and the folds of her slit. A pair of pearls rested gently against the side of her clit. She let the dress fall back into it's natural place.\n\n\"Try walking,\" he said with a smile.\n\nShe took several steps away from him, and could immediately feel it. The pearls rode back and forth with each sashay of her hips, rubbing against the length of her ass and pussy. The pearls on her clit passed over her clitoral hood like he did with the fan brush the previous night. Each step sent a shock of carnal electricity to her clit.\n\n\"I love it,\" she purred.\n\n\"Good,\" he encouraged. \"Because we're going to go out for a drink and a dance.\"\n\nA shocked look crossed her face.\n\n\"Don't worry,\" he said with a wink. \"I expect we'll only be out for about thirty minutes.\"\n\n###\n\nThe club was only a few blocks' walk from their house, but for her it felt like a mile.\n\nAs they walked, each step she took caused the pearls to shift just a little. The pearl on her anus slipped over the rim of her sphincter muscle. The four pearls cloaked in her labia rubbed frontward and backward with each passing stride. The two pearls that ran the length of her clitoral hood passed back and forth over her vulnerable mound of sensitive flesh. Her bare nipples rubbed against the smooth fabric of her sundress. And all the while, the cool night breeze tantalized her bare skin. \n\nThey arrived at the small club on the main drag of their town. After the walk her breathing was ragged, her heart raced, and her head felt light with pleasure. A small cohort of half a dozen people in semi-formal attire milled about the entrance of the club with drinks and cigarettes in their hand. Music resonated from within.\n\nHe palmed a twenty to the doorman and they slipped inside. She leaned heavily on his arm as her legs wobbled from the sensations. It was dark inside, a ten piece band working through a selection of jazz and ballroom genres while couples alternately hit the dance floor and sauntered over to the bar. It was well populated but not crowded, the patrons young but not overly so.\n\n\"Just one dance,\" he whispered to her. \"Then we'll have a drink and I'll tell you something I know that you don't know.\"\n\nHer eyebrows arched in curiosity. Desire burned through her body. The band struck up a new tune.\n\nA tango.\n\nHe led her out to the dance floor, every step sending shivers up her spine. When they reached a spare spot her took her hips and spun. They launched into practiced motion, the hours of learning the dance for their wedding having burned it into their muscle memory. Only this time, she was weak with pleasure as the pearls mercilessly teased her with every move she made.\n\nThree minutes later he led her off the dance floor, her arm thrown over his shoulder in an attempt at being casual even though it was the only thing holding her from collapsing on the floor. They took a pair of stools at the bar, and she could feel the pearls pressing into her folds as she lowered her weight onto it. She sighed in delight and the leather of the upholstered bar stool dampened beneath her.\n\nHe ordered a beer for them and she took a pull.\n\n\"So what was it you know that I don't?\" she asked in a dreamy voice. While she spoke she purposefully shifted in her seat and relished in the feeling of the pearls sliding around.\n\nHe held up his phone. In the background of the screen she could see the timer he always set during their sessions as it ticked past the fifteen minute mark. However what dominated the screen was a simple app with just a few visible buttons.\n\n\"You know the pearls you're wearing?\" he rhetorically asked. \"They're vibrating.\"\n\nHer eyes went wide.\n\nThen he pressed one of the buttons on his touchscreen and the pearls hummed to life. \n\nShe jumped, visibly, drawing the attention of the bartender and two other patrons, who quickly went back to what they were doing as she recovered into a soft gaze at her lover and a smile tweaking her face from ear to ear.\n\nThe feeling was delicate, barely more than a tickle. However she was in a hypersensitive state, having been driven into a red haze of desirous madness by the pearls shifting with her movements. Now that they moved of their own volition it shocked her like a jolt of electricity, even though the sensation was barely a whisper against her clit, along her folds, and on her anus.\n\nHer eyes began to roll back in her head and she brought her hand to her mouth. Waves of pleasure cascaded from between her legs.\n\n\"You know it's only been twenty minutes since we left the house,\" he announced. He then pressed his touchscreen again and the vibration increased.\n\nShe grabbed hold of the bar rail and opened her mouth, a feral grunt emerging from between her lips. A gasp soon followed and she could feel an orgasm approaching. She frantically tapped him on the leg.\n\n\"What?\" he teased.\n\n\"I'm close,\" she begged, her voice a hoarse whisper. He pressed the button and the vibrator returned to the lower setting. She slumped backward, leaning on the bar, and took a long pull from her beer while the pearls did their work. The subtle vibration kept her close but didn't bring her over the edge.\n\nHe flipped the setting back to higher power and a sharp \"fuck\" escaped her mouth as she grabbed his thigh in a death grip. The buzzing pearls brought her quickly to the edge and she closed her eyes.\n\n\"Hold it,\" he said conversationally. \"C'mon. You're going to have to handle a lot more vibration than these wimpy things if you're going to make it through this week.\"\n\nShe peeked open an eye and ventured a look around. Shockingly, she hadn't drawn any new attention, but it amazed her to see just how wantonly she was slumped, panting, legs spread, nipples erect and clearly outlined by the sundress. She managed to straighten a little in her seat, but the act of leaning forward put her body weight further onto the pearls, pushing them harder against the side of her clit.\n\nShe groaned in pleasurably agony, leaned onto the bar, and felt the orgasm begin to wash over her.\n\nAnd everything stopped.\n\nThe pearls clicked off. The orgasm faded before it finished coalescing into reality. The song the band was playing winded down. Her beer was empty. And he was holding the phone in her direction, the timer reading 0:00.\n\n\"You can peel the pearls off in the bathroom,\" he said with a nod in the direction of the lavatory. \"If you can manage to get there.\"\n\nShe exhaled deeply, steadying herself, and cast a glare in his direction.\n\n\"Nah,\" she replied, standing up and taking a quick glance around the bar area. \"I'm feeling a bit daring today.\"\n\nShe gave him a devilish grin and shimmied up the hem of her dress, the middle still falling to cover her ass and pussy, but the sides riding high enough to reveal the lace waistband of the pearls. She slipped her fingers under the lace strap on either side and pulled them over her hips so they slipped effortlessly to the floor. \n\nWith her left foot, she kicked the pearl thong up into her hand and presented it to him like a general surrendering her sword.\n\n\"To be continued,\" she sighed.\n\n \n"
    ],
    "authorname": "Racontica",
    "tags": [
        "dancing",
        "edging",
        "exhibitionism",
        "orgasm denial",
        "pearl thong",
        "tease",
        "tease and denial",
        "vibrator",
        "voyeur"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-seven-day-orgasm-day-03"
}