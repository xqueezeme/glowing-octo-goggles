{
    "title": "Seven Days Ch. 08",
    "pages": [
        "Jimmy sat patiently on the couch in Nic's office as Nic dialed Victoria again. The first time she didn't pick up. Jimmy tossed another pecan in his mouth and wiped his hands. He and his wife were supposed to be going to dinner with the new couple as soon as Victoria got off work. He glanced back over at Nic and waited.\n\n\"There you are. What time do you think you'll be here?\" Nic asked.\n\nJimmy watched as Nic's brow furrowed.\n\n\"What do you mean, you don't know? I thought you were going to leave early?\" he questioned. \n\nNic slowly sat down, and Jimmy saw a blank expression come across his features. Something Nic was hearing was obviously a problem of some kind. \"Victoria...what happened?\" Nic asked.\n\nThen Nic's face turned white. Pale white. Jimmy rose and walked over to the desk. What the hell was going on? Nic leaned over the desk and covered his face with his hand as he listened to whatever Victoria was saying. \n\n\"Are you okay?\" Nic asked Victoria, as he glanced up at Jimmy, who mouthed 'What's wrong?', but Nic didn't answer. He just told Victoria he'd be there in a few minutes and hung up the phone. But now that pasty tint that had covered his features was slowly fading away...or actually turning into a bright scarlet color while his breath quickened. \n\n\"Nic, what happened?\" Jimmy asked, staring at the unreadable expression on Nic's face. It wasn't often that Jimmy couldn't read his best friend. \"Is Victoria okay?\"\n\n\"Someone shot at her,\" Nic quietly said, as he grabbed his keys from the desktop. \"Someone shot at...\" He heard Nic whisper again, but more to himself. \n\nJimmy watched closely, as Nic stood there for a moment, bracing his knuckles on the desk so hard that all the color was draining from them.\n\n\"Nic?\" Jimmy softly said, before everything on Nic's desk went flying off to the floor in a loud crash. \n\n\"Mother\u2014fuckers!!!\" Nic yelled, as he rushed around his desk and out of the office. Jimmy ran after him trying to keep up, as Nic took the steps four at a time.\n\n\"Raymond! We have to go!\" Jimmy hollered over his shoulder, as Nic tore out of the front door.\n\nRaymond quickly dropped his plate of food and ran out of the kitchen, no questions asked.\n\nNic couldn't breathe. They shot at her?! Someone actually fucking shot at her?! Tried to kill her?! He was trying his best to keep cool. Half of his brain was telling him to remain calm, get to the restaurant, assess the situation and go from there. The other side of his mind was racking up anyone one who had ever crossed him so he could kill them. Painfully.\n\nRaymond had slipped behind the driver's wheel of the Escalade, while Nic was in the passenger's seat and Jimmy in the back. When they pulled out onto the road, heading toward Calamity's, Jimmy asked, \"What are you thinking, Nic?\"\n\nNic didn't answer. His mind was still racing. He had to gain control and get his mind focused.\n\n\"Nic, you do realize that place is going to be swarming with cops, right?\" Jimmy asked. He sighed when Nic didn't answer. Nic just continued to stare ahead through the windshield.\n\nRaymond slowed down as they pulled up on the opposite side of Calamity's, to an onslaught of black and white police cars. \"Nic, I'll go. There's no point in risking it,\" Jimmy suggested, as he opened up his door.\n\n\"No. I'm going,\" Nic stated, looking around for Victoria.\n\n\"Nic, I know you're upset, but\u2014,\" Jimmy started, before Nic interrupted.\n\n\"Upset, huh?\" Nic said, as he continued to stare out of his window looking for the object of his affection. \"I don't think upset covers what I'm feeling right now, Jimmy.\" When he finally spotted Victoria, he got out of the car and slammed the door.\n\n\"I told you, I'm not sure. I didn't see the car. I dropped my phone and was looking down when I first heard the shots,\" Victoria recounted for the third time to a different cop. She was exhausted, shaken and just wanted to be with Nic.\n\n\"I understand you're tired ma'am, but we need to get this information while it's fresh on your mind. Now can you tell me again what time you were walking out of the restaurant,\" the police officer asked, while looking down at his notepad.\n\nVictoria sighed. \"I think it was\u2014\"\n\n\"Are you okay?\" Nic asked, as he spun her around and glanced over her body as if she needed medical attention. Victoria immediately latched onto him wrapping her arms around his waist and burying her head into his chest. Her whole body began to shake and she started sobbing. He pulled his coat open, and encased her inside with him as he kissed the top of her head several times. She knew her tears and makeup were probably ruining his expensive shirt, but she just couldn't let go.\n\n\"Nicolas Andretti the fourth...long time, no see,\" Nic heard a familiar voice say. Fuck. He turned around to see his suspicions confirmed. Detective Marsh was staring at him with that damn smug smile that Nic always wanted to knock right off his face. Marsh had been promoted the day Nic's father died. He remembered seeing him standing in the distance at his father's private funeral. The bastard had been following him closely throughout the years and just never seemed to really go away.\n\n\"Marsh,\" Nic stated dryly.\n\nVictoria sniffled and peeked her head out from under Nic's coat. She wanted to see who this Marsh guy was. He was a skinny man who had blond hair, but was graying. And prematurely from the look of his young face.\n\n\"Hi miss...?\"\n\n\"Her name is Victoria Davis, sir,\" the police officer who had been questioning her said.\n\n\"Miss Davis. How do you know my good friend, Nic?\" Marsh asked, smiling down at her.\n\nVictoria didn't know much about what Nic did, but she wasn't about to open her mouth and tell this man anything. But luckily she didn't have to. Nic started guiding her towards his car.\n\n\"Hold up a second Nic, we weren't done questioning her,\" Marsh said.\n\n\"Yes you were,\" Nic said over his shoulder.\n\n\"Don't forget who you're talking to, Nic. Wanna take a trip downtown?\" Marsh warned.\n\nNic stopped and turned toward Marsh. \"You want to try?\" Nic countered, staring the man down.\n\nVictoria wasn't sure what to do. She sure as hell didn't want to get on any cops shit-list, but Nic appeared to be done with the conversation. She glanced back and forth between the two men, while trying to wipe her eyes and nose.\n\nDetective Marsh's smug smile reappeared. \"Well, I guess there's no reason to--if you haven't done anything wrong, now is there?\" he said.\n\nNic turned back around and ushered Victoria across the street, towards the Escalade. \n\n\"Don't go too far Miss Davis. I'd still like to ask you a few questions regarding the incident today,\" Victoria heard Detective Marsh ask in the distance.\n\nJimmy had transferred to the front seat, while Nic opened the door and guided Victoria into the backseat. He held her close to his body, with his arms wrapped protectively around her. But no one said a word. Raymond rarely ever said much of anything. Jimmy wasn't sure what to say. Victoria was too tired to utter another word and Nic was too busy thinking about what his next step was to talk to anyone. So they traveled in silence all the way back to Nic's house.\n\n*****************\n\nVictoria winced in pain from trying to pry her puffy eyes open. She sat up in Nic's bed and pushed her wild curls from her face. She glanced at the night stand for the time. 10 pm. She sighed. All the images from earlier that day came flashing back. The loud noise, screams and shattering glass. She was praying that it was just a nightmare, but she knew that wishful thinking was all in vain. But just as suddenly as those visions had come, Victoria couldn't breathe. She quickly grabbed her chest and forced herself to take deep gulps of air to calm her breathing.\n\nShe finally composed herself, walked out of the room and down the long hallway. When she reached Nic's office door she was about to knock when she heard Nic's voice, more animated than she had ever heard before. She cracked the door open and saw Jimmy and Nic arguing.\n\n\"Nic, all I'm saying is you don't know for sure that Sonny did this. It could have been a number of people,\" Jimmy said.\n\n\"No. I know it was him,\" Nic declared, with his hands locked behind his head as he paced back and forth. Victoria observed him. He too, looked exhausted.\n\n\"But what if it wasn't, I mean--,\"\n\n\"It was,\" Nic contradicted.\n\n\"But--,\"\n\n\"They shot at her, Jimmy! They fucking mowed down the front of her workplace to get to her. If you think I'm going to let them have a second chance, then fuck you,\" Nic said, walking around to his desk. He sat down and laid his forehead against the cool, flat wood.\n\n'Shot at her?' Victoria thought. What the fuck? It was a drive-by shooting, they weren't targeting her. Why would someone want to kill her? Victoria remained silent, listening outside the door.\n\n\"You see, that's what I mean. You said 'they'...who's 'they', Nic? You have to be certain before you go accusing another mob boss's son of something like that. Just use your head.\"\n\nVictoria pushed the door open and walked in.\n\nNic glanced up at the door when Victoria entered. Her eyes seemed weak and still glassy from her crying herself to sleep.\n\n\"Nic, Jimmy's right. Those people could have been aiming at anyone. I mean, they shot at the entire restaurant,\" Victoria said, glancing back and forth between both men.\n\nNic sighed and smiled up at her. \"How did you sleep?\"\n\n\"Alright. Are you okay?\"\n\n\"Not really,\" Nic answered honestly. \"How about you go grab yourself something to eat and let Jimmy and I finish up here. I'll join you in a moment.\"\n\n\"But Nic, I probably should call that guy back, the police officer that was asking all those questions,\" Victoria suggested. She watched as Nic just shook his head.\n\n\"No, I'll take care of this. You gave your statement and you're done. You don't remember anything else as far as they're concerned, okay?\"\n\nVictoria placed a hand on her hip. \"What do you mean you'll take care of it? I'm sure the police will find the people in no time.\"\n\n\"I don't want the police to find the people. I want to find them so I can question them myself. Ask who hired them.\"\n\n\"What? Nic, leave this to the cops. Let them do their jobs.\"\n\n\"Victoria\u2014go eat. I'll join you later,\" Nic commanded.\n\n\"Nic, I\u2014\"\n\n\"Victoria! End of discussion,\" Nic said, narrowing his eyes at her. She just didn't understand that he didn't want her involved in this any more than she already was.\n\n\"No, don't start that with me. It's NOT the end of the discussion! What are you planning to do?\" Victoria asked.\n\nNic sighed. \"Victoria, the less you know about me and what I do, the better for you. You can't give anyone any information if you don't know it, now can you? And that's the way I want to keep it. I don't want you getting in trouble or having to lie for me.\"\n\n\"Do you really think it was Sonny?\"\n\n\"Yes,\" Nic answered. He heard Jimmy exhale noisily.\n\nNic got up from his desk and walked over to Victoria. She was standing there staring at the ground and shaking her head.\n\n\"I don't understand,\" she whispered to him, before he leaned down to capture her lips.\n\n\"I need you to do something for me,\" Nic said, sliding his hand through her thick curls. She looked up at him, her eyes already starting to glass over again.\n\n\"I need you to go away for a little while. Just a short time until I can get all of this handled.\"\n\n\"No.\"\n\n\"Yes.\"\n\n\"No!\"\n\n\"Victoria, I'm not asking you. I'm telling you.\"\n\n\"I don't want to leave you. Plus, I have a job. The insurance company is fixing the windows tonight, so we are returning to work tomorrow.\"\n\n\"No, you're not. I'll talk to your manager and--,\" Nic tried to say, while Victoria shook her head back and forth like a child.\n\n\"No, I'm not going to let someone scare me into--,\" Victoria started, until Nic grabbed her head with both of his hands and forced her to look up at him.\n\n\"This isn't a fucking game, Victoria. This is real. This is serious. This hit was set up to look like gang violence. But trust me, this wasn't some gangbanger with a grudge. And I can't think straight if I'm worried about your safety every second. Your bags should be arriving her in a few more minutes, then you leave.\"\n\n\"What? My bags?\"\n\n\"Yes. I didn't want you going back to your apartment to do it, so I had Minka and Raymond pack you some clothes. Jimmy will escort you to another location,\" Nic said.\n\nVictoria pushed herself from Nic's grasp and back toward the door. \"When did you do all this? And what made you think I was going to go?\"\n\n\"While you were sleeping and I knew you would be going because it was never going to be a negotiation,\" Nic stated matter-of-fact.\n\nVictoria scoffed. Perhaps he had a point, but this was all happening too sudden. Her life was being uprooted for what could possibly be nothing at all. Maybe she could play the emotional card. \"But I love you and I don't want to go.\"\n\n\"I love you too, and that's the only reason I'm sending you away. Trust me, it will make sense when you get there,\" Nic said. He quickly glanced down at his cell phone and then back to Victoria. \"Raymond's here. It's time for you to go.\"\n\n******************\n\nIn the car ride on the way to...well, wherever she was going, Victoria thought of her morning. She had woken up, had a big bowl of cereal and then went into work. Never in a million years would she have thought her day would turn out this way. One minute she's separating the marshmallows from the other bits of cereal in her bowl, the next she's caught in the middle of some mob war. Life was indeed strange. Jimmy had told her to go to sleep if she could, because they had a long way ahead of them. Her eyelids were heavy, and although she protested, she was asleep in no time.\n\nJimmy glanced in his rearview mirror at Victoria. She had her head resting against the window and her eyes were shut. She was definitely a beautiful girl. And one of the sweetest people he had ever met. He really hated that she was going through this and he couldn't imagine what Nic must be feeling. No one had ever tried to hurt Jimmy's family. Ever. He hoped that Sonny wasn't involved. Because if he was, that would mean Paul Marcone would have to get involved, and this would be the beginning of something truly ugly.\n\nAfter a few more hours of driving and one gas stop, Jimmy turned onto the familiar street that led to an iron gate. He punched in the code and drove down the long driveway.\n\nVictoria's head bobbled against the glass, waking her up. She quickly wiped her eyes as she stared out of the window. Everything was pitch black except for a faint light above the door of a two-story house. \n\nJimmy parked the car and hopped out to open Victoria's door.\n\n\"Where are we?\" she asked, right as the front door opened. \n\nOut stepped a thin, beautiful woman with a nice tan. She had long wavy black hair and a wide smile. Victoria turned to look at Jimmy, but he was getting her bags from the trunk. She tried to go help him, but he pushed her toward this beautiful stranger. Victoria sighed and cautiously walked closer, when she noticed bright blue eyes. Eyes she'd seen a million times. 'Oh my God,' Victoria thought. This was Nic's mother. No doubt about it. Victoria immediately became nervous. She quickly smoothed her shirt down, trying to look somewhat presentable after hours asleep in a car. \n\n\"Oh my God, Jimmy, look at her! She's beautiful!\" the smiling woman said, while staring in Victoria's direction. 'Well, that's a promising start,' Victoria told herself, as she moved closer to the house.\n\n\"Hi Victoria, I'm Nic's mother, Marianna,\" she said.\n\n\"Hi Mrs. Andretti, nice to--,\" Victoria said, before she was ambushed with a huge hug.\n\n\"Oh, don't you dare start with the Mrs. Andretti crap. It's Marianna, you hear!\" she said, squeezing Victoria tightly. When she finally released her hold, she scooted Victoria into the house, almost closing the door on Jimmy.\n\n\"Jeez, Marianna. What am I, chopped liver?\" Jimmy joked, as he placed the bags on the floor and quickly hugged her.\n\n\"Oh, you know I love you. I'm just so excited to finally meet her. I mean, I hate it's under these circumstances,\" Marianna admitted, shaking her head. \"But even still, I'm so glad you're here,\" she said looking in Victoria's direction.\n\nVictoria wasn't quite sure what to do, but she was making a mental note to herself to curse Nic out for not warning her that she'd be meeting his mom. \n\n\"Well, I guess I'm glad to be here\u2014I mean I'm glad to meet you,\" Victoria said, nervously looking around. \n\n\"And you must be hungry. How could you not be? Come,\" Marianna said, winking her eye, as she quickly marched down the hallway.\n\nVictoria followed Marianna to the kitchen. \"Can I help you with anything?\" Victoria asked, looking around the large designer kitchen that looked as though it belonged on some fancy cooking show.\n\n\"Absolutely not! Sit down and rest yourself. My Nic says you're a waitress. That means you spend all day serving people...well let me serve you. Jimmy, get in here!\" Marianna yelled in a slightly Italian tinged Northern accent, while opening the fridge and removing several dishes.\n\n\"I'm coming, I'm coming,\" Jimmy yelled, bursting through the kitchen doors. \"Now you see where Nic gets it from,\" Jimmy whispered to Victoria. She covered her mouth and tried not to laugh.\n\n\"Isabelle and the children are well, si?\" Marianna asked, as she warmed up two plates packed full of food.\n\n\"They're good. I have her staying at her mother's until all of this blows over,\" Jimmy answered.\n\nVictoria looked at Jimmy. His wife and kids were hiding out too...all because of her? And now Nic's mom was having to take her in. She felt like shit. She tried to stop the first two tears that dropped, but then she couldn't quiet her soft sob. She felt Jimmy squeeze her hand. \"It's okay, Vicky.\"\n\n\"Why are you crying, cara mia?\" Marianna asked, rushing to Victoria's side, placing her arm around her.\n\n\"I'm sorry\u2014I just\u2014I didn't mean for this to happen. I feel like I'm imposing on you, and Jimmy had to send his family away\u2014all because of me. I feel awful,\" Victoria admitted, trying to wipe away her tears.\n\n\"Don't you dare feel that way! This is not your fault. Not at all. You can't help the fact that there are crazy people in this world,\" Marianna said, grasping her tighter.\n\n\"It's not your fault, Vicky. And no one is blaming you,\" Jimmy added. He glanced down at his vibrating cell phone. \"Oh shit.\"\n\n\"Che cosa?\" Marianna asked, walking back to the kitchen to retrieve their food.\n\n\"I forgot to call Nic to tell him we had arrived,\" he exhaled. He clicked open the phone. \"Hey--yeah, we're here, I forg\u2014I know, I know, I'm sorry. But we're here now--yeah, hold on,\" he said as he passed the phone to Victoria.\n\n\"Hello?\" she said, wiping at her tears. \"Are you okay? Why are you crying?\" Nic rushed out. \n\n\"Yes, I'm fine. I just feel bad that everyone is having to do things because of me.\" \n\n\"That's not your fault,\" she heard him say.\n\n\"I know, your mother already said that.\" \n\n\"I love you, get some rest and pass the phone to my mom,\" Nic said.\n\n\"I love you too,\" Victoria whispered, before she passed the phone to Marianna. \"He wants to speak with you.\"\n\n\"Mio figlio!\" Victoria heard Marianna say, as she walked back into the kitchen, and proceeded to talk to Nic in Italian. So much for eavesdropping. \n\n\"How long do you think I'll have to be here, Jimmy?\" Victoria whispered.\n\n\"I'm not sure. Hopefully no more than a few days. Why, is Marianna already getting on your nerves,\" Jimmy smiled.\n\n\"No! No, I mean, she's great as far as I can tell. She's so friendly. It's just that I miss Nic already. And I'm sure you miss your family.\"\n\nJimmy patted her on the back. \"It should only take a few days to get everything sorted out, and then it should all go back to normal.\"",
        "\"Jimmy! Get in here..per favore!\" Marianna yelled from the kitchen. \"Nic wants to speak with you again.\"\n\nJimmy laughed. \"I love that woman,\" he said, before he hopped up and walked further into the kitchen.\n\nAfter dinner Victoria could hardly keep her eyes open. She felt like she had already slept most of the day away, but her eyes just couldn't stay open any longer. Marianna showed her to the room she'd be staying in, and Jimmy brought up her bags. Marianna gave her another hug, said goodnight and walked out of the room. As if on cue, Victoria fell back on the bed and stared up at the ceiling. After a few minutes of reflection, Victoria closed her eyes and fell into a deep slumber.\n\n****************\n\nNic didn't sleep at all. He sat at his desk sketching, trying to calm his nerves. He knew he couldn't make a move until he got a few more answers, but his gut along with years of experience knew that Sonny was behind this shooting. He never trusted him, even when they were kids. He glanced at the clock. It was already four in the morning. He wanted so badly to call Victoria, and just hear her voice, but he didn't want to wake her up. \n\nNic was about to start on a new sketch when he heard his stomach rumble. He couldn't even remember the last time he had eaten. He walked down to the kitchen and poured himself a large bowl of Victoria's sugary cereal. He normally didn't eat things like this, but in some weird, childish way he felt he was closer to her by doing so. He took a big bite and surprisingly, it was pretty good. He stared down at his bowl as he thought about what steps he had to take next. He needed to call favors in on some people around town who always had their eyes and ears open.\n\n\"Nic, mind if I join you?\" he heard Antonio ask from the kitchen door.\n\nNic kicked out the chair beside him for his answer.\n\nAntonio walked in and grabbed a bowl of cereal for himself as well. He sat down in the chair that Nic had offered and took a few bites of cereal as the two of them sat in silence.\n\n\"This whole thing is crazy, huh?\" Antonio asked, not being able to stand the quiet.\n\nNic just stared straight ahead while taking another big bite of cereal.\n\n\"I remember the first time I met her. She was at your party\u2014in that red dress. She seemed so out of place,\" Antonio laughed. He turned to Nic and noticed his expression hadn't changed.\n\n\"I mean in a good way. Well, I mean, not that your guests are bad, but\u2014well, she just seemed different,\" Antonio tried to quickly correct. When Nic didn't respond, Antonio exhaled and continued to eat his food. He was slowly learning what Nic did and didn't like. And apparently him talking was one of those things Nic didn't like.\n\nAntonio swallowed another bite and was about to take his food elsewhere, when he heard Nic speak.\n\n\"She really pissed me off that night she left with you.\"\n\nAntonio looked at Nic. \"I know, I'm sorry about\u2014\"\n\n\"I think that was the first time I realized I felt\u2014that my feelings were crossing over the 'business' line. I had asked her to leave that night,\" Nic continued.\n\nAntonio sat back down, not really knowing if he should say something or not.\n\n\"But of course she had to run her mouth, and I just couldn't let her go after that,\" Nic admitted with a smile, remembering that night vividly.\n\nAntonio gave a nervous laugh also. \"Well, hopefully after all of this blows over, everything can go back to normal. She's had a very crazy year. And can you believe her dad? What an asshole, huh?\" \n\n\"What do you mean?\" Nic asked, placing his spoon back in the bowl.\n\n\"You know, with the way he treated her and everything,\" Antonio said, taking another large bite. He looked over at Nic and stopped mid chew. Fuck! He quickly swallowed. \"Oh man, I thought she told you. You probably don't want to hear about all that stuff now.\"\n\n\"Told me what? What did her father do?\" Nic asked, sliding his bowl away and sitting straight up.\n\nAntonio shook his head. He just HAD to open his big, fat mouth. \"Nic, she should probably be the one to tell you this,\" he said trying his best to back his way out of this admission.\n\n\"I'm asking you. What did her father say?\"\n\nAntonio knew he had no option now. Shit. \"He...um, he called her some names and then kicked her out of their apartment.\"\n\n\"Like what?\" Nic continued.\n\nAntonio really didn't want to tell Nic. Victoria was going to kill him for even bringing this up. What a big fucking mouth he had.\n\nAntonio exhaled. \"Well basically he called her a whore and a slut and said he didn't want her staying in their apartment because she had...um, well slept with you to clear their debt. And then he kicked her out,\" Antonio answered, lowering his head. This was all a personal matter, and really none of his business.\n\n\"So then she went to your house,\" Nic said, staring at the side of Antonio's face. Nic wasn't sure if it was the fact that his girlfriend's life had been threatened and now he was separated from her, and hearing Antonio tell that story on top of it all, but he was furious. He wanted to fucking break something...or shoot something. After all this blew over, he was paying her father a visit. \n\nNic stood up and stretched. His body hurt, even up to his teeth. He walked out of the kitchen without another word to Antonio. He had to get rid of this energy. It wasn't a nervous energy, but more of an adrenaline rush he kept feeling. Anticipating when the shit was going to hit the fan. He walked up to his bedroom and changed into a loose shirt and workout pants. He had to run...anything to keep from getting in his car and fucking up Sonny Marcone.\n\n*****************\n\nThe next morning, Victoria awoke with sunlight streaming down on her. She wiped her eyes and walked to the window and peered through. Her mouth dropped wide open. All she could see was plush green land, a creek and several horses. She saw a stable in the distance and a few other animals. This was a ranch. She had never been to a ranch before. She ran into the bathroom to take a quick shower.\n\nWhen she was done, she finally opened her suitcase. 'Damn Minka,' Victoria thought, as she rummaged through all of the short, tight designer clothes Minka had picked out for her. Nothing in her bag even remotely looked comfortable. But at least she had packed her Converse for her. She put on a cute shirt and skirt, and pulled her hair back into a ponytail.\n\nVictoria walked downstairs, to find Jimmy and Marianna sitting at the kitchen table laughing and sipping coffee.\n\n\"Good morning!\" Marianna said in a cheery tone, getting up to give Victoria another bone crushing hug and kiss. \"Did you sleep well? Tell me the truth? If you were not comfortable, I can get another mattress.\"\n\n'Another thing Nic gets from his mother,' Victoria thought with a smile. \"No, I slept wonderfully. I guess too well, since you guys were up way before me,\" Victoria said, pulling her hair back into a ponytail.\n\n\"Nonsense! You had a very difficult day yesterday. You deserved your rest. Did you miss Nic?\"\n\n\"Um, yes, I did.\"\n\n\"You are so in love with him, si?\" Marianna asked, with a huge smile on her face.\n\nVictoria looked over at Jimmy, who was trying to hide his smile behind his coffee cup raised to his lips.\n\n\"Yes. I am.\" Victoria simply stated, as she grabbed a cup of coffee. \"Marianna, do you mind if I look at some of the photos you have in the living room?\"\n\n\"Go ahead. I have a beautiful family,\" Marianna said, filling Jimmy's plate with what was easily two pounds of food. \n\nVictoria smiled as she grabbed her cup and walked into the living room. Modesty didn't run in the Andretti family either. She walked over to a stand where she saw some black and white pictures of Marianna when she was younger. She was absolutely stunning. Her hair was pinned back in a prim and proper way and she was wearing a floral dress with what now would be considered vintage high heels. She had a huge smile on her face as she stood holding a tall man's hand. Victoria could only assume that this was Nic's father, Nicolas Andretti III. He was definitely handsome. Actually, other than Nic's eye color, which he took from his mother, Nic looked just like his dad, including the cold stare and lack of expression. \n\n\"That's my late husband,\" Marianna said behind Victoria. \"Good business man. Not the best husband and father, but he tried. Some men are good family men, some aren't. But he always made sure we were provided for.\"\n\n\"And you have five kids?\" Victoria asked, turning around to look at Marianna.\n\n\"Yes, four boys and one girl. She's the baby,\" Marianna said, as she grabbed a picture of her children when they were all young. She handed it to Victoria. She spotted four different young men and a young girl. They all had jet black hair. Only Nic and the younger girl shared the same eye color as Marianna. The other boys had darker, brown eyes. In the picture two of the boys and the girl were standing on steps in front of a house, and two other boys, one being Nic, were sitting on the steps.\n\n\"This one is Marcus, he's the oldest,\" Marianna said. Victoria stared at the young man that Marianna had pointed at. He was just a tad overweight and he looked miserable, even though he was smiling. He wasn't as handsome as Nic, but he could be more pleasing to the eye, if he didn't look like it was killing him to smile.\n\n\"He's a police officer in Chicago. He divorced a few years back, and is now married to his job.\"\n\n\"He's a cop? How does that work with, well--Nic and his occupation?\" Victoria asked, trying to tiptoe around the sensitive subject.\n\nMarianna laughed. \"It doesn't, that's the problem. Those two barely have a civil word to say to each other. Anyway, this is Vincent, he's two years older than Nic. He's a principal at a high school and married. He's the only child of mine that's given me grandchildren. Two girls, seven and four. I don't get to see them much,\" Mariana said with a sigh. \"They live so far away and don't make it up here to see me, but I get pictures all the time.\" Vincent was much shorter than his older brother, Marcus, but at least his smile was pleasant.\n\n\"Two grandchildren, that must be nice,\" Victoria added.\n\nMarianna elbowed Victoria. \"You and Nic could give me more,\" she said, staring at the next child in her photo. Victoria started to say something, but then decided against it. Marianna was definitely more forward than she was used to. Nic never opened up about anything, yet his mother couldn't stop talking. But she enjoyed someone who could finally give her some more insight into Nic's personality.\n\n\"Um, how old was Nic in this picture?\" Victoria asked, looking at Nic and the other young boy who was sitting on the steps with him.\n\n\"Hmm, I think he was seventeen or eighteen in that picture. I think that was the last time I had all of my children in the same place. Now I can barely get two of them in the same room together.\"\n\nNic was an extremely handsome teenager. Not as physically overpowering as he was now, but the same handsome face and long limbs. He was the only one in the picture not smiling, but the young boy beside him was grinning brightly and had his arm resting on Nic's shoulder. He was handsome too. Probably the second best looking of the boys, Victoria thought, secretly rating her man next to his brothers. Nic being first, of course.\n\n\"And who's the one sitting with Nic?\"\n\n\"That is Bobby,\" Marianna said, with a sadness laced in her voice. \"He was killed shortly after his twenty-first birthday.\"\n\nVictoria sucked in a gasp. \"What? Oh, I'm so sorry!\"\n\n\"It was hard on all of us. Bobby was so charming and friendly to everyone. He and Nic were really close since they were only a year apart. I guess it was the whole, opposites attract. He and Bobby's personalities were nothing alike, but they got along the best.\"\n\n\"Do you mind if I ask what happened?\" Victoria asked.\n\n\"Bobby had a gambling problem. He would borrow money, gamble it away and then try to talk his way out of it. He borrowed from the wrong people one day, and...well, he went missing.\"\n\n\"Oh my God, I know that must have been torture,\" Victoria said, as they both walked over the couch and sat down.\n\n\"It was. He was missing for two months. I remember my Nic saying, 'Don't worry mama, I'll find him'. You see, we didn't know if something had happened to him, or if it was the drugs. He had gotten hooked on some bad things and would disappear. He didn't want us to see him like that. But he'd always come back clean and sober with a big smile on his face. I miss that smile,\" Marianna said, staring at Bobby's picture. \"But then I got a call from my husband saying that his body had been found. Actually, his head had been found, but the rest of his body didn't wash ashore until weeks later.\"\n\nVictoria thought she was going to be sick. She had heard of several missing people's stories that ended in tragedy like this. Even the ones that made national TV, but to know of someone who actually went through it--a mother who had to know her child's body was dismembered, is something quite different. She didn't even know what to say. She felt tears rush to the corners of her eyes.\n\n\"Nic went with my husband to identify what was left of the body. Neither one would talk about it. But I was a complete mess after that.\"\n\n\"God, I can't even imagine,\" Victoria whispered.\n\n\"About a month after we buried Bobby, the guy that Bobby had borrowed the money from went missing. And that's when the police came snooping around here. But in my husband and son's business, I don't ask questions. And a part of me was relieved that some justice had come from my son's death. I know it's not right, but when you lose a child, you don't think rationally.\"\n\nVictoria thought about the fact that Nic could make people disappear. It sent a shiver up her spine. And not because of what he could do, but the fact that he could be caught. And that was a new line of thinking for her. \n\n\"And this is Juliet, my baby girl. She's a spunky one,\" Marianna said with a smile. \"She travels a lot. She never spends more than a few months to a year in any place. Right now she's backpacking through Europe for the third time with her new boyfriend. And from there she said they plan to settle down for a year somewhere in Australia,\" Marianna said, rolling her eyes. \"I love her to death, but I told her to settle down and find a husband. I'm not getting any younger...and speaking of that, do you want babies?\" Marianna asked.\n\nVictoria almost choked on her coffee. \"Um, I would like to have children some day. I'm not sure--\"\n\n\"\u2014how many do you want?\" Marianna interrupted.\n\n\"Oh, well I'm an only child, so I guess one.\"\n\n\"What?! One! No, Nic's Italian...he's not going to do just 'one'. Nope. You need four or five to have a good size family, you know,\" Marianna said.\n\n\"Well, I don't think Nic wants kids in his line of work,\" Victoria said.\n\n\"Oh, tush, he'll want babies. They all do in the end\u2014to pass on their genes or seed or whatever. I can just imagine! You two will have beautiful children! I can't wait,\" Marianna said, hopping up and walking to the kitchen. Victoria just smiled and shook her head. She continued looking at the photos around the house. She spotted several of Jimmy, Nic and Bobby when they were young. The three of them together looked so devilish. Jimmy was handsome as well and about fifty pounds lighter. Isabelle's cooking must have gotten to him right after they married.\n\nVictoria walked back into the kitchen and almost dropped her cup when she saw Jimmy cleaning his gun on the kitchen table. \n\n\"Hey, Vicky. I'm going to run into town for a few things, I'll be back in about thirty minutes, okay?\" He asked, spinning the cylinder and then locking it.\n\n\"Uh, su-sure.,\" Victoria stuttered. Jimmy smiled, placed the gun behind his back and walked out of the kitchen.\n\n\"Okay, I don't think I'll ever get used to that,\" Victoria admitted to Marianna.\n\n\"Unfortunately it's a necessary evil in their business. So--are you opposed to having a traditional Catholic wedding? Oh, are you Catholic?\" Marianna asked, sitting down at the table.\n\n\"Um, no. I'm...uh, my folks didn't attend church regularly, but I think we were Methodist.\"\n\n\"I told my children that when I become a grandmother, I want only two things. One, I'd like for my grandchildren to be Catholic. And two, I'd like for my grandchildren to learn Italian. Are you opposed to either of those things when you and Nic have children?\" Marianna asked hopefully.\n\nVictoria quickly shook her head. It didn't matter to her, just as long as they were healthy.\n\n\"Good! You are amazing, you know that? I'm so glad he got rid of Amber. I only met her twice, and that was too much. She was loud and obnoxious and I have no idea why Nic married her. But I see he came to his senses.\"\n\nVictoria laughed. Marianna was just too much. How was she so open and playful when Nic was so serious all the time? He must have taken after his father in that respect. But Victoria didn't want to disappoint Marianna. She obviously thought her relationship with Nic was at the level of marriage and kids, but Nic had made it obvious that he wasn't ready for either of those things. So Victoria changed the subject.\n\n\"You have beautiful horses, Marianna,\" Victoria said, walking to the sliding glass doors that led to the back yard from the kitchen. \n\n\"Thank you. Want to meet them?\" she asked, wiping her hands off.\n\n\"Sure. I'd love to,\" Victoria said. She had never actually touched a horse before...or seen one up close. She was definitely experiencing a lot of new things with the Andretti family.\n\nThey walked outside to the stables and Marianna pointed out each horse, giving her their name and a brief history. When they came to the last stall, a huge pitch-black horse came to the door and stuck its head out.\n\nMarianna reached out to touch it. \"And this beautiful horse is Victoria.\"\n\nVictoria giggled at the fact that they shared the same name. But the horse was absolutely beautiful. She may not have known much about horses, but this one seemed special. Unique among the others.\n\n\"You can touch her, she's very kind,\" Marianna said.\n\nVictoria reached out to rub the side of the horse's face. She was incredibly soft, and had long eyelashes that lined dark, soulful eyes.\n\n\"She's stunning,\" Victoria whispered, almost in a trance. \"When did you get her?\"\n\n\"Nic bought her for me a few months ago. And she's named after you.\"\n\nVictoria glanced over at Marianna, who was beaming from ear to ear. \"What?\"\n\n\"A few months ago, he bought her for me, and I just thought she was the most beautiful horse I had ever seen. But he made me promise that I would name her Victoria. I didn't ask any questions, but I knew something was different.\"\n\n\"Nic can be\u2014very surprising at times,\" Victoria said, shaking her head. She thought Nic had hated her months ago.\n\n\"Yes he can be. You know...he told me how you two met,\" Marianna said, feeding the horse pieces of hay.\n\nVictoria's head jerked up. What?! No...he didn't. \"He told you what?\"\n\n\"I know the whole story. The arrangement...everything,\" Marianna said, glancing over at Victoria.\n\nVictoria outwardly groaned and dropped to the ground. \"Oh God, you must think the absolute worst of me. Oh my God, how embarrassing,\" Victoria whispered. She covered her face and cursed.\n\nMarianna dropped down in front of her and gently pulled her hands away from her face. \"Don't you dare cover your face in shame. If anyone should be ashamed it's my Nic...and believe me, I told him so.\"\n\nVictoria stared at Marianna's kind eyes. \"I didn't do it just because of the money. A lot of it was because I didn't want my mother hurt. She's a good person who was just dealt a raw hand...the hand being my father. I just didn't want her hurt, and I wanted a new start for her,\" Victoria admitted.",
        "\"You don't have to explain anything to me or anyone else about your decision. We do strange things for those we love. When I was younger, if someone would have threatened my kids that way, I would be on my back in a second. I mean, legs up, ready to hand him a cigarette afterward...wrong or not.\"\n\nVictoria burst into laughter at Marianna's overly honest and funny admission. She laughed so hard that she fell backwards from her squatting position and pulled Marianna with her. The two of them lay among the dirt and hay, until their laughter were no more than light giggles. Victoria had to grab her side to ease the pain in her stomach from laughing so hard. Then they both collectively exhaled. \n\n\"I needed that,\" Victoria whispered.\n\nLater that night, Victoria dialed Nic as she lay in bed. She twisted a curl around her finger until he answered his cell phone.\n\n\"Hey baby,\" Nic said groggily into her ear.\n\n\"Hey you. Did I wake you?\" Victoria asked. It was only eleven, and Nic usually never went to sleep early.\n\n\"No. I just dozed off, but I wasn't in the bed. I'm at my desk,\" he told her.\n\nOf course he was. Where else would he be? He couldn't possibly be like most human beings and sleep in a comfortable bed.\n\n\"You sound sleepy, let me let you go, and I'll talk to you tomorrow.\"\n\n\"No. I'm awake and I want to hear your voice,\" Nic said.\n\nVictoria giggled. \"I'm not used to this...more romantic side of you.\"\n\n\"Neither am I,\" he admitted.\n\n\"I like it though.\"\n\n\"Do you? What else do you like?\" he asked in his low, seductive voice that drove her crazy.\n\n\"Nope, not going there. I'm in your mom's house, Nic,\" she whispered in the phone. \"I'm not about to talk dirty to you.\"\n\nShe heard him chuckle, then sigh.\n\n\"You okay?\"\n\n\"Yeah, I'm fine. Did my mom show you around?\"\n\n\"Yes she did...and I learned a lot about you.\" She laughed when she heard him groan. \"Don't worry, it was all good. Your mom wouldn't dare say anything bad about HER Nic,\" Victoria mocked. \"She really is an amazing woman though. Don't know what the hell happened to you.\"\n\n\"Watch it,\" Nic teased.\n\n\"I met Victoria today.\"\n\n\"Ah, Victoria. She's a looker, isn't she?\"\n\n\"Yes. You are full of surprises.\"\n\n\"I wish you were full of me,\" Nic growled.\n\n\"Nic! Stop it!\" Victoria yelled, then lowered her voice, while she peered around the room. \"Your mom could be listening.\"\n\n\"If my mom is in your room right now while you're trying to sleep, then I have bigger problems than I thought I did,\" Nic joked.\n\n\"Eww, you are so gross. Okay, I'm hanging up. Good night. I love you.\"\n\n\"Good night, baby. And I promise to have everything settled soon. I love you,\" he said. Victoria clicked off the phone and stared up at the ceiling. Settled? Was that code for someone had to die for things to be back to normal? She couldn't lie to herself, she would be glad when this whole thing was over and behind them\u2014but at what cost? She hoped it turned out to be nothing more than some gang members trying to scare someone they had seen enter the restaurant. Yes, that was what she was hoping for. She squeezed her pillow, wishing it were Nic, and closed her eyes.\n\n********************\n\nPoor Jimmy. He got the raw end of this hideout deal. He was stuck in a house with two women who did nothing more than talk about Nic and girlie things. Most of the time they would forget he was even there. It wasn't until Victoria asked him why he was forced to stay here with them and was not with his family that he got a chance to explain his presence.\n\n\"My wife and kids are fine. I talk to them several times a day. The reason I'm here is because there aren't many people that know where Nic's mom lives. Something similar to the shooting you experienced happened to her a few years ago, so Nic moved her here.\"\n\n\"You don't regret having to live here,\" Victoria asked Marianna.\n\n\"No, not at all. I love living here. I always hated the city. Too crowded and too much noise. My husband loved it though. He wouldn't have wanted to live anywhere else. But it was never my scene,\" Marianna said, pulling her wavy, raven hair into a bun.\n\nVictoria's phone began to vibrate. She glanced down at it and didn't recognize the number. But she decided to answer anyway, hoping that it was Nic calling from another phone. \"Excuse me,\" she said, getting up from the table.\n\n\"Hello?\" she asked, walking through the sliding glass doors of the kitchen and out into the back yard.\n\n\"Victoria? Hello, it's Paul Marcone,\" she heard him say.\n\n\"Paul! Hi, how are you?\"\n\nShe heard him chuckle a little, no doubt because of the surprise and enthusiasm in her voice. \"I'm fine, Victoria. I actually want to know how you are. I heard about everything that happened. I'm so sorry,\" he said.\n\n\"Oh, yeah. I'm okay now. It was just\u2014shocking, I guess.\"\n\n\"I can only imagine. I hate you had to go through that, and I'm so glad that you weren't hurt,\" he said. \n\n\"Thank you,\" Victoria said. Then she waited, but Paul didn't say anything.\n\n\"Is everything okay?\" she asked him.\n\n\"Well, I was wondering if you could answer some questions for me and then perhaps do me a huge favor. I hate to even ask this of you, but--\"\n\n\"Of course! Anything, Paul. After everything you've done for me, of course you can ask me.\"\n\n\"Thank you, Victoria. This will mean so much to me. I guess, firstly, I know this will be difficult for you, but is there any reason you would think my son is involved in the attack on you?\"\n\nOh, Victoria didn't want to be in the middle of this. But she owed Paul big time, and she would never want to go back on her word with him. She wasn't totally convinced it was Sonny's doing, but she wasn't totally unconvinced either.\n\n\"Um...I mean, Sonny and Nic don't have the best relationship\u2014well neither do Sonny and I for that matter. I\u2014I never had a reason to suspect him of trying to do something like that. I mean, well, I hate to talk about your son, Paul.\"\n\n\"I know, but he's no angel. I understand, but I'm just trying to figure out what's going on. Please continue, I won't be offended,\" Paul said.\n\nVictoria was about to speak again when Jimmy walked outside. He gave her a strange look. \"Who are you talking to, Vicky?\" he asked.\n\n\"Paul Marcone,\" she mouthed.\n\nJimmy narrowed his eyes at her. \"You need to hang up. Now.\"\n\n\"Jimmy, I--,\"\n\n\"Now, Victoria. This is serious. Let Nic and I handle this. Better yet, hand me the phone, I'll talk to him,\" Jimmy suggested, reaching for her cell phone.\n\nVictoria moved it out of his reach and covered the mouthpiece. \"No! Jimmy, when I had no one, Paul was there for me. I'm not about to turn my back on him now. If Nic wants to be mad at me, I'll deal with it, but I'm going to talk to Paul about this.\"\n\n\"Fine, but I have to tell Nic that you were talking to him,\" Jimmy said. He turned his back and grumbled something else as he walked back inside.\n\nVictoria sighed. She knew Jimmy was just doing what he thought was best for her. She should be grateful, but Paul meant a lot to her too. She placed the phone back to her ear.\n\n\"Paul? I'm sorry about that.\"\n\n\"No, I'm sorry. I guess I'm causing problems for you,\" he exhaled.\n\n\"It's fine. I can handle it. Um, to finish what we were talking about, I never got any vibe from Sonny that he'd ever hurt me, but he did do and say things to get under my skin. And Nic's.\"\n\n\"Like what?\"\n\n\"Well, the very first night I met him, he had come to Nic's for something, and ended up betting Nic in a pool game. The stakes\u2014well, the stakes being me and Sonny's car,\" Victoria admitted, still feeling shame from that night.\n\nVictoria could no longer hear Paul breathing. \"Paul?\"\n\n\"I'm here, Victoria. Please continue.\"\n\n\"Okay. Well, he lost the game and seemed really pissed. And, well, he invited me to this party, and I thought he was finally being nice to me, but it turned out he did it to get under Nic's skin. He had lied to me and said Nic wouldn't be there, but the whole time he knew that Nic would. And\u2014well, he did say that he was glad to know using me got to Nic so bad. And then that was the last I heard or saw of him,\" Victoria finished.\n\nAfter a few minutes of silence, Paul finally spoke. \"I'm sorry my son has been such a troublemaker for you. I just don't understand how he thinks sometimes.\"\n\nVictoria chewed on her bottom lip. She felt so bad for Paul. He didn't deserve to be going through this.\n\n\"Victoria?\" he asked.\n\n\"Yes?\"\n\n\"Do you think my son is capable of something like that?\"\n\nVictoria did not want to answer that. Because in all honesty, she wasn't sure, and that might offend Paul.\n\n\"Paul, I\u2014I'm not sure, to be totally honest with you.\"\n\n\"But Nic thinks he is,\" Paul stated.\n\n\"Yes.\"\n\nPaul sighed again. \"Victoria, I really hate to ask you to do this, but if I could cash in on a favor, I'd greatly appreciate it. You see, I know my son isn't perfect. Far from it, and as the years have passed, we've grown apart. A lot. But he's still my son. He's the only thing I have left from my wife. And if she were alive, she would want me to protect him in any way I can. I love Sonny, even if he's caused me so many problems. It's just the two of us now. I asked him if he caused this, and he looked me in the face and said no. And that's all I can ask of him. So, I guess the favor I'm asking of you is\u2014could you talk to Nic for me? I would myself, but I can't seem to get through to his phone, and going over there isn't the smartest thing to do in my position at the moment. So, if you could just tell him that I know he's angry, and has every right to be. I would be too, were I in his place. But if my son is a target, I can't let that happen and I will defend Sonny by any means necessary. Do you understand what I mean, Victoria?\" Paul asked.\n\nVictoria's mouth was dry and she couldn't breathe. Was it really coming down to this? Her palms began to sweat. \"Paul, I\u2014I...\"\n\n\"I would never consider hurting you, Victoria. You have nothing to worry about. But I can't let Nic go after my son. I just can't. I'm hoping that it won't come to that, which is why I'd like you to speak to Nic for me. Would you?\"\n\n\"Ye--es,\" Victoria croaked out. She quickly cleared her throat. \"Yes, I'll talk to him.\"\n\n\"Thank you. And I've kept you away for a long time, so I'll let you go. Thanks Victoria, and goodnight,\" Paul said.\n\n\"You're welcome, and goodnight,\" Victoria whispered, and then clicked off her phone. She took a huge breath of the cold night air before she walked back into the house.\n\n\"What did he want?\" Jimmy asked, leaning against the counter.\n\n\"He said he asked Sonny if he had anything to do with the shooting the other night. Sonny told him no. And he wants me to let Nic know that and that he will defend his son if Nic goes after him,\" Victoria said. She sat down at the table rubbing her cell phone in her hands. \"I guess I should call Nic now.\"\n\nVictoria spent the rest of the night trying to convince Nic to meet with Paul Marcone. After a few idle threats and then sweet talking, Nic agreed to at least speak with Paul. Victoria felt as if some steps in the right direction were being taken.\n\n********************\n\n\"Nic, our contact finally came up for air, but he said he didn't know who did the shooting. But he can guarantee that it wasn't gang related,\" Antonio reported, as he removed his coat and sat down in front of Nic's desk.\n\nNic leaned back in his chair. \"No shit, so now we're still at square one. Marsh wouldn't have been investigating if it was just gang related. He's too big for that.\"\n\nRaymond entered. \"Mr. Marcone is waiting downstairs for you, Nic. Want me to bring him up?\"\n\n\"Thanks Raymond. And no, I'll meet him down there.\"\n\nWhen Nic reached the bottom step, the two men quickly shook hands. Remy, Paul's right hand man was standing in the distance. Raymond stood opposite of him staring him down. Remy cleared his throat but Raymond didn't flinch.\n\n\"Would you like him to come in with us?\" Nic asked Paul, glancing over at Remy.\n\n\"No, that won't be necessary. I trust you,\" Paul said, as he followed Nic into his billiard room. Nic closed the door and offered Paul a drink.\n\n\"Thank you,\" Paul said, taking a glass of Scotch. Nic didn't drink, but he leaned against the pool table waiting for Paul to make the first move.\n\nPaul took a small gulp. \"So, Nic. First, I want to offer my sincerest, heartfelt apologies for what happened to Victoria.\"\n\n\"You have nothing to apologize for, if you had nothing to do with it,\" Nic dead-panned.\n\nPaul exhaled. \"I see. Well, down to business then. I asked Sonny if he was in charge of the hit on Victoria and he said no. That's all I can do is ask him. And since he told me no, I have to believe him.\"\n\nNic continued to stare at Paul.\n\n\"Nic, I don't want it to come to this, but if you target my son...I'm going to come back after you.\"\n\nNic slowly nodded his head. \"Paul, you do what you feel you have to do. And I'll do what I feel I have to.\"\n\n\"Your father wouldn't want this, Nic.\"\n\n\"My father's dead.\"\n\nPaul shook his head again and swallowed the last of the Scotch in his glass, then placed it on a table. \"Well that's that. Thank you for meeting with me,\" he said to Nic.\n\n\"My pleasure,\" Nic replied.\n\nPaul turned and walked out of the billiard room. A few seconds later, Antonio walked in. \"Everything okay, Nic?\"\n\n\"Find Sonny Marcone,\" Nic said, as he walked around Antonio and out of the room.\n\n********************\n\nIt had been a full week since Victoria had seen Nic. Although she adored Marianna, she was ready to go back to the city. Back to Nic, her job and her life. And honestly, she was going a bit stir crazy waiting around the house. Jimmy, for the most part, sat around watching TV and babysitting her, while Marianna would work on her garden.\n\nThe day before Victoria had followed an old stable hand around, while he tended to the horses, but today seemed to be passing by so slowly. Nic hadn't called and she hated the fact that she had none of her books to read. She really needed to get out of the house for a while.\n\nVictoria had just finished loading the dishes into the dishwasher when Jimmy announced that he was heading upstairs to take a quick shower. She noticed his keys sitting on the kitchen counter. She bit her bottom lip then looked outside at the garden. Marianna seemed preoccupied with her plants. She turned to glance down the hallway, and she didn't hear Jimmy, so she assumed he was already in the bathroom upstairs. She walked over to the counter and quickly picked up his keys. One little visit into town couldn't hurt, right? She'd only be gone just a few minutes, and plus, she wanted to surprise Marianna by cooking tonight. So she was totally justified in picking up some groceries for dinner.\n\n'No harm,' Victoria thought, as she twirled the key ring around her finger and hurriedly exited the house. She knew this would piss Jimmy off, since he said she wasn't allowed to go anywhere without him, but he'd learn to get over it.\n\nPlus, according to Jimmy, this town was so small, it's not like anything would happen to her. She finally pulled into a small parking lot and hopped out. She walked down the main street, looking at the old fashioned stores and antique shops. It looked like time had just stood still for this town. She envied some of the people walking by in comfortable clothes, while she kept pulling down this incredibly short, off the shoulder, light yellow dress Minka had packed. But at least her feet weren't hurting, since she chose to wear her trusty Converse. She was sure Minka would have fainted seeing her shoe choice with this dress, and for some reason that brought a small smile to her face.\n\nVictoria finally made her way back to the grocery store. She quickly grabbed a few items, and walked back to Jimmy's car. A large black van had parked so close to the car, she could just barely squeeze between it and the door. \"Asshole,\" she mumbled to herself as she stuck the keys into the car lock.\n\n\"Miss, do you have the time?\" a voice said from the van behind her. Not bothering to turn around, Victoria reached into her purse to look at the time on her cell phone, when a large hand covered her mouth and yanked her backwards into the van.\n\nVictoria let out a muffled scream, while her arms and legs flailed. She heard the door slam shut right as a damp cloth was placed over her nose and mouth. Soon she became dizzy and everything faded to black. \n\n**************\n\nJimmy's hair was still wet when he came downstairs. He looked around and everything seemed so quiet. Too quiet. He walked into the kitchen and opened the sliding glass doors leading out to the back yard. Marianna was still sitting on the ground, tending to her garden. He scanned the yard quickly, but he didn't see Victoria.\n\n\"Marianna, where's Victoria?\" he asked.\n\nShe looked up and wiped her forehead. \"She was in the house a few minutes ago. She may have gone up to her room.\"\n\nJimmy nodded and walked upstairs. \"Victoria?\" he said, as he knocked on her door. After a few moments of silence, he opened the door, but she wasn't in there either. Jimmy scratched his head as he walked back downstairs and into the kitchen. He was about to check the stables, thinking she could be looking at the horses when he noticed his keys were missing.\n\n\"Fuck!\" Jimmy shouted, as he ran to the door. His car was gone. He pulled out his cell phone and dialed her number. It rang and then went to voicemail. \"Shit,\" he groaned, as he dialed her number again and again, each time getting a few rings and then her voicemail.\n\nJimmy walked back outside. \"Marianna, do you mind if I take your car. Victoria left, and I want to make sure she's alright.\"\n\n\"Yes, you can use my car. The keys are in the first cabinet on the right. I'm sure she is fine. She's been in the house for a week straight. She probably just needed some air,\" Marianna said, dusting the dirt from her pants.\n\n\"Air or not, I still answer to Nic, and he's going to be pissed if he finds out I let her out of my sight,\" Jimmy complained.\n\nMarianna laughed and patted him on the back, as she walked past him and into the house.\n\nJimmy drove into the quiet, small center of the town. Truthfully, the town was only made up of a few old shops, a post office, one grocery store and two small restaurants. It didn't even have its own police station or fire department. They had to share those luxuries with a bigger city a few miles away. So it wouldn't be too hard to find her.\n\nFinally, after just a few minutes of driving around, he spotted his car. He pulled up beside it and hopped out. He looked around to see if she was anywhere near, but when he walked over to the driver's side of the car, he froze and his heart skipped a beat. This was not happening, no, no, NO! His keys were stuck in the lock, while her cell phone and a small bag of groceries were scattered and crushed on the ground.\n\nThis was not fucking happening.\n\n\"Oh, fuck, fuck, fuck!!\" Jimmy whispered to himself. He pulled out his cell phone and took a deep breath. He dialed Nic's number and waited for him to answer.\n\n\"Yeah,\" Nic answered.\n\n\"Nic...oh, shit. I swear to God, I came looking for her as soon as I found out she had left\" Jimmy rushed out, \"Nic, I think\u2014I think someone took her.\" \"What did you just say?\" he heard Nic ask in a low voice.\n\n\"She's gone,\" Jimmy huffed out. Jimmy squeezed his eyes shut only imagining what Nic must be thinking of him. He had one simple task to do. One simple fucking task. 'Don't let her out of your sight,' Nic had told him before they left for Marianna's. He couldn't hear anything coming from his cell phone. No breathing, no noise, nothing. Was Nic still there?\n\n\"Nic?\" Jimmy whispered.\n\n*****************\n\nVictoria finally opened her eyes. Her head was swimming and she felt sick to her stomach. She was lying on a cot in the middle of some dingy room. She tried to raise up, but her hands were duct taped behind her, and her feet were bound too. She started to panic. Were it not for the duct tape across her mouth, she would have thrown up. Everything started blurring, as tears formed in her eyes. ",
        "A few seconds later she heard a door open. She looked to the far corner of the room and saw a man approaching. He was dressed in all black, including a ski mask over his head.\n\n\"Good morning, love,\" the man said with a thick Irish accent. \"Glad to see you awake. Now we can finally get down to business.\"\n\nHe walked over to her and gently pulled the duct tape from her mouth. Victoria stretched her aching jaw. She lifted her body up and swung her legs over the edge of the cot.\n\n\"What do you want?\" Victoria asked, shakily. The man slowly swept his eyes over her body and bare legs. \"I want what any red blooded bloke would want,\" he said, as he stepped closer to her. \"Money.\" \n\nAnother man soon entered the room, dressed similarly. \"Hey, do you want the phone now?\" this one asked, with an American accent.\n\n\"Yes, I would. Thank you,\" the other man answered, still staring at Victoria. \"So, here's how this is going to work. I'm going to call your husband, and you are going to demand, oh, something simple. Just five hundred grand from him, and I'll hop on and make the pickup and drop off arrangements. Sound like a plan, love?\"\n\nHusband? Victoria was so confused and scared, and she was pretty sure whatever they had drugged her with, was still making her loopy. Were they mistaking her for someone else? \"I don't know what you're talking about,\" said, as she focused in on the green eyes behind the mask.\n\n\"So...you're going to play that game, Victoria,\" the guy said.\n\n\"I\u2014I'm not playing with you. I'm not married and I don't know why I'm here. I don't know what you want? Did Sonny send you?\"\n\nHis stance made him look unconvinced. \"And you're lying because...?\"\n\n\"I'm not lying!\" Victoria shouted, then quickly lowered her voice. \"Who are you?\"\n\n\"I'm Moe, that's Larry, and Curly is downstairs with a gun, so don't try anything silly, like running away, because we will catch you,\" he said. \"So, now that introductions are out of the way, how about we make you a little more comfy before we call your old man. He quickly pulled out a switch blade, causing Victoria to jump. He placed the blade at the top of her leg and slowly slid the smooth side down the inside of her thigh and down her legs until he reached her ankles. He cut the tape and removed the remnants. \"There, that's better. Easier access,\" he said, as he grabbed her ankle. Victoria tried to kick him, but he grabbed both her legs and pulled her off of the cot and onto his lap, straddling him. Victoria tried to push him off, but her hands were still tied.\n\nVictoria screamed, \"Don't you fucking touch me!\"\n\n\"Not to worry, love. We can have fun later, but business right now. Tell me your husband's number,\" he said, pulling out a cell phone.\n\nVictoria wasn't sure what the hell to do or who he expected her to call. \n\n\"I don't know who you want me to call,\" she said again, right as his hand came smacking across her face. Victoria felt as though her head had exploded. All she could feel was the sharp stinging imprint left from his hand. She slowly turned back towards him with daggers in her eyes.\n\n\"I hope you got the message. Now stop fucking with me and give me his number!\" he shouted, causing her to flinch.\n\nVictoria wasn't sure what to do or say. Maybe he thought she was married to Nic, and that's what this was about. She didn't want Nic to be hurt because of her, but if she didn't give them something, they might kill her.\n\n\"I'm sorry,\" she whispered, \"but I don't know who you want me to call,\" she said, flinching again, anticipating the hit.\n\n*****************\n\nAntonio and Eddie stood waiting inside Nic's office. Ever since he had gotten the call from Jimmy, he hadn't said a word. He walked outside and stood facing out toward the back. It wasn't until Jimmy had called Eddie to explain everything, that they understood Nic's mood. He hadn't moved from that position in over twenty minutes. He could have been a marble statue. One very tense, marble statue. \n\n\"Maybe one of us should go check on him,\" Antonio said to Eddie.\n\n\"Why, are you volunteering yourself,\" Eddie answered.\n\n\"Um, I'm the newest one to the organization...and I'm pretty sure if I walked over there, he'd toss my ass over the balcony,\" Antonio said, gazing over at Nic's still form.\n\n\"I saw him do that once.\"\n\n\"What?!\" Antonio said, jerking his head back to Eddie. He had to be kidding.\n\nEddie sighed, \"I'll go.\" \n\nHe walked outside onto the balcony and carefully over to Nic. Eddie stood side by side with him and turned to look at Nic's profile.\n\n\"Nic, I'm sure she's okay. Look, if someone took her, it's to get at you, right? Well, if that's so, they will want to show you they have her. They're not going to hurt her...at least not until they show themselves,\" Eddie said, turning to look out at the back yard too.\n\nNic didn't say anything, he just continued to stare out. Eddie leaned against the marble railing. A few more moments of silence passed before Eddie heard Nic speak.\n\n\"Do you believe in karma?\" Nic asked.\n\nEddie shook his head. \"Nic, you know I'm too logical for that.\"\n\n\"Yeah, that's what I used to think. But now, I'm not so sure. It's like every sin I ever committed is coming back on me tenfold, but it's using the only woman I've ever wanted to make a life with. That I've ever fallen in love with--the only one...that has to be karma.\"\n\nNic's world was crumbling right before his eyes. This was all happening because of him. Victoria hadn't done a damn thing wrong\u2014this was all him. And Sonny, or whoever this was, had him right where they wanted him. He would do or give up anything for her. For the first time in his life, he felt the cold sting of defeat and heartache. \n\nBUT Nic knew it wasn't in his nature to go down without a fight. Whoever had the balls to do this...didn't realize what they had done. They had unleashed the demon within him, and there wasn't a single place the culprit could hide. \n\nAnd just like that, a switch had flipped inside of Nic. He turned around and marched back inside his office.\n\n\"Get every contact we have on the streets, and see if they've seen Sonny. Tell them I'll offer a generous reward for whoever has the correct location,\" he said to Antonio. \"Eddie, get the tracking kit in case anyone calls and touch base with Jimmy and make sure he has questioned everyone near the spot of Victoria's disappearance.\"\n\n********************\n\n\"What's taking so long?\" the American asked, walking closer to Victoria. \"Why won't she give you the number?\"\n\nThe Irishman continued to stare at her. He walked over to a desk and pulled out a small piece of paper. He walked back over to her and held a black and white photo of her inside Calamity's. \"Is this not you?\" he said in a sarcastic tone.\n\nVictoria looked up from the photo. \"Yes, but I'm not married.\"\n\n\"Right, and I suppose you're going to tell me your husband's not a wealthy banker. You know, I didn't want to do this the hard way, but you leave me no choice,\" he said, pulling out his blade. Victoria knew she had to think quickly.\n\n\"Wait! Wait...I, um...think about it. If I were some rich man's wife, why would I be working as a waitress? Look at the photo, I'm in my uniform,\" Victoria said.\n\nThe two men exchanged quick glances, and then looked down at the photo. The American scratched his head, as the Irishman kneeled down beside her.\n\n\"This photo could have been taken before you married him,\" he said.\n\n\"I'm not married! I only have a boyfriend, and his name is Nic Andretti,\" Victoria yelled, feeling her options running out.\n\n\"What the fu\u2014who did she say?\" the American asked.\n\n\"Bullshyte,\" the Irishman said, standing up.\n\nSo...they had heard of Nic.\n\n\"Nic Andretti. I'm his girlfriend,\" Victoria announced, as the tables began to turn on this whole twisted deal.\n\n\"The fucking mob boss?! Shit man, what the fuck did you get me into?!\" the American shouted at the other man.\n\n\"Keep your fucking voice down! And besides, she's lying,\" the Irishman said, staring at Victoria. \n\n\"I can give you his number if you don't believe me,\" Victoria said.\n\n\"Fine. I'll call your bluff,\" he said, opening the cell phone. \"What's the number?\" Victoria gave it to him and he dialed. As soon as it started ringing, he roughly grabbed her chin and got within an inch of her face. \"If you're lying to me, I will slowly cut you inch by fucking inch until you bleed to death. Got me?\"\n\nVictoria swallowed and began to shake. She wished she could close her eyes and disappear. Even though the phone was next to his ear, she could hear it ringing. 'Please Nic, pick up the phone,' Victoria prayed.\n\n********************\n\nNic was in the middle of dialing another contact when his cell began to ring. He didn't recognize the number, but perhaps Antonio had gotten through to someone who had some information. He answered it.\n\n\"Yes?\"\n\n\"Is this Nic Andretti?\" a muffled voice asked. \n\n\"Yes. Who's this?\" he asked, before the phone went dead. Nic felt a cold chill travel up his spine. He quickly snapped his fingers at Eddie, who had fallen asleep on the couch. Eddie hopped up and rushed over to Nic's desk.\n\n\"Pull the last number back up and track it. That motherfucker just called me. I know it's whoever has Victoria,\" Nic stated.\n\nEddie grabbed the cell phone. \"Okay, but you have to get him to talk for at least twenty seconds.\" Nic nodded.\n\n******************\n\n\"Well?\" the American asked in a worried tone, looking at the other man, who slowly lowered the phone from his ear. \"Was it him?!\"\n\nThe Irishman subtly nodded his head.\n\nThe American threw his hands up in the air. \"Oh great! Just fucking perfect!! Oh man, I didn't sign up for this! I didn't sign up to fuck with the mob, Jesus Christ, man!\"\n\n\"Calm the fuck down and let me think!\" the other hollered back.\n\n\"I'm not going to calm down! Get that rat bastard who set this up on the phone and find out what the hell he's trying to pull,\" the American screamed.\n\n\"Why don't you shut the fuck up and let me--,\" the Irishman said, before his phone started ringing. All three of them stared at it.\n\n\"Should we answer it,\" the American asked in a frightened tone.\n\nThe Irishman slowly brought the phone back up to his ear and clicked the talk button.\n\n\"Put Victoria on the phone now,\" Nic growled out.\n\n\"I don't know what--\"\n\n\"Put her on the fucking phone!\" Nic yelled, squeezing his cell phone. After a few moments of silence, he heard some background noise and then the sweetest voice in the world.\n\n\"Nic?\" Victoria asked.\n\n\"Baby, are you okay?\" he asked, closing his eyes.\n\n\"Yes, I think so. Nic, I'm scared,\" she whispered to him. \n\n\"I know, I know baby. But listen to me, no one is going to hurt you. Say okay if there are less than five men.\"\n\n\"Okay,\" Victoria said.\n\n\"Thank you, sweetheart. I love you and I'll find you. Put him back on,\" Nic requested. When he heard the man breathing through the line again, Nic closed his eyes.\n\n\"Now that you know who I am, know that I won't be contacting the police. The best you can hope for is to let her go, leave town as fast as you can, and pray I can't find you. But if you make this even more difficult...you're dead. I WILL find you and no amount of negotiating or money is going to keep me from torturing you and then killing you. Pass that message along to whoever you're working with,\" Nic said, and hung up the phone. \n\n\"Got him. He's about three hours northwest of here, at this address,\" Eddie said, writing it down.\n\nNic called Jimmy. \"I got her location. Tell Harry to get the plane ready, and call Damon. I might need his help. Have a car waiting for us when we get there. I'm sending you the address now...she's only about forty minutes from you, but hang tight until we get there.\"\n\n\"You got it, Nic. See you in a bit,\" Jimmy said, before he hung up the phone.\n\nNic turned to Antonio, \"We leave in five minutes. I hope you've learned to shoot that gun,\" Nic said, as he walked out of the office.\n\nAntonio took a deep breath. Oh, fuck.\n\n*****************\n\nThe one with the Irish accent quickly stepped away from Victoria, and left the room. The other one followed after him, asking him what Nic had said. When they closed the door, Victoria felt her whole body shake. She had been that close to death. But Nic said they wouldn't hurt her and that he would find her. She laid back down on the cot and stared at the ceiling. She couldn't remember the last time she had eaten or drunk anything, but she was sure nothing would go down anyway. Her stomach couldn't handle it.\n\nVictoria heard shouting, but she could only make out certain words. Whoever the Irishman was talking to, he was screaming at, telling the person that they had backstabbed him. He mentioned something about Nic and there not being a banker, and they had been set up. \n\nVictoria closed her eyes, so she could concentrate on hearing the rest of what the Irishman was saying. \"I took the gag off because I wanted the phone number\u2014I don't care what you told me not to do\u2014get your ass here! Hello? Hello?!\" she heard him yell. Then it sounded as though he smashed something. A few minutes later, the two of them rushed back in.\n\n\"I say we just drop her off at the closest stop, and get the hell out of here. We were obviously set up. I mean, that's his girlfriend, dude! What the fuck, he's going to kill us!\" the American shouted.\n\nThe Irishman grabbed him by the shirt. \"You're getting excited again. Shut up!\"\n\nThe American finally calmed down. He sat on Victoria's cot and placed his head in his hands. If Victoria didn't despise them so much, she'd actually feel a little sorry for him at least. He obviously had gotten in way over his head, when he thought it would be a simple cash reward. But now Victoria was even more confused. So...someone had set these guys up into thinking they were kidnapping a banker's wife? Who would go through all that trouble? Victoria could think of one person, but for Paul's sake, she hoped it wasn't his son.\n\n*****************\n\nPaul was asleep when Remy came into his room and handed him the phone.\n\n\"Sir, I think you'll want to take this call.\"\n\nPaul quickly sat up on his bed. \"Thank you,\" he said to Remy, before the young man walked out.\n\nPaul put the phone to his ear. \"Sonny?\"\n\n\"Hey Pop! Word around town is that you were looking for me? What's up?\"\n\n\"Where the HELL are you?\n\n\"I'm somewhere.\"\n\n\"I just got word that Victoria was missing. Please, PLEASE tell me that has nothing to do with you.\"\n\n\"That has nothing to do with me,\" Sonny answered flatly.\n\n\"Are you telling me the truth? I can only protect you if you are honest with me.\"\n\n\"I'm telling you the truth, Pop. I didn't even know she was missing. Nic must be a wreck, huh?\" Sonny said.\n\n\"I'm sure he thinks you are behind this,\" Paul sighed. \"I'll meet you in a safe place so we can figure out what our next step will be. I've already warned him about targeting you.\"\n\n\"Maybe Victoria ran away. I wouldn't blame her, he's a little crazy,\" Sonny said with a laugh.\n\n\"It's not funny. She didn't run away, and she doesn't deserve this. If it weren't for our disagreement regarding you, I'd be out there helping him look for her.\"\n\nSonny scoffed. \"Pop, I'm sure it's nothing. And when Victoria turns up, he'll probably be so glad to have her back, that none of this will matter,\" Sonny said, as if he were bored with the whole situation.\n\nPaul exhaled. \"Obviously son, you've never been in love. I would have ripped down the fucking walls of every building and house searching for your mother if something like this happened. And then, anyone responsible would no longer be breathing. You don't think Nic feels the same? Trust me, he does, and this is going to get worse before it gets better, I'm afraid.\"\n\n******************\n\nOn the plane with Nic were Antonio, Raymond and his friend, Damon. Damon was a huge guy, ex-Navy SEAL who cashed in big checks with bounty hunting. Nic had employed him several times over the years. He was a trustworthy guy who could kill a man with his bare hands, and proudly bragged about that fact. \n\nThe four of them stepped off the small plane and into the vehicle that was waiting for them. Antonio glanced over at Nic. He seemed calm, but Antonio couldn't be sure. Nic never really showed much emotion. At least not to him, but Antonio was freaking out. He felt constricted in the bullet proof vest he was wearing. And the handgun he held felt like it weighed a ton. \n\n\"Stop the car,\" Antonio whispered. They all ignored him. \"Stop the car, I'm going to be sick,\" Antonio yelled, as he opened his car door. Raymond slammed on the brakes. Antonio hopped out and vomited on the ground. He quickly wiped his mouth, and got back into the car. \n\n\"Sorry,\" he whispered to Nic. But Nic said nothing. He just rolled two bullets in between his fingers and stared forward through the windshield.\n\nA few minutes later, they pulled up to an abandoned house, hidden from the street. Jimmy was there, waiting. They all got out of the vehicles and separated, surrounding the house.\n\n*****************\n\nThe American was leaning against the wall, now that his nerves weren't so frazzled. But the Irishman was pacing back and forth, checking his phone every few minutes, to make sure it was still working. Apparently the person who had given them this false information had not called back, nor had they shown up.\n\nVictoria ignored the rumbling in her stomach, as she thought about dying in a place like this. Death had never crossed her mind much, but now it seemed to be surrounding her. She just couldn't believe this had happened\u2014or was happening. Things like this just didn't seem to happen in real life. People didn't just kidnap you off the street. She had read about it, seen it in movies or in the news, but it still seemed very distant from her life. Her train of thought was interrupted by someone yelling downstairs. She jumped and screamed when she heard a gunshot. \n\n\"Go see what that was!\" the Irishman screamed at the American. \n\nThe American went flying out of the door right before she heard another gun shot.\n\n\"Nic!\" Victoria shrieked, hopping up from the cot and running for the door. The Irishman grabbed her around the waist and held her tightly against his chest. She felt his breath quicken and the cold metal tip of a gun press against her temple. Victoria shut her eyes tightly, praying that she would make it out of here alive. \"Oh God,\" she said, as she heard the door fling open.\n\nA second later, Nic came through the door. He saw the man holding the gun to Victoria's head. Her eyes were closed.\n\n\"Victoria?\" Nic said, keeping his gaze and gun on the man.\n\nHer watery eyes immediately opened and her heart skipped a beat. \n\n\"Drop it!\" the man holding her yelled. Nic kept his gun trained firmly on him, while the other guys stood to the side of Nic, aiming their guns in kidnapper's direction as well.\n\n\"I mean it, or I'll put a bullet through her fucking head!\" he warned in an Irish accent.\n\nNic slowly lowered his weapon. \"Lower your guns,\" Nic said to the group behind him, as he kept his eyes on the culprit. They all obeyed. \"Victoria?\" Nic asked.\n\n\"Y-yes?\" she choked out.\n\n\"I love you,\" Nic said, steadying his hand.\n\n\"I\u2014I lo-ove you too,\" Victoria said, shaking uncontrollably.\n\n\"You trust me?\"\n\nAs soon as Victoria mumbled yes, she saw Nic quickly raise his gun as a loud pop sounded throughout the large room, and in an instant, something whizzed past her head. She squeezed her eyes shut as a wet, warm liquid was splattered against the side of her face and neck. The man behind her released her and she heard a thump.\n\nEverything seemed to slow down. She couldn't hear anything, as her body wilted to the hardwood floor. She couldn't catch her breath. She felt arms wrap around her. She wasn't sure if it was Nic or not, but she wasn't going to open her eyes to find out.",
        "\"Are you okay?\" she heard someone ask, as they pulled the duct tape from her hands. Victoria didn't say anything. She couldn't breathe.\n\n\"Victoria! Are you okay?\" she heard again. She slowly opened her eyes to see Nic hovering a few inches from her face. She felt so dizzy as she glanced to the side and saw the Irishman...or what was left of his head lying on the ground beside her. She immediately started screaming at the top of her lungs, while trying to wipe the blood from her body.\n\n\"Oh my God!! Get it off me, get it off me!!\" Victoria cried, kicking and pushing Nic away, still struggling to remove the blood. She looked over at the body again, which caused her to scream hysterically.\n\n\"Calm down baby, don't look at him, just look at me,\" Nic said, trying to turn her head away from the dead body. But Victoria kept pushing his hands away. Nic finally grabbed her tightly and lifted her up from the floor. \"Ssh, baby. Calm down,\" he whispered. \n\nVictoria was mumbling unintelligibly in Nic's ear, as he carried her out of the room. When they reached outside, he placed Victoria in the back seat of the black Sedan and closed the door. \"Jimmy, can you help Damon get rid of the bodies and evidence, and meet us at this hotel,\" Nic said, handing him the address. \"I think we should drive back instead of fly, to give everyone a chance to...relax, before we get back to the city.\"\n\nJimmy nodded and glanced through the dark tinted window. \"Is she going to be okay?\" he asked.\n\n\"I don't know,\" Nic answered honestly. \"Antonio, Raymond, you guys come with us,\" he said as he hopped in the back seat with Victoria.\n\n*****************\n\nAntonio received the keys for all of the rooms, and passed them out. Victoria quickly snatched the key from him and marched past everyone and straight into her and Nic's room, slamming the door behind her. She hadn't said a word to anyone since she had been rescued.\n\n\"Hey Nic, want me to grab you a drink. I think you might need it,\" Antonio said, looking at the shut door to Nic's room. \n\nNic exhaled, \"No. And thank you for today. You did well.\" Antonio gave a small smile as he turned and walked across the street to the closest gas station.\n\nNic went into their room and placed the other key card on the counter. He wasn't sure what to say to Victoria. He walked to the bathroom and leaned against the door frame, quietly observing her. She was bending over the sink, washing her hair. It looked as though she were rinsing red dye from her curls.\n\nHe picked up a towel from the rack and tried to wipe the blood from her neck, but she snatched it from him before he could touch her.\n\n\"Vic\u2014\"\n\n\"Don't talk to me,\" she snapped.\n\n\"It will be okay,\" Nic said.\n\nShe raised up and glared at him, with tears in her eyes and red water dripping onto her light yellow dress, blending into the permanent blood stains. \"With all due fucking respect, it will NOT be okay! I'm washing blood and brains from my hair...it is NOT okay,\" she croaked out in short breaths.\n\nNic continued to stare at her.\n\n\"Will you please get out so I can take a shower?\" she asked.\n\nNic stood there a few seconds longer, before he turned and left the bathroom. He grabbed his keycard and walked out of the room.\n\nVictoria quickly peeled the dress from her body. The bottom portion of her dress was still a light, soft yellow. But the top half was drenched in red. She placed it in the sink and got into the shower.\n\nThis all seemed like a nightmare. She just wanted to wake up from it. The only dead body she had ever seen was at her great Aunt Cynthia's funeral, who had died when she was a teenager, and even that had freaked her out. Now here she was washing some man's blood from her body. Blood that could have easily been hers, had one thing gone differently. To be alive, she was grateful, but her feelings were all mixed up at the moment. She just wanted to go home and forget about this whole frightening ordeal. She scrubbed and scrubbed until her skin felt raw and she became short of breath. She was so sick of crying, but she could no longer hold it in. She sat down in the shower as the warm water cascaded down on top of her, and she sobbed.\n\nNic leaned against the sedan. This whole day had been bittersweet. He was so unbelievably happy that Victoria had not been hurt. He didn't even want to think of his life without her. But now she didn't even want to talk to him. He knew she had every right to be upset with him. He was pissed that he had placed her in this position and he didn't know how to make it better. But one thing he did know, was that this had to be Sonny's doing. It had to be. And when he caught that bastard, Paul's son or not, he was going to torture and kill that fucker.\n\nNic was thinking of what he was going to say to Victoria, when his cell phone started vibrating. He looked at the number. \"Hey mama, I\u2014yes, she's fine\u2014no, I checked her she's fine. At least physically anyway.\" Nic sighed, \"I know, I know, but it's been a rough day. I promise to call you tomorrow morning and give you an update. Love you and good night.\"\n\nJimmy and Damon pulled up right as he ended the conversation with Marianna. Both of the men were covered in blood, which they tried to hide with jackets.\n\n\"Antonio has your key, he's in room 103. It's not much, but we needed a place that we could enter and exit from the outside,\" Nic said to Damon. He shook his hand and thanked him for all of his help.\n\n\"Anytime, Nic,\" Damon said, as he grabbed three bottles of bleach from the back of the car and went to knock on Antonio's door.\n\nJimmy closed his door and went to stand beside Nic. \"You know I'm truly sorry for taking my eyes off her, even for a few minutes. This all happened because of me,\" Jimmy said, leaning his head back.\n\n\"No, it happened because of me. You're a true friend, Jimmy. And she's safe now, and that's all that matters.\"\n\nJimmy nodded, but remained silent.\n\n\"She's going to leave me,\" Nic stated, staring off into the distance.\n\n\"You don't know that. She's just in shock from everything that has happened,\" Jimmy said, trying to add words of comfort.\n\n\"No. She will, because I don't know how to make this better,\" Nic quietly said.\n\n\"Yes you do, Nic,\" Jimmy said, as he walked around to the trunk and removed more bottles of bleach and a small bag. He slammed the trunk shut and returned to stand in front of Nic. \"It won't be easy, but I'm sure you'll figure out how to make this better,\" he said handing Nic the bag, \"I picked this up for her on the way. Figured she would need it,\" he stated, then walked to Antonio's room for his key.\n\nNic glanced inside the bag and then watched as his friend disappeared into one of the rooms. He stood there for a few more moments, before he walked toward his room. \n\nVictoria was sitting on the bed when Nic entered. She was only wearing a small white towel wrapped around her body, and another wrapped around her hair.\n\nHe walked over and sat down beside her on the bed. What he wouldn't give to pull that towel off and fuck her until they were both dead tired. He was sure that could cure this somber mood. He handed her the small bag.\n\nVictoria reached into the bag and pulled out a white shirt and a pair of pajama pants. No bra or panties, but at this point, she didn't even care. She turned away from him and quickly put them on, knowing no doubt his eyes were on her. When she turned around, he stared at her shirt and gave a small chuckle.\n\nVictoria glanced down at the shirt. It read: World's Best Mom! in bright blue letters.\n\n\"Sorry, I think that's all he could find around here,\" Nic said. Had Victoria not been so upset, she might have been able to see the humor in it, but right now, she just couldn't. She sat back down on the bed to put her shoes on.\n\n\"Victoria,\" Nic said, reaching for her hand.\n\n\"Don't,\" she said, pulling away as she stood up. \"Nic...I can't do this. I may not live a glamorous life, but that's not me anyway. I don't know what I was thinking to even consider this lifestyle,\" she stated, no longer able to hold it in.\n\n\"Victoria, when we get back to the city, I promise, I'll find out who was behind this, and make sure it will never happen again. I didn't protect you as well as I should have and--\"\n\n\"Do you see what I mean? Protect me?! If this was a normal relationship, you wouldn't have to. I want a normal life!\" she shouted. \"A normal boyfriend or husband who has a normal job, so I can have a normal fam\u2014just normal. I don't want this! My father robbed me of a normal childhood and I'll be Goddamned if I let you rob me of a normal life!\" Victoria felt as though she were having a mini breakdown in some hotel in\u2014she didn't even know where the fuck they were. This whole situation shouldn't have happened, and she started getting pissed.\n\nShe pulled the towel from her head, letting her damp curls fall down her back. \"Well, at least this time I was worth five hundred grand,\" Victoria mocked. But instantly she felt guilty for taking such a jab and the look of hurt in his eyes stung her.\n\n\"Just push the knife in further Victoria, as if I don't feel like shit. I know this is all my fault. I\u2014I don't know what else to say other than I'm truly sorry I put you through this. When we get back, I swear I'll make things better. No one will be able to get to you again.\"\n\nVictoria stared at him. \"So you'll keep me in hiding?\"\n\n\"I don't know, I'm still trying to think everything through.\"\n\n\"Is that what you think I'd want? Is that your definition of normal?\" Victoria shook her head. \"Nic...it's over.\"\n\n\"Don't say that. I can make this work, I\u2014\"\n\n\"I love you, Nic,\" Victoria whispered, tears finally spilling over the brim of her eyelids. \"So much...but I can't. I'd lose me if I stayed. This isn't just Tiffany's, this is far worse, and I can't handle this. I\u2014I,\" Victoria couldn't finish. She had to leave. She felt like she was slowly being smothered. \"I called Antonio, and he has agreed to take me back home tonight. And don't be mad at him, I begged. I realize things might not be safe, so I'll check into a hotel when I get back.\" She tried to walk past him but he grabbed her hand.\n\n\"Please don't do this, Victoria. Don't leave me again,\" he whispered, close to her ear. He just couldn't take it this time. The first time she left was because of what he did and said. This time...she was leaving because of who he was. And that was something that couldn't easily be changed.\n\nVictoria looked into his apologetic eyes. She would miss him. Her body, her heart...all of her would cry for him, but she just couldn't stay. She stood on her tiptoes and kissed him. She wrapped her hands around his neck, and pressed her body against him as she caressed his tongue with hers.\n\nNic wrapped his arms around her waist, as he kissed her back even harder. He had wanted to feel her in his arms for over a week, and now she was. Maybe everything would be better after all. Especially if he could remove her clothes and get to what he desired. What would make both of them feel better. But before he could pull her pajama bottoms down, she pulled away from him.\n\n\"Goodbye, Nic,\" she whispered, as she backed up toward the door, still facing him.\n\nNic's heart sunk...again. He wasn't sure what to say. Were anymore words even needed? She wanted normal, and that's something he wasn't. He started walking towards her until she held up her hand.\n\n\"No. Just stay away from me...please. When we get back to the city, just stay away,\" Victoria whispered.\n\nNic stopped in his tracks, his heart breaking with every step she took closer to the door. As she opened the door, he had to tell her again, even though he knew it wouldn't stop her. \"I love you.\"\n\nHe watched as she disappeared through the door and quite possibly out of his life forever. The second time around was ten times more painful than the first time she had walked out on him. But he couldn't lose her. Not again. He'd fucking go through hell and back if he had to, and right now\u2014he had to make another move. A move he knew wouldn't be easy, and could change his life forever. But he knew he had to try, because the price of losing Victoria was one he was no longer willing to pay. A checkmate was fast approaching for the old Nic Andretti, and this time it would take much more than a poem to convince his love to risk it all for him.\n\n*\n\nHey! Hope you enjoyed the latest chapter of Seven Days. Chapter 9 will be the last chapter in this story and I hope it won't take me so long to deliver it to you. \n\nCheck my bio for updates, and thank you all for reading--comments and feedback are welcome!\n\nSoular "
    ],
    "authorname": "soular",
    "tags": [
        "interracial romance",
        "interracial novella",
        "romance novella",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/seven-days-ch-08"
}