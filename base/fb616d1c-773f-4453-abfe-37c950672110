{
    "title": "Grease Monkey Business Pt. 03",
    "pages": [
        "I suppose the well-intentioned threats I received after the last chapter are a good sign. Julie and Red are back for more.\n\nI hope you enjoy it.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"Julie, are you okay?\" I heard from the radio. \"Julie, talk to us. Are you alright?\" \n\nI was frozen in place. Fear gripped me in its icy fingers, while my ears strained to pierce the static that greeted them. Oh, god, Julie, please answer. Please be okay. \n\nA few clicks popped through the noise. \n\n\"Yeah, I'm okay,\" came Julie's voice. \"We're going to need tires, and a new nose panel. Otherwise, I think the car's okay. I'm coming in slow, to avoid tearing up anything else. Both lefts are flat.\" \n\nOkay. She's okay. Thank you, thank you, thank you. \n\nThere were a lot more people in my way on the way to the pits. It seemed to take forever to get there, and the car, with my darling Julie still at the wheel, was back on track before I reached our stall. \n\nThere, sitting in the corner of our garage, was a pile of shattered carbon fibre and two destroyed race tires, still smoking. I poked the body panel with my foot, and flipped it over, showing the car number, 68, confirming it came off Julie's ride. It was split in half, with a central impact point low on the nose, where something hard and heavy had been hit at speed. \n\nA hand on my shoulder made me look up. It was Chip. \n\n\"Someone wants to talk to you,\" he smiled. \"She's quite a driver, your girl. Glad she's on our side.\" He handed me his headset. \n\n\"Hello?\" I said softly, getting the device situated. \"Julie?\" \n\n\"I'm fine, baby,\" she replied, answering my question before I asked it. \"A bit shaken, but not hurt at all.\"\n\n\"What the fuck happened?\" I blurted, letting my concern show through. \n\n\"I'm not sure,\" she giggled. \"It happened pretty fast. One second, everything was fine, then all hell broke loose. I went evasive, and something hit me right on the nose. The car's nose, honey. I repeat... I'm fine. Sure could use a hug when I get back in, though.\" \n\n\"Just try and stop me,\" I smiled. \n\n\"Good. See you in about an hour,\" she said happily. \"I love you. Can I get Chip back?\" \n\n\"You got it,\" I replied, handing over the radio. I somehow suppressed the urge to remind her to be careful. Chip walked away, leaving me alone with my thoughts. \n\nMy worst fears had surfaced, only to be shown unfounded. My Julie was fine. It would take more than a little two-hundred mile an hour accident to hurt her. \n\nYeah, I wasn't buying that, either. I tried to convince myself she was invincible, but I knew better. \n\n\"Just be careful out there,\" I said softly, to myself. \n\n***\n\nNick was getting back in the car after Julie got out, making up for his short shift before the rain. He was ready to go as she brought the car to a stop, right on the marks. As the car popped up on the jacks, the door popped open, and the well-choreographed driver swap took place. \n\nSeconds later, the fuel man stepped forward, and plugged the hose in, providing gas for another hour of racing. When the hose came out, Nick fired up the engine, and off he went. \n\nI was standing behind Julie when she turned around, still wearing all her gear. That hug I owed her? I wasn't going to wait around for her to get comfortable. \n\nI took her in my arms, holding her tight. Maybe a little too tight. \n\n\"Oooomfff!\" she giggled, her voice muffled by the helmet. \"I survive the accident, and you kill me with the hug!\" \n\n\"Sorry, baby,\" I smiled, as she finally pulled the helmet off. Her hair was a mess, and she was sweaty, but in my eyes, she never looked better. \n\n\"What the fuck did you do to the car?\" I heard from behind me. It was Kenny's voice, and the tone instantly made me angry. He had held a thinly veiled contempt for Julie ever since Chip put her in the car. I had heard about a few of his misogynistic comments directed her way, so he was already on my shit list. \n\nAs I turned around, prepared to defend my girl, she gently held my hand, a simple touch that told me my protection was appreciated, but unnecessary. Julie stepped forward. \n\n\"Nothing,\" she replied. \n\nKenny was standing there, looking at the pile of broken bodywork and shredded tires. He gestured, and sneered. \n\n\"Nothing,\" he pointed. \"Yeah, right. Who did you hit?\" \n\n\"Gee, I don't know,\" she quipped back, biting her fingernail girlishly. \"You're the expert, after all. Who did I hit?\"\n\n\"I just woke up from my nap,\" he replied arrogantly. \"How would I know?\" \n\n\"Yes, my point exactly,\" Julie growled, stepping right over to him. She was a smidge taller than he was, and got right in his face, jabbing a finger in his chest. \"You were asleep. I was in the car. Yet you assume I did something wrong. I don't need to defend myself to you, you jerk. Oh, and by the way, we're first in class, and in the top ten, overall, so don't fuck it up when you're behind the wheel, or the person who gets hit will be you.\"\n\nShe spun on her heels and stormed off, while Kenny looked bewildered. Maybe he thought she was just another woman. Now he knew better. I followed her into the garage. \n\n\"Can we call up the footage of the accident? I'd kind of like to know exactly what happened myself,\" she asked, her tone soft and grateful again, now that Kenny had been dispatched. The technician nodded, clicking his mouse and opening a file that had already been marked for viewing. The screen showed various angles of the incident, from the infield, grandstand, and in the car. All the feeds were linked, with the same timecode. He clicked play. \n\nI was more than a little curious myself, and while I watched the screen, I saw our car screaming out of the banking, onto the back straight. Ahead, a gaggle of three GTD Class cars squabbled over a position, with Julie closing fast. Behind her, two Prototypes did the same, closing equally fast on her. This was one of those situations not covered in the driver's meeting. \n\nWhat do you do when you have six cars, in three classes, with three different speeds, arrive at the same point on the track? Now make that point one of the most awkward to pass in, and heaviest braking zones... the bus stop chicane. It was the perfect storm. An incident waiting to happen, and happen it did. \n\n\"I thought so,\" Julie nodded. \"My spotter told me those two were coming, and I had the three in front fighting each other. I figured they wouldn't be as easy to pass as they might be anywhere else. It just felt like trouble. That's why I lifted early.\" \n\nOn screen, the two Prototypes darted past Julie, then dove toward the entry of the chicane. The GTD cars were already entering, causing a rolling roadblock. The trailing Prototype had to brake extra hard, trying to duck behind the leading car, and that was the real catalyst. \n\nWhether it was a defect, or just the wear of an endurance race, we may never know. Brakes are always an issue in endurance racing, designed for quick replacement because of that fact. Whatever the reason, when the second Prototype hit the brakes, the right front brake caliper exploded, sending chunks of metal and brake disc tearing through the fender. \n\nNow with no front brakes at all, that car careened into the four in front, like a supercharged bowling ball, causing carnage on a grand scale. Carbon fibre shrapnel was strewn across the track, and a large piece of front suspension, ripped out of the trailing car by the impact, bounced along, awaiting someone to collide with it. \n\nThat someone was Julie, of course. She was taking evasive action, cutting back to the right, and using the run off escape through the bus stop. That piece of suspension bounced off the sloped hood of the car, then went high in the air. There was no avoiding either the projectile or the carbon debris, and it was only Julie's snap decision to get out of the middle of the storm that saved the car from more serious damage. With two flats and a busted hood, she brought the car in, but bodywork is quickly replaced, as are tires, and she was able to get back into the fray in no time. \n\nI was impressed. Seeing her avoid the accident had given me new confidence in her, even though I would still worry. \n\n\"Wow,\" I heard, from behind again. Kenny had been quietly watching as well, from the back row. Now he knew she hadn't hit anyone. Now he knew she had actually saved the car. \n\n\"I owe you an apology, Julie,\" he said, shaking his head, and shocking me with his about-face in attitude. \"I probably would have been too aggressive there, and piled into the mess. You kept the big picture in mind, and because of that, we're still in the race. I was wrong to jump to conclusions. I'm sorry.\" \n\nHe held his hand out, offering it in contrition. \n\n\"Thank you, Kenny,\" Julie smiled, returning his gesture. \"We're all on the same team, here. We win together, or lose together.\"\n\n\"I hope you won't hold a grudge,\" he added sheepishly. \n\n\"If you want to make it up to me, you can drive your ass off while I'm asleep,\" she smiled. \"Keep it shiny side up, and going like hell. I'd really like a Rolex.\" \n\n\"Me too,\" he smiled. \"You got a deal.\" \n\nKenny walked away, heading over to talk to Chip, while Julie turned to me. \n\n\"Take me to bed, baby,\" she grinned. \"I think I've got enough energy left for a quick one, then I need to sleep. I can use your help getting out of this suit.\" \n\nUndressing her. Such a hardship. I guess I can take one for the team. \n\n***\n\nAs it turns out, she didn't have as much energy as she thought. Once the adrenaline rush had worn off, she wound down pretty fast. I did my part, stripping her, layer by layer. Off came the nomex suit, then the secondary fireproof underwear, and finally her bra and panties. I helped her into the shower, to rinse off the sweat. She came out, looking cleaner but worn out. \n\n\"I'm sorry, baby,\" she apologized. \n\n\"No problem, darling,\" I smiled, wrapping her towel-clad form in a hug. \"We'll save it for the victory celebration. Let's get you to bed. I'm just happy you're safe.\" \n\n\"Me too,\" she smiled weakly. \"Could have been a real mess. Sometimes, instinct is all you have, and that was pure instinct.\" \n\nI tucked her into the bed, and leaned over to kiss her. \n\n\"Mmmmmm, thanks, honey,\" she smiled, her eyes heavy already. \"Can you hold me for a while, just until I fall asleep?\" \n\n\"Sure, baby. Happy to do it, and happy to be in your life,\" I replied softly, laying beside her, and cuddling her in my arms. \n\n\"That was instinct, too,\" she giggled. \"I just had a feeling we'd get along, that's why I gave you my number. I love you, Red.\" \n\n\"I love you, too, Speedy,\" I smiled. \n\n\"Mmmmm, that's me,\" she sighed, and drifted off. \n\nAs for me, I would have loved to just fall asleep with my sweetheart in my arms. Any other time, wild horses couldn't pull me out of her bed, but today, I still had a job to do, and teammates to support. Once Julie was asleep, I carefully eased away from her, and slipped out of bed. \n\nIt was nearly time for me to take over spotting, at least for an hour or so. I left my lover to her dreams, and jumped on my golf cart, heading toward the tunnel. \n\nFor the next four hours, I knew she was safe. \n\nBy then, the race would truly be on, and things would really get interesting. \n\nI only hoped my heart could take it. \n\n***\n\nI was in the pits, watching the race from that perspective. It was pretty exciting, even though you could only see a small portion of the track from here. The cars were so fast, and watching them go from full throttle, to a safe turning speed, in the space of a couple of hundred feet? Well, it's breathtaking, especially at night. \n\nThen, of course, you had the choreographed frenzy of a pit stop. I watched Nick get out, and Kenny get in, about two hours after I put Julie to bed. He did as he promised, keeping the car out front and safe, moving us up to eighth overall with a combination of speed and strategy. As we neared the sixteen hour mark, attrition began to take effect, thinning out the field slightly. \n\nEndurance racing of any sort is always a fine balancing act, but here, on the big stage of Daytona, second only to LeMans, that balance was intensified. Speed isn't enough, because a car that can't finish the whole race, all twenty-four hours of it, may as well be a brick. On the other hand, durability, and its accompanying increase in weight, may make a car too slow to use that advantage. The question always is... How do we make it fast enough, and reliable enough, to finish, and not one minute more?\n\nWhich is part of the reason Chip went with the Ford GT. It was a unique strategy, that could only work in long races like this. Better on fuel due to its smaller, boosted engine, yet still fast enough to not give up too much ground on the track, the big advantage happened when everyone else was sitting still. In the pits. All it took was being able to go three or four laps further than the competition between stops. That's about ten miles further, each fuel run, multiplied out for the duration of many fuel runs. Make one less stop overall, and you just gained thirty seconds on the leader. We were going to make six less, maybe seven. That time gain made up for the speed differential, putting us well ahead of the rest of our class, sniffing the two faster ones ahead. \n\nRemember the old fable about the tortoise and the hare? Well, this was more like the hare and the slightly slower hare, but the lesson still applies. The longer the race went, the more our advantage grew. Slightly slower and steady really might win the race. \n\nAnd of course, some teams didn't get their balance quite right. Some were slowed by mechanical gremlins, others were forced to withdraw completely, for similar reasons. Some were involved in accidents, which were surprisingly rare given the wide range of speeds involved. The field began to dwindle slightly.\n\nI'm talking mostly about the two, faster classes, of cars. Those who held a speed advantage over the GTLM class. We expected to be tops in our class, and light years ahead of the GTD cars. The Daytona Prototype and Prototype Challenge cars were the real competition. Finishing ahead of someone with a much faster car held special bragging rights. That was our primary goal, but sitting in eighth overall, the podium was tantalizingly visible. Imagine finishing ahead of an entire class of cars, that was expected to beat you? \n\nIt was a legitimate possibility, and I could feel the excitement growing within the team as time passed, and yet another PC car was retired. Kenny was doing a good job, and was in his final fuel run of this stint. It was time for me to wake up Julie.\n\nStanding in the doorway of the bedroom, I watched Julie for a minute or two. She wasn't making it easy to keep my mind on the job at hand. Laying on her back, she had tossed most of the covers off, with only the sheet remaining tenuously in place. Most of one long, sensuous leg was laid bare, all the way to the hip, and all of her right breast was also uncovered. Her nipples were standing tall, pointing skyward on her chest as it rose and fell with her deep, relaxed breathing.\n\nI could think of several ways I might use to wake her up, the least appealing of which was merely shaking her. I knelt beside the bed, and succumbed to the siren's call of her breast, bending to kiss and suckle her nipple. It took a minute, but she did eventually stir, moaning softly as she did. Her hand came up to caress my head, combing her fingers through my hair.\n\n\"Hmmmm. You're much nicer to wake up to than my alarm clock,\" she sighed. \"How much time do we have?\"\n\n\"About forty-five minutes,\" I replied, reluctantly releasing her succulent nipple.\n\n\"That's long enough. Get undressed,\" she smiled, rolling out of bed. \"I have to pee, then you can fuck me, baby.\"\n\n\"Um, shouldn't you get something to eat?\" I asked.\n\n\"Red, what I'm hungry for isn't on the menu at the catering truck,\" she giggled. \"It's right here, in this bedroom. I believe you know what I'm referring to? Something in the sausage family?\"\n\nI simply shook my head and smiled. I was naked and in bed before she made it back from the bathroom, and she wasted no time, immediately sucking my burgeoning erection into her mouth. She had it hard as a rock within a minute, and rolled on her back.\n\n\"Lemme have it, baby,\" she purred, checking her vagina with her fingers. \"I'm ready. Fuck me, full throttle.\" \n\nRight. This was not a time for gentle, sensual love making. Get to it \n\nI was quickly on my knees and elbows, watching Julie guide my cock into her hungry pussy. She was well lubricated, and I slipped in smoothly.\n\n\"Mmmmmm hmmm, that's it, baby,\" she moaned, wrapping me in a four-limbed embrace.\" Fill 'er up! Check my oil!\"\n\n\"Your airbags are deployed,\" I laughed, pressing my chest playfully against the soft fullness of her breasts. \"What should I do with these?\"\n\n\"Same thing I do with them,\" she smiled, shaking her shoulders to return the pressure. \"Play with them. Enjoy them. Catch a man with them.\"\n\n\"I'm already caught,\" I replied, kissing her softly, and starting to stroke into her deeply. \"Very happily caught.\"\n\n\"I love you, Red,\" she smiled, looking into my eyes. \n\n\"I love you too, Julie,\" I nodded. \"And I'm so proud of you. You're really kicking some ass, out there.\"\n\n\"Thank you, baby,\" she giggled, absorbing my thrusts. \"Oh, thank you, thank you, thank you. Mmmmm, yes, Harder! Fuck me harder! Yes! Deeper! Mmmmmm hmmm, just like that! Fuck my cunt!\" \n\nI briefly wondered how many other drivers might have done similar things during the duration of the race. Julie wasn't the only woman in the race today, but she was the only one in the upper classes, as all the rest were in GTD. Certainly, with the number of speed groupies around, if a male driver wanted to find a willing partner to fuck, he wouldn't have to look too far, but, being a man myself, I can vouch for that being a mistake. After I have sex, I want to rest, so I don't really get an energy boost from it. \n\nJulie did. She was often bounding around the house after we fucked, somehow recharged by her orgasms. Maybe it was an energy transfer, and I was the battery.\n\nAnyway, since she'd soon be back in the driver's seat, I knew she would be happy to accept a jump start on her adrenaline rush. I would happily provide it. \n\nI could tell she was getting closer to cumming by the second. We had been together for long enough that I had learned to read all her cues, both subtle and overt.\n\nHer nipples definitely fell into the overt category, and as they puckered tighter, they forced the succulent tips of her breasts into little cones, pointing upward. I could feel them rubbing their hardness against my chest. Also in this category, her moans and groans, mixed with words of gratitude and direction, told me I was on the right track. \n\nI found special pleasure in her subtle signs of arousal; those she wasn't even aware of, that were automatic and beyond her control. Goosebumps. The pace and throaty undertones of her breathing. The urgency of her touch. \n\nHer legs were lifted, and wrapped around my waist as I shafted her hard and fast. I felt her thighs quivering. Very close.\n\n\"Ohhhhh, oh, oh, oh goddddddddddddd!\" she moaned, and her pussy clamped down. \"Don't... stop... more! More! YESSSS!\"\n\nMy mission was accomplished, and I kept fucking her furiously, Julie came, and came, and came, screeching joyously. Finally, I slowed my pace, taking a relative breather. \n\n\"One more, and I'll be fully charged,\" she panted, clawing at my rump. \"Cum in my mouth. I need a little snack.\" \n\n\"That can be arranged,\" I grunted, shifting into high gear, as much for myself as for her. Within a minute, Julie was screaming again, and I was on the brink. \"Open up, baby. Here it cums.\"\n\nJulie unlocked her embrace, freeing me. I pulled out, and knelt over her, pumping my frothy cock with my right hand, while she watched, mouth agape, her tongue extended expectantly. I doused the wriggling, pink appendage with a thick blob of sticky sperm, before she grabbed my shaft and swallowed it, sucking deeply.",
        "\"Oh, fuck, that feels good,\" I moaned, gushing down her throat. She gulped down everything I fed her, and sucked the dregs out of my balls. She released me, and we both collapsed on the bed. \n\n\"Mmmmmm, that hits the spot,\" she sighed, licking stray semen from her lips. \n\n***\n\n\"Hmmmm. I think I like this,\" she smiled, as I helped her dress again, which was almost as much fun as undressing her. \"I think I'll hire you as my personal valet, when I'm rich and famous. You wouldn't mind, would you? Fucking your boss?\"\n\n\"Not at all, Ma'am,\" I smiled. \"I'll just add it to my list of duties.\" \n\nHelping her into her panties, I adjusted them for comfort and smoothness, giving the juicy gap between her labia a passing caress. This layer of underwear was clean, as was the sports bra I harnessed her into next, using both hands to squish her fabulous boobs into the cups that confined them in a decidedly unsexy way. I greatly preferred her in one of her cleavage enhancing bras, rather than this one which conspired to flatten and hide her most obvious assets. A t-shirt over the top would absorb some of the inevitable sweat the next few hours would cause.\n\nThe first layer of fire-resistant nomex underwear followed, then she stepped into her driving suit, zipping it up to her waist, with the sleeves tied across in front. Her driving shoes were next, and I tied them for her, then taped the laces down.\n\nShe was ready. \n\nOutside, the darkness of night that enveloped us when she went to bed had given way to a beautiful, clear, Florida winter morning. The sun was doing its job, erasing the chill of the evening. The race was entering its most important phase.\n\nSix hours to go. Six more torturous hours, testing mechanical systems and physical endurance to the breaking point.\n\nSix more hours of glory.\n\nBefore we stepped out of our mobile home, Julie swished some mouthwash, to cover the smell of my cum, and checked her hair in the mirror. Only a minute out the door, some race fans recognized her, and we stopped for some autographs.\n\n\"I'm kind of liking this,\" she smiled as we left the happy fans behind, on our way to our pit box. \"Would you like an autograph, too?\"\n\n\"I think you already gave me one,\" I giggled, pointing to my butt, where her nails had dug into my skin during her orgasm.\n\nShe simply smiled, and hooked her arm in mine, and we walked in silence the rest of the way. On our approach, Chip looked up, and came over to talk to us.\n\n\"Change of plans,\" he told us, pausing for a moment to listen on his headset. \"I want to put Nick back in for the next stint, instead of you...\" he held up his hand, listening again.\n\nJulie looked at me, clearly distressed at this change. It felt like they were taking away her part in the finish. I was confused, too, but Chip had more to say.\n\n\"Hold on. Kenny is coming in, right now,\" Chip said, as the crew leapt into action. \"He cut a tire. Nick! You're in!\"\n\nThis was not the time to argue, and Julie stayed attached to me, out of the fray, while Kenny brought the car to a stop, and jumped out. Nick was in and secure seconds later, letting the crew begin servicing the car. Four fresh tires and a full tank of fuel sent Nick back out onto the track, to do his best.\n\nChip was now talking to Kenny, who still had his helmet on. He glanced over at us, and shook his head, then pointed in our direction. Chip patted him on the shoulder, and headed toward us.\n\nJulie's grip on my arm grew tighter. She steeled her expression, bracing for bad news.\n\n\"Sorry about that. Bad timing. I thought we had another fifteen minutes before our stop, but shit happens!\" Chip laughed. \"Anyway, as you can see, Nick is back in. Kenny is going to rest, and get back in...\"\n\n\"So, I'm done?\" Julie asked, cutting him off. \"Did Kenny suggest this?\"\n\nChip did his best 'father figure' impression, putting both hands on her shoulders, and looking her straight in the eye.\n\n\"Actually, yes, he did suggest it,\" he nodded, an incongruous smile on his face. \"Julie, you're not done. You're my anchor.\"\n\nJulie looked at Chip, then at me, then Chip.\n\n\"Anchor?\" she asked, baffled. \"Not Kenny?\"\n\n\"Not Kenny,\" Chip confirmed. \"You. Julie, Kenny is going to take a break, then get back in and put the hammer down. He's going to set you up to finish. You get the last three hours. We've been looking at the data, and running the numbers, and I think we can reach the podium. Between Kenny's aggressive style and your smooth one, I think we can do it. Julie, we need you. Kenny may be faster for a short stint, but you're the best we've got over a longer one.\"\n\n\"I, um, thank you,\" Julie nodded. Her expression was a mix of relief and terror.\n\n\"Red, take her by the hand, and make her relax. Feed her. Get her ready,\" Chip told me. \"You've got about ninety minutes, then I need you back here for a chat.\"\n\nWhen I took Julie's hand, it was shaking. She looked up at me, and bit her lip.\n\n\"Holy shit,\" she smiled. \"They want me to finish? Jeez. No pressure, huh?\" \n\nI led her to the commissary, and put her at a table, leaving her to her thoughts while I got us some food. When I returned to the table with a tray, she looked up again.\n\n\"You don't think he's setting me up, do you?\" she asked, her brow furrowed in concern. \"Kenny doesn't like me much. I wouldn't put it past him to do that. Set me up to fail, so he can blame me for us not winning.\"\n\n\"Are you planning to lose?\" I asked, putting the plate in front of her. \"I got you a BLT. It seems to me that, if you're in the seat, it's your foot on the pedal. Even if it is a setup... and I'm not saying it is... It's your car while you're in it. His ass is in the pits.\"\n\n\"So, you think it's legit?\" she arched her eyebrow, taking a bite of her sandwich. \"I'm not sure if that's better, or worse.\"\n\n\"Why? Julie, you're fast. Don't let anyone tell you otherwise,\" I pointed out. \"Chip didn't put you in the car because he was feeling charitable. He wants to win. He wants to win more than just the class. He thinks you can do it, and so do I.\"\n\n\"It's a lot of pressure. This could be a turning point in our life,\" she replied. \n\nI smiled. I smiled so big, she had to react. \n\n\"Okay, smartass. What's so funny?\" she glared, crossing her arms in anger.\n\n\"Not funny, just interesting,\" I laughed. \"First, that you're worried, and second... you said 'our life'. I guess we're in this together, aren't we?\" \n\nHer anger faded away, and she grinned, uncrossing her arms and picking up her sandwich.\n\n\"It would appear that way, wouldn't it?\" she giggled. \"Suddenly, I feel a lot better.\"\n\n\"Glad I could help,\" I nodded. \"Do I get my own spiffy driving suit, like yours, or do we have to share?\"\n\n\"Maybe we could install a passenger seat in the car?\" she smiled.\n\n\"I've driven with you, honey. If you remember, you nearly made me shit myself. Probably be best if you just go it alone in the car, and know I'm there for you when you're done,\" I said softly. \"Win or lose, I want you to remember I'm so proud of you, and I love you more than ever.\"\n\n\"Thank you, honey,\" she smiled, moving around the table to sit on my lap. She kissed me gently, and held her wrist out. \"So, how do you think I'd look with a big honking Rolex on here?\" she asked.\n\n\"Not a ladies' watch?\" I grinned.\n\n\"Hell no! If I win a Rolex, I want to make sure everyone knows it!\" she laughed, her eyes sparkling again with the confidence and energy I loved about her. \"Think it'll look good?\"\n\n\"Why don't we go find out?\" I suggested.\n\n\"Fucking right!\" she winked.\n\n***\n\nWe soon found ourselves back in the pits. Minutes later, Nick brought the car in, and Kenny jumped back behind the wheel. It was a fuel-only stop, and the car was quickly returned to competition.\n\nAfter her talk with Chip, which let him know she was ready, Julie was in the back of the garage, watching the timing feed scroll across the screen of the computer monitor. I was at the wide entrance door to the garage, enjoying the sun and the visceral sounds of all that horsepower flashing past. I glanced back at Julie, and found her tapping the screen, a thoughtful look on her face. Suddenly, she stood upright and bolted out the door. Curiosity made me follow.\n\nHer quarry was easy to find, as Chip was on top of the pit box. She climbed the ladder part way, to talk to him, putting her ass right at eye level for me. I resisted the urge to grope her, but did reach up to grip her waist, so she wouldn't slip. Chip found the conversation interesting enough to come down and follow her back to the monitor in the garage, and I tagged along.\n\nJulie's finger pointed out the numbers she wanted Chip to see, and he nodded as she told him her plan. A smile grew wider on his face, and he handed the headset to Julie.\n\n\"Fill Kenny in on the strategy,\" he said, and patted my shoulder as he passed. \"Like I said before, I'm glad she's on our side.\"\n\nHe gave a quick synopsis of her idea... but there's a lot more to it. I'll try to explain. \n\nIf you're a race fan, you might be familiar with the term 'drafting'. It's become a huge part of the sport, in almost every class. Only open wheeled cars on road circuits shun the strategy, as their downforce is disrupted to a greater extent than the speed gained is worth. But I digress.\n\nDrafting is an aerodynamic advantage, born by accident, and it has led to the sleek designs that inhabit racetracks in the modern world. The simplest explanation is still pretty complicated, but I'll try. \n\nAerodynamic forces in the horizontal plane are basically Thrust, in the forward direction, and Drag, in the rearward. Thrust, in a car, equates to horsepower. When horsepower exceeds drag, acceleration is possible, but when drag equals horsepower, the car reaches maximum speed. We'll ignore mechanical sources of drag for this example. \n\nLet's make the math really easy. If it takes 100 horsepower to push a given car through the air at 50 mph, and we wish to go faster, we can logically make one of two choices; either increase thrust, or decrease drag. That's logical, and true... up to a point.\n\nYou see, the laws of nature don't follow the logic of man. Light falls off in a reciprocal square rate. Increase the distance from the light by a factor of two, and you have not half as much illumination, but one quarter. Air follows a similar pattern, sort of.\n\nIncreasing speed also increases drag, but not at a logical rate. Double the speed... Four times the drag. Since maximum speed is where thrust equals drag, you can see that pushing our hypothetical car to 100 mph, will require not 200, but 400 horsepower. Want 200 mph? You'll need 1600 horses.\n\nSince the internal combustion engine can only do so much under the rules of racing, you can see why race teams spend so much time in the wind tunnel, sculpting their cars to reduce drag and improve airflow to create downforce for traction. It's much easier to smooth and reshape the bodywork than apply brute force. \n\nNow, a single car has to punch through the air, causing drag at the front end where the air has to move out of the way. As the air passes, it wants to rejoin its friends, but can't because there's a car in the way, so as soon as the car gets past, the air folds back in, causing a low pressure area of drag behind the car. Those two areas... in front and behind... are the total drag on the car. Got it?\n\nPut another car behind, very close. Now, the front car still punches a hole, and the second car still has that low pressure bubble of disturbed air behind it, but in between, there's less turbulence, decreasing the drag on both cars, and allowing them to go faster together than either could alone.\n\nSo, now that you have a sense of how drafting works, you can understand Julie's idea. Find a faster car, and stick to the back bumper like glue.\n\nI know... It's hardly a new idea. Drivers have been doing it for many years. The trick is finding just the right car to follow.\n\nAt Daytona, with four different classes of cars running at four different speeds, traffic was a constant factor. You were either passing, or being passed, nearly every lap. Obviously, we were looking for someone faster to follow, so it was going to be either a Prototype Challenge car, or a Daytona Prototype. But the PC cars are already behind us, and not fast enough to catch the three cars still ahead of us. We were in fourth overall, and the cars ahead were all DP's. It would seem to be unsolvable. \n\nRacing was, at one time, simply a contest of speed and courage between drivers. While those elements are still a large part of it, the information age has changed things somewhat. Teams now employ specialists in strategy, that can run simulations based on the available data about their own car, and projections for the competition.\n\nSo, with a little less than four hours left to the finish, we could guess with reasonable certainty how many laps we'd run before the clock ran out. We knew how many more pit stops we would need to make, barring calamity. Best of all, we could make similar projections for the competition. Our fourth place finish, 1st in class, was relatively secure. The simulations put us only around fifteen seconds behind the third overall finisher. Maybe traffic would slow them, and bring that even closer.\n\nAnd maybe Julie's idea would bring even the second position within reach.\n\nThe numbers Julie had noticed were the lap times of a DP car, well behind us in the standings. That car had spent almost an hour in the pits, repairing damage and mechanical problems that had plagued them. Now that those repairs were done, they were carving their way through the field. They were faster than us, and faster than everyone, except the leader, but not so fast that drafting them would be impossible. Just less than a second per lap faster than us, and half a second faster than the second place car, if we could hitch our wagon to him, we'd gain time rapidly.\n\nIt was certainly worth a try. \n\nSo, when Chip handed Julie the headset, she smiled. \n\n\"Explain it to him,\" he grinned, and stepped aside. \n\nJulie nodded, putting the radio on.\n\n\"Kenny, it's Julie. How do you read?\" she said evenly. \"Good. Listen, there's a car coming up behind you, and we're going to use him for blocking and drafting help. Be ready. If we miss him, we'll have to settle for fourth. Yes, he's four seconds back right now, gaining about a second a lap. Yes, we'll keep you posted. The spotter is watching him. We're hoping he catches you just entering the infield section, so he doesn't just blow past and leave us behind. Right.\"\n\nShe handed the headset back to Chip and smiled.\n\n\"He's got it,\" she nodded. \"All we can do now is wait and hope.\"\n\nJulie took a seat in the garage, looking at the monitor, and listening to the chatter on our radio. I could tell by her bouncing foot that she was no longer nervous about her part in the outcome. That emotion had been replaced by excitement. I pulled up a chair next to her, and took her hand. \n\n\"Where is he?\" Kenny's voice asked.\n\n\"About two seconds,\" our spotter replied. \"Next lap.\"\n\n\"Roger, that,\" Kenny added. \"Tell me when he's a second back.\"\n\n\"Will do,\" the spotter answered.\n\nJulie glanced at me, and squeezed my hand.\n\n\"This is a lot less nerve-wracking from inside the car,\" she giggled.\n\n\"Not for me,\" I smiled, \"but I get your point.\"\n\nThe radio crackled again.\n\n\"One second. He's hitting some traffic. Be ready.\"\n\n\"Ooooo, this might work just right,\" Julie grinned. \"He should pass us just before the infield section. We're faster in there, so we can stay on his ass. Just hope we can stick to him on the high banking.\" She got up and walked out to watch, forcing me to follow. \n\n\"Fifteen car lengths...\" the radio said. \"Twelve... ten... He's past the traffic... eight... \"\n\n\"Take it deep into number one, and make him pass on the inside, so his angle is shallower... \" Chip coached.\n\n\"Four more...\"\n\n\"Got him,\" Kenny said, as they flashed past us, side-by-side. By pinning the DP to the inside, he made the corner sharper, forcing him to slow down a little. Kenny dropped neatly in behind, mere feet from our new best friend.\n\n\"We got him!\" the spotter chirped. \n\n\"Yes!\" Julie exclaimed, pumping her fist in joy. \"Ride that pony, buddy! Hold on to that draft!\" \n\nThat was the real trick, wasn't it? The effect of the draft was like an invisible rubber band... if you didn't overstretch, and break it. Just stay close enough so that bubble of lower pressure could pull you forward a little faster than you go without it.\n\nKenny did a great job, hanging onto that rear wing like a dog with a bone. Our lap time following him was seven-tenths of a second faster on the first lap, and nine-tenths better the second. Kenny drove his ass off, leaving nothing in reserve, lap after lap, gaining time several tenths per lap, until he finally made a small mistake fifteen laps later. He lost the sweet spot, and two laps later we were once again all alone.\n\nAll alone, but twelve seconds closer to second place. That may not sound like much, but at these speeds, that's half a mile. Enough of a gain that the third-place car was once again in sight.\n\nThere's something about being able to see your target, that makes race drivers focus like nothing else. For the rest of his stint, Kenny did his best to shave that gap even more, managing to at least maintain our gains. At last, our quarry peeled off to the pits, temporarily moving us up to third. Kenny brought the car in a few laps later.\n\nIt was now Julie's race. I was so proud of her, as she calmly pulled her bellaclava on. I helped her tuck it in, and gave her chest a reassuring pat, which elicited a giggle.\n\n\"You wouldn't be trying to distract me, would you?\" she asked, adjusting her helmet. Her eyes sparkled through the visor, and she flipped it up. \n\n\"I have a feeling it will take more than that to do it,\" I laughed. \"Shall I whip it out?\"\n\n\"I just put my helmet on,\" she snorted. \"It makes sucking your cock difficult. Perhaps you can keep it in your pants until I'm done work, and we can celebrate then?\"\n\n\"Well, if you're going to make me wait, you'd better make sure we really have something to celebrate,\" I smiled.\n\n\"It's a deal,\" she nodded, as the car stopped in our pit stall. As they had done so often in the last day, the team moved with choreographed precision, first swapping pilots before providing fresh rubber and fuel. When the refueling hose came out, the engine roared to life, and Julie put her foot down.\n\nOf course, our pit stop put us back behind the third place Daytona Prototype again, but our gains relative to our real goal... second place... remained intact. It was the classic accordion effect, two steps forward, one step back, but we were moving in the right direction.\n\nAs long as we had enough time.\n\nJulie was doing her part, slicing through the traffic smoothly, lap after lap. Whenever a faster car would catch her from behind, she would latch onto that invisible coattail and hang on as long as she could.\n\nIn the garage, the strategists had their feet up, watching the numbers scroll on the screen. There was little else to do. We already knew our plan. We knew that we had two more stops to make, and that if the cars ahead kept up this pace, they would have to make three. That fact alone should put us in third at the finish line, but within sight of the second-place car. \n\nBack on the track, the third-place car pitted again. Julie wasn't due back in for at least fifteen laps, so this was our opportunity to leapfrog him. \n\n\"Please confirm,\" Julie asked over the radio. \"Was that P3 I saw entering the pits?\"\n\n\"Roger,\" Chip answered. \"Time to put your foot down.\"\n\n\"It's been down since I took this seat,\" she laughed, \"but I get the idea. Hammer time!\"\n\nThat pitstop put P4, formerly P3, almost thirty seconds behind us. It also put him... fortunately for us... mired behind a block of traffic that we did not have to deal with. If Julie could pull out another half dozen seconds before her stop, we'd come out ahead of him, and the traffic as well. ",
        "None of this was news to Julie, and she responded with twelve consecutive fast laps, faster than anything we'd run all day, except draft-assisted laps. It was enough to get the gap we needed, and solidify our position. \n\nThe counter was down to one hour and fifty minutes when Julie left the pits, blending into traffic, still in third place, but only by a few seconds. Now was not the time to squabble over space, and when the DP caught up, she just fell into his wake again. \n\nOn fresher tires, she was able to stick to him for the entire duration of his fuel load. It was the pivotal moment in the race, and the crew was all smiles. \n\nI was smiling, too, but deep down, the concern I always felt when she was driving muddied my happiness. She had already dodged one bullet today, and now she was driving more aggressively than usual, at a time when the normal level of 'give and take' between drivers was becoming less 'give', and more 'take'. \n\nShe used the faster car in front of her for aerodynamic help, but also as a blocker, providing a small measure of protection from other cars movements. \n\nWhen her blocker pitted, we once again moved into P3, but now much closer to the second-place car. \n\n\"I see your ass now,\" she growled, clearly focused on our quarry. \"Here, kitty, kitty. Come to Julie. I won't hurt you. I just wanna steal your Rolex.\"\n\nThe car in front was doing well, and the driver in that seat was experienced. He was intentionally adjusting his pace, so that traffic wouldn't cost him too much by catching it at the wrong place, but it was still costing him time. One-tenth here, two-tenths there... Julie was inching closer each lap.\n\nThen he pitted.\n\n\"P2... Julie Stroud!\" the spotter informed her.\n\n\"Roger that,\" she giggled, \"but the show ain't over. Gotta keep him back there.\"\n\nShe did her best, using every car for every bit of draft she could, and continuing to pull in those fractions of a second each lap, until it was time for our stop.\n\nOur last stop.\n\n\"Okay, guys,\" Chip said over the radio. \"I don't really need to tell you this, but this is our last pit stop, so let's do it right. Don't rush. Do it right, just like we practice. We've all worked really hard to get to this point, and we're not giving anything back, are we?\"\n\nI saw a lot of heads shake, and thumbs up, as the crew members took a deep breath. The tire changers bumped fists, then butted their helmeted heads, ready for action.\n\n\"Here she comes,\" he called out, and the car stopped on its marks.\n\nTo me, things seemed to move in slow motion, as the crew leapt into action. Scarcely had the wheels stopped turning before the air guns were spinning the wheel nuts off, even as the car popped up on the jacks. The worn tires were yanked off, replaced with fresh rubber, and the guns whirred once more, cinching the wheels tight. Meanwhile, the gas man held the large hose in its receptacle, and the jack man peeled a clear layer off the windshield, giving Julie a clean view ahead. He even had time to tweak the back wing, making a minor adjustment, before he stepped back to his hose. The tires were done, and as the gas man uncoupled, the car dropped. Julie fired the engine, and left, in a cloud of tire smoke.\n\nChip clicked his stopwatch, and looked at the display. Then he looked again, and smiled.\n\n\"Great work, guys!\" he cheered, arms held high. \"Fastest stop of the day! Okay, Julie, it's all on you now. Go get him. Run his ass down!\"\n\n\"Consider it done,\" she purred, rejoining the race, and pulling into traffic just behind a PC car. She let him block for her, until a faster car caught up from behind, then switched partners.\n\nThe official clock showed forty-five minutes remaining. We were in P3, having been passed in the pits, but we were closer than before the stop. All we needed to do was stay where we were, and the other car's final stop would put us in second again.\n\nOf course, we weren't the only ones with a team of strategists, crunching numbers. The car we were chasing had them too, and they rolled their final dice a few laps later, short-pitting ahead of schedule, for fuel only. It brought them out quicker, and closer behind us than we would have liked, but also cost them speed, in the form of fresh tires, which we had.\n\nThe final stint would be a shootout, and the advantage they might normally have had was reduced to manageable levels.\n\nMay the best driver win. You can guess who I was pulling for. \n\n***\n\nFor the first time in the last twenty-four hours, Daytona International Speedway was quiet. The fans had gone home, many still talking about the exciting finish they'd seen.\n\nI was leaning against the wall of the shower, inside the motorhome that had been our little love nest for the last couple of days, my ears ringing from the constant roar of horsepower. It would be days before they stopped.\n\nJulie was... you know, I'm not really sure just where she was, right now. Probably with Chip, or talking to some reporter about the last stint, and the final outcome of the pitched battle she had waged with the number 11 Daytona Prototype. I'm sure her adrenaline level would sustain her for hours.\n\nMine, on the other hand, was drained. Other than a few cat-naps here and there, I hadn't slept since the race started, and that fact had caught up with me. \n\nThat final stint had been pretty exciting, I'll admit. The last twenty-five laps... I had no idea I could hold my breath that long.\n\nWhen our competition pulled out of the pits, he had been three seconds back of Julie. Due to traffic and her spirited driving, it took him ten laps to reach her rear bumper, if these cars had bumpers. Then the fun really began. \n\nWith the overall leader on a lap of his own, well out in front, the focus of attention fell on the only undecided battle on track that mattered. \n\nTwenty-four hours is a long time. Maybe not so much for the average person, but for a race car, it's an eternity of torture. There were only two cars left that had avoided mechanical issues. Only one PC car was running, and it was just logging laps to ensure the class win. Our teammates had been slowed by gremlins. All of which adds up to helping put us where we were, and we intended to take advantage of the opportunity. \n\nWith that in mind, I had watched my darling Julie drive her figurative ass off to finish. No doubt, the 11 car wasn't at its best, with worn tires and a slightly sick engine, but it was fast enough under most circumstances to get past us. Julie simply wasn't willing to accept that, and she used every trick in her arsenal to stay in front.\n\nSeveral times, the DP managed to get along side, but never had the chance to complete the pass. Once, he did make it past, entering a first turn on the inside, but he missed his braking point and went high, letting Julie cross over behind him and regain the spot.\n\nThe decisive move was hers.\n\nJust before the leader began his final lap, Julie held the advantage as they entered turn 6, leading out onto the high banking. As always seemed the case, a group of slower GTD cars ahead were running three-wide, exiting the turn. She went right, hoping to sweep around them high on the banking before the chasing DP could catch her. It was a snug fit.\n\nDaytona is a wide track. NASCAR routinely runs three-wide here, and under the right circumstances, have even seen an adventuresome driver go four-wide... but not in the turns. It was only her split-second decision that let it work, and she still scraped the wall slightly, squeezing through the hole before it closed.\n\nThe DP found himself trapped behind a wall of cars, even if for only a moment, while Julie rocketed away, building enough of a cushion that she was able to run the last lap-and-a-half unmolested. She crossed the finish line, to confirm our class victory, and cement second overall.\n\nOn the podium, Julie was sandwiched between Kenny and Nick. Julie patted Kenny on the chest in congratulations, which was completely normal... until he patted her back, on the same spot. He seemed to be the only one who realized what he'd done, and he made eye contact with me, a sheepish look on his face.\n\nI used two fingers to point at my eyes, then at him, sternly but silently telling him I was watching him, and saw what he did. Then I smiled, letting him know I understood that he hadn't done it intentionally, simply getting caught up in the moment. \n\nWhat followed was a couple of hours of celebration, cameras, and confetti. There was only one minor conflict, and Chip took care of it.\n\nThat conflict was with Gunnar Ericsson, the driver who Julie had bested in that final stint. He had come to shake Julie's hand, but not all his words were complimentary.\n\n\"You're lucky I'm a patient man,\" he warned. \"I could have turned you, easily.\"\n\n\"I'm sure you could have,\" she smiled. \"Of course, they frown on that, don't they?\"\n\n\"Yes. I had no desire to wreck you and get in trouble myself,\" he answered. \"I still should have beat you, though.\"\n\n\"It's not her job to let you past,\" Chip stepped in.\n\n\"No, I suppose not. It's my job,\" Gunnar told Chip. \"If we hadn't had mechanical problems, you would have been a dot in my rearview. You were lucky.\"\n\n\"You know, I'm thinking maybe next year, we'll field a DP team,\" Chip grinned. \"Then she can kick your ass again, and you'll have a whole year to work on new excuses. Now, if you don't mind, I'd like to talk to my driver?\"\n\nI had watched as Chip pulled her aside, spending a few minutes in animated conversation with her. They traded smiles, and he patted her forearm as they shook hands. Julie looked in my direction, and stepped away from him for a moment.\n\n\"Hi, honey,\" she smiled, wrapping her arms around my neck. \"Chip needs me to do a few interviews. I'm sorry, I'm going to be busy for about another hour. Why don't you go back to the camper, and rest. I'll tell you all about it when I get back.\"\n\n\"Um, sure,\" I yawned, holding her close. \"What was Chip talking about?\"\n\n\"I promise, I'll tell you everything,\" she repeated, kissing me softly. \"Trust me?\"\n\n\"Always,\" I nodded, \"but the curiosity will kill me.\"\n\n\"How about if I save you from that fate?\" she giggled. \"I can tell you this; it's very good news. Will that tide you over?\"\n\n\"Hmmmm. Good news?\" I replied, pondering the possibilities. \"I suppose it'll have to do. Fine. I'll go warm up the bed, and await your return. Don't be too late?\"\n\n\"I'll be there as soon as I can,\" she assured me, and left with another kiss.\n\nAfter my shower, I crawled into our bed. I must have been more fatigued than I thought, because I didn't even hear her come in. I didn't hear her get undressed, or hear her in the shower. It wasn't until I felt soft lips on mine, and a few droplets of water on my face, that I woke and found her leaning over me. She was smiling. \n\n\"Hi, Sweetheart,\" she whispered. \"I'm sorry to wake you, but we have plenty to talk about. I mean, you wanted to know what Chip was talking to me about, right?\" \n\n\"Um, yeah, I do,\" I replied, rubbing my eyes. Julie dropped her towel, and slid into bed beside me. \"So? What's the good news?\" \n\n\"Well, remember that I was worried about messing up the moment that might change our lives?\" she asked, cuddling into my side.\n\n\"Yes,\" I nodded, and kissed her damp hair. \"I assume, if it's good news, that those fears proved unfounded?\" \n\n\"You're quite correct,\" she smiled, tickling my chest with her soft touch. \"If we want to, we can change things together. Would you like to come with me?\" \n\n\"Julie, you know you mean the world to me, and I'll follow you anywhere,\" I answered her. \"My life is nothing without you.\"\n\n\"I didn't want to assume,\" she said quietly. \"You have a life of your own.\"\n\n\"Our future is together,\" I told her. \"That's all that matters. So, where is that future taking us? What did Chip say?\" \n\n\"There's so much, it's hard to know where to start,\" she said, rolling on her back. My eyes followed the soft rebound of her breasts as they moved on her chest, settling a split second after she stopped.\n\n\"Okay. Let's start with next year. Are we racing here again?\" I prompted. \"If yes, in what class?\"\n\n\"Well, I think that guy being an ass really pissed him off, because...\" she began, then smiled wider, \"... Yes, he wants me back, and it will probably be in a Daytona Prototype. Maybe a Riley, if he wants to stick with Ford power. Maybe another manufacturer. It doesn't really matter to me. He wants me to drive... I'll drive.\"\n\n\"That's awesome, baby!\" I smiled. \"So, we know what we're doing this time, next year. What about in between?\"\n\n\"Um, I don't think it involves doing oil changes anymore,\" she said cryptically. \"At least, not on customer cars. Maybe on my own, or yours, but that's about it. Chip wants me under contract.\"\n\n\"So do I,\" I laughed, intertwining my fingers with hers. \"I know the kind I'm talking about. What's he thinking?\"\n\n\"He'd like me to sign a development deal. It would pay pretty well, and I'd be doing some seat time in the team's NASCAR cars,\" she explained. \"Some testing, some research, and a few races in the Xfinity car. It could lead to a full-time ride, in the next couple of years.\"\n\nThat definitely sounded like good news to me, but she said it in such an even tone, I knew she was viewing it with some concern. \n\n\"That's great, right?\" I asked. \"Isn't that what you want? I know how much racing means to you. Why the hesitation?\"\n\n\"Before I met you, I would have jumped at this opportunity, without a second thought,\" she clarified. \n\n\"I'm sorry?\" I frowned.\n\n\"That's not what I meant, and you know it,\" she giggled, sitting up quickly. Again, her beautiful breasts swung, and attracted my eyes. \"It's just that I have more to consider now that we're together. It's not just up to me anymore.\"\n\n\"Yes, it is, honey,\" I said softly. \"I'd never keep you away from your dreams.\"\n\n\"But I know how much you worry,\" she smiled, looking into my eyes.\n\n\"Sure, I worry, but I trust you. You're a good driver. I know racing will never be risk free, but you're safer out there than on the road on the way to the track,\" I assured her. \"I'll get used to it.\"\n\n\"So, that's a yes?\" she whispered, shifting closer to me. I caressed her arm, from the shiny Rolex on her wrist upward, and brushed my fingertips over her left nipple.\n\n\"Of course,\" I smiled.\n\n\"Are you sure you don't need a little more persuading?\" she purred, pulling the sheet lower. Her hand found my penis, and stroked it gently. \"I can be very persuasive.\"\n\n\"Well, um, perhaps I've changed my mind,\" I smiled, leaning back while she arranged herself between my spread legs. She grinned up at me, licking her lips, as my cock grew stiffer in her hand. \n\n\"Oh! Wait! I almost forgot!\" she gasped, jumping up, and darting out the door. She came back with a box in her hand, and put it beside me. \"This is actually from Chip. He said he thinks you'd appreciate it more than anyone else, since he already has several of them, and thanks you for loaning me to the team. You can open it. I'll get back to persuading you.\"\n\nAs Julie's lips began to slide wetly down my shaft, and her tongue swirled seductively around the head, l reached out and picked up the box. \n\nI cracked it open.\n\nIt was my turn to gasp. Maybe it was the blowjob I was enjoying greatly, or maybe it was the glittering watch in the box. \n\nAs team owner, Chip had been presented with the trophy for winning the class, as well as a watch exactly like the one on Julie's wrist. The trophy he was keeping. The watch and the girl were mine. \n\n\"Really? He's letting me have his Rolex?\" I mumbled, as Julie established a smooth rhythm.\n\n\"Mmmmmm hmmmm,\" she moaned, never breaking her pace.\n\nI turned the watch over. The back was engraved: Rolex 24 at Daytona, Winner.\n\nLooking down, I made eye contact with my darling Julie, as she lovingly sucked my cock. I glanced again at the watch.\n\nYeah, I definitely won. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI do hope you enjoyed this chapter. I'm sure there's more for Red and his speed racer, Julie. Please cast your votes."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "younger woman",
        "older man",
        "blonde",
        "big tits",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/grease-monkey-business-pt-03"
}