{
    "title": "First Master",
    "pages": [
        "My First Master\n\nI've known my Master for the better part of my adult life. Initially we were close friends. The kind of friends who were always there for one another. I had often been the shoulder she cried on. The confidant with sound advice. The one who helped her moved even though I hate moving. Personally wise, we are complete opposites and I often wondered how this friendship found a way to flourish. She's incredibly outgoing while I was quiet and shied away from attention.\n\nWhile I always viewed myself as average looking and was never comfortable talking to the opposite sex. She turned heads where ever she went. As the years piled up our bonds strengthened but I never let her know how I felt. I kept every raw emotion hidden from view. Every secret look, every day dream I had of her was locked away. She was beautiful outgoing, ambitious. What would she ever see in me.\n\nIf I'm being honest was not what she went for. So I never viewed myself as her type. So I fawned over her in secret. I would get excited when she called or texted. The sound of her voice was music. I craved her emotionally and sexually.\n\nOne of the other secrets I kept from her for so long was that I was a deviant. I was attracted to her strong personality. The confidence that her shoulders carried. The way she refused to be taken advantage of. She was regal. The kind of person that commanded respect no matter what room she entered. \n\nThat strength was intoxicating.\n\nA few years ag, we were hanging out at her apartment. She had stepped out for a few minutes to run some quick errands. I don't really remember what for. All I knew was that it was my opportunity. She had her laundry piled up on the floor, ready to be sorted and washed. My cock had been throbbing most of the day. She had no idea what she did to me. I went through her used panties, picking a style as if I was at a store shopping. While I was in a rush, I wanted something sexy. \n\nOnce I found the right pair I brought them up to my face. The scent nearly drove me over the edge. I did tell you that I'm a deviant, right? If I had known I had as much time as I ended up having I would have masturbated right there on the spot. Instead, I stuffed them into my pocket and waited for her to return. Once she came back, the day flew by. The deviant side of me was so occupied by my future plans that I found it hard to pay attention to the conversation. My cock was rock hard and all I wanted to do is masturbate with her panties. \n\nEvery time she spoke there was a charge of embarrassment that flowed through me that, I was getting high on. Once it was time, I rushed home. I sped through traffic with only one goal in mind. I remembered the minute I got home I threw myself into my fantasy. I was so wound up, I didn't even bother to get undressed. I pulled the panties from my pocket and took a long deep pull of her scent.\n\nI undid the button and zipper on my jeans then pulled them down just enough to pull my cock into my hand. Long slow strokes. My eyes were closed. I pictured myself at her apartment in front of her dirty laundry and her walking in on me. I let the would he shock and embarrassment wash over me. The look that I imagine she would have etched on her face.\n\n\"What the fuck are you doing?\"\n\nIn my fantasy she would laugh at me. Call me names like pervert or sick fuck. She would order me to finish while she watched. She wouldn't touch me, I didn't deserve it.\n\n\"Put them in your fuckin mouth and hurry up and cum!\"\n\nIn my fantasy I do as she says. Her facial expression is one of judgment. The orgasm that starts to peak roars to life quickly. Her and I lock eyes, I should be ashamed but I don't feel an ounce of it. I explode all over her laundry with a huge grunt. \n\nMy body shivers.\n\nFast forward a few years, our worlds were very different but we remained friends. We were older and far more comfortable with each other. One day our I.M. conversation got far more real than I ever anticipated. We decided to share some of the things we were holding close to our chests. She tentatively expressed many of her BDSM and Femdon kinks. I was shocked and turned on all at the same time. All the cards were being laid out on the table. She told me about past encounters where she was both the willing abused submissive and the raging dominant figure. \n\nFor the past few years I was secretly delving into both BDSM and Femdom porn, never thinking that it could ever become a reality. I didn't think that there were others like me in the real world who were into any of this. I loved hearing about her exploits. I asked questions, wanting to digest every detail of both the things she's actually done and still wished to do. \n\nOur conversations on the subject blossomed over the coming weeks and months. I tentatively began to share my secrets. My kinks, my fantasies, and the feeling that I had held fiercely from everyone. I don't know which was harder to reveal. The fact that I loved her or the fact that I was into Femdom porn and wanted her to be my Master. Both scared me to no end. Would she be willing or receptive to either. Would it strain the friendship and make things weird?\n\nOne evening I decided to open up through texts. \n\nShe was currently telling me about an issue she was having at work, so, probably not the greatest of timing on my part but at this stage in my life, I was tired of hiding. So, I just went with it. My thumbs took over and I nervously typed. If there was a visual I could give you, it would be that the words just tumbled out. \n\n\"I love you.\"\n\nNot being able to see her facial reaction was both a defensive mechanism on my part and utterly terrifying. What was she thinking? Neither of us were in a position to act and be in the kind of relationship that warranted such a phrase. The minutes ticked by. Maybe she was busy, maybe she was weirded out. \n\n\"I love you too.\"\n\nI froze for a second. Reading and rereading her response. \n\n\"No. I'm in love with you. And have been for years.\"\n\n\"Wow. I don't know what to say. Why didn't you ever say anything before?\"\n\n\"I always thought you were out of my league. You're beautiful and amazing. Why would you ever pick me to be with?\"\n\nAnother long pause. \n\n\"I've had feelings for you for a while, too.\"\n\nI felt a wave of relief wash over me. I remember taking a deep breath and staring at my phone. I couldn't believe it. \n\n\"I know this isn't great timing but I have something else I need to ask.\"\n\n\"What?\"\n\nMy hands started to shake nervously. I could feel my heart racing. If it wasn't weird enough that I was letting her know that I had secretly loved her for years from a distance, here I was getting ready to share even more of myself and the first bomb hadn't even cleared yet. In a quick furious spell of my thumbs the rest came out. \n\n\"I know this is going to sound weird, especially with what I just told you. But, would you be willing to be my Master?\"\n\nTime stopped. It felt like an eternity but in reality, it was just a few minutes. \n\n\"Really? This is a lot to take in.\"\n\n\"I know. I've held it in for so long, I just can't anymore. I had to let it out.\"\n\n\"Hmm.\"\n\nWhat did Hmm mean?\n\n\"I've never admitted to anyone that I'm into Femdom, and when you shared that you were into it, I thought, finally, just maybe I'll be able to live some of these fantasies out. I understand if this is too much. I know neither of us is in the perfect place. But...\"\n\n\"The answer is yes. How exactly would this work?\"\n\n\"We could play it by ear. Whatever you're comfortable with, I would be more than happy with trying.\"\n\n\"It's not like we see each other often, but, I would be honored to be your Master.\"\n\n\"Thank you.\"\n\n\"Thank you, what?\"\n\n\"Shit, I'm sorry, Master. Thank you, Master.\"\n\nFor the past three months, oddly our friendship grew. We held nothing back. While we hadn't spoken much about me being in love with her, she did wield her power over me without even being in the same room, city, or state. When she commanded something, I gladly did it. As ordered, I purchased a cock cage and a few pairs of pink and red women's panties of varying styles. \n\nAt her direction, she would send me a text with her orders for the following day. If she was in a bad mood, I would wear the cock cage. On the other hand, if she was feeling like rewarding me, I wore panties. For example, last week she ordered me to wear a pair of silk boyshorts that clung to my body. I remember how hard I throbbed feeling them against my cock. \n\nWhile at work she would send me messages to entice me further. \n\n\"Are you sitting at your desk wearing your panties, Slave?\"\n\n\"Yes, Master.\"\n\n\"How do you feel being in an office full of women knowing you're wearing women's underwear?\"\n\n\"I'm throbbing hard. I fuckin love it, Master?\"\n\n\"I wonder what they would think about you, that the big strong man of the office is such a submissive.\"\n\nI could feel my cock ache even more. I had this long-standing fantasy that the women of the office would dominate me and make me their office bitch. Force me under their desk to please them orally. One particular fantasy had me on my knees in front of them masturbating as they watched. Master knew this. She liked when I shared my fantasies, the more depraved the better. \n\nShe fed off of them. \n\n\"Part of me loves the idea of them knowing what kind of a sick fuck I am.\"\n\n\"I would show off that thick cock of yours. Maybe we will do that when you come for a visit, have a group of women watch as I dominate you. I bet you would like that.\"\n\n\"I would.\"\n\n\"How's your cock feeling against those panties, Slave?\"\n\n\"It's throbbing, Master. I'm so horny.\"\n\n\"Get into the bathroom and show me.\"\n\nI immediately got up. The fabric of the panties pulled against my strained cock. I walked into the single occupant bathroom and pulled my jeans down to my thighs. I pulled my phone out and took a picture of my cock in its underwear enclosure then sent it to her. \n\nHer response was immediate. \n\n\"Look at that cock. Mmm. You may cum. Hurry up, pervert!\"\n\nI started by rubbing myself over the fabric then pulled myself out completely. I spit on my hand and feverishly started working my thick throbbing cock. The sound of my hand sliding over my engorged cock slightly echoed in the small bathroom. I slowed down enough to conceal the sound of what I was doing. My mind raced. I could already feel my orgasm peaking. It came on suddenly. My body tensed up and I soon went careening out of control. \n\nStanding over the toilet, I placed one hand on the wall to keep myself upright while the other worked my cock. Gritting my teeth, I exploded. Yanking back one last time, I stifled a heavy grunt through gritted teeth. \n\nI cleaned myself up and went back to work then sent Master a text. \n\n\"Done. Thank you.\"\n\n\"Good. That will be the last time you cum before your visit. Got it?!\"\n\n\"Yes, Master.\"\n\nToday is the day. I see Master for the first time since adopting my new role with her. I'm excited. So much so, I hardly slept last night. The plane ride wasn't terribly uncomfortable. Unfortunately, I was on edge. I had stuffed myself into my cock cage after clearing TSA security. It wasn't the first time I had worn it but I still wasn't used to it's confines. It was a constant reminder that I was someone's property. Every impure thought I had was followed by the punishing restraints of the unforgiving cage. \n\nI could have lied to Master and put it on once I landed, but I knew she would know. Plus, I liked fulfilling her orders. \n\nOnce I was off the plane, I grabbed my bag, and met Master outside in the loading zone. Once she saw me, a big smile filled her face. I loved her smile. She wore a cute top and form fitting skirt. Her heels seemed to show off her long legs and well cared for feet and toes. She looked amazing. \n\nWe embraced, I took a long deep inhale of her perfume. It had been a while since we last saw each other. I didn't want to let go so she pulled away first. She looked at me lovingly, our friendship taking center stage at the moment. \n\n\"I've missed you. You look good.\"\n\nI smiled, almost blushing at the compliment. I could feel nerves rustling about in my chest. \n\n\"Thank you.\"\n\nHer hands settled on both sides of my face gently, then she kissed me. Just lips, no tongue. Her left hand left my face. She placed it on my imprisoned cock. Then smirked devilishly. \n\n\"Good. You followed instructions. I love when a man follows instructions. Now, get your bags in the trunk and let's go.\"\n\nShe handed me her keys and made her way to the passenger side. \n\nThe ride to her house was quiet, with a thick air of sexual tension. My balls ached and my cock strained against the cage. The only words she uttered were driving directions which lacked emotions. She seemed to be in Master role. The friend I knew was locked away somewhere for the time being. I pulled up and parked. \n\nShe didn't say anything, just opened her car door and stepped out. I watched her legs moving gracefully. I got out, grabbed my bags and followed her into her apartment. My breathing was starting to get shallow. I know what to expect. If I was being honest, I was a little scared. \n\nShe went to the kitchen and poured herself a glass of wine then sat down on the couch. \n\n\"You can put the bag in my bedroom, get undressed and walk back on all fours.\"\n\nI did as she instructed. \n\nI made my way out of her bedroom on all fours, the only thing I was wearing was my cage. I stopped at her feet. She ignored me. The TV was on, more as background noise than anything. My eyes were on her feet. \n\n\"You like them don't you, Slave?\"\n\n\"Yes, Master.\"\n\n\"Show me then.\"\n\nI kneeled down further and started kissing her feet, licking, and sucking her toes. I heard her moan softly. She abruptly stood up and pulled down her panties. She stepped out of them placed them up against my nose. I closed my eyes and inhaled. \n\n\"Put these on, Slave.\"\n\nI quickly did as I was told. I could feel her wetness against my balls and cock. She sat down with her ass on the edge of the couch, then laid back down with her legs parted. After taking a sip of her wine, she looked down at me. \n\n\"Fucking eat me.\"\n\nI immediately dove right in. My lips engulfed her clit and sucked gently. My tongue circled and danced around every curve. Tracing out every impression, darting in and out, and savoring every gasp or moan my actions elicited. She took another sip of wine before putting it down. One hand gripped her chest and the other rested on my head. \n\nHer back arched, legs parted a bit wider. I found the right pattern to her lock. The pitch of her moans rose. My tongue continued to move around intricately as I enticed what I hoped to be the first orgasm of many to come. She clinched her teeth, with her jaw flexing she let out a deep heavy grunt followed by a long hiss. Her chest started to heave, both her hands clung to the cushions. \n\n\"OH. My. FUUUCK!!\"\n\nHer hips bucked against my hungry mouth. My hand gripped to her thighs as they clamped down on my head. My tongue was a bit tired but I refused to let go until she was done. As she came down from the first peak but I kept going. I expected her to tell me to stop but she hadn't. I brought my hands under her ass and squeezed tight. My lips and chin were coated in her juices. She had a light sweat going. Without having me stop she took off her top and tossed aside. \n\n\"Make me cum again, Slave. You're almost there, come on!\"\n\nI pushed forward and started to loudly slurp at her. \n\n\"Oh, shit, yes. FUCK, yes! Eat that fuckin pussy!!\"\n\nThe slurping noises got to her. Her back arched again, almost to the point that she was sitting up completely. I pulled her even closer to me and she exploded. Her gasps were heavy and loud, her chest rose and fell dramatically. \n\n\"Okay, stop. God damn.\"\n\n\"Are you pleased, Master?\"\n\n\"Yes. Shit. Yes, I am.\"\n\nI laid my head on her knees and closed my eyes. She stroked my head while she caught her breath. I was so horny, my balls hurt by this point. \n\nShe got up and walked into her bedroom and when she returned she had a wireless vibrator and lube in hand. She had kicked off her heels but was still wearing her skirt. I noticed that her skirt didn't lay down along the front like it had before. She had a wicked smile on her face. Standing in front of me, Master pulled up her skirt.\n\nShe was wearing a strap-on. The black simulated cock was thinner and shorter than my own cock. She pressed the tip against my lips without saying a word. I opened up and let her slide into my mouth. She was slow at first, coating it with my saliva. Then she picked up her pace and forced it up against the back of my throat, causing me to gag. She didn't care. Her hips started thrusting forward. \n\n\"Suck my cock, you little faggot.\"\n\nI had never been called that before. The sound of it sliding off her tongue with her sultry voice made my cock throb. She started fucking my throat hard. Saliva started to pour out of my mouth and down onto my chest. She pulled out then spit in my face. \n\nShe pulled me up onto my feet and pushed me onto my back. She parted my legs and started using the vibrator on my panty covered caged cock. The sensation was almost too much to handle. It was intense and nearly sent me over the edge right away. I fought off the sensation to let go. \n\n\"You haven't cum since you last had my permission, have you?\"\n\n\"No Master.\"\n\n\"Good. Now you're going to. This first one is on me. You did such a good job eating my pussy that I'm going to let you cum when the urge hits you. It'll be good to get this first one out of the way anyway.\"\n\n\"Okay.\"\n\nShe ordered me to sit closer to the edge and lay back down. I did as such. She parted my legs again and put the vibrating wand onto the cage but under the panties, holding it in place so she could lube up some of her fingers. Her face was void of any emotion. It was as if it was another day at the office. This wasn't her first time, and I certainly, wasn't her first slave. She pulled the panties to the side and gently massaged my opening. She lowered the intensity on the wand, just low enough to pull the moans out of me but not enough to send me over. \n\nOne of her fingers slid in, almost effortlessly. \n\n\"I see you've been using your butt plug as I suggested.\"\n\n\"Yes, Master. I have.\"\n\nShe slid her finger all the way in and hooked it upward, searching my insides. I gasped, both from the wand and what she was doing with her finger. She slowly finger fucked me, taking the time to nearly pull all the way out then sliding back inside me. After a few minutes she added another finger. I moaned out. She twisted her hands and picked up the pace. \n\n\"I am going to milk you. I know it's something you've wanted done to you for a while. Isn't it?\"\n\n\"Yes. Fuck yes, Master.\"\n\n\"Good. Now let's get you out of this cage. You've been in it long enough.\"\n\nBeing released from the cage caused me to grunt. I was sore and swollen. I was slightly tender. It's a weird sensation to express into words. \n\n\"Get on all fours, now.\"\n\nI turned over and got onto my hands and knees. She lubed up her hands and slid her first two fingers on her right hand inside of me. With her left hand she worked my shaft with practiced experience. She worked the entire length, twisting her wrist whenever she slid down to the head then worked her way back up. Her fingers massaged my insides, forcing my back to arch. Grunts and moans started filling the living room. \n\n\"Shit, Master. Fuck, fuck, fuck, Oh God!\"\n\n\"Tell me when you're ready to cum, Slut.\"\n\nMy toes curled as I bit down on one of the cushions. I squeezed my eyes shut as my cock nearly gave in. \n\n\"I'm going to cum, Master!!\"\n\nShe completely withdrew from my ass and let go of my cock. \n\nThe spasms tore through me in giant waves but the orgasm was held at bay. ",
        "\"That was close, Slave.\"\n\nShe repeated the process two more times then told me to change positions. I was instructed to lay upside down on the couch's back rest with my legs in the air. All of my weight was on my shoulders and upper back. Slightly uncomfortable position but I was excited to see what was next. She straddled my face with her knees resting on each side of my head. Master was sitting up so I couldn't actually lick her if I wanted to. Her pussy was just out of reach.\n\nHer skirt blocked my view. All I could see was the inside of her thighs, the curve of her ass, her strap-on, and her pussy. I felt her left-hand grip my cock again, slick with lubricant. Her fingers entered my ass. She worked my shaft hard, quickly traveled up and down the shaft with determination. \n\n\"You tell me when you're going to cum, Slave!\"\n\nI started to moan out. I gritted my teeth, trying to hold it off as long as I possibly could. I could feel the muscles around my cock tighten. She must have felt it, too.\n\n\"You're about to cum, I can feel it.\"\n\n\"Not yet, not yet!\"\n\nShe kept pumping away with her one hand. It didn't take long. \n\n\"I'm gonna cum, Master!!\"\n\n\"Open your mouth!\"\n\nShe pulled out of my ass and unstraddled me. Now she stood over me with both hands clamped down on my cock, working feverishly to coax an orgasm from my body. I could see her face contorting as she jerked the last ounce of control I had left. I came with a loud roar. She aimed my cock at my face, I had no say in the matter so I let the orgasm rip through me and enjoyed the humiliating act. I ejaculated and made a complete mess out of my chest, face, and mouth.\n\nFor a few seconds all I could hear was my heavy breathing, nothing else in the room mattered.\n\nMaster milked me for every drop. She slowly squeezed everything out of me then smeared what was on my chest onto my face and laughed. \n\nI just laid there. \n\nShe left my field of vision. I could hear the water in the bathroom going then shut off. A few minutes later she returned just as I was starting to feel myself drifting off to sleep. When I opened my eyes, I saw her standing in front of me only wearing her strap-on. \n\nShe was stroking it slowly with a sinister smile on her face. She instructed me on how to position myself. I laid on my back with my ass hanging just off the edge of the couch with my legs wide open. She pressed the head of her cock against my opening. It was slick with lubricant. I was both nervous and excited. I've practiced with plenty of butt plugs and other toys but I had yet to have a woman fuck me.\n\nHer plastic cock was black with all the contours of a natural cock. The look was realistic, I know this was by design. She once told me she liked to use the realistic looking toys on men for the power play. She knew that the men she played with weren't gay, but holding that one detail over them pulled at their insecurity. It made her role and dominance that much juicier. \n\nThe head slipped in slowly.\n\n\"Good job. You've practiced for this.\"\n\nA sense of pride filled me. She slipped in deeper before pulling back and then filling me further. Her rhythm picked up, matching my breathing at firth until my body was used to her. Before I knew it, she would slide inside of me on every thrust. My cock was rock hard now. She gripped my hips and ground into my body. \n\nI was in bliss. \n\nHer eyes closed for a few seconds as she picked up the pace and started to really fuck me. My moans started to rise. \n\n\"Does my little faggot like being fucked?\"\n\nI nodded, biting m bottom lip to keep from moaning out loudly. \n\n\"Don't you dare hold back!\"\n\nShe suddenly pulled out and pulled me on all fours then reenter me without the gentleness she once used. She no longer ground into me. Now our flesh met with a loud slap. Her hands roughly gripped my hips, her cock entered me deeper, and at an odd angle.  \n\nNow, Master started to grunt. Loud, deep, guttural grunts. She picked up the pace. All my words were jumbled up in my head. It both hurt and felt amazing. In every aspect of my life, I'm in charge. I'm the strong man that protects, that doesn't show his weakness, that doesn't break. Here, with her, I was the complete opposite. She saw my fear, my weakness, my submission to her. I gave in to her willingly and that made me feel so alive. \n\nShe was out of breath by the time she pulled out from inside of me. \n\n\"Get on your back, again.\"\n\nI did as she demanded. She reentered me, this time with something in her hand. I realized it was a condom when Master pulled it to her mouth and tore it open with her teeth. The pace of her hips was much slower now. She pressed the condom over my throbbing cock then eased it down the shaft. She slipped out of me then straddled my hips and allowed me to enter her for the first time. Her eyes closed as she lowered herself down the entire length. \n\nA slight gasp slipped from her lips. Her head rolled back. She raised her body then backed down. Leaning forward, she placed her hands on the back rest of the couch, then started rotating her hips. She felt amazing. She pressed herself down and held the position for a second. Her eyes were still closed. Master took a long deep breath then started bucking her hips. There was a violent snap to them now. It was almost as if I didn't exist. I was there for her pleasure and her pleasure alone. I was just a tool. \n\nA living breathing toy for her enjoyment. \n\nHer eyes opened. The intensity multiplied. She was fucking me hard now. Master grit her teeth, forcing herself back down on my cock with every thrust. I forced back the urge to let go and cum. My body was tense. \n\n\"Don't you dare cum!\"\n\nMy face was a mask of contortion and determination. Her breathing grew labored. The moans higher in pitch, she was close. The sounds that emanated from us were intoxicating. She kept slamming into me.\n\n\"OH FUCK, OH FUCK, OH FUCK. I'm gonna cum!\"\n\nShe held her breath, a massive coil of muscle finally exploded. She let out the most expressive sounds my ears had ever herd. She stopped pushing into me. Her orgasm had full control over her body. Her mouth hung open, her eyes shut closed. Her nails digging into the back rest. \n\nI bucked my hips into her. With my hands on her hips I was now fucking her. Her body was mine, I rode the wave of her orgasm, intensifying it, forcing the peak to crash into her. I felt my own control slipping. My grip on her tightened. Her body was still frozen in place. Between moans she blurted out. \n\n\"You have my... permission. Cum for me... Slave. Oh, fuck. Now!\"\n\nAlmost on command I exploded. \n\nMy orgasm was even stronger than the first. Every muscle in my body stiffened. She took over and rotated her hips, feeding my orgasm at its highest point. With her head in the nook of my neck and shoulder, I could feel her heavy breathing on my skin. \n\n\"Good job, Slave.\"\n\nThe high of the experience with her was subsiding. The details of the room around us came back into focus. My breathing started to come back under control.\n\n\"Thank you, Master.\"\n\n\"Now, one last thing.\"\n\nMaster pulled herself off of me then kneeled at my feet. Her hands wrapped themselves around the base of my still throbbing cock. She gripped it firmly, then started to pull the condom off. She was careful not to spill a drop. Curious what she was doing, I watched intently. \n\nOnce the condom was off, she dangled it in front of my face. \n\n\"Now Slave, there is a cum tax that you will pay any and every time you cum with me.\"\n\nI was still on a slight high from the orgasm. The haze of confusion must have shown on my face. \n\n\"Get on your knees and open your mouth, Slave.\"\n\nI got down into position. My body was already feeling sore. My muscles protested but complied. She stood over me. My eyes traversed the contours of her body as I made my way up to her face. She was still wearing her strap on. She brought the condom just above my mouth while a smiling. \n\n\"I love that you are so obedient.\"\n\nShe poured the contents of the condom into my mouth, watching to makes sure I swallowed my load, then dropped the condom onto my lap. Master leaned over just an inch from my face and smiled. \n\n\"You did great. I'm definitely going to keep you. Oh, and I love you.\"\n\nShe kissed me on the lips tenderly then walked away.\n\n\"Let's go get cleaned up, Slave. We have so much more fun to have.\""
    ],
    "authorname": "dfm2099",
    "tags": [
        "femdom",
        "bdsm",
        "strap-on",
        "hand job",
        "milking",
        "master",
        "master slave",
        "domination",
        "slave"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/first-master-1"
}