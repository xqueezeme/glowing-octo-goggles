{
    "title": "Big Hero Sex Ch. 05",
    "pages": [
        "\"I'm not doing it, he's like my best friend, I am not going to ask him for help getting laid!\" GoGo flicked Hiro in the ear. \"Oww!\" \n\nAnywhere else, that would've gone uncommented on, but since there were in Hiro's dorm room, Baymax inflated out of his charging station to give the three hastily-dressed students a quick scan. \n\n\"Hello again... Hiro,\" 'he' said in his stilted English. \"And hello, ladies. I am Baymax, your personal healthcare provider. Ms. Lemon, I am detecting a great quantity of... semen in your system. You have no STDs, but the possibility of fertilization remains. Would you like a... 'morning-after' pill?\" \n\nHoney Lemon chuckled like he'd told a joke. \"You're so awesome, Baymax.\" \n\nNot parsing that reply, Baymax repeated himself in case she's misheard. \"Would you like a\u2014\" \n\n\"Yes,\" GoGo interrupted, \"she would.\" \n\nA small opening irised open on Baymax's palm, dispensing a pill inside a tiny cup. From his other hand came another small cup and a quantity of water. He handed both to Honey. \"Please take both of these, unless you are attempting to become pregnant. Consult with a family planning clinic about managing your birth control in a way that is right for you.\" \n\n\"Hey, Baymax,\" GoGo called, as Hiro looked mortified and Honey consumed the pill. \"Hiro needs some lead in his pencil.\" \n\n\"I am not familiar with that slang.\" \n\n\"His cock's gone soft\u2014\" \n\n\"I am not familiar with that slang.\" \n\n\"He needs Viagra.\" \n\nBaymax gave Hiro another scan. \"Sex for recreational purposes can be a fun and safe activity for all involved, so long as both or more partners keep in mind that their intimacy should be... safe... sane... consensual...\" \n\nHiro slapped his forehead. \"You see? It's like talking about blowjobs with Mr. Rogers.\" \n\nBaymax dispensed the little blue pill and another water cooler spike of H20. \"Remember, the safest form of birth control is abstinence, but if you are going to engage in sexual intimacy, the male should wear a condom, while the female should be on whatever method of birth control is right for her. Unwanted pregnancies account for more than\u2014\" \n\n\"I am beyond satisfied with my care.\" \n\nBaymax shuffled back to his charging station, where he deflated. Hiro took the pill. \n\nThen he stood there. \"So, uh, how long is this supposed to take?\" \n\n\"I don't know, you're a teenage boy, you should be hard already,\" GoGo said. \"You should be hard twenty-four-seven.\" \n\n\"I'm sorry, sometimes I don't have an erection. Maybe we should just...\" \n\n\"Hiro,\" Honey said pleasantly, putting a friendly hand on his shoulder. \"Just because your penis isn't hard doesn't mean you can't...\" She smiled knowingly. \"Kiss GoGo. Like you kissed me.\" \n\nGoGo stripped off her jacket like she was about to go into battle. \"Go ahead, hotshot. Kiss me.\" \n\n\"I, uh...\" He glanced at Honey, helpless. \"It's not like with you.\" \n\n\"You can do it, Hiro. You're full of passion! Of Life! Just put your lips to hers. Show her how passionate she makes you.\" \n\n\"Yeah. Show me how passionate I make\u2014\" GoGo broke off, Hiro's lips suddenly jammed against hers. \n\nThe thought bubbled in her mind. He's kissing me. I'M kissing HIM. She went with it, wrapping her arms around his slender shoulders as his tongue entered her mouth. It didn't seem like enough. His lips grinding against hers, now she vaulted up onto him, wrapping her powerful thighs around his waist. Hiro staggered under her weight, nearly falling over before Honey caught him. He got his footing, his tongue hungrily delving past GoGo's lips as he fell upon her atop the bed. \n\n\"That's it, Hiro! Kiss her! Leave her breathless!\" Honey Lemon knelt upon the bed beside them. \"Rip her clothes away!\" \n\nGoGo squealed, almost laughing, as Hiro grabbed big fistfuls of her shirt and tugged in opposite directions. The gray fabric stretched, then gave way, tearing right down the middle. \n\n\"Oh my!\" Honey's hands went to her mouth. \"Her breaths are really heaving!\" \n\n\"Shut up! They are not!\" GoGo retorted. \"I'm just breathing.\" \n\n\"Kiss them, Hiro. Kiss those wonderful breasts, the repository of her heart, her lungs, the very life of GoGo's that's so precious to you!\" \n\nHiro stopped listening after being told to kiss them. They were well-formed, nicely sized. He had liked the slight contours of Honey's slim chest, but GoGo's breasts were well-built mounds, curves demanding his hands. He groped them, filling his hands, still kissing GoGo, before leaving her lips to mouth her nipples. She was panting when he finished with her mouth. Breathless. \n\n\"Ohhhhh fuck!\" GoGo groaned, Hiro's hot mouth suddenly burning into her cleavage, catching her nipples with a tongue like glowing embers. And when he sucked... she squirmed her legs together, feeling her own wetness in her panties. Fucking nerds turning her on... \n\n\"Pull her pants away!\" Honey urged. \"She has to be totally bare before you! Then use your hands, feel how wet she is, how much she needs you!\" \n\nGoGo grunted as Hiro pulled away her shorts, her leggings, his lips returning to hers, his tongue... his hands, on her inner thighs, as clever and merciless as they would be working with tools, feeling her panties, feeling her hair, feeling the folds of her sex. She moaned, eyes wide in disbelief, looking at Hiro bent over her, tonguing her neck, at Honey next to them, hands locked in her skirt. Christ, she was having a threesome. \n\n\"Oh, Hiro,\" Honey gasped, as if beset by the same realization. \"You're ready!\" \n\nHiro captured GoGo's lips again, fingers curling inside her to the same beat as his tongue, nearly making her come before he jerked himself free of her, scrambled his cock out of his pants, pushed it to GoGo's dripping cunt. \n\n\"Slowly!\" Honey cautioned. \"Enter her like a temple. It's just like giving her a kiss, Hiro. You have to be gentle. You have to just... touch her.\" \n\nGoGo couldn't believe she was getting off on this. Hiro ventured forward, touching her, then entering her, softly submitting himself to the torrid grip of her sex. Until his hips were dancing against hers, all they could feel the stir of his engorged cock inside her. GoGo's eyes met his with gleeful acceptance. \n\nHiro closed his eyes, just breathing as he stroked his manhood inside her slipping, sliding hold on him. \n\n\"Make love to him!\" Honey gurgled to GoGo. \"Return all his passion for you threefold! Make him come in submission to your... your pink-fringed love canal!\" \n\nGoGo was too excited to answer in words, but if she weren't, she would've mentioned how many romance novels Honey shouldn't be reading. As viciously as she would pedal a bike, play a sport, she worked her pelvis in a circle that tugged relentlessly at his cock. Her strong arms clutched his back, pulling his chest down against her breasts, while her voluptuous thighs tightened on his ribs and her ass rocked and worked, driving her sex up against the staccato rhythm of his throbbing cockhead. \n\n\"Don't stop kissing her!\" Honey begged, pleaded. \"Don't stop kissing those wonderful lips! Those wonderful, soft lips...\" She stared at GoGo's breathy moans as Hiro fucked into her, lost to her words now, the rhythm set and locked in. Inexorably, Honey bent until she could feel GoGo's exhalations brushing against her lips. Then she was kissing GoGo, kissing her as Hiro fucked her. \n\nGoGo took it in stride, wrapping one arm around Hiro's body, the other around Honey's. Honey was kissing her and Hiro was kissing Honey, impishly sucking at her pulse point, and GoGo's legs climbed higher up his descending body, until her hips were elevated, his prick seeming to force out her juices to trickle down the crack of her ass. She imagined Honey licking them up with the same slippery tongue that was currently inside her mouth, and like that her cunt exploded in orgasm. Convulsive tremors set fire to her body; she cried out into Honey's mouth with the sensation of Hiro's cock still hammering at her climax. \n\nThen she felt his cock suck its way out of her sex, bobbing in the air as Hiro shifted over to mount Honey from behind, the blonde still kissing GoGo as Hiro flipped her skirt over her ass, yanked down her panties... \n\nHoney stopped kissing her. GoGo opened her eyes and saw Hiro fitting his slippery cock under Honey's ass, then a tremor going through Honey as Hiro reclaimed his place inside her. He began thrusting, his rhythmic strokes pushing Honey's lips back to GoGo's. \n\n\"Big cock!\" Honey moaned between kisses. \"Big cock! Big cock!\" \n\nGoGo wondered if her eyes were rolling back in her head; she couldn't see through Honey's fogged-up glasses. \"Fuck her hard, Hiro,\" GoGo urged, shakily aroused, by the sight of their coupling as much as by what Honey was doing to her. Hands in Honey's hair knocking away her hairband for good, GoGo had pulled Honey's clever mouth down to her breasts. She was enthusiastically vacuuming the tit Hiro had ignored. \"Ream that pussy out! Shit, I can't wait until it's my turn again! You'd better fuck me just as good!\" \n\n\"I'll have plenty left for you,\" Hiro promised with a red face. He had Honey's lower body pulled up to his crotch in a kneel, holding it still with his hands on her hips as he pumped into her. \n\nThen even that wasn't enough for him. He fell on Honey again, jackhammering her into GoGo's body underneath. Honey's glasses finally flew off her body as she was wrenched back and forth. She barely managed to kiss GoGo once, twice, again. It seemed like the only thing that could distract her from Hiro's cock boring into her. \n\n\"Don't stop,\" GoGo told him. \"Come inside her! Come with her! She deserves it!\" \n\n\"Yes,\" Honey agreed, \"yes!\" \n\nGoGo slapped Honey's ass as Hiro pushed himself harder. \"Come in this ass! Come in this perfect little ass!\" \n\n\"Yes!\" Hiro gritted out. \n\nGoGo reached past Honey and clawed wildly at Hiro's arched back as his cock locked into Honey's cunt, still only for a moment before it leapt, spurting cum bathing Honey's electric nerves, down to the deepest recess of her sex. Her juices mixed with his, forcing their way out past his hilted cock to spill over his balls, into the valley of her taut ass. \n\nBut Hiro wasn't done. He rolled Honey out of the way and crashed onto GoGo, thrusting into her so hard his balls slapped against her clenched asshole. There, she felt them swell, pulse once more. GoGo cried like a bitch as a steaming jet of his cum flooded her cunt, followed by load after load. Until he was streaming down her crotch, their joined bodies sticky and wet, but still there was more, more. And each time she felt him splash into her sex, she inundated his cock with another helping of her own juices. \n\nFinally, it was over. Hiro rolled off GoGo, landing between her and Honey. Then, wordlessly, the three moved to form a comfortable symbiosis. Hiro sprawled on his back. Honey wrapped herself around Hiro's left arm, head on his chest. And GoGo beached herself almost entirely on Hiro's torso, leaving just a little room for where Honey's blonde head was cushioned. The three let out one loud, simultaneous sigh. \n\n\"I definitely know what I'm getting you for your nineteenth birthday,\" Honey said, eyes closed. \n\n\"A foursome?\" Hiro replied, eyes closed. \n\n\"A fucking chastity belt,\" GoGo said. Eyes closed. \n\nThe door flew open with a spoken announcement of \"Knock knock, bro!\" from Fred. Hiro just had time to pull the comforter up to his chin, hiding GoGo and Honey as one misshapen lump along with him. \n\n\"Fred!\" Hiro looked past him. \"Wasabi! What are you doing here?\" \n\n\"Just wanted to wish you one last happy birthday for the road, little dude. I know it's been tough and all... being a superhero. Losing your brother. Not getting any. Like, at all.\" \n\n\"Super tough,\" Wasabi agreed. \n\n\"So we thought we should get you a birthday present that'll make it all worthwhile. Hiro, we're going to take your virginity.\" \n\n\"Yup,\" Wasabi put in. \"Super hot threesome.\" \n\n\"Are you...\" Fred was taking off his shirt. \"Serious?\" \n\n\"Absolutely, man. It's what Tadashi would've wanted. That guy, man, he gave the best blowjobs.\" \n\n\"He took my anal virginity,\" Wasabi said, dropping his pants. \n\n\"Guys, guys!\" Hiro said frantically. \"I'm not gay!\" \n\n\"What, seriously?\" \n\n\"No!\" \n\n\"Not even a little?\" \n\n\"Not even a little.\" \n\n\"Oh.\" Fred put his shirt back on. \"Well, why didn't you just say so, man, that's kinda important information!\" \n\n\"You're telling me?\" Wasabi said. \"My pants are off!\" He pulled them up. \n\n\"Well, thought that counts and everything, right my man? Keep on, you know, being straight.\" \n\n\"Yeah.\" Wasabi tried to get his pants to stay up, which was easier said than done. \"Sorry you couldn't have a super hot threesome, but I guess you'll just have to settle for being represented in all entertainment and not being killed for your sexuality.\" \n\n\"I will settle for that,\" Hiro said. \"Bye!\" \n\nThey closed the door behind them. Thank God. \n\nHiro pulled the comforter down. \"Well, this explains a lot about today. Apparently, I'm the only game in town.\" He looked down at the girls for confirmation, only to find they'd both fallen asleep. It was looking like a good idea to Hiro as well. \"The only game in town,\" he repeated, bracing his hands behind his head. \n\nHe lost consciousness in short order. \n\nIn sleep, GoGo's breasts cushioned her body, dangling close to Honey Lemon's mouth. After a couple hours of rubbing against Honey's cheek, a nipple slipped into her mouth. She sucked at it, a very Freudian dream playing behind her eyelids. Eventually, she began to chew. \n\n\"Oww!\" GoGo said, rolling away so that she was stretched out on her back across Hiro, but still asleep. It hadn't been enough to wake her. Only to activate Baymax. \n\nScanning them, the robot deduced that all three were getting some much needed rest. He was not programmed to interrupt their sleep cycle for a nonemergency. So, deploying a hypospray from one finger, he injected them painlessly with the proper medication. More birth control for GoGo and Honey, just to be sure, and another dose of Viagra for Hiro to keep up with the hormones being produced by a very understandable dream. \n\nAs Hiro's body began to produce the most epic case of morning wood San Fransokyo had ever seen, the three slept on, Baymax waiting patiently to see if they were satisfied with their care."
    ],
    "authorname": "Zev95",
    "tags": [
        "threesome",
        "lesbian",
        "marvel"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/big-hero-sex-ch-05"
}