{
    "title": "Play it Again Sam Pt. 05",
    "pages": [
        "Author's note: This is part 5 of a six part story. The central theme is a version of the movie Groundhog Day. Sorry for the delay, but this chapter has a lot of moving parts and it took me longer to put together than anticipated.\n\nFriday July 15<sup>th</sup>, 2016 Day 1403 \n\n\"What is love? Baby don't hurt me....don't hurt me....no more\"\n\nI slowly sat up in bed.\n\nI finally knew what happened at 4:58 and 26 seconds every day.\n\nIt had been over fast, a fraction of a second. It was so quick, it was more impression than memory. But I knew what I had seen...\n\nA mushroom cloud.\n\n....\n\nI might be the first person to ever weep tears of joy at the sight of a nuclear explosion. It was immediately clear to me that the explosion and my time loop were connected. I'd never considered that something external was triggering my daily reset.\n\nBut there was no doubt about it.\n\nSome quick internet research confirmed what I was thinking. Even the largest nuclear bombs ever made wouldn't have a blast radius that reached Trenton from New York. Depending on the winds, Trenton could get caught in the radioactive fallout, but that wouldn't kill me instantly.\n\nSo if the blast itself wasn't killing me every day, why did I reset at the moment it went off? The time loop had to be directly tied to the bomb.\n\nWhat made me cry with happiness was that there was an obvious way to escape the time loop- stop the nuclear bomb from going off.\n\n....\n\nI immediately began my investigation.\n\nFirst, I rented a helicopter. Actually I chartered a flight from Trenton to New York. The charter thought I was just a VIP commuting in early. I timed our departure to put us five miles away from New York at the appointed time.\n\nAt 4:55, I signaled the pilot over the intercom. I had given him a big tip before the flight and told him I might want to do some sight-seeing on the way in.\n\n\"Could you just hover here a few minutes? And turn a little so I can get a good view of the city.\"\n\n\"No problem, sir. Let me know when you're ready to continue.\"\n\nWe were about to get knocked from the sky, but he didn't need to know that. He'd be fine tomorrow.\n\nWhen the bomb went off, I was ready.\n\nI had a much better view this time, but it was still blindingly fast. I wasn't looking at the mushroom cloud itself. I was looking at the ground, trying to find where it started. By the time I realized I was looking in the wrong place, I was waking up the next morning.\n\nI repeated the process three more times before I narrowed it down to east Manhattan. That was as close as I could get to discovering ground zero using this method. The closer I got, the more my senses were overwhelmed.\n\nThat was the easy part.\n\nFinding the exact location proved much more difficult.\n\nAt ground level, or even from the air, it was impossible to discern anything from inside the blast radius. Standing in New Jersey, I could tell the blast was coming from the north. Standing in Manhattan...I couldn't tell shit. It came from everywhere around me. My air reconnaissance told me it was on the eastern side of the island, but that was still a fucking ginormous haystack to find my needle.\n\nIf the bomb was detonated remotely, it could be anywhere. I'd have to search building to building and room to room. I'd have to look in every car, dumpster, and basement in Manhattan.\n\nI'd do it, but that was a last resort.\n\nI was going to work on the theory that if I found the location, there would be some indication. My assumption was that this done by terrorists of some flavor. And while a foreign government would nuke New York from a distance, terrorists would have boots on the ground.\n\nTo find ground zero, I started with the most likely targets of terrorism. I wandered the streets of Manhattan at night, looking for anything unusual or suspicious.\n\nI thought the most likely target was the U.N. building. I spent all day casing the place, and watched it into the night. It was a big place, and I probably would have needed several nights to watch it from every angle, but I tabled it after one. There was just too much security there. I couldn't see anyone trying to sneak a nuclear warhead onto the grounds.\n\nI didn't really know what I was looking for, I just hoped I'd know it when I saw it.\n\nEvery night I searched a different area. Times Square, Carnegie Hall, Rockefeller Center, the Empire State Building, the World Trade Center Memorial. I went to colleges, museums, and offices of major companies. I spent several weeks combing Central Park.\n\nI searched for several months before I found anything interesting.\n\n...\n\nFriday July 15<sup>th</sup>, 2016 Day 1531 \n\n\"What is love? Baby don't hurt me....don't hurt me....no more\"\n\nIt was getting close to 4am and I was walking west on E. 57<sup>th</sup> St. I crossed Park Ave. and ran into a roadblock. There were wooden traffic barriers blocking the street. I looked both ways. I could just barely make out another roadblock on 58<sup>th</sup>. 56<sup>th</sup> was clear. Looking straight ahead I could see more barriers on Madison Ave. I walked up to 57<sup>th</sup> and looked across to Madison- more barriers.\n\nThe entire block was cordoned off. That's unusual, but not unheard of. There is always some kind of construction going on in New York. But I couldn't see any workers, and the city generally didn't allow street closures unless there was actual work being done.\n\nThe barriers blocked off the sidewalks, but New Yorkers as a rule don't give a shit about pedestrian laws. There were people on the street, but not many at that hour.\n\nI stepped around the barrier and walked slowly down the street, looking all around at the surrounding buildings.\n\nI was halfway to Madison when I noticed something strange. There were a couple guys in maintenance uniforms loitering outside the building at the corner of 57<sup>th</sup> and Park. Night was when janitors and maintenance crews descended on New York.\n\nBut these two weren't working. They weren't doing anything. They weren't smoking, they weren't talking, they weren't sitting and resting. They were just standing, separated by about thirty feet. If it wasn't for their uniforms, they could have been taken for security guards.\n\nIn fact, ever since I stopped and looked at them, they had been staring right back at me.\n\nAs I watched, one of them said something, but he appeared to be talking to the air. He looked up slightly at the building behind him and I could see some kind of Bluetooth device in his ear.\n\nI heard a sound like a phonebook being dropped on a table, and then I was looking up at the sky.\n\n...\n\nFriday July 15<sup>th</sup>, 2016 Day 1532\n\n \n\n\"What is love? Baby don't hurt me....don't hurt me....no more\"\n\nI had been shot.\n\nThe last time I had been shot was by the police in a drug bust. I was guessing this time I had been shot with a much bigger bullet, because I died much faster. Maybe a rifle...\n\nI was hopeful that I had found the place, but I had to be sure. It was possible I had just managed to stumble across some other crime in progress. When I thought about it, it was kind of amazing that I hadn't been shot or stabbed more often. I had explored virtually every part of the city with no regard to personal safety.\n\nThat night found me once again walking up 57<sup>th</sup> St. This time I made sure that I was on the same sidewalk as the fake \"janitors\" and the building they were apparently guarding. I'd seen the night before that they didn't harass pedestrians so long as they kept moving. They had only shot me when I took an obvious interest in them.\n\nThere had only been a few other people walking on that street, given the hour and the barricades. I wondered if my shooting had started a bloodbath. Well...that wasn't on me.\n\nDuring my time in the loop, I killed myself about a dozen times. I only did it after I had already been killed once and knew I would come back. I looked at it sort of like hitting the reset button on a video game. I would just want to give up on that particular day and start again. Which isn't to say I took it lightly. No, I had to be very depressed to resort to suicide.\n\nBut I had never killed anyone else, or even seriously injured someone. That's just not in my make-up.\n\nSo I was I little conflicted about what I was about to do. These men may not be the bombers, but they were certainly murderers.\n\nI got over it.\n\nTonight I was wearing a large hoodie, not my usual attire. I walked by the first \"janitor\" a few steps. When I was about halfway between the two, I pulled my hands from my front pocket, along with my neighbor's Glock 17.\n\nOther than firing rounds directly into my own head, the closest thing I had to experience with guns was paintball. But it's hard to miss from less than fifteen feet.\n\nUsing a two-handed grip I fired twice into the guy in front of me. In my peripheral vision I could see him start to fall as I turned and fire two more at the man I had just walked by.\n\nI was aiming for center mass. My first shot hit dead center in his chest, but the second kicked up and I watched as a big wet chunk of his neck flew to the side.\n\nFor a split second the sight paralyzed me, before adrenaline kicked in- the sniper! I hurriedly ducked through the doors to the lobby. I heard a muffled thump just like the night before, followed by the smack of a round hitting the concrete where I'd been standing.\n\nAs soon as the door swung shut behind me I was bent over retching. Shooting terrorists seems morally unambiguous, but I wasn't mentally prepared to watch someone die by my hand.\n\nIn front of the doors was a ten foot entry corridor that opened into the lobby of the building. I gathered myself and brought my gun up. I had to search this building and see if the bomb was here. I certainly hoped so after I'd shot two men.\n\nAhead of me, I could see the lobby. To my right was a bank of elevators. Directly ahead was small caf\u00e9, probably to serve coffee to arriving workers, but closed and shuttered now. To the left the lobby opened up too far for me to see. I assumed it was some kind of information desk and/or seating area.\n\nI edged my way up the left wall and peeked around the corner...SHIT!\n\nI jerked back so hard I fell on my back, as the corner where I had been standing began to disintegrate in a hail of masonry. A continuous stream of bullets slammed into the walls and floor, accompanied by a sound like a giant band saw.\n\nWhen I'd looked around the corner, I had been able to catch a brief glimpse of the rest of the lobby. There were several chairs and couches, but in the center was an information desk. There had been another fake janitor at the desk, behind some kind of massive machine gun. I don't know my weapons, but it looked like something that would give Rambo a hard-on. It had been mounted on a tripod with belt-fed ammunition.\n\nThe gun was turning the entryway into swiss cheese. I could barely see through the clouds of dust from the building's concrete foundation. I was being pelted with rock chips from the granite floor.\n\nI had to curl up and protect my head from flying rocks. I was covered in cuts and concrete dust. I probably looked like a powdered jelly doughnut.\n\nThe whir of the machine gun cut off. He had to change ammo belts!\n\nI scrambled to get around the corner and shoot him before he could reload.\n\nBefore I could get there-\n\nFLASH\n\n...\n\nFriday July 15<sup>th</sup>, 2016 Day 1532\n\n \n\n\"What is love? Baby don't hurt me....don't hurt me....no more\"\n\nNow I knew that I'd found the bomb site. It had gone off early.\n\nMy assault must have made them detonate before they planned. That could be a problem.\n\nBut now that I'd found what I was looking for, I didn't rush back and attack the building again that night. My idea from the beginning was to find the bomb and then plan out my response meticulously. I was praying that stopping this explosion would end my loop.\n\nBut if the loop ended, I had to be prepared.\n\nFor one thing, guns were out. New York has some of the strictest guns laws in the nation. Saving a couple million lives would buy me a lot of forgiveness, but why complicate my life? There was no possible way for me to legally obtain and carry a gun in NYC, no matter how much money I was willing to spend. Not in one day.\n\nAlthough... if I took a gun from one of the terrorists...\n\nYes, that could work. If I brought my own gun to the battle there would be awkward questions. But if I used one I had taken from them I'd be golden.\n\nThe gun problem illustrated the larger issue- if stopping the nuke ended the time loop, it would throw me into the national spotlight. Heavily armed terrorists were planning on detonating a nuclear weapon in New York City...there would be no keeping that quiet.\n\nIf I was being honest, I probably could have prevented the explosion while remaining anonymous. I could gather enough information to alert the authorities and let them take care of it. I didn't, for two reasons. First, it was common sense that the U.S. government would do just about anything to prevent that bomb from going off, collateral damage be damned. How would I feel if they leveled a city block and everyone in it? No, I could make as many attempts as necessary to prevent any innocent loss of life.\n\nAnd second, fuck that! This was my day. You fuck with somebody on July 15<sup>th</sup> 2016, you deal with me!\n\nAs for the fame and adulation? Well, it was a burden I was willing to bare.\n\n...\n\nI started my reconnaissance by finding out just what the hell was in that building. A quick internet search got me a directory. Most of the building was made up of small offices, lawyers, accountants, and such. There was a regional office for a car rental company. Some sort of medical consulting business. Several vague company listings that I would have to look up.\n\nBut the one that jumped off the page was the South Korean Embassy.\n\nIt was on the fourth floor, and at first glance was the only thing in the building that would have any symbolic importance to terrorists. Obviously New York itself was the target, but it couldn't be coincidence that the bomb was in the same building as an embassy.\n\nI staked out 57<sup>th</sup> and Park Ave.\n\nThe terrorists arrived at 3:15am. They were in several construction trucks. The fake janitors, now wearing fake cop uniforms (or real, I didn't know), got out and redirected traffic while the rest set up the barricades. I counted eleven of them. I had to go back several nights to watch from different angles.\n\nThere were also three hostages. The terrorists brought them with them when they arrived. The hostages had bags over their heads, and were hustled into the building from the back of one of the trucks after the street was cleared.\n\nThe fake cops disappeared into the building and reappeared five minutes later as maintenance men.\n\nInterestingly, two of the terrorists did not go into the building. They crossed the street and entered the high rise there. One was carrying a guitar case.\n\nThat must be the sniper that shot me.\n\n...\n\nEarly in the time loop, I had lamented that surveillance was useless when trying to get the goods on my wife. Now the tables were turned. I needed to go high tech, and I had the money to do it.\n\nAcross the street from the embassy building was a high rise office building. I got my own fake janitor outfit from a uniform supply company. When the real maintenance crew showed up at midnight, I was waiting with a bag full of envelopes, each containing five grand.\n\nI pulled a wheeled trash can from the back of my rented van and went in with the cleaning crew. This crew wasn't cleaning any offices on the north side of the fourth floor. The closest I could get was a real estate developer on the sixth floor. I waited until they had finished cleaning it, then I gave all of them two more envelopes each.\n\n\"Lock the door on your way out and forget you ever saw me.\"\n\nOnce I was alone, I found a window facing the embassy and pulled my equipment from the trash can. First out was a heavy duty glass cutter. I cut a two foot hole in the window and tossed the cutter, with glass attached, aside.\n\nNext I pulled out a parabolic microphone. This was a commercial model, made for law enforcement and not available to the public. Luckily, the company had offices here in New York. I went over there with a quarter million in a briefcase and found an employee who was willing to let one \"fall off the back of the truck.\" (Side note- I massively overpaid for everything. I knew I didn't need to pay that much, but, well, why the fuck not?)\n\nThe parabolic mic was able to pick up everything the two guys on the street said, as well as the Rambo wannabe in the lobby. The lights on the fourth floor were on, but the curtains were drawn. I aimed the mic at the windows and could hear some faint conversation. In all, the parabolic microphone let me listen in on five of the terrorists. Helpful, but not enough.\n\n...\n\nI was in the high rise again, dressed as a maintenance worker. I'd ditched the high-tech gear and brought the gun. I was looking for the sniper team.\n\nI went up to the roof first. It was empty. I looked over the safety railing at the edge of the roof and could see why they weren't up here. The building was almost 50 stories. The height would make getting a clean shot difficult because of the steep angle down to the street.\n\nI leaned out and looked down the side of the building. I caught a brief glimpse of movement, like a rifle barrel poking out the side of the building, then going back in. It appeared to be above the roofline of the Embassy building, which would be the ninth or tenth floor.\n\nAfter taking the elevator to 12, I used the stairs to search from the 11<sup>th</sup> floor down. I was on the 9<sup>th</sup>, approaching the door to a marketing firm. I heard a creak behind me.\n\nA soft whump accompanied the bullet in my back.\n\n...\n\nWell, the guy with the sniper was obviously there to keep people like me from sneaking up on him. I hadn't seen where he came from, but now that I knew he was there, he was easy enough to find.\n\nThe lookout was posted in an office with a clear view of the elevators and stairwell. I couldn't sneak up on him.\n\nI figured out how to get to him on my third attempt.\n\nI came out of the stairwell and turned immediately to my right and walked down a corridor and out of the lookout's sight. I hid in an alcove, behind a coffee machine, and waited. He came down the hallway, looking in each office. He should have checked behind the coffee machine.\n\nWhen he was by me, I stepped out and shoved my gun in his back.\n\nTHUMP, THUMP\n\nHis body muffled the shots, but I had no idea if he had radioed me in when he saw me. I might not have much time.\n\nI quickly searched him. He had no ID. His pockets were empty, except for ammo, a knife, and a backup gun. What I was really after was his radio. He had an ear bud and a small microphone clipped inside the collar of his shirt. Wires led from both to a handset clipped to his belt. I found a label-Ultralux, but no dials or digital readout to tell me what frequency they were using.\n\nThere was faint noise coming from the earbud. Someone was trying to reach the lookout. I guess he reported me.\n\nFLASH\n\n....\n\nThe next morning I looked up Ultralux radios. They were high end encrypted two-way radios. I found a dealer who sold them in queens and had him walk me through its operation. The back cover came off, exposing a digital frequency readout, with up and down arrows, as well as ten knobs that controlled the encryption.",
        "I went back to the high rise.\n\nIn an attempt to buy myself some more time, I tried a new ambush on the spotter. The first time, I'd only had about five minutes to search him before his buddies set off the nuke. He must have called me in as extremely suspicious, and when he wouldn't respond to them, the jig was up.\n\nSince I knew where the sniper team was going to be, I just got there first, hid, and waited.\n\nIt worked much better.\n\nI had a solid fifteen minutes to frantically memorize the encryption code in the spotter's radio, before the sniper came looking for him. They had barely gotten set up in this building. I don't think the sniper even considered that they might be under attack. He just walked into the office where his partner was keeping a lookout, with his sidearm still holstered.\n\n\"Jorge? Jorge, where are you man, you're not answer-\"\n\nHe cut off abruptly as he saw Jorge's body on the floor, and then my gun pointed at him.\n\nI shot him twice in the chest.\n\n\"Now we're even, asshole. Teach you to kill me.\"\n\nNow two of the terrorists were offline. I didn't have much time. I redoubled my efforts to memorize the encryption code. Ten dials, 0-20. Unfortunately, they weren't lazy, there were no repeats. 09, 12, 18, 03, 05, 11, 19, 14, 02, 17.\n\n\"09, 12, 18, 03, 05, 11, 19, 14, 02, 17. 09, 12, 18, 03, 05, 11, 19, 14, 02, 17. 09, 12, 18, 03, 05, 11, 19, 14, 02, 17. 09, 12, 18, 03, 05, 11, 19, 14, -\"\n\nFLASH\n\n...\n\n\"02,17. 09, 12, 18, 03, 05, 11, 19, 14, 02, 17. 09, 12, 18, 03, 05, 11, 19, 14, 02, 17.\"\n\nI kept repeating the code to myself as I got out of bed and entered it into the memo pad on my phone.\n\nNow I had access to the terrorists' communications. I spent the next two weeks listening in, making a timeline. I tracked every movement and conversation of all 11 bad guys.\n\nI was able to build a full picture of what was going on.\n\nMaybe I shouldn't admit it, but when I first realized that New York was being bombed, I expected to be going up against Arabs. I know, profiling, blah blah blah. But really, that was where the smart money lay.\n\nFinding out the target was the South Korean Embassy, threw a monkey wrench in that idea, but all the \"terrorists\" I'd seen confused the issue- they were mostly Hispanic, with a couple white guys, and a black guy. These guys seemed a little too...inclusive, to be fundamentalists.\n\nThere were actually two groups- terrorists and mercenaries.\n\nSeven of them, including all the ones I had seen up to that point, were soldiers for hire. They didn't know about the nuke. They thought they were hired muscle in a dispute between North and South Korea. The plan, as far as they knew, was to kidnap the South Korean ambassador and his family. They would then bring the hostages to the Embassy, for its symbolism, and stand guard while the North Koreans did their thing.\n\nThey were distributed as follows- The sniper and his spotter were both mercenaries, as were the two lookouts outside the building, the guard in the lobby, and two more on the fourth floor. Of the North Koreans, one was directing the action from the security office off the lobby, and the other three were in the ambassador's office on the fourth floor.\n\nThe mercs knew that the North Koreans had a bomb, but not that it was nuclear. They were expecting to get paid, not die. The North Koreans had several large metal cases of equipment. They told the mercs that it was film equipment, along with a bomb big enough to level the building. They would film themselves beating and killing the ambassador and his family, then retreat to a safe distance and blow the building, the symbol of South Korean collusion with America.\n\nAll of that was true, except the finale. The four North Koreans knew that this way a one way trip.\n\nThe North Korean's goal was simple- strike a blow at the evil United States and their South Korean sympathizers. The nuke had to go off. Everything else was secondary. They would detonate if they got any hint that something was wrong. Sirens? Detonate. Sounds of a gun battle? Detonate. Someone doesn't answer their radio for an extended period? Detonate.\n\nIf I didn't interrupt them, the terrorists would spend a little over an hour beating on the ambassador and his family, interspersed with crazed rantings into the video cameras they had set up. Then they would blow themselves up along with the city.\n\nYes, they were filming themselves, but they weren't broadcasting it. The footage was being recorded, but not sent to anyone. They were worried about the NSA intercepting anything they sent out over the internet. I don't know how likely that is, but they weren't willing to risk an airstrike if the government caught wind of them.\n\nInstead, their plan was to upload the footage to their compatriots just before setting off the nuke, not giving anyone enough time to react. Their allies would then air their manifesto and take credit in the aftermath.\n\nSpeaking of the terrorists' allies, they claimed to be an independent group of North Korean patriots, not in any way affiliated with the government itself. I was calling bullshit. Every other sentence in their rants was to praise their god-like dictator. In my personal opinion, they were just trying to muddy the waters. It was hard to imagine how any independent group from poverty stricken North Korea could get their hands on a nuclear bomb.\n\nBut that wasn't my problem. I just had to deal with these assholes.\n\nMy biggest problem was the terrorists' itchy trigger fingers. Any kind of drawn out assault would set the bomb off.\n\nThree of the North Koreans, the hostages, and the nuke, were in the ambassador's office. I could maybe hide somewhere that let me get the drop on them, without going through their security forces. But that left the fourth North Korean, who was in the ground floor security office. He could detonate from there, and he would if he lost contact with his buddies.\n\nDisarming the nuke was out. I'm not MacGyver.\n\nPlus, even if the bomb didn't go off, I didn't want to put myself in a situation where I was surrounded be baddies.\n\nMy goal was to stop the nuclear warhead, but I had several selfish goals as well.\n\nFirst, don't die. If stopping the bomb ended the time loop, any injuries I sustained would carry over to Saturday. It would really suck if I got myself killed just when I was about to get out. So, if I got shot...let them set it off, and try again.\n\nSecond, do everything I can to minimize collateral damage. If an innocent, like the ambassador's daughter, was killed in the assault...let them set it off, and try again.\n\nThird, come out of this smelling like roses. If this worked, I would be a celebrity. Like that Sully guy who landed a plane in the Potomac, only times a thousand. Women would be lining up to throw their panties at me. I'd never have to pay for a meal again.\n\nBut there would also be intense scrutiny of the events leading up to the (hopefully) failed bomb attempt. I needed to plan carefully to avoid awkward questions. Like if I hid in the building somewhere, how would I explain that afterward? I was visiting the Embassy earlier and fell asleep in a closet? Not likely.\n\nI came to a conclusion: I was going to need help.\n\nGiven enough time, I could come up with a way to do it all myself. But it could take years and it was unnecessary. Why do it alone if I didn't have to? Having even one helper would simplify things exponentially.\n\n...\n\nThe first person I went to is Sung.\n\nSung was South Korean, and I considered him my best friend. He was an obvious choice, and no, the freaky 'coincidence' was not lost on me. Plus, his background made him the perfect partner for what I had in mind.\n\nSung had been a soldier briefly, before he lost an eye in combat and got medically discharged. No, he wasn't some super soldier. In fact, he admitted to me that he wasn't a very good shot even before losing the eye. He had excelled in unarmed combat, but there isn't much place for that in the modern military.\n\nAfter he was discharged, Sung worked as an interpreter. One thing we shared in common was a gift for languages. He was fluent in most languages of the orient. He had mostly worked for South Korean tech companies, interpreting when they dealt with their Chinese and Japanese counterparts.\n\nActually, there was a genuine badass in Sung's dojo- his sister, Mi-Sook.\n\nMi-Sook was the reason her and her brother had moved to New York. She had been some kind of commando in South Korea. I didn't know if she was in their military or a government agent, she didn't say. She had worked closely with the Americans, in a joint military exercise. She never gave any details, said it was classified. All she would say, was that both our governments fucked her over, and she had to leave South Korea, along with her brother to avoid reprisals from the North.\n\nOver the course of my time in the loop, I had confided in Sung many times. Convincing him that I was in a time loop was in large part how I got him to open up about he and his sister's past. That isn't why I told him about the loop. I just needed to confide in someone occasionally. I think he probably pitied me when I told him that I considered him my best friend.\n\nI'd never let Mi-Sook in on my secret, but now I did. She would be a big help in stopping the terrorists.\n\nThat brought our number to three, but I was going to add one more.\n\nMy wife.\n\nI second guessed myself a lot on that one. Julie obviously didn't have any special skills to bring to the table when conducting an assault on nuclear terrorists. She couldn't fight. She'd never shot a gun. She wasn't especially tech savvy.\n\nBut my wife had one thing going for her, and it was by far the most important quality for this mission- I could trust her.\n\nWait! Wait. I know what you're saying. Trust her? Are you fucking kidding? The woman betrayed me. She led a double life behind my back. She humiliated me.\n\nBut... While I would never again trust her with my heart, I could absolutely trust her with my life. She loved me in her own fucked up way. I was sure of that. She would take directions, she would watch my back, and most importantly, I believed she would trust me.\n\nProbably the biggest danger in this whole endeavor was one of my helpers going off script. What if I got shot? What if the people with me had a chance to stop the bomb? I'd be fucked if they managed to avert the explosion, while I lay there dying. If something went wrong, I needed that bomb to go off and reset the loop.\n\nEven Sung and Mi-Sook could only be trusted so far. I had to be careful not to put them in a position where they could fuck me. It's one thing to believe that I'm stuck in a time loop. It's quite another to let themselves and the entire city of New York die in a nuclear inferno on my say so. They would let me die if it meant saving the city. I couldn't blame them for that, it would be the right thing to do.\n\nBut I had as many opportunities as I needed to get it right, and I couldn't let someone else fuck it up for me.\n\nI was sure, that in this case, I could trust my wife. If there was anyone in the world who loved me and trusted me enough to have complete faith in me, it was Julie. Maybe my parents... but they were in Florida.\n\nSo Julie became the fourth member of my team.\n\n...\n\nWe made over twenty attempts at taking down the terrorists. That might seem like a low success rate, but we probably could have stopped the nuke in the first few attempts. I was quick to call the whole thing off if one of us got hurt. Like I expected, Sung and Mi-Sook weren't so keen to give up. I would have to make some kind of commotion and let the terrorists' itchy trigger fingers take care of it.\n\nI looked at all those first attempts as learning experiences, seeing how the mercs and North Koreans reacted to various tactics. What would make them detonate? That was the big question. It took some trial and error to figure out. I was more convinced than ever that if I called in the cavalry they would just use an airstrike to take out the building. The government must know the inherent danger of trying a direct assault. They'd never take that chance.\n\nOne thing I learned from our unsuccessful attempts, was just how much Julie cared about me.\n\nIt was on our fourth try. Julie's responsibilities boiled down to one thing- sneak up on one terrorist and take him out. She couldn't use a gun for this, but what she did have was a tire iron and the element of surprise.\n\nThe problem was that Julie wasn't a violent person. She recognized the seriousness of the situation, and was willing to do her part, but she had a very hard time walking up to a stranger and cracking his skull. Half my instructions to her consisted of \"hit him as hard as you can,\" because she would half-ass it if I didn't make it absolutely clear how important it was.\n\nWell, on our fourth assault she didn't hit him hard enough.\n\nI walked into the room just as he was getting up behind her. His gun was already in his hand. By that point, I had already armed myself with one of the mercs' guns, so he zeroed in on me. Julie saw my eyes go wide, and instinctively knew what was happening. She jumped forward and draped herself over me just as the terrorist fired.\n\nI felt her body, pressed against me, jerk as the bullets hit.\n\nI brought my own gun up and fired around her. I emptied my clip into him.\n\nI cradled Julie in my arms.\n\n\"Why did you do that? I told you nothing can really hurt me.\"\n\nJulie just smiled, with blood coated teeth.\n\n...\n\nI had to take a day off and think about that.\n\nShe had taken a bullet for me.\n\nWell, big whoop you might say. She knew about the time loop, so it was a meaningless gesture.\n\nExcept it wasn't. It's one thing to be told about the loop and believe it intellectually. It's quite another to bet your own life on that belief. Julie didn't live this reality every day. It was always a new concept to her when I told her. And no matter how convincing the evidence I presented, there would always be the niggling suspicion that I was delusional or playing some elaborate trick.\n\nAdd to that, I still wasn't sure how exactly the loop worked. Was the whole world on pause while I relived this day? Or did time move on for others and just not me? There was too much uncertainty for me to risk someone else's life.\n\nBut Julie had. Either she had supreme faith in me, and believed in me a hundred percent... or she was just willing to die for me...\n\nI knew she loved me, but...\n\nHer sacrifice deflated some of the anger I had still been subconsciously holding. I didn't know what it meant for us after the loop ended, but it made me rethink some of my plans. While I had managed to mostly put Julie from my mind, it had always been a given that when the loop ended I would adopt a scorched earth policy.\n\nIt still might be too late to save our marriage, but maybe it didn't have to be so hostile. I would have to think some more on that.\n\n...\n\nThis is what happened on assault number 27.\n\n...\n\n Friday July 15<sup>th</sup>, 2016 Day 1605\n\n \n\n\"What is love? Baby don't hurt me....don't hurt me....no more\"\n\nI got out of bed and went straight to the master bedroom. I shook Julie awake.\n\n\"Hmm...Hmm? What time is it? Is something wrong?\" she asked, rubbing the sleep from her eyes.\n\n\"You need to get up and take a shower. Get dressed in something light and comfortable. I'll meet you downstairs when you're ready.\"\n\n\"Sam? What's going on?\"\n\nI gently pulled her into a sitting position.\n\n\"I'll explain over breakfast. We've got a busy day today. Trust me.\"\n\nThat last brought her up short a bit. She swallowed another question and shrugged.\n\n\"Alright, alright. You want me up, I'll get up. Be ready to talk when I get downstairs buster.\"\n\nI took my own shower and dressed in some light pants and a t-shirt. We were going to do some running around today. I beat Julie downstairs by about fifteen minutes, so I started breakfast.\n\nWhen she walked in the kitchen I was pulling off the bacon and getting ready to cook the eggs.\n\n\"Aw shucks, I was planning on using that bacon for dinner tonight.\"\n\n\"I know, but we'll be in New York tonight.\"\n\n\"How would you kno-\" Julie started, confused. \"Never mind that. Since when are we going to New York tonight? Is it some kind of last minute work thing?\"\n\n\"No. This will be easier if I show you something first.\"\n\nI motioned Julie to follow me, and left the kitchen, grabbing a few oranges from the fruit bowl on the way. I led her to the den and handed her the television remote. I stood with my back to the TV, and started juggling the oranges.\n\nJulie was looking at me like I had two heads. \"Since when do you juggle?\"\n\n\"I've had a lot of time on my hands lately,\" I replied. \"I know a bunch of card tricks too. We'll get to that in a second. Right now, I need you to turn on the television. Okay, now hit mute.\" I waited as she did so. \"Now, without unmuting it, turn the channel to whatever you feel like.\"\n\nJulie had a smile on her face, like we were playing a game.\n\n\"Okay,\" she said. \"What next?\"\n\n\"You put it on the home shopping network. Right now they're selling gaudy turquoise jewelry for old women.\"\n\nJulie frowned, partly because she likes turquoise, and partly because she was starting to wonder how I guessed that. She looked from me to the television behind me, then looked back to make sure I hadn't set up a mirror or something.\n\n\"Look, I'll close my eyes. Change it to something else...Now it's ESPN. You tried to pull a fast one and choose a channel you never watch.\" I opened my eyes. \"Now unmute it.\"\n\nWhen Julie turned the TV's sound on, I took a second to listen to where in the broadcast it was, then starting talking with the sportscasters. I had about twenty minutes of it memorized, so I was able to sync up so well that it sounded like I was talking in stereo. All while continuing to juggle.\n\nFinally I dropped the oranges, walked up to Julie, took the remote from her limp hand, and turned off the television.\n\n\"What the fuck was that?\" she asked shakily. \"That was fucking spooky Sam. How did you do that?\"\n\n\"You always pick the same channels. It's gets downright easy after twenty or thirty tries.\"\n\nJulie's mouth was working, but no sound was coming out. I led her back to the kitchen and sat her down at the table.\n\n\"I've been reliving the same day, today, for over four years now. I'm not sure exactly, I lost a few days here and there. Every day, I wake up in the guest room, and its July 15<sup>th</sup>, 2016.\"\n\nShe had questions of course, most of which I still couldn't answer. I had a lot of guesses now, about how the time loop worked, and one very big one about how to stop it. But I sidestepped those issues for now, until we had taken care of the elephant in the room.\n\nIt only took about twenty minutes for Julie to start to get nervous. She's a smart woman, smarter than me. It was starting to sink in that I had relived this day over a thousand times... And she knew what she had planned to do at noon today... Did I know? How could I not catch her with that many chances?\n\nPlus, I wasn't quite...me. Not the loving husband she knew the day before. I wasn't using any terms of endearment, or touching her in any way.\n\nWe'd had this conversation before, but it still surprised me somewhat that she was the one to bring it up. Maybe she could tell I knew.\n\n\"So... Sam. If you've lived this day so many times... You've... You've probably caught me doing something I'm not proud of.\"\n\nBefore I could answer, she broke down crying. I'd debated whether I should leave Julie in the dark. Deal with her infidelity if and when Saturday came. If I had been willing to put on an act, she might have thought I was still in the dark, but I didn't want to do that. I didn't want to play house. Let the lies out, and if tomorrow ever comes, we'll start it honestly.",
        "We went back and forth about the chances for our marriage for a bit. Remember, this was always fresh pain for her.\n\n\"Listen Julie. We're not going to sit here and hash this shit out today. I'm sorry you don't remember it, but we've gone over this plenty of times. Full disclosure, I've read your diary.\" She gasped. \"Wait, wait, don't freak out. Yes, it was bad. But you may be the luckiest bitch in the history of cheating wives. I've had over four years to come to terms with it. You're going to miss all the pain and anguish I went through. You're not even going to remember all the petty revenge I got.\"\n\n\"What if I also missed my chance to win you back?\" she sniffed. \"What if I never had the opportunity to try to save my marriage?\"\n\n\"Well, all I'll say to that is you should go back and read your old diaries. Whatever relationship we have come Saturday, you can thank your lucky stars that fate kept me close to you. Because if I hadn't been stuck in a time loop, I might have never come near you again after reading what you did.\"\n\nI left her with a little hope. At least hope that I wouldn't cut her completely out of my life.\n\n\"There's a reason I'm bringing you up to speed today. I still don't know much about the time loop, but I think I may have figured out how to stop it.\"\n\nJulie gathered herself. I think she saw that the best thing she could do was stay close to me and try to work her way back into my good graces. If I was talking to her and planning something with her... those were good signs. So she made an effort not to dwell on her fears for our marriage.\n\n\"How can you stop it?\" she asked, wiping the tears from her eyes.\n\n\"Tonight, or more accurately, early tomorrow morning, a nuclear bomb is going to go off in Manhattan.\"\n\n\"Oh my god!\" Our marriage troubles were momentarily forgotten. \"Are you sure?! Of course you're sure. How? Why?\"\n\n\"I'll give you all the details throughout the day. It took me a long time to realize what was happening. My day resets when the bomb goes off. It happens so fast, I never realized what it was. Anyway, I've found the location and laid out a plan of attack. We've already made several attempts to stop it.\"\n\n\"We have? Oh, right. That's crazy. So that's what we're doing tonight? Stopping a nuclear explosion?\"\n\nJulie gave a little nervous titter. This was a lot of drama to wake up to. I don't think I would have handled it as well.\n\nWe had a schedule to keep so I chivvied her along.\n\nWe both had to call off work. Julie agonized over what to tell her boss.\n\n\"She already knows about your affairs. Just tell her you got caught and have to spend the day with your husband.\"\n\nJulie's eyes misted up at that, but it fit with her policy of honesty, so that's what she did.\n\nI told my boss Ben the same thing, but that I would be in for about an hour to tie some things up.\n\nJulie and I both rode the train into New York. We went to Broadwell and Marx, where she waited in the lobby while I went up to book my trades before the market opened. Now that I had a real prospect of escaping the loop, I wanted to be sure to get that money ball rolling. Plus, I would have some uses for it today.\n\nAfter that, we went to Sung's dojo, where I performed a similar feat to what I had done for Julie. In Sung's case it wasn't the television, but the radio. Sung had music playing in the dojo at all hours. I told him to pick a channel, and I would talk along with it.\n\nSung thought he had an ace up his sleeve, because he used an internet service to stream a Korean talk radio station. When he put that station on the gym speakers, he was first shocked that I spoke Korean, then that I was speaking in perfect unison with the radio hosts.\n\nI had made sure his sister Mi-Sook was there for the demonstration, which she consented to with ill grace. She was still her usual sour-self afterwards, but I had her attention.\n\n\"You guys don't know me, but I know you. I've been coming to this dojo for years. I'd like to think under different circumstances, we could be friends. Maybe we'll get that chance. But today, I need you two for something specific.\"\n\nSung was intrigued. Mi-Sook annoyed.\n\n\"How can I help?\" Sung asked, just as Mi-Sook said, \"I'm not getting involved in this American's craziness.\"\n\n\"I'm going to need both your skills. Sung, I know you were a soldier and an interpreter. I'll need your language skills. Mi-Sook, I know you were part of the 9<sup>th</sup> Special Forces Brigade of the Republic of Korea.\"\n\nHer eyes went wide. She looked like she wanted to attack me, which I was anxious to avoid, because she would kick my ass, regardless of my training.\n\n\"We've talked a lot (a lie). I know you don't remember, but if we had all day to talk, you'd would eventually confide in me (big lie).\"\n\nI don't think Mi-Sook was buying my bullshit, but it deflated her anger somewhat as she at least entertained the possibility. Actually, almost everything I knew about her came second hand from her brother. She never spoke more than ten sentences in a day to me before we starting assaulting the terrorists together. I knew I had to get to the point before she ran out of patience.\n\n\"North Korean terrorists are planning to detonate a bomb in New York tonight.\"\n\nThat got their attention. The only thing Mi-Sook hated more than polite conversation was North Korea. Sung held surprisingly little animosity for someone who grew up in a divided country, but Mi-Sook loathed the North. She wanted to know more, and looked ready to beat it out of me if I wasn't forthcoming.\n\nI had to be very careful with how much information I gave to Sung and his sister (especially his sister). They may have believed me about the time loop, but they wouldn't trust me to lead the charge if they knew the whole story.\n\nThe first time I tried to bring them in, I made the mistake of saying the bomb was nuclear. It was only the fact that Mi-Sook had no idea I could fight that let me get out of that dojo. I surprised her with a hip toss when she tried to grab me, and made it out the door onto the street. I suspect I would have spent the rest of that day in great pain, if I didn't tell her exactly what she wanted to know.\n\nI had warned Julie on the way over not to make any mention that this blast was nuclear. I had to downplay the severity of this terrorist attack significantly, or else Sung and Mi-Sook would demand we hand the information to the proper authorities. They still tried, but I was able to convince them to just help me instead.\n\nOnce she warmed to the idea, Mi-Sook was quite eager to foil a North Korean terrorist plot, even if I did let her believe it was small in scope. As zero hour approached and I doled out more info, they would realize this was a bigger deal than I was letting on, but by then it would be too late to bring in anyone else.\n\nI left them with instructions to clear their evening and be ready to go at 7pm. We would pick them up after dinner.\n\nWe went and got something to eat. I had to kill some time while my bank account grew. I started to give Julie her instructions for tonight, along with a lot of reminders about what not to say in front of Sung and his sister.\n\nAfter lunch, we went to a boutique car rental service, the kind of place where you can rent a car you could never afford to own. I let the salesman show me the Ferraris and Lamborghinis for a few minutes.\n\n\"What I'd really like is something comfortable that just screams luxury. Do you have any full size sedans, not a limo, but maybe just short of it.\"\n\nAs I knew he would, he led me to another garage, where there were three Maybachs in a row. They were maroon, silver, and black.\n\nThe salesman started leading me over to the silver one, but I interrupted him.\n\n\"I'll take the black one. It's perfect.\"\n\n\"Sir, that one has some special features. It's not really-\"\n\n\"Then that's the one I want. Top of the line. Besides, I love a black car.\"\n\nHis facial expression was somewhere between pained and annoyed.\n\n\"Sir... that vehicle rents for $18,000 a day... perhaps you'd be more comfortable in the-\"\n\n\"This is the one,\" I said, and pulled out my credit card.\n\nThe salesman didn't start to warm up until the bank cleared the transaction. What he had been trying to tell me, was that this Maybach was an armored car. I knew that, but I wanted him to honestly be able to say that he hadn't told me. Just in case someone later wanted to know why I just happened to be driving a small tank tonight.\n\nThe car also had high tech radio system in front, because most of the people that rented it had a team of security people that needed to stay in contact.\n\nMy story was going to be that my wife and I were going through a hard time in our marriage and wanted a night on the town, no expense spared. We would then spend the day being seen in different places, before picking up our \"friends\" Sung and Mi-Sook.\n\nWe would then stumble onto the terrorists serendipitously, by overhearing a radio transmission in our rented car.\n\nVery, very flimsy. And it would take some evidence tampering to make even remotely believable. Unfortunately, I couldn't come up with anything better. We needed an excuse why we went charging in ourselves instead of waiting for the police.\n\nWe would say that we had heard what sounded like criminal activity, and we were in the area, cruising in our rented luxury car. As we listened, we realized the urgency of the situation, and took on eleven armed terrorists, like any good citizen would.\n\nYeah...right.\n\nI was counting on a lot of gratitude over what we did, and not a lot of questions about why or how we did it.\n\nThe only justification I could point to was that Mi-Sook was a special forces commando, Sung was an ex-soldier, and I would claim to be their star pupil. I would just need them to back me up on that. Julie was there because she was my wife, and because we weren't planning on getting into a firefight.\n\nJulie and I cruised around New York in the Maybach, hitting all the usual suspects: Broadway, Times Square, Central Park. We ate at an upscale Italian restaurant, then swung by to pick up Sung and Mi-Sook.\n\nWe made one detour to intercept a delivery man and give him a hefty bribe to let me tamper with the food he was carrying. I made sure to wear an oversized hoodie and not let him see my face. I had to show him what I was putting in the food so he didn't think I was trying to poison someone. For two grand, he stopped asking questions.\n\nWe continued cruising aimlessly through Manhattan. The purpose was two-fold- to put a bunch of miles on the Maybach so I just justify renting it, and to go over my assault plans with the whole group.\n\nSung understood his part in the scheme, and its necessity.\n\nMi-Sook was a little bit harder to sell.\n\n\"I should lead the main assault. You don't have the training for something like this. In fact, none of us should be doing this. We should call the authorities.\"\n\n\"We've been over that Mi-Sook. I can't explain how I know what I know. Not to the government. And they don't have my inside info. I don't want to be arrested on suspicion of being a terrorist myself, which they would do on principle if I had this much knowledge of the inner workings of the real terrorists.\"\n\n\"And your part is crucial,\" I added. \"I can't do it. You're the only one with the skills.\"\n\n\"I still don't like it.\" She grumbled.\n\nShe would like it a lot less when she realized all the things I wasn't telling her.\n\nWe went over the plan over and over, with me telling them all the possible pitfalls I had learned from previous attempts.\n\n...\n\nAt 11 o'clock we put phase one into action.\n\nJulie had a simple job, but it was crucial, and somewhat demanding.\n\nWe had brought a baggy hoodie and sweatpants from home that morning. Julie slipped them on over her clothes. She also took the tire iron from the Maybach, carried in her largest purse.\n\n\"Remember, walk in the door at exactly 11:17. You have seven minutes to get in place.\"\n\n\"Got it. I'll be ready,\" she paused. \"Thank you for letting me be here for this, it means a lot to me.\"\n\nShe jumped out of the car quickly and walked away wiping her eyes.\n\nWe were a block away from the embassy, an easy stroll for Julie. She hung out on the sidewalk until 11:17, then walked swiftly through the doors and into the lobby. The night attendant and the overnight security guard were both in the restroom.\n\nThe security guard went to the bathroom at this time every night, but I had to get creative with the lobby attendant. I had spiked his Chinese delivery with a laxative. It had taken several days to get the dosage right. He was making repeated trips to the restroom, but I needed him gone at the same time as the security guard.\n\nWith the lobby unattended, Julie walked straight across and down a hallway to the security offices. I'd bribed one of the daytime crew a month ago to give me the code to the door. She punched the code into the keypad and the door opened with a click.\n\nThe first room was the duty station, with all the camera feeds from the lobby, elevators, and public areas of the building. I had coached Julie on where the cameras were, and to keep her hoodie pulled up.\n\nThe security offices were actually a suite of rooms. There was the duty station, a bathroom where the guard currently was, a break room, and a bunk room for when they needed extra staff on hand. With only one guard on night duty, the bunk room wouldn't be used. Julie could hang out there until the assault, as long as she kept quiet.\n\n...\n\nWith Julie in place, we continued our night cruise until 2am.\n\n2:00 am- I drove the Maybach into the parking structure under the high rise, using an entrance on E. 56<sup>th</sup> Street. The parking garage used an automated ticket and payment system. At this time of night there were only a few cars in the garage, so I pulled into a quiet corner and idled.\n\n...\n\n3:15 am- The terrorists showed up and set up their roadblocks. They killed the lobby attendant and security guard, as well as six other unlucky people who were working late at night in the various offices of the embassy building.\n\nJulie had to hide under the bunk bed in the security suite's bunk room. The terrorists did a quick walk through, but they were only expecting one night guard, so they didn't do a thorough search.\n\nSung, Mi-Sook, and I were listening to the play by play on the radio of the Maybach. It was an advanced model that could be tuned into the frequency the terrorists were using, so long as I knew their encryption code. We could even talk to them if we were feeling suicidal.\n\nSung was getting increasingly anxious, and Mi-Sook increasingly angry.\n\n\"Why the fuck are we letting them kill those people?\" Mi-Sook yelled. \"You knew this would happen, why are we sitting here with our thumbs up our asses?\"\n\n\"I'm sorry,\" I said with regret. \"I tried to come up with a way to hit them while they were still in transit, but there was no way. Any attack at all before they set up, and they would set off the bomb. It's a big one. It would kill a lot more than 8 people if it goes off. The only way to beat these guys is after they're spread out and feeling comfortable.\"\n\nSung look worried. \"Just how big is this bomb?\"\n\n\"Big. Bigger than the Oklahoma City bombing.\"\n\n\"...shit.\"\n\n\"Yeah. I wish I could save everyone, but that bomb cannot go off. So get ready, it's almost game time.\"\n\nWe gave the terrorists until 4am to settle in and get comfortable.\n\n...\n\n4:03 am- I turned to Mi-Sook.\n\n\"You're up. The sniper team checks in at 4:11. You need to make your move no later than 4:13.\"\n\n\"I know my part. I just hope you are up to yours.\"\n\nMi-Sook's job was to take out the sniper and his spotter.\n\nShe didn't have the option of lying in wait like I had. I don't know how she got to them without being seen or raising a ruckus, but Mi-Sook was by far the best of us in this arena. Right from the first assault attempt, she had never failed to get her job done, unlike the rest of us, who had all screwed the pooch repeatedly.\n\nShe had grilled me thoroughly about every aspect of the sniper team's position, including things that seemed pointless to me.\n\nShe walked off through the parking garage, towards the stairwell up to the sniper team.\n\nI pulled the Maybach to the garage's 57<sup>th</sup> St. exit, across the street from the embassy. I made sure the lights were off, so the two lookouts didn't see them coming from under the high rise. There was one of the terrorists' barricades crossing the entrance and exit of the parking structure, but I wasn't worried about that.\n\n...\n\n4:08 am- I placed a call to the police. This was part of covering my ass.\n\n\"911, what's your emergency?\"\n\n\"There are terrorists in the building at 57<sup>th</sup> and Park Avenue. They say they have a bomb.\"\n\n\"Sir, could I get your name and location please? Officers are being dispatched-\"\n\n\"There's no time, I have to try to stop them.\"\n\n\"Sir! Do not-\"\n\nI hung up on the dispatcher. With terrorists and a bomb threat, the police wouldn't just come charging in. They would have to call in a special response team, and the bomb squad. By the time they got here it would all be over, one way or another.\n\n4:09 am- I pulled up to within ten feet of the barricade, just out of sight of the terrorist lookouts.\n\n...\n\n4:11 am- All the various terrorists checked in with the North Korean in the security room. He was the one directing the mercs, from the duty station with all the camera feeds.\n\nIt would be twelve minutes until he checked on the various teams again.\n\nI sent a text to Julie, who had her phone on vibrate, giving her the all clear.\n\nThis was our window.\n\n...\n\n4:12 am- Mi-Sook killed the spotter on the 9<sup>th</sup> floor of the high rise, snapping his neck. She took his silenced pistol, walked down the hall, and used it to shoot the sniper in the back. He never knew she was there.\n\n...\n\n4:13 am- Julie emerged from the bunk room, snuck up on the North Korean at the duty station, and bashed him over the head with the tire iron from the Maybach.\n\n...\n\n4:15 am- Mi-Sook was ready with the sniper's rifle.\n\n...\n\n4:17 am- Mi-Sook opened fire. Two shots, split be less than a second. THUMP-THUMP. One lookout, pan over thirty feet to the other. Both headshots.\n\nSimultaneously, I hit the gas on the Maybach. The Maybach 62 weighs six thousand pounds before the armor plating and bulletproof glass are added. I was essentially driving an almost six hundred horsepower tank.\n\nI drove through the heavy wooden barrier like it wasn't even there, and accelerated across the street. Mi-Sook was a machine. She mastered her role the first night, so I could time her almost to the second. The second lookout was still falling as the Maybach emerged from the parking garage.\n\nSpeed here was crucial. The mercenary in the lobby could see one of the lookouts outside through a window. He wasn't looking that way when the lookout's head exploded, but we didn't have long.\n\nI got the car up to twenty mph and crashed through the double doors into the lobby, quickly making a sharp left towards the information kiosk.\n\nThe merc there was caught flatfooted. Rather than man his giant machine gun, he grabbed his pistol off the counter. He managed three shots before the Maybach obliterated the kiosk and him with it. Give him credit, he was a good shot. All three of his shots were dead center to the windshield in front of me. Fortunately, that windshield was bulletproof.\n\nWe still had to move fast. We weren't out of the woods yet.\n\nI left the car running, with Sung staying behind to man the radio. I ran out and grabbed the corpse of the mercenary I had squished. I took his radio, and held it at the ready.",
        "While we had been waiting in the parking garage, we had been listening closely to the terrorists talk over their radios. Sung's main job was to listen intently to the North Korean who was directing the action from the security office.\n\nOnce Julie brained him, Sung would have to get on the radio and pretend to be him. It was a job he was well suited for. He and the North Korean were from villages only ten miles apart, separated by the Korean demilitarized zone. After listening for an hour, Sung could copy his voice and speech patterns well enough to fool even the other North Koreans, especially over the radio.\n\nNow we had to explain the commotion.\n\nThe other three North Koreans were in the ambassador's office on the fourth floor, which was well soundproofed. They probably didn't hear anything. But there were two mercs in the embassy lobby who would have heard a crash.\n\n\"What was that noise down there?\" asked one of them.\n\nSung came on. \"I have nothing on the cameras. It must have been outside.\"\n\nNow my turn. The sniper was South African. I'd had a month to get his voice right.\n\n\"Some drunk didn't see the barricades. He swerved and hit the corner of the building.\"\n\n\"Are we compromised?\" asked Sung. \"Do we need to expedite the job?\"\n\n\"Negative command,\" I answered. \"The domkop pulled his car off the building and lit out. Building looks okay. We're good.\"\n\nThat should keep them happy upstairs for at least the next ten minutes.\n\nI ran back to the security office. Julie had opened the door for me. The North Korean she had conked on the head was slumped in his seat behind the monitors. As usual, Julie had been too squeamish to put all her weight into the swing, so he was just unconscious.\n\nI raised the silenced gun I had taken off the lobby merc.\n\nTHWAP-THWAP-THWAP\n\nI shot him three times in the chest.\n\nJulie squealed.\n\n\"Sorry. I didn't say anything before, but there can't be any survivors. We can't have them contradicting the story we're going to tell the cops and the government. If we leave one alive, they're going to squeeze them dry, and then they might notice that our story isn't adding up. These guys were going to kill millions of innocent people. I won't lose any sleep.\"\n\n\"Okay,\" I said. \"We've gotta keep moving. Did you turn off the security cameras?\"\n\n\"Yes, as soon as I hit that guy, I flipped the switches you told me to.\"\n\nThere were some things that I didn't want anybody seeing later. Like I couldn't have video of Julie walking out of the security office. She was supposed to be in the car. If they saw her walk out, they would look back for how she got in, and see someone entering four hours before the terrorists ever arrived. Now the tapes would be blank from 4:13 on. They'd have to take our word for how we did it.\n\nJust like I couldn't afford to leave any of the terrorists alive, I couldn't have visual evidence that we were lying about what went down tonight. When I was asked how I knew all the things I did, I couldn't tell the truth. The authorities would never believe I was in a time loop. They would tear my life apart to find out how I had detailed advance knowledge of a nuclear attack.\n\nHave you ever heard of rendition?\n\nSo I had to lie. So did Julie, though it pained her. I couldn't leave any witnesses or video that would contradict the narrative I had built.\n\nI checked to make sure that the cameras were off. Julie had screwed that up before.\n\nIt was 4:21.\n\n\"All right,\" I said. \"Here's the console that controls the elevators remotely. In two minutes, I want you to hit this button. Got it?\"\n\n\"Got it.\"\n\n\"Once that's done, go get in the back of the Maybach, and stay there.\"\n\nJulie gave me a hug as I was leaving. I let her.\n\nI jogged through the lobby to the stairwell, giving Sung a thumbs up on the way. His job on the radio was done. From here on, I had seven minutes to end this. At 4:28, the North Koreans would put the nuke on a 30 minute countdown. I had no idea how to stop the timer, so I needed to get there first.\n\nSung was now on cleanup duty. I tossed the radio I had taken off the lobby merc on the floor near the body. Sung was to take that radio and the two on the dead mercs outside, and turn off their encryption. Mi-Sook was doing the same with the sniper team's radios.\n\nWe couldn't very well claim to have overheard chatter on our car radio if all their radios were encrypted. I'd told both of them to grab the radios through their shirts so as not to get fingerprints all over the dials.\n\nIn the meantime, I was jogging up the stairs to the fourth floor.\n\nOnce I reached the door to the fourth floor lobby, I brought my gun up and waited for Julie to send up the elevator.\n\nI heard the \"ding\" as the elevator arrived.\n\nI swung open the stairwell door and walked out gun first. Both the mercs standing guard had turned to look at the elevator.\n\nI shot the one on the right twice in the back. The other guard made it halfway around before I shot him twice as well. They both went down.\n\nWalking over to them, I put another bullet in each of their heads, just to be sure. I'd come a long way since getting nauseated at the sight of gore the first night I shot one of them.\n\nAt the door to the ambassador's office, I paused.\n\nI'd made it to this point six times now.\n\n4:25 am- \"Showtime,\" I whispered.\n\nBarging through the door, I saw a familiar scene.\n\nThere were cameras set up all over the room, facing towards the center.\n\nRight in the middle was the nuclear bomb. It was a six foot long metal box, looking like a skinny coffin with a keypad on top. They had rolled it in on furniture dollies.\n\nTwo of the terrorists were standing over the cowering ambassador and his family. One had the wife by her hair. The other was looking into a camera across the room, screaming his nationalistic diatribe against South Korea and the U.S.\n\nThe third was standing by the nuke. He was between it and me.\n\nAll the North Koreans had remote detonators. I had cautioned Julie not to even breathe on the one in the security office. These three had all set their detonators on top of the nuke, with one of them staying within arms-reach at all times.\n\nI brought my gun up and emptied my clip into the terrorist standing by the bomb. This guy was a tough son of a bitch. I'm not a good enough shot to risk going for the head, and I knew from prior attempts that if I shot him less than four times, he would still get his finger on the detonator.\n\nI tossed aside the empty gun.\n\nThere was a shocked silence as the two remaining North Koreans stood in stunned disbelief.\n\nThis was my moment to say something heroic. I had put a lot of thought into it. I'd considered something tough and patriotic like- \"Not in my country you son of a bitch!\" But I'm not Toby Keith.\n\nIn the end I settled for a movie quote. It was much more me.\n\n\"I came here to chew bubblegum and kick ass... and I'm all out of bubblegum.\"\n\nSilence... and then the ambassador's teenage daughter snickered. Good for her.\n\nOne of the North Koreans made a mad dash for the detonators. I moved with him. It was a race.\n\nWe were evenly matched in speed, but he slowed down as he got there, in preparation to grab the detonator. I didn't slow down. As I neared, I leaped in the air and delivered a flying kick to the side of his head.\n\nMy foot connected solidly at his jaw line, lifting his head up and to the side. The sound of his neck snapping was like a gunshot.\n\nI flubbed my landing and had to scramble to my feet, but the last terrorist was just standing there watching with wide eyes. He wasn't carrying a weapon, and I was between him and the nuke. He had only one way to get to the detonators- through me.\n\nHe came at me in a flurry of kicks and punches. He was using traditional hapkido, a Korean martial art. Unfortunately for him, Sung had taught me his own version of hapkido, which was much more suited to real world fighting.\n\nI landed a succession of blows to his body and face. He was tiring fast, but I wasn't taking prisoners today.\n\nWhen he tried a high kick, I caught his leg. I outweighed this guy by a good sixty pounds, so when I pulled him forward by the leg and delivered a knee to his midsection, it lifted him off his feet.\n\nI still had his leg, and he wasn't in any shape to land on just one. He dropped like a stone and smashed the back of his head on the floor. I followed him down and delivered an elbow with all my weight behind it to his throat.\n\nI left him writhing and choking on his own blood, as I made my way to the ambassador's family. I spoke to them in Korean.\n\n\"It's okay. You're safe now. The police will be here soon.\"\n\n\"Thank you. Thank you so much. Those men... they said that is a... a nuclear bomb.\"\n\n\"I heard yes. The professionals will be here soon to deal with it.\" I looked back to the last North Korean, who was still faintly twitching. \"Why don't we get your wife and daughter away from all this, hmm? Your waiting area is empty. Why don't you all have a seat out there while we wait for the cavalry to arrive?\"\n\nThe ambassador nodded agreeably and ushered his family out of the room.\n\nAs soon as the door was shut, I made a beeline for the laptop the terrorists were using to collect all the video they were shooting. They had intended to send it to their comrades in arms and let them broadcast it in triumph. I had other uses for the footage.\n\nFirst, I stopped all the video feeds, then walked around and made sure each camera was off.\n\nI gathered all the video and downloaded it to a storage account in the cloud. Then I used the laptop to send out several emails with the video attached, to my parents and Julie's, along with a short note that we may be detained for questioning, but here's what you need to know.\n\nThe video would speak for itself. The terrorists were quite explicit about what they were doing, repeating it in both Korean and English. And it would show me charging into the room and saving the day.\n\nI especially wanted it to get to my father, who was a retired lawyer. Maybe I was being paranoid, letting conspiracy theories get the best of me, but I worried that the government would try to hush this up- to my detriment.\n\nBetter safe than sorry.\n\nAfter that was done, I made sure to alter the radios of all the terrorists on that floor. Now all their radios were set to an unencrypted frequency.\n\nI went down to the lobby and made sure Sung had changed the car radio. Then, I gathered the baggy sweat clothes Julie and I had worn over our clothing earlier in the day and went down to the basement, where they had an incinerator for destroying documents.\n\nI was just getting back to the lobby when the police arrived en masse, filling the street from one end to the other.\n\nI looked at my watch.\n\n5:03\n\nI'd made it to Saturday. "
    ],
    "authorname": "kublicon",
    "tags": [
        "betrayal",
        "cheating",
        "consequences",
        "groundhog day",
        "time loop",
        "nuclear bomb"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/play-it-again-sam-pt-05"
}