{
    "title": "A Beautiful Day Pt. 04",
    "pages": [
        "Author's note: My name is Jessica Tang Von Harper and I hope that you enjoy this latest chapter. \n\nRecap: Sara is a botanist on an assignment to inspect orchards on the island of Meleprija. She has been warned to remain professional and impartial, but can't resist her attraction to Leon, who oversees the orchards. She is also drawn to the Meleprija culture which has a permissive attitude towards nudity and sex.\n\n*****\n\nSara's eyes opened. The light of the morning streamed in her bedroom window. Her phone sat silently on the bedside table. She'd come awake before the alarm could go off.\n\nShe took in her surroundings. This was the bedroom in the guest cottage. She was in bed, with a blanket over her. Sara lifted the covers, noting that she was wearing magenta silk pajamas. A woman's pajamas, but not hers. \n\nShe had fallen asleep in Leon's bedroom. Had he carried her back to the cottage? Had he dressed her in these pajamas and helped her into bed? She was grateful that she wouldn't need to explain to Adam and Linda why she was walking back from Leon's house in the morning. Nevertheless, she found it a little unnerving, the efficiency with which she was returned to the cottage and put to bed.\n\nDid she remember returning? She had a vague memory, of being carried, of someone talking to her and being too sleepy to answer...\n\nSara got up and walked to the closed door. She peeked behind the fleece bathrobe hanging on the back of the door to find that that the silky black robe had been restored to its hook. Sara pinched it between her fingers, rubbing the smooth fabric, and felt a strange weight in the bottom corner which caused the robe to tap against the door. The robe had pockets, which were mostly decorative, but Sara could feel something inside the left pocket. She reached in to investigate, and extracted a black rectangle, close to the shape of a credit card but slightly thicker. \n\nA key card. But what door did it open?\n\nHer phone chimed. Time to wake up. Sara turned off the alarm and went to the dresser to pick out her clothes for the day. Before she chose the shorts and tank-top she would likely ruin during the day's orchard inspections, she tucked the key card under her pile of socks.\n\n***\n\nTaloga arrived at the same time that breakfast was delivered. They had enough food for ten people. Eggs, bacon, waffles, fruit, just about every breakfast food they could want. Linda, Adam and Sara helped themselves while Taloga sat in a chair nearby.\n\n\"Will you have some?\" Sara asked Taloga. \"We can't possibly eat this much.\"\n\n\"I have eaten already,\" Taloga replied. \"Please... you need your energy, Dr. Sara. Have as much as you like.\"\n\nSara put a waffle on her plate and poured syrup on it. \"Will Leon join us?\" she asked, trying to sound casual.\n\n\"I'm afraid not. He had hoped to eat with you, but he received an urgent call that he was needed at one of our other facilities. He will not return until tomorrow, at the earliest.\"\n\n\"Not until tomorrow?\" She was careful to conceal her disappointment as she bit a piece of bacon.\n\n\"Yes. Did you need to speak with him? I can put in a call to the other facility.\"\n\n\"No, that's all right. I'll see him when he gets back.\" Sara sat down with Linda and Adam. She joined in their conversation, trying to put Leon out of her mind.\n\n***\n\nTaloga drove her to the next inspection site. Sara felt like she was becoming accustomed to the humidity, but after several hours of taking soil and root samples, she still found herself drenched in sweat and covered in mud. In addition, she felt exhausted. The previous day's exertions should have been followed by a good night's sleep. Instead, she'd spent a good part of the night with Leon. \n\nTaloga kept her supplied with water, but Sara felt like she was sweating it out as fast as she drank it. When lunch time came, Sara accepted a sandwich, then asked Taloga if it would be acceptable for her to stretch out under one of the trees and close her eyes for a few minutes. Taloga jumped on his radio, spoke some words in Melepria, and ten minutes later, they had a hammock set up under one of the saganas. Sara dozed for twenty minutes, swinging in the hammock, and thought she'd never had such a restful sleep.\n\nAt the end of the day, Taloga asked her if she would like to shower before they drove back to the cottage. Sara could see one of the shower facilities in the distance, and she was dying to wash the layer of dirt from her skin, but she said no. Instead, she climbed into Taloga's ATV for the drive back to the cottage.\n\nIt wasn't that she minded showering in a co-ed facility. She had already experimented with public nudity several times on this first trip to Meleprija, and standing nude in a shower was significantly less public that the busy city street she had stood on earlier in the week.\n\nBut she hadn't expected the shower environment to be so infused with sexual tension. She had been the only woman there, with four naked men, and their furtive glances and growing erections clearly displayed their desire for her. Back in Chicago, she was considered unremarkable, just another pale woman in a city that had plenty of them. But in Meleprija, she was considered exotic, and that was definitely something she wasn't used to.\n\nAnd the sexual tension flowed the other way, too. She couldn't deny that it was exciting, to stand naked in front of a room full of muscular men, and to know that having sex with one of them might be as easy as beckoning him over. Not that she ever would. Right in front of their staring eyes, she could wash herself, scrubbing every inch of her naked body, and all they would do is watch her.\n\nIt was because the prospect of showering with them turned her on that Sara had to say no to it. She had started a kinda/sorta top secret relationship with Leon, and who knew how far it might go. Maybe it could get serious. It wasn't the time to be flaunting her body in front of strangers. Not to mention Linda and the company wouldn't consider it the most professional of behavior, should they hear about it.\n\nAdam was working at the kitchen table when Sara walked in and he winced when he saw her. \"Look at you! Rough day? Tell me, did you leave any of the soil out in the orchards, or did you bring it all back with you?\"\n\n\"Ha ha.\" She scowled at him. \"I'm sure you had a rough day as well, figuring out how to position yourself right under the air conditioning vent.\"\n\n\"No, actually that was quite easy,\" Adam replied. \"They didn't provide you with one of their uniforms today?\"\n\n\"Not today.\" Sara walked to the stairs, but paused with her foot on the first step. \"Are we eating with Leon tonight?\"\n\n\"No. He's away until tomorrow. We're eating here. They've given us a menu to order from. Would you like to see it?\"\n\n\"After,\" Sara said. She walked upstairs to take a shower.\n\n***\n\nJust after midnight, Sara's eyes opened, and she found herself wide awake. She had gone to sleep before Adam and Linda again, excusing herself from the after-dinner conversation after less than an hour. Adam and Linda had undoubtedly lasted another couple hours, but the silence of the cottage suggested they had finally surrendered to sleep as well.\n\nSara slipped out of bed and went to the window. She could see Leon's house in the distance. Several of the windows were lit, and she felt a flutter of excitement. Did that mean he was back?\n\nShe quickly removed the shorts and tank-top that she had worn to bed. For a moment, she considered slipping out of her panties and walking to Leon's house again wearing only the silky black robe he had given her. But she wasn't in the mood to take such a risk, especially when Leon might not even be home. Instead, she put on a t-shirt and a pair of denim shorts. If she ran into Linda or Adam outside, she would just tell them that she was going for a walk, which wasn't technically a lie. She retrieved the key card from her dresser and stuck it in her pocket.\n\nShe cracked open her door and peeked out. The cottage was dark and quiet, and the doors to Linda and Adam's rooms were closed. Sara silently descended the stairs and slipped out the front door. No one noticed her escape.\n\nShe followed the road to Leon's house, walking swiftly. The air still felt warm, even so late at night, and Sara noticed some clouds passing low over the valley. Perhaps it would rain sometime in the night. Meleprija had a reputation for sporadic bursts of rain, which would appear suddenly and end just as abruptly.\n\nAt Leon's door, Sara raised her hand to knock, then noticed a doorbell next to the door. She pressed it and heard nothing. After a minute, she pressed it again. She waited. Then she knocked, and waited again.\n\nMaybe he really was still away.\n\nBelow the doorbell, she saw a black square as big as her palm. A card reader. Sara took out the key card and held it up to the black square. A light flashed green on the square, and she heard a click as the front door unlocked. Sara turned the doorknob and the door opened. She stepped inside Leon's house and let the door close behind her.\n\nThe house was dimly lit and quiet. Sara found a light switch and turned on the light in the entryway. \"Leon?\" she called, but by then she wasn't expecting an answer.\n\nWell, if he really was still gone, maybe she should head back to the cottage and go back to sleep. That was the smart thing to do.\n\nInstead, she walked to Leon's lab.\n\nIt didn't surprise her when she touched her finger to the fingerprint scan and the door unlocked, although she did wonder how exactly Leon had obtained a sample of her fingerprint. Sara pulled open the door to the lab and turned on the lights. Thousands of dollars worth of new equipment glowed under the white lighting. \n\n\"God, I hope I don't break anything...\" Sara murmured as she walked around, gazing at the expensive machines. \n\nNext to the microscopes, she found an envelope with her name on it. She opened it and read a small note:\n\n\"Sara, please feel free to use anything in this room, just as Dr. Albert Chen has in the past. Leon\"\n\n\"I should go back and go to sleep,\" Sara said out loud. But next to the microscope, she saw a box of slides labelled 'stem cross-sections'. She took the first slide and put it on the microscope.\n\n***\n\nTwo hours later, Sara stood in front of another fingerprint scanner. She put her finger against it, and this time she was a little surprised when the door unlocked. She pulled the door open to reveal the night, and just as she had suspected, a curtain of steady rain now fell on the garden outside. \n\nSara stepped outside, protected from the rain by an awning. She gazed at the rain for a moment, then started to undress. She removed everything, leaving her clothes in a dry niche under the awning, and stepped out into the garden naked. Tiny drops of warm rain fell onto her bare skin, quickly covering her in a wet gleam. Did she do this to preserve the dryness of her clothes? Or was it because Leon had brought her here naked the night before, and now she felt almost like it was a sacred area which she shouldn't defile by wearing clothes? She followed the path, and saw the statue of Kon Om Ma on her left. \n\nThe path was difficult to follow in the darkness and the rain, and Sara told herself she was crazy. But then she saw the small clearing and the three sagana trees. Leon's secret project, his incredible hybrids of Whitney-Britt and Enderburg saganas. Two very advanced types of saganas, and very different. How Leon had mixed them successfully, Sara had no idea. \n\nShe crouched next to one of them and took a soil sample. \n\n***\n\n\"You sleep okay?\" Adam asked Sara the next morning, as she fumbled with pouring a packet of sugar into her coffee.\n\n\"No...\" she said. \"I kept waking up.\" She took a sip of the coffee, burning her tongue.\n\n\"You went to bed too early,\" Linda commented. \"It messed up your rhythms. Better to keep the same schedule, even if you're tired.\"\n\n\"Maybe that's it,\" Sara mumbled.\n\n\"I slept great,\" Adam said. \"It rained a bit last night, you know. I find the sound of the rain pattering on the roof to be very soothing.\"\n\nWell, good for you, Sara thought grouchily. She couldn't wait to nap in the hammock again.\n\nTaloga walked her to the ATV after breakfast. \"Do you expect Leon to return today?\" Sara asked him.\n\n\"I don't believe so, Dr. Sara. I know that he wishes to be here, but he is dealing with a flooding situation at one of our other orchards. It may be several days before he returns. Do you wish me to send him a message?\"\n\nSara wondered if Leon already knew she had entered his house and his laboratory in the middle of the night. The card reader and fingerprint readers that she had accessed no doubt kept a record of entry. Maybe that was enough of a message to send to him. \"No,\" she answered Taloga. \"No message. Just, if you talk to him... I hope you'll let him know I'm looking forward to seeing him again.\"\n\nTaloga nodded. \"Are you ready?\"\n\nReady for another day of sweat and mud. Sara fastened her seat belt and they left the cottage behind. \n\n***\n\nThis day's section of orchard lay closer to the inhabited areas, and after napping for half an hour in the hammock, Sara walked to a small restaurant to get some lunch. The valley had a single, enormous cafeteria, but it also had a number of commercial food options. The restaurant Sara chose sold Italian food, and had a shady outside area where she could eat without being self-conscious about her messy appearance.\n\nTaloga gave her a black card with a gold star on it. \"Show them this,\" he said. \"It will let them know to not charge you.\" Sara accepted the card and headed to the restaurant. \n\nWhile walking, she observed a Melepria man sitting naked on a bench, chatting animatedly with a few male friends, who all wore the green Pariva uniforms. Sara didn't pay much attention to them until she noticed a pretty Melepria woman, also in a green Pariva uniform, approaching the group. The naked man saw the woman and called out to her, saying something in his language, probably a greeting. The woman didn't respond, but walked straight towards him. The woman walked wearily, as if she'd worked some hard hours and now wanted nothing more than to slump down on the bench and rest.\n\n\"I really need to learn to speak Melepria,\" Sara muttered as she tried to watch them without being obvious about it. The woman stopped in front of the naked man, and the man smiled and said something to her. The woman didn't bother to answer. Instead, she started to pull off her uniform, shrugging out of her clothes like she'd just come home and wanted to be more comfortable. She stripped everything off, leaving herself naked, her clothes discarded in a pile next to the bench. \n\nThe men paused their conversation and watched the woman as she stretched her arms out, twisting at the waist as if trying to loosen a crick in her back. The naked man said something to the woman that made her shake her head. She reached down between the man's legs, took hold of his penis and started to stroke it. The man chuckled as he quickly became erect.\n\nThe woman turned to face away from the man and the man held his cock up while the woman lowered herself onto it. Her eyes were closed and she had a contented smile on her face, as if she was lowering herself into a warm bathtub. Sara knew she was probably staring, but she couldn't look away as she watched the man's cock disappear into the woman. The woman began to bounce slowly up and down on the man's lap, fucking him. Meanwhile the man looked back at his friends and continued the conversation. \n\nSara forced her eyes forward, increasing the pace of her walk, as she was positive she'd slowed down while gawking at the Meleprias. She could hear the rhythmic hiss of the woman's breath, other noises which her imagination worked hard to identify. The chatter of the men. She wondered if they were talking about her, pointing out the odd-looking foreigner to each other, while paying no attention to the woman having sex right next to them.\n\nJust a few days ago, she was that woman. Standing naked in the middle of downtown, clinging to a street lamp while Leon entered her from behind. It was incredible to think about, and Sara fought the urge to look back at the bench, to watch the young couple fucking and imagine she was watching herself, the way she had looked with Leon. \n\nFor a moment, she imagined herself as the woman, and Leon as the man sitting on the bench. She would turn to see him, sitting there, and she would immediately change direction towards him. She imagined stripping off her dirty clothes as she walked, carelessly tossing them aside as she approached Leon. Reaching for his cock, stroking it, maybe putting it in her mouth. Feeling it harden and extend between her lips. Turning, positioning him between her legs, sinking down on him. \n\nThe fantasy was so palpable that Sara felt her body trembling. She closed her eyes and tried to think of something else, anything else. Something bland and boring. Organic chemistry tables. Latin names of plants. TTX corporate documentation guidelines. Anything to distract herself from the urge between her legs.\n\nHad she become spoiled by Leon so quickly? She'd endured long periods of involuntary abstinence before, with scarcely a thought. Now, after just two days with Leon, she felt so deprived by his absence. Her body yearned for his touch so much that it startled her. \n\n\"Maybe he'll be home tonight,\" she thought. \"And if he isn't... I'll just imagine he is.\" She could walk again to Leon's house, let herself in. Lie naked in Leon's bed, with the lights out, and the windows displaying the view of the valley. She could take her time, touching herself, bringing herself to a climax. It wouldn't be the same as being with Leon, of course... but it might clear her head.\n\nDo it now, a wicked thought whispered in her mind, and the lunatic thought provoked an immediate surge of adrenaline. Sara trembled as she imagined entering the restaurant, sitting at a booth, undressing. Sitting naked, casually leaving her legs open, her hand against her pussy, stroking herself with one hand while the other hand poked bits of rotini with a fork. \n\nYou could do it, the voice whispered. If you wanted to. It's not common for a woman to publicly masturbate in Meleprija, but it's allowed. Why not? \n\n\"Because it's crazy.\" She spoke out loud. \"Control yourself, Sara.\" She pushed the door open and felt a welcome blast of air conditioning as she entered the restaurant. \n\n***\n\nShe did walk to Leon's house that night, and she did strip off her clothes and stroke herself in his bed. She even brought herself to an orgasm, but it felt small and forced, a surge of rough pleasure that quickly left her. Frustrated and restless, she dressed again and went down to his lab. For the next two hours, she studied soil samples, comparing them to bark and root samples from the three special trees in the garden. \n\nAs she suspected, the trees required significant human intervention to grow. As each tree grew, its roots increased the acidity of the soil, and due to the hybrid nature of the tree, it didn't have a tolerance for the acids. On the contrary, it had a sensitivity to them, like an allergic reaction. If Leon didn't constantly monitor and adjust the soil around the trees, they would swiftly poison themselves.\n\nMaybe a symbiotic plant might be the solution? Something that thrived on the soil that the hybrid trees produced, and converted it back to ideal soil for the hybrids? Sara could think of a few possibilities off the top of her head, and she hunted through Leon's greenhouses, finding samples, testing them. \n\nWhen she finally wobbled back to the house in the early morning, she felt exhausted and unsatisfied. She'd burned away her precious sleep hours, and hadn't made any progress in solving the soil problem. Which she really shouldn't have been working on in the first place. Her body hadn't been placated by her solo session in Leon's bed, either. It had only made her long even more for the real thing.",
        "She snuck into the quiet cottage and collapsed into bed. It seemed as if she'd barely closed her eyes when the alarm went off two hours later. Rubbing her eyes, Sara pulled herself out of bed for another long day.\n\n***\n\nShe slept in the hammock for two hours that day. Taloga didn't say a word.\n\nThe clock was creeping towards 2:30 and Sara was digging to expose a root when she noticed three naked Melepria men standing in the distance. They stood in a circle, having a conversation, none of them paying her the slightest bit of attention. Sara tried to focus on her work, but found that her gaze kept peeking in their direction, her eyes drawn to their dangling cocks. \n\nSuch strange organs, she thought, drooping towards the ground like wilting vines. But if she let her fingers be like drops of water, her fingertips splashing where the shaft protruded from the groin, dripping paths down towards the head... then the cock would bloom to life, rising into the air, growing, stiffening... she imagined herself kneeling in the middle of their circle, going from cock to cock, bringing them forth, having them swell beneath her fingers...\n\nSara quickly dropped her eyes back to her work. She felt a flush on her skin and her heartbeat was tapping rapidly in her chest. She shoveled furiously, tossing the dirt aside. When she had her root sample, she looked towards the men again, but they had moved on.\n\n\"I must leave you for a few minutes,\" Taloga spoke to her a short while later. \"Would you like me to bring you anything? Another bottle of water, perhaps?\"\n\nBring me a long Melepria cock, Sara thought. Out loud, she said, \"Yes, more water. And another clean towel?\"\n\n\"Of course,\" Taloga said. He nodded to her and left.\n\nSara went back to her work. Her phone chirped and she glanced at it.\n\nAn unknown number.\n\nLeon, maybe?\n\nShe scrambled to answer it. \"Hello?\" she breathed.\n\n\"Sara?\" It wasn't Leon. She knew the voice. It was Dr. Chen.\n\n\"Dr. Chen! Yes, this is Sara. How are you?\"\n\n\"I'm fine, Sara. I just wanted to see how things were going. How's everything in the Perchuga Valley?\"\n\n\"Well... everything's fine out here, actually. I'm close to halfway done with the inspection, and so far the trees have been scoring pretty high. I haven't noticed any serious issues with any of them... they're all healthy and thriving, and the sap is showing a yield in the high twenties, in some cases even thirty.\"\n\n\"I expected as much. They take their trees very seriously out there. Leon Papega knows as much about saganas as anyone, and he's a perfectionist when it comes to growing them.\"\n\n\"Yes,\" Sara said. \"I can tell. I've seen his private laboratory. It's quite impressive.\"\n\n\"Oh, yes, isn't it? I've helped him some in its construction. Some expensive pieces of equipment in there, no doubt. But he wanted to spare no expense. He wanted anything he could get to help him make the next generation of saganas.\"\n\n\"Right. Definitely.\" Sara hesitated. \"Doctor... actually, there's something I wanted to ask you...\"\n\n\"Yes, Sara?\"\n\n\"You know, Linda Baldwin from legal is here with me. She's made it clear that I'm not here to collaborate with Pariva... that I should stay out of their business. But... you know... Leon really is very interested in saganas, and he really loves to talk about them...\"\n\nDr. Chen chuckled. \"Ah, yes. He certainly does, and I imagine he must be quite pleased to be able to speak with someone who knows as much about saganas as he does.\" Dr. Chen paused, as if he was considering his next words carefully. \"Sara, we both work for a corporation. TTX wants to make money, of course they do, and the leadership of the company has to consider the financial aspect of every decision. But sometimes people in corporations get too focused on the little details of the financial side of things, and after a while, it starts to distract them from the bigger picture.\"\n\n\"What's the bigger picture?\" Sara asked.\n\n\"That the batteries we make are changing the world for the better. The more energy we can cram into a battery, the more energy we can move from source to destination. We can have solar farms in the California desert supplying power to houses in southeast Asia. We can have warehouses storing power to last us for decades. The financial people, they want to make sure they squeeze every penny out of each generation of sagana trees. Of course they do. But the important thing, really, is to make sure that sagana trees get dramatically better with each generation. That's what we need to work on collectively. If we do that... there will be plenty of money for everyone, believe me.\"\n\n\"Okay.\"\n\n\"You're doing an amazing job there. I have every confidence in you.\"\n\n\"Thanks,\" Sara said. \"Everything's fine. Don't worry.\"\n\n***\n\n\"What were you planning to do tomorrow?\" Linda asked Sara over dinner. Leon was still away, and they ate around the table at the cottage. \n\n\"Section E5 of the Kokaya orchard,\" Sara answered.\n\n\"Change of plan,\" Linda said. \"No inspection tomorrow. Instead, you and Adam are going to head back to the Hilton in Melep City and check out. It's a waste of money to keep those hotel rooms when we're staying here at Leon's guest cottage, right? You both agree that we're comfortable here in this cottage?\"\n\n\"Right,\" Adam said. \"Very comfortable.\"\n\n\"Are you checking out of your room, too?\" Sara asked.\n\n\"No,\" Linda said. \"I'll still need mine. I'm going to drive back next week to attend a few meetings at the Pariva building.\"\n\nSara took a sip from her water bottle. A two hour drive to the hotel. Two hours at the hotel, probably, assuming they ate lunch there. Two hours back. If they left at 8 in the morning, they would be back before 2. She could nap on the drive. It made for a fairly light day.\n\nThat was good. She would need a day of rest after the work she intended to do in Leon's laboratory that night.\n\n***\n\nSara set an alarm on her phone for 4 AM, to remind her to return to the cottage, and it was good that she did, because she could have easily worked until sunrise. At first, she had felt her sleep debt weighing on her as she moved around the lab, but quickly she lost herself in the soil and plant analysis. The equipment made everything so easy, and she knew that she was making progress at least four times faster than she would have in her own lab. Leon's vast greenhouses filled with plants also made things easier. Aside from a few exceptions, Sara was able to find every plant that she wanted to test, and she had quickly deduced Leon's organization method so that she was able to find the plants quickly.\n\nWhen the alarm finally went off, the top plant on Sara's list was a vine called a red creeper. It seemed to fit together so well with Leon's secret sagana hybrid, sucking the toxins out of the soil, replacing them with a chemical composition that the hybrid would thrive on. Only one problem. Red creepers were parasitic. The vine would slowly wrap around the sagana and kill it.\n\nBut maybe she could figure out a way around that.\n\nSara turned off the alarm on her phone. She left a paper by the microscopic, with \"Red Creeper?\" written in red ink and turned off the lights and equipment. As she walked back to the cottage, she could feel the sleepiness seeping into her limbs again, pulling on her eyelids. \n\nAt least she had three hours to sleep. If she woke up at seven, she and Adam could be on the road by eight. The vehicle was supplied by Pariva, and Adam would drive. Sara would nap. \n\nWhy, by dinner time, she might even feel well rested!\n\nShe fell into bed as soon as she reached her room and slept wonderfully. The bed felt cozy and although her alarm woke her at seven, she felt like she'd enjoyed some very productive rest. The sun was shining through the trees outside her window, and Sara slid it open, letting in some of the cool morning air. She still wore the t-shirt and shorts that she'd worn while working in the laboratory, so she threw the bathrobe over it and went outside towards the bathroom.\n\nShe passed Adam in the hall. He was already dressed. \"I'm going to have a cup of coffee, then see about the car,\" he said. \"Do you know where the parking lot is where they park those long blue trucks? A few blocks that way?\" He pointed.\n\n\"Yes, I know it.\"\n\n\"I'll meet you there at eight. Okay?\"\n\n\"Sounds good.\" That gave her plenty of time. She went to the bathroom and rinsed quickly in the shower, to wash off the smell of soil from her late night's work. She quickly accomplished her morning bathroom routines, then went back to her room and changed into a long sleeve button-up shirt and black shorts. She rolled the sleeves up to her elbows. Downstairs, she grabbed a couple slices of toast with jam and drank a cup of coffee. She was out the door at 7:50.\n\nThe parking lot where Adam had the car parked was a ten minute walk to the south. The sun had just crested the mountains to the east. The morning was filled with the sounds of birds, calling and chattering from the trees. Sara enjoyed the stroll. \n\nShe took a right turn and saw the place Adam had indicated, a parking lot with a small gas station, where Pariva stored and fueled trucks that would travel between the valley and Melep City. She saw Adam waiting next to a shiny black SUV, and waved at him as she walked up.\n\n\"Here I am,\" she said. \"Are we ready?\"\n\nAdam shook his head. \"Not quite yet.\"\n\n\"No? Is there something you still need to do?\"\n\n\"Not me.\" He gazed at her. \"You're the one that's not quite ready.\"\n\n\"Me?\" Sara considered what they intended to do. Drive to the hotel, grab the remaining things out of their rooms, check out, drive back. It didn't seem very complicated. \"What? Am I forgetting something?\"\n\n\"Sara, it's a long drive back to the hotel,\" Adam said. \"We're looking at five, maybe six hours together. I could spend that time with Dr. Olson, the celebrated botanist from TTX Energy Solutions, but to be perfectly honest, I'd rather spend it with that beautiful Melepria woman I met at the hotel on my first day here. Do you know the one I mean?\" He gazed at her meaningfully.\n\nSara opened her mouth to tell him she had no idea who he was talking about. But then she understood and her eyes widened. She stared at him, but he just looked back at her calmly.\n\nSara glanced around quickly. No one else was around. She looked back at Adam. He was still watching her, saying nothing. \n\nSara met his gaze. Her hands rose slowly to the front of her shirt. She began to undo her buttons. \n\nAdam watched in silence as she undid button after button, finally pulling open her shirt to reveal her white bra. She slipped the shirt off her shoulders and Adam politely held out his hand, accepting it from her. He carefully folded the shirt over his arm while she unhooked her bra. She pulled that off as well and passed it to him.\n\nNext she undid her shorts and pushed them, along with her panties, down her legs. She stepped out of them and gave them to Adam. He removed her phone, wallet and hotel room key from the pocket of her shorts and put them in the front pocket of his pants, then separated her panties from the shorts and added both items to the folded stack balanced on his arm. \n\nSara stood on her right foot while she reached back to pull the shoe and sock from her left foot, then switched and removed the shoe and sock from her right foot. She put the socks in the shoes and set them at the top of the stack of clothing. Finally, she reached up and undid her pony tail, removing the tie and shaking her hair loose. She dropped the tie in one of her shoes. \n\nThe sun warmed her bare skin as she stood naked and barefoot in front of Adam. \"Am I ready now?\" she asked.\n\nAdam's eyes dipped, openly admiring her body. \"Yes,\" he spoke under his breath. \"Perfect.\" He returned his gaze to her face, steadying the stack of clothes on his arm. \"Just let me run these back to the cottage. I'll be right back.\"\n\nSara nodded. She turned and watched him as he strolled away with her clothes, leaving her standing naked on the sidewalk. She glanced around anxiously, but at least for the moment she was alone.\n\nShe thought, \"What in the world did I just do?\"\n\nA two hour drive to Melep City. Naked, sitting next to Adam for two hours. It would be awkward, but she supposed she could handle it, as long as she didn't distract him into crashing. They would finally reach the hotel; the valet would open her door and she would step out naked. Through the lobby, to the elevators, up to the hotel room. She had some clothes in her room; once she reached it, she could get dressed again. But until then, she had committed herself to being naked, naked, naked.\n\nMaybe they would stop at the hotel's coffee shop for lunch. Would she get dressed before? Or would she wait until after? Sitting in the coffee shop, ordering lunch, wearing nothing at all... could she do that?\n\n\"I must be losing my mind.\" The cool morning breeze danced over her bare skin. It had happened so quickly. One minute she was dressed, the next she had stripped completely, and she hadn't even hesitated. Had Adam seen something in her face as she walked up? Had he known that she would eagerly remove her clothes, if only he asked her to?\n\n\"Losing my mind,\" she repeated. But she couldn't deny that she felt excited. She recalled the thrill of those drinks in the bar with Adam, her second night in Meleprija; how turned on it had made her, to be naked in front of everyone, so turned on she had gotten herself off in the elevator on the way back up to her room. Maybe that's why she'd surrendered her clothes to Adam so easily. She was chasing that same feeling of wild abandon.\n\nShe walked over to the SUV and leaned against it. The metal was cold against her shoulder blades. A truck drove by on the street a block away, but the driver didn't look in her direction. Sara looked to her left, towards the cottage. Where was Adam? What was taking him so long?\n\nHe appeared in the distance, emerging from behind a line of trees, walking briskly in her direction. Sara straightened and started to smile, anticipating his arrival. But then the smile abruptly dropped from her face. She heard a voice call, \"Adam! Wait!\", and recognized Linda's voice. Linda appeared from the right, walking straight towards Adam, on a route to intercept him. Adam slowed, waiting for the tall blonde woman.\n\nLinda! Foolishly, Sara's first instinct was to look around for her clothes, which were, of course, no longer there. Adam had just placed all of her clothes back in her room. Her next instinct was to hide. Sara tried the back door to the SUV, and was relieved when it opened. She jumped in and closed the door behind her. The windows were tinted, and Sara sank down low in the seat. The car smelled new inside, and the seats had a soft grey covering.\n\nLinda's voice became audible as she and Adam approached the SUV. \"No, you won't even need to drive. Taloga has said he'll drive us,\" Linda was saying. \"It makes sense to go all together. You and Sara can check out of the hotel while Taloga drives me to pick up my documents. Then we'll pick you up again and drive back.\"\n\n\"Certainly, certainly,\" Adam replied.\n\n\"Oh, here comes Taloga,\" Linda said. \"But where's Sara? Didn't you say she was here?\"\n\n\"Yes, she was waiting here. Maybe she had to head back to the cottage for something.\"\n\nSara peeked out the window. She could see Linda standing right there, barely five meters away. Taloga was walking up the road, and Linda was waving at him. She could see Adam walking around the front of the car. He passed the front passenger door, instead reaching for the handle of the back door. He pulled the door open and immediately saw Sara naked and hunched down in the backseat. He stared at her in surprise.\n\nDo something! Sara urged him with her eyes. She didn't dare speak out loud, for fear that Linda would hear. She peeked out the window at Linda, then looked back at Adam, gesturing franticly at her nude state. Surely he understood the trouble she would be in if Linda caught her like this?\n\nAdam straightened, looking over the top of the SUV. \"Oh, here she is,\" he called out to Linda. \"Sara's just waiting in the back seat.\"\n\nSara's eyes widened. Her mouth opened but she couldn't speak.\n\n\"Why don't you take the front seat?\" Adam said to Linda. \"I'll slide in the back with Sara.\"\n\n\"Are you sure you'll have enough leg room?\" Linda asked as she came around the front of the vehicle\n\n\"I'll be fine,\" Adam replied. He bent down and slipped into the SUV, sitting in the back seat just an arm's distance away from Sara. He closed the door behind him, then looked at her and shrugged.\n\nLinda pulled open the front passenger door and leaned into the car. She turned towards the back seat, on the verge of delivering a greeting to Sara. But as soon as she saw Sara, she froze, and her greeting was forgotten. \"Sara!\" She stared at Sara's body. \"My god, woman! Where are your clothes?\"\n\nSara felt like she was shrinking against the side of the vehicle. She tried to meet Linda's gaze, but quickly averted her eyes to the side. \"I'm seeing what its like to be Melepria today,\" she said quietly.\n\n\"You're what?\" Linda looked bewildered.\n\nTaloga opened the driver's seat and entered the SUV. His reaction to Sara was the exact opposite of Linda's; he nodded to her, as if oblivious to her lack of clothes. \"Good morning, Dr. Sara.\"\n\n\"Good morning...\" Sara replied weakly.\n\n\"Sara, you can't possibly go to Melep City looking like that!\" Linda stared at her as if she was crazy.\n\nTaloga frowned. \"It is acceptable,\" he interjected. \"In our culture, the body is not considered taboo as it is in your country. She is free to wear nothing if she chooses. No one will object.\"\n\nLinda's eyes flickered towards Taloga, then back to Sara. \"Well, of course, I know that... but I never thought Sara, of all people...\" The blonde lawyer clearly had more that she wanted to say, but now she was in a position where she didn't want to argue with Taloga. She took a deep breath. \"Sara, can we have a discussion about this later?\"\n\n\"Okay.\"\n\nLinda pressed her lips together, then asked, \"You have your passport and room key, right?\"\n\nSara nodded. \"Adam has them.\"\n\nLinda's eyes flashed towards Adam. \"Oh, Adam has them, does he?\" Her look clearly conveyed that she would be having a discussion with him as well. \n\n\"Are we ready then?\" Taloga asked. When no one replied, he started the SUV. He pulled away from the curb and headed for the road that led to Melep City. \n\nAdam pulled out his phone to look at it. Sara reached out and snatched it from his hand. She went to the text message screen and tapped a message with her fingers, then passed the phone back to him. \n\nThe message read: \"Why did you tell her I was in the car? You knew I was like this. Why didn't you help me get my clothes back?\"\n\nAdam read her message. He quickly tapped a response, which he showed to her: \"I didn't want you to get dressed. I prefer you nude.\"\n\nSara stared at the bold words. She was shocked that he would state it so openly, yet it really wasn't much different than what he'd said earlier, when he'd implied that she wasn't ready to go because she still wore clothes. He preferred her nude, of course he did, how could she be outraged by that when she had willingly stripped for him? \n\nBefore she could consider an answer, Adam pulled the phone back and tapped a new message. He showed it to her: \"Why don't you ask Taloga to drive you back to the cottage? You can still get dressed if that's what you'd like.\"\n\nSara realized this was true. No one would mind if she asked them to turn around so she could get dressed. It would cost them twenty minutes at the most, and they weren't on a set schedule. Linda would certainly approve of the idea.\n\nSara took the phone and quickly typed: \"It's too late.\" She didn't elaborate, only passed the phone back to Adam and turned away from him to look out the window. They were passing through the ring of the sagana orchards, and Sara could see the trees stretching out in an infinite shadowy canopy. She let her hands rest on the smooth skin of her upper thighs, and felt the shoulder belt crossing between her breasts. She knew that Adam was gazing down at her body, and if she turned her head quickly, she could catch him in the act. But she didn't.",
        "They reached the fence that surrounded the orchards and passed through the front gate. Now the road was less maintained, and the orderly orchards gave way to chaotic rain forest. Her original plan had been to catch a quick nap on the drive to Melep City, to make up for the sleep lost in Leon's laboratory, but that plan seemed unlikely now. She doubted that she could relax enough to fall asleep while feeling so exposed.\n\nYet fifteen minutes into the drive she started to nod off. Her long night in the laboratory combined with the steady rocking of the SUV as it navigated the rough road had her eyelids drooping, and she let sleep take her away.\n\nShe came in and out of a light sleep. Her eyes would pop open every five minutes to register that their surroundings hadn't changed significantly, then she would go back down. She had peculiar dreams, a mishmash of orchards and laboratories and driving along precarious roads that seemed to lead nowhere. They came in quick flashes as she slipped in and out of sleep, lacking any sort of cohesive narrative or structure.\n\nShe slipped deeper into sleep, and found herself standing at the front of a large conference room, facing a room full of men and women dressed in business suits. She was giving a presentation. Three naked men sat in chairs next to her, Melepria men. She realized she was naked as well, but found that she didn't mind. \"The perfect soil composition will help them to grow,\" she told the room, and she reached for the cocks of one of the naked men, stroking it gently, making it stretch and harden. She did the same with the cocks of the other two men. \"It's just nature,\" she told the room. \"The red creeper. It tangles as it grows.\" She smiled at the room. \"I'll demonstrate,\" she told them, and climbed into the laps of one of the men. She lowered herself onto his hard cock... because they needed to see how it entered her... she needed to show them...\n\nSara's eyes opened. She blinked, momentarily disoriented. She had slipped down in her seat, and her legs had opened a bit wider than was modest. She quickly straightened up and adjusted her seat belt.\n\nAdam smiled at her. He typed something on his phone and passed it to her. It read, \"Good nap?\"\n\nSara took the phone. She typed back, \"I had strange dreams.\"\n\nThe edge of Adam's mouth twitched as he read her message. He typed back: \"That last one must have been interesting.\"\n\nSara glanced nervously at Linda. She typed: \"Why?\"\n\nAdam typed back: \"You were wiggling a little. And making some noises.\"\n\n\"What kind of noises?\" Sara typed.\n\nAdam thought for a moment, then typed: \"Unsteady breathing. Murmuring.\"\n\nSara didn't ask him to elaborate further. She wondered if Linda had noticed. The lawyer had her eyes pointed straight forward and didn't seem to be paying any attention to the back seat, but Sara suspected she was more aware of what was happening back there than she seemed.\n\nAdam typed something else on his phone. He passed it to Sara and she read: \"Are you getting a little turned on?\"\n\nSara handed back the phone and shook her head sharply in the negative. She turned away from him, looking out her window, but he was already typing a new message.\n\nHe passed her the phone. It read: \"When we get to the hotel, you're going to have to walk up to your room completely naked. That's not exciting you a bit?\"\n\nShe shook her head again and passed the phone back. He typed and passed her the phone.\n\nIt read: \"Why don't you check with your finger?\"\n\nShe reread it two, three times. Surely he didn't mean what she thought he meant? What else could he mean? Sara looked up at him to see if he was serious. He just nodded to her.\n\nSara passed him the phone. She glanced at Linda, who didn't seem to be paying any attention. She looked at Adam. He nodded again.\n\nSara let her hand slowly creep down between her legs. She watched Linda closely, alert for any sudden movement, but the lawyer wasn't looking. Sara stroked the soft line of her labia with her fingertip, then pushed her finger into her pussy. Of course he was right, she was wet inside, and only getting wetter as she slid her finger in and out. She looked up at him, acutely aware that she was nude and fingering herself in front of his watchful gaze.\n\nHe typed on his phone and showed it to her: \"So? Are you turned on after all?\"\n\nSara removed her finger. Despite the visible trail that her fingertip drew across her inner thigh, she shook her head.\n\nAdam smiled. He typed: \"No? Nothing?\"\n\nSara shook her head again.\n\nAdam nodded thoughtfully and typed again on the phone. He showed it to her: \"Perhaps I should check for myself.\"\n\nSara licked her lips, struggling to keep her breathing normal. She looked up at Linda, who still showed no sign that she was aware what was happening in the backseat. Keeping her eyes on Linda, Sara slowly shifted sideways in her seat, until her back pressed against the door.\n\nWhat if Linda turned to look? Sara let her legs spread apart, showing her pussy to Adam, inviting him to touch her. He reached down and stroked her smooth mons with his finger, then dipped his hand lower, wiggling his finger into the crease between her swollen labia. His finger disappeared inside her. Sara bit her lip, struggling to stay silent\n\nWhat if Linda looked now? She would see Sara with her legs spread and Adam's finger in her pussy. No possible way that they could move fast enough to disguise what they were doing. Sara doubted Adam would even try. Would Linda say anything? Or would she just turn back around, and add another line item to the agenda of the promised future discussion?\n\nSara sighed as she felt Adam's fingers hunting for her clit. Was she going to be fired? Maybe. It might be better if she was. Better to lose her job than to have Linda tell everyone back in Chicago that she was sprawled naked in the back seat of a moving car while Adam from Finance played with her pussy like it was his own personal toy. She knew she was seen as very serious and professional in her office, and many of the other scientists would be quite interested to learn that she had discovered her inner exhibitionist in Meleprija.\n\nSara closed her eyes, feeling her hips push up reflexively against Adam's hand. Yes, she should stop, she should put her legs back together. This was crazy, this was scandalous, this was complete career suicide. But it felt so good... ah... so good...\n\nUnable to control herself, Sara leaned forward with her lips parted, her mouth drawn to Adam's. He met her in the middle and she kissed him hard on the lips while he still had two fingers inside her. She savored the taste of him, the urgency of his mouth. He lowered his head, pressing kisses along the line of her chin and down her neck to her breast. He sucked on her nipple, his tongue teasing the tip of it, pulling it into a rigid point. She was astonished at the sensitivity of her breasts as he kissed and squeezed them.\n\nSara touched the line of his erection which bulged visibly against the front of his pants. Overcome with the need to touch his cock, she leaned forward, shrugging her shoulder belt behind her back. She unzipped Adam's pants and fished inside for his stiff pole, pulling it free. Immediately, she covered it with her mouth, wetting it with her lips. Her tongue slid over the throbbing head, tasting the salty tang of his cum oozing from the tip.\n\nShe imagined that Linda watched the whole thing, an audience for Sara's depravity. Sara had her legs splayed open, Adam's fingers grinding against her clit, while she greedily sucked on his cock. She bobbed her head up and down in his lap, pressing her lips tightly around his shaft, determined to give him the same pleasure he was giving her.\n\nShe couldn't say how long she went down on him. Time ceased to matter to her; she rode on the waves of pleasure that he summoned and teased from between her legs. Sometimes he brought her close to orgasm only to keep the fire smoldering; other times he made her body tense and quiver, the tiny shakes of a seismograph's needle that presaged a coming quake. When she felt his hands grip her shoulders to pull her up, she had so lost track of time that she thought for a moment it was because they had arrived at the hotel. But she could see out the window that they still drove through the endless jungle. \n\nAdam flipped her over, positioning her so that she lay on her side, her head just high enough to see out her window. He leaned against her back, pulling her leg up, and she could feel his cock exploring between her thighs. Sara reached down and guided him to the entrance of her pussy. She took a sharp breath as his cock eagerly entered her.\n\nHe pushed in, deeper and deeper, filling her. Sara pressed her fist against her mouth, fighting to muffle her gasps as Adam had sex with her. It was almost certainly futile; if Linda hadn't noticed them by now, then she was either unconscious or a turnip. For all Sara knew, Linda could be staring right at them, a spectator to their fucking. Sara didn't feel like turning her head to look. \n\nWhat did it matter? If she looked up to see Linda watching them, could she honestly say she would stop? She felt barely in control of her body, a slave to the uncontrollable need to feel Adam deep inside her. His fingers on her nipples were driving her wild and it was all she could do to stop herself from crying out in pleasure every time he thrust into her.\n\nPoor Linda. The lawyer really just had one task, to keep an eye on Sara, to keep her out of trouble. Linda surely hadn't anticipated that five days into the trip, Sara would be stripping off her clothes and fucking a co-worker in public. What must be going through the poor woman's head?\n\nAnd Taloga, sitting there in the driver's seat... Well... to Taloga, this was probably just another Saturday.\n\nAdam began to move faster, and the pleasure he was causing between her legs became almost unbearable. Sara bit down on the knuckle of her thumb hard enough that she thought she might draw blood. She toppled over the crest and pleasure burst through her body. She flew on the wave of it, her eyelashes fluttering, her hand falling limply away from her mouth onto the seat. Her pussy clutched at Adam's cock as if jealous to keep him from pulling out.\n\nAdam felt enormous and throbbing and Sara thought that any moment she would feel him climaxing, filling her with his cum. But he suddenly pulled out. She looked over her shoulder and saw that he had his erection in a mapa bag, and he was ejaculating in there.\n\nA mapa bag? When had he obtained one of those? And for what reason?\n\nSara slowly pulled herself up in her seat, straightening and adjusting her seat belt. She glanced at Taloga and Linda sitting in the front seat, but neither of them made any comment or acknowledged what had just occurred. Linda looked like a statue, her head rigidly straight, her eyes directly aimed at the road ahead.\n\nAdam cleaned up quickly, tucking away the filled mapa bag and zipping up his pants. In just a few minutes, he looked perfectly professional again, a well-dressed businessman sitting casually in his seat. No one could know by looking \n\nat him that he'd just been having sex.\n\nSara, on the other hand, was still naked, and had no choice but to remain so. She wrapped her arms in front of her breasts, pressing her side against the door. She wished she could put something on, anything, even a towel to wrap around herself. This had already been more than enough of an adventure for her. Now she was ready to return to being Dr. Olson. \n\nThey would soon arrive at the hotel, and not only would she be stepping out of the car naked, but she felt like anyone seeing her would be able to instantly tell that she'd just been having sex. They would read it off her naked body. The valets would smell it on her.\n\nSara couldn't believe what she had just done. How could she have just had sex with Adam while Linda sat less than a meter away? How was she supposed to interact with Linda anymore? She wouldn't be able to look the lawyer in the eye without shrinking inside in shame. Sara stared out the window, resigned to enduring a long and uncomfortable trip to Melep City. \n\nJust ten minutes later, she had again freed Adam's cock and was sitting in his lap bouncing on it while he squeezed her tits. She was amazed to find herself once again having sex with Adam, and so quickly after the first time. It had all happened in a blur. She'd been watching the trees pass out the window, preoccupied with worry about the scandalousness of their first coupling and the state of her career, when she sneaked a peek at Adam. He was gazing down at her naked body in a way that made her really hot, and she could see a tent growing in the front of his pants, which made her even hotter.\n\nThe next thing she knew, she was on top of him with his cock buried inside her. She was bouncing up and down on his shaft, although this required very little effort for either of them; the road was so bumpy that she just needed to sit there and let the movements of the vehicle move her up and down. The vibrations felt exquisite.\n\nLinda sat right in front of them, and Sara could see the top of the blonde's head just above the rectangular headrest. Taloga in the driver's seat was at a better angle to be seen, the right side of his face visible in profile. He had his eyes on the road, but Sara still felt exposed, knowing how easily he could turn his head and see her.\n\nAlthough Sara was looking right at the back of Linda's head, she tried to pretend the lawyer wasn't there. Linda was mostly hidden by her seat, and seemed determined to ignore everything happening behind her. At least, that's what Sara thought. She was shocked when Linda abruptly turned and peered around the headrest, looking right at them.\n\nSara froze like a rabbit startled by a bright flashlight, and she and Linda stared at each other in mutual shock. Sara knew how she looked: naked body gleaming with sweat; Adam's hands on her breasts, her nipples pinched between his fingers; her legs apart as she straddled him. The base of his cock clearly visible as it disappeared into the mouth of her smoothly shaven pussy.\n\nLinda dropped her eyes, taking in the whole scene. Then she quickly turned back and faced forward. She didn't say a word.\n\nOh my god, Sara thought as she squeezed her eyes shut. So so so so embarrassing! \n\nThen why was it making her so hot?\n\nShe leaned back against Adam, arching her back, pushing her pelvis against his lap. Maybe he had his eyes closed, or maybe Sara blocked his view; whatever the reason, Adam seemed oblivious to the fact that Linda had just observed them. His hands continued massaging her chest while his cock stood stiff inside her. The SUV rattled over a stretch of gravel road and Sara covered her mouth with her hand to keep from moaning. \n\nBut that was silly, wasn't it? Linda had just looked right at them, so what was the point in keeping quiet? Sara surrendered to Adam's slow rhythm, letting her 'ooh ahh ooh ahh' carry audibly through the SUV. After just a few minutes, Linda reached down to the middle console and country music began to play through the speakers. Sara smiled, knowing that she was being purposefully drowned out.\n\nAdam wasn't in a hurry to finish. He had already filled his mapa bag and now he seemed content to let Sara sit on his cock for as long as she liked. That was fine with her; their first round of sex had been urgent and frenetic, and now she was happy to have a slow, lazy fuck. She wanted to see how many orgasms the vibrations of the SUV on the irregular road could bring her.\n\nAfter a short time, she swiveled in Adam's lap, turning to face him. They kissed for a while and then he dropped his mouth to her breasts, pressing kisses against them. He sucked on her left nipple then sucked on her right. Sara closed her eyes and swayed with the motion of the vehicle, losing herself in the sensations of her body.\n\nShe lost track of time. Sometimes she faced forward and sometimes she faced Adam. She had one orgasm while she faced him, clutching the back of the seat while his fingers gripped her hips. Another orgasm while she faced away, her cries audible even over the loud radio.\n\nFinally, Adam gave her a firm push on the side while nodding, signaling she should move back to her seat. Sara climbed off him. He readied the mapa bag while Sara gripped his cock in her hand. She stroked it several times, like rubbing a genie's lamp, and it began to spasm. She imagined she could feel the cum pulsing through it, launching into the bag.\n\nOutside, the endless jungle gave way to grassy fields, and the rough road turned into maintained asphalt. Sara could see houses now, usually set back far from the road and sitting on their own acres of land, but a definite indicator that they were close to the city limits.\n\nAdam zipped up his pants and put away the mapa bag. \"Not too far now,\" he told Sara. \"Better get ready.\"\n\nSara glanced down at her nakedness, wondering if he meant that as a joke. She didn't even have shoes to put on.\n\nNow she recognized where they were. Taloga turned onto a freeway on-ramp, and she knew that the hotel would be off the third exit. Anticipation grew inside her, and she glanced down at herself frequently, trying to imagine how everyone would see her as she walked naked through the hotel lobby.\n\nHow could it be that thinking about it was making her so hot? It was like the more depraved she acted, the more eager she was to go even further.\n\nTaloga took the third freeway exit, and now they could see the sign, \"Melep City Hilton\". Taloga turned left into the driveway and followed the road as it curved into the valet circle. A man in a blue uniform motioned them forward until their vehicle stopped in front of the hotel entrance. Two valets rushed over and started opening doors. When the valet opened Sara's door, she didn't hesitate. She accepted his offered hand and let him help her out of the vehicle. She didn't dare look at his face, for fear that she would see his reaction and it would provoke a reaction in herself.\n\nYes, I'm naked. So what? This is Meleprija.\n\nHer bare feet padded on the asphalt as she went around the back of the car and met Linda and Adam on the curb. Perhaps Linda had spent the latter part of the drive considering how to respond to Sara's exhibitionism, because she no longer displayed any shock at Sara's appearance. Instead she raised her eyebrows and said cynically, \"Well, it seems that you two had a fun drive.\" When neither of them answered, Linda glared at Adam. \"Please give Dr. Olson her room key.\"\n\nAdam extracted Sara's things from his pockets and passed them to her. He had to tap Sara on the arm to get her attention; she was distracted by the sight of two men exiting the hotel.\n\nI'm naked! Sara thought as she watched the men walk past.\n\n\"Sara!\" Linda spoke sharply. \"You have some clothes in your room, right?\"\n\n\"What?\"\n\n\"Clothes. In your room.\"\n\n\"Oh! Right. Yes, I do.\" \n\nLinda gave her a flat look. \"Then I look forward to seeing you wearing them, when we pick you up in two hours. Right here. Taloga and I will be back to pick you up.\"\n\nSara nodded, feeling suddenly very embarrassed by the way she was acting. \"Yes. Two hours.\"\n\n\"See you then.\" Linda got back into the SUV. Adam pressed his hand against Sara's back, and applying a slight pressure, turned her around and started her walking toward the front entrance of the hotel. Sara could hear the SUV start behind them, and she could hear it drive away.\n\nSara was holding her breath as the front doors to the hotel slid open and she and Adam stepped into the lobby. The wide space stretched out in front of them, milling with people. Some people were waiting in line for the front desk, while others sat in chairs and couches at the scattered seating areas. Sara stopped just inside the entrance.",
        "I'm the only naked one here! she thought.\n\nShe saw hotel workers who were clearly Melepria. But of course, they had to wear their hotel uniforms. The guests of the hotel could be naked, if they chose, but apparently none of them dared. Except for her. Maybe they were worried about being the only one naked, like she was right at that moment.\n\nEyes turned her way. They noticed her, but no one wanted to openly stare. She saw quick glances sent her way, quick peeks. \n\n\"We'll need to let them know we're checking out,\" Adam said. \"Shall we wait for the front desk?\"\n\nSara glanced at the front desk, briefly imagining herself waiting naked in that line. \"I better go up to my room,\" she said. \"Gather my things.\"\n\nAnd get dressed! she thought.\n\n\"Okay.\" Adam nodded. \"See you in a bit.\" He reached for her to give her a quick hug. Sara returned his embrace, feeling a thrill spark through her as she felt his hands first rest against the small of her back, then slide down to trace the crack of her ass.\n\nShe lifted herself up on her toes to kiss him on the lips, and he hugged her close, returning her kiss hungrily. She trembled with excitement as she felt his hands squeezing her bare ass, knowing that a lobby full of people watched them. \n\nNow his left hand moved to her breast, squeezing and kneading it in front of everyone. Sara held onto him helplessly, kissing his mouth, knowing that it turned him on to let everyone see how freely he could touch her. Certainly he knew that she intended to get dressed when she reached her room, and that this was his last chance to take advantage of her nudity. His hands roamed over her bare flesh, stroking and exploring her skin as they kissed. \n\nAs his hand slid between her legs, cupping her pussy, Sara reflected that for Adam, being able to caress her naked body in public was just as much of a uniquely Melepria thrill as it was for her to be caressed in public. Why wouldn't he take advantage of it while he could? \n\nHe pulled away, his breath coming hard as if he'd just been sprinting. Sara felt unsteady, her legs shaking with adrenalin. \"So... half an hour?\" The casual way that he said it heightened the surrealism of their circumstances.\n\n\"Okay,\" she said. \"See you soon.\" Summoning her courage, she set off towards the elevators, walking naked through the lobby. She hoped it wasn't too obvious how completely turned on she was.\n\nAs she approached the elevator bank, she could see an elevator arrive, with one group coming off and another walking in. She slowed her pace slightly, so that the elevator closed just as she got there. When she pressed the up button, one of the other elevators arrived immediately, and after waiting for a group to disembark, she had the car all to herself.\n\nShe didn't encounter anyone in the hallway when she reached her floor. She found her door and opened it, stepping inside and letting it close behind her. The room seemed quiet, the bed perfectly made, as it had undoubtedly remained since the day Leon drove her to Perchuga Valley.\n\n\"Well,\" she said to the empty room, \"THAT was interesting.\" Her mind swirled with the memories of all the things that she had just done, but that was a rabbit hole she dared not go down just yet. Better to try and absorb it later, when she had some distance. For now, she needed to focus on what she needed to do.\n\nAnd the first thing on her list was a hot shower. She went into the bathroom and turned on the water.\n\n***\n\nSomeone knocked. Sara went to the door and pulled it open. It was Adam.\n\n\"Hey,\" he said. \"Are you still getting your things together?\"\n\n\"No,\" she said. \"I'm all packed and ready to go.\" She pointed at her suitcase next to the desk.\n\n\"And yet you're still naked,\" Adam observed as he followed her into the room.\n\n\"Yes...\" Sara pushed her still-wet hair off her bare shoulders. \"Would you like me to get dressed?\"\n\n\"Of course not.\" He nodded to the made bed. \"Will you lie down there a moment?\"\n\n\"Why?\"\n\n\"I want to take your picture.\" He pulled his phone out of his pocket.\n\nSara hesitated, then climbed onto the bed. She stretched out with her shoulders leaning against the headboard. Adam held up his phone, centering her on the screen, then took a picture.\n\n\"That's splendid,\" he said. \"You look beautiful. Will you open your legs?\"\n\nSara obediently pulled her legs apart, offering him a view of her pussy. \"You won't show these to anyone back home, will you?\" she asked nervously.\n\nHe smiled as he took her picture. \"If you're worried I'm going to do that, why are you letting me take these pictures? On your hands and knees now.\"\n\nSara changed positions on the bed while she considered her answer. \"Because I don't think you will...\" she said truthfully, \"But it's a thrill to know that you could, if you wanted to.\"\n\nAdam shook his head as he took another picture. \"I won't show these to anyone else,\" he said. \"These are for my very private collection. A reminder of my remarkable first trip to Meleprija.\" Adam looked at the screen of his phone, scrolling through the pictures he just took. Satisfied, he put the phone in his pocket.\n\nSara climbed off the bed. She retrieved her wallet, phone and room key from the desk and held them out to Adam. \"Will you hold these?\"\n\n\"Certainly.\" Adam put them in his pocket. He stepped to her suitcase and pulled out the handle, leaning it onto its wheels. \"Well... shall we go then?\"\n\nSara walked over to the door and pulled it open. She held it while Adam rolled her suitcase out into the hallway, then she followed him out.\n\n\"Are you feeling a little deja vu?\" she asked as she stood in the middle of the hall, keenly aware of her nudity. \"Weren't we in this same situation a few days ago?\"\n\n\"It does seem familiar.\" Adam pulled out his phone. \"Do you mind if I get a shot of you in the hall?\"\n\nSara struck a pose with her hip to the left and her hands cupping her breasts. Adam nodded, pleased, and took the picture.\n\n\"Do you mind lying down for another one?\" he asked.\n\nSara carefully lowered herself onto the carpet and leaned back on her elbows. She left her legs apart, as if it was important that her pussy be in the shot. She waited in that position patiently for him while he took several pictures.\n\n\"Thanks. Let me help you.\" He took her hand and pulled her to her feet.\n\n\"Can I see?\" she asked. Adam gave her his phone and she scrolled through the pictures.\n\n\"What do you think?\" he asked.\n\n\"I think I look like a porn star,\" she said. \"Will you send me those?\"\n\n\"Of course.\" Adam smiled at her. He reached out to touch her belly, then slid his hand down between her legs. \"Sara, my dear... you're quite wet, aren't you?\"\n\n\"I am,\" she admitted, closing her eyes and smiling slightly as he probed a finger inside her. \"Not much of a Melepria girl, am I? I don't think they get this turned on walking around naked.\"\n\n\"I'm not complaining,\" he murmured. A door slammed on the far end of the hall, a man coming out of his room with an ice bucket. Adam extracted his finger and took her hand. \"Let's be off, then.\"\n\nThey walked toward the elevators. \"I would probably get used to it,\" Sara said.\n\n\"Get used to walking about naked?\"\n\n\"Yes. I mean, if I do it enough, maybe it won't be so...\" She struggled to find the right word to describe how she was feeling.\n\n\"Is that your plan? To repeatedly go out in public naked until you're finally used to it?\" They reached the elevator and Adam pressed the down button.\n\n\"No...\" Sara said. \"I'm just thinking about the Melepria. How they can be naked outside and not be thinking about it all the time.\"\n\nAdam grinned. \"And how they can spend time with a beautiful naked woman and not be constantly distracted by what they'd like to do with her?\"\n\nSara smiled. \"Exactly.\" An empty elevator arrived, and they stepped inside. Adam pressed the button for the lobby.\n\nSara turned to face Adam, her eyes twinkling. \"Do you want to take another picture? I'll try to reenact how I looked in the elevator after I said good night to you in the bar last time.\"\n\nAdam pulled out his phone. \"All right.\"\n\nSara pressed her back to the side of the elevator, then slid down to the ground. She bit her bottom lip, calmly meeting Adam's gaze while she opened her legs and began to rub her clit with her fingers.\n\nAdam raised his eyebrows. \"You did that?\"\n\n\"Uh huh. I was so hot that as soon as the door closed, I dropped to the floor and started to play with myself.\" She caught her breath as her body instantly responded to what she was doing between her legs.\n\n\"Well... aren't you naughty.\" Adam held up his phone, centering her on the screen. He took a picture, then another. Sara felt delirious with excitement, knowing how depraved she must look in the pictures.\n\nThe elevator slowed and stopped, but they weren't yet at the lobby. The light at the top of the elevator said they were on the second floor. The door opened, and a man and two women peered into the car. It took all of Sara's will to remain how she was, legs splayed open, rubbing her clit while she gazed up at Adam. The three newcomers exchanged looks, then entered the car anyway. \n\nSara trembled with the scandalousness of what she was doing, continuing to masturbate as if the others didn't matter. The door closed and the elevator continued towards the lobby. Adam angled his phone, making certain to include the newcomers in his pictures so that it was clear that Sara was fingering her pussy in front of a trio of strangers.\n\nThe elevator stopped, this time at the lobby. Sara suddenly imagined the door opening to show a crowd of businessmen, waiting to board the elevator, and her courage gave out. She quickly scrambled to her feet with the help of Adam. But when the door opened, no one waited to board. The other passengers exited without a backward glance. Adam wheeled Sara's bag out and she followed.\n\nSara looked around the lobby. \"What now?\"\n\n\"There's a small outside cafe, if we take a left and then another left at the corner. Are you hungry? I think it was assumed that we would get lunch while we're here.\"\n\n\"Yes, that's fine. I am a little hungry. Do we have time?\"\n\n\"We do, but I think it might be a good idea if I head over right now and put in our order.\"\n\n\"Won't I come with you?\" Sara asked.\n\n\"Have you forgotten?\" Adam reached into his pocket and pulled out her wallet and room key. \"You still need to tell them you're checking out.\"\n\n\"Oh! That's right! That awful line!\" Sara walked to where she could see the line at the front desk. She tried to count how many separate groups made up the line. Six? Seven? \"You're not going to wait with me?\" she asked.\n\n\"I've already been through that line. It looks long, but they keep it moving. I'll go get a head start on the cafe, and you can come and join me in ten minutes or so.\"\n\n\"Ten minutes?\" Sara asked doubtfully, eyeing the line.\n\n\"You want a turkey sandwich? Roast beef? Cheeseburger?\"\n\n\"Turkey, I guess.\" Sara nervously ran her hand through her hair. \"You're really going to make me stand in that line, naked, all by myself?\"\n\n\"You'll enjoy it. Just try not to make it too obvious how turned on you are.\"\n\n\"Shut up,\" she said. But she couldn't deny she was turned on. She took a deep breath. \"Okay. I'll meet you at the cafe.\" Ignoring the rapid beat of her heart, Sara stepped out of the elevator bank and walked across the lobby to the front desk line.\n\nEyes turned her way. Some of them immediately turned away, while others lingered on her. She was tempted to smile and wave. Hello, everyone! Yes, it's me, the hotel's official naked woman. Here to remind you that you're in Meleprija. Look all you want, I'll be naked all day.\n\nLinda was probably somewhere having a conversation with TTX upper management. Probably telling them that Sara was out of control, that she just didn't have the focus to resist the permissive Meleprija culture. Maybe this would be Sara's last trip to Meleprija.\n\nIf she'd already blown her chances, then she might as well indulge her newly discovered taste for exhibitionism. She might never get this opportunity again; the excitement of walking through a crowded hotel lobby, completely nude, the only naked one in sight.\n\nShe found the back of the line and stood behind a broad shouldered man in a black suit who was intently focused on his phone. He was typing a message to someone and seemed completely unaware that Sara was now standing behind him naked. Sara surveyed the front desk. Three hotel clerks, all Melepria, all speaking and working quickly. Maybe Adam was right. Maybe the line wouldn't take long after all.\n\nAs she watched, two of the clerks finished what they were doing simultaneously and wished their guests, \"Have a nice stay!\" Then they called out, \"Can I help the next person?\" The line rippled and Sara moved closer to the front.\n\n\"Excuse me... miss?\" A man's voice came from behind her.\n\nSara turned. A young man, maybe a little younger than her, stood behind her in the line. He was smiling broadly. He wore a crisp blue suit.\n\n\"Hi!\" the man said. \"Sorry, if you don't mind me asking... do you live here in Meleprija?\"\n\n\"No,\" Sara answered. \"Just visiting.\"\n\n\"Oh, really? But you travel here often?\"\n\nSara saw the opportunity for mischief, and couldn't help herself. \"No, never,\" she answered cheerfully. \"This is my first time here, actually. I'm just about to check in.\"\n\nThe man looked surprised. \"First time? This is your first time ever in Meleprija?\"\n\n\"Yes.\" She pretended to look around, then leaned towards the man and whispered, \"I thought there would be more people naked? It looks like I'm the only one!\"\n\n\"Yeah...\" the man said slowly. \"Looks like you are. Um... that's why I thought you were from here. I'm Craig, by the way.\"\n\n\"Ann Marie,\" Sara said. \"I must have misread the guide book. I thought I was supposed to be naked? I hope I'm not the only naked one this whole week!\"\n\nCraig's eyes darted down at her body. \"Um... you mean you didn't bring any clothes at all?\"\n\n\"I didn't think I needed to!\" She shrugged elaborately. \"Oh, well. No one seems to mind, right?\"\n\n\"No... I mean, you look... you look fine. You could buy some clothes from the shop... I mean, if you wanted to... if you needed them.\"\n\n\"That's true.\" The broad-shouldered man in front of Sara was called to one of the clerks, and Sara found herself now at the front of the line. She leaned towards Craig again. \"You know what sounded like fun in my guide book?\"\n\n\"What?\"\n\n\"Public sex.\" Sara smiled brightly. \"They fuck in public here, right?\"\n\nCraig looked very flustered, and his eyes dropped to her body again. \"Public sex?\" he repeated hoarsely. \n\n\"Yes. My guide book says no one cares if you fuck in public in Melep City. I hope I get the chance to try that while I'm here. Maybe on the street, or in a park. I think it sounds so exciting. Doesn't it?\"\n\n\"I can help the next guest!\" one of the hotel clerks called.\n\n\"Oh, that's me,\" Sara said. \"Nice to meet you, Craig. Maybe I'll see you around the hotel?\" She smiled at him and then headed for the clerk without waiting for his answer.\n\nThe Melepria man behind the counter asked, \"Are we checking in?\"\n\n\"Checking out,\" Sara said. \"Sara Olson, room 424.\" She gave the man her room key.\n\n***\n\nShe found Adam sitting at a round glass table on the edge of the cafe's outdoor seating. The hotel had cultivated a lovely tropical garden around the cafe, a sea of ferns, anthuriums and philodendrons that swayed in the light breeze. Sara walked to the table, enjoying the feeling of being outside under the blue sky. \n\nAdam had taken a few bites from his flatbread pizza. Sara's turkey sandwich sat on the table across from him, next to a tall yellow drink that Sara suspected was a Banana-Go-Go. \"There you are!\" he greeted her. \"Everything went okay?\"\n\nSara sat down at the table. \"Just fine. I'm all checked out.\" She handed him her wallet, and he slipped it back in his pocket.\n\n\"Excellent.\"\n\n\"I did tease the man behind me a bit.\"\n\n\"Did you? I hope you didn't leave him too senseless.\"\n\n\"He'll live.\" Sara sipped her drink. \"Maybe you should have stayed with me to keep me out of trouble.\"\n\nAdam chuckled. \"But I'm terrible at keeping you out of trouble. I'd barely be in that line a minute before realizing that putting my hands on your body might be a good way to pass the time.\"\n\n\"Ooh.\" Sara wondered what Craig would have thought of that.\n\n\"At any rate... we have a bit more than half an hour before they pick us up. We can relax out here for a bit.\" Adam held up his drink. \"Cheers.\"\n\nSara clinked her glass against his and took a sip. She took a bite of her turkey sandwich and realized she was hungrier than she thought. After a few bites, she put the sandwich down and picked up her drink. She leaned back, sipping it and enjoying the feel of the hot sun on her bare skin.\n\n\"Do you think I'll get a sunburn?\" she asked.\n\n\"I don't think we'll be out here that long,\" Adam replied. \"But I'll happily rub some sun block on you if you like.\"\n\nSara smiled. \"Can I ask you something?\"\n\n\"Sure.\"\n\n\"This morning, when you said you wanted me to be a Melepria woman for the day... how did you know I would go along with it? I mean... how did you know I would take off all my clothes, right there?\"\n\nAdam shrugged. \"Honestly, I didn't think there was any chance you'd agree to it. But I thought the potential reward was worth the risk. Every day since we've been here, I've thought constantly of our little drink at Sunny Jim's, and how you sat there without a stitch on looking as lovely as I've ever seen a woman look. I've never seen a beautiful woman look so visibly aroused, and in such a public setting... It had a profound effect on me. I couldn't stop thinking about it. As soon as I heard we were going back to the hotel together, I knew I had to attempt a repeat of the experience.\"\n\n\"I'm sorry it didn't turn out like you hoped,\" Sara said. \"Who knew Linda would decide to crash our road trip.\"\n\n\"On the contrary,\" Adam said, lifting his glass. \"Today has exceeded my every expectation. Here's to you, Sara. I'll never forget how you look right now, sitting in a garden, your nude body bathed in the sunlight, eating your turkey sandwich without a care in the world.\"\n\n\"Oh, so turkey sandwiches are your thing, huh?\" She teasingly took another bite.\n\n\"I'll buy you as many turkey sandwiches as you want if you promise to be naked while you eat them.\"\n\n\"Shut up,\" she said, but she was smiling. \"How 'bout instead you buy me another drink?\"\n\n***\n\nThey left the cafe ten minutes before they were scheduled to be picked up. Adam still towed Sara's suitcase as they walked around the outside of the hotel. They reached the hotel's parking lot and followed the sidewalk left towards the front loop. \n\n\"I want to get dressed before we see Linda again,\" Sara said.\n\n\"Yes, I think that would be best. Let's not push her too far.\"\n\nSara stopped and looked at him. \"Should I get dressed now?\"\n\nThey gazed into each other's eyes for a moment. Then Adam reached for her, enclosing her in his arms and pulling her close. Sara stretched up and kissed him fiercely. She felt his hand on her breast, fondling her. Neither of them cared when a car drove by. Or maybe that was the whole point. \n\nThis was their last opportunity.\n\n\"We have five minutes,\" Sara said breathlessly.\n\n\"We can be late. They won't leave without us.\"\n\n\"Where?\" Sara looked around. \"The parking lot?\"\n\nShe tugged on Adam's hand, and when she pulled him into the street, he had to follow her. They dashed across the road.\n\n\"Your suitcase, Sara!\" It sat alone on the sidewalk.\n\n\"We'll keep an eye on it. We won't go far.\" A grassy strip separated the first row of cars and the second. She stopped and turned towards him. \"Here.\"\n\n\"Here?\"\n\nHer only response was to kiss him.\n\nShe lost herself in his kiss, his embrace, the touch of his hands on her body. Yet she was also aware of every car that drove by. As each one passed, she imagined herself as the driver, imagining the view she presented to them. She remembered her first day driving into Melep City, witnessing sex acts occurring on the sidewalk, and the way they had fascinated her. Now she was the sex act, and these cars were the observers. They could see everything she was doing, everything she allowed Adam to do to her.",
        "Adam turned her to face the road. He stood behind her, reaching around to squeeze her breasts, to slide his fingers into her pussy. \"How long do you think you could stand here?\" he whispered in her ear as his index finger moved in and out of her. \"Do you think I could bring you to orgasm while these cars drive by? I wonder which will be the lucky driver who gets to witness the moment when your body reaches that climax?\n\n\"I don't know,\" she gasped. \n\n\"God, Sara... you're so fucking wet.\" Adam extracted his glistening fingers, rubbing them together. He stepped away and she heard his zipper descending. Breathless with anticipation, she leaned over, pressing her hands against the hood of a red Honda Accord. Adam's hands gripped her waist, and she felt his rigid cock sliding into her. \n\nIt should always be like this, she thought deliriously as Adam relentlessly plunged into her again and again. The sun on her back, the breeze on her skin, the blue sky above. Her inhibitions peeled away with her clothes, leaving a being of pure sensuality, a nude nymph whose every nerve pulsated with pleasure. She had been craving this, and now she surrendered to it.\n\nHer body tensed, and for a moment she forgot everything. Who she was, where she was, all sense of her self, washed away in the wave of ecstasy that filled her. Her hands pushed down on the red hood of the car, her fingers splayed wide. Her hair hung wild and sweaty around her face like a veil. Her legs trembled, and she imagined that it was his cock, stuck deep in her pussy, that was the only thing keeping her upright. \n\nHis voice was strained. \"I don't have a mapa bag... I threw mine away...\"\n\nSara closed her eyes. \"Are you close?\"\n\n\"Yes...\"\n\nShe stood up, making him pull out. She crouched down, his hard cock jutting just inches away from her face. \"You don't need one,\" she said. \"You have me.\" She opened her mouth wide.\n\n***\n\n\"I'll go tell Linda you're on your way,\" Adam said. They were already fifteen minutes late, and Sara still wanted to stop by the ladies room to clean up a little and put on some clothes. Adam headed to the front of the hotel, while Sara went back along the side, towards the cafe.\n\nShe went in the side door and found a ladies room right off the hallway. One of the stalls was occupied, but the other three were empty. She wheeled her suitcase into the biggest one. \n\nAfter cleaning herself up with some wet paper towels, Sara pulled a t-shirt and shorts out of her luggage. \"Back to reality,\" she whispered and pulled the t-shirt over her head. Panties, shorts, a pair of sandals. She didn't have a bra but that wasn't a big deal.\n\nWhen she opened the stall door, she felt like she was once again Dr. Sara Olson from Chicago. She washed her hands and wheeled her suitcase out the bathroom door.\n\nHer phone buzzed. A text message from Linda. \"We're parked a short distance from the front entrance.\" Sara guessed that they had waited so long for her by the front of the hotel that the valets finally asked them to just park. The time said she was more than half an hour late.\n\nShe walked through the lobby. If anyone recognized her as the naked woman from before, they didn't say anything. She walked out the front entrance.\n\nThe SUV was parked about fifty meters from the front of the hotel. Sara could see Linda leaning against the side with her arms crossed. Taloga appeared from the driver's door when Sara came within ten meters. He popped the trunk.\n\n\"Did you ever smoke, Sara?\" Linda asked as Taloga took Sara's suitcase and set it in the trunk.\n\n\"No, never.\"\n\n\"I quit seven years ago.\" Linda gazed up at the hotel. \"But right now I really wish I had a cigarette.\" She glanced at Sara. \"Thanks for wearing clothes.\"\n\nSara could see the interior of the SUV through the open trunk. All the seats were empty. \"Where's Adam?\"\n\n\"He's on a phone in the hotel, talking to his manager.\" Linda pulled open the rear door on the passenger's side. \"He's not coming back with us.\"\n\n\"What?\" Sara was stunned. She'd expected consequences, but not so swiftly.\n\n\"Upper management is removing him from this project, effective immediately.\"\n\n\"Immediately? But he still has his stuff at the cottage!\" Sara stared at her. \"What did you tell them?\"\n\n\"Hop in the car,\" Linda said. \"We'll talk about it.\" She got into the back seat and closed the door. Taloga went to the other rear door and pulled it open. Sara hesitated for a moment, thinking about Adam, but she had no idea where he was. Finally, she walked to the open door and got into the SUV.\n\nLinda was silent until Taloga started driving. The she looked at Sara, \"They asked me if I thought Adam was an effective member of the team. I answered honestly. I told them he was working hard, but I didn't see that he was doing anything that he couldn't be done just as easily from Chicago.\" Linda paused. \"I also told them that he seemed to be interested in you romantically, and that it might become a distraction.\"\n\n\"They took him off the project because they thought he was interested in me romantically? You told them that, in those words?\"\n\n\"Yes,\" Linda said. \"That's based on my observations from the last few days. He's clearly been interested in you. I would have said the same thing, even if... even if I hadn't come with you two today.\"\n\n\"Did you tell them I was interested in Adam romantically?\" Sara asked.\n\n\"No. Because before today, I didn't think you were.\" After a pause, Linda added, \"I still don't think you are.\"\n\nSara didn't argue the point. She tried to imagine Linda on a conference call with a team of executives back home. They ask about Adam. She tells them, \"Adam is interested in Sara.\" They ask, Does Sara reciprocate his feelings? \"No, she does not.\" Would that have caused them to immediately drop Adam from the project, not even allowing him to gather his things?\n\nMaybe.\n\nSara had to know. She asked straight out, \"Did you tell them about today? About the drive to the hotel, what we did?\"\n\nLinda didn't answer at first. She glanced out the window, avoiding Sara's eyes. \"Oh god!\" Sara thought. \"She DID tell them!\"\n\nBut when Linda finally spoke, what she said was completely unexpected.\n\n\"Two days ago,\" she said in a quiet voice, \"You were off doing your inspections. I had just eaten lunch at the cafeteria, and I decided to go for a walk. I walked along the road until I reached the edge of an orchard. A path led into the orchard, so I followed it.\"\n\n\"Linda...\" Sara started, but Linda shook her head sharply.\n\n\"Let me finish. I walked along the path for a bit, under the saganas. It was pleasant; nice and shady, with a breeze. After a few minutes, I heard voices. Men's voices. And I could hear the sound of digging. The ring of metal hitting the ground, and the sound of dirt and rocks thrown into a wheelbarrow. I walked a little further, and I saw a ditch crossing in front of me, like a drainage ditch, with a stream of water running through it. The path curved to run along the ditch, and across the ditch, I could see three men working. I wasn't that close to them yet, and they hadn't noticed me.\" Linda took a deep breath. \"They were naked, Sara. They were working hard and sweating, and they had these thick muscles, and they were completely naked.\"\n\nLinda looked at Sara, as if expecting a comment. Sara just nodded.\n\n\"I guess you could say I wanted a closer look,\" Linda said. They were... um... 'nicely endowed'... all of them, and they seemed completely comfortable, standing around in the middle of the woods, digging a hole and chatting. None of them noticed me. So I stepped behind one of the sagana trees. I came closer, staying behind the trees, until I was right by the ditch. Then I peeked out at them, and I could see them very well.\n\n\"Unfortunately, the ground near the ditch was wet and slick. All of a sudden I lost my footing. Nothing I could do to stop myself. I slid into the ditch and landed right in the muddy water. I was instantly soaked.\n\n\"Of course, all of the three men saw this happen. One man jumped into the ditch and stood right next to me. He said something in Melepria, probably 'Are you okay?' But all I could think about was that I was filthy and soaked, and dangling right in front of my eyes was this long, uncircumcised penis, like a fucking elephant trunk. I almost felt like it was a rope that I was supposed to pull myself up with.\n\n\"Edo helped me up. That's his name, Edo. He helped me climb out of the ditch... pulled me out like I didn't weigh anything. Then he motioned that I should follow him, and I thought he was going to lead me out of the orchard, like I wasn't really supposed to be there. But instead, he led me to this big concrete building. I waited outside while he went in, and then he came out with a woman. She was naked, too. She could speak a little English and she told me to come inside, that she could get me some fresh clothes while I cleaned up. It turned out the building was a shower facility. They have them scattered around so that the workers can get cleaned up after their shifts.\"\n\n\"I've seen them,\" Sara said softly.\n\n\"Right, right.\" Linda nodded. \"So I went inside, into a locker area, and Edo and the woman both tried to explain to me that I should undress. Edo was trying to pantomime that I should take my clothes off... actually it was really quite comical. They were both very insistent, and before I knew it, this woman had my clothes and Edo was leading me into the showers.\n\n\"So there I am, taking a shower with this attractive Melepria man, who's trying to help me wash the mud off my body... and I guess I was the one who started things off... but he was definitely happy to go along...\" She hesitated, then admitted, \"We had sex. Right there in the shower. Not quick sex either. We took our time, and people even came in and showered while we were doing it. I saw them taking showers on the other side of the room, and I didn't even care that they could see us. Edo didn't care so I didn't care either.\" \n\nLinda again looked at Sara for a reaction. Sara didn't speak.\n\n\"The point is that I get it, Sara. I know you've been out in the orchards for a few days, and everywhere you look, you see attractive naked men and women working out there like it's completely normal. Sometimes you see them having sex; I know I've seen it a few times. We're not used to it. Maybe we become a little over-stimulated. We subconsciously begin to mimic the uninhibited behavior we see. And suddenly, we're acting differently from how we usually act.\"\n\n\"Yes,\" Sara said.\n\n\"Like Carnival in Rio. You've been there, right?\"\n\n\"No...\"\n\nLinda was surprised. \"No? Never?\" \n\n\"No. I've been in Brazil a bunch of times. But for work. I've never been to Rio.\"\n\n\"Right.\" Linda frowned. \"Well... I've had some adventures there, too. The drinking, the dancing...\" She paused. \"All I'm really trying to say, is that you can count on my discretion. If I can count on yours.\"\n\n\"Okay.\"\n\n\"You know. To a point.\" Linda forced a smile. \"Please remember that TTX is going to be asking me questions about how things are going... and I'd prefer not to lie. Okay?\"\n\n\"Okay.\" \n\nSara waited for Linda to say more, but the blonde lawyer lapsed into an uncomfortable silence. Sara turned away to watch the scenery out her window. As they drove out of the limits of Melep City, she felt sleepiness tugging her down, and she surrendered to it, happy to forget everything and drift down into a state of oblivion.\n\n***\n\nShe woke just as Taloga drove them through the gate into the Perchuga Valley orchards. She sat up, watching the endless sagana trees pass by out her window.\n\nTaloga dropped them off at the cottage. He helped Sara bring her suitcase inside. \"You have several hours before dinner,\" he told them. \"I will send a man to take your dinner orders at five. If there is anything else you need before then, please call me.\" \n\nLinda cleared her throat. \"About Adam's computer and his things...\"\n\n\"Yes. I will send someone to help collect those items. We have a supply van heading back this evening that can bring those items to the Hilton.\"\n\nSara stood by the front door of the cottage and waved at Taloga as he got back into the SUV and pulled away. She watched him drive off, and had just started to turn away when she saw Taloga's brake lights come on. The SUV slowed and turned into the driveway of Leon's house. \n\nLeon's house? Was Taloga going to see Leon? Did that mean Leon was back?\n\nSara's excitement at the possibility of seeing Leon again suddenly turned to alarm when she realized the story that Taloga would tell Leon. Taloga hadn't seemed to care that she and Adam spent most of the drive to Melep City fucking in the back seat. But what would Leon think of it? What would he think of her?\n\nHad she just destroyed her kinda/sorta top secret relationship with him?\n\n\"It would've been you,\" she whispered to his house in the distance. \"If you'd been here... it would've been you.\" \n\nNothing she could do. She reluctantly turned and went into the cottage closing the door behind her.\n\n***\n\nThat night, Sara checked her e-mail, and saw an e-mail from Adam. It was from his personal account.\n\nIt was short. It simply read, \"Whatever happens... today was worth it. Thanks for the best day of my life. Adam.\"\n\nSara smiled and pressed delete.\n\nTo be continued..."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "exhibitionist",
        "voyeur",
        "exhibitionism",
        "voyeurism",
        "public sex",
        "public nudity",
        "submissive",
        "masturbation",
        "shower"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-beautiful-day-pt-04"
}