{
    "title": "The Girlfriend Experience Ch. 08",
    "pages": [
        "Author's Note: This story is a collaboration with my friend and editor, Harvey. We both contributed equally to its content and we hope you enjoy it.\n\n* * * * *\n\nIt had been a very interesting four months. I'd actually taken a week off from work to prepare for my midterm exams, and because I'd only been accepting one date a week and I'd been able to maintain a 3.96 GPA. I also managed a very good score on the LSAT and my counselor said I'd have no problem being accepted into law school. For the first time in a long time, it felt like all my post-college plans were coming to fruition and I was very excited about what the future would hold.\n\nMy work life was also going very well. I'd had a long talk with Dana and agreed to accept up to two BDSM dates a month, and I always ensured they never occurred back-to-back. They were always very intense, physically exhausting, and it took a couple of days to fully recover from them. However, I loved them; not only was I able to explore many different facets of the BDSM lifestyle, they were also very lucrative and put a lot of money into my bank account. I was also getting more normal date requests to go along with the requests from older gentlemen who were always more work to please. All things considered, I thought I'd found the perfect mix. I had a very nice variety of dates and it felt like I was no longer in a rut. The extra money from my BDSM dates had also allowed me to trade in my old beat-up Honda Civic and pay cash for a brand-new Land Rover Evoque.\n\nIt was Monday, and I'd just gotten out of my last class for the day and was going to grab some take-out for lunch when my phone vibrated in the back pocket of my little jean skirt. When I pulled it out, I saw that it was a text from Dana.\n\n\"when you get time, could you swing by my office for a few minutes?\"\n\nI texted her back. \"are you available now\"\n\n\"yes\"\n\n\"on my way\"\n\nTraffic was always light during the day and it only took me about 20 minutes to get from the UNLV campus to Dana's downtown office. When I opened the door I was immediately greeted by the receptionist.\n\n\"Hi, Elisa.\"\n\n\"Lisa, it's nice to see you again.\"\n\n\"It's great to see you too. If you'll follow me I'll take you back to see Ms. Erickson.\"\n\n\"Thank you.\"\n\nShe opened the door for me and Dana was sitting behind her desk. \"It's great to see you, Elisa, thank you for coming in so quickly.\"\n\n\"You're welcome.\"\n\n\"Can I offer you a bottle of water?\"\n\n\"That sounds great.\"\n\nI took a seat on the chair in front of her desk and she pulled out two bottles of water from her small fridge and handed one to me. \"How are your classes going?\"\n\n\"Actually, really well, I only have a couple of months left and I'm really getting excited about graduation.\"\n\n\"I admire you, you've been able to balance your school and work life perfectly; not all of my employees are capable of that.\"\n\n\"I've always been able to manage my time well and that's never really been an issue for me.\"\n\n\"Well, I'm very proud of you, and once you graduate we'll have to talk more about your plans.\" She paused for a moment. \"I hope that you'll still wish to work for me.\"\n\nI'd honestly not thought that far ahead. I knew that I wanted to get into a good law school, but I had no idea how my job would fit into that new schedule. I loved working for Dana and the money really afforded me a lifestyle that I'd never previously experienced. A luxury condo, a new $80,000 car, a fat bank account, it was all very addicting. I got the sense that she was looking for a commitment from me to continue working once I'd graduated, but I wasn't quite ready yet to give her one.\n\n\"We'll have to see, okay?\"\n\nShe smiled. \"Okay.\"\n\nWe each took a sip of our water, and then she got down to business. \"I have a date request that I want to talk to you about.\"\n\n\"Okay.\"\n\n\"There's a gentleman who comes into town several times a year who uses my service and he's one of my best clients.\"\n\nI listened patiently as she continued.\n\n\"I like to think of him as a specialist, he always requests two girls for his dates.\"\n\nMy eyes widened. \"Two girls?\"\n\n\"Yes.\" She paused for a moment. \"He requests that one of the girls be white and the other be African-American.\"\n\n\"Really?\"\n\n\"Yes.\"\n\nThis was sounding just a little weird, but I tried to keep an open mind. \"So I'm assuming I wouldn't be the black girl for his little evening?\"\n\nShe laughed. \"No, you wouldn't.\"\n\nMy mind was already racing with the different contrarieties of this date request and I willed myself to focus.\n\n\"And he wants me?\"\n\n\"Yes, he requested you, he loves your pictures and your glowing reviews.\"\n\n\"If I decide to move forward on this, who would I be working with?\"\n\n\"He told me that he wanted to be surprised, and I thought of Raquel.\"\n\n\"I ... ummm ... I don't think I know her.\"\n\nI'd never actually met any of my co-workers, but I had seen a lot of their pictures on Dana's website. However, that name wasn't familiar to me and I had no idea what she looked like.\n\n\"I hired her a month ago and she's already a favorite among the clientele.\"\n\nA new girl, that makes sense. \"What makes her so popular?\" I gently teased.\n\n\"She's like you, Elisa. She's very beautiful and there's not much that she isn't willing to do for a client. She doesn't accept BDSM date requests, but other than that she's very open sexually.\"\n\nI could feel a little blush break over my face. Got it, she's slutty. Dana had always been good with her vocabulary. Being called open sounded much better than being called a slut.\n\n\"There's a little more I need to tell you about.\"\n\n\"Okay.\"\n\n\"He's black.\"\n\nMy eyes widened. \"Black?\"\n\n\"Yes, and from what some of the other girls have told me he's quite well endowed.\"\n\n\"How well is quite well?\"\n\n\"Well, no one has brought a ruler to their date to get an accurate measurement,\" she joked, \"but Tina said he's the largest man she's ever serviced and she's been with me for five years.\"\n\nGood God. \"So he drags the ground?\" I teased.\n\nShe laughed again. \"I don't know that I'd go that far, but he's a challenge for most of the girls he's been with, to say the least.\"\n\nThis date request was getting weirder and weirder by the moment, but again I attempted to keep an open mind. She continued, \"He has his routine pretty much set, he likes to watch the two women together and then he joins in.\"\n\nI'd pretty much figured that part out for myself when Dana told me that he always requested two women. \"So I'd be expected to have sex with Raquel in front of him?\"\n\n\"Yes, but this is something you've done before and not objected to.\"\n\nOf course, I thought sarcastically, bring up Lynn and Steve. \"I'm not bisexual, Dana,\" I said firmly.\n\n\"You asked for my approval to be with Lynn whenever you wanted and not charge her for it,\" she said sternly. \"I think part of you is in denial about what you like to experience sexually.\"\n\nI cut my eyes at her. \"It's unfair for you to bring up Lynn and then throw her in my face like this.\"\n\n\"You know that I won't ever force you to accept a date, but at the very least you need to be honest to me and especially to yourself.\"\n\nThings were quickly becoming heated and I took a deep breath to settle myself back down. Unfortunately, what she was saying was true. I was still seeing Lynn twice a month and, when I could find extra time, sometimes it was more. I'd never shared this with Dana, or anyone else for that matter, but my times with Lynn now involved her spending the night with me at my condo. Not every time, but the more I was with her the closer we became and she was now nothing that I was willing to give up.\n\n\"Maybe I am bisexual,\" I quietly admitted.\n\n\"And there's nothing wrong with that, Elisa.\"\n\nI took another deep breath and willed my mind to focus. \"My sexuality aside, I'm not sure that I'm comfortable with the idea of this date.\"\n\nIf I was honest, my objection to being with Raquel might have something to do with the feelings I was developing for Lynn, but I quickly put that out of my mind. That was something that I'd have to sort out later when I was out of this office. So I said, \"I have over 20 date requests in my in-box; why in the world would I ever agree to this one?\"\n\nOf course, she hit me in the one area that she knew would appeal to me most. \"He's a doctor, Elisa, and because of his size and his somewhat unusual request to be with two women, he's willing to pay a premium.\"\n\n\"How much are we talking about here?\"\n\n\"He's requesting a three-hour date, and I'd be willing to give you a raise on most of your rates as a sweetener if you agree to this, so you would make $6,720 for the evening.\" She paused for a moment. \"Raquel hasn't been with me anywhere near as long as you have and she won't get paid as much, so I'd appreciate you not saying anything to her about this if you decide to move forward.\"\n\nDamn, almost as much as a fully-loaded BDSM date. \"That's ... ummm ... not bad,\" I admitted.\n\n\"There's more, Elisa. He's been using my service for two years and none of the girls can deep-throat him. He's offered an additional $3,000 tip to any girl that can manage to pull that off, so that's on the table as well.\"\n\nMy eyes got wide. \"Really?\"\n\n\"Yes,\" she said enticingly.\n\nI'd been able to deep-throat some pretty big guys in the past, but this guy sounded almost inhumanly large. Regardless, almost seven thousand for three hours would be a really nice payday and I found myself slowly warming up to the idea of agreeing to this.\n\n\"So sex with Raquel?\"\n\n\"Yes, and then both of you would have sex with him.\"\n\nI thought for a moment. \"I'm not willing to try anal sex with this guy; will that be a problem?\" If he was as big as she was insinuating, there was no way I was going to even try to attempt that.\n\n\"That's not an issue, he never requests anal sex.\"\n\n\"Is Raquel okay with all of this?\"\n\n\"I spoke with her this morning and she's already on board.\"\n\n\"When is this supposed to happen?\"\n\n\"This Friday night.\"\n\nI took a deep breath. \"Okay, count me in, Boss.\"\n\n* * * * *\n\nI pulled into the valet station at the Palms hotel at 7:45. For the first time since I began working for Dana, I'd used the messenger service on the website and made contact with Raquel. When she answered she asked if I was okay with exchanging phone numbers and I told her that I was. We texted a few times throughout the week and agreed to meet for a drink in the Ghostbar at 8:00. Our date with 'Mr. Bigcock' wasn't going to begin until 9:00 and I loved the idea of meeting her and sharing a drink before we'd have sex in front of a stranger. I hoped that getting to know her a little would make this potentially weird date less awkward.\n\nIt was a couple of minutes before 8:00 and I made my way through the casino to the large bank of elevators. When the door opened up at the 55th floor, my phone chimed in my clutch purse. I pulled it out and looked at the screen, and it was Raquel.\n\n\"where you at girl?\"\n\nI texted her back. \"Just walked in where r you sitting?\"\n\n\"Middle of the room, I C U\"\n\nI scanned over the large space. A very pretty black girl stood up and raised her hand. Instantly, I noticed how tall she was. She was wearing 4-inch heels just like me, but she had to be at least 5'10\". She looked to be about my age. She had long, jet-black hair with a light mocha complexion. I walked over to her table and we exchanged a little hug.\n\n\"It's so nice to finally meet you,\" she said.\n\n\"It's great to meet you too,\" I said warmly.\n\nThe room was already very crowded and noisy so we slid the chairs together so we could hear each other better. Just as we were about to begin our conversation, a pretty server approached our table.\n\n\"What can I get you, sweetie?\"\n\n\"I'll take a Cosmopolitan,\" I said.\n\nThen she looked at Raquel. \"Can I get you another?\"\n\n\"Yes, please.\"\n\n\"A Margarita, right?\"\n\n\"Yes.\"\n\n\"Coming right up.\"\n\n\"So, Dana tells me you haven't been at the service very long,\" I said.\n\n\"No, only a few weeks.\"\n\n\"Do you like it so far?\"\n\n\"This is the first time I've ever tried something like this, but I really love it. How long have you been working for her?\"\n\n\"God, almost two years now,\" I admitted. \"But I really enjoy it too.\"\n\n\"You told me that you texted me from class yesterday, I assume you're a student?\"\n\n\"I am. I only have a couple months left and I'm getting really excited to graduate.\"\n\n\"That's wonderful, what's your plan once you get your degree?\"\n\n\"I've already applied to a few law schools but I haven't heard anything back yet.\"\n\n\"Wow, you must be hella-smart, huh?\" she teased.\n\n\"I ... ummm ... yeah, I guess so.\"\n\n\"Don't be embarrassed by being intelligent, okay? You should say 'damn right, I'm brilliant, what's it to ya.\"\n\nI giggled. \"It's just difficult to talk about, I guess.\"\n\n\"It shouldn't be, girl.\"\n\nThe server returned and set our drinks on the table. \"I got this round, you get the next one, okay?\" she said while flashing me a beautiful smile.\n\n\"That sounds like a plan.\"\n\nShe dug into her little purse and pulled out two twenties. \"Keep it.\"\n\nOur server smiled in appreciation. \"Thank you so much, I'll be back in just a bit to check on you.\"\n\nI liked Raquel already. She was so funny, outgoing, and very easy to talk to. Her great attitude was already making this evening easier for me and I wanted to keep our conversation going.\n\n\"So where did you grow up?\" I asked.\n\n\"Inglewood, California, what about you?\"\n\n\"No kidding, I grew up in Glendale.\"\n\n\"No shit, girl, we're neighbors.\"\n\nI smiled. \"Yes, we are.\"\n\n\"You don't strike me as one of those stuck-up, rich Glendale bitches,\" she teased.\n\nI giggled. \"I'm not, and I'm definitely not rich, or I wouldn't be doing this.\"\n\n\"So how did you get into this?\" she asked.\n\n\"My father lost his job, and to be able to afford to stay in school I started working for Dana; what about you?\"\n\n\"When I graduated from high school I danced for a while in LA, but I always wanted to live in Vegas. When I moved here I danced at the Spearmint Rhino for a couple of months, and one of the girls I met was working for Dana, and she put in a good word for me, and here I am.\"\n\n\"Is this easier than dancing?\"\n\n\"Much easier. I made good money dancing, but it's nothing compared to what I've been making for the last month.\"\n\n\"That's great.\"\n\nWe each took a sip of our drinks and there was a comfortable moment of silence. \"So what do you think of this date?\" I asked. \"I'll be honest with you, this is something that I've never done before. I'm used to meeting men by myself, not together with another escort.\"\n\n\"It's a little different for me, too, but there aren't that many black girls at Dana's service, and I guess this guy wanted someone new, and she asked me if I'd be willing to meet him. The money was right, so I told her yes.\"\n\n\"The money is very good,\" I agreed, \"but I've never been with a ... you know.\"\n\nShe giggled. \"What, are you telling me you've never been with a nigga? I thought all the little white girls were into that,\" she teased.\n\nI could feel my face breaking into a deep blush. \"I've ... you know ... had friends who liked black men, but the opportunity never came up ... until ... you know ... tonight ... I guess.\"\n\n\"Well, they're not all hung, I'll tell you that. But from what Dana told me I guess this one is.\"\n\n\"Yeah, he's supposed to be fairly large, huh?\"\n\n\"You've seen one cock, girl, you've seen them all.\"\n\nI laughed. \"Yeah, maybe you're right.\"\n\n\"Trust me, I am.\"\n\nShe was so confident and friendly. Dancing at a strip club was nothing I'd even remotely considered when my father told me he could no longer help financially. Dancing in a g-string or naked in front of hundreds of men? No way in hell. But obviously she didn't have a problem with it. I'd also been second-guessing myself all week when Dana had put the 'hard sell' on me on Monday. But this was actually turning out to be okay, and I was confident that we'd have a fun evening and make really good money.\n\n\"Are you ready for another round?\" I asked.\n\n\"You bet, one more to take the edge off.\"\n\nI raised my hand and ordered two more drinks.\n\n\"So, you're not one of those bitches who gets easily offended, are you?\" she asked.\n\nI smiled. \"No, I'm not.\"\n\n\"I looked at your profile, I think we're really similar in what we're willing to do with the guys,\" she said.\n\n\"Yeah, when I was in her office on Monday, Dana said we were both very open.\"\n\n\"Open? That's a helluva word for it. I like to think I'm a woman of abilities.\n\nWe both smiled. \"Yes, we definitely are,\" I agreed.\n\n\"Girl, if the money's right I'll do whatever the fuck they want.\"\n\nI giggled. \"Yeah, for the most part I'm the same way,\" I admitted.\n\n\"The only thing I can't stand are the guys that are hung like this,\" and she held up her pinky finger.\n\nWe both laughed. \"Exactly. I'm not a size queen, but I need to feel something when they put it inside me.\" Then I added, \"Or the older guys, right?\"\n\n\"Girl, I swear to God a couple of times I thought I was close to having to give CPR and calling nine-one-one for a couple of those old fuckers.\"\n\nShe was so funny and she had me nearly in tears. \"To be honest, I don't mind the older guys because I make a lot of money with them, but, yeah, they are a lot of work.\"\n\n\"Oh, tell me about it. For those old bastards getting it up is like trying to raise the living dead most of the time.\"\n\n\"Yeah, if it wasn't for Viagra we'd be out of work, wouldn't we?\"\n\nShe laughed. \"Damn right, girl. If it wasn't for pharmaceuticals we'd both be living in dumpsters.\"\n\nI giggled. \"Yes, I think we would.\"\n\n\"Okay, since we're dishin' here, what's up with those BDSM dates?\" she asked.\n\nOh, God, she went there. \"It's probably way too late in this conversation to say that I get easily offended, right?\"\n\nShe laughed. \"You don't have to say shit to me, it's just something that I thought about trying and I wanted to know what it's like from someone who's done it. But what you decide to do on your back, girl, is none of my business.\"\n\nI thought for a moment. \"The money is good, really good, but you have to have the right ... ummm ... temperament for it.\"\n\nShe looked at me questioningly. \"Temperament?\"\n\n\"You have to be willing to give up control, to give your power to someone else and submit to what they want.\" I thought for a moment. \"At times, things can get extreme really quickly,\" I admitted.\n\nShe smiled. \"Girl, I thought I was a ho, but you're just a straight-up depraved skank, aren't you?\"\n\nWe both laughed until we nearly cried. \"Yeah, maybe I am,\" I admitted.\n\nThankfully, the server returned to our table with our drinks and put a much-needed hold on our conversation. I pulled my credit card out of my purse and paid for the drinks.\n\n\"If you're serious about this or just want more information on what it's like, talk to Dana, okay? She'll be able to explain it better than I can and you can decide if it's something you'd want to do. I know she's always looking for girls who are willing to try it.\"\n\n\"Thank you, I'll do that,\" she said sincerely.\n\nI looked down at my watch, it was 8:57 so I knew we were getting close to having the date begin. I took a sip of my drink and looked at Raquel. Her eyes were as big as saucers and they were filled with a look of terror. I reached over, took her hand, and gave it a gentle squeeze.\n\n\"Are you okay?\" I whispered.\n\nShe didn't answer me. She was looking at the entrance to the bar and my eyes followed hers. Standing in the doorway was a behemoth of a man. He had to be at least 6'5\" and he looked to be well over 300 pounds, and ... he was black. I squeezed her hand again, but just a little harder this time.",
        "\"Honey, are you alright?\"\n\nIt was as if a specter had walked through the door and she looked terrified. Now I was worried about my own safety. However, we were in the middle of the huge room with at least a couple of hundred people around us. Whoever he was, I couldn't imagine how we could be in any type of danger.\n\n\"Raquel, talk to me,\" I pleaded. \"Who is he?\"\n\n\"I know him,\" she whispered.\n\n\"Who is he?\" I repeated.\n\nShe didn't answer me, but this giant of a man was now walking towards us and my stomach began to churn. During my initial interview with Dana, we'd talked about almost every crazy, weird contingency that could possibly happen on a date, but we'd never talked about a situation like this.\n\nThe giant approached our table. It felt like if we had been outside during the day he would have been blocking out the sun. \"What are you doing here, Raquel?\" he asked in a low, deep, gravelly voice. My father always loved listening to Barry White, and given this man's deep bass voice it felt like I was listening to him all over again.\n\n\"I should ask you the same fuckin' thing, Ray,\" she snapped back.\n\n\"You'd better answer me, girl.\"\n\nHe was trying to whisper and keep his voice down, but his deep low inflection still traveled quite a ways and the people around us were now looking in our direction.\n\n\"Listen, if you two need to talk, I'll go to the bar,\" I said.\n\n\"Oh, hell no, girl, we're in this together,\" she said.\n\nThey were staring each other down like in the next two seconds they'd be going to blows. Quite a few people were watching us now, and drawing further attention to ourselves was in no way a good idea. It wasn't going to be long before someone called security and we'd be asked to leave, or worse. This situation was rapidly spiraling out of control and I needed to quickly try to get a handle on it.\n\n\"Both of you, listen to me,\" I said sternly. \"I have no idea what's going on here but they're going to call security soon if this doesn't stop. None of us wants that, right?\" Both of them took a deep breath and I could tell my words had somewhat gotten through to them. I quickly scanned the room looking for a decent option. \"Let's go out to the deck, okay? There's no one out there right now and it will give us some privacy.\"\n\nThe Ghostbar was really two bars in one. There was a large indoor space where people could drink and socialize, but there also was a large outdoor rooftop deck that offered amazing views of the Las Vegas Strip. However, at this moment, the scenic views were the last thing I cared about.\n\nWe stood up. My hand never left Raquel's and the three of us made our way outside. Both of us girls were wearing short, tight little dresses and it was just a bit breezy. However, it was still at least 80 degrees outside, and fortunately I wasn't cold. The three of us sat on the far side of a long cushioned bench where we had the maximum amount of privacy. I quickly looked back into the room and everything had settled back down once we'd made our quick exit. I was fairly certain that we didn't have to worry about being removed by security, at least for now. Once we'd taken our seats they resumed staring each other down and neither would speak.\n\n\"Just who is he, Raquel, your ex?\" I asked.\n\nShe shot him another evil stink-eye. \"No, he's my brother.\"\n\nMy eyes got wide. \"Really?\"\n\n\"Yes.\" She boldly looked into his eyes. \"Dad always said you were a fuckin' pervert, but this?\"\n\n\"Me?\" he deadpanned back. \"We knew about the stripping, but you're a whore now?\"\n\n\"Go fuck yourself, Ray, you snide, hypocritical prick.\"\n\nThings were once again becoming heated and I quickly stepped in. \"Listen, both of you, lower your voices,\" I said sternly. We were quite a ways from the inside of the bar, but as loud as they were beginning to talk it wasn't out of the realm of possibility that they could still be overheard.\n\nHe took a deep breath in an attempt to calm himself down. \"How long have you been doing this?\"\n\n\"About a month, how long have you been doing this?\"\n\nThere were still icy daggers in her eyes and it was obvious she wasn't going to back down or take any of his shit. I gave her hand a gentle squeeze and hoped she'd remain somewhat calm.\n\n\"A couple of years,\" he said sheepishly. He'd lowered his voice and eased his sharp tone, and I hoped she'd do the same.\n\nHe continued. \"If you needed money, Raquel, I would have given it to you.\"\n\n\"Oh, the bigshot doctor is gonna pay my bills now?\"\n\n\"I would have helped you if you needed it.\"\n\n\"I'm doing just fine and I don't need a fuckin' thing from you, Ray.\"\n\nHe thought for a moment. \"Are you really ... ummm ... into women?\" he asked.\n\n\"If I wasn't, I wouldn't be here, would I?\" she said sternly. \"I'm just the type of ho you ordered, ain't I, fuckin' pervert?\"\n\nI squeezed her hand again. \"Raquel, that isn't helping,\" I said gently.\n\nShe took a deep breath. \"I ... I know, you're right.\"\n\nThere were a few moments of uncomfortable silence. \"So, you come into town, order up a couple of girls, watch them fuck, and then get with them, huh?\" she said.\n\nBecause of his dark completion, I couldn't really tell if he was blushing, but my guess would have been that he was. \"Yes, that's what I like,\" he whispered.\n\nIn the last two years of working for Dana I'd been with quite a few guys and I'd had some really weird, and sometimes strange, experiences, but I'd never had a date go south like this one. Brother and sister, who woulda thunk it.\n\n\"So you come into town and start throwin' your money around, huh?\"\n\nHe thought for a moment. \"I work really hard, very long hours, and a few times a year I like to come here and blow off some steam,\" he admitted.\n\nI wanted to step in and try to broker some type of peace without stirring them back up. \"Both of you know something about the other now that wouldn't be in either of your best interests to share with anyone, right?\" I said gently.\n\nBoth of them nodded their heads. \"I think we have a pathway forward for both of you, right?\" I said diplomatically.\n\nThe tension had finally eased and there were a few moments of comparatively comfortable silence. I had both of them calmed down now and that made me feel much better.\n\n\"You're really bisexual, Raquel?\" he asked.\n\n\"I am, and don't pretend it's something you aren't into, because obviously you are.\"\n\nHe thought for a moment. \"It's something I like, but it's still disconcerting because you're my little sister.\"\n\nShe broke into a little grin. \"It's something that you'll have to get over.\"\n\n\"In time, I will.\"\n\nThis was a huge relief. They were talking now, not yelling, and calmly attempting to work through their differences as they learned about each other.\n\n\"I don't want to piss you off, but I have to ask. It took me a long time to accept you dancing, but do you really enjoy being an escort?\" he asked.\n\n\"I'm being independent, I don't have to ask you or anyone else in our family for money. I have no idea how long I'll want to do this, but I enjoy it, and for now it's something that I'm going to continue to do until I choose to do something else.\"\n\n\"This is just a lot for me to take in, what you like sexually and what you've chosen to do with your life.\"\n\n\"I can imagine it is, but it's my life, not yours, and this is something that you're going to have to accept.\"\n\n\"Like I said, in time I will.\"\n\n\"Okay, that's a start, I can live with that.\"\n\nThere was a little pause as they each reflected on the other's words. This whole situation had to be shocking for both of them, but under the circumstances they were both now handling it quite well.\n\n\"Well, this is quite a fuckin' letdown, I've been looking forward to this night for three months,\" he joked.\n\n\"I know this isn't how you wanted the evening to go, Ray, but Dana will refund most of your money,\" I said gently. \"You're really not out very much.\"\n\nRaquel instantly chimed in. \"I'm out quite a bit, my rent's due next week and I was going to use the money from this date to pay it.\"\n\n\"I'll give you the rent money, you know that's not a problem, I'll help you with whatever you need,\" he said. Again his tone was much more polite and respectful, and I saw that his offer of assistance didn't anger her this time.\n\nThere was a full minute of silence and each appeared to be deep in thought. I had no clue what he was thinking, but I thought I knew her well enough already to know that the wheels in her mind were turning.\n\n\"You kissed me once, behind the shed in the back yard when Mom and Dad weren't home; do you remember that?\" she said.\n\n\"Yes, I remember,\" he said solemnly.\n\n\"You were the first guy who kissed me.\"\n\n\"Was I?\"\n\n\"Yes.\" There were another few seconds of silence. \"My friends told me you had the biggest cock of anyone they'd ever been with, and I always wanted you to do more than kiss me.\"\n\n\"God, really?\"\n\n\"Yes,\" she said in a voice barely above a whisper.\n\n\"You never said anything about that.\"\n\n\"I know,\" she whispered. She looked down, apparently unable to meet his intense gaze. \"I knew it was wrong, you were my brother, but I couldn't stop thinking about you.\"\n\nFor the first time that evening, there was a little look of lust etched on his face, and I watched as his eyes traveled over her tight dress and momentarily rested on her large breasts that were crushed tightly inside of it. He reached over, took her hand, and gave it a gentle squeeze. \"What do you think we should do about that now, then?\" he said lustfully.\n\nShe boldly looked into his eyes. \"I agreed to have a date tonight with a nigga who I was told had a fuck-truck in his pants, and if Elisa's okay with this I don't want to call it off.\"\n\nMy jaw dropped. This date was taking another turn for the surreal.\n\n\"I don't know that I'm comfortable with any of this,\" I said sternly. \"Both of you realize that what you're talking about is incest, right?\"\n\n\"Yes, I think we both know, Elisa. But I've thought about Ray for a long time, and for the first time I know he wants me too. We're consenting adults, and there's no wrong in it.\"\n\nI thought for a moment. \"You realize he's requested bareback sex tonight, have you considered the possible ramifications of that?\"\n\n\"Girl, I'm on the pill. Who the hell would work for Dana who wasn't?\"\n\nThis was crazy, fucking crazy, and I wasn't sure I wanted any part of it. But then, in this absurd, bizarre moment and with all this talk of incest, my thoughts drifted to my father. Over the past couple of months I'd spent a lot of time reflecting about him. He had no way of knowing this, but he'd profoundly shaped my sexuality. Unlike most women my age, I didn't have a problem having sex with older men, and some of them reminded me of him. I didn't always enjoy it, and sometimes I got very little out of it, but it was something that I'd always been very willing to do when I worked.\n\nThen there was the issue of my father. I'd never realized it until I began accepting BDSM dates, but the thoughts I'd had of him during those scenes were part of what I now loved to experience. I was a pain slut and I'd never even come close to 'tapping out' and using my safewords. My orgasms during BDSM scenes were now some of the most intense that I'd ever experienced. It didn't matter if it was a hand, a flogger, or a whip; experiencing pain and its accompanying endorphin rush a couple of times a month was now not only something wanted, but something I needed.\n\nMy eyes drifted over the beautiful nubian couple sitting next to me. They wanted this, both of them wanted this. I still wasn't certain that their request was a good idea, but I wasn't going to be the one to say no to something they both wanted to experience.\n\n\"What's it going to be, Elisa?\" Raquel asked hopefully.\n\n\"You told me earlier that we're in this together, right?\"\n\n\"Yes, we are, girl.\"\n\nI broke into a little smile. \"Both of you are fuckin' freaks, I hope you realize that.\" We all broke into a big laugh and my little joke was the perfect tension-breaker. \"In two years I've never backed out of a date, and I'm not going to start tonight; count me in.\"\n\n* * * * *\n\nWe took the elevator down two floors and Raquel and I watched as Ray pulled the keycard from his pocket and unlocked the door to his room. We walked in and my eyes traveled over the space. He'd gotten a luxury suite that had a separate bedroom and a small living area. The space was very sleek and modern. The walls were painted an off-grey and were adorned with modern, contemporary artwork. There was a TV in the living room with chaise-lounge chairs in front of it. The space was complete with a small kitchen, dining-room table, and a brown leather couch. The living room featured a massive floor-to-ceiling window that offered an amazing view of the Las Vegas Strip.\n\n\"Would you ladies like something to drink?\" he asked.\n\n\"I'd take a bottle of water,\" I said.\n\n\"Yeah, water sounds great,\" Raquel added.\n\n\"Take a seat in the living room, I'll be right with you.\"\n\nShe took my hand and we made our way to the living room and sat together on the couch. I was feeling more than just a little nervous, and when Raquel rested her hand on my thigh and began to gently rub it I felt a bit of the tension leaving my body. Ray handed us the bottles of water and then took a seat in a chair that was next to the couch.\n\nHe sternly looked into her eyes. \"I'm going to be upfront with you, Raquel, I'm not going to go easy on you tonight just because you're my sister.\"\n\nI didn't know her that well, but her response was exactly what I would have predicted. \"You better treat me like any other ho you get from Dana's service,\" she said saucily.\n\nHis stern tone was just a little disconcerting. It kinda reminded me of a BDSM date where the tops very quickly established that they were in control and would dictate precisely how they wanted their evening to play out. Additionally, I was still trying to grapple with his immense size. When he'd walked through the doorway of the room he filled it almost to its entirety. I knew he was ... you know ... large down there, but the physical enormity of this man was still something I was trying to wrap my mind around. Then he turned his attention to me.\n\n\"I loved your reviews, Elisa, I have to admit that I've been looking at your profile for months. I've really been looking forward to this evening all week when Dana told me that you'd accepted my request.\"\n\nI decided to give him my standard response. \"All of my experiences have been really positive, and I know our evening will be just as good as all my others.\"\n\n\"Have you ever been with a black man before?\"\n\n\"No, I haven't.\" I thought for a moment. \"But it's always been something that I've wanted to experience.\"\n\n\"You'll experience it tonight, I promise you that, and once I'm done using that sexy little body you'll forget about all those white boys.\"\n\n\"You may be right,\" I said sexily.\n\nHe wasn't right, but like with so many of my other clients I'd told him exactly what he wanted to hear. I could only speak from my experience, but until this point all of my other requests for dates had come from white men. I could always try to find a black man to date outside of work, but I'd been working for Dana for two years and, unless I accepted another date request from him, being with a black man was probably something that would only happen tonight.\n\n\"So are you ladies ready to get our party started?\" he asked huskily.\n\n\"Yes,\" we replied in unison.\n\n\"Good, let's get to it.\"\n\nWe all stood up and Raquel and I followed him into the bedroom. There was a king-size bed and, in keeping with the theme of the suite, the space had a contemporary feel. Just like in the living room, there was a large window that had the same view of the Strip. Raquel and I watched as he took a seat in one of the chairs near the bed.\n\n\"For the last four years I've wanted to go into the Seventh Veil and watch you dance, Raquel, but I could never work up the courage. I finally have the chance tonight, don't I?\"\n\n\"Yes, you do,\" she said lustfully.\n\nHe pulled his cell phone out of his pocket, hit a few buttons, and smooth jazz music filled the room. \"Whenever you're ready, ladies,\" he said.\n\nWe began slowly moving our bodies to the sensual backbeat of the music. She moved closer to me and began seductively rubbing her body against mine. Her hands moved to my ass, pulling me in closer, and we exchanged a hot little kiss. In an instant, the vibe changed and I opened my mouth, accepting her probing tongue. We continued to grind our bodies together to the erotic rythym; her thigh moved between my legs and she began to erotically grind her knee against my pussy through my tight little dress.\n\nMy mind was delirious with lust for this amazing woman. Her moves were raw and almost animalistic, yet somehow also sensual and soft. I ran my hands over her long black hair and kissed her urgently as our breasts pressed together and our hips gently swayed to the hypnotic rhythm. I felt her hands move down my back and she unzipped my dress. It was obvious she was ready to move things along; I reached up and slid her zipper south and both of our dresses fell to the floor. Neither of us were wearing a bra, and she pulled me in closer and we exchanged another hot, passionate kiss as our breasts sensually crushed together.\n\nHer hands were roaming up and down my body and I slid my thigh between her open legs, which created a little friction on her already-wet thong.\n\n\"You have such a fuckin' hot, sexy body, girl,\" she moaned into my ear. Her tongue once again slid into my mouth and we exchanged another long, deep kiss.\n\n\"I want your mouth all over it,\" I said while giving her earlobe a quick suck, and then I ran my tongue down her neck and gave it a gentle bite.\n\nShe smiled. \"Enough of this shit.\"\n\nShe playfully pushed me back onto the bed. Under her lecherous stare, I lifted my bottom off the mattress, slid my thong down my thighs, threw it onto the floor, and wantonly opened my long legs wide for her. I watched as she slid her thong down her caramel-colored thighs and kicked it off. Her body was perfect. She was long and lean with toned arms and muscled legs, obviously from her time as a dancer. She had exquisite mocha-colored skin and large D-size breasts topped with sexy little brown nipples that were hard and erect. Like mine, her vagina was smooth. Her sexy brown lips were wet, puffy, and engorged, and I could see just a hint of her pink inner lips.\n\nMy secretions were already running down the inside of my thighs and I slowly ran my index finger through the wet lips of my pussy, teasing her. I watched as her eyes lustfully moved up and down my naked body.\n\n\"What do you want me to do to that sexy little body, girl?\"\n\n\"I want to feel your mouth on me,\" I said lustfully.\n\nShe athletically slid onto the bed between my legs, and I romantically ran my hands through her hair. She extended her tongue and ran it through the secretions on my inner thighs, and my whole body tingled in anticipation. I let out a deep moan when she gently bit the tender flesh on the inside of my thigh.\n\n\"Harder, baby, bite me harder,\" moaned. \"I like to feel a little pain.\"\n\nShe grinned. \"You really are a BDSM girl, aren't you?\"\n\nI playfully moved my thighs together and squeezed her head between them. \"I am, don't be afraid of hurting me, okay?\"\n\nI could tell my words shocked her a bit. \"Okay.\"\n\nHer hands moved up to my breasts and she roughly pawed them. She licked my thigh again, collecting more of my juices, and then she sank her teeth into my flesh deeper and I let out a low, deep moan. When I looked between my legs there was just a little of my blood in her mouth. She licked her lips, tasting my blood.",
        "\"God, I'm sorry ... I didn't mean to--\"\n\n\"Raquel, it's okay, I liked it.\"\n\n\"Girl, you're a freak.\"\n\nWe both broke into big smiles. \"I am,\" I admitted, \"and I want more.\"\n\nMy eyes rolled into the back of my head when she sank her tongue deep inside me. Her fingers moved to my nipples and she roughly pinched them and pulled them away from body.\n\n\"Yes ... Baby ... God ... just like that ...\"\n\nInvoluntarily, I raised my bottom off the bed and began grinding my pussy into her mouth and tongue. She wrapped her strong arms around my thighs, effectively immobilizing me, and thrust her tongue deep inside me over and over. Instantly, my body began to climb.\n\n\"Just a little more, Baby, I'm almost there,\" I moaned.\n\nShe withdrew her tongue from my pussy, her mouth latched onto my clit, and she began to simultaneously suck and lick on my hard little nub. My body exploded as a powerful orgasm washed over me. When I was beginning to come back around, I looked between my legs. My juices had covered her face and I saw that she was inspecting the deep tooth marks in my inner thigh. I lovingly ran my hand over her face.\n\n\"Raquel, look at me.\" Our eyes met. \"Don't worry about it, okay? \"You didn't harm me and I liked it.\"\n\n\"Are you sure?\"\n\n\"I am.\"\n\nI playfully squeezed her head with my thighs again. \"Now it's your turn.\" Her lips split into a little smile. \"Tell me what you want and I'll do it.\"\n\n\"Can I sit on your face?\"\n\n\"Of course.\"\n\nShe slid up my body and straddled me. Then she moved forward and I ran my hands over her thighs. I guided her down and sank my tongue deep into her vagina. I moved my hands up to her large breasts and gently kneaded them. I could tell she was getting used to my more-intense play because she began to roughly grind her pussy into my mouth.\n\n\"Yeah, girl, just like that,\" she moaned from above me.\n\nI kept my tongue long and flat and let her take control. She moved her hips and guided my tongue where she wanted it. I licked the walls of her vagina and then slid forward just a bit so the tip was rubbing against her clit. I wanted the entire experience of being with this beautiful woman and I moved my hands lower, to her thighs, and moved her forward so my tongue was now pushing against her tight puckered hole. I felt her body tense up.\n\n\"Oh, yeah, girl, right there, I love that.\"\n\nI pulled her lower and sank my tongue deep into her asshole. This type of ass play was something she must have loved, because for the next minute or so she bounced up and down on my tongue. Her sweat was sensually dripping onto my body, and her hand moved lower and she began furiously rubbing her clit.\n\n\"Yeah ... girl ... I'm there ... I'm there ...\"\n\nShe screamed and her body convulsed and shook violently. A few seconds later she collapsed on top of me, and I pulled her tight and snuggled up against her.\n\n\"God, that was fuckin' amazing, girl,\" she said between deep, heavy pants as she tried to regain her breath.\n\nI giggled. \"I'll have you know that I'm not the only freak around here,\" I gently teased.\n\nShe leaned in and we shared a long, hot, deep kiss.\n\n\"You're an amazing lover, Elisa.\"\n\n\"I loved it too, every second of it, honey.\"\n\nTaking us both by surprise, Ray threw our bottles of water on the bed next to us. When I looked over, he was sitting in the chair, naked, and stroking the biggest cock I'd ever seen. Now I wish I had brought that ruler, I thought. I knew that Edward was about eight inches but Ray had him beat by at least an inch, or maybe two, and he was much thicker. His low-hanging testicles looked like two small apples. Ray was physically huge, and his cock was proportional to the rest of him. Once I'd accepted this date on Monday, out of curiosity I looked up a couple of BBC videos and he looked every bit as large as those porn men.\n\n\"I hope you don't take offense to this, but I have to know. Just how big are you, Ray?\" I asked.\n\nHe shot me a toothy little grin. \"Just a little over ten inches, girl.\"\n\nRaquel giggled. \"Now that's what I call a fuck-truck.\"\n\nI laughed at her little joke. \"You think you can handle all that, pretty girl?\" I teased.\n\n\"I have no idea, but I've been wanting to try my whole life.\"\n\n\"This will be a night of firsts for both of us, then.\"\n\n\"Yes it will.\"\n\nWe each opened our water and took a big drink. It was an interesting duality of emotions. Part of me was more than a little hesitant to even attempt this, both the deep-throating challenge and taking his huge cock into my pussy, and now I wasn't sure if I'd made the correct decision when Dana strong-armed me into accepting this date. However, my more adventurous side couldn't wait to try just to see if I could.\n\n* * * * *\n\nWe sipped our waters and Ray gave us a couple of minutes to recover and get our second wind. On all my other dates the client generally liked to be in charge, and he was no different.\n\n\"I want to see you in a 69 position,\" he ordered. He directed Raquel to lie on the bed so her open legs were pointed at him. Once she'd moved into the position on the bed that he wanted, I slid on top of her.\n\n\"Do you like tasting my sister's pussy?\" he asked huskily.\n\nI broke into a little smile. \"She tastes exquisite,\" I said sexily. I wanted to ensure he gave us a good review and I wanted to add a little heat to our play. He was obviously a voyeur and loved what we'd done together so far. I slowly ran the tip of my tongue over her inner thigh. \"Do you like the way I lick her, Baby, do you like watching me give her pleasure?\"\n\n\"It's so fuckin' hot,\" he said in his deep bass tone. \"None of the other girls from Dana's service get into it the way you two do.\" He thought for a moment. \"It always seemed forced, the girls were going through the motions because they were being paid to do it. But it's not like that with you two, is it?\"\n\n\"No, it's not, Ray.\"\n\nI was used to lying to clients. I'd gotten very good at telling the men I was with whatever I thought they'd want to hear. That, and because I always took care of my clients sexually, always got me great reviews. But this was a little different. I was very hesitant before I accepted this date because of his size, but, more importantly, because of my feelings for Lynn. I couldn't help but think that I was somehow cheating on her. Of course, she gave me the freedom to be with men when I worked, but we'd never talked about the possibility of me being with another woman on a date. I'd gone into this evening with the idea that sex with Raquel would be something I'd just have to get through in order to please my client. However, from the moment I met her we'd clicked and I felt a connection to her, and for me that only made the sex we were having more enjoyable. It didn't look forced to him because it wasn't. Those feelings I was experiencing were a little disconcerting as I looked into his steady, unwavering eyes.\n\n\"Do you want me to lick her beautiful pussy again?\" I teased.\n\n\"Yes, I do,\" he said lustfully. \"I'm always up for watching a good clam-dig.\"\n\nI extended my tongue and ran the tip over the lips of her vagina, and I heard a little moan from behind me.\n\n\"Yeah, girl, put that hot little mouth on me again,\" she cooed.\n\nI sank my tongue deep inside her and I felt her body tense up underneath me. She wrapped her arms around my thighs and pulled me back several inches, and I felt her tongue licking the lips of my vagina. Instantly, I found it very difficult to concentrate on her, and that's why I always hated this position. I loved concentrating on giving or getting, and trying to do both simultaneously was nothing but frustrating. I felt her tongue move up; she flicked the tip over my asshole several times and lighting bolts coursed through my body. Then she thrust it deep into my ass and I let out a low, deep grunt.\n\nHe broke into a little smile. \"What's she doing back there to you, girl?\"\n\n\"She has her tongue in my ass,\" I moaned.\n\nHe stroked his cock harder. \"She's going to get you off again, isn't she?\"\n\nI couldn't answer him. My powers of speech were taken from me when she used her fingers and furiously began rubbing my clit while plunging her tongue in and out of my ass in rapid succession. My orgasm hit without warning and my body quaked in release. After I somewhat recovered my eyes drifted back to him. Pre-cum was dribbling down his fingers as his hand moved slowly up and down his big shaft.\n\nHe stood up and walked to the edge of the bed in front of me. \"Give me your fingers,\" I said sensually. His eyes widened then he held his hand in front of my face. I extended my tongue and ran it up and down his fingers before taking each one into my mouth and sucking it clean.\n\n\"You're slutty as fuck, girl.\"\n\nI shot him a little smile. \"Yes I am.\"\n\n\"I'm going to tear your little pussy up, but first I want my sister. Get me ready.\"\n\nHe gripped his shaft at the base and held the massive mushroom-shaped head at my mouth. I opened my mouth as wide as it could go and plunged him deep inside. The head was at the top of my throat and I'd only taken about half of him. I kept my mouth warm and wet and rapidly moved him in and out. I reached up and began gently kneading his huge balls while trying to work him deeper. He was moaning and grunting above me and my saliva was now dripping onto the floor. I relaxed the muscles in my throat and pressed my head forward, attempting to take his entire length, and I heard his breathing change. Before I could make my last attempt at taking him all the way down, he stepped back and his cock slid out of my mouth.\n\n\"Jesus, you have one hot fuckin' mouth, girl,\" he panted.\n\nI smiled between gasps of breath. \"You're going to be short three thousand dollars before you leave here, you know that, right?\" I said saucily.\n\n\"No woman I've ever been with has been able to do that.\"\n\n\"You're looking at the one who's going to do it,\" I said confidently.\n\nIn all honesty, I wasn't sure if I could do it. I'd taken him almost all the way down but I'd still had a couple of inches to go and I knew that last bit would be tough.\n\nI knew he wanted her first so I slid off of Raquel. He joined us on the bed and got onto his back. She leaned down and they exchanged a hot, passionate kiss. It was very erotic to see their tongues move inside each other's mouths.\n\nShe looked lovingly into his eyes. \"I've wanted to kiss you like that for so long,\" she whispered.\n\n\"It's what I've always wanted too,\" he admitted.\n\nThey shared another long, hot kiss and I watched as they ran their hands gently up and down each other's bodies. I could tell they weren't in a hurry and both of them were reveling in the moment.\n\n\"I've always wanted to feel your hands on me like this,\" she moaned into ear. \"I've always wanted this.\"\n\n\"Your body feels so good to me,\" he said while running his hands over her large, heaving breasts. Their lips met again and I watched their tongues play inside each other's mouths.\n\n\"I don't know why I never said anything to you, but I can't wait any longer, I have to have you inside me now.\"\n\n\"Okay.\"\n\nShe slid on top of him. I grabbed a couple of pillows, propped them up against the headboard, and rested my back on them. It felt like I had a front-row ticket while a porn movie was being shot. This position was a wise choice. She could take his massive length at her own pace, and I hoped when it was my turn with him he'd give me the same courtesy.\n\nShe squatted above him, which gave me a perfect view. She grabbed him at the base and lined him up at her aperture, then slowly lowered herself onto him. Her pussy looked so sexy, it was so erotic watching the lips of her vagina stretch around him as her body accommodated the massive invasion. She put her hands on his chest to steady herself and slowly worked him deeper.\n\n\"Jesus, that's huge,\" she moaned.\n\nI held back a giggle. All cocks are the same, huh? Unless you were a porn girl who was used to this type of girth, for normal women they should have broken the mold when they made the one he had between his legs.\n\nVery slowly, she continued to work herself lower, taking him in a millimeter at a time. There was a light sheen of sweat on her beautiful mocha skin and her nipples were hard and erect. Almost involuntarily, my hand moved between my legs and I very gently rubbed my clit as I watched the erotic scene play out in front of me. A couple of minutes later she was sitting on top of him; she'd taken him all the way inside her body. He might have talked and acted tough, but I got the sense that he was a really good lover. He knew how big he was and he didn't want to hurt her. He'd let her take everything slowly, at her own pace, and I was certain he'd be the same way with me. I was still intimidated by his size, but I was much less fearful now.\n\n\"It feels like I have a tree-trunk inside me,\" she moaned.\n\n\"Do you like it?\" he whispered.\n\n\"You feel so fuckin' good, Ray.\"\n\nHe put his hands on her ass to help steady her and she began to slowly move up and down on him. \"God, you're so tight, you feel so good,\" he whispered.\n\nAgain I had to hold back a giggle. Who wouldn't feel tight to a man that large? Her skin was glistening and little drops of sweat were dripping onto his body. I rubbed my clit just a bit harder, edging myself as I watched her move him in and out at a quicker pace. It was as if I wasn't there and they'd both gone off into their own little worlds. I was so hesitant at first when they both tried to convince me to go down this path with them, but I knew now I'd made the right choice by going ahead with this date. Part of me also wanted to be more involved in their coupling, but that didn't feel right. I wanted this moment, their first time together, to be about them and the pleasure they were giving to each other.\n\nThey were both moaning and grunting now. He was gently squeezing her breasts as she ground her pussy up and down on him. They were close now, and I rubbed my clit harder so I could get myself there with them.\n\n\"Come inside me, Ray, I want to feel you come inside me,\" she moaned.\n\nHer body began to shake as her orgasm washed over her. Simultaneously, he grunted and rammed himself home one last time. Just as she collapsed on top of him, the waves of my orgasm overtook me.\n\nThey'd somewhat recovered and shared a deep, passionate kiss, and she lovingly took his face in her hands. \"You know we're doing this again, right?\" she whispered.\n\nHe smiled. \"As often as you'd like, honey.\"\n\nShe looked over at me. \"So, what do you think, girl?\"\n\n\"I think that's the most erotic thing I've ever seen,\" I said honestly.\n\nThere were a few moments of comfortable silence and I let them bathe in the afterglow. I was also feeling incredibly aroused from watching them and a wicked thought entered my mind. \"You've sat on my face once already, but do you want to do it again?\"\n\nHer eyes got wide. \"Elisa, I'm a mess down there.\"\n\n\"I want to taste both of you, will you let me?\"\n\nHer face broke into a big smile. \"If you want it, we'll do it.\"\n\nShe stood up on the bed, straddled me, and put her hands on the wall to steady herself. She was so tall her head nearly touched the ceiling. I extended my tongue and she lowered herself onto it. I ran my tongue over her clit while giving her vagina a few hard sucks. Slowly, his semen began sliding down into my mouth. I used my tongue to probe inside her a few more times, got a bit more from inside her, and swallowed it. Their combined tastes were delicious.\n\n\"I'm really close, honey. Get me there,\" she moaned.\n\nI made little circles on the hard little bud and then sucked on it for several seconds. Her body began to shake and she released, flooding my face with her secretions. Once she'd somewhat recovered she collapsed on the bed between me and her brother.\n\n\"Girl, you are a nasty freak, you know that?\"\n\nI smiled. \"But you liked it, right?\"\n\n\"Loved, I loved that.\"\n\n\"Would you guys like some water?\" I asked.\n\n\"I could definitely use some,\" he said.\n\n\"Me too.\"\n\nI leaned in and gave her a hot little kiss. \"Be right back, pretty girl.\"\n\nI went into the bathroom to pee, then made my way to the mini-bar and pulled out three bottles of water. When I returned to the bedroom they were snuggled up against each other, and I slid into bed beside them and gave them the water.\n\n\"You know I feel like a third-wheel here, right?\" I teased.\n\nThey broke into little smiles. \"This has already been my best date by far, but I still have a few plans for you, little girl.\"\n\n\"Oh, you're not ready to let me leave yet, huh?\" I joked.\n\n\"Not by a damn sight, but I'm not eighteen anymore, you gotta give me a few more minutes.\"\n\n\"Well, when you're ready, I'll help put some lead back into that big pencil of yours,\" I said saucily.\n\n\"That's right, you still think you can deep-throat me, little girl.\"\n\n\"Bitch, you gotta be crazy to think you can handle all of that cock,\" she said.\n\n\"Oh, two doubters now, huh?\"\n\n\"Girl, a hundred bucks says you can't do it.\"\n\nI shot her a little smile. \"I like you too much already to take your money, Raquel, but I'm not leaving this room until I take his.\"\n\n\"This I gotta see,\" she deadpanned back.\n\n\"You will when the old man there says he's ready,\" I teased.\n\nI watched as his eyes lustfully traveled up and down my naked body. \"I'm ready, show me how a pro does it.\"\n\nI leaned in and gave Raquel another hot little kiss. \"You'd better back up off your man and give me some room to operate.\"\n\nShe slid up and Ray opened his legs, and I nestled between them. His testicles were so large, I'd never seen any that big. Nothing on this man is small. I took one of his balls into my mouth and rolled it around on my tongue, which produced a low deep moan. I dripped more saliva onto his sack and took the other one in my mouth and gently sucked on it. Even flaccid his cock was impressive, but my gentle ministrations had produced a large, solid erection.\n\n\"See how easy that was?\" I teased.\n\nHe looked between his legs lustfully. \"Keep going, little girl, we have a score to settle.\"\n\nI tenderly kissed the head of his cock. \"Yes, we do.\"\n\nI took his thick shaft in my hand at its base and wrapped my lips around the head. I let more of my saliva drip out of my mouth until his length was wet and shiny. Slowly, I began to bob my head. Just like before, the head hit the top of my throat and I'd only taken him about halfway down. I relaxed my muscles and let him slide in deeper. My eyes were watering now, making it very difficult to see, but I pushed forward. I was taking him down so deep he was closing off my windpipe and I couldn't breathe, so every few seconds I had to expel part of him so I could take in oxygen. I continued to work him deeper and I was getting close. My saliva had totally covered his shaft and was now dripping down onto his balls and hitting the sheets. My eyes were watering so bad I had to wipe them a couple of times to be able to see and gauge my progress.\n\n\"Jesus, that feels so fuckin' good,\" he moaned from above me.\n\nNormally, I loved looking into my client's eyes so I could see on his face all the pleasure I was giving him, but I chose to concentrate on the task at hand. I relaxed my throat one last time and took him all the way to the root and held him there. His course, fuzzy pubic hairs tickled my nose, and after a few seconds I removed him from my mouth and gasped for breath for several seconds. When our eyes met, I witnessed the look of awe in his face.\n\n\"I ... I ... I can't believe that,\" he stammered.\n\n\"You liked it, huh?\" I said between gasps of breath.\n\n\"Yes, I did, it was amazing.\"\n\n\"Thank you,\" I said shyly. I gave the head of his cock a playful kiss. \"Do you want to finish in my mouth?\"",
        "\"No, I want to be that hot little pussy of yours. Come on up here, little girl, let's see if you can give me a repeat performance.\"\n\nI thought for a moment. I knew he wanted me to ride him like Raquel had done and I was fairly certain I knew the reason behind it. He was afraid of hurting me and I had to admit I was a little afraid of that too. He wanted to let me take him at my own pace just like he'd let her do. I wasn't sure why, but my mind traveled back to my session with Kyle when he'd used the whip. I was scared then, too, but I was restrained and, aside from my safewords, I had no control of what he'd do to me. Obviously Ray wasn't going to restrain me, but it was the fear of the unknown that had made my scene with Kyle so good and it was what I craved with this hulking man in front of me. It wasn't enough to let this man fuck me, I wanted to be at his mercy.\n\n\"I want you on top of me,\" I whispered.\n\nHis eyes got wide. \"That's not a good idea.\"\n\nI looked over at Raquel and her mouth had dropped open in shock as she listened to us.\n\n\"You're afraid of hurting me.\"\n\n\"Yes.\"\n\n\"I like pain, and it's something you can give me.\"\n\n\"Like when Raquel bit you, drew your blood?\"\n\n\"Yes, just like that. Give me what I need.\"\n\n\"Okay.\"\n\nRaquel slid over to the edge of the bed, and I moved to the middle and opened my long legs. Ray quickly got between them and I looked up at him. Next to this behemoth, I felt so small, so weak, so helpless, so powerless, and I reveled in those submissive feelings. As he placed the head of his bulbous cock at my aperture, I thought of telling him to go slow at first, but I didn't. I was almost positive he wouldn't hurt me in a bad way, but it was the little doubt in the back of my mind that added tension to the moment and made everything we were doing so exciting.\n\nHe pushed the head inside me and I let out a low, deep moan. As he eased himself forward, I could feel the muscles in my vagina stretch to expand around his cock and I realized just how thick he was. He had an almost inhuman girth and it was nothing that I'd ever experienced. When he was about halfway inside me, he stopped.\n\n\"Are you okay?\" he asked.\n\n\"Yes, keep going,\" I whispered.\n\nI put my hands on his chest as he eased himself forward, opening and simultaneously filling me. I wasn't sure how much progress he'd made, but as he eased forward, a bit of pain radiated deep within my body and I knew the head of his cock was exploring recesses where no man had gone before. I reached down and rubbed my clit.\n\n\"Keep going, don't stop,\" I hissed.\n\nHe pushed forward one last time and our bodies rested together. I looked up and shot him a little smile. \"Do you even know how fuckin' big are you?\"\n\nHe laughed. \"Trust me, I know.\"\n\nHe eased himself back and then pushed forward, and it nearly took my breath away. His big, thick cock brushed perfectly against my clit and I withdrew my fingers. Slowly he began picking up the pace and bolts of lighting fired through my core. The deep thrusts produced just enough pain, and when that mixed with the pleasure the intense sensations coming from deep within me were intoxicating.\n\n\"Harder, fuck me harder,\" I gasped.\n\nThe gloves came off. He pounded with a force that was rocking the bed and knocking the wind out of my lungs. Every nerve ending in my body felt like it was on fire and I reached up and put my hands on his shoulders.\n\n\"Put your weight on me,\" I moaned. \"Push me down into the bed.\"\n\nA second later, my world went into darkness when this giant lay on top of me. His body completely covering mine and feeling his massive weight on me gave me a feeling between being restrained and covered with rope like Kyle had done in our session. His weight on me combined with the calamitous force of him rutting between my legs pushed me over the edge. My orgasms hit one after the other in rapid succession, each more powerful than the last, and I blacked out for several seconds. When I came back around and my senses were back about me I found he'd rolled off of me and was lying at my side, still attempting to catch his breath. His semen was dripping out of me, and I couldn't resist running my fingers through the lips of my vagina and scooping up a bit of his cum and licking my fingers clean. Raquel had snuggled up against him and had wrapped her arms around him tight.\n\n\"When I come back into town again I know which two girls I'm going to be requesting,\" he said with a little smile.\n\nRaquel grinned. \"You think I'm going to let you be with this little ho again you must be crazy,\" she teased.\n\nI leaned over his body and we exchanged a hot little kiss. \"I loved being with you, honey, you're an amazing lover,\" I said sincerely.\n\n\"You have my number, and whenever you're ready to hook up again, girl, just text me.\"\n\nGiven my relationship with Lynn, that would probably be taking things a little too far, but I wasn't going to tell Raquel that. So I just nodded my head. Then I looked at the bedside clock and realized that we were already ten minutes over the allotted three-hour date time.\n\n\"If Ray's okay with it, I'm going to grab a quick shower,\" I said.\n\n\"Sure, no problem at all girl,\" he said.\n\nI looked over at Raquel. \"I could use a little company, if you want,\" I said sexily.\n\n\"I think I'm going to talk to my brother for a little bit, okay?\"\n\n\"Yeah ... ummm ... sure, no problem.\"\n\nI slid off the bed, and as soon as my feet hit the carpet a stinging pain radiated in my vagina. After grabbing my clothes, I gingerly made my way to the bathroom. I turned on the hot water and then turned, opened my legs, and looked into the mirror. The lips of my vagina were red, puffy, and swollen, and my entire pelvis ached. Normally the effects of being with a larger client didn't hit until the following morning. However, due to the rough sex and Ray's size, the aftermath of my date with him was immediate. I had to admit it was a good kind of sore, though, and a nice reminder of the evening.\n\nI took a long hot shower and scrubbed myself clean. After I dried off and got dressed, I went back into the bedroom. Raquel and Ray were under the covers and snuggled up tight together and talking.\n\n\"I'm going to take off, honey, are you coming with me?\"\n\n\"You go ahead,\" Raquel said, \"I'm spending the night with Ray.\"\n\nI broke into a little smile. \"Why do you two look like a couple on their honeymoon night?\" I teased.\n\nShe giggled. \"Yeah, it's kinda something like that.\"\n\n\"Just don't let Dana find out, okay?\"\n\n\"You gonna rat me out, girl?\"\n\n\"Snitches get stitches, right?\"\n\nThey both laughed. \"Yes, they do.\"\n\n\"Your secret's safe with me, I promise.\"\n\n\"Thank you, Elisa,\" Ray said. \"Dana knowing about this would really complicate things. That's why I'll be requesting both of you from here on out. I can afford the fees, Raquel can use the money, and it will save a lot of potential problems.\"\n\n\"All she'll ever hear from me is that I love working with Raquel and I have a new appreciation for black men,\" I said sexily.\n\nI walked over to the side of the bed and gave Raquel and then Ray a slow, deep, lingering kiss. \"I'm very happy for both of you,\" I said sincerely.\n\n\"There's two envelopes on the table. One is the tip I was planning to give you, and the second is the bonus that I thought I'd never be able to give to anyone.\"\n\n\"Thank you, Ray,\" I said sincerely. I leaned in again and gave Raquel one last soft little kiss and then gently ran my fingers over her beautiful face. \"Take care of this one for me, okay? She's special and she deserves a good man.\"\n\nThey both gave me a little smile. \"I will,\" he said.\n\nI walked out into the main room and grabbed the two thick envelopes and put them in my purse. The last four hours had been crazy. The fights, the revelations, and then the mind-blowingly good sex.\n\nThen, for whatever reason, my thoughts drifted to my father. He was going to be coming into town next weekend and spending a couple of days with me. There were so many times that I wished I could share evenings like this with him. We were always so close when I was growing up and I hated that there was a huge part of my life now that I couldn't share with him. I knew there was no way he could handle the truth of how I was now supporting myself and earning a living. I thought that maybe once I'd finished law school and started my legal career there would be enough distance between my new life and this one that he might be strong enough for me to share this dark secret. But that was over three years away and nothing I'd have to deal with anytime soon.\n\n* * * * *\n\nTo be concluded ..."
    ],
    "authorname": "melanieatplay",
    "tags": [
        "date",
        "brother",
        "sister",
        "escort",
        "las vegas"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-girlfriend-experience-ch-08"
}