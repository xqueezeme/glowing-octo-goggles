{
    "title": "A Handyman's Memoir Ch. 17",
    "pages": [
        "Penny called and said she had been thinking of ways to make her Camp Heaven capable of sleeping more people. She loved hosting the orgies, and wanted to be able to expand them to bigger groups. We discussed a few ideas, but the obvious one, at least for the time being, was to add windows to the screened porch so it would be usable on those cold Adirondack nights. We could also make the doorway to the porch bigger, so when it was open to the main room it would feel more like one big space. It would almost double the size of the place, and if we got the right windows it wouldn't compromise the character of the old camp. She loved the idea and was hoping to get it done before winter set in.\n\nA few hours later she called me back and told me she had lined up a carpenter friend to help share the work. She said he and his wife were old high school friends of hers, and they were going to drive up and figure out the materials we'd need and get the windows and doors purchased ASAP. Two weeks later we all arrived at the camp on a Wednesday afternoon for a four day weekend to do the work.\n\nWe lucked out and the weather forecast was good for the weekend. It would be frosty at night, but the days would be warm enough for a dip in the pond to clean ourselves up. When I arrived Penny was all smiles.\n\n\"There's my sexy handyman!\" she said, and she gave me a huge hug as I put down my duffel bag and tools.\n\n\"Steve, this is Ron and Kathy, two of my oldest friends,\" she said.\n\nRon was a big, burly, good looking guy who looked like he spent a lot of time at the gym, and Kathy was a shy looking petite woman with frizzy greying hair. She was very cute.\n\n\"Hi Ron, hi Kathy, it's a pleasure to meet you guys,\" I said, extending my hand to both of them. They were nice folks, and we all hit it off right from the start, although Kathy was pretty reserved and quiet.\n\nRon had rented a small U-Haul panel truck, and it was full of windows and lumber. Penny's nearest neighbor, about a mile up the road, had lent her the use of a small four-wheel-drive all terrain vehicle that pulled a small utility trailer. It was perfect for moving the construction material up the half-mile trail to the camp.\n\nPretty soon Ron and I were tearing into the old porch, and the girls were shuttling supplies to us in the ATV. Ron was an easy guy to talk to and an easy guy to work with, and it turned out we had worked on a couple of the same big construction projects in the city back before I started my own business. He was very interested in my handyman business, and said he would love to break out on his own someday.\n\n\"Boy, I envy you man,\" he said. \"I get so sick of all the drama on the job sites, not to mention having to be there every single day, and all the overtime they expect. I'd just love to have some more freedom with my schedule.\"\n\n\"Yeah, that's the best part,\" I said. \"Well, maybe not the best part. I never realized how many lonely female homeowners there are, if you get my drift.\" Kathy and Penny were down at the truck with the ATV, so we were talking freely.\n\n\"Holy shit! They come on to you?\" he asked.\n\n\"Well, lets just say I've got a whole bunch of new relationships since I started the business less than a year ago. It's pretty wild actually, and totally unexpected. Well, back when I started it was unexpected, but now I can read the signals. I let the women guide things though \u2014 I never instigate anything or push. Just some mild flirting, and then I just let it go where it's gonna go, you know what I mean?\" I said with a smile.\n\n\"Yeah, I know what you mean,\" he laughed. \"So how often does somethin' happen?\"\n\n\"I don't know, maybe one out of ten customers,\" I said. \"It doesn't always go beyond maybe a blow job or something, but some have become really fantastic relationships. Penny for example.\"\n\nRon laughed. \"Yeah, it doesn't surprise me that's how you met Penny. She's been a wild one ever since high school.\"\n\n\"Ah, you know about Penny's wild side. So are you guys gonna join us for her next party? She's really excited to have more room here. Last time there was eight of us and it was pretty tight in there,\" I said, gesturing toward the main room. \"Not as tight as the 19 year old that was here though,\" I winked and laughed.\n\nFrom Ron's silence I could tell I might have said too much, and when I looked at his face he looked shocked but interested. \n\n\"Oh man, I guess I shouldn't have said that, sorry,\" I said.\n\n\"No, it's cool man. It just took me by surprise a little. But knowing Penny, it shouldn't surprise me. So it was like a real live orgy or somethin?\" he asked.\n\n\"Well . . . yeah, but . . . I should probably let Penny tell you if she wants to. She might be pissed at me for lettin' the cat out of the bag. I just . . . from the way the conversation was going I just assumed you knew . . .\" I said.\n\n\"No, really, it's cool man. I just wish I could talk my wife into somethin' like that. She'd never go for it though,\" Ron said, shaking his head.\n\n\"Never say never man. Some of the older women I've been with this summer have surprised the hell out of me. Easing them into a more interesting sex life has totally transformed a couple of them,\" I said. \"Oh, sorry man, I didn't mean to say Kathy was 'older'. She's actually pretty cute. Jeez, I'm puttin' my foot in my mouth right and left here . . .\" I said, laughing embarrassedly. \"I better shut up.\"\n\n\"Don't worry about it Steve,\" Ron said with a little laugh. \"It's kinda nice to know you think she's cute though. I often wonder what other guys think of her, younger guys like you . . .\"\n\n\"Yeah man, she's got that older hippie vibe. I like it,\" I said, trying to be careful how I worded things. I didn't want to piss off my new friend when we had a whole weekend of work ahead of us.\n\n\"She'd never go for it,\" he said, thinking about the orgy and shaking his head again. \"She likes readin' about that stuff though,\" he laughed. \"She reads those romance novels. I have a peak at 'em once in a while, and they've got some pretty wild sex in there sometimes. I like it when she reads 'em 'cause it heats her up good for the night,\" he laughed.\n\n\"You know, since we're talking about all this,\" I said, \"I should probably broach this subject before you get mad at me . . . some of my lady friends call me an incorrigible flirt, and since Kathy's cute and all, I just hope you don't take it the wrong way if you see me flirtin' with her a bit. Sometimes I do it without even realizing it.\"\n\n\"Hey man, go for it. I shouldn't say this, but I get turned on when she gets flirty with other guys. That's why the whole idea of bringin' her to an orgy really gets me going . . . but . . .\" his voice trailed of as he shook his head again. \n\nWe could hear the ATV coming and soon the girls drove up the trail with two windows on the trailer. Ron had found them at a salvage yard, and they were perfect for the old place. Once we had them installed they'd look like they had been there forever. There were 16 of them, and they had removable glass sections so in the summertime the porch would be nice and open with lots of screens, and when the cold weather set in Penny could glass it all in. She was thrilled.\n\n\"Oh man, I can't believe how great this is gonna be!\" she said with a big smile.\n\nIt was already starting to get dark, so we quit for the day. Penny brought out some beers and we sat in old lawn chairs and relaxed.\n\n\"You guy's should go check out the pond before it gets dark. It's beautiful this time of day,\" she said to Kathy and Ron. They wandered off down the trail, and Penny wasted no time telling me what was on her mind.\n\n\"Kathy thinks your cute. I'd love it if we could somehow finagle it to swap partners this weekend. I have a feeling it'll never happen, she's awful prudish these days, but I'd love to try. I'd be surprised if she could resist someone as sexy as you, and I've wanted to fuck Ronnie since I met him back in, like, seventh grade.\"\n\n\"Jeez Penny!\" I said. \"What were you, like twelve or something?\"\n\n\"Yeah. What's your point?\" she said, and we both laughed.\n\n\"Wow, that's like thirty years of pent-up desire. I've seen you cum really hard, but that might fry your brain,\" I laughed. \"Actually, Ron and I have already been talking about sex a little. I'm sorry Penny, but I sorta slipped up and told him about your parties up here,\" I said.\n\n\"What? Ron knows about that?\" she said as I watched her blush for the first time. Her eyes were big, but she didn't look mad. \"Oh my god. Now I'm really gettin' hot,\" she said, fanning her red face and looking at Ron off in the distance. \"God, I hope this goes somewhere this weekend. I don't wanna fuck things up with Kathy though. She's a good friend. It's gotta be mutual. You gonna help me?\" she asked, with a wicked little grin.\n\n\"As long as it's cool with Ron,\" I said. \"I have a feeling it will be, but I don't wanna do anything screwed-up and cause any hard feelings, you know?\"\n\n\"I know sweetie. You're such a nice guy, I couldn't get you to do somethin' wrong even if I wanted to,\" she said, and she gave me a nice wet kiss just as Kathy and Ron approached.\n\n\"Oooo, I was wondering if you guys were a couple. I had a feeling, since there's only two places to sleep,\" Kathy said, winking at her old friend Penny.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe girls went inside and started rustling up some dinner. They had brought enough food to feed an army.\n\n\"Why don't you guys get a fire going in the pit,\" Penny yelled out the window. \"There's no bugs this time of year so we can eat outside.\"\n\nWe feasted on cold chicken, potato salad and cold beer around a nice warm fire. The leaves were off the trees, and the air had a crisp, late-in-the-year feel to it, with a frosty chill setting in. Dessert was cheesecake and a round of tequila shots, and we were all loosening up.\n\n\"So Penny, what are you gonna do with all your new space,\" Kathy asked.\n\n\"I was thinking wall-to-wall mattresses for my orgies,\" Penny said matter-of-factly.\n\nRon was sitting next to me, and he nudged my leg with his knee.\n\n\"Penny! You dirty girl! You're not serious . . .\" Kathy gasped. She knew her friend was wild, but that was too much for her mind to grasp at the moment.\n\n\"Maybe I am, maybe I'm not,\" Penny said and she winked at me and smiled, in full view off Kathy and Ron.\n\n\"Jeez Penny!\" Kathy said. Even in the orange fire light I could tell she was blushing, and she quickly changed the subject.\n\n\"How do you like the handyman business Steve?\" she asked me.\n\n\"Oh it's great,\" I said. I decided to keep pushing Kathy's buttons a little. \"I get to make my own hours, and most of my customers are lonely women, so I get to practice my flirting.\"\n\n\"Oh, I bet they love havin' you in their house . . .\" her voice trailed off as her eyes drifted down my body. I wondered if she was thinking about one of her romance novels.\n\n\"What's that logo you said you wanted to put on your truck Steve?\" Penny asked.\n\n\"Let Steve Do It. You'll Be Glad You Did,\" I said quietly, looking deep into Kathy's eyes. She was noticeably flustered.\n\nRon laughed. \"That's great! You gotta have that painted on there, it's perfect!\" he said, giving me a knowing look.\n\nWe talked and laughed for hours in the chilly darkness, warm jackets and a roaring fire keeping us warm. Penny was keeping the dirty jokes and sexy talk going, and Kathy was loosened up nicely. Ron was really enjoying himself, especially when his wife was noticeably pushing her comfort limits with the sex talk. There was a definite feeling of 'possibilities' in the air, and Penny was orchestrating it beautifully. As the big fire started to die down we did one more round of tequila shots.\n\n\"That's my last one,\" Kathy said after she downed hers. \"I haven't been this buzzed in years. It's like the old days, huh Penny?\"\n\n\"Yeah, we used to have some fun didn't we?\" Penny said. She turned to me and said, \"Kathy and I were quite the little party sluts when we were teenagers.\"\n\n\"Penny! You asshole! Don't tell him that!\" she said, but the sexy look on her face made me think she really didn't mind me hearing it.\n\n\"It's true,\" Ron said to me. \"I was too straight-laced to take advantage of it until high school though. They had a pretty good head start before they got a hold of me.\"\n\n\"Whaddya mean before 'they' got a hold a me,\" Kathy asked him. \"Did you and Penny ever . . .?\"\n\n\"No,\" Penny said quickly, \"but not because I never wanted to though.\" She boldly winked at Ron.\n\nKathy took it in stride. \"I guess that's what you get when your best friend's obsessed with sex,\" she laughed.\n\n\"I can't think of anything better to be obsessed with. Great sex makes the world a happy place,\" I said.\n\n\"You got that right buddy,\" Ron said, as he clicked his beer bottle against mine.\n\n\"Jeez, we better watch out Penny. These guys might wanna to gang up on us tonight,\" Kathy said, shaking her head.\n\n\"Yes please,\" Penny said with a big sexy smile.\n\n\"God Penny, you're incorrigible,\" Kathy said quietly. She glanced at my eyes but looked away quickly. She was quite obviously breathing a bit heavier than before.\n\nWe were all silent for a while, and you could cut the sexual tension with a knife as we watched the fire die down, the cold night air seeping into our bones. Finally Penny spoke up.\n\n\"Well, I think it's time to turn in. We've got a big day tomorrow.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nWe all took turns taking the kerosene lamp to the outhouse, and made our way into the toasty warm camp. Unbeknownst to us Penny had been stoking up the wood stove as part of her devious plan.\n\n\"Holy shit Penny, it's like a hundred degrees in here!\" Kathy said as she entered.\n\n\"Well there's no insulation, so we've gotta stoke it up now so it's not freezing in the morning,\" Penny explained. \"Just strip down to your undies honey. You'll be fine.\"\n\n\"Why do I get the feeling you're a devious son of a bitch?\" Kathy said to Penny with a sly grin as she took off her jacket.\n\n\"Well, there's nowhere to hide in here, and were all adults, so . . .\" Penny's voice trailed off as she quickly unbuttoned her heavy flannel shirt and draped it over a chair as she went to the kitchen counter to clean up a little. I'm pretty sure she winked at a smiling Ron as she breezed by him in her jeans and bra. She held up the tequila bottle and said to Kathy, \"Want another shot of courage honey? Before you strip?\"\n\n\"I'm not gonna strip!\" she said rather sternly, and she looked around. Steve and I were both taking our shirts off, and her gaze landed on my chest. Then she reached out for the bottle and took a swig, handed it back to Penny and said in a defeated tone, \"Oh what the hell.\" She unbuttoned her shirt, tossed it on the table, and did a ballerina style curtsey. \"If I had known it was gonna be a stripper show I woulda worn my good underwear,\" she said, giggling nervously, her eyes darting between Ron and me. \n\nPenny gave her a hug and a slap on the ass. \"You look fantastic honey,\" she said. \"Better than you did when you were eighteen. I've always been jealous of your pretty little ass. Take your pants off so we can see it. You don't mind, do you Ron?\"\n\n\"Are you kidding? It's my favorite part of her,\" he said. He had a wide grin on his face, and was obviously very happy with the way things were progressing.\n\n\"If you're shy we can all do it together,\" Penny said. \"Then we'll all be comfortable.\" \n\nPenny winked at me, and she and I both started unfastening our jeans. Ron quickly followed our lead, and after a momentary pause Kathy slowly did the same.\n\nPenny spun Kathy sideways to me. \"Doesn't she have a sweet little ass Steve?\" Penny said. \"I mean it's just perfect isn't it?\" Kathy was blushing as she looked sideways at me. Her chest was heaving and she looked flustered.\n\n\"Absolutely . . . gorgeous,\" I said, taking in all of her thin, flat-stomached body. Her ass was a perfect little bubble, her tits were in perfect proportion to her body size, and she looked very sexy. She broke her gaze from me and looked at Ron, who was still grinning like the cheshire cat. She immediately noticed his tented boxer shorts, and planted her body in front of him to block the view of it.\n\n\"I think we should go to bed now Ron, you guys have a lotta work to do tomorrow,\" she said.\n\nThey already had their gear stowed up in the loft, which was a narrow little platform just big enough for two twin mattress end-to-end. Penny seemed fine with them calling it a night. I think she was happy with the way things had gone, and we still had two more nights to go.\n\n\"Are you sure you'll be comfortable up there?\" Penny asked them. \"I feel guilty taking this big bed down here.\"\n\n\"No, it's fine Penny. I don't take up much room,\" Kathy said. She maneuvered Ron towards the ladder so Penny wouldn't see the tent in his boxers, but Penny had gotten a good look at it already.\n\nAs she climbed the ladder Kathy's ass looked incredible, and Ron couldn't resist a feel as he went up behind her. There wasn't much headroom up in the loft, so Kathy had to crawl sexily onto the mattress. \"Jesus baby, you look fuckin' hot,\" Ron said quietly to her.\n\nIt was now apparent to everyone that they were very visible to us, and the old brass bed was even more visible to them. Penny's face gave away the fact that she planned on us putting on a good show for them.\n\n\"That ladder's dangerous to use in the dark, so I'm gonna leave the oil lamp on about halfway,\" she announced. Then she threw two more logs in the wood stove to keep the temperature up.\n\n\"It's too hot baby, I'm gonna have to go commando tonight,\" I heard Ron say to Kathy. He stripped off his boxers, and his hard cock was pointing toward the sky as he laid on his back. He was right up against the thin railing, and easily seen by us.\n\n\"Jesus Ronnie, they can see you!\" I heard Kathy say, and then her leg went over his body and pushed his cock from view.\n\nPenny pushed the blanket and top sheet all the way to the bottom of the bed, and we laid down in full view of Ron. The light was dim, but as our eyes adjusted we could see each other clearly.\n\n\"That went beautifully tonight, you were wonderful,\" Penny whispered quietly in my ear.\n\n\"I have a feeling you're not done yet,\" I whispered in her ear.\n\n\"I want to put on a little show for them, and hopefully they'll do the same for us. If all goes well you can fuck that beautiful little ass of Kathy's tomorrow, and I'll finally get me some Big Ron,\" she whispered. \"I remember Kathy from when she was a horny teenager, and she was showing all the signs tonight.\"\n\nPenny popped off her bra, and slithered out of her panties. \"Be quiet. I don't want to make this too obvious,\" she whispered.\n\nI slipped off my boxers and could see Kathy and Ron kissing. Penny whispered in my ear again. \"Turn yourself a little bit this way. I want Kathy to get a good look at your big cock. She's gonna want it bad by tomorrow . . .\"\n\nPenny got on the opposite side of me so she didn't block their view, and started giving me a magnificent blow job. I couldn't help but let out an audible moan, and out of the corner of my eye I saw their heads swivel in our direction.\n\n\"Holy shit,\" I heard Ron whisper.\n\n\"Two can play at that game,\" Kathy said quietly, and I watched her head move slowly down Ron's body and suck in his cock. She was on the other side of him, looking right at me as she sucked.\n\nSoon Penny wanted to ratchet things up a notch, and she sixty-nined me. I let out another loud moan as she sucked me in deep and I tasted her sweetness for the first time in a while.\n\nEven with my face in Penny's ass I could see the action in the loft. \"Do that to me baby, lets try it,\" Ron said very quietly.\n\nKathy was obviously feeling adventurous, because in full view of us she stripped off her underwear, swung her leg over Ron's face, and he dug into his feast. In no time at all she had a big orgasm, up on all fours with her head thrown back. I could tell she was trying to keep quiet, but some of her deep grunts were too powerful to hold in. Penny followed suit, undoubtedly stimulated by watching her friend, and had a lovely quiet orgasm of her own. ",
        "\"Oh baby that feels good,\" she moaned, trying to keep things quiet and under control for the time being. A quiet orgasm was very un-Penny-like, and I knew she had at least one monster waiting to be unleashed if she'd let me.\n\nKathy was sucking furiously on Ron's cock, spurred on by her own release, and Ron was getting more vocal. When Kathy started moaning audibly Penny took it as a signal.\n\n\"Fuck me Stevie boy,\" she said.\n\nShe got on her hands and knees and positioned herself carefully so our audience would have a good view, and I mounted my hot steed. Penny's pussy always felt like it was made for my cock, and there was very little chance of me being quiet fucking her that way.\n\nA lusty sounding Kathy got up on all fours. \"Fuck me Ronnie, do me like Steve,\" she said. They were talking quietly, but I think they knew we could hear them.\n\nI started out fucking Penny slowly, pulling out all the way each time so I could give Kathy a good look at my full eight inches. \n\n\"God that's hot,\" she said to Ron as she watched us. She was sort of facing me, so I couldn't see Ron's cock in her, but he was clearly fucking her slowly the way I was doing Penny.\n\n\"Steve's got a big cock doesn't he baby,\" Ron was breathing hard, but kept up his quiet conversation. \"You like his big cock baby? He fucks like that guy you like in the dirty movie doesn't he? Think how deep that big cock would go inside you . . .\"\n\n\"Ohhhh fuuuck!\" Kathy moaned as he drilled into her. Her head was down on the mattress, but she was still watching us intently.\n\nPenny was getting into it now, and getting more vocal. She started thrusting back into me to get me to speed up.\n\n\"Fuck me harder baby! Give it to me! Give it!\" she grunted loudly through her teeth. \"Oh fuck yeah!\" She was in her full voice now, and getting louder. \"God I love your cock!\"\n\nI was slapping into Penny's ass loudly now, and Ron was doing the same to Kathy. There was no more pretense of trying to keep quiet from each other, it was game on, and the sounds of sex filled the room. Kathy had her arms up on the thin metal railing, her sexy little body on full display for me as her pussy got pummeled from behind, and she and Ron were both moaning at the top of their lungs. \n\n\"Oh My Fucking God!\" she yelled. \"Squeeze my tits baby! . . . Oh fuck!\"\n\nPenny was on the verge of cumming, and I knew it was going to be one of her big ones. I slid a hand under her belly and found her clit, and after a few strokes she went off like a rocket with a loud scream and much thrashing about as I continued my assault on her plasma fired pussy. She ended up flat on her stomach with her legs spread wide, and I continued pumping into her as best I could until I heard Kathy cum. I looked up at her as she let out a window rattling moan and her body quivered for what seemed an endless time, Ron still giving it to her good. While she was in the middle of it I pulled out and splattered my seed all over Penny's beautiful ass and back, and Ron came with another series of loud grunts.\n\n\"Fuck Steve . . .\" was all Penny could quietly say as she lay there, legs spread and arms out, unable to move.\n\n\"Jesus Kathy!\" Ron said quietly, as he gasped for breath. \"I've never seen you this hot before. I could get used to this.\"\n\nRon was still on his knees, and Kathy spun around and took his cock in her mouth hungrily. \"Holy shit,\" Ron said as he collapsed on the bed, Kathy still sucking him clean.\n\nI grabbed a paper towel from the kitchen counter and wiped the splatter of Penny's backside. \"You've got a magic cock baby,\" she said breathlessly, just loud enough for the others to hear. \"Looks like Ronnie does too.\" She winked at me and rolled her head onto the pillow for some much needed sleep.\n\n\"Goodnight you guys,\" Penny said for all to hear. \"We've got a big day tomorrow . . .\"\n\nI'm sure everybody went to sleep wondering just what that meant.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next day dawned bright and sunny. A thick fog hung over the pond from the cold night air, and it swirled around in rising tendrils as the sun slowly dissipated it. I think I was the first one awake, and my head was fuzzy from the tequila. It was chilly, so I put two logs in the wood stove, and I took a look in Penny's coolers and found some orange juice and some yogurt to get me going. I'm always starving in the morning, especially after good sex. I was naked, which is the normal way to be at Camp Heaven, but I thought that might be pushing things to far too soon with Kathy and Ron, so I pulled on my boxers. I sat quietly at the big round table \u2014 ground zero for the wild sex at Penny's last party \u2014 and thought of how hot Kathy had looked the night before, showing herself off to me up against the railing as she got fucked from behind. I was playing it all over again in my mind when I saw her stir up in the loft. \n\nShe sat up quickly, too quickly probably, let out a quiet moan and put a hand on her forehead. After she held her aching head for a few moments, she turned and noticed me. Her lovely tits were in full view of me, and she didn't seem to mind. That was a good sign. She nonchalantly found her bra and carefully put it on, and then she slipped on her panties. She looked at the still sleeping Ron and quietly crawled to the ladder. As she descended her bubbly ass wiggled seductively, almost like she was giving me a special show.\n\n\"Morning Steve,\" she said quietly as she approached me. She kissed me softly on the cheek and walked to the kitchen counter, her ass wiggling and jiggling under her thin cotton panties. Ron and Penny were right, it was a spectacular ass. She poured a glass of juice and joined me at the table.\n\n\"How's your head?\" I asked quietly.\n\n\"It's been better,\" she smiled. \"So tell me Steve, did Penny really have to make it so warm in here last night, or did she just do it to get us all outta our clothes?\" She smiled seductively as she looked up at me with twinkling eyes.\n\n\"I think you know the answer to that,\" I said with a quiet laugh. Kathy shook her head, still smiling.\n\n\"Coffee, I need coffee . . .\" Penny moaned quietly, and she slithered her naked body off the side of the bed. \"Mornin' you guys,\" she said as she passed us, rubbing her eyes.\n\nShe turned on the small propane cook stove, put on a pot of water, and sat down at the table with us, her tits jiggling nicely.\n\n\"If you don't put some clothes on I'll have to take care of Ronnie again this morning,\" Kathy said to Penny. \"You know he's always had a thing for you.\"\n\n\"Really?\" Penny said, suddenly very alert and curious.\n\n\"Oh come on, you must know that after all these years,\" Kathy said.\n\n\"Well . . .\" Penny said, searching for the right words, \"that probably happens amongst all groups of friends, right?\"\n\n\"Yeah, I guess it does,\" Kathy said, looking at my chest and then up into my eyes.\n\nThe water was boiling so Penny got up and poured it through the coffee maker, and the heady aroma filled the room. I walked over to the wood stove and got down on my knees to poke at the fire. I did it purposely to give Kathy a good look at my ass. I was going to keep the heat turned up on her all day, and with a little luck I would have my hands on that sweet ass of her's later.\n\n\"Mornin' folks,\" Ron said from up above. He was looking down with a big smile at the still naked Penny at the kitchen counter.\n\n\"Penny!\" Kathy said sternly.\n\n\"Oh, Sorry sweetie,\" she said to Kathy. \"Sorry Ronnie, I didn't know you were up,\" she said, looking up at Ron.\n\n\"Nothin' to be sorry about sweetheart. Nothin' at all,\" he said down to Penny, who was standing next to the bed putting on her undies. Of course Penny was better prepared for all this than Kathy, and her bra and panties were lacy and almost see through.\n\n\"I guess next time I go 'camping' I'll have to hit Victoria's Secret first,\" Kathy said with a little laugh. \"Who knew?\"\n\n\"You look plenty hot sweetie,\" Penny said to her. \"There's nothin' sexier than real life. Right Steve?\"\n\n\"Absolutely,\" I said, blatantly admiring Kathy's tits.\n\nPenny poured four big mugs of coffee and brought them to the table with a little carton of milk and a bowl of sugar and a spoon.\n\nAs Ron was on his way down the ladder Penny said, \"We can all share the spoon right? It's nice to share.\"\n\nWhen Ron heard her words he missed the bottom rung on the steep ladder and almost fell on his ass.\n\n\"Whoops! Sorry. Tequila makes me clumsy\" he said, looking slightly embarrassed. His cock was at half-mast from watching Penny get dressed, and pretty noticeable under his silk boxers.\n\n\"Sit down honey. Everybody'll lose their appetite lookin' at that thing,\" she said, gesturing to his crotch.\n\nRight on que, Penny looked at him and said, \"I'm hungry.\" She spun her head towards Kathy and said, \"Let's see what we can whip up for these big strong boys.\"\n\nThe two girls got up and started cracking eggs. Penny put some bagels in a metal contraption with a handle and asked me to toast them with the wood stove fire. Ten minutes later we were chowing down on scrambled eggs, bagels, and fresh fruit. Penny kept the coffee flowing.\n\n\"So Ron, do you go to the gym, or is that just from hard work?\" I said, gesturing to his well muscled upper body.\n\n\"Yeah, I hit the gym three times a week with a buddy of mine. It keeps me feelin' healthy,\" he said.\n\n\"They just like to watch the girls in their tights,\" Kathy laughed.\n\n\"Well, there's that,\" Ron said with a smile.\n\n\"So where is this gym, maybe I should join.\" Penny said, winking at Ron.\n\n\"You keep your ass outta there Penny,\" Kathy said playfully. \"You should come do yoga with me.\"\n\n\"Ah, that explains it,\" I said, looking at Kathy.\n\n\"Explains what?\" she asked me, looking curious.\n\n\"Uh . . . well . . . your . . .\" I searched for the right words.\n\n\"I believe he means your perfect little ass honey,\" Penny said to her.\n\nI silently agreed, and Kathy blushed.\n\n\"Yoga girls always have awesome asses,\" Penny said. \"And they're flexible too. Is she flexible Ronnie?\"\n\n\"Oh yeah,\" Ron said. \"You'll s . . .\" He wanted to say you'll see, but he stopped himself short. Kathy blushed even more, and her whole chest was bright red.\n\n\"We better clean up these dishes,\" she said, and she made her way quickly to the kitchen counter with a load of plates.\n\nThe awkwardness passed quickly, and we finished up our coffee.\n\n\"Ready to hit it Ronnie?\" I said.\n\n\"Yeah man. Let me throw on some clothes and I'll meet you out there.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nRon and I had the rest of the demolition work done by mid-morning, and we were ready to start framing in the new work. The girls were shuttling us supplies from the truck on the ATV, and everybody was having a good time. When the girls were gone Ron talked freely about last night.\n\n\"Jesus that was some wild shit last night,\" he said. \"I haven't seen Kathy that worked up in years man. We've been married a long time, and things were gettin' pretty stale in that department, if you know what I mean. It felt great to have her really fired up again.\" He laughed and said, \"She's probably saying the same thing about me to Penny.\"\n\n\"Penny's fuckin' hot isn't she?\" he said. \"Jesus Christ she fucked like an animal last night. Kathy would probably kill me for sayin' this, but I've wanted to fuck her ever since I first met her. But she and Kath were best friends, you know how that is.\"\n\n\"I don't know if this is the right time to say this or not,\" I said, \"I mean you look like you could pound me into a pulp if this pisses you off, but what the hell, it's gotta be said at some point. Penny feels the same way about you, and she's hoping to swap partners this weekend. That's where her devious plan is heading.\" I blurted the whole thing out with a nervous laugh.\n\n\"Fuck!\" Ron said softly, with a faraway look in his eyes. After a long pause he said, \"Don't worry man, it's cool. It fuckin' makes me horny as hell. It's weird, I mean I never thought about sharing Kath with anybody else . . . well I guess I've fantasized about that stuff, but it's never been, like a real life idea, you know what I mean?\" He still had that far away look. I didn't really have anything more to say, so I just let him mull it over.\n\n\"Wow, this is blowin' my mind man . . . we gotta do this though . . . it's like a once in a lifetime kinda thing. It's too perfect . . . we gotta go for it, right?\" he asked.\n\n\"It's gotta be your decision man, you and Kathy. But I'm all for it if you guys are, I mean Kathy's super hot, and we all get along great, and like you said, it's like the perfect storm of opportunity here. There's somethin' magic about this place . . .\" I said. After a moment I added, \"It's totally up to you guys though. If either of you is the least bit uncomfortable with the idea I'll get Penny to back down. She'll understand, she loves you guys.\"\n\n\"Fuck, my head's spinning man. The thought of finally getting together with Penny . . . and with Kathy watching . . . Jesus, I gotta sit down man,\" he said as he walked over to the lawn chairs.\n\nJust then the girls drove up with the load of lumber we asked for. They saw me working and Ron sitting, and they stopped next to him.\n\n\"What's the matter? You okay Ronnie? You don't look so good,\" Kathy said.\n\n\"No, I'm okay sweetie. Come here and give me a kiss,\" he said.\n\n\"We're just taking a little break,\" I said as I joined him in a lawn chair.\n\n\"How about coffee and donuts for you boys? Ronnie looks a little pale,\" Penny said as she went inside.\n\nI wanted to get Penny alone to fill her in on what had happened, so I wolfed down a donut and hopped on the ATV. \"Hey Penny,\" I said, \"let's go down to the truck. I wanna get a couple things.\" She got on and we sped away down the trail. When we got to the truck I told her what had happened.\n\n\"Ron's totally into it baby. When you guys showed up he was sittin' down 'cause his head was about to explode thinkin' about fucking you,\" I laughed.\n\n\"Holy shit, really! Oh man, now I gotta sit down,\" she said, and she sat on the back of the truck. \"This is so awesome. A dream come true after all these years . . .\"\n\n\"Don't forget about Kathy. You don't want to go there unless it's totally cool with her, right?\" I said.\n\n\"Yeah. Yeah,\" Penny said dreamily. \"But I don't think that's gonna be a problem. She wants you bad. She's tryin' to be coy about it but I can tell. Watchin' your big cock split me open last night just about did her in I think.\"\n\n\"Well, I think it's gonna to be hardest for her to take the plunge . . . to give her husband to her best old friend. Ron'll be giving her to someone they don't have a long history with. That's very different, you know what I mean?\" \n\n\"Yeah, I know. Don't worry, I'll be careful. But I really don't think it'll be a problem. I think she wants this just as much as the rest of us. She's just afraid to say it out loud. Oh man, this is so fucking exciting. Thank you Steve,\" she said, and she gave me a big wet kiss.\n\n\"We'd better load up a few things so it looks normal when we get back,\" I said.\n\nWe brought a small load up to the camp and while Ron and I unloaded it he whispered in my ear. \"It's gonna happen buddy. Kathy's in.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe day wore on and Ron and I made great progress on the porch. We had half the windows installed and it was looking good. Penny was super happy.\n\n\"I think it's quitin' time. We don't want you boys to wear yourselves out,\" she said with a sly grin. Why don't you go down to the pond and get cleaned up. The water's still surprisingly warm. Kath and I'll bring some towels down in a few minutes.\n\nRon and I walked down to the pond and stripped off our clothes by the lounge chairs.\n\n\"Jesus, this is embarrassing,\" he said. \"Don't take this the wrong way man. It's Penny I'm thinkin' about.\" He turned and revealed half a hard-on.\n\n\"Yeah, she's got a way of doin' that to a guy,\" I laughed, and I walked into the water. It really was a comfortable temperature, and I was hoping the girls would join us for a swim.\n\nThey came down the trail in their underwear, with towels and a two bars of biodegradable soap. Penny stripped and was in the water quickly, but Kathy looked a bit nervous and was slower to join us. We were all standing waist deep, but Kathy kept her tits below the water and looked shy.\n\n\"We brought some soap. Why don't we clean each other up?\" Penny said. \n\nShe waited for her friend to make the first move. Kathy looked at the very calm and happy looking Ron, and then she rose up with water cascading off her pretty body. She walked over to Penny and started lathering up Penny's tits.\n\n\"Well this is unexpected,\" Penny said, looking shocked and delighted at the same time. She quickly lathered up her own hands and started soaping up a smiling Kathy.\n\n\"Fuck!\" was the only coherent thing Ron could think to say. He was mesmerized.\n\nThey walked into shallower water and cleaned every in of each other, each one taking turns bending at the waist to give good access to their nether regions.\n\n\"Where's the video camera when you need it,\" I said to Ron.\n\n\"God damn!\" he managed to blurt out. I could only imagine what was going on in his mind.\n\nThe girls were both thoroughly soaped up and Penny turned to us and said, \"You boys want us to do you now?\" and she beckoned us with her index finger. She was looking at Ron, and Kathy was looking at me, so I crossed in front of him and walked into the shallow water, presenting my dripping body to Kathy in all it's fully aroused glory. Ron reached Penny at the same moment, and the swap was complete. All our cards were on the table.\n\nThe girls both started on our chests, and then lathered up our arms and backs before turning us around to face them again, our hard cocks almost poking them in their bellies. Kathy had had enough of the teasing and she went right to my cock. She moaned as she wrapped her slender fingers around it for the first time, and again as she slipped her other soapy hand onto my smooth, cleanly shaven balls.\n\nPenny was slowly stroking Ron's cock, and both of them were moaning softly. Kathy let go of me and turned me around. She lathered up my ass and I felt her soapy hand move down through the crack until she had my balls in her hand again. Her body was up against my back, and her other hand reached around me and slowly stroked my throbbing shaft. She was breathing hard and we were both moaning. Nobody wanted to say anything and break the spell.\n\nWe were turned a little, and Kathy had a good view of Ron and Penny. \"Let's get the soap off you Ronnie,\" Penny said softly. They both splashed down in the thigh deep water. Kathy seemed mesmerized by the position she had me in, and what she was doing felt incredible, so we just stood there and she continued her soapy fondling, watching the others intently. Her hand fondling my balls from behind felt particularly wonderful.\n\n\"Stand up Ronnie,\" Penny said. She stayed on her knees and engulfed his fat six-incher in her hungry mouth. \"Fuck Penny!\" Ron moaned loudly, and Kathy moaned as she saw it. She pushed me down in the water and slashed in on top of me. As we came up she wrapped her arms around my neck and kissed me deeply, our wild tongues betraying all our pent-up lust. She crawled into shallow water and looked back at me, her dripping pink pussy poking out between her spectacular ass cheeks. In a flash I was behind her, guiding my rock hard shaft into her velvety depths.\n\n\"Ohhhhh Steeeve! . . . FUCK!\" she yelled as I bottomed out my full length in her small body. \"God damn it! . . . Shit! . . . Oh my GOD!\" she yelled as I fucked her hard. I probably should have started slow, but the girl made me hot and I wasn't controlling myself very well. In no time she came hard, and I had to hold back on her arms to keep her head from going in the water. She was out of control, and I pumped what seemed like a gallon of cum into her flailing body.",
        "Penny and Ron were farther up on the muddy shore, Penny on her back and Ron thrusting wildly into her with her legs over his shoulders. They were both grunting loudly, and Penny shrieked at the top of her lungs as she came in one of her now famous monster orgasms. There was muddy water splashing all around them, and Ron's yell as he came\u2014the sound of almost thirty years of pent up desire\u2014echoed off the hillsides.\n\nAs soon as I pulled out of Kathy she sat down in the water and took my still throbbing cock in her mouth. She sucked me like a woman possessed, devouring every inch of me and sucking every last drop of fluid out of me.\n\n\"God Kathy, you're so fuckin' sexy!\" I said. She had a mouthful of cock and moaned.\n\n\"I can't believe how deep you were inside me,\" she said breathlessly as my cock slipped from her hungry mouth. \"I must have some extra nerve endings up there I didn't know about\u2014holy shit you felt good!\" She put my cock back in her mouth and continued her wonderful blowjob. I was staying almost fully hard because it felt so damn good.\n\n\"You know, you're only the second man to fuck me since I was a teenager,\" she said as she took a quick breather.\n\n\"I'm a lucky man,\" I said as my cock went back in her eager mouth.\n\n\"Let's go inside,\" she said as she stood up and took my hand.\n\nRon was on his back on one of the lounge chairs and Penny was riding him hard, their bodies still covered with mud. Kathy led me out of the water towards them, and she kissed Penny as we passed by. Penny moaned into Kathy's mouth as Ron thrust up into her, and then Kathy dragged me quickly up the path, into the still warm camp, and onto the old brass bed.\n\nShe pushed me down on my back and sixty-nined me, her beautiful little bubble ass in my face for the first time. She was wet and slippery\u2014a combination of semen, pond water, and pussy juice\u2014and it tasted wonderful. She came again almost as soon as I got my mouth on her\u2014just a few licks and she was flying. When she came down she inhaled my cock again, and I licked her tender pussy softly.\n\n\"I've gotta feel you inside me again,\" she said, and she turned herself around and mounted me like Penny was riding Ron. She settled all the way down onto my rock hard cock in one slow movement. She just sat there very still for a moment to enjoy the sensation. \n\n\"Holy fuck! I don't know what this feels like to you, but . . . holy shiiiiitt!\" she said as her eyes rolled back in her head and a wave of pleasure washed over her and her body broke out in goosebumps from head to toe. I could feel her vaginal muscles contracting and massaging me.\n\n\"Fuuuck!\" she said quietly, looking down at me with glazed eyes. \"That's the first time I've ever cum without even moving! Jeeesus!\"\n\nShe took a few deep breaths to gather her senses, and started slowly sliding up and down on my shaft. \"Oh mother of God that feels amazing!\" she said. She lowered her head down and kissed me hard. \"Fuck me Steve,\" she whispered.\n\nI pumped up into her at a slowly increasing pace, her bouncing ass meeting my every thrust. Soon we were nearly hovering above the wildly oscillating old bed springs, and I kicked into overdrive with my best rapid-fire porn star thrusting. She levitated above me and mumbled unintelligible words like she was speaking in tongues, and a huge orgasm ripped through her. She collapsed on top of me, and I ran my hands gently all over her sweaty back and her perfect round ass as she twitched uncontrollably. I was still deep inside her, and I started thrusting ever so slowly into her.\n\nShe kissed me and said, \"You didn't cum did you, you big dirty boy. You're gonna have to fuck me more with that big cock aren't you baby,\" she purred in my ear.\n\nI rolled her on her back and I got off the bed and grabbed her legs and roughly yanked her towards me. Her ass was at the edge of the bed, and I folded her flexible legs down so her knees were in her armpits. Ron was right about the yoga. I got down on my knees and licked her asshole and her well-fucked pussy. I gave her clit a good tongue thrashing and she was screaming for my cock.\n\n\"Fuck me God damn it!\" she yelled.\n\nI stood up and slid in balls deep, and then I fucked her brains out for a long, long time. She came twice more, and when she looked like she was going to pass out I pulled out and howled at the top of my lungs as I sprayed cum all over her.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nAbout an hour later, after we'd all fucked each others brains out, Penny and Ron walked up the path, naked and freshly clean from another swim. Ron and Kathy embraced and shared one of the most passionate kisses I've ever witnessed.\n\n\"Come on baby, let me clean you up,\" he said, smiling at Kathy. The two of them walked hand-in-hand down to the pond.\n\n\"Holy fuckin' shit!\" Penny said, shaking her head and looking happy and well satisfied. \"I hope you guys had fun . . . that was fuckin' incredible for Ronnie and me.\"\n\n\"Yup, that was incredible,\" I said, shaking my head in wonder. \"I hope they're cool with it. We'll know soon enough.\"\n\nWe looked out the window and could see Ron soaping up Kathy, and there was a lot of kissing and laughing.\n\n\"Looks like they're happy,\" Penny said with a smile.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next two days and two nights were filled with great sex. Two-ways, three-ways, four-ways \u2014 every which way. It's hard to pick a favorite moment, but Kathy's first time with two guys at once\u2014me fucking her from behind while she sucked off her ecstatic husband\u2014ranks right up there. She came like a freight train, with Penny underneath her, sucking on her tits. \n\nSomehow Ron and I managed to get all the porch windows finished up, and the french doors installed. It all looked great and Penny was happy as a clam. Sunday morning rolled around, and we packed up our things and closed up the old camp.\n\n\"Steve and I were thinking of having a painting party here in the spring. You guys in?\" Penny asked Kathy and Ron. They both nodded an emphatic yes.\n\n\"It's to soon to know for sure, but I might be able to recruit some other helpers too. Would that be cool with you guys?\" Penny asked them.\n\nKathy and Ron looked at each other, and they smiled and nodded at each other. \n\n\"Yup, the more the merrier,\" Kathy said with twinkling eyes and sexy little smile."
    ],
    "authorname": "riverboy",
    "tags": [
        "petite",
        "exhibitionist",
        "voyeur",
        "younger man",
        "swingers"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-handymans-memoir-ch-17"
}