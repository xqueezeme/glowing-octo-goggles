{
    "title": "Flower Girl Ch. 05",
    "pages": [
        "Tracy woke up alone in William's bed. After a brief panic, she saw him on the floor and relaxed. He was kneeling on the rug near the couch, perfectly still with his eyes closed. She was not sure what to make of it in her sleepy state, but then it registered that he was meditating. Tracy rose quietly and tip-toed to the bathroom, and when she returned, he was back in bed. \n\n\"Good morning, Kitten.\" \n\n\"Hi,\" she answered, standing halfway between the bathroom and bed wearing William's t-shirt. \"You were meditating.\" \n\n\"Yes. Come here please? I need to kiss you.\" \n\nSelf-consciously, with a hand over her mouth she answered, \"I didn't bring a tooth brush.\" \n\n\"There are some new toothbrushes under the sink.\" \n\n\"Really? I'm going to use one, okay?\" \n\n\"Hurry back!\" \n\nShe turned and went back to the bathroom and opened the cabinet under the sink. Sure enough, there were four identical toothbrushes, four unopened toothpastes, four cans of shaving cream, and four bottles of body wash all lined up in neat rows. She smiled in recognition of the first visible signs of his OCD and felt a strange tug in her heart for him. She brushed quickly and jumped back in to bed. \n\nWilliam took her in his arms and covered her face with kisses. Then he brushed her bangs back to kiss her forehead and said, \"Notice anything weird in my bathroom?\" \n\nTracy paused before answering, \"Yes I did. You have shaving cream, but a very sexy beard. Care to explain?\" \n\n\"I shave my neck, smarty.\" \n\n\"And around your cock,\" Tracy added. \n\n\"That too,\" he laughed. Then William's face turned solemn and he said, \"The last woman I dated called me Howard Hughes.\" \n\nTracy responded by stroking William's beard, allowing him to go on, \"So I called her a cab and never spoke to her again.\" \n\n\"Wow.\" Tracy was a bit taken aback; it sounded like a pretty harsh reaction. \n\n\"I wasn't angry. But I knew it would never work between us, and I didn't want to waste my time. It was a cheap shot, neither witty nor insightful. She became unattractive after that.\" \n\nTracy was quiet for a moment before asking, \"Will you give me a second chance William? If I ever say anything stupid or thoughtless like that? I mean I wouldn't do it intentionally, but what if I am just not thinking and...well, it makes me nervous that you could change your feelings so quickly.\" \n\n\"I didn't mean to put you on edge, Tracy, I'm sorry. I should have explained that my feelings for that woman were never very deep. Besides, you have enough sexiness to override a thousand blunders, at least.\" \n\n\"Oh good,\" Tracy laughed, \"Because I can be a petulant brat at times. I guess I'm really lucky you like my ass so much,\" she joked, as William caressed her butt cheeks. \n\n\"Yes I do. And if I ever catch you being a petulant brat towards me, I will assume you are craving a spanking.\" \n\n\"Uh-oh, be careful Mr. More! You may have just sparked a fire in my sassy side!\" \n\nWilliam laughed and grabbed both of Tracy's wrists, pinned them above her head and rolled on top of her. \"I can torture you in many ways that would be worse than spanking. Do you know what I would like to do to you?\" Tracy waited with anticipation. \"I would like to tie you up and lick you until you almost cum. Then stop. Then start again. Then-\" \n\n\"William?\" \n\n\"Yes?\" \n\n\"I have not been a brat at all. Can you please reward me with a nice, lazy, Sunday-morning, proper fucking?\" \n\n\"Actually, I plan to do just that,\" he said, as he nuzzled into her neck, as he held her wrists, and pressed into her leg with his hardness. \n\n\"And William? You really don't need a condom. I have an IUD and I have not been promiscuous either.\" \n\nWilliam paused and looked into Tracy's eyes. His gaze turned serious as he said, \"I would love nothing more than to cum inside you. But this is binding. If I do, we agree not to sleep with anyone else. If not, I will just grab a condom right now.\" \n\n\"No condom,\" Tracy answered without hesitating. \n\nWilliam grinned, for he was hoping she would say just that. He knew things had progressed much quicker than he had anticipated, but after last night he knew he only wanted Tracy, and the thought of her with someone else filled him with angst. \n\n* * * * * \n\nAt a sidewalk table outside a bagel shop near William's place, they sat in the sunshine eating bagels and sipping tea and coffee. Tracy's ability to enjoy William's company was restricted by her busy mind; she didn't know when or how to end the date. She didn't want to say goodbye, but she didn't want to seem clingy either. Both had already joked about their extremely long first date, so when William asked what her plans were for the day, she answered that she would be having lunch with her grandmother and casually asked if he would he like to join her. William surprised her by saying 'yes', he was not ready to let her go. \n\nThey agreed to take a cab back to Tracy's place so she could shower and change, but first William wanted to loan Tracy a book they had discussed. He showed her his book collection that was kept inside of his closet. It was large and organized, as she expected, but she observed how his OCD manifested in an obsession with numbers, not just neatness. He was very open about the fact that he had a cap of one hundred books, and before he could add one to the collection, he would need to pull one out and donate it. The same went for his clothing. If he bought a new shirt, he picked one to get rid of. He said it partially due to his abjuration of excess, but Tracy noticed all of his limits were even numbers. \n\nTracy found the revelation of his OCD interesting, not creepy. It helped that he was very open with her about it, even revealing that not all women responded with compassion to what he referred to as 'his quirks.' Tracy laughed to herself thinking how mild it was, especially compared to Kevin keeping his alcohol consumption a secret. She mentioned that she thought it showed a great deal of self-discipline, but William corrected her and said it was the opposite. For him, discipline is not trying to control his surroundings, but that he allowed himself a few indulgences in his own home. \n\n\"It's really a good thing you work in a library,\" she said. \n\n\"It is. I am very comfortable among stacks of books, but challenged by social interactions.\" \n\n\"That surprises me. You seem extremely socially skilled, yet I'll admit, I didn't know what to make of you at first.\" \n\nWilliam laughed and pulled her in closer, as they were now sitting in the back of a cab. \"I was intimidated by your intelligence and beauty. And very distracted by your gorgeous legs.\" \n\nTracy laughed into his neck, \"Hey, speaking of how we met, how do you know Ray? Just from the library?\" \n\n\"Yes. I watched him all winter. He was one of the indigent people looking for warmth, but I took notice of him because he was especially young and I thought, mentally ill. I tried to engage him a few times, but he would not make eye contact and I had given up on ever getting through to him.\" \n\n\"Wait a minute, are we talking about the same Ray? Ray and Alicia?\" \n\n\"Yes of course. But that was before.\" \n\n\"Before what?\" \n\n\"Well I don't know what exactly happened to Ray, but one day he came into the library and asked me to check a book in. I was busy and ignored him, but when I looked up and saw who it was, I was stunned. He looked me in the eye and spoke with confidence. He was well groomed and I was able to discuss several books with him. Since then I have enjoyed talking to him on many occasions, my favorite being the time he told me about a writer-friend who owns a flower shop. In fact, I am feeling extremely grateful to young Ray at this moment.\" \n\n\"I am too. We should take him and Alicia out sometime.\" \n\nThey had reached Tracy's apartment and she was anxious to take a shower and change clothes. William had brought an iPad and told Tracy not to worry about him, and that he was behind on his reading. Tracy glanced at the iPad and asked, \"So you are not a Luddite. I assumed librarians were opposed to reading from an electronic device.\" \n\n\"Not at all, I embrace technology. But I admit there are certainly times I prefer to hold a book in my hands. Speaking of which, do you have any more writing that I can see?\" \n\nTracy smiled, and walked over to the computer and sent him an email before excusing herself to shower. \n\nVera opened the door for Andy and saw that he was holding a bouquet of roses. \"Andy! How did I get so lucky? You must have missed me last week!\" \n\nAndy nodded and eyed her hungrily. She had no idea how much she was missed, but he showed her with a passionate kiss as he walked her backwards to the couch without ever breaking lip contact. She still held the roses in her hand as he gently pushed her back to sitting, then swiftly removed her sheer black panties and buried his face between her legs. \n\n\"Oh my, Andy! You sure know how to make a girl feel wanted!\" \n\nAndy didn't answer, just dug into her with his entire face and two fingers. Vera relaxed and enjoyed being on the receiving end of such affection, and it did not take long until she was undulating her hips and moaning, \"Ah, yes, Andy, that feels really good, oh my god, yes.\" Andy could tell she was pleased as she had pulled his head with her hand and was intermittently clamping her thighs on his head. Andy loved the sensation, loved the thought that he could bring her so much pleasure and he did not relent when she began warning that she was about to cum. Only after her spasms ceased did he lift his face and say, \"Hi Vera,\" which caused her to laugh and say, \"That was some hello.\" She was still holding the bouquet of roses in her hand. \n\n\"Mind if I put these in some water?\" \n\n\"It can wait,\" he said, taking them from her hand and laying them on the coffee table. Andy kissed her deeply before rolling her over on her belly. \n\n\"Oh, so that's how it is going to be, huh?\" \n\n\"That's right, Vera. This is how it's going to be,\" he said as he slid into her from behind. \"I wanted you nice and juicy.\" \n\nVera giggled and wiggled back into him, but Andy was intent on long deep strokes, so he smacked her ass with the palm of his hand which caused her muscles to clench and gave an extra squeeze to his member. \"Ahhh,\" she moaned,\" I like that.\" \n\n\"I know you do,\" Andy moaned in her ear, and then smacked her ass again. \n\n\"Oooooh! I love the way you are fucking me, Andy.\" He grinned and smacked her again, each time causing an amazing tightening until he could tell she was cumming again, her back arching as she cried out. Andy gave a few more thrusts before pulling out and releasing his load on her back. He bent over and kissed her neck saying, \"Stay there.\" \n\nHe went to her kitchen and got a clean dish towel that he moistened with warm water and then came back and gently cleaned up her back while she purred in appreciation. After he finished, he picked up the flowers and carried them to the kitchen. \"Where are your vases?\" he asked from the other room. \n\n\"The cabinet above the stove,\" she answered. \n\nWhen he returned with the roses in a vase, Vera was still lying on her belly with her eyes closed. \"Tired?\" he asked. \n\n\"Very.\" \n\n\"Work or your brother?\" \n\n\"Victor mostly. He's been particularly agitated lately. He hit one of the caregivers and two days later she quit.\" \n\n\"I thought they knew that the job came with a possibility of being hit or kicked.\" \n\n\"Of course, but it still sucks when it actually happens. But she gave a different reason for quitting, said she had family stuff going on.\" \n\n\"Any luck finding a replacement?\" \n\n\"Not yet. Hey, how's your new job going? I see you have some new clothes.\" \n\n\"Yes,\" Andy smiled, \"It turns out my new position is more lucrative than I expected.\" \n\n\"Keep it up, money bags! Maybe you'll be able to make an 'honest woman' out of me someday!\" She laughed, obviously joking. Andy was not delusional enough to hope for that, but he did have something else on his mind. \n\n\"Hey, do you have room in your schedule to see me another day?\" \n\nVera smiled, \"What a pleasant surprise. I just let my Thursday guy go.\" \n\n\"How come?\" \n\n\"He pushed one of my boundaries one too many times.\" Vera stated matter-of-factly. \n\nAndy cringed at the harsh reminder of the reality of Vera's vocation. \n\nWilliam had his eyes closed and was lying on her couch with his iPad on his chest when Tracy entered the room. She thought he might be meditating, but then remembered that he would probably assume a different posture. She used the opportunity to study him; his long, lanky but muscular physique, his crew cut that was a bit tousled today, but still very clean cut, the simple white button up shirt. She was glad it was short sleeved since she was enamored with his forearms and no longer felt she had to restrain herself from touching him. Tracy took a step forward, planning to wake him with a kiss, but his eyes opened before she got there. \n\n\"Hey beautiful,\" he said, making her chest burn. \n\n\"Hey yourself. Are you sleepy?\" \n\n\"I'm okay. Somebody didn't let me sleep much last night.\" \n\nTracy laughed in agreement, \"Maybe we can take a nap together after lunch?\" \n\nWilliam smiled and sat up and ran a hand through his hair, then looked at her and asked, \"Do you even own a pair of pants?\" \n\n\"Of course,\" Tracy laughed. \"But I don't wear them in the summer. I have too many cute dresses.\" \n\n\"And legs too sexy to hide,\" William added. Tracy was wearing something colorful today; a dress that was a muted yellow and had flowers stitched in a row in the same color yellow thread running vertically and off center. The dress cinched at the waist and had a square neck line and no sleeves. \n\n\"Is that vintage?\" \n\n\"Sure is, but I hemmed it. They didn't wear dresses this short back in the fifties.\" \n\nWilliam smiled his approval, and then looked down at Tracy's bare feet. \"But where's your anklet? The little bird?\" \n\n\"My shoes have an ankle strap so I can't wear it today.\" \n\nWilliam felt a slight wave of disappointment until Tracy came back with her shoes and sat in a chair to put them on. They were very high heels, with the soles, heels and ankle strap black, the remainder yellow. They were open in the front to display Tracy's dark crimson painted toenails. \"I am quite sure I have never seen a sexier pair of shoes. What does your grandmother think of your fashion sense?\" \n\nTracy laughed, \"My Nana is one of the best-dressed women in all of Manhattan and she was with me when I bought these. Oh, and don't be surprised if she looks familiar. She visited the library recently, on a recon mission,\" Tracy winked at him. \n\n\"Oh really?\" William laughed, then he stood up and they walked down the stairs and out into the street, which was now crowded with pedestrians. They were meeting Beverly a few blocks away and William offered to call a cab, but Tracy said that was silly; they had plenty of time to walk. William offered his elbow in his old-fashioned gesture and Tracy weaved her arm through. \n\n\"My, but you turn a lot of heads,\" William whispered after they had walked for a few blocks. \n\n\"Well, this is a very bright ensemble,\" Tracy stated. William shook his head wondering if she really believed that or just made excuses for beauty. Then they saw Beverly standing on the sidewalk in front of the restaurant. \"Oh no Nana, I didn't mean to keep you waiting!\" \n\n\"Oh, I'm early dear, don't worry.\" \n\nTracy turned and made the introductions, \"Nana, this is William. William, this is Beverly.\" William's face went from curious to recognition as Beverly offered her hand, which William took in both of his. \n\n\"Life of Pi!\" he exclaimed, and Beverly nodded in agreement. \n\nTracy looked at him quizzically and he turned to Tracy and then back to Beverly saying, \"I don't believe we exchanged names, but I surely won't forget the discussion we had about the book, Life of Pi.\" \n\n\"It's true,\" Beverly raised both hands in mock-confession and shrugged her shoulders. She was wearing a beautiful grey blouse and big chunky pearls around her neck. Her hair was up and held back with what Tracy knew was a hairband made with her own hair. \"Such a pleasure to see you again,\" she said turning to William. \n\nThey went inside, sat at a table and ordered drinks, and then Beverly excused herself to the ladies room. \"Your grandmother gave the only intelligent and plausible reason for accepting the alternative ending to The Life of Pi!\" William whispered, excitedly. \n\n\"Yes, she believes they really were animals.\" \n\n\"But it made sense coming from her. She was such a delight to talk to. I recommended another book to her because it was obvious that she is a very spiritual intellectual.\" \n\n\"Yes she is,\" Tracy agreed. \"She's Catholic, but very open-minded.\" \n\n\"She must love Pope Francis?\" \n\n\"I tease her about having a crush on him.\" \n\n\"You can joke with her like that?\" \n\n\"I told you, she's very open-minded.\" \n\nJust then Beverly came back and William jumped up to pull out her chair. \"So,\" she said, placing her cloth napkin in her lap, \"It would appear that your date to the museum went very well?\" \n\nBoth Tracy and William grinned and looked away for just a second, and then Tracy blushed and said, \"Um, yes. Very well, Nana.\" \n\n\"And so, then you two spent the night together?\" She said, still wearing the same smile, causing William to choke slightly on his water and plaintively look at Tracy to see what he should do. \n\n\"That's right,\" Tracy answered and took a drink of her tea. William wasn't sure if she was acting casual or really was okay with this line of questioning, but he felt it had just become twenty degrees warmer in the restaurant. \n\n\"And so you have worked out certain areas of compatibility while you are still getting to know each other?\" Beverly smiled warmly at William. \n\nHe was dumbstruck, but mistakenly tried to speak, \"Um, look Beverly, I'm sorry. I didn't mean, um...\" \n\n\"You're sorry you slept with my granddaughter? That is rather unfortunate.\" \n\n\"What? No! No, I am not sorry at all, I just...\" \n\n\"Well then please don't apologize, William. We are all adults here and I trust Tracy's judgment. She is a very bright woman and an astute business owner.\" \n\nWilliam looked at Tracy who seemed comfortable bordering on cocky. Tracy shrugged her shoulders and said, \"I told you she's open-minded.\" \n\nWilliam relaxed his shoulders and his face changed as he realized that he was not being called on the carpet. He spoke with confidence and a tone of amazement as he said, \"Well I am not sorry at all. Last night was incredible.\" He looked at Tracy who smiled widely at him, then at Beverly who never seemed to stop smiling. \n\n\"Lovely,\" Beverly said, right as the waitress approached. Tracy put her hand on William's knee under the table, a gesture of reassurance that he appreciated. \n\nDuring lunch, Beverly asked questions about the library, certain books, and where William was from. Tracy felt really proud of the way William communicated with her Nana after getting over the initial shock of her directness. They laughed and spoke with ease until Beverly asked about his family. William told her the same thing he had told Tracy about his parents' occupations. \n\n\"Well what does your mother do now? Now that you and your sister are grown and moved out?\" \n\nWilliam hesitated and then said, \"Um, well she rearranges things a lot. You know, around the house.\" \n\n\"Decorating?\" \n\n\"No, not exactly,\" William took a drink and did not go on. \n\n\"Is she remodeling?\" \n\n\"Um, no, not exactly. She does little projects, but ... oh, my sister visits often, so she plays with her grandson. Did I mention I have a two-year old nephew? How old is your nephew?\" He turned to Tracy. ",
        "\"Charlie is six months. We get to go see him next weekend, right Nana?\" \n\n\"That's right. But Tracy I would like to take the train back Saturday night so I can attend Mass Sunday morning.\" \n\n\"Sure Nana, that works for me too. Hey - I bought a little sailor suit for Charlie!\" and she took out her phone to show a photo while William insisted on paying the bill, relieved to be off the hook. \n\n* * * * * \n\nTracy unlocked the door to her shop, walked over to the computer and turned it on, then looked around to see how the girls had left the shop. Obviously, Antonio had already been in, and there were notes from the girls and fourteen messages in her inbox. Tracy felt overwhelmed with work, but also ecstatic, for her weekend with William made her feel giddy. She tried to focus on work, but she kept breaking out into a silly grin and fought a constant obsession to check her phone. \n\nShe scrolled through her emails and saw William's name and immediately opened it first. \n\nKitten, \n\nWhat an amazing weekend. This morning I really wanted to see your face and realized I don't have a photo of you. Will you send me one? Of course I long to see you in person. When do you think we can make that happen? \n\nThank you for sending me other samples of your writing. I really enjoyed reading your short stories; you know they don't have to be erotic to hold my attention. Admittedly, I would probably find your grocery list interesting at this point. I particularly enjoyed the nonfiction piece about growing up as a twin and I loved learning about the young Tracy Wilcox. I am hungry for you, so anything you send will be devoured. I am attaching the short story with some notes, but really...I would love to talk to you in person. \n\nHave I mentioned how I long to see you again? \n\nW. \n\nTracy smiled so hard her cheeks were hurting. Not to mention her butt cheeks, her legs, even her breasts were sore from the previous day. The best kind of sore. How am I going to concentrate on work today? She wondered. And then Beth called; a video call. \n\n\"Well, how did it go?\" she asked with trepidation. \n\nTracy didn't know where to start, so she inhaled and then whispered slowly, \"Oh my god. William Travis is the hottest, sweetest, sexiest, smartest man on the planet!\" \n\n\"So you kinda like him then?\" Beth asked dryly, and then laughed. \"Okay, tell me everything!\" \n\nTracy backed up and told Beth about the flower arrangement that was actually for her, the date to the museum, and about William's coworker following them around and the overheard conversation in the bathroom. \n\n\"Whoa, that is extremely creepy. Was she an ex?\" \n\n\"No, just a coworker that has a thing for him. Very dowdy. Anyway, then he says he has dinner plans and he takes me to his house to cook for me.\" \n\n\"You mean to get you in bed!\" \n\n\"What? No, Beth. Well, maybe? Well shoot. He didn't seduce me Beth. I mean not intentionally. He just...\" \n\n\"What?\" \n\n\"Well...I am sure I wanted it at least as much as he did. We really hit it off, we have amazing chemistry.\" \n\n\"And so you did it?\" \n\nTracy gave a cautious smile and a nod, then immediately her feminist side realized she did not have to defend her decision, \"Why do women always have to justify sleeping with someone? I am sure William is not defending his actions to anyone. Oh, except Nana.\" \n\n\"He met Nana!?!? And she knows? Oh my god, Tracy, You had a busy weekend!\" \n\n\"I know. It sounds crazy, but Beth - I am not going to let my head fuck up a free lunch. I am so happy right now, even if he does turn out to be ...\" Tracy trailed off not really knowing how to finish that sentence. Turns out to be what? She wondered. Then she spoke, \"Even if he turns out to be too good to be true.\" \n\nBeth was smiling at her. Tracy was smiling back. Twins with matching smiles. The computer screen was a mirror, except for their hair and Tracy's glasses. \n\n\"Well?\" Beth asked slowly, her grin turning coy, \"How was it?\" \n\nTracy swallowed, looked to both sides as if to check if anyone were listening even though she was alone, then looked back to the screen and whispered, \"Unbelievably fantastically amazing.\" \n\n\"Wow,\" Beth said, but she was smiling big too. \"Wow. I am really happy for you Tracy. So he went to lunch with you and Nana?\" \n\n\"He did. And came back to my place afterwards, and we just hung out until pretty late last night. The whole date started on Saturday at 10:00 a.m, and ended at Sunday 10:00 p.m.\" \n\n\"A thirty six hour first date?\" \n\n\"Well, I hadn't calculated, but yes.\" \n\n\"And have you heard from him today?\" \n\n\"Yes. He texted me when he woke up, and then sent me an email when he got to work.\" \n\n\"Oh my god, Tracy, he is so into you! This is awesome.\" \n\n\"It is. But I am so behind at work. I feel manic.\" \n\n\"Well, hey, get some work done. Are you still coming up on Friday?\" \n\n\"Yes of course. Is Charlie sleeping?\" \n\n\"Yes, want to see him?\" \n\n\"Please!\" \n\n\"Okay, but be quiet. No squealing!\" \n\nBeth carried her laptop into the nursery and let Tracy see Charlie who was sleeping with his mouth open. Beth pointed and silently laughed, then when she left the room whispered, \"Like his daddy!\" \n\n\"He kills me. I can't wait to hold him in a few days.\" Tracy said. \n\n\"Okay, get to work. And keep me updated on this William thing. Sheeze, the rate you two are going you are likely to be married by Thursday.\" \n\n\"Ha-ha Beth,\" Tracy said sarcastically. \"Okay, I better go.\" \n\n\"Bye!\" \n\nAnd Tracy forced herself to answer all her work emails before answering William and sending him a selfie with the caption, \"Here is the smile you gave me.\" \n\n* * * * * \n\n\"Hey William, what are you up to?\" \n\n\"Melissa, you startled me.\" William was looking at his phone at the photo Tracy sent him. It was just a face shot, but he found her mouth so erotic he was getting nasty thoughts just looking at her and hoped Melissa did not notice the bulge of his semi-hardness. \n\n\"Oh sorry, I didn't realize you were doing anything...private.\" \n\n\"Well, did you find those books?\" William asked, eager to change the subject. \n\n\"Yes, all except one. That Thomas Savage book was not on the shelf. I looked for a long time.\" \n\n\"Really? Well, I do appreciate that Melissa. Thank you.\" William had the book in his drawer and had sent her on an unachievable mission just to get some space from her. The woman was like a gnat, buzzing around him constantly. \n\n\"So,\" Melissa began, \"That woman that you were at the museum with, are you two seeing each other?\" \n\n\"Yes. Wasn't that obvious?\" \n\n\"Um, yes, I guess so. But I mean... exclusively?\" \n\n\"Yes. Yes we are exclusive.\" William answered and realized how odd that sounded. They just had their first date, but it was true. \n\n\"Well, you didn't have a girlfriend last week!\" \n\n\"How do you know that?\" William asked, not sure how Melissa gathered this information. \n\n\"Oh, I don't know. I mean, I just thought you didn't. I never heard you talk about her before.\" \n\n\"Well Melissa, I like to keep my personal life private at work.\" \n\n\"Oh.\" \n\nWilliam's phone vibrated and he knew it was Tracy answering him. He stared at Melissa. She was inspecting a stack of books on the counter, a transparent attempt to hover about. Experience told him not to be too kind to her or she would misread the gesture, so he excused himself to the restroom. \n\nThe text read, \"Yes, tomorrow night.\" \n\nWilliam smiled and put his phone back in his pocket and returned to work. \n\n* * * * * \n\nVera was worried about Victor. He had not even been a pain in the ass lately, just very listless. The new caregiver helped get him in the van and she thanked him and let him go for the day. There would be people at the hospital to help once she got there. \"Ready Victor?\" She asked after strapping in the wheel chair and before turning the ignition. She hoped for a thumb-up, but got nothing, just a blank stare. She started the van and began the twenty minute drive to the doctor's office. She even put heavy-metal on the stereo, Victor's taste, but he did not respond. \n\nThe doctor said he had a kidney infection again and put him on another round of antibiotics. He checked Victor's backside for bed sores and said, \"He is really lucky to have you Vera. How are you holding up?\" \n\n\"Oh, you know me Dr. Wu. No complaints.\" \n\n\"You sure?\" He asked. He noticed bruises on Vera's arms. \n\n\"Yes, I mean what could I complain about? I am not the one who is half-paralyzed or brain damaged.\" \n\n\"Yes, well, true. But you have taken on a big burden taking care of your brother.\" \n\n\"Victor is not a burden! Besides, I have help.\" \n\n\"Yes, well...let me know if you need anything. My offer for a prescription is still good, if you need something to take the edge off.\" \n\n\"I happen to like my edge, Dr. Wu.\" Vera assured him. \n\n\"Okay Vera. Well, think about a vacation. Maybe you can have one of the caregivers stay at your place.\" \n\n\"That's not a bad idea,\" Vera answered. She was making more money now and could actually afford a weekend away. But traveling alone? That didn't sound like fun at all. \n\nWilliam was glad to have the distraction of a game that evening to occupy his mind. He worried about his mental state and had not felt completely in control of his thoughts all day. Certainly it was enjoyable to think about Tracy and quite understandable after the amazing weekend they had just experienced, but he felt obsessive and did not enjoy the feeling. Baseball, then a drink with John would get him centered again. \n\nHe met John at Ardesia, one of their favorite bars and of course John was a few minutes late. When he arrived, William was sitting with a drink in front of him, obviously distracted. \n\n\"Well William, I won't apologize for being late. Instead I would like to hear about your date.\" \n\nWilliam smiled and said, \"It was far beyond my expectations. And it lasted all weekend.\" \n\nJohn laughed and said, \"Very good news. Was she surprised by the flowers?\" \n\n\"She was. Thank you again for your assistance.\" \n\n\"My pleasure. I was very curious to meet this woman, and once I did, I knew your hiatus of celibacy was coming to an end. Can I reiterate how attractive she is?\" \n\n\"Absolutely. Tracy is my favorite topic of conversation. However, I am very concerned about my thinking.\" \n\nJohn's demeanor changed to concern as he asked, \"What's going on William?\" \n\n\"I feel obsessive. I've looked at her photo fourteen times today. And while waiting for you to arrive, I checked my phone four more times.\" \n\nJohn knew not to laugh at his friend, but he couldn't help smiling, \"That, my friend, is not your OCD. That sounds like something else.\" \n\nWilliam looked at John waiting for him to go on. He trusted John and valued his opinion on such matters. \n\n\"It is too soon to assume love, but please allow me to say you are, at the very least, infatuated.\" \n\n\"Oh, I definitely agree, but don't you think I am being rather extreme? It is very unnerving not to feel in control of my thought patterns.\" \n\n\"I know you have reason to be concerned, William, but I assure you, this is ...well, while it is not exactly normal, it is extremely fortunate. I suggest you enjoy it, as it is not likely to last at this intensity. I admit I have felt this way myself, but it has been years since I have had a woman get under my skin that way. I envy you right now, my friend.\" \n\n\"So your date did not go well?\" \n\n\"No. All style and no substance.\" \n\n\"Ah, I am sorry to hear that John. I wish you would take my suggestion on this matter.\" \n\n\"I did take your advice William. I wore my Tagheur instead of my Rolex.\" \n\nWilliam chuckled, \"That is not exactly what I said, John. I said leave the Rolex at home,\" William laughed shaking his head. \"Maybe you should buy a Timex since you can't seem to go without a timepiece. How else will you ever stop attracting gold-diggers?\" \n\n\"A Timex?\" John shuddered. \"I guess I can skip the watch.\" \n\n\"And shoes, John. Honestly, how much did you pay for those shoes?\" \n\n\"These?\" John looked down and admired his own shoes, \"These are Italian leather? Salvatore Ferragomo. I don't recall what I paid for them, I don't consider price, I just look for quality. Very important in my line of work.\" \n\n\"Of course,\" William agreed, \"But a detriment to attracting the right type of woman.\" \n\n\"I agree,\" John conceded, \"But remember what happened last time? You had me dress like a pauper and go to that dive bar. And the women were-\" \n\n\"I know, I'm sorry. That was a bad idea.\" \n\n\"Yes, well, I am disheartened but not giving up. What about Tracy? Did she ask how you are able to afford your place on a librarian's salary?\" \n\n\"No, she did not,\" William answered. \"The only number she was interested in was my two-to-one ratio.\" \n\nJohn laughed and toasted William's glass. \"Please inquire if she has any friends as captivating as she is,\" then he added, \"You lucky bastard.\" \n\n* * * * * \n\nTracy rolled over and turned off her alarm clock, picked up her glasses off the nightstand and checked her phone. It was the second day of waking up to a text message from William and this one said, \"Good morning Kitten. I wish I were waking up next to you.\" \n\nTracy was glowing with affection. She could barely comprehend that just a few days ago she wasn't even sure if William liked her, and now she was getting sweet good-morning messages. After a thirty minute yoga video, she showered, drank coffee, ate oatmeal, then put on makeup. She felt pretty in her dress and decided to take a selfie and send it to William as she answered his text, \"Good morning to you, Mr. More.\" The dress had a very Mondrian-looking print, and they had talked about the artist on their date to the museum. \n\nA text came back immediately, \"Stunning. Your legs will be sizzling on my retinas all day long.\" \n\nTracy laughed because he was so complimentary of a mediocre photo and decided to turn it up a notch. She turned with her back to the mirror and, with her feet together, lifted her dress up to expose the entire length of her legs, and just a little crescent of butt cheek covered in a sheer black lace pantie. She snapped a photo over her shoulder and sent it to William. \n\nShe walked the half block to Petals, unlocked the door and laid her stuff down before checking her phone again. \"That pretty little butt cheek is begging for my hand.\" \n\nTracy giggled and turned on her computer and tried to concentrate on work. They had a date planned for that evening and she wanted to make sure she could close the shop on time. The online orders were light, which was typical for a Tuesday. She would start working on the church flowers today, since they were due every Thursday. Her phone rang, Pierre calling. \"Tracy my dear, can you spare any white roses? I am in a predicament!\" \n\n\"Let me check,\" Tracy said, and walked over to the flower wall. \"I have twenty, Pierre. Do you need me to send them over?\" \n\n\"Oh Tracy, you are an angel!\" \n\n\"Oh hey, Pierre, guess what? Remember that amazing arrangement I made last week? It was for me! This man I met ordered the flowers for me and then brought them when he picked me up for a date on Saturday.\" \n\n\"What? Oh, Tracy! This is the most romantic thing I have ever heard. Tell me, tell me everything! Who is this man, where did you meet him?\" \n\n\"He's a librarian at the Mid-Manhattan and I met him through a mutual friend.\" \n\n\"Is he handsome? Where did you go on your date?\" \n\n\"He is very handsome and he took me to the Met. You would like him Pierre, he is a complete gentleman.\" With just a touch of pervert, Tracy smiled to herself. \n\n\"Oh Tracy, you are breaking my heart! I want to hear more, I want details, first kiss - everything! But I'm afraid I have a large order to fill right away. Can we chat later?\" \n\n\"Of course Pierre! Tend to your business. I'll have Antonio run those roses over.\" \n\n\"Oh Tracy, you are such a doll. I am so pleased you met a man brave enough to give you flowers. You know, no man has ever given me flowers!\" \n\n\"Yeah, a detriment of our trade, Pierre,\" Tracy said, then hung up and texted Antonio to come get the roses. \n\n\"Please deliver roses to Pierre,\" then she added, \"No man ever gives him flowers.\" Antonio texted back \"Twenty minutes,\" missing her joke. \n\nTracy started working on the church flowers. They had a budget, but the good thing was they were not picky so Tracy was able to use her overstock to make their arrangements. Today she was using calla lilies and yellow daises. \n\n\"Good morning Tracy!\" Beverly beamed as she opened the door. \n\n\"Nana! Look at you, I love your hat!\" \n\n\"Why thank you dear. And I just adore your dress. It is reminiscent of a Mondrian painting!\" \n\n\"I know, right?\" Tracy laughed, \"So Nana! What did you think of William?\" \n\n\"Oh, utterly charming! What a dashing young man.\" Beverly paused. \n\n\"But?\" \n\n\"But what, my dear?\" \n\n\"Come on Nana, I caught your hesitation at the end. What are you thinking?\" \n\n\"Well,\" Beverly began cautiously, \"He seemed evasive about his family, particularly his mother.\" \n\n\"Okay,\" Tracy nodded. \"Fair enough. I will see if I can explore that topic further.\" \n\n\"And...\" \n\n\"Yes Nana, say it!\" \n\n\"Well Tracy, I just worry that a man is going to see you as someone with money. And he is a librarian, a noble profession to be sure, but not a very lucrative career choice.\" \n\n\"Okay. Well...Nana...you know I'm no money bags.\" \n\n\"Of course dear, but you do own a business, and live in a nice rent controlled apartment. One might assume...\" \n\n\"And you forgot my awesome wardrobe!\" Tracy stepped out from behind the counter and did a twirl in her dress. She did not want to argue with her grandmother but did not want to seem defensive. \n\n\"Yes Tracy, you have a wonderful fashion sense. No one would believe that you buy most of your clothes second hand.\" \n\n\"Smart, frugal, and stylish.\" Tracy winked at her. \n\n\"And modest!\" Beverly laughed. \n\n\"Well Nana, I'll run a good soil test on him tonight. We have a date and I'll try to get a financial statement and a thorough background check. Maybe even a DNA sample. Ooops, too much information!\" Tracy laughed thinking about how easily she could get a sperm sample from him. \n\n\"Oh Tracy, I don't mean to sound like a killjoy. Just remember to keep your eyes open.\" \n\n\"Not while we are kissing Nana. That's just gross.\" \n\n\"Oh Tracy,\" Beverly laughed, \"You are incorrigible. Well, I will admit he is unlike anyone you've dated. He is a very intelligent and insightful young man.\" \n\nJust then Ray came through the door of Petals and Tracy used a mock-serious serious tone to say, \"Speaking of intelligent and insightful young men, I would like to introduce you to my friend, Ray Kelly. Ray, this is my grandmother, Beverly.\" \n\nBeverly turned to Ray and said, \"Oh, hello Ray. So good to see you again!\" She turned to Tracy and explained, \"From church.\" \n\nRay stood in shock with his mouth opened, looking from Beverly to Tracy, then back to Beverly. \"Tracy is your granddaughter? \" \n\nBeverly nodded and Tracy was slightly amused, but not surprised. Her Nana seemed to know everyone. \n\nJust then Antonio came in and Tracy excused herself to talk to him while her Nana spoke to Ray. Tracy kept a bicycle in the back of the shop and it was the quickest way to get flowers to Pierre, since his shop was directly on the other side of Central Park. She sent Antonio on his way with twenty white roses and returned her attention to Ray and Nana. Nana was saying goodbye and told Tracy to enjoy her dinner date. \n\n\"William?\" Ray asked, smiling. \n\n\"Yes,\" Tracy smiled back. \n\n\"Wow, that's cool. I didn't see you two together, but now it's starting to make sense.\" \n\n\"I feel the same way,\" Tracy said. \"How's Alicia?\" ",
        "Ray's face lit up, \"She's doing really good! I'm so proud of her. She dropped out of school!\" \n\nTracy laughed, not really sure why that was a good thing. \"Well, that's great. Hey, shouldn't you be at work?\" \n\n\"I am. My boss sent me over here to do some work on an apartment up the street, so I thought I'd say hello. Do you have any more of your story? Alicia has been printing out a copy for me, but she said you haven't sent anything for a while.\" \n\n\"Yeah, I had a busy weekend, but I wrote some last night. I'll send it to Alicia.\" \n\n\"Cool, we'd both like that. Hey, have fun on your date tonight. Say 'hi' to William for me.\" \n\n\"I will.\" \n\n\"Damn, I still can't believe that is your grandmother. She even told me she had a granddaughter. What a small world, right here in New York. \" \n\n\"Well, New York is really just a ton of little neighborhoods piled on top of each other.\" \n\n\"Yeah. Weird. Okay, see ya Tracy.\" And he turned to leave. \n\nAh, finally! Tracy was ready for a little quiet time so she could think and finish the church flowers. She could be really social, but every once in a while she liked to be alone and focus on her work. After a whole hour in thoughtful silence working with the yellow flowers, she stood back to admire her creation and was pleased. \n\nIt was then that she allowed herself to check her phone and saw a text from William, \"This is going too fast. I need to take a break. Don't text me back.\" \n\nTracy felt like the wind was knocked out of her. She reread the text. Is this a joke? She wondered. It isn't even funny. How could this be? Don't text me back? She looked back over the text messages they had sent that morning to see if there was any clue. Had she come on too strong? No, he was at least as flirty as she was. \n\nTracy slumped down on her stool and stared at her phone. She wanted to cry, but wouldn't. She wanted to break something, but wouldn't. She tossed her phone in the drawer and got busy cleaning the shop. She turned up her music loud and purposely missed a call from Beth. She busied herself by cleaning the front window, and when the sun came through the window it blinded her temporarily. \n\nShe went and sat at her stool and just stared straight ahead. Maybe this was because of his OCD. Maybe this is too much for him. Perhaps he is too unstable. Or maybe he just used her for sex and got what he wanted. She couldn't believe it. Tracy really wanted to call Beth, but she felt like she would feel judged for sleeping with him so fast. Beth would never reprimand her, but Tracy would feel it. Tracy folded her arms and put her head down on the desk. Too fast? Take break? Don't text me? \n\nAnd then she got angry. Angry at herself for ignoring the little voice that said \"too good to be true.\" She decided to fill her orders and go home. Antonio came back with the bike and Tracy acted preoccupied so he wouldn't see that she was upset. When he left, she hung the \"closed\" sign on her door and went home and kicked her shoes off, pulled her dress off, and crawled under the covers. \n\n* * * * * \n\nWilliam thought 5:30 would never come. He was finally off work and ready to go. He stopped in the employee bathroom to brush his teeth and then he stepped outside and hailed a cab. It took him twenty two minutes to get to Petals, so he was just few minutes early. He went to the door and saw the \"closed\" sign and assumed Tracy was in back. He called her to let her know he was outside, but she did not answer. \n\nThe thought occurred to him that she was not there, but why wouldn't she be? They agreed that he would come by the shop at six o'clock. William wondered if maybe she went home to change. He would wait ten minutes. He called again after twelve minutes. He started feeling anxious, wondering if the plan had changed or if there had been a miscommunication. And why wasn't she answering the phone when they made plans for six o'clock. Maybe she felt ill? Surely she would call or text, but she did neither. \n\nWilliam decided to go check her apartment since she lived close by. It took him only six minutes to walk to her apartment and someone was coming out so he was able to enter the building and go directly to her door. He knocked and heard Tracy say, \"Who is it?\" \n\nWho else could it be? \"It's William.\" \n\nTracy opened the door. It was dark in the apartment and she was wearing a short black kimono embroidered with cherry blossoms and no glasses. Her hair was a mess. \n\n\"Are you okay? Are you ill?\" \n\nTracy glared at him. \n\n\"What is it Tracy?\" \n\n\"I'm not going to play these hot and cold games with you William,\" she snapped. \"Make up your mind. If you are not up for this, I don't want anything to do with you.\" \n\n\"Up for what?\" William was suddenly overwhelmed. Maybe Tracy was not who he hoped she was. Had he been a victim of wishful thinking? She did not show signs of mental instability before now. \n\n\"Don't text me!\" Tracy was indignant. \"Don't text me? Pffft, don't worry about that, I won't text you ever again. And I won't bother you with photos of my ass anymore, except to say you can kiss it!\" \n\nWilliam looked at Tracy confused, and then took out his phone. He didn't see any text from his phone, so he asked Tracy to see hers. \n\n\"Why?\" \n\n\"Because I didn't say 'Don't text me'.\" \n\n\"Yes, you said some other stuff too, but I got the gist of it.\" \n\n\"Tracy, please let me see your phone.\" \n\nTracy picked it up off the end table and turned it back on. She picked up her glasses and put them on, but would not look at William. She handed over the phone. \n\n\"That little- ...Melissa!\" He looked at Tracy and explained, \"I put my phone in my desk drawer today. I felt like I was obsessing on checking my messages, so I left it in my desk drawer. She must have texted you then deleted it. Look, I don't have that outgoing message on my phone.\" William handed Tracy his phone and the last message was about her butt and his hand. \n\n\"She saw the photo of my butt!\" \n\nWilliam sat down and put his head in his hands. He was overcome with rage. He wanted to smack that little manipulative bitch. How dare she take his phone and send a hurtful message to Tracy. How dare she? He looked up and saw that Tracy seemed deep in thought, and then the corners of her mouth began to curve up. \n\n\"So...then...you didn't tell me to back off?\" She asked coyly. \n\n\"Of course not, Kitten. That thought didn't even cross my mind.\" \n\n\"And why did you put your phone in your desk?\" She wore a sexy grin and was playing with the tie around her robe. \n\n\"Because I couldn't stop thinking of you.\" Both were grinning and maintaining eye contact. \n\nTracy came closer to where he was sitting and removed the tie from around her robe. \"And you don't need a break?\" \n\n\"God no,\" William swallowed. She was going to seduce him. And he was going to let her. \n\nTracy let her robe fall open, revealing black panties and nothing else. He could see the curve of her breast, her navel, and the panties from the photo. She held the sash in her hand and wore a playful grin. \"And you don't think this is going too fast?\" \n\n\"Not at all,\" William answered. \"I am enjoying this pace very much.\" \n\n\"Good,\" Tracy said, as she straddled his lap. William raised his hands to her butt and Tracy said, \"No, no, no, Mr. More. You made me sad and now you are in big trouble.\" But she was smiling as she took his hands off her butt and put them behind his own back. She used the satin sash from her robe to tie his wrists together. \n\nWilliam humored her\u2014 he could get out of her silly restraint in half a second if he wanted to. But he didn't want to. He wanted to allow her to do whatever she desired. \n\nTracy took his face in both hands and kissed him squarely on the lips. Then she used her tongue to part his lips, which he gladly let fall open. She rubbed her tongue gently into his and sat up a bit, arching her back, bringing her breast up to his face and presenting him with a pert little nipple which he gladly took in his mouth. \"Mmmm, I missed you Mr. More. That scared me. The thought that you didn't want to see me again was just awful.\" \n\n\"I'm so sorry you went through that, Kitten,\" William said, as he migrated from one breast to the other. \n\n\"I'm feeling much better now,\" she giggled, and then she rose off his lap, knelt between his legs and unbuttoned his shirt. Tracy used both hands to feel his chest, boldly, firmly, and then she brought her mouth to his nipple and slowly sucked with very firm pulsating sucks, while she rubbed her tits over his hardness. Flicking his nipple with her tongue, she then bit gently and a moan escaped William's lips. Tracy really liked playing with his nipples much more than she ever anticipated. With her mouth still on his chest, she unbuckled his belt and unzipped his pants, and then lowered them as he lifted his hips in cooperation. Then she began her licks. Slow, long, firm licks from base to head of his shaft, then she gently swirled her tongue around the head while maintaining playful eye contact. She had a firm grip around his shaft and milked a big drop of precum out of him, then used her finger to take it and wipe it on his nipple and lick it off. \n\nWilliam moaned with pleasure. Oh she was good. Such a little sex kitten, and obviously enjoying being the seductress. He was in heaven as she kissed his neck and stroked his cock, and then she pushed him gently back on the couch and crawled on top of him, his hands still behind his back. \"If I ride you without a condom, you will belong to me, Mr. More,\" she whispered. William said, \"Okay,\" and laughed gently, for he thought that fact had already been established. \n\n\"Say it,\" Tracy ordered. \n\n\"I am yours,\" William whispered in her ear, and Tracy cooed her approval before lowering her wetness down on him, engulfing him completely, until he was snuggly inside of her. Tracy relaxed her body completely, for just a moment, and then she began to wiggle. Not riding him or pumping, just moving, gently side to side. She was lying on top of him, not sitting, and gently moving her hips in a circular motion. Her ankles hooked under his legs and her breath filled his ear. She was using him, like a toy, and he didn't mind at all. In fact, he found it extremely sexy that she knew just what she wanted and was taking it. Her movements became quicker, and shorter, as she used him to rub herself and he became mesmerized by the twitching he was feeling down around his cock. He didn't move at all, just felt her move and when he knew she was there he gently whispered, \"Yes, cum for me Kitten.\" And she did. She achieved super human strength momentarily and squeezed her legs around William and he felt her tense and squeeze him, the pleasure was almost excruciating. Then she almost convulsed on him, spasm after spasms, and finally whimpered and collapsed. \n\n\"My god, you are sexy,\" William said. He was still rock hard and Tracy laughed and said, \"I really missed you.\" \n\nWilliam slid his hands out of the sash to reach up and grab her ass. He decided he liked her on top, but now she lifted herself up off his chest and rode him in a different way, with long strokes. William loved watching her like this, her breasts moving, her head tossed back, smiling at him with lust in her eyes. He loved the feeling of not being entirely in control of the thrust. He liked her weight on him. Tracy was picking up the pace again and he decided to let himself join her in her next climax, so he relaxed and let her ride him. He lost himself in the sensation of her wet pussy sliding down his cock over and over until he could feel her interior tremors, which led him to surrender to his own orgasm and he felt the waves ripple through him in concert with Tracy's, crashing over and over until they both subsided and finally ceased. \n\nTracy relaxed her body on top of him and he gently caressed her butt cheeks, wondering what he could say, how he could put his feelings into words, and then Tracy sighed and spoke, \"I'm starving, William. Can we go eat?\" \n\nWilliam laughed and said, \"Of course, Kitten. Let's dress and go eat.\" \n\n***** \n\nThank you for your votes, kind comments, and emails. Just a reminder - this story has 9 chapters."
    ],
    "authorname": "DonnaBeck",
    "tags": [
        "love",
        "romantic love",
        "seductress",
        "make up sex",
        "romantic sex",
        "novel",
        "novella",
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/flower-girl-ch-05"
}