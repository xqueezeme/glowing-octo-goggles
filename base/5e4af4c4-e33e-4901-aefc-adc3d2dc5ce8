{
    "title": "Inheritance Ch. 08",
    "pages": [
        "Or sometimes you just don't see it coming!\n\nThis is a sequel to the Inheritance series -- a 'finishing off' really. If you haven't read the preceding parts before, reading them might make everything more sensible. This is a fiction; nothing more. All of the characters are made up; some of them characters are based vaguely on real people but really, really vaguely. Oh and they're all over 18. Enjoy!\n\nTwenty five years ago Mike Bailey, discovered that he had inherited his grandfather's estate -- a very large amount -- what is generally known round here as a 'shit load' - of money, property, his business portfolio and his submissives. Which all came as a bit of a surprise - especially that last bit. His Grandfather John was a Dom and he dominated Mike's mum and gran and by inheritance Mike became their master. Mike then married a woman he used to work with, incorporating her into his business and relationships. His wife - Eva - gave birth to their daughter, Elizabeth, named after her great-grand mother. This is how that story moves on.\n\nMay 2038\n\nLiz Bailey looked at her padphone. It was her dad calling. She thought about sending a busy signal but thought better and passed her hand over the screen to answer it. The screen saver changed to the live view of the caller.\n\nMike Bailey smiled at his daughter, \"Er Dad! Hi! How are you?\" It wasn't that it was unusual for her dad to call her, he just simply didn't call. It was usually his PA or Liz's mum that rang. Liz felt like she should curtsey or something.\n\n\"Hi Liz. I just wanted to know if you're coming up to see us this week-end?\" Well it looked like her dad and sounded like her dad, Liz wondered whether it was a computer graphic, there were some clever buggers out there.\n\n\"I have one more 'uni' thing to do tonight, dad, but I'll be over in the morning.\"\n\n\"Good! Come and see me tomorrow, I have something I need to talk to you about.\"\n\n\"Okay, I'll see you tomorrow.\" She said brightly, and after their goodbyes she waved her hand at the phone to switch it to stand-by.\n\n\"Fuck me!\" She said aloud.\n\n\"Any time!\" said a voice from the couch, \"What did the old man want?\"\n\n\"He wants to see me tomorrow.\"\n\n\"You going?\" the second voice from the couch was drowsy from orgasm but still curious.\n\n\"Yeah.\" Liz said thoughtfully, she had no idea what her father would want to see her about and she did have access to two heavenly creatures in front of her, but because of the unusual personal call she was intrigued, \"I think I will.\"\n\nAnd with that she pulled her sweater over her head, exposing full, nicely rounded breasts tipped with dark brown nipples, as she turned towards the arms of the sleepy naked blonde on the couch. Liz stroked the large black strap-on cock, bobbing upwards out of her smooth shaven pussy area. \"But before I do that - I'm going to fuck your brains out again. And then,\" she drew the word out as she poked a long red-nailed finger into the breast of the other blonde, \"Then I am going to do the same to you.\"\n\nLiz placed her knee on the bed and moved forwards, her hands held out like a descending goddess. As she brought her other knee up, the black strap-on jiggling between her thighs, the two blondes sought out her palms and nuzzled at them like supplicants. The two elegantly nude, sensually bare women worshipped the woman kneeling between them, their pale flesh and golden blonde hair contrasting with her naturally darker skin tone and darker blonde hair.\n\nLiz's hands descended like a blessing on the heated flesh, bestowing caresses upon her worshipful subjects. It was delicious -- the women on the bed were not related but were like enough to be twins. There was a thrill of delight in watching them as they engaged in what appeared to be almost incest, enjoying the descending sensuality and each other at the same time. Liz felt the sexual chill course through her as Karen - the slightly taller of the two - grasped the false cock and brought it to her mouth, following it down as Liz continued to sink to her heels. Danielle -- whose round breasts were slightly more rounded and capped with slightly larger nipples -- slipped her questing hand past Liz's, and beneath the black strap-on, up underneath her and between the cleft of her bottom. Liz brought their heads together and delighted in watching the two lovely mouths as they kissed open mouthed. It could not have been better, unless, of course they had been sisters. The three women regularly engaged in the most intense of carnal sessions and had been intimate for the last couple of years. Whilst their particular menage was not exclusive it was a deep and involved thing. Liz and Karen gently pressed Danielle onto her back and Karen guided the large dildo towards her opened and damp lips, giving them a long slow lick before she applied the false cock.\n\nLiz drew Karen up and they kissed as Liz slowly began to fuck Danielle. Karen switched between the two -- kissing, licking, stroking, fondling, a priestess officiating in the Danielle's sacrifice on the altar to Liz's goddess. Slowly but surely the goddess moved in Danielle and she screamed an orgasm round the thrust of the cock jutting from Liz's pelvis. Time and again the cums erupted until -- her head shaking from side to side -- Danielle pushed Liz away. \"Too much, no more.\"\n\nThe three of them rested, Liz and Karen gently stroking and bestowing kisses on the still trembling Danielle. Liz lay back, the cock between her legs jutting upwards, but now Danielle and Karen were doing the kissing, as they lavished their attentions on Liz's breasts, kissing and nipping at them.\n\nGently pushing them away Liz guided Danielle to attend to Karen, while she made Karen kneel in front of her, then pressing her forwards so she was on all fours with her delightful breasts dangling over Danielle's hungry licking mouth.\n\nAnointing the black strap on with cream from the table beside the couch she positioned the tip at Karen's bumhole.\n\n\"OH YES!\" the other woman squealed, \"Take me there, you bitch, impale me!\"\n\n\"Just pleased I can be of service.\" Liz told her and plunged the false cock home, in one swift, lubricated movement.\n\nElizabeth Jane Bailey - Liz - was enjoying her life. Basking in the new sexuality of the late 2030's, life for an adventurous soul like herself, open to new experiences, was exciting. After the late 'teens and the 2020's when Britain's moral landscape had become bleaker and bleaker, more repressed and generally disproving, the mid 30's had exploded into freedom. In a parallel of the Swinging 1960s young people had refused to have their behaviours set and handed down to them and they embraced a freer (and medically more cautious) morality. Liz had embraced that freedom -- she was at university where she met people who were her equals mentally and physically, and she was enjoying relationships with boys and girls.\n\nNow as she drove from Oxford to the house near Northampton she thought how different her life was to that of her father and her mother. All her dad was concerned with was his work and her mother. To her they were a typical staid middle aged couple, she laughed - they even had her gran -- her dad's mum - living with them in their large Northamptonshire home. She did genuinely love her mother and father, and her grand-mother but she could not ever see herself living a life that was that confined. Not that her mum and dad weren't attractive people, hell even her gran was fit, as her male uni friends would say, delicious in a rounded mature way. Her parents - in their early fifties - were physically in good condition and her mum had a smouldering sexuality - though Liz was certain it was all for her dad. Her mum was pretty conservative, and she often let Liz's dad make all the decisions. Not that Liz's mum was in any way weak willed, she was a successful business woman and growing up Liz had discovered that her mother had a will of iron.\n\nHer dad on the other hand was not so sexual in his outward appearance, but he was, she felt, a man with deep sensual tastes. If push ever came to shove she told herself, he was attractive enough that she'd jump the old man's bones if she had to. Yeah, right Liz, she told herself, like that was ever going to happen.\n\nOnce she reached her parent's house, Thrallthorpe, Liz placed her bag in her room and went to find 'the old man'. Kissing her mother, Eva, Liz was pointed in the direction of her father's office. She knocked and opened the door.\n\n\"So how is that looking for you?\" Mike Bailey waved Liz to sit down and he listened to the answer, he turned back to the screen.\n\n\"No, no, Elizabeth. Yes LITTLE Elizabeth. Come over here Liz.\"\n\nMike turned the screen round, so she could wave to the man on the screen -- one of her father's business associates from the Netherlands.\n\n\"Okay Lukas, give my regards to Hanne and the kids, we may get out to see you in a month or so. Yes I'll make sure Eva comes with me. She still talks about the last time she was out there. Speak soon my friend. Yes and you.\"\n\nSmiling Mike waved his hand at the screen to close the connection and turned back to his daughter.\n\nAfter a couple of minutes chatter Mike got up from his seat behind the desk and came to sit on the old chesterfield settee that had been in the office for so many years, Liz had no recollection of the room without it.\n\n\"Liz, I've been looking at your results from uni. Looking good kid, looking very good. Have you given any thought to what you're going to do next?\"\n\nLiz thanked him but she was worried, she knew that when her dad took an interest in people generally their lives changed. And while it normally seemed to be a good thing Liz wasn't sure she wanted that. She had plans - her own plans - to travel for a year or two and then settle down to working. And she told her dad that.\n\n\"Liz, my lovely, you've grown up with the Group.\" Liz heard the capital letter in the word - even as her dad was saying. \"But what do you know about it?\"\n\nOh man, Liz told herself, that was a good one. The Group was a fact of life in her life from the yearly group family days to the Monday morning meetings in the large kitchen at Thrallthorpe. (In fact the Monday meetings and the beautiful, elegant and intelligent women had been a major influence in Liz's choice of study at uni, her degree in business, was because she wanted to be like them, to be one of them.\n\n\"I know bits and pieces.\" Liz reeled off the set-piece show-and-tell \"The JE Group is a collection of companies founded just under fifty years ago, the operating model of which is mutual co-operation. Operating costs are kept manageable by favoured rates within the group, which are further helped by self-funding and a minimal involvement from external investors and stock exchanges. The group also manages its credit and supply very carefully, as these have been sources of major business failures in recent times. The other interesting thing about the group's operation is its ethical trading policy, not just in internal trading but also with any business partners.\"\n\nLiz's dad smiled at her run-down of the business, she gave him an embarrassed smile in return, \"One of the tutors set us an essay on your business model -- he's a huge fan, you should meet him some time.\"\n\nMike Bailey smiled, the Ethical business policy was something he had brought in, but his wife Eva had taken it on and developed it, the policy was her 'baby'.\n\n\"But what I want to know,\" she went on, \"Is how you pulled it off? How has it all worked for this long? I mean it shouldn't work -- no external investment, no involvement from the markets, how?\"\n\n\"The trend for businesses in the mid-teens was smaller is better, and that worked for us,\" Mike told her, \"Because each business in itself is small, but operating with the support of the group they have access to the sort of resources that bigger companies have.\"\n\n\"Isn't that a restrictive practice?\" Liz asked. Her father shook his head.\n\n\"We put plenty of work out for tender but what I'm talking about is areas that big companies might have that a small company just can't afford. There you are -- R &amp; D -- is a good example.\n\n\"When I first took over from your great-grand father I set up a think tank -- brought people together from within the group. And it paid for itself. A situation came up a few years ago where it looked like we would have to lay people off. Something we have always tried not to do.\n\n\"We threw it to the Think tank guys and they worked out that while the company in question did need to lose staff, redeploying people within the group would actually be a better option. A few of the 'at risk' people asked for support and we ended up funding two new companies, and a micro-brewery that is doing very nicely indeed.\n\n<br> \"Then one of those companies came up with two world beating patents. You know how you just wave your hand to answer your phone?\"\n\nLiz nodded. \"They invented that.\"\n\n\"That had the phone companies interested, but then they designed a system to take external sounds when you're on the phone, and play it through the external speakers. You know how it works, it deadens external noise so you don't have to shout but it also uses the sounds around you so that if people are listening your sound is deadened and they can't hear your call.\"\n\n\"They invented Closed Call?\" The business student in Liz was fascinated.\n\n\"It was jointly financed with the group and the phone people give us buckets of money to use it. And a big lump of that money goes back into the Group.\"\n\n\"I'm guessing I'm not here just to tell you what you already know - what is it you want me to do, father?\" Liz asked.\n\nHer dad smiled as Liz cut to the chase. \"I'm offering you a job. When you're done with uni I want you to start working for me as an intern, no frills, no favours. The pay-off is that when I think you're ready - you take over from me.\"\n\n\"From you?\" Liz was stunned.\n\nMike nodded. \"What I'm suggesting is three years in the group working with me, and we'll see whether you're ready. But don't decide now. Have a think about it and let me know at the end of term.\"\n\n\"I was thinking of travelling for a year.\" Liza said thoughtfully.\n\nHer father thought for a minute, \"Why not do that and get paid for it?\"\n\nLiz looked at her father, quizzically. \"Look, say you go travelling,\" he said, \"You do it on a budget, you often don't know where you're going to sleep and you're living on dwindling resources. These days that's not as safe as it used to be.\n\n\"What I'm suggesting is that there's a bunch of people in the group that do trade shows in the US and India and the Far East with their computer software, working with them be worth it. I have to go out to Hong Kong myself this summer. It would mean that you get a hotel rather than a beach...\"\n\nLiz wanted to say no, she wanted to say that she preferred to travel with her friends, but this was one of the things her father did. He made great suggestions that were tough to turn down. The next thing you knew you were doing what he wanted you to do. It was something he had done to her time and time again as she'd grown up. With a deep breath she told him, \"No I'm good, I think Dad.\" She said slowly. \"We've been planning this for a while, there will be three of us travelling together but when I get back, I'll work for you, no worries.\" She could see her father smiling.\n\n\"What?\" She asked.\n\nMike just shook his head and carried on smiling, \"Because I stood up to your suggestions?\" She asked.\n\nMike nodded; he got up from his desk. \"Come on daughter of mine, it's Saturday morning I need to get out in the sunshine, let's go for a walk.\"\n\nAnd taking Liz by the hand they walked out into the grounds of Thrallthorpe, together.\n\nIn the end it didn't happen the way Liz wanted -- Karen and Danielle, her two friends, decided they had different priorities and - out of the blue - got married. Spending the money that they would have otherwise used for travelling on the wedding the two girls looked stunning with matching dresses, and Liz was the best man to both of them (and partner to both the previous night).\n\nShe allowed them that their wedding bash was one of the best she had ever been to, and after the wedding she did get off with one of the male guests, but she could not help but feel disappointed by the loss of the opportunity of a life time.\n\n\"Can you not still go on your own?\" Her mother asked when she was back at Thrallthorpe.\n\n\"I guess I could,\" Liz told her, \"But it just wouldn't be the same.\"\n\n\"Didn't your father ask if you wanted to go to Hong Kong?\" Eva asked her.\n\n\"D'you think he'd still take me?\"\n\n\"Why don't you ask him?\"\n\n\"But wouldn't you normally go?\"\n\n\"You know perfectly well that if your dad asked you, it's you he wants to go. I don't mind, I've been several times. You'll enjoy it, Hong Kong is exciting and there are so many -- erm - interesting things to do.\" She told her daughter, with a smile.\n\n<br> \"And anyway,\" Eva went on, \"It will be good for the two of you to bond. I know he's missed you a lot while you've been away.\"\n\nThe car trip from Hong Kong International Airport ended at the entrance to a towering hotel. While the driver delivered the cases to the hotel porter, Liz followed her father up the steps and into the foyer.\n\nThe concierge approached her father with a broad smile on his face.\n\n\"Mr Bailey! It has been too long since we last saw you sir, how are you? How long are you staying with us?\"\n\nBoth men bowed politely then, her father shook the man's hand warmly, \"Hello Peter, may I introduce my daughter, Elizabeth? We're here for a few days, some business, and a little pleasure.\"\n\n\"Whatever it is Mr Bailey you're always welcome here sir.\" The man's grin was ear to ear and as far as Liz could see, quite genuine, \"If you'd like to sign in at the reception desk sir, they're taking your luggage to your rooms now.\"\n\nAnd ten minutes later Liz and her father were in the glass lift -- shooting up the inside of the lobby atrium, till they disappeared into the ceiling.\n\nIn the suite the porter showed them around their rooms -- two bedrooms with their own bathrooms that shared one common lounge space but then Liz saw the view. From the floor to ceiling windows she could see Victoria Harbour on her left, with Stonecutter Island, and the lights of the bridge, in the distance, and the stacked metropolis of Kowloon spread out in front of her. She stood there and took it in, her eyes flicking from the tiny boats through the bridges to the bigger ocean going vessels and helicopters flitting between the islands. She had never seen anything like it, and could have looked at it for hours, but her father moving in the lounge area drew her away from the incredible view.\n\n\"This is nice, dad. Do you always travel like this?\" Liz asked her father walking from her bedroom back into the lounge. Mike had taken his suit jacket off and was rolling his shirt sleeves up.\n\n\"Sometimes, often we stay with friends, most times it's a bit less downscale, but sometimes it's about the show.\"\n\nLiz looked at her dad, waiting for him to continue.\n\n\"People expect you to be certain things, it makes them feel comfortable if you behave how they expect you to. The people we're dealing with are very traditional in many ways, so we put on a show for them.\"\n\n\"They're watching where we stay?\" Liz asked, Mike nodded. \"Are they going to spy on us? Will they be eavesdropping?\"\n\n\"Highly unlikely -- that's one of the reasons I stay here -- they take their guests' security very seriously, all the rooms are swept on a regular basis.\"\n\n\"We've got a meeting with the customer's at eight tonight,\" Mike told her, Liz turned to look at him; he had removed his suit jacket, and had taken his tie off. \"It might be an idea to catch a nap. The time changes can really catch you out.\"",
        "Liz suddenly realised that she was tired. In a few minutes she had stripped to her knickers and a camisole top, and was dozing with her head to the stunning view.\n\nIt seemed like she had hardly closed her eyes before she heard her father's gentle knocking, it was dark outside the large windows -- as dark as the view of Kowloon across the harbour at night could ever be, she reached out and switched on the bedside lamp.\n\n\"The car will be here for us in about an hour,\" her father told her, when she asked, \"Wear something classy. The first part of the evening is business -- we're going to an informal little soiree and drinkies - and then we're going out.\"\n\n\"Oh?\" Liz wasn't expecting 'out'.\n\n\"Yes,\" he said, smiling as he did so, \"I think you might enjoy it.\" And he closed the door as he went back to his own room.\n\n\"An hour?!\" Liz cursed under her breath as he left and she spent the next forty-five minutes in a race to shower and dry her short dirty blonde hair. Next she franticly hopped around the room struggling into one of her evening dresses. Fortunately she had spent a few hours with her mother picking clothes that would be suitable for one of 'daddy's business trips'. With five minutes to go Liz made her way into the sitting room of the suite, only to see her father looking out at the twinkling lights of the view that had entranced her before.\n\n\"You look stunning Liz.\" He greeted her. And even if she said so herself, she did look good. With a slightly longer than usual 'little black dress' -- just above her knees, and a fine gold chain around her neck, the effect she been trying for was understated but classy, and, quite frankly it was a look she rocked.\n\nLiz on the other hand stuttered, \"Wow Dad! You look fantastic!\" He wore a very plain black silk dinner suit with a white wing collared shirt and dark red bow-tie. Liz she felt a ripple of attraction for him, she realised again that her dad was a very good looking man, not ruggedly handsome or even pretty, just a handsome, distinguished -- in that suit and wing collared shirt - sensual man. She knew he had always been a good looking man, but she hadn't realised how good, and, she had to admit, his boyish grin was a killer.\n\n\"Like I told you earlier sometimes you have to make the effort,\" he said with a disparaging wave. \"The guys we're going to meet tonight are tough negotiators, very old school Chinese businessmen, they like this sort of thing. And this works for where we're going afterwards.\"\n\n\"What is it we're doing tonight, dad?\"\n\n\"It's a bit of a meet and greet. We've started doing business with the Li Corporation. Our guys here in Hong Kong has been talking to them for a while but now Mr Li himself wants to meet up. We have something he wants, they don't mind paying for it, but they're getting sticky about the end user licence. The EULA stipulates that if they do anything that contravenes our Ethics Policy or a couple of other things on that agreement not only will it get very expensive very quickly but we can shut down their operation. We -- you and me - are not that important in the process, but they wanted to meet me - the boss -- and then they'll go back to the sales team the day after tomorrow and the negotiating begins. So I had a meet with some of our guys here this afternoon_\"\n\n\"Here?\" The phone rang; it was the desk advising that the car was ready for them.\n\n\"Yes, while you were a sleep. You needed it.\" He smiled \"And our local people reckon they're going to be playing hardball, tonight.\" And with a gentle touch on Liz's elbow her father led her from the suite.\n\n\"And what is it we're selling them?\"\n\n\"It's a new take on rapid prototyping software we have been working on. We designed it primarily as a medical software -- it's designed to run straight off the feed from an MRI scanner. But as the developers got into it we found it could do so much more. It's really user friendly, its end to end stuff, allows you to design something and it saves a lot of time and thought. It knocks hours off a job, and it runs the machines that do all the work as well. You can use it with lasers, rapid prototypers, printers, five axis cutters, at work and at home. \"\n\n\"They want the whole thing?\"\n\n\"Yes, but like I said before the sticking point is the number of user licences, they want a lot more than we're prepared to allow them.\"\n\nAt the hotel where the meeting was taking place -- neutral ground -- as if such a thing as 'neutral' existed for a Chinese business man in Hong Kong, her father introduced her to several of his local employees -- all Caucasians, in particular a handsome young Caucasian man in a white dinner jacket, \"Liz this is Tony Feeney, as far as you're concerned you've known him all your life, okay?\" Mike leaned in and whispered, \"Tony is a Chinese speaker but don't let on.\"\n\nLiz nodded, bewildered.\n\n\"Trust me.\" Her father said.\n\nThe meeting took place in an upper floor room, again with a spell-binding view. Six Chinese business men waited for them to enter. Drinks were poured and greetings exchanged, bows and handshakes. Liz couldn't quite keep a track of all of their names but two in particular immediately struck her as important. Mr Han, small and blocky, he smiled a lot and greeted them in beautiful English. The other was Mr Li, a big man but controlled, solemn looking - even his movements were measured and carefully planned. Mr Han did all the translating for Mr Li. Liz wasn't sure how far she would trust either of them, but her father greeted them warmly and everybody including Tony sat down around a large table.\n\nFor a long while it was straight business talking about the nature of the software and what it could do. Tony did much of that, it was obvious to Liz that he knew the product inside out.\n\nThen -- with the Chinese seemingly happy with the answers -- the pow-wow broke up and drinks were served again.\n\nLiz found herself with her father, Mr Han and Mr Li. Mr Han chatted amiably while Mr Li loomed over both of them. Suddenly Mr Li leaned over and said something to Mr Han in Chinese.\n\n\"Mr Li is curious -- he was expecting to meet Mrs Bailey, after all one of the things we are discussing is your famous ethics policy. We understand that she is mainly responsible for that.\"\n\nMike Bailey nodded, \"Elizabeth is beginning her training, in the family business, her mother has been in Vienna visiting her relatives.\"\n\nAnother shot of Chinese from Mr Li, \"You didn't have a son to follow you?\" Mr Han translated.\n\n\"No, my daughter is my blessing.\" The Chinese men nodded, though Liz suspected, their interpretation of the word blessing was different from her father's. But Liz felt a little thrill, it was nice being called her father's 'blessing'.\n\n\"And how are you finding Hong Kong, Miss Bailey?\" Mr Han asked her.\n\n\"As it is at the moment, it is quite enchanting,\" she told him as she waved at the view, the golden street lights shone up into the heavy damp-laden sky illuminating the crystal towers, making a crowded fairy landscape, simplified at this distance. It was an easy thing to say, and true, but it pleased Mr Han and when he explained it to Mr Li even he too broke into a smile.\n\nAs Liz went to find Tony she heard Mr Han say something to her father about family business.\n\nThere was something about the tone of the question and the fact that her father paused before answering. Liz also paused before she turned round slowly, not wanting to appear as if she was reacting too quickly.\n\nHer father was smiling, to all intents and purposes, the same smile he'd worn all evening, but Liz knew.\n\nLiz could see the smile wasn't quite going all the way to his eyes. He repeated the question, to himself, \"Mr Li was wondering whether we should be doing entering into this partnership with the JE Group, with what is essentially a small family business?\"\n\nLiz's dad was blazing angry, she could see it. She'd seen it once before when a school teacher had accused her of cheating in a piece of course work. Her father had helped her in the work but in the only way he knew how -- by going over it with her and then helping her understand what she had to do. Then he sent her away to do it, and when it was done he checked it with her, to make sure it was done properly. He knew she'd done the work honestly, he'd even corrected her and had her do some of it again because she had lifted a section of it off the internet -- after he had explained why that wasn't the way to do it. The teacher had sent Liz home with a failing mark, on the grounds that sections had been plagiarised.\n\nOn hearing the mark Mike Bailey had been incandescent with anger, not with Liz, something she was very glad of. He was angry for her because it called her integrity into question, something he would not tolerate. Mike had requested a meeting with the teacher and the head mistress, and let the teacher know his displeasure in no uncertain manner, not using one repetition, or swear word. Her work was re-assessed and this time the grade was a passing one. There had been other times, like the time someone had accused her of stealing (falsely) and Liz liked to think of this as 'daddy's special kind of angry'.\n\n\"If I may, daddy?\" Although she and her mother frequently referred to Mike as 'daddy', Liz never addressed him as that; it was enough of a jolt to make him pause. \"Yes, Mr Han, my father jokes about the JE Group being a family business, but only because there is strength in family, the strength that comes from knowing who you can rely on when you need people. We look after our people and our companies, we have done for fifty years, through four recessions, and like a happy, strong family we have grown naturally.\"\n\nLiz leaned on her father's arm, \"When my father took the group on from his grandfather, it had already survived two periods of recession and the ineptitude of two different governments. He has guided it, and nurtured it so that now it is the healthy, organisation it is today.\"\n\nShe was watching Mr Han and Mr Li carefully as she spoke. \"The group itself has doubled in size, but it has been an organic growth - often one company creates another. We have trebled the number of people we employ but by use of technology and good practices our annual turnover has grown steadily over the last fifteen years. Not a lot, some people would say, but it is a genuine growth and sustainable, our yearly percentile growth is consistent and sustained through all the companies in the group. None of our companies is over-extended financially -- as you are aware we are not listed on any stock exchange - and more importantly we carefully manage our company's sources and make sure supply lines are secure.\" Liz was all business, as she reeled off details of the capita expenses and through put -- or at least the numbers she felt safe in revealing.\n\nIn contact with him as she was, Liz felt her father relaxing; she went on maintaining her business-like manner, \"As well as that -- as you know - we have a very strict ethics policy -- not only in our own business but we also insist that those we do business with, do it in an ethical way as well. So much so we write it into our end user licence. It all contributes to the group's success, but it ultimately comes from our ethos, Mr Han, the family ethos. You don't screw with family.\"\n\nThat was when she saw what she was looking for in Mr Li's eyes. Liz let Mr Han translate this even though 'screw' didn't translate directly. Suddenly she became a twenty two year old blonde western daughter, \"Mr Li!\" she laughed, placing her hand on the big man's chest, coquettishly \"You're so naughty! Pretending that you don't speak English!\"\n\nThere was dead silence in the room as all conversation came to an abrupt halt. Liz realised that it could have gone either way, the tension in the room could have blown up there and then, but Mr Li's serious face broke into a beaming grin as he said in cultured English, \"Then perhaps I would not have been party to your spirited defence of your father's companies, young lady. Bravo.\"\n\n\"Mr Bailey,\" he went on turning to her father and offering his hand to apologise, \"Please forgive Mr Han, he was only following my instructions, I just wanted to know more about the kind of man we are dealing with. I don't think many men could have a better testimony than that which your daughter has delivered so eloquently. Truly, she is, as you say, a blessing.\"\n\nBusiness concluded, the Chinese party left quickly afterwards.\n\nThe three of them remained after everyone else had gone, and they stood for a few moments looking out at Kowloon, the city lights illuminating the low clouds.\n\n\"That was quite impressive, if I may say so?\" Tony observed into the slightly stunned silence.\n\n\"I thought so.\" Mike Bailey added, then he looked at both of them shaking his head slightly and scowling -- as if to say 'not here'.\n\nOnce in the crowded lobby they paused and Mike turned to Tony. \"Okay what was your read on that?\"\n\n\"Well, I was fairly certain Li was faking it, though they played it completely straight, everything you said was translated directly and Han translated everything that Li asked him to. They probably figured you'd have a translator. They didn't figure on a people watcher though.\" Tony tipped his head in Liz's direction; she felt a slight flush of embarrassment.\n\nHer father touched her shoulder, \"Yes that was well done Liz. What was the 'tell'?\"\n\n\"When I said 'screw with family' there was just a flicker in his eyes, that made me suspicious, then Mr Han started to explain 'screw', but Mr Li had already reacted to the phrase.\"\n\n\"The tirade was very well done. But I might send 'you don't screw with family' to Marketing and see what they can do with it.\" Mike told her. \"And those figures, very impressive.\"\n\n\"Well I can't sleep on a plane like you can, dad. I figured I'd better read up on the group.\"\n\n\"Well done you.\" Her father observed, before he turned to Tony, \"Thanks for tonight, I'll see you at the formal meeting the day after tomorrow -- tomorrow I'm taking my daughter shopping in Hong Kong.\"\n\nAs they walked to the waiting car her father's anger gone, Liz asked him what had triggered it. He laughed, \"It's my big weakness, my Achilles heel, and they pushed just the right button.\n\n\"I hate people under-rating the group. Yes, maybe we are a 'family' operation, but that's always been our strength. It just pisses me right off.\"\n\n\"He was pushing your buttons to see how you reacted?\" Her father nodded.\n\n\"But I don't think he's going to under-estimate you again.\" Liz was leaning on her father's arm again. It was a warm feeling, Liz enjoyed the sensation of connection, she also realized she had never felt closer to her 'old man'.\n\n\"Thanks to you.\" He said, \"That has earned my adventurous daughter something a little special.\"\n\n\"Such as?\" Liz asked curiously.\n\nHer father smiled as he assisted her into the waiting car. As he slid himself in on the other side and the driver closed the door, he beamed at her, and simply said \"Mrs Wu's.\"\n\nTwenty minutes of Hong Kong Island traffic later the Mercedes EL350 -- the high end electric saloon supplied by the hotel for the evening - slid to a halt underneath the entrance to a modern looking waterside building which to all intents and purposes was a large Chinese restaurant.\n\nAs they got out of the car under the entrance portico, thunder rumbled in the dark sky above them, beyond the overhanging porch. A doorman greeted them with a broad smile as they entered.\n\nIn the entrance there was an overwhelming sense of red - red walls, red drapes, red furniture, red everywhere. Liz remembered that in Chinese culture red is a lucky colour. The entrance was busy, people coming and going, but in the centre of it all, well back from the open doorway, sitting prominently in a large, black, intricately carved chair, was a small, elegant woman, quite still and observing the throng.\n\nAt the same time Liz saw her, the Chinese lady's eyes lit upon Liz's dad.\n\n\"YOU!\" She said loudly, \"You!\" She rose from the chair, walking with the aid of a gold topped black stick, using it as both an aide and an emphasis. She wore a beautifully cut, black silk dress, falling to her mid-calf and patterned with gold thread on the left shoulder. She was handsome, and her face was so finely featured that Liz couldn't have even begun to guess her age, but that beautiful face was grimly serious.\n\n\"No see you long time! What you think you doing? You got some nerve come back here.\" The words were loud and harsh, but suddenly the stern, forbidding glare became a wide beaming smile and the tone became excited and warm. Mrs Wu, Liz assumed, threw her arms wide and embraced her father warmly, drawing him down to her level kissing him and hugging him tightly.\n\n\"You lovely man,\" she said, \"Why we no see you so long? Where you been?\"\n\n\"Mrs Wu,\" Mike said, \"Forgive me, my heart has been breaking that I haven't been able to come to see you.\" Mike bowed low and kissed the knuckles of the hand that Mrs Wu extended for him.\n\nLiz was watching her father flirting, she knew he was doing it, he knew he was doing it, even Mrs Wu knew he was doing it but, she had to admit to herself, that he was doing it beautifully. Liz had never recognised before that her father loved women. He was surrounded by them, her mum and her gran, even her great grand-mother had been a beautiful, elegant woman. All of the management team -- women she had admired and who had influenced her as she grew up -- were sophisticated and intelligent women, and her father loved all of them. Liz was certain there was no impropriety, but they were all close to him. Mrs Wu was another one who responded to his charm.\n\n\"Oh!\" Mrs Wu was hanging on to her father, \"You lovely, lovely man, so good see you.\" Liz could see the genuine warmth between the two of them.\n\nMrs Wu noticed Liz, standing there slightly bemused. \"You no bring Mrs Bailey? Who this lovely lady? You have concubine now?\"\n\nLiz coughed in surprise, but Mike stepped in \"Mrs Wu -- may I introduce my daughter Elizabeth?\"\n\n\"Elizabeth?\" Mrs Wu's eyes narrowed in thought for a moment, \"Like you _ you grandmother Elizabeth?\" Liz choked for a second, her mother and great-grand mother had been here?\n\n\"Yes, Liz is named after her.\" Mike told her.\n\nMrs Wu looked at Liz, looking her up and down openly, before hugging Liz and exchanging kisses. \"Welcome to Mrs Wu's -- very pleased to meet you. You named for very lovely lady, I miss her very much. But you! You so pretty woman, so_ so_ elegant!\"\n\nLiz blushed and thanked Mrs Wu, blushing at the compliment.\n\nShe turned back to Mike. \"You mum okay?\" Holy shit! Liz thought, her gran as well?\n\nThe little Chinese lady smiled her glorious smile again when Mike told her his mum was well and that she sent her love. \"Good, good! You come now. We go upstairs now. You not eating? You need good feed, you too skinny for Mrs Wu. Come, come!\"\n\nMike offered Mrs Wu his right arm and Liz his left and the three of them walked down the long central aisle of the restaurant. Several of the diners -- on seeing the proprietess walking with the western man and woman - paused in their meal till they had passed, but for most of them it was not so unusual for Mrs Wu's.\n\n\"How long it been, sin' we see you las' time?\" Mrs Wu asked Mike.\n\n\"Two, no three years ago.\" Mike said sadly.\n\n\"Three year too long, you know you numma one guy for Mrs Wu?\" She told him, laughing happily \"Me love you long time!\" Mrs Wu and Mike started to laugh, and in the face of Mrs Wu's over the top sincerity Liz started to laugh too.\n\n\"You will always have a place in my heart dear Mrs Wu, always.\"\n\nHaving noted how people -- especially women - seemed to like Mike Bailey, Liz realised it was obviously an advantage when doing business but there was more, socially her father had an acute sense of humour which picked up on local memes, and which brought similar responses from people.",
        "\"What is this place? And mum, gran, and gan-gan? You brought them here?\" Liz hissed at her dad, as the small Chinese lady with the grace of a duchess paraded them through the throng of diners.\n\n\"Are you really the 'adventurous' girl I have heard and read about?\" her dad asked her quietly.\n\nStunned by her dad's question, Liz looked at him. \"I hope so?\" She told him.\n\n\"Well then, relax and go with the flow.\" On her father's other side Mrs Wu caught her eye and nodded encouragingly.\n\nLiz realized that this was a test of some sort, something about the way her father referred to her adventurous nature, it had to be a test. But if that was so why had he brought her mum here, and not just her mum but her gran and even great grandmother Elizabeth -- gan-gan?\n\nSoon they had reached the top of a wide stair case, Mrs Wu had swapped places and was holding both of their hands as she led them down a hallway to a door.\n\n\"You go in now, everythin' ready as you ask. Enjoy, enjoy!\" And she opened the door into...\n\n\"A private dining room?\" Liz said aloud. Mrs Wu urged them forwards and left them.\n\n\"Yes.\" Her father said, \"What were you expecting?\"\n\n\"Well I wasn't_er\" Liz stuttered, \"I wasn't sure.\"\n\nHer father was still smiling as he showed her to her seat, a two seater, arranged at a round table with a lazy susan on. The seats were side by side and faced a window which again focussed on the sweeping frontage of Kowloon across the water. The seating faced the windows. Liz made herself comfortable on the seat.\n\n\"Leave room.\" Her father told her.\n\n\"What is it - a banquet?\" And even as she had said it waiters and waitresses in plain black tunics and trousers, all impeccably uniformed, all with a pictogram embroidered on the upper left breast in copper coloured thread, started bringing dishes to the table. Soon there was an assortment of Chinese dishes in front of them. \"I don't know if I'll be able to leave room after this lot?\" Liz said.\n\n\"Oh no!\" said her father, \"Leave room for these...\" At which point two girls appeared, clad in black dresses very like that worn by Mrs Wu but with their embroidery done in silver. The bigger difference however was the cut of their dresses. Mrs Wu's dress and the uniforms of the serving staff were elegant but demur, but the girls' dresses were cut with a very low d\u00e9colletage, cut almost to the navel and showing most, but not all of their breasts. The sides of the dresses were equally revealing; being cut with high slits to expose smooth golden thighs, up past the top of the hip. It was immediately apparent that neither girl wore any form of underwear. They bowed gracefully to the diners before moving to sit down next to them\n\nThey were both beautiful. Mai -- who went to sit by her father appeared to be taller and had a mane of black, blacker than black hair that hung between her shoulders, while Soo, who was more petite, wore her hair in a bun. Both girls were exquisitely made up, Liz was stunned.\n\n\"Girls are okay, are they Liz? Would you prefer a young man?\" Her father asked.\n\nSoo had sat down at Liz's right hand side and was happily pressing her bare thigh against Liz's leg, as she removed the lids from dishes and prepared chopsticks.\n\n\"Wha_ What are they going to do?\"\n\n\"Primarily they are here to feed you. Mrs Wu believes we westerners make a complete balls up of chopsticks, so these two young ladies will feed you. But they do other things as well.\"\n\n\"As well?\" Liz's mouth was dry, Soo was beautiful, exotic and when she looked Liz in the eye, there was an openness and frank sensuality that was making the western girl's knees weak.\n\nLiz looked at her father, Mai had seated herself on his left, her right arm draped around his shoulder and she was using her left hand to bring dim sum to his mouth. Her father had his left hand draped on her right thigh. \"Other things,\" he told her, \"Their whole reason for being here is to make you feel good.\"\n\nWhat the fuck? Liz couldn't believe her father had brought her here. She watched him for a moment as he sat, intimately entwined with his Chinese hand-maiden (though Liz doubted she wasn't any sort of maiden and hadn't been for a while). She saw him gently stroking the girl's thigh as she toyed with him and chatted with him, as she dutifully fed him pieces of the little dumplings. Liz observed this with amazement, after all it was her father she was watching, but she was surprised to realise there was also some resentment in her for the same reason.\n\nEventually she reasoned when in Hong Kong. Liz pointed at the shu mai and Soo offered Liz a piece of the delicious dumpling. With nothing for her hands to do - the girls even held their drinks for them - Liz followed her father's lead and dropped her hand onto the Chinese girl's thigh. Soo smiled when she did that and nodded, as if in approval.\n\nThe amounts in each course were small, as was traditional. Dim sum were followed by soup, and Soo even managed to make the soup a sensual event, holding the bowl and offering the ceramic spoon to Liz, and withdrawing it slowly. All the time she held Liz's eye contact, and the Chinese girl's movements created such an erotic air that Liz was starting to enjoy the experience. It might have been childish, had Soo adopted a parent's role in feeding Liz the soup, but the Chinese girl avoided anything like that. By keeping eye-contact with Liz, as well as the continued sensuality of their physical contact, it was very much a 'grown-up' experience.\n\nAfter the soup there was a wide selection of traditional Chinese dishes. Liz was sure she would be spoiled for any Chinese meal of the future. Each dish was perfect, the meats seared and sealed as they should be to keep the essential flavour in. The sauces were perfect, even the rice, never as big a part of a meal in China as it was in the west, was perfect with separate grains and delicate flavours of sesame and jasmine. The portions were not large but there were lots of little ones, each kept hot by electric plates on the table top. In between courses there would be a short break to allow time for the food to settle. Soo and Mai would offer them mineral water to clear their palates. The Chinese girls even wiped Liz and Mike's mouths with warm, damp cloths.\n\nLiz was surprised to see Mai carefully remove her father's jacket, before placing it on a hanger. Then she commenced to massage his shoulders. Soo looked at Liz and asked if she too wanted a massage, Liz nodded.\n\nSoo's hands were deft, surprisingly strong and but gentle. Her fingers began by stroking Liz's shoulders, drawing inwards towards her neck. Then Soo began to explore knots of tension in Liz's muscles, working them out, it was painful at first but Liz could feel the benefit. Soon though, Soo's hands had slipped down to Liz's shoulders and she slipped the shoulder straps of Liz's dress off and down. As her arms and neck were being sensuously stroked Liz felt herself being more and more turned on by the beautiful Chinese girl's hands.\n\nLiz leaned forwards and Soo took the hint, reaching down and unzipping Liz's dress. \"Ohhhh! Fuck!\" That felt so good. Soo was now caressing the sides of Liz's breasts, easing them out of her half-cup bra, cupping them and teasing her nipples. Liz felt so good, the combination of food and sensual massage was overwhelming her. Then she felt Soo's lips graze the nape of her neck, gentle and intimate. The feather-light sensation -- wrapped as she was in the sensual world created by the Chinese girl's hands - actually made her orgasm.\n\nLiz glanced over to her father and saw that Mai had sunk to her knees between Mike's legs and now had his cock out and was lovingly licking it and sucking it deep between her red painted lips. Once again she felt torn by her feelings. Her father was relaxed, his dress shirt open showing his well-defined physique, his red bow-tie draped around his neck. He leaned back as Mai gobbled his hardness. Once again Liz was struck by her father's authority and poise, which she found strangely attractive, but she also felt a twinge of resentment that her father was being sucked off by someone who wasn't her mother.\n\nMike looked at her, across the short gap between them she saw the humour in his eyes and also approval as Soo moved between Liz's legs -- lifting her dress high up to show Liz's tiny black knickers.\n\n\"Dad?\" Liz asked him.\n\n\"Relax and enjoy, Liz, that's what tonight is about.\"\n\n\"Mum?\" Again a one word question.\n\nBy now Mai was sat on Mike's lap impaled on his hardness, milking him to orgasm as she worked herself forwards and backwards, rubbing her exquisite breasts in his face. \"Mum knows what goes on at Mrs Wu's and she's okay with it. Enjoy it baby, just enjoy.\"\n\nLiz gave a strangled groan, as Soo's tongue found her clitoris, \"Oh. Yes! Yes daddy, I willllll ohhhh.\"\n\nSoo's tongue was magical, Liz felt her pussy swimming in juices as Soo licked her forwards, backwards and sideways.\n\nOrgasm after orgasm rattled her, the Chinese girl's tongue was educated and persistent. She worked Liz's pussy expertly, and in a short space of time Liz had experienced two huge orgasms and then a string of several more. Liz was close to phasing out completely, dizzy with pleasure. As her hands flailed about she found her right hand twined in Soo's hair, pushing the girl's head into her pussy. With a shock she felt her father take her left hand, and hold it, his grip was firm and cool. His grasp provided an anchor.\n\nLooking across she saw him watching her, his cock limp and wet looking, Mai curled up in the chair next to him, her dad's arm around her.\n\nLiz let go of her father's hand and gently pulled Soo up from between her thighs. Taking the girls hands in both of hers and kissing them, she thanked Soo, before kissing her. Liz tasted herself on the Chinese girl's lips and deep in her mouth.\n\n\"Thank you so very much Soo,\" she told her, \"That was wonderful.\"\n\nThe Chinese girl beamed back at her, bobbing her head in acknowledgement.\n\nMai had helped her father dress, washing his slick cock with a fresh warm, damp towel. Soo helped Liz, still tingling from the oral attention -- wiping her pussy with a damp, clean cloth then drying it. Liz took her knickers and put the tiny scrap of fabric in her purse. Mai then helped Mike into his jacket. As he slipped it on he took two red envelopes from his inside pocket and handed one to each girl before bowing to them. They took the envelopes and bowed in return before leaving the room.\n\nThe door opened and Mrs Wu entered the room. Her father was just re-tying his bow tie, Mrs Wu walked up to him and batted his hands away before taking the glossy red cloth from him and tying it herself.\n\n\"You still wear this tie Mrs Wu give you?\" By way of an answer Mike leaned forwards and kissed her cheek. The tiny Chinese lady turned to Liz, \"You enjoy you first visit Mrs Wu's?\"\n\nLiz nodded, still not sure of her ability to talk. \"You come back soon, you always welcome here!\" At which point she drew Liz down and kissed her, before presenting her with a small gold brooch in the shape of a bird, the long curved tail feathers echoed the embroidery on her own black dress. She pinned the brooch on Liz's dress, who caught herself in a mirror and admired the brooch, which looked like it belonged there. \"This make sure you always remember you visit!\" Mrs Wu told Liz.\n\nLiz nodded -- she already knew she'd never forget this - as she bowed to Mrs Wu, who returned the bow, and the two embraced warmly.\n\nAs they left the dining room Mike laid a third envelope on the table and Mrs Wu led them down to the foyer.\n\nThe electric powered Mercedes whisked them through the rain back to their hotel. All through the journey Liz was still buzzing off the pleasure she had just received.\n\nBack in the suite her father handed her a glass of champagne from the bar. Outside lightning ripped across the sky over the bay, the insulating windows killed off the sound of thunder. It did however make a spectacular light-show.\n\n\"What was all that about?\" Liz asked when she finally trusted her brain to think straight.\n\n\"Did you not enjoy it?\" Mike asked.\n\nWell, yes. I did, but it was just_\" Liz gathered her bemusement \"I'm your daughter! It's not the usual sort of thing father's do with daughters?\"\n\n\"Why not?\" Her father looked her straight in the eye, \"If you were my son, I could take you. Hell! In some places it would be expected of me.\"\n\n\"But_!\" Liz sputtered.\n\n\"But what?!\" Mike continued. \"Everything you've told me about yourself, everything I have read, said to me you would enjoy something different like that.\"\n\n\"Yes, well.... but you're my dad and I'm your daughter. I'm definitely not supposed to be watching you get a blow job, and be fucked, let alone have my pussy licked while you're doing it.\"\n\n\"Why not?\" And Liz was stunned to find she had no good answer for him. Mike took her gently by the arm and kissed her forehead. \"It's been a hell of a long day, Liz, so I'm going to bed.\" He was laughing as he turned away.\n\nLiz was still buzzing but indignant, even more so as she didn't know whether she was annoyed or pleased at her father's attitude. Her father's amusement was the kicker, \"What?\"\n\n\"Kids! You think you invented sex.\" Looking at her slightly indignant glare he laughed again before saying, \"Okay we'll do the proper daddy-daughter thing tomorrow.\"\n\nThat night the sky over Hong Kong Bay and Victoria Bay was ripped apart as the lightning storm rumbled on for a couple of hours, Liz lay awake half-watching it and musing about the day's events. Partly it was the strangeness of Mrs Wu's -- which she was still convinced was some form of test. But for the rest of it her mind replayed the business meeting over and over. Her degree was in business studies and it had been a major buzz to put things she'd learned into practice. The biggest thrill had been when she had rounded on Mr Han and Mr Li. Fuck! That had been cool! Liz was beginning to understand why her father did this.\n\nA string of fleeting images flashed through her mind as she eventually dozed -- her father having his cock sucked, looking relaxed and strong, her father doing business, her father romancing Mrs Wu, Mai rocking back and to as she brought Liz's father to orgasm, the fire-cracker orgasms she had from Soo's tongue, even 'daddy's special kind of angry'. Liz remembered how strong he had felt when she had leaned against him or held his hand as she came at the restaurant. Her dad had always been there when she was a child but they had never been close and Liz was pleasantly surprised by the discoveries she was making about the man she called her father.\n\nThe morning dawned bright and dry and Liz rose refreshed, pulling on a robe she went out into the sitting area to find her father eating breakfast, looking out over the harbour.\n\n\"Morning lovely girl,\" he greeted her, \"Sleep well?\"\n\n\"Eventually.\" She told him, taking the lids off the dishes on the room service trolley to pick her breakfast. After he asked she told him how much she had enjoyed the business meeting.\n\n\"Enjoyed?\" Her dad asked.\n\n\"Yeah,\" Liz told him, pouring herself coffee, and reaching for some toast. \"I can see why you do it now.\"\n\n\"And why is that?\" Mike asked over his coffee cup.\n\n\"You get a buzz from it!\" She told him, \"That whole head of the family thing plus going up against players like Mr Li. It's really very cool father, very cool.\"\n\n\"Well, you got me.\" Mike laughed, \"Nailed me dead to rights. When I first started this it used to scare me shitless, but I guess I kind of got into it. Yes I do enjoy it, and the rewards are worth it.\"\n\n\"Can I ask you something?\" Liz asked over the top of her coffee cup. Mike nodded.\n\n\"Would we have gone to Mrs Wu's if mummy had been here?\"\n\nMike paused, wondering what had prompted the question. \"Quite possibly. Your mum's presence might have changed the options available, but substantially, it wouldn't have made that much difference.\" Surprised by his answer Liz wondered again what sort of things her parents got up to. No! That really was way too much to think about this early in the morning. She switched the conversation.\n\n\"Talking of rewards, did my daddy say he was talking his 'blessing' shopping? What's the plan?\"\n\n\"Well first thing I'm going to get measured for a couple of suits, round here they can zip up a good suit, like that,\" Mike snapped his fingers. \"If we get measured today, we can pick them up on the way to the airport the day after tomorrow.\"\n\nLiz was impressed. \"And then what?\"\n\n\"We're going to hit Causeway Bay.\"\n\nThe trip to Billy Lo's the suit maker's was another education for Liz. The car supplied by the hotel was theirs for the day and it delivered them to the tailor's shop. It was like no tailor's in England, part factory and part VIP lounge. Mike was treated like visiting royalty, Billy Lo himself -- an elderly Chinese man with white hair and a stunning pair of eyebrows, came from the back of the shop to greet him by name. The two talked for a few minutes like old friends, before Mike introduced Liz to Billy.\n\n\"So very pleased to meet you Miss Bailey,\" Billy spoke English with a very faint accent and his manner was gentle, but he regarded Liz levelly for a few moments. Suddenly he rattled out a sharp set of orders and Billy's horde of minion helpers flew everywhere, bringing chairs for the customers and tea and fans in the sticky heat of the morning.\n\nThere were already customers in the shop when they arrived but Billy started one of his minions measuring Mike, checking details against entries in a large book. There was much nodding, and approving hums as it turned out Mike was exactly the same size as he had been the last time he came to Billy's.\n\nNext came the bolts of cloth, a minion would appear unroll a length of cloth, Mike would feel it and either set it on one side or despatch it back into the shop. He had selected three bolts before a new one appeared -- a shiny dark silver-grey silk. There was a pause in the proceedings and Mike indicated that the minion should bring the cloth over to Liz. She looked at it, and looked at her father. She realised what he was suggesting. The idea of a silk business suit was appealing, \"But only if I can have one in that wool there.\" She pointed at one of the bolts of cloth next to Mike.\n\nMike smiled and nodded to Billy. Immediately Liz was whisked away into the depths of the shop where two more of the crowd of minions measured her and entered her details into the large book. When they brought her back to the front area of the shop her father and Billy Lo were drinking tea again.\n\n\"I can't believe I just did that,\" she laughed.\n\n\"I ordered you two of the wool suits, everyone should have a good business suit.\"\n\n\"Well now I need some silk shirts to match them.\" Liz told him, and the shop exploded again.\n\nFrom somewhere Liz was never quite sure where, more people appeared bearing shirts and underwear, both male and female for Mike's and Liz's perusal. The feeling of being visiting royalty was enhanced by Billy Lo standing at Liz's shoulder nodding or shaking his head with each presentation. The man had an un-erring eye for what suited Liz and a lovely sense of style.\n\nLiz leaned over to her father and whispered to him, \"This must be costing you a fortune.\"\n\n\"I tried to do this for your mother once and it fell completely flat. Let your poor old father dote on his lovely daughter.\"\n\n\"I get the feeling I'm trapped in that old film mum loves, that one with Richard Gere,\" Liz laughed.\n\nMike looked at Billy Lo, who asked him, with a straight face, \"Just how obscene an amount of cash are we talking about here? Profane or really offensive, sir?\"\n\nEqually straight-faced Mike replied, \"Really offensive.\"\n\nBilly looked at Liz, and grinned, \"I like him so much.\" It was beautifully comic. There it was again, Liz thought, her father was making jokes and laughing with people with humour that was common to them both. It was, she decided a good skill to cultivate.",
        "Billy was still laughing, \"Do you get that a lot?\" Liz asked him.\n\nBilly Lo nodded \"So many times but not as good as that\", he said pointing at her dad, \"Your father gets it just right. Would you like to look at shoes Miss Bailey?\"\n\nA collection of bundles were put in the boot of the car and Mike and Liz would have a fitting the next day at their hotel, ready to pick up the suits on the way to the airport. After that the driver whisked them away to the chaos of the Causeway Bay shopping district.\n\nThat afternoon Liz was exposed to shopping as she had never known it before. Many of the shop names were familiar from the British high street, but they were outnumbered by an eye battering array of other shops. Liz set about them with a will and her father stuck with her in this endeavour. It was, she realized something she could get used to, shop like visiting royalty, have her father pay for it, have the purchases picked up by the driver or forwarded to their hotel suite. Anything they did not take home in their luggage would be sent home to England by the hotel.\n\nBy early evening -- having spent what Liz thought must be an unholy amount - including some things she had insisted her father REALLY, REALLY needed -- they sat in the car as it slid through the insanity of the traffic.\n\n\"Are you dead set on going out for supper tonight dad?\" She asked.\n\n\"Not necessarily -- what were you thinking?\" Mike asked.\n\n\"I was thinking we could eat in the hotel or even see what room service have to offer. Why are you laughing?\"\n\nHer father paused in his amusement, \"The same thing happened on my first date in London with your mum.\"\n\nAfter she had gone to bed that night Liz stripped to just a pair of knickers. The bedroom was air-conditioned but Liz found the atmosphere close and it felt good to be naked. After an hour or so though she still couldn't sleep and went from the room to get some ice for a glass of water.\n\nAs she entered the shared lounge Liz realised that her dad was sat watching the lightning as another storm tore the Hong Kong sky apart. He had turned the couch round so it faced the window, and moved a foot stool so he could face the view, with his feet up, it appeared he had not heard her. Wearing just his pyjama bottoms and with a bottle of cold beer in his hand Mike was watching the dazzling rip and jag of the stormy sky.\n\nLiz looked at him, trying to understand how the man in front of her fitted in with the powerful, rich man she was travelling with and the man she called daddy.\n\nMike must have realised she was there. \"Do you want a beer?\" He asked, \"There's some good ones in the fridge.\"\n\nLiz took one and went and sat by him. Naked as she was she should have been self-conscious but wasn't. Having a pool at her mother and father's house meant that Liz and her family were used to seeing each other wearing very little, though she had not gone topless at home since she was a small girl.\n\n\"You know awesome is a very over-used word_\" he said, as another lightning bolt ripped the sky apart.\n\n\"But it is, isn't it?\" Liz finished for him.\n\nHer father looked at her and smiled. \"How are you enjoying it so far?\"\n\n\"Oh God, dad! It's been incredible. This. The meetings, shopping, Billie Lo's. Such a rush!\"\n\n\"Have you forgiven me for Mrs Wu's?\"\n\nLiz leaned forwards and kissed her dad's cheek, leaning against him afterwards, \"Of course I have, it just came as a bit of shock -- that's all. You didn't really take gan-gan Elizabeth there, did you?\" She asked.\n\n\"No.\" Mike told her as she drank from her beer bottle, \"She took your gran and me. She'd been there with great-grandfather John.\"\n\nLiz spat beer out in surprise, \"Seriously?\"\n\n\"Yep!\" Mike said with a smile, but Liz realised from his body language that that was all he was going to say.\n\nMike's arm covered her shoulder in a normal, fatherly way, and while he seemed to be ignoring her nakedness, as he did Liz realized there was a tension in herself. Where her shoulder touched her father's bare skin she could feel an electric tingle. She leaned back against his arm -- his strong, muscular arm, and suddenly the tingle was there too across her back.\n\nFor a few minutes Liz watched the lightning absorbed in the sensations she was feeling. Fuck, she thought to herself, she was getting aroused by her dad! Images raced through her mind - of Mike pumping his cock in and out of the Chinese girl's mouth, the image of Mike holding her own hand as she came, of her father calmly fucking his Chinese concubine for the evening as she was tongue lashed next to him. That her father could be such a sexual person had never occurred to her. But he was, and while Liz herself was often an aggressive lover, her father's assurance and quiet strength were something she found extremely attractive. Liz realised that it wasn't the coolness of the air-conditioning that was making her nipples stand out. Yet at the same as being excited by her feelings Liz was baffled.\n\nMike Bailey had been the head of her family all of her life. He was the centre -- not demanding, not domineering -- just being there running things. He was the ultimate authority, if Mike ever said 'No' that was it, no one in the household argued. He was often strict, but just as often loving, and for all of Liz's life that had been the word that described her family - loving. There had never been any suggestion of any impropriety, no wandering, no division. So how would her father react if she did put a move on him, would he respond?\n\nWithout a word Liz moved her father's left hand from her shoulder to her bare breast. Mike didn't say anything either but he did look at her, as he gently squeezed it, brushing his fingers across her taut hard nipple. Liz reached out with her left hand and touched his abdomen, laying her cool hand on his skin.\n\nLiz turned her head and kissed her father's shoulder in a slow open-mouthed kiss. There was a quite audible popping sound as she finished the kiss. Expectantly Liz looked up at her father only to find he was still watching the storm. This time Liz deliberately sought Mike's nipple as she kissed and suckled at it, before looking at him again.\n\nMike looked down at his daughter, \"Are you sure?\" he asked. \"Really sure?\"\n\nLiz nodded, and felt a thrill of excitement surge through her. As she kissed his bare skin again, Mike massaged her breast, this time with a firmer touch. Despite her nodded assurance, Liz was feeling a huge conflict inside herself, in one part of her mind she was an awkward teen and in another she was Liz Bailey now, today. In another part she wanted to throw her leg over her father and roughly fuck him with the lightning filled sky behind her, but she also wanted her father to take her firmly but gently. Liz wanted to be top, but, she realised, it would be more Mike's style to own her, if she let him that she was sure. She would not be owned like a cheap harlot, she knew her dad well enough to know he would never treat any woman like that, but he would own her. It was up to her to decide if she wanted him to let him.\n\nThoughts of family had gone temporarily, her mother forgotten -- as the light from the lightning arcs flickered across their couch there was only the here and now. Liz's father drew her to him, brought her up on his chest and wrapped his arms round her.\n\nHis hand slid down her back and he pushed his fingers inside the waistband of her knickers, his strong hand massaging her arse, first one cheek then another, while other hand held her face, her chin positioned in the palm of his hand and they kissed. Liz was amazed at just how good a kisser her dad was. He would kiss gently, lovingly, then vary it with hungry, ravenous kisses. He would take tender little pecks and stuttering butterfly kisses before he would bite and maul at her mouth as if he actually wanted to consume her. And all the time he lay quite still, apart from his strong hands caressing and stroking her firm bottom, while Liz sprawled across his body.\n\nBy now her knickers were falling down her thighs, Mike lowered her back to the couch and stood up, a noticeable bulge in his pyjama bottoms. He offered his hand to his daughter and she took it as he led her towards his bedroom and the waiting bed. Liz's knickers fell to the floor by the couch and the forgotten beer bottles.\n\nIn her dad's room, also lit by the storm, Liz took a deep breath as she started to undress her father. She knelt and untied the waist of his pyjama bottoms, the silk hissed as it slid downwards and Mike's cock appeared. Not massive, it was a good size and thick, but before she could lean forwards to it Mike had reached down and lifted her to her feet. Liz knew then that - as she had suspected -- her father would take the lead, set the pace and decide the direction that things would go in. She knew she would be safe, already she had a feel for her father as a lover, strong, not inexperienced much to her surprise, not at all vanilla, he would see her satisfied before he finished. This put him in front of most of her recent male lovers.\n\nIdly Liz wondered if this had been planned, as a seduction, first the trip itself, Mrs Wu's, the amount he had spent on her out shopping - now this. But she realised that her father had made no overt moves of his own, had inaugurated nothing to justify her thoughts.\n\nStanding about the same height the daughter and her father kissed, hands roaming all over each other's bodies. Liz's thoughts ambled onwards -- she had no qualms about shagging her father and the firmness of the erection pressed against her belly was a clear sign that Mike felt the same way about his daughter. It was strange, she turned the idea over in her mind as they continued to kiss, here was her father the head of the company, scion of the family, master of the house kissing with her like new young lovers.\n\nLiz drew Mike backwards, bringing him towards to the bed -- her father resisted slightly at first before allowing himself to be brought to the crisp white linen. Mike regarded his daughter in the light of one brilliantly white flash of lightning, she really was a stunning figure of a woman, before lowering his head to suckle at the breasts that had been so inviting in the first place. It would have been natural for him, he realised, to want to lead, to take control, to love his daughter the best way he knew. But equally true to himself Mike wanted to know something else as well, he wanted to know how it would be if Liz took the lead.\n\nSuddenly Liz raised her hand and lifted her father's head off her breast. \"What are we doing?\"\n\n\"I thought you were sure. I asked if you were certain.\" Mike told her.\n\n\"I was, er I am.\" Liz stammered.\n\n\"So?\" her father asked.\n\n\"I want you.\" She whispered to him, \"And I don't understand it. You're my father, I love you, but I want you too.\"\n\n\"Is that impossible?\"\n\nLiz could see his face in the light from the window, but Mike gave no sign of what he was thinking. \"It's not normal, it's taboo...\"\n\n\"But you still want to do it?\" He asked her.\n\nLiz nodded, \"Yes,\" she whispered.\n\n\"So?\" That question again. Lightning flashed. His hand caressed her breast again, his thumb pressed against her nipple, coaxing it back to fullness.\n\nLiz's eyes closed with the feeling, \"Ooooooohhhh yes!\" She moaned.\n\n\"We're each of us many different people Liz, and they're all inside us just waiting for a chance to emerge, sometimes they're people no one else ever sees.\" Mike told her speaking quietly in her ear. \"The secret is to choose the person for the moment.\"\n\nMike's mouth moved down Liz's throat, finding the hollow of her neck where it met her shoulder, all the time stroking her nipple with his thumb. Suddenly Liz's passion flared and she brought her legs up, wrapping them around his hips. Her long elegant fingers stretched wide as she pushed his shoulders down to the mattress, and she could feel his hardness nestling against her. Quickly she wriggled herself back onto that hardness, feeling its length up inside of her. Settled and wanting to enjoy this, Liz pressed Mike down to the mattress. She was being naughty, deliciously naughty, sinful in a way she had never ever thought to explore. She was exploring and blasting past taboos, Elizabeth Jane Bailey was going to rock her old man's world in a way he had never known.\n\nLiz settled herself down on her father's erection -- on her daddy's cock she told herself. Squeezing herself onto it, milking his cock as she rocked slowly back and to on the hardness, the hardness that belonged to her father.\n\n\"Oh daddy!\" Her moan was drawn out and originated down in her abdomen. Mike raised his hands and squeezed and kneaded her breasts, bringing them together he raised his head and licked and sucked on them. Liz moaned at the touch of his lips, her breasts were always supersensitive when aroused. And Mike tackled them enthusiastically -- sensing Liz's response. She writhed as she lowered herself down, grinding her pelvis slowly into his, feeling -- and loving that feeling -- his cock penetrate her fully.\n\n\"Mmmmmm, yeah, so good!\" She squealed, \"Ooooh, fuck me deeper daddy!\" Again and again Liz sank down and ground her hips around the base of her father's hard prick. Mike's hips responded almost instinctively, lifting to meet Liz's downwards thrusts. Liz was enjoying this, her father was a good partner, but she was ready to go to the next level.\n\nLiz's movements became more energetic, as she rose and fell, Mike slid his hands down to her hips, to steady her. He watched her unrestrained breasts bounce. His daughter had a wild, ecstatic grin on her lovely face, which made him smile too as he slammed upwards to meet her.\n\nSoon Liz could feel her orgasm building and she varied her movements as she sought to grind it out of their union, pushing up and down and rotating her hips on the down stroke. Mike knew her climax was close and continued his vigorous thrusts, making Liz work to gain her reward. When it hit her, the sensation was so strong Liz had to stop her movements and let it take over. Falling forwards she managed to get her hands onto Mike's chest, as her head fell forwards -- hair framing her face, as she started to shudder and the orgasm ripped through her. Starting in her pelvis and spreading up through her torso and shaking her like rag.\n\n\"Oh fuck yeah! Fuck! Fuck! Fuck! Fuck, yeah!\" Liz's muttered litany punctuated her cum, as with each tremor of her orgasm she rocked back and to.\n\nMike eased his movement to let Liz recover herself, backing off the energy of his thrusts but not letting his daughter off the hook just yet. Liz for her part recovered quickly though she felt several after-shocks as she sat herself up right again.\n\n\"Shit dad, if I had known you could fuck like this -- I would have done this earlier. Shit!\" She exclaimed as another cum shook her.\n\nMike laughed, urging his daughter to one side so they lay facing each other on the bed. Liz's leg lay on top of his hip now and he stroked her smooth thigh as he continued to fuck her -- much more gently now. \"It must have been the storm,\" he told her. \"Remember how excited you used to get when you were a child?\"\n\nLiz laughed with him before she leaned forwards and kissed him deeply, trailing her hands across the skin of his chest, caressing his abdomen. Recovered from her own orgasm Liz stretched her legs, circling Mike's waist with them, pulling him deeper. Mike too had recovered past his 'crisis' and was ready to do more.\n\nKissing his daughter back with equal ardour he rolled Liz onto her back and lifted her hips, dragging a pillow to place it underneath them. With Liz comfortable he lifted both of her ankles and used the better access to drive deep into his daughter's slick, wet pussy.\n\n\"OH! Shit! Yesssss!\" Liz hissed as Mike pushed into her. He paused, pressing himself against her bare pubis, feeling her pussy contract around him. Liz was milking him with her inner muscles, squeezing him, and massaging his cock. Mike turned his head and kissed his daughter's calf. Gently he kissed her flesh, lovingly, each kiss an affirmation of his love and his passion.\n\nQuietly he moaned as he kissed her, Liz felt the vibrations of his moan buzz through his lips and into her flesh. It was as if the moan travelled through her, as without warning Liz echoed her father's sound as and a low throaty moan burst from her lips.\n\n\"Ohhhhhhhhhhhh!\" Liz rolled her head back, loving the feeling of her father's lips. She flexed her legs, taking them out of her father's hands, before wrapping them around him again. With one leg over the other she locked them together at the ankle and pulled Mike in tight, holding him in place. Constricted as he was, her father responded by making smaller motions, working his hips not just back and to but adding in other motions to stimulate his little girl.\n\nDespite Liz's legs clamping his hips hard to hers Mike was working hard at fucking his daughter, and soon he felt his orgasm building. Lowering his head he nibbled at Liz's nipples, seeing her writhe with pleasure, and slowly, perfectly aware of what he was doing her father stopped moving his hips. His finger slipped between them finding Liz's clitoris. Liz -- at first baffled by Mike's cessation of movement, welcomed the probing finger. She flexed her hips, maintaining her grip around Mike, allowing his fingers to find her slick, slippery pussy lips, and inevitably her erect and supersensitive clit.\n\nIt did not take Mike long to achieve what he wanted and soon he was hunched over Liz who had fallen backwards onto the bed, unclasping her legs, her hands grasping for and tangling in the sheets as her father played her like an instrument. A touch more pressure and Liz was jolted by the short sharp body wracking shock of a cum. This went on for some moments before using his fingers to slide in and out of Liz's pussy Mike ended her wonderful agonies with a delicious orgasm that much gentler than those he had inflicted on her before, but it was also much stronger, so strong in fact that for a while Liz lost track of things.\n\nLiz came to, wrapped in her father's arms. She lay quietly for a second, eyes open, noting the storm still flashing across the sky. Her father's left arm lay under her cheek pillowing her head. His right hand rested on her hip and Li's body rested against him, both of them partially covered by a sheet.\n\n\"How long was I out?\" Liz asked not knowing whether Mike was awake or not.\n\nThe answer was immediate, answering that question, \"Only a few moments. That last one hit you pretty hard.\"\n\nLiz grunted, Mike looked over her shoulder at her, \"What?\"\n\n\"I was going to rock your world,\" she told him, \"And instead you rocked mine. Seriously daddy, if I had known ... Oh My God! You're still hard!\"\n\nLiz's hand found Mike cock, still hard, still sticky from her juices, \"You didn't come yet?\"\n\nWithout waiting Liz wriggled round and slid down the bed, not letting go of Mike. He rolled onto his back, and let Liz position herself sprawled across his thighs pressing her daddy's cock to her lips and licking it up and down. Liz marvelled to herself at her old man' stamina as Mike lifted himself up on his elbows to watch.\n\nIf such a conversation had ever taken place Liz would have said of herself that all things considered she loved a nice cock. Women, she'd have told you, are wonderful -- soft, warm, delicious and incredibly sexy. Liz loved women and delighted in each one she made love to. To her a woman as a lover is a banquet to the senses and everything a sensual woman could want. But then, she would say, who can live solely on banquets. Cock -- hard cock, long cock, softening cock, chubby cock, lean throbbing cock, pounding cock, slippery sliding cock, slick cock, penetrating cock and best of all spurting cock -- was what it was about. Her father's cock, the cock that had helped make her, fitted her hand beautifully as she washed it with her tongue, wanking it gently at first.",
        "\"You have such a lovely dick, daddy,\" she cooed between licks, \"Such a nice one. I'm going to love it, and squeeze it, lick it and suck it and gobble it until I get all that lovely cum to spray all over your little girl's face.\"\n\nLiz looked at her father with her best sex kitten face. Mike laughed, Liz laughed with him, they both knew it wasn't her, but that was okay. They both appreciated a lover who could make them laugh as well as scream in passion. And Liz was enjoying her father as a lover. His maturity wasn't an issue - the hard cock in her mouth was proof of that - but his consideration, his skill all combined to make him a superb lover.\n\nSoon her mouth and her hand working on Mike's cock were starting to have results, his hips began to lift and he placed his hands on Liz's head, holding her in place as he started to fuck her mouth. Liz felt the pressure of his hands but it felt right, the pressure was not oppressive but it did let her know who was in control as Mike's orgasm came nearer.\n\n\"On my face daddy, on my face.\" Liz gasped as her head bobbed up and down, her hand twisting and caressing her father.\n\n\"Here it comes beautiful girl!\" Mike grunted.\n\nAnd come he did, gooey cum splashed all over Liz's waiting face, as, mouth open, she waited for the hot cum. Mike came, his left hand holding Liz's head in place as he himself urged his cum out.\n\n\"Mmmmmmmm! Fuck! Thank you daddy!\" Liz said as his orgasm started to subside.\n\n\"Oh!\" Liz squealed as Mike leaned forwards and started to lick the cum from her face, depositing it into her mouth with his tongue. \"FUCK! That is so hot!\"\n\nSoon Mike had cleaned her face and she returned the compliment by cleaning his face of any stray semen. Finally she fell back onto the bed.\n\nMike lay down next to her, drawing the sheet over them. Liz looked at him. \"Fuck me that was something else!\"\n\n\"Did you enjoy that?\" Mike asked, hugging her to him.\n\n\"You are something else.\" His daughter told him, Mike smiled gently, \"Seriously dad, that really was awesome.\" Without warning she yawned.\n\nMike leaned forwards and kissed Liz, \"Try and sleep we've got a busy day tomorrow.\"\n\nLiz rolled to her side snuggling her bum back into the curve of Mike's body. Through the windows the lightning storm was easing off, the flashes decreasing in frequency, and Liz had a little time to regret that they could not hear the thunder through the double glazed windows before the long day and exertions of the evening caused her to slide into sleep.\n\nAt one point in the small hours Liz woke, her father was asleep next to her. The storm had gone but in the light from the windows she watched Mike sleep. He was very still, his breathing rhythmic, the sheet just covered him, leaving his stomach and torso exposed. Liz marvelled that this was her father sleeping next to her. It was as if another person had suddenly started to inhabit her father's body. He had so many of her father's behaviours and values, the calmness, the consideration, his humour and his strength. But this stranger was strong too, passionate and sexually skilled -- so many things she had never imagined her 'old man' was capable of. Her father wasn't a crazy 'wild' lover, but that wasn't always what was wanted. No, someone who could satisfy a girl, that was what was you needed, and her father? Fuck, could her dad satisfy a woman?\n\nHer hand started to caress his chest, sliding down towards the edge of the sheet. Daddy's cock lay on his thigh. Liz took in her hand and started to stroke it, feeling it stiffen under her touch. She took it in her hand enjoying the feeling of its soft skin and the rapidly hardening shaft. To encourage it to stiffen further Liz stroked Mike cock in the cruck of her finger and thumb, wrapping her fingers around it and slowly, firmly drawing the flesh up and down.\n\nMike stirred groaning softly as he became aware of her attention. \"Mmmmm that is so good lovely girl.\"\n\nLiz knew where this was going next so she swopped around on the bed and stretched out next to her father and resting her upper torso on his thighs. Lowering her head she drew Mike's cock towards her mouth. This time Liz was less intent on making her father cum, instead she was going to make this a blowjob to remember. She licked the shaft slowly, her long, skilful, educated tongue laving Mike's flesh from the base to the tip and back. While she worked and her father's hips responded, lifting up and down in response, Liz took a moment to look at his cock.\n\n<br> It was a very nice cock, firm, well-shaped, a good size and girth. It fitted her hand nicely and she already knew from experience that it fitted her well, without being uncomfortable or disappointing. Liz stopped suckling it for a moment, and used her hand to slide Mike's foreskin back and to a couple of times, but the urgent motion of her father's hips suggested it was time to get back to what she had started.\n\nThis time Liz pressed the head of Mike's cock deeper and deeper into her mouth and throat. Opening her throat she felt the head slip past the back of her tongue. She had done this before -- several times, more often than not when playing with her friends and a large dildo, now the daddy cock (as she thought of it) was just the right size and she felt it fill the top of her throat.\n\n\"Mmmmmmmmm! Oh! Fuck! Yes!\" Mike bucked at the feelings, his back and head coming up off the bed as Liz swallowed his cock. Liz drew her head back, letting the hard cock slide forwards across her tongue and through the gentle friction of her lips. Pausing momentarily Liz pounced and gobbled Mike's cock noisily, wetly worshipping it with her mouth and fondling his balls gently with her fingers.\n\nSuddenly Liz felt Mike's hand on her arse, sliding across the soft skin and down between the rounded globes of her bum. Mike slid his fingers across her anus and down to her full, wet lips. His strong fingers slipped inside.\n\n\"OOOMMMPH!\" Liz squealed around her father's flesh as Mike's fingers entered her. But Mike's other hand, gently resting on her head kept her at work. As she sucked and licked at his cock, Mike started to finger fuck his daughter. The pressure from her father's hand on her head lifted, but the message was clear -- carry on doing that -- so she did. And she licked and sucked, and gobbled and suckled and slurped. She licked up and down and around, swirling her tongue around the head of daddy's cock and dipping her tongue into the slit of his urethra.\n\nLiz knew she was doing a good job from the motion of her father's hips and legs under her, and Mike's educated fingers slid in and out twisting and twining in and out and in and out. Liz drew his cock from her mouth and gasped as a sharp orgasm shook her, she groaned softly as she bent to Mike's cock again, and still his fingers touched and teased her.\n\nHaving found that 'sweet spot' Mike kept working it and Liz was treated to cum after cum after cum, each one sharp and separate, not massive orgasms but they shook her, making her pause in her attention to his cock. After several minutes of this, despite her attempts to make him stop, Liz had lost count of the number of times Mike had made her cum. Satisfied with this he allowed her to finish him off.\n\nAs she sucked his cum down, swallowing her father's seed Liz realised that, as she thought he would, Mike was the one who controlled this relationship. Licking the daddy cock clean, she was surprised to find that she was okay with this, it was very much his nature to be in control -- she realised that, understood it. And it wasn't like he abused his position, far from it, her father had owned her, and in that ownership he had made her feel very good. Wrapped in her father's arms, her bum pressed back into him Liz slept again.\n\nSometime in the early hours Liz woke and lay half-asleep going through the events of the last twelve hours in her head. Recalling her what she and Mike had done, her fingers strayed to her pussy and soon she was jilling herself, enjoying the feel of her fingers against her clitoris. But she had not been doing so for very long before her father's hands replaced hers. Soon he took his hands away and Liz found herself lying back as Mike took her. Whereas earlier they had made love, this time it was a fuck, and Mike fucked her hard. Once again he made sure that Liz had come - and she came hard, again - before he finished but having done so he continued fucking his daughter before cumming hard deep inside her.\n\nFilled with her father's seed, having had several intense orgasms Liz Bailey slept again.\n\nThe next morning Liz felt well and truly fucked. She lay in her father's bed, naked, sprawled on top of the sheets. She would never have believed her 'old man' -- she had gotten a mental image of him being old at fifty. Oh yes, she told herself, she was going to have to park that idea, Mike was not 'old', he had proved that.\n\nLiz remembered they were coming to do fittings for the suits they had bought, so she quickly showered and donned a pair of shorts and a singlet.\n\nMike was already seated eating breakfast in front of the windows where they had watched the storm the night before. Liz was taken aback for a second -- as she approached her father, full of love from the night before, and eager to just touch him again, it did not look as if he felt the same. Mike was dressed casually -- for the fitting -- but he looked as if the night before had not happened. Certainly not like he had been up most of the night fucking his daughter.\n\nHowever he rose from his seat and reached out to greet her, and as soon as she felt his arms around her and she pressed herself against him, she knew. She knew that he loved her, and that the passion of the night before was still there. She could feel it as his arms wrapped her, and how he pressed her to him, and the swelling that pressed against her belly. Her father had always loved her - that she had known - but she recognised the sexuality and sensuality of his embrace. However Liz Bailey was not unintelligent, she knew her father was not going to suddenly turn into a blushing lover, he was a successful business man, and she recognised that he was compartmentalising the things which were happening. The tailors were due to visit soon and not long after that he would be concluding a multi-million pound business deal. This was his game face, though she could not help wanting to kiss it.\n\nWhich she did.\n\nAnd which Mike responded to.\n\nLiz realised they couldn't do this now, and at the same time as her father she broke the clinch. \"Later,\" Mike told her.\n\n\"I know,\" she smiled back, \"Game time!\"\n\n\"That's my girl!\"\n\n\"Daddy?\"\n\n\"Yes Liz?\"\n\n\"Last night was wonderful, I'm a little sore.\" And unbidden a picture of her mother entered her mind.\n\n\"What is it?\" Her father asked immediately seeing Liz's face change.\n\n\"Mum.\" She said simply.\n\nMike took Liz's hands in his and brought them together in front of her. \"Liz -- do you trust me?\"\n\nLiz nodded. \"Of course.\"\n\n\"Then trust me if I say don't worry about your mother.\"\n\nLiz was just wondering what he meant by this when the phone rang and the concierge announced the arrival of Billy Lo and his minions.\n\nThe next hour was a whirlwind of fitting, changing suits, more fitting and a hurried breakfast snatched between measuring tapes, tailor's chalk and pins. Billy placed himself in the middle of the suite and directed the actions of his assistants. There was something of the wizard in his action as he quietly guided the measuring and trimming -- though Liz was impressed how little there was of either, mainly it was a case of adjusting the final fit. Billy's sharp eyes saw everything, and at the end he nodded as if to say 'done'. More than all of the shopping they had done the day before Liz felt that this was a deliciously indulgent way to buy clothes. Having the tailors come to their hotel suite really did make her feel like visiting royalty.\n\nWhen the tailors had finished Billy assured Mike that the suits would all be ready tomorrow in plenty of time before Mike and Liz left for the airport. And Liz was quite happy to believe they would be, then almost as quickly as they had arrived the tailors were gone.\n\nStill excited from the tailor's visit Liz grabbed some juice before heading to the shower, her last conversation with her father before Billy's arrival temporarily forgotten.\n\nThe meeting with the Chinese business man Mr Li and his company was very formal, more formal than Liz had expected, however she was discovering this about Hong Kong. For all the technology -- and there was a lot of tech about, from talking, self-cleaning toilets in the hotels to 3-D projection screens advertising in the streets, even mini ones in the car that had brought them from the airport -- Hong Kong clung to certain 'old worlde' values. And this meeting was no exception. The heavily wood panelled, air conditioned meeting room was dominated by a table the size of a Kowloon Harbour barge. Eighteen seats in a deep red leather surrounded it (though only eight of them were currently filled).\n\nAll of the men and women already seated wore business dress. Liz had packed -- on her mother's suggestion a dark stone coloured linen suit, with flat sandals, she wore a very dark green silk shirt underneath it, accessorising it with a set of her mother's pearls and some of the gold jewellery she had inherited from her great-grandmother.\n\nHer father also wore silk this time, a dark grey silk business suit -- from one of his previous trips to Billy Lo's, like the one's he had ordered the day before this was very much a traditional western cut, worn with a white silk shirt and dark blue JE Group tie -- the tie had the group monogram -- the letters J and E intertwined, done in gold thread.\n\nAs they sat down next to Tony Feeney, an assistant handed them a small over-ear headset (for translation). Two more assistants (Liz decided they were too well-dressed and all-together too focussed to be minions) brought in large flat screen tvs.\n\nThe introductions were made -- and this was made a lot easier by each delegate's name appearing in English and traditional Chinese script in an acrylic block in front of them. Liz made a note on her tablet to copy hers down -- it did look very cool. Just then one of the assistants came round with a small gift - of the type that is traditionally exchanged at functions like this - for them. A short demonstration showed them that what appeared to be a pen, when pointed at one of the acrylic blocks would take the information, and when pointed at the user's tablet write the delegate's name -- in both forms, their email addresses, social media connections and add a profile picture.\n\n\"I hope we got them something as cool as this!\" Liz whispered to her father.\n\nTony signalled one of his assistants who brought in small boxes for the delegates which contained the delegate's name in Chinese pictograms in gold.\n\nNext a second assistant wheeled in a small machine. Taking a small coil of gold wire she pressed several keys and Mr Li's name started to appear on the 3D printer. \"Normally we would have to use a gold powder and layer it up, and then melt it -- the term is sinter it -- with a high temperature laser. This is a lot simpler and uses a coil of wire in any grade you want twelve, sixteen carat or twenty-four.\" Mike told her. \"It won't ever take the place of a good jeweller but it's pretty cool eh?\"\n\nLiz had to agree, as did Mr Li and all of the Chinese delegates.\n\nThere was much beaming and clapping all around the table. But then that was it, for the next two hours all the smiling was just cover, it was down to hard bargaining. Liz was following it through the translation on her headset -- which was almost simultaneous, and she realised that really -- when it all came down to brass tacks -- what was going on was haggling. Okay, she thought, the language wasn't quite as colourful as some she had seen, at no point did anyone say \"You're 'aving a giraffe! Bung me a monkey and we're square!\" but she sensed they wanted to (transl. \"You are having a laugh! Give me \u00a3500 and we can make a deal\"). The Chinese seemed to want a huge reduction in the price -- playing for a reduction in the penalty clauses attached to the contract. But no one from the group was moving on that. There was room for movement around the number of individual user licenses, but the penalties were solid. Tony Feeney did most of the work, but occasionally he would look at Mike as if for guidance. That was when Liz realised how much Mike was controlling what was going on.\n\nShe switched from watching the main action, listening to the Chinese arguments with half an ear, following it in the background. Instead she watched her father, seeing him at work. He was, she saw, very calm, very still, as he watched and listened. Occasionally he would look something up on his tablet, and sometimes he would send an instant message, Liz thought they'd be aimed at Tony, and when she saw Tony look down and clear something off his tablet she knew that was how they were doing it. The actual looks between the men were unnecessary, Tony had his instructions by tablet. Liz wasn't in the loop for these messages -- her dad had explained that he wasn't keen on a general connection to prevent eaves dropping but somehow he and Tony were staying in touch. Once again Liz realised there was so much she could learn from her 'old man'.\n\nLunch was a buffet with a strong Chinese element, Mr Li immediately made his way over to see Liz, \"Miss Bailey, so nice to see you again, has your visit to Hong Kong been everything you hoped for?\"\n\nOnce again Liz was struck by Mr Li's voice, deep and melodious. She smiled warmly, \"Yes it has, thank you - everything and more.\"\n\n\"You are enjoying it?\" he asked.\n\n\"Immensely. How could I not? There's so much to see, and Hong Kong is so vital. And the shopping...\"\n\nMr Li smiled, \"Your father is truly blessed to have a daughter such as you.\"\n\nLiz waved his compliment away, \"I'm just my father's little girl.\"\n\n\"I am afraid you're altogether too modest Miss Bailey. If you ever want a job...\"\n\n<br> \"Are you trying to tempt me away from my father, Mr Li?\"\n\n\"If you like.\" The big man smiled shyly, \"Miss Bailey -- the issue is this, for many years here in China we have placed far too much emphasis on boy children. It is true that many more young ladies are coming up through our education system, but where boys have learned business through being involved, we need a way for our young ladies to experience the same sort of thing.\n\n<br> \"May I speak frankly Miss Bailey?\" Liz nodded and Mr Li went on. \"I have two daughters of my own. They are good girls, still in school. China has changed much in the last 30 years -- since Dong Xiao Ping we have had many more chances dealing with foreign companies, but I worry that there will not be the chances for them that you have enjoyed.\"\n\n\"I am in a special situation-- my father owns the company, but the situation can't be that bad, Mr Li?\"\n\n\"Perhaps not that bad,\" Mr Li nodded. \"But I am sure someone like you -- or your father - could teach them so much.\"\n\n\"I'm sorry Mr Li, I have a feeling I'm going to be busy for few years yet. But I'll keep your offer in mind.\"\n\nHe offered Liz his hand which she shook, and they bowed as he said, \"If you ever change your mind, Miss Bailey, please call me.\"\n\nMr Li had no sooner disappeared back into the busy room than Liz's father appeared at her side.\n\n\"Everything okay?\" He asked.\n\n\"Mr Li was offering me a job.\" Liz smiled as her father's eyebrows shot upwards. \"Seriously. But I think he said something interesting.\"\n\nQuickly she explained the conversation, and impressively her father picked up her line of thought. After a moment he waved Tony Feeney over to join them. It took Mike seconds to explain his thoughts.",
        "Feeney looked at them both, one and then the other, \"Seriously?\"\n\nThey both nodded. Tony Feeney scratched his ear, \"Yeah. It's got possibilities. Obviously there're technicalities to work out but what it says to me is Mr Li is looking westward and looking for opportunities to train his people. It's something worth exploring.\"\n\nMike went off to find Mr Li, and lunch was extended. However by the time that business was resumed a letter of intent had been scribbled out -- and was now on display on the big screens -- that the JE Group would join Li Industries in a mutual training/intern programme. Both sides would send trainees to work in the other's organisations where they would learn business skills, and develop cooperation and other links.\n\nThat brought the proceedings to an unexpectedly early close. It was agreed that both parties were happy with the overall contract, the Chinese agreed all the points they had been haggling over earlier and the penalty clauses were pretty much left alone, but an extra number of user licences were allowed. The internships would need some settlement, but Tony Feeney would work on the details of that.\n\nThe meeting broke up mid-afternoon, and Mike took all of the Group's people who had taken part in the meeting out for a meal.\n\nIt was a nice restaurant and the food was fabulous, though not as good as -- or as exciting as - Mrs Wu's, but although Liz enjoyed it she really wanted to be alone with her father again. The day had been exciting, for a young business graduate it was a life class in doing a deal. The fact that Mr Li had approached her was something she turned over and over as she ate. Liz would have liked to have been seated next to her father but the seating arrangement wouldn't allow that.\n\n\"I'm not sure he was offering me a real job,\" she told her father as she thought about it.\n\n\"I agree,\" her father told her, \"Li didn't want to make a direct approach about his idea, but you picked up his hint and from that we could make an offer to talk. Sometimes people go all round the houses to avoid the obvious.\"\n\n\"Why is that?\" Liz asked.\n\n\"To a guy like Mr Li offering an opening like that might be seen as a sign of weakness -- especially when we were haggling over the 3-D software. On the other hand if we come up with a 'sweetener' like the internships, he looks like he has pulled off a coup.\"\n\nMike looked at Liz's face, who wore a look of disbelief. \"Seriously?\" She said.\n\n\"Seriously!\" He told her, \"It's all part of the game.\"\n\n\"And if you don't mind me saying_\" Tony Feeney chipped in, \"You're a damned good player Liz. The tell at the informal meeting and recognising the 'in' at lunch.\"\n\nMike smiled his agreement at her, and Liz was surprised at how good that made her feel. She wanted even more now to get her father alone.\n\nEventually as the evening storm closed in on the soaring towers, Tony and his two assistants said their good byes and they were whisked away in cars at Mike's expense to make their way home. Liz was eager to get going.\n\nBack in the hotel room she almost couldn't wait, but once again Mike set the pace. He smiled at his daughter who was almost vibrating with excitement. Mike poured them both a drink and made her sit down.\n\n\"Do you remember what I told you this morning?\" He asked.\n\nLiz looked at him as she tried to remember what it was he was asking.\n\n\"I told you not to worry about your mother?\"\n\nLiz nodded. \"Before this goes too very much further there are some things we should get sorted.\" Mike wrapped his hand round Liz's and brought it to his mouth, kissing the back of it and working his way to her wrist.\n\n\"You'd better stop that, if you want me to concentrate.\" Liz told him breathlessly.\n\nMike lowered her hand but maintained his grip. \"How was last night? Did you enjoy it?\"\n\n\"I think you know the answer to that!\" Liz told him, leaning forwards to kiss him open mouthed.\n\n\"Mmm!\" Mike murmured as he broke the kiss, \"I guess I'm making sure that we're okay now our relationship has changed?\"\n\nLiz nodded, \"Very okay -- daddy.\"\n\nMike smiled, and he leaned forwards this time and kissed her, taking her head in his strong hands and pressing her mouth to his, it was a claiming kiss, he was taking her as his. Liz realised this and knew this was what she had waited for him to do.\n\n\"We will do it again, won't we daddy?\"\n\n\"Oh yes! My lovely girl, and again,\" kiss, \"and again,\" kiss, \"and again.\" Kiss.\n\n\"But what about mummy? Do you love her?\"\n\n<br> Mike looked at her almost surprised by her question \"Of course I do, lovely girl, and she loves me. Your mum and I are still very much in love, we tell each other every day. But it's a relationship with lots of room.\"\n\n\"What do you mean 'lots of room'?\"\n\n\"Yes, well, the thing is this...\" And Mike told Liz how he had been summoned to Thrallthorpe on his twenty-fifth birthday, and played a video that from his grandfather explaining that he had inherited the group.\n\nLiz looked at him, the level of passion in her eyes slowly waning, 'til finally she said, \"But I know all of this, dad...\"\n\n\"But what you don't know,\" her father went on immediately, with a twinkle in his eyes, \"Was that there was a second video bequest. You great grandfather John was a dom and he had two submissives, which he left to me.\"\n\nLiz's eyes shot open. \"SERIOUSLY!\"\n\nHer father sat upright and nodded. \"Seriously.\"\n\n\"Who were they? Did I know them? Did we ever meet?\" Liz asked stunned and curious and excited and just plain gob-smacked by this revelation.\n\n\"You do know them\". Mike said simply.\n\n\"Were they women who worked for him?\" Liz went on in a rush.\n\n\"No.\" Mike paused, \"They were a bit closer to home than that.\"\n\nLiz looked at him non-plussed.\n\n\"Your Gran and Gan-gan Elizabeth.\"\n\nFor a second Liz felt deprived of breath. A huge ball of something - part excitement, part breath, part just plain startlement sat in her throat. She tried to swallow but nothing was working.\n\n\"Gran? Gan-gan?\" She squeaked. Mike passed her champagne glass to her, she swallowed it greedily.<br> <br> \"Seriously?\" Liz asked\n\nMike nodded again, \"Seriously.\"\n\n\"Fuck! Wait!\" Liz lowered the champagne flute abruptly, \"You said dom! You're a dom as well? You tied Gan-gan up? And whipped gran?\"\n\n\"Well generally it was the other-way round -- tying Gran up and beating Gan-gan's arse - but yes, that sort of covers it.\" Mike was smiling, he was used to self-assured Liz, but this 'rabbit-in-the-headlights' daughter was different, fun even.\n\n\"Fuck!\" Liz reached for the champagne bottle and poured herself more the bubbling wine, gulping it down. It was definitely a NO SHIT DADDY moment.\n\n\"A dom! Ferfucksake! And where does mum come into all of this?\"\n\nHer father told Liz about how he had been interested in her mum when they had worked together and how he had pursued her once he had taken over the group, and in the process found out that she too had an interest in BDSM.\n\n\"Mummy too? You are shitting me?! Mummy?\"\n\nMike nodded his head, laughing gently, however he could also see that Liz was starting to get her head together. That was good, he thought, she would need that in business.\n\n\"So you see, we have kind of a family history when it comes to incest.\" He told her. \"What with some of the other things we have gotten up to - I wouldn't worry about your mum's reaction.\"\n\nLiz absorbed this bombshell -- mentally filing the 'other things' reference for later - then she looked serious for a moment, \"How does all this sit with the business, especially the famous Ethics Policy?\" She asked.\n\nHer father looked at her proudly, his daughter wasn't just coping with a bizarre set of circumstances, but she was looking at the consequences as well, \"The Ethics Policy is mainly about ethical business, the treatment of suppliers, sales and employees, it's not about our personal lifestyles.\"\n\n<br> \"Yeah but you're indulging in incest Daddy, that's still illegal isn't it?\"\n\n\"That didn't seem to be a problem last night,\" Mike smiled as his daughter coloured, the blush spreading across her face. Mike leaned and kissed her. \"But the E Policy is also about rights, personal as well as corporate rights. It does respect people's choices_\"\n\n\"Even if the choices they make are illegal?\"\n\n\"So long as they keep it out of the group's business, choices in people's personal lives are just that, their own personal choice. Even us. Nothing we do in our private lives ever impinges on the way we do business, and there is no fiercer watchman on that policy than your mother.\"\n\n\"And she won't mind this?\" Liz asked curious.\n\n\"I guess a couple of spankings and a couple of hours of rope play will bring her around.\" Liz shook her head again, as Mike lifted her hand again and kissed her wrist, not stopping until he was planting tender kisses on the soft skin inside her elbow.\n\n\"I'll give you twenty four hours to stop that, though I may have to resist! Oh fuck! Daddy! Fuck -- let's go to bed.\"\n\nMike swept her into his arms, and grabbing the half-full champagne bottle, carried her to his bedroom.\n\nLiz sensed something different in her father tonight. The previous night he had been considerate, a thorough fulfilling lover, but tonight not only had he taken possession of his daughter by picking her up, but she could feel the urgency in him as he placed her on the bed and stripped.\n\n<br> \"What?\" Mike asked her, as he stripped to join her. Liz shook her head, before climbing to her knees. Kneeling before her father she offered her hands out towards him.\n\n\"Make me yours, daddy, like you did the other women in our family. Take me.\"\n\nMike stood still. He had been about to join Liz on the bed, ready to disrobe her, but now he paused, oblivious of the fact that he was naked.\n\n\"Strip!\" He commanded her, climbing on to the bed and lying back, his elbows underneath him.\n\nLiz leapt off the bed and quickly disrobed. Mike got up and showed her how to stand, before he stood for a moment looking at her. Liz flushed as he inspected her. For a long moment Mike scrutinised Liz, he did not touch her at all. But the careful way he looked at her, at her breasts, her hips, her legs, her arms, and her face, was almost like a physical inspection. The intensity of her father's gaze and the careful way he had posed her, brought home the fact that he knew what he was doing.\n\nWithout warning Mike reached up and pulled Liz's head forwards. Mike's kiss was fierce, and the sudden onslaught almost made Liz put her hands up to ward him off but she stopped herself in time and joined in. At one point Liz reached up and started to move her hands across the skin of her father's back but Mike indicated she should not do so, so she stood there wrapped in her father's arms enjoying their embrace. And it was wonderful -- her dad was a great kisser. First hungrily, leaning forwards and possessing her mouth with his and his strong sinuous tongue, then straightening up and drawing Liz closer and the kissing became gentler and sensuous, before once again he took her mouth and her with it. Liz fought hard to stay standing and not to melt in her dad's arms.\n\nSoon Mike pressed Liz back to the bed laying her gently but firmly on her back and kneeling between her thighs. Liz gasped at the almost electric touch of his tongue against her clitoris and the sensations continued as Mike licked her pussy -- Liz wrapped her hands in the sheets as she writhed under her father's capable tongue.\n\n\"OH! Fuck dad, fuck! That's so good, oh!\" Liz moaned and muttered as she felt her cum threaten to overwhelm her. This was going to be massive when it hit -- an orgasmic tidal wave and she braced herself.\n\nMike lifted his head, stopping the flow, stemming the onrushing tide. The abrupt end caused Liz to look up. \"What?! NO?! Don't stop!\"\n\nMike smiled as he gazed at her across her quivering stomach. \"It'll be so much better.\"\n\nBreathlessly she nodded.\n\n\"Now if you truly want me to own you, you will not cum until I tell you. Fail and you will be punished. Pass the test and the reward will floor you. Do you understand?\"\n\nLiz nodded.\n\n\"Do you want a safe word?\"\n\n\"Will I need one?\" She asked him.\n\n\"That's your choice.\" Mike was serious, but there was still a twinkle in his eyes, \"It depends on whether you trust me or not.\"\n\nLiz chewed her upper lip, not knowing how delicious it made her look. \"Okay,\" she said, \"No word. I trust you daddy. Now please...?\" And she opened her smooth long thighs invitingly.\n\nMike started to stroke those long thighs, delighting in their shape and the touch of his daughter's silky skin. Rhythmically his strong hands stroked and caressed her flesh, working towards hers hips, and the centre of her pleasure. Still tingling from Mike's tongue earlier Liz felt his hand movements and the thrill built in her quickly.\n\nSoon her father's hands were stroking her outer lips, his thumbs caressing her sex gently and insistently. Liz rotated her hips trying -- inviting her father to penetrate her but Mike was too skilled and though he kept the sensation building he easily declined the invitation.\n\nLiz reached for him, seeking to pull his head forwards and force his mouth onto her cunt. But Mike avoided this too.\n\n\"Fuck!\" Liz cursed, \"Put them in, father! Finger fuck me! Get them in there!\"\n\n\"What do we say?\" Her dad asked her, quietly.\n\n\"NOW! Do it now daddy!\"\n\nMike moved up the bed and lifted his daughter's upper body off the bed. He kissed her forehead and leaned down to her ear. \"Dearest darling, daughter of mine, blessing of mine. You do not demand anymore. Do you understand?\" His voice was soft but the tone was firm, suggesting, telling, Liz there would be no argument.\n\n\"Yes daddy,\" Liz responded.\n\nOnce again he kissed her, stroking her right nipple with his free hand, \"Now -- let me ask you again -- what do we say?\" His fingers rested gently on her sex lips.\n\nLiz looked into her father's eyes, wrapped in his arms, feeling his finger poised, and she breathed \"Please?\"\n\nAs he nodded she went on, \"Please, daddy, make me cum?\"\n\nMike smiled, and he drew his finger gently through the dampness between her lips, Liz trembled as he did so and she felt a sudden onrush that ended abruptly as Mike took his finger away.\n\n\"Not yet.\" He told her as he offered his finger to her lips slipping it into her mouth. \"You'll cum when I am ready.\"\n\nNodding (she did not want her father to punish her) Liz suckled Mike's finger hungrily, until he drew it from her mouth, and looked at her.\n\n\"Yes daddy.\" His daughter told him.\n\nMike leaned down and took his daughter's mouth with his kiss, while she pushed up in his arms, and kissed him back as fiercely as he kissed her.\n\nMike slipped down the bed and placed himself between Liz's thighs again. His tongue lingered briefly on her pussy lips before he moved down between Liz's parted legs and as his hands lifted her hips Mike kissed the brown pucker of his daughter's arse. Liz squealed with delight and surprise. He started to explore her with his strong tongue. Time and again Mike thrust into Liz's bottom. His pace varied, and Liz could feel the orgasm building in her thighs, feel the heat building, threatening to overtake her, but her father would stop and pause, letting the fire die before he would start again. At one point desperately trying to fulfil her father's instructions not to cum, she swore out loud, only for her father to stop and look at her threateningly.\n\n\"But daddy?\" Liz was desperate, grabbing handfuls of bed sheet on either side of her. \"Please daddy, I need to cum!\"\n\n\"Are you desperate?\" He asked her. She scanned his face looking for any sign of teasing, looking for a measure of how far she could push him. Her father was serious.\n\n\"Yes, Yes I am..\"\n\nThere was no sense of triumph in his voice, just an acceptance, as Mike told his daughter \"Okay.\" As he started to stroke in and out again. Liz felt like it was almost routine for him, except that for her oh the sensations, oh God! the sensations. It didn't last long though, with a thrust Liz's world exploded. The pent up orgasm, the stored energy burst like a bomb in her head. It flowered in her hips, growing from the centre of her and shook her like a tree in a gale. Liz's head lashed from side to side, and her hands reached for her father, only for him to take them in his hands and press them down to the bed. Mike remained buried in her pussy, still and motionless. He didn't need to do any more than that. The orgasm he had triggered in his daughter did its work all by itself.\n\nAs her orgasm subsided Liz lay still. Mike had withdrawn and he brought her a drink. \"But what about you?\" She asked him.\n\nMike smiled, \"It doesn't matter. You did well.\"\n\n\"But daddy you need to come too. Doesn't it hurt?\"\n\nMike smiled as he stroked her hair, \"I'm used to it. It's about technique. Now are you ready to go again?\"\n\nLiz nodded eagerly, reaching for her father. Once again Mike took the lead but this time it was less dominant, this time he started gently at first, making a languorous, sensual love with his daughter. Then he switched, picking up the pace, he started to fuck Liz. Vigorously, on both sides the two lovers went at it. Liz clawed at her father's back, as the two of them scattered pillows and tangled themselves in bed sheets until, with Liz riding her father's hips, he grabbed her waist and pulled her down tight to him. Arching his back Mike shot gout after gout of cum into his daughter'\n\nLiz could feel the heat of his cum deep inside of her, her own response a wordless squealed shout of joy. Eyes shining she looked down at her father -- despite the sweat and tangle of a good fuck, he still looked calm, serious almost. But then he started, grinning back at her, enjoying the sight of his beautiful girl, as she sat still impaled on his cock, 'fizzing' away in pleasure.\n\nThe two folded downwards together, curling up in the ruins of Mike's bed sheets.\n\n\"Fuck me daddy!\" Liz said as she looked at him.\n\n\"Seriously? Again?\" Mike asked her, in mock surprise.\n\nLiz rolled onto his chest, her hair falling down on one side, she flicked it back with one hand, \"You are one amazing fuck dad. I never imagined...\"\n\n\"Why would you?\" Mike asked. \"We've always been discrete about the way we conduct our lives.\"\n\n\"You can say that again? I'm just amazed. I never had any idea. But if I had -- I would have been jumping your bones years ago.\"\n\nLaughing Mike got up and went to pour them a drink, and Liz took the opportunity to straighten the bedding.\n\nAs they shared a glass of the champagne -- still cold, but much less fizzy -- Mike toasted Liz, raising his glass to 'a successful trip and the discovery of my lovely blessing'.\n\nJane sipped her drink before she raised her drink towards Mike, and 'my daddy, the dom, and his wonderful willy'.\n\nIt was late now, and both of them sensible of the fact they would need to travel the next day, slipped under the sheet and slept the rest of the night.\n\nBack at Thrallthorpe Liz took her bags to her room and put her new suits away, before changing and going down to her father's office. Her mother was outside in the garden and as Liz went down to Mike's office, she realized she would never look at the old house the same again\n\nHe was already on the phone to Tony Feeney -- Liz could see the Kowloon skyline over his shoulder, he waved as she came into the picture.\n\n\"And the first people will be ready to come over in about three months' time.\" Tony told Mike, \"Li told me afterwards that meeting they had with you two was the clincher. He said he really enjoyed doing business with you both, and he said that if he believed such things he would say you, Mike, were really an ancestor reborn.\"\n\nLiz looked at him and then at her dad, Tony smiled, \"It's a compliment.\"\n\nWhen Liz looked at him again, he went on, \"He's saying you do business like a Chinese, top marks boss! And you Liz, he was also really impressed by you.\"",
        "When the call had finished Liz turned to her dad, \"So? Where do we go from here?\"\n\n\"You did okay in Hong Kong, I was impressed. So - if you want to, you'll be working for me. As one of my assistants at first and then my deputy. I'm thinking you could pick up the lead on the internships. The good thing about that is nothing helps you learn about something like teaching someone else.\"\n\n\"What's in it for me?\" Liz interrupted.\n\n\"Apart from a decent living allowance, car and a house? Well, if you measure up, if and when I decide to retire you will take over the company.\"\n\n\"Who decides if I measure up?\" She asked quickly. She wasn't sure she was committed to doing this yet, but she did love a challenge and being found wanting in anything was something Liz Bailey didn't like.\n\n\"I do. Me, your mum and your grand-mother, and the management team.\"\n\n\"Why you?\"\n\n\"Well, because we run the group, we took the group on twenty five years ago, and we've brought it to where it is now. The people who work for us trust us to lead them and safeguard their jobs for them. If we're going to appoint someone that person has to be right for the group.\"\n\nLiz looked at her father. \"That makes sense, but all of this? To me -- all the money, all of the property?\"\n\n\"I shit you not Liz. That is something you can depend on. Apart from a living for us, it's all yours if you measure up. And if you decide you're up for it.\"\n\n\"Okay, I'll buy it. What do I have to do?\"\n\nMike outlined the basics of Liz's position, her role and the sorts of things she would have to achieve.\n\n\"Erm, there is one thing dad.\" Liz examined her feet carefully as she phrased what she wanted to say. \"What happened between us in Hong Kong? How does that go down?\"\n\n\"Honey, there's a _\" Mike started. \"I was going to say there's a lot of me in you but that's probably not the right way to put it.\" They both laughed at that.\n\n\"Liz - our characters are very similar in many ways, plus you have some of your mum in you and your gran.\" He laughed, \"I even see some of your great gran in you. Hong Kong was a dead giveaway. I realised that even before then, you were up to more mischief than a bus full of monkeys. Is there anything you haven't told me about?\"\n\nLiz listed her affairs with Karen and Danielle and a couple of others she had had.\n\nMike listened attentively, smiling at the list of Liz's escapades. \"The thing is, I love what I do and the life I lead.\" She told him, \"Once I got over the initial shock I did enjoy Mrs Wu's, I love you and I loved what WE did. Dad, I just fucking love sex! I'm not sure I want to give it up.\"\n\nAfter Liz had finished Mike nodded thoughtfully. Well that went better than I thought it would, Liz told to herself. Her father walked around his desk to sit on the chesterfield couch, next to his daughter.\n\n\"I enjoyed Hong Kong too Liz, and we will carry that on.\"\n\n\"What about all the other stuff, the dom/sub thing?\"\n\nMike smiled at her gently, \"There are ways and means of doing everything. Your Gan-gan Elizabeth once told me 'money can buy an awful lot of insulation'.\"\n\nLiz looked up at her father, \"how do you mean?\"\n\n\"There are things going on all of the time that people have no idea about -- especially if the people doing them are discrete.\"\n\nLiz realized now what Mike was hinting at.\n\nBy way of explanation her father left the room, coming back a short time later. Mike offered Liz his hand and she took it as he helped her stand.\n\n\"Bear in mind what we've talked about, Liz.\" He told her, \"Money is really useful in concealing things, but discretion is important too.\" He then led her from his office up the stairs towards his and her mother's bedroom.\n\nLiz was baffled.\n\nMike led Liz past the entrance to his room and to a door at the end of the corridor. For the first time she could ever remember the door was open.\n\nMike led her inside. Whatever Liz had imagined was behind the door as a child, whatever she had rationalised was inside, paled to insignificance as she saw the array of BDSM equipment lining the walls, the purpose built furniture in the room. Her eyes widened and her mouth fell open, she made small questioning sounds as she looked around the room, occasionally reaching out to touch things, as much as to reassure herself they were real as much as wonder at their use. \"Where did you think we did this?\" Mike asked her.\n\nAS Liz looked round in awe of her parents' playroom, her mother and her grandmother walked in. Her mother wore her usual jeans and a tee shirt (she had been gardening) while her grandmother looked the archetypal country lady in her earls and tweeds.\n\n\"Strip please, ladies and kneel.\" Her father told the two older ladies.\n\nTo Liz's further astonishment both women did exactly as they were told, and soon they were both naked and kneeling next her father at the far end of the room.\n\nOnce again Liz was stunned. She stood there, open mouthed. She first looked at her father; then her mother, ripe and round and deliciously nude with barbell piercings in her nipples, then to her grandmother still a beautiful woman, with ripe full breasts -- though they sagged a little, her stomach still firm and flat. Both women kept their positions with poise and grace.\n\nAnd still Liz couldn't speak. For fuck's sake this was her parents! Her vanilla fucking parents! Well, okay she had been told by her father that they WEREN'T so vanilla -- but knowing that and then seeing it are sometimes two very different things - her mum AND her gran? There was no smart retort, no flippant quip, no wit, not even a gulp!\n\n\"Elizabeth Eva Jane Bailey these are my subs, Jane and Eva,\" Her father was saying.\n\nIf Liz's eye-brows could have gone any higher they would have.\n\n\"We have kept this part of our relationship secret -- the submission, the incest -- we even managed to keep it from you. Everything we do is by mutual consent, if you and I continue our relationship from where we were in Hong King it would just be continuing a side-line of the family business -- so to speak.\"\n\nNo shit daddy! Liz thought. Then as if something had clicked into place, she had a revelation -- there were places at Thrallthorpe - around the house and in the grounds that suddenly made sense. At least if you were into BDSM they did. As a child they were great places to play, but now she realised they'd be good places for grown-ups to play too.\n\n\"If you're coming on board with all of this,\" Mike went on, \"It's something you have to consider. These women, these submissive women are mine Liz, you may organise whatever arrangements you want, as long as you are discrete. You may have your own subs if you wish. You can even join us if you'd like to.\n\n\"I will remain the master in our relationship, and you will always be a subordinate, but not a submissive. You may be a mistress in your own right, but you will not approach your mother or your grand-mother -- unless_\" And Mike smiled again. \"Unless I say so.\"\n\nLiz looked at him, then slowly she realised -- they had been at this for a long time, they knew what they were doing. Parents eh? She started to smile. Just when you think you've got them sorted, they throw shit like this at you.\n\n\"There is one more thing Liz,\" she looked at her father, \"Something you need to think about, maybe not now, but in the next couple of years...\n\n\"You will need to see about an heir - or heiress -- sooner or later.\"\n\n\"An heir?\" Liz asked stunned, her face a picture, Mike nodded, \"Or heiress?\" he reminded her. He would have laughed at her crest-fallen expression, but it didn't seem fair. He paused, recalling something that had been said to him years ago in similar circumstances.\n\n\"Now,\" and he too started to smile, though he knew the answer, he had to ask the question \"Tell me you saw that one coming?\"\n\nAnd that dear reader is where it ends, hope you enjoyed it. Thanks for sticking with it."
    ],
    "authorname": "scipioparkins",
    "tags": [
        "father daughter incest",
        "father daughter sex",
        "father",
        "daughter",
        "asian"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/inheritance-ch-08"
}