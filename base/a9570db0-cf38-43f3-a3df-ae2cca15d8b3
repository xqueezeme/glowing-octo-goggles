{
    "title": "Bliss Ch. 03",
    "pages": [
        "\"Congratulations to us,\" Malcolm said, touching his little plastic cup to my bottle of water. \"And a job exceptionally well done to you, Melody.\"\n\n\"It was a joint effort, Malcolm,\" I demurred. It was Thursday evening, and we were on our way back to Seattle. \n\n\"Considering all the ideas originated with you, that's arguable.\" He smiled, settling back in to his seat. \n\n\"Thank you, Malcolm.\" I peeled the label off my water bottle and began playing with it, folding it thin lengthwise layers. \n\n\"You're nervous,\" he said quietly.\n\n\"Yes.\" \n\n\"Why?\"\n\n\"I don't know.\"\n\n\"Yes, you do.\" I glanced over at him. He had a very kind expression on his face which did nothing to ease my nerves.\n\n\"I...I did as you asked,\" I said quietly, my hands starting to rip the label in long strips. \"And, well, I can't give control over to you like that. I like who I am.\"\n\n\"So do I.\"\n\n\"I don't want to subjugate my will for yours.\" I took a deep breath. \"I won't be shared or choked or marked or scarred. I'm...I just can't be that person.\" \n\n\"So you won't be moving in to my dungeon?\" \n\nI glanced over at him and he winked back at me. \"Don't make fun of me.\"\n\n\"I think I'm entitled to a little teasing.\"\n\n\"No.\"\n\n\"I don't want a slave, Melody. I already told you that.\"\n\n\"I know, but-\"\n\n\"Hear me out,\" he said, interrupting me. \"I like who you are. I want to go to the movies with you. I want to go to dinner with you. I want to take you on a ferris wheel ride. I want to spend time with you doing absolutely nothing at all. I want to sit around with you and read on Sunday afternoons. I want to stay up late and watch 50's horror movies on TV. I want to do all these things with you because I like who you are.\" \n\n\"Yeah, but...what about the other stuff?\"\n\n\"What?\"\n\n\"You know, the whole 'this is mine, call me Sir' stuff you were talking?\" I leaned in to him, my voice as quiet as I could make it.\n\n\"That hasn't changed.\"\n\n\"But how-\"\n\n\"Come here,\" he said, lifting the armrest that separated our seats and putting his arms around me. He laid his cheek next to mine and rubbed my back gently. It was a bit uncomfortable, the seats \u2013 though larger than coach \u2013 were not exactly commodious, and there wasn't a lot of room to maneuver. Still, I breathed in the musky scent of his skin and wouldn't have wished to be anywhere else. \n\n\"I also want you naked and over my knee, so I can watch your cunt get wet as I spank your tight little ass,\" he said, moving his lips next to my ear, making my breath catch in my chest. \"I want to tie you down and make you come until you are senseless and weak. I want to tease you and fuck you and use you as I wish because you are mine. I want to make you forget your name and my name and scream Sir,\" he said, his voice even lower. I could feel the heat of his breath caress my neck. \n\n\"I want it all with you,\" he said as he released me and sat back in his seat. I blinked, coming back to the realization we were still on the plane almost two hours from Seattle. I sat back and looked out the window, trying to regain my composure and reverse the humidity between my legs. \n\n\"You don't make it easy, do you?\" I asked after a few minutes.\n\n\"No.\"\n\nWe sat in silence for a bit. I looked out the window at the clusters of light below us and thought about what Tony said \u2013 that there are millions of people who enjoyed being called names and handled roughly. What did he call me? \n\n\"Submissive,\" I said under my breath. \n\n\"Yes,\" Malcolm said. I glanced at him and looked away quickly. He was looking at me with such heat, such intensity, I almost believed I would spontaneously combust from his gaze. \n\nI spent the rest of the flight avoiding eye contact. It seemed as if my mind was fighting with itself. The thought \u2013 the mere idea \u2013 of being a submissive had me more than a little nervous. It had me scared. I don't know why. At one point, resolved to just remember what had happened as a kinky little bit of spiced chocolate in my otherwise vanilla life, I closed my eyes and my mind flashed to Malcolm's face as he deftly restrained my hands with his belt, and I felt the most delicious lurch in the pit of my stomach. Lust. It wasn't in my head. I actually felt it. And my mind was changed. \n\nBy the time we landed in Seattle and made our way to the baggage claim, my decision had been made and changed at least two dozen times. As we stood around the carousel waiting I glanced up at Malcolm to find he was watching me.\n\n\"Ask,\" he said, looking like he was trying his best not to smile.\n\n\"First off \u2013 how do you always seem to know what I am thinking? And B \u2013 how did you know I was a \u2013 I would be suited to your needs?\" I asked. I felt breathless. \n\n\"You've the most expressive face, Melody. Has no one told you that?\" I shook my head. \"The way your mouth moves, and your eyes \u2013 it's like you're telling me your secrets.\" \n\nI thought about what he said and I shivered a bit. The bubble light over the carousel went off and it started to move. Our bags were among the first to come down, and Malcolm made his way through the crowd to grab them. As I watched him move, as I noted his confidence and grace, I realized the decision had been made the first time he touched me. \n\nHe came back to where I stood and handed me my bag. As I stood it up and extended the handle, he placed his hand on the small of my back, gently leading me towards the escalator up to the short-term lot. He didn't ask. He just knew. I don't actually think he ever had any doubt. \n\nHe guided me to a sleek black Jaguar, and put our bags in the trunk as I made my way to the passenger door. He moved to the driver's side and opened the door, motioning me to get in.\n\n\"I'm not a good driver.\"\n\n\"Alright.\"\n\n\"Really. That's the real reason I take the bus.\" \n\n\"I'm not wanting you to drive.\"\n\n\"That's a relief.\" \n\n\"So get away from the driver's side.\"\n\n\"What?\"\n\n\"I brought this with me.\"\n\n\"With you?\"\n\n\"From London.\"\n\nIt took a moment to catch what he was saying. \"Right. Of course you did. Why wouldn't you.\" I said, giggling. \"Sorry. I didn't even consider that.\" I walked over to where he stood and he shoved me against his car, grabbing me by wrists and pressing himself against me. He just looked at me, and I could feel him getting hard, his cock growing against my abdomen, and my body responded in kind. I must have made a sound, or done something, because he gave a low laugh and released me. \n\n\"Soon,\" he said, stepping back towards the door and holding his hand out to me. I took it, confused, and allowed him to help me in to his car. The interior was rich tan leather with black trim, and walnut accents. The windows were tinted nearly black. It was opulent. \n\nHe got in and made his way carefully out of the garage, heading north towards Seattle. I watched him drive, looking at his face in the dash lights, and thinking he was impossibly handsome. \n\n\"Give me your panties,\" he said suddenly, not looking at me. I didn't hesitate. I lifted my hips and reached under my skirt, pulling them down to my knees. I sat back down and lifted my feet, sliding them off completely. I made sure they were right-side out and handed them to Malcolm. \"You're wet,\" he said, rubbing his thumb over the crotch. It wasn't a question, so I just sat mute, watching him, getting wetter. \"Show me.\"\n\nI hesitated a moment, unsure what he wanted. I shifted, sliding a hand under my skirt and fingering myself quickly. I pulled my hand out and held it out to him. \"Wipe it off on your blouse,\" he said, glancing at my fingers. I did, watching as he tucked my panties in his jacket pocket. \n\nHe took the viaduct through downtown, making his way towards Fremont, avoiding the interstate. I watched the turn towards Queen Anne \u2013 and my condo \u2013 fly by, and my heart began to beat a little faster, thinking about what he said on the plane, all those delicious promises. He pulled in to the driveway next to a large, well maintained craftsman. The porch light was on, as well as a light in a second story window. Malcolm opened my door and helped me out of his car, grabbing my wrist and leading me up the porch. He opened the door and pulled me inside, making me stumble a bit. He locked the door behind us and stood still, looking at me seriously. \n\n\"Are you ready?\"\n\n\"Yes, Sir,\" I croaked, my throat suddenly dry. \n\nHe strode towards the back of the house, hand still around my wrist, pulling me behind him. I had to walk quickly to keep up. He pulled me through a hallway and a large room (kitchen? dining room?) and tossed his keys on to a table. I tried to get a look but he turned, heading up a flight of stairs, and I had no choice but to scramble after him. He turned right at the top of the stairs and head in to a large bedroom, richly furnished with dark woods and ruby linens, with cool gray walls and white trim.\n\n\"Take off your coat and blouse,\" he said, dropping my wrist and turning to face me. I shrugged out of my coat, letting it fall at my feet. I unbuttoned my blouse slowly, watching as he pulled an armchair from a window recess next to the bed and sat facing me. I let my blouse fall to my feet as well. I stood, hands fidgeting at my sides, watching Malcolm.\n\n\"Take off your skirt.\"\n\nI reached behind me and undid the hook and zipper of my skirt, conscious of how my breasts pushed out as I did. I pushed my skirt and slip down, stepping out of them and kicking the pile to the side, standing before him in my bra, 50's style garter, stockings and heels.\n\n\"You are in the habit of wearing garters, Melody?\" he asked quietly. \n\n\"Yes.\" He raised an eyebrow, making me blush. \"I don't like pantyhose.\" He raised both eyebrows. \"I think they're unfeminine, nasty things, that make your thighs sweat and they feel horrible.\"\n\n\"And you always wear your panties over your garters?\"\n\n\"Well, yes. It's, you know, easier?\"\n\n\"Easier?\"\n\n\"It makes it easier to...you know...\" But Malcolm just stared at me. \"It makes it easier to use the restroom,\" I said hotly, feeling harassed. I stood looking at my feet, my cheeks flushed. He didn't say anything for the longest time, and I started to fidget a bit. I glanced at him and found him staring at me intently. \n\n\"Come here,\" he said. I moved to stand in front of him. He took my hand and kissed my palm wetly. \"Bend over, arms out in front of you,\" he said, motioning towards the bed. I complied, pressing my face to the soft cotton coverlet. I could hear him moving behind me, but couldn't see him. \n\n\"You have a nice, tight little ass,\" he said, suddenly behind me, caressing it. I felt his finger stroking around my anus.\n\n\"Oh, Malcolm,\" I sighed, and his finger suddenly stilled. \n\n\"What did you call me?\" he asked.\n\n\"Sorry. It slipped out,\" I said, starting to turn around. A hard slap on my right butt cheek stopped me. \"Ow!\" I cried, although it didn't actually hurt. \n\n\"Shut up,\" Malcolm said. He brought his hand down four more times, twice on each cheek, with increasing intensity. It hurt, not just the stinging of my skin but the force, the way his blows lifted and compressed each cheek. I would swear I could feel the tissue bruising. \n\nMalcolm paused a moment, shifting slightly to stand a little to my left. \"Do not move your arms,\" he said thickly. He began spanking me again, in earnest, and I realized he had been holding back before. I instinctively started to pull my arms back, wanting to shield my ass from his hands, but stopped myself, grabbing at the bed covers and twisting them in my fist. \n\nMy ass began to feel like it was on fire, like his hands were literally blistering my skin, and I began to whimper, feeling tears run down my cheeks. It hurt! It hurt it hurt it hurt, dammit! So why did the heat spread from my ass to my pussy? Why did my entire body throb with each blow? This was way more intense than the teasing spanking he gave me in Houston. \n\n(A brief aside, if I may? One of our local theaters recently ran a revival of \"Secretary\" as their midnight movie. Tony took me to see it, as I hadn't caught it when it was originally released. The girl \u2013 and I forget her name \u2013 who played the title character should have won a freaking Oscar. The first time he bends her over the desk and spanks her, her face goes from scared to confused to serenity. It was perfect. Amazing. Honest. I sat through the rest of the film on the edge of my seat, Tony nudging me the whole time. When the film was over I made a quick escape, caught a cab home and woke Malcolm up. For which I was thoroughly, deliciously and wonderfully punished.)\n\nMalcolm moved behind me again and changed the angle of his blows; instead of coming dead-on, they came from above and below, feeling even harder than before, like he was swinging at my ass from all the way down in his toes. Each time his palm connected with my skin, I felt my pussy clench and my clit ache, making me moan quietly. My hips moved, as if they were searching for his hand of their own volition. I could feel my wetness trickle down my thighs, even as my tears ran down my cheeks, and I knew Malcolm could see it. \n\nMalcolm stopped spanking me and I felt him kiss my ass with a low laugh that gave me goose bumps. He caressed my ass, his hand unbelievably cool against my skin, and I made a sound that was half relief, half frustration. He gently unhooked my bra, and used his hands to silently direct me until I lay across his bed. The linens felt smooth and cool and good against my skin.\n\nHe slid my bra off, eyes roaming over me slowly. My eyes were on his as he undressed down to his boxer briefs. I longed to touch him, to bury my nose in the hair on his chest and run my hands up and down his arms, to caress and grab his ass. He was the sexiest thing I had ever seen. He looked at me and smiled, shaking his head a bit.\n\n\"Let's remove the temptation for you,\" he said, grabbing his tie. He quickly tied one end around my right wrist, looping the silk fabric around the left hand bed post and then tying the other end around my left wrist. It happened quickly, but even had he gone slow, I wouldn't have tried to stop it. As soon as I realized what he was going to do, my heart rate jumped and my pussy clenched in anticipation. \n\nIt may not make sense \u2013 to you, anyway \u2013 but as I pulled and tested my restraints, I felt free. Released. All expectation (real or imagined)...all inhibition... was removed from me. I was not to act. I was to be acted upon. It was liberating. \n\nMalcolm lay on the bed to my left, propped up and looking down at me. He leaned over and kissed me, his hand moving to caress my right breast. He rolled the nipple around as his tongue gently probed my mouth, starting to squeeze my nipple, gradually increasing the pressure on it until it crossed the line from pure pleasure to that pain that feels so good. I arched my back and moaned in to his mouth as he repeated on my left breast. \n\nHe moved on top of me, laying between my legs. He brushed the hair back from my face before wiping the dampness off my cheeks with his thumbs. He gave me a soft kiss on each eye, the tenderness of his actions surprising me.\n\n\"If you need anything to stop, say your name.\" He looked at me gravely and I nodded, my heart rate increasing and my mouth suddenly dry. \"Tell me you understand.\"\n\n\"If I need you stop, I will say my name,\" I said, my voice gravelly. \n\n\"Good girl,\" he said, giving me that sexy smirk again. He slowly kissed down my neck, nibbling every now and then. I closed my eyes and sighed, enjoying the sensations. I pulled at my bonds, wanting to caress him, wanting to run my fingers through his hair, and whimpered every time I re-discovered I couldn't. \n\nMalcolm moved his lips down my body slowly, stopping at my breasts. He started on my right breast, placing his mouth around the areola and fluttering his tongue on my nipple, making it achingly hard. He moved on to my left breast, repeating his actions, smiling against my skin as I moaned and pulled at my restraints. He squeezed my breasts together, his thumbs rubbing on my nipples for a moment before biting hard on them both at the same time. I cried out and my back arched, lifting myself \u2013 and Malcolm \u2013 off the bed a bit as the pleasure of what he was doing hit me. Every time he bit down on my nipples it sent a shock to my clit, and I rocked my hips at him, trying to make contact, trying to get off. He raised his hips, lifting his abdomen from my pelvis and removing any possibility of contact with my pussy.\n\n\"Please, Sir, please...\" I whined. \n\n\"Does my dirty little slut want to come?\" he teased. He let go of my breasts and slid his hand slowly down my abdomen. I stilled, breath held, as he slowly reached between my legs, gently cupping my sex. \"Does my little slut want me to play with her cunt again?\" \n\n\"Yes, Sir,\" I whispered.\n\n\"Hmmmm?\" He lightly caressed my lips as he shifted to my right side, using his left leg to pull my legs open. \n\n\"Please, Sir, touch me. Make me come.\"\n\n\"I am touching you,\" he said, moving his hand to my thigh. He slid his hand around and down my leg, until he reached behind my calf. He lifted, moving my leg over his hips, and I could feel myself spread lewdly. I moaned. He bent his lips to my ear, and I felt a gentle kiss on my lobe. \"Impatient.\" He moved his hand back up my leg, trailing his fingers along my inner thighs to the crease where thigh and hip meet. I whined, looking at him. He slowly slipped two fingers in my pussy, fucking me with them.\n\n\"Yesssss,\" I moaned. \n\nMalcolm smiled down at me, moving his fingers around inside me. I shuddered, lifting my hips against his probing hand. He pressed the heel of his hand against my clit, grinding in to it as his fingers quickly worked me in to a frenzy and I felt my pussy clench. He raised his eyebrows and pulled his fingers out, smiling as I tried to catch my breath..\n\nHe slipped his fingers in to my mouth, and I licked and sucked them, tasting myself mixed with the salt of his skin. He quickly pulled them out of my mouth and kissed me fiercely, his lips crushing mine and tongue forcing its way in to my mouth. His hands ran up and down my sides as he devoured me with his kiss. \n\n\"You are exquisite when you come,\" he said, breaking the kiss at last. I closed my eyes, shaking my head and biting my lower lip. \"You are. My hot, sexy little slut, writhing and moaning, your cunt wet and dripping.\" He began making circles around my clit with his finger. \n\n\"Oh, Sir,\" I sighed, spreading my legs for him.\n\n\"Hmmm?\"\n\n\"That feels so good,\" I sighed.\n\n\"You like that?\" he asked, kissing his way down my chest. He kissed my nipples lightly before licking between them. \n\n\"Oh....yes.\" He began kissing down my abdomen, his finger still massaging around my clit, stopping to nibble at my navel a bit. He ran his tongue slowly from my belly button to the very top of my pussy. \"Please....\"\n\n\"Please what?\"\n\n\"Please...use your tongue.\"\n\n\"I am,\" he said, running his tongue in circles at the top of my mound. \n\n\"Please, Sir.\" I drew my breath and held it as he removed his fingers. He began to slowly caress my pussy lips with his finger tips. I glanced down at him to find him looking at me, smiling.\n\n\"Ask for it,\" he said. I could feel his breath on my sex.\n\n\"Please eat me, Sir. Please lick my pussy,\" I said, hiding my face in the crook of my arm. I could feel the heat from my cheeks. I was so embarrassed, talking that way, but it also made me so hot for him.\n\n\"A slut has a cunt, not a pussy. Ask again,\" he said. He spread my lips open and blew on my clit. \n\n\"Oh god! Please lick my cunt,\" I moaned, feeling cheap and dirty and sexy and desired. And wet. Very, very wet.\n\nMalcolm began probing me gently with his tongue, tasting me lightly, almost delicately. I sighed and spread my legs as far apart as I could, bringing my knees up and to the side, and my mind suddenly thought back to high school and the frog we had to dissect in biology class. Then Malcolm's tongue fluttered against my clit and I thought of nothing but how good it felt. ",
        "He sucked and licked at me, repeatedly bringing me to the edge of orgasm and then backing off. Teasing me, taunting me with my own pleasure until I begged him to make me come. He grunted, zeroing in on my clit with his tongue and lips, making me come. He nipped, sucked and licked at it, and I came and came \u2013 not sure if it was one long orgasm or a series of small ones \u2013 until I could no longer speak and my abdominal muscles cramped. \n\nHe moved quickly, running his tongue back up my body to my mouth and slamming in to me. I whimpered against him, still coming down from my orgasm and over-sensitive, and pushed my hips down in to the bed, away from him. \n\n\"No,\" he said, grabbing my ass and pulling my hips back up towards him. \n\n\"Please, Sir, it's too much,\" I sobbed. His pelvis hit my clit every time he thrust into me, sending off stabs of pleasure. \n\n\"Hush,\" he said, shifting to press himself with even more force against me. I pulled at the tie around my wrists and moaned, unable to move or protect myself. \"Let go,\" he whispered, moving his lips to my ear. \n\n\"I can't. Please. It's too much.\"\n\n\"Relax and let it happen.\" \n\n\"Too soon.\"\n\n\"No, it's not.\" Malcolm moved his mouth to my ear, speaking low. \"Just let go, close your eyes and think of nothing more than how good it feels. How my cock feels inside your cunt. How your tight, wet cunt caresses my cock as I fuck you.\" He emphasized each sentence by slamming in to me. \"Think of how much your cunt likes it. How much you like it. You like how I fuck you? How I tie you down and fuck you? You like being my dirty little slut, don't you?\" \n\nI grabbed the slack of my restraints, eyes closed, concentrating on the feeling where our bodies met and listening to him. I relaxed, the pleasure intoxicating, seductive. I planted my feet on top of his thighs and moved my hips against him. \"Oh god....oh Sir...don't stop...please Sir.\"\n\n\"Tell me what you want,\" he grunted, letting go of my ass and raising himself to look at me. \n\n\"Fuck me. Don't stop. Fuck me. Use me.\" I chanted, my breathing ragged. God \u2013 he felt so damn good. It was an entirely new experience to me. And when I realized what I was doing and saying, when I realized those moans and sighs and shrieks were coming out of my mouth, I could feel embarrassment rising in me. I couldn't help it. \n\nI glanced up at Malcolm, and I could see his approval. \"My good little slut,\" he grunted. His eyes were fierce. There was sweat on his brow. \"Tell me.\"\n\n\"Don't stop fucking me. Please. Your cock feels so good. I'm your dirty little slut. Keep fucking me. Keep fucking your slut.\" My embarrassment burned away by the look in his eyes. The more I talked, the dirtier I talked, the wetter I got and the more intense Malcolm's fucking became. I reveled in this new sensation. This feeling of being at once powerful and powerless. I began to move my hips more quickly against him, goosebumps erupting all over at the sounds our bodies made together. Any inhibition I had was abandoned. Every identity I'd ever had was thrown to the wayside, forsaken. There was no good girl here, no feminist, no senior account executive. The volunteer, the community do-gooder was nowhere to be found. There was only Malcolm's slut. \n\nIt was glorious.\n\n\"Oh god. I'm going to come. Oh Sir, it feels so good when you fuck my cunt. I'm going to come,\" I cried. \n\n\"Yes, you fucking slut. I can feel \u2013 ,\" Malcolm said. And then he said nothing, his eyes closing as I felt him come inside me. And then I said nothing, I just wailed and moaned beneath him as I came, too. He thrust into me, fucking me through both our orgasms, with enough force to lift my hips off the bed and double the slack around my hands. \n\nHe must have recovered before I did, because one moment I was shuddering beneath him and the next he was lying next to me, rubbing my clit lightly and teasing my nipples with his tongue. I could hear myself sobbing, begging him to stop, even as my hips moved and my legs fell open. \n\n\"I want you to come for me again,\" he said against my breast.\n\n\"Please, no. I can't.\" I could feel my hair plastered to my head, and the sweat running off me. I was so sensitive, each gentle stroke of my clit made me shake.\n\n\"Yes, you can.\" He raised his head to look at me and I shook my head. He stopped playing with my clit and spread my lips apart. \"Yes,\" he said, raising his hand and slapping me between the legs. I had never felt anything so wildly erotic before. My body jerked and I moaned, opening my legs wider and angling my hips towards him. It felt so good, it was pleasure laced tightly with pain, each sensation wholly dependent upon the other. He slapped me again and I moaned louder, feeling my wetness splash onto my thighs.\n\n\"Oh god, yes,\" I moaned as he slapped it again. All thoughts of me being too tired and too sensitive to come again had vanished. I felt delirious. \"Oh jesus that feels so good.\"\n\n\"Are you going to come for me?\" he asked, spanking me between my legs again.\n\n\"Ahhh...yes....yessss....make me come.\" \n\n\"That's it...what a good little slut...come for me,\" he whispered as he slapped me between the legs with a steady tempo. God, it felt delicious. Malcolm kept whispering to me as he spanked my pussy, dirty things, sweet filthy things, and when I came my entire body locked up, my cries trapped in my throat with my breath. \n\nI didn't 'pass out', per se, but it took me a while to come back to full awareness. When I did, I was on my side, under the duvet with Malcolm spooned up behind me, my wrists finally free. I had only the vaguest recollection of how I got there. He wrapped his arms around me and laced his fingers through mine. He kissed the side of my head and laid his cheek against it.\n\n\"It's nearly 2AM,\" I said, looking at the clock on his bedside table.\n\n\"Mmmhmmm,\" he said, pulling me to him tighter. \n\n\"I'm going to be a wreck at work.\"\n\n\"You're not going to work.\"\n\n\"What?\"\n\n\"I spoke with Ian before we left Houston and told him we were both beat after working so hard. He said we should take the day. With pay, of course.\"\n\n\"You did that?\"\n\n\"Yes.\"\n\n\"You knew I would come home with you?\"\n\n\"I assumed you would.\"\n\n\"Oh really?\"\n\n\"I can be overconfident at times.\"\n\n\"You mean a 'cheeky bastard'?\" I teased.\n\n\"You'll pay for that later,\" he growled in to my ear, making me giggle. \n\n\"Big talk,\" I said, yawning. \n\n\"Later, my sexy little slut.\" He yawned, and I could feel his chest expand behind me. \"I am too tired to take care of it now.\"\n\nI think I opened my mouth to retort, but I fell asleep before I could get anything out. \n\n\n\nIt was really weird waking up in Malcolm's house the first time. It was just past 11 AM when I finally opened my eyes, and I had that odd 'where-am-I' panic moment before I remembered. I rolled over to find Malcolm gone, the place where he'd lain smoothed out, which added to the overall weirdness. I considered just laying there until he came back in, but urgent messages from my bladder made me realize that was a horrible idea. \n\nI sat up, pulling the duvet up to my chin and casting about for a robe or towel or anything to wrap myself in. I spied a note on the bedside table grabbed it \u2013\n\nMelody \u2013\n\nI have gone to the store. There are fresh towels in the bath. Make yourself at home.\n\nM\n\n\"No use worrying about being naked,\" I mumbled, clutching the note and making my way to the bathroom \u2013 whoops, the bath I mentally reminded myself with a giggle. As I sat to pee I realized how sore my butt was, and I had to sit forward, keeping all my weight on my thighs. When I finished, I went to the mirror to have a look at my ass. It was bruised a deep purple in spots, but not too bad. It looked almost like I fell roller skating. I pressed my hand on it gingerly, thinking about how the bruises occurred and feeling a little proud and, oddly, turned on. I shook it off, heading towards the shower, whistling at the massive opulence of it. It was open in the back, no door or curtain, and seemed big enough for an NFL team to shower together.\n\nAfter a few moments fiddling with the shower controls \u2013 he had three shower heads, one above and one on either side \u2013 I stepped in, both delighted and dismayed to find he had unpacked my toiletries for me. I showered slowly, enjoying the feeling of the three sprays as muscles I didn't realize were tense slowly relaxed. When I finally got out my fingers were starting to prune and I thought I heard Depeche Mode's \"Sweetest Perfection\" as I toweled off. I quickly combed my hair and wrapped it in a towel, slowly opening the bathroom door. Yes, that was definitely DM, and I smiled at his choice. I peeked out, but Malcolm was nowhere to be seen. \n\nI tiptoed into his bedroom, looking around for my suitcase. He obviously took it out of the car if he got my toiletries \u2013 but he must have left it downstairs. My clothes were folded neatly on his dresser, but I spied his dress shirt hanging on the back of the bedside chair and put that on instead, breathing in deeply that good smell of man. I left the top three buttons undone and rolled up the sleeves and head downstairs as quietly as possible. \"Sweetest Perfection\" had given way to \"Personal Jesus\", and I could hear Malcolm singing along quietly. \n\nI followed the sound of his voice and found him in the kitchen, slicing berries and cantaloupe in cargo shorts and a t-shirt. I watched him, unnoticed, shaking his hips in a very good parody of Dave Gahan, feeling a sudden warm affection for him that surprised me with its depth. I bit my lip to keep from giggling as he unselfconsciously used the knife in his hand as a microphone, but I was a bit too late.\n\n\"Come dance with me, poppit,\" he sang into the steel blade. \n\nI practically skipped over to him as he tossed the knife into the sink and took me in to his arms. He pulled the towel off my head and dropped it behind him as he danced us into a large, sunken den. He maneuvered me over to a huge plush brown sofa, making me laugh as he pushed me down on to it.\n\n\"Wait here,\" he said, dashing back out. I sat, trying to look demure by tucking my legs underneath me, but it put too much pressure on the wrong place, so I settled for sitting cross-legged, the front of Malcolm's shirt tucked between my legs. \n\nHe came back in carrying a tray with fruit, cheese, croissants and tea and set it on the coffee table, taking a seat on the floor to my right, his back leaning on the couch. We ate, not talking too much at first as we were both pretty hungry, listening to 'Violator' in companionable silence. As we slowed down and began to pick at the food, I slid my legs out carefully, lounging on the sofa, smoothing his shirt over me and propping my head in my hand. \n\n\"Thank you,\" I said quietly. \"That was lovely.\"\n\nMalcolm shifted, turning towards me. \"Are you sore?\" he asked quietly, brushing his fingers through my hair.\n\n\"Not too bad.\" \n\n\"Bruised?\"\n\n\"A little,\" I said with a shiver. The CD recycled, the synth hook from \"The World In My Eyes\" suddenly filling the room. I smiled at him and he leaned over and kissed me. I could taste strawberry on his lips.\n\n\"What do you have on under my shirt?\" he whispered.\n\n\"It's a secret.\"\n\n\"I don't care for secrets,\" he said, smiling.\n\n\"Then you better find out quick.\" I made to get up off the couch, but he grabbed me and pulled me back down, making me squeal with delight as he climbed on top of me and straddled my hips. \n\n\"Oh my,\" he said, unbuttoning the shirt and spreading it open. I watched his eyes roam over me. \"I seem to have you at a distinct disadvantage, my dear,\" he said, grabbing my wrists with one hand and twirling an imaginary moustache a la silent movie villain with the other.\n\n\"You have an odd idea of disadvantaged,\" I laughed.\n\n\"How so?\" He let go of my wrists and started kissing my neck, slowly moving down my body, flicking his tongue lightly over my skin.\n\n\"There are few places I would rather be than naked beneath you,\" I whispered. I ran my fingers through his hair, enjoying the luxury of being able to touch him.\n\n\"I can think of one,\" he said. He lay his length on top of me and kissed me deeply, sliding his hands beneath me. I rand my hands down his back and tugged at his shirt, wanting that skin-to-skin contact. \n\n\"Where's that?\"\n\n\"Naked on top of me?\" he asked, sitting back on his heels and taking off his shirt. He undid his shorts and, rising to his knees, pushed them and his boxers down. His cock stood out, erect, pointing slightly up. I bit my lip, a silly thought almost making me giggle. \"What?\" he asked, pulling me up and helping me to my knees. He pushed his shirt off my shoulders and I felt it fall over my calves.\n\n\"The music makes me feel like I'm in my 20's.\" I grabbed his cock and began stroking it softly. He slowly leaned back, watching my hand as it stayed in contact with him, until he was flat on his back. I positioned myself between his knees and slowly licked at his balls, my hand still stroking him gently. I ran my tongue up the bottom of his cock, pulling back his foreskin and lightly flicking my tongue against his frenulum.\n\n\"Come here,\" he groaned, grabbing me by my biceps and pulling me up to him. \"I need to be inside you.\"\n\n\"Yes, Sir,\" I whispered, lowering myself slowly onto him. I was still a little sore from being so...well used... the night before, so I moved painstakingly slow, sighing as I finally sat fully upon him. I leaned forward a bit and rocked with my thighs, slowly sliding up and down on him, the pleasure quickly replacing the pain.\n\n\"Melody,\" he moaned, his hands squeezing my hips. I smiled, moving a tiny bit faster, watching him. \"You feel so good and wet and hot.\"\n\n\"Oh, Sir,\" I whispered, dragging my nails down his chest, scraping them over his nipples. \"Say my name.\" He held my face in his hands, looking at me intently. \"I want to hear you say my name.\"\n\"Malcolm,\" I whispered, reluctant to say it loudly. \n\n\"Yes.\" He pulled me to him. holding me tight against him, and began thrusting up from beneath me. \"Say it.\"\n\"Oh, Malcolm.\" I was getting close \u2013 so close \u2013 to coming already I was almost embarrassed. He just made me feel so very good. \"I want to come.\"\n\"Yes, Melody. Yes!\" His hips moved erratically, jostling me about, grinding me in to him. I felt my body tense, my toes curling beside his thighs, as I came. He came quickly after me, hips elevated, holding me fast against him, softly saying my name over and over. \n\nHe lay back down, and I stretched out on top of him, thinking. I felt him shrink and fall most of the way out of me and I flexed, unable to stop myself, pushing him the rest of the way out. \n\n\"Unfair.\"\n\nI slid to his side, wedging myself between him and back of the couch, throwing my leg over his and running my fingers through his chest hair. His hand ran idly up and down my back a while, before resting on my hip. \n\n\"Stay the weekend with me?\" he asked quietly.\n\n\"Yes,\" I answered quickly."
    ],
    "authorname": "wanderingmindgames",
    "tags": [
        "tie",
        "restraint",
        "oral",
        "female on top",
        "genital spanking"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/bliss-ch-03-1"
}