{
    "title": "Sweet Justice",
    "pages": [
        "This is a completely non-sexual tale about right, wrong and responsibility. Each reader will have to come to his or her own conclusions about relative morality.\n\n*\n\n\"Ah, Special Agent Jenkins, my favorite FBI agent! You're welcome to sit out here on the porch or in your government sedan while I waste more of my precious retirement income on my attorney who I would think will be here within the hour.\"\n\n\"Mr. Thompson, you don't need to call your lawyer. The judge approved your writ. I've been reprimanded and suspended without pay. The case is officially closed.\"\n\n\"Which would seem to mean that you shouldn't even be here but you are; the home security camera is directly above your face---smile! Maybe this time we'll be able to get a restraining order since you're obviously not here in an official capacity but only to harass a former war hero who had never even had a speeding ticket. Murder cases, certainly those which evolve into federal conspiracy cases hinting at serial murder are never closed, Special Agent Jenkins. What do you hope to accomplish here?\"\n\n\"I'm not here to ask questions, well maybe one; I just want to talk.\"\n\n\"So you're figuring you show up here alone, along with your letter of reprimand and suspension in hand and we'll bond and I'll confess to your absurd conspiracy theory? Is Oliver Stone sitting in the car?\"\n\n\"No. I know, or at least I think I know how you three pulled it off. I'm just not sure why. I need some closure, that's all. Look, the three guys who are dead were scum bags who thanks to money and influence escaped justice. Nobody is shedding any tears for them. I just don't get it.\"\n\n\"Well, Jenkins, I have a couple of hours before I have to set out on my, 'Meals on Wheels' route and I realize you were just doing your job. I guess there just weren't any terrorists or mobsters left to pursue so you needed to find something to occupy your time. I don't really trust you as far as I can throw you. You're a damned fanatic! The ground rules are simple. I'll video record and go on the record that you wish to have a hypothetical discussion. Come on in; I just put a fresh pot of coffee on.\"\n\nJenkins sat down in the chair he had occupied on numerous other occasions. \"You knew...\"\n\n\"I knew and know nothing about the case you have been so obsessively pursuing over the last year other than what I have read in your criminal complaint and your failed indictment attempts. Possibly it would be helpful if you referred to what the unknown perpetrators knew or know. By the way, why me? Why not the other two alleged conspirators?\"\n\n\"You're the smartest and the best educated. As such, you're the one most likely to have a, 'theory' on this case. There's always a ring leader...usually the smartest one. Since you're pretty smart you are more likely to be able to come up with a viable hypothesis for why the unknown perpetrators did it.\"\n\n\"Well why don't you start the ball rolling, Agent Jenkins? I've read your criminal complaint; the one that, I am led to believe, even the Federal prosecutor, a good friend of yours, didn't have the balls to present to a grand jury---but you pushed him into it! Did you know I'm getting offers to write a book about the government's disgusting and harassing efforts to ruin the life of, let's see, this city's 'Humanitarian of the Year' three out of the last seven years? Of course I'll donate any profits from it to the Senior Center and the VFW. I guess I should thank you for that. Additionally you've made my life very interesting in the last year. I've become somewhat of a local hero. Fortunately my legal defense fund will more than cover the exorbitant legal fees I've incurred.\"\n\n\"You did hire one of the top criminal lawyers in the country.\"\n\n\"I figured that any guy who can get someone off who we all know killed those three people would have the best chance of keeping an innocent old man facing a Federal vendetta due in part to his openly expressed political opinions out of jail. And then, thanks to the Freedom of Information act coupled with a decidedly sympathetic appeals court judge, when my name showed up on the President's 'enemies list', well I'm still chuckling over that one. I worked my butt off to keep that loon out of the White House. And now the House of Representatives is debating whether or not the POTUS interfered in a federal investigation in an effort to take down political adversaries? Articles of Impeachment are on the horizon; even if they don't go anywhere we'll have a new President in November. All of the speeches and op eds in the world couldn't have ensured that outcome.\"\n\n\"For a long time I assumed that the, ah, perps in this case never expected that it would go Federal. Three isolated execution style hits in three different states. There was a one in a million chance that they'd ever be connected. But they were and you, ah, the perps anticipated it. They were always several steps ahead of the authorities. We got played and the media didn't help.\"\n\n\"Well, let's review, Agent Jenkins...\"\n\n\"Call me Tom.\"\n\n\"Okay Tom, you already know my name, it's Frank. As I was saying, let's review. Three scum bags were murdered, executed as you said over a period of a month or so. One had killed a beautiful young woman almost two decades ago while driving drunk and left the scene of the accident. Medical examination indicated she would probably have survived if she'd gotten medical care. He had money and influence and got a two month suspended sentence, a year of probation and lost his drivers license for a year. That young woman was my high school sweetheart.\"\n\n\"The second scum bag fleeced the old and vulnerable with a stock swindle scheme. He ended up with a two year suspension of his securities license. Bob Mathis' father lost everything he had and unable to provide for his family, took his own life to provide his aging and sick wife the benefit of his life insurance.\"\n\n\"The third sicko molested, sodomized and raped a twelve year old boy. The trauma drove that boy into a coma fifteen years ago from which he never awoke. His mother, Jim Johnson's sister, was driven to psychosis from which she never recovered and was confined to a mental institution for twelve years before she escaped and killed herself. The criminal bastard received a six month sentence under a plea bargain, most of which was suspended. In fact he served twenty days in a fairly hospitable county lockup. I have to say if I had the chance to meet the perpetrators of these crimes I'd shake their hands; they performed a public service although certainly vigilante justice is difficult to condone in our, 'kinder and gentler' society.\"\n\n\"Why'd they wait so long to do it? I mean all three of you faced horrible tragedy and moved on with your lives to become well adjusted, pillars of the community, why didn't the perps do it sooner? Why weren't they able to forgive and forget as you three seemed to have done?\"\n\n\"Tom, does anyone really ever forgive and forget such unspeakable miscarriages of justice? Where were you and those of your profession when those three were essentially getting off for murder?\"\n\n\"I was still in school; I went over all three of those cases in detail. Justice did not get served in any of them.\"\n\n\"Exactly!\"\n\n\"The three of you never denied meeting each other at the national shooting competition. According to witnesses you only met once. The three of you shared a beer on the back veranda at the lodge on the final night of the contest and were together for no more than an hour.\"\n\n\"Again I have you to thank that the three of us have become close friends. As you know we had no contact before or after that evening. At least you were never able to prove any contact. You subpoenaed our phone records, tore our homes apart, searched our trash, took our computers and scoured our email accounts; you put us under surveillance and questioned us repeatedly. It was just three old war vets sharing a drink and telling war stories. We probably never would have become so close if you hadn't lumped us together in your absurd conspiracy theory. Then again, I suppose if terrorists can figure out how to communicate without the government being able to do anything about it, it shouldn't be that difficult for three law abiding citizens.\"\n\n\"Disposable cell phones and first class mail?\"\n\n\"Well I suppose if one wants to communicate without big brother getting involved those would be viable options.\"\n\n\"The guns used...\"\n\n\"The guns you were never able to find? By the way, your jerks damaged a five thousand dollar vintage Colt that had never been fired. You destroyed its value. Any idiot could have determined that it hadn't ever had a round through it but you morons had to test fire it rendering it no longer of collector value. We have filed suit for the damages on that one.\"\n\n\"If the perps had basic gunsmithing skills, changed barrels, reshaped the breech face, extractor and ejector and policed their brass, it would be virtually impossible to match the gun to the crime. We determined the type of gun used in each case from the slug and...\"\n\n\"None of the three of us had that exact make, model and caliber. You know that; you confiscated all of our legally registered handguns. You checked purchasing records---which the law says should have long since been destroyed. None of us was missing a gun. None of us owned a gun of the exact caliber and type used in any of the murders.\"\n\n\"A different caliber barrel is not that hard to retrofit if you know what you are doing.\"\n\n\"Did you ever find any of those barrels?\"\n\n\"No.\"\n\n\"When you determined the make of the bullets used, did you ever find any of that brand in our possession?\"\n\n\"No.\"\n\n\"Exactly how did your perpetrators travel by air, hundreds, even thousands of miles with a hand gun?\"\n\n\"They didn't. One of the other conspirators left it where they could acquire it, use it and then leave it to be disposed of by one of the others.\"\n\n\"What about the alibis? At least two of your so-called conspirators had rock-solid, iron- clad alibis attested to by dozens of people at the time when each murder occurred.\"\n\n\"But in each case the third alibi was a close call. No one saw you that day. Three delivery men said they dropped packages off at the door and heard you working in your wood working shop and assumed you just couldn't hear the doorbell---but no one actually saw you. Another went out on his fishing boat overnight as he often did; people saw him go and saw him return with freshly caught fish. The third was deer hunting; people saw him in his favorite blind but no one actually spoke to him. Look, let me tell you how I think it went down.\"\n\n\"I'm all ears.\"\n\n\"In each case the person directly connected to the victim was completely uninvolved in that crime. In each case that individual visited the city in question a couple of weeks earlier to scout out the situation. The information gathered was then turned over to the second conspirator who arranged the set up, left the gun to be used where it could easily be retrieved ---probably in a parked car---and then came back later to pick it up. The shooter then came on the scene, retrieved the gun, waited a short time for the victim to arrive at what was an unpopulated and dimly lit locale---parking lots---and shot them with a single round to the head at close range. All three were marksman shots. The three shooters, I'm sorry, let me rephrase, three of you were within a hundred miles or less of the three murders when they occurred attending legitimate functions. Each left a wakeup call but no one can prove that each stayed in that hotel room all night, although in one case a maid claimed that she spoke to someone through the door in an attempt to leave extra pillows but wasn't positive it was the same room. In the second someone did pick up and eat the breakfast room service left outside the door and in the third a call did come from that room complaining about a noisy party one floor above. As a result, no one can prove that you weren't in those rooms. With no direct relationship between the designated shooter and the victim it would have been impossible to prove as a single crime; it had to be a conspiracy to have a prayer of prosecution.\"\n\n\"The rental car companies check mileage.\"\n\n\"A second, 'rent a heap' rental paid in cash or even a car acquired by one of the other conspirators and left in a convenient location.\"\n\n\"You never recovered a scintilla of forensic evidence.\"\n\n\"Each perp wore outer clothing, maybe a jump suit, gloves, hat and so on.\"\n\n\"Did you ever find evidence of that?\"\n\n\"No, the second conspirator disposed of the evidence.\"\n\n\"So, as you see it, Tom, each individual crime had no motive, means or opportunity and no weapon. But if you could prove that it was a conspiracy you had a chance. If a couple of cops at a police convention hadn't chatted in the bar about the mysterious murder cases they were working on, it might never have gotten kicked up to the FBI?\"\n\n\"Exactly and that's what made me sure that we could solve it; someone had to have screwed up somewhere. Someone would slip up or break. How did you...how did the perps know they weren't off the hook, that someone might just tie it all together?\"\n\n\"I wouldn't think they knew it and they might have hoped it wouldn't happen but in the modern era in which Federal and local law enforcement communicate more openly, that chance had to exist.\"\n\n\"None of the three of you, as I see it, ever really lied to us under questioning, at least not early on. But each of you knew exactly when to stop talking and ask for your lawyer. You wasted so much of our time telling us things that we thought meant something---and in the end it meant nothing.\"\n\n\"Once you reached the point in the interrogation wherein you clearly indicated that we were suspects in a capital murder we did what any law abiding citizen should do; we exercised our constitutional rights. I teach a class in law for the average citizen over at the community college. I took a number of law courses as an undergrad; I even took the law school entrance exams but life got in the way. I always tell my students to ask for a lawyer; too many death row inmates are being freed every day due to modern DNA procedures. If there's a crime the cops need to make an arrest and if you remotely fit the bill, they'll lie, cheat and steal to pin it on you.\"\n\n\"Your friend in Cleveland is a retired cop; I would think he's pretty familiar with police procedures. Your friend in Atlanta did extensive research for a novel he wrote about forensics. Nevertheless, I was always sure if we cranked up the heat one of you would break, that your conscience would get the better of you.\"\n\n\"What drew the three of us together on that veranda that night, Tom?\"\n\n\"Competitive shooting and the fact that you were all three ex-military.\"\n\n\"We are more than simply former military, Tom, we are all three combat veterans. One us was a POW for over a year. I was a helicopter pilot; before I went overseas I went through the Survival, Escape, Evasion and Resistance school in Panama. The third one was with Special Forces and was charged with responsibility for interrogating enemy prisoners and went through some pretty brutal training to prepare him for that task.\"\n\n\"The press sure as hell didn't hurt.\"\n\n\"No, I agree in spite of the fact that I distrust the media. Fortunately someone was helpful in providing them complete dossiers on the three victims---and the three supposed perpetrators. With all of the recent news about American citizens being detained without due process combined with the fact that all three of us are politically active, this was a story they couldn't resist. A few stinging editorials about the FBI---who is supposed to be hunting down terrorists, gangsters and drug dealers---harassing three retirees with unblemished records brought the story to the national scene. Add in our humanitarian and philanthropic work and our war records and the result was as expected.\"\n\n\"Typical criminals who think they have pulled off the perfect crime can't help themselves; they have to tell someone---brag.\"\n\n\"How old are typical criminals, Tom?\"\n\n\"Eighty percent are under twenty five.\"\n\n\"How old are the three of us?\"\n\n\"One is middle sixties, one just turned sixty and you're a year away.\"\n\n\"How old are you Tom?\"\n\nI'm thirty-two.\"\n\n\"So you're approaching a more mature phase in your life. Tom, when you were eighteen to twenty-five and you went out one night and, shall we say, 'got lucky', what did you do the next day?\"\n\n\"I bragged to my buddies about it.\"\n\n\"Well, Tom, when I get lucky with a younger woman---that would be one under fifty---I tend to keep it to myself. You cross a threshold in life, I think after the big five-o at which you stop bragging about accomplishments and when you do something, shall we say, special, you keep it to yourself. You're not trying to impress friends anymore. You derive far more satisfaction from knowing that you've still 'got it' than from bragging about it.\"\n\n\"So, hypothetically, you're saying that if the perps in this case were of your generation this whole thing was more about personal satisfaction than revenge?\"\n\n\"I certainly wouldn't have any personal knowledge of what bones your perpetrators had with the three victims but as I understand it people have been lining up for years to get a piece of those dirt bags. Revenge is an overrated motive which connotes more of a crime of anger or passion. When hardship hits you suck it up and move on and that becomes far easier with age. No, I would think that the three victims in question were picked because no one would miss them and they had hurt untold numbers of people. They were also convenient in that the perpetrators knew, possibly from news accounts, who they were and rationalized that the world wouldn't morn their passing.\"\n\n\"So you believe this had nothing to do with revenge or retribution? We went back years and talked to friends and family. All three of your appeared well-adjusted and had never even made a threatening comment in private. That's the part that always got to me; if not revenge, then why? My inability to articulate a motive was the ultimate downfall of the case. Revenge, a crime of passion, monetary gain---those are motives you can sell to a jury.\"\n\n\"I wouldn't think revenge was really an issue; at least I doubt that it was the driving force. It might have had some influence on target selection. No, I sense that your perpetrators, and I seriously doubt that it was a conspiracy, more like a coincidence, had a different motive. They each did it to prove to themselves---and no one else---that they still had, 'the right stuff'. From my standpoint they did society a service. Unfortunately for you and your career you invented a ridiculous conspiracy theory devoid of facts, motive or evidence and went after three very sympathetic citizens. You're an experienced investigator; the rules of evidence had to have told you that you didn't have a good chance of success---and might well hurt yourself in the process. Why did you keep at it?\"\n\n\"You know the old phrase, 'the FBI always gets their man'. Then I became fascinated the more I dug into what appeared to be the perfect crimes. My obsession with understanding how and why clouded my professional judgment. I think I'm pretty much on the mark on the how and you've given me a glimpse into the why.\"\n\n\"Hypothetically, of course.\"\n\n\"Absolutely.\"\n\n\"Another cup of coffee?\"\n\n\"No, I need to be going.\"\n\n\"I'm sorry about your suspension and reprimand. You were just doing your job and you seem to take that job very seriously.\"\n\n\"Did I ever get close? What would I have had to produce to sell this?\"\n\n\"A witness, either to the crime or one that would shake the alibis, a gun or gun barrel or a confession.\"",
        "\"Where do you think the gun barrels are?\"\n\n\"Ground to dust, melted down or dissolved in acid with all evidence of same spread over a very large area. There's no registration on gun barrel purchases; there are always many available for sale even at flea markets.\"\n\n\"Witnesses?\"\n\n\"It's all about perfect timing and patience. It's likely that the perpetrators made several dry runs, even aborted if a witness became an issue. There was never a need to rush; 'haste makes waste' and generally results in errors. In terms of whether or not the shooters were actually in their hotel rooms on the nights in question, I would expect that someone was, at least part of the time just in case a call came in, a maid knocked, or whatever.\"\n\n\"A confession?\"\n\n\"Don't hold your breath on that one Tom.\"\n\n\"Just thought I'd check.\"\n\n\"Nice try. Drop by any time you want to have a hypothetic discussion of a case that has you stumped.\"\n\n\"I might just do that; it's been a pleasure, Frank.\" Agent Jenkins said, extending his hand.\n\nFrank shook his hand. \"The pleasure was all mine, Tom.\"\n\n*** \"Well, Tom, it looks as if the Director has lifted your suspension---a lot sooner than I would have expected. 'Seems that he received several letters from your \"Murder Incorporated at the Senior Center\" gang attesting to your character...imagine that.\"\n\n\"It gave me time to reflect; thanks again for letting me have access to the old case file data base. I went back ten years and reviewed unsolved murders that met very specific criteria.\"\n\n\"You are going to let this go, aren't you Tom?\"\n\n\"Absolutely! But just for the record, take a look at these statistics. Approximately ten years ago the first in a long serious of similar homicides began to crop up. In every single case it involved a victim who either had a significant previous criminal record or who had been charged with horrific crimes---and escaped justice. The similarities are uncanny...no witnesses, no forensic evidence---and a 'victim' who was blatantly a 'blight-on-society' scumbag, who no one was going to miss. The lack of witnesses and forensics combined with the character of the 'victims' meant that law enforcement pretty much just went through the motions and then filed the cases away in the 'unsolved' archives. We've got people who sold drugs in schools, terrorized neighborhoods, sexually abused children, killed someone while driving drunk, pilfered pension funds, scammed the elderly, took advantage of the disadvantaged---you name it.\"\n\n\"You're not suggesting that our infamous senior citizens were responsible for this 'crime wave'?\"\n\n\"Impossible! There aren't dozens or even hundreds---there are thousands of these cases in virtually every corner of the country! While we in law enforcement have been quick to take credit for the dramatic decline in crime over the last decade, I'm beginning to believe that we had a little help of the 'Star Chamber' variety. Here's an example; this particular locale was notorious for letting drunk drivers off with a slap on the wrist. In one month three repeat offenders\u2014who had either killed or permanently maimed innocent people while driving under the influence---were, ah, 'convicted' with a single bullet between the eyes. The local cops had to see the pattern---but drunk driving almost ceased to exist in that that area. The 'message' was not lost on the civilian population. Local citizens groups sprung up, staked out the most offensive local watering holes and reported potential drunk drivers, recorded license plates and even followed them. The judges who were letting these DUI offenders off were sanctioned by the bar and ultimately forced to resign.\"\n\n\"Interesting stuff, Tom, but...\"\n\n\"Look at this one! A drug gang praying on elementary schools for God's sake! They were essentially wiped out over a two month period. A serial pedophile...a chronic wife beater who was politically connected...scam artists...crooked politicians...loan sharks...predatory gambling operations...a gang of young punks who just beat on and killed people for thrills...its all there and in every case the perpetrators had repeatedly escaped justice.\"\n\n\"How many?\"\n\n\"Over six thousand...and that may be the low side.\"\n\n\"Jesus!\"\n\n\"Look, boss, let's just assume for the sake of argument that my little trio did exactly what I believed they did---and have been doing so for ten years. But it's not isolated, it's a movement, probably even connected and coordinated, albeit loosely and very covertly. Senior citizens...many if not all with law enforcement or military training...needing to still feel vital and able to contribute...stepping in where they perceived that society was not being served by the criminal justice system.\"\n\n\"You do realize that after the awful adverse publicity that your case created, there isn't a law enforcement agency---local, state or federal---in their right mind that would ever again attempt to bring such charges. Nor is there a DA or Federal prosecutor who would have the nerve to take said case in front of a grand jury and seek an indictment. Did you take a look at the polls? Better than eighty-eight percent of the people don't think they did it. As many believe the government acted capriciously in attempting to go after them. More than seventy-two percent believe that even if they did it---good for them! How in the world did this go on for a decade and it took this long for 'us' to put the pieces together?\"\n\n\"It wasn't arrogance nor was it carelessness. I believe in my heart it was completely planned and intentional.\"\n\n\"What?\"\n\n\"They played us...have been playing us for years but this one was a masterful stroke.\"\n\n\"I don't get it.\"\n\n\"You just answered your own question. No one in there right mind will ever again have the nerve to go after a bunch of kindly old men under similar circumstances in the future. We never had a shred of evidence...we had a theory. We molded our theory into a conspiracy charge. We---I---hounded the federal prosecutor into seeking an indictment and three grand juries laughed him out of the room! They made fools out of us...just as they intended. If you dig into the facts, you discover that those local cops at a law enforcement convention who 'bubbled' this up to the federal level are older...probably close to retirement and in all likelihood clearly either already part of the 'movement' or planning to join it as soon as they retire.\"\n\n\"Christ...I'm beginning to buy into your theory.\"\n\n\"Well, then let's mobilize the bureau, subpoena the records of the AARP, Veterans Affairs and every retired LE organization, then stake out every Senior Center, VFW hall, 'Meals on Wheels' operation and put a tail on every potential suspect over the age of fifty-five...which by my calculations would be somewhere in the neighborhood of...oh, I don't know...five million?\"\n\n\"You can't be serious!\"\n\n\"You're right; I'm not. First, we're already over burdened dealing with real criminals for whom we can gather real evidence and get real indictments---and convictions. Secondly, do you really think it was coincidence that the press knew every move we made almost before we made it? Our senior citizen vigilantes had help. That help quite probably ranged from 'suggesting' potential targets to cursory investigations of the homicides, a convenient 'heads up' or even a well-timed leak to the press. They had help in local and state law enforcement---why not Federal? I'm done tilting at wind mills. This is not a good fight...it's not one 'we' can win. I've grown pretty convinced that it's not even one I want to win. Frank Thompson was still playing me when I went to visit him.\"\n\n\"You went to visit him!\"\n\n\"Yeah, the day I was suspended; he made me coffee. It was a very cordial conversation he was still spinning me...playing me...the man is a master.\"\n\n\"Tom, officially my position is---let this go! Unofficially...the same advice applies.\"\n\n\"I couldn't agree more. I just needed to share it one last time with someone I trust to get a sense that I'm not completely nuts. You will not hear me open my mouth about this matter ever again.\"\n\n\"That's what I needed to hear. 'Ready to go nail some real criminals?\"\n\n\"I thought you'd never ask.\"\n\n*** \n\n\"Hey, Frank, you really shot well today for an old fart...how's it hanging?\"\n\n\"It's still hanging, Bob...the older I get the more reassuring that fact becomes.\"\n\n\"It got a little dicey there for a while.\"\n\n\"It had to be done, Bob. We've been very careful but also very lucky. Our associates down in Texas were always every bit as careful but they got unlucky...once. That flight attendant came out of nowhere. She was an honest woman who told the police what she saw. In spite of the fact that her statement became less certain when she discovered who the dead man was, she would not have lied under oath. The locals down there were days away from seeking an indictment. The DA in that county has a decidedly distorted view of justice. It had to be done and it just wasn't one of those things you can delegate. We're founding members of the board of directors; in all humility we're probably at the top of the game; we had a responsibility...to the others. We all discussed the fact that this day might come; we even chose subjects that we had remote ties to. \"\n\n\"That damn FBI agent was one sharp SOB. What do you think he's figured out?\"\n\n\"I spun him pretty hard when he came to visit me but I think he's got a pretty complete picture.\"\n\n\"Is that going to be a problem?\"\n\n\"I don't think so. Here are our next three 'subjects'.\"\n\n\"Jesus, Frank, these are copies of official FBI case files...how the hell did you get your hands on these?\"\n\n\"They were left inside my screen door. 'You remember that video surveillance system I told you about?\"\n\n\"Sure.\"\n\n\"I was very careful to point it out to Special Agent Jenkins when he stopped by for his hypothetical chat. After all of the surveillance he's probably got my 'Meals on Wheels' schedule committed to memory. We may need to consider changing the by-laws to admit younger members.\" "
    ],
    "authorname": "Dinsmore",
    "tags": [],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/sweet-justice"
}