{
    "title": "Emma Ch. 04",
    "pages": [
        "AUTHOR'S NOTE: You're welcome.\n\n***\n\nGood food, a bottle of wine and a burning candle between us. I'd been looking forward to this for a long time. I looked at her from across the table and was captivated by her piercing green eyes. Her foot playfully brushed against mine under the table and she spoke in that soft, sweet voice of hers. \n\n\"London is amazing this time of year. It's all sunshine; no typical dreary London fog.\"\n\n\"I've heard. I'd love to go again sometime.\"\n\nShe took the wine glass to her lips once more and took a small sip. There was something so elegant about her. A quality I hadn't noticed before. But as she sat there in her dark green dress peering over the top of her glass at me, I couldn't help but be captivated by her.\n\n\"I'm glad we did this Nate, it's been too long.\"\n\n\"Over two years by my count. I must admit, I have missed you. I've thought about you more than once.\"\n\nShe smiled and despite the dim lighting in the restaurant, I could see her blush. I was quite pleased that I could elicit such a reaction from her. There was a time when I hadn't in my wildest dream, even thought I could be with her. And while I wasn't quite there yet, tonight was going rather well. \n\n\"I'm surprised,\" she said shyly as she avoided my gaze. \n\n\"Why? We were close. Of course you'd be in my thoughts.\"\n\n\"No, it's not that. Just with the company you keep, I didn't think I'd register in your mind anymore.\"\n\n\"The company I keep?\" I replied, feigning confusion even though I already knew where this was leading. \n\n\"You know who I'm talking about. I didn't want to tip-toe around it or make you uncomfortable but you know me and my curiosity,\" she said slyly. \n\n\"That I do Amber. I remember our high school days like it was yesterday.\"\n\n\"So, and I'm sorry if this sounds crass, but why did you and her break up?\"\n\n\"Her\"; I didn't need to ask who she was referring to. It seems that my whole life is now defined by the time I spent with Emma Watson. Amber, an old friend (and crush) of mine from high school, was not the first person to ask about Emma and she certainly wouldn't be the last. I use to enjoy explaining at first; that thrill of being able to tell people that I dated a famous actress. But the thrill soon wears off once I realise what I've lost. I debate the decision constantly. Some days it makes perfect sense while others it seems like the stupidest thing I've ever done. \n\nLately I've taken to dodging the question the completely. But Amber and I used to be very close friends, and even though we'd long since fallen out of touch, she did agree to go on a date, and that entitled her to some small amount of candour. \n\n\"To be honest, I'm not sure anymore. I mean, I remember the events and the conversation that led up to us breaking up but now that I think about it, those problems don't really seem like that big a deal. Not really. Does that make sense?\"\n\nAmber chuckled and replied, \"That was pretty vague.\"\n\nI nodded in agreement. \"Put it this way; at the time, being close to family and friends and starting my career felt really important. With her, normalcy seemed like this weird, unattainable notion. Our time was beautiful in the moment but it couldn't last. We never had a normal relationship. Not really. We stayed at expensive hotels, dined at expensive restaurants and spent an obscene amount of money on pointless shit we didn't need. It was fun. It was the type of thing you do when you're madly in love and had millions of dollars to waste. But we never did normal relationship things. And with our situations, we couldn't find a way to just be together normally. So we broke up,\" I said morosely before more cheerfully adding, \"So basically, that's a very long way of saying, she lives in England, I live in Australia and neither of us wanted to leave our lives behind for the other person.\n\nAmber was silent for a moment as she took in all this information. Amber could be a hard person to read. If she was anything like she was in high school, I had the feeling she was getting ready to drop some advice. After neither of us said anything for a while I said,\n\n\"Well, nothing kills a date like talking about your ex huh?\"\n\nAmber laughed. \"No, it's not that. It's just what you said...\"\n\n\"What about it?\"\n\n\"It doesn't sound like you at all.\"\n\n\"How do you mean?\"\n\n\"You hate your job,\" she said bluntly.\n\n\"I wouldn't say I hate it. But it can be tough.\"\n\n\"You literally said you hated it 30 minutes ago. We're only seeing each other tonight because you cancelled last week due to some last minute emergency at work. Not to mention you spent 10 minutes after we first sat down complaining about the partners in your law firm.\"\n\nI shrugged, not really having a good response. She was right after all. She continued and said,\n\n\"And no offence, but you're not exactly the most social person.\"\n\n\"I asked you out didn't I,\" I said proudly.\n\n\"Almost 9 years after high school ended and after I'd been single for a year.\"\n\n\"I didn't know you were single,\" I pointed out.\n\n\"Yeah, because you didn't call for three years,\" she added.\n\n\"Correction, you didn't call nor did you express any interest in hanging out. So who's really the anti-social one?\" I replied, sounding more bitter than I had intended.\n\nAmber merely raised an eyebrow and stared at me for a moment. It's up for interpretation which one of us let our friendship fade away and while I contend (albeit silently) that it was her, I was beginning to suspect she felt differently. But this was a date after all and Amber was significantly less stubborn than me and said quietly,\n\n\"Look, I'm sorry if that sounded like an insult. I'm just saying, Emma Watson seemed to make you happy. I don't understand why you'd give that up for a life that's-\"\n\n\"Shit?\" I interrupted as I felt my old, and perhaps unwarranted resentments, towards Amber bubbling to the surface. \"Boring? Humdrum?\"\n\nAmber simply smiled and said, \"I was going to say full of regret. Regret that even for all your good and valid reasons for breaking up, there was only one factor that really mattered. That you were in love,\" she said quietly before adding, \"And I suspect you still are. And it baffles me why you don't just call her right now. I mean, if you have the chance at happiness, take it. Who cares about silly little things like distance or work? They can wait.\"\n\nSuddenly I remembered one of the reasons why I loved Amber so much back in high school, why it hit me hard when we fell out of touch and why it made me so happy when I bumped into her and she agreed to go on a date; she knew me well and unlike my other friends, she could cut through the bullshit and identified exactly what was bothering me. I returned her smile and looked down at our plates; half eaten and beginning to grow cold.\n\n\"Wanna get out of here and grab a drink?\"\n\nAmber smiled and replied, \"Absolutely.\"\n\n***\n\nDays past and I debated whether to call Amber back. The rest of the date had been pleasant, but I was beginning to think the friend-zone suited us both quite well. This was quite a backflip for someone who once fantasised about her daily during the latter years of high school. But the funny thing about dating someone like Emma Watson is that suddenly everyone else seems to pale in comparison. I tell myself I'd get over her. Hell, I often tell myself I'm already over her; but my increasing unhappiness and a newfound high standard of women says otherwise. \n\nOutside of my dating life, things were normal. Today was routine, I went to work, had a few drinks co-workers afterwards before coming home to watch some TV. It was actually a good day. My complaints aside, I had to admit that lately my work had been quite good. Despite the long hours, I still found time for friends, both new and old. And as an unexpected bonus, with all the expensive clothes I bought from my time with Emma, girls in bars often mistake me for some big-shot lawyer; unfortunately only the lawyer-part was true and none of those encounters led anywhere but female attention is always welcome. It was a good life, but it was nothing compared to my time with Emma. \n\nI arrived home to an empty house. I'd been accustomed to living alone for sometime and prior to running away with Emma, it never bothered me; but after I came back, the silence in the house seemed deafening. I missed having her there with me. We'd broken up a long time ago; watching her board a plane at JFK airport in New York seems like a distant memory now. \n\nAnd so there I am, sitting on the couch, watching my second nightly news broadcast of the evening when my phone rings. My attention was mostly focused on the sports recap and so I didn't even bother to look at the caller ID as I answered. \n\n\"Hello, Nate speaking.\"\n\n\"Hi Nate,\" said a soft, English voice that I recognised immediately.\n\nI sat up straight and put the TV on mute. \"Emma,\" I said after a pause.\n\n\"How've you been?\"\n\nI was so blindsided by her call that all I could muster in reply was, \"Good. Really good.\"\n\n\"I'm glad.\"\n\nThere was a brief silence. It was as if she didn't anticipate the conversation getting this far. \n\n\"Happy Valentines Day,\" she said, clearly without thinking it through.\n\nConfused, I replied, \"Valentine's Day was yesterday.\"\n\n\"Oh, right; Australia's a day ahead, I forget sometimes. I suppose that's not a completely appropriate to say such a thing to an ex-boyfriend.\"\n\n\"No, it's fine. It's nice to know you're thinking of me.\"\n\nShe chuckled quietly. That same chuckle that typically accompanied her blushing.\n\n\"Are you busy?\" she asked. \n\n\"Not at all. I'm alone tonight.\"\n\n\"Aw, I'm sorry,\" she said sincerely. \n\n\"Don't be. It's a good TV night.\"\n\nThis time she laughed out loud. Music to my ears. I let the moment linger and didn't say anything for a moment. \n\n\"So listen, I'm just calling to...\" she said before drifting off for a moment. \n\nI didn't interrupt and waited for her finish her sentence. Truth was, I was curious as to why she was calling. If I had to guess I'd say she'd become lonely again like the first time I met her; but this was just a guess.\n\n\"I just wanted to hear your voice. I miss you,\" she said.\n\n\"I miss you too,\" I said with a smile. \"What have you been up to?\"\n\n\"Work; it's always work. And a few charity gigs here and there. The usual.\"\n\nFor a moment, I almost blurted out that she should fly to Australia and stay with me. But I knew things could get messy. We'd broken up for a reason and Emma wasn't the type to simply pop in for a quickie. And so instead of suggesting that, we continued on with idle chit-chat.\n\n\"What about you?\" she asked.\n\n\"Same here; I've been working a lot. The law firm is opening its first international branch in New York so it's been a madhouse recently. I haven't had much time for anything else.\"\n\n\"Really? That's no good. You have to find some time to relax,\" she said, sounding genuinely concerned.\n\n\"It's not that bad really. I still have plenty of time to myself. I even went on a date a couple days ago,\" I said without thinking and immediately regretted it. \n\n\"Oh?\" Emma said in a tone that suggested this wasn't welcome news.\n\n\"Yeah. You remember that girl I told you about from high school. The one I was really close with but fell out of touch with?\" I said as I felt myself digging deeper into the hole I had created.\n\n\"Vaguely. Her name was Amy wasn't it?\"\n\n\"Close; Amber. Yeah, I bumped into her and we went on a date.\"\n\n\"How'd it go? Was it everything you hoped?\"\n\n\"More or less,\" I replied before adding after a pause, \"Well actually, less.\"\n\n\"Aw, I'm sorry. What went wrong?\"\n\n\"Nothing went wrong. She was lovely, I was a bit of a jerk but other than that, we had fun. But I'm not madly in love with her like I once was. Maybe I just romanticised our friendship too much.\"\n\n\"Yeah, I do that too. There's been more than a couple of relationships that I've looked back on and said, \"what was I thinking?\". But like they say, hindsight is 20/20.\"\n\n\"I hope I'm not one of those.\"\n\n\"Of course not! Why would you even say that?\" she asked sounding a little bit hurt.\n\n\"I don't know. Maybe I'm just paranoid. I've just been thinking a lot about us recently.\"\n\n\"Oh? Care to share?\" she asked eagerly.\n\nThere was something so terribly sad about merely reminiscing about better times with an ex. I paused for a moment before responding, \"Maybe later.\"\n\nAnd with that, our conversation suddenly grinded to a halt. It was a bit tense but truth be told, I was just grateful that the mention of my date didn't make things too awkward. I held the phone close to me ear and didn't breathe for a few moments. I listened intently for any sound and just heard traffic. It sounded like she'd stop breathing too. The silence probably only lasted about 5 seconds but it felt like an eternity. I was about to say something when suddenly she said,\n\n\"I don't think I ever told you but I finally got around to looking through my finances not too long ago. I managed to calculate how much we spent during our time together.\"\n\nI sat up; my attention having been thoroughly aroused. \"I always wondered about that. How much?\"\n\n\"Guess.\"\n\n\"I don't know; $50,000?\"\n\n\"Aww, that's cute,\" she laughed. \"You do realize that Breitling watch alone costs over 3000 euros? And the hotel in Geneva we stayed at for over three weeks costs about 1500 euros a night.\"\n\n\"Jesus!\" I exclaimed. \"Why didn't you tell me we were spending so much?\"\n\n\"You never asked. And I was afraid you'd tell me to stop spending so much.\"\n\n\"That doesn't sound like me,\" I replied. \"Okay. Did we spend over 250,000 euros or pounds or US dollars or whatever currency we're going by?\"\n\n\"Let's make things easy and go by US dollars. And in any event, we easily spent over 250,000.\"\n\n\"Wow,' I muttered before asking, \"Over a half million?\"\n\n\"Easily,\" she chuckled.\n\n\"Jesus,\" I mumbled. \"Over a million?\"\n\n\"Unfortunately we fell just short of a million,\" she said, almost sounding disappointed. \"My accountant almost had a heart attack we he saw my bank balance. He said I needed to keep him in the loop more often. I think he just wants to increase his billable hours.\"\n\n\"Fuck. I don't remember spending that much.\"\n\n\"We spent 4 months together. I mean, the money spent on condoms and birth control alone.\"\n\nI thought back on our time for a moment before replying, \"I don't remember using condoms many times.\"\n\n\"That's because you didn't. I kept some on hand just in case but you kept leaving them behind in hotels rooms so I kept buying more.\"\n\n\"I ran out of space in my hand luggage,\" I shrugged.\n\n\"That reminds me. Did everything you sent back to Australia during our trip arrive okay? I never asked.\"\n\n\"Yeah. I had it all sent to my parent's house. When I got back, there were 4 large boxes and a whole bunch of smaller packages waiting for me. I hadn't realised we bought so much. It was hard keeping track of everything, what with me constantly sending stuff back to Australia. When I opened them up, it was like Christmas.\"\n\n\"Hence the reason we spent nearly a million.\"\n\nSilence once more; but it wasn't awkward this time. I was merely thinking back on all our shopping adventures and I suspected she was thinking about that too. Suddenly a thought popped into my head,\n\n\"By the way, when did we last speak?\"\n\n\"You don't remember?\" she asked, sounding a just a tiny bit hurt.\n\n\"What do you expect? It's been two years since I left you at Kennedy Airport.\"\n\n\"I don't think it's quite two years, barely 18 months by my count, but it was a long time ago I suppose. Aside from the odd text message, we last spoke about 9 months ago; that was back when we were still calling each other once in a while. I called you and you said you were at work.\"\n\n\"Oh yeah, that's right. I don't remember that being a particularly memorable conversation.\"\n\n\"It wasn't. You just complained about all the paperwork on your desk. I'd had the feeling I'd caught you at a bad time.\"\n\n\"Yeah, that was a stressful period,\" I said while omitting the fact it was also a period in which our phone calls had become something less to look forward to and more done out of obligation. After months of intermittent phone calls, we simply ran out of things to talk about. Weird thing was, at that point we were officially broken up. We had actually been broken up since Emma ran off to do her film. Nevertheless, we talked for hours about the possibilities of continuing where we left off but due to our circumstances, we agreed to just be friends and decided that it was for the best that we didn't see each other in person again, at least not for awhile lest we decide to run off for another 4 months again and I do irreparable damage to my career, which at that stage (and arguably still at the current stage) was in its infancy, not to mention her pissing off her manager and agent again with another prolonged absence from the limelight.\n\n\"Why did you stop calling after that?\" she asked.\n\nAnother good question. The honest answer was because at that point, I was happy with where we'd left things. And as much as I had missed her, I was fine with going back to my life. Of course that's not reflective of how I feel at this very moment. But like I said; some days, breaking up seems like the best decision ever, others times it seemed like the worst. All this time later and I'm still indecisive about it. Maybe that in itself says something. Despite all my musings on this topic, I just answered,\n\n\"Do you really want to get into that?\"\n\n\"Not really,\" she replied glumly. \n\nAnother pause in the conversation. And once more we were back at awkward. But this time, I broke the silence relatively quickly and said,\n\n\"I saw some photos of you online the other day. You looked good. Thinner than I remember.\"\n\n\"You thought I was fat?\"\n\n\"What? No,\" I stammered. \"You were gorgeous. It's just you looked thinner in the photos is all.\"\n\n\"Well, exercise does wonders. The only exercise I got when we were together was when I was on top.\"\n\nAnd with that simple nonchalant statement by Emma, a whole host of other memories began to flood back. And they almost all involved Emma in some state of undress. Nonetheless, I kept my response clean and replied,\n\n\"I seem to remember us playing tennis while in Japan.\"\n\n\"Yeah. We played for about 20 minutes before we ended up having sex in the sauna.\"\n\nI laughed. Japan was early days for us so we couldn't keep our hands off each other. This wasn't a conversation I hadn't expected to be having with Emma after we'd broken up but I wasn't complaining. \n\n\"Hot, sweaty sex,\" I said fondly. \"That was a memorable one.\"\n\n\"Yeah it was. Still, we only did that because I was kicking your arse on the tennis court.\"\n\n\"You were not.\"\n\n\"I was.\"\n\n\"Okay, maybe you were,\" I admitted. \"But I was distracted. You're tits were bouncing everywhere and clinging to that shirt you were wearing. Not to mention those tiny shorts.\"\n\n\"If I'd known I'd be running away with you after my movie premiere in Sydney, I might've packed a sports bra.\"\n\n\"Hey, I wasn't complaining; it was ridiculously sexy what you sweat it out on the tennis court.\"\n\nEmma chuckled, \"Anyway, my point is, I've been going to the gym again so I'm back in shape. I'd gotten too soft when we were together.\"\n\n\"I had no idea you were such a health freak.\"\n\n\"I wouldn't call myself a health freak, I just like to keep in shape. A couple more months of constant sex and dining in 5 star restaurants every day and I assure you, my figure would have gone to hell. Also my manager would've killed me.\"\n\n\"I wouldn't have care.\"\n\n\"I bet you'd have cared a bit.\"\n\n\"I wasn't with you because I was attracted to Emma Watson the celebrity, Emma Watson the millionaire or even Emma Watson who was featured in Maxim's top 50 sexiest women of 2013.\"",
        "\"Top 50? Could've sworn I made top 10 that year?\" she pondered absent-mindedly.\n\nI laughed. \"My point is, those things might have mattered at first, but eventually, I couldn't care less about any of it.\"\n\n\"Is that what you tell your friends?\"\n\n\"Yep.\"\n\n\"And do they believe you?\"\n\n\"Hell no.\"\n\nEmma laughed. \"So what else have you told your friends? Were they jealous when you told them how you spent 4 months having crazy sex with me?\"\n\n\"Well, I didn't use those words exactly, but they know it was more than just a fling. And yeah, they were very jealous.\"\n\n\"What kind of things did they ask you?\"\n\n\"The most common one is 'what's she like in real life', followed by 'why aren't you guys still together'. And naturally after a few drinks, there were a couple of 'what's she like in in the sack' from the guys.\"\n\nEmma chuckled. \"How did you reply to the last one?\"\n\n\"I would say, 'she says she likes it slow and romantic but often just loves a good hard fuck'.\"\n\n\"Shut up!\" she laughed. \"You did not say that.\"\n\n\"I didn't,\" I admitted. \"I just went with the standard, 'a gentleman never tells'.\"\n\n\"With all the things we did, I wouldn't call you a gentleman,\" she muttered.\n\n\"Look who's talking. You were far from ladylike a lot of the time. \n\n\"I would ask what you're referring to, but I suspect I wouldn't like the answer.\"\n\n\"You probably wouldn't. Funny thing about all that, I can't watch your movies anymore. Because I inevitably start thinking about us and then the stuff we got up to.\"\n\n\"Really? Well judging by some of my recent reviews, you're not missing out on much,\" she said glumly.\n\n\"I'm sure they haven't been too bad. But for example, I was watching one of the Harry Potter films the other week and kept finding myself turned on every time you came on screen. It's not a reaction I was used to have when watching those movies previously.\"\n\n\"Oh God,\" she laughed. \"Please tell me I was 18 years or older during the film?\"\n\n\"You were,\" I laughed. \"It was the second to last film.\"\n\n\"Seriously?!\" she said, laughing even harder. \"What turned you on? All the jackets or the tight sweaters?\"\n\n\"They were pretty sexy sweaters,\" I muttered. \n\n\"Oh honey, you've been alone for too long.\"\n\nThis time I didn't even think about it and blurted out, \"Well then come down to Australia and keep me company.\"\n\nThere was no immediately response from Emma. Given how we ended things and our present circumstances, it was a rather seriously thing to just blurt out, even as a joke. I prepared myself for a rather serious conversation about our lives, the distance between us and how we could makes things work but instead, Emma simply said,\n\n\"Do you really think that's a good idea?\"\n\n\"I don't know. Maybe.\" \n\n\"Do we have to have this conversation again?\" she asked solemnly.\n\n\"No, I guess not,\" I replied. \"I just miss you.\"\n\n\"I miss you too.\"\n\nAnd back to awkward silence again. It's beginning to seem like half of this phone call is just made up of dead silence. I thought through all the things I could possibly say before settling on, \n\n\"I really miss you Em. Christ, I even resorted to Googling those topless beach photos of you the other day.\"\n\n\"Oh, that's just sad. If I knew you'd be like that, I wouldn't have deleted those nude shots I let you take of me.\"\n\nI smiled and replied cheekily, \"Not too late. You're calling me from your iPhone aren't you? How about taking your top off and sending me a couple of snaps?\"\n\n\"I don't need to take my top off. I'm not wearing anything at the moment,\" she said in a sexy whisper.\n\n\"Really?\" I asked, sitting up straight. \n\nEmma laughed. \"Of course not. I'm wearing a thick jumper and jeans. But tell me that didn't get you excited for just a moment.\"\n\n\"It really did.\"\n\nI suddenly sensed then that our conversation had reached its end. I waited and listened intently for several long seconds and heard nothing. In my head, there were many things I wanted to say to her but none of them would do any good. And so, with regret, I grudgingly said,\n\n\"Listen, it's been nice talk-\"\n\nI never finished the sentence, perhaps serendipitously or by design as Emma had anticipated how it would end. Regardless, Emma quickly cut me off and said,\n\n\"I found your Omega watch by the way. The one you thought you left in Geneva.\"\n\n\"Get out of here. Really? Where was it?\"\n\n\"It was in one of my winter coats. You must have given it to me to hold sometime, and after we left Switzerland, it wasn't cold enough for me to wear a coat again so I never found it. I only happened upon it the other week when I wore it out one morning. I've been meaning to post it to you.\"\n\n\"It's okay, you don't have to go through the trouble. Especially now that I know how much that the Breitling cost.\"\n\n\"It's no trouble, really.\"\n\nI suddenly realised then that she probably wanted this conversation more than I did. Personally, I thought it was more than a little depressing to talk about old times with an ex, especially when there wasn't much hope of reconciliation but as long she wanted to stay on the line, I decided to oblige her.\n\n\"You know what I still have of yours?\" I asked.\n\n\"What?\"\n\n\"Your panties from the first time we met.\"\n\nEmma laughed heartily for several long moments before replying, \"Oh my God, I'd forgotten all about that.\"\n\n\"Yeah, I still keep it inside a shoe box along with the signed copy of that book you gave me.\"\n\nEmma composed herself and replied, still with a hint of laughter in her voice, \"God, I think back to that night and I have trouble reconciling that it was me.\"\n\n\"I think you've mentioned this to me before.\" \n\n\"I mean, I'm not the kind of girl who has one night stands with strangers in hotel rooms and then proceeds to call him back about six months later to do it all again. It's just not the type of thing I usually do.\"\n\n\"If I recall, I talked you into a lot of stuff you don't usually do,\" I said wryly.\n\n\"Yeah, you have that uncanny ability,\" she chuckled. \"I had a sense of deja vu a few weeks ago when I was staying in a hotel in Miami and happened upon a rather strapping guy at the hotel bar. He was funny, charming, easy on the eyes-\"\n\n\"Emma, I love talking to you, but I'm not sure I'm keen on hearing about how some guy nailed you in a Miami hotel,\" I said more bluntly than I had intended.\n\n\"No, nothing like that happened you pervert!\" Emma replied defensively. \"What I was going to say was while he did hit on me, and he was admittedly very smooth and turned me on just a little bit, I quite happily just let him walk me back to my room before calling it a night. If that had happened when you and I met, I probably would've dry humped him in the bar.\" \n\n\"You once told me you were in a nosedive back when we first met.\"\n\n\"Hmm, nosedive might be a bit over dramatic, but that was a rather stressful period. Then again, we did have sex on what was basically our first meeting.\"\n\n\"Ah yes, the first of many hotels we fucked in.\"\n\nEmma laughed once more. \"Wow, I'm trying to have a vulnerable moment and you keep going back to that well.\"\n\n\"Sorry, it's just us and hotel rooms,\" I chuckled.\n\n\"Yeah I know. I'd hate to shine a black light over some of those rooms,\" she said before continuing on from before. \"Now that I look back, I wasn't even working non-stop. Not really. I did two films that year and somehow I equated that with a torturous workload.\"\n\n\"You never really complained about your work so much as you did the lifestyle.\"\n\n\"We'll that's true. I felt like I spent half my time evading the paparazzi. And I felt like I was losing that battle. It depressed me to no end.\"\n\n\"And somehow you went from that level of privacy to sunbathing topless on a Caribbean beach.\"\n\n\"Yeah, without giving it much of a second thought at that. There was just something so liberating about our time together though. Moving from hotel to hotel, city to city, evading the paparazzi and carrying nothing but a small suitcase,\" she said fondly before mumbling, \"Good times.\"\n\nI sensed her mood was dipping and so I decided to adopt a decidedly cheerier tone and said, \"You know that guy in Miami probably went back to his hotel room afterwards and masturbated himself to sleep after doing a Google image search of you.\"\n\n\"He wasn't the only one. He was very fit,\" Emma muttered.\n\n\"Great, I'm not going to be able to get the image of you fingering yourself in a Miami hotel room out of my head now,\" I chuckled before adding, \"Not that I'd want to.\"\n\n\"Really? Because I seem to recall over 4 months of memories you could draw upon.\"\n\n\"Now that you mention it, yeah. Each one better than the last,\" I said smugly.\n\n\"Any one in particularly that you found memorable.\"\n\n\"That first time was pretty great.\"\n\n\"Oh, too easy,\" Emma scoffed, \"come on, we spent 4 months together, surely we beat our first.\"\n\n\"Let me think about that. In the meantime, why don't you go first?\"\n\n\"Venice, first day, around noon,\" Emma said immediately and continued as if she had prepared her answer, \"We'd been on a train for all of the previous day and didn't get much sleep with that bickering old couple in the compartment next to us. We checked-in to our hotel room overlooking the canals. I took a bath, you joined me, and later we made love on top of the sheets and fell asleep together. We didn't wakeup till sunset.\"\n\n\"Can't believe I'd forgotten that,\" I muttered as I thought back to that day and smiled at how accurate her recollection was. After a moment, I replied, \"our second meeting in Sydney when we decided we were going to runaway together. You were all dolled up for your premiere and looking more stunning than I thought possible. You were inspecting your makeup in the bathroom when I walked up behind you and lifted up your dress. I remember we fucked slowly but intensely, as we stared at each other in the bathroom mirror. It was like I was fucking the perfect woman. Hair perfect, face of an angel, wearing expensive little black dress. Even your tits looked better than usual in that light. You were perfect. Utterly without flaw. I've always said you were remarkably down to Earth but in that particular moment, you were Emma Watson the movie star and looking every bit the Hollywood star. We came at almost the exact same time and I remember pulling out of you and seeing our cum drip down your legs as you held onto the basin for support. I left you there and then no more than 2 minutes later, you walked out looking perfect again. I think back to that moment at least several times a week.\"\n\nAfter I finished talking, I heard she taking deep breaths; she was basically panting. I realised in that moment my heart was racing too. Apparently it was a good memory for both of us. \n\n\"That was a good one,\" she said as she cleared her throat and I heard her shuffling around to presumably sit up straight. \"Alright, my turn. That time when you fingered me beneath the blanket during our flight to Greece. I remember trying desperately to hold out but eventually that just made the orgasm so much more intense. I sat through the rest of the flight with my panties soaked through and through.\" \n\n\"You said you didn't like that,\" I laughed.\n\n\"Of course I did, I just didn't want to encourage public sex,\" she said sternly before adding, \"Still, at least you had the good sense to do it at night when most of the other passengers were asleep.\"\n\n\"Remember that time in Rome?\" I asked.\n\n\"I know where you're going with this and for the last time, no, I did not enjoy the anal sex. It made me feel gross afterwards.\"\n\n\"Then why did you agree to it a second time when we were in the Caribbean?\" \n\n\"Because I was really drunk.\"\n\n\"I remember you enjoyed it the second time. You were squirming so much the first time I had to hold you down. The second time, you didn't even blink. You just rolled over and spread you cheeks for me.\"\n\n\"Yeah, and I woke up bow-legged, sore and regretting it the next morning,\" she chuckled and yet sounding almost mournful. And a brief pause, she said with renewed enthusiasm: \"Now Geneva; THAT was a memorable one. You arranged for the VIP pool at the hotel to be cleared. We dove in naked and wrestled around in the water for a bit before you held me against you and slid a hand between my legs. You'd touched me like that so many times before but there was something about this particular occasion. Something so erotic about you fingering me in a pool until I came, while you covered my mouth with your hand to stop me crying out. It was so good and repeated it again a few nights later.\"\n\n\"Speaking of cumming, you keep talking like that I just might.\"\n\nEmma laughed for a moment until we were both silent once more. I can't speak for Emma but I was just going over the countless other times we'd had sex in the past. Only by saying it out loud did I once again come to the realisation I have almost every day; I was so damn lucky. \n\n\"And speaking you fingering me...\" Emma said slowly.\n\nI laughed out loud and in reply, Emma chuckled before continuing, \"I had a moment the other night where I found myself thinking of you. I was sleeping and suddenly I woke up and had I particularly strong sense of longing for you; particularly your hands.\" \n\n\"My hands?\"\n\n\"Yeah. You were always a bit handsy in bed. I lost count of the amount of times I woke up to find you groping a tit or had a finger inside of me. It made for some rather vivid and raunchy dreams. At the time, I remember thinking, 'I love this guy, but he's horny 24/7'. Never thought I'd find myself missing it.\"\n\n\"I was sleeping next to one of the biggest movie stars on the planet, can you blame me? Besides, I managed to get you wet most of the time. You even came in your sleep that one time.\"\n\n\"I still don't believe that happened,\" she said as she laughed out loud. \"It's impossible for me to have an orgasm in my sleep and not know it.\"\n\n\"Sure seemed like an orgasm to me.\"\n\n\"You've seen me cum a million times. You know how intense I can be. No way I could sleep through that.\"\n\n\"I know an orgasm when I see, hear and feel it.\"\n\n\"Agree to disagree, but either way, things are much duller when I go to bed nowadays.\"\n\n\"I must admit, you going to bed is a mental image I frequently picture. Just the thought of you sleeping in the nude always gets me excited.\n\n\"Sorry to burst your bubble but I stopped doing that the moment you were gone.\"\n\n\"No!\" I cried out sarcastically. \"Why would you ruin that for me?\"\n\n\"I'm sorry, I was just joking. I do in fact go to bed every night naked and with a vibrator,\" she replied mockingly.\n\n\"I know you're joking but I'm just going to pretend that that's true.\"\n\nWe both shared a good laugh. In that moment, I was glad I hadn't ended the conversation earlier. After all the sex, travel and shopping, it was occasionally easy to forget that some of our best times together were simply talking. Admittedly we were often naked most of those times but whereas our relationship started with sex, it continued and grew into something much more as a result of our connection and chemistry. I toyed around with asking her one question that had been on my mind since we last saw each other. A question I hadn't asked in all our conversations since. Now seemed as good a time as any and there didn't seem to be anything to lose so I said,\n\n\"Did we make the right call ending things the way we did?\"\n\nI heard nothing for a moment. I pressed the phone hard against my ear and strained to hear any sound but as before, all I heard was the sound of traffic. After several long seconds she said,\n\n\"I don't know. At that time, the relationship was too young to just up and leave behind our family and friends. That's not even mentioning our jobs. Although the irony is that at the moment, the film I'm working on right now is the first one I've done in ages and I haven't seen my parents in weeks and haven't even gone out on the town with friends for even longer so...\"\n\nShe began to trail off. I don't know if her answer made me feel better or worse. \n\n\"What about you?\" she asked.\n\n\"I've been working a lot and haven't had that much time for friends as I would have liked so at the moment it seems like a pretty shitty idea. Having said that, I'm in a better place now in my job than I was when I first met you. I have real responsibilities now and I'm not treated like some kid so I guess I can't complain too much.\"\n\nEmma sighed before saying, \"Did we make too big a deal out of all that? I mean, our lives weren't going to continue to be that hectic. Could we have made it work? You could've continued living in Australia and me in England; I could split my time between them.\"\n\n\"Or I could've just quit my job, move to London with you and put my journalism degree to good use. I like being a lawyer but with some of the criminals I deal with, it'd probably be a welcome change of pace.\"\n\nEmma chuckled tired. \"God, doesn't just talking about this again feel exhausting.\"\n\n\"Yeah, no use dwelling on the past. I loved you so much but we made our choices.\"\n\nThere was a long pause. I heard nothing on the other end for what seemed like an eternity. At first I was unsure why she wasn't saying anything in reply but then as I replayed that last sentence in my head, the answer became clear. \n\n\"Loved?\" she asked with an undeniable waver in her voice. \"Past tense?\"\n\nShit, I thought. I had just said it without thinking. I know we were broken up but somehow it still felt like the wrong thing to say. \n\n\"I haven't seen you in so long,\" I said eventually.\n\n\"You don't love me anymore?\" she asked very matter-of-factly.\n\n\"No, I do. It's just...\" I trailed off.\n\n\"What?\" she asked eagerly.\n\n\"It's easier to put these things in past tense. Otherwise I'd be too tempted to fly over to London to see you. Believe me, I picture that scenario in my head often.\"\n\n\"Really?\" she asked. \"What would you do right now if I were there with you?\"\n\n\"I would hold you and never let go.\"\n\nShe chuckled before replying, \"Really? That seems a bit tame by your standards. And cheesy.\"\n\nI smiled and took a short pause before saying, \"Well that's just to start. After I've held you for a moment, I'd kiss you. It'd be soft, tender, passionate. And then, well, what would you be wearing?\"\n\n\"What I always where I guess. Regular shirt and jeans. Maybe a jacket if it's chilly,\" she said blandly before changing tone and adding, \"But hold on, it's summer over in Australia right? Well then, I guess I'd probably be wearing a one of my light floral summer dresses. Maybe a backless dress with thin straps and a hint of cleavage. You always liked that look it I recall.\"\n\n\"Well if that's what you're wearing, than I'd slowly push you up against my wall and slide my hand up your dress. My fingers would linger over the front of your panties for a moment as I reminded myself of the terrain; then I'd loop my fingers around the waist band and pull them down you legs.\"\n\n\"And then?\" she asked, sounding slightly aroused.\n\n\"I'd continue kissing you as my hand rests against your neck. I'd slowly move it down to your shoulders and brush the straps of you dress off until the front fell away. And then I won't lie, I'd probably stand there for about 30 seconds just stare at your tits.\"\n\nEmma laughed. \"You did spend an awful lot of time just looking at them.\"\n\n\"They're very pretty. After that, I'd lean in and kiss you again as I cup both your breasts and give them a firm squeeze. And then I'd hike up your dress until it's bunched up around your waist, take off my own pants and then, well, you know what comes next.\"\n\n\"No, tell me,\" she said firmly.\n\nI smiled. \"I'd be too impatient to move to the bedroom. Instead, I'd take you right then and there by the front door. We'd do it up against the door, the wall, even on the floor. We'd spend all night getting reacquainted during which, I'd like to take a trip down memory lane. Maybe fuck you in all your holes. By the end I'd leave you, well, put it this way; remember our first night in Geneva?\"",
        "\"Oh yeah,\" she chuckled giddily. \n\n\"I'd leave you just like that. Then I'd cancel my plans tomorrow and spend all day doing it again. And again and again and again. We wouldn't leave the house for days. Everything else in life would just be a distraction.\"\n\nThere was silence followed by a low chuckle. \"You have a way with words, I'll say that much.\"\n\nFor what seemed like the millionth time during this phone call, we both went quiet for what must have been a full 20 seconds. I can't speak for Emma but I was just replaying that fantasy in my head. It seemed perfect. Eventually Emma broke my train of thought and said,\n\n\"So, maybe that very vivid hypothetical has already answered this question but I have to ask anyway. Are you gonna call her?\"\n\n\"Who?\" I asked, genuinely baffled.\n\n\"Your high school crush. Amber wasn't it?\"\n\n\"Oh yeah,\" I said, suddenly realising how little I cared about her. \"Probably not,\" I said without hesitation.\n\n\"Really? You've been after that date with this girl since high school. Even when we were dating and you talked about her, I got the feeling you'd walk out on me without hesitation if she came knocking.\"\n\n\"Things change. And that is not true at all. I'd never walk out on you. Well, never again anyway.\"\n\n\"Well that settles it then,\" she said cryptically.\n\n\"Settles what?\" I asked, baffled.\n\n\"Listen, I have to go,\" she said abruptly. \n\n\"Oh, okay. No problem,\" I stammered, trying to hide my disappointment. \"It was... it was nice talking to you again.\"\n\n\"Just nice?\"\n\n\"It was great. Really great.\"\n\n\"Yeah. It was, wasn't it?\" she said before pausing for a moment. \"Bye.\"\n\n\"Wait,\" I blurted out, not sure what was left to be said.\n\n\"Yes?\"\n\n\"Can I call you? You know; from time to time?\"\n\n\"You can always call me Nate. It's always nice to reminisce about things,\" she said before adding, \"Hotel rooms for example.\"\n\nI laughed. \"Goodbye Emma.\"\n\n\"Bye,\" she said fondly.\n\nShe hung up and I was left clutching my phone in my sweaty hand. The phone felt hot against my palm and without her voice in my ear, the silence in my house suddenly seemed deafening. The phone call had been like a dream, but now I was back here on my couch staring blankly at the muted TV where \"Love Actually\" was still playing. I sat there for several long moments, already replaying the conversation in my head and before long I was replaying our whole relationship.\n\nA desperate sense of longing came over me. It was a feeling that became less and less frequent as the months went by but on this particular occasion, it hit hard. I was missing her already. But she wasn't here. Instead, the only thing I had to keep me company was a romantic comedy on TV and a stack of legal documents and numerous internal reports detailing the opening for the law firm's new New York office on my coffee table. It seemed almost preposterous to me now that a large part of the reason we broke up was because I didn't want to be some unemployed layabout living in a foreign country as his famous girlfriend went out and earned millions. Why couldn't the law firm have opened an international office in London 7 months ago? If they had, none of this shit would have happened. \n\nI slowly got up and walked towards my bedroom. All that talk of sex with Emma, both past and hypothetical had gotten me worked up and for a moment, and without her or anyone else willing and able, the urge to take care of myself was suddenly quite strong. Instead, I ignored my bed and the box of tissues and walked over to my wardrobe where I sat down on the floor. I opened the wardrobe and reached deep inside to grab a shoebox that was conspicuously hidden at the back. I had many mementoes from my time with Emma littered all over the house. In fact, the burgundy Prada shirt that brushed against my face as I retrieved the box was one of many things she had bought me. But what I pulled from this box was her first gift, from way before we ever had a meaningful relationship. Back when we were just two lonely people staying in adjacent hotel rooms who sought each others company. \n\nI opened the box and saw lying on top of everything else, a small pair of white panties; Emma's panties to be exact. It was a memento from our sordid time together almost two years ago. I never thought of myself as the type of guy who would keep such a thing in a shoebox at the back of his wardrobe like some sort of trophy but then it was Emma Watson. The other item in the box was from that same day; a hardcover book with a handwritten message from Emma on the title page saying, among other things, \"I might be in Australia again by the end of the year. Don't change your number. I may need some company\". I never expected anything to come of it but seven months later and there we were doing it all over again. And as they say, the rest is history. Now it's almost two years later and once again I find myself doubtful about whether I'd ever see her again. \n\nThen the doorbell rings. \n\nI pack these things away and make my way to the front door. \n\nCould it be? \n\nWas there something more to the call than just checking up? \n\nWas she at the door?\n\nI check my hair in a nearby mirror and straighten my shirt. I walk to the door, place my hand on the door knob, take a deep breath and turn; and there she was...\n\nA complete stranger.\n\n\"Hi, does Bonnie live here?\" she asked.\n\n\"Next door,\" I replied.\n\nThe woman apologised and made her way next door. I close the door and smile.\n\nI don't know what I expected. \n\n***\n\n- H E R -\n\n\"Oh God I'm one of those people,\" Emma thought.\n\nThe excitement of the conversation was over, the nostalgia had worn off, and all that was left was the realisation that she's just another one of those girls who dials an ex after a few too many gin and tonics. \n\nIt's been a long day, it was late and she'd had too much to drink. Emma tossed away her phone and went to bed.\n\n***\n\n\"Oh God, did we really talk about all the times we had sex?\" she thought immediately upon waking up the next morning. \"No, it was worse. We talked our personal favourite times that we had sex.\"\n\nEmma stayed in bed replaying the conversation in her head. Some of it made her smile, a lot of it made her cringe. She'd be lying if she said she didn't think of him much; she did. But up until a couple of months ago, she'd been quite content with where they'd left it. Emma rubbed the sleep from her eyes and mumbled out loud,\n\n\"Every guy in the world wants to fuck you, and you're pining for some guy on the other side of the world you dated for not even 6 months.\"\n\nIt's a strange predicament knowing how easily you could find a handsome guy to have sex with you, but at the same time, being so guarded because of your celebrity status that you force yourself to go celibate for long periods of time. That's what makes relationships so appealing.\n\nThese thoughts continued to plague her over breakfast. She didn't feel hungover but at the same time, she wasn't particularly eager to check whether that bottle of red she'd bought was still unopened. She looked at her phone so see how long the conversation was; over 20 minutes. That's longer than she expected. She groaned and slammed the phone onto the table face book. \n\nShe reached for her MacBook and opened it up hoping to distract herself with the morning news. She was immediately confronted with an intimate photo of herself and Nate, laying in bed in what she assumed was Japan. She closed the window only to be confronted by her internet browser, opened up to Nate's Facebook page. She was more than 12 months deep on his Facebook wall, a photo of him and some pretty girl, arms slung around each other's shoulder, having the time of their lives. She wondered who the hell this girl Madelaine was; she couldn't remember him ever mentioning the name to her. Not being able to take it for another second, she slammed shut the MacBook and pushed away her bowl of cereal. \n\nSuddenly her phone started ringing. She found herself instantly hoping it was Nate. It was her publicist.\n\n\"Hi Wendy, what's up?\"\n\n\"Morning Em. Just letting you know that the car is running late. They'll be by to pick you up in 20.\"\n\n\"Car? What car? Where am I going?\"\n\n\"The Hollywood Reporter, they want to do that profile on you. How could you forget? We literally spoke about this yesterday.\"\n\nEmma scrunched her eyes closed, pinched the bridge of her nose, and forced herself not to groan out loud in annoyance. She was not in the mood for a press junket. \n\n\"I remember now,\" she replied, attempting to put on a happy voice. \"Sorry, it's been one of those mornings.\"\n\n***\n\n\"I'm so excited for people to see this movie, I really think fans of the book will love it. It's been done with so much care and passion,\" she said, having repeated variations of that sentence at least 30 times in the past week. \n\nThe interviewer nodded enthusiastically, as if it was the best answer he'd ever had to one of his questions. \n\n\"And of course, I'd be remiss if I didn't mention that Hermione Granger fans might be in for a shock, because this is a much more adult role than they might be use to from you.\"\n\nEmma grinded her teeth for a moment; she hated these types of questions. \n\n\"It is, I'm just glad I had someone like Jason as director; he's very respectful to actors and never shoots anything that doesn't serve a purpose within the film. Perhaps that has something to do with the fact he was once an actor himself.\"\n\n\"I mean, some of the scenes in here are quite graphic. Much more graphic than anything you've done previously.\"\n\n\"Well that wasn't going to stop me, I wanted to work with the director and I couldn't put down the script when I first read it. I was happy to oblige. .\"\n\n\"But were there any hesitations you had about performing such mature material given that...\"\n\n\"Fuck off\" Emma wanted to say. No matter what the publication, everyone loves it when a young actress says the word \"sex\", particularly if it's in regard to a sex scene they did or their own sexuality. Realising he wasn't going to drop it, Emma waited for him to finish his long-winded question and gave him the answer he wanted.\n\n\"Well let's face it, I've been sexualised in the media since before it was appropriate to do so. I've always been uncomfortable with the sex-symbol tag people have given me but I'm not so na\u00efve that I won't acknowledge it. I've spent enough time on the internet and seen enough fan-art and even read enough fan-fiction to know what some people want from me, and how eagerly they're awaiting this film just the chance of sex or nudity. And good for them I guess, I hope it brings them joy. But as an actress, I just set out to make a good movie.\"\n\nEmma could tell that wasn't the answer he was expecting. And from what she could see in her periphery, she could tell that DEFINITELY wasn't the answer Wendy was expecting.\n\n\"Sorry, I'm not sure if you understood my question,\" the interviewer said.\n\n\"What was your question?\" Emma asked nervously.\n\n\"Any hesitations with taking on such graphic material given that the original book glossed over most of that in favour of ambiguity?\"\n\nEmma stared silently for a moment, not quite sure how to answer. She looked at Wendy for help but she merely gave a look that said \"what the hell is wrong with you\". Emma stared at the interviewer, then Wendy, back to the interviewer, and finally to the cameras which she had forgotten were there.\n\n\"Sorry, when you say graphic material, you mean...\" Emma asked.\n\n\"The violence of course,\" he said, like it was the most obvious thing in the world. \"The film certainly doesn't pull any punches and is very gory in parts; lots of blood, which is most unlike the book.\"\n\nAll Emma could find herself saying was a slow and embarrassed:\n\n\"Oh...\" \n\n***\n\n\"There's no nudity in this film Em! There's not even a sex scene. In fact, you're wearing a trench coat for most of it!\" Wendy said in a hoarse whisper, mindful that the interviewer and his crew were still in the next room. \n\n\"Sorry, I thought he was talking about that other film. The one about private detectives.\"\n\n\"Private detectives?! You mean that script you read last week and literally just signed on for 3 days ago and that's not due to start shooting for another 6 months! Where is your head right now?!\" \n\n\"I'm sorry, I'm just distracted,\" Emma muttered, not wanting to admit that sex had been on her mind non-stop for days. \n\n\"Everything okay?\"\n\n\"Yeah, it's fine, it's nothing.\"\n\n\"Define nothing,\" Wendy asked firmly. \"Because that's a pretty baffling mistake to make.\"\n\n\"Boy problems, don't worry about it.\"\n\n\"Please tell me it's not anymore-\"\n\n\"It's not anymore topless photos!\" Emma stated firmly. \"Just relax, everything is fine.\"\n\nWendy shook her head in disapproval.\n\n\"I'll talk to them and tell them not to publish that quote. I know their editor personally, it'll be fine.\"\n\n\"Thank you Wendy.\"\n\nWendy went to leave but turned around when she was at the door.\n\n\"These boy problems. It's not about the one you ran off to Europe with is it?\"\n\nEmma smiled but didn't answer. \n\n***\n\nEmma didn't even bother turning on the lights when she walked back into her apartment. She simply kicked off her heels and made a beeline for the bottle of wine she'd bought the other day. She picked out her largest wine glass and eagerly opened the cupboard only to find the wine bottle wasn't there. She checked the other cupboard doors and kitchen drawers, hoping she'd mistakenly put it somewhere else. It was only when she glanced in the bin that she found her bottle.\n\n\"Oh, that's right,\" she mumbled. \"Well, that answers that question.\"\n\nIt had been a long day. If she were sensible, she'd just have a bath and go straight to bed. Nate hated baths she recalled, even with her. \"Not as hygienic as showers and harder to have sex in\" he'd say. Agree to disagree on the first point, but she had to admit, he was right about the second. God knows they'd tried. She recalled this one time in Holland when she was taking a bath and was feeling particularly amorous, she took the bottle of body wash and lathered up her whole-\n\n\"Jesus!\" Emma said out loud. \"I'm stone cold sober and still fantasizing about my ex!\" \n\nShe stood still in the kitchen for about a full minute, not knowing what to do next. Her phone was clutched in her hand and she was already starting to think about what time it was in Australia. \n\n\"No,\" she said out loud before deciding to march off to bed. \n\nBut sleep didn't come easily. She lay there was what seemed like ages, replaying the phone call in her head again. Every time she did, she glanced at the empty half of her bed. \n\nSometime later, she was couldn't be sure if it was five minutes later or five hours later, but she picked up her phone and dialled without any regard for the time.\n\n\"Hi Hannah, I'm sorry I know it's late and you know I usually never call after hours.\"\n\n\"It's alright. What are PA's for?\" replied a cheery but undeniably groggy voice. \n\n\"I need you to do me a favour.\"\n\n***\n\n- M E -\n\n\"I'm sorry, but I still haven't received the documents yet. It might be easier if you just email me another copy. With the deadline fast approaching, I don't want to leave anything to chance.\"\n\nSuffice to say, this conversation was significantly duller than the one I had with Emma. \n\n\"No that's fine,\" I continued. \"It's the clauses at the top of page 7 that give me more trouble. I'll run it by one of my supervisors but it may be that we need to...\"\n\nI was on autopilot. Boring legal jargon spouted forth without much thought. I'm not entirely sure whether the client understood what I was saying, but it sounded impressive enough that he probably thought he was getting his money's worth. Unfortunately for him, my attention was elsewhere; my computer screen to be precise. I was scrolling through a bunch of recent photos of Emma. She looked good, thank god for paparazzi (a sentiment she definitely does NOT share). \n\nShe'd been on my mind ever since that phone call a few days back. I keep checking my phone to see if she had called again. When I got nothing, I started checking her Twitter feed and Google to see if there was any hint on what she might be up to; also nothing. \n\nI eventually closed the webpages, ended the phone call with the client and went back to work. I turned my attention back to the stack of papers on my desk but within 30 seconds, I was again thinking about how I'd got here. \n\nThat question plagued me once more, namely:\n\nDid I really choice this over a life with Emma?\n\nI'm still in my mid-20s; why did I think it was so important to prioritise my career right now? What was wrong with taking some time off? Was this really better than what I gave away? Like I said, it's a question I go back and forth on often. On a day like this, the answer seemed quite obvious. \n\nFucking Emma...\n\nAll it took was a phone call and suddenly I'm rethinking everything. \n\nThe day after she called, I felt pretty good about where we were. Reminiscing about old times and all that good stuff was a welcome surprise. The next day, that feeling turned to nostalgia and longing, but I still felt okay. But then at some point between then and now, I've become angry at her for calling. Maybe she did just call to chat, but it had the effect of stirring up old feelings and possibly regrets. At this very moment, I was angry at her. In fact, if she were to call me right now, I don't know if I would even answer. \n\nAt that exact moment, the phone rings. \n\nI answer and my PA's voice comes through the line: \"Emma is on the line for you.\"\n\n\"You're fucking kidding me?!\" I said with a mixture of surprise, excitement and some exasperation.\n\n\"You had me call her this morning and leave a message,\" she replied, clearly taken aback.\n\nIt took me a moment before I knew who she was talking about. \n\n\"Oh, you mean Emma Nicholls from accounting. Sorry,\" I replied. \n\n\"No, I mean Emma Fisher; she's opposing counsel on the Wilson file.\"\n\n\"Right! Of course. Sorry. Again,\" I said, allowing myself a brief smile.\n\n\"You okay?\"\n\n\"Yeah, it's just...\" I paused, before adding, \"Too many Emma's in my life.\"\n\nI heard laughter on the other end of the phone before she said, \"You want me to get you some coffee\"\n\n\"Please.\"\n\nBack to work I guess.\n\n***\n\nAnother day, another pay cheque. \n\nWorked from 7am to 7pm. \n\nBought a 6-pack of beer picked up on the way home. \n\nOrdered a pizza for dinner.\n\nThis was a pretty regular occurrence nowadays. Call it the monotony of day-to-day life. Most days, I was perfectly happy. But these last past few days felt different. \n\nBy the time the pizza guy showed up at my door, I was already 2 beers down and reaching for my third. I really should started eating healthier. \n\n\"That'll be $25,\" the pizza guy said.\n\nI fumbled through my wallet but found only a $20.\n\n\"Crap, I'm short. Do you take credit cards?\"\n\n\"No, sorry.\"\n\n\"Shit...\" I muttered, not quite sure what to say next.\n\n\"Don't worry, I've got you covered,\" said a familiar voice. \n\nI knew who it was before I even saw her. There aren't that many posh British twentysomething girls in the neighbourhood. She stared at me even as she leafed through her handbag for some cash to give the pizza guy. He received his money and promptly left leaving she and I standing at my front door with nothing but a pizza between us. \n\nWhat the hell just happened?!\n\n\"You know, I don't think he recognised me,\" Emma said, looking back towards the pizza guy. \"That's surprising.\"\n\n\"Not nearly as surprising as the fact you're here.\"\n\n\"I was in the neighbourhood,\" she said with an endearing smile on her face. Christ, I'd missed that smile.\n\n\"Were you really?\"\n\n\"No. I was literally in New York yesterday. Well technically, today, what with the time zones and international date line and-\"",
        "I tossed the pizza to the ground, took her by the hips and pulled her in and kissed her. She laughed, and wrapped her arms around me. She tasted just like I remembered. The feel of her body against mine was just like I remembered. As far as I can tell, she was even wearing that same perfume she always wore; the smell was intoxicating as ever. As I closed my eyes, I could've sworn we were back in Europe. Standing there in the doorway, kissing her passionately, it just felt right. \n\nAs good as it felt to kiss her again, I simply had to hold her back at arm's length and just stare at her. There she was, in the flesh. She looked just like I remembered her. It felt like I hadn't seen her in 20 years, though in truth, it wasn't even 20 months. In that moment, looking at her in my doorway I knew Amber was right. All those reasons we had for breaking up, all valid and all perfectly reasonable at the time were outweighed by one thing; I still loved her. \n\nWe both leaned in at the same time for another kiss. This one was quicker, but no less wonderful. Emma glanced down at the pizza box before looking back up at me.\n\n\"You really need to eat healthier,\" she said with a hint of disappointment in her voice. \n\n\"I was literally just thinking that.\"\n\nI knelt down to pick up the box while Emma grabbed her suitcase and together we hurriedly rushed inside. The door closed, we both tossed aside our respective items and continued kissing as I began to eagerly run my hand up and down her body, savouring her curves from underneath her thin shirt. I wasn't subtle about what I was doing and immediately began to groped at her breasts, desperately trying to push her bra up and over them. My heart was beating a mile a minute and I was already hard just from that brief touch. Emma suddenly reached up and grabbed my hands.\n\n\"So we're just going to have sex straight away?\" she asked.\n\n\"We can talk if you want,\" I asked, trying not to seem too frustrated.\n\n\"No no,\" she replied firmly, \"Talk is good, sex is better.\"\n\nI smiled widely and bean to fumble with her jeans, before roughly tugging then down her legs.\n\n\"Whoa, I know it's been a long time, but I've just come off of a really long flight and if we're going to do this, I'd rather it be on your bed than on your floor.\"\n\n\"I don't know if I'm that patient,\" I said breathlessly. \n\n\"I bruised my hip last time we did it on hardwood floors.\"\n\n\"Fine,\" I muttered exhaustedly.\n\nI knelt down and swept Emma off her feet, leaving her jeans behind. Emma was taken by surprised and let out a yelp that quickly turned into laughter. Every moment we still wore clothes was agony. I needed to have her right now. \n\nI walked briskly into the bedroom, carrying her in my arms, before unceremoniously dropping her onto the bed. She quickly climbed onto her knees and peeled off her shirt and tossed it to one side. I stood in front of her by the side of the bed and began to strip. Emma, always one for the theatrical, then climbed to her feet and stood on the bed looming over me. We both paused briefly and took each other in. I with my shirt unbuttoned and my trousers unzipped; she in her mismatched bra and panties, beige up top, white down below. She slowly reached behind her back and unclasped her bra; a quick shrug of her shoulders and the straps fell away followed by the rest of it. \n\nI'd forgotten how beautiful she was. I looked up at her, standing on the bed looking down at my like a Goddess. If I didn't know better, I'd say she'd practiced this, for in that moment, I was completely paralysed. There were girls with longer legs, girls with bigger breasts and even girls with prettier faces, but there was only one Emma Watson. \n\n\"Nate,\" she said.\n\n\"What?\"\n\n\"Come on,\" she said, nodding at my shirt. \"Tit for tat.\"\n\n\"Fair is fair,\" I said as I took off the rest of my clothes. \n\nShe smiled as I kicked away my trousers and underwear. She moved her hands to her hips and curled her fingers around the waist band of her pants before I stopped her by placing my hands over hers.\n\n\"Allow me,\" I said.\n\nLooking directly up at her, past her toned stomach and perky tits, I could see her eyes watching me intently. I ran the back of my right hand along the inside of her thigh and moved up until I hit the thin piece of fabric covering what was between her legs. I could feel the warmth emanating from the front of her panties, and the contours of her lips and the tuff of her pubic hair. I slid my index finger under the front of her panties and touched her bare skin. The mere touch of my finger against her vagina was enough to cause her to shudder. Curling my finger around the bottom of my panties I pulled down and watched as they feel down her legs and landed noiselessly on the mattress.\n\nI found myself face to face with her vagina, and without hesitation, leaned in and ran my tongue up along the length of her slit. With my hands, I reached up behind her and fondled her tight arse. I heard her sigh with pleasure as I kissed her moist lips, and slowly pushed my tongue inside of her. I could feel her arse clench in my hands; she twitched and squirmed with every movement of my tongue. \n\nHer hand moved to the back of my head and she held me in place between her legs. Her breathing increased but she otherwise remained quiet. I gave one of her arse cheeks a firm squeeze before moving my hand around to her front and sliding two of my fingers inside of her without much effort. Her knees went weak as the tips of my fingers pushed inside; by the time I was knuckle deep, the walls of her vagina had contracted and her legs almost buckled and she instinctively closed her thighs around my hand. I wrapped my other arm around her legs and watched as she dropped down onto the mattress and lay flat on her back. \n\nI momentarily pulled my fingers out of her, grabbed her by both knees and pried her legs apart and pushed them wide open in opposite directions. She craned her head and looked down the length of her body at me. I looked at her, legs spread wide open, then to her face, and then back down again. I dove in head first once more and tasted her again. \n\nShe let out a loud cry of pleasure and grabbed a handful of my hair. Truth me told, I was moving around blindly down there; kissing, licking, and sucking on whatever seemed most natural. I looked up to see her propping herself up on her elbows and throwing her head back in pleasure; her breasts rising and falling with each breath she took. \n\n\"Stop,\" she said breathlessly. \"Stop, stop!\"\n\nI looked up at her with confusion. She just smiled, brushed her hair away from her face and said,\n\n\"No more foreplay, just fuck me.\" \n\nI gave her pussy one final kiss before I made my way up her body, place myself between her legs and without another moment of delay, slowly pushed inside of her hot, wet vagina. With my face mere inches from her, I watched as she closed her eyes, slackened her jaw and let out the softest of cries. It felt so good to be inside of her again. A lot of time had passed but the exhilaration and pleasure was still the same. \n\nShe opened her eyes and we stared at each other for a moment, neither person moving a muscle. I pulled out slightly before pushing back inside of her causing her to scrunch her eyes shut even tighter. It's impossible to describe how perfect everything felt in that moment. As I began to thrust in and out; it was an assault on the senses. How she looked, squirming in pleasure beneath me, to the feeling of her breasts and the rest of her naked body pressed up against me and even the lingering scent of her perfume. \n\nShe was so tight I couldn't force my penis completely inside her at first. It took several, increasingly long and hard thrusts until I found myself completely fully. Once our hips met, I leaned in a kissed her softly on her lips. We looked at each other again and this time exchanged a smile. \n\n\"You're so beautiful,\" I said.\n\n\"You're sweet,\" she said in almost a whisper.\n\n\"I want to cum inside of you so badly.\"\n\n\"That was less sweet,\" she chuckled.\n\n\"Sorry,\" I laughed.\n\n\"No, don't be. Do whatever you want to me.\"\n\nShe always did have a way with words. I worked myself into a slow and steady rhythm, savouring every moment inside of her. We smiled at each other, we kissed, we held each other close and I continued moving in and out of her. \n\nI reached up and grabbed at her breasts, she reached behind me and grabbed my arse. I kiss her neck, she moaned into my ear. I softly tweaked her nipple and watched as she began grabbing at the sheets. \n\nThe pressure grew and I knew it wouldn't be long. In time, Emma appeared to relaxed her whole body, her arms going limp and her muscles no longer pushing back. She was content to lay there on her back as I had my way with her. \n\nWithin no time, I couldn't hold it in anymore. I did one of my favourite things to do with her and placed my hands on the inside of her thighs and spread her as wide as she would go, before I drove into her as hard and fast as I could. She sunk deeper into the mattress as her breasts bounced back and forth with every thrust until at long last, I felt myself cum inside of her. \n\n\"Oh Emma!\" I groaned as buried my penis deep inside of her. \n\nI continued thrusting as I felt myself fill up her pussy with several final, hard thrusts before collapsing on top of her. She groaned slightly as all my weight fell on top of her before letting out a small chuckle.\n\n\"That takes me back,\" she said.\n\nI didn't reply and instead continued to lay on top of her panting, moving my hips slowly, forcing every last bit of semen to spill inside of her. I lazily kissed her neck as I felt the energy drain from my body. \n\n\"I couldn't spend all night fucking you,\" I mumbled without thinking.\n\nEmma laughed and replied, \"Really, because you look like you're about done.\"\n\n\"Since when was one time ever enough for me?\"\n\n\"I recall a few occasions. Sex followed very quickly by sleep.\"\n\nI forced myself to climb off of her and gazed down at her body. I never get tired of looking at her like this. Hair a tangled mess beneath her, limbs splayed out across the bed, breasts rising and fall quickly, and a thin film of wetness between her legs. \n\nWe found ourselves staring into each other's eyes again. We hadn't been able to stop doing it since she first appeared in my doorway. Of course, it was a bit harder to stare into her eyes now that she was completely naked and eager for more. \n\nEmma, God bless her, appeared happy and content as ever. But I wasn't so na\u00efve as to believed I had made her cum. It had not only been a long time since we had had sex, but for me personally, it felt like a million years since I had had sex at all. Her vagina was slick with both of our juices, her heart rate was up and her legs still wide open; she was ready for her moment and I knew it. \n\nI propped myself up on one elbow and looked down at her. She looked at me with a smile, expecting conversation; instead she felt my finger running up and down the length of her slit.\n\n\"We're going again already?\" she asked cheerily.\n\n\"You're going again.\"\n\nI pushed my finger inside of her without much resistance. She didn't react much; in fact she almost seemed comfortable with the unexpected intrusion. Emma closed her eyes and let me do my thing. I inserted a second finger and began exploring inside of her, thrusting, probing, massaging and searching. As I curled my fingers back inside of her, the tips of my fingers brushed against what must have been a particularly sensitive area. Her reaction was instant. Her thighs quivered, her jaw slackened and her back arched up causing her breasts to rise in the air; I had her. \n\n\"Good to see you know your way around,\" she muttered.\n\nI smiled and planted a kiss on her lips, then her cheek before moving to her ear.\n\n\"Cum for me Em,\" I whispered as I focused my attention on her sensitive nerve. \n\nEmma laughed nervously at this newfound attention and struggled to compose herself. All her muscles tightened, her toes curled, her hands gripped at the sheets, and added to that, I gently nibbled on her earlobe. \n\nI continued to finger her, not at any great speed, but with firm pressure and focus on that one sensitive nerve which I knew she had a weakness for. With my thumb, I began running circles on the outside of her vagina, massaging my way around, searching for her clit. She began squirming around so much that I had to sit up and placed my free hand on her lower belly, just above her pubic hair, and held her down as I began moving my fingers inside of her faster and faster. \n\nShe was already wet from before but with every movement of my fingers, and with every deep breath that she took, I felt her juices flow more freely. \n\nI didn't notice it immediately, but slowly the room began filling with a whole host of noises. Emma had gone from breathing heavily to softly moaning. Though I continued to hold her down as I fingered her, she was still squirming, her legs now beginning to thrash back and forth on the bed sheets. And most noticeably, with every movement of my fingers, as they pushed further inside of her before curling back and pressing firmly against her g-spot, I could hear her juices squelching between my fingers and the walls of her vagina. \n\nI wasn't sure if my thumb had made contact with her clit, or whether I'd just pushed her over a certain threshold, but without warning, Emma opened her mouth wide and let out a long, loud, moan of pure unadulterated pleasure. She suddenly opened her eyes and propped herself up on her elbows and looked down at the length of her body to see me fingering her. She seemed engrossed by the display, barely even blinking as she watched herself get fingered. \n\nMy other hand was suddenly on autopilot, moving from her belly to her breasts, softly tweaking her nipple and then the other, moving freely around her chest. With her wet pussy in one hand and her firm, perky tits in the other, I was almost ready to cum again. But nonetheless, I kept my attention focussed on her and moved my hand away her chest, over to her thin slender neck, and finally cradled her face. I laid a couple of fingers under her chin and tilted her head so that she faced me. She looked at me with a smile, clearly trying to keep her composure, even as she was clearly approaching her climax. \n\n\"Cum for me,\" I whispered into her ear again before kissing her passionately. Her lips moved against mine, her tongue briefly brushing against mine, her smell, the warmth of her skin, the sounds she made; I didn't even have to be fucking her to find myself on the verge of cumming. \n\nSuddenly the sound of her juices sloshing around inside of her became that much louder and at the same time, I could feel a familiar little nub of her clitoris right beneath my thumb. The time was right, and I began moving my fingers inside of her with renewed purpose. It's amazing what you can achieve with two fingers and a thumb. She broke our kiss, her elbows gave way and she lay flat on her back again. I didn't need to tell her again. It had started. \n\nFirst, she cried out and bucked hips in an almost violent manner, taking me by surprise. I lowered my body onto her, wrapped my free arm around her waist and held her in place tightly. Her hand suddenly shot down and tightly grabbed my own, her fingernails digging into my forearms; but this did nothing to stop me. My fingers moved quickly but purposefully inside of her, massaging and manipulating her g-spot. \n\nHer cries grew louder, her movements more erratic, her pussy wetter, and the sounds...\n\nGod, the sounds she made...\n\nIt all built up, growing louder, more intense, until finally, she let out something between a squeal and a cry of pleasure, accompanied my fresh wave of moisture that enveloped my fingers, pour out of her and squirted everywhere. \n\nShe threw her head back, expecting a reprieve. It took her several seconds before she realised I hadn't relented and was still fingering her mercilessly. Her head whipped back up, she opened her eyes and looked at me. I was still holding her in my arms, so we were face-to-face, mere centimetres away from each other.\n\n\"Stop, stop,\" she cried meekly.\n\n\"Only if you really want me to,\" I said, pausing briefly.\n\nShe looked at me and didn't respond; she didn't need to. The moment I stopped, her thighs shivered with anticipation, as her hips bucked upwards towards my fingers. Her answer was more than clear. Inside of her, I fingers began moving once more. I continued to cradle her with one arm while fingering her with the other until I squeezed every last bit of cum from inside of her. \n\nWatching her cum was a sight to behold. I felt like I could cum myself just by watching her, but instead had to be content with pressing my erection up against her leg. Emma's face contorted in an array of expressions from pain to pleasure to shock to satisfaction. I planted a series of kissed along her neck and cheek, all the while keeping my eye on her. \n\nThe juices kept squirting out of her and until she let out a final guttural groan right into my ear, before her whole body suddenly relaxed in my arms. I didn't let go just yet though and waited out the aftershock of her orgasm as her body continued to shudder and quiver for almost a full minute. Her heart was furiously beating away, as if she had just run a marathon.\n\nBy the time I slid my fingers out of her vagina and my arm out from under her, the sheets were soaked beneath her arse. She slowly moved her hand between her legs and pressed it against her vagina, before closing her legs around it and curling up. Smiling, I leaned in and embraced her. \n\n\"Well done,\" she mumbled between heavy breaths. \n\nI laughed and kissed her forehead. We lay there in each others arms for a moment, neither being able to bear the thought of being apart again, however briefly. It was almost a full minute before either of us spoke again.\n\n\"I can never figure out if I like it when you do that or not,\" she said, still breathing heavily.\n\n\"You sure look like you did.\"\n\n\"I don't like losing control like that.\"\n\n\"I don't know why you're surprised. Our sex life was nothing if not-\"\n\n\"Exploratory?\" Emma finished.\n\n\"Not the word I was going to use, but I can't deny it's not accurate.\"\n\nShe smiled and allowed herself a satisfied chuckle. The satisfaction was visible across her whole body as her muscles relaxed, her limbs stretched out in pleasure. As I watched her do this, I suddenly became aware again that my erection was still as hard as ever. \n\n\"Ready for round 2?\" I asked.\n\n\"I don't know, round 1 did quite a number on me,\" she said, chuckling nervously.\n\n\"I noticed. You'd think you hadn't had sex in months.\"\n\n\"I hadn't, in case you were wondering.\"\n\n\"Really?\" I asked, sounding more surprised than I had intended.\n\n\"You may be shocked to find out, but I don't my celebrity to fuck whoever I want.\"\n\n\"You did with me?\"\n\n\"Excuse me,\" she said disbelievingly. \"You came onto me!\"\n\n\"I was fucking intimidated by you the first time we met,\" I laughed. \n\n\"You were not. You saw me in that hotel and said to yourself, 'I bet I could shag Hermione Granger'.\"\n\n\"I don't think I've ever used the word 'shag' in my life,\" I replied.\n\nEmma laughed. \"Fucked, nailed, banged, fornicated; take your pick. You know what I mean.\"\n\n\"I do.\"\n\nI placed my hands underneath her and ceremoniously flipped her over onto her stomach. Her orgasm had suddenly made her more welcoming; she didn't utter a word and simply pushed her arse up into the air, the rest was understood.\n\nI lowered myself onto her again and slid my penis inside of her vagina. With my hands, I reached under her and roughly grabbed her breasts. She didn't make much noise, simply exhaled loudly and let of the softest of cries. I didn't bother going slowly this time and began thrusting in and out of her at speed. Emma, on all fours, struggled to stay upright as I began thrusting hard and harder. Meanwhile my hands remained underneath her, fondling her breasts as they dangled and swung back and forth with the movement of our bodies. ",
        "She continued keeping relatively quiet, her increased breathing the only thing betraying her growing pleasure. In my excitement, I grabbed both of her small nipples and squeezed and tweaked them between my thumb and forefingers. It was as if I had hit a button. Suddenly, she pushed her arse back hard, meeting one of my thrusts. Her arse cheeks slapped against my hips and we both moaned in pleasure. I let go of her breasts and moved them back to her arse. \n\nI was moving out of her quickly, she was meeting my thrusts equally as fast and equally as hard. The pleasure was almost too much as I craned my head back and looked at the ceiling. Her increasingly loud cries of pleasure let me know she was feeling the same way. \n\nSuddenly I slowed down almost instantly and firmly grabbed her hips, and thrust my member into her excruciatingly slowly, savouring every millimetre of the way into her. I watched at Emma scrunched up the sheets in her fists, desperately trying to push back against me. \n\nI slowly pulled out of her and moved my hand to the small of her back and gently forced her body lower and her arse higher. The tip of my penis stroked at her slick, wet lips; both of us waiting eager for what happens next. Looking was at her, I was delighted to see her arsehole staring up at me. Emma craned her head slightly, as if wanting to ask what I was waiting for. \n\nI gently ran my thumb up and down her wet slit, coating it in our juices. I pushed my thumb inside of her, surprised at the ease at which it slid in, before pulling out and running my thumb up to her arsehole. Emma froze almost instantly, nervous as to what I was about to do. With my other hand, I spread her arse wide, leaving her vulnerable. After a few long seconds, I gently pushed against her arsehole with my thumb causing her sphincter to clench almost instantly, and her hand rush back and roughly grabbed mine. \n\n\"Don't,\" she gasped.\n\nI looked down at my thumb, sunk into her anus to the first joint before looked up at the back of her head. I wanted nothing more than to shove my whole thumb inside of her and then my dick, but instead I pulled it out of her, slid my penis back into her vagina and resumed fucking her normally. I couldn't see her face but her relief was palpable as she lowered her head and relaxed her muscles.\n\nIn and out, in and out, I moved steadily. Unfortunately, I couldn't help myself and without warning, pushed my thumb back into her arse. It took her by surprise, as she gasped out loud, and shot her whole body forward. \n\n\"Really?!\" she laughed as she looked back at me.\n\nI shrugged in response, and she rolled her eyes and looked at me like one would to a a mischievous child. I continued thrusting into her and pushed my thumb in all way into her anus. The mere act gave me intense pleasure, and though she wouldn't admit it, the way she moaned in pleasure told me she did as well. And so, for a few moments, I allowed myself to fuck her and at the same time, finger her arse. Her cries of pleasure filled the room, and only made me that much more excited. \n\nIn my excitement, I pulled my thumb out and slid my index finger deep inside her rectum, desperate to get deeper and deeper inside of her. However, almost instantly I realised I hadn't lubricated my finger and her reaction was one of discomfort as she visibly winced and cried out in pain. \n\n\"Sorry,\" I muttered.\n\n\"You could at least do it right,\" she chuckled, her face red as a beet. \n\nI quickly pulled my finger out of her and watched as for a moment, her arsehole remained gaping wide open. Grabbing both her hips again, and began to sprint to the finish line, pushing into her with quick, hard thrusts which shook her whole body. \n\nShe began moaning in such a way that I thought for a moment I had hurt her. But as she tossed her head back sending her hair flying, and pushed herself back onto my penis hard, I realised she was close to cumming again. Without thinking, I leaned forward and grabbed a tuff of her hair in my hand and gently pulled back on it. She groaned but otherwise didn't say or do anything else in response. She simply continued meeting my thrusts until each push inside of her was punctuated by the sound of her arse slapping against me. \n\nAt this point we were both acting on passion and instinct. I came, she came, I couldn't say who first or exactly what happened when we did. I just remember holding onto her arse tightly, pulling her as close to me as I could. My fingers digging deep into her soft supple flesh, her hands reached back and grabbing my side, not letting me pull out of her. \n\nEventually, she pushed herself back on me with such force, before her body shot up straight and we ended up on our knees on the bed, me holding her from behind, hands desperately to touch every square inch of her body. \n\nI buried my head in her neck and simply took it all in. The sheer undiminished pleasure of me of being inside of her once again, our collective juices oozing out from between her legs, the smell of her perfume, musk and sweat intermingled, the tips of her fingers touching the base of my penis as she continued playing with herself while I was still inside of her. She might've mumbled something, I couldn't be sure what, I was still coming down form it all. As for her, well, it was always a big come down with her.\n\n1 minute after, 2 minutes, 5 even? I don't know. But at some point, she lay flat on her stomach with me on top of her. At some point I climbed off of her and was about to sit up in bed when I felt her hand on my shoulder pulling me back down. I looked over at her and smiled. She still had her face in the sheets with one eye barely open, and looked at me with a smile. I took hold of one of her slender arms and flipped her onto her back so I could kiss her on those beautiful lips again. She looked up at me with a smile and ran her hand through my hair. \n\n\"Sorry if I was a bit rough,\" I said.\n\n\"We've done rougher,\" she replied, waving it off. \"The hair pulling was new though.\"\n\n\"Sorry, I got carried away.\"\n\n\"It's alright. You always treat me with too much respect anyway,\" she said with a wry smile. \n\n\"You're a good feminist,\" I said mockingly.\n\n\"Shut up,\" she laughed, hitting me playfully on the arm. \n\nWe both laid on the bed staring up at the ceiling for a moment with nought but the sound of our ragged breathing filling the room. \n\n\"I'm hungry,\" she whispered breathlessly. \n\n\"Me too,\" I said before pulling her in close and sucking hard on her left breast. \n\nShe chuckled, \"No I mean I'm actually hungry. I can smell that pizza from here.\" \n\nMeanwhile all I could smell was her perfume, her musk and the smell of our sex. I was starving before she arrived, but suddenly eating became an afterthought. \n\n\"Can you wait a few minutes?\" I said, as I idly fingered her wet slit. \n\n\"Can you?\" she laughed. \"I'm not going anywhere.\"\n\n\"Pretty please.\"\n\nShe smiled and spread her legs ever so slightly to accommodate my hand and replied, \"Alright, but make it quick.\"\n\n\"Only way I know how.\"\n\nShe burst out laughing as I rolled her onto her back, pinned her wrists to the mattress. She didn't fight back and instead simply looked up at me and asked,\n\n\"You think you have the stamina to go again this soon?\"\n\n\"Let's find out.\"\n\n***\n\nStrange as it is to say, but this isn't the first time we've sat naked on a bed eating pizza. We'd settled back into out conversational rhythm quite easily, but I think there was still a sense of \"is this really happening\" for both of us. I couldn't stop looking at her, and not just because she was naked. After all this time, the Emma I knew and loved had slowly been replaced by the version of her in the media; the untouchable goddess who walked red carpets on the other side of the world. Seeing her in front of me right now, sitting on my bed while picking olives off a slice of pizza; it was a most delightful surprise.\n\n\"I probably should have asked this earlier, but you're on birth control right?\" I asked nervously.\n\n\"Not that that ever stopped us before but yes,\" she chuckled. \n\n\"Good. Last thing I want is another pregnancy scare,\" I muttered.\n\n\"Don't remind me,\" she shuddered. \"That was a scary couple of hours.\"\n\n\"But more importantly, tell me you're staying.\"\n\nEmma turned to look at me and said, \"Do you honestly think I'm the type of girl who'd travel to the other side of the world just for a quickie?\"\n\n\"No. But then again I never thought you'd be the type of girl who'd have a quickie in the Madrid botanical gardens.\"\n\n\"That was a good one,\" Emma chuckled wistfully. \"But yes, I am staying, if you'll have me that is.\"\n\n\"I will,\" I replied without hesitation.\n\n\"Then I'll stay; for the week that is. After that then I have to head to San Francisco for a week of reshoots.\"\n\n\"Oh,\" I said sullenly, almost dropping my slice of pizza. \n\n\"But then I'll come back,\" she added quickly. \"And I intend to stay for a good long while.\"\n\nWe both shared a fond smile and ate silently for a moment. I've never been one for combining food and sex, but as I watched Emma sit on my bed, naked and licking the pizza grease from her fingers; I have to admit I was rethinking my position on that. \n\n\"So what's changed?\" I asked eventually.\n\n\"What do you mean?\"\n\n\"I mean, we broke up because of our circumstances. Has anything really changed?\"\n\nShe paused for a long moment as I began to regret asking that questions so soon after we'd been reunited. \n\n\"No,\" Emma admitted, as she pushed away the pizza box and and wiped her hands clean with a napkin. \"But we should at least give it a chance. Really give it a chance I mean. We gave up so quickly last time. I don't think either of us were in the right state of mind. We'd been off in our little world for so long that when reality hit, we were overthought everything, but it never occurred to us to just be normal and play things by ear. And that's what we should do now. No more globe-trotting for months on end and giving up so quickly when real life catches up with us. I just want to be a normal couple for awhile.\"\n\n\"Normal couple huh?\" I said before mumbling, \"There is nothing normal about our relationship.\"\n\n\"True. But we are not the first couple to have distance come between us. I know many others who can make it work. Why can't we?\"\n\n\"Well, I'm currently working crazy hours. Sometimes up to 12 hour a days, 6 days a week. Meanwhile you'll be off on overseas trips and doing whatever the hell famous people do.\"\n\n\"And we can keep doing that. Just maybe from now on we can make time for each other too.\"\n\n\"Like what? Brunches and dinner dates?\"\n\n\"Something like that,\" she replied.\n\n\"Grocery shopping and home cooked meals?\" I asked wistfully.\n\n\"Yeah. And maybe even a little home decorating.\"\n\n\"Home decorating?\" I asked.\n\n\"Well, while you were tearing my clothes off, I couldn't help but noticed your living room looked a little bland.\"\n\n\"Yeah, I need to get around to buying more furniture\" I muttered.\n\n\"If it makes you feel any better, we can still spend an exorbitant amount of money on things we don't need.\"\n\n\"That I like,\" I smiled before asking grimly, \"And what if we can't make it work?\"\n\n\"Then we break up,\" she said surprisingly casually. \"And if we do, at least we'll do so knowing we gave it our best shot, instead of sitting around for months on end regretting the fact we gave up so easily.\"\n\nIt was the most rational thing either of us had said in a very long time. Hindsight truly is 20/20. I smiled widely and said,\n\n\"You know, that actually sounds great Em.\"\n\n\"Doesn't it?\" she said wistfully.\n\nShe flashed me her beautiful smile again before reaching for another slice of pizza. As cheesy as it might sound, for the first time in a very long time, all felt right in my life. I thought Emma shared this feeling until she suddenly blurted out,\n\n\"Oh shit!\" \n\n\"What's wrong?\" I asked with alarm. \n\n\"I JUST spent $11 million on a new apartment in New York.\"\n\n\"$11 million?!\" I exclaimed.\n\n\"Yeah, I only just bought it last month.\"\n\n\"$11 million?!\" I repeated. \n\n\"11.4 if you want to be precise,\" she said casually\n\n\"Wow. Suddenly our holiday spending doesn't seem so bad.\"\n\n\"It's really nice too, I'm right in the middle of decorating it. Now it's going to sit there empty and unused,\" she said frustratedly. \"How was I suppose to know I was moving in with you?\"\n\nI paused for a moment before saying, \"You know, if you want to redecorate my living room, go ahead.\"\n\nEmma laughed and reached for a beer. I have to admit, it was a kind of nice feeling to know that she was letting an $11 million New York City apartment go to waste all for me. \n\n***\n\nWaking up the next morning with her naked beside me, it just felt right. I'd been thinking non-stop since she arrived at my door last night; it just felt right. Emma lay on her back with the sheets draped over her belly and with her breasts bare and rising and falling with every soft breath she took; how I missed this.\n\nWe were back to together. At long last we were back together. I know thing's wouldn't always be this great and that our conflicting lifestyles would prove an obstacle, but I don't want to give up this time. Whatever happens, we were going to see it through till the end. To be honest, when she showed up at my door, for a split second I entertained the idea of proposing a more casual relationship; fuck buddies to put it indelicately. And to be even more honest, I think both of us would've been quite happy with such an arrangement. But I was glad we had the courage to give it another try. And as I thought back on this sudden turn of events, I knew I owed someone a great debt for giving me that extra push.\n\nI hesitated for a moment but then decided to pick up my phone, wrote a quick text message and pressed send. It was only after I sent it that I read the message back to myself.\n\n\"Seeing as you were instrumental in what just happened, I thought it only right that I tell you that I took your advice about her. We're giving it another go. Thanks.\"\n\nContent, I placed the phone back on my bedside table and looked down at Emma again. She was awake, albeit still drowsy with her eyes only half open, but awake nonetheless.\n\n\"Sending nudie pics of me to your friends?\" she asked with wry smile.\n\nI chuckled. \"I would but the camera isn't very good on this phone,\" I said before adding, \"Although I still have that camera we bought in Europe I could use.\"\n\nEmma smiled before closing her eyes again and curling up beside me.\n\n\"Fine, just don't get my face in the shot,\" she mumbled, already drifting back to sleep. \n\nI laughed and watched as she shuffled under the sheets to get comfortable. I couldn't help myself a said,\n\n\"You know, while we're awake...\" \n\nShe didn't react at first. For a second I thought she'd already fallen asleep. But slowly, her lips curled into a small smile and without opening her eyes she said,\n\n\"We've been awake for what, 5 seconds?\"\n\n\"Closer to 5 minutes in my case.\"\n\n\"I'm dating a horny teenager,\" she mumbled. \n\n\"It's called being a male.\"\n\nEmma chuckled before opening her eyes and looking up at me. I saw her arm move beneath the sheets and suddenly felt her slender fingers wrap themselves around my cock. I felt myself grow hard almost instantly. She looked up at me with a raised eyebrow and a cheeky smile, almost as if to say, \"that was fast\". I shrugged and said,\n\n\"Like you said, 'horny teenager' at heart.\"\n\nShe held me in a firm grip and began stroking me up and down, and God bless her, she didn't exactly ease me into it. She hit high gear almost instantly, moving her left hand up and down the length of my penis. \n\nI came close to cumming just from the sight of it alone. After several long moments, she flashed me a wicked smile at the first sign of pre-cum which dribbled onto her index finger. Emma kept up a feverish pace for over a full minute before she showed any sign of slowing down.\n\n\"Your arm is getting tired isn't it?\" I asked between shallow breaths.\n\n\"Shut up, I'm right-handed,\" she mumbled before unexpectedly diving underneath the sheets.\n\nMoments later I felt my penis slide into past her lips and into her warm, wet mouth. I heard myself groan loudly in pleasure as I reached down and grabbed the back of her head, feeling it move back and forth along the length of my penis. \n\nI knew instantly what she intended the moment she went beneath the sheets, but it still surprised me. Not least because I distinctly recall she'd told me on numerous occasions that she didn't enjoy doing this. As if on cue, the moment this thought crossed my mind, she whipped back the sheets, looked up at me and said,\n\n\"Don't you dare cum in my mouth,\" she said firmly, before adding, \"Or on my face for that matter.\"\n\n\"I wouldn't dream of it.\"\n\n\"I know what you dream of.\"\n\n\"Fair point,\" I chuckled. \"Don't worry I won't, I promise.\"\n\n\"Thanks.\"\n\n\"I'll cum on your tits like a gentlemen,\" I quickly added. \n\nEmma chuckled and shook her head. \"Well I suppose that's marginally better.\"\n\nAnd with that, she slipped my member between her soft supple lips again and did her thing. The way she looked and the way she handled herself, she was making it very hard for me to keep my promise.\n\n***\n\n- HER -\n\nEmma caught herself in the mirror as she spat and rinsed again. In her first moment alone since she came to Nate's door last night, all she could do was smile. After the last few stressful months, it was nice to be with someone she loved. She was feeling as well rested as she had been in months, and felt as if nothing could bring down her spirits, not even the early morning blow job she had just inexplicably given. She splashed water on her face and allowed it to drip down her neck and the front of her naked body. \n\nStepping out of the bathroom, she looked at him lying on the bed. He'd fallen back asleep rather quickly. He once told me to think of it as a compliment. Looking around, it was funny how familiar everything felt. She'd had slept in that bed before. It seemed like a lifetime ago when she had spent those brief couple of weeks here after she and Nate reconnected after her film premiere. But they soon left it behind in favour of travelling the world and moving from hotel room to hotel room. \n\nTheir clothes and underwear were strewn around the room. Without bothering to put anything on, Emma slinked quietly out of the room. The cold air rushed over her naked body. She walked through the empty hallway, her bare feet moving silently across the hardwood floors. It wasn't exactly a multi-million dollar apartment, but there was something so comforting about it. A nice quiet place in the suburbs on the other side of the world, far removed from the hustle and bustle of the States or England. She knew things could get just as bad here, especially once the paparazzi catch wind of her presence, but for now she was content to stay here in obscurity. \n\nIt won't last of course. She can't hide out down in Australia forever. Especially not when she's already committed to a bunch of films. Pretty soon the circus will catch up with her; and when it does, who knows what will happen. \n\nBut Emma pushed those thoughts out of her mind and she simply stood there naked, in the middle of the lounge room as the sunlight filtered in through the curtains and bathed her in light. In that moment, a couple of thoughts ran through her mind; first, no matter how this relationship ends, they made the right choice getting back together and giving it a real go. Second; there better not a fucking photographer with a long lens watching her right now. \n\nShe stood there for sometime, entranced by the early morning light. At some point later, she couldn't say how long, she felt a pair of warm hands on her waist and was soon was pulled back into his strong and equally naked body. ",
        "\"I thought you went back to sleep,\" Emma asked.\n\n\"How can when you're up and about?\"\n\nHe held her for several longs moments before he asked,\n\n\"So what do you want?\"\n\nEmma was never one for dirty talk but somehow with him it came naturally.\n\n\"I want you to throw me over that sofa, use me and give into all your nasty urges,\" she said, attempting her most seductive voice.\n\nNate laughed and replied, \"I meant for breakfast.\"\n\n\"Oh,\" Emma said as she felt herself blush. \"Cereal is fine.\"\n\n\"Too late,\" he said.\n\nHis hands ran up her front and gently squeezed at her breasts before one hand slid down between her legs. She felt his lips on her neck and a finger between to tease her as it slid up and down her vagina. He was nothing if not predictable. She'd been with him long enough to know he liked to finger her and bring her close to an orgasm before he even thought about fucking her. Not that she complained of course. He usually got good results. All she could do was smile, close her eyes and let him-\n\nHer thoughts were interrupted as he suddenly pushed her to one side, placed a firm hand on her back and pushed her over the side of the sofa. His fingers rubbed at her vagina for a few moments before suddenly moving further up. She tensed up almost immediately upon feeling the tip of her fingers against her rectum. \n\n\"Whoa slow down,\" Emma yelped. \n\n\"You said give into all my nasty urges,\" he chuckled.\n\n\"I really shouldn't try sounding seductive first thing in the morning,\" she said. \"I just end up saying something stupid.\"\n\n\"You want me to stop?\"\n\nEmma adored his politeness. In fact, it's probably the one reason she replied,\n\n\"No go ahead.\"\n\nShe felt him lean in and kiss her on the back of the neck. She took a deep breath, relaxed her anus and waited. And when it happened, she suddenly remembered why she hated it so much. She arched her back and whipped back up straight; the shock of the intrusion was that great. Her reaction must've been loud because he instant clasped his hand over her mouth. \n\nEmma reached up and peeled his hand away. She spoke awkwardly, as the feeling of his member penetrating her tight hole reverberated throughout her body.\n\n\"Sorry. Maybe just take it slow.\"\n\n\"Em, you know how people say 'just the tip'?\"\n\n\"Yeah.\"\n\n\"That was just the tip.\"\n\nEmma laughed nervously, \"I'm regretting this already.\"\n\nShe felt his hand on her back again, gently bending her over the couch. She took another deep breath, balled up her fists tight and tried her best to otherwise relax. \n\nShe felt some fingers on her vagina as he began to simultaneously finger her. If there was any pleasure to be gained from it, it was so far minimal. She was too distracted by the feeling of her anus being forced wide open to accommodate his member. He let her know he was in all the way with a forceful final thrust inside. Emma shut her eyes and gritted her teeth. He remained inside of her for several long moments while continuing to finger her. She felt herself grow wet again, but any satisfaction left her the moment he swiftly pulled his penis out of her.\n\nEmma found herself doubled her the side of the couch, gasping for breath from the shock of the intrusion. Her reprieve was brief as moments later, she felt him enter her again, this time, pushing all the way inside of her with from firm, fluid motion. \n\nEmma cried out in pleasure and pain, screwed her eyes shut, and continued gasping for breath. \n\nThe things we do for love. \n\n***\n\n- ME -\n\nIt felt a little strange to be pouring two bowls of cereal in the morning. Not least of which because it'd been a long time since a girl had stayed the night but also because it always felt weird seeing Emma do something as mundane as eating cereal. We sat down for breakfast, exchanging quick smiles before retreating to our respective mobile devices. It took us all of a night and part of a morning to return to our normal rhythm. And here I thought we were going to have to get to know each other all over again.\n\nI peered over the top of my iPad to see Emma shuffling uncomfortably in her seat.\n\n\"You okay?\" I asked.\n\n\"It feels weird,\" she said with a slight smile\n\n\"Being back here?\"\n\n\"No. Feeling your cum slowly seeping out of my arse.\"\n\nI laughed, almost spitting out cereal. Emma didn't look up and simply continued looking at her phone with a tiny little smile.\n\n\"You asked,\" she said.\n\n\"And you offered your body to me.\"\n\n\"I don't think I'll be making that offer before 11am ever again,\" Emma said, as she tightly pulled together the sides of her bathroom. \n\n\"Such a shame,\" I replied, feigning sadness.\n\nSuddenly, my phone began to vibrate on the table beside me. It was from Amber; it read:\n\n\"Glad to hear! See? It's meant to be!! We should grab coffee soon; you can tell me all about it\"\n\nI smiled widely and read the message back to myself once more. I was back in the friend-zone with her I guess; and it suits us just fine. Emma looked at the clock and then back to me and asked,\n\n\"Who's messaging you this early?\"\n\n\"Just a friend. Long story, I'll tell you later,\" I said.\n\nEmma nodded before returning to her cereal. She continued shuffling uncomfortably on her seat before rising suddenly and saying,\n\n\"Alright, I feel disgusting. I'm taking a shower.\"\n\nI burst out laughing and watched and Emma skipped away down the hall. \n\nI returned to my iPad and was skimming the news when my phone vibrated again a few minutes later. \n\n\"Wait, ur not moving away are u?!\" Amber's reply read.\n\nI quickly wrote out my reply:\n\n\"Nah. She's moving in. It'll be tough with her working all the time, but we just wanna spend as much time together as we can.\"\n\nI pressed send and placed my phone down. Suddenly, in the distance I could hear Emma's voice, and I could also hear the shower running. I got up out of my seat to have a look. Peering down the hallway and into my bedroom, I could see Emma standing in the middle of the room with her phone to her ear. I was well within earshot and heard her say the following things:\n\n\"Yeah, great to hear from you...\n\n-Unfortunately not, I'll be away for a bit...\n\n-I'm in Australia...\n\n-Yeah, I'm with him. We've, ah, we've resolved our issues,\" she said as she caught me staring at her. \n\nI smiled widely. Well, that was two people who knew about us now. The secret will be out soon, and then things will get interesting. My phone vibrated once more and interrupted my thoughts. Amber again.\n\n\"That's great! Don't know if I could do that. Especially if I worked long hours like u. That must've been a long talk u guys had huh? Bah, look at me rambling. I'm sure u 2 thought it all through. So happy for u!\"\n\n\"I'm sure u 2 thought it through\": I read that sentence back to myself at least 5 times. Amber meant well by her message. If anything, she was expressing admiration at how far we were willing to go to keep our relationship alive. But to me, her words hit unexpectedly hard. For a split second, I felt like I was back in Las Vegas with Emma all that time ago and we were discussing the future of our relationship. Emma and I have always operated on a whim without much forethought. Us breaking up was perhaps the most well thought out thing we'd done. As I stood there, staring at Emma from a distance, I suddenly realised that us getting back together seemed to be another spur of the moment thing. Have Emma and I really cracked the code to making our relationship work or was this just yet another poorly thought out plan of ours? Am I overthinking things again? Didn't we promise to stop doing that?\n\nI stared at the message for a few moments before looking up from my phone and at Emma who was now pacing back and forth in the bedroom, still on her phone. Maybe it was just me reflecting my current state onto her but she similarly looked like she was in the middle of a serious conversation. It took almost a minute before she finally looked up to find me staring right back from the hallway. She stared blankly at me before flashing me a quizzical look. I just smiled in reply. I was still lost in my own thoughts with my mind going a mile a minute as usual; that same damn debate running in my head again.\n\nSuddenly there was a new look in her eye. Still holding the phone to her ear with one hand, she untied her bathroom with the other and let it loose. I stared at her and she at me. Suddenly the bathrobe was on the floor and Emma, seemingly out of exasperation, flung her phone away and nodded towards the running shower. \n\nAs I looked at her, standing in my bedroom without a shred of clothing on her, all my thoughts and worries flew out of my head. I similarly flung my phone away, followed her into the shower and muttered to myself,\n\n\"Ah, fuck it.\"\n\nQue sera, sera.\n\nWhatever will be, will be."
    ],
    "authorname": "clownprince2008",
    "tags": [
        "emma watson",
        "ex-girlfriend",
        "anal",
        "romance",
        "squirt",
        "fingering",
        "telephone",
        "nostalgia",
        "blow job",
        "morning sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/emma-ch-04-2"
}