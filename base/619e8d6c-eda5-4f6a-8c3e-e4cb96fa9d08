{
    "title": "First Day in the Caribbean 16",
    "pages": [
        "Octavia didn't shut off the alarm quickly enough, and all three of them woke up. Mary said, prying her eyes open, \"It's her last day, and I have to leave anyway, let's go help her celebrate.\"\n\nOctavia pulled on her clothes and gave her a look. \"You're not used to being awake at this hour. Sure you can handle it? I'm pretty sure Asch would be willing to keep you company here.\"\n\nAsch chimed in, \"Ah, I'd most prefer to keep you both company! I'm game to celebrate.\" \n\nThey all headed for Anchovie's, arm in arm, taking turns being in the middle. Octavia went in the back door and Mary and Asch walked around to the front. She nodded toward the alley across the street. \"So that's where you two had your alley rendezvous, eh?\" She grabbed his hand and dragged him across the street. \"I wanna go check it out.\" As soon as they got into the dark, she grabbed him and pushed him against the wall, then pressed herself against him. Through gritted teeth, she said, \"When we get a chance, I want to play this game, too.\" Then she kissed him fiercely, backed away with a schoolgirl smile, and they walked back into the light.\n\nOctavia apparently didn't notice the slight delay for them to get into the caf\u00e9. She sidled up, leaned her arm on the counter, and said, \"What'll ya have? Yer early, so we ain't outta nuthin' yet. I recommend the scrambled eggs and bacon with hash browns. And coffee before it gets bitter.\"\n\nMary batted her eyelashes and pretended to be timid. \"May I have that please?\u2014Only with sausage?\" Her eyes got big, and she put an intense look on her face. \"Nice big, round sausage, like this!\" and she motioned something the size of a male private part.  \n\nAsch started to smirk, but Octavia kept a straight face, \"Arright, arright, I git yer drift. Big sausage it is. I suppose you wants yer coffee hot, light, and sweet, right?\"\n\n\"Yes! yes!\" Mary exclaimed, pumping her fists and arching her back.\n\nAll this conversation was loud enough for the other three people at the counter to overhear, and their attention was riveted on the two women. One of the men muttered to the guy next to him, \"Man, I'd like to meet her at a bar sometime.\"\n\nHis buddy replied, \"You got that right.\"\n\nTheir looks turned from interest to disappointment and almost jealousy when Mary started to neck with Asch right there in public.\n\nAsch absently put his arm around Mary and said, \"Fix me up with something hot and slippery, um, eggs over easy, and toast with lots of butter.\"\n\nMary blinked and said, \"Bring the butter separate. I want to butter him I mean it for him,\" and she leaned over and breathed into and nibbled his ear, then retreated with a satisfied smile.\n\nThe buddy muttered, \"Is she sober? If she is, I'd sure like to see her drunk!\" \n\n\"You got that right,\" the first guy said out of the corner of his mouth. \n\nThe third guy was sitting a couple stools down and was trying to look like he wasn't paying attention, but he was squirming and he had a fist jammed in his lap.\n\n\"Coming right\u2014up!\" said Octavia with emphasis on the \"up.\"\n\nAsch stayed straight man through the whole thing.\n\nAfter breakfast Asch walked Mary to the jitney and they headed for the airport. After they got settled, Mary said, \"Did you recognize that third guy?\" \n\nAsch looked at her sideways. \"How do you think I was able to keep a straight face though all that? It was the guy on the roof, right?\"\n\n\"Yup!\" And she sat back with a satisfied smile. \"I'll bet he camps on that rooftop for a month.\"\n\nWhen they got to the airport, Asch offered to keep her company. \"Nah\u2014I've got paperwork to do, and if I get groggy, they have a cot in the ready room, which they won't let you into. But thank you, though, a lot,\" and she gave him a nice smile and a quick, deceptively passionate kiss. \"I'll see you when I see you. It's fun sneaking up on you guys. I'm always welcomed so enthusiastically.\"\n\n\"That's how glad we are to see you,\" Asch smiled back. \n\nThere being no flights in, and no shift change, the bus back was empty except for Asch and the driver. Asch sat up front next to the driver so they could converse if he wanted.\n\n\"Didn't I see you coming into town a couple days ago with that dame? The day they took that guy out of here in handcuffs. You hear about that?\" \n\n\"Yeah, I did,\" said Asch. \"The 'dame' has come and gone since that day, though. You must have missed her.\"\n\n\"She comes and goes a lot. A week or so ago I took her and some guy to the airport. She gets around a lot, eh? The guy acted pretty interested in her, but she was only polite. He was definitely friend zoned. She seems to like you pretty well, though, if I may say.\"\n\nAsch smiled to himself. \"I bet you see a lot, driving this bus.\"\n\n\"Man, you got no idea. The things I could tell. Everybody thinks the driver's not payin' no attention to nuthin' but the road, so they act like they're in private, especially this being the late run. I can't hear much, but see a lot!\" They arrived at the stop closest to Anchovie's, so Asch paid the man and took his leave.\n\n\"I'm glad Mary didn't have to use her judo,\" he thought to himself as he headed for Anchovies. Anchovie's was at least half full. Asch had never been there this late\u2014or early, depending on how you looked at it\u2014the crowd was noisy, almost a party atmosphere. Asch took the seat at the far end of the counter and the guy next to him leaned over confidentially and a little bleary eyed, \"Hey'd you hear? Tonight is Octavia's last night. Apparently she fell for some guy and he's stealing her away from us.\"\n\n\"Oh really?\" Asch feigned surprise. \"I'm usually here later in the morning, but isn't she kind of a cool cucumber?\"\n\nThe guy hiccupped. \"Oh sure, no touching, no dates, but she gives a good show, and we all love her.\"\n\nJust then Octavia came out from the kitchen, her arms laden with plates and one on her head. Her blouse was down to three buttons fastened. \"Okay, guys, who's gonna help me unload here?\" she called out. Everyone volunteered. \"Well I can't have you all help, so I'll just pick\u2014\" She surveyed the eager men at the counter and spotted Asch, who saw her flicker of recognition as she pretended to ignore him. \"\u2014you!\" and she held her arms to the fourth guy from the end, squeezing her breasts together to emphasize her cleavage. He stared only a little, then eagerly and carefully took the two end-most plates. \"Table two,\" she called out, and the guy got up and with a great flourish placed the plates in front of the couple at table two. \"And you,\" she stopped at guy number five, who took the next two plates. \"Table three!\" To the next guy at the counter, \"Also table three. Are those guys getting good service or what? Guy number six got the last two plates, and Octavia gave him a big air kiss. \"Mmwah! Thanks, you sweeties. Wait! What's this? Oh yeah!\" and she reached up and took the last plate from her head and plunked it in front of the guy on the first stool, with a big wink. \"I bet you thought I forgot you, didn't you? Well, I could never forget you, sweetie,\" and she blew him a kiss.\n\nAsch watched the show with utter fascination.\n\nOctavia wiggled her eyebrows. \"Be right back!\" and she dashed into the kitchen. In a couple moments she was similarly laden, only none of the buttons were fastened, her bikini top\u2014and cleavage\u2014in clear evidence. She expertly set a plate in front of each of the guys at the counter, elbows at her sides for best effect. The guys all ate it up. When she got to the last man, next to Asch, she came up short, pretending to see him for the first time. \"What's this? a new guy! \n\nAsch nodded enthusiastically. \n\n\"Did you know tonight is my last night?\" \n\nAsch said, \"The guy next to me just told me.\" It wasn't exactly a lie.\n\n\"You want the special, too, buddy, right?\" She nodded her head. Before Asch could respond, Octavia half turned. \"Hey Jimmy! One more special,\" she yelled. \n\nShe reached into the pocket of her apron and pulled out a stack of restaurant checks. \"Okay, guys, time to pay the piper\u2014after you've eaten, of course,\" she toured the counter, then the tables, slapping down a check at each. Everyone was separate checks except the couple at table two. Asch realized with a start that it was the fellow he and Octavia had conversed with several days ago. A look of recognition appeared in that fellow's eyes, too, and he smiled quietly. Asch knew there'd be a conversation later.\n\nAsch's plate arrived, and she presented it with some extra wiggles and a spin, \"Because this is my last night, and you missed all the other shows.\"\n\nThe room settled down a bit as everyone dug into their bacon, eggs, sausage, and hash browns. Several men finished at about the same time, and a line gathered at the cash register. They looked mostly like blue-collar salt-of-the earth types, hardworking, honest, and with simple tastes. It was pretty clear that Octavia liked them all, and they liked her.\n\nOctavia started to ring them up. \"I just want you guys to know,\" she announced as she worked the register, \"that's it's been nothing if not nice\u2014and it certainly hasn't been nothing, has it?\" Everyone cheered, and they individually gave her their best wishes as they paid. A couple had tears in their eyes. One old guy even got a kiss on his cheek. Everyone cheered at that, too. Eventually the place pretty much cleared out, except for Asch and the couple at the table. \n\nThe man called Asch over, timing it so Octavia would be nearby as she bussed the tables. \"Sir, it's Asch, right? I'd like you to meet my colleague, Sarah Clemens; my name is Oliver Brown, by the way. We went to a lecture on mycology at the college tonight, and thought we'd stop here for supper. This is her first time here, and (ahem) my second. We had no idea tonight was a special event, but we certainly had fun.\n\nSarah's eyes twinkled, \"Ollie was chagrined when the, um, show started, but I calmed his fears\u2014told him I wanted to pick up some of Octavia's technique. Much to his relief.\"\n\nOctavia stage-whispered to Sarah, \"Call me sometime and I'll give you some tips.\" Her voice returned to normal. \"I love it here, but the schedule is killing me. I'm glad to have met you, by the way. I remember Ollie from a few days ago. He came at a decent hour, and he seems to be a nice guy.\"\n\n\"Well, he's pretty quiet at work, but it turns out we're both amateur photographers. He concentrates on mushrooms, I do insects. The lecture was pretty interesting but now we'll have to look for one on entomology.\" She looked at him and smiled. \n\n\"The music store likes to post local photographs on the walls. Maybe you could do a two-man show,\" Asch chimed in. That started an animated conversation between the two, and Asch retreated back to the counter.\n\nOctavia came by. \"Look, Asch, why don't you head for your room and I'll come kick you out of bed when I get out of here. Nothing's gonna happen between now and when my replacement comes in, and you have to be pretty tired.\"\n\nAsch reluctantly acknowledged the wisdom of her words, protesting that he enjoyed her company even when he was tired, but agreeing to let her kick him out of bed later. He headed out, wishing the couple success with their photo show as he left.\n\nAsch lay in bed with his fingers laced behind his head. He had been here only a little longer than two weeks, but the future looked pretty interesting. \n\nIt would be the last night for Octavia to have to sleep during the day... No doubt it would bring some changes to their relationship...Mornings might not be so available for chores and writing, though the two of them might enjoy working on projects around the place together...On the other hand, maybe they wouldn't want to spend every last waking moment together, either...On the third hand, maybe they would!...Maybe he should talk to Lydia about something like renting two rooms and inviting Octavia to bring her possessions up...He and Octavia hadn't had a single argument, and they enjoyed each other's company...Scuba was in the offing, the upcoming concert was not to be missed, and he had some money that might be fun to invest in a boat, or a brewery...Except for the garden club meeting in Easthaven, he hadn't even been to the other side of the island, in fact anywhere on the island, except the airport...And he had made a pile of friends...Maybe he wouldn't check out the other islands just yet...Maybe after he got a boat and learned to navigate. Of course he'd need a crew...And beer is basically fermented plant matter. He wondered if you could make beer out of seaweed or something else from the island; he'd have to ask Clay about that. Then he could deliver their local brew to the other islands in his boat. Hmm. \n\nHe hitched himself up, stuffed his pillows behind his back, grabbed his laptop, and got to work on his writing. \n\nHe startled awake when Octavia crept into the room. The sun was just beginning to lighten the sky. He looked at his screen to see pages and pages of semicolons where his hand had rested on the keyboard when he dropped off. He didn't get a chance to clean it up, though.\n\nOctavia came over, shoved the tablet aside, and kissed him soundly and celebratorily. \"They let me off early. I'm done with Anchovie's! And I'm happier about it than I thought I'd be!\" She climbed onto the bed and began to undress, straddling his knees as she did so, while he came fully awake and watched. \"I get to sleep like a normal person! I'll see more of you! We can build stuff! Go exploring! Have sex! What do you think Lydia would think about me renting that other room and me just moving up here? Would you like that?\" Now she was naked, and she fell forward, rolling to one side and enthusiastically pulling him to her for some kissing. \n\nHe propped himself on an elbow and caressed her cheek. \"I've been thinking some of the same things. I think we have a lot of adventures coming up.\" He smiled, admiring and running his fingers over her contours as she lay there. \"Not the least of which will be to have you around more.\" He circled her breast with a finger. \"Around, get it? Yuk yuk.\" He made another circle and she rolled her eyes, then closed them to enjoy the sensation of his touch. \"That was quite a show you put on at the caf\u00e9 tonight.\" \n\n\"Liked that, didya?\" She smiled \"Those guys are mostly the second shift at the power plant, plus a few from the water treatment plant. They got to be pretty regular, and the 'show,' as you put it, sort of grew. Last night was far and away the most, uh, theatrical, though. They're good, hardworking, decent guys. I'll miss them.\" She sighed. \"But not as much as I missed my sleep.\" She rolled toward him. \"Would you be willing to do me a favor? Entertain me when I wake up. I'm about to collapse; think of it\u2014the last time!\" She closed her eyes for a moment, then her whole body twitched. She opened her eyes. \"Somnambulant jerk. G'night, handsome.\" Then she was asleep. \n\nAsch waited a few minutes to let her slumber deepen, then he slipped out and tucked the cover around her. He gathered her clothes and laid them at the foot of the bed, dressed himself, then grabbed his laptop and went downstairs.\n\nLydia was just coming out of her bedroom. Rover bounded up to him for some pats. \"What?\" She looked at him mock-sternly. \"You're just going to let your guest sleep? You're getting to be like an old married couple! Sleeping instead of doing the creature with two backs.\"\n\n\"You never know what goes on around here when you're out running your errands,\" Asch grinned and waggled his eyebrows at her suggestively.\n\nShe rolled her eyes.\n\n\"You heard the news, right? Last night was her last night at Anchovie's. Starting today she joins the regularly scheduled human race again.\"\n\nLydia wrinkled her forehead. \"I think I knew it was going to happen. Last night, eh?\"\n\n\"What would you think about her becoming a renter here? Move some of her stuff up.\"\n\nShe brightened. \"Does that mean I'd get both of you for slaves I mean helpers around this place?\"\n\n\"Well, I think she might like to help out. Some of my projects could use two people, and she'll have to do something with all that spare time.\"\n\nLydia snorted. \"That'll be the day when I see her with nothing to do.\" She sobered. \"I've known you for only two weeks, Asch, but it seems like it's been our whole lives. I would be honored to have the two of you share this house with me.\"\n\n\"And with your kind permission, I want to pay the rent for both of us. She already asked me if I'd like it if she moved up here, and I feel like it would be a nice way to make her feel welcome.\"\n\nLydia opened her mouth to say something, then closed it. \"I'd feel funny charging Octavia to live here, but she is a big girl now. On the other hand, I'm always willing to take a guy's money.\" She tried to look greedy, but didn't succeed. Asch did a quick calculation and gave her enough to bring things to the end of the month. \"That'll keep me on the monthly schedule,\" he said.\n\nAsch went out to take care of the livestock and Lydia went to work on breakfast. \"The goats are getting pretty used to me,\" Asch remarked when he came in. \"They keep checking my pockets for treats. I think I need to build some nesting boxes on one side of the garage. You okay with that? I've found about three nests along the edge of the yard; we might get more eggs if they have classy hen apartments.\"\n\nShe looked at Asch thoughtfully. \"Tell me when you decide to live on the island permanently. Maybe we can talk about you just buying this place. If you're interested when the time comes.\"\n\nAsch raised his eyebrows. \"Hmm. Hadn't thought about that. It's a thought, though. We'll see. Don't you like it here? Maybe we could work something out where you manage the place even though I own it.\"\n\n\"Well, Gus and I got the place when we were a lot younger, and I don't seem to be doing as many projects as I used to. And I'm getting more and more connected to the east side. So put it on the back burner,\" she said, \"we'll see if I still like you when the time comes.\"\n\nHe helped clear the table and load the dishwasher when they had finished, then settled down to write. Time flew, and before he realized it, Octavia was coming down the stairs in her work clothes sans underwear. \"I'm gonna have to stay up late tonight to start getting on a normal schedule. Think you can keep me up?\" She sat next to him. \"Say Lydia. What would you say to me renting your other room? Mom was actually hinting about converting my room at home into a classroom sometime.\"\n\n\"Nope. I just rented it.\" She paused long enough to let Octavia do a double-take. \"I rented it to Asch,\" she snickered. \"I think he has plans to let a friend use it. You'll have to talk to him. Well, I'm gonna go grocery shopping. You two work out the housing details. See you in an hour or two.\" And she headed out, still snickering.\n\nOctavia turned to Asch. \"You mean we can do it? Now? For real?\"\n\nAsch stood up. \"Shall we take a look at that room, see if you like it? You can always stay where you are, you know.\"\n\nShe jumped up and hugged him. \"You're fast, you know that?\" She ground herself into him. \"But not too fast. Yes, let's go look!\" She fairly dragged him upstairs. \"It's been more than a year since I've looked in here. I see it hasn't changed much.\" They poked around. \"Plenty of closet, nice dressers, closer to the bathroom than your room, not too bad a view, though your room's is better.\" She plumped down on the bed. \"Do I have to use the bed, though?\" She screwed up her face in an exaggerated scowl.\n\n\"Not unless we have a fight, or we decide to have an adventure. I suppose I could rig up that rope in here for when you're feeling kinky,\" he grinned. \n\n\"Now there's a thought!\" She sighed, \"I don't know whether to tumble now or go get my clothes first!\"\n\nAsch leaned toward her and pushed her onto her back. \"If we tumble now, we can borrow the truck and pick up your stuff after she gets back,\" he suggested, leering at her and reaching for her top button. ",
        "She started on her bottom button and worked up. \"You're such a good planner. What did I ever do without you?\"\n\n\"I can guess,\" he grinned wickedly, \"will we find any toys when we load up your stuff?\"\n\n\"Lemme show you my favorite toy,\" she said, reaching for his pants, and not answering his question.\n\nAsch leaned over her, holding himself up with his hands next to her head, smiling and looking alternately into her eyes and at her exposed breasts. He closed his own eyes as he felt her hands on him, sliding his shorts down and pulling on his erection. \n\nShe rolled onto her stomach and brought her feet to the edge of the bed, raising her behind into the air. \"Pull down my bottoms.\"\n\nAsch obliged, then stood close behind her and pulled her gently into his crotch. He put his hands on her hips and carefully he moved her back and forth, working the tip of his member against her labia, spreading his moisture and entering her slit deeper and deeper, sliding across her entrance.\n\nOctavia moaned and arched her back to give him better entrance. She reached down to play with her clit as she pushed herself against him, surrounding him with her tightness as he penetrated deeper and deeper. Their movement became more and more urgent as he pulled her harder and harder into him. \"Oh you're so deep! I'm going to come!\" she cried out, rocking her hips in time with his thrusts. She could feel the sudden swelling of his member as he got ready to climax, and a moment later, they both cried out in passion as they came. Presently she rolled onto her back and smiled up at him. \"Well, it looks like this bed works. Come down here,\" she beckoned, and he lay on the bed next to her. \"I wish there was a graceful way to get from that position to having you lie on top of me, without us having to separate. I like the feel of you inside me while we relax.\"\n\nAsch thought for a moment. \"Hmm. You're right, it would be pretty hard. Well, next time we can do missionary or some variant and I'll stay inside until you evict me. I kind of like your place myself!\"\n\n\"You're so cooperative,\" she snuggled against him as they lay on their sides, and she reflexively moved herself against his still noticeable member and rotated her hips hedonistically.\n\nAsch responded by pressing himself against her, and she put her top leg over his so she could get closer. He began to respond, and she could feel there was more for her to press against, so she kept moving and pressing herself onto him. Before long, he was hard enough to enter her and both of their movements became more and more sexual. Abruptly she rolled him onto his back and herself onto him, her legs inside his. With ragged breaths she moved up and down onto him as he arched his back upward in time with her movements. He got harder and she got more excited; they moved faster and faster until she arched her back and clenched her teeth, \"Hnngh!!\" she trembled in ecstasy, then collapsed onto him. Asch pulled up his knees, enabling her to keep him fully inside. She propped herself up with her forearms on his chest and looked at him, but her mind was on the sensation of his still erect member inside her, and she rocked up and down to move him inside her. \"Y'know this feels pretty good, and I just came twice.\"\n\n\"And if you keep it up, my erection will stick around for a while, too. I'd end up climaxing, too, especially if it's my first time. Second time it could happen, too, but it might take enough effort that it'd wear you out. I'd hate for you to be all raw and sore.\"\n\n\"I can't think of a better way to die,\" she grinned and she kept rocking against him, exploring the sensations. Finally she slowed down and she could feel him begin to relax. \"I kind of hate to feel you disappear,\" she pouted, \"but there'll be other times, right?\"\n\nAsch screwed up his face in mock contemplation. \"Yeah, there might be a chance, sometime off in the future. Maybe. If I'm lucky\" he smiled and squeezed her behind.\n\nShe laid her head on his chest, \"Yes, I predict you'll get lucky. I can hardly wait.\"\n\nAsch twirled his finger in her hair. \"Woman, you are insatiable!\" \n\nShe raised her head. \"Yup!\" and plopped it back down. After a while she said, \"If I move, you'll slip out, won't you?\" \n\n\"Probably. Do I still feel inside?\"\n\n\"She snickered, \"I can't tell.\" They both chuckled and got up. \"Yup, you were still in there,\" she said. \n\nThey cleaned up and got dressed, then rearranged the room to put the dressers next to the closet and the bed under the window where it would be more or less out of the way. \n\nBack down in the kitchen, Octavia puttered around to fix something to eat and Asch sat at his laptop. Octavia brought over a couple sandwiches and sat next to him. \"So what is it that you're writing?\"\n\n\"Oh, kind of an adventure story.\"\n\n\"When do I get to read it?\" \n\n\"Well, book 1 might be about done. Let me get a little more written and I'll let you look at it.\"\n\nAbout then Lydia came in and they all hauled in the groceries. Asch saw that they were chosen with three people in mind. \n\n\"Why don't you guys take the truck and pick up some of Octavia's stuff and bring it up here? Be a lot easier than a hundred bicycle trips.\"\n\n\"Thank you! I think we'll have time to make a run before I have to go to Rita's, and I should tell Mom what's going on, too. We already talked about it some, so it won't be a shock.\" Octavia fairly skipped to the truck.\n\nThey had time to talk with Vivian and bring Octavia's hanging clothes, wrapped in a blanket, and several drawers of small items, still in the drawers. Asch took her down to work, deliberately forgetting to bring her bicycle so he'd have to pick her up later. \"I should be able to transfer your stuff into the new dressers without disturbing things too much,\" he offered. \n\n\"Oh no, you don't have to do that!\" she said. \"I want to take an inventory.\"\n\n\"But I want to look for your toy,\" Asch quipped.\n\n\"Toys,\" she said demurely.\n\nIt was raining cats and dogs when he came to pick her up. Asch was glad they hadn't planned to take their bikes. \n\n\"Think Lydia'll be in bed when we get there?\" she asked.\n\n\"Yes, she generally heads for the sack on the early side.\"\n\n\"Good,\" she said, and started to unfasten her shirt. \"This thing is wet. Help me get it off.\" She shrugged her shoulders as he pulled down on the garment. She unfastened the bikini top she used for a bra and in a moment she was bare from the waist up. \"Ah! free at last! You okay with me running around like this? I do\u2014did it a lot at home.\"\n\n\"My life just got a whole lot more interesting,\" he said as they pulled in, \"I see all the lights are out, so you\u2014we\u2014probably won't scandalize Lydia.\"\n\nThey hopped out of the truck and ran, but still got dripping wet before they got inside. Asch tossed the keys onto the table and they scooted up the stairs. On the way he took off his wringing wet shirt, then tossed it in the direction of the bathroom when it was in range. He grabbed Octavia from behind and gave her a big hug. \"Welcome to your new pad, Young Lady,\" he said into her ear. \n\nShe turned around in his wet embrace and they kissed, both relishing the feel of their wet bodies sliding against each other. Finally she broke the kiss and turned toward her room. \"Aww, my bed is completely covered with drawers full of junk. Wherever will I sleep?\" Asch came up behind her and put his hands on her breasts. She leaned back against him. \"Got any suggestions?\"\n\n\"And I don't have that rope in place yet, either. Hmm. There's a pallet up on the roof, but you might get struck by lightning,\" Asch pretended to be deep in thought. \"Or there's my place! How about that?\"\n\nShe turned in his embrace again. \"You're such a smart man!\" She kissed him. \"Slow, but smart.\"\n\nThey chuckled and got a couple towels to dry each other off with. Settling into Asch's bed, Octavia propped herself on an elbow. \"I'm not sleepy!\" Do you mind if I try that disappearing inside of me thing again? I can do most of the work,\" and she slid her hand down his belly to his crotch and began to play with him. \n\n\"Huh, Mm. Ahh. No, I don't mind at all,\" he gasped. \n\nShe kept her hand going and kissed his chest and mouth, and he responded accordingly. Before long he was hard as a rock. He pushed her onto her back and got on top. \"My turn to be on top,\" he gasped. She still hadn't let go of him, and as soon as he was more or less in place, she directed his manhood into her womanhood. She kept the hand down there to play with her clit, and rose to meet him as he slowly pumped in and out. \n\nShe began to gasp and moan, pushing herself as deeply onto him as she could, and with increasing urgency. Their movement became more and more urgent; soon Octavia heard Asch's moans change\u2014he was about to come. The sound pushed her over the edge and she cried out and clenched him inside her as she climaxed. She could feel him ejaculate and it excited her even more. She heaved a big satisfied sigh. Asch hitched himself up as they relaxed so he would be less inclined to slip out, and he held still while she moved her hips, savoring the sensation of his member moving against her as she moved. She tried rotating, moving up and down, sideways, and in and out a bit, and kept it up for several minutes. Asch did his best to oblige and held himself against her. Eventually she stopped moving, \"Don't pull out. I want to feel you disappear,\" she demanded. \n\n\"I keep looking at you and it might take a while,\" he smiled. \"You're a pretty exciting sight.\"\n\nShe smiled at the compliment. \"Take all the time you need. Sorry if I move sometimes\u2014you just feel so good I can't hold still.\"\n\nBut after a while she did hold still, and he began to relax. He could feel himself becoming limp, and so could she. She kept making little mournful sounds and finally she sighed. \"I suppose all good things must come to an end, but that sure was fun.\" She smiled. \"I'm glad we're going to have more time together. Let's see what it feels like now when you roll off.\"\n\nHe rolled off, and she sighed. \"I couldn't feel you, but I could feel when you left, and now I feel emptier.\" She rolled to face him and put her hand in his satisfied crotch. \"Do I have permission to play any time I want?\" She gave him a gentle squeeze. \n\n\"Hmm, pretty much. Results might vary, though.\"\n\n\"Well, I'm looking forward to doing some research.\" She frowned. \"I'm not sleepy yet. Got something for me to read? Say! Your book or whatever it is. Can I read that?\"\n\nAsch got up and pressed a few keys on his laptop and handed it to her, giving her a reflective look. \"You're at the beginning; just scroll down. I'll be interested to hear what you have to say.\"\n\nHe climbed into bed feeling that typical male grogginess-after-sex, and stretched out next to her. She propped herself up on some pillows so she could read. Asch hugged her leg and she reflexively let her legs fall open, so he rested his hand on her treasure and started to doze.\n\nOctavia began to read. About three or four pages in, \"Hey!\" she cried, \"this is us! So I'm Octavia, eh? Don't you like my real name?\"\n\n\"I wanted to protect the guilty,\" Asch mumbled without opening his eyes. \"Most of the names are changed. Your real name is wonderful. Thought Octavia'd be fun.\"\n\n\"Actually I like it. Go back to sleep.\" After a while, she exclaimed, \"How'd you know so much about, um, Fred and Anita?\"\n\n\"Made it up.\"\n\n\"Well, it sounds pretty real!\"\n\n\"Mm hm.\"\n\nShe continued reading, chuckling occasionally, expressing occasional surprise. Eventually she finished and set the laptop on the floor. Snuggling down next to him, she murmured, \"I'm eager to find out what happens in book two.\" \n\nAsch said \"Mmm\" between snores.\n\n*****\n\nThat's it, folks! Sorry I misnamed the story \"First Day...\" I originally intended to have only the first chapter, but the characters wanted me to tell more of their adventures. There might eventually be a book 2, containing scuba, a sailboat, and a brewery. I might also tell a couple side stories. After all, Rick and Karen are a couple, not to mention John and Lydia, Marian and Clay, Brian and Carol, Oliver and Sarah, and what about those three kids at the bike store? On the other hand, maybe you're tired of a goody-goody like Asch and I should quit while I'm ahead."
    ],
    "authorname": "Ennis Piceo",
    "tags": [
        "multiple orgasms",
        "flirting",
        "moving in",
        "stuffing",
        "sleep",
        "necking in public"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/first-day-in-the-caribbean-day-16"
}