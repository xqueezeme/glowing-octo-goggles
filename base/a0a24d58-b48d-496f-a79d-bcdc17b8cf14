{
    "title": "Philanthropy Pt. 02",
    "pages": [
        "Philanthropy Part Two\n\nThis is the continuing story of Peter Chase, self-made billionaire, and a selfish prick most of the time. He's used to getting anything he wants in life until he encounters something much more sinister and is swept into danger and intrigue. This style of writing and topic is new to me. I've also never written a protagonist who lacks empathy and compassion. I'm already starting to make him more likeable... dammit! I hope you enjoy.\n\nYou'll need to read Part One: The Carvers, first. Go on. I'll wait.\n\nConstructive comments always appreciated. \n\nPart Two: Building the Case \n\nI parked in a handicap spot and exited my Hyundai Elantra. Two chirps later, I pocketed my keys and walked up to the condo entrance. Inside, I buzzed condo 1213 and an elderly female voice I recognised as that of Alice Cartwell spoke loudly out of the speaker in the entrance.\n\n\"Yes?\"\n\n\"Hi, Alice Cartwell? This is Peter Chase. We spoke on the phone?\"\n\n\"Ah, yes. The poor man who was beat up in the park. I wasn't expecting you this soon.\"\n\n\"Yes, well. I had some free time, and I was in the neighbourhood.\"\n\n\"In the neighbourhood? Young man, I live outside the city.\"\n\nI grinned. \"True. Okay, I lied. I couldn't wait to speak to you. Is now a good time?\"\n\nShe didn't release the intercom button, and I heard her exasperated sigh. \"May as well. Come on up. Condo 1213...\"\n\nIn a moment, the door buzzed angrily, and I pulled it open and walked toward the elevators. I looked around the condo entrance and saw the terrible state of maintenance. It looked run down like a cheap public housing complex. Garbage was piled up in a corner and the one waste basket was overflowing with fast food wrappers and what looked like Diaper Genie bags. The entrance stunk to high heaven, and I found myself holding my breath as I pressed the up button.\n\nThis place was a shithole, and it stunned me. The condo building had been one of the best in the city some years back. This was before the Carvers had lived here. When my former lawyer Amber had told me the Carvers had sued the shit out of this place, I could see they had salted the earth, too. I was angry seeing the disrepair. This was an area outside the city that boasted the highest realty costs in the city and surrounding area. From outside, the building had looked spectacular\u2014not as nice as mine, but pretty close. Inside, it was... I shuddered.\n\nThe elevator dinged, and the doors pulled open, making a dry rasping sound. I was standing right at the door split and surprised a young man holding a small furry animal that looked similar to a dog, but I had never seen one so small or so shaky before. The dog suddenly was snarling and yapping and struggling to get free of the man's arms, and I resisted the urge to grab it and throw it across the entranceway.\n\nI grimaced and stepped back to give the man and the small angry thing room to get past me. The dude didn't seem to care his little shit was an annoyance and sauntered past me toward the front doors to the condo.\n\nI stepped inside the elevator car and immediately spied the small pile of dogshit in the corner soaking in what looked like dog piss.\n\n\"Hey!\" I shouted at the back of the departing man. The elevator doors started to slide shut. \"Did your fucking rat shit and piss in here?\"\n\nI caught the smirk on the guy's face as he looked back at me and then the doors closed.\n\n\"What a fucking asshole...\" I grumbled and pressed floor twelve.\n\nI held my nose and felt the elevator shudder and struggle to rise. In moments, the elevator sped up, and I watched the floor count rise. The car slowed and stopped at twelve with a loud ding and the doors opened. I stepped out and was once again hit with the smell of decay. White kitchen garbage bags were piled up next to the waste shoot leaking fluids into the carpet.\n\n\"Jesus Fucking Christ,\" I muttered and saw the sign indicating condo 1213 was to my left. I quickly turned left and strode down the corridor. I tested the air, and the smell got less abrasive, and at the end of the corridor I spotted door 1213. I gave it a quick knock and heard a muffled voice inside.\n\nI waited and heard someone on the other side of the door struggling with the security chain. I heard a rasp, a soft click, and then the door opened to reveal an elderly grey-haired lady, hunched over with some sort of back problem. She had to strain to look up at me and adjusted her shawl.\n\nShe sized me up quickly and then stood back and beckoned for me to enter. \"Well, don't just stand there, get in here before the stink follows you...\"\n\nI smiled at her and moved past her and turned to watch her close her door. She twisted the deadlock and then reached up with a trembling hand to put the security chain back on. I suppose I could have helped her, but it didn't seem prudent. I could hear her breathing with effort, but she finally slid the chain on and then shuffled to turn around. She started when she found me still standing there.\n\n\"Jesus!\" she squawked. \"What are you doing standing there? Get inside. Take your shoes off. Hang your jacket in the closet.\"\n\nWith surprising speed, she moved past me and disappeared around the corner.\n\n\"I suppose you want coffee?\"\n\nI shucked my loafers and started to remove my black Crombie overcoat. I opened the closet and noted it only contained two jackets for women. A summer one and a poor winter one. I hung up the jacket, closed the closet door, and adjusted my sweater before retracing the steps Alice had taken.\n\nAs soon as I turned the corner, I could see her condo. It was decorated exactly like you would expect an elderly lady to decorate her living space. Doilies were everywhere. The couch had an Afghan blanket thrown over it. Flowerpots and plants covered every place you looked. A small flat-screen TV was mounted over the gas fireplace. I noticed the fireplace wasn't on and even with my sweater on I felt the chill in the air.\n\nI sniffed the air but couldn't smell any cat shit, but I knew they had to be here somewhere. This was a cat paradise. I hated fucking cats. I looked for signs of cats but found nothing.\n\nThe condo layout was not too bad. I looked around quickly and could see the severe state of disrepair. The walls needed repainting and the hardware floors looked abused. The windows barely let any light in from outside. I had a flash of memory of my parents' place shortly before they passed away. They couldn't keep up with the cleaning of their place with their age. Poor eyesight led to other issues like hygiene. Alice was living in squalor.\n\n\"Um, nice place you have here?\" I said a bit loudly, sure she was probably deaf, too.\n\n\"You don't have to yell!\" she yelled back, and I followed her voice into the kitchen.\n\nShe was adding boiling water from a kettle to two mugs. I spied the instant coffee container and repressed another shudder.\n\nShe looked up at me as I enter and put the kettle down. \"Cream? Sugar?\"\n\n\"Yes, please.\"\n\nShe pointed at the fridge. \"In there.\"\n\nI opened the fridge and was shocked to see it barely had anything in it. Half a loaf of bread, an old jar of yellowed mayonnaise, a small tub of margarine, some other condiment bottles and a jar of pickles. There was a milk container with a bag of milk and a small container of cream. I picked up the cream and casually looked at the best before date. Now, best before dates don't mean bad after, but when I saw the date had expired a month ago, I took the container of cream and held it up.\n\n\"Your garbage?\"\n\nShe frowned at me and pointed at the cupboard below the sink.\n\nI opened the cupboard, spotted the garbage, and tossed the cream in.\n\n\"What did you do that for?\" she raged and moved toward the garbage.\n\nI closed the door and blocked her. \"It went bad a month ago, Alice.\"\n\nShe looked confused but stopped and looked up at me. \"A month ago?\"\n\n\"Yeah. Just sugar will be fine.\"\n\nShe looked like she wanted to argue, but then I saw her face fall and she turned back to the mugs. With a shaking hand, she opened a sugar jar and spooned sugar into her cup. She looked at me and I held up two fingers, then changed my mind and held up one. She nodded and spooned in a small amount of sugar.\n\nI looked around her kitchen and identified all her kitchen stuff was from that large box store chain. She bought cheap. She had no money. That was clear.\n\nI bit my tongue when my first instinct was to say something snarky. I needed information from this lonely old woman, so I smiled at her when she handed me a lukewarm cup of instant coffee. I took a sip and hid the grimace.\n\nShe was watching me like a hawk, and so I smiled brighter.\n\nShe snorted and shook her head. \"You aren't fooling me, buster...\" was all she said and left the kitchen.\n\nMy smile turned real, and I followed her.\n\nShe was sitting down in the living room on the couch with the Afghan rug. I selected the armchair and settled down on the edge of the seat and placed my coffee on the table.\n\nShe was watching me the whole time, and I felt self-conscious.\n\n\"So, you're friends with Amber?\"\n\nI nodded. \"Yes. We're good friends.\" I lifted my coffee cup and took a small sip.\n\n\"Have you ever fucked her?\"\n\nI almost spewed my coffee and stared at her in shock.\n\nShe laughed out loud. A genuine belly laugh. I stared at her as she laughed and watched as she wiped her eyes dry. \"Oh dear, that was priceless. Amber was right. She said that would shock you.\"\n\nI tried to process that and failed.\n\n\"She told me all about you, Peter Chase. No secrets here,\" and she laughed again.\n\n\"You have me at a disadvantage...\"\n\n\"That I surely do. Feels good for a woman my age.\"\n\nI looked around the condo. \"So where are your fucking cats? There has to be at least three of them around here somewhere...\"\n\nShe froze and stared at me with her mouth open and then threw her head back and really laughed.\n\nShe laughed for far too long and my joke started to feel stale to me. Finally, she stopped and pulled a Kleenex out of her shirt sleeve at the wrist and dabbed at her eyes before tucking it away again.\n\n\"That, Mr Peter Chase, was funny. Cats. I suppose you're not wrong to suspect cats, but between me and you I hate the damn things.\"\n\nFor a moment, I felt a kindred spirit. Then she spoke again.\n\n\"So, you want to talk about the Carvers. That about right?\"\n\n\"Yeah.\"\n\n\"Well, I can't.\"\n\nI blinked at her.\n\n\"Blink those pretty blues at me all you want. I signed an NDA. Tighter than my asshole, that thing.\"\n\nI absorbed her words again and waited. This was not looking promising.\n\nShe looked around her condo for a moment. I realised then with her back and neck she couldn't look up properly. I glanced at the TV and then spied the remote sitting on the mantle over the fireplace. It was covered in dust.\n\nShe muttered something under her breath. \"I suppose my condo looks like a mess...\"\n\nI opened my mouth to say something, but she kept talking.\n\n\"Like the entrance to this place. A true shit pit. The whole building is like that. Condo fees keep going up and nothing gets done. The residents of the building have nothing, you see. It wasn't always like this. I bought this place shortly after my husband died. The big C. It was bad. But he took care of me and left me solid financially. I used to have a girl who cleaned this place for me. Cooked my meals. It was lovely. We all knew each other in the building and threw parties in the common rooms down on the first floor. I rubbed elbows with some prominent people in this city. It was a wonderful time. Then the Carvers moved in.\"\n\nShe stopped there and sipped her coffee in silence. I waited for her to say more, but she sat in stoic silence.\n\nI cleared my throat. \"And?\"\n\nShe looked sharply at me.\n\n\"And, what?\"\n\nI stared at her. \"Is there nothing else to say?\"\n\n\"NDA. Can't.\"\n\n\"So, the Carvers moved in. When did the condo building start to run down?\"\n\nShe looked thoughtful for a moment. \"I guess you could say it was soon after they vacated the building. The condo owner was suddenly out of money. So were most of the residents. Did you see the news about it?\"\n\nI nodded. I had read all there was to read about it. I even reached out to the newspaper reporter who had covered the story. She lived in another city now and had hung up on me as soon as I mentioned the Carvers. \"Yeah, I did. I even tried to contact the reporter.\"\n\nAlice flinched for a moment. \"Katherine Crosby. She was kind. Shame what happened to her.\"\n\n\"What happened to her?\"\n\n\"Car accident. T-boned by a guy running a red-light that was an old red light.\"\n\n\"Old red light?\"\n\n\"Yeah. Old as in no way they didn't see it was red.\"\n\n\"Is she okay?\"\n\nAlice shook her head. \"Paralysed from the waste down. Two young kids to raise by herself.\"\n\nI waited, but Alice said nothing else. \"Who hit her?\"\n\n\"Hit and run. Well, the guy who hit her ran, leaving his car buried into the driver's door. Never found him. Car was stolen. No one to sue. She's penniless and writing for anyone who'll hire her.\"\n\nI absorbed that for a moment, my mind grinding the data. \"The Carvers...\"\n\nAlice said nothing.\n\nA small light turned on in my head. \"Was anyone else in the building hurt?\"\n\nAlice smiled at me for the first time. \"Amber said you were smart. You might want to look into that. By my count, at least six families were hurt or killed outright over the period of two months.\"\n\nI gawked at her. \"Did you say killed?\"\n\n\"Accidents. All of them. Investigated by the police and all deemed accidents. Like how your car suddenly has no brake fluid kind of accident.\" She glanced at me. \"Please tell me the Carvers have no idea you are here?\"\n\nI was deep in thought and then heard her last question. I looked up to see the genuine fear there. I shook my head. \"No. Rest assured, they have no idea.\"\n\nAlice seemed to relax. \"You must NEVER, and I mean NEVER, tell them you spoke to me.\"\n\nI nodded and then promised her out loud. \"You're struggling here, aren't you?\"\n\nShe looked away and didn't answer me.\n\n\"I'm sorry you had to go through that. Why don't you move? Find a better place? Less expensive?\"\n\nShe laughed again, but I heard a note of despair in it. \"Do you know who now owns this building?\"\n\nAnother light turned on. \"The Carvers,\" I said, and she nodded. \"You're locked in here with the NDA, aren't you?\"\n\nShe nodded. \"Like a vice grip. There are words people don't say anymore. Old words that people may know the meaning of, but never see anymore. Certainly not in Canada or down south. Look up the word indentured.\"\n\n\"You're kidding me? Indentured? That's not possible! That's illegal!\"\n\nShe chuckled in a mournful way, and it sent chills down my spine. \"You might think so. There are many ways to be indentured to someone. Ask Amber, she knows what's going on. I hear she's gunning for the Crown Attorney job. Is that true?\"\n\n\"Yes, she's leaving her firm and accepting a position with the city.\"\n\n\"Tell her to watch herself. Hire a bodyguard. Watch her back. If you're somehow involved with the Carvers, I would suggest the same. You know they were the ones behind your attack in the park, aren't you?\"\n\n\"Yes, I am. One of my assailants said as much before I blacked out.\"\n\n\"Watch your back, but by the look of you, you know how to take care of yourself. My husband worked out and took all sorts of martial arts. You have the same look. Amber must love being with you.\" She looked away. \"I miss my John.\"\n\n\"John was your husband?\"\n\n\"Yes, the love of my life.\"\n\nI had no concept of love but understood the sentiment. Alice was looking at me now and saw my calm look back at her.\n\n\"Ah, I know that look,\" she said.\n\n\"What look?\"\n\n\"The look of a player. Are you a player, Peter?\"\n\nI knew what she meant but never considered myself one. I shook my head.\n\nShe snorted. \"You're a fucking liar.\"\n\nI had nothing to say to that and wasn't remotely offended.\n\nShe sighed deeply and rose, and I sensed our time was up.\n\nShe walked me to the door and watched me pull on my overcoat and slip my feet into my loafers.\n\n\"You're going after them, aren't you?\" she said as she opened the door.\n\n\"Yes, I fucking am.\"\n\nI moved toward the door when she held up a hand to stop me. \"Do you know what LockSur is?\"\n\nThis startled me. LockSur was a relatively new Internet start-up that provided secure end-to-end encrypted file transfer. What startled me was this elderly woman knew what LockSur was. \"Ah, yeah, I do, but to be honest, I'm surprised you do.\"\n\nShe chuckled. \"Peter Chase, you underestimate people. You underestimate the Carvers and they will have you for lunch and put you in the ground.\" She looked down at my expensive overcoat and shoes. \"Money will not buy you safety.\"\n\n\"Fair warning. What about LockSur?\"\n\n\"Give me an email address. One no one knows about. One that can't be traced to you. Do you have one?\"\n\nI nodded and gave her one.\n\nShe nodded and gestured toward the door opening, and I walked out.\n\n\"Thank you, Alice.\"\n\n\"Thank me by doing something about them.\" She shut the door behind me.\n\n* * *\n\nLater that night my phone dinged, and I opened my phone and saw I had a single notification from LockSur. I opened the application and saw Alice had sent me two files. I opened the first one and saw a spreadsheet filled with names and comments. It was a list of all the condo residents from Alice's condo. It also identified dollar amounts and had hyperlinks to archived newspaper articles.\n\nI looked at the next file and saw it was an MP3 audio file. I opened it and put my phone on speaker. It started with a lot of scraping noises, and then the audio went dead quiet. I looked at the phone and saw the MP3 was still playing, and so I waited. After about ten seconds, I looked down and saw the recording was over six hours long. I fast forwarded and heard nothing. I tried again with the same results.\n\nFrustrated, I went to my iMac and opened the same app and downloaded the audio file and the spreadsheet. I opened my audio editing software, converted the MP3 file over, and opened it. Once I could see the spikes in the recording, I moved to them and pressed play.\n\nThe first voice I heard was Brad Carver mid-sentence.\n\n\"... it's all good. We'll own the building in no time.\" He paused for a moment. \"Uh-huh, that's right...\" He paused again, and I realised he must be speaking on a phone to someone.\n\n\"Who's that on the phone, hon?\" said the unmistakeable voice of Karen Carver.\n\n\"It's Ron, hold on hon.\"\n\n\"Yeah, Ron. It's Karen... calm down... do you think I'm stupid? It's just her and me in our condo... Ron, don't ever take that fucking tone with me! I'll fucking dump your sorry ass in the river, you know I will... That's better. Some fucking respect! You hear?\"\n\nKaren spoke again. \"Ask him if he took care of the Browns...\"\n\n\"Did you hear her? Did you? How? Actually, never mind how. They're dealt with? Good. Hurt or... Dead? Wow. Okay. All of them? Kids too? Good job. Who's next? The Dixons. Good. They're fucking lawyer is a right fucking pain in the ass. Sooner the better... what's that? Dead, of course! Jesus fuck, are you stupid? Get it done fast. Has to be an accident, I don't want this coming back to me. Get it done... bye.\"\n\nThe recorded went quiet then Karen spoke really loudly, and I scrambled to turn my speakers down.\n\n\"So, all good? Nothing to worry about?\" she said, and I realised she had to be next to whatever recorded this conversation.\n\n\"Yeah, Karen. All good. Ron is on it. Half gone already. We're already getting people to close out our suits with generous amounts. We'll own the fucking building in no time. We'll put it under Slice Realty this time.\"\n\n\"The Cayman one?\"\n\n\"Yeah.\"\n\nI could hear hands rubbing together. \"Perfect. We'll be out of here in a year, tops,\" laughed Karen, and her voice was truly starting to grate against my nerves.",
        "\"Good, I want to be back in the city. This country living is for the birds,\" replied Brad.\n\n\"I want Dana in the city,\" her voice got louder, and I heard a rasping sound. \"Look at this? The air vent screw is loose! This cheap fucking condo! I swear we should burn it to the ground once we own it.\"\n\nI heard more rasping sounds and Brad spoke louder than before. \"I'll get the maintenance guy back up here again. He was just here fixing this. What an asshole...\"\n\nThey walked away by the sounds of it, speaking quietly about boring details of their day. I went to the next spike in the audio recording and listened to breakfast being eaten and conversations about nothing. I heard Dana at one point and heard the spoiled teenage she must have been back a couple of years ago. I listened to them getting dressed for the outside and a door closing somewhere. The audio went quiet.\n\nI found the next audio spike near the end and went to it. I heard a door open and close. It went quiet and suddenly I could hear breathing up close. An electric whirring sound was heard, and I believed I was listening to an electronic screwdriver. I heard a metallic twang and suddenly a rough male voice spoke with a Jamaican accent.\n\n\"The date is March twenty-third two thousand and two. Time seven-twenty-one.\"\n\nThere was a scratching sound, and suddenly the recording ended.\n\nI sat back in my chair and stared at the screen for a long time.\n\nAfter a time, I opened the spreadsheet and went through the names. I spotted the name I was looking for: Delroy Bailey. That sounded Jamaican to me. The spreadsheet identified him as the condo maintenance man. He was killed by accidental electrocution while working in a resident's bathroom on March twenty-ninth, two thousand and two. I clicked the hyperlink to the archived newspaper site and quickly read the article on his death. He somehow electrocuted himself while working on the GFCI-protected plug in the bathroom while standing in one inch of free water on the bathroom floor. The death was reported as suspicious, but then deemed an accident by the police after a thorough investigation.\n\n\"That's impossible...\" I muttered.\n\n* * *\n\nI answered my phone on the fifth ring, glad to have gotten to it in time, but annoyed that it had woken me. I had spent the evening and the better part of the morning going through all the names in the spreadsheet. It was pretty damning when seen all together. There had been a systemic series of accidents to residents within the condo. All the dead residents had been counter-suing the Carvers. Those who had merely been hurt had been outspoken in the media about what was happening in the building.\n\nIt was something out of a cheap crime detective novel, but all the facts were there. I recognised that there was no way the police would not have seen the pattern and realised the police were most likely involved in the shady dealings.\n\nI had gone to bed a little drunk from too much scotch, and worries began to swirl around me like moths around a streetlight. I felt a dark chasm forming and needed to think clearer and so I had flopped, fully clothed, on my bed. My phone woke me and found my head splitting.\n\n\"What?\" I yelled into the phone and groaned when my head throbbed.\n\n\"Peter? Don't yell at me, you ass!\"\n\nThe voice took a moment to register. \"Amber? That you?\"\n\n\"Yes, who else would it be? Don't answer that. I don't want to know. Are you alone?\"\n\n\"Yes.\"\n\n\"I heard something outside the courthouse yesterday you need to know.\"\n\n\"What's that?\"\n\n\"The Carvers have set their sights on you. That mean anything to you?\"\n\nAlarm bells rang, and I sat up in bed and rubbed my head. \"Yeah, unfortunately it does.\"\n\n\"Should I be worried?\"\n\n\"Yes. No. Um, probably? I dunno. I'm only just seeing the depth this goes. I think I need a good lawyer. Like now.\"\n\n\"Huh. Well, it can't be me now. I accepted the Crown Attorney position. I started yesterday.\"\n\n\"What? Really? Fuck. I really need you on this!\"\n\n\"Yeah, so thanks! I appreciate the congratulations, Peter! It means a lot coming from you!\"\n\nI groaned. \"Fuck. Sorry, Amber. I'm not at my best right now. Seriously, I need a great fucking lawyer.\"\n\nThe line went quiet. \"Are you okay?\"\n\n\"No. This is fucking huge.\"\n\n\"Really? Jesus, why'd you have to bring that fucking family into your building, Peter! Fuck fuck fuckity fuck. Let me think.\"\n\nI waited and heard the sound of high heels hitting marble and pictured Amber pacing the hallway in the courthouse.\n\n\"Okay. I have someone in mind. Forget the others I spoke to you about like what, weeks ago? I think I know who to refer you to. Do you trust me?\"\n\n\"Yeah, why? What's trust got to do with it?\"\n\n\"Trust me. Meet with her. Talk with her. Give her a chance. She's good. Really fucking good and not many people know that yet.\"\n\nI sighed. \"Okay, send her over. What's her name?\"\n\n\"Imani Jones.\"\n\n\"Imani? Jones?\"\n\n\"Yes. British. Immigrated with her brother about ten years ago. She's my age, I think. You'll like her. Probably a lot.\"\n\n\"Does she like to fuck?\"\n\nI heard Amber snort hard with laughter on the other side of the line. \"Jesus, Peter. Yeah. She does. Why is that important? Actually, again, don't ever answer questions like that from me. Listen, I have to run. Thanks so much for the wedding gift by the way. My partner loves it and so do I. And thanks for not coming. That would have been truly awkward. Anyway, this lawyer? She'll be in touch soon. Hey, fair warning she know ALL about you...\" and the line went dead but not before I heard her laugh.\n\nI flopped back down on the bed and closed my eyes.\n\nI woke what felt like two seconds later with my phone vibrating on my chest. I fumbled in the dark and realised it must now be night-time and swiped the phone to answer it.\n\n\"About fucking time!\" complained a very British and female accent in my ear. \"Jesus, I'm standing in your fucking lobby looking and feeling like a fucking hooker. I'm getting all sorts of stares! Now let me the fuck in!\"\n\nI grinned and realised my head felt much better. I needed water though, and my mouth felt like it was full of sand.\n\n\"Are you?\" I asked.\n\n\"Am I what?\"\n\n\"A prostitute? What are your rates? What's on your menu?\"\n\n\"On my? On my menu!! I'll fucking show you my menu with my fucking boot right up your fucking arse! Jesus. You know what? Fuck this! Amber said to be patient with you and that you were a complete arse, but seriously? Fuck this!\"\n\nI knew I had pushed my limit. \"Relax! Is this Imani?\"\n\n\"Who the fuck else would it be?\"\n\n\"Well, I dunno? You never said. I could be letting in some freak.\"\n\n\"Freak? You have no idea. Now let me in or I walk right now.\"\n\nI chuckled and pressed the button on the app and heard the door buzz. \"Come on in. Top floor end of the hall.\"\n\nI heard the door being yanked open, and the line went dead.\n\nI struggled out of bed, ran a toothbrush over my teeth and splashed cold water on my face. I dried off and just as I entered my living room; I heard a knock on my door. I walked over and flung it open and stared at the beauty in front of me.\n\nImani was tall. Taller than me by about three inches. The next thing I noticed was her race. She was most definitely of African ancestry with rich dark brown skin, and with long, dark and thick brown hair, and bright white eyes with two gorgeous brown centres. She was wearing some kind of leopard print ensemble and I couldn't fail to notice her rather small breasts, but with prominent erect nipples. Her waist narrowed dramatically and exploded out into rather nice sized hips. Her ass must be gorgeous, I thought.\n\nShe looked under-nourished yet fit, and her dark red lipstick shone in the lights from the hallway and looked so ripe and succulent. I may have licked my lips. I couldn't help myself and I truly gave her solid once over, my eyes taking in her beauty.\n\nShe was glaring at me and watching me soak her in.\n\n\"When you're done fucking me with your eyes, you might want to let me in,\" she said coldly.\n\n\"You haven't told me your rates yet.\"\n\nHer eyes widened and then narrowed. \"Full penetration strap-on is $500. I'll fuck your arse with it like a pro. You'll feel the tip in the back of your throat, I go so deep. Next, for an additional $100 I'll zap-strap your testicles together and stick the tip of my high heels into your urethra and fuck it. For an extra $50 I will use lube to make it easier. For a mere $25 I'll shit in your mouth, but right now I might do that for free.\"\n\n\"I don't think I have the $50 for the lube.\"\n\n\"Then you better shit yourself because I'm coming in dry.\"\n\nI stared at her in awe. Her thick British accent made everything sound so much better. \"You're fucking awesome.\"\n\n\"I know.\"\n\nI stared at her for another moment and then stepped aside and gestured with my arm to enter my condo. She stepped elegantly through the door and placed her clutch on my side table by the door.\n\n\"Where is your strap-on kept?\" I asked. \"Surely not in that small clutch?\"\n\nShe looked sideways and me and then ran a nail along my jawline. \"Wouldn't you like to know?\"\n\n\"Actually, I would,\" I replied and grinned at her.\n\nShe surprised me by grabbing my testicles and holding on tight. I froze.\n\n\"Amber warned me about you. Told me what a smart arse you were. What a cheeky fellow you are and how you treat women. I've had men like you tied up and ball gaged and begging for mercy.\"\n\nI couldn't help myself. \"Is that extra, too?\"\n\nShe stared at me for a long moment and then let go of my testicles and sauntered into my condo. \"Wine. Red. Now,\" she ordered.\n\nI ignored her and walked past her into my kitchen and opened the fridge and started rummaging through the contents. I knew exactly what I had, but I wasn't certain what I felt like making.\n\n\"Are you hungry?\" I asked.\n\n\"Maybe.\"\n\n\"That's not an answer. Either you are or you are not. I'm not making you anything if you just move it around and stare at it. By the looks of you, you need to eat.\" I stood up and turned around, and Imani was standing right in my personal space. \"You are standing right in my personal space. So either kiss me, fuck me, or fuck off.\"\n\nShe glared at me for a long moment and then smiled brightly, dazzling me with her perfect white teeth. \"Fucking off...\" she replied and sauntered away. I watched her roam my condo, looking at everything. I was glad to see she didn't touch anything. She paused by my relic PET Commodore computer, and it was the only time she looked back at me.\n\n\"So? What's the answer? Food or no food?\"\n\n\"Food. You pulled me away from a special function this evening. Food hadn't been served yet.\"\n\n\"Anything you can't eat?\"\n\n\"No. Where's the wine?\"\n\nI pointed at the wine cooler and waited until she looked back at me and saw where I was pointing.\n\nShe strolled over and I resumed pulling items from the fridge and placing them on the counter. I soon heard the distinctive pop of a cork being pulled from a bottle and looked over to see she had selected one of my more expensive wines. A rare bottle from the Kanonkop Black Label with their pinotage grape. I groaned inwardly. I resumed my fridge search and heard a clink and glug from the bottle and glanced over to see she had emptied half the bottle into a large wine glass. She sipped it and I waited for a reaction. She took a larger swallow and kept walking, swinging the bottle in her free hand.\n\nFucking hell, I thought. That was like a $50 chug of wine she just took.\n\nI ignored her as best as I could and prepared a quick meal, only stopping once when she bent over the coffee table to grab my remote. Her ass was amazing, and I suddenly imagined myself driving into her from behind. She studied the remote and then hit a button, and classical jazz and blues music softly filled the air.\n\n\"Is this going to be long?\" she quipped from the living room and I saw she had sat down on my couch. She had her long legs crossed and was bouncing the upper leg up and down. \"I left my date tied up and gagged on my bed.\"\n\nI blinked at that and then assumed she was joking. I started on the steak and soon a delicious smell filled the condo. I spooned butter over the steak and then checked the risotto. Soon I dished out two plates, placing two small, rare steaks on top of a small dish of mushroom risotto.\n\n\"Supper is ready. Come get.\"\n\nShe stayed on the couch. \"How do you know how I like my steak?\"\n\n\"A bitch like you? Definitely rare. Look, you can come over and cut it up and pretend its me.\"\n\nI saw the smile touch the corners of her lips and watched her suppress it and then rise gracefully. She carried her wineglass and the bottle and placed them on the kitchen island where she could see I normally ate. She settled on a stool and I placed a plate in front of her and some utensils.\n\nShe inhaled the aroma and smiled. \"Amber said you were an amazing cook.\"\n\n\"Chef.\"\n\n\"Pardon?\"\n\n\"I'm not a cook, I'm a chef.\" I turned and got a wineglass and reached for the bottle. She snatched it away.\n\n\"That's mine. Get your own.\"\n\nI looked long and hard at her. I think I figured her out then. Without a word, I marched around the island and saw her eyes widen a little. She placed her wineglass down and turned in her seat to face me. In less than a moment I had her over my knee on the same seat and I started to smack her ass cheeks.\n\nShe squealed and then cursed me. I held both her hands behind her back and away from her gorgeous ass and smacked first one cheek and then the other. She struggled but couldn't compete with me. She cursed me louder and so I smacked her harder. I was careful to move where my hand struck, but soon; I had covered both cheeks. On the next spank, I left my hand there and gently rubbed her flesh. She had stopped crying and screaming, and I heard the first moan and smiled to myself. I smacked her other cheek and then gently rubbed again.\n\nI hesitated and then did what I felt was right. I ran my hand up the inside of her thigh and felt her go rigid under me. I kept my fingertips light on her flesh and started to feel the moist heat from between her legs as I got closer. I felt her shiver and emboldened and went higher and gently brushed her lower lips. At once I was impressed with her pussy. She was clean shaven, and her outer lips were fully closed hiding all the juicy bits inside. I slipped a finger between those lips and felt the flood of her wetness. She was immensely turned on.\n\nI slipped my hand free and quickly lifted her and placed her on her feet. She staggered a moment and held onto the back of the chair. I grabbed the wine bottle and return to my original place and filled my wine glass. She had her head lowered a bit and was still holding onto the chair. I could see her chest rise and fall. I grinned to myself and took my first sip.\n\n\"Wow! That is an amazing wine!\" I sat down and picked up my knife and fork. I cut into my steak and watched the red pour free and spill over the risotto. \"Sit and eat before it gets too cold.\"\n\nShe turned to look at me, and I swear she almost growled at me.\n\n\"Sit. Now!\" I barked and pointed at the seat with my bloody knife.\n\nIn moments, she was sitting and looking at me in surprise.\n\n\"Relax. Eat, drink, enjoy. We'll talk later.\"\n\nShe nodded and picked up her knife and fork. She cut into the steak and placed a piece in her mouth and chewed. I watched in delight as expressions flashed across her features. \"Oh, my god!\" she said. \"That's fucking brilliant!\"\n\n\"Thank you. Enjoy.\"\n\nWe finished our meal in silence and the bottle was gone far too soon. It was a special bottle and likely the last in the world. The South African winery made lots of that particular pinotage, but that bottle was one from a very special cask. I had been saving it for something but didn't know what. Perhaps this, I mused.\n\nI knew what Imani was. I had encountered many like her in the past. They all try to be the Dom but so many fail. I preferred being a Dom but sometimes played the Sub when the mood struck me. I had a feeling about Imani though. A large part of me was sure she truly was a Dom. She had never been broken before and I lucked out that spanking was the secret key to unlocking that part of her.\n\nWe both leaned back and watched each other.\n\n\"No one has ever done that to me,\" she stated.\n\n\"Always a first,\" I replied.\n\nShe grew quiet. \"It surprised me. At first, I was so angry and then, suddenly, I wasn't. It's strange.\"\n\n\"Why?\"\n\n\"This is how I explain to my subs what they will experience. A first for me. I'm not sure I liked it fully.\"\n\nI shrugged. \"Time will tell. I've played both roles.\"\n\n\"So a switch? Really?\"\n\n\"No, not really. I've played the sub but never enjoyed it.\"\n\n\"Perhaps you just needed the right person to come along.\"\n\nI was about to argue, but then conceded her point. She might be right.\n\n\"Brass tacks,\" she said. \"Now that this fabulous meal is done and dusted, time we spoke shop. I understand you have a problem with your neighbours. First question, have you checked your condo for bugs and wires?\"\n\nI blinked at her. \"What?\"\n\nShe chuffed. \"Great. Here we go. Okay, listen. Amber told me everything I need to know. I understand the situation. You need to bring in someone. An expert in self-defence, martial arts, and finding strange things like bugs and wires. These people are criminals. Deep in the underworld in North America. They are not lightweights. They have the resources and now that I am here that will ratchet up quickly.\"\n\nI watched her. Her whole demeanour had changed in a moment. Now I was looking and talking to someone who seemed to know her shit. She rose from her seat and went to her clutch and returned with a business card, which she handed to me. I glanced at it. It was blank except for a phone number.\n\n\"Call her tonight. Tell her you spoke to me and she is needed. She'll explain everything else.\"\n\nI nodded.\n\n\"Do not leave this apartment under any circumstances. Do not let anyone in unless it is me or the person on the other end of that business card.\"\n\n\"Okay,\" I said.\n\n\"I'm serious. Your life is at stake, do you understand that?\"\n\n\"Yes, I do. More than you know,\" I murmured, thinking back on the list of names Alice had sent me.\n\nShe studied me for a moment and then nodded, satisfied.\n\n\"Okay, pussy or ass, which do you prefer?\"\n\nMy eyes snapped to hers. \"I beg your pardon?\"\n\n\"Do you want to fuck my ass or pussy? Decide.\"\n\nI grinned at her. \"When its time I will be taking both, thank you. Now fuck off.\"\n\nHer eyes went large and then narrowed again. \"Oh, this is going to be fun. So tell me, after you felt my pussy, did you lick your finger afterward?\"\n\n\"Yes. You're delicious.\"\n\nShe turned with a smile, walked away from me. \"So was that meal. I have to release my boy. His legs will be numb by now. Good night. I'll be in touch after my friend speaks to you.\" She grabbed her clutch and left my condo.\n\n\"Fuck, that was fun,\" I said into my empty apartment.\n\nAn hour later I picked up the business card and dialled the number on it. I heard the phone pick up on the other end, but then heard only silence.\n\n\"Hello?\" I asked.\n\nThere was still only silence, and I looked at my phone and saw it was still connected.\n\n\"Um, Imani Jones gave me your card and said to call you.\"\n\n\"Address?\" said a quiet British female accent.\n\nI gave her my address.\n\n\"One hour. Buzz me in.\"\n\n\"Okay, what's your...\" I stopped talking when she hung up. \"Name?\"\n\nExactly one hour later, my condo app buzzed. I opened it and looked at who was there. It was a short person wearing a hoody. Their face was turned away from the camera.\n\n\"Yes?\" I asked into my phone.\n\n\"Imani Jones sent me. Open up.\" Her British accent was strong and thick.\n\nI hesitated. It must have been for a long time because the person in the camera turned their head partially toward the camera, but I still couldn't see who it was.",
        "\"I admire your caution. Admirable. Now let me in.\"\n\nI pushed the button on the app and the door buzzed her in. She quickly moved through and was gone.\n\nShe's fast, I thought.\n\nI waited near the door. In moments there was a slight tap on my door. I looked through the peephole but couldn't see anyone. I waited and heard the tap again.\n\n\"It's me, open the door.\"\n\n\"I can't see you in the peephole.\"\n\n\"That's because I'm not in front of your door, dipshit. Now open up!\"\n\nI did as she instructed and watched amazed as a brown-skinned woman, no taller than five feet, strode past me and deposited a large black duffle bag in my living room. She was fully dressed in black and had a hoody pulled up over her head. The clothes were loose, but I sensed a strength about her. She glanced around.\n\n\"I see cameras. Where is the data stored?\"\n\nI was impressed. The cameras were professionally installed, and I oversaw the installation. \"Local only. Server in a back closet. Tempest caged.\"\n\nIt was then that she looked back at me, and I caught my breath. She didn't just look tough; she was tough. And strangely exotic. She was Indian, with piercing brown eyes looking over a prominent nose. She wore no makeup and honestly; she didn't need it. She lowered her hood, and I could see the corn row style of her dark brown hair.\n\nWithout saying anything else, she unzipped her bag and pulled out a strange electronic device that looked like a walkie-talkie. She switched it on, and it made a strange start-up noise. She pushed a button and watched a display on the face. What she held was a bug sniffer, I was certain of it. She motioned to me and I went to her. She started moving around my apartment and had me follow her. It took a long time, probably close to an hour, but she swept the entire place. She paid particular attention on the balcony and on the wall separating me from the Carvers.\n\nA couple of times she pointed at something specific and looked for my permission before she would extract a small knife and probe at some anomaly on the wall, only to reveal dry wall underneath. Once completed, she declared the condo clear, and we went into the kitchen. She sat where Imani had been and unzipped her hoody. I saw the sidearm in a holster under her left arm right away.\n\n\"Drink?\" I asked, sliding my eyes away from her pistol.\n\nShe nodded and shrugged off the hoody entirely. I could see her better now and judged her age to be close to mine. That wasn't the first thing I noticed, however. It was her build. She was a weightlifter. She was built like a brick shit house and my cock lurched surprisingly in my pants. I never thought I was the type to be attracted to a muscular woman, and she was ripped. Even her neck muscles were huge. She looked like a soccer mom who could not only drive the minivan but lift it up and throw it about fifty yards. She scared me and excited me.\n\n\"Let me guess, beer?\"\n\n\"Ah, sure, but I would prefer a scotch.\"\n\nI smiled at her and fetched my Balvenie. I poured her a stiff one and pushed it to her. She took it with thanks and took a large gulp and swallowed it without a single reaction.\n\n\"Nice shit, but seriously, don't waste the good stuff on me.\"\n\nI nodded. \"Noted. Nice Glock 19. Can I see it?\"\n\nShe looked me over and then extracted it, removed the mag, cleared it, and handed it to me, without the mag.\n\nI took it from her and did a complete detail strip in less than a minute, placing the pieces in front of me. \"Next time ask me if you can bring weapons in my house, okay?\"\n\nShe nodded once. \"Noted.\"\n\nI watched her. She was definitely a no-nonsense kind of person. \"Imani told me I needed you. What for?\"\n\n\"I'm your new bodyguard and specialist, Shanti Patel.\"\n\n\"Specialist?\"\n\n\"Yes, electronics mostly. Explosives, all kinds. Weapons.\"\n\nI could see the sincerity in her face. She wasn't bragging. She was itemizing. \"Anything else?\"\n\nShe scrunched up her nose, and I thought she looked cute when she did it. I smiled as she was just about to open her mouth to speak. \"What's funny?\"\n\n\"I was thinking you looked cute when you scrunched up your nose. Then I thought if I was to say that to you, you would probably beat me to death. Sorry, go on?\"\n\nShe was glaring at me a little, but I managed to look sincere, probably because I was. Except for the beating me up part. \"I was about to say I used to be a mixed martial arts champion and coach.\" I watched as she reassembled her pistol with practised ease.\n\n\"And when did you leave the SAS?\"\n\nShe blinked at me, not pausing what she was doing. \"Never said I was in it.\"\n\n\"Uh-huh. Don't you find the Glock a little light?\"\n\n\"No.\" She set the completed pistol down beside the magazine.\n\n\"What is it you expect to do with me?\"\n\n\"Keep you alive.\"\n\n\"Why do you think I need that?\"\n\n\"I know who you are up against. And there was the park thing.\"\n\nThe park thing. I hadn't realised it was a thing now. \"I see. I was jumped from behind. I was wearing headphones and listening to music. They surprised me.\"\n\nShe nodded like she had heard it all before.\n\n\"Do you know about me?\"\n\nShe nodded. \"I was made aware. A playboy. Fucks everything that moves. Has a shit ton of money and now has stirred up some shit. I'm here to keep you alive until this gets sorted out.\"\n\n\"And what if that takes years?\"\n\nShe nodded. \"You have me for six months. Then I move on. My rule. I'll find a replacement before then.\"\n\n\"Do you think I'm in danger?\"\n\n\"Yes, I do. Very much so.\"\n\nI digested that for a moment. She was certain I was, and that made me think. \"How do I know you're any good?\"\n\nShe just stared at me. \"I am.\"\n\nI looked her up and down. \"Okay, let's go.\"\n\nShe looked curiously at me. \"Go where?\"\n\n\"Just follow me. We need to drive to get there. Take the black bag with you. You might not be coming back.\"\n\nShanti hopped off the seat, holstered her Glock with the mag inserted, grabbed her bag, and followed me to the front door and out to the elevators.\n\nWe descended to the parking garage and found my car.\n\n\"You drive a red Hyundai Elantra?\" she said.\n\n\"Yes. Why? Something wrong with it?\"\n\n\"You are worth billions, and you drive a shit car.\"\n\n\"It's not shit. And why drive an expensive car? I have never needed to impress anyone. Anyway. This isn't standard. Check the glass.\"\n\nShanti looked closely at the windows and whistled. \"That will stop a bullet. Maybe two. Small calibre only, though.\"\n\n\"Yeah. I wanted to keep the weight down. Reinforced body. Roll bar. Intake is as high in the engine space as I could get it. I can submerge to just under the hood. Tires are solid. Solid suspension.\"\n\nShanti was nodding her approval. \"Not bad. Surprising as fuck though. Never seen anything like this.\"\n\n\"Always keep them guessing,\" I joked, and we got in.\n\nI drove to the martial arts club and said nothing else. I noticed Shanti was constantly looking everywhere, and she hid it well. She was observant. I kept glancing at her. I found her increasingly attractive.\n\n\"Can you stop staring at me?\" she muttered.\n\n\"Why?\"\n\n\"I don't like it. I get enough of that.\"\n\n\"I'm sorry. You really are gorgeous. Did you know that?\"\n\nShe looked at me in disbelief and snorted. \"Right.\"\n\n\"I'm serious. I've been semi erect since I met you.\" I caught her stealing a look at my crotch and then her eyes widened when she saw that I did in fact have a mild erection.\n\n\"Jesus,\" she said and looked out her window.\n\nI pulled into my parking space and Shanti looked around and noticed my reserved parking sign. She nodded at me and we went in. Her bag went with her. I opened the door with my key and punched in the security code to shut off the alarm.\n\nShe looked around. \"Um, what are we doing here?\"\n\n\"If you want to be my bodyguard prove to me you can fight.\"\n\nShe laughed out loud at me and slapped her thighs. It was the strongest emotion I had seen from her yet. \"I'm an MMA champion and I was in the SAS for ten years. You will not survive fighting me.\"\n\n\"Did you fight much in the SAS?\"\n\nShe nodded. \"All over the world.\"\n\n\"Much hand-to-hand?\"\n\nShe shook her head. \"Nah, mostly explosives and weapons. Punched a few heads though. Not many.\"\n\n\"Okay. Cool. Let's go.\"\n\n\"Go where?\"\n\n\"Into the ring. It's a boxing ring, not a cage, but it will do.\"\n\nWhen she just stood there, I moved forward and climbed into the ring and stood in one corner. \"Come on. Let's get this over with. I've been hung over all day and I need to get home and jerk off. I'm all pent up with sexual frustration.\"\n\nShe stood there a long moment and then chuckled. She removed her hoody and put her Glock and holster into her bag and climbed into the ring. She stared at me standing still. \"Are you gonna fight in those clothes?\" she asked.\n\nI looked down at my clothes. \"Yeah why, is there something wrong with them?\"\n\n\"You'll ruin them. They aren't designed for fighting.\"\n\nI smiled at her. \"Come on. Fight me. Go.\"\n\nShe shook her head and shook her arms. \"This is nuts.\"\n\n\"You want the job, fight me.\"\n\n\"I don't want to hurt you.\"\n\n\"Pretend I'm the bad guy.\"\n\nShe looked out of the ring like there was somebody standing there to agree with her.\n\n\"Bring it. Pussy.\"\n\nShe laughed. \"Pussy?\"\n\n\"Yeah. I bet your pussy is all dried up and muscly and tough. Like old leather.\"\n\n\"Are you trying to get me angry to fight you?\"\n\n\"Maybe? Is it working?\"\n\n\"No.\"\n\n\"FIGHT ME, YOU FUCKING CUNT!\" I screamed at her, startling her. I could see that got a rise.\n\nShe vibrated a little but still stood there.\n\n\"Fucking women in the SAS. Bullshit. MMA champion? Bullshit!\"\n\nShe growled and took a step toward me.\n\n\"Probably a fucking dyke. Who would fuck that face?\"\n\nShe charged me and really did put something into it. I dodged her and slapped away her attempt to grab me. She turned and tried to grab me again. I evaded her and stepped away from her. She looked confused.\n\n\"Jesus, would you just fight me, you fucking pussy. I'm so totally not impressed by you. Fucking female bodyguard. Never fucking heard of it. Can you imagine Whitney Houston being the bodyguard? That movie would suck!\"\n\nWith a growl, she charged me in earnest. This time she started to show her skills. I blocked her arms and deflected her kick. In moments she was trying in all honesty to connect with me. I blocked and moved and never once struck out at her. She grew angry and frustrated and when I saw her make a mistake, I drove in hard and she found herself looking up at the ceiling on her back.\n\n\"What the fuck?\" she asked.\n\n\"MMA is awesome. Truly. But true fighting isn't MMA. I'm into a little bit of everything. Whatever works to let you win. I've been training in just about every martial art there is and then some. I have a gift for it.\"\n\n\"I was undefeated in MMA. No one ever put me on the mat like that,\" she growled and got up. She looked me over. \"Your clothes aren't damaged.\"\n\n\"Special clothes. They stretch in the right places. Doesn't impede my fighting style. Come at me. Try harder. You're beautiful when you're angry, by the way.\"\n\nShe blinked at that and grew furious and attacked with her full fury. It was impressive. She was very, very good. Easily one of the best fighters I had ever seen.\n\nWhen I was jumped in the park, I wasn't kidding when I said they were lucky they got the drop on me. That's real life. A bullet can take out Bruce Lee at fifty feet and there would be nothing his training could do to stop it. Fights are very, very quick in the real world. One solid hit and you go down. Lights out. There aren't drawn out prolonged fights with fists striking faces and then fighters just shaking it off. You get clocked your brain shuts down. Period.\n\nShanti came at me fully intending to knock me out. There was a blur of motion and I woke up on the mat with her straddling me and grinning down at me. She was flushed and I think excited. My head throbbed painfully on one side. I winced.\n\n\"If it makes you feel better, my hand fucking hurts,\" she said around a wide smile. \"You have a hard head. Your technique is excellent, by the way, but I can teach you more if you like.\"\n\nI used a technique and found myself sitting on top of her. \"You're hired. Congratulations. And before you start doubting yourself, I am being brutally honest when I say you are beautiful. Can I kiss you?\"\n\nSuddenly she looked scared. I leaned down and started to kiss her. It was delightful and her lips were lovely. I opened my eyes and saw the glint there too late.\n\nIn a moment, she had my hands pinned with me once again on my back and was leaning over me panting. I smiled up at her and she growled.\n\n\"Take off your top. I want to see your tits.\"\n\nShe growled louder and then released my hands and in one motion pulled her top off. Her skin was so rich and beautifully brown. She had real tits; about a size B-cup and with zero sag. Like zero. I gazed at them in awe. Her areoles were huge and dark and covered half of her tits. Her nipples were tiny and pinched hard. I drank in the beauty of her shoulders, flat stomach, arms, and chest. Sweat was making her muscles shine and enhanced their glory, and my erection grew hard between us.\n\n\"Jesus, I want to tit fuck those bad boys. Look at them! You are gorgeous, Shanti! Fucking....\"\n\nShe stopped whatever I was about to say when her mouth closed hard on mine. She kissed me like a starving animal. Her tongue drove into my mouth and probed deep. Her teeth grated across mine. I could feel her pressing her groin against my dick. I heard a small whimper escape her. She was so fucking horny she could barely contain herself.\n\nShe broke off the kiss and panted, looking down at me.\n\n\"I take it you like it hard, is that a safe bet?\" I asked.\n\nShe nodded her head at me. I saw the fear behind her eyes. This was a woman who had been hurt far too many times in her life. I felt for her in a way I had never imagined myself feeling for another human being. I think it might have been empathy. She was waiting for me to laugh at her and reject her.\n\n\"Is there a special position for bodyguards when having sex where you can still look around and stuff?\"\n\n\"What?\"\n\n\"A position where I can fuck you hard and you can still, you know, observe things and keep me safe?\"\n\n\"Shut the fuck up!\"\n\nI lifted my head and bit down on her left nipple, hard. I bit as hard as I could without breaking the skin. She didn't even squeak. She just moaned hard and her hips thrust down on me. Her breast was surprisingly soft. I think I was expecting it to be hard like the rest of her.\n\nI had about a moment to worry if maybe I was biting off more than I could chew when she was pulling my clothes off me and no sooner had my cock emerged then she had it in her throat. Her nose bounced up against my stomach and... I orgasmed deep into her throat. It surprised me.\n\nHer eyes went wide and then I felt her throat convulse along my shaft as she drank my cum with a thirst. I grabbed her head and thrust into her mouth with abandon. I wasn't worried about hurting her, but I was a little worried about her hurting me.\n\nI pulled out my cock and wiped it hard across her face and eyelids. I slapped her face with it, and she fucking giggled and chased it with her mouth. That's interesting, I thought. She finally caught it and sank her teeth into it. I screamed and slammed her head. She fell back laughing, and I looked at my cock and could see the indents. Thank God she hadn't broken the skin.\n\n\"You fucking bitch!\" I said and lunged after her.\n\nShe evaded me and started pulling off her pants. I knew her games and enjoyed seeing her muscles exposed. She was a work of art. My cock stayed hard and bobbed along with me.\n\nShe turned at one point and took a serious jab at me. I only just blocked it in time and realised we were still sparring. Naked sparring and she was excited beyond measure. Her pussy leaked and ran down her leg, and I found myself licking my lips.\n\n\"You want my cunny grease?\" she mocked me. \"If you want to taste my candy you have to earn it.\"\n\nDammit, but her British accent was alluring. \"Shanti, I'm going to seriously fuck your ass.\"\n\nShe stumbled, and I saw the lust flash across her face.\n\n\"My ass? You want to fuck my ass? Will you imagine it's some boy? Will you? Do you love cock? Are you a top or bottom?\"\n\nI took a swing at her, but she laughed and ducked under it.\n\n\"Nope. I'm going to imagine its some lightweight British-Indian full-of-shit bitch. I'm going to drive my cock in as deep as I can and fist your fucking cunt while I do it.\"\n\nShe stumbled again and growled at me. \"Beat me fucker and take your reward if you can. If I get that cock in my mouth, I'm going to shear it off, swallow it, and shit it into your mouth.\"\n\nI attacked. I had to have her. She fought valiantly and really put up the effort. She truly tried. But I was horny as fuck and it lifted me to new levels of prowess. I'm lying. She eased up and let me win.\n\nI had her on her stomach on the mat, pressing down on her head with her right cheek pressed painfully to the canvass. I wasn't fooled. She had her gorgeous ass lifted high off the mat with her knees spread. I didn't hesitate. I pressed the head of my cock against her pussy opening and pushed. She was tighter than anyone I had ever fucked. My head popped past her opening and I drove my cock into her pussy until my pubic bone smacked hard against hers and my balls slapped her clit. I could see her eyes were closed and the corner of her mouth was turned up in pleasure. She was soaking wet with lust. I thrust a few times and then withdrew my dripping cock.\n\nI lifted myself off her and looked down at her hairy ass and pussy. I doubt she ever shaved or trimmed herself. It was a fucking jungle down there. But I could see her pink rose bud and her luscious pussy lips gleaming with her juices. The contrast between her dark skin and the pink insides of her pussy was captivating. It looked like a piece of heaven to me and I licked my lips.\n\nI lined my cock head up with her asshole and pushed hard past her sphincter. It stretched around my cock head, fighting me, but I pushed harder and was rewarded with my cock head slipping past and being squeezed hard. She didn't make a sound. I didn't waste time and drove my cock into her ass until I was buried to the hilt in anger and lust. She moaned, and that turned me on. I pulled back and drove in again harder. I looked at her and could see her face was bright red and veins bulged obscenely along her neck muscles. Her smile was still there, and so I leaned over her back and slipped one hand around her bulging neck and pulled back. With my other hand, I pushed down on her upper back to brace myself. She couldn't breathe and couldn't move, and I didn't care. I thrust harder and harder and watched her face go redder. Her eyes opened and bulged; the white sclera shot with red veins.\n\nI wasn't stupid. This is what she had been waiting for her entire life. For someone to take her and possess her fully and completely. I pumped and pumped and finally released her throat.\n\nShe gasped in huge volumes of air and then came harder than she probably ever had in her life. I didn't stop thrusting into her dry ass. I could feel my tender skin around my cock screaming at the abuse, but I didn't stop. This was a woman who had craved this her entire life, and I delivered it.\n\nI leaned down and whispered in her ear. \"You are mine, Shanti. I will always win and will always take you whenever I want and leave you gasping on the ground, spent and full of my cum.\"\n\nShe was still in the throes of her orgasm when I pulled out. Her eyes were rolling back in her head.\n\n\"Turn over. I'm going to cum on your face.\"\n\nShe moved quickly and lay on her back, panting through her pleasure that still rippled through her in waves. I stroked my cock, and she locked her eyes on it. She licked her lips and shuddered in pleasure. I knelt and felt my orgasm rise. I aimed my cock and spewed my cum over her face. I shot three big ropes and covered her cheeks and forehead. She lifted a hand to her face and wiped it away and then wiped it on the mat.",
        "I stood and offered her a hand. She took it and I pulled her back on her feet. \"Shanti, that was fucking amazing. I have never met your equal. Strong. Fierce. Totally fuckable.\"\n\nShe nodded at me and her eyes went round when I leaned in and kissed her softly on the mouth. Her chin trembled, and I saw her fa\u00e7ade cracking.\n\n\"Thank you, that was memorable.\"\n\nShe nodded and watched me gather up our clothes. \"That... that was...\" I looked back at her when she stopped talking. I watched her fall to her knees and start to sob uncontrollably. It was great big sucking in air sobs. Fuck she was really loud, and I swear she sobbed with a British accent.\n\nI ignored her. She was tough. She would get through it and would probably hate me if I treated her any different at this point. Besides, she was a fierce woman who had never been treated like a woman and a sexual object AND a warrior before. She had craved it. Her trifecta. Was I ever glad I got it right, otherwise I would probably be dead right now. Minus a cock.\n\nI gathered up our clothes and threw hers at her knees.\n\n\"Fuck,\" I said, looking down at my cock. \"When was the last time you had a shit? Fuck me!\"\n\nShanti's tears turned to full laughter, and I smiled at her. She was a delight.\n\nNo, there wasn't any shit. It was a joke. But truly, I was lucky there wasn't. That would have been awkward.\n\n* * *\n\nWe showered in the gym together, got dressed, and drove back to my place. We drove in silence and she was constantly on the lookout for something. She was serious about her role as my bodyguard, and I took her seriously as well. It was her profession, and she was proud of it. I decided right then and there to always listen to her. Within reason. We parked in my building garage and she told me to stay in the car for a moment as she got out.\n\nShe returned in a moment, said the way was clear, and we headed for the elevator. She made me stand in the corner and she took up the middle of the elevator car and made me hold her bag. The elevator stopped at the ground floor and I watched Shanti move back a little and away from the middle until she was standing in front of me.\n\nThe door opened, and I groaned. Standing there was little Dana Carver. She was focused on her phone and looked up when she heard me. She first saw Shanti and I could see over Shanti's head when her eyes went round. She looked her up and down with her mouth open.\n\nThe doors started to close, and I saw a moment of panic in her eyes and she pounced forward, stopping the doors, and slipping inside. She moved immediately away from us and glanced at the elevator panel where our floor button was illuminated.\n\n\"Dana Carver,\" stated Shanti, her British accent thicker than normal. I had to ask her where she was from in England. Not that I would know where it was if she told me. It sounded like street talk. Guttural and snappy. What was that called? Cockney? Yorkshire? Fucked if I knew. I was also wondering how Shanti knew this was Dana Carver.\n\nDana jerked at hearing her name said by a stranger and looked over at me with a perfectly plucked eyebrow raised high.\n\nI smiled at her. \"Dana, this is Shanti.\"\n\nDana forced a nervous smile. I could see how Shanti was intimidating. She was short and built like a brick shithouse. Did I mention that before? But now she was my brick shithouse. I felt giddy. \"Ah, hi?\"\n\nWhen Shanti said nothing, Dana looked at me and then back at her.\n\n\"Okaay...\" she muttered and went back to her phone as the car sped to our floor.\n\nThe doors opened and Dana couldn't exit the elevator fast enough. She took one look back at us before entering her condo. Shanti and I strolled down the corridor with Shanti in front of me.\n\n\"How do you know Dana?\" I asked.\n\nShanti shook her head at me and kept walking. She paused at the Carver door and leaned in and listened to the door. I waited, amused. This was some high-quality James Bond shit I was witnessing. I snorted and Shanti smacked my upper leg, about an inch from my balls. I closed my mouth and shut up.\n\nIn a moment, we continued to my door and entered my condo. Well, she did. She moved in quickly and drew her pistol. She closed the condo door almost all the way, and I waited outside. In a moment, the door swung open.\n\n\"Get inside,\" she ordered, and I did.\n\nI went right to my bar and poured two stiff shots of my best scotch. She removed her hoody and placed her pistol on the kitchen island and took her seat. I slid her glass over to her and she took a large gulp and swallowed it like water.\n\n\"Seriously, don't waste the good stuff on me,\" she said.\n\nI nodded. All I had was good stuff. \"Hungry?\" I asked as I turned to my fridge.\n\n\"Yeah.\"\n\n\"Good, me too. Sparring and fucking make me hungry.\"\n\nShe watched me make a simple steak and eggs snack. I found my extra baked potatoes and quartered them and fried them up. When I glanced at her, I could see her swallowing her spit. It smelt great in here.\n\n\"I've never done that,\" she said quietly as I was dishing out our food.\n\nI glanced at her and waited for her to continue. I had no idea what she was referring to exactly, and I didn't want to comment unless I was sure.\n\n\"Fuck a client,\" she said.\n\nI nodded and pushed her plate over to her and handed her a fork and knife. I watched her dig in. She paused at the first bite of steak and then attacked the food. She ate faster than anyone I had ever seen. In moments, her food was gone, and I hadn't even started.\n\nShe looked up and saw my plate and looked down at hers, and I saw her blush. Fuck, she really is gorgeous, I thought.\n\n\"Sorry. Bad habit. You learn to eat fast in the military. I can't break it. Ah, that was excellent. Really good.\"\n\n\"Thank you.\"\n\nI started to eat and saw her watching me. I cut my steak in half and dropped it on her plate.\n\n\"Eat,\" was all I said and watched her try to slow down and enjoy it. It lasted maybe ten seconds. \"Jesus, did no one ever feed you?\"\n\nShe smiled at me, and it transformed her face. I must have been staring because her smile turned into a frown. \"Would you stop looking at me like that?\"\n\n\"Like what?\"\n\n\"Like some fool.\"\n\n\"You're beautiful.\"\n\nShe snorted.\n\n\"I take it you don't believe that.\"\n\n\"No. I don't. Doesn't matter. Just stop it. I don't like it. I shouldn't have fucked you. I don't know what came over me. You're really annoying, do you know that?\"\n\nI chewed some steak and swallowed. \"It was fun. Did you not have fun?\"\n\nShe blushed a little more. I liked how a blush looked on her brown skin. I was enjoying teasing her. \"Of course I did.\"\n\n\"So what's the problem?\"\n\n\"I work for you. I shouldn't be fucking you.\"\n\nI grinned at her. \"What you just said infers more fucking...\" and let the words hang.\n\nI could see her mind spinning to process that and then she realise what she had just said. She cursed and rose and came back with a bottle of my Glen Livet, my cheapest scotch. She pulled the cork free and splashed a generous amount into her glass. \"Fuck me,\" she muttered.\n\n\"Yes, please.\"\n\nShe glared at me. \"Just stop it! Stop it! You're having me on, and I don't appreciate it. Imani warned me about you. Said Amber said you were a pig. And she knows pigs. I think she was spot on.\"\n\nI chewed another piece of steak and thought for a moment. \"I've only been honest with you. I always am with women. Did Amber tell Imani that?\"\n\nShe sipped her scotch and nodded. \"Yeah, she did. Honest to a fault.\"\n\n\"So, did you think I was lying when I said I think you are beautiful?\"\n\nShe refused to look at me and looked around my condo. I could see a flush of red at her neck and smiled to myself. Women are all the same.\n\nI finished my meal and placed our plates and utensils in the dishwasher. I grabbed my scotch and headed for the balcony.\n\n\"Where are you going?\" she demanded.\n\n\"Balcony for a smoke...\"\n\n\"You smoke?\"\n\n\"Yes.\"\n\n\"That's disgusting.\"\n\n\"No, what's disgusting is having such a low opinion of yourself that you are incapable of accepting an honest compliment.\" I grabbed my pre-rolled joints and pulled one out and opened the balcony door.\n\nI sat down in my outdoor lounger and lit up the joint and took a drag and held it. I blew out and sipped my scotch. My body was aching, and I needed the pot. I was probably seriously bruised in places. I hadn't sparred without safety equipment in ages, and I knew I would be black and blue in the morning. Plus, my head was still throbbing from the head shot that put me out for a moment. Still, I thought, the sex was worth it. Being in that ass was amazing. I imagined her naked form sitting on me again and felt my cock stir.\n\nThe balcony door slid open as I butted out the spent joint. I looked over and Shanti was standing in the door looking at me.\n\n\"Where do I sleep?\" she asked.\n\n\"With me,\" I said simply and looked out over the city. It really was a beautiful city at night.\n\n\"I don't think so.\"\n\n\"Why not?\"\n\n\"That is not how this works.\"\n\n\"Shanti,\" I said, and rubbed at my temples. \"I just fucked your ass hard tonight. We are beyond however you think a client-bodyguard relationship works. You have my cum swimming in your stomach right now. Remember? So, who fucking cares if you are sleeping in my bed? Plus, can't you protect me better if you are closer?\"\n\nShe stood in silence for a long moment. \"I'll pick a spare room. Good night.\" I heard the balcony door close, and I sipped my scotch.\n\nI had so many questions for her, but they would have to wait.\n\nI pulled out my phone and dialled Imani. It rang three times, and she picked up.\n\n\"Hi. How'd it go with Shanti?\"\n\n\"How do you think it went?\"\n\nI could hear glasses clinking in the background and the murmur of many conversations. She must be out dining. \"Probably not well,\" she said and blew out.\n\n\"Actually, it went very well. She's picking out a spare room to stay in. Thank you for referring her to me.\"\n\n\"Oh, thank God!\" she exclaimed loudly.\n\n\"I got to fuck her ass, too. And she swallowed my load.\"\n\n\"Wh-what?\" she said, the last part sounding like a laugh. \"That's not possible.\"\n\n\"Yup. I challenged her to a fight in my gym. Got her all hot and bothered and we fucked. She's gorgeous, by the way. Doesn't seem to agree with me though.\"\n\nImani went silent, and I listened to the noises from the restaurant. It didn't sound exactly like a restaurant and strained to figure out what I was hearing before Imani spoke again. \"Amazing. So amazing. Peter, be gentle. She's a little broken...\"\n\n\"Gentle? Imani, I fucked her ass like it was a blow-up doll. I didn't hold back. She LOVED it.\"\n\nImani gave a little squeal of happiness. \"Really?\"\n\n\"Yeah. It was awesome.\"\n\nI heard a little tapping sound. \"Well, well. Imagine that.\" I heard someone yell out across the phone. It sounded like someone in pain.\n\n\"What was that?\"\n\nImani chuckled. \"My bro... friend, just introduced someone to his cock, and he isn't adjusting very well.\"\n\n\"He?\"\n\n\"Yes, my friend, is sodomising... another friend.\"\n\n\"What?\"\n\nImani chuckled again, and the hairs went up on the back of my neck. It was a sultry laugh, but I heard undercurrents of \"don't fuck with me\" in it. \"You don't know me yet, Peter. Ask Amber about me...\" and she hung up.\n\nThe pot I had smoked decided to hit me just then, and I put down my phone and closed my eyes as the pain in my body became something I no longer cared about.\n\nHow'd my life get so fucked up?\n\n* * *\n\nI woke in my bed and started to stretch and then cried out in pain. My body was in agony. I hadn't been this bad since the park thing. Thinking of that made me remember Shanti, and I opened my eyes.\n\n\"Jesus FUCK!\" I yelled when I saw Shanti sitting by my bed looking down at me.\n\nI struggled to sit up, and she pressed me down with a hand. She wasn't even trying very hard. Damn, she's strong.\n\n\"Shh! Calm yourself. I brought you pain meds.\"\n\nI relaxed, and she released me. She reached down and picked up a glass of water and held out two yellow pills.\n\n\"Take these.\"\n\n\"What are they?\"\n\n\"Just take them.\"\n\nI took the pills and swallowed them. \"What were those?\"\n\n\"Percodan.\"\n\nI choked on the water I was sipping. \"Percodan! What the fuck?\"\n\n\"Relax. You need them. I took two as well. We really banged each other up yesterday.\"\n\nDespite my pain and horror from having just taken serious narcotics, I waggled my eyebrows at her. I saw her push away a smile, and I claimed victory. In my head. I looked at her closely and could see the bruising on her face and around her neck.\n\nShe was wearing the same clothes as yesterday.\n\n\"You're wearing the same clothes as yesterday,\" I said.\n\n\"I washed them in the sink, and they dried.\" She shrugged. \"I'll bring my things over later. Don't worry about it.\"\n\nI nodded and looked around my bedroom. I looked to the empty side of my bed and saw it had been slept in. I snapped my head to look at her. \"You slept in here?\"\n\nShe nodded. \"I found you passed out on the balcony. I carried you in here and you woke up a little. Demanded I sleep next to you, so I did.\"\n\nI smiled at her. \"You can't resist me.\"\n\nShe shook her head. \"You're an idiot. What happened yesterday between us? That will never happen again. Okay?\"\n\nI grinned at her and then yelped when she smacked the side of my head. \"What the fuck?\"\n\nHer eyes flashed with anger. \"Never again. I don't like men. I made a mistake. Broke a vow to myself. Showed weakness. Don't push it with me or I will leave. Understood?\"\n\nI didn't but nodded anyway. \"You're more beautiful when you're angry.\"\n\nHer eyes widened for a moment and then narrowed at me. She did that a lot. \"Stop it. I don't want to hear it. Get up, get washed. We have a lot to discuss.\"\n\nShe got up and started to walk away.\n\n\"Your British accent makes me hard...\"\n\nShe grunted and kept walking.\n\nThe drugs started to work their magic and my whole body started to feel... wonderful. \"Jesus, those things are strong!\"\n\nAn hour later, I emerged from my room and found Shanti trying to cook eggs on the stove. The smoke told me she was failing.\n\n\"Away!\" I cried. \"Get away from my kitchen, woman!\" I rushed over and took the frying pan from her and threw it in the sink and turned on the water. The pan hissed in anger and steam spewed high into the air. I fumbled for the exhaust fan and cranked it to high. \"What are you doing?\" I yelled.\n\n\"Eggs! I was frying up eggs!\"\n\n\"You have the stove on high! Did no one ever teach you to cook?\"\n\nI busied myself cleaning up the mess. She had butter on the counter, butter on a knife, a spatula was curled from the heat, oil was spilt on the stovetop. After a moment, I turned to look at her. She was sitting in her usual spot and vibrating with anger. \n\n\"You're angry? Really? Angry that you almost burnt my place down? What were you thinking?\"\n\nShe glared at me and then strode off. I heard a spare bedroom door slam.\n\n\"Just how fucked up are you?\" I yelled at her.\n\nAfter a few minutes I finished cleaning up and then in a moment of my own weakness, I made up some bacon and scrambled eggs. I walked the plate over to her door and knocked.\n\n\"Go away!\"\n\n\"Sorry has someone let a ten-year-old in my condo? I could have sworn there was a grown ass woman staying in here. I guess I should take this bacon and eggs back to the kitchen.\"\n\nIn a moment, the door opened partially, and an eye peeked out. When it spied the food, the door opened wider, and a hand shot out and grabbed it. The door shut, but not before I saw Shanti's exposed left breast. Her pants were lying across the bed.\n\nI stood there a moment and then walked away, shaking my head.\n\nThirty minutes later Shanti re-emerged, put down her empty plate, and sat in her usual spot. I was finishing eating my own breakfast. I got up and poured her an orange juice and set it down in front of her.\n\n\"Coffee?\" I asked and pointed at my press.\n\nShe shook her head.\n\n\"Tea?\"\n\nShe smiled a little and nodded.\n\nI got up and found the small box of tea I had. \"I only have English Breakfast. Appropriate, no?\" I placed a tea bag in a cup and then filled it from my water boiler. When I turned, Shanti was staring at the water boiler with horror.\n\n\"What is that thing?\"\n\n\"A water boiler. Keeps water always hot and cheaper to use than heating a kettle up from cold. They're amazing.\"\n\n\"Does it keep the water boiling?\"\n\n\"Oh, yes. Check it out.\" I placed her cup of tea in front of her and watched as she gingerly checked it out.\n\n\"Wow. It's boiling.\"\n\nI nodded. \"Milk, sugar?\"\n\n\"Both, please.\"\n\nI placed milk and sugar in front of her and sat to finish my eggs and coffee. I watched her fix her tea, place the used tea bag on her empty plate, and take the first sip. Her eyes closed in bliss for a moment.\n\nI put down my fork. \"You can make tea, it seems.\"\n\nHer eyes opened, and she frowned at me.\n\n\"Please don't use my kitchen again unless I'm present. It's one of my few personal spaces. I won't come in the bathroom when you're having a shit, and you don't use my kitchen unless I say it's okay. Okay?\"\n\nShe nodded. \"Sorry. I was hungry and I've been up for hours. I have a high calorie demand. Part of keeping me fit. I was starting to feel lightheaded and, well, sorry.\"\n\nI almost apologised and then realised I wouldn't have meant it.\n\n\"Don't do it again.\"\n\n\"I won't!\"\n\n\"Good.\"\n\n\"Fuck.\"\n\nWe sat in silence, glaring at each other. I was really starting to get annoyed and was about to open my mouth to suggest she fuck off for good when she became all business.\n\n\"We need to discuss security. There's a lot to cover. If, by the end of this lecture, you still want me to go, I will. Fair?\"\n\nI raised an eyebrow at her. How had she known I was close to tossing her ass out the door? Slowly I nodded at her, certain I was making a mistake.\n\nShe sipped her tea for a moment before she started.\n\n\"There's a lot to cover. First, the Carvers are tied to the crime syndicates across North America. They've made a lot of shady deals that are hidden behind shell corporations and the like. Mostly they are lawyers, but the true money comes from crime. There are a lot of people who disappear around them. The Feds and International Law agencies are very interested in those two. It didn't take me long to see their pattern, and a few calls to friends of mine confirmed a few things. They are dangerous. Very dangerous, because they have no moral or ethical problem with what they do.\n\n\"Good people have a compass. A line they won't cross. Call it religious beliefs or a passion for humanity, I don't care what you call it. Almost everyone has this. The desire to care for other human beings. People who kill for the first time will be crushed by their shame and guilt. Not the Carvers. They are on a completely different scale. A sociopathic scale. Never forget that. What makes it worse is that it is self-taught. They weren't always this way. They grew into it and liked it. That's fucked up. I've seen a lot of military types go that way. Special forces see shit that changes them. To cope, they sometimes embrace it. It rarely turns out well.\n\n\"I'm a specialist. I've been in the business for a very, very long time. So let me explain to you what my role is and isn't. First, bigger isn't better. You don't need huge bodyguards. You need effective bodyguards and in that role size has no bearing. Celebrities who hire huge bodyguards? It's a status symbol for them. Second, you saw my pistol. You even asked me if I felt it was too light. Guns suck, period. If I have to use my sidearm, then I have somehow already failed. My goal and purpose are to never have to use force. That being said, I know the Carvers. The gun in this case is likely to be needed at some point. I'll explain that later, so stop opening and closing your mouth.\"",
        "I closed my mouth.\n\n\"Buddyguards are a problem. You and I almost became buddyguards. That means we have a relationship. Maybe a buddyguard is just a friend and takes selfies with you or at worse starts having a sexual relationship with you. Fucking is completely out of the question. You and I need to remain focused and impartial. Say one thing right now about that, and I swear I will shoot you.\"\n\nI stayed quiet but thought back to my cock plunging in her ass for a moment.\n\n\"We don't like being called bodyguards. I am a protective agent. But you'll forget that in about twenty minutes and I'll be a bodyguard again. I don't want to take a bullet for you. I really don't. You aren't that special. But my mission is to keep you alive at all costs, and that may mean I need to absorb kinetic energy on your behalf. I won't like it. I'll probably hate you more after, and I will try my damnedest to not get killed doing it. I am not Secret Service. I have not sworn an oath to die defending you. And no jokes about it, okay? That would be fucked up.\n\n\"If I tell you to do something, you better fucking do it right away. I don't mean 'pass me the sugar'. I mean 'get your fucking head down or stay in the fucking car'. You'll know I mean it because I will be fucking swearing and using the voice your mother used on you when you were being a particularly nasty little shit.\"\n\nI swear I saw her shudder a little at this remark. This was all fascinating to me.\n\n\"This is a relationship though and requires trust between both of us. Sex erodes that trust. I say that because you keep staring at my tits. Stop that.\"\n\n\"Can I see them one more time?\"\n\nShe stared at me for a long moment. \"Fuck me, you're an arse.\" She sighed. \"Imani said Amber speaks very highly of you. So I won't bitch slap you right now, and perhaps the Percodan is fucking you up. Your eyes are slightly out of focus.\"\n\nI started to experiment with my focus on things and then nodded when it was clear she was right.\n\nShe sighed harder. \"My fault. You're a drug lightweight. Most billionaires can take drugs like celebrities. Okay, back on topic. The threat against you is not stationary. It is widespread and persistent. At least it will become more persistent. Likely the Carvers are planning something legal against you. That is always their pattern. That's something you need to deal with, not me. The other pattern -- one that no one can stick on them and prove - is how they systematically destroy their enemies by whatever means available. Through violence. Targeted violence.\n\n\"My work is professional, and I am highly skilled. Something as simple as heading to the corner store for a sweet means you need to discuss that with me first. I will detail how that is accomplished. Not you. You will fight me on this. You will argue with me about this. I am telling you right now, I will always be right. It will always be my way, or I may as well shoot you myself. You will say I am taking away your freedom. That is simply not true. I am fulfilling the job you have hired me to do. Never forget that, but you will. You'll get pissed at me. Say I'm caging you or some other bullshit. The expression on my face right now? You will see the same one and hopefully think back on this conversation. This is my I don't give a fuck face. Your cries and pleas will not work on me. In fact, the more you cry and whine, the more disgusted I will become. Which is why I always leave after six months. I will probably be so disgusted with you I may want to shoot you. You may have already eroded three months of my time with you. You are that much of an ass.\n\n\"My main job is observation. I observe. I am trained to observe. I will know and recognise all cars and all people moving around you at all times. I recognise patterns and the lack of patterns. This is what I do. But there is only one of me. I cannot see everything all the time and I will miss things. So remember me saying to do what I say when I say it without question? That's because something slipped past me. It will happen. I am not a superhero or invincible.\n\n\"Lastly, I will never do anything to cause you direct or indirect harm. Meaning I will not throw you out of a moving vehicle to save your life. I will not shoot the head off someone holding you at gunpoint. That's the movies. This is real life.\"\n\nShe finished her tea and held the empty cup out to me. \"Please?\"\n\nI took her cup and made a new cup of tea for her. I was thinking the whole time. I understood completely where she was coming from and admired her honesty and brutal no-nonsense attitude. But honestly, I found myself watching her lips and wanting to kiss them. Indian women are so exotic to me. I shifted my cock in my pants and heard Shanti growl a little. I knew I was frustrating her. I was already certain I wanted to keep her around. Her lecture was fascinating, but it was looking into her eyes and seeing the sincerity that sold me. I also sensed a big but here and wanted to hear it. I handed her the tea and watched her fix it.\n\nShe took another sip and sighed. \"Okay, the hard part. You'll need to make a choice here and it won't be easy. I could provide protective services for you for the next six months. No problem. After the six months, I will find a replacement for me for you. Here's the problem. I will deflect multiple attempts on your life over that period. I may be successful each and every time. After I leave, those attempts will continue and likely become more focused and with more intent. My replacement will have a truly hard time of it. I know this because I know the Carvers. This is the legal way to approach this. I am telling you in the end they will be successful. Unless they fuck up and expose themselves legally and the police can become involved. But remember, even from jail they can reach out and fuck you. And so far, they have yet to fuck up legally. We might get them angry enough through their own failure to cause them to slip, but I doubt that. They have waited over a year for revenge in some cases. i just outlined the defensive approach. Totally legal. I predict you are dead within a year.\n\n\"The other approach is more offensive. We need to flip a switch. Get them focused on you hard. Remember when I said the threat was widespread? If we can focus their actions, it becomes easier. We pick the path they follow and ambush them. This has worked for me many times before. This means taking the fight to them. Kicking them where it hurts and making sure they know who kicked them. This is illegal, but I promise you with my skills nothing will ever come back to stick on you.\n\n\"I've already formulated what I call the Mean Girl Offensive. Its petty, meanspirited shit that will rankle them and start making them do crazy shit. If you agree, you need to realise it paints a huge fucking target on you. In neon colours and glow in the dark shit. And they will come at you. In doing so, I will be exposed for the first time and they will seriously ramp their shit up. That will fail too, because, well, I'm really fucking good, Peter. They will cross the line and make mistakes at this point. They will be desperate to accomplish their goal, which will be to destroy you. I have only one question, since I assume you'll agree to pursue the offensive approach. Are you willing to let people who come after you die?\"\n\nHer question caught me off guard, and I stammered.\n\n\"Come now, big boy. Did you not hear me? Killing people is hard. It goes against everything we are wired internally to do. It takes massive amounts of training to push soldiers to kill. This is done through repetitive training where their actions become automatic through discipline. Reinforce the need to protect your fellow soldier, or your country, or whatever. Something more powerful than causing a death. Even then, soldiers crumble. PTSD and all that horrible shit. This is not accidental death where you can assuage your soul with bullshit about how it was an accident and not your fault. Blah blah blah. This is premeditated murder. We kill them before they kill you. Think about it. I'm going to leave you here so you do think about it before you answer brashly. I need my clothes and some other shit. That means I need to leave to get them. I'll be back in an hour.\"\n\nShe threw back her scalding hot tea without a hitch and set down the cup. \"Call Imani when I'm gone. Tell her to tell you what she knows. If we are doing this, you need to know the type of person I am. When I walk back in here, I'll know your decision right away. I'll see it in your eyes. Bye, Peter.\"\n\nShe got up, grabbed her black bag, threw on her hoody and left the condo. She had a key card to my condo in her hand.\n\nI sipped my coffee and grimaced at how cold it now was.\n\n* * *\n\nLater that day, when Shanti failed to materialise, I headed to the local grocery store for more meat and potatoes for my soon to be live in bodyguard. Thoughts of Shanti kept entering my mind and just how lethal she was. She had a calm menacing presence around her, and it excited me. I was thinking long and hard about what she said to me. Was I willing to let people die? People who wanted to harm me? Fuck yeah, I was. And yeah, I didn't call Imani. I already had a good feel for Shanti. I knew what kind of person she was.\n\nI was in the checkout line, which was abnormally long for this time in the morning and was realising I had to be more aware of my surroundings. I was thinking I had to be more observant like Shanti when a light tap on my back startled me so much I might have made a very unmasculine sound. I spun around to find a wide-eyed, slightly frightened, Dana standing there.\n\nMy first instinct was to check her out once my brain clicked who it was. She was wearing tight Lycra pants and a technical t-shirt that bared her midriff. She had a bellybutton piercing with a small gold ring with a diamond on it. Her stomach was toned and tanned, and I wanted to run my tongue all over it.\n\nI swallowed and stared at her. Her pixie haircut was still stunning and exposed her cute little ears. Her freckles stood out, and I wanted to lick them too. Jesus, what's wrong with me?\n\nShe was speaking to me, and I found my eyes already roving to the wonderful space between her legs. What is it about young, beautiful women that got my blood racing? Right, tits and ass. Shameful and typical male shit. I was proud of myself. I finally looked up and found her smirking at me. She liked being checked out. By me.\n\n\"Um, hi Dana. How are things?\"\n\n\"Good. I guess. What are you doing here?\"\n\nAh, small talk. An art I completely suck at. \"Groceries? I need more... things.\"\n\n\"Things?\" She glanced into my cart and saw it piled with the contents of the meat section with two large bags of potatoes piled on top. \"That's a lot of things. You feeding an army?\"\n\nI looked back at my cart and realised how it must look. I turned back to her. \"Kind of. How'd you escape your condo?\"\n\n\"Escape? Good word for it. Mom and dad never let me leave. I'm getting good at sneaking out. Anyway, mom gave me a list of things to pick up.\"\n\nI saw then she was holding a hand cart and inside were some fruit and packaged food. And a bottle of wine.\n\n\"Wine? Are you old enough?\"\n\nShe glared at me. \"Almost. I'm eighteen.\"\n\n\"Right, so no.\"\n\n\"I'm almost nineteen!\"\n\nI reached into her cart and pulled the bottle out.\n\n\"Hey! That's mine! Give it back!\"\n\nI glanced at the label and saw it was a cheap local wine. Ten bucks a bottle and sure to burn going down. I took the bottle and placed it in my cart and saw I was soon up for checkout.\n\n\"Give it back!\" she hissed.\n\nI smiled at her and held a finger up to my lips. Her perfect little mouth made an \"O\" shape, and I immediately thought of a good use for that mouth. I shook myself mentally and turned to my cart and started placing my items on the belt as the guy ahead of me paid and left with his groceries.\n\nThe guy behind the cash started swiping my items across the scanner. He looked up at me through greasy hair that badly needed a wash and a haircut. \"Discount card?\"\n\nI shook my head.\n\n\"That'll be $257.23. How will you be paying?\"\n\n\"Debit.\"\n\nI paid and watched the packing guy place the last items in two paper bags. I waited for Dana to check out her items. The greasy cash dude told her the amount, and she froze. I saw she had a folded twenty in her dainty little hands. I looked at the cash register and saw she didn't have enough money. I pulled out my wallet and grabbed a fifty and handed it to the guy.\n\nDana broke out of her trance. \"No! That's not necessary, I'll just remove some items.\" She was looking around embarrassed and blushed deep red when she saw people staring at her.\n\n\"It's okay, Dana. I owed your dad that fifty, remember?\"\n\nShe stared at me for a moment and then understood what I was doing.\n\n\"Ah, right. Yeah. Thanks, Peter.\"\n\nThe cash guy completed the transaction and handed Dana the change after looking at me first. I nodded.\n\nPart of me was trying to figure out how the hell she thought she was going to pay for the food and the wine. Not smart. She grabbed her bag, and I wrapped my arms around my two bags and then with a small feat of strength managed to grab the two bags of potatoes with each hand. It wasn't heavy -- just awkward. She was looking at me like I was using super strength.\n\n\"Come on. Let's walk back together,\" I said and started toward the exit.\n\n\"Can you carry all that? It's a couple of blocks to the condo.\"\n\n\"I'll be fine. Come on.\"\n\nOnce outside, I asked her to take back her bottle of wine.\n\n\"You didn't have to do that. The wine and the money.\"\n\n\"Yes, I did.\"\n\nWe walked in silence for a bit. I realised I was walking too fast and slowed down for her. She was breathing a little heavy.\n\n\"I'll pay you back. I promise. It was all mom gave me.\"\n\n\"Don't worry about it,\" I replied, and added that nugget to the 'Why I Hate the Carvers' list.\n\n\"I can make it up to you,\" she said quietly.\n\nI stopped on the sidewalk and she took two steps before she realised I had stopped and turned to look back at me. \"That's not going to happen.\"\n\n\"Why not? Don't you find me attractive?\"\n\n\"You're eighteen. That's why.\"\n\nShe frowned, and it looked cute. \"I don't understand!\" That was a whine and her cuteness fled and I felt a stirring of anger.\n\n\"Leave it be. Come on.\" And I started walking again with her beside me.\n\n\"Amanda said its fun.\"\n\nI looked sideways at her, but she was focused on the sidewalk. Up ahead I could see our condo and couldn't wait to get back home and leave this temptress behind me. \"Amanda said what is fun?\"\n\nI could see colour rise in her cheeks. \"You know.\"\n\n\"No, I don't. Spell it out, little girl.\" She shot a look at me and I saw the flash of anger. Touchy little girl, I thought.\n\n\"Blow job,\" she whispered, and looked around in fright that someone might have heard her.\n\nThe sidewalk was empty.\n\n\"A blow job? What is Amanda saying to you?\"\n\n\"Nothing.\"\n\n\"You just said...\" I sighed. \"Never mind. Not gonna happen. Change the subject. Tell me about yourself. What do you do?\"\n\n\"Do? What do I do? I sit in the condo all day and practise. Or I'm at school. In between I am chauffeured and watched everywhere. Dad never lets me be alone unless I'm home.\"\n\nI noticed she was struggling to hold her one small bag and still breathing a little hard. She was totally out of shape despite her thinness. \"What school?\"\n\nShe named a private school in the city I was slightly aware of. \"It's all girls. Thank God I'm in my last year. I can't wait to move on.\"\n\nI had images of nubile eighteen-year-old schoolgirls having orgies in the bathroom and felt my cock stir. \"Private school. Interesting. How are your marks?\" I immediately felt stupid for asking that. I suck at small talk. Did I mention that?\n\n\"What are you, my dad?\" she shot back, and I saw her startled look, and the blush on her cheeks grew a little deeper.\n\n\"Ah, daddy issues, I see.\"\n\n\"Fuck off! I do not.\"\n\n\"Your dad is an ass, do you know that?\"\n\nShe shot me a look that was not nice. \"Fuck off.\"\n\nWe walked in silence and would soon be home. \"What do you practise?\"\n\n\"Don't worry about it.\"\n\n\"Seriously. What are you practising?\"\n\n\"You'll laugh.\"\n\n\"I won't. I promise.\"\n\nWe walked a bit more before she answered quietly. \"Violin.\"\n\nI couldn't help it. I stopped and started laughing. That was so completely unexpected. It was so clich\u00e9. So... so... Carver. Those uppish pricks. I realised Dana was standing a little away from me in obvious anger. She was vibrating. \"That is fucking hilarious!\" I managed to say.\n\n\"You're a fucking asshole!\" she almost shouted. \"I'm really good! Stop laughing! You promised!\"\n\nI managed to control myself and started walking the rest of the way home. \"I can see you in your condo playing away! Who plays violin these days? I had no idea that was still a thing!\"\n\n\"You don't know anything. I'm good. Really good, and you know what? Mr Asshole? I don't give a flying fuck what you think.\"\n\nThe laughter abated, and I wondered what she actually sounded like. Maybe she was good. But seriously, private school and violin lessons? What century is this?\n\n\"So, you are still talking to Amanda?\" I asked to change the subject.\n\nShe shot me a look I couldn't figure out. \"Why do you ask?\"\n\n\"She's my friend. I'm curious.\"\n\n\"Oh.\"\n\n\"Well?\"\n\n\"Yes. She's helping me with some things.\"\n\n\"Like what?\"\n\n\"None of your fucking business, that's what.\"\n\nI chuckled. \"So testy. Such a mouth. Are you and Amanda smooching?\"\n\n\"SHUT UP!\" she shouted. A couple leaving our condo building looked at her in shock and hurried past. Dana looked embarrassed, keyed the entrance lock, and rushed inside to the elevators.\n\nI caught up to her at the elevators just as the doors opened. We entered, and she moved away from me and managed to push our floor with a little exertion of trying to balance her one bag.\n\n\"You need to work out,\" I commented, watching her catch her breath.\n\nShe glared at me.\n\n\"You have been huffing and puffing all the way from the grocery store and all you are carrying is one small bag. You're eighteen. You should be able to run circles around the city.\"\n\nShe said nothing.\n\nI sighed. \"Talk to Amanda about a fitness expert. They can come to your condo and start you on a programme.\"\n\nThe elevator car was rising fast, but not fast enough for me.\n\nI could feel her glaring at me, so I hummed a little tune. This was fun.\n\nThe doors opened, and she hurried out. Just as she was about to enter her condo, I called out to her. \"Come by for a coffee. I'll explain what I mean about working out.\"\n\nShe looked surprised at me, and I saw a little smile appear before she was inside her condo and gone.\n\nDamn, I shouldn't have invited her over...\n\nI was just finishing up putting my groceries away when my front door opened. That had never happened before, and I jumped in fright. No one can just walk into my condo. When I saw Shanti stroll in, I heaved a sigh of relief.\n\nShe raised an eyebrow at me. \"Nice girly squeak you have there.\"\n\n\"Jesus. You scared me. No one has ever just walked into my condo before.\"\n\n\"It's good you're scared. Keeps you on your toes. Speaking of which, I watched you go get groceries. Then chatting up that skinny kid next door. You trying to fuck her?\"\n\n\"What? No!\"\n\n\"She's trying to fuck you.\"\n\n\"No, she's not. She wants to blow me.\"\n\nShanti dropped her duffel bag on the hardware floor, and I heard a muffled metal clank. \"She wants to blow you?\" Shanti started laughing hard and after a bit I smiled at the humour.\n\n\"Yeah. Amanda put her up to it.\"\n\nShanti chortled. \"You are one fucking piece of work.\"\n\n\"Fuck you, too.\"\n\n\"Wow, so testy!\"\n\n\"What's in the bag?\"\n\nShe gave me an appraising look. \"Some things. I'll show you mine if you show me yours.\"",
        "\"Thought we agreed you wouldn't be a buddyguard.\"\n\n\"I can still tease.\"\n\nShanti walked right up to me and looked up into my eyes for a long moment. I could see her eyes dart back and forth. I looked back at her calmly, knowing what she was looking for. After a bit she nodded, satisfied.\n\n\"Okay, so I'm hired. We have a lot of work ahead of us.\"\n\nJust then there was a knock at the door. Shanti had her sidearm out in a flash.\n\n\"Are you expecting anyone?\"\n\nI realised it must be Dana and nodded. The pistol disappeared. \"Yeah, the blow job girl.\"\n\n\"Dana? Here? Why?\"\n\n\"She's sorely out of shape. I said I would talk to her about fitness.\"\n\nShanti gave me a strange look. \"Maybe I should do that.\"\n\nI looked at the hottest, fittest woman I had ever met and kind of agreed with her. I nodded.\n\nShanti strode to the door just as Dana knocked again and swung it open.\n\nDana shrieked seeing my muscle woman standing there. \"Why are you still here?\"<br >\"I live here. What do you want?\"\n\nI came into view and I saw Dana's look of relief.\n\n\"Peter invited me over...\"\n\n\"Well, come in then.\" Shanti stepped aside and Dana minced her way past her. We could both see her looking Shanti up and down, and her mouth hung open. \"Like what you see?\" intoned Shanti, thickening her accent.\n\n\"You're... you're British?\"\n\nI knew she had wanted to say something else.\n\n\"Yeah, very observant.\" Shanti closed the door and nodded in appreciation when the deadbolts automatically slid into place. My condo is very state-of-the art. \"I'll leave you two alone while I unpack.\" Shanti hoisted her large duffel bag without any sign of strain. Like none. I heard the muffled clank again and Shanti shot me a smile. She disappeared around the corner.\n\nDana eek'd her way over to the kitchen island and took her normal seat. \"Who is that?\" she whispered to me.\n\n\"Shanti Patel.\"\n\n\"But who IS she?\"\n\n\"My bodyguard.\"\n\n\"You're what? Bodyguard? Why do you need a bodyguard?\"\n\nI looked at her for any sign of deceit. It could be she had no idea just who her parents were. Did she not realise they had me beaten nearly to death in the park? But she looked at me with innocent eyes. She was clueless. Jesus. I shook my head at her and then spotted my coffee press. \"Coffee?\"\n\nHer eyes lit up, and she nodded, already forgetting Shanti. Ah, the vapid nature of today's youth. So easily distracted. I noticed her nipples were a little hard and how her breasts were so perfectly shaped in her technical t-shirt. I shook myself and grabbed the press and turned away.\n\nI heard a loud bang from the bedrooms and Shanti call out 'sorry'.\n\nI ground some Kona coffee beans and then setup the press. I filled it with hot water and placed it in front of Dana. Her eyes lit up in joy and I noticed her nipples seemed a little more prominent and the t-shirt material a little out of place around them. I was pretty sure she had tweaked them.\n\n\"Can I?\" she asked, looking at the press handle.\n\n\"Yup. Just wait two minutes.\"\n\nShe pulled out her phone - wait? Where'd had she hidden that? -- and opened a timer and set it for two minutes. I glanced meaningfully at the digital clock on the wall of my kitchen, but she was oblivious.\n\nI busied myself with cream and sugar and mugs. I then pulled out a tea bag and a cup for Shanti. Dana was watching her timer. \"A watched kettle never boils,\" I said, and she blinked at me.\n\n\"What?\"\n\n\"A watched kettle never boils...\" and looked at her, expecting her to understand. She didn't.\n\nShanti walked in. \"That means, love, that if you are watching the clock, it will take forever to happen.\"\n\nDana jerked a little and looked in awe at Shanti. I was, too. She was wearing workout gear, and it hugged and accented every muscle she had. My cock lurched hard. She was so fucking hot. I liked how her age made her even more glorious. Shanti seemed to notice my interest, and I'm sure I saw the corners of her mouth lift a little. A smidgen, maybe.\n\nShanti came right up to Dana. Maybe even a little in her personal space. With Dana on the bar stool and Shanti only five feet tall, Shanti had to look up a little, but that in no way diminished her. She was a force of nature. I marvelled at her perfectly toned ass and remembered ploughing it hard. I raised a trembling hand to my forehead.\n\n\"You're in my seat, love.\"\n\nDana scowled at her.\n\n\"Don't you scowl at me, you little tramp. That's my seat. From it, I can see the entire main area of the condo and the door. So, move it.\"\n\nDana decided to be stubborn and glared at her. Shanti simply picked up the squawking girl.\n\n\"Stop it! Put me down!\" shrieked Dana, and her voice cut off with an 'oof' when Shanti dumped her on the next seat over.\n\nShanti sat down and smiled at me when I placed a cup of tea in front of her. \"Any biscuits?\"\n\nI smiled and pulled out a pack of Jaffa Cakes I had bought that morning. Her eyes lit up.\n\n\"Bloody marvellous!\" she said and tore into the package.\n\nDana was about to say something to Shanti when her phone alarm went off. Her mind distracted, she turned it off and focused on plunging the coffee press with deliberate care. She grinned up at me when she was done, proud of the minor little achievement and looking for praise.\n\nI pushed the two mugs over to her. \"Fill 'em up.\"\n\nShe looked disappointed but did as I asked. Soon we were sipping in comfort, watching Shanti devour half the package. Fuck, but she liked to eat. Dana was watching her with an expression between disgust and awe. Shanti picked up the vibe and looked at us with a 'is there something on my face' look.\n\n\"Wunt wun?\" she managed to say around a mouthful.\n\nDana took one, and I watched her try it. Her eyes lit up. \"Ooh, they're good. What are they?\"\n\n\"Jaffa Cakes. British thing.\"\n\nDana looked at Shanti excited. \"So, you are British! I thought so!\"\n\nShanti and I exchanged a look before she responded. \"Yes, love. Born and raised.\"\n\n\"And you're a bodyguard? For Peter? Why?\"\n\nShanti glanced at me again. \"Yes. Because he hired me.\"\n\n\"And you live here now?\"\n\nShanti nodded and looked pained and sipped her tea. I heard her belly rumble and turned to my kitchen while Dana and Shanti got to know each other. That Shanti was speaking to the daughter of the enemy was not lost on me. I wondered what Shanti would say. \n\n\"Yes, love. I need to be near the person I am actually protecting.\"\n\n\"What are you protecting him from?\"\n\nThere was silence for a bit, and I ignored them. I pulled out eggs, a can of beans, breakfast sausage, back bacon, tomatoes, and large mushrooms and started making Shanti a proper British breakfast. Well, almost proper. No way was I making blood sausages. That it was almost noon didn't matter to me. I put two slices of bread in the toaster.\n\nShanti spoke slowly. \"You know Peter was attacked in the park, don't you?\"\n\nI assumed Dana had nodded when Shanti continued.\n\n\"That won't be the first. The people who are after him arranged that. He's in danger.\"\n\n\"Danger? From who?\"\n\n\"Whom. Never you mind, love.\"\n\n\"What? Tell me!\"\n\n\"No. Client confidentiality.\"\n\n\"Peter,\" whined Dana. \"Tell me!\"\n\n\"No.\"\n\nShanti spoke to me. \"Oi! Are you making a British breakfast?\"\n\n\"Yes. Just for you.\"\n\n\"Ooh, I'm gonna like it here. Last job I was eating power bars most of the time.\"\n\n\"Ugh,\" I said.\n\n\"So, Dana, I hear you are looking for a fitness trainer.\"\n\n\"No.\"\n\nI looked back at Dana. \"Yes, you are. You are badly out of shape. Getting fit will help your mind and your motor skills. You'll likely play better.\" I saw her eyes look thoughtful, and I turned back to frying the back bacon and sausages. I placed a second frying pan on the gas burner. I set the burner to medium and looked at Shanti to see if she had noticed. She hadn't. Miss Observer hadn't seen the temperature setting.<br >\"You need to deep fry all that in lard,\" I heard Shanti instruct me.\n\n\"Nope.\"\n\n\"Pfft. It's not going to be proper then, is it? Dana, fitness trainer? Yes?\"\n\n\"I dunno. I never really thought about it.\"\n\n\"You looked pretty winded coming back from the grocers.\"\n\n\"Were you spying on me? Oh my God!\"\n\n\"Don't get your knickers in a knot. I was watching my client.\"\n\n\"Oh.\"\n\n\"You could barely carry that bag of groceries.\"\n\n\"Yes, well, its not like I need to lift things and stuff. Why are you so... so... like that?\"\n\n\"Never mind me. This is about you. I know a couple of fitness people in this city. I can recommend one if you like.\"\n\n\"What would I have to do?\"\n\n\"Get fit. Lots to do. Listen, I can see the doubt in your eyes. I'm not suggesting you get like me. But you need to increase your muscle mass. Put some meat on those bones. Build up your stamina and your cardio. It can go from easy to hardcore. You decide. A personal fitness trainer will walk you through it and come up with a regimen to follow.\"\n\n\"I dunno. I'll have to ask my dad.\"\n\n\"Brad Carver.\"\n\n\"Yes, how d'you know that?\"\n\n\"Married to Karen Carver, your mum.\"\n\n\"Are you spying on us?\"\n\n\"Love, you live next door to my client. It's my business to know that.\"\n\n\"Oh, I see. Hey, would you take a bullet for him! Wait! Is someone going to shoot him! Oh my God!\"\n\n\"Relax. No. No one is going to shoot him.\"\n\nI was a little relieved to hear that and then realised that Shanti was lying. Fuck. I flipped the back bacon and turned the sausages. They were almost done, so I cracked two eggs into the other frying pan and started the toast.\n\n\"Jesus, it smells good in here,\" muttered Dana. I added two more eggs to the frying pan.\n\n\"So you go to private school. The one downtown. All girls. Is it all carpet munching in there?\" asked Shanti, and I chuckled. I had wanted to ask that exact same question.\n\n\"Ew! Gross! No!\" replied Dana. \"Well, maybe a little. But not me!\"\n\n\"Relax, love. I wasn't saying you did. Are you curious?\"\n\n\"What!? No! Are you some dyke or something?\"\n\n\"No, love. Though I have experimented.\"\n\nMy ears perked up, and I pulled out two large plates. I was waiting for Dana to respond, and she seemed to be taking a moment. I quickly glanced her way and saw just how flushed she was.\n\n\"I would never,\" she finally said. \"What was it like?\"\n\n\"It was lovely, actually. I have fond memories of it. It was... liberating. You should try it.\"\n\nDana remained quiet.\n\n\"Just how badly do you want to suck my client's cock, Dana?\" blurted Shanti, and even I turned around at that and gawked at her. I could see Dana opening and closing her mouth in rapid sequence and looking horrified at me.\n\nI chuckled. \"Relax, Dana. She's fucking with you.\" I put down two plates and started loading them up. Well, I loaded the one in front of Shanti. Dana's only had a normal amount.\n\nShanti murmured thanks and dived in, and I watched her consume her breakfast in a hurry. The food just disappeared into her mouth. I dropped a bottle of brown sauce in front of her, and she murmured thanks around a piece of sausage sticking out of her mouth. Dana picked at hers and watched Shanti in awe. I was too, and I was expecting it. Goddamn, she was amazing.\n\nI made her another cup of tea, complete with milk and sugar, and topped up the coffees.\n\nShanti sat back and sopped up the remains of her breakfast with her toast. She thumped her stomach and burped and smacked her lips. \"Fuck, you're a good cook.\"\n\n\"Chef, actually.\"\n\n\"A regular Jamie Oliver. Fuck, I've lucked out here. Best job ever. Oi! Speaking of job, we never discussed payments. Did Imani tell you my rates?\"\n\n\"Nope. Don't worry about it. We'll talk later.\"\n\nDana was looking at Shanti in a new way. A little awed or star struck.\n\nShanti looked at her. \"Love, I burn through calories like a Japanese train. When you start working out, your appetite will ramp up. Eat smart and right and you'll put on weight. Good weight. Muscle weight.\"\n\nDana nodded and pushed her plate away. Shanti saw it still had meat on it. She indicated the plate and Dana nodded. The meat disappeared in a flash.\n\n\"So good,\" muttered Shanti. She pushed her plate away and looked at Dana. \"Your folks leave you alone all day?\"\n\nDana nodded.\n\n\"Must be lonely. Another reason to start working out. It will focus your mind. But you need to get out and start running on the streets. Treadmills don't cut it. Your mum is with your dad all the time, isn't she?\"\n\n\"Yeah, mom and dad own their own legal firm. They have like fifty partners all around the country, you know? And international, but I'm not sure where. England for sure.\"\n\n\"I think I know the perfect trainer for you. She was in my regiment in the UK for a couple of years. Lost a leg, but you wouldn't know it. Do your parents work from home at all? Have an office in your condo?\"\n\n\"She lost a leg! Are you serious? That's terrible! How does she work out without a leg?\"\n\n\"She manages. You'll see. I expect your mum and dad work late in their home office. And leave you pretty much alone.\"\n\n\"Yeah, they're gone all day and then when they come home its takeout and they disappear into their office. I gave up a long time ago trying to get them to do anything with me.\"\n\nShanti reached out and touched her hand for a moment. \"I'm sorry to hear that, love. It was much the same for me. Mum and da were never home. Both military, always deployed. My da served in the Falkland Islands.\"\n\nDana was looking at her hand where Shanti had touched her. \"The Fucking Islands? What's that?\"\n\nI chuckled. \"The Falklands. South Atlantic island owned by the British. Argentina tried to take it in the early 80s. Shanti's accent changes words a little. Sounded like Fucking Islands to me, too.\"\n\nShanti shot me a grin, and for a moment I was dazzled by it. Her smile faltered for a moment and then she turned to Dana.\n\n\"If you're alone, I'm worried about you. Does your place have the same security as Peter's place? He has all the bells and whistles.\"\n\nDana looked thoughtful. \"I think so. Dad has a wall covered in monitors. Looks like surveillance cameras. But nothing for the condo, I don't think. I mean, they never told me there was. What do you have Peter?\"\n\n\"Just some safety things. Being rich means taking extra precautions. Like Shanti, here.\"\n\nDana nodded.\n\n\"Did you say you have takeout every night?\" I asked her.\n\nDana nodded again. \"Yeah, most nights. Mom and dad can't cook. We used to have a maid, but she left one day. Don't know why. Since then, its pizza and Chinese all the time.\"\n\nThat hurt to hear that. I pride myself on cooking and the need to eat home-cooked meals. I started speaking before my brain caught up. \"I can teach you to cook, if you like.\"\n\nI saw my mistake at once. Her eyes lit up, and she literally bounced in her seat, clapping her hands. \"That would be AWESOME!\" she practically screamed at me.\n\nShanti grimaced. \"Dana. You need to keep this quiet. I know they're your mum and da, but they can't know about that. Or me. Is that clear? I need to hear you promise me. This is important and has to do with what I do. If you plan on coming here for lessons on cooking, you need to never let your parents know. Okay? One word and it will get very bad for Peter.\"\n\n\"Bad for Peter, why?\"\n\n\"Because you are just eighteen. Your parents will never accept that all Peter is doing is teaching you to cook. I'll always be here, but knowing I'm here is something your parents can never know. Look at me,\" said Shanti softly.\n\nDana looked at her.\n\n\"You might want to spill this one day, cause you're mad at your parents or something. This can never come out. This is an adult decision you need to make. Do you promise?\"\n\nDana looked pleased to be included in an adult decision. She nodded her head. \"I promise.\" No sooner had the works left her mouth then she turned to me all excited. \"This is going to be awesome!\"\n\n* * *\n\nAfter Dana left, skipping down the hall, Shanti turned on me and pressed me up against the wall by the door.\n\n\"Just what the fuck are you doing? Are you crazy? She can't come over here for cooking lessons!\"\n\nI liked having her pressed up against me. If only she would press her groin against me, that would be lovely. She brought my attention back by snapping her fingers loudly in my face.\n\n\"Hello? Earth to Peter! What the fuck were you thinking?\"\n\n\"Honestly, it just came out. Hearing her eating fast food all the time had me sick to my stomach.\"\n\n\"Poor fucking baby. Now the daughter of your enemy will be in your fucking condo all the time!\"\n\nI sighed. \"I know. It's too late. I screwed up.\" Then I surprised myself. \"Sorry.\"\n\nShanti leaned up and put her face close to mine and stared into my eyes. I could smell the breakfast she had eaten, and a little grease was still on her lips. I wanted to lick it off and my focus must have slipped a little.\n\nShanti growled, and I swear for a moment I thought she was going to kiss me. She slammed me back against the wall and strode off.\n\nI waited, and after a moment I heard the guest shower start up.\n\nA little while later Shanti emerged looking fresher. She always wore the same style of clothes. Black and technical. She looked smoking hot to me. She carried her Glock and placed it inside the side table drawer by the door with an extra magazine. I watched her then stroll through the condo checking things out. She examined furniture, the view, and she watched nearby buildings for a spell, and then flopped down on the couch near me.\n\n\"Okay, I've been thinking. This might be a blessing in disguise. You heard how free she was with her personal information about her parents. We need more of that. You can pull it from her gently while she is here. Cozy up to her. Earn her trust.\n\n\"I'll get in touch with my friend I mentioned. If she can get inside that condo as Dana's fitness trainer, then we are golden. I want her in there scouting and placing some items in that office. Listening tools, a keylogger, shit like that. Any information we can get the better and it makes our chances much better.\n\n\"We need to accelerate things now. Dana will let it out eventually that you have a bodyguard. The Carvers will react to that quickly. They'll probe. See how effective I am. Test the edges of your security. Look for a weakness they can exploit. So we need to keep them on their toes. Get them to react rather than take action. I don't know just how good they can multitask, but we can be certain they have people on the payroll who will handle this for them. It will happen quick. I have a few ideas.\"\n\n\"Speaking of payroll, what's your rate?\"\n\n\"Ugh. I hate this type of stuff. I'll email it to you, okay?\"\n\nI nodded.\n\n\"Right, so. What to do. This is about getting legal dirt on the Carvers, right? I mean, it would be so easy to just kill them. Maybe it ends that way, but this is about legalities and keeping you alive until we achieve that. I have some ideas. They'll sound like university pranks, but this will often get the results we want.\n\n\"I assume you know the vehicle they drive, so we are going to get a generous handful of dog shit and put it under door handles and into the air vents under the bonnet. It has to happen when their car is not in a controlled access car park. Outdoor somewhere. I have a bloke who can handle that. He'll follow them discretely and get it done in a flash. I'll leave it to your imagination what happens when they use the car. We'll also place a handful of pebbles in the wheel rims of the car, which will cause significant damage when the car is driven. Probably key the paint, too. Why the fuck not?\"\n\nI laughed at the image.\n\n\"Glad you like it. Next, we block the exhaust pipe with duct tape. This is an old trick and people used to use potatoes. It will stop the car from starting. You would be amazed how long it takes for most people to realise why their car won't start, and by the time they do they have often already called out a tow truck or rang up roadside assistance.",
        "\"You're going to fill in every coupon and online form you can find that is likely to result in junk mail. Use their names and address for delivery. They'll soon have piles and piles of junk mail arriving on a daily basis virtually forever. We'll spam their email accounts as well. Also, we need to ensure that as many lingerie, seedy, and gay magazines are included.\n\n\"We'll populate adverts with their pictures all over town in grocers and whatnot. Hit the online boards and notice boards advertising dubious services and include their telephone number. We'll include articles that state exactly what the Carvers actually do that is illegal. We'll spread truth.\n\n\"We'll pick up some burner phones and phone loan companies using the Carver name and phone number. Many of these loan companies, or brokers for loan companies, are virtually impossible to get rid of and they will keep phoning them for many months afterwards, even when told multiple times that they do not require a loan.\n\n\"Normally I would be suggesting we turn up their heating to maximum and then putting superglue on the switch. This is especially effective in midsummer, like now. But Dana is there, and that changes things.\n\n\"Lastly, we call the Carver law firms and tell whoever answers the phone that they are their health specialist, and that they need to speak to the target ASAP regarding a possible infection risk to the public. What do you think?\"\n\nI hugged her for about five seconds before she landed me on the floor.\n\n\"Don't ever do that again!\" she fumed, looking down at me. \"I'll take that as a yes. Get up and get started.\"\n\n\"Some good news...\" I said, still lying on the floor pretending my ass and back didn't hurt.\n\n\"Yes?\"\n\n\"My specialty is software. I write algorithms that do all sorts of things. Most of what you want to do? I can set that up as anonymously as possible. It will be completely untraceable and fully automated. Better yet, it will hit the Internet at large. Everywhere all at once.\"\n\nI watched her eyes go soft toward me. \"A man after my own heart.\" She kicked my leg hard, and I yelped. \"Get up and get started. I have things to do. I'll be gone most of the day. The Glock stays in the table. Don't let anyone in except me, or Imani. Or Dana. Fuck. There's too many people. Just get it done.\"\n\nShe stormed out of my condo and the door deadbolts slid back in place.\n\nI lay back and smiled.\n\n* * *\n\nThat night I was sound asleep when my condo app woke me up. Someone was buzzing my condo. I managed to open my eyes and stare blearily at the screen. It was Amanda, and she looked unsteady.\n\n\"Amanda?\" I asked the app.\n\n\"Pete... let me in. Please. I need...\" I watched in horror as she threw up violently in the lobby.\n\n\"Amanda! Are you okay?\" I watched as she slumped to the ground and didn't move. \"Shanti! It's Amanda! She's in the lobby...\"\n\nI heard Shanti yell back from her room. \"I'm on it! Stay there, don't move! This could be a trap...\"\n\nI heard her move quickly through the condo and heard my front door open and close. I struggled out of bed and headed to the living room. Lights automatically dimmed to life around me and I saw it was just after two in the morning. I looked at my phone and saw Shanti enter the lobby with her Glock drawn. She looked all around and then holstered her weapon and scooped Amanda off the ground.\n\nI changed cameras and watched her bring her into an elevator she had blocked open with a lobby chair. She kicked the chair away and the elevator doors closed.\n\nIn the elevator I watched her trying to talk to Amanda, but she was completely limp in her arms. I didn't know if she was even breathing. I saw them exit the elevator and rushed to my door to open it.\n\nShanti looked surprised and then pushed past me and brought Amanda to the couch and dropped her on it.\n\nI was staring at Amanda, not knowing what to do when Shanti pressed a pair of large scissors in my hand. I recognised them as mine. Where did she find them?\n\n\"Don't just stand there, cut her clothes off stat. Place them in this garbage bag. Now!\"\n\nI turned to stare at Shanti, not sure what was happening.\n\n\"Look at her! She's been drugged! Raped maybe! There's cum in her hair. Too much for one man. We need the evidence. Cut the clothes off and cut her hair with the cum in it. Now!\"\n\nI felt my vision expand and my brain caught up in a roaring rush. I saw the state she was in and saw all the signs Shanti just said. I leaped to action and started cutting Amanda's clothes off. She wore a tiny cocktail dress, and I had it off in seconds. She wasn't wearing panties, but she had on a lovely red lace bra. It came off and into the bag.\n\nI hesitated before cutting her hair and then clenched my teeth and took off the least I had to. I could see the dried cum. It was all over her hair and face. I felt something wet on my face and swiped at it and kept chopping her hair.\n\n\"Okay, that's enough hair. You got samples from all over. Good job. One sec...\" said Shanti, and I marvelled at the command in her voice. She was used to giving orders, and I felt safe with her. I turned to thank her and froze when I saw her with an IV kit and bags.\n\n\"What are you doing?\"\n\n\"We need blood samples and I need to give her something to counteract the drugs...\"\n\n\"What?\"\n\n\"I would guess the date rape drug, but I suspect she was given heroin, too. She needs naloxone, which thankfully I have. Get your camera. Shit. We should have taken pictures. Start now. Leave me and my face out of them, understand?\"\n\nI didn't fully understand but nodded and pulled out my phone and carefully took pictures. I took pictures of the clothes, too. Shanti with remarkable speed inserted something into Amanda's arm at the elbow bend. She then removed three vials of blood and then inserted the IV and hung the small bag she had over the back of the couch.\n\nBefore I could react, she had pulled out a strange, small, white device. She slapped Amanda hard. \"Amanda? Amanda? Wake up, love.\" she yelled. She peeled her eyes back and looked into them. When Amanda didn't respond, Shanti cursed and pressed the small white thing against the muscle of Amanda's thigh. \"Here we go...\" she said and depressed the plunger. She looked at me. \"Naloxone. For opioid overdose.\"\n\n\"Amanda doesn't do drugs...\"\n\n\"Peter. Peter! Focus. Start thinking. She was drugged. Abused. Then given an overdose and dropped at your front door. Think for a moment. Breathe and think!\"\n\nI did, and when it all clicked, I gasped. \"They hurt her! To get at me!\"\n\n\"Correct. The police will be here any moment. Someone working for the Carvers would have called it in. We need her alive when they get here. We were lucky. I carry a small pharmaceutical bag with me. Thank God I tossed naloxone in at the last minute. It's a miracle drug. And we have blood samples. Call your lawyer right now and get her here. She needs to take these vials as evidence. The police will lose them. The Carvers are everywhere. I underestimated them. I'm sorry. I should have seen this coming. You've distracted me, I... Fuck! Fuck! Fuck!\"<br >She hung her head for a moment and calmed herself. When she looked up she was all business, again.\n\n\"I need to call a friend and get him to meet the ambulance at the hospital. He'll watch over her. She's in trouble and her life is in danger. The Carvers did not expect her to live, Peter. Now we need to keep her alive.\"\n\nI nodded.\n\n\"Start with 911. Tell them exactly what happened. They record everything. More evidence for you.\"\n\nI stared at her.\n\n\"Dial!\"\n\nIn the distance I heard police sirens, and with a shaking hand I lifted my phone and dialled 9-1-1. I looked down at Amanda as the phone rang in my ear. \"Stay with me, hon. Stay with me.\"\n\nEnd of Part Two"
    ],
    "authorname": "Estcher",
    "tags": [
        "anal",
        "blow job",
        "bodyguard",
        "chef",
        "deep throat",
        "erotic coupling",
        "intrigue",
        "mystery",
        "rich"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/philanthropy-pt-02"
}