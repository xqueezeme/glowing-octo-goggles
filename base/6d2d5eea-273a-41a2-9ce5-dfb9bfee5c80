{
    "title": "Her First Cock",
    "pages": [
        "Collins Louise Parker was a high school senior. Her hobbies included playing flute for the school's concert band, trying to draw what an emotion looked like, and dancing to pop music in her bedroom. Her favorite foods were pizza and chocolate. She liked horror movies, 80s sit-coms, and the color pink. But none of those interests matched the intensity she held for a secret obsession.\n\nCollins Louise Parker was infatuated with cock.\n\nShe was addicted to cock. Not that Collins was sexually active - far from it. She was, in fact, a virgin who'd never seen male genitalia in person. That lack of experience did nothing to diminish Collins' interest or familiarity of the male organ; hundreds of pornographic photos were buried in the depths of her laptop's sub-directories. Pictures of cock. She also downloaded and archived a wide variety of video files. She saved videos of cocks penetrating vaginas, cocks being masturbated, and her favorite \u2013 cocks ejaculating. A limp penis didn't interest her; Collins was only fascinated by hard, erect cocks.\n\nShe became an aficionado of cock, growing to prefer a certain type. First of all, the cock needed to be circumcised. Too much skin, especially if it obscured the head of the cock, swiftly lost her interest. A cock couldn't be too big, nothing over nine or ten inches, but it certainly couldn't be too small either; seven or eight inches was the ideal length of her masturbatory fantasies. Thickness was important as well. If a cock were as wide as a soda can it turned her off, but she didn't like skinny noodles either; the best girth seemed to be if a girl could just barely wrap her hand around the cock. But all of that failed to matter if a cock didn't have the right type of head. Collins disliked any cock with a small head. She had seen many pictures where the head of a cock was narrower than the shaft; those looked ridiculous! To her thinking, a cock should have a big mushroom capping the top of it with a firm ridge defining its crown.\n\nCock aroused her and turned her on. Collins spent hours locked in her room masturbating to images of cock, fantasizing about jerking them off, sucking on them, or getting penetrated by the perfect cock. The men attached to the cocks sometimes didn't even matter. She certainly liked boys, but the thing that excited her most about the male form was unquestionably an erect cock standing at attention.\n\nThe most thrilling aspect of cock was when they ejaculated; Collins had a primal urge deep within her libido that never grew tired of watching male orgasms. Whenever she watched a cock erupt with cum it took her breath away. The best orgasms were when the semen shot high into the air, or when the men fired several ropes of it. She adored watching a cock spilling its contents out onto a woman, fantasizing that it was she who was the target of such an erotic decoration. Her private life was consumed by these fantasies.\n\nYes, Collins loved cock. This is her story.\n\n*****\n\nThe last class of the day was the slowest of her final semester. Collins had chosen a literature course as her English elective, thinking it would be more artistic than a structural language course, but she quickly discovered the class required more reading than it did writing. It wasn't that Collins didn't enjoy reading, she did, but the heavy classics like Shakespeare were too depressing for her liking. She liked romance, but did Romeo really have to kill himself? Happy endings were more her style, though Collins' teacher continually assigned books filled with depression and death - much to her chagrin.\n\nMaking matters worse one April day was the weather; it was a beautiful afternoon and Collins was infected with spring fever. She kept glancing at the clock, waiting for the final bell, as Mr. Hollingsworth droned on and on about Old English and proper pacing. Adding to her anticipation was the fact that it was her eighteenth birthday; she would finally be old enough to do something she had wanted to do for a long time.\n\nAfter school, Collins was going to buy her first cock.\n\nWhen the bell finally sounded Collins had already gathered her books; she was out the classroom door before Mr. Hollingsworth could finish yelling something about a homework assignment. She hurried through the hallways towards her locker unbothered and unnoticed, the same as every other day. Few people paid any attention to Collins because she didn't pay attention to them. Most of her fellow students viewed her as a shy and introverted geek, and what few friends she did have at school weren't very close - more like acquaintances. A typical day at school was when no one even talked to her outside of band class, including teachers. Collins was an only child with a single mother and struggled at times to socialize. She had one person she considered a close friend - her cousin, Rachel. The two girls were the same age and lived fairly close, though they attended different schools.\n\nOnce free from the confines of school, Collins bypassed the big orange bus that normally took her home. She kept walking off-grounds towards a suburban street corner thee blocks away. That was the closest city bus stop, where Collins sat herself on a bench and dug in her purse. She found her pass and double-checked the schedule. After confirming which bus number would take her into the city she put in a set of ear-buds, activated her MP3 player, and thought about her first cock.\n\n=====\n\nRodney preferred working day shifts at the triple-X book store since the night shift brought in too many perverts and freaks. Unfortunately, time passed a lot slower between the nine-to-five hours. Hardly anyone came in before 5pm, so Rodney stood behind the front counter lazily flipping through a dirty magazine and waited for his shift to end. It had been so quiet he was literally startled when a bell jangled above the store's entrance signaling a customer. He glanced up, expecting to see another balding middle-aged male. But very shift, whether it was day or night, brought in at least one surprising customer. That day was no different.\n\nYoung females were not the establishment's typical clients. Rodney looked the girl over, noting the nerdy thick-rimmed glasses and pale skin. Her straight black hair was tied in a lazy pony tail, though wisps of it escaped confinement. She was wearing a pair of black slacks, black shoes, and a white buttoned shirt that collectively looked like something someone would wear at a private school.\n\n\"I'm gonna need to see some eye-dee,\" Rodney said, sensing she was under the required age to be shopping at an adult book store.\n\nCollins gave the cashier a nervous look before approaching the counter. Rodney was wearing a muscle shirt and sported outlandish tattoos along both arms; he reminded her of someone she once saw in a punk rock video. Collins had never been in such a taboo place and the bookstore was located in one of the seedier areas of downtown. She hoped no one, the cashier included, would harass her or worse.\n\n\"Today's my birthday,\" she murmured quietly, fishing a driver's license out of her purse.\n\nRodney checked the date on her license.\n\n\"Happy Birthday,\" he offered dryly before handing the I.D. back to Collins, \"Anything I can help you find?\"\n\n\"Um...\" Collins cast several unsure glances around the large store. \"I want to buy something for my friend.\"\n\nRodney snorted. They all said that. \"Books and magazines are over there,\" he gestured. \"DVDs and videos are on the far wall. Everything else is towards the back. If you want to buy some tokens for the booths I can't sell you less than five dollar's worth, and they're upstairs.\"\n\nCollins' brows lifted in curiosity, \"Booths?\"\n\nRodney looked back down to his magazine with bland disinterest, \"You can watch porn in them.\"\n\n\"Oh,\" Collins shook her head swiftly. \"No, thank you. But... um, can you tell me where your cocks are?\"\n\nHer choice of language caused Rodney to slowly lift his eyes back to Collins and re-evaluate her.\n\nShe smiled shyly under his scrutiny.\n\nAfter staring at her for several moments Rodney finally pointed towards the back of the store, \"You'll find all kinds of cocks over there.\"\n\nCollins turned her head and followed Rodney's indicating finger, \"Thank you.\"\n\nThe cashier was right. Collins found all manner of cocks. There were big cocks, small cocks, rubber cocks, plastic cocks, vibrating cocks, and even one toy that had two cocks \u2013 'one for each hole' the package read. She smiled brightly, marveling at all the choices. It was important to her to first find some that matched her profile of an ideal cock, with the proper size and shape. Then it was her goal to select one that looked and felt the most realistic. It occurred to Collins that she had no idea what a real cock actually felt like, so she decided her best judgment would simply have to do in that regard.\n\nHer eyes were drawn to one box that boasted 'Ten Inches of Love', but Collins quickly discovered her first obstacle: it was hard to tell what the dildos looked or felt like since they were concealed behind cardboard or plastic packaging.\n\nShe eventually found one in a clear plastic package that appeared promising. It was eight inches long and flesh-colored, shaped with a bulbous head and realistic veins protruded from the shaft. The base of it looked like a set of hanging balls and the whole of it seemed realistic enough to her. The package claimed it was made of flexible rubber, which appealed to her. She wasn't sure what the benefit was of being battery-powered, but at least it was water-proof.\n\nCollins carried the dildo towards the cashier's counter, \"Can you tell me if this is a very good product?\"\n\nRodney lifted a half-hearted glance, \"We have a no-return policy, if that's what you're asking.\"\n\n\"Hmm,\" Collins considered the dildo, turning the package in her hand this way and that to study it from every angle. She finally set it on the counter, \"I think I'll take it.\"\n\nRodney asked, \"Do you want some lube with that?\"\n\n\"Is that what you recommend?\" Collins wondered naively.\n\n\"I don't know. Does your, uh, 'friend' have any problems self-lubricating?\"\n\nCollins gave him a curious look.\n\n\"You know,\" Rodney pointed downward, \"in her lady-business?\"\n\n\"Oh,\" Collins blushed. \"No, I don't think that will be a problem.\"\n\n=====\n\nHer mother wasn't there when Collins arrived home. A note on the counter said her mom was working the late shift, but she wished Collins a happy birthday and indicated there were cupcakes in the fridge. Collins didn't mind. She was actually relieved her mother wasn't home since she could hardly wait to try out her new purchase. Hurrying to her room, Collins closed the door and tore open the dildo's plastic package.\n\nShe felt the thing in her hand, smoothing her fingers along its length. It was firm, but flexible enough to bend at an almost ninety-degree angle. The head of it was amazing, with a wide ridge around it nearly as thick as her pinky finger. She excitedly put it down and began taking her clothes off.\n\nStripped to her panties, Collins decided she wanted the first time with her cock to be special. She turned down the lights and lit a few candles before setting her computer's media player to play a mix of soft music. Fluffing a few pillows, she arranged them against her bed's headboard and laid back against them comfortably. The atmosphere was perfect.\n\nPushing her panties down, Collins dangled them off one foot and let them fall to the floor. She spread her thighs and smoothed a palm down between her legs, which was already damp with anticipation. Excited butterflies danced in her stomach; Collins was tired of simply looking at pictures and rubbing her clit while masturbating. She wanted to know what it felt like to be penetrated by a real cock.\n\nThe first thing she did was lift the dildo to her lips. She opened wide and pushed the head of it into her mouth, wondering what it would be like to suck on a big cock. She was careful not to bite on it and used her lips to cushion her teeth against the dildo's surface. She slid it inwards until the tip hit the back of her throat, causing her to gag. Collins spit it out and coughed, but quickly tried again. Before long her hand was working the toy in and out of her mouth. She sucked on it and ran her tongue against its smooth surface just as she had seen porn stars do a thousand times before.\n\nWhen the thing was coated with her saliva Collins knew it was ready. Her thighs spread further and she lowered the toy between her legs, watching in rapture while positioning its head against the opening of her slit. Parting her labia with two fingers, Collins began applying pressure. She gasped at the sensation of initial penetration and quickly encountered her hymen. Steeling herself, she pushed a firm thrust and drove her cock inward.\n\nA cry filled the room when Collins felt her virginity tear, but it was over quickly and wasn't as bad as she anticipated. Still, several moments passed before she dared move the thing. She slid it out slightly before trying another inward movement. It was painful, but bearable. Each agonizingly slow thrust afterwards became a little easier. She was eventually able to work half of the toy's length into herself.\n\nIt was unbelievable; she had never experienced anything like it. Her vagina was stretched around a cock for the first time in her life and she wanted more; she wanted her passage filled with cock! She continued sliding it in and out, each slow thrust plunging slightly deeper. There was pain, but it was a good kind of pain and Collins quickly acclimated to it. Before long the pace of her thrusts quickened.\n\nShe inhaled sharply when the head of her cock hit a spot inside that sent tingles up her spine. Drawing the dildo back, Collins tried to hit the spot again and a guttural grunt escaped her throat when she found it. She repeated the motion one more time, putting more force behind it, crying out as shockwaves of electricity traveled through her body like ripples on a pond.\n\nShe no longer paid any heed to the pain, for it was swiftly replaced by pleasure. Her hand plunged the rubber cock in and out with a rhythmic pace, creating a friction along the inner walls of her sex that made Collins squirm atop the bed. Her toes curled, her mouth hung open, and her eyes clasped shut. She incoherently lifted her free hand to a breast and squeezed her own flesh. Her fingers kneaded into her tit while she fucked herself, imagining it was a real cock plunging its way into her depths.\n\nShe repeatedly poked her cock against the magical spot she had found. Gasping moans flowed from her throat and she began to writhe and squirm, her heels digging into the bedspread. Collins was experiencing intense physical pleasure, but equally arousing was the mental knowledge that she had a cock buried in her pussy. She let go of her breast and lowered the hand to her sex. She began rubbing her clitoris with the pad of a finger and pushed her cock as deep as it would go.\n\nThen Collins turned on the vibrations.\n\nShe screamed out in euphoria when her orgasm came and tears of joy dripped from her eyes. Her entire body shook and her head thrashed from side to side against the pillows. Her hand was a blur, pumping her buzzing cock in and out at a blinding pace before it all became too much. She turned the vibrator off but left it buried deep within herself. Her thighs shook with several spasms as her orgasm ran its course.\n\nWhen it was over, her body went limp and she lay prone. Her cock slid outward halfway, pushed by her contracting pussy muscles, before stopping and hanging out of her cunt limply. A puddle of blood mingled with her vaginal fluids stained the bedspread beneath her ass, but she didn't notice the mess nor did she care. The only thing on her mind was how unearthly her orgasm had been\n\nFrom a technical standpoint, Collins was no longer a virgin; she had taken her first cock and it had been heavenly. She wondered how long she should wait before doing it again.\n\n*****\n\nThe rest of the week was a blur and the days all blended together for Collins. If she wasn't at school, she was locked in her room fucking herself with her cock. She set her alarm to wake up early so she could fuck herself in the morning. She rushed home from school so she could fuck herself in the afternoon. She turned in for bed early so she could fuck herself at night. When she wasn't fucking herself with her cock, she was thinking about the next time she could fuck herself with her cock.\n\nAs she rode the school bus home on Friday afternoon, Collins was thinking how amazing it would be to have a whole weekend to herself. Her mother had to work and Collins was planning on spending two days alone doing nothing but stuffing herself full of her cock.\n\nThe carnal thoughts were momentarily interrupted by the ringing of her cell phone.\n\n\"Hey cuz,\" her cousin greeted.\n\nCollins smiled, \"Hi, Rachel.\"\n\n\"What are you doing tonight?\"\n\nCollins immediately thought of her cock, \"Uh, nothing?\"\n\n\"Great,\" Rachel exclaimed. \"I'm coming over. I raided my old man's liquor cabinet and we're going to celebrate your birthday.\"\n\n\"I don't know...\" Collins sounded hesitant. She was really looking forward to fucking herself with her cock.\n\n\"Come on, Collins! You're eighteen years old! You can't live the rest of your life hanging out at home all by yourself on a Friday night.\"\n\n\"Okay,\" Collins relented. She always struggled to refuse her cousin anything, \"What time do you want to come over?\"\n\n\"I'll be there around seven,\" Rachel promised.\n\n\"Perfect,\" Collins agreed. That would give her some time to be alone with her cock.\n\n=====\n\nLying atop the bed naked, as she had done every afternoon that week, Collins plunged her cock in and out of herself. She had cum six times and was working on a seventh orgasm. Her cock's buzzing rubber surface glistened from her pussy juices, as did the skin of her ass cheeks. Her legs were curled high in the air and she was reaching around, under her creamy thigh, gasping repeatedly with orgasmic bliss.\n\nCollins loved her cock. She was addicted to it. She could have lain there all night fucking herself silly if her cell phone's alarm hadn't gone off. Collins had wisely set it to remind her that Rachel was coming over; she'd need time to shower and get ready. Reluctantly, she pulled the cock out of herself and rolled out of bed. Grabbing a towel, she started towards the bathroom. She stopped in the doorway and glanced back to where her cock lay mingled with the sheets.\n\nWhat the hell, she thought.\n\nFive minutes later, hot water cascaded over her naked body and she was moaning in ecstasy. One arm was stretched out against the tiled shower wall and she stood with spread legs driving her vibrating cock up into her pussy. She imagined a hot guy was standing behind her and pumping her full of his manhood. An orgasm tore through her body and she went weak in the legs before slumping to her knees on the tub floor, but she couldn't stop. She kept plunging her cock in and out, screaming as her orgasm intensified to a frenzy of pleasurable tremors. Finally, she could take no more. She let go of her cock and let it slide out of her of its own accord. It fell and bounced on the tub floor between her knees before going prone. It took several long moments before Collins regained her senses.\n\nAfter she caught her breath and opened her eyes, Collins looked down at her cock. It was making quiet buzzing noises and she suddenly wanted it again. She wanted to pick it up and shove it back into her pussy where it belonged. She wanted to fuck herself senseless and cum over and over. But her cousin would be there soon; reason temporarily overcame the insane lust she felt for her cock.\n\nThere was barely enough time for Collins to dry her hair and pull a pair of jeans on before she heard Rachel let herself in.",
        "\"Collins? You home?\"\n\n\"In here,\" Collins called from her room. She hastily grabbed a tee shirt off the bed.\n\nRachel appeared in the bedroom doorway dangling a bottle in her hand, \"Look what I brought...\"\n\n\"What is it?\" Collins asked, pushing her glasses up the bridge of her nose.\n\n\"It's rum, silly.\"\n\nCollins immediately thought of pirates, \"Rum? What does it taste like?\"\n\nRachel gave her cousin a dubious look, \"Don't tell me you've never had rum?\"\n\nCollins offered a tiny shake of her head, \"I had half a beer once?\"\n\nRachel strutted into the room, \"Unbelievable. You need to loosen up, cuz. You know that?\"\n\nIf a social opposite of Collins existed in the world, she was fairly certain her cousin Rachel was it. Rachel was the popular, outgoing cheerleader who dated jocks and college guys. She was daring, carefree, and fearless. Collins was always envious of Rachel's ability to jump into life's experiences without a second thought, never fearing the consequences. Rachel was also intimidatingly beautiful. She dyed her hair red, a deep burgundy color that contrasted perfectly with her tan skin. She had amazing green eyes and a perfect pair of legs which she flaunted by always wearing short skirts. But even though Collins had always been more of an outcast, Rachel never treated her that way. Collins loved her cousin dearly; Rachel had been her best friend ever since the girls were toddlers.\n\n\"Tell you what,\" Rachel announced as she sat the bottle on Collins' desk, \"you go find us some mixer so we can get our buzz on, and I'll check the movie times at the mall. Maybe we can find some hot boys tonight, too\"\n\n\"Okay,\" Collins smiled brightly. \"Um, what mixes well with rum?\"\n\n\"Coke,\" Rachel said while opening Collin's laptop. \"Or orange juice.\"\n\n\"Got it,\" Collins vanished towards the kitchen.\n\nRachel pressed the SLEEP button on her cousin's computer to wake it up. After a few moments the screen came back to life and the display returned. Unfortunately, Collins hadn't closed out all the windows she had been viewing the last time she used her laptop and a dirty picture was centered on the screen.\n\n\"Oh my god,\" Rachel laughed. She was looking at a close-up of a cock that looked flush from a recent orgasm. A dollop of thick semen hung from its tip, frozen in time.\n\nCollins reappeared with two glasses, ice, and a can of coke, but she froze with panic when she saw what Rachel was looking at.\n\nRachel teased her cousin, \"This is a really nice picture you have here, Collins. I wonder what you were up to before I came over.\"\n\nCrimson filled Collins' cheeks. She quickly moved to set her items on the desk and reached for the mouse, intending to close the window.\n\nBut Rachel pushed her hand away, \"Were you touching yourself before I showed up?\"\n\n\"Rachel, please. This is so embarrassing...\"\n\n\"Don't be embarrassed. You have really good taste in dick!\"\n\nCollins glanced at her cousin. Both girls suddenly erupted with a fit of giggles.\n\n\"I can't believe you,\" Rachel turned back to the pornographic picture. \"I always thought you were a total prude.\"\n\nCollins sighed. There was no point in hiding it any longer, \"I really love cock.\"\n\nRachel glanced at her cousin's language and laughed, \"Wow, I guess I was I wrong about you.\"\n\nCollins was surprised how liberated she felt after her simple admission. She was afraid Rachel was going to think she was some kind of freak, but as her cousin poured the drinks the two girls continued laughing and giggling.\n\n\"You should see this site I go to sometimes,\" Rachel said as she opened a web browser. \"It's unbelievable.\"\n\nCollins fetched an extra chair and sat beside her cousin, \"What is it?\"\n\n\"It's like a chat room,\" Rachel explained while typing in an address, \"where you can initiate private chats and cam shows. It's pretty much filled with guys looking for cybersex.\"\n\n\"Seriously?\" Collins tried a sip of her drink. It was potent and tasted foul, but she forced herself to take another swallow. Her eyes went wide when the site populated and she saw the vast list of people logged into the chat room, \"All those people are looking for cybersex?\"\n\nRachel logged in under the name 'HotRachel' and entered a chat room dedicated to people with cams, \"The guys are so horny. They'll do anything if you give them a little encouragement.\"\n\nCollins watched with rapt interest, \"Like, what kinds of things?\"\n\nRachel lifted a shoulder and reached for her drink, \"Jerk off, usually.\"\n\n\"Oh, I want to see that,\" Collins quickly said.\n\n\"Okay,\" Rachel grinned. \"Let's see... you can usually tell which guys want to put on a show by their login names.\"\n\nRachel initiated a private chat with someone named '10incher'.\n\n_HotRachel: hi, is it really 10 inches?\n\n_10incher: you know it baby\n\n_HotRachel: my friend and i don't have a cam but we'd love to see a show\n\n_10incher: text me a pic and i'll do it\n\n_HotRachel: okay give me your number\n\nCollins looked surprised as she watched the conversation on screen, \"You're going to send him a picture of yourself?\"\n\nRachel reached for her purse and dug out her cell phone, \"Nope, I'm going to send him a picture of you.\"\n\n\"What!?\"\n\n\"Relax,\" Rachel activated the camera on her phone. \"Just lift up your shirt. I promise I won't get your face in the shot.\"\n\n\"But Rachel...!\"\n\nRachel lifted a brow, \"Do you want to see this guy jerk off or not?\"\n\nCollins glanced back to her laptop's screen. She really did want to see a cam show of a guy jerking off. She had dozens of videos of men masturbating, but there was something intoxicating about the idea of a live amateur guy doing it just for her.\n\nCollins started untucking her tee shirt, \"You promise? Not the face?\"\n\n\"I promise,\" Rachel assured her.\n\nCollins hiked her tee above her breasts which were bare underneath. She was a 36C with full creamy-skinned boobs that hung against her ribcage like two pillows of soft flesh. Collins had always been self-conscious about her breasts, worried that they were too saggy to be of any interest to boys.\n\nRachel's phone made a flash followed by a clicking noise, \"Great, I got it.\" Her thumb was a blur as she sent the photo-text.\n\nCollins reached for her drink again and took another long swallow, \"I can't believe I just did that.\"\n\nRachel was grinning from ear to ear, \"He's going to love it.\"\n\n_10incher: wow you have really great tits!\n\nRachel laughed, \"See!\"\n\nCollins blushed furiously.\n\nWithout warning, a window popped open as '10incher' initiated a connection. There was an image of a guy from the waist down and he had his erect cock in hand. Collins wasn't sure if it was ten inches long, but if not it was certainly close.\n\n\"Look at that thing,\" Rachel enlarged the window to consume the whole screen. \"He's friggen huge!\"\n\nThe man was slowly stroking his length, pausing briefly to adjust his web cam and center the picture on his cock. He was using some kind of lubrication which Collins guessed was hand lotion.\n\nCollins couldn't take her eyes off the screen, \"Do you think we'll get to see him cum?\"\n\n\"God I hope so,\" Rachel stared. She started typing dirty messages into the chat window, telling the guy how much she liked his cock and asking him to stroke it faster.\n\nCollins paid little heed to the conversation, her attention focused instead on the magnificent cock getting worked over right in front of her. She desperately wanted to start masturbating, but with her cousin sitting right next to her it was out of the question.\n\n\"Check out all his pre-cum,\" Rachel pointed at the screen. \"It looks like a steady stream of syrup flowing out of his dick!\"\n\nThen the man reached for something. Collins saw it was his cell phone, which he held to look at. She realized he was looking at the picture Rachel texted him \u2013 the picture of her! Collins grew dizzy with the knowledge that he was masturbating to the image of her breasts. It was like he was jerking off just for her.\n\nHis hand sped up until it was a pumping blur.\n\n\"Jesus,\" Rachel whispered. \"He's going to pop...\"\n\nCollins' eyes grew wide when the guy suddenly stopped stroking and grasped the base of his shaft tightly. His cock seemed to strain against the pressure, the slit at its tip gaping open. Without even thinking about it Collins reached aside and took her cousin's hand. Rachel reciprocated, squeezing back. It's as though the two were sharing a monumental event of great significance.\n\nThe cock seemed to heave of its own accord and a thick wad of pearly white fluid shot into the air. Both girls made a gasping noise in unison as it fell and splattered across the guy's stomach. He fired a total of three massive cum ropes before the last of it simply gurgled out the tip of his cock and flowed over his fingers.\n\n\"Look at it all!\" Rachel exclaimed.\n\n\"He came for me,\" Collins murmured softly.\n\nRachel glanced aside at her cousin and saw Collins staring at the screen in amazement.\n\n\"Did you see that?\" Collins asked. \"He was looking at my picture when he came.\"\n\n\"I know,\" Rachel giggled out a laugh. \"He must have really liked your boobs, because he fired out a whole shit-load of gunk.\"\n\nCollins let go of Rachel's hand and took her drink. She tipped it back and swallowed nearly the whole thing. \"Let's watch another one,\" she gasped afterward, pushing her glasses up her nose.\n\nThree hours later, both girls were suitably drunk and the content of the rum bottle was significantly diminished. All thoughts of attending a movie had fled their minds as they continued to talk guys into masturbating for them on cam. As soon as one would orgasm they'd start looking for another. Collins couldn't remember a time when she'd had more fun. They laughed, giggled, and stared in awe every time they watched another guy cum.\n\n\"You better stay here tonight,\" Collins suddenly suggested. \"It's getting late and I don't think you should be driving.\"\n\n\"We better hide this bottle,\" Rachel stood from her chair and almost fell.\n\nCollins laughed, reaching out a hand to help support her cousin.\n\n\"If your mom found out we sat here and killed a half-bottle of rum she'd kill me.\"\n\n\"And then she'd ground me,\" Collins added.\n\nSnatching up the bottle Rachel moved towards Collins' dresser to hide it in a drawer, \"Can I sleep in here with you?\"\n\n\"Of course,\" Collins nodded and unbuttoned her jeans. She had a large queen-sized bed which was big enough for both of them.\n\n=====\n\nThe very next morning, after recovering from a mild hangover, Collins found herself at the nearest mall shopping in the electronics store. After the online adventure she shared with Rachel it was absolutely necessary Collins obtain a webcam. Though she had watched dozens of videos of men masturbating, that didn't compare to the thrill of watching it live. What made it even more exciting was that the boys were jerking off to a picture of her breasts. Collins liked being the object of their arousal. She needed to take it to the next level.\n\nA young salesman with slicked-back blond hair and a white shirt approached Collins as she stood in the PC accessory aisle. \"Can I help you?\" he offered.\n\nCollins looked at his name tag, \"Hi, Lucas. I want to buy a webcam for my laptop, but there are so many to choose from.\"\n\n\"I can help you with that,\" Lucas smiled. \"What kind of functionality do you need?\"\n\nCollins gave him a questioning regard, \"I'm sorry?\"\n\n\"I mean, what do you need it for? Will you be taking a lot of still photos? Or do you need it for video conferencing?\"\n\nCollins wasn't sure how to answer his question. It would be embarrassing to say what she really needed it for, but she also wanted to obtain the best webcam to suit her needs. After looking around to see if anyone else was nearby she decided honesty would be the best course of action.\n\n\"I want to have lots of cybersex,\" Collins whispered.\n\n\"Oh,\" Lucas blinked with surprise. \"Um...\"\n\n\"Do you have one you can recommend? I'd like to get the best one available.\"\n\n\"Well,\" Lucas cleared his throat and reached towards the shelf. \"This model would certainly suit your needs. It offers the finest clarity of all our models.\"\n\nCollins took the box and examined it.\n\n\"Do you need a microphone, too?\"\n\n\"I don't know,\" Collins admitted. \"Do you think that's a good idea?\"\n\n\"Possibly,\" Lucas nodded. \"A lot of cam sites these days also offer two-way voice capability. That way you don't have to type to communicate with whoever you are, um... chatting with.\"\n\n\"I think that's a good idea,\" Collins decided. \"I'll definitely want to have my hands free.\"\n\nLucas couldn't help but grin towards Collins' honesty, \"Right. We have some units over here I can show you.\"\n\n=====\n\nAs Collins rode the bus home she was quite pleased with her purchases. Lucas the salesman had proven very helpful and he had given her his business card in case she had any problems with instillation. He even wrote his private cell number on the back!\n\nCollins was home by lunchtime and found that her mother had already left for work. An hour after that she had the webcam and microphone hooked up and the requisite software installed. It was time to test everything out.\n\nShe started by calling up her browser history and found the site Rachel had shown her the previous night. Within seconds Collins was logged in and trolling through chatter profiles looking for boys who sounded horny.\n\nChatters on the site set a profile when they logged in, indicating what they were looking for. Some were looking for online text chatting. Some wanted phone sex. Collins concentrated on the guys who were seeking 'cam2cam', preferably someone who had a microphone like she had. It didn't take her long to find a guy; he claimed he was twenty-two years old and 'hard as a rock'. Collins stripped naked and fetched her dildo before inviting him into a video chat.\n\nA window popped open showing a naked guy from the neck down. He was a bit chubby but Collins truly didn't care about that. What was far more important to her was the six inches of circumcised cock sticking up from between his legs.\n\n\"Hi,\" Collins spoke towards her microphone. \"What's your name?\"\n\nThe guy's voice came through her computer speakers, \"I'm James.\"\n\nCollins offered shyly, \"You have a nice cock, James.\"\n\n\"Thanks. You look really sexy, too.\"\n\nShe smiled and blushed. Collins had always been self-conscious about her body. It's not that she was overweight, but Collins wasn't a skinny rail like her cousin, either. Regardless, as soon as James took his cock into hand and began stroking it she felt like the sexiest girl in the world.\n\n\"Fuck, you have nice tits,\" Jack said as he started masturbating. Collins watched as he squeezed some clear lube out onto his shaft.\n\nShe wanted to turn him on, so Collins cupped her hands beneath her breasts and squeezed them. She leaned towards her webcam so James could see her nipples puff out.\n\n\"Oh, yeah,\" James moaned. \"Squeeze your tits for me.\"\n\nCollins mashed her breasts together between her hands and dug her fingers in deeply. She knew she was doing something right as James began pumping his cock at a much swifter pace. She wanted to encourage him.\n\n\"Jerk your cock for me,\" she said, hoping she didn't sound too silly. Collins didn't have a lot of experience talking dirty, \"I like watching you jerk-off your cock.\"\n\n\"Fuck yeah. You're a dirty slut, aren't you?\"\n\nCollins felt a twinge between her legs, like a tuning fork had just gone off within her vagina. She liked that. She liked being called a slut. She didn't know why; maybe because it was true. She certainly felt slutty for letting a complete stranger watch her play with her naked breasts while he masturbated.\n\n\"Lick them,\" she heard James command her. \"I want to see you suck on your own nipple.\"\n\nCollins found herself wanting to please him. She lifted her breast in a cupping palm and lowered her chin to meet it. She stuck her tongue out to swath it against the nipple, causing it to immediately stiffen.\n\n\"You nasty slut,\" James moaned. \"Suck on it. Suck on your own tit.\"\n\nCollins had to pull on her breast, stretching the milky white skin surrounding her flesh in order to situate the nipple between her lips. She suckled on it for him, making soft moaning noises as she did so. She liked pleasing him and saw the results on her laptop screen - James was vigorously masturbating, his hand a pumping blur.\n\n\"Let me see your cunt,\" James said.\n\nThe tuning fork went off again. Collins liked it when he used filthy language. Something about the word 'cunt' sounded so raw to her, like pure sex. It made her feel as though her vagina was an object of sexual lust.\n\n\"Okay,\" Collins replied before letting her breasts fall back to hang against her sternum. She rose from her chair and moved so that James had a clear view between her milky thighs.\n\n\"Fuck yeah,\" James prodded her. \"Show me your hot cunt, baby.\"\n\nCollins shivered when he said the word 'cunt' again. She spread her feet slightly and then used a pair of fingers to peel her labia apart for him. Glancing at her screen Collins could see the view James was getting. She liked how her pussy looked. She didn't like pubic hair and had been trimming her bush down to a stubbly patch ever since puberty. Her pussy lips glistened with arousal and the nub of her clit was poking out.\n\n\"You got a sexy fucking cunt. I want to fuck your cunt so bad.\"\n\nCollins gasped at the dirty words and couldn't take it anymore. She reached for her rubber cock and positioned its head at the entrance of her sex. \"I'm going to fuck my cunt for you,\" she suddenly said, hoping her words didn't sound too corny.\n\n\"Oh yeah, baby. Fuck yeah. Fuck your cunt. Stick that big cock into your cunt.\"\n\nCollins was beside herself at how much the crude talk was turning her on. She stood in front of her cam and stabbed her cock into her slit. The entrance went smoothly, since she was soaking wet, and before long Collins was thrusting her cock in and out with a practiced pace.\n\n\"You're going to make me fucking cum,\" James declared.\n\n\"I want to see it,\" Collins whimpered. \"I want to see your cum shoot out. I'm a naughty slut who likes to watch boys jerk-off and cum.\"\n\n\"Oh fuck,\" James moaned. His hips began violently thrusting his cock upwards into his pumping hand.\n\n\"Do you like looking at my sexy cunt?\" Collins asked.\n\nJames could only grunt out his approval; he was obviously close to orgasm.\n\n\"Do you want my cunt?\" Collins continued, delirious with arousal. \"Do you want to fuck my hot cunt? I want you to. I want you to stick your cock into my cunt and fuck me so hard. Fuck your cock into my cunt... into my wet, juicy cunt!\"\n\nJames let out a scream that filled her bedroom. Collins watched his cock erupt, shooting a wad of thick semen into their air. It landed on his chest. More spurts followed, though they only made it as far as his chubby stomach.\n\nWhen Collins saw how much pleasure her naked body and dirty language caused in James, her pussy exploded. The orgasm was like a fiery inferno and hot fluids dripped down the shaft of her dildo as she jammed it in and out of herself. The experience was so potent that Collins fell backwards into her chair, though she refused to relent and continued savagely masturbating herself.\n\nJames ended the chat immediately after he came but Collins didn't care. Hoisting her legs to dangle over the arms of her office chair and spreading her thighs wide, she turned on the vibrations in her cock and began to whimper and gasp. The leather seat of her chair became slick beneath her ass where lubrication leaked profusely out of her sex, but Collins hardly noticed. She was lost in a multi-orgasmic seizure, fucking the buzzing toy repeatedly against her G-spot.\n\nCollins would have sat there all night fucking herself to the shivering orgasm, but after a few minutes the pleasurable waves finally stopped emanating from her pussy. She turned off the vibrations and looked down between her legs through eyes lidded by exhaustion. The chair glistened from her secretions, as did the inside of her thighs. Her cock stuck out from between her labia obscenely, slowly slipping out of her passage. The orgasm took a lot out of Collins and she couldn't do any more than sit in her chair, motionless, and stare at the mess she made.",
        "After several long moments, she finally leaned forward and worked her mouse to close out her browser and cam application. She weakly unhooked her legs from the arms of her chair and rose, pulling the cock out of her insides. Collins made it as far as the bed, pulling back the sheet to lie down. She curled up with her cock, the sticky thing clutched against her chest like a child's doll, and fell asleep.\n\n=====\n\n\"Collins? Sweetie, are you awake?\"\n\nCollins awoke slowly to the voice outside her bedroom door. She briefly wondered at the time before she heard the door start to open. Panic struck.\n\n\"Collins?\" her mother repeated.\n\nCollins quickly tugged the sheet up over her naked breasts and pushed her sex toy under the blankets, \"Mom?\"\n\n\"What are you doing in bed, honey?\" Deborah worried over her daughter, \"Are you feeling ill?\"\n\nCollins clutched the sheet over her naked form and shook her head, \"No, just tired I guess. I needed a nap.\" She noticed her mom was still dressed in hospital scrubs, \"How was work?\"\n\n\"Busy,\" Deborah replied while gathering some discarded clothes from the floor. \"The ER was swamped and needed extra nurses so I ended up dealing with broken bones and two stab victims all afternoon. How was your day? I hope you didn't spend your whole Saturday in bed?\"\n\nCollins glanced over at her laptop, \"No. I did some stuff online for a while, and homework.\"\n\n\"Well, get your lazy bones out of bed and come down for supper. It'll be ready in a few minutes.\"\n\nCollins let out a sigh of relief that her mother didn't seem to suspect anything amiss. She crawled out of bed and made sure her bedroom door was closed before digging her cock out from under the sheets and hiding it within a nightstand. After getting dressed and wiping the film of sexual pleasure off the seat of her desk chair, Collins went downstairs to join her mother for supper.\n\nRealizing she never had lunch, Collins felt energized after eating and decided to do some homework in the living room while her mother relaxed in front of the television. She did her best to concentrate on math and managed to do so for a while, but eventually her mind began to stray. She thought of her rubber cock fondly and anticipated the next time she could get it between her legs. They had only been apart for a short time but Collins missed her cock. She missed the way it filled her up and gave her such amazing orgasms.\n\nWhen she felt the dampness between her thighs Collins suddenly gathered up her books, \"I think I'm going to turn in, mom.\"\n\nDeborah gave her daughter a worried glance, \"Are you sure you're feeling all right, honey? It's only nine.\"\n\nCollins nodded assuredly, \"I'm just tired, it's been a long week. Plus, Rachel and I stayed up really late last night gabbing and stuff.\"\n\n\"Okay. Well, sleep well. Remember I'm working another extra shift tomorrow, but there are leftovers in the fridge for lunch.\"\n\nCollins thanked her mother and kissed her on the cheek before hurrying upstairs to her bedroom. She closed the door and dumped her books in a corner. She stripped off all her clothes to a pile on the floor and moved to the nightstand where she had hidden her cock.\n\n\"Hey lover,\" she said to the rubber object once it was in her loving hands. She crawled onto her bed, \"I missed you so much.\"\n\nOn her hands and knees, Collins lowered her head and pressed the side of her face against the bedspread to support her upper body weight. Sticking her naked ass into the air she reached between her legs and positioned her cock just-so. The entrance was smooth due to the fact that Collins was already moist with anticipation. She let out a soft moan as the bulky head of her cock invaded her insides. She could feel the veiny shaft sliding against her labia and clitoris, its surface still sticky from the last time it was within her.\n\nIt wasn't long before her cock was slick with renewed arousal and sliding in and out with ease. Collins flipped the switch on the base of her toy and began squirming as the gentle buzzing vibrated against the walls of her passage. Leaning on her head, Collins was able to use both hands between her legs. One manipulated her cock in and out while the other fondled her clitoris. It wasn't long before her fingers were sticky with leaking fluid.\n\nUnable to find her magic spot, Collins rolled to her back and lifted her knees. She probed gently with her buzzing cock, poking it back and forth, until it hit her G-spot. One big shiver consumed her entire body and Collins had to remember not to scream. Instead, her mouth hung open in a silent expression of ecstasy while she assaulted her pleasure-point. Her other hand reached out and grasped at the bedspread, her fingers digging in and clutching desperately. An orgasm was slowly building and Collins feared for her silence.\n\nNot wanting to alert her mother, she frantically grasped for a pillow. Her hand fell upon one and Collins swiftly lifted it to her face. The silencing tool arrived just in time as tingling orgasmic waves swept through her tummy and thighs. Collins cried out, though the sounds were muffled perfectly.\n\nWhen that orgasm ran its course, the self-pleasure didn't end. Collins continued fucking herself with her cock or simply rubbing the vibrating toy against her sensitive clit. Her pussy grew red and puffy from the abuse, but Collins couldn't stop.\n\nGlancing at the clock, she realized it was two o'clock in the morning and that she had been at it for the better part of five hours. But Collins loved her cock and she was addicted to the orgasms it gave her - like a drug. She knew she needed to stop; she could feel the soreness between her legs. Reluctantly, she slid her cock out and relaxed atop her bed.\n\nThe cock was soaked from her vaginal fluids which literally dripped from its surface. Several wet spots stained her bedspread. The inside of her thighs were wet and the crack of her ass was sticky. Collins wondered how she could produce so much cum, studying her cock fondly.\n\nShe also wondered what she tasted like.\n\nLifting her cock, Collins licked it out of curiosity. It was a pungent but sweet flavor. Tasting again, Collins found that she liked it. It turned her on to taste her own pussy juice and soon she was lapping at her cock like it was a Popsicle, cleaning it of the sweet fluids. By the time she was done Collins was dizzy from the thought of tasting her own sex. Her pussy ached, but not with soreness. It ached with need.\n\nSo Collins plunged the cock back into her depths and began fucking herself once more.\n\n=====\n\nClothes lay scattered about the bedroom floor, panties and jeans alike discarded haphazardly. The blinking of a dozen chat requests decorated the laptop screen, which also displayed a webcam window long dark from inactivity. The room reeked of sex and stale cunt juice.\n\n\"Jesus Christ,\" Rachel muttered as she walked into her cousin's room.\n\nCollins lay fast asleep, face down on top of her bed. No blankets covered her nude form and she was positioned spread-eagled, her bare white ass on full display and a rubber dildo halfway inserted into her vagina. The bedspread was littered with a dozen damp spots that had only begun to dry.\n\n\"Collins,\" Rachel laid a hand to her cousin's shoulder and shook her gently. \"Collins, wake up.\"\n\n\"Hmm?\" Collins stirred, her eyes squinting to guard against the morning sun.\n\n\"Are you okay?\" Rachel worried. \"What the hell happened here last night? Did you have an orgy or something?\"\n\n\"Huh?\" Collins lifted her head, confused. She felt a slight pain between her legs.\n\n\"Collins,\" Rachel fretted, \"are you on drugs?\"\n\n\"What?\" Collins wiped at her face. \"No... oh my god...\"\n\nCollins realized she was naked. She also realized where her cock was. \"Oh god...\"\n\n\"Did you know you have a dildo hanging out of you?\"\n\n\"Oh god,\" was all Collins could think of to say. She was mortified that Rachel was seeing her this way. \"I was... I was...\"\n\nShe sat up while trying to stammer out an excuse and grasped her cock. Collins winced as she slid the thing out as everything down there had dried up.\n\n\"Jesus, Collins.\" Rachel laid a hand at her cousin's back. \"Did you have a boy here last night? Did he take advantage of you, or something? Were you... raped?\"\n\nCollins swiftly shook her head and rose from the bed, \"No! No, it was nothing like that.\"\n\nRachel watched as Collins slipped a robe over her naked body, \"Are you sure? You can tell me anything. You know that, right?\"\n\n\"I was...\"\n\nRachel moved forward and put reassuring hands on Collins' shoulders, \"You were what? What is it, hon? You can tell me.\"\n\nCollins' cheeks colored bright crimson, \"I was masturbating.\"\n\nRachel's eyebrows lifted, \"Huh?\"\n\nCollins let out an ashamed sigh, \"I was masturbating, okay? It was late and I must have fallen asleep. God, I'm so embarrassed. You must think I'm a total freak of society.\"\n\nRachel quickly grasped her cousin in a loving hug when she saw tears falling down Collins' cheeks, \"I don't think you're a freak! It's just that when I saw you like that I thought maybe you hooked up with some guy and he slipped you something or... god. I'm just glad you're okay.\"\n\nCollins hugged Rachel back in a tight grip, \"You really don't think I'm some sick weirdo?\"\n\nRachel laughed against Collins' shoulder, \"Of course not. You're not the only one with a dildo, you know. But be honest with me. What's going on with you?\"\n\nCollins let go of Rachel and sat at the edge of her bed, \"W-what do you mean?\"\n\nRachel spoke gently, \"I mean, I found you spread out on your bed with a dildo hanging out of your lady-parts. It's a little... unusual, don't you think? How long were you at it, last night?\"\n\n\"I don't know. I-it's just that... I can't stop,\" Collins admitted softly. \"It feels so good and when I start... I can't resist doing it over and over again.\"\n\n\"I get it,\" Rachel sat next to her cousin and wrapped an arm around Collins' shoulders. \"I was the same way after I got my first sex toy.\"\n\nCollins wiped a tear off her cheek, \"Really?\"\n\n\"Sure,\" Rachel nodded. \"I could barely keep it out of myself. I was using it, like, all the time.\"\n\nCollins breathed out a teary laugh and pushed a hand through her black hair, trying to keep the mess out of her face.\n\n\"You want to know a secret?\" Rachel whispered.\n\nCollins glanced at her.\n\n\"I lost my virginity to my first dildo.\"\n\nCollins smiled. \"Really? Me too.\"\n\n\"I thought so. So, you haven't been with any boys?\"\n\nCollins shyly shook her head.\n\nRachel squeezed her cousin, \"We just need to find you a boyfriend, that's all. You're going to be okay.\"\n\n\"Thanks Rachel,\" Collins sniffed. \"You're the best.\"\n\n\"I know,\" Rachel agreed with a teasing smile.\n\n=====\n\nAfter getting herself and her room cleaned up, Collins rode with Rachel to a nearby bar & grill for lunch. (Another nice thing about Rachel was that she had a car.) They chose a booth in the corner so they could talk and not be overheard. Fortunately the restaurant wasn't crowded and the girls were served their salads quickly.\n\n\"So when did you get it?\" Rachel asked as she poured dressing.\n\n\"Get what?\"\n\n\"You know. Your toy.\"\n\nCollins spread a napkin over her lap, \"You mean my cock?\"\n\nRachel grinned at her cousin's blunt description, \"Yeah.\"\n\n\"Last week. On my birthday. I went to that sex shop downtown.\"\n\n\"Ew,\" Rachel made a face. \"You mean that grungy place on Washington?\"\n\nCollins nodded, \"Yeah.\"\n\n\"Collins,\" Rachel chided, \"that place is for pervs and pedos. You should have ordered one online; you could have been raped, or worse.\"\n\n\"My mom checks my credit card bill,\" Collins explained. \"And it wasn't that bad. Actually, this guy who worked there seemed pretty harmless.\"\n\n\"Well yeah, the employees are fine. It's the creepy guys who go up to those sleazy porn booths that scare me.\"\n\nCollins looked to her cousin, \"Yeah, the cashier mentioned those. What happens up there, anyway?\"\n\n\"There's all these little rooms,\" Rachel explained. \"Like the size of bathroom stalls. There's a TV in there and they show different channels of hardcore porn.\"\n\n\"Really?\" Collins took a bite of her salad, curious how her cousin always seemed to know so much about the taboo side of life.\n\n\"Yeah, but the creepy part is the glory holes.\"\n\nCollins didn't understand, \"Glory holes? What are those?\"\n\n\"There are these holes in the walls between booths,\" Rachel described. \"Guys stick their dicks through them hoping that whoever is on the other side sucks it or jerks them off. I don't think they even care if it's a guy on the other side, most of the time.\"\n\nCollins stared at Rachel with owlish and fascinated eyes. She remembered seeing something like that online after Rachel described it, \"Seriously? Those are for real?\"\n\nRachel nodded, \"Promise me you won't go back to that place. I don't want to see you on the evening news as a sexual-assault victim.\"\n\nCollins crossed her fingers beneath the table, \"I promise.\"\n\n=====\n\nEvery shift, whether it was day or night, brought in at least one surprising customer. Sunday was no different.\n\nRodney glanced up from the counter when the bell above the door sounded and immediately recognized the girl. She was wearing a black knee-length skirt and a purple blouse. Her straight black hair was neatly brushed and parted down the middle. Simple pumps adorned her feet.\n\n\"Well, well, well.\" Rodney closed the magazine he was reading, \"Look who's back.\"\n\nCollins smiled shyly and approached the counter, \"Hi.\"\n\nRodney lifted his chin in greeting, \"So, how'd your friend like the toy you bought her?\"\n\nCollins blushed, \"Oh, she loved it.\"\n\n\"That's great,\" Rodney smiled.\n\nCollins noticed how cute Rodney looked from two dimples on his cheeks that pitted when he smiled. His brown-colored hair looked better too; he'd recently had it cut and styled it in a spiky mess that stuck straight up. Collins guessed he was in his mid-twenties, maybe younger. She was still slightly off-put by his arm tattoos, but they weren't so bad when he wore a longer-sleeved tee\n\n\"So what can I help you with today?\" Rodney offered.\n\nCollins set her purse on the counter, \"I would like to buy some tokens.\"\n\nRodney raised an eyebrow, \"You want to go upstairs?\"\n\nCollins nodded simply, \"Yes. Why? The booths aren't full, are they?\"\n\nRodney chuckled, \"No, no one's been up there all day. Sunday afternoons aren't exactly prime-time for the porno booths.\"\n\nCollins frowned with disappointment, \"Oh.\"\n\n\"What's wrong? Were you hoping for some company?\"\n\n\"Hm?\" Collins blushed some more, \"Oh, no. Um... here.\"\n\nRodney watched as Collins removed a ten dollar bill from her purse and set it on the corner. He shrugged and opened the register, retrieving the appropriate amount of tokens. \"Have fun,\" he offered. \"Keep in mind we're not responsible for any items that get lost or stolen.\"\n\nTaking her tokens, Collins moved nervously towards the stairs. She discovered a long hallway on the floor above with rows of doors along each wall. All of the doors hung open and she peaked into a few of the booths to see what they looked like. Each one was identical, housing a simple cushioned bench and a television set built into the wall. The first several she checked smelled funny so she kept moving. About halfway down the row she glanced into a room and spotted what Rachel had been talking about.\n\nThere was a hole between it and the booth next to it.\n\nCollins swallowed nervously and gathered her nerve before entering the booth and closing the door behind her. She sat down on the bench and pulled a token out of her purse. Leaning forward she placed the token into a wall slot and pushed a button. The television came to life, displaying a hardcore sex scene between a man and a woman. It wasn't that interesting, so Collins pushed the button again. The television switched to gay porn, where three guys were all playing with one another. Though curious, Collins decided she wasn't into that either and pushed the button again. Two women appeared on the screen, their legs scissored between one another's. They were lesbians and they were mashing their pussies together in some sort of sexual act Collins had never seen, but the way the girls were moaning and gyrating she guessed it was fairly pleasurable.\n\nPressing the button one more time, Collins was treated to a close up of a girl sucking on a big cock. She liked that and settled there, digging into her purse once more. Her plan of jerking off her first real cock may have fallen through, since no one else was around, but she decided she may as well enjoy herself while there. She pulled out her rubber cock.\n\nCollins was about to hike her skirt up to her waist when she heard a noise come from the booth next door. She froze and listened to the booth's door close, followed by the lock latching. Her token was only worth two minutes of time so the television went black. Suddenly everything was very quiet and the only thing Collins could hear was the pounding of her own heart. Then it happened.\n\nA cock poked through the hole.\n\nCollins inhaled and held her breath, nervously staring at it. It was the first cock she had ever seen in real life, and it was only inches from her. It was semi-erect and bobbed slightly in the air. She guessed it was near six inches in length though Collins knew it would lengthen further with arousal. It had nice thickness and smooth skin, with a big bulbous head just like she favored. It was glorious and beautiful.\n\n\"Go ahead,\" came a coarse whisper from the other side, \"touch it.\"\n\nCollins realized she was still holding her breath and exhaled slowly while moving her hand forward. She trembled with anticipation and thought of all the times she had fantasized about a moment like this one.\n\n\"Oh god,\" she whispered silently when her hand grasped the shaft of the cock. It felt warm and firm, though still pliant. It was nothing like her rubber toy. Collins smoothed her grip down to the cock's base and then back up again, feeling every inch of it. The cock responded to her touch, hardening in her grasp and pulsing to life. She grazed her fingertips against the ridge of the cock's crown, causing the shaft to twitch.\n\n\"I want to make you cum,\" Collins said. \"Can I make you cum?\"\n\nHer only answer came when the cock was pushed further through the hole. Even the man's balls came through. They were shaved and puffy with arousal. Collins took the hint and gripped the cock firmly. She stroked it several times, staring in fascination as a dew-drop of pre-cum appeared at the cock's tip. She ran the pad of her thumb across the cock's slit and smeared the fluid around its crown. A moan could be heard from the other booth, encouraging Collins that she was doing well.\n\nPumping her hand with a steady stroking motion, Collins began jerking the cock off at a rhythmic pace. She was gentle with her grip at first, fearful of harming the cock, but quickly learned that the tighter she squeezed the louder the moans were from the other side. Every time her fist grazed over the ridge of the cock's head it seemed to leap in her hand, as though twitching with pleasure. She focused on it for several moments, jerking off just the head of it, and the cock's ridge firmed and swelled.\n\nPre-cum began to ooze freely from the cock's tip and Collins put it to use, smearing it down and lubricating the cock's shaft. Her hand slid easily along his slick skin after that and Collins increased the pace of her pumping hand.. The man on the other side started thrusting his hips, humping his erection into her hand in time with her motion. She sensed something was about to happen when the cock seemed to grow in her hand, thickening to an almost steel-like hardness. She heard a grunt, so she jerked the cock off faster. She felt the cock pulse, so she pumped yet faster. A loud groan came through the hole, and her hand became a blur.",
        "Collins flinched when she felt the hot fluid impact against her face. It took her a moment, which felt like an eternity to her, to realize it came from the cock. Another shot of cum splattered against her cheek when she turned away. She never stopped masturbating the cock and it ejected several more beading ropes, all of which landed across her nose and forehead like sticky strands of gooey jelly.\n\nCollins gasped at the feel of it. The smell of it. It was warm against her skin and carried a scent unlike anything she had ever encountered before. It was exciting and arousing. It was divine. The cock spit out one last thick glob of cum which slid out of its tip and dripped over her fingers. Without even thinking about it, Collins speared the fluid across her lips. She felt slutty and dirty, whorish almost, and she'd never been so turned on her life.\n\nThe spent cock vanished back through the hole but Collins didn't care. Her face was covered in cum and her pussy was on fire. She stood long enough to hike her skirt up her hips and yank her panties down to her ankles before sitting down again. Collins found her rubber cock laying beside her on the bench and turned it on. Her legs spread open, her eyes closed shut, and she plunged the thing into her cunt like a crack addict rabid for a hit.\n\nOne hand worked the cock in and out. The other hand rose to smear the dripping cum around Collins' face. She reveled in the carnality of it all and drove herself to a near-instant orgasm. She moaned out loud, not caring who knew or heard. She'd had a real cock in her hand! She had a real man's cum decorating her face! It was a fantasy made true for Collins and she fucked herself rabidly for several long minutes in celebration.\n\nFinally, when the euphoric sexual high subsided, Collins slumped against the booth wall and let her quivering pussy relax. It spat her cock out to the booth's floor. Collins lost track of time but eventually regained her senses enough to realize she needed to clean herself up and go home. She had to use her own panties to clean her face of the drying cum and had no idea if she even got it all.\n\nStuffing the soiled panties into her purse, Collins quietly exited the booth. She saw no one. Peeking into the neighboring booth, she found that empty as well.\n\nOnly Rodney was in the store when Collins descended the stairs, exactly as she had left him. He didn't even look up from his magazine on the counter as she walked past and exited to the street outside.\n\nCollins took a deep breath of the afternoon air. It was going to be a long bus ride, but she couldn't wait to get home and fuck herself senseless with her cock... all night long. "
    ],
    "authorname": "frozenhero1",
    "tags": [
        "teen",
        "nerdy",
        "dildo",
        "vibrator",
        "dirty talk",
        "handjob",
        "glory hole",
        "cum play",
        "masturbation",
        "addiction"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/her-first-cock-1"
}