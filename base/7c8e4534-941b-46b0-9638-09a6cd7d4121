{
    "title": "Celtic Mist Ch. 16",
    "pages": [
        "The late morning light was muted as Declan and Aoife stepped out of the shelter of the forest and found themselves in a grazing pasture. Turning north to keep their distance from Enniscorthy, they walked side by side through the grass and clover as sheep and lambs bleated and trotted from their path. Soon they climbed over a flower dappled stone wall and crossed the road to scale the wall on the other side.\n\nIn the next field, a small farmhouse was visible, and upon approaching they beheld the farmer carrying a shovel, his young son at his side. Exchanging pleasant greetings, Declan inquired where there might be a public house, and as the wee lad gaped at Declan's battered face, the man gave them directions to the village of Monageer.\n\n'Twas almost an hour's walk through the countryside, during which they happened upon occasional farm tenants but mercifully no Yeomen or Redcoats. Monageer proved to be a small village with a church and a few shops among the homes. Here and there, people were about on the main street --- men and women engaged in conversation in front of the houses, children playing. A few curious glances were cast in their direction as they passed by.\n\nThere was one tavern in town, at the end of the lane, as the farmer had described. Entering the establishment, they discovered a pleasant room with a low fire in the grate and chatting customers at the bar and tables. Declan scanned the room before selecting barstools at the far end from whence he could observe the door and windows.\n\nA middle-aged barkeeper was leaning on the counter, conversing with a man at the opposite end, but as they seated themselves, he straightened and crossed to wait upon them. \"What'll it be, lads?\"\n\n\"Tea.\" Declan looked at Aoife; she nodded. \"For both of us. What have ye to eat?\"\n\nThe man raised a finger and stepped through a doorway behind the bar. Upon his return he announced, \"Colcannon or black pudding and eggs.\"\n\nDeclan and Aoife burst out giggling at the words 'black pudding', Aoife ducking her pink face. As the puzzled proprietor continued to look at them, they spoke nigh in unison, \"Black pudding and eggs.\"\n\nAoife's face alight with mirth was so comely, Declan could scarce restrain his adoring stare...but she was a lad, he reminded himself...they mustn't draw unwanted attention.\n\nThe man soon returned with the tea. \"What happened to yer face, lad? Looks like ye've been worked over right well.\"\n\nDeclan shook his head, one corner of his lips quirking up. \"A misguided wager at the tavern last night, so it was. But you should see the other lad.\" He winked his good eye.\n\nThe hot, strong tea was a welcome restorative, doing wonders for his sore throat. They drank in wordless appreciation, Aoife wrapping her fingers about her cup and inhaling the steam. The food when it arrived was excellent as well, and Declan was by and by feeling freshly fortified.\n\nBut as equal as he now felt to confronting his dilemma, he was having no better luck finding a solution. Intermittently he glanced at the now red-haired 'lad' next to him.\n\n'Twas whilst they were eating that Aoife's hand froze upon her teacup and she sat up straight, her eyes widening. Declan took in her distressed expression, and his eyes flew to the door and windows. Finding nothing amiss, he murmured. \"Are ye ill?\"\n\nHer eyes were fixed ahead. Declan followed her gaze to the other end of the bar and beheld the barkeeper --- occupied with nothing at all extraordinary. Mystified, he looked back at her. Now she was staring at her plate, poking at the eggs with her fork as her cheeks reddened. She shifted upon her stool awkwardly. Declan's eyes dropped, and he at once perceived the cause of her discomposure: there upon the blue wool in the crotch of her breeches was a darker wet spot about the size of a gold crown.\n\nHis spunk was running out of her cunny!\n\nDeclan's own cheeks swiftly flushed as he imagined the vision between her legs. They both sat with their hot faces tilted down towards their food. All he could see, however, was her wee pink slit with a trickle of his pearly seed emerging. The sensations from earlier in the morning overwhelmed him: the sight of her wide-stretched aperture skewered on his glistening cock...the feel of the hot flesh of her vagina gripping him...the sounds of her moans and breathing. He was powerless to halt the unfurling of his machine inside his breeches, and he soon had to tug his coat forward to hide the obvious, bulging protrusion under the wool.\n\nHe took a draught of the tea, then coughed and cleared his throat. When he glanced towards Aoife, he saw her lowered gaze fixed upon his lap. A moment later, her big eyes fastened upon his. Her pale irises were glowing even as they received the burning, silent message in his own eyes. With his heartbeat quickening, Declan signaled the barkeeper and reached for his knapsack to grab his coin pouch.\n\nAs he paid, he said in a nonchalant tone, \"Do you let rooms?\" To the negative reply, he asked if there was an inn in the village. Aoife had dismounted the stool and was fussing with her knapsack straps, hiding her blushing face.\n\nAgain, the man shook his head. \"Sorry, lads, there's no inn, but ye might try Cavanaugh, the butcher down the lane. They sometimes have a room to let.\"\n\nDeclan thanked him and they headed out, he holding his knapsack in front of the indecent display in his breeches. They hastened from town, by mutual, unspoken understanding bypassing the butcher's shop --- 'twas far too personal a setting for what they were contemplating. They strode side by side along the road from town, their wits possessed only of the desperate search for a secluded place to indulge in Love's sweet commission.\n\nThe sound of approaching hoofbeats ahead of them recalled them to their circumstances, and they leapt over a stone wall to hide in a field. Two men on horseback trotted by wearing civilian garb; they were not soldiers.\n\nBut the scare kept them off the road as they roved on...the pressure of wanting waxing more and more insistent. They passed cottages, haybales, and trees...but everywhere they saw people at work in the fields. Nowhere could they find sure solitude, and Declan was nigh ready to throw caution to the wind and tumble her down behind the next shrub. Nigh an hour had passed --- at this rate they should have simply headed back to the waterfall when they had left the tavern. Now, that haven was some two hours in the opposite direction.\n\nThey were presently following a stream that separated two fields, lured by the cover of trees that grew upon its banks, but the potential opportunity was thwarted by the sighting a pair of men some hundred paces distant, walking through the young barley with hoes upon their shoulders. Declan waved friendly-like even as he shared an expression of frustration with Aoife.\n\nOnward they proceeded, leaving the farmers behind as they crossed a stone wall into the neighboring pasture. The terrain was growing slightly hillier as they continued along the stream, passing grazing sheep and nursing lambs.\n\nDeclan's attention perked as he beheld what appeared to be a ruined structure at the crest of the hill, next to the stream and attended by scattered white-flowering blackthorn trees. With the exchange of a hopeful look, they redoubled their pace, soon reaching a jumbled array of large stones. It appeared to be a fallen cromleach, so it did --- indeed, quite similar to the ancient stone structure in which they had taken shelter that night in September...the night when Aoife had fled him.\n\nIn the present case, the standing stones on one side, along with the massive cap stone had collapsed, but several large stones remained upright on the other side. The smooth granite boulders were spotted with lichen and surrounded by a riot of shamrock and varied colored flowers.\n\nThey scrambled to scout round the stones and vicinity, miraculously discovering themselves at last alone, with nary a soul in sight in the fields on all sides. Declan did not long ponder the irony of this gift after Fate's capriciousness.\n\nAs they rounded the boulders from opposite directions, they faced each other for a second --- hearts pounding and eyes fervid, then Declan leapt towards Aoife to seize her in his arms, lifting her off her feet as he bent her to his ravenous kisses. Her arms flung about his neck and her slim, warm body molded to his as their tongues and lips melded in slippery rapture. Between the push of his hips and the tightening of his arm round her waist, he pressed his aching cock hard against her belly. \"Oh lass, I'm rare famished for ye!\" he muttered between kisses.\n\nHe released her from his embrace only to frantically tug open the buttons of her coat, pulling it from her and tossing it aside. She likewise pushed his coat over his shoulders and stripped it off. Then their hands bumped together as they worked at each other's breeches --- she with his straining buttoned flap, he struggling to undo the knot of her rope belt. She won the race and next grabbed the fastening of his drawers. Simultaneously, he at last freed her rope belt and fumbled with her buttons. With his drawers undone, his raging cockstand sprang free.\n\nA whimpering sigh accompanied her renewed embrace, her small body nigh climbing up him to grind her mound against his upright iron. \"Aye, love! Aye! I want ye something fierce! Let's get these confounded breeches off ye!\" Declan growled, trying to yank the loosened garment down over her writhing hips. But some force was inexplicably opposing him, and he realized that even as he was pulling downwards, she was dropping to her knees before him with an impatient squeal, her arms yet wrapped round him and sliding down over his back and buttocks.\n\nDeclan stared in shock as Aoife, clutching the back of his thighs, lavished his privates...cock, ballocks and all...with kisses. One of her hands shifted to grasp his rigid organ and angle it down from his belly, and she at once tried to cover it with her open mouth.\n\n\"Oh God!\" Declan whispered; she was clearly attempting to mimic what they had witnessed from the wardrobe: the oral exertions of the maid Charlotte upon the Yeoman officer! But the friction between his bulbous knob and her small mouth stymied her first, brave foray.\n\nNot to be denied, Aoife hastily regrouped and began again with her lips, kissing his crown as she held the shaft in her fist. The kiss was deeper and more pointed than the first shower and incorporated the soft stroking of her wet tongue. Declan was reeling at the glorious, novel sensation of a lass's lingual caresses upon his tool...he sighed and leant back against the tall stone behind him, his thighs braced apart as Aoife knelt in the flowers between his feet. His face tilted down to watch agog as her lovely face explored his groin.\n\nArdent and agile, her tongue was all over him, painting his overheated musket with velvety swabs, coating the hot skin with spittle...her wee pink muscle traveling up and down the length of his shaft and breadth of his ruddy helmet. In evident awe, the tip of her tongue poked at the tiny hole in his cockhead. Now her eyelashes and hair were tickling his belly as she wetted the sturdy root...even lapping at his tautly wrinkled bandoliers. Declan stroked her hair as her head shifted about, freeing the fiery locks from its tie.\n\nSoon his entire affair was festooned with slobber from stem to stones and tingling in the breeze.\n\nAoife paused, her eager fingers struggling to regrip as much of his girth as she could, then her mouth...open, soft, and glossy slick...sealed to the top of his knob. She pushed down on him, her lips stretching and stretching into a wide 'O' over his cock.\n\n\"Jaysis!\" he gasped. Groaning at the exquisite sensation of her hot, wet, determined mouth covering him, Declan's fingers hovered above Aoife's head, feared that the stunning spell would break if he moved.\n\nNow the flange of his crown disappeared through the laboring ring of her lips...and she pressed on. More and more of the shaft buried itself in her mouth, sliding over the slippery muscle of her tongue as her widening eyes above evidenced her growing excitement and apprehension. A muffled sound escaped her stuffed mouth.\n\nIn earnest now did Aoife endeavor to approximate the maid's motions, drawing back and pushing down upon his throbbing column. Oh sweet Heaven! This superb bawdy act...an act of which he had long dreamed...this darling, wee lass was doing it to him! And, by God, despite her awkward inexperience, the sensations were even more extraordinary than he had imagined!\n\nDeclan stared transfixed, moaning and panting as his cock slid in and out of her sweet mouth, the engorged mast most strikingly impaling her astonishingly stretched lips...rosy and glistening in contrast with her lovely, pale face. Her heavy lashes lifted, and her luminous aqua gaze met his. The next moment, she let him slip inch by inch from her mouth's heavenly clasp, and his overexcited steed reared its ruddy head to the sky.\n\n\"You're in a right lather for a fearless fighter, so ye are,\" she teased. \"Am I doing it proper, then?\" Her tongue swabbed the junction of his shaft and crown.\n\n\"Oh, love! This fighter is set to come undone!\"\n\nA grin lit her face and her mouth plunged back down upon his imploring cockstand. \"Oh, God!\" Declan's agitated fingers grazed her head as it once more nodded up and down in the widespread flap of his breeches. The muscles in his belly, arse, and legs began to tense with the approaching crisis. Her hand upon his thigh gripped harder, and the wondrous excursions of her voluptuous, sucking lips and squirming tongue grew more and more exuberant.\n\nAgain copying the maid's ribald demonstration, Aoife's other hand now joined in the sublime venture, squeezing and pumping the pulsing shaft as the ribbons of spittle slid down from her happily overburdened mouth.\n\nDeclan ken not what was the 'proper' way to practice larking, but her fumbling, enthusiastic, spittle-slurping...oh so greedy addresses were fast catapulting him to the agony of bliss! His fingers twined in her hair, and his breaths came fast and harsh as his cock swelled yet fiercer and harder --- singing like a fresh-forged bolt of iron from his arsehole to the tip. Oh God!!\n\nThe jumbled thoughts flared incoherently...her little cunny...he wanted her cunny and to kiss her mouth...should he get over her quick and fuck her straight and true?\n\nBut the up-and-down, back-and-forth motions of her stroking mouth and hand --- the synchronous striving suction of her palate, tongue, and lips --- irretrievably fuddled any rational thinking. The tempest gathered fast. \"Mmmm...mnmnn...mmhh,\" moaned she, her head bobbing under his quaking hands, her wavy, red locks bouncing on her shoulders. Declan's thighs and belly clenched with the excruciating pleasure, and all thoughts, rational or otherwise, vanished: the rhapsody burst outwards.\n\n\"Oh, Jaysis! I'm spending! Aoife! I'M SPENDING!!\" His fingers clamped upon her scalp, and his hips and cock jerked and spasmed as one, thrusting into her avid mouth as the hot balm of Eros spurted wildly forth.\n\nHer eyes were saucers as his spunk flooded her mouth...she sucked and sucked upon his shuddering organ...sucked till his shaking body at last stilled to a panting, joyful ease against the stone behind him.\n\nOnly then did she let him slip from her warm mouth.\n\nDeclan gaped down at her, his heart in his throat. She was smiling up at him, her blue eyes aglow. Letting go her hand's grip upon his cock, she protruded her tongue, revealing a pearly glob of his spunk as well as shimmering strings stretching from the pink surface to the roof of her mouth and lips. Her fingertip reached to scoop up a dollop, rubbing it between her finger and thumb as her fascinated eyes studied it. A moment later she licked it off her fingers and swallowed it with the rest of his tribute.\n\nStanding with his tackle hanging out, Declan came over self-conscious at her curiosity. \"Does it...taste disagreeable?\" he mumbled.\n\nAoife shook her head and leant forward to kiss the head of his heavy, softening tool, then licked her lips. \"It tastes like you, Declan Muldowney...manly and sweet both, so it does.\"\n\nIn a rush of emotion, Declan grabbed her hand and pulled her up, continuing the momentum to scoop her petite figure off the ground, one arm round her shoulders and one under her knees. \"Oh, love,\" he sighed, leaning his brow against hers.\n\nWith his cock swinging, he carried her from the cool shadow of the standing stones to the south side of the cromleach, where the sun shone on the fallen boulders. Here in the green scent of the overgrown shamrock and flowers he fell to his knees and tumbled to the soft ground with her, wrapping his arms round her and drawing her close against his side as he lay back in dazed wonder.\n\nFor several minutes, Declan's breath slowly eased till it matched the languid drift of the wooly clouds above. The swell of joy was impossible --- his arms tightened to draw Aoife's upper torso over his so that her cheek rested upon his chest. He squeezed her shoulder. \"Ah Michael, that was a rare, precious treat, so it was!\" said he with a deep, happy sigh.\n\nAoife raised her head, propping her chin upon her fist on his breastbone to eye him narrowly. \"Good sir, you do ken that I'm a lass, do ye not?\"\n\nDeclan's mouth fell open and he gaped at her. \"What the Devil?! Now ye tell me?! Faith, you find me utterly flabbergasted!\" He clapped his palm to his forehead and shook his head. \"Gadzookers! That accounts for a few things!\"\n\nHer expression was quizzical, and Declan soon could no longer keep a straight face. \"I must say, I have several times in me life been called a cork-brain...perhaps deservedly so,\" he chuckled. \"But I'm not such a bumpkin that I canna tell arse from quim.\"\n\nAoife's eyes sparkled with humor.\n\n\"Nevertheless, after falling hard for the lad Michael, I must say I was indeed shocked to discover the truth when I mounted ye last night.\" He sighed dramatically. \"Despite that...erm...disappointment, I daresay I could face it again, if put to it.\"\n\nA whoof burst from his mouth as she punched him in his relaxed belly --- surprisingly hard --- then with a laugh, he seized her hands, his shoulders heaving up from the ground as they wrestled.\n\n\"You're right strong for such a wee thing, aren't ye?\" he said, grinning. He twisted and rolled so that she was now lying with her back on the ground and he was on his side next to her. Propping his head upon his hand, as he looked down at her.\n\nShe was still laughing, and Declan's heart ached at the possibility that only this day remained for him to tease her and see her laugh...indeed, to commit all the expressions of her face to his memory: her smile, her anger, her tears...her erotic transports. His eyes slowly moved over her. Her small body was clad in the mended white shirt and the oversized blue wool breeches. Tumbled about her head, her red hair was aflame in the sunlight. Shamrock and flowers --- purple, pale pink, and white --- surrounded her, as befitted a faery maiden.\n\nPlucking a purple flower, Declan traced the tiny, trembling bloom over her nose, then over the freckles upon her cheek that outlined the constellation Corvus...the Crow. It could not be simply by chance that she was marked with this telltale sign, could it? The goddess Morrigan in her guise of a crow had pointed him towards this maiden. Did she intend for them to be together? Please let it be so and not another cruel joke!\n\nAoife's laughter had stopped --- she was gazing up at him, her irises luminous like raindrops on a robin's egg, but imbued with an infinite sadness, the sight of which stirred the torment in Declan's breast. He inhaled deeply and lay back upon the verdant ground next to her, his large, solid shoulder touching her slim one through their shirts.",
        "Several minutes passed during which their eyes followed the slow movement of the clouds above them...in silence save for the intermittent birdsong from the nearby trees.\n\nDeclan railed against the incursion of time and his own awkwardness, wanting to reap every measure of intimacy possible from these fleeting moments of her companionship. At last, he cleared his throat. \"I heard you were in a convent...was that after we parted ways last September?\"\n\nAoife's head turned sharply. \"How did ye hear that?\"\n\n\"I heard your employer --- Mrs. Sutton --- discussing you with the Magistrate Jacob whilst you were sewing in the courtroom. She mentioned it to him.\"\n\n\"They were discussing me?\" She looked nonplussed. \"What were they saying?\"\n\n\"Well, the short of it is that the Magistrate was hoping to make ye his mistress, and Mrs. Sutton was decrying the possible loss of your work in the shop.\"\n\nAoife's tight countenance showed her discomposure.\n\nDeclan's voice grew harsh. \"Did that man...importune or offend ye in any way?\"\n\nShe shook her head. \"That does account for his odd behavior. He happened upon me in distress during the pitch-cappings at Bolger's malt-house and escorted me back to the shop...where his feelings became...evident...\" Spots of color appeared upon her cheeks. \"...but he pressed me not. I don't know whether to credit his restraint to a fear of the family's return or to an incongruous gentlemanly bent in an otherwise evil man.\"\n\nThere was a pause. \"Well, at least we wreaked some vengeance for Bolger and Redmond and the others,\" Declan reflected.\n\n\"Aye. Those two Yeomen holding you were the ones applying the pitch-caps, so they were.\"\n\nDeclan nodded. Their eyes fixed upon each other, expressions somber.\n\nAoife inhaled and turned her face back towards the sky. \"But, as to your question --- I did join the convent after leaving you.\"\n\n\"Was that when you cut your hair?\"\n\nShe shook her head. \"I left after my six-month postulancy. Had I stayed, my hair would have been shorn then.\"\n\n\"Why did ye leave?\"\n\n\"I knew I was not suited to the vocation.\" Aoife's fingers absently fiddled with grass blades, braiding them as she spoke. \"Despite the teachings of the Church, I could not bring my heart to trust that there would ever be justice for my family. Indeed, I even came to question whether there truly is a God...to let so many people suffer so.\" Her eyes flashed with an expression of defiance, acknowledging the blasphemy of the sentiment.\n\n\"But...I have no regrets about my time in the convent. The prayer, solitude, and contemplation brought me a measure of peace in some matters...and clarity in others. I knew that I had unresolved matters in the outside world that no amount of prayer and self-deprivation would settle.\" She shrugged. \"So I cut me hair and left Dublin to seek out Blaylock.\"\n\nHis head rotated towards her. \"The convent was in Dublin? You were in Dublin for six months?\"\n\nShe nodded.\n\n\"I was in Dublin meself part of that time!\"\n\nHer expression was curious. \"What were ye doing there?\"\n\n\"I was a lumper at the dockyards daytimes --- I loaded and unloaded ships. In the evenings I was a barkeeper.\"\n\n\"Where was this?\"\n\n\"The City Quay neighborhood by the Liffey.\"\n\n\"Did you by chance attend mass at St. Andrew's church?\"\n\n\"Aye, but not so often as I ought to have, no doubt.\"\n\nOne pink corner of Aoife's lips lifted. \"I saw you there at the Christmastide mass.\"\n\nDeclan gaped at her.\n\n\"You were with a group of people...a man with a wooden leg...some weans.\"\n\n\"That was the family with whom I was living...they owned the tavern where I worked!\" He shook his head in wonder. \"By God, you were there?! The row of nuns in the front pew?\"\n\n\"Sisters,\" she corrected. \"Aye, so I was.\"\n\n\"How I wish I had known you were there too...all those months!\"\n\nHer expression was wry. \"Back then I was in no state of mind to think on ye kindly.\"\n\nDeclan exhaled slowly. \"Aye. And I would not have faulted your hatred, for I canna forgive meself for my part in what happened to you and your family that night.\"\n\nHe sat up, looking down at her face intently, at which she stilled her restless fingers and regarded him. Without faltering, he met her pale blue gaze. \"Aoife, 'tis dreadful sorry I be for what befell your sister and your family and you, and I am sore aggrieved for being a party to it.\"\n\nAoife sat up too, leaning back on her hand as Declan continued. \"'Twas that very night that Blaylock promoted me from a simple guardsman to a member of his choice squadron. I knew not what their purpose was, but I was overwhelmed by what I thought was an honor. Up till then, I had admired Blaylock as a strong, fearless figure of a man...much to my subsequent shame...I suppose I was blinded-like by his attention after years of living homeless and reviled.\"\n\nAoife's eyes shifted to the braided leaves she was slowly turning in her fingers.\n\n\"He told me that your sister's husband had committed a crime and we were there to arrest him. I was shocked by what passed...shocked to see Blaylock's true character. I tried to reason with me conscience that there must be a decent explanation for what they were doing...that I was too much of a simpleton to understand. By God, I should have listened to me heart! I should have done something earlier --- defied orders and attacked him the moment he shot the dog!\"\n\nDeclan's face twisted and his shoulders heaved. After a moment he shook his head bleakly and concluded, \"I'm offering no excuse for meself...but I want ye to know that no soulless criminal was I...at least, I pray that you can see me true self.\"\n\nAoife arched and snapped the leaves tight between her hands for several silent moments, then tossed them aside. \"Aye, Declan Muldowney, so I do...now that me eyes are opened. I was too consumed with bitterness to appreciate all the honorable, chivalrous things ye did for me...the things ye did for Ireland. Consider that if you had defied Blaylock earlier that night --- with his other men there --- you would assuredly be dead, and I raped and likely dead too.\"\n\nDeclan swallowed and blinked. Aoife touched his knee. \"You were in an impossible situation. You did heed your conscience, most bravely, so ye did...and 'tis on that account that we are here today.\"\n\nThey stared at each other.\n\nA pair of white butterflies --- one with orange-tipped wings, one with black spots --- fluttered between them, breaking the spell. Aoife giggled; Declan took her hand and they both lay back upon the ground, side by side with their shoulders again touching.\n\n\"So, you went to Dublin as well after we parted ways,\" she mused.\n\n\"Not immediately. Seeing as how I finally remembered who I was, I first went to Kilkenny, the town of my birth, to search for me past, ye might say. I heard tell of how my family's deaths had been attributed to a terrible house fire...like I suppose he intended with yours. I found their grave marker.\"\n\n\"'Twas all that remained?\"\n\nHe nodded, and he felt the softness of her gaze as her eyes moved over his face for some moments. \"Have ye any other family?\" she presently asked.\n\nHe shook his head. \"I daresay I have aunts and uncles and cousins, but I dinna remember any names. None did I uncover in Kilkenny.\"\n\n\"Blaylock murdered your family...eleven years ago? How old were you?\"\n\n\"Nine.\"\n\n\"Why did he do it?\"\n\nDeclan told her the story of the allegorical sheep husbandry pamphlet his father had published.\n\n\"Blaylock must have been working for the Crown or some nobleman?\" she speculated.\n\n\"So it would seem. But I suspect the murders and rape were his own improvisation.\"\n\n\"A wee lad with no home and no memories...how did ye live all those years?\"\n\nHe shrugged. \"By me wits. Taking what work I could, eating from rubbish piles, begging.\"\n\nAoife's brows drew together, and her mouth turned down in a pained expression. \"You're twenty now?\"\n\n\"I am.\" He stroked her hand. \"How old are you?\"\n\n\"Eighteen.\"\n\n\"What of you? Have you any other family?\" he said, returning the query.\n\nShe shook her head. \"'My parents are long dead, and me brothers were Defenders who died in the Battle of the Diamond. 'Tis like you...I must have distant relations, but I have no further knowledge of them.\"\n\n\"Your brothers were older than you?\"\n\n\"Aye. 'Twas the four of us: Colm, Clodagh, Patrick, and meself --- I was the youngest.\"\n\n\"How long ago did they die?\"\n\nAoife pondered the question. \"Three years ago, this September.\"\n\n\"And now 'tis only you,\" Declan observed quietly, his head turned to study her face. \"'Twould seem our lives have taken strangely parallel courses.\" His heart pressed him to say more, but he knew not how to proceed. He squeezed her hand.\n\n\"When did you go to Dublin, then?\" she asked.\n\nHe cleared his throat. \"After a month or so working in Kilkenny, I returned to Kilmaedan town, intent upon killing Blaylock. But I learnt that he had returned to England. I learnt it from Fitzgibbons and Burrows.\"\n\n\"And you served them justice, so ye did.\"\n\nHe nodded.\n\n\"Were they the other two men with Blaylock the night your family was murdered?\"\n\nDeclan shook his head. \"No. I did it for your sister...your family...and all the other lasses they crowed about having likewise served.\"\n\nAoife's hand tightened upon his, and he saw the shimmer of tears in her eyes ere she turned her head away, seeming embarrassed. He held her hand fast. The warbling chirp of a bird eventually broke the silence.\n\nAoife turned back with a small smile, blinking. She drew a breath. \"How did you come to be in Enniscorthy, then?\"\n\n\"I was putting by money with the plan of seeking out Blaylock in England, but I had to leave Dublin sharpish after I resisted the press-gang.\" At her questioning look, he explained, \"The Crown's military recruiters who force lads into service. 'Tis a capital offense to resist.\"\n\nHer brows arched.\n\n\"By then I was full enflamed to join the United Irishmen...my revenge would come in time, I warranted. A friend in the tavern arranged for me to make the acquaintance of Colin Foley in Enniscorthy --- both to escape the press-gang and to further my insurgent inclinations.\"\n\nAoife nodded slowly. \"That's why you were going by a different name?\"\n\n\"Aye, so it was.\" He laced his fingers with hers. \"And you? How did you end up in Enniscorthy?\"\n\n\"After leaving Dublin, I became Michael. I too went to Kilmaedan, prepared to hunt Blaylock down, but learnt he had left several months prior. But 'twas there that I heard he was returning to Ireland to accept a military commission in County Wexford. No further details were known, so I set out to search for him in every garrison in the county.\"\n\nDeclan nodded. \"The boot black...a most effective disguise, it was. How did you change your hair color?\"\n\n\"An extract of walnut hulls and tree barks that I originally concocted back home to dye wool.\"\n\n\"'Twas a most remarkable transformation. How many garrisons did ye end up infiltrating?\"\n\nShe thought for a moment. \"Blaylock's garrison was the fifth one.\"\n\n\"You deceived five garrisons full of the Crown's soldiers...not to mention Fleetwood's United Irish company? Jaysis, Aoife! You're a damn sight cleverer than anyone I've ever met.\"\n\nAoife shrugged. \"Perhaps 'tis less cleverness and more me boyish figure.\"\n\nDeclan chuckled. \"Lass, any man who has had the privilege of seeing ye naked would take hearty exception to that slander. Aye, you're a wee thing, but you have the loveliest, fairest, female form a lad could lay eyes on...and crave to lay himself on.\" He winked.\n\n\"Have ye seen so many to be a fair judge of that?\" she teased.\n\n\"Nay, not so many. 'Tis patently obvious.\" He rolled onto his side and propped his head upon his hand as he pointedly ogled her reclining body. \"But 'tis glad I be that all those men were not disabused of their mistake.\"\n\nAoife regarded him steadily, a hint of a smile upon her lips.\n\nAfter a moment, Declan sat up fully, rotating to face her and taking a deep breath. \"Aoife...there's something I need to tell ye...to confess, as it were.\"\n\nShe raised one brow as she looked up at him. \"And what would that be? Are ye truly a lass?\"\n\nHe shook his head.\n\n\"The natural son of King George?\"\n\n\"'Tis how I learnt who Michael was.\"\n\nHer countenance became guarded.\n\nDeclan cleared his throat. \"After the mission to Wexford town when we fetched the guns from the wool merchant McBride...and he was subsequently arrested...I began to suspect that Michael might be the spy who had betrayed him. I was convinced that your connection with the garrisons was proof of your true loyalties.\"\n\nAoife's expression was intent.\n\n\"I started following you...at least I tried. But you're a wily little creature, so ye are. I tracked you to the neighborhood of the dressmaker's shop, but I lost sight of ye there. Well...'twas two weeks ago that I was walking back from Ballaghkeen after meeting with the master of the Defenders lodge there...I ducked into a forest to avoid a detachment of Redcoats on the road. As I walked through the woods, I spied Michael among the trees before me. Being convinced that you were meeting someone to pass on intelligence, I followed you...I followed you to the waterfall.\"\n\nHer eyes widened and she sat up abruptly.\n\n\"When I saw that ye only meant to bathe, I started to leave...but then off came your shirt, and I could'na help meself, so surprised was I. I...erm...I stayed and watched you.\"\n\nAoife's glare tore his heart something fierce. She twisted on the ground, presenting her back to him. \"Two weeks ago?\" she snapped.\n\n\"Aye.\"\n\n\"And what specifically did you watch, Declan Muldowney?\"\n\nHe swallowed. \"Well...you dived into the pool and swam for a bit, then ye climbed up to the falls and bathed...and...well...then ye washed your clothes and dressed as a lass.\"\n\nHer back hunched as she leant away and hugged her knees. \"Where were ye hidden?\" she groaned.\n\n\"Erm...under the pine boughs in the wee grotto where we...slept...and such.\"\n\nShe hid her face against her knees, and her back moved with her agitated breathing. Declan touched her shoulder, but she jerked away.\n\n\"Aoife, I'm so sorry for spying on ye. 'Twas wrong of me.\" He sat with his forearms on his bent knees, between them turning the stem of the purple flower he yet held. \"I think that my heart got the better of me reason, for I've been in love with you since the night I first saw you. My heart was rare sad and sick when ye vanished back in September, and since then, there's scarce been a day or night when I haven't thought on you...haven't worried about what happened to you...haven't longed for your company.\" Declan's eyes fastened upon the wispy red hairs at her pale nape.\n\nHe sighed and continued, \"When I realized Michael was you, I was dumfounded...and overjoyed. You were alive and safe and there before me. I couldn't tear me eyes away from the wondrous vision...but I should have. I shouldn't have violated your privacy so.\"\n\nAoife shook her head against her knees. Her voice was muffled. \"The wicked things I did then...by God, what you must have thought of me!\"\n\n\"Why, I only thought you had the cleanest wee cunny and bottom hole in all of Ireland,\" he jested, but when she cringed, he hastily continued, \"Oh love! Dinna fret so! Even back in the fall when I knew that you justly loathed me, so powerful did I love ye that I strove to do right by you --- not to win you, but...but simply to be worthy of you. I scarce considered that I might have a chance of earning your affection true. 'Twas not till ye kissed me in the cave that I dared to hope as never before.\"\n\nWith the purple flower, Declan touched her neck where it sloped to her shoulder. She flinched.\n\n\"'Tis all to say, dinna ye ken how besotted I am with ye, lass? And know certain that unlike a knight of yore, me heart would be sore bereft if you shared my affection, but our love was constrained to chaste adoration. My love is boundless and includes everything --- from working alongside you in a field...to earnest discourse...to dancing at the fair...to fucking...aye...to most unrestrained fucking. I'm not ashamed of it. Anything that I witnessed that day at the waterfall only made me more fiercely enamored with ye than ever.\"\n\nAoife's face lifted from her knees, but with her back towards him, he could not see her expression. A breeze stirred her hair and the flowers and leaves about them...a muted bird call came from the direction of the stream.\n\nAt last, she spoke, her voice utterly flat, \"Well, I'm glad 'twas you, and not some other lad.\" She shot a look over her shoulder. \"You didn't encounter any other men watching me, did ye?\"\n\nA snorting laugh escaped him. \"The Devil! I would have thrashed them hard and proper, had there been.\"\n\n\"And what of yourself, Declan Muldowney?\" she challenged, still eyeing him over her shoulder.\n\n\"I thrashed meself hard and proper, so I did...after ye left.\" He winked. In a moment her eyes grew big and she blushed. Her face turned away again, but the shaking of her shoulders suggested that she was trying to suppress laughter.\n\nWhen he touched her back, she did not recoil, and he slid his arm round her to clasp her far shoulder. \"Come here, love,\" he murmured. She resisted not as he turned her and pulled her into an awkward embrace, both sitting on the ground. Declan stroked her hair and kissed her brow softly.\n\nAoife leant her head on his shoulder as he snuggled her closer. \"'Tis ironic...I thought you were the spy,\" she said.\n\nDeclan's eyes opened. \"You did? Why?\"\n\n\"The betrayal of McBride and the Noctor brothers at Davidstown...both were involved in gun missions you attended. Twice seeing ye on the road to Rossnalough Manor...I thought you had taken up with Blaylock again. My unresolved animosity towards you no doubt fortified my suspicions.\"\n\nDeclan shook his head in wonder. \"Aye, it is indeed ironic. Fate has been very mysterious in guiding our paths. 'Tis frightening to think how narrowly we missed finding each other...like this.\" His head cocked --- had that been the faint caw of a crow? He hugged her more tightly and said, \"Had it not been for you last night in Blaylock's office, I would have died.\"\n\nAoife raised her face. \"Had it not been for you, I would have been raped and likely murdered...several times now have ye saved me.\"\n\nTheir gazes fixed upon each other. The leaves rustled and his pulse sounded in his ears. How intense shone her eyes! Declan bent his head and pressed his mouth to hers. The kiss was slow and tender...their lips soft and parted...moving...warm sips of breath exchanging.\n\nBut 'twas not long ere their arms tightened about each other and the kiss grew more searching. Aoife shivered as he slid his tongue into her mouth...avidly did she suck upon it, most thrillingly recalling her recent attentions to his cock. Faster and hotter came their breaths in pace with the dewy, twining junction, and their yearning bodies protested the awkward seated embrace, shifting and twisting, till Declan turned them and laid her back upon the ground, getting atop her.\n\nNow their arms wrapped round each other...their clothed bodies pressing together as the kiss continued. Tongues wrestled and retreated as spittle-slick lips fed upon each other, the excitement rising with the amorous play. Declan lifted his head to drink in the sight of her bonnie face alight with desire. In her pupils he saw the reflection of the clouds and sky above them...he breathed the heady scent of the surrounding grasses and flowers...and he came over dizzy with happiness, his heart thumping in his chest. Again his mouth took hers, and he moved forcefully on her.\n\nAoife whimpered and broke from the kiss. \"Owww --- you're squashing me!\"\n\n\"What?!\" he exclaimed. \"I'm squashing you, forsooth, fair maid?\" His eyes were merry as he suddenly relaxed the support of his elbows and knees, dropping his full weight upon her. She squeaked most enchantingly, and her small body wriggled under his.",
        "He yawned and closed his eyes. \"Jaysis, I'm exhausted...I think I'll have a wee snooze.\"\n\n\"Declan!\" she squealed, smacking his shoulders.\n\nHe opened one eye. \"What? Am I squashing you?\" He eased his weight off her, back onto his elbows and knees. \"Am I still?\"\n\nThey were both laughing as she exclaimed, \"Aye!\"\n\nBack upon her his weight again flopped. \"When? Now?\"\n\n\"Oh ye brute!\" cried she, giggling. \"Stop or I shall piddle!\"\n\nAwash with giddy joy, Declan was seized by the wild letch to feel her piddling upon him. Ah sweet heavens, he was going mad with love, so he was! He rolled them over so that she was now atop him. \"Your turn. Now you squash me.\"\n\nShe lay full length on him, her teeth gritted as she heaved her slight weight against his body. Declan arched an eyebrow. \"Come now, squash me, do. This is pitiable...are ye even trying?\" Her squirming was most rousing, and in the still open front of his breeches and drawers, his swelling organ expanded to full, battle-ready, reverberating rigidity. Their giggles were quelled in the hungry re-fusing of their panting mouths.\n\n\"Aoife,\" he groaned, pulling her shirt free of her breeches, and sliding his hands under the linen to grasp her bare, writhing back. Her eager mouth was showering his face and neck with kisses, rubbing in the bristles upon his jaw. He tugged upon the shirt. \"You're wearing too many clothes, lass!\" As she paused and lifted her torso, he yanked the garment over her head...there was a brief flash of her jiggling, pink and white breasts, then she was lying forward on him again. A moment later they both were dragging his shirt up so that her warm, firm mounds were tight to his naked chest.\n\nHis hands roved over her slim torso, feeling the smooth skin and the motions of her spine and shoulder blades as they strained together with their kisses. From the narrow, incurved waist, his hands continued under her previously loosened breeches up onto the rise of her arse. A moment later, he withdrew from the limited space, only to frantically tug the garment down over her swelling cheeks with sharp jerks, she lifting her hips to assist. He got the waistband down to her thighs, and his large hands slid up to clasp her now bared bottom.\n\nOh what luscious handfuls of female flesh! So supple and round...the skin so satiny and warm! The curve from the small of her back to the impudent protrusion of her adorable bum was a sweetly lilting song! \"Boyish figure, like Hell!\" he growled. In a frenzy did Declan's splayed palm spread a cheek aside for the exploring fingers of his other hand. As he stroked down the tempting cleft, he felt the resilient wriggle of her buttocks against his wrist.\n\nWith what bawdy wonder did his eager, fumbling fingers feel her secret lass parts from behind! In alluring succession, he caressed the taut, silky pucker of her anus, the bridge of dense flesh forward of it, and the downy sprinkle of hairs on her cunny. The lowered breeches were tethering her legs close together...likewise her soft lips. His fingertip delved between them and discovered the well-moistened, hot little furrow and the alert turgor of her clitoris. Aoife sighed at his detailed, stroking survey.\n\n\"Oh, love!\" Declan moaned, stirring his big middle finger in the creamy inlet, then with deliberate pressure, gradually insinuating the entire digit up her wee, clenching vagina. Against the wet velvet he wiggled his finger, rubbing her with short, gentle excursions.\n\n\"Oooooh!\" she gasped, squirming against his cockstand.\n\n\"Are ye in a state to think on me kindly now?\" Declan murmured.\n\n\"Oh, pray! Let's...\"\n\n\"Aye, love?\" he prompted by her ear.\n\nAn incoherent sound escaped her lips as he withdrew his finger and tickled her standing bud. Her body quaked atop him. \"Declan...\" she whispered.\n\nHis hands abruptly lifted her hips. \"Aoife, I want ye so fierce! Get these damned breeches off!\"\n\nShe scrambled to her feet, naked from the waist up. Her breasts shook as she kicked her shoes off and thrust the breeches down, Declan helping her pull them off over her stockings.\n\n\"By God! What is that?!\" she cried when she straightened, gaping at his stiffstander. \"I thought Saint Patrick banished all the snakes from Ireland! 'Tis surely a scandalous falsehood!\"\n\nDeclan grinned. \"Aye, 'tis your own fault, awakening this python.\" Looking up at her, he was spellbound. \"Oh sweetheart, dinna move...let me look at ye!\"\n\nAoife came over in evident self-consciousness but heeded his plea. As he lay upon the ground, she stood with one foot on either side of his hips, and Declan drank in the splendid vision of her nearly naked body above him. Grey woolen stockings were secured with black ribbon garters below her knees. Above that, her lissome, milky white figure was completely bare. The blue sky and clouds behind framed her head and torso, and a small blue butterfly, no doubt drawn by her irresistible scent, flitted about her. It settled for a moment upon her shoulder till a light breeze stirred the flaming red locks, chasing it away.\n\nLower, Aoife's proud little teats stood out so succulent and round...the pale pink nipples emphatic stiff points at the peaks. Her slender waist curved into sinuous hips, and with her legs braced, the strong, lithe muscles were visible in her thighs. \"Aoife, you're so incomparably lovely!\" he exclaimed.\n\nDeclan's enraptured eyes roved on. The sunlight that set her tresses aglow was likewise rendering radiant the wee cluster of curls upon her privates. In her present stance with her legs separated, Declan had a beguiling view up at the little split at the bottom of her belly, rosy under its lacy mantle. His overjoyed cock bobbed stiffly on his belly. \"Oh God! Come hither! Sit on me face, sweet lass!\"\n\nHer face flushed red in astonishment, and she gaped open-mouthed down at him.\n\n\"Sit on me face!\" he beseeched hoarsely. His excited fingers beckoned against her calves, urgently guiding her forward till her feet were on the ground above his shoulders.\n\n\"Oh! You're a right shameless lad, so ye are!\" Aoife giggled as he pulled to her knees. Declan felt the tickling brush of her dainty red fluff against his nose and lips, then he seized her bottom with his hands, pulling her closer and holding her fast as his mouth in ecstasy plundered her precious jewel box. All over her swollen kernel and petals did his tongue flutter and stroke, and Aoife's swiftly abandoned reticence bespoke the exquisite, erotic torment he was visiting upon her delicate parts. Her knees spread upon the ground, opening her vulva above his face, and her hips writhed in his hands.\n\nIn his peripheral vision, her creamy thighs tensed alongside his head, whilst above he sighted up her flat belly to the quivering hillocks of her breasts. Grunting in lecherous elation, he lapped in her parted crevice and burrowed the tip of his tongue into her muscular grotto where the telltale pulse escalated, and the cream welled with her pleasure. Oh, sweet Aoife! Even more intoxicating bloomed her lass essence with the sustenance of their earlier lovemaking.\n\n'Twas not long ere her soft imploring moans, uneven breaths, and flexing buttocks heralded the approaching crisis. Declan dropped one hand to yank his breeches and drawers down to his thighs. \"Aoife, I want to be inside ye!\" he groaned and urged her up with his hands. \"Move down! Sit on me cock!\"\n\nAoife hastened to scoot back. \"Can we do it so?\" she gasped, her face aglow with wanton delight.\n\n\"Aye, love!\" Declan pried his overeager iron from his belly, where it was distilling its lubricating fluid into his navel and angled it skyward, stroking his palm over the turgid head to smear the moisture. \"Get over it and plant yourself upon it,\" he rasped as she knelt up and aligned her cunny over him. The next moment, his robust crown was lodged in her wee, buttery notch, and the excited lass bravely forged ahead.\n\nEven as her tender little hole bore the brunt of the joining, Aoife did not falter. Indeed, her face was the very picture of voluptuous agony as she eased her weight onto the bold pillar. Well-anointed with its nectar, her aroused orifice stretched to the utmost to admit his mushroom shaped knob. \"Nnnnnhhh,\" she moaned as her cunny accommodated his cockhead...then she pressed determinedly on, her breaths coming in short bursts.\n\n\"Aye, love! Take it in!\" Declan croaked, watching astounded as the darling little lass valiantly impaled herself on his throbbing truncheon.\n\nThe sensation of her restrictive, wet sheath lasciviously widening and elongating to cover him was nothing short of paradise --- Declan watched transfixed at his ruddy, bulging-veined shaft disappeared, embedding itself inexorably into her small body.\n\nAt last they were full joined...Aoife sat upon him wide-eyed and panting --- her red and his dark curls amorously enmeshed. He could feel her straining passage clamped round the full length of his organ. Their glazed eyes met in rapture. \"Aoife, me cock is full up your wee cunny!\" he growled.\n\nWithout further words, they set to in a mutual frenzy, his grasping hands upon her bottom initially guiding her up and down excursions. Soon however, the ardent girl understood the mechanics of the rousing game, and rode his rampant cock in glee, her arse and thighs squeezing, her outthrust teats boisterously bouncing, her face alight in libidinous joy. Her soft voice and mingled breaths rose and fell in a stirring, chaotic chant of sexual pleasure among the birdsong and rustling leaves.\n\n\"Ohhhh...nnnhhh...Oh, pray!...ohhh...oh, Declan! We're fucking...we're fucking!\"\n\nHe nigh spilled his seed at that. \"Oh, God, Aoife!\" he moaned. The gripping, lubrified sleeve of her overstuffed vagina was rhythmically riding up and down his aching organ, and with each downward thrust he saw in her spread notch the pink nose of her clitoris rubbing against his pelvic bone. His hands stroked up from her hips to her waist, then reached up to cup her springing breasts. From the tension in her body and increasing compression of her little channel, Declan sensed that the pleasure storm was mounting as fast for her as himself...aye, God!...the transports of erotic communion were too exhilarating to tarry!\n\nAoife flung herself forward upon him. \"Someone's there!\" she gasped by his ear, struggling to dismount as he held her fast, still in the spell of the brinking pleasure.\n\n\"Where?!\" Declan endeavored to shift his attention as their whispered exchange continued.\n\n\"Down the hill! Two people!\" She motioned with her chin, her hips squirming under his hands, her cunny still on the spit of his cockstand.\n\n\"What manner of people?\"\n\n\"Oh, let me up! A farmer and a lad, I think.\"\n\n\"What were they doing?\"\n\n\"I dinna ken! They were carrying a basket and a table.\"\n\n\"How far away?\"\n\nShe raised her face from the hollow of his neck and stared at him incredulously from a few inches away. He grinned as he held her bottom fast and arched his pelvis against her. After a blink, she whispered, \"Fifty paces or so.\"\n\nDeclan twisted his head on the ground to glance behind him at the flowering blackthorn tree, another blooming shrub, and the waving flowers and grasses among which they lay. \"They canna see us if we stay down.\"\n\n\"But what if they come up here?! I'm naked!\" she hissed.\n\n\"Then they'll be blessed to witness a lovely faery maiden granting a rare benediction to a lovesick mortal lad,\" he murmured. He planted a soft kiss on her shocked mouth. \"They'll not rob us of this time together.\"\n\n\"But...\"\n\n\"Shhhh.\"\n\nDeclan clasped her buttocks, and with the insistent, sensual gyrations of his hips, he persuaded her dilated aperture and bud in caressing synchrony, watching as he did her eyes grow glossy with resurgent arousal. \"But...\" she protested weakly.\n\n\"Here it is!\" a lad's voice called out from downslope.\n\n\"Aye, a good flat spot it is,\" responded an older man.\n\nDeclan and Aoife tensed and suppressed giggles next to each other's ears, her cunny squeezing his indriven pillar as her body shook atop his. When she lifted her face, her glowing eyes were animated with mischief at the audacious frolic.\n\n\"The spacing is correct, lad, but look here...ye made the holes too small for the legs.\"\n\nAoife stretched her arms and braced her hands upon the ground above his shoulders. Spreading her thighs even wider she strained to augment their tight junction to the fullest. Their lips, then cheeks, brushed together.\n\nA mumbling drifted uphill.\n\n\"No, the legs need to be this stout to keep it steady in the wind and rain. Give me the hammer. Without a spade, we'll just have to drive them into the holes by force.\"\n\nDeclan raised an eyebrow, his sly gaze meeting hers. \"Aye, sometimes 'tis the only way,\" he whispered.\n\nAoife's eyes sparkled and she bit her lower lip to keep silent. Her body was struggling again, but now in rapport with his...her hips salaciously rolling and humping. Where his shirt was pulled up, her coy breasts, with her back-and-forth motion, were squeezing and shaking against his bare chest.\n\nA heavy, repeated thwocking sound filled the air, such as a sledgehammer on a sturdy post would make.\n\nDeclan bent his knees and dug his heels into the ground, his hands tight upon her arse as he pumped his hips up and down, fortifying and lengthening the in-and-out strokes of his rigid cock. With every blow of the farmer's hammer, Declan squelched a groan and plunged deep into the quivering, muscular friction of her wanton little vagina, whilst she thrust down to take him full in.\n\nThe pounding of the hammer stopped.\n\n\"Aye, 'tis level. Now we'll affix the skep.\"\n\nBetween hoarse pants, Declan whispered, \"'Tis a beehive. They're installing a beehive.\"\n\nIn defiance of all that was decorous and mannerly, he and Aoife swived brazenly on the ground a mere few dozen yards from the farmers...hidden among the flowers...the vigorous undulations of their joined, overheated organs curiously apposed to the nigh utter silence...silence save for their smothered breaths and the intermittent, faint thlip...thlap...thlip...thlap of his piston driving in her slippery, distended inlet.\n\n\"Think ye that we'll get some honey this year?\" asked the lad.\n\n\"Mayhap, I hope we're not too late in the season,\" the man's voice said.\n\nDeclan bit back a moan as the rhapsodic pressure suffused his pelvis, and his ballocks drew up for the onslaught. Even as Aoife's body grew tauter and tauter, so too did the exquisite trembling sheath of her sex organ...clutching the full length of him, her inner female flesh as dense and congested as the external flower that she was lewdly grinding against him. Her wide eyes fixed upon his, all sweet urgency.\n\nFrom downslope the man said, \"'Tis a right fine spot what with all the flowers on the hill. With a fertile female well-mated, the honey should flow, so it should.\"\n\n\"So true, that,\" Declan said in a strangled whisper. There was a sudden abatement of Aoife's panting, then she went rigid atop him, her eyebrows drawing together and her mouth opening, wetly pink and quavering with unvoiced cries as her cunny convulsed round his thrusting organ. Declan's eyes devoured her face and his teeth gritted. Then his hips lurched up and drove home his spasming cock to deliver the jubilant salvo of Love's lusty liquor into the milking embrace of her little vagina. Round her waist his arms clenched, locking her pelvis fast to his whilst she rode the sperm fountain with prolonged shudders.\n\n...and then they were quashing their pants into each other's hair, their bodies languid.\n\nFrom the hillside, the man's voice floated up. \"Excellent. A fine erection, so it is. 'Twill serve well even in intemperate weather.\"\n\n\"Aye, so it will,\" Declan whispered. He and Aoife shook with helpless silent laughter, his yet swollen organ shifting inside her.\n\n\"Grab the hammer, lad. Let's be on our way.\"\n\nDeclan rolled them over to lie atop her, maintaining their happy junction. His eyes smiled down at her flushed, blissful face among the flowers and shamrock. \"There you're safe --- if they venture up here, they can gawk at my bare arse if they want.\"\n\n* * * * *\n\nGive to these children, new from the world,\n\nSilence and love;\n\nAnd the long dew-dropping hours of the night,\n\nAnd the stars above...\n\n--- W.B. Yeats\n\nLove! Oh, sweet Love!\n\nThe intruders' voices having long receded, the hillside was once again occupied only by Nature: the lower slopes by sheep and lambs, and the higher elevations by birds, butterflies, bees...and the entwined lad and lass --- naught but creatures of Nature themselves. They lay in the flowers, shamrock, and grasses next to the ancient standing stones that had been erected centuries ago by their Celtic ancestors...the lichen-speckled boulders shining in the cool May sun.\n\nIn transcendence did they loll, the amorous torment of their hearts and bodies momentarily appeased by the tender succor of Love's lustrous remedy. The lass with her head upon the young man's chest was lulled by the thud of his heartbeat under her ear, whilst the lad's heart was soothed by the soft rise and fall of her back under his arm.\n\nIn like languor did their sex organs --- felled and filled --- bask in Love's lilting elixir...his eased cock was gilded in her female fluid...her cunny luxuriated in the balmy benefaction of his spunk.\n\nAye, miraculous Love!\n\nAmong the drowsy sounds of birds and bees, the lovers lay wordlessly --- their hearts full and their minds possessed of the same, single, unspoken thought: Oh God! Please let this moment never end!\n\n* * * * *\n\nDeclan's eyelids slowly opened...the soft ground, surrounding greenery, flowering trees, and sky recalled to him his present happy circumstances. But where was Aoife? After a brief befuddlement, he spied her crouching next to her knapsack at the foot of the standing stones, her white shirt re-donned. She jumped when he spoke.\n\n\"What are ye doing?\"\n\n\"I was washing...in the stream.\" She met his eyes shyly.\n\nHe saw now that she was wrapping a sliver of soap in a piece of cloth. No doubt he himself was due for a wash after...by God!...three stirring rounds of hide the truncheon...and a fourth pearly shower in Aoife's sublime mouth! But soporific contentment rebuffed any consideration of rising from the ground. Instead, he rolled to his side, folding his arm under his head as he watched the fair damsel.\n\nWhen she stood, 'twas evident that she had removed her stockings and wore nothing save the shirt --- his admiring eyes traced over her pale, agile legs visible below the shirt's shifting hem.\n\nShe approached and bent to retrieve her discarded clothes, uncovering a captivating glimpse of her comely little arse as well as the goosebumps and water droplets upon her thighs. \"Aoife,\" he murmured, beckoning her with his hand. \"Come lie with me.\"\n\nWith a small hop, she jerked up the oversized breeches and fastened them. Her eyes widened with exaggerated astonishment. \"Again?\"\n\nDeclan grinned sleepily. \"Just lie beside me. I'll warm ye, so I will.\" Her blue eyes shone soft and clear as she sank to the ground before him, whereupon he reached for her, pulling her snug against him, her small back curving into his chest and belly, spoon style. Tucking his thighs under her bottom and kissing her hair, he adjusted his embracing arm so that its weight would not hurt her. \"Let's lie so forever,\" he whispered.\n\nUnder his arm, he felt the rise and fall of her chest gradually slow with her deepening breathing. In concert did his breaths lengthen and his eyelids droop closed. In the warmth of the spring sun, the soft buzzing of a bee lulled them to sleep once more.\n\nThe sun arced towards the western horizon and the clouds drifted overhead for some time ere Declan roused again...this time to discover Aoife kneeling at his feet, slipping off his shoes and unbuttoning the cuffs of his knee breeches to tug his stockings down. He raised his head, arching a brow as he observed her. \"Are ye wanting another tumble, sweet maid?\" Cooperatively, he held his foot off the ground. \"My forces are indeed full recovered, and I am most eager to oblige you, but you're uncovering the wrong limb, so ye are.\" He winked.",
        "Her long russet lashes flicked up and spots of color appeared on her cheeks. \"I mean to mend your stockings. I noticed the holes last night when I washed them.\"\n\n\"Ta.\"\n\nAs Aoife retreated with the stockings, Declan rolled to his feet and fastened the flap of his breeches. He marked the position of the sun and the lengthening shadows of the standing stones and trees. With a heavy heart he fetched his canteen and crossed to the stream. 'Twould soon be time to make their way to Fleetwood's farm...this wondrous dream would end.\n\nHe drank from the canteen and refilled it, his agitation compelling him to imprint in his mind all the details of the moment: the curl of clear water round stones in the stream bed, the cool, soft clover and grass under his bare feet, the mellow cooing of a bird...and Aoife.\n\nNow dressed in her shirt and breeches, she stood alongside one of the fallen boulders whose surface was level with her waist, using it as a worktable of sorts. One of his wool stockings was laid out on top of it next to her open knapsack; the other was covering her hand with her fingers inside maneuvering the fabric as she deftly darned the holes in the toe end.\n\nShe had divided her unruly hair into two short, thick braids that ended just below her shoulders, tied with thin strips of fabric...a most becoming arrangement that exposed the graceful shape of her head and all the subtly provocative contours of her neck, ears, cheekbones, and jaw. Declan inhaled deeply. Nature had indeed been inspired in fashioning this rare maiden.\n\nHer faery eyes were attending her task as he leant against the stone near her, drinking from the canteen. She accepted a draught of the water and continued her sewing, presently glancing up at Declan's unwavering regard. The disquiet of encroaching reality pressed upon him, and with the meeting of their gazes, he cleared his throat and straightened. Restlessly he walked round the silent stones, absorbing the fair prospect that stretched below the hill --- the green pastures and fields, the flower veiled stone walls, the grazing sheep.\n\nWhen Declan completed the circuit round the cromleach, he stepped up behind Aoife where she stood by the boulder, loosely encircling her waist with his arms. Above her head, he looked downslope at the newly erected straw skep on its wooden table. A smile lifted one corner of his mouth. \"Faith, I don't know if I'll ever again manage to see a beehive without sprouting a cockstand.\"\n\nAoife giggled.\n\nDeclan tilted his face to kiss the top of her head, his lips lingering then muttering, \"The scent of you stirs me heart something fierce.\"\n\n\"What scent?\"\n\n\"If ye put it so, then every blessed scent --- your hair, your armpits, your cunny...your elbow.\"\n\nShe playfully jabbed said elbow back into his belly.\n\n\"But I was specifically thinking on this...this Aoife scent. I dinna ken how to describe it...'tis like the countryside in spring, but even finer...more magic...more female.\" He rubbed his nose in her hair. \"The trace was on me clothes that you borrowed when we fled Kilmaedan Castle...I've been cherishing it all these months we were apart.\"\n\nHer needle hand paused momentarily. He bent lower and rested his chin upon her head. \"If you were but a couple of inches taller, your head would be the perfect height for me to rest mine on,\" he observed.\n\n\"Aye, with a head as big as yours, 'tis no wonder your neck needs a respite.\"\n\n\"Me big head seemed to please ye right well earlier.\" Declan's arms tightened and his body pointedly pressed against her backside.\n\nAoife shook with laughter as she worked the needle, then she gasped, \"Owww!\" A tiny bead of blood appeared on the tip of her finger, and she put it in her mouth.\n\n\"I'm sorry,\" Declan murmured, easing the force of his embrace. \"I'm distracting you. And here I was so thankful for your kindness in mending me clothes.\"\n\n\"How can you go about with such holes in your stockings?\" she mumbled round her finger, shaking her head with feigned seriousness.\n\n\"I've never had someone willing to mend them. Anyway, it never mattered to me...no one ever sees the toes of me stockings.\"\n\n\"In that case, I suppose I have no cause for jealousy,\" she teased.\n\nHe shrugged. \"Well, take it as you will, but in truth I always keep me shoes on when I shag the lasses.\"\n\nAoife made a scoffing noise. \"That, sir, is your own affair. I was referring to the mending: if any other lass were to lay her needle upon your stockings, I would scratch her eyes out, so I would.\"\n\nDeclan chuckled. \"At least you have strong feelings on my behalf in some regard.\"\n\nAoife checked her pricked finger, then resumed sewing.\n\nNotwithstanding his earlier jest, he was in fact right refurbished, and soon the scent and closeness of her female form was once again working its bewitching spell upon him. More gently this time did his arms pull her closer back against him, as he bent his head lower and nibbled about her nape, ears, and shoulders. \"Am I distracting you?\" he whispered.\n\nShe tossed her head. \"Ha! No one can turn my attention from me needle when I'm bent on a task.\"\n\nHe drew her earlobe between his lips. \"Think ye so, lass? Would ye care to lay money on that?\"\n\nAoife shivered, then twisted her head to meet his eyes, her expression sportive. \"Aye! I'll wager a shilling that I'll finish the darning without you interrupting me.\"\n\n\"Wager accepted.\" Declan grinned and his eyes shone as she raised a challenging brow and faced forward again.\n\nStanding behind her, he watched over her shoulder as her quick fingers knotted the thread and cut it with her teeth. He did not dally either --- from her waist his hands traveled upwards --- over her shirt to her breasts, unfettered under the shirt. Breathing close by her ear, his fingers traced eagerly over the high, firm hillocks whilst she, seemingly unaffected, measured out a new length of thread and rethreaded the needle. Through the thin linen, Declan felt the telltale peaks subtly rise under his fingertips.\n\nHis hands dropped to the waistband of her breeches and pulled the shirt free. The next moment his palms were under the garment and adoring her naked breasts. Had her breath caught for but a moment? His eyes glinted. They both looked down --- he over her shoulder --- at the shifting contours of his large hands under the white cloth, the knuckles making intermittent bumps as he played with her bosom.\n\nOh, what tender baubles were her plump little bubbies...so warm, so pert, so resilient! Declan reveled in the enticing flesh...cupping, compressing, and bouncing them in his happy hands. Next to her ear, his breath was quickening, and he felt her body likewise stirring. With his attentive play, her nipples hardened, betraying the distracted lass's increasing arousal...and yet she determinedly plied her needle.\n\nNow Declan's fingertips caressed the rising buds, circling and circling, stroking and drawing upon them. \"How stiff your little nipples are growing, Aoife!\" he whispered hoarsely in her ear. \"As stiff as me cock, raging in want for ye!\" He nudged her backside with said member to illustrate his words, sliding as he did so the tip of his tongue into her ear.\n\nHer body tensed, her teats quivered in his hands, and her stitching hand faltered momentarily --- then she collected herself and with a forced placid mien, adjusted the stocking over her hand to start upon the next hole.\n\nDeclan regrouped, panting in her ear as he released her breasts and lowered his hands to covertly unfasten his own breeches and drawers, freeing his turgid beast as he gazed down over her shoulder at her tempting, now erect nips lifting the shirt fabric.\n\nHis hands sought out the front of Aoife's breeches where she had retied the rope belt. As before, his fingers fumbled with the knot, relying on touch alone as he stood behind her, and she took advantage of the pause to redouble the pace of her flying needle.\n\nAt last Declan freed the rope, and he made short work of the buttons on the flap. With a harsh exhalation of breath, he yanked the breeches down to her ankles.\n\n\"Oh, you!\" she gasped. Between the crumpled wool and the lower edge of the shirt, her lovely legs were bared. Tugging up her shirt, he crouched and pressed his cockstand against her naked arse. A smothered squeak sounded from her lips. Despite her resolute sewing, she could not disguise the response of her body to his touch, rubbing herself against the rigid pole that was making its hot imprint all over her buttocks.\n\nDeclan leant close, his chest against her back, his panting mouth by her ear, and his big hands in unmitigated lust roving over her small, supple body, memorizing the curves from her waist to her hips, sliding down over her round smooth thighs, clasping her little mound. Here he lingered with sly purpose...petting the dab of silky curls...mapping the dainty contours of the gentle rise...caressing the notch wherein her wee playpip nestled. She wriggled and audibly sighed, but still her darning continued.\n\nDeclan endeavored to lift her foot out of the restraining, sagging breeches, but in apparent zeal to win the wager, Aoife resisted him, clenching the muscles in her legs to keep her feet firmly on the ground, stitching on with a taunting \"Ha!\"\n\nOnce more she broke the thread with her teeth and, having finished the first stocking, whipped it off her hand. She grabbed the second one, curled her hand into a ball, and thrust it inside. Most strangely, this mundane act attending the darning of a stocking was impossibly stimulating...the sight of the woolen tube stretching over her demure fist made his cock thrum in salacious glee. And when her fingers uncurled to spread open the holes in the toes, Declan abandoned all restraint. In one motion, he stepped on the crotch of her fallen breeches and, with his hands on her waist, lifted her free of the garment.\n\nScarce had her gasp subsided and her feet returned to the ground, when Declan dropped his hands to seize her by the thighs. Now she yelped in earnest and grasped the stone as he boldly raised her legs, holding them like the handles of a wheelbarrow and pressing up at their juncture. Up and down in the moist groove between her cunny lips did his cock slide as her buttocks and thighs writhed most piquantly. \"I'm going to fill ye hard and proper, lass!\" he promised in a low mutter.\n\nA whimper escaped her lips, but Aoife controlled herself ere capitulating to his foray --- doggedly she stitched on as her body was bridged between her elbows on the boulder and his grip on her legs.\n\nThis time when Declan set her feet to the ground, he planted them nigh a yard apart, tossed her shirt over her back, and promptly fell to his knees behind her --- his arms wrapped round her thighs to forestall her embarrassed attempts to close them.\n\nHis lips in a frenzy strewed kisses over her squirming bottom, maddened by the feel of her satiny skin, juicy flesh, and the faint, wild nettle scent of the homemade soap. Then his palms each claimed a firm, round cheek...ardently stroking and squeezing them --- his large hands with their calloused, abraded knuckles strikingly contrasting with her unmarked, milky skin. He sighed. Jaysis! How immodestly protuberant her little arse was below her willowy waist! 'Twas as plump and toothsome as a perfectly ripened apple, so it was!\n\nNo longer did the excited lass protest the unseemly stance in which he had placed her, but despite her giggling and uneven breaths, her needle still faltered not. It occurred to Declan that perhaps she was intending to distract him with the bawdy play...whilst she finished the mending, but so happy and swollen was he with Love's commission that he cared not.\n\nHere before him this darling lass stood with her lovely legs akimbo, her toes braced in the clover, and her splendid bum in his face!\n\nHis play grew more purposeful, kneading her flesh and angling his thumbs into the beckoning cleft at the lower end where her thighs met her cheeks. How deliciously rude was their taut bounce each time he separated and released her buttocks! With each fleeting glimpse of the pink between, Declan became more and more enflamed. At last, with her firm orbs in his wide-splayed palms and fingers, his thumbs delved pointedly into the silky crevice, and he unabashedly spread her bottom wide open to indulge his lecherous gaze.\n\n\"Declan!\" Aoife whispered, her buttocks wiggling in apparent protest...but she maintained the widespread stance as she leant forward upon the stone...and almost imperceptibly did she arch her back, abetting his prurient inspection of her privates.\n\nA glance up showed him her needle hand still industriously working, and again he wondered if she was diverting his attention to win the wager. Or 'twas just as likely that she was equally aroused by the play AND wanted to win the wager --- have her cake and eat it too.\n\nHe grinned at the thrilling game. But in this case, he meant to dispute her for the having and the eating of her cake!\n\nEvery view of her charms with which he had so far been blessed had been a panoply of lustful delights, and Declan gaped agog at the new stunning prospect before him. What an extraordinary sight --- a lass's charms from behind! Her succulent bottom framed the fully displayed treasures between her legs. The insides of her strong thighs curved in a soft hollow just before joining her outer lips, with her vulva a sweet bridge across the narrow gap.\n\nHer cunny was a vision from this angle --- wee, rosy, and bulging impertinently back at him. Above that, Declan's fevered eyes fixed in wonder upon Aoife's postern aperture...so ruthlessly exposed by the ribald position. So pink and shy it was, her tiny vent between her bottom cheeks...the alluring corona of dainty pleats befitting a faery princess's crown...its fine beauty so discordant from its utilitarian purpose.\n\nWith his heart racing, Declan adjusted his grip to open her yet further. Whatever sang-froid Aoife was simulating with her sewing above, was betrayed by the state of her little sex organ below. Her blushing nymphae and clitoris, awake with tumescence, were standing entreatingly. Upon the lips on either side of the delicate butterfly, the scant red hairs by the slanting afternoon sunlight glowed like embers sparking from a fire. Her recent ablutions had cleansed away the clinging festoons of his earlier love tributes, but between her parted lips, Declan could see the chink already re-moistened with her glistening dew.\n\nAnd there too, under the burgeoning droplets, did he observe the puffy, reddened remnants of her ravished hymen. Reverently he bent forward and pressed his lips to the courageous little orifice, breathing her fresh lass scent, and softly collecting the nectar therein with the tip of his tongue.\n\n\"Ooooh...\" Aoife whimpered.\n\nDeclan moaned as the blood throbbed between his legs --- by God, he was sore too! His prepuce was tender from the vigorous exertions in Venus's battlefield, but his bedeviled cock ken not when to quit!\n\nHe dragged his tongue through her wet slit, then proceeded to tickle and lave the swollen bud and lips, the helplessly mounting tension in her legs and buttocks detectable under his hands...and then he heard her moan. Aye, now they would see who would win the wager! Lifting his face, he blew against her hot blooming flower, in fascination watching the squeeze of her cunny opening and bottom hole.\n\nJaysis! Why was that forbidden, 'unnatural' orifice so damned enchanting? In a paroxysm of lust, Declan leant forward and kissed it, feeling the fluttery flinch of the fine skin under his lips.\n\nAoife gasped.\n\nInstinct drove him. He licked it --- one soft, unhurried swab. Her little squeak and quiver were so provocative that he repeated the caress...lingering in the very center with the subtlest wiggle.\n\n\"I thought...you...knew arse from quim,\" her quavering voice challenged.\n\nDeclan chuckled. \"Aye, so I do.\" His thumbs on either side of her cleft applied a gentle force that spread the charming dimple open to reveal a dense ring of muscle and a darker pink center. His cock surged. \"But, your wee arsehole is so fetching that I canna help meself.\" He brushed his thumb over the dainty aperture, marveling at the skittish little contraction, then dropped his hand to squeeze his aching stiffstander.\n\nOnce more he glued his lips to her little pucker and tickled the quivering orifice. One large hand held her tensing buttock aside whilst his middle finger of the other found her erect clitoris and stroked it in synchrony with his circling tongue.\n\n\"Oh! Declan!\" she squealed.\n\nHe paused, grinning. \"Aye?\"\n\n\"You devil!\" she gasped.\n\nHis finger continued its coy fondling of her firm kernel. \"Am I offending you, sweet lass? Do ye want me to stop?\" Declan smiled to note that she had at last ceased sewing...her chest was now pressed to the stone and her hands were splayed over the hard surface on either side of her head, one still encased in his stocking. Her bright red cheek gave her wordless reply, and he nuzzled back between her buttocks.\n\nOh so faintly did he hear her moan and feel her press back onto his face --- all reason fled him --- he fused his lips to the parted cleft and lapped ravenously at her secret hole. Soft and gentle...fast and fluttery...swirling over the tiny folds, probing the tight center. Intoxicated was he as he worshiped her nether parts...lost in the taste of her freshly bathed skin and lass cream mixed with the rawer, maddening hint of her little bottom hole.\n\nAnyone venturing up the hill and happening upon the young couple disporting themselves on the fair May afternoon would no doubt have been shocked and stimulated by the libidinous scene. Bent over an ancient boulder was a comely little lass wearing naught but a shirt that was bunched up to her shoulder blades, exposing below her slim, curving form. She was standing with her legs spread wide apart, and behind her, kneeling among the flowers between her feet was a strapping lad, his eager face buried between her cheeks as he pleasured her arsehole with his lips and tongue, and her cunny with his finger. In his open breeches, the young man's splendid, engorged organ stood upright and uncapped for engagement --- all whilst the fair lass's body shook, her flushed cheek pressed upon the stone, and her open mouth spilled forth soft sighs and moans. 'Twas a tableau of Eros for the ages.\n\nDeclan had never forgotten the stunning sight over a year ago of Mr. Burke's cold-creamed finger sliding into his wife's bottom hole...and the pleasure it had so obviously afforded her. Indeed, ever since, whilst frigging, Declan had oft imagined performing a like exercise. Moreover, every now and then he had heard a comrade relate a tale or joke in which a lass was fucked in this so-called unnatural passage...and he had been skeptical...and intrigued.\n\nNow Declan was beside himself at this most happy discovery that his lingual attentions to Aoife's taboo little opening were most thrillingly, most sensually rousing her...despite her seeming shame. Hang shame! Everything Aoife and he had done together since last night would be considered a sin...starting with not being married. But young Declan cared not for such strictures. Why was her anus so impossibly pretty...like her natural passage...if not for Love's diversions? Gazing at it with his eyes aglow, all the lad knew was that it was another glistening, wee pink female orifice for him to toy with and penetrate!\n\nMore insistently did he tongue her trembling little dimple, his velvety muscle forming a tenacious point that wriggled at the center, opening the tight sphincter. He burrowed partway in, gloating at the glorious, resisting squeeze. Rapturously...slowly did he thrust his tongue in and out of her bottom as she whimpered and writhed...his finger rolling her clitoris...a glossy string of nectar stretching from her vagina down to his wrist.",
        "Declan moaned. Damn! Why was her arsehole so wantonly provoking? If it was a test, he was most eager to fail it!\n\nHis tongue withdrew and his mouth momentarily opened over her buttock, softly biting her in a throb of ecstasy. The wanting was unbearable --- he wanted to fuck her and fill her with spunk by every possible route in which a lad and lass could join!\n\nIn a flash he was on his feet and molding himself against her bent-over body upon the stone, lodging his aching cock in her cleft and kissing her nape between her short braids. \"Oh God, Aoife!\" he croaked, his hands skimming down her arms to her outspread fingers on the granite surface.\n\nWith deep nips, his open mouth traveled towards her ear, and she pressed harder against him. Upon the stone, the fingers of one hand interlaced with hers, whilst the other hand slid between them...over her back...over the curve of her arse. His fingers delved purposefully between her buttocks, soon reclaiming the wondrous indentation, slick with his spittle. He groaned.\n\n\"'Twas a pleasure for ye when I licked your pretty little bottom hole, wasn't it?\" he rasped by her ear, then gave her earlobe a soft nibble. \"It was for me.\" Her sensitive aperture squeezed tremulously as the pad of his finger deliberately rubbed it with small, slow circles.\n\nAoife replied not, but her heavy lashes fluttered at half-mast over her glazed eyes. Her fingers tightened upon his.\n\n\"And when I pushed me tongue into it...ye liked it, lass,\" he said in a low, husky voice.\n\nFor a moment there was only the sound of their breaths, then, scarce audible came her shivery, stirring whisper, \"Aye.\" Between their close, bent forward bodies, her little hand reached back, burrowing between them and wrapping round his cock. Declan moaned, wiggling his fingertip in the center of her moist pucker. Aoife squeezed his stiff column. There were several seconds of wordless, accelerating pulse and breathing as Aoife stroked his staff, and Declan stroked her anus.\n\nAbruptly Declan scooped up her torso and straightened, grabbing with his other hand the small pottery jar of unguent that was visible in her open knapsack upon the boulder. \"Come here,\" he bade hoarsely, walking her a couple of paces away from the stone, where he dropped to his knees on the soft grass and shamrock, pulling her down with him. He bent her to his ardent kiss, then with his hands on her shoulders eagerly turned her. \"Get on your hands and knees!\"\n\nAoife twisted to drop to all fours, looking over her shoulder as Declan, facing her hip, flung her shirt up to mid-back...then tugged it over her head, she lifting her hands from the ground for him to strip it off.\n\n\"Aoife,\" he breathed, absorbing the enthralling sight as she resumed her stance, her pale body completely bare...limber and nubile upon her hands and knees...her little teats hanging, her bottom pertly swelling below her slim waist. One short red braid curved on her shoulder as she looked back at him, her huge blue eyes all nervous excitement. The matching fiery down showed between her legs. Damn!\n\nWith shaking fingers, Declan uncorked the jar and scooped up a measure of the pale green balm with his right forefinger. Lifting his eyes from the jar, his gaze traveled from her arse to her face, meeting her eyes. He cleared his throat and said hoarsely, \"Raise your bottom, lass.\"\n\nWith her eyes smoldering, Aoife bent her arms, arched her back, and lowered her chest to the ground, her face turned towards him and her cheek pressed to the clover.\n\n\"Jaysis!\" burst out Declan in rutting exultation. Oh, unsurpassed beauty! Like a female creature in heat, her roused organ was most primally presented in licentious supplication...rosy, pouting, and parted...the wetness shining in the sunlight. Above it the tiny pink crinkle of her anus was flagrantly exposed.\n\nDeclan was staggered by Eros's sudden dilemma: plunge in her cunny straight and true or play at backgammon? When the luminous dimple winked at him, he ceased his pondering and applied his fingertip to the target.\n\nAoife jumped. In giddy fervor did Declan distribute the unguent all over her wee flinching vent, coating the radiating folds and adjacent cleft, working it into the firm center. The little anointed aperture soon glistened like a jewel.\n\n'Twas Declan who now jumped when Aoife's hand touched his bobbing cock. She had unfolded her arm nearer him and reached back to where he knelt next to her. Glancing down, he realized that she too had scooped up balm from the jar that was on the ground between them and was smearing the cool cream over his heated organ with awkward strokes up and down the shaft and over the crown. He moaned, falling to his elbow, his head on the ground next to hers.\n\nSide by side, each on their knees and one elbow, their burning gazes locked as their busy hands played...her hand sliding up and down his now well-oiled machine, his finger swirling on her slick little pucker, feeling the choice skin, the resilient muscle, and the tiny, tempting central divot. The lewd, slippery sounds of their fingers in the unguent fortified the erotic agitation as their faces flushed and mouths panted.\n\nFrom its surface fondling, Declan adjusted the angle of his finger to now broach her wee hole head-on. Lusciously greased, the inherent resistance of her opening capitulated to the wriggling incursion, and his big forefinger pushed carefully into her bottom...by God!...the fierce, smooth grip was extraordinary!\n\nAoife inhaled, her hand tightening upon his cock. His eyes flared. Slowly...slowly...his digit began to stroke in and out of the tantalizing narrows. Her lovely face was illuminated by amorous yearning...guileless and undisguised...her eyes wide, her brows tensed, her mouth open. Only a few thrusts of his finger could he manage ere Declan knelt up with all urgency. Any more of this, and there would be less of it! He was set to spill his seed in her hand!\n\nSweet chaos ensued as they hastened to embark on the indecent venture. He scrambled to yank his breeches and drawers off...then a moment later his shirt. Stripped naked, he dropped to his knees behind her, first spreading her knees...only to discover that so positioned, the difference in their sizes thwarted the desired joining. There was a hasty, fumbling repositioning: Aoife on her hands and knees with her legs now pressed together, Declan behind her, his knees outboard of hers. Thus aligned, Declan forged ahead with no further delay.\n\nPushing his throbbing weapon down, he pressed headlong upon the shiny pink mark. Aoife started and the little aperture clenched in unsurprising shock at being so bluntly importuned. His cockhead skidded up over her arse, making her squeal. Grasping his shaft firmly, Declan renewed the enterprise, pushing more pointedly...under his bluff helmet, he felt the alluring, hot dimple and its recalcitrant guardian muscle. By God! He wanted in that wee hole! Again his cock slid precipitously away.\n\nTwice more did he attempt to breach the sacred temple without success.\n\nPanting, he considered the problem. All the points of engagement were well greased with the unguent --- she had managed to take his finger --- but perhaps the present discrepancy in proportion between weapon and sheath was rendering the undertaking impossible. The entrancing anatomy of the postern passage that so admirably befitted its usual function in holding things in, was evidently equally adapted to keeping things out.\n\nWith ragged breaths, Declan applied a fresh swab of unguent and smoothed it over the delicate skin with an encouraging thumb. With his fingers splayed over her bottom, he curled his thumb into the pucker, working it in to the knuckle and softly wiggling it in the tight canal.\n\n\"Hoooo...\" she sighed.\n\nNow his other hand presented his cock anew, holding it fast as he pressed the head against his thumb, gingerly attempting to exchange the one for the other --- taking advantage of the yield piloted by his digit. \"Push!\" he whispered.\n\nTogether they pushed --- his thumb slipped out and his cockhead wedged partially in. Declan did not squander the progress: with steadfast pressure he advanced relentlessly into her anus, her panting efforts abetting the joining. In amazement, he felt the stubborn little twist unfurling round his organ, and the silky grip of her sphincter covering him. Soon the straining, pink ring of her blatantly open bottom hole was visible as it gradually accepted the inordinate width of his crown. Declan's breath hissed through his gritted teeth.\n\nAoife whimpered, trembling.\n\nThe next moment, there was a sudden sensation of surrender and his bulbous knob was fully plugging her arse. Here Declan halted, riding out the threatening eruption of pleasure. Bending forward over her, he felt the sweat on her back as their torsos heaved together with their breaths. He panted against her nape.\n\nKissing his way past her ear, he pressed his hot cheek to hers. With one hand planted on the ground, his other curled under her to cradle the quivering cones of her breasts, one then the other, feeling in awe the intense erection of her nipples. Her innocent little body was crackling with an unearthly, primitive response to the prodigious 'unnatural' penetration. He too was wonderstruck by the pulsing constriction of her distended anal passage round his cock.\n\nAoife's face turned towards him and their damp lips briefly met as Declan began to move inside her. Soon he knelt up again to better control the exhilarating endeavor. With his large hands holding her hips, he pushed in deeper and deeper with gentle shoves. Push...push...push. The elemental heat gradually encased him.\n\nJubilantly did the lusty lad now take up Nature's indecorous oscillation.\n\nTogether, Declan and Aoife in ecstasy discovered the novel joys of her exquisite nether passage...as well as its foibles. Fully buried in her bottom, the pressure of his robust organ filling her fundament was too profound and made the wee lass groan piteously. Relenting and partially withdrawing, Declan soon was engaged in a tumultuous battle with the muscular cuff of her sphincter...how rousing was the vigorous squeeze of that encircling canal...but how contrary it was! Twice, his organ was ejected from its snug, happy lodgement, attended by her muscle briskly crimping to reconstitute the defiant pink star.\n\nCock re-embedded, Declan managed to temper his strokes to achieve a smooth in-and-out motion that, by and by, transported them in a soft, lascivious melody of moans and tight, lubricious thrusting sounds.\n\nDeclan was reeling with elation at Love's gifts. Between her vagina and her bottom, he could detect the varied sensations --- finding naught but sublime pleasure in each. Even given his own blindness to the morality of their present manner of copulation, he was not oblivious to society's condemnation of the exercise. Indeed, the very transgression of the act endowed it with an inconceivable provocativeness. His eyes were wide, and his body shook with his pounding heart as he fucked her wee anus, glorying over its obscene distention round his glistening, rigid shaft.\n\n\"Oh, Declan...Ohhhh!...What does it look like?\" chanted the fair maid.\n\n\"'Tis a rare, lovely sight, love!\" Declan pushed his organ in and pulled out with deliberate excursions inside her compressing channel. \"Your upturned bottom is so fine and round...your wee arsehole is so pink and shiny...impaled on me ruddy cock and squeezing it so loving-like...oh, God!\" he groaned. \"And when I pull out, 'tis for a flash so wide open that I can see inside your bottom afore it clamps shut again.\"\n\nAoife moaned, and when he felt her fingers brush his tightening scrotum, he realized that she was frigging her clitoris.\n\nEmotion and instinct in happy accord overwhelmed him, dispersing all coherent thought. Together they sank forward, both naked among the flowers and clover...Aoife lying on her belly and Declan's large body straddling her slight form, leaning forward...his bare chest undulating against her writhing back as he unflaggingly stroked his pillar over and over into her hot, grasping, arched-up hole. One elbow braced his weight, whilst his other hand found hers on the ground alongside her head, covering it and enlacing his fingers with hers. Over her shoulder, where her face turned towards him, their open mouths mingled in uneven breaths, tongue-kisses, and moans.\n\n\"I-I love you!\" Aoife panted. \"Oh, Declan, I love you!\"\n\n\"Aoife, I love you!!\" No longer was Declan master of his body --- the primitive, rutting fervor commanded the powerful, bunching muscles in his thighs and buttocks, rhythmically driving his organ in and out...in and out of her body...the exuberant knob voluptuously tormenting the quaking, muscular cuff of her anus...his stones pressing over and over against her rubbing finger.\n\nHer strong little body was heaving and straining under him, as was his atop her. No further words were recognizable. Above the shameless noises of his piston pumping in her lubricated orifice, the only sounds that rose in the spring air were raw grunts of pleasure --- hers quavering and beseeching, his lustful and beast-like. Declan felt the transcendent, escalating pressure of her pulsing fundament round him, felt the firm, clutching sleeve of her sphincter elongate and grow impossibly taut, taking his redoubling thrusts in perfect suctioning communion.\n\nThe scent of shamrock, flowers, and Aoife flooded his heart, and the reflected emotion erupted outwards to his eyes, throat, and cock. Declan's mouth lifted from Aoife's and bit frantically at her ear and neck, his teeth sinking into her thick braid as his body began to convulse on top of her. And then she was hollering and bucking under him, to Declan's rapture --- her gorged bottom hole in wondrous, wrenching...oh so prolonged contractions taking every, last, radiant blast of love that his besotted ballocks could deliver...\n\nAt last, they lay unmoving.\n\nThe sound of the wind rustling leaves presently overtook the thumping pulse in Declan's ears.\n\n\"Aoife,\" he murmured, \"Ye owe me a shilling.\"\n\n* * * * *\n\nDay hangs its light between two dusks, my heart,\n\nAlways beyond the dark there is the blue.\n\nSometime we'll leave the dark, myself and you,\n\nAnd revel in the light for evermore.\n\n--- Francis Ledwidge\n\nAoife sat cross-legged upon the ground, studying the sleeping young man near her. She had re-donned her white shirt, and under its nominal protection, she struggled to collect herself.\n\nWhilst he slept, she had finished the darning of his stocking that had been so indecently interrupted a short while ago. Now her hands were motionless as she thought on what they had done...on everything that they had done...all the shameful and blissful exercises of amorous enterprise. The heat rose in her cheeks, and she shifted in discomposure, pulling the mended stocking off her hand.\n\nDeclan lay on his belly among the waving grasses and flowers, his turned head resting on his folded arms. His eyes were closed, and Aoife was free to let her eyes wander where they would without his intense green gaze upon her.\n\nShe observed his face, inwardly wincing at the swollen black eye. The visible lacerations thankfully all appeared to be clean and untainted. Even with his injuries, how handsome he was to her! The strong, dark eyebrows and thick lashes, the full lips --- varyingly humorous, warm, and wicked. The bristles of a youngling beard grew upon his upper lip and jaw --- no doubt, Declan's attempt to distract Blaylock's recognition.\n\nAoife's gaze ventured lower, and she flushed anew as she lingered over his nakedness...the tall, wide-shouldered body was presently in repose, his back gently expanding with his breaths. The stalwart muscles of his torso and limbs were visible but quiescent. A few darker, linear marks here and there upon the smooth skin of his back evidenced the healed lacerations from the flogging Blaylock had administered back in September. Below his lean waist, his round, muscular buttocks were at ease, but well did she remember the feel of their dense flexing under her hands and calves as he rode her.\n\nAye, Medb! \n\nFor a moment Aoife's eyes glazed, and she swallowed. Gingerly she adjusted her position on the ground --- the whole of her privates felt most happily sore and swollen. Declan's earlier emission deep inside her cunny had worked its way down and was presently oozing from her vaginal opening, and her bottom hole was yet quivery with the novel sensation of Love's vigorous possession and its hot charge of sperm. Indeed, she had yielded to Declan's ardent inspection upon withdrawing, hiding her flaming face in the cool clover as he had held her cheeks apart and exulted, \"Oh love, how rosy and puffy your wee bottom hole is...and a string of spunk is connecting it to me cock!\"\n\nAoife closed her eyes as her cheeks burned anew.\n\nBy and by, her tender survey of him was complete, and there was naught left to stand between her and her tormented thoughts.\n\nDuring the past months when her mind had fixed itself upon revenge, she had in her methodical mission contemplated little save her righteous fury. To the extent that she had anticipated what her feelings would be in the unlikely event of accomplishing her purpose, she had supposed she would experience some sense of peace.\n\nSuch was not the case...but not, as one might guess, due to remorse or horror over her bloody deed. Nay, in place of peace was an open wound in her heart that no immediate remedy could stanch --- a wound so wholly unexpected that she was floundering for self-possession. Aye, the tumult of shame, despair, and joy overwhelmed her.\n\nShe was well acquainted with the first two sensations, but the third was unfamiliar to her. Joy. And the joy was the spoils of love.\n\nNever in all her rehearsals of confronting Blaylock had she considered encountering Declan on the scene, and nothing that had then transpired --- either at the garrison or afterwards alone together --- was according to plan. In the space of a few minutes, her acknowledged feelings towards Declan had undergone so material a change that she scarce felt master of her emotions.\n\nOr...had she loved him all along? She had been denying her feelings so relentlessly that she knew not when her heart had first been stirred by him. The new knowledge of him that she had learnt last night mayhap had been but a stimulant that allowed her to abandon herself to her heart's wiser counsel.\n\nNo matter --- after years of burgeoning curiosity about Nature's commission of sexual intercourse, she had at last been initiated into that profound mystery. But 'twas so much more than she had imagined, and her curiosity, far from being sated, was all the more aroused.\n\nThinking back, the spells of timid fluttering between her legs that had for some time distressed her...how foolish such things now seemed! What was that to the feel of the young man's large body pressing down upon her? To the feel of his iron-like organ pushing into her? To the pleasure of voluptuous release in each other's arms?\n\nBut the revelations did not end simply with the physical sensations. Aoife's astonishment at the new venture had been compounded by a flux of turbulent emotions as her body twined with Declan's. She ken right well that the word 'love' had oft been applied to the activities attendant upon the pursuit of sexual congress, but with innocent cynicism, she had not foreseen that the emotion and the act were in truth connected.\n\nWere they? Had she married her childhood playfellow Hugh McDonnell and lain with him, would she have felt a like sensation? She was too new to both love and sex to disentangle the puzzle.\n\nBut Aoife's rhapsodic discovery did not entirely ease her other cause for disquiet. Her happy introduction into Venus's pastime could not so quickly erase eighteen years of shame and furtiveness born of admonitions and scolding from all fronts. Was it the same for lads, or did lasses bear the brunt of shame's burden? Did the shame indeed fortify the helpless pleasure?",
        "Even now, merely sitting here, her heart pattered in her chest and between her legs as she thought on their last joining, and one part of her urged her to slip away whilst Declan peacefully slept...to avoid meeting his eyes after their shocking act of copulation. But the wicked, defiant part of her was stronger, sitting unmoving whilst she once again eyed his naked body.\n\nEver since their embrace at the waterfall last night, Aoife had fought off the sense of impending doom, and in Declan's arms she had for most of the day managed to blot out her despair. With the sheer weight of him crushing her, his powerful arms encompassing her, his engorged cock filling her, and his breath buoying her, she had felt safe for the first time after all the vagaries of her young life.\n\nBut now as she sat alert upon the hillside amid the lengthening shadows, the image returned to her of her brothers and Hugh McDonnell grimly smiling and waving as they rode away to battle.\n\nAnd Aoife knew that no matter how oft or where she took that instrument of Love's bliss into her body...no matter how much spunk with which he plastered her insides, they would inevitably say farewell in a few hours...and Declan would march into battle.\n\nDeclan stirred on the ground, his eyes opening as he languidly stretched and turned his head on his folded arms...smiling at her where she sat cross-legged a few feet away. \"How are ye fairing, Aoife O'Farrell?\"\n\nAoife shrugged. \"I'm fine.\" She observed him as he rolled from his belly onto his back, folding his hands behind his head. Furtively she peeked at his organ, worried about its possible state after what they had done. But to her relief, his now soft cock was remarkable only for a glistening coat of unguent in which were comically adhered several shamrock leaves. As Aoife stifled a nervous giggle, Declan raised his head and glanced down. He grinned.\n\n\"Have ye shamrock up your bum, little faery lass?\"\n\nAoife ducked her face to hide her embarrassment.\n\n\"Aye, it stands to reason that your bottom hole is as patriotic as the rest of you.\" He rose to a sitting position, draping a forearm over his raised knee. \"Christ! You've worn me out, so ye have. Neither lad nor lass has ever accomplished that before.\"\n\nHer brows lifted, and she looked at him from under her lashes. \"I would have thought that you enjoyed many a like bout with the lasses when you were in the Duke's employ...what with being a guard and prizefighter.\"\n\nDeclan plucked a blade of grass and chewed upon it. \"So would a rational person suppose --- and be correct, at least in the case of many of me comrades. But despite my victories in the ring, I always was a bit of a sapscull round the maidens...too serious-like and quiet...for the ones I met anyway.\" He nodded slowly. \"Aye...in the past day alone, I've had more relations with you than with all the other maids in me life, combined.\"\n\nShe arched a curious brow at him.\n\nHe shrugged ruefully. \"Till last night, I hadn't lain with a lass for...nigh a year and a half now.\"\n\nAoife was surprised.\n\n\"After I met ye, I didn't want to with anyone save you,\" he explained.\n\n\"Well, that accounts for the last eight months,\" she teased.\n\nHis smile was unaffected. \"Before I met ye, I didn't want to with anyone save you. I was already in love with you...I just hadn't met you yet.\"\n\nThe low afternoon sun illuminated the green of Declan's eyes so intensely that Aoife's heart hurt as he looked at her...his irises were even more vibrant than the shamrocks decorating his cock, she thought with forlorn humor. Swallowing the lump forming in her throat, she diverted her gaze to the absent-minded motions of her fingers pleating and unpleating the hem of her shirt upon her bare thigh.\n\nThe wind stirred the pink cuckoo flowers and purple milkwort about them. \"Did you ever do...what we just did...before?\" she asked in a quiet voice.\n\n\"Not meself. I'd heard tell of it, but I will admit that I had suspected the truth of such tales. Indeed, for a moment there, I was skeptical of the enterprise succeeding at all.\" One corner of his mouth lifted in a sly grin round the grass blade.\n\nAoife blushed.\n\nThe heat fluctuated in her cheeks as she felt Declan's eyes studying her. Smoothing the creased linen of her shirt hem upon her thigh, Aoife's shoulders lifted in a brief sigh. \"Well, I had supposed that murder would most considerably enliven my next confession, but I daresay that confessing to that other 'enterprise' will prove even more stimulating to the priest...if he's anything like the last one to whom I confessed.\"\n\nDeclan's eyebrows quirked sharply. \"Of what are ye speaking?\"\n\n\"When I was in the convent...a priest at St. Andrew's asked me most detailed and mortifying questions about how...how I touch meself.\"\n\nDeclan's eyes flared. \"The bastard! I'll bloody well punch him in the face, so I will!\"\n\nAoife shook her head. \"I dinna think you can punch a priest. Anyway, 'tis no matter anymore.\" She sighed and hunched forward, her elbows upon her knees and her chin on her hands as she looked at the ground. \"'Twas a shameful, wicked thing, what we did.\"\n\nDeclan scooted closer to her and gently touched her knee with his fingers. \"I dinna hold with shame and wickedness in such matters...Nature gave us these bodies and gave us pleasure...that's all I know. That, and that I love ye so, Aoife...this wicked lad loves you so and wants to do everything with ye that lovers can do.\" He took her hands.\n\nAoife raised her face and at last managed to meet his earnest eyes. For several moments, their gazes wordlessly held as they sat cross-legged facing each other --- he naked, she in her shirt --- their legs touching, their hands joined.\n\nAll at once Declan's brows drew together, and his eyes clouded. \"Damn!\" he muttered.\n\nAoife tensed. \"What?\"\n\nHe shook his head slowly. \"I was so overcome, I plumb forgot --- about getting ye with child.\"\n\nHer face froze, mouth open. Aye, she too had been so overcome that she had not considered that repercussion of their unabashed couplings! After a few seconds, she murmured, \"Well, 'tis an unavoidable risk, so it is.\"\n\n\"Nay...not wholly unavoidable.\" Declan's expression seemed chagrined. \"I could have drawn out and spent over your belly instead of inside ye...and if I'd had me wits about me, I would have.\"\n\nFor some time, Aoife stared down at her hands that lay gently upon his upturned, calloused palms, idly noting how large his hands were --- the length of his fingers and size of his palm exceeded hers by over an inch. Under her fingertips she felt a faint pulse...whose it was she could not tell.\n\nA blue butterfly flitted between them.\n\nAt length she inhaled. \"'I dinna think I would have liked it so well if ye had.\" She met his searching gaze. \"'Twas Fate that brought us together...I shall trust Fate in this as well.\"\n\nDeclan's fingers squeezed hers, and his lips pressed in a soft line of unvoiced emotion.\n\nFeeling the knot in her throat again, Aoife shook herself. \"I need to bathe.\"\n\nDeclan nodded. \"I as well. Have ye still two pieces of soap?\"\n\nThey repaired to the nearby stream where they washed several paces apart --- Declan kneeling in the stream bed, Aoife on a submerged stone with her shirt tied under her breasts. She crouched at first, then surrendered to the flow, sinking to sit upon the rock with the cool, gurgling water up to her waist, soothing the enflamed parts between her legs. In the clear water, the glutinous spunk was visible spiraling from her twin openings. She winced slightly as she cleansed the tender flesh.\n\n\"I'm sorry I hurt ye, lass.\"\n\nLooking up, Aoife saw Declan's concerned expression.\n\n\"Faith, it seems that all reason flees me head when the wanting for ye comes over me,\" he said in a remorseful tone.\n\nAoife shook her head. \"The true pain will be when I no longer feel the touch of ye upon me.\"\n\nHis smile was somber. \"Aye, for me as well.\"\n\nAs they continued their ablutions, Aoife's eyes stole to Declan. Kneeling with his legs slightly separated, the water came up to his mid-thighs, and in shy fascination did she observe him sluicing his flesh and hair. How purposefully he handled his privates, tugging on his cock and lathering his ballocks! Mayhap her touch had been too hesitant and delicate...she yearned to play with the wondrous toy once more.\n\nOnce bathed, they returned to the cromleach and, with Declan's matter-of-fact comment, \"'Tis time we head to Fleetwood's farm, I think,\" they began dressing.\n\nAfter several silent minutes, Aoife asked, \"Will anyone have marked your absence last night and today?\" She fastened her stockings below her knees with the ribbon garters.\n\nDeclan, seated upon a low stone, was leaning forward to repack his knapsack between the spread of his legs. \"Aye, I warrant so. The Foley family, no doubt. What of you?\"\n\nShe nodded. \"'Kitty' should have worked in the shop today.\"\n\n\"Do you mean to return there? What will ye do now?\"\n\nAoife bent to buckle her shoes, forcing a nonchalant mien. \"If today's truancy hasn't cost me my position, then 'tis a good enough place for bed and board. If I'm dismissed...well, I understand that the Magistrate Jacob is eager to fill a position in his household.\" The next moment she squealed as Declan pulled her down onto his lap.\n\n\"The Devil, ye say!\" he growled, giving her a laughing shake with his arms about her. Then his expression grew serious. \"You need to steer clear of that man --- I dinna trust him.\"\n\nShe nodded, laying an arm round Declan's shoulder. \"Nor I.\" Her eyes searched his face, now level with her own, and a moment later she raised her free hand, turning his face to examine his wounds.\n\n\"I need to put more...unguent on these,\" she said, her voice faltering as their eyes fixed upon each other. She saw his throat move as he swallowed, and he raised a hand to brush a stray lock of hair back from her face.\n\n\"When we arrive at Fleetwood's, who will ye be?\" he asked. \"Do you want to wear me cap?\" He tweaked one of her short braids. \"Are you still Michael...who strangely was dyeing his hair?\"\n\nShe pondered the matter. \"I suppose I'm meself now. I intend to persuade Captain Fleetwood to put me to use in whatever manner will best serve the cause...whether as a lad or a lass...whether on the battlefield or behind the scenes.\"\n\nDeclan's countenance grew bleak and his arms tightened about her. \"I -- I wish there was some place where I knew you would be safe.\"\n\n\"I wish there was some place where I knew you would be safe,\" she countered.\n\nTheir wistful gazes held each other. Declan cleared his throat. \"'Alas, no such place exists on the island till Ireland is free.\"\n\nFor several moments they simply held each other.\n\nBefore long, Aoife recalled the hidden pocket in her knapsack --- she jumped from his lap. \"Oh Declan! I made something for the company. I want to show you!\" Squatting by her bag, she used her dagger point to cut a few of the thread stitches and tore open the pocket.\n\nDeclan stood with a quizzical expression as she turned with the bundle of green silk. The stack of folded neckerchiefs she set upon the boulder next to her, then shook out the remaining piece, raising her arms above her head to keep the nigh six-foot-long rectangle from dragging on the ground.\n\nDeclan bent to pick up the lower corners, and they held the sturdy silk horizontal between them. His face was a mix of wonder and pride. 'Twas the green flag of the United Irishmen with the gold harp of Erin Go Bragh that she had sewn to the center on both sides. In the late afternoon light, the emerald and gold were luminous.\n\n\"You made this?!\"\n\nShe nodded. \"Do you think 'twill be of use to Fleetwood's company?\"\n\n\"By God, ye dearest girl! I canna imagine a more stirring inspiration than this magnificent green flying above us in battle! The men will be right proud, so they will.\"\n\nShe smiled, her lips quivering.\n\n\"What are those?\"\n\n\"I made neckerchiefs from the remaining fabric. Since the men dinna have uniforms, I thought some might need the colors.\"\n\nDeclan nodded. \"Perfect.\"\n\nBetween them, they refolded the flag. As they stepped close together for the final fold, he cleared his throat. \"When we get to Fleetwood's...may I introduce you as me bride to be?\"\n\nAoife's eyes lifted to his. Why, the lad was serious, so he was! She nodded, and Declan's face came over with an elated grin. \"Once the lads learn you're a lass, 'twill keep them off ye, so I hope.\"\n\nAoife rolled her eyes. \"Well, in that case, I won't hold ye to it. Come here now and sit for a moment.\" She reapplied unguent to his wounds, both of them reddening at the sight of the little pottery jar that had been a party to their last lewd romp.\n\nAt last, there was naught to do save sling their knapsacks upon their backs and take their leave of the enchanted standing stones that had witnessed their transports of love. As they began to walk down the hillside, Aoife was newly aware of the tenderness between her legs.\n\nDeclan appeared likewise affected, for his usual loping stride was more ginger, and in a moment, he observed, \"Jaysis, me privates are battered and sore! Yours too, 'twould seem.\" He regarded her gait with a wry smile. \"By God, we're a handsome pair! If it were not for these bruises on our necks and me face, the lads would ken right well what we've been getting up to.\"\n\nAoife felt the stinging pressure behind her eyes. \"I -- I hope we didn't sap your strength for...tonight,\" her voice choked.\n\n\"Nay. With a little walking to stretch me legs and some sustenance, I'll recover me forces, no fear.\"\n\nStepping past a blackthorn tree, they startled a pair of lambs, sending them scampering downslope to their mothers.\n\nUnbidden, the hot tears were suddenly spilling from Aoife's eyes and streaming down her cheeks. Declan stopped short, and the next moment she was wrapped in his sturdy arms, her small form molded to his powerful body, her face pressed to his wide, warm chest.\n\n\"Oh, love!\" he murmured, holding her tightly as she shook with silent sobs. \"Dinna cry, me sweet, brave lass!\"\n\nAoife's arms clung fast round his waist, feeling the thump of his heart under her cheek. Large, strong hands clasped her head and tilted her face up to his. Through the blur of tears, she beheld the torment he was struggling to hide. His shining, green eyes bore into hers. \"Do you ken how rare and fine ye are to me, Aoife O'Farrell? Alongside Ireland, there's nothing that I love so well.\"\n\nAoife hiccupped and sniffled, endeavoring to stem her tears.\n\n\"--- and I need you to stay stalwart, come what may.\"\n\nHer head nodded in his hands.\n\n\"Know this certain, me faery lass: we'll be together, and we'll live in a free Ireland.\" His head bent and his lips pressed to hers...for several seconds their breaths melded as their mouths opened in tender accord.\n\n\"I love you, Aoife,\" he murmured against her lips.\n\n\"I love you, Declan.\"\n\nWhen they separated, she wiped her eyes and nose on her sleeve. Simultaneously they noticed they were standing next to the newly erected beehive, and their grins turned into laughter.\n\nDeclan took her hand as they tramped down the hill to head towards Fleetwood's farm, the sun setting before them over the live, green land they loved so well.\n\n.\n\nOh, then tell me Sean O'Farrell,\n\nTell me why you hurry so.\n\nHush me Buchall hush and listen,\n\nAnd his cheeks were all a-glow.\n\nI bear orders from the captain,\n\nGet you ready quick and soon,\n\nFor the pikes must be together\n\nBy the Rising of the Moon.\n\nBy the Rising of the Moon,\n\nBy the Rising of the Moon,\n\nFor the pikes must be together\n\nBy the Rising of the Moon.\n\nOh, then tell me Sean O'Farrell\n\nWhere the gathering is to be.\n\nIn the old spot by the river,\n\nRight well known to you and me.\n\nOne more word for signal token,\n\nWhistle up the marching tune.\n\nWith your pike upon your shoulder\n\nBy the Rising of the Moon.\n\nOut of many a mud wall cabin\n\nEyes were watching thru' the night.\n\nMany a manly heart was throbbing\n\nFor the coming morning light.\n\nMurmurs ran along the valley,\n\nLike the banshee's lonely croon,\n\nAnd a thousand pikes were flashing\n\nBy the Rising of the Moon.\n\nThere beside the singing river\n\nThat dark mass of men were seen,\n\nFar above their shining weapons hung\n\nTheir own beloved green.\n\nDeath to every foe and traitor,\n\nForward strike the marching tune,\n\nAnd hurrah me boys for freedom,\n\nTis the Rising of the Moon.\n\n--- John Keegan Casey\n\n*** THE END***\n\n.\n\nEPILOGUE\n\nOnly one of Declan's two predictions came to pass.\n\nBeginning at dawn on May 24th, 1798, risings broke out throughout much of Erin's isle. Of all the counties, the United Irishmen and Defenders were most successful in Wexford, with significant rebel victories at Oulart Hill, Enniscorthy, and Wexford town that led to the establishment of a brief-lived civilian republic in the county.\n\nBut the Rebellion of 1798 was ultimately doomed --- outnumbered, disorganized, and betrayed by spies, the rebels were suppressed by the forces of the Crown by the fall of the year.\n\nOnly temporarily thwarted, the fight for Irish citizens' rights and Ireland's freedom continued throughout the 19<sup>th</sup> century.\n\nNeither Declan, nor Aoife, nor their children lived to see a free Ireland. It was not till 1922, in the lifetime of their great, great, great grandchildren, that Ireland won its freedom from the United Kingdom.\n\nAuthor's Note:\n\nThank you for reading and for the feedback.\n\nI put together a playlist for this series, consisting primarily of traditional Irish/Celtic music. Some of the songs are contemporaneous to the time of the story and were quoted in the text. Most of the others are decades to over a century old but are in keeping with the spirit of the story. Numerous great renditions are freely available at many sites online.\n\nIf interested, here is the list of the song names, with my favorite rendition indicated. This list is also assembled as a public playlist (ie. I make no money from it) on a music streaming service. If you already are a member of a music streaming service, you may be able to find the list by searching the title of the story: Celtic Mist.\n\nTale of the Celtic Warrior (Paul Curtis)\n\nRoisin Dubh (Innisfree Ceoil)\n\nChorus Jig (Celtic Music Voyages)\n\nStar of The County Down (The Irish Rovers)\n\nHurling Boys 69 (Sean Softley)\n\nThe Next Market Day (Patricia Daly)\n\nWearing of the Green (The Wolfe Tones)\n\nThe Roseville Fair (Patricia Daly)\n\nSnowy Breasted Pearl (The Wolfe Tones)\n\nCallirus (Adrian Von Ziegler)\n\nThe Morrigan (Heather Dale)\n\nBodhran (Young Dubliners)\n\nErin Go Bragh (Kate Burke and Ruth Hazleton)\n\nDirty Old Town (The Dubliners, Paddy Reilly)\n\nThe Barleymow (The Irish Rovers)\n\nBlack Velvet Band (The Irish Masters)\n\nUp Among the Heather (The Irish Rover)\n\nCourtin' in the Kitchen (Thomas Makem)\n\nLusty Young Smith (The Merry Wives of Windsor)\n\nGreensleeves (Phyllis Sparks)\n\nArthur McBride (Andy Irvine)\n\nWhack Fol the Diddle (the Clancy Brothers)\n\nThe Fields of Athenry (Paddy Reilly)\n\nWorkers' Song (Dick Gaughan)\n\nDown the Bray (Ivan Smyth)\n\nOrange and the Green (the Kreellers)\n\nIrish Soldier Laddie (Celtic Warriors)\n\nO'Reilly's Daughter (The Comedy AllStars)\n\nA Gentleman Soldier (The Dubliners, Luke Kelly)\n\nWaxies Dargle (Young Dubliners)\n\nI'll Tell Me Ma/Belle of Belfast (The Irish Rovers)",
        "John Ryan's Polka (the Irish Fever)\n\nRed Haired Mary (Na Fianna)\n\nBanshee (Celts of the Alps)\n\nCave Fight (Daniel Pemberton)\n\nO'Keeffe's Slide (Ivan Smyth)\n\nAn Irish Rose (Ryan Brady)\n\nThe Rose of Allendale (Paddy Reilly)\n\nRising of the Moon (the Clancy Brothers)\n\nBoolavogue (Declan Hunt)\n\nRoisin Dubh (Ann Carroll)"
    ],
    "authorname": "astushkin",
    "tags": [
        "oral sex",
        "blowjob",
        "fellatio",
        "facesitting",
        "cowgirl",
        "anal play",
        "analingus",
        "anal sex",
        "public sex",
        "anal orgasm"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/celtic-mist-ch-16"
}