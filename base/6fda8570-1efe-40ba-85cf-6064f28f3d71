{
    "title": "Home for Horny Monsters Ch. 69",
    "pages": [
        "Hi all!\n\nSo first thing's first, a big apology from me. You see, I promised you a big sex scene this chapter, but you are now about to learn a terrible Annabelle fact:\n\nI suck at organization and am often easily confused. Between editing, writing and some other \"life\" stuff, I got my chapters wrong and made a huge goof. I even remember double-checking, but I thought I was posting this chapter, and...ugh.\n\nRegardless, I am super sorry and will do better (please don't hate me).\n\nThe big sex scene is actually next chapter (I triple-checked!). It is a group scene, and I really hope you like it. This chapter focuses a little bit on our new character in the tub, where Reggie and Jenny have run off to, and Mike's ultimate fate after being poisoned.\n\nOh, and a bit of a huge revelation.\n\nNew readers, welcome! If you didn't understand any of the above, you should back up about 68 chapters or so. Don't worry, we'll wait for you.\n\nReturning readers, welcome back! I'm working hard to keep putting these stories out as long as you keep reading them. Thanks for all your support thus far, and make sure you tell all your family and friends that you love them. You never know when the Jersey Devil may fuck up your day.\n\nDespite my huge goof, I hope you all enjoy what happens next, cause we're living life\n\n\n\nOn The Edge\n\nWhen Beth opened her eyes, the first thing she saw was Lily sitting at the foot of Mike's bed. The succubus was staring at the opening to the bathroom. Lily was also unnaturally still, which was unnerving.\n\n\"Shit, what time is it?\" Beth reached for her cellphone. When she turned it on, it revealed that she had thirty-eight hours remaining until the angel came back with the other horsemen. \"I didn't mean to sleep so long.\"\n\n\"You didn't mean to pass out is far more accurate.\" Lily leaned back and looked over her shoulder. \"But I don't blame you, being a new mom and all.\"\n\n\"New mom?\" Beth closed her eyes, the events of the previous night rushing through her head. Lily was obviously referring to the living ooze in Mike's bathtub. Shortly after greeting her clone, she had gotten light-headed and asked for some water. The details were fuzzy after that. \"Did you carry me to bed?\"\n\n\"I did. That thing out there sealed your wound, but you had already lost way too much blood to be considered healthy.\"\n\n\"I see.\" She tried to sit up, the effort making her head pound. \"What did I miss?\"\n\n\"Death and your demon semen had a little chat. Very adorable, by the way. She speaks using ooze noises, bubbles, and snot sounds. Apparently, Death understands her.\" Lily sat forward, her eyes still on the bathroom. \"As far as answers, we don't have many. Your spawn--\"\n\n\"Can we please call her something else?\" She didn't like the constant reminder of her ordeal with Oliver. \"Something nicer, maybe?\"\n\n\"Princess Jellyfish in there doesn't know a whole lot about herself. She has some of your memories, but they're fragmented. Told Death all about her best friend in middle school and a bunch of stuff from your parents' house. Her first real memories seem to be waking up in the tub and seeing you leaning over her.\"\n\nBeth felt her breath hitch in her throat. \"So she's a copy of me?\"\n\n\"No. Even she admits that much. Apparently, the logical part of you she inherited is smart enough to realize she isn't you. That, and being made out of primordial ooze.\"\n\n\"So nobody knows what she is?\"\n\n\"Gee, if only I could go to the Library and look it up.\" Lily rolled her eyes dramatically. \"But no. She's an anomaly, which is saying something coming from me. I've seen a bunch of weird shit in my time with Amir and the Society. The stuff in that vial was essentially pure, concentrated essence of demon.\"\n\n\"Demon?\" Beth's mouth was suddenly dry.\n\n\"Sort of. That windmill motherfucker who showed up and I are both made of the same material. Hard to believe, right?\" Lily put her hands under her breasts and jiggled them. \"Not only are these tits perfect, but they're nigh indestructible.\"\n\nBeth pointed at Lily's wounded arm. \"I beg to differ.\"\n\n\"Ah. Let's clarify.\" Lily held up her damaged arm, still sealed beneath Eulalie's webs. \"That magic goop of yours is kind of like human stem cells. It can be made into pretty much anything that can potentially exist. I'm a succubus, a lesser demon. I have to follow certain rules. Despite the fact that I am made of the same substance as the Annoyer of Worlds, I have a certain vulnerability to divinity. He outranks me in the hierarchy, ergo he can hurt me.\"\n\n\"So you're only injured...because your cells are programmed that way?\"\n\n\"Bingo. So when I say he can vaporize my ass into nothingness, I mean it.\" She shook her head. \"Now if I was Oliver, it would be a different story. He was a high-ranking angel back before the Fall. If not for being weakened and trapped inside of mirror land, I suspect he could have bitch-slapped Mecha-Hymen out there all the way back to Daddy's love hut in the sky. Would be quite the spectacle.\"\n\nBeth giggled. \"You're better at nicknames than Tink is.\"\n\n\"Oh, please, that girl is a fucking artist.\" Lily tapped her horns. \"We only get to hear the scrambled shit that comes out of her mouth. After things go back to normal, I might hang around in her head and see if she can teach me a thing or two.\"\n\n\"You can't be serious.\"\n\nLily shrugged. \"I've discovered that I'm more open to improvement these days. Anyway, back to Oliver. Your loogie love child--\"\n\n\"No.\"\n\n\"Booger-skinned baby?\"\n\n\"No.\"\n\n\"Goo-girl?\"\n\nBeth sighed and waved her hand. She had a feeling Lily could do this all day if she chose. \"Whatever. Please continue.\"\n\n\"Even though she's made of raw material, Oliver was the origin. I worry that somehow this is one of his tricks, and I have no way to tell.\" Lily crossed her arms. \"Death seems to think she's great, but I can't exactly throw in with someone who tried to talk us out of the Apocalypse by discussing his tactics for finding Waldo. We also clearly have an internal affairs issue, and it's so convenient that she appeared when she did.\"\n\n\"Internal affairs?\"\n\n\"Damn, apparently, some of your brain cells died off, too.\" Lily moved toward Beth, her eyes still on the bathroom. \"Remember that whole 'Tink is under a magic spell and something broke out of the Vault' thing we just went through? Something is loose in the house and I have no idea what.\"\n\nBeth had actually forgotten about that part. Nearly dying had that effect on her, apparently. \"Where are the others?\"\n\n\"Kisa is watching Tink. Tick Tock is hiding under the bed as a backpack. Cecilia is watching the front yard with Death, apparently they're becoming quite chummy. As for His Highness, I haven't seen him. Or Jenny for that matter.\" She paused for a second, as if lost in thought. \"Or any of the fairies.\"\n\n\"Shit.\" She moved to get out of bed and groaned, barely managing to sit upright. Her joints hurt, but her head was a mess. It was as though a massive hangover had activated once she moved. \"Aspirin first, Reggie and Jenny next.\"\n\n\"I'll get it.\" Lily walked into the bathroom and Beth heard some cabinets bang. When Lily returned, she was holding pills in one hand and a cup of water in the other. \"Your new friend would like to speak to you.\"\n\n\"She would?\"\n\n\"I assume so. She's been a pool of motionless slime for a couple of hours now, so the fact that she's up must mean she heard you.\"\n\n\"Great.\" Disgruntled, Beth took the aspirin and swallowed them with the water. What the hell was she supposed to say to a slime version of herself?\n\nWhen she walked into the bathroom, her clone was waiting. She felt a little relieved to see that it had changed its features slightly. It still had her face, but its hair now dangled in thick, fat drops that indeed made her think of a jellyfish.\n\n\"Hey. Lily said you wanted to talk to me?\"\n\nYes. The ooze moved its hands with purpose, but the words were tough to decipher. Beth didn't know how much of this was an inability to remember the right signs and how much was that pieces of the ooze fell off if she moved too quickly. We need to prep for mediation.\n\n\"Mediation? Oh, right. With the horsemen.\"\n\nThe slime nodded. This is weird for you, but it's also weird for me. I keep thinking that I should be you, and that you've somehow stolen my life from me.\n\nBeth nodded. It made sense. If she had woken up in the bathtub as a sentient ooze, she would have assumed the same thing. \"Is there anything I can do for you?\"\n\nThe slime shook her head, casting sticky blue droplets onto the cold tile. No. The horsemen are coming back soon, and you need to have an answer for them.\n\n\"I get that, but I have other problems to deal with as well. Someone put Tink under a spell and opened the Vault.\"\n\nI see. That sounds familiar, but my memory is blurry. Slime-Beth slumped over, and Beth half expected her to collapse back into the tub. I'm afraid that I can't help with any of that. I haven't figured out how to make legs yet.\n\n\"You're stuck in there?\"\n\nNot unless you bring a really big bucket. A thin smile appeared on Slime-Beth's face. I'm still new at this.\n\n\"Welcome to the story of my life here. Or our life, however you want to phrase it.\"\n\nI was going to suggest we put our heads together to figure out how to handle the horsemen. It's stressing me out so much that I've got a case of the ripples. As if to illustrate her point, ripples spread throughout slime-Beth's body.\n\nThat is really convenient, Beth thought as she looked at the floor, pretending to consider her clone's idea. Was Slime-Beth part of some insidious plot? To what end? For all she knew, the slime had been sentient since Oliver had been filtered out of her soul.\n\nAnd why was there so much of it? Did it replicate over time? There were too many questions, and the only person who might have answers was in a magical Labyrinth back on Earth. Or under it. She really had no idea how any of that worked.\n\n\"You think we should divide the work?\"\n\nSlime-Beth nodded. The angel is highly likely to consider whatever the other horsemen bring to the table. We need to find a way to counter in a way that isn't obvious.\n\n\"Agreed.\" If the slime was part of the plot, she wasn't really telling Beth anything she didn't already know. \"I'll come up with some ideas and we can talk later?\"\n\nSlime-Beth nodded. You know where to find me. Can I have a pen and paper?\n\n\"You've got it.\" Beth walked out of the room and saw Lily waiting on the bed.\n\n\"And?\" Lily asked.\n\n\"Apparently, she's going to brainstorm ideas to outwit the horsemen while we try to figure out what's up with the Vault.\"\n\n\"That's really--\"\n\nBeth put her hand over Lily's mouth. \"Nice of her. C'mon, I need to get her something to write with.\" She didn't need the succubus voicing any more suspicions out loud and tipping off her slimy double.\n\nLily licked Beth's palm, then smirked when she yanked her hand away. \"Lead the way.\"\n\nBeth went to her room to retrieve a pen and paper. She also managed to find a couple of pencils, figuring that the pen might quit working if it got slimed. She gave everything to Slime-Beth, who thanked her and started making notes to herself.\n\nOnce out in the hallway, Lily closed the door.\n\n\"We assume she's just gonna stay in the tub and not go down the drain or anything.\" The succubus lifted an eyebrow. \"What do you think?\"\n\n\"I think I hate this. Hold on.\" She opened the front door and walked outside. Death and Cecilia were sitting on the porch swing, deep in conversation.\n\n\"Ahem.\" Beth cleared her throat to get their attention, then turned toward Cecilia. \"A word, if I may?\"\n\nCecilia nodded and floated from her seated position through the chains of the swing. \"Do you need something?\" she asked.\n\n\"I do. Can you be invisible for a bit and keep an eye on our bathtub buddy? I just want to make sure nothing happens to her.\" It wasn't that she distrusted Cecilia, but what if the ooze could read her mind? Or maybe she would be able to see the banshee and the two of them would hit it off?\n\n\"I can.\" Cecilia waved to Death, who waved back, and then went inside. Beth followed her in, then watched Cecilia ascend the stairs, slowly vanishing with every step.\n\n\"Let's check on Kisa and Tink.\" Beth led the way to Kisa's bedroom on the second floor. The room itself was sparse of decoration. One of the walls was mirrored with a ballet barre and the floor consisted of polished hardwood. Kisa had a bed, a wardrobe, and a record player, and that was it.\n\nLying on Kisa's bed was Tink. At the foot of the bed was a large lump that opened brilliant, emerald eyes. They reflected the dim light that came in from the nearby window, and Kisa's tail twitched nervously behind her. If Beth hadn't been looking specifically for her, she doubted she would have seen her there.\n\n\"How is she?\" asked Beth.\n\n\"Still out.\" When Kisa sat up, it almost looked like a magic trick. She could become very small when she wanted. \"She keeps grinning in her sleep, so I guess that's a good sign.\"\n\n\"That's my doing.\" Lily crossed the room and sat down on the edge of the bed. \"Her dreams were a solid jumble. A bunch of dark corridors and angry voices. Shit ton of goblins. They sound like they're speaking German.\"\n\n\"Could you go in there and ask what she saw?\"\n\nLily frowned. \"I can try. Being in there isn't like other heads I've been in. It's both very abstract and intensely detailed, and she's...distracted. \"\n\nTink giggled, then let out a gasp. She clutched the blankets tight against her body and groaned.\n\n\"Tink best wife,\" she muttered in her sleep, then sighed contentedly.\n\n\"Well, no time like the present.\" Lily sat next to Tink. \"Maybe her post-nut clarity will give me some answers. Take Kisa, see if she can help you sniff out your pet rat.\"\n\n\"I don't track by smell.\" Kisa slid out of bed and stretched. Her mouth opened wide, revealing all of her teeth. \"Also, I have to tell you something. I haven't been feeling the best since last night. My whole body aches like I have the flu.\"\n\n\"You're sick?\"\n\n\"I think I had a fever for a bit, but not anymore. Felt like the flu. Seems to be fading, but...\" she yawned again. \"I think Tink had something similar. May have just been a bug, or whatever. She kept wincing like she was in pain. Just thought you should know. Anyway, let's go.\"\n\nThe two of them did a quick search of the second floor. All of the rooms that the rats used were either empty or had a few of them about. Beth questioned them about Reggie's whereabouts, but none of them gave any indication that they understood what she was asking.\n\nThe study with large viewing windows that usually looked over an unexplored mountain-range now looked directly into the insulated walls of the house. It was most likely another world like the greenhouse, but there hadn't been a safe way to explore it. Now it just looked like the symptoms of a mad architect.\n\nThe first floor was empty as well. The office and the parlor were empty, and both were so cold that Beth shivered. This led to her and Kisa stopping in Beth's room so that she could put on a sweater.\n\nThe other rooms on the third floor were also empty. The Observatory no longer looked on eerie star fields but misty skies.\n\nShe and Kisa wandered out into the hallway. Beth leaned against the railing, her eyes on the first floor. From here, she could see part of the living room and the front door. Maybe even the door of the office if she leaned forward far enough.\n\n\"Where could they be?\" asked Beth. She really hoped nothing had happened to Reggie or Jenny. It was starting to feel like everything that happened was part of some overarching plot, but she also wondered how much of that was just her imagination.\n\n\"I'm out of ideas,\" Kisa admitted. \"I can't think of anywhere else to look for them. They didn't go into the Vault, did they?\"\n\nBeth shivered. \"If so, then they're stuck there until someone who actually knows how to use magic can go back in.\" She wondered if the Grimoire would have a spell for locating someone.\n\n\"Beth?\" Kisa was looking up at the ceiling.\n\nWhen Beth looked up, she saw the small string dangling from the cord that released the spring activated door to the attic. She had noticed it a handful of times, but had never once considered what might be up there.\n\n\"Worth a look,\" she said. \"But let me get reinforcements.\"\n\nBy reinforcements, she meant Tick Tock. When she walked into Mike's room, she could hear sloshing sounds from the tub. Once at the bed, she laid on her belly and slid underneath to grab the mimic and pull him out. Hopefully she wouldn't need his assistance, but he also had the Grimoire.\n\nBack in the hall, she put her hands together over her knee to give Kisa a boost. The catgirl was very light and easily leapt into the air to grab the dangling cord. The door creaked and tilted, allowing a wooden ladder to slide free. Both Beth and Kisa leapt out of the way as it smacked into the floor, chipping the wood.\n\n\"Tink's gonna be pissed,\" Beth muttered.\n\n\"Then don't be around when she sees it.\" Kisa stared up into the darkness of the attic. \"Guess you want me to go first?\"\n\n\"Semi-invisible, phenomenal eyesight...I could go first, but if there are any surprises, I may fall on you.\"\n\n\"And squish me with your big ass...\" Kisa immediately covered her mouth with both hands, her ears curling down. \"Oh God, I'm sorry. That's how Tink has started referring to you.\"\n\n\"As big ass?\" Beth frowned. She didn't think her ass was that big.\n\n\"Don't think of it as an insult, it isn't about weight. To her, everyone has a bigger ass. And it really is a step up from horny lawyer. You don't really practice law anymore, and...you know what? I'll just pop up and look around.\" Kisa went around Beth and scrambled up the ladder. She disappeared into the darkness without a sound.\n\nA few moments later, Kisa reappeared and held a finger to her lips, and then waved Beth up.\n\nStrange. Beth climbed the ladder.\n\nThe attic was very dark, but there was a soft glow emanating from a corner of the attic. Kisa took Beth's hands and led her in a circuitous route around large objects that Beth couldn't quite make out. She debated using the light on her phone, but the batteries were already running low.\n\nAs her vision acclimated, she realized that the light seemed to be seeping in from below the edges of the walls. Kisa crouched down in front of her and moved her fingers along the wall. Every few moments, she thought she heard a voice. It might have been Reggie's, but it was too faint to be sure.\n\n\"I don't see a door,\" Beth whispered. The two of them searched, though Beth wasn't very helpful. There was enough light to make out very large objects, but that was it.\n\nThe wooden slats of the wall were relatively smooth. She ran her hands along it carefully, worried about getting a nasty splinter. What was even up here? Dark shadows loomed over her, and they were all covered in protective blankets.\n\nNearly on the opposite side of the light source, she found an odd seam in the wood and felt around it. It was a square shape not much bigger than a dog door. When she pressed on the middle, she heard a soft click.\n\nThe wall sprang open, and she found herself looking into a dark tunnel. A similar light illuminated the opposite end.\n\n\"Good job,\" whispered Kisa, which nearly made Beth scream in fright. \"I'll go first.\"\n\nKisa fit easily down the tunnel, but Beth did not. Her hips smacked against the edges of the tunnel, and she had to crawl on her belly to get through. She tried to get on her hands and knees, but it made her butt bump against the ceiling.\n\nBig ass, indeed. She scowled and continued forward. Her knees ached from contact on the hard floor, and she banged her knee more than once. The tunnel took a ninety-degree turn, and she found herself staring into what looked like a child's playroom.",
        "This is how I and my big ass die, she thought as she moved into the space.\n\nKisa was crouched nearby, and she was holding a finger to her lips again.\n\nIt was cold, and the dust made her want to sneeze. The walls had been decorated with stick figure drawings that she almost immediately recognized as people who lived in the house. Boxes had been stacked to make a maze, and Kisa led her through it. She heard someone speaking, and immediately recognized Reggie's voice.\n\n\"I don't think that's how it's supposed to work,\" he said. There was a clacking sound, followed by something hitting the wall. \"That isn't very lady-like.\"\n\nWhat the fuck? Beth moved behind Kisa, who was peering around the corner. The room they were in was tall enough to stand, but something about the attic had Beth fully paranoid about discovery.\n\nA small tea table and chairs had been set up. Reggie sat across from Jenny. In the other seats were the dolls that had once filled the house. Beth remembered that there had been plenty of them, and had wondered where they all went. It was eerie seeing them sitting there, almost as if the room was a small gladiator arena.\n\nAlong the opposite wall, Reggie's King's Guard of rats had spread out. Half of them were napping while the others watched. On the table, a board game had been set up. The room was lit with an electric lantern that hovered in the air over the table.\n\n\"Reggie?\" Beth stood and moved around the corner. When the rat king turned to look at her, she noticed one of the pieces on the game board move while he wasn't looking. It was an old chess set, and the pieces looked like they were made of marble.\n\n\"Ah, Lady Beth, hello.\" He turned back around and gestured at the table. \"We are just having a friendly game of chess.\" His nose and whiskers twitched, and he reached out and pushed the piece that had moved, a rook, back to where it had been.\n\nThe rook wiggled and then shot from the table. It bounced off of a stuffed bear, which clapped its hands excitedly.\n\n\"Doesn't look friendly.\" Beth crouched down next to them. Jenny was sitting on the other side of the table, her doll unmoving. \"How are you supposed to win if she just removes the pieces?\"\n\n\"Neither of us is playing to win.\" He let out a long sigh. \"Jenny brought me up here when she discovered how down I was. Thought it might do me some good to get away for a bit. This room is where she used to hide back before she was welcome downstairs, so there are many toys and games to play with.\"\n\n\"It looks like a child lived here.\" As a rule, children's rooms hidden in attics were generally bad news, Beth thought. Especially in scary movies.\n\n\"Indeed.\" Reggie moved a pawn forward, putting Jenny's queen in jeopardy. Apparently, Jenny didn't like that move, because his pawn slid the rest of the way across the table and then fired through the air and bounced off the wall. \"Jenny was once a child's toy, you know. She doesn't talk about it, and I know better than to ask.\"\n\n\"Your people should be safe,\" Beth told him. \"We found out that the house has been locked away from the real world. It's what was happening when Murray was yelling out front.\"\n\nReggie watched as Jenny's knight moved five squares forward to take his bishop. He picked up the bishop and the knight and put them back where they had started, then turned back to Beth. \"Do you really believe my people are safe?\"\n\n\"I have every reason to think so.\"\n\nReggie let out a sigh that sounded more like a squeak. \"This is good news, indeed.\"\n\n\"There's more, though.\" Beth filled him on everything else that had happened. While he listened intently, he paused every few seconds to look at the board and undo Jenny's attempts to cheat. Once Beth was finished, he contemplated her for several moments.\n\n\"These are dangerous times,\" he said, then turned back toward Jenny. He tipped over his king and held out a paw toward the doll. \"I yield. You have won this day.\"\n\nQuitter. Jenny's voice was a whisper, yet came from everywhere at once. The lantern flickered above them as if it would go out.\n\n\"Yes, I am. But I fear that the others need us. We all have a part to play in restoring the house to its former glory.\" He adjusted his glasses and hopped down from his seat.\n\nThe lantern dropped out of the air, but Beth grabbed it before it could hit the table. Jenny hopped down from her seat and held her arms up, waiting to be picked up.\n\n\"I've got you.\" Beth picked the doll up and cradled her in one arm. \"Do you have any idea how worried I was? I thought something bad had happened to you.\" As she turned, she saw a stack of board games against the wall. Most of them were very old, and she couldn't help but notice that one of them was a burnt copy of Clue. \"Jenny, didn't we throw that away? You know that's a banned game.\"\n\n\"Sometimes we must be reminded of our past failures. Jenny kept it as a memento. Besides, there aren't enough pieces left to play a proper game.\" Reggie walked over to the box and placed a paw on it. \"And to think I was so close to figuring out who the killer was.\"\n\n\"Your Majesty, might I remind you that we do not speak of the Clue incident?\"\n\nThe walls around them groaned, and then Jenny's voice chuckled from the dark corners of the room.\n\nI would have won, she added.\n\n\"You were cheating. That's not how we play family game night.\" Beth carried Jenny out of the room and was followed by Reggie and his rat guard. She started closing the secret door when Kisa bolted out, startling her. It was uncanny how she could forget that the catgirl was even there. Was it a similar spell to the geas? \"Also, I think you should know that something escaped from the Vault.\"\n\nWhat? The temperature dropped dramatically, and the dimly lit furniture in the room shook.\n\nBeth gave Jenny and Reggie an abbreviated version of events as they exited the attic. Once on the floor, she set Jenny down next to Reggie and had Kisa help her push the attic door back up. Cecilia poked her head through the wall to check on them, gave Beth a thumbs up, then went back to her surveillance.\n\nThe group headed to Kisa's bedroom, where Lily sat over Tink. Her face was flushed, and she kept licking her lips. She opened her eyes when they came in, and a bead of sweat rolled down her forehead.\n\n\"Everything okay?\" Beth asked.\n\n\"Yeah.\" Lily removed her hands from Tink's head. \"Just trying to mind meld with a brain-damaged genius who is currently dreaming about being gangbanged by Romeo.\"\n\n\"There's only one of him,\" Kisa said from behind Beth.\n\n\"Not in her mind. She's got an entire reverse harem in there. For example, she has one that lives in the bath and is made of water, one that's a ghost who sits on the porch...\" Lily smirked. \"I may have gotten distracted getting to know the one with wings and a tail.\"\n\n\"But what about the Vault?\" Beth set Jenny down on the record player.\n\n\"Hmm.\" The succubus shook her head. \"When Tink realized that the house had been transported, she ran to check on the Vault. You know how all those portals closed? She was worried that the Vault wouldn't be there anymore, which meant it was no longer properly sealed.\"\n\n\"I guess that makes sense. What happened?\"\n\n\"She saw that it had been opened but was taken out before she could see anything else. The sleeping spell that put her down wasn't a minor enchantment by any means. We're talking Rip Van Winkle caliber shit. She's out at least a few more days. We'll have to figure out how to keep her hydrated.\"\n\n\"Fuck.\" Beth walked over to the window and looked outside. The mist shifted ominously around the perimeter of the home. She half expected dark shapes to flit around in it. \"So it means that someone else was in the house.\"\n\n\"And likely still is. There really isn't anywhere to go.\" Lily crossed her arms. \"But let's address the real issue. Whoever did this was allowed in the house. Romeo hasn't invited anybody new in quite some time, other than Eulalie. And she was in the Library when it vanished.\"\n\nThe implications made Beth sick to her stomach. Whoever was causing trouble inside the house had been there for some time. She didn't think it was her doppelganger upstairs, Slime-Beth couldn't even get out of her tub yet. That meant whoever was doing this was someone that had been in the house all this time.\n\n\"Ah, looks like my point is finally sinking in.\" Lily crossed her legs and leaned back on Tink's bed. \"Whoever did this to Tink and opened the Vault...\"\n\n\"Is still here with us,\" Beth finished. She looked around at the others. There wasn't a single reason she could think of for anybody in the room to betray them. Jenny was probably the only one who could have gotten away with doing something right under their noses. But despite the Clue incident, Beth trusted the little doll.\n\nWas it Kisa? She could be essentially invisible. But why? It occurred to her that everybody was a potential suspect. Was that part of the intent? To tear them apart while they dealt with the horsemen?\n\n\"How do we figure out who did it?\" she asked, then met Lily's gaze.\n\nThere was a loud splat from the hallway, like mud being dropped from a great distance. Puzzled, Beth walked out of Kisa's room, followed closely by Lily. At the end of the hallway, a large green mass had accumulated at the edge of the stairs and was moving their way.\n\n\"Is that... who I think it is?\" Lily looked at Beth with concern on her face. Her question was answered when the slime pushed upward and formed into a naked torso. Slime-Beth's features were fixed in exaggerated horror as she pointed up the stairs with both hands.\n\n\"What's wrong?\" Beth asked, but the slime continued to point.\n\n\"Let me check.\" Lily moved down the hall and had ascended a few of the stairs when her clicking heels came to a stop. \"Mother fucker!\" she swore.\n\nBeth raced down the hall, nearly slipping in her doppelganger. Lily moved her tail over to let Beth through, but she never finished climbing the stairs.\n\nHovering horizontally in the hallway was Cecilia. The banshees hair floated around her as if she was sinking in a pool of invisible water, her hands crossed over her chest. Her eyes were closed, and her lips were pulled into a grimace.\n\n\"Cecilia?\" Beth moved to the banshee's side and tried to touch her, but her hands passed through. \"Cecilia!\"\n\n\"She's...sleeping.\" Lily was by her side, her palm hovering over the banshee. \"Dreaming, even. But how? Banshees don't sleep!\"\n\n\"I just saw her not that long ago, right before we came to check on you and Tink.\" Her heart was pounding so loud that she could hear it. That meant that Cecilia had been attacked while she was in the room with everyone else. The only people not present were her doppelganger and Death. Did this mean that the slime was the culprit?\n\nBut then why had Slime-Beth gone to the trouble to let them know? Was this a trick? She looked down the hallway at the other doors. They were all closed. If it wasn't the slime girl, then was the culprit still up here with them?\n\nLily was already moving down the hall. She opened up the bedroom doors and took a peek inside, then moved to the Observatory. Beth held her breath, fearing that the succubus would simply disappear. After a few minutes, Lily came back out, shaking her head.\n\n\"No sign of anyone.\" Her shoulders slumped. \"This is almost as bad as the Clue incident.\"\n\nBeth sighed. Things were bad all right, and the last thing she wanted was to be reminded of the Clue incident. \"Let's figure out how to bring her with us. Maybe Jenny can do it? I want everyone gathered up somewhere downstairs where we can keep an eye on each other. Nobody goes anywhere alone starting now. Agreed?\"\n\nFor just a moment, Lily looked like she was going to say something snarky. However, she glanced over at Cecilia and just nodded her head.\n\n\"Agreed.\"\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nAbella stood on the roof of the barn, her wings spread wide as the morning sun provided her with much-needed energy. The previous night's fight had been exhausting on its own, and her use of the heartfire had drained her reserves.\n\nThe large shadow she cast stretched behind her and touched the edge of the cabin. From where she stood, she could hear the quiet voices within. The night had been touch and go as Yuki fought to keep Mike alive using the potions that Zel had sent with him.\n\nThroughout the night, Abella had felt an odd tingling in her chest. It came and went, but now that the sun was up, it seemed to be gone for good. Though it had bothered her, the spiral fractures in her left wing concerned her even more.\n\nShe could heal from a wound over time, but if her wing shattered, there was no way to fix it. Though it was rarely spoken about, it wasn't uncommon for her kind to throw themselves from buildings if they broke a wing. Losing the sky was considered a fate far worse than death.\n\nAs she looked over at the cabin, she could think of something far worse. The realization that she could have lost Mike had cemented a new reality for her. She would likely live for centuries, or even thousands of years. Her kind didn't age past maturity. The stone of her body would weather like any stone, and her time at the house protected her from the elements.\n\nOne day, she would be forced to live without him. It was a scary idea, a thought so powerful that it made the world tilt beneath her feet.\n\nMike moaned, and Yuki whispered words of comfort. The kitsune hadn't left his side, and Abella could hear the exhaustion in her voice. They were all battered and bruised, and if Leeds somehow returned in the near future, they wouldn't have the strength to hold him off.\n\nVelvet bustled around the house, bringing food to Bigfoot and Yuki. The Arachne kept humming little melodies to herself as she moved through the cabin, the hairs on her legs brushing against each other on occasion. It wasn't lost on Abella that Velvet had tried to rescue her from the Wendigo. Had the Arachne done it for her sake, or Mike's?\n\nIt also wasn't lost on her that Mike had gotten hurt trying to save Yuki. She wanted to be angry at him for it, but how could she? It was no different from what she would have done for him. It gave her plenty to think about as she passed the hours up on the roof.\n\nHer reverie was interrupted by the creaking of wood, and she turned around to see a large hand appear on the edge of the roof. Bigfoot pulled himself up without a sound and crouched down in her shadow.\n\n\"I didn't hear you coming.\" She narrowed her eyes at him. If not for the roof, he could have gotten right behind her.\n\n\"It's my specialty.\" He grimaced and turned his body so that he could lie down. \"I couldn't stand to be inside any longer. The others think I'm out on patrol again, but it isn't necessary.\"\n\nShe noticed now that he was lying on the portion of the roof facing away from the cabin. \"Why the deception?\"\n\nBigfoot frowned, then sat forward. \"Leeds may be a coward, but he's smart. We hurt him badly last night and he'll need time to recover. The Wendigo may come back someday, but it'll be a while. You killed its host, and it can't just possess the first poor bastard it comes upon. There are rules.\" He lifted up a twelve-pack of beer. \"You want one?\"\n\n\"No, thank you.\"\n\n\"Good. More for me.\" These beers were in cans, and he didn't bother with the tab. He jammed his thumb into the lip and poked a hole for him to drink from.\n\n\"You seem to think you know Leeds pretty well.\"\n\nBigfoot sighed, then sucked down the contents of the can in just a few seconds. He smashed it into a thin disc and set it down on the roof, then opened another. \"I do. Wish I didn't.\"\n\nAbella waited for him to continue. Bigfoot slammed two more beers and then finally slowed his pace on the fourth.\n\n\"He and I were friends,\" he finally told her, his glistening eyes on the forest. \"At least, I thought we were.\"\n\n\"How could you be friends with someone like that?\"\n\nHe grimaced. \"When we first met, we fought something fierce. I thought something evil had invaded the forests, that was kind of my thing for a few centuries. I had a much larger range then, and heard rumors of some bat-winged bastard causing trouble for the new locals. Didn't care much for them, but the tribes in the area were seeing it, too.\"\n\n\"So what happened?\" she asked.\n\n\"Loneliness. Over the decades, my forests were chopped down, my tribes decimated. The white man was hungry to shoot anything it didn't understand with those guns of theirs. I once watched them shoot a herd of buffalo in cold blood, then leave the remains behind.\" He shuddered, then sucked down another can. \"I actually came across him one night by accident. Little bastard was sittin' in the forest trying to read a book. If you can believe it, he was fuckin' crying to himself. I had already had a bad day and thought it was odd to see him so vulnerable, so I made one of the biggest mistakes in my life.\n\n\"I talked to him. Turned out that he and I had quite a bit in common. Our beginnings couldn't have been any more different, but we shared that thread of loneliness. My kind had been disappearing over the years, and it was nice to speak with someone that was like me. Just another cryptid.\"\n\n\"I understand the loneliness all too well.\" She dipped her head in reverence. \"Do not fault yourself for giving in.\"\n\n\"Well, I do. You see, we became thick and thin for a while. Leeds has never had a family, not one that loved him anyway. His body was traded to a dark entity, a demon, and he is forced to live out his days in that taxidermic shitfest he calls a body. It's also why you can't kill him--his body is made mostly of shadows and magic. You can hurt him, you can make him go away, but he cannot be put in the ground.\"\n\nAbella thought immediately of Lily. \"Does that mean the demon is still around somewhere?\"\n\nBigfoot nodded. \"Somewhere out there is a demon wearing Leeds' skinsuit, and probably being a ripe cunt about it, too. We spent over a century trying to find any clues that would help him. Thought maybe if we caught the demon, we could force them to change back. Never made any headway. Think it fucked Leeds up pretty bad, to be honest. His family didn't want him, nobody wants him. He can read minds, too. Knows what people think of him. Drives him absolutely nuts.\"\n\n\"So if you are friends, then why is he here trying to kill us?\"\n\nThe sasquatch sighed. \"Honestly, I don't know. He's always had these ambitions that never really pan out, but I think that maybe he's here for revenge. You see, when we parted ways, it was under pretty severe terms. Late eighteen-hundreds, the two of us got into it over humans. He had started killing them for sport, and I didn't take kindly to this. For one, it brought the men in white coats. Never been much of a fan. But two...he wasn't targeting humans that mattered. He was going after women and children, former slaves, people that nobody would miss. His intent sounded noble, but his reality was as monstrous as he is.\"\n\n\"I understand this. My kind, we were often faced with fighting to survive or fleeing for our lives. It was not an easy choice to make.\"\n\nBigfoot rubbed his nose, then drew a finger across his eye. Dark stains had formed on his fur in the corners of his face. \"We are peaceful. Or we used to be. Back before this land was colonized, I used to run wild with the deer, or wrestle bears for fun. The tribes, I looked out for those who revered me and avoided those who despised me. I was a danger to nobody, happy to be left on my own.\n\n\"But now? I can't even go anywhere without being afraid of being spotted. I didn't use to care, but those assholes always find out, and they always come for me.\"\n\n\"The Order?\"\n\n\"Do you know why they're called that?\" Bigfoot shifted so that he could see her better. \"Because they want to help, to keep the peace. They are doing what I have been doing for centuries, only I got forced into early retirement. Chupacabra tried to wander up here one time, and I chased that little shit back down to the southern border. It was never personal, it was about maintaining a balance. But that was before the balance included humans!\"",
        "He picked up a can and crushed it in his massive hands. It exploded, showering him with beer. \"Now they show up with their wands and their swords! And they boss everyone around under the guise of maintaining peace between humans and cryptids? Well, what about me? What about my peace? Forced to live out here in hiding, just because people want to take selfies with me? And don't get me wrong, I loved living here, but my nieces? There's an entire world out there for them, but nobody is ever going to offer it to them!\"\n\nAbella winced. Bigfoot's voice was now loud enough that it hurt her ears. Down below, she saw Velvet open the door of the cabin and look around.\n\n\"Everything okay? Is Uncle Foot up there with you?\" she asked.\n\n\"Shit, fuck...\" Bigfoot laid flat on his back and slid further down the roof. His left arm snagged on a shingle, causing one arm to hang comically above his body.\n\nAbella looked down at Velvet. \"How is Mike feeling?\" she asked.\n\n\"Still the same. Yuki thinks he's turned a corner, but...\" Velvet shrugged, seemingly unaware that Abella had changed the subject. \"I wish I knew if he was going to be okay.\"\n\n\"And Dana?\"\n\n\"Still have her locked in the closet. We think we have a way to fix her, but we need Mike to wake up first.\"\n\n\"I see.\" Abella turned her eyes back to the forest. \"Then I shall continue to keep watch.\"\n\n\"Sounds good.\" Velvet turned to go inside, then paused in the door. \"Don't let him drink that whole twelve pack. It gives him the farts and he can't sleep outside tonight.\" She went inside and closed the door.\n\n\"Dammit, fuzzy girl.\" Bigfoot rubbed at his eyes. \"Knows me too well.\"\n\n\"You don't seem like the type to get weepy after just a few beers,\" Abella pointed out.\n\nHe chuckled, then sat up. \"I have a stash out in the woods. I may have hit it a little hard this morning before coming up here. Probably should quit. I'm struggling with this whole thing, just so you know. Not just Leeds. The girls. I know that at least one of them is leaving here, I can feel it in my bones.\"\n\nAbella's lips pursed together. She didn't really want to discuss the Arachne coming home with them. \"Why does it upset you so if they leave?\"\n\n\"It goes back to being lonely. In the last few decades, I've been happier than I can remember. I had a best friend, two of them, in fact. Ana and I were pretty close, but nowhere near as close as I was with Darren. Thought of him like a brother. Gah,!I see so much of him in my little fluffy girl that it hurts.\" He placed a hand against his chest and winced. \"What we had out here now decays like a fallen tree. I can still see the shape of it everywhere I look, but it's fading into the forest and will eventually be gone. Majesty can be found even in the end of things, but then Leeds shows up and spoils what's left of it, that rotten bastard! Puts my girl in danger, pisses all over my memories here!\"\n\nWhen Bigfoot went to grab another beer, Abella crossed the roof and slapped it out of his hand. Using her tail, she knocked the rest of the twelve-pack off the roof.\n\n\"I think you've had enough,\" she said.\n\n\"Has anyone ever told you that you shouldn't piss off Bigfoot?\" he asked, his voice suddenly dangerous.\n\n\"Your fur looks tough. Is it fire-proof?\" She bared her teeth at him, then wrinkled her nose. \"You stink.\"\n\n\"Yeah, I suppose I do.\" He sighed. \"I guess you're right. I should probably go soak in the river, sober up a bit. It won't do us any good if I spend all day getting drunk. You all need me. My girls need me. I have better things to do than feel sorry for myself.\"\n\nAbella had said none of these things but nodded her head in agreement.\n\n\"You're a good listener.\" He slid toward the edge of the roof and then turned to look at her. \"Thanks for--\"\n\nSuddenly off balance, he tipped over the edge and landed hard on the ground below. A couple seconds after landing, he let out a long fart that reached Abella's nostrils, making her flinch in disgust. Her eyes twitched as she held her breath and leaned over the edge to check on him.\n\n\"You okay?\" she asked.\n\nDown below, Bigfoot was sprawled on the hard ground, his brown eyes focused on the sky. With one hand, he toyed with the hair on his chin, wrapping it around his finger into a tight curl.\n\n\"Yeah. I've had worse.\" With a groan, he stood and walked toward the nearest tree. \"Thanks again,\" he told her, then stepped behind it and vanished.\n\nShaking her head in disbelief, she took her post on the edge of the barn once more. The sun was out and it was a beautiful day. She would do her best to soak it all in, because even though Bigfoot thought they were safe for now, she had a sneaking suspicion that the worst was yet to come.\n\nAs the sun climbed higher, she decided to go do some reconnaissance. She jumped from the roof of the barn hard enough that the roof creaked in dismay. The cabin became a tiny dot below her as she ascended in a spiral. She could see where her heartfire had scorched thick lines through the forest. Bigfoot had dug a mass grave for the Nirumbi about a quarter of a mile from the cabin. It was meant to be a temporary measure, but Abella worried that they would start to rot once the sun came up.\n\nShe thought back to when she had lost her brother to the Arachne. It had been during one of the outbreaks of the plague. The sight of bodies on the street had become an everyday occurrence, and nobody had wanted to get too close to them for fear of catching the plague and joining the ranks of the dead. The difference between a plague-riddled corpse and one drained of its fluids wasn't readily visible, and the Arachne had just been tossing their finished meals into the gutters where they were eventually found and collected.\n\nThey had preyed on the poor. If a starving family of five went missing overnight, nobody thought twice about it. All of these details had come to light once the clan started their investigation, but there was little to be done.\n\nAbella stayed higher than normal, half expecting to be snagged out of the sky by those shadowy tendrils. If she was going to get yanked down again, she wanted plenty of room to try and maneuver a safe landing. Her wing ached something fierce, and she had no doubt that she might shatter it.\n\nHer patrol revealed very little. The Nirumbi's tracks disappeared into rocky formations that likely led to tunnels. There were other tracks she didn't recognize, but none of them were remotely close to the cabin. Were there other creatures that weren't willing to participate in the fight?\n\nOf Leeds, there was no trace. She wondered if he hid underground with the Nirumbi, or if he used his magic to hide in plain sight. Each shadow was a potential threat, and it made her jumpy.\n\nShe made it to the edge of the barrier and was disgruntled to discover that it was still in place. It wasn't worth investigating further, she would leave that to Yuki. On her way back to the cabin, the sun was already beginning its descent. Would the Nirumbi return with nightfall? Or had they bought themselves some time?\n\nShe landed next to the barn instead of on it, then folded her wings around her body and walked toward the cabin. It sounded like Bigfoot was inside, she could hear him talking to Quetzalli. There was a constant rattling sound, which she guessed was Dana.\n\nShe was almost at the door when she heard a different sound coming from the barn. It was the sound of someone crying.\n\nCurious, she walked over to the barn, her tail dragging behind her in the snow. The heat of the day had thinned the snow out, and the bloody spots in the yard were now a pale pink as a result. When she walked inside the barn, she saw Velvet standing over by her father's jeep, her face in her hands.\n\nShe hesitated. Did she really feel like playing amateur counselor with Velvet? At best, they were temporary allies, and she knew that she wouldn't feel like sharing her own problems with the Arachne.\n\n\"Abella?\" Velvet turned around, her cheeks stained with tears. \"I heard you coming. You have no idea how glad I am to see you!\"\n\n\"Hmm.\" That wasn't the reaction she had expected!\n\n\"I need your help.\" Velvet wiped her tears away, then turned back to the car. \"Something happened while you were gone.\"\n\n\"Mike?\" A feeling of dread settled in her gut.\n\n\"No, not that. But...almost as bad.\" Her shoulders tightened up, and Abella realized that Velvet was holding her sword. \"I need your help with something.\"\n\nWary, Abella moved toward the car but kept herself against the walls of the barn. The place was even more trashed than before, and dark streaks ran up the walls where fires had almost caught. \"With what?\" she asked.\n\n\"You hate my kind. That's okay, I get it. It's a good thing.\" Velvet turned to face the gargoyle and let out a heavy sigh. \"I need you to do something for me that I can't do myself.\"\n\nAbella frowned, but she was close enough now to see that something was sitting in the passenger seat of the car. She moved a bit closer and felt her entire body go numb when she realized what it was.\n\nIt was a clutch of eggs. Each one was like a giant, oblong pearl, and they were bundled together in a silken sack of webs.\n\n\"When?\" Abella growled, her tail whipping behind her. With the others around, she couldn't believe that the Arachne had found a way to get him alone. And yet she now stared at the result in Velvet's hands.\n\n\"It doesn't matter.\" Velvet's features threatened to fracture, her eyes filled with anguish. \"I need you to help me destroy them!\"\n\nAbella didn't have words for this, but her eyes flicked to the blade in Velvet's hand.\n\n\"Oh, sorry.\" Velvet put the sword away in her pocket. \"I...this...about an hour ago, I felt them coming. So I snuck out here to lay them. Nobody else knows.\"\n\n\"They are dangerous!\" Abella whispered angrily. \"Why would you do such a thing?\"\n\n\"Please understand. It was the urge to mate, it was overwhelming, but it's more than that.\" Velvet picked up one of the eggs. It was roughly the size of an eggplant. \"When I'm around Mike, I can't help myself. It's like the world is ice-cold, and he's a warm blanket I can bury myself under. I feel complete when I'm around him, it was all I could do just to wander off and do this! Danger speeds up the quickening process, it's a survival mechanism!\"\n\nShe held the egg out toward Abella, who took a step away from it. \"When I hold them, I can see their strengths. It's like staring into the night sky, each one of them a star sparkling with possibilities. They are absolutely flawless, probably the most dangerous Arachne to walk the world in over a century.\"\n\n\"And you want me to destroy them? Why? If you know they are so dangerous, why don't you do it?\"\n\nVelvet's lower lip trembled. Her voice broke between words, as if there wasn't enough air to speak. \"Because I can see what they look like,\" she whispered, then picked up one of the eggs. \"This one has my father's eyes and Mike's nose. And this one over here has Mike's hair and my father's grin. I've only ever loved two humans in my entire life, and when I think about destroying them, I...\" She bit her lip hard enough to draw blood, a single bead of it running down her chin before her tongue licked it away. Her hands went to the dog tags around her neck and she squeezed them. \"My father's legacy deserves better than this, but I can't help but feel like I'm losing him all over again. It's almost like a cruel prank played on me by Mother Nature.\"\n\n\"I think I understand.\" Abella moved closer, still wary of a trap. \"I didn't think this would be a problem for an Arachne. Your kind has always seemed so...methodical.\"\n\n\"It shouldn't be, but...\" Velvet shook her head. \"I have too much of my father's humanity in me. It's what makes me so flawed.\"\n\nAbella thought about this for a moment. The barn was silent, save for the sound of the wind blowing through the slats, giving her plenty of time to think. She approached the jeep and moved a hand toward the eggs, curious how Velvet would react.\n\nFor a moment, it looked like the Arachne would stop her, but Velvet held firm, her eyes welling up. Abella picked up an egg and was surprised at how warm it was. The future of the Arachne was in her hands, and the only reason Velvet couldn't do it herself was because she wasn't the monster that her kind needed her to be.\n\n\"Maybe...I think that maybe you've got it wrong,\" Abella told her. \"Your father's humanity is precious. It is a gift that allows you to relate to the world in a whole different way. Instead of seeing it as a flaw, you should think of it as the thing that makes you...special.\"\n\nVelvet opened her eyes and looked at Abella, those dark orbs of her shimmering.\n\n\"Do you want to be here when it happens?\" Abella asks.\n\nVelvet whimpered. \"Do I have to be?\" she whispered.\n\n\"No.\" Abella picked up all the eggs. \"Are these all of them?\"\n\nVelvet nodded.\n\n\"You can trust me. Go wait outside.\" Once the words crossed Abella's lips, Velvet bolted out of the barn. Not wanting to prolong the process, Abella set the eggs on the ground and lifted her foot.\n\nYet, she hesitated. For just a moment, she could see them. She could never have children with Mike herself, nor did she want to. Yet the idea that she was destroying something he created pained her. It also made her appreciate Velvet's sacrifice far more.\n\nInstead of slamming her foot down, she lowered it gently. The eggs were tough, but they cracked beneath her weight. The moment the yolks ran into the dirt, she heard Velvet let out a mournful wail outside of the barn. The musty smell of the barn was briefly overpowered by the odor of ozone, but with another sniff it was gone.\n\nDetermined to complete the job, she crushed them all until the shells were tiny fragments. As she ground them up beneath her feet, she couldn't help but think about how the Arachne had dragged her brother to the top of that church and repeatedly slammed him into the ground. All she had seen was the ruthlessness in their eyes, their absolute lack of humanity.\n\nWould these have been any different? Outside the barn, Velvet's wails diminished into hiccuping sobs. It was the sound of a mother's grief. Abella paused for a moment, the sound rocking her. It wasn't an emotion she had ever expected to see in an Arachne, and she couldn't help but feel sadness at the mess beneath her feet. Determined to see the deed through, she used her talons to dig a hole and then pushed the remains of the eggs inside. The burial was easy, and she used her tail to smooth out the ground.\n\nWhen she walked outside, she found Velvet huddled against the wall of the barn. The Arachne was crying, her legs splayed on the ground. Abella helped her stand and then wrapped her arms around Velvet in a tight embrace and became a rock for her to lean on.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nThe fridge in Murray's kitchen rattled briefly before letting out a sigh and going silent. Eulalie threw a dirty glance at it, hoping that it wouldn't decide to break down. Murray's interior aesthetic trended toward what the early eighties aspired to, and she was quite convinced that the fridge was no different.\n\nShe turned her attention back to the computer and was about to change cameras when she felt the thread she had attached to their intruder shift. It was the tiniest of movements, but already she was across the room and climbing the stairs.\n\nSofia, who had been asleep on the couch, leapt to her feet and followed. She squinted against the bright light of morning and stumbled on one of the steps. The floor creaked beneath Sofia, and Eulalie frowned at the noise.\n\n\"Sorry,\" Sofia muttered. \"Didn't sleep well. Felt like I had the flu or something for a bit.\"\n\n\"As long as you're okay now.\"\n\n\"I am.\" Sofia continued up, and Eulalie followed. They opened the door to Murray's room and walked inside. The intruder was holding perfectly still, and she wasn't even entirely certain that he was breathing.\n\n\"Enough of that.\" Sofia pushed past Eulalie and extended her sword. Using the flat of her blade, she slapped it against the stranger's belly. The sound was loud, and his whole body jerked. A thin welt appeared across his sagging gut.\n\n\"Why did you do that?\" asked Eulalie.\n\n\"He was attempting astral projection.\" She swatted his belly again. \"Maybe remote viewing, or trying to contact someone, I don't know. But if he keeps it up, I'm going to start using the edge,\" she declared.\n\n\"Ow, enough, please.\" He turned his head back and forth. Eulalie figured he was trying to find a gap in the pillowcase to look through, but she had already checked. \"Why are you doing this to me?\"\n\n\"Why are you breaking into places with a magic wand?\" Sofia dragged the tip of her sword along his foot, then up his calf. \"Don't give me that innocent bullshit. Let's skip ahead to the part where you tell me something useful.\"\n\n\"I...uh...\" he shifted. \"I have to go to the bathroom.\"\n\n\"So go.\" Sofia now ran the blade up his thigh. \"Nobody is stopping you.\"\n\nThe man sighed. \"If you insist.\"\n\n\"Wait.\" Eulalie placed her hand on the man's belly and gave Sofia a dirty look. She really didn't want to deal with the mess, and would be able to smell it throughout the house. \"Perhaps we can come to an agreement.\"\n\n\"I'm listening.\" His voice was gravelly now.\n\n\"Why don't we start with just a few basic questions. Nothing invasive, just some basic manners. For instance, what is your name?\"\n\nHe tilted his head in her direction. \"Names are a powerful thing,\" he told them. \"How do I know you aren't a witch who--\"\n\nWHAP! The flat of the blade smacked him on the bottom of his foot. Sofia grinned.\n\n\"Ow, fuck!\" He jerked in his bonds. \"You can call me Cyrus!\"\n\n\"Okay, Cyrus. Nice to meet you.\" Eulalie moved her hands up to his neck. She could see the beating of his heart through his carotid artery. As she watched his pulse, she couldn't help but think she had heard that name before. \"Why did you break into our house?\"\n\n\"It isn't your house,\" Cyrus declared. \"But I answered your question, so you owe me one.\"\n\nSofia slapped him again, but this time, he didn't utter a sound.\n\n\"Hmm. Looks like a protective aura is around him now.\" Sofia put her hand an inch above his skin. \"Here, you can feel it. It's kind of like an electrical field.\"\n\nEulalie obeyed. Her fingertips felt like they were full of pins and needles.\n\n\"What happened to Murray?\" Cyrus turned his head back and forth, as if trying to figure out where they were standing. \"Did you hurt him?\"\n\n\"Owner of this house? We're not sure.\" Eulalie looked at Sofia. There were so many lines to pluck at right now, but she didn't know where to proceed.\n\n\"Not sure isn't a great answer,\" Cyrus grumbled.\n\n\"Why does it matter?\" Sofia asked.\n\n\"Because I want to know what kind of people I'm dealing with,\" he answered.\n\n\"We didn't hurt him. Is he a friend of yours?\" Sofia asked, the tip of the blade now teasing his nipple. Her lips had parted slightly, and Eulalie wondered if she was getting off on this.\n\nCyrus paused, then shook his head. \"I know everyone who lives on this street.\"\n\n\"Why?\" Eulalie asked.\n\n\"Nope. My turn.\" He flinched when Sofia poked his nipple. \"Why are you watching the Radley house?\"\n\nEulalie and Sofia looked at each other.\n\n\"What makes you think we're--\"\n\n\"Please, I have to pee. I'm an old man who got knocked out last night.\" He let out a disgruntled sigh. \"I've been watching your drone. Not sure how you got the pet rats to do patrols, but I can also tell that something happened over at the house.\"\n\n\"What makes you such an expert?\" Sofia asked. \"On the house, I mean.\"\n\nCyrus groaned. \"Please, I really have to pee.\"\n\nEulalie pursed her lips together, and then looked at Sofia.\n\n\"I can take him,\" Sofia said. \"If he tries anything, I'll just kill him.\"\n\nEulalie wasn't certain how serious Sofia was, but nodded. They untied him and Sofia marched him into the bathroom and pointed him toward the toilet. Once he was done, he was marched back to the bed and then held down while Eulalie retied her webs.",
        "\"What kind of rope is this?\" he asked. \"It feels like silk.\"\n\n\"I pulled it out of my ass. Now spill. Why are you watching the Radley house?\"\n\n\"It wasn't just me. I was curious about the place for my own reasons, but there was someone else watching it, too. That meant there must be something worth watching.\" He let out a sigh. \"Or there was. It's been a couple of months since I've seen the others. I originally thought that maybe they came back and did something to the house.\"\n\n\"What makes you think something happened?\" asked Sofia.\n\n\"I am...was considered an expert in extraplanar spellcraft. I can tell that something massive happened right at the edge of the property, either a rift was opened, or something worse. I haven't been around much lately, the weather makes my joints hurt, but I assume it was recent. The only reason I even came last night was that I tracked a gargoyle who tossed a statue off of a church back to the house. Wondered if something had happened, so I've been snooping around a bit more than usual.\"\n\nSofia rolled her eye and mouthed the word Abella.\n\n\"So a planar disturbance, huh?\" Eulalie tapped her fingers on the frame of the bed. \"How does one become an expert on such a thing?\"\n\n\"I was a member of a secret society,\" he answered. \"But I'm retired now.\"\n\n\"So why are you watching our house?\" Sofia asked. \"You still didn't answer that.\"\n\n\"You live there?\" he asked. \"Then you must know Lily.\"\n\n\"Lots of people know Lily,\" Sofia responded. \"Bad people.\"\n\n\"What about Dana?\"\n\n\"Same answer,\" Eulalie replied.\n\nShe could see him swallow hard. When he spoke, his voice croaked a little. \"Tick Tock?\"\n\nShe looked at Sofia, who shrugged.\n\n\"We're at an impasse,\" Eulalie explained. \"For all we know, you are pumping us for information about our friends. Give us something better to work with.\"\n\n\"I last saw them in Hawaii,\" he explained.\n\nA lightbulb went off in Eulalie's head. She remembered where she had heard the name. \"Who did you fight there?\"\n\n\"A dragon-man named Tristan Edge. The fight went poorly for my people.\" Cyrus let out a sigh. \"It's sort of the reason I'm in retirement.\"\n\nEulalie had heard this story from Lily and seen bits and pieces of it. Once she and Dana had left Oregon, Eulalie had tracked the two of them by hacking into cameras and then deleting the footage. Once in Hawaii, it had been quite tricky to track down footage from the Black Palace and delete it. She hadn't watched any of it, because it had been far more important to destroy all of the footage so that nobody would know about Dana's existence. There had been an unexpected team-up with the Order to take down a man who had been eating virgins to become a dragon.\n\n\"You were a member of the Order.\" She took a step back, her eyes narrowing. The Order had tried to kill her parents before she was born.\n\nHe nodded.\n\n\"So then why are you here?\"\n\n\"Truthfully? I'm not really sure. Things went very bad for us in Hawaii, and I was forced to confront some truths that were difficult to swallow. Lily, against her better judgment, I'm sure, spared me. I was able to track her here but wasn't sure what the next step was. I didn't know if Mike was a threat. It's kind of what I used to do.\"\n\nEulalie looked over at Sofia, who had gone red in the face. Her shoulders were tensed up, and when she saw Eulalie looking, she turned to face the wall.\n\n\"So you were here to hurt him?\" Eulalie asked.\n\n\"No. Just to watch. After the things I saw in Hawaii, I don't know that I could do much against him or your friends. Hell, I didn't even know you had a gargoyle until I tracked it here. There are rumors out there about your house, stories that don't quite add up. You have some very powerful enemies.\"\n\nShe wanted him to elaborate but decided against it. \"Does the Order know about us?\"\n\nHe chuckled. \"They didn't when I left. Whatever you are doing in that house hasn't violated the Covenant, so you're well below their radar.\"\n\n\"Covenant?\"\n\nSofia turned around with a sneer on her lips. \"We haven't done anything to upset their precious Balance.\" She did finger quotes around this last word. \"Namely, reveal that magic still exists.\"\n\n\"It's a bit more complicated, but yes.\" He sighed under the pillowcase. \"When I came inside and saw a cyclops, which are supposed to be extinct, wielding one of our swords, I must admit that I panicked. Your kind's reputation for ferocity precedes you.\"\n\n\"My kind wouldn't be extinct if you assholes hadn't attacked us.\" She rotated the blade and pressed it against Cyrus' neck. \"All because we had formed a sanctuary away from humans! We just wanted to be left alone!\"\n\nThis was an interesting revelation, Eulalie thought. She desperately wanted to pluck at that thread and see it unwind, but now wasn't the best time for it.\n\n\"It was a knee-jerk reaction on my part,\" he admitted. \"Ever since I was a child, I have been subjected to the Order's indoctrination. I've only recently come to understand that the world isn't as black and white as I thought it was. Lily and Dana helped me see that. When I saw that sword in your hands, all I could think of were the old stories, tales of one-eyed warriors capable of taking down a dozen men on their own. You should know that I'm trying damn hard to be a better person, but decades of training are hard to overcome, especially when I think I'm about to get ripped in half.\"\n\nEulalie saw the edge of the sword tremble slightly. She stepped forward and put her hand on Sofia's, pushing the blade away from Cyrus' throat.\n\n\"Tell me more about extraplanar spellcraft. Do you know what happened to the house?\"\n\nHe shook his head. \"I was more interested in who else was watching the house, so no. I didn't have much time to look into it. Let me put on some clothes and I'll be happy to take a look for you.\"\n\nShe could use this. Precautions would be taken, but the man would make an invaluable ally. \"I think that we may be on the same side, but you should know that we don't trust you. Don't take it personally.\"\n\nHe let out a sigh of relief. \"I don't. I wouldn't trust me, either. But I owe the succubus. How's that for irony? Tried to snuff her out on two separate occasions and she still saved my life.\"\n\n\"Hmm.\" Eulalie grabbed Sofia by the hand and led her from the room. Once out in the hall, she closed the door and turned to the cyclops. \"So what do you think?\" she whispered.\n\nSofia's face was scrunched up so hard that she looked like an angry muppet. \"I don't know that we can trust him, but...\"\n\n\"But you think he could help us figure out the next step?\"\n\nShe nodded. \"I hate this, by the way.\"\n\n\"I know.\" Eulalie put her hand on the door, then looked down the stairs. \"Take him outside. I'll get ahold of Suly and the two of you can escort him to the house. I don't know that our new friend's emotional metamorphosis is ready to handle all this.\" She sprawled her legs out for emphasis. \"And I definitely don't want his people finding out.\"\n\n\"Done. I'll keep him bagged until he's outside.\" Sofia put her hand on the door and paused. \"But are you sure?\"\n\nEulalie nodded. \"If Lily let him go, it was for a reason.\"\n\n\"The two of you must have really hit it off,\" Sofia remarked. \"Guess I don't see it.\"\n\nEulalie thought back to when Lily had come out to the cabin. For most of the time she was there, her father's night terrors had gone away. For months after, her father had commented about the lovely dreams he had experienced involving their mother. She knew it hadn't been a coincidence.\n\n\"Let's just say I owe her as well.\" She pushed the door open, revealing that Cyrus was holding perfectly still. Staring at his helpless form, all she could think about was that her ropework could be so much better. \"We're going to play nice for now,\" she told him. \"But step out of line--\"\n\n\"And you'll kill me?\" She could almost hear him smiling.\n\n\"Please. We are women of sophistication.\" She walked over to the bed and tapped on his toe, making him flinch. \"I will tie you to a chair and make you watch as I eat your fucking hands and feet. We'll make a game about how much of you is left when you finally kick the bucket.\"\n\n\"That doesn't sound very sophisticated,\" he said, the humor now gone from his voice.\n\n\"We'll be wearing fancy dresses with hats. You can wear a tie if you want, we have plenty of clip-ons lying around here.\" She moved to his ankles and started undoing her webs. \"It will be fancy as fuck.\"\n\nHe went silent. It wasn't until she started undoing his wrists that he asked \"What are you?\"\n\nWhen she leaned toward him to respond, she didn't know what she was going to say. However, she noticed a small group of rats watching from the nearby dresser and decided to improvise.\n\n\"I'm the Rat Queen,\" she whispered in his ear. \"So don't disappoint me.\"\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nThe sun melted into the horizon, sending steam up into the sky that turned into colossal cloud butterflies that danced overhead. Mike was leaning back into Velvet's torso, her legs splayed around them in the sand.\n\nHe felt weak, as if he'd been running for days. Velvet stroked his hair, occasionally wrapping it around her fingers. There had been a period of time where the sun had set and darkness had fallen across the Dreamscape. Despite everyone's best efforts, darkness had eventually come for the island. During this time, he could see and hear nothing. If not for the feeling of Velvet's arms around him, he would have simply let go and accepted his fate.\n\nWhen the sun had finally risen, the island had been reborn. Large swaths of it had been wiped clean, as if a massive wave had gobbled up the architecture of the land. Most of the trees were gone as well, and the only thing that remained the same was the presence of the house.\n\nUnable to move, he had let Velvet hold him up. She told him stories about her childhood, her hopes and her dreams. His only regret was that he had become too weak to speak back. He was completely drained.\n\nThe others checked in on him one at a time. No longer just blurs of energy, they all came by and sat with him as he recovered. Though they had done the bulk of the work rebuilding the beach and holding the dark waters at bay, it occurred to him that they were actually just extensions of his soul. Their drive had gotten the job done, but he was the one paying the price.\n\nA golden glow settled over him, and he tilted his head enough to see Titania sit down on the beach next to him. Her body glowed as if she was bathed in moonlight, and her cloak swirled around her despite the lack of wind.\n\n\"I'm very impressed, Caretaker.\" She smiled wistfully, then looked at him. \"There were many times during the night that I was certain you would fail.\"\n\n\"Ergh.\" It was all he could manage.\n\n\"I have news.\" She drew a circle in the sand. \"After learning of your plight, I made a trip to your world. Specifically, to Oregon.\"\n\n\"Eh?\" Curious, he was able to raise an eyebrow.\n\n\"I'm not at the cabin with you. On my way there, I discovered that a magical seal had been built around the land. It's one-way, so as they walked in, they became trapped. The enchantment on your land couldn't turn them away, because they would simply be bounced back inside. Since they couldn't leave, it was only a matter of time before they were able to seep in and establish themselves.\n\n\"While breaking it myself would be seen as interference, I can tell you that the only way to get rid of it is to kill Leeds or force him to leave. As long as he is inside his own enchantment, you will be unable to leave. He could maybe let you go, but I don't know that he would be open to negotiation.\" She moved next to him and took his hand in hers. Warmth flooded his limbs and he sighed in relief.\n\n\"You have quite the task ahead of you,\" she said, and then her features blurred. The world fizzled out like static and then sank into darkness. Velvet's body no longer felt warm and inviting, but slightly damp and cool to the touch. The sounds of the ocean had faded into nothingness, replaced by a distant rumble that sounded like snoring.\n\nOpening his eyes, the blurry figure over him shifted. He wasn't sure who it was until he saw large, furry ears rise up as he groaned.\n\n\"Mike?\" Yuki's voice trembled.\n\n\"Ugh,\" he replied. His mouth was so dry that his lips had cracked. \"Th...thirsty.\"\n\nYuki wrapped her arms around him and let out a sob of relief. Someone shifted in the corner, and now Velvet stood over him, lines of concern on her face.\n\n\"You're awake!\" she declared. \"Thank the gods!\"\n\nHe smiled weakly, then tried to lift his arm to hug Yuki. His fingers wouldn't even curl.\n\n\"Don't move, not yet.\" Yuki sat up and wiped tears from her bloodshot eyes. She lifted his head with one hand and held up a cup of water. \"Let's get some fluids into you, but I need you to promise me something.\"\n\n\"Okay?\" He stuck his tongue out toward the cup, willing the liquid to flow across the air and into his mouth.\n\n\"Never again. Never ever do that again.\" Her face was stern. \"If it ever comes down to a choice between you and me, you let me go, you hear me? You are far too important.\"\n\nUnable to argue with her, he groaned in response. Satisfied, she held the cup to his lips and surprised him by lifting ice chips out of it. She stuck one in his mouth and he let it sit under his tongue until it melted. They tasted better than anything he could remember drinking as the cold liquid ran down his throat.\n\nSomewhere in the house, he heard a growl, followed by banging. He looked at Yuki and frowned.\n\n\"That's a problem for tomorrow,\" she told him. \"You're in no shape to help yet.\"\n\nHe nodded.\n\n\"I've got this.\" Velvet took the cup from Yuki's hands. \"Get some sleep. I'll wake you if I need you.\"\n\nYuki didn't bother leaving. She yawned and fell forward onto the bed, her body shrinking down until she was a normal-sized fox with three tails. Curling up next to his belly, she settled into the soft rhythm of sleep almost right away. With what little strength he had, he placed his hand gently on her head, right between her ears.\n\nHe didn't know what they had gone through or even how long it had been. The hopelessness he had experienced in the Dreamscape had seemed as if it would go on forever, but he had survived. Tender fingers touched his forehead, pausing just long enough to swirl his hair. When he looked up into Velvet's brown eyes as she fed him ice, all he could think about was her constant presence, both here and inside his head. She had kept him from slipping away, holding tight to him when the darkness threatened.\n\n\"What?\" She paused, an uncertain look on her face. Her hair hung down, diffracting the light and making it seem as if her entire body glowed with an aura of warmth.\n\n\"Beautiful.\" He smiled, then let out a sigh. Despite being unconscious for so long, he was suddenly tired again. As she stroked his forehead, he slipped away into a dreamless sleep.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nI hope very much that you are still enjoying the story. I realize we hit a stretch where the eroticism has fallen by the wayside, but life is that way sometimes (and you definitely don't need me forcing scenes in to meet a quota).\n\nThere's a lot that's going to happen in the chapters ahead as I weave the rest of my threads together, so brace yourselves for a very interesting ride. Will Mike get home in time? Who is putting people to sleep? And how will Beth prevent the Apocalypse itself from starting?\n\nStay tuned, and stay awesome!\n\n~Annabelle Hawthorne\n\nPS: Just a friendly reminder that we don't discuss the Clue incident"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "monstergirls",
        "harem",
        "bigfoot drinks too much",
        "the slime girl cometh",
        "we dont talk about the clue incident",
        "reggie and jenny are buds",
        "walking on eggshells",
        "nirumbi poison is bad news",
        "the rat queen"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-69"
}