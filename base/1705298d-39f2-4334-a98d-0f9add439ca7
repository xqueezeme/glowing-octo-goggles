{
    "title": "The Twelve Zenati Pt. 18",
    "pages": [
        "Authors note: Hello everyone. Please be aware that this is the third series in the world of the Twelve Tables. It is heavily set in the BDSM lifestyle of Dominant men and submissive women although that can and does vary from time to time the concept is constant. \n\nI am, as always, grateful to David and Kate for being my second sets of eyes. I hope those of you who enjoy this series continue to do so. ~ellie. \n\n*****\n\n\"I know that you're going to warn us not to contact Noah,\" Genesis said, as most of the other men began to leave the room. \"However, I have something else to propose, if you can ask Zanto to stay as well.\"\n\nGideon gave his brother a strange look but said nothing as Xavier raised an eyebrow and called out to Zanto before he left the room. Orlando had already joined them for this more intimate discussion, and Genesis sat back, formulating what he wanted to say without coming across as stepping over any lines between right and wrong. Perhaps they would see it as doing the wrong thing for the right reasons.\n\n\"Okay.\" Genesis scratched at his five o'clock shadow and pursed his lips. \"It was Gideon's decision, down in the emergency room, to remove Marcella's personal belongings as well as her phone, which Vivienne had taken from her to cancel her date with the pilot,\" he began. \"We still have those belongings, and access to her apartment.\" \n\n\"You can't just search through her belongings as if she was criminal,\" Gideon grumbled, startled by what his brother was suggesting.\n\n\"No, but we do have cause, if you will just give me a minute to explain my thinking,\" he said and looked meaningfully at Dominic, whom he knew was capable of judging his words wisely and deciding the fate of his suggestion.\n\n\"Alright,\" Xavier said. \"Tell us what you're thinking.\" His cousin hadn't become an award-winning investigative journalist without excellent instincts for seeking out the truth, and exposing subterfuge.\n\n\"There is something more going on with Apollo than what we know. Both Marcella and Olivia refused to believe any notion that Apollo would try to harm her. They see him as a protector, a friend, almost a saviour of sorts. He had a relationship with Marcie almost a decade ago, but they have only been friends since. Olivia refers to him as a frog, not a prince. Nice but not...,\" he searched for the right word.\n\n\"Not a knight in shining armour, there to sweep them off their feet.\" Dominic finished his sentence for him. \"So, the question is, why would he have come here claiming to be her fianc\u00e9?\"\n\n\"Exactly. Apollo could have come as nothing more than Marcie's friend to celebrate her birthday, and he would have been welcomed far more easily. Why insinuate that they were more than friends?\" Genesis asked the small group. \"We know that he went to Perth first, and was obviously told she was here, and possibly dating someone from our family.\"\n\n\"Namely Noah. Which was why he was the one that Apollo made his announcement to and set off the chain of events that led to her accident,\" Dominic added, seeing exactly where Genesis was going with this. \"But why lie like that when he knew Marcella wouldn't go along with it?\"\n\n\"More of a question is who sent him and why? I mean, and just go with me on this...,\" he paused, \"Now we have discovered that, before coming here to identify and help Olivia, Marcella had divorced herself from her family and the benefits that come with the name. She had to take those back to come here. What if, once she had retaken the name, her father expected to be able to exert family law over her, and she ignored his directive to claim that Olivia was a fraud and return immediately. What if he was unhappy that she had stayed and gotten involved with our family, instead of the one he had chosen for her for his own benefit? He could have sent Apollo with the express reason of bringing her home to force his will on her, which might have included an arranged marriage, possibly to Apollo, if he is to be believed, but I think there is more to the story. I just can't put it all together yet.\"\n\n\"Well, if that was the plan, they failed,\" Orlando said, frowning.\n\n\"Or so we think, but even after Apollo and the Battaglia left, Marcella still disappeared. What if Apollo was just a scout, to see what was really going on with her up here?\" Genesis said.\n\n\"Or, what was really going on between Noah and Marcella. She told her father that she was dating up here, so he wouldn't push for her to return immediately and possibly allow her mother to visit to see Olivia.\" Gideon added in what he knew of her story from Vivienne.\n\n\"Okay. So, logic tells us that Apollo, her father, or possibly some missing component of this story, has tried to call or text her in the last forty-eight hours. If we could access her phone, then we might be able to see if the threat was from Apollo alone or if he was acting under the influence of someone else,\" Genesis said.\n\n\"We'd have cause,\" Orlando agreed. \"Someone attempted to kill her, then she disappeared from the hospital without a trace, and we only have Noah's identification and assurance that she has been located. No one else sees more than a passing resemblance from the woman in that video,\" he said, stretching the truth to fit their needs.\n\n\"We haven't had any luck engaging the older sister or the mother,\" Gideon admitted, adding to Genesis's proposal, even though he knew that Vivienne was attempting to contact Jessa again.\n\n\"Where are her belongings now?\" Xavier asked, still not sure about invading the woman's privacy, but knowing that he couldn't and didn't want to disturb Noah to ask how he felt about an even bigger intrusion into Marcella's life than she had already been subjected to by Vivienne's report.\n\n\"I think that maybe we should reach out to Massimo, and maybe talk to Jessa's husband if possible. He was on one of the investigative teams, and we don't know what he knows about the family,\" Dominic said thoughtfully. \"My gut tells me that Jessa might be the key to working out the problem of Apollo. She might have better insight into his claims and his actions while he was here.\"\n\n\"Alright, just the phone,\" Xavier nodded. \"Zanto, keep this on the down-low. Just the people in this little group need to know. We'll see what we can find out through some subtle inquiries with both the Farnese and Gambaro tables.\"\n\n\"I thought that Papa told us all to stand down for a day or two?\" Zanto asked, considering what he was being asked to do and whether it was worth going against his father's directive.\n\n\"I guess we could ask Zio Lucio, if you want to take off for a couple of days,\" Xavier shrugged, as if it wasn't his first choice, but letting him know that he would still go ahead with this idea if Zanto didn't want to be involved in this investigation. They needed to follow up on this hypothesis, despite their father's ordering them to stand down and rest for a few more days in order to allow Dominic to recover properly and start the radiation treatment he would need.\n\n\"So, you're going to tell them what we are doing?\" Zanto narrowed his eyes.\n\n\"Do you honestly think that we can keep anything from Papa?\" Dominic laughed. \"Who are you and what have to done with my little brother?\" \n\n\"Standing down doesn't mean ceasing to wonder and worry about the people we love. It just means stepping back and asking for help when it's needed and letting them take most of the load. We both know that you can hack her phone faster and far better than Lucio, but he is not without skill. Hell, I could do it, given time,\" Orlando said, without rancour. \"Besides, you know that you are only going to keep working anyway over the next few days, now that you have CJ Donati's phone number and a few of his programs to test out. You're like a star-struck fanboy around him,\" he teased.\n\n\"Yeah, alright. As long as you tell Papa, I'm in,\" he conceded, hating that his older brothers continued to treat him like the baby of the family. \"Get me the phone. It shouldn't take long, but unless we find anything urgent, we all take tomorrow off.\" His eyes flicked to Dominic who, aside from the strange small, bald circles carved into his hair around the circumference of his head, looked as he always did.\n\n\"Alright, we could all use a day off, but send a report tonight, once you get into the phone,\" Xavier said. \n\n\"I'll go with you,\" Orlando chuckled. \"I'm more afraid of Emma coming back to find Dominic still sitting in here, rather than back in bed, than I am of Papa knowing that we are continuing to worry about Marcella.\"\n\n\"That's a good point. We should head off too, before our women think we've deserted them,\" Gideon said, indicating himself and Genesis.\n\n\"Alright. I'll email you later,\" Zanto agreed. \"Do you want a hand getting back to your room?\"\n\n\"Yeah,\" Dominic smiled, seeing the concern in Zanto's eyes. Noah and Xavier had treated him as they always did, because they knew him and what he needed. His youngest brother, however, was obviously more concerned and upset about his health than he was letting on. \"Thanks, Zan Man. I'd like that. You're just the right height to lean on, like a crutch,\" he teased with a chuckle, but wrapped his arm tightly around his brother's shoulder and upper arm, as Zanto bent to help him up. Not letting go as they stood together, they began a slow slightly off-kilter walk back to his room, followed by Xavier and Orlando.\n\n\"We'll catch you guys later. Call if anything urgent comes up, otherwise we'll catch up after a day of rest,\" Gideon said. They could all see that Dominic had pushed himself far too hard today, and they had no intention of making his convalescence any harder for him. He could also see that Genesis had turned Marcella into a riddle that needed to be solved, and that Xavier would find that an irresistible conundrum as well. \"Leave it alone for a day, okay?\" Gideon asked his brother, as they travelled down to the car park.\n\n\"Yeah, I know. It's just that something isn't right about the whole deal with Apollo, and I just can't put my finger on it. I'll give them a day if Zanto doesn't come up with anything urgent. Besides, I have a very pretty girl waiting for me at home, and that in itself is an amazing thing that I plan to make the most of during our day off,\" he grinned.\n\n\"Me too,\" Gideon chuckled. \"Me too.\"\n\n*****\n\nDespite his words, Marcella had still felt the victory, in that she had managed to ruffle the cool, calm exterior of Noah. Sure, he had manhandled her in the worst way, or best way, depending on how she looked at it. Sex meant little more to her than a means to an end. She wielded it as a weapon, a tool to be employed when she couldn't find another way around an obstacle in her path. It was his mistake to think that he had won anything just because he was stronger and could physically overpower her. She was the one who had gotten to him, not the other way around. \n\nAs they rode back to the casino in silence, however, she struggled to keep the less victorious thoughts at bay. From the first day, when she had met him at the airport, she had admired his tall, athletic physique. She would have had to be blind, deaf and dumb to ignore his sexual appeal. Then, and as they got to know each other, she had begun to admire his easy countenance, the way he both delivered the tragic news about her sister in a truthful but supportive way and treated her as an equal, not a fragile girl to be coddled. She had been drawn to him for his counsel and his humour, as well as physically. She had enjoyed flirting with him in those initial days in this city and his rejection of her further advances had stung, more than she wanted to admit. Why had he done that when it was obvious now that he felt the same attraction?\n\nMarcella turned her head to look at his profile as he drove. He obviously hadn't shaved since early yesterday, and the stubble wasn't so much stubble anymore, but rather a closely cropped beard. It suited him, she thought. Made him look a bit more rugged and less clean-cut boy-next-door. His usually carefully-styled hair curled around his face, ears and collar and she could see how, just like her, he could disguise himself by just relaxing that professional persona. She had been attracted to him from the beginning, but now, she felt that pull to him even more strongly, and it confused her. She'd never had a problem dismissing men from her thoughts, before him, and her emotions went on a wild rollercoaster ride every time she let herself consider him in this way. \n\nShe noticed a small smile lift the corners of his mouth, as he noticed her watching him, and she turned away, looking out into the darkness of the night again. She squirmed slightly in her seat, hating to give him the satisfaction of knowing that she still felt his spanking, but unable to help the minor position change. She tried to push the thoughts that she was having about him from her mind again and concentrate on maintaining the upper hand in this little agreement of theirs. She had thought to tease him and break down his control, but she could see now that it was going to take more than just a little teasing. With the only weapon left at her disposal being herself, she wondered if she was prepared to seduce him fully and truly make him her bitch for the week or two that her plans would take to unfold.\n\nThey pulled into the valet parking, and Noah smirked at her as he adjusted himself before stepping from the car. 'The bastard,' she grumbled inwardly. She'd affected him just as much as he did her, and she would wipe that smirk off his face soon enough. She had the upper hand now, and she had no qualms about using it to her favour. She considered her options quickly as they entered the foyer of the casino, a sliver of a plan forming in her head as she caught sight of the concierge.\n\n\"You know,\" she touched Noah's arm, causing him to slow to hear her soft words. \"Now that we're engaged, we probably should get a bigger room, if we are going to share it.\" She spoke with the almost seductive purr that she liked to use on the men she wanted to ensnare, then gave him a small knowing smile.\n\n\"If that's what you want, Sweetheart,\" he murmured, trialling a different endearment for her and enjoying the fleeting look of distaste that crossed her face. He knew that she was still playing some sort of power game with him, but he was happy to go along with it and let her believe that she had the upper hand, for now. She was suggesting exactly what he wanted, so there was no loss in agreeing to this arrangement. He knew that he needed her to trust him and believe that she was in control if his plan was to work, and there would be plenty of time to disabuse her of that falsehood when it was his turn to be in control of their fate. He took her hand in his and steered them toward the concierge.\n\n\"Valente,\" Noah said by way of greeting, with a wide smile. \n\n\"Mr North,\" Valente responded. \"How may I be of service this evening?\"\n\n\"We've made it official, so I was wondering if we could upgrade to a larger suite together.\" He smiled widely and lifted the hand he clasped, showing off the glittering engagement ring.\n\n\"Congratulations to you both!\" Valente said, mirroring Noah's smile. \"I'm sure that we can find something to accommodate you. If you'd like to ensure all your belongings are packed, I can have them moved, and new room keys provided. Perhaps once you have packed, you'd like to enjoy the facilities for a little while we move your belongings and prepare your room,\" he suggested.\n\n\"Thank you. We will do that,\" Noah grinned, and still holding Marcella's hand, moved toward their current rooms. His belongings were still all packed and in the large duffel, so there was no need for him to visit his room. \"Oh\", he said, turning back to the concierge. \"There is some extra luggage in my car, if you wouldn't mind bringing that up too, I would appreciate it.\"\n\n\"Of course,\" Valente nodded in agreement, and once again, Noah steered them further away from the desk. \n\n\"Oh God,\" Marcella groaned, but it was more of a grumbled half-laugh.\n\n\"What?\" Noah looked at her, quizzically. \n\n\"You know, if we really were engaged and about to marry, I would be Mrs North-West.\" She laughed then, full and throaty, as if it was the most ludicrous thing she had ever heard. Noah didn't get the joke, she realised, as he furrowed his brows at her. \"How can you not know that Kim Kardashian and Kanye West called their daughter North? Her name is North West!\"\n\n\"I guess that I just don't see the point of keeping up with the Kardashians,\" he grimaced, surprised that she would care about that similarity in names, but she only laughed harder at his snide remark.\n\n\"I think that I will go for a swim and cool off while they move our room for us,\" Noah said, matter-of-factly, as they entered Marcella's room.\n\n\"That's probably a good idea,\" she said, turning to find that he had disappeared from the room, but before she could take two steps to look for him, he reappeared in the doorway of the adjoining suite with a large duffle bag in his hand.\n\n\"Seriously?\" she asked, not hiding the complaint in her voice that he had managed to book the room adjoining hers. He shrugged, but the playful smile did nothing to disguise his pleasure at her chagrin. \"You just happen to have the room adjoining mine?\"\n\n\"No, I specifically asked for it. I don't leave much to chance, and I wasn't sure how well you would take being discovered here,\" Noah admitted, honestly. It had been his stipulation in the agreement. Honesty between them and no more secretive bullshit and going it alone unprotected. He could hardly expect it of Marcella, if he wasn't willing to follow the rules as they were laid out.\n\n\"Whatever. We're going to be in the same room from now on, anyway,\" she said peevishly, taken aback by his direct honesty. \"You can go change in there then, and I'll change in the bathroom.\"\n\n\"Why bother? We're engaged and about to start living together,\" he chuckled and, grabbing the bottom of his shirt, began to lift it over his head.\n\nMarcella stared at him speechlessly as he removed his shirt. She had known that he had a good physique under his tailored suits and the baggy casual clothes, but wow. 'Was it too much to ask that he had uneven nipples or a small pot belly or something?' she grumbled inwardly, and even though she wanted to, she couldn't pull her eyes away from him, even when he looked at her with a raised eyebrow. \n\n\"Geez, warn a girl before you decide to let all that flab out, will you? Do a push-up once in a while, why don't you?\" She curled her lip in an attempt at a sneer, but his obvious pleasure at her discomfort finally broke the spell, and as he undid the button and zip on his pants, she turned away to retrieve her bikini, before storming into the bathroom and slamming the door. Two could play this game. His chuckles followed her into the small room. \n\n\"Why the fuck are you suddenly acting like an innocent schoolgirl with a crush?\" Marcella growled at herself. \"You are the one in control here!\" Taking hold of her senses, and continuing to berate herself, she changed into her bikini and looked in the mirror. Yes, she was in control, and this should rattle him far more than he had rattled her. The fact that he had rattled her at all bothered her greatly. She'd been with gorgeous men before. She'd been with the sun god Apollo and his chiselled features and overly-muscled torso. She was hardly a giggly girl prone to crushes and longing for a man, like a star-struck schoolgirl.\n\nShe reached for the door and changed her mind, as the image of his body flared back into life in her brain. His body was truly sculptured perfection. He was tall and lean, each muscle adding to his physique without being too big or bulging to distort his naturally beautiful shape and form. He even had the sculptured lines of muscle that disappeared, in a V formation, beneath the waistband of his pants. It wasn't fair that she should want a man who didn't want her in the same way. If she could just take him for a joyride, she was sure that she wouldn't be as drawn to him as she had felt since he showed up here. She knew that she had been drawn to him from the beginning, but she chose to ignore that, in the face of today. She looked at the ring on her finger. It meant less than the orgasm that he had given her in the car. It wasn't real, none of this was real. It was all a game, a game that she was determined to win, despite her stumbles tonight.",
        "Stepping out into the room, Marcella felt Noah's eyes on her, but she didn't acknowledge him as she rummaged around and found a sarong to wrap around her bikini-clad body, and began packing again. Not that she had much to pack. Only a few things that she had bought that morning. Still, she zipped up the bag and placed it next to Noah's, before finally acknowledging him.\n\n\"You didn't have to wait. I could have met you at the pool,\" she sniped, grateful that he wore a shirt once again.\n\n\"What sort of man would I be if I couldn't wait a few minutes for my beautiful wife-to-be?\" he smirked and stood from his perch on the end of her bed. \"Shall we go, baby?\"\n\n\"No! Not baby,\" she said and rolled her eyes. \n\n\"No Shnookums or Baby. Got it. How about Babe?\" he queried.\n\n\"Better, but still a no from me,\" she grumbled.\n\n\"I'll come up with something suitable, sooner or later,\" he chuckled, and took her hand as they exited the room, heading for the pool.\n\nJust as he had seen happen earlier in the day, men turned to watch Marcella walk by, clad only in a bikini and a thin sarong that did nothing to hide what was below it. Even holding her hand did nothing to diminish the amount of attention she garnered as she walked in the too-high heels, like a runway model strutting as if she owned the place and everyone in it. Her long, curly hair bounced around her shoulders and down her back as she took each step, and he felt irritated by the obvious display that she was putting on for the admiring men.\n\n\"I thought that you were trying to keep a low profile here,\" Noah grumbled softly.\n\n\"You told me that they weren't looking here anymore. Did you lie?\" Marcella raised an eyebrow at him. \n\n\"No, but that doesn't mean that they wouldn't come here, strictly for recreation, and stumble across you,\" he said seriously.\n\n\"I'm sure you can handle it, if that happens,\" she said, unconcernedly. \"You're here to help me accomplish my plan, right? Or has that suddenly changed, too? If I can't rely on you, Noah, just say so, and I'll rip up that agreement, and we can go our own separate ways,\" she said, as if she didn't care if he left her there alone.\n\n\"No, but if we are discovered, I'm afraid that any chance you had of completing your plans will have gone, because they will take you back to the hospital to keep an eye on you, while the Battaglia deal with Apollo and apologise for their own behaviour in our city,\" Noah warned. \"The agreement was deal with me alone, or go back to the hospital and get the treatment and protection the family feels that you need.\"\n\n\"Fine,\" she grumbled back at him. \"Go swim. I am getting a drink.\"\n\n\"Not likely, after that little performance,\" he scolded her. \"Your flirting and teasing are going to get you in very real trouble one day, and I might not be around to protect you.\"\n\n\"I don't need protection,\" she scoffed. \"Trust me, I can look after myself. Bigger and badder men than anyone here have come after me before, and I survived.\"\n\n\"Oh? Surviving is not quite the same as winning, or avoiding the battle all together, is it?\" he challenged.\n\n\"Winners become cocky and self-assured. They never learn the lessons inherent in failures and surviving them and, inevitably, they fall from a great height and never recover,\" she said, as if it was a certain truth that he should know. \"Avoiding battles all together creates timid, mousy people, who never go after what they want, and instead, are pushed around for the rest of their lives and will never do what they truly want, for fear of confrontation and reprisals,\" she explained further, in a lecturing tone. \"Survivors become wise and wary. They do what they want, when they want, and they take their mistakes and learn from them, to ensure that they don't make the same mistake again. It's better to be a survivor, in my opinion.\" Her voice was devoid of emotion, as if she were talking like a lawyer trying to convince her client of her argument.\n\nNoah wanted to argue her point, but at that moment, he found it difficult to combat her point of view given what she had survived in her past to become the reasonably sane and well-adjusted woman in front of him. Or at least she seemed well-adjusted despite her sometimes-quirky behaviour and temper.\n\n\"I'll get you a drink,\" he said, softening his voice somewhat. \"What would you like?\"\n\n\"To see the cocktail menu for myself,\" she snapped, but furrowed her brow at his conciliatory tone. \n\n\"If that's what you want, Princess,\" He chuckled, and led her toward the poolside bar.\n\n\"No,\" she said under her breath, shaking her head, \"Definitely not Princess.\"\n\n\"I'll add Princess to the 'No' list then,\" he chuckled, finding a cocktail menu and handing it to her. \"I don't suppose you'd consider Tits McGee, then?\" he chuckled, lowering his eyes to her barely-covered breasts, the bikini top clinging to them. Before the words had barely left his mouth, she had hit him with the cocktail menu, but her face held the smallest hint of a smile.\n\nOnce she was situated on a lounger by the pool, he finally left her to swim. She watched as he dived from the side of the pool and surfaced, stretching out his long length, before kicking into the smooth strokes of freestyle, as he moved swiftly along the length of the pool, before tumbling to make the return journey.\n\nMarcella leaned back, sipping her drink and considering her situation. She had little choice but to let him in on her plans, or at least the parts that she had told him, without using the names of her contacts. It was what had happened since they had come to an agreement that she needed to think over. Her mind went over the teasing, the flirting, the moment when Noah lost his control and pulled over to spank her, and eventually make her cum. She wondered why she hadn't fought harder against that treatment. She knew that she couldn't physically have stopped him, but she hadn't railed against his treatment of her, not during and not after. In fact, she had agreed that she deserved it. Why the fuck had she done that? She blew out a big breath, as a waiter approached, and she ordered another of the potent cocktails.\n\nShe watched him lean against the end of the pool, taking a break from the laps that he had been swimming, and he turned toward her, as if making sure that she was still where he had left her. Noah was a dangerous man for her to be around. The draw to him was undeniable, and she wasn't sure anymore that seducing him, to gain control over him, would be in her best interests. It was in that moment that she realised that she may well have done a deal with the devil when she signed that agreement. A devil that had some kind of seductive power over her, rather than the other way around. Now all she could do was to work out a way to shield herself from it, and survive this agreement as best she could.\n\n*****\n\nGenesis opened the door to his apartment and led Gideon through to the kitchen, where he could hear laughter ringing through the air. They were so loud in whatever they were doing that the women hadn't heard the door open, or the approaching footsteps of the two men, through the apartment.\n\n\"Oh shit!\" Emma said, clutching a hand to her throat as they came into view of the kitchen. \"You scared the shit out of me, Gen. Don't sneak up on me like that!\"\n\n\"Who was sneaking? I could have run a tractor down that hallway, and you women wouldn't have heard us,\" he laughed, shaking his head, and moved around Emma to pull Olivia into his arms and kiss her. \"What's going on here?\" he asked her, highly amused by the guilty looks that the women were shooting each other.\n\n\"Wait, if you're here, does that mean that the big emergency meeting X called is over?\" Beverly asked.\n\n\"It does,\" Gideon confirmed. \n\n\"I might get to go out for my anniversary after all!\" Beverly said, with obvious delight. \"The lasagne will be done in fifteen minutes. Put the garlic bread in for the last ten minutes, and finish off the salad with some dressing, before serving,\" she instructed Olivia, while removing her apron and moving to the stool where her bag sat. \"Emma will organise a day for us all to get together again. This has been great fun! No need to show me out, I know the way,\" she laughed and kissed everyone soundly on the cheek, including Genesis and Gideon, then she walked toward the door, talking on her phone before she had even left the apartment.\n\n\"That's my cue, too. I have a dinner date with two impossible men, who never do as I ask,\" Emma laughed, just as easily as Beverly had. \"You girls can handle everything from here.\" She, too, kissed everyone on the cheek, stopping at Genesis and grinning. \"You did well, Gen, she's adorable. Put a ring on it quickly!\" she whispered in his ear.\n\n\"Tell me something I don't know,\" he chuckled back.\n\n\"Love you all, and don't forget a bet is a bet,\" Emma said, before leaving the apartment.\n\n\"What bet?\" Gideon asked, immediately.\n\n\"Not with me,\" Vivienne shook her head, not wanting to admit that Emma and herself, in some way, had been digging at Olivia and Marcella's past relationship.\n\n\"It's nothing, honestly. I just have to join in the Christmas baking with the aunts and cousins,\" Olivia said, sidestepping the conversation. \"I can't cook,\" she admitted in a whisper. \"They said that they would teach me.\" She indicated the food in the oven.\n\n\"I'm not much of a cook either, so I'm no help, and baking with the Zenati ladies sounds like fun. Especially after tonight,\" Vivienne chimed in, seeing Olivia try to avoid the conversation about Marcella and hoping to aide her.\n\n\"You have to help with the baking because you won the bet, or lost the bet?\" Genesis narrowed his eyes, realising that she had tried to avoid discussing an actual bet. Olivia looked up at him, her eyes a little wide, as if surprised that he was calling her out on her avoidance right away.\n\n\"It is what I have to do if I lose,\" she admitted. \"But I said that I would have to talk to you before I agreed to anything. I mean, we just moved in here, and we've had hardly any time alone, and I wasn't sure if the AFP would call me back in for another hearing. It's all just too complicated to think about, right now,\" she sighed.\n\n\"Have you both eaten, yet?\" Vivienne asked, opening the oven to add the garlic bread. \"This is the Farnese family recipe lasagne that Beverly showed us how to make.\" She tried, once again, to run interference for Olivia.\n\n\"I could eat,\" Gideon grinned. \"Just as soon as you, or Olivia, tell us what the bet was over.\"\n\n\"Marcella won't come back now,\" Olivia sighed. \"Emma said that she will, but I know her, and she won't, not now. So, Emma bet that Noah has great courtroom skills, or something about skills of persuasion, and will bring her back. When I said that it wouldn't matter, she bet me that she was right, and the baking bee was the price.\"\n\n\"And if you win the bet?\" Genesis asked.\n\n\"Vivienne and I get private cooking lessons from her or Beverly once a week,\" she said.\n\n\"Sounds like win-win to me,\" Gideon chuckled.\n\n\"You want to learn to cook?\" Genesis asked. \"We could always hire someone to do the cooking,\" he suggested.\n\n\"Let's just see how this turns out. I made it, but I had a coach all the way through,\" she said and gave a small giggle. Untangling herself from his arms, she went to finish the salad and take it over to the table, which they had set for four, knowing that the two brothers would arrive home together.\n\n\"Did you hear from Noah this afternoon?\" Vivienne asked.\n\n\"No, he's asked for a few days away to clear his head. He doesn't want to talk to anyone, and we've been told to respect that,\" Gideon said, trying to hold back the disappointment in his voice. He and his brothers were close, more than close if he was honest, and to have one of them distance themselves from him, made him feel like he had a severed limb.\n\n\"Maybe you and Gen can find a bottle of wine hidden somewhere in this place, or go up and get one from our apartment,\" Vivienne suggested, not wanting to dwell on anything upsetting while Olivia did her best to serve her first dinner in her new home. The fact that Gideon was always so positive and cheerful was one of the reasons that Olivia had asked them to stay because, even if she messed everything up, Gideon would just joke about it and make them all laugh. They could talk about Noah later, when they got home.\n\n\"Maybe we should let them eat alone,\" Gideon suggested, in a whisper. \"They've only just moved in here after all.\"\n\n\"I promised that we'd stay, but we can eat fast and leave early,\" she promised, and went back to helping Olivia, as Genesis went to get a bottle of wine from the hidden bar in the living room.\n\nThe lasagne had turned out as wonderful as Beverly had promised and, with the salad and garlic bread, the simple meal went well, with everyone enjoying the food and the company, as they each skirted around the topics of Marcella and Noah. It was towards the end of the meal that curiosity finally got the better of Genesis. \n\n\"Why are you so sure that Marcella won't come back here?\" Genesis asked, reaching out to take Olivia's hand, and smiling to reassure her that he wasn't concerned about her answer, only curious.\n\n\"Because the Battaglia came for her again. She won't go back there, not ever,\" Olivia said with certainty, placing her fork on her plate and swallowing, realising that Genesis would continue to ask questions until she had told him everything. It was his way. He was like a hunting hound, when he caught the scent of a mystery or story. \"It was why she left. She knew that they were coming. Every time they came for her, she was weak or injured, and in a clinic or the doctor's surgery, and she couldn't fight back. Last night she was injured, and in the hospital again, and they came for her again. Only she got away this time, and she won't come back. Not when you asked them to come here. She won't trust any of you again, not now.\"\n\n\"Fuck!\" Gideon swore. \"She thought that they came here for her? And we led them straight to the hospital where we had made her stay. Now it makes more sense.\" He shook his head. \"We need to get a message to Noah.\" He looked at Genesis.\n\n\"No,\" Genesis said with finality. \"We have to let him do this on his own, and just be there when he asks for help. We've done enough damage already, don't you think?\"\n\n\"But...\" Gideon began, but Genesis cut him off.\n\n\"No. If she truly doesn't trust us, and if she sees his phone, she won't trust him, if you are feeding him information like that,\" Genesis said in a commanding tone. \"Remember what Imelda said to him the morning that this all started going so very wrong,\" he added. \"How we act could make or break her trust, and his future. Well, we fucked up once already. Let's not make it any harder for him.\"\n\n\"What are you talking about?\" Olivia asked. She wasn't aware of anything that Imelda had said to anyone recently, or even that she had been seen after Olivia's last hearing.\n\n\"Imelda told Noah that Marcella was his curse-breaker, but that it wouldn't be easy, and gave him warnings, all on the day that Apollo came to town,\" Vivienne explained, gently.\n\n\"I'll explain it later,\" Genesis said, giving her hand a reassuring squeeze. \"But if anyone can convince her to come back here, where she is safe, Noah can. So, we just have to give him the time and space that he needs to do that.\" He raised his eyes to Gideon, who nodded in reluctant agreement.\n\n\"I'll help you clean up the kitchen, while the guys clear the table,\" Vivienne announced. \"You don't want to wake up to that mess in the morning.\n\n\"I've been thinking that we may need to hire another contract or two, now that our family is growing,\" Genesis said quietly, after Olivia and Vivienne had retreated to the kitchen. \"I'm going to be home a lot more often. If Noah does manage to bring her back, and Sarah decides to make a break from mother, after everything that's been going on, we will have to consider what we need, and if it's fair to overwork the one contract we have between all of us. It's a big building and if we are all planning on staying here...\"\n\n\"Yeah, but let's wait a week or so and see what Noah says. We can talk to Papa about it at the Gathering,\" Gideon suggested.\n\n\"Fuck! The Gathering. I better get a ring on her finger before then,\" Genesis said.\n\n\"You planning to elope?\" Gideon asked.\n\n\"Nope, engagement ring, you moron.\" Genesis scowled at his brother. \"Though I doubt that Olivia would want to go through the ordeal of another church wedding,\" he sighed. \"So, I will put off that part as long as I possibly can.\"\n\n\"Hadn't thought of that. Sorry, man,\" Gideon sympathised, as he picked up several items from the table and carried them through to the kitchen.\n\nThe cleaning was done quickly, and in a flurry of kisses and hugs, Vivienne and Gideon left to go to their own apartment. Genesis pulled Olivia into his arms and kissed her deeply. \n\n\"Thank you for dinner, and for trying so hard to be nice to the other women in my family. I'm glad you are making friends with them. My family is very important to me, and Emma and Beverly are some of the nicer members of mine,\" he said, gently. \"It was even better to come home and find you laughing and happy.\"\n\n\"I am happy as long as I am with you,\" she smiled and leaned in, pushing her cheek against his chest and curling her arms around him. \"Will you tell me about the curse breakers now?\" she asked.\n\n\"I'm sure that I have told you at least some of the story around the curse before now, but yes, I will tell you again. Just so you understand what Noah is going through and why we all have such a strong belief that he will bring Marcella back,\" Genesis said and picked her up, carrying her to their bathroom. \"We can clean up while I talk. I have something special planned for you tonight.\" He kissed her chastely as he placed her back on her feet.\n\nHe helped Olivia remove her clothes, and then removed his own clothes, as he began the story while they showered. He told her of the original witches and the cruel and arrogant Duke of Zenati, who had thwarted a love affair destined by the stars and been cursed for all eternity to have one soul mate, and never know true love until he found her and completed the trials required to win her heart. She cursed not only the Duke, but all of his male heirs, down through history. \n\nBeyond hard, and needing to be inside his beautiful girl, he held himself back from taking her there in the bathroom, as he spoke of the first time that he had seen her, looking impossibly small and frail in that hospital bed. Then he spoke of how his heart had literally ached each time he saw her, and his stomach rolled and soured with each touch, and how it felt like a knife was twisting in his gut with each of her rejections of him and the care he offered her, until he had won her trust and affection. He told her of Gideon's story, and how being with Vivienne had affected him in a different but similar way.\n\nThen he talked about Noah, and his abilities, and how that made the breaking of his curse subtler. He explained about how sick he had been each time Marcella went missing or got herself in trouble. He'd always been drawn to her but, as long as he knew where she was and that she was safe, his symptoms diminished. When Apollo showed up, however, Noah had almost collapsed, as his body and heart reacted so badly to the possibility of losing her, without even trying to claim her as his own.\n\n\"I saw him that day. He looked awful,\" Olivia nodded her understanding, as she pulled on the flimsy, lace panties that he had handed her. \"I'm sorry that you went through that for me, and that I was such a brat when you were only trying to help me and care for me. I love you, Genesis. There could never be anyone for me but you. Any relationship I had before you pales into insignificance by comparison. You know the real me, and you love me, despite my awful family and the old Olivia, despite Serena and all the trouble that she got into, despite how horrible I was to you when we first met.\"",
        "\"I love all of you, little one. Every single fragment of you, your past, your present and your future are just as much mine as they are yours. I will love you forever, and as soon as the AFP back off, we will get married and then everyone will know that you are mine forever.\" He dipped his head to kiss her. \"Mine,\" he murmured, as he broke the kiss and pulled her from the bathroom. \"Come. There is something that I have wanted to show you since the day we moved in.\"\n\nThey walked to the hallway with the locked doors, at one end of the apartment, and Genesis smiled as she stood in front of the first door and unlocked it. He stepped back to allow her to walk in. It was like a small gallery, and Olivia walked slowly around the space, looking at the large artistic photographs lining the walls on three sides. Nude or scantily-clad women had been placed in various forms of bondage, mostly rope bondage, though there were some very interesting medieval- style devices used as well. Each of the bound women had been photographed in the most artistic of ways. Most were breathtakingly beautiful, but all affected her in such a way that she almost wished that she was the woman in the photograph. \n\nGenesis moved to a panel near the door, once she had made a full circuit of the room, and the wall to the next room folded back on itself, like a concertina, and her eyes widened at what she saw. Genesis remained silent, allowing her the time to look and explore the second of the three rooms that held the secrets of his sadistic nature, which few knew the depths of, and which he wanted to share with his beautiful girl. She didn't baulk as she walked around, viewing the photographs and registering the equipment in the room as being similar to that used in the works of art. He even thought that he saw a small smile cross her face. He didn't think that he could ever be more in love with her than he already was, but that small smile, and the way her heated gaze caught his, made his heart swell to bursting and his cock harder than a rock.\n\nHer eyes grew wide as she looked about the room properly, after finishing her circuit to look at the photography. It was then that she inspected the different devices from those depicted in the artworks. She wasn't sure what purpose some of them had, she just knew that looking at them filled her with dread and anticipation, in equal measure. Her soft pink underwear, which he had allowed her to wear after her shower, was growing damper with each passing moment. \n\n\"Master?\" she asked inquisitively, knowing that this was the one place where she didn't have to think about using that title with him. \"I'm not even sure what some of these things are, and I can't see them in the photos,\" she admitted, and was surprised to find she sounded almost breathless as she spoke.\n\n\"As time goes by, you will learn the painful pleasure and unbridled ecstasy that each of these devices can bring us by experiencing them for yourself.\" Genesis took her hand and spoke with that deep, commanding voice, that always turned her into a quivering and needy submissive nymphomaniac for him. \"I don't believe a simple explanation will suffice to capture the experience for you.\"\n\nGenesis let Olivia explore for a few more minutes, as she ran a finger over some of the wood and leather furniture. He then unveiled the hidden storage areas, behind panels between the artworks. Her eyes widened at the collections of restraints and toys available to her Master from anywhere in the room.\n\nGenesis smiled as he spanked her ass, and then led her to a device that stood only a little taller than Olivia. He let her gaze fix on the wrist straps at the top of a cross-beam, and also the leg posts, which held the device in place. The bottom was bolted to the floor and, when her legs were pulled wide and affixed to the ankle bindings, she would hang there in suspension, at his mercy to tease and torture how he desired. \n\nThere were padded slips near the ankle restraints, and she saw that, when she was suspended, they would allow her feet to be placed on them and take the pressure from her arms. This simple addition to the frame made her relax into what she knew was about to happen. Genesis may have a sadistic streak, but he had never hurt her beyond what she could safely endure, not as Remington had, and he always soothed her when it was over. Her love and devotion to him would allow her to endure whatever test or torture he chose to put her through, because she trusted him completely. He had saved her from the hell that she had been drawn into by being spoilt, gullible and oh so stupid, and he had lavished his love and compassion on her, as well as showing her great patience and understanding. \n\nGenesis helped her step up on the padded footrests, and locked her ankles in place. She stretched her arms up and put them in the restraints, hoping to show him how much she trusted and loved him. Genesis ran his hands up her sides once more, never tiring of the compact body, with the subtle curves, that she so willingly gave him now. He lightly brushed his palms over her nipples, before continuing up her arms, and finally to her wrists. He secured and locked her in place, and then started to walk away. \n\nHer eyes followed him as the sweats that he wore hugged low on his hips, showing off the full length of his muscled back, and she held her breath until he turned back toward her and she could take in his muscled chest and abdomen. She loved every inch of his body, had savoured the taste of his skin, licked each throbbing vein in his cock, and feeling the restraints holding her in place, she craved the feel of him. Olivia's eyes stayed locked on him as he pressed a button on the wall opposite her, and she watched the panel slide away to display a range of equipment. \n\nGenesis pulled out items of interest to him. Knowing that she was watching, he pulled out a set of clamps of a style that he hadn't used on her before. He moved to a different area and chose a flogger with stiffer leather thongs, rather than the soft suede straps she was used to. He also took an anal plug of a slightly larger size, to tease her little asshole with a bit of stretching. He smiled as he approached her again, placing the equipment on a nearby padded leather bench for ease of access.\n\nKissing her, he palmed her breasts, teasing the flesh out until his fingers found and played with her nipples, tweaking and twisting them as his tongue danced with hers, stealing her breath and the sweet sounds of pleasure she made. She gasped into his kiss as he closed the clamp on one sensitive nipple, and felt his cock jerk in pleasure against her stomach. He brushed his lips over hers as he attached the second clamp, allowing the gasp and accompanying whimper of pleasure to escape into the large room. \n\n\"Just breathe, baby,\" he murmured, capturing her mouth again as he pressed against her, his own chest putting pressure on the clamps, making her whimper louder. He reached around and stroked the soft skin of her ass, dipping his fingers deeper into the cleft between her cheeks with each pass.\n\nGenesis broke the kiss and moved behind her, his hands running over her tummy and waist as he circled the frame that she hung from, loving the sight of her restrained like this. Taking the lube and plug from the bench as he went, he pulled her hips back as far as the restraints would allow, then sank to his knees behind her. Reaching out, he took hold of the sides of the lace panties that she still wore and pulled them up and apart, as he ripped them from her body, knowing the pain that she would feel as the lace pulled taut between her folds, before it was ripped away.\n\nHis hands cupped the firm globes of her ass and spread them, exposing the little dark star of her tightest hole. He kissed each cheek, lowering his hand to run gentle fingers from that dark star to her pussy, gathering her wetness and gliding it back to the tiny, tight hole. His other hand reached around her thigh to slide through her folds and over her clit, teasing her and giving her pleasure, as he continued to probe and open her for his use.\n\nOlivia relaxed once more, as she focused all her attention on the pleasurable sensations she was feeling. Between the clamps on her nipples, and her Master teasing her tightest hole, added to the manipulations of the sensitive nub of flesh that sent tingles of pleasure through her, she could feel her need growing in intensity. She knew when she felt the harder surface of the plug start to press on her, stretching her around it, she would need to start begging for release soon. Her whimpers turned to mewls as the plug stretched her wider than usual, and her hips rocked forward to evade the large toy that he was forcing into her. Finally, he gave the plug a twist as it settled into place, and she knew that he watched her body shiver again at the uncomfortable intrusion.\n\nSeeing her shiver, and hearing her whimpers become a higher pitch, Genesis quickly stood and, stepped back, reaching toward the bench to let the handle of the whip slip into his palm. He swung it, flicking his wrist and watching her squirm as the leather straps licked her flesh. Pale, raised welts arose immediately on her ass. He swung, again and again, spreading out the stinging welts all over her quickly-reddening cheeks. He moved around her then, barely giving her time to absorb each stroke before the next one fell. She was so beautiful like this, her teary eyes looking at his, filled with heat and need for this. Her passion seemed to match the unquenchable desire that he felt when she allowed him to treat her this way. His cock was straining in his loose pants, but he was determined to have her beg for her release. \n\n\"Breathe,\" he instructed again, as she cried out at the harsh whip of the flogger against her skin and the clamps on her breasts. \"Breathe, baby.\" He closed the distance between them, kissing her and running the handle of the whip between her legs, as she rocked her hips against him, seeking more contact and release. He dropped the whip, then pressed two fingers deep inside her, curling them to find the rough, but sensitive, spot inside her, rubbing his fingers over it until she finally broke and said the words he had been waiting for. \n\n\"Master...please...pl... pl...\" she begged, panting for breath, \"Please let me cum.\" \n\nThis is what he had waited for. He stood behind her, grabbed her hips and thrust up, burying his cock inside her. With her hanging there, she was at just the perfect height for fucking. He thrust over and over, and then pushed on the plug and twisted it repeatedly, revelling in her cries of painful pleasure. He rode her hard, before bucking one final time and growled, \"Cum with me, baby.\" He lurched up and forward, and went rigid as his cock jerked with each jet of cum it released. \n\nOlivia cried, whimpered and squealed, her small body quivering and her pussy spasming around him, over and over as she came, each muscle inside clenching in orgasmic delight. She floated into that cloud of ecstasy, even as he pulled out of her and reached for the cuffs.\n\nGenesis undid her wrist restraints, and then her ankles. He moved in front of her and placed his hands underneath her arms and lifted her to him. Olivia slipped her arms down around his neck and pressed her breasts into his chest. He kissed her, and then carried her to the back of the room and pushed another panel, which slid to concertina against the wall, revealing a huge wrought-iron bed with matching side tables. She was barely cognizant enough to look around to see that the room was bear with those exceptions. He laid her down, took the clamps from her nipples, making her arch and cry out again before he soothed her with his fingers and mouth. Despite having just cum minutes before, he began to make love to her, softer and more slowly, leaving the plug still firmly placed in her ass. Her moans filled the room as she came again, under his talented tongue, fingers and cock, and he claimed her properly for the first time in their new home, before letting her rest, as he cleaned and cared for her.\n\nKnowing that he would not be required to wake early, and determined to spend at least the morning enjoying his girl, Genesis slipped into the bed beside her, pulling her into his arms and holding her close, as he too rested for a little while, before enjoying her delicious submission again. \n\n*****\n\nNoah stretched and slowly turned his head to look at the woman asleep on the large bed beside him. She had built up a wall of pillows between them in case he got any ideas through the night. He smiled at the memory. The potent cocktails had gone to her head while he had stayed in the pool, working out the tension in his tight muscles as he swam lap after lap, not noticing the time, or the number of drinks she had obviously had in the short amount of time. \n\nShe'd barely spoken to him on the way back to the room, giving him sidelong looks that made him think he had upset her in some way, by swimming for so long. It was more than likely what had happened after dinner, but he wasn't prepared to broach the subject with an obviously angry and inebriated woman. Once back in the room, she had slammed the bathroom door and emerged ten minutes later in a skimpy camisole and tiny boxers that hugged her hips and ass. Ignoring his presence, she crawled onto the bed and collapsed onto her pillow without a word. When he emerged from the bathroom, she had built her pillow wall down the length of the bed, as if she thought that he would take advantage of her as she slept off the alcohol.\n\nThe thought that he would take advantage of her when she was sleeping, or unconscious, both infuriated and amused him and he had climbed into the bed and lay there, wondering how he could make things right between them when they were starting on the field of battle like this. It didn't help, he knew, that he had basically blackmailed her into letting him in on her plans and to act like a couple. She didn't think that she needed help, or saving from her own reckless behaviour, but he couldn't let her go off on her own again, to deal with the Suebi, who must know that she was the one who had found her sister's boat through her contact. It was a dangerous game that she was playing, and he had a bad feeling about it.\n\nHe slipped from the bed, gathering some clothes, and went to shower before Marcella woke. She was meeting a messenger today, and then they would have to wait, either to meet another messenger, or her contact, who would take her to Hermione's, or at least tell her how to find it. He had to admit that if she pulled it off, it would go a long way to proving the truth of her sister's story. There was anger in trusting someone who would betray their family, or even their clan, this way though, and he wasn't sure that Marcella hadn't been given the boat to build trust and put her in a more susceptible mood for when they tried to take advantage of her. He felt that there was more going on beneath what she told him but, for the moment, he was content that she had agreed to his involvement, and wasn't prepared to push her any harder just yet. \n\nHe didn't want to ruin the burgeoning trust that he was trying to build with her by voicing his misgivings, but he felt his protective tendencies bristling as he thought of her doing this alone, or trying to leave him behind. He knew that watchers would be looking on from afar, and he wouldn't call them in unless absolutely necessary, but he felt like he was playing this game of hers with one hand tied behind his back.\n\nExiting the bathroom, he noticed that she was sitting up in bed, thumbing through his phone. They had agreed to be honest and open with all things, including their phones, and he hoped that he had nothing incriminating on there. Not that he ever left messages of any importance on his phone, preferring to delete them as he went.\n\n\"Gideon apologised for what he said yesterday morning,\" Marcella said, offhandedly. \"He seems to think that your decision to take some time off is his fault. Do you want to talk about what happened?\" she asked curiously, her voice sickly sweet.\n\n\"Once you texted me, I gave up looking for you. I knew that you were resourceful enough to remain out of sight until you wanted to be found. Vivienne was beside herself, which put Gideon on edge, and he called me an asshole,\" he shrugged.\n\n\"But you found me anyway,\" she pointed out. \"You didn't even tell your brothers?\"\n\n\"He'd just yelled at me and called me an asshole in front of everyone at the hospital. What do you think?\" he asked.\n\n\"What about Genesis?\" she prodded. \"He doesn't like me, so I doubt that he would have cared whether you gave up or not.\"\n\n\"He didn't, but he has enough on his mind with Olivia and her case, as well as having his moving plans interrupted by all the drama of your accident and disappearance. They're both pretty disappointed that they haven't had the time together that they thought they would. He likes you, by the way. You just make it very hard for him to show it, when you attack his relationship with your sister all the time.\"\n\n\"So, you didn't tell him that you were taking off, either?\" She narrowed her eyes at him, as if daring him to lie to her. \n\n\"No, I found you by chance. I told you that. I talked to X and Dom, whom I was with at the hospital, about taking some time off, and they agreed, considering that Dom seemed barely affected by his surgery. Which, I am told, isn't unusual for the type of surgery he had. He has to take it easy, and his speech is a little off, as well as his balance, but they knew how overstretched I had been lately and told me to go and enjoy myself for a few days.\" Again, he shrugged. He had told her all of this the day before, but she was obviously testing him for some reason. \"I take it that Gen messaged me as well?\"\n\n\"You're a popular man. Your brothers and father, as well as Xavier, have all texted you already, this morning,\" she drawled, and rolled her eyes. She wished that one of those texts held something that hinted as to whether he had lied to her about just telling them that he was getting away for a few days. If so, she could renegotiate this stupid agreement, but there was nothing but love and warmth and wishes for him to take care of himself and recharge his batteries. \"They all mention you not getting into too much trouble or something like that. Why would they all think you would get into trouble?\"\n\n\"I did a lot of dumb shit when I was a kid. I earned the nickname 'Trouble' from Madrina, and, I guess, the rest of the family use it as a joke now. Like I am going on another risky adventure while I'm away from them,\" he said easily, not concerned at all by her questions.\n\n\"What sort of dumb shit did you used to do?\" she asked, not having had the sort of childhood that allowed her to get up to any mischief.\n\n\"There was one summer when I built my own hang-glider. I guess I was about sixteen, maybe seventeen. It didn't fly very well. I broke my leg and got trapped on a cliff ledge. It took the Army Rescue Team to get to me off the cliff face, and then get me to hospital. I got in a fair bit of trouble over that one,\" he chuckled, enjoying the sound of her laughter as she heard his story. \"I did a lot of dumb shit when I was younger, but even though I am a very serious, reliable and professional corporate lawyer these days, they don't let me forget it.\"\n\n\"Sounds like fun. I've always wanted to try that, and a multitude of other things, but life always seemed to get in the way. Maybe, once I'm sure Olivia is safe and happy here with your family, I will take some time to try all those things that I put in the 'one day' pile,\" she said, taking him by surprise with the insight into her life. \n\n\"I could take you. I have a tandem rig,\" Noah offered. \"We'd have to go home, to the family farm, to get it though,\" he grinned.",
        "\"How often has that line worked for you?\" she teased. \n\n\"I don't know. I never tried it. Do you think it would work?\" Noah asked, curiously.\n\n\"Why else would you have a tandem rig?\" she asked.\n\n\"Little sister, who was a bit of a daredevil before she discovered fashion and makeup. Now she would be too scared to break a nail if she did anything too strenuous,\" he chuckled. \"Mama hated her doing anything risky on her own, so I took her, or anyone else who wanted to go, when they were visiting the same time as us.\"\n\n\"She didn't mind you throwing yourself off a cliff in a home-made glider?\" she asked, still laughing.\n\n\"It's not like I announced what I was doing, on the morning I decided to try it out,\" he shrugged. \"Trust me, my mother had a lot to say once I got home, with my leg in plaster. She always had a lot to say when I hatched some dumb plan, and went off and got yet another scar from the injuries I received.\"\n\n\"You have scars?\" she frowned.\n\n\"Tons. All from the dumb shit I used to do,\" Noah chuckled. Pointing to a feint puckered line on his calf, he said \"This one was from the glider accident. I had to have pins inserted. Not that you can see it, unless I point it out. I have a heap, but I got them all so long ago that, unless I point them out, people don't even notice.\"\n\n\"Yeah, I have a few like that, but it's enough that I know that they are there. I wouldn't point them out to anyone, and no one would notice, unless I did like you said,\" Marcella said, her face sobering and her laughter dying. \n\n\"You did dumb stuff, too?\" he asked, knowing he was treading into sensitive territory here, but she was being so open this morning that he couldn't help the question.\n\n\"You could say that. Nothing as stupid as you, though.\" Marcella gave a half laugh. \"My turn in the shower, and you should let Gideon off the hook if he isn't the reason why you asked for a break from family stuff.\" Marcella tossed Noah his phone, ending the conversation.\n\n*****\n\n\"7:01 am: Noah: All good. No trouble. Be back for Halloween.\" \n\nGideon scanned the text, trying to read between the lines, but Noah had given little away, except his expected timeframe. Halloween was almost two weeks away, and Noah being gone for that long bothered him. He couldn't even be sure if he had found Marcella from that text. Although Imelda had told him that he had, he didn't know anything more than that, and what Xavier and Dominic had told him. He had already broken the rule about leaving Noah alone to do what he needed to do, by sending the text, and he wasn't sure if he should risk sending another. At least Noah had texted back, and didn't seem to be holding a grudge about his rant the day before.\n\n\"Did you hear from Noah?\" Vivienne asked, coming out of the bathroom dressed for the day, much to Gideon's disappointment.\n\n\"Yeah, he didn't say much, but it looks like it won't be a quick break that he's on,\" Gideon grumbled.\n\n\"That's a good thing, isn't it? I mean, if he's found Marcie, they will need time to work out stuff between them. I can't imagine that she would believe in curses and fate,\" Vivienne reasoned.\n\n\"We only have Imelda's word that he found her. When he was a kid, he got the nickname 'Trouble' from Madrina because he used to go walkabout on his own and invariably get into trouble. Not just normal kid trouble, but being pulled out of the ocean by the Northern Border Patrol, and being returned home by the AFP-type of trouble,\" Gideon tried to explain his anxiety. \n\n\"Seriously? He seems so stable and down to earth. I wouldn't have picked him as a big risk taker. How old was he when that happened?\" she asked. \n\n\"Fourteen,\" Gideon said with a frown. \"I guess he hasn't gotten into any big trouble for a while now. Not since he had to be rescued from a cliff after breaking his leg when he was seventeen. After that, he did his trial. Then he seemed to settle down and start to take university seriously.\"\n\n\"Then I think you are worrying for nothing. It's been a decade since Noah pulled his last big stunt,\" Vivienne smiled, and leaned down to kiss her husband. \"Don't worry so much. He'll be back, and he'll bring Marcella with him. Go have a shower, and maybe we can see if Gen and Olivia want to have breakfast at the caf\u00e9 across the road.\"\n\n\"We have the day off, so I am all for ignoring the world and staying in bed all day. I can bet that is what Genesis plans for Olivia, too. Besides, we haven't had a day to ourselves since we got back,\" Gideon said with a smile, flopping back onto the bed. \"I'm sure that Gen and Olivia are planning on taking advantage of having a day just to enjoy finally being in their own home together, even if they do get out of bed.\"\n\n\"You're probably right about that. Poor Olivia was like a lost lamb when I got there yesterday,\" Vivienne admitted. \"Maybe you should check in with Xavier and Dom before making any decisions. A lot has been going on lately, and as much as Dom keeps saying he is fine, he just had brain surgery, for goodness sakes.\"\n\n\"Papa and the old men have pulled rank, because of everything that's been going on lately,\" he admitted. \"We've all been told to take a few days to rest and relax, and they'll let us know if anything comes up. So, you can stop being such a good girl and strip for me, because no one is coming to drag us out of out of here today,\" he grinned widely at her.\n\n\"Breakfast, Gideon. We need to eat. We can't live on love alone.\" She shook her head.\n\n\"We could try,\" he mock-pouted, pulling her toward him. \n\n\"Take me to breakfast, then I promise that you can choose what we do for the rest of the day,\" she negotiated.\n\n\"You promise?\" He narrowed his eyes at her.\n\n\"Even if it means that you plan to tie me to the bed to keep me here,\" she laughed.\n\n\"Sounds good to me,\" he chuckled, leaping out of bed and heading for the shower. \"My knot tying skills could use some practice!\"\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-18"
}