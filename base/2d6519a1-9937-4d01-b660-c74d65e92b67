{
    "title": "Smooth Jazz Ch. 07",
    "pages": [
        "*Were nearing the end sooner than you think!!* Thank you for all the love shown as always!*\n\n*Closer to the truth...we go*\n\n*Also, just discovered I get feedback to my email! If anybody wants a response back on their feedback or want to give personal advice. Please do! I appreciate all the support shown!\n\nKeep reading, commenting and rating!!!\n\n\n\nJAZZ PACKED HER CLOTHES; SHE WAS READY TO RETURN HOME. She had slept at James for almost a week while Connor was off playing investigator. Connor was supposed to meet her today with Marcelo to debrief her and James on what was going on. She was anxious to know what they had found. For days she had been feeling restless.\n\nShe tossed and turned without Connor by her side. Then she had begun to get sick. After the incident she could not seem to stop throwing up. Jazz washed her face and brushed her teeth, after another round of purging after her breakfast.\n\nJazz looked in the mirror. She felt different. It must be the stress.\n\n\"Here girl, take these tums. Maybe it's your stomach. What have you been eating?\" James held his nose and sprayed all over the bathroom dramatically. Jazz just rolled her eyes.\n\n\"It's really not that bad. And I don't know. My period is coming up; I always get a little ill around the time of the month.\" Jazz brushed it off. It had to be the stress making her tired; she had been through a lot in these past months. \n\n\"Mhm, that's why I'm glad I'm not a woman, y'all got too much going on down there.\" James offered her the bottle and she downed two pills, she felt her stomach cramp again, and doubled over. James rushed to her side.\n\n\"You okay?\" He was starting to get concerned.\n\n\"Yeah, yeah I'm fine. Like I said it's that time of the month; I get symptoms before it hits. It'll pass, it should be here by the tenth, and I can bear it till then.\" Jazz reassured him, James scrunched his face up.\n\n\"Are you sure; the tenth of this month?\"\n\n\"Yes, I think I would know James.\" Jazz stood up once her stomach settled and went back to packing, when James tapped her on the shoulder with his phone greeting her face when she turned around.\n\n\"You know it's the twenty second Ms. Thang,\" James smirked and Jazz grabbed the phone in disbelief. How had ten days and more gotten away from her? She couldn't believe she had let this week and a few days slip past her radar.\n\n\"Shit, shit, shit....oh my god.\" Jazz started pacing back and forth.\n\n\"Okay let's not panic. So you forgot your period date. It's not the end of the world Jazz. There's been a lot going on. Let's just breath in and out, in and-\"\n\n\"No! That's not it, James I didn't forget the day.\" Jazz put a hand to her head.\n\n\"Then what is it!\"\n\n\"I'm late!\"\n\n\"Oh! I call dibs on godfather.\"\n\n\"If you do not shut up-\" Jazz struck him with her hand and he giggled.\n\n\"Oh girl you gotta white baby daddy-\"\n\n\"James! Stop it okay. I'm not...that...let's not even say the word. It's no big deal, the stress has just thrown my cycle off and it'll be back to normal soon enough.\" Jazz breathed in and out, and then gave James a death stare as he grabbed a paper bag to hand to her.\n\n\"And you better not say anything to Connor; I don't want him freaking out over nothing. I'm not going to panic, everything's fine.\" Jazz reassured herself and James, as she gave him the death stare. As always he was amused at her frazzled-ness. \n\n\"Girl I won't say nothing, but you need to talk to him. And as long as y'all have been wrapping it up, you have no reason to panic.\" James stated.\n\n\"Give me that damn paper bag.\"\n\n<center>*</center>\n\n\"WHY WOULD YOU GO AFTER HER?\" Mr. Pennington paced back and forth in his office. \n\n\"I want her, plain and simple. I'm tired of you treating me like I'm not entitled to what I want.\" Mr. Pennington looked him in his eyes; he was starting to see he was dealing with someone who had a serious problem.\n\n\"You and Ellen need to stop this! I already gave her some money to end this. What's your price?\" \n\n\"Unlike Ellen I don't want your money; I want to be by your side. I'm tired of working regular class jobs trying to blend in.\" Mr. Pennington took out his check book and wrote down a large sum amount.\n\n\"You know I can't do that, now take the money.\"\n\n\"Can't or won't Dad-\"\n\n\"Don't call me that, just like I told Ellen we had an agreement.\"\n\n\"Money for what, abandonment? Yeah that's a fair deal. You tricked me. You told me you would take care of me. After you let my mother overdose without so much as a call for help.\" \n\n\"I couldn't call anyone; you know what they would have done to my reputation, and I have taken care of you. Your job is a mere cover up, you want for nothing.\"\n\n\"Except her, which is what I-\"\n\n\"Well you can't have her! Don't you know he almost kilt that idiot lawyer your sisters screwing around with!\"\n\n\"I don't care, he won't stop me!\"\n\n\"He could kill you! You don't think he's on high alert. He's not going to let his guard down. Don't be stupid!\"\n\n\"Oh but he will-\"\n\n\"Why? Why are you doing this? You need to stop doing what you're doing and go get help.\"\n\n\"Now you wanna help me? You only care about yourself; if she was any other woman you wouldn't give a fuck.\"\n\n\"Well I do and I'm ordering you to back off!\"\n\n\"Oh,\" Mr. Pennington blew a frustrated as he started clapping. \"Now you want to be a father.\"\n\n\"This is not one of your sick games. This is real; if you fuck this up we're all going down, not just me. You and Ellen, both of you, are selfish, greedy, and blinded with sick desires.\"\n\n\"Please, please stop.\" Mr. Pennington begged him as his eyes watered. It was all closing in. He could feel it. Yet there was nothing he could do. \n\n\"I'm sorry Dad, I can't. But don't worry. I know what I'm doing. Truth be told I could have had her by now. I'm closer than you know. But I'm waiting for the right moment.\" \n\n\"What the hell is this nonsense? Do you hear yourself? Didn't you hear me talk about that Soldier that nearly kilt-\"\n\n\"Connor, Connor O'Malley?\" Mr. Pennington looked into his eyes with shock and surprise. \n\n\"That's his name? How do you know him?\"\n\n\"You really are clueless aren't you? Connor wouldn't dare lay a hand on me. He trust me too much, I'm his best friend.\"\n\n\"What do you mean?\"\n\n\"Now that everything is blowing up, Connors going to need all the support he can get. That's where I come in. Once I get close enough, I can make my move, silently and with no inconvenience to you.\"\n\nMr. Pennington paced back and forth again. He couldn't let this happen, he knew her. Still, if he could do it quietly and get this over with, then it would be all over. Then again Connor wouldn't let that happen right? All he had to do was play it smart. \n\n\"Fine, if you think you can do it son, then go for it.\" Mr. Pennington cleared his throat as he was eyed suspiciously. \n\n\"I sense you're mocking me. I'm not as dumb as you think but I'll show you. All you need to do is step aside and watch. Oh, and I'm getting really tired of you sidestepping me Dad.\" \n\n\"Either you put me aside you, or you end up beneath me once all your dirty secrets are out. You decide.\" He walked out of his office letting the door close soundly. \n\nMr. Pennington screamed and knocked all the shit off his desk in blinding rage. What had he done? What storm had he created, that was now spiraling out of his control? \n\nHE WALKED OUT INTO THE STREET AND DIALED QUICKLY. \n\n\"I just confirmed it; he confronted Connor and got attacked.\"\n\n\"Good work, I knew that idiot was up to something. Find out what Connor knows.\" Ellen purred, taking a break from sucking Blacks dick to answer the phone. \n\n\"No problem. There's a gathering tonight. I'll make sure to be there.\n\nHe hung up the phone and grinned. This was his chance to make up for his mistakes; he had let her get away once but not again. It was nothing personal against Connor, like Ellen said it was just the way of the game. \n\n<center>*</center>\n\n\"WHY SHOULDN'T I KNOW WHATS GOING ON?\" Martin was disappointed that Marcelo wouldn't divulge what was going on with Connor and his new beau.\n\n\"It's nothing personal Martin, but this is a family issue. I told you we're meeting up and I'm sorry you wanted an invite, but it's not a party.\" \n\nMarcelo was leaving Dave's house to meet up with Connor, when Martin had come over and wanted to tag along.\n\n\"I would like to meet Jazz actually, and I think I'm part of the family as well. I may not matter to you but I matter to the rest of the people here and I think-\"\n\n\"This is not a fucking family gathering, and I told you that. I'm not sure what emotional and deep direction you think our relationship goes but I can assure you it's not as dramatic as your making it out to be.\" \n\nMarcelo met him with gray wolf eyes, and a stiff jaw. He was getting really tired of Martin and his bitching.\n\n\"I'm not being dramatic. I'm a man Marcelo but that doesn't mean I lack feeling. You can shut down all you want but I know you don't like me.\"\n\n\"Hey boys, I don't think there needs to be any argument going on here. Martin just let it go. Marcelo is Connors long time good friend and so are you. What Marcelo is saying is that doesn't mean that you two need to be close, not that he doesn't like you.\"\n\nDave would never understand the tension between them. Yet he knew that Marcelo was not one to get close to people and Martin especially did not rub him the right way.\n\n\"But when I mentioned him not caring for me, he doesn't dispute it.\" Martin crossed his arms and stared at Marcelo as a look of annoyance passed across his face.\n\n\"I don't dispute that Martin; I'm not here to argue with you. I came to see Dad and head out on my way. And I've taken time out to explain to you why you weren't invited to the imaginary \"cool club\" you think you're missing out on.\"\n\n\"If you're insecure as a man about the relationship you have with Connor then that is your baggage, don't get ahead of yourself thinking you can unload it on me. Bye Papa.\" \n\nMarcelo stood from the table, and slipped a Nike jacket over his large frame, when Martin grabbed his shoulder. \n\nMartin felt enraged at Marcelo's words and his dismissal. \n\n\"You don't get to talk to me like that!\" Martin screamed and went to punch Marcelo in the face and he quickly side stepped him and sent Martin flying against the wall. \n\nMarcelo didn't even react, just lifted an eyebrow at his lame attempt to attack him. \n\n\"Hey! Martin calm down.\" Dave stood, not sure where that outburst had come from. Marcelo didn't want to leave Dave with Martin in this crazed state and stayed to the side of him. \n\nIf he came at Dave then he would really see what power looked like. Marcelo wouldn't miss. \n\n\"No! I'm tired of getting treated like a second class citizen. Marcelo has always done that to me, all of you sit around like you care.\"\n\n\"Marcelo doesn't have a dad because his father died! Mines chose not to be in my life. Marcelo is alone because he chooses to be, and yet he treats this family like you guys are all he has!\" \n\nMartins cobalt blue eyes were on fire, his milk white skin was red with rage and fury. His blond streaked her was now at his shoulders, and all over his head from him running anxious fingers through it. \n\nHe stood in front of Marcelo, shorter and less in shape he didn't quite measure up and he hated it. \n\nMarcelo's reply was calm, deep sounding and reserved. He knew that in heightened situations there was strength in serenity. Radical emotions clouded ones judgment; rarely did he let that happen. \n\n\"Martin to be honest, your issue is with yourself not with me. I don't have a complex and obviously you do. You want to be liked and included. You desire people to go your way; well life doesn't work like that. You don't always get what you want.\" \n\n\"And for the record I didn't have a father, the man who I called my father adopted me because I was abandon by my own. Family is not about a race for attention, it's about loyalty, respect, unconditional love, not a popularity contest.\"\n\n\"Now you've caused enough disruption in my father's house, I suggest you leave.\" Marcelo challenged him with his eyes to disobey. \n\n\"Dave-\"\n\n\"Martin look I think it best you just leave for now, okay?\"\n\n\"That's okay.\" Martin snatched his own coat off the chair and walked out and slammed the door. Marcelo didn't trust him; the feeling was now mutual for Martin. Yet only one was the snake, and was slithering closer and closer beneath the grass. \n\n<center>*</center>\n\nJAZZ ARRIVED BACK HOME WITH JAMES IN TOW. \n\n\"Make yourself comfortable boo. I'm gonna give my Mom a call before Connor and his friend get here.\"\n\n\"Take your time honey, while I raid this fridge. You sure you don't want any pickles and ice cream?\"\n\n\"Shut up!\" She slipped off a flat and threw it at him.\n\n\"You abuse me, yet still I stay.\" James shook his head playfully and Jazz laughed. \n\n\"Go raid the fridge! Good luck finding anything by the way.\"\n\n\"I'll find a way. Girl I grew up in the hood eating bread sandwiches don't play with me.\" \n\n\"Don't touch my yogurt!\" Jazz went into her bedroom and slipped into some comfortable clothes, and put her hair up. It felt good just to be home. She sat on her bed and started to dial her mother. \n\n\"Hey suga!\" Her mother's voice was dipped in southern sweets and she smiled, and realized just how much she missed her family. \n\n\"Hey ma, I was just calling to check on y'all and see how you and daddy were holding up.\" She walked to the living room and plopped down on the couch and rested her head back.\n\n\"We holdin' up just mighty fine ova' here chile, how are you? You sound stressed sweet pea.\" Her mother's voice was laced with concern. \n\nNo matter how happy she attempted to sound, her mother could hear right through it. \n\n\"I am mama-I am,\" Jazz sniffled. She didn't know why she thought she wouldn't break under her Ma's patient and understanding voice.\n\n\"Tell me what tha matta. Is it the divorce? You and Connor?\" Her mother's voice soothed her as she held back the tears. \n\n\"William came to the house...and he attacked me. Connor came and had to beat William's ass, the police came, and they were no help. I escaped with a few bruises but nothing more. I'm okay, it's just I'm worried about what he's after.\" Jazz heard her mother cry out for her father.\n\n\"Ma I'm sorry I didn't tell you before I-\"\n\n\"Jazz why didn't ya call us, I can't believe this!\"\n\n\"Ma calm down.\"\n\n\"Jazz I know the last thing ya need is me panicking, but you shoulda come home. Bring Connor on with you. You'll be safe here, till this mess is figured out.\"\n\n\"Ma I can't just run away and leave my home.\"\n\n\"Jazz he attacked you! Be sensible honey. He's not in his right mind Jazz and I don't want you to get hurt again.\"\n\n\"Whose there with cha now? You need to go to that police station and get some kinda protection!\"\n\n\"Mama calm down, please. Connor knows what he's doing. I know this sounds crazy but we think the police are working with William,\"\n\n\"Ma he's more dangerous then we could have ever imagined. Trust me. I can't explain it all right now but I promise it'll make more sense soon.\"\n\n\"Jazz is you sure? We can come down right now. I don't like this at all, I just don't feel right. I don't care who is working for him-\"\n\n\"Ma please, I promise it'll be okay. I don't want you to worry. You've talk to Connor. You know I'm in good hands.\"\n\n\"Well alright, your fathers out right now, but he'll be home shortly. You make sure you call back Jazz, you hear me?\"\n\n\"Yes mama, I promise, I will and I'm okay.\"\n\n\"Betta be, I'm so damn hot right now. I can't believe that boy tried to hurt my baby. Jazz listen to me. If the police won't help you, arm yourself. You and Connor.\"\n\n\"Connor's on top of it. I have something in the house. I gotta go Mama.\" Jazz heard James answering the door. \n\n\"Call me back. I love you, are you sure you're okay?\"\n\n\"I'm sure. I love you too.\" Jazz hung up the phone after convincing her mom some more that she was okay and anxiously went into the living room. \n\n<center>*</center>\n\n\"Hey baby, this is my good friend Marcello I was telling you about. He's been helping me figure this out.\"\n\n\"Hi, it's nice to meet you.\" Jazz extended her hand and he shook it firmly. Jazz gave James a look and he just shook his head. Marcelo wasn't bad looking at all. Jazz was starting to think it was some sort of good looking Army men club around in the city.\n\nShe only had eyes for Connor but she would give props where they were due. Marcelo stood firmly. He was of a leaner muscle and frame. His eyes were gray, distant, cold, but the definition of calm, cool and collected. They were intense, and captivating. \n\nHis hair was a little longer, slicked back from his face. He was pure Italian. The olive skin tone and dark hair only added to his sinew, and mystery. His hair was gorgeous, a raven black color, with one small strand hanging at the side of his face. \n\n\"Nice to meet you too, I'm sorry it was under these circumstances though. I wanted to meet you before but Connor decided to keep you locked away.\" \n\nHis mouth quirked in what Jazz guessed was as close to a smile that you were going to get from him. His aura was so different from Connor. His stance was much more defensive, and blocked off. He was reserved, but still polite. Yet his cupids bow mouth screamed \"fuck you.\" \n\n\"And now you see why?\" Jazz joked. \n\n\"But really, I'm sorry if I've caused any inconvenience for you.\"\n\n\"Never, Connors is family. We're going to make sure nothing happens to you. Let's sit and talk though. There's a lot to discuss.\" \n\n\"Take your time. Please do not rush; Even if it takes all night.\" James said and Jazz shot him a look and tried not to laugh. \n\n\"Please, baby. You and Marcelo go ahead.\"\n\n\"I'll start.\" Connor said. \n\n\"We looked over the pictures you gave, and they match the pictures on the memory card I took from Williams's computer. The photos were taken by his camera. Also they match the dates of the various times we've been out.\"\n\n\"He's been stalking me? Wow I can't believe this.\" Jazz felt her throat began to get dry. She couldn't believe he had been following her. Invading all of her personal and intimate moments, she felt sick. \n\n\"I ran his information. He doesn't have any prior charges. No history of violence reported. No suspicious activity on his record. However, we did see something interesting from the bank statements I was able to pull from information with his credit cards, and the personal information you had on him.\"\n\nConnor took the bank statements and handed them to Jazz. \n\n\"Okay, look at these bank statements. Look back to about a few years prior and then focus in on when it gets to 2010.\"\n\n\"Whoa, I remember this. We damn near got an audit because William had taken such a jump in his bank account. The bank had to call because of all the money that was deposited.\"\n\n\"That was odd to us too. What was going on at the time? Can you remember?\" Marcello asked her. \n\n\"Um, I'm not sure...Wait! I remember. William was taking on a major case. I mean this was the biggest one of his career. He was defending a big city drug dealer, Quentin? I think was his name.\"\n\n\"She means \"black.\" James interjected. \n\n\"He's a big time drug dealer. He got caught up in a big drug bust and William represented him. He had all his boys taking a rap for him but he still did a nickel. Whew honey, you could see his eyes burning through the TV screen.\" \n\n\"That's exactly what we found too. We got in touch with some boys and ran Blacks card, no prior offenses that would stick. A couple of battery charges, petty theft, but he was definitely big time.\" Marcelo reached in his bag and pulled out a grid of the city. \n\n\"These are the areas that Black controlled.\"\n\n\"Oh my god, suburban areas?\" Jazz questioned. ",
        "\"Rich people do coke baby.\" Connor pointed back to the grid. \n\n\"If Black controlled all these areas and went to jail, along with his top \"dogs\", then usually we would see what's called a drought.\"\n\n\"What's that?\" Jazz asked, feeling quite non street smart.\n\n\"Oh girl, that's when a big drug dealer gets pinned, and since he's the primary server if you will to those major communities, him being locked up, crime, drug, and illegal activity goes down for a while, till new guys come take over.\"\n\n\"With Black being locked down we don't see that happen, during that time business is booming more than ever, and gathering some figures we found it's increasing.\"\n\n\"What does this mean though?\" Jazz was starting to get nervous.\n\n\"It's common for drug dealers when in prison to keep a lock on things on the outside. Since Blacks posse was in prison with him, he must have found someone on the outside. Dirty cop scenario all the way.\" Connor explained. \n\n\"What Connor means is cops don't make a lot of money, sometimes they make deals with drug dealers and crooks to let shit slide for a fee or service. We think William got desperate. He started collaborating with Black to help him keep his drug thing poppin'\" \n\nMarcelo broke it down and Jazz stood and started pacing. She had a million thoughts running through her head. \n\n\"There was an investigation, at Williams's firm, not too long ago. They found drugs in a closet. A pound of coke, and they were during a thorough investigation to find out how they got there. During that time, me and William went away.\" \n\n\"He was so insistent on us going away because of the scandal; he was even considering leaving the firm. Then he always had money, more money on him than usual. It's the little things that's starting to make sense to me.\"\n\n\"William though, drugs, and money...criminal activity? He was always so straight and narrow. I don't understand.\"\n\n\"What's this got to do with me, you don't think I was helping him? Connor I wouldn't-\"\n\n\"Calm down Jazz, of course I don't think that.\" Connor took her hand in his and rubbed it. \n\n\"Then why is he following me, haggling me and all this other bullshit.\"\n\n\"The property.\" Marcello said. \n\n\"There's something in that property. There must be. He's so insistent for a reason. He has to have drugs and money there.\"\n\n\"No way! I cleaned the entire place before Connor came, and found nothing. Plus, he wouldn't have the nerve to- right were not talking about a sane person here clearly. Connor you really believe all of this is true.\"\n\n\"Yeah I do. I got eyes on Black, me and Marcelo are going to pay him a visit.\" Jazz looked at him in disbelief. \n\n\"No! Connor no, that is out of the question. Let's just take this to the state police. They'll do something about this. I talked to my Ma today too. She said we can come down until things pass over.\"\n\n\"Jazz, trust me baby I know what I'm doing. We still need records on Ellen, we gotta talk to Black and we gotta find what's in that damn house.\" \n\n\"Okay, Connor this is just too much to take in right now. I feel so confused and just... I don't know. This is just too much, too much. I need to sit down.\"\n\nJazz sat down beside James as he rubbed her back. Jazz felt her body start to overheat. Never had she reacted to stress so physically. \n\n\"Marcelo, go check on that location for Black, and go over to the house. I need to talk to Jazz alone. I want you to stay in the house while I'm gone.\" \n\nMarcelo nodded and took the keys. His bags were already packed and over there. He laid a hand on Jazz's shoulder and she gave him a thankful smile. \n\n\"I'm going to head out too guys. Call me and be safe you too.\" James kissed Jazz on the cheek and shook hands with Connor and left out as well. \n\n\"Baby just breathe, I know this is a lot to take in right now. But were going to get this all straightened out okay but I need you to accept this and be strong for me. For what I have to tell you.\"\n\n\"What else is there Connor? How can this get any worse huh?\" \n\nJazz looked him in his eyes as if begging for him to stop with this series of bad and horrible news. \n\n\"Jazz I need you to get it together baby. You can't break right now. You have to trust me. We have the leg up now; we know something they don't that we know that's the first thing. Secondly William is a bitch Jazz and he won't be hurting you ever again. I promised you didn't I?\" \n\n\"Yes, yes you did. Your right baby. I'm ready. Just tell me.\"\n\n\"The letter Jazz, I took a sample of writing you gave me from William and had one of my guys compare it to the letter. It doesn't match. Yet the finger prints on the letter match the finger prints on the photos that were there along with yours. I'm running the prints through the system trying to get a match.\"\n\n\"You think William is working with that guy who attacked me?\"\n\n\"I don't know. We found a video but we need a convertor it was done on an apple phone and then put on the memory card but doesn't show. I'm gonna have my buddy Martin look at it.\"\n\n\"This is a lot of information to sort through. That's why we have a lead, suspicion and a strong hunch right now, and we have to start talking to people. In the meantime baby this stress is getting me concerned about you, so we're going away for a couple of days.\"\n\n\"We, where are we going?\"\n\n\"I talk to your Mama, right after you, we're headed to Georgia.\" Connor held up the tickets and Jazz jumped up into his arms and started sobbing. Connors kissed her on the top of the head and rubbed her back. \n\n\"I'm taking you home baby, I'm taking you home.\"\n\n<center>*</center>\n\n\"ARE YOU NERVOUS?\" Jazz gave him a tentative smile. So far he had succeeded in making her think, he was completely calm. He wanted to keep it that way. She sat on the bed of the hotel room. \n\nThey decided to take a night's rest, and he had pushed for the best hotel they could find. Since it was one night, she didn't think he should pay more than 300 but he wanted the top suite. \n\nShe only deserved the best in his mind. Plus, he wanted her as comfortable as possible. \n\n\"No I'm good baby, black people love me.\" She punched him in the shoulder and he chuckled. \n\n\"I'm playing, I'm fine.\" He flashed her smile and then it faded as she started to undress. He admired her body as he leaned against the dresser in the room.\n\n\"What?\" She turned to him and her eyes went soft.\n\n\"Come here baby.\" He held out both of his palms and she started to slip a robe over herself but he stopped her. \n\n\"No don't cover up that gorgeous body, come just as you are.\" Jazz let the robe fall and walked to him in only her white sheer panties and bra. His mouth watered, he could never get tired of seeing her beautiful body and her beautiful face.\n\n\"You know you're beautiful, inside and out right?\" Jazz watched as Connor slowly took off his shirt and shorts and he kicked off his shoes, and socks. They stood in front of each other, their eyes intensely moving over each other in appreciation and love. \n\nConnor pressed her into him and kissed the top of her wavy brown hair. He then tipped her face by the chin, looked into her hazel doe eyes, and kissed her lush mouth.\n\n\"Sit down I have something I need to say.\" She fluttered open her eyes and he led them to the bed. He sat down at the edge and then lifted her up and on his lap, facing him as her legs wrapped around his waist. \n\nJazz wrapped her arms around his neck and gave him her undivided attention.\n\n\"Connor you don't-\"\n\n\"I do. Jazz I never meant to keep you out for so long and I want you to know, I've never opened up to a woman the way I have with you, it was something new for me. I never thought I would amount to anything.\"\n\n\"I grew up with so much blackness in my heart because I felt like I was a mistake. I used my anger to hurt people, and anyone that tried to get close I lashed out on them, and gave them the cold shoulder.\"\n\n\"I didn't love myself, so I couldn't love anyone else.\"\n\n\"I love you. You don't have to be afraid to love me.\" Jazz felt her heart race. She hoped he wouldn't take back what he had said that night of passion when they made love. \n\n\"That's the thing. I'm not anymore.\" Connor looked her in the eyes and stroked her cheek. \n\n\"When I saved you in the alley, I thought you were the most captivating woman I had ever seen and when I saw you a year later, there was this sadness in your eyes, and I got this urge to wash it all away, and it scared me.\"\n\n\"So I built some walls cause it seemed to come too fast, my want for you, my need, I only lied to you once...\" \n\nHe hesitated not sure how she would take it. Could he tell her, open up? She lifted his head back up and met his eyes. Then she pressed a tender kiss to his lips and he tightened his hold.\n\n\"It's okay Connor, its okay baby, you can talk to me. I won't judge you, I'm here for you.\" Jazz spoke to him through soft kisses, both her hands on his face. His pressed his forehead against hers and grabbed both of her wrists with his hands. \n\nHe felt her warmth flow through him, warming his whole body down to his toes. Her kisses were the sweetest gifts and he took them indulging himself and knowing she would allow him as long as he needed too. He was starting to realize it might be forever.\n\n\"Jazz, when I'm oversees it's not all find the enemy and kill him, patrol the streets, kick sand, it's so much more.\"\n\n\"I've seen most of the people that I have grown to respect, and love die in front of my eyes. Some of them slept next to me and talk to me about their dreams, their family and hopes. Then in a second they faded, gone Jazz.\" He held her closer to him, as she cradled his head against her chest. \n\n\"Then there was my friend, who died in my arms. Lewis Hill, one of the greatest, he had a wife and kids Jazz! A fucking family and he died. Then I thought what do I have? No kids, nothing, I should have been the one.\" \n\nConnor shook as he felt tears in his eyes. The memory came back. It was a cold night when they were out, him and Lewis watching and waiting. It was so cold, he remembered his feet were freezing and his hands had gone numb. \n\nHe couldn't feel anything. Lewis was talking about his kids and family as usual. Connor always listened. He liked all of Lewis stories about home. Then all the sudden bam, an explosion, their cover had been blown. Lewis was shot in the head immediately after. \n\nConnor had blood on his hands. He couldn't hear, but his ears rung. Lewis fell on him and they rolled into a small dug out hole and hid away for the rest of the night until he was rescued, and found with Lewis's body. \n\n\"Baby look at me,\" Jazz lifted his face up as she cradled him close. \n\n\"Don't think like that, you're alive because you're going to carry his story forward.\"\n\n\"Your friend was a good man and he wouldn't blame you like your blaming yourself. That has to be a burden to carry, blaming yourself for the harsh twist and turns of life.\"\n\n\"People we love and cherish die and its okay to grieve, but don't blame yourself. Don't carry that; especially that night.\"\n\n\"Connor your friend had a life before his death. It would be a great justice for him if you focus on that, because his death isn't the end all be all.\"\n\n\"His legacy, the memories, and what he meant to you is.\" Connor looked into her eyes seeing so much empathy and love for him. \n\n\"I have nightmares. I'll wake up in the middle of the night and I'm there again; that's when I blame myself the most. That's why I can't let my guard down with you. I can't let anything happen to you.\" \n\nHe closed his eyes. Suddenly with her arms around him he felt like he could tell her everything. \n\n\"Baby If I would have known, I would have taken you to talk to someone. I'm sorry baby, I'm so sorry for everything you've been through.\" \n\nHe felt her tears on his cheek and shoulders. She was crying for him. She was feeling his pain and understanding. He felt no one ever could. \n\n\"Look at me.\" He lifted his head and looked into her eyes and wiped them with his thumb. \n\n\"There's another thing. Since I've met you, since I've been with you every night that you were next to me I had no nightmares, because you were with me in my arms. I need you in my life Jazz.\"\n\n\"Connor I need you too.\"\n\n\"Not just for now, damn it Jazz forever. I love you Jazz.\" \n\n\"I love you too baby.\" \n\nConnor rubbed his hands up and down her silk covered frame. The top of her silk bra was spilling over with her full breast peaking at the top. He took her mouth carefully indulging in the sweetness of her kiss, while massaging her breast in his hands. \n\nThe moan escaped from her lips, vibrating against his mouth and immediately he became erect. \n\nJazz rubbed the outside of his boxer shorts, slipping her hand through the opening to stroke him as he began to nibble at her neck; the heat was rising between them. \n\nConnor reached behind her and unsnapped her bra with one hand and pushed her down on the bed. \n\nJazz wanted to be a seductress tonight. She wanted to see all of his desire, for her and only her. Slowly she crawled on top of the bed, lying on her back she slid her panties off and tossed them in his lap. \n\nConnor watched hungrily as she spread her legs, sucked her fingers, and then began to play with her clit. \n\nConnor took off his pants and began stroking his dick as he watched her rub her clit till it was swollen and her pink pussy was glistening as her wetness covered her hand. Jazz gripped one of her breast and lost herself in the lust in his eyes for her. \n\n\"You getting that pussy ready for me.\" \n\nConnor stroked his dick slowly, loving the way she was seducing him. He would let her feel beautiful, radiant, and wanted to night. His only goal was to please her. To let her know just how much he loved, and worship her body, mind and spirit. \n\n\"Whenever you're ready,\" Jazz spread her pussy wide for him before rubbing it again. Then Connor went under. \n\nAs she continued to rub her pussy he lapped up juices and twirled his tongue causing her to push his head further down to her pussy.\n\nJazz screamed in ecstasy as his tongue showed no mercy, as he sucked and licked until she was pushing his head back, because the pleasure was so overwhelming. \n\nHe pulled her down by the waist and went back in, opening her up more so he could fuck her with his tongue. \n\nConnor loved the sounds of her moans as he sucked her clit and slid a finger into her pussy and then two. \n\nHe stroked in and out of her while licking and sucking on her pussy until he felt the wave of her orgasm on his tongue and he quickly slurped all of her sweet nectar in his mouth. \n\nJazz laid on the bed spent, as he pulled her down, putting his arms behind her legs and pushing them back to her ears. She felt him. \n\nThe tip of his head entering her, and she gasped. He was opening her up; she knew he was getting ready to put in work. \n\nConnor took his time pushing his dick deeper and deeper into her tight pussy. He threw his head back, and grunted as she was so fucking tight. Her pussy gripped his dick as he pushed in and out of her. \n\n\"Fuck, give me that dick.\" Jazz said the magic words and he lost it. \n\nHe slammed his dick into her pussy and she arched up to meet him. Connor dove in, stroking her pussy as she cried out his name. Her nails gripped his back, as he pounded her pussy until her clit was swollen with desire. \n\n\"Open up for me.\" \n\nConnor let her hold her own legs back as he put his hands on either side of her, and did push-ups in her pussy pushing his dick straight down into her spot. \n\n\"Shit, baby, that feels so good! Connor that feels so fucking good baby!\" Jazz cried out as he touched her soul, digging his dick deep inside her. \n\nHe pounded her pussy mercilessly. Jazz held her legs backed and watched his cream dick, disappear into her caramel pink pussy. The sight alone had her creaming all over his dick. \n\n\"Look at you, cumming already for daddy huh?\" Connor put her feet to his shoulders and pulled her waist up so that he could hit her pussy even more thoroughly. \n\n\"Look at me,\" Jazz met his eyes at his request. \n\n\"You love me.\"\n\n\"Yes!\" Jazz cried out as he stroked her pussy into submission. \n\n\"You want this shit forever?\" Jazz closed her eyes and gripped the sheets as the climax was building so rapidly inside her and ready to burst. \n\n\"Yes, baby, please don't stop. I'm almost there baby, don't stop...Connor!\" Jazz dropped one leg and kept one on his shoulder as he began to pound harder. \n\nJazz turned and bit into the pillow next to her and screamed out his name as her love came down fiercely. \n\nConnor felt her wash over him and felt his own climax about to hit. He released his load inside of her and they collapsed on each other. \n\nConnor immediately pulled her into his arms as they both laid spent. Connor kiss the top of her hair like she liked and Jazz felt her eyes fluttering shut. \n\n\"Baby, I know it's a little late to be asking this but are you on birth control?\" Connor asked and Jazz felt her heart start beating fast.\n\n\"Hmm?\" Jazz said curling into his chest.\n\n\"I said-\"Jazz started snoring and he looked down at her closed eyes.\n\n\"Never mind I guess.\" Connor reached over and turned off the light and Jazz opened her eyes. She definitely had to go see a doctor and soon. \n\nShe couldn't tell Connor, not now. It was too much going on and with him leaving soon, she just couldn't. She couldn't let him think she was trying to trap him with a baby. \n\nShe just hoped keeping it from him didn't blow up in her face. \n\n<center>*</center>\n\n\"TURN HERE THIS IS THE HOUSE!\" She directed him towards a big white house with black shutters, and a wooden swing on the porch. He immediately felt the welcome atmosphere of the cozy and comfortable aura surrounding it. \n\n\"Thank you baby!\" \n\nConnor parked up on the gravel driveway and hoped out the car with Jazz at his side. Jazz grabbed his hand and gave him a long kiss that caused him to bite down on her lip, letting her know if she kept it up they would be back in the car, and back to the hotel room.\n\n\"Get in this house and stop neckin,'\" Her mother came out the house and smiled warmly at them and Connors cheeks immediately grew red. \n\nConnor loved her and her accent immediately. She was tiny but he could tell she had a big personality like his father. Her eyes were warm and filled with kindness. Her petite frame was smaller than Jazz's and she was more fragile looking. \n\nYet, Jazz's mother had aged gracefully; her hair was in a short bob and cupped her face, making it an oval of smooth skin and no gray hairs anywhere. \n\nJazz's mother dyed it, and would let anyone know with no shame.\n\n\"Ma! I missed you so much.\" Jazz ran into her mother's arms and they hugged swaying back and forth. Connor just stood back patiently and watched the scene that touched his heart. \n\n\"Oh!\" Jazz broke away and wiped her eyes. \n\n\"Mama this is Connor, the one you've been talking too and I've been telling you about.\" Jazz pulled him forward proudly.\n\n\"Nice to me you Mrs. Simmons,\" he kissed her hand and was please when she giggled graciously.\n\n\"Look at you, handsome as a devil. And already trying to make off with me,\" She teased patting him on the cheek affectionately. \n\n\"If that's apple pie I smell we can elope right now.\" \n\nShe laughed a hearty laugh and ushered them inside. \n\n\"Come on in the house then, its plenty.\" Connor and Jazz followed her inside the house, and he nearly went to his knees; he kept being exposed to good food. The aroma of fried chicken and homemade yams and Mac and cheese filled his senses.\n\nShe led him into the kitchen and hooted when he got down on one knee, when she took the plate off the apple pie.\n\n\"If all it takes is a little pie, I wouldn't have gone through all that trouble courting your dad.\" She said to Jazz as she sat Connors plate and fork at the table. ",
        "\"As I recall I courted you woman. Truth is you only liked me for my looks. And I was in a band.\" Her daddy came into the room and he was as tall as Connor but lean and sturdy. His glasses stayed at the tip of his nose.\n\n\"Dad,\" Jazz jumped into his arms nearly knocking his glasses off and he laughed deeply as he squeezed her tight. \n\nHis salt and pepper hair made him look studious but the suspenders gave a nice touch to the farmer's eyes he seem to have, ones that seem to know the strain of hard work. He had a weary look in his eyes as they fell on Connor.\n\nConnor felt that any minute he would tell him to leave his daughter alone and go get the shot gun.\n\n\"Oh hush Thomas, don't pay him no mind Connor. You go and wash your hands for dinner.\" She kissed his cheek and gave him a warm hug. He was shocked and touched in the same instant. \n\nConnor went to Jazz's father who hadn't said a word to him just looked him in the eye and shook his hand firmly.\n\n\"Nice to meet you sir.\" He tried to keep eye contact, it was a man thing and respect is what he knew he needed.\n\n\"Call me Thomas and come in the den, let's talk a while, after you wash your hands of course.\" He motioned for Connor to go on, and he did. \n\n\"Now don't you be harassing the boy Thomas and hurry up cause these rolls is nearly finished. Come on baby, help mama set this table.\" She passed Thomas one more warning look knowing how he could be and they started setting the table.\n\n<center>*</center>\n\n\"You have a nice home.\" Connor said absently, trying to find the rights words to say. Her father was a man of few words, and that made it difficult.\n\n\"Thank you, cigar son?\" He took it and eyed it up and down. Cuban? The man had good taste. He watched as he cupped his hands around the tip and lit it up. \n\nHe flipped it and grinned when Connor caught it one handedly and lit his as well.\n\n\"Now I know you might think because I'm old I'm close minded, but I want to clear it up that nothing I say has to do with you being white.\" Connor shrugged his shoulders and Thomas laughed lighting up his face for the first time. \n\nYou about as cool, and calm as you want to be. I thought I could scare you a little.\" Thomas patted him on the back. \n\n\"You're alright.\" Thomas acknowledged. \n\n\"I did have thoughts about a shotgun; you might be hiding for the day your little girl brings home a knuckle headed boy.\" \n\n\"Yeah I did, but she's a woman now and I appreciate that she brought home a man, a real man, and not the uppity boy she brought here a while ago.\"\n\n\"Now she knows just how low down and no good for her he was. When she brought him home, we could see it. But it comes a time in a man's life where he must set foolish things aside and as much as I wanted my shot gun back then, and now knowing what he's done, I didn't grab it.\" \n\n\"Lord knows I wanted to lock her away, keep her from the hurt she couldn't see coming, but I couldn't, she had to learn.\" \n\nHe spoke sternly, no trace of anger in his voice, just simplicity. It made him hang on to each word, and soak it all in.\n\n\"But him putting his hands on her, I can't stand for. I want to thank you for protecting my daughter and keeping her safe, but I want to make sure you doing right by her.\"\n\n\"I'm not foolish enough to let someone as special as Jazz slip through my fingers, as a soldier I know what it's like to lose the one's you love. I don't want to lose Jazz. She's made a real man out of me, taught me how to love properly, made me a better man by being a better woman.\"\n\n\"Jazz is the best I know and I love her.\"\n\n\"I'm going to marry her, no matter what.\" His voice shook with a fever. Thomas looked at him regarding him seriously. He could tell Connor was head over heels in love. \n\nHe reflected back on a time when he had been with the same look in his eyes. He had his sights set and there would be no one in his way. \n\nNot even hell and high water could have stopped him. Still thirty years later, he was still in love. He was still the luckiest man in the world, next to the one who would have his daughter.\n\n\"Jazz is a grown woman, and she can make her own decisions. I just want to make it clear whether you're asking for my permission and blessing, or demanding it.\" He let a smile touch the corners of his mouth and Connor chuckled.\n\n\"I'm asking sir for your blessing.\" He finished his Cigar around the same time her father did and put it out.\n\n\"You have my blessing, as long as you do right by her.\" \n\n\"I will and I won't let anything happen to her. I'm on it.\"\n\n<center>*</center>\n\n\"HE'S MIGHTY FINE JAZZ, ALL MUSCULAR AND MANLY.\" Her mother patted her cheek as Jazz help set the table. She tried not to think about what her daddy was saying to Connor. \n\nShe knew that he never liked William, and expressed to her how he was no good. Part of the reason, she didn't let them know about the divorce. She didn't want him to be right. She hoped this time around she had done right.\n\n\"I love him mama.\" She smile from ear to ear and her Mama laughed richly. She had never seen her daughter glow with so much life. It was all in her eyes. She was in love and feeding off of the sweetest fruits that life had to offer. \n\nJazz was a woman now, and she had made her share of mistakes. Even so, she was treading in better waters now and her mother knew Connor would keep her baby safe.\n\n\"I know, and he's just about head over hills for you. He seems like a good man. I can tell from the way he carries himself, and he got a good sprit on him.\"\n\n\"He's a little troubled but you'll help him through. I don't think you realize how much he needs you.\" Her mother spoke wisely. \n\n\"I know he loves me, but I don't know if he'll stay. I'm afraid to ask what happens when he goes away...to us. He tells me he sees a future with me, but he hasn't really come up and said anything concrete.\" She put a hand to her heart at the thought of him leaving.\n\n\"He's healing Jazz, and he knows what decision to make. He's a grown man and he's smart whatever he chooses you have to be prepared for it.\" \n\nHer ma always could look at a person and go so deep inside their fears and troubles. It was a gift and a curse in Jazz's case, especially at times when she wanted to hide the hurt and take comfort in handling it on her own.\n\n\"If he goes, I'll wait for him, I'll write him. I won't give him up Ma.\" She stared at the determination in her daughters eyes. She smiled inside with pride. She was no longer settling or being content. She had some fire and some spice.\n\n\"I know you'll do what's right. \" Jazz came around the table and her and her mother embraced. She knew she could always find comfort at home.\n\n\"Thank you mama, I love you.\"\n\n\"I love you too suga.\" Her mother called Connor and Thomas to dinner. She beamed at him, as she could tell he approved of Connor and so did she. They gave each other a quick kiss of mutual agreement and bonded understanding.\n\nDinner went smoothly and was filled with laughs and easy companionship. Jazz hung her head in shame and enjoyment as they told Connor stories about their only child. \n\nHe almost choked on his food, when they mentioned how Jazz had fell down the stairs on prom night. She punched him in the arm and he coughed an apology. \n\nThey showed him pictures of her, and she just shook her head at her jerry curl she had and her hot pink halter tops. He poked fun at her high school sweet hearts and had something to say about each one. \n\nJazz just rolled her eyes and moved the subject along. She could tell her parents really like him. He had a charm that was irresistible as his father's. Even her father who rarely had much to say was slapping Connor on the back, and putting in input as well on all the topics of discussion.\n\n<center>*</center>\n\nJazz tossed and turned as in Southern tradition Connor and her slept in separate rooms for the night. She didn't know how he was doing, but she could barely sleep. She closed her eyes when she heard footsteps nearing her bedroom. \n\nHer mother had already come to check on her two times. Then both her mother and father came to get the scoop on what was going on. Her mother started crying when Jazz had told her everything she had been through since the divorce.\n\nHer father listened intently and was pleased that Connor was taking over and had some ideas in the works. She hated that her mother wanted her to stay so badly. She didn't want to leave her life in Sacramento. She still had lessons to teach, and people to see about her organization she wanted to start. \n\nJazz sat up as her door opened and Connor slid inside. Jazz giggled and then covered her mouth when he put a finger to his lips telling her to hush. \n\n\"I can't sleep.\" Connor whispered and sat on the edge of her bed. \n\n\"I know I'm spoiled, I'm used to being cuddled at night.\"\n\n\"Well daddy's here now.\" Connor slid in next to her, wiggling his eyebrows and she laughed. \n\n\"Connor I hope you know we are not getting nasty in my parents' house.\" Jazz snuggled closer to him as he laughed as she eyed him seriously. \n\n\"I just want you close to me baby. I promise no funny business.\"\n\n\"Okay then.\" Jazz moved into the curve of his body and felt his hands wrap around her. \n\n\"So, what did you and my dad talk about?\"\n\n\"He told me he wanted you to find a nice black man to settle down with, and where do I get off taking all the sistas away.\" Jazz nudged him in the stomach and turned around to face him.\n\n\"You think you're so funny don't you. For real Connor, what did you guys talk about?\"\n\n\"Nothing baby, he just wants the best for you. He just wants to make sure that I don't hurt you. He's very protective of you and I understand why.\"\n\n\"You're special, strong but delicate. I know you don't need a man to take care of you but I want to.\" \n\nConnor kissed her on the lips softly, like she was as delicate as he said. \n\n\"Well that's sweet. I love that you guys are getting along. I hate we have to leave in a day or two.\"\n\n\"Yeah, but we'll be back.\" Connor rubbed her back and she drifted off to sleep. \n\nJazz and Connor continued the same routine. At night Connor would sneak into her room and they would kiss and touch for a few hours and fall asleep; before he slipped back out to his room in the morning.\n\nJazz almost spit up her orange juice, when on the day they were leaving her mother told Connor that he was very heavy footed and Jazz that she screamed too loud a whisper. She just laughed it off and thanked god that her dad was out tending to his horses. \n\nConnor just sweet talked her Mother and she giggled like a school girl. Soon they packed up and headed out on the road again and when Connor and her father went off for another talk, she eyed them suspiciously. She had no idea what they were up to. She hoped soon she would find out.\n\n<center>*</center>\n\nMARCELO LOOKED AROUND THE ENITIRE HOUSE. He couldn't believe their hunch was wrong he had managed to find nothing. He wiped the sweat from his brow, and sat down on the couch. He leaned forward putting his elbows to his knees, and hands to his head. He had to think.\n\nWhere could it be, maybe he wasn't as dumb as they thought and had locked it away in a safe somewhere. Marcelo could sense it was here though. Think, think, think....maybe. Marcelo got up and grabbed a wedge he had spotted earlier from the kitchen drawer. \n\nHe knew in the field they always kept things in odd places like dug out holes. He had seen some white erosion on the wooden floors in one of the guest bedrooms. It was so crazy of an idea it just might be true. He swiftly made his way to the back of the house. \n\nMarcelo took the wedge and pushed it into the corner of one of the wooden panels that made up the floor. It slid back and he popped it off. He caught a glimpsed of white and continued with his task. He moved faster popping off as many wooden planks as he could. \n\nHe found plastic and green covering underneath. He slowly peeled it away. Sweat was running across the top of his brow at this point as he worked diligently. Finally the floor broke through. \n\nMarcelo had to scoot back quickly as the floor fell in and a small hole was formed. It was deep and so dark. Marcelo quickly took out his phone and turned on the flashlight. \n\n\"Jackpot, sonofabitch!\" Marcelo couldn't believe what he saw. Drugs, money and guns, from the amount he saw it was about to get more real than they could ever imagine. "
    ],
    "authorname": "Dlovely",
    "tags": [
        "romance",
        "drugs",
        "interracial love",
        "money",
        "black woman",
        "hotel sex",
        "white man",
        "soildier",
        "mystery",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/smooth-jazz-ch-07"
}