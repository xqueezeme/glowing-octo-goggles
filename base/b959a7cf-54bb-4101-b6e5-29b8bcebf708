{
    "title": "I Started Out Roasting a Pig",
    "pages": [
        "I knew this guy, and it went pretty much as it's written. \n\n...................................................\n\nI got new neighbors.\n\nThey bought the old Henderson place, on the next road over.\n\nThey were rumored to be Yankees, and no one knew much about them. Apparently they were pretty well off, the Henderson place was a two story farmhouse, barn, outbuildings, and two hundred twelve acres. \n\nIt was a going farm until Mr. Henderson got too old. His daughters had moved away, and there was no one else to run it, so he put it up for sale and moved even farther south.\n\nThis pissed the girls off no end, they were afraid he was going to spend their inheritance before he died. He was of sound mind and body, so they couldn't do a damn thing about it.\n\nI thought it was funny, I never liked the girls. I secretly agreed with my aunt when she sniffed and said they put on too many 'airs' to be proper.\n\nThat's old time southern speech for being snobby.\n\nI met them by accident. Her car, a Cadillac, was sitting on the side of the road with steam coming out from under the hood. I stopped. It was what neighbors did.\n\nApparently she had seen one too many redneck horror movie, because she wouldn't open the door or roll down the window, just looked at me with eyes bordering on panic. It was pouring rain and getting colder, so I got back in my truck and drove away.\n\nWhen I got to the top of Henderson Hill, I called the sheriff's department and told them about her. Everybody knows that you have to get to the top of the hill to get reception. Until then you were in a dead zone. Well, the locals did, anyway.\n\n\"Well, doggone it Will, why didn't you help her?\"\n\nThat was our county mounties all right, protect and serve, unless it was too hot, too cold, raining, or there was a game on. In other situations they were johnny on the spot.\n\n\"I tried . Wendel, she wouldn't open the door. I can't just leave her there, come on out here and do something.\"\n\n\"All right, let me find my slicker, did you notice it's raining?\"\n\n\"Yeah, and it's cold. It's also getting dark, and she's probably scared to death, so get a move on. If you hurry, I got some leftover barbecue from the Democratic rally, you can take it back to the station. Got buns and slaw too, you can have that to go with it.\"\n\n\"Got any baked beans or potato salad?\"\n\n\"Don't push it Wendel. If you hurry, I might be persuaded to give up a couple pieces of fat back cake.\"\n\n\"All right, all right, don't get touchy. I'll be there in about ten minutes. That kind of cake got icing?\"\n\nTwenty minutes later he met me, and we rode back down the hill. She was still there, crying.\n\nWendel identified himself, and she rolled the window down a little bit.\n\n\"Ma'am, do you need help?\"\n\n\"Yes, please! It started blowing smoke out from under the hood, and just quit. I couldn't get anyone on the phone. Think goodness you found me.\"\n\n\"I didn't find you ma'am. Will did. Why don't you pop the latch and let him look under the hood? He used to be a pretty good mechanic.\"\n\nI was still a pretty good mechanic, until everything got computerized. Now, you need a Phd from MIT, or you were SOL. I couldn't afford the new equipment, so I stopped. It was a hobby anyway, not how I made my living.\n\nIt took about two seconds to see the problem. Her bottom radiator hose was split. Damn it, it was always the bottom one.\n\n\"You need a new radiator hose, ma'am. Call AAA when Wendel takes you home, and they'll come and get it. It's easy to fix, they should be done before lunch.\"\n\n\"Not tonight she won't. Billy went out of town, remember? His daughter is getting married Sunday, he won't be back until Tuesday.\"\n\nWendel looked entirely too happy saying that. She was back to panic mode again.\n\n\"I can't just leave it here. My husband would kill me.\"\n\nI looked at Wendel, watching the gears that power his tiny little brain turning. Don't say it, don't say it....damn, he said it.\n\n\"Hey, Will, why don't you go get one of your heavy duty trailers and haul it for her?\" \n\nIt was late, it was cold, it was raining, and I was late to supper. But you don't leave neighbors, especially scared lady neighbors, in a bind.\n\n\"I guess I can, I reckon. I'll haul it back to my lot and keep it behind the fence for safety. That way whoever fixes it won't have to go get it to do it. Is that all right with you?\"\n\n\"Thank you, we'll pay whatever you charge. Will you take me home, officer.\"\n\nShe said officer like it was the next best thing to God, and Wendel couldn't open his door fast enough. Then the radio crackled, wreck on route twelve, he was closest.\n\n\"Damn this rain. Sorry lady, Will gets to take you, I gotta go. Will, don't you eat that barbeque, I'll be by later.\"\n\n\"Sure, I'll put it in the fridge in the shop. You know where the keys are. Lock up behind yourself this time, I don't need another cat having kittens in there again.\"\n\n\"You ain't never gonna let me forget that, are you.?\"\n\n\"Not as long as the smell lasts. Mrs. Hatfield, are you ready?\"\n\nShe had finally told us her name, and I guess if a cop vouched for me I wasn't really a serial raping, homicidal maniac that preyed on older, attractive Yankees. She still sat just as far away from me as she could.\n\nShe was the owner of the Henderson place, along with her husband. When we pulled into the driveway, there were no lights on.\n\n\"Why aren't the lights on?\"\n\n\"Because the power is out, haven't you noticed how dark it's been the last mile?\"\n\n\"What am I going to do?\"\n\n\"Do you have a flashlight, lanterns, that sort of thing?\"\n\n\"Not that I know of.\"\n\n\"Well, Miz Hatfield, if you're gonna take up country living, they wouldn't be bad investments. Mr. Henderson used to have a generator in the shop, is it still there?\"\n\n\"I don't know. We haven't had time to explore yet.\"\n\n\"Well, put your adventure hat on. If it's still there, it's got a tie into the power system.\"\n\nShe was lucky, it was still there and ran, just barely. A big diesel rig, it made a hell of a racket in the confines of the building. There was enough fuel for about four hours.\n\n\"If it don't quit, you should be all right until the power comes back on. It usually doesn't stay off long this time of year. If I were you, I'd get that thing tuned and invest in a drum of diesel, just in case.\"\n\nShe was nodding furiously, taking notes on her tablet.\n\n\"I'm going to get your car now. Here's my card with the numbers on it. You need anything before your husband gets home, call. Your car will be on my lot, the address is on the card. Good night, Miz Hatfield.\"\n\n\"I can't thank you enough.\"\n\n\"Don't worry about it. Good night.\"\n\nAfter making sure she was safely inside, I took off, calling Sherry, knowing I was gonna get an earful.\n\n\"Where have you been? Why haven't you called?\"\n\nNo are you all right, no I missed you.\n\nI appealed to her finer senses.\n\n\"Sorry babe, got a call from the cops. Billy is gone for the weekend, and they wanted me to pick a car up off the side if the road. I'll be home in about an hour and a half.\"\n\n\"I hope you gouge the shit of them, making you work in this weather.\"\n\n\"I'll get my due, don't worry.\"\n\nIt was all about money with her. I didn't understand it, her parents were pretty well off, and I did all right. She never wanted for anything as far as I knew, but the way she acts make you think we were dirt poor. She hadn't been like that until about a year ago. I always wondered what sparked it off.\n\nI got the trailer, got the car, and was home when I said I would be. She had already gone to bed, leaving me a note that dinner was in the microwave. A quick bite, a quick shower, and I was dead to the world until the alarm rang.\n\n................................................\n\nThe next day was sunny and warm, making you forget the cold rain the night before. I didn't have much going on at the shop, so I walked down to Advance and got the hose, rolled the car down off the trailer, and fixed it.\n\nLunch time came and a man in his late forties, suit, tie, polished wingtips, and a harried look on his face walked in.\n\n\"I'm Bennett Hatfield. I came to make arrangements to have my wife's car towed to a garage. Can you tell me who the best mechanic in town is?\"\n\nHe was talking to Charley, my assistant and general gofer. He, Bobby, and Myra were my employees and friends. I ran an equipment rental business, you know, backhoes, dozers, tractors, ditch digging machines, that sort of thing. It was a good business, nobody was going to give twenty nine thousand or more for a backhoe to do a few hours work when they could rent one for a few hundred. The tanked economy actually helped my business. More people were doing it themselves instead of hiring it done.\n\nMy equipment wasn't pretty, but they were all sound mechanically, and dirt don't care if you got new paint. I charged a little less than the chains, and did all right.\n\nCharley pointed to me, and he came right over. He stuck out his hand.\n\n\"Bennett Hatfield.\"\n\nI couldn't help grinning.\n\n\"Will McCoy.\"\n\nMyra was standing behind us, she usually handled the suits, and she thought he was there to rent something from our party supply section. She burst out laughing.\n\nHe frowned.\n\n\"Sorry, Mr. Hatfield, we're not laughing at you, think about it, Hatfield and McCoy?\"\n\nHe stood for a minute, then smiled back.\n\n\"Well, I hope we're not going to feud. I left my shootin' iron back in Philly.\"\n\n\"Good, I melted mine into a plowshare. What can I do for you?\"\n\n\"I came to make arrangements to have my wife's car towed to a garage. I don't know anybody in town yet, could you recommend someone?\"\n\n\"Don't bother. I had a little time on my hands this morning so I fixed it. All it needed was a new hose and a little antifreeze. Bring your wife by anytime before six and she can drive it home.\" \n\nHe seemed surprised.\n\n\"Well, okay. How much do I owe you?\"\n\n\"Forty bucks. The receipt for the hose and antifreeze are in the dash.\"\n\n\"That's not right!\"\n\n\"Yes it is, check the receipt.\"\n\n\"No, what I meant is, how much for your trouble?\"\n\n\"Oh, I couldn't charge you. I don't make my living as a mechanic, and it wouldn't be right. We're neighbors, I live on Howell Road, you live on Henderson Road, our houses practically back up to each other. Down here, you don't charge your neighbors for a kindness, it just isn't done.\"\n\nHe looked confused so I tried to explain.\n\n\"Now, if you wanted to rent a backhoe, I'd charge you. Your wife told me you were a lawyer, so if I went to you for legal advice I'd expect you to charge me. But if I asked you it I could borrow a tool, or if you needed a ride somewhere, if money was offered somebody would get offended. Understand?\"\n\nHe nodded.\n\n\"I think so, it's just going to take a little used to. Well, I can't thank you enough.\"\n\nHe was back in forty five minutes with his wife. She was more attractive than I realized, and younger too, but not enough to be a trophy wife. Maybe forty, she looked early thirties. I guess a life of luxury doesn't wear you down as hard as working for a living.\n\nHer husband just dropped her off, too busy with lawyer stuff, I guess.\n\nShe thanked me repeatedly for helping her, until I finally told her to stop.\n\n\"That's enough, Miz Hatfield, it was nothing really.\"\n\n\"Maybe down here, but where I come from it's pretty outstanding. And since we're neighbors, call me Angie.\"\n\nShe held out her hand.\n\n\"Will, and this is Myra and Charlie.\"\n\nThey were practically breathing down my neck trying to find out about her. She smiled, shook their hands, and instead of leaving she had Myra take her on a tour, stopping to look at various pieces of equipment, asking a million questions.\n\nShe was particularly appreciative of the party supplies and rentals, especially the castle.\n\nThe castle was a circus size tent, complete with turrets and flags. It could be divided into different size rooms as necessary. It was very popular for weddings. At one time it had been an actual circus tent, but the circus folded and I got it for next to nothing at an auction.\n\nWith it and some of the smaller tents, I could convert a field into a fairy tale in twenty four hours.\n\n................................................\n\nSherry was on one of her binges again. She wanted a new car, a Cadillac like the one our new neighbor drove.\n\nHer Chevrolet Impala, that she just had to have two years ago, just wasn't good enough anymore. I tried to remind her if we got it for her she couldn't trade for four years. That was the only way I'd agree to get it.\n\nShe scoffed.\n\n\"That thing is nearly worn out[it had 39,000 on it], I NEED a new car. Why are your fighting me on this?\"\n\n\"Because you don't need a new car, you just want one. We can't keep up with the neighbors, Sherry, he's a lawyer for goodness sakes. Your car will do just fine for right now. If you don't think so, you're welcome to get one on your own, as long as my name isn't anywhere the paperwork.\n\nI had her there. Her credit score was terrible. She had defaulted on a car loan and some credit card debt while we were dating. I helped her get her car back, but wouldn't help with the credit card. She refused to pay it.\n\n\"Something you need to understand before the wedding, I don't believe in credit cards. They're a trap, and wasteful.\"\n\n\"But you have two.\"\n\n\"That's right, and they're both business related. I only use the American Express when I have to, and use the other twice a year just to keep it active. I use them if I find a good deal on a piece of equipment, and that's about it.\"\n\nI had her sign a pre-nup to except my house and business from community property. The house had belonged to my parents, and when they retired they went to see my sister in California, fell in love with it, and moved, leaving me the house. We hadn't even done the transfer of ownership yet, couldn't see the hurry. Sherry thought we had and I never thought to bring it up. The paperwork was all filled out, just in case.\n\nI kind of fell into my business. I was subcontracting work for builders, site prep mostly, and was tired of going forty five miles away to get the equipment I needed.\n\nI had some money saved, my parents loaned me a little more, and I was in business. I plowed almost all the profits for the first three years back into the business, gaining new equipment. I paid my parents back the fourth year. By the time I met and married Sherry I was pretty proud of what I had accomplished in such a short amount of time, and didn't want to lose it.\n\nWe met at a Christmas party given by one of the contractors I did a lot of business with. I usually avoided affairs like that, people trying to impress themselves and each other held no thrill for me. But that night I was bored, so I went.\n\nOf course all the women were dressed to kill. There were some really pretty ones there, and I am a guy, so I danced, flirted, had a good time. Sherry was there with someone else, but I did get a dance with her.\n\nThe spark was there, we both felt it, but she was with someone so I didn't pursue it. As I was leaving, the hostess slipped something in my hand.\n\n\"Call her.\"\n\nShe kissed my cheek, I shook hands all round, and left. I looked at the paper when I got in my truck. It was Sherry.\n\nI put it in my dash, really meaning to call, but Christmas was a busy time for the party supply side of my business, so I kind of let it slide.\n\nA week before Christmas, she came into the store, talked to Myra, and she pointed to me. Myra giggled and wrote her a receipt.\n\nShe came over.\n\n\"I'd like to pick up my rental.\"\n\n\"Sure, what is it?\"\n\nShe handed me the paperwork.\n\n\"Man, good looking, as escort to a Christmas party. Term: five hours. Responsibilities: pleasant conversationalist, reasonable dancer, kissing ability to be determined. Inability to dial a phone, overlooked if willing to be trained. To be delivered at address provided.\"\n\nWhat could I say, she was about five eight, great ass, pretty face, and breasts that seemed to defy gravity.\n\n\"Miss, I'll personally see to your rental. Also we offer a money back guarantee if the services aren't acceptable. Fair enough?\"\n\nShe offered her hand.\n\n\"Deal, but I warn you, I expect to be satisfied, or I want my money back.\"\n\nShe finally broke down laughing, we went for coffee and discussed further terms and conditions.\n\nMyra insisted I get a new suit, and not trusting me, made me take her with me to the mall. Her husband went to, saying entertainment like this was impossible to pass up.\n\n\"Just want to be able to see her make a man miserable that isn't me.\"\n\nFour hours, I mean come on, I would have taken the first one, but it just wouldn't do. Eight suits later she declared it 'the one'. I breathed a sign of relief but her husband just laughed.\n\n\"You don't think you're done, do you?\"\n\nHell no we weren't done. The perfect shirt and tie, even the socks had to stand inspection. It took another forty minutes to pick out the shoes.\n\n\"You're not going to pick out my underwear, are you?\"\n\nMyra didn't blink.\n\n\"Navy blue boxers, silk. You want to feel as good as you look, and I already took care of it. You're welcome.\"\n\n\"Remind me to fire you sometime soon.\"\n\n\"Only if my severance pay includes you modeling the suit, and I expect to see those drawers, too.\"\n\n\"You're rehired. If I beg you on my knees at the food court, will you let us go home?\"\n\n\"Maybe, if you give me your word you'll get your hair cut tomorrow.\"\n\nHer husband just laughed as we got into the car.\n\n................................................\n\nI figured what the heck, I was dressed to the nines, might as well ride in style, so I rented a Cadillac Escalade for the weekend.\n\nI felt pretty snazzy when I arrived to pick her up, but when I saw her I knew I was over matched.\n\nI would have loved to been the artist that painted that dress on her. Shimmering green, slit almost high enough on the side to see the top of her seamed hose, neckline plunging almost to her navel, I had no idea how she kept those puppies restrained[double sided tape, I discovered later], and despite the daring of her attire, she looked elegant. I did get a glimpse of her garters when I helped her into the car.\n\nI'm pretty sure we held a conversation on the way, but to this day I can't remember a word.\n\nWe danced, we mingled. I was introduced to people who I forgot instantly. She was the hit of the party, and was asked to dance constantly. She always looked askance, but it was up to her. She did dance a slow number with a guy who was getting a little grabby, and I was halfway across the floor when the song ended. She grabbed my hand and left Mr. Octopus standing.\n\n\"No more slow dances with anyone but you.\" She hissed in my ear as we went back to the table. It worked for me.\n\nShe snuggled to me as close as she could on the way home, Nibbling my ear. Every time we hit a stoplight I kissed her until cars honked.\n\nWe actually steamed the windows before we got out at her house. After about twenty minutes, she asked me to escort her to the door, offering coffee.\n\nI sat on the sofa while she fixed the pot, then excused herself to get out of her dress.\n\nI had almost dozed off she had been gone so long, and I heard someone clearing their throat.\n\nI literally fell off the couch. \n\nWhen she said get out of her dress, she meant get out of it and not put anything else on. She was standing there in just her hose and garter belt. I thought I would go blind.\n\nShe really did have boobs that defied gravity, with a really great set of nipples, big, puffy, standing straight out.\n\nTight tummy, neatly trimmed bush. He lips were swollen and glistening. I couldn't speak.\n\nShe got nervous when I didn't say anything.\n\n\"Here's the deal. I really like you. Normally, I would have sent you home tonight with blue balls and then try my best to kill the batteries in my vibrator. We would have dated maybe a dozen times, me letting you go farther a bit every date, maybe show you my oral talents around the ninth or tenth date. Then we would have had the big event, candlelight, soft music, maybe whipped cream and melted chocolate.\"",
        "\"But you really turn me on, so let's save ourselves about four months and stress test my mattress. If you bang me and bail, I'll just chalk it up to experience.\"\n\nI did bail, about twelve hours later, to get us some breakfast. Other than that, the Escalade didn't move for two days.\n\nShe was insatiable, in turns demanding and submissive. We did everything I knew to do to a woman, and a lot more I had no idea about but she was glad to teach me. By Sunday, I had learned her triggers, the back of her knees, her nipples, the spot on the back of her neck just below the hairline. She showed me her toy box, and we tried everything in conjunction with everything. She scratched my back so bad I considered a tetanus shot, and I bit her right breast so hard it drew blood. It looked more like a fight than a bout of lovemaking. We both pretty much marked each other as ours, and I never looked back.\n\nWe moved in together in two months, married in seven. We agreed to have a few years together before we started a family, she was twenty five and I was twenty nine. Now it was three years later, and I kept throwing hints about starting the family.\n\nFor some reason, about a year ago she started changing, becoming more demanding, more materialistic. She decided we needed a new house to start a family. Our house had four bedrooms, and I just couldn't see the need for more.\n\nThen she maxxed out the credit card she had managed to get despite her credit history, and didn't speak to me for two days when I cut it in two, after paying it off.\n\nShe had a job, made pretty decent money, but stayed broke. I paid all the bills, it was just the power, our phone plan, the cable, and the other normal household expenses, except groceries. She agreed at the start that would be her responsibility, so I let it be.\n\nIf you opened her closet you would see clothes with the tags on it she probably never would wear, and four or five pair of shoes that never saw the ground.\n\nThe silent treatment over the car episode lasted about five days. She came home on the sixth to find me taking her clothes out of the closet. She looked but wouldn't speak.\n\n\"I'm not gonna live like this. If I'm gonna live alone, I'm gonna live alone. I called your mother, she wasn't happy but agreed you could stay with her for two weeks. We should be able to find you an apartment or house by then. I'll pay the deposit, the first two months of rent, and have the power turned on and pay it for the same amount of time. That should give you time to learn to live on your own again, Better learn to budget, you'll have to pay your own way now.\"\n\nShe surprised me and fainted dead away. I moved her clothes and lay her down, getting a cold cloth and wiping her brow. She awoke with a start.\n\n\"Will, I just had the strangest dream. You were throwing me out, I don't remember why.\"\n\nShe looked at her side of the closet through the open door, noticed the clothes on the bed beside her, the suitcases on the floor, and started crying.\n\nShe started wailing, begging me not to make her leave, saying she would be better, please, please.\n\nI let her go for a little while before telling her to wash her makeup off and meet me in the kitchen.\n\nShe slipped into the kitchen chair, not meeting his eyes.\n\n\"I'm serious, Sherry, I won't live like this anymore. The temper tantrums, the out of control spending, refusing to talk about starting a family, it's like I don't know you anymore. If you want out, say so. If you don't things have to change.\"\n\nShe finally confessed that the idea of being a mother scared the shit out of her, she kept flashing back to her childhood.\n\nShe was the second child out of three, all just a little a year apart. Being the middle child, she got lost in the mix, and when her parents split when she was twelve it affected her deeply.\n\n\"I still see my mom crying. She had three teenagers, was alone, and the stress got to her. She started drinking, and pretty much ignored us. Dad never came around after the first year, he moved halfway across the country. I won't expose a child to that.\"\n\nI held her hand.\n\n\"Honey, I'm sorry about your childhood. But I'm not talking about a houseful, just one. If we decide we want another, we'll wait at least two years. And this is a biggie, but I'll never leave you. I promise.\"\n\nWe walked around each other gently for about three weeks, but we gradually became the normal young couple we were. She stopped spending so much, and even opened a savings account. Three months later she showed me the balance, and I was impressed.\n\nI told how proud I was of her. She laughed.\n\n\"Don't be too proud, it'll be empty in a little while.\"\n\nI thought she was gonna tell me she was gonna buy the new car, but she said no, she had another use for the money, she was going to use it to buy furniture for the nursery, and I was gonna have to paint it, and did I like light blue?\n\nIt took a second for it to sink in.\n\n\"What? What did you just say?\"\n\nShe had that smile women have when they know they've succeeded in turning your world upside down.\n\n\"I said in about seven months we'll have a son. The nursery needs to get finished, so you need to cut back at the store a little more, especially towards the end.\"\n\nI had never cried in front of her. She had told me in my office, having just come from the doctor. She had stopped taking her pills, wanting to surprise me. Boy, did that plan work.\n\nWhen the tears started it scared her.\n\n\"Did I make a mistake? I thought this was what you wanted. If you........\"\n\nThat's all she got out before I smothered her with kisses. Pretty soon her tears mingled with mine.\n\nMyra knew something was up when we came out later.\n\nNoted for being sensitive and discreet, she blurted out.\n\n\"What the hell's going on with you two? You look liked somebody slapped the hell out of you and you both liked it.\"\n\n\"Myra, can you keep a secret?\"\n\nShe nodded yes. The woman was better than the internet when it came to spreading information quickly.\n\n\"Myra, we're going to have a baby! Seven more months, it's going to be a boy. Promise me you won't tell a soul. We want to surprise my mother. Promise me?\"\n\nShe mumbled \"Un huh\" while trying to pull her phone out of her pocket as she walked off.\n\nI watched her, grinning, before I turned back to Sherrie.\n\n\"I hope you already told your mother.\"\n\nShe grinned back.\n\n\"I stopped by before I came here. Everybody in town will know before close of business today. I figured if we told her it'll take the burden off me.\"\n\nTrue to her habit, by the time we went to lunch, people were stopping us on the street to hug Sherr and shake my hand. We almost didn't have time to eat because of the constant congratulations.\n\nWhen we got back there was a huge banner over the counter, in white with blue bows.\n\nCONGRATULATIONS WILL AND SHERRY! IT'S A BOY!\n\nI looked at Myra and she smirked.\n\n\"Like I could keep a secret that big! You assholes knew I would explode if I couldn't tell anyone.\"\n\nI laughed and went back into the office.\n\n.................................................\n\nThe pregnancy was a bad one. Sherrie was put on bed rest after seven months. I looked at her pale drawn face and knew we would never have another child. It would be too dangerous to her.\n\nSherrie wasn't a model patient. Her mom moved in, she was the only one who could stand the be around her, mostly because when it got really bad, she would tell her to shut up and leave her alone for a couple of hours.\n\nThe delivery took seventeen hours, before they finally did a C section. Sherry was past exhaustion. When she could finally talk she told me.\n\n\"Never again.\"\n\nI agreed with her. She was already in the hospital, so she had her tubes tied before she left.\n\nWilliam Bryan Sanford weighed almost nine pounds, which explained a lot of her pain. He had a full head of thick black hair like mine. I was disappointed when the nurse said it would probably come out before his real hair color would appear.\n\nShe was wrong, he never lost his hair and it remained jet black.\n\nIf you've never experienced it, all the words in the universe can't describe the feeling of being a parent. It was breathtakingly beautiful and starkly terrifying at the same time. It's not about you anymore, and never will be again, even after they're grown.\n\nThey become your world, and everything you do becomes sublimated to their welfare. Spontaneous trips and romantic weekends become things of the past. Now, you have to plan everything, load the necessary equipment, even if it's just a trip to the grocery store.\n\nDisappointingly, Sherry didn't take to motherhood as well as I thought. Oh, it was plain she loved him, but just as soon as I got home she would hand him to me, and flop down on the recliner for an hour. She called it baby recuperation time. I didn't mind, I would walk around holding him, telling about my day, and what I wanted out of our lives together. I talked about little league, boy scouts, camping trips, girls, anything I could think a boy would be interested in.\n\nHe would watch my face intently, gurgling and smiling, not understanding a word.\n\nIt irritated Sherry no end that he never seemed to cry with me. I would come home, and he would be crying, especially if he didn't feel good. I would pick him up and start walking him around, and about ninety percent of the time he would calm right down.\n\n................................................\n\nI took two weeks off to be with Sherry and Billy after the birth. When I got back, there was a big sign in front of the building.\n\nSANFORD AND SON EQUIPMENT RENTALS. NO JUNK!\n\nMyra and Charley were standing there grinning. It brought tears to my eyes.\n\nMy screen saver was a slideshow of Billy, Sherry, and us together.\n\n.................................................\n\nMy friendship with the Hatfields began slowly. Angie came in one day and wanted to rent a tractor. I asked her what she needed a tractor for.\n\n\"I want to plant a garden. I've already ordered my seed from Bakers Creek. I need a tractor and equipment to prepare my beds.\"\n\nI admired her determination, but wouldn't rent her a tractor. It surprised her no end.\n\n\"Why not?\"\n\n\"Because you don't know how to operate one. Tractors can be really dangerous if you don't know what you're doing. If I rent you one and you kill yourself, I'd feel really bad. Plus, I'd lose you as a customer and a friend. Don't want that on my conscience.\"\n\n\"Besides, you don't need to rent one, I saw that little Yanmar and all the equipment in your shed. You have everything you need already.\"\n\nMr. Henderson had a big auction when he retired and got rid of all his farming equipment. He bought the Yanmar later, because he liked having a tractor around, and he liked to garden. I bet it didn't have five hundred hours on it.\n\n\"It won't crank. \"\n\nI saw the look of determination on her face. I knew if I didn't help her she would find someone else.\n\n\"The battery is probably dead. Look, tomorrow is Saturday, why don't I come by and look at it?\"\n\n\"Oh, I couldn't take you away from your family.\"\n\n\"You won't. I'll have them with me.\"\n\nSo that Saturday I took Sherry and Billy over, and Angie cooed over the baby for an hour, holding it the whole time. It irritated Sherry that Billy was crying but stopped when Angie held her.\n\nI had brought my batter charger and hooked it up to the tractor. While it was charging Bennett and I looked over possible garden spot.\n\n\"You sure you want her on a tractor?\"\n\nHis reply was honest enough.\n\n\"No, but you have no idea how determined she can be. I'm asking you to keep an eye on her, and give her some guidance.\"\n\nWe talked about it while Angie and Sherry disappeared into the kitchen, coming out with a platter of sandwiches and a big bowl of potato salad. We ate, talking about her garden projects. They cleared the table, refreshed the drinks, and listened to me.\n\n\"Ben and I have talked about this. He's going to have a roll bar and a seat belt installed on the tractor before you do anything serious with it. Come on out to the barn, and we'll do your first lesson.\"\n\nI pulled it out of the barn, and had her sit on it. I showed her the brakes, the throttle, the hydraulics, and the gears.\n\n\"I'm gonna tell you this, and I want you to remember and be careful. The gears in a tractor don't work like the ones in a car. Whatever gear you're in, the tractor will move when you let out the clutch. It won't bog down like a car does. So if you forget and start out in a high gear, you'll probably snatch the front end off the ground. If you're sitting on an incline or bad angle, you could end up flipping it over. That's why I recommend the roll bar. If you're wearing your seat belt, and stay inside the bar, you may have to change pants later, but you shouldn't get hurt.\"\n\nI had her put it in the lowest gear and in low range, and had her drive it around the field. It was moving so slowly I could walk beside her, giving instructions. I had her stop and practice moving the hydraulic three point hitch up and down. I had put a turn plow on.\n\n\"Try to never run your tractor without a piece of equipment. That way, should yo pop the clutch or get on a steep incline, the equipment will hit and stop you from flipping over. It may jar the hell out of you, but it will be worth it, considering the alternative.\"\n\nI had her lower the plow and make a few passes in the spot she had selected. She was grinning ear to ear while Ben snapped photos. She was upset when I pulled the tractor back in the shed and pulled the key.\n\n\"It wouldn't crank anyway, the battery is gone. I've got a friend that will be by Tuesday to install the roll bar and seat belt, I'll get a battery for you and he can install it. He'll give you the key and a spare I'll have made then. Still, you don't need to drive it while you're alone at first, wait until Ben is home. We'll be by next Saturday, and I'll show you how to use and change the equipment.\"\n\nHugs and handshakes, and we were gone.\n\nSherry was animated on the way home. \"She has a beautiful house! It doesn't look like anything like it did when Mr. Henderson had it. She has prints on her walls that are probably worth thousands. She let it slip she had a trust fund when we were talking about art. Did you know they still own their home up north? It was her grandmothers'. Now it's hers.\"\n\n\"Good for them. They're a nice couple, they deserve it.\"\n\nShe was quiet the rest of the way home. I saw her later looking up the prints she saw, and looking at the cost. She was right, some of them were in the thousands.\n\n.................................................\n\nSherry went back to her job. She liked to work, and we weren't really to the point of not needing her income. Plus, I knew the thought of being home all day with no one to interact with would drive her crazy.\n\nWe had a good time teaching Angie to operate the tractor. Ben learned too, but wasn't as enthused as she was. She planted her garden, and bought a small tiller to use when the tractor wasn't necessary. She cried when she picked the first green beans she had raised. She kept expanding the garden. I warned her it would get to be too much for her, but she laughed.\n\n\"Ben leaves early and comes home late. There's only so much housekeeping I can do, and I'm not much for sitting around and watching television. Besides, it gives me something to talk about in my blog.\"\n\nShe had indeed started a blog, \"Gone Country\" to detail her experiences of learning to live in a rural setting. It was actually very popular. Humorous, entertaining, sometimes serious. There were lots of pictures and video. I was in a few because of my help. She described me as spiritual adviser in all things country. It was embarrassing, especially when Myra started reading it.\n\nAngie decided early on she wanted to be organic as possible. I introduced her to a friend that owned stables and boarded horses, and he agreed to let her have some manure for her garden. The catch was she had to clean the stalls to get it. I thought that would be the end of it right there, but soon she had gloves boots, and thick clothes. She called it her shit uniform on her blog. There was even a picture of her on her blog all togged out, a bandana covering her hair. She cleaned three stall, twice a week. Her compost pile was developing into a mountain.\n\nSherry went with me every time I went over for awhile, then slowed until it was almost never.\n\n\"I've heard about all I can stand about manure, crop rotation, and organic pesticides.\"\n\nI took Billy about every other time, putting his carrier in the shade where I could keep an eye on him. Those days Angie spent about as much time holding him as she did gardening. After we became closer friends I asked her if she had ever wanted kids.\n\n\"Yes I did. When it didn't happen we got tested. Ben is sterile, some accident when he was young. We talked about adoption, but it made him uncomfortable. I dropped the subject, he was my husband and soul mate, and I couldn't stand the thought of not being with him. Sometimes, when I'm holding Billy, I think about what I miss. Then he makes a mess in his diaper and I'm glad I can hand him off to his parents. Whew! Here, take him.\"\n\nShe held him out to me like she was holding a bucket of toxic waste.\n\nBen came out later and sat in the shade with us.\n\n\"Will, I want you to do something for me, if you can. My new partners and I are planning a get together. I want to have it here. An old style Southern barbeque. I want you and Sherry to cater it for me. And Will, you'll get paid or we won't discuss it any farther. This isn't a get together of friends, this is a business function. I would have to pay someone anyway, and I know first hand how good yours is. I want them to remember it for a long while.\"\n\nI hadn't cooked professionally in a few years, and I missed it. I said yes.\n\nHe and Angie looked relieved.\n\n\"Thanks, Will. I'm gonna need some party supplies, tents, chairs, tables, etc. Angie will coordinate. Most of clients will be here, I really want to make a good impression.\"\n\nThree weeks isn't a lot of time to set something like that up. Angie took to meeting us at our house every other day to coordinate. My first question was how many to cook for.\n\n\"We have eighty confirmed, but figure on a hundred, we don't want to run out of food.\"\n\n\"How many kids?\"\n\n\"None. Adults only.\"\n\nShe saw my frown.\n\n\"What?\"\n\n\"Nothing.\"\n\nShe snorted.\n\n\"Spit it out, Will. If you have a point, make it.\"\n\n\"All right. I think you're sending the wrong message. This is the South, we're big on family down here. You should invite the wives and children, make a more personal connection. Some won't like it, but most will be impressed. And while you should send invitations, follow it up with a phone call. Find out how many kids are gonna be there and their ages, and make sure you have age appropriate games and entertainment. A 'ya'll be sure to come' will strike a much better chord, than than a note saying your presence is requested.\"\n\nShe sat with her mouth hanging open, and called Ben.\n\n\"Have you sent the invitations yet? No? Good. We need to change them. And I need the name of every wife and a phone number for them. I'll explain later. Bye, hon.\"\n\nShe looked at me suspiciously.\n\n\"Ever think about running for office? You could win on the barbeque vote.\"\n\n\"No\" I said laughing \"I've just done a lot of parties, you learn as you go.\"\n\n...............................................\n\nAngie worked the phones. It went from a hundred to almost three hundred. We hired three neighborhood girls to help serve. I had Sherry, Myra, and Charley on my end.\n\nIt was a picture perfect day. Hot, but not unbearable, a slight breeze. I had set the castle tent up as the dining hall, with fans mounted in the overhead struts to keep it cooler.",
        "Four hundred pounds of pork, cooked to perfection and shredded. Twenty chickens and two beef briskets cooked in a separate cooker for the Jewish partners. Label for the side dishes so they would know what wasn't kosher.\n\nPotato salad, cole slaw, baked beans, squash casserole, grilled vegetables, mostly from Angie's garden. Cakes and pies of different flavors, all homemade, for dessert. As a bonus we had chilled watermelon for the kids.\n\nI was exhausted, but it was worth it.\n\nThree hundred were invited, four hundred twenty showed up, the difference being kids. I had Charley supervise the three teen boys as they parked cars.\n\nThey talked and socialized for an hour before they dined. It was mostly self serve to keep the informal atmosphere. Due to the family theme, there was no alcohol allowed in the dining tent. I had set up a small tent on the side, with two kegs and an open, self service bar, but it wouldn't be opened until an hour after the meal. The senior partners made sure everyone understand overindulgence would be frowned upon.\n\nKids ran around in packs, screaming and laughing as they played on the equipment I had bought, or over the games they played.\n\nAngie and Ben were the best of hosts, going from group to group to make sure everyone was having a pleasant time. True to the custom of the ages, the men tended to cluster together to talk about business, while the women clustered to talk about their men. We had placed casual, padded furniture under every shade tree.\n\nI stopped to admire Sherry, elegant in her conservative sundress, with her hair in a bun. She was surrounded by a group of people complimenting us on the meal. We both gave and received a bunch of business cards.\n\nJust before the event was over we gathered everyone in the cleaned dining tent for a small round of speeches. I had put a small public address system up, with the microphones on.\n\nThe senior partner thanked everyone for coming, wishing them success in their future endeavors. He praised Angie and Ben for hosting, and thanked Sherry and I for putting it together. He surprised everyone by what he said next. He was famous for being long winded.\n\n\"That's it, all I've got to say. It's been so much fun that I'm not going to screw it up now. We have some food left over, and containers available. Don't waste it, take some home. Also, the ice cream is done. Let's all have a bowl!\"\n\nHe stepped down to what he told me was the most applause for a speech he'd ever received.\n\nWe had ice cream makers set up and ready to, with different flavors. Chocolate, banana, pineapple, fresh blueberry, and of course vanilla. The kids got ice cream headaches for eating too fast, as well as some of the adults.\n\nA big hit was Angie's garden. I saw her several times with groups of ladies and one or two men, giving tours and answering questions. She would often pluck a ripe tomato or a handful of beans and give them away.\n\nSome of the watermelons we had chilled for dessert came from her patch. They quickly became the most demanded, because their seeds were a bit larger than average, giving them more range in the seed spitting contest the kids had.\n\nSherry nearly had a stroke when Angie gave her the check. It had gotten so big that they wouldn't let Ben foot the bill, making it a true corporate event. There was another check, a twenty five percent bonus, with a note from the senior partner thanking us once again.\n\nI took the bonus check and gave a share to Charley, Myra, and the kids we'd used. The rest I gave to Sherry, she deserved it.\n\n.................................................\n\nSeems Ben worked for a firm that did mostly business law, and I started getting calls before the next week was out to do parties. The demand was so great, and the profits so good, that we incorporated as a separate business.\n\nSherry quit her job and became manager. She was good and got better. Of course, all the rentals came from us. I had to promote Myra to manager of the rental business, and she hired her husband. He had been laid off and we needed the help, so it worked out great except for one thing.\n\n\"She's the boss at home, and mow she's the boss at work as well. I'll never make another decision the rest of my life. This is you fault , Will.\"\n\n\"Deal with it, Donnie. Just think, how many men literally get to screw their boss at the end of the day?\"\n\nThat cheered him up.\n\nSherry began to dress better, and sometimes had to have evening meetings with clients. We were finally making enough to buy her that Cadillac. I thought I had it made.\n\nThe winter came and went. In the party business, Saturday was a work day, You were either working at an actual event, you were planning an event, or you were meeting with clients. By agreement, Sherry did the meets and most of the planning, I would coordinate equipment, staff, and food preparation. We were actually making more off the parties than we were off the rental business.\n\nIt seemed like we never had time for each other. It reached a breaking point when she started having her meetings on Saturday evenings, sometimes not getting home until after eleven. I asked her not to do it then, but she said she had to meet at the customer's will, and that was best for them. After three weeks in a row, I lost it.\n\nI told her the next late meeting she took, it would all be on her. I wouldn't cook, I wouldn't coordinate, I was out.\n\n\"I thought this was a partnership!\" she screamed.\n\n\"I'm more interested in the man and wife partnership right now. Make a choice, what's more important to you, the business or us.\"\n\nShe ranted some more, but I ignored her and went to get Billy, her screams had woken him up.\n\nI followed through on my threat. The next month she had a meeting that kept her out until eleven thirty. Sunday afternoon, she wanted to plan it with me.\n\n\"No.\"\n\n\"No what, honey?\"\n\n\"I'm not helping plan it, or coordinate it, and I'm damn sure not cooking for it. I told you the next contract that cost me a Saturday night with my wife would be the first one she had to do on her on. I'll think I'll take Billy for a ride.\"\n\nI left her with her mouth hanging open.\n\nIt was a disaster. They didn't like the food, the service, the atmosphere. There was no bonus, and the client told her how disappointed he was that she hadn't lived up to her reputation. She had been treating me like shit until then.\n\nShe came out of the bedroom Sunday with a little white hanky, waving it around.\n\n\"Truce?'\n\nI was feeding Billy his breakfast.\n\n\"No.\"\n\nHer eyes went wide.\n\n\"I won't accept a truce. I want a surrender. Meet my terms and conditions and we go on with our lives. Refuse, or ignore them, and the business is over. No negotiation. None. Take it or leave it.\"\n\nI picked Billy up.\n\n\"I'm going over to see Ben and Angie, he wants my advice on something. We'll be back in an hour or so.\"\n\nBilly loved Angie, and she doted on him. She was our babysitter a lot when we worked a party. He was just learning to talk, and on of his first words was Angie. She cried when he said it.\n\nHe was learning to walk, and just as soon as I would put him down he would go to her as fast as his little unsteady walk would take him. He learned to say Ben, and would try to follow him around when he could.\n\nWhat Ben wanted to ask me about was the little dirt track car they had sitting in one of their sheds. Mr. Henderson didn't drive, but he loved racing and sponsored a car. I knew the engine was blown, but the roll cage and transmission worked.\n\n\"Think it can be fixed?\"\n\n\"No, it needs a new engine and a few odds and ends. It can't be fixed, but it can be rebuilt. Why would you want to.\"\n\nHe looked embarrassed.\n\n\"I'm a big NASCAR fan. I've always wanted to drive a race car, this would be perfect.\"\n\nWell, you never could tell.\n\n\"How's Angie feel about this?\"\n\n\"She's not too keen on it, but is willing to watch one race. I need you to tell her it's safe. It is, isn't it?\"\n\n\"Relatively. I've never known anyone to die in a car like this, but you can get banged up. Start out in the beginners races and learn as you go.\"\n\nWe fixed the car up. Ben got some lessons from older drivers, and soon he was a fixture every Friday night at the local dirt track. Sherry and I had kissed and made up, and one night we went to watch them. It was loud, it was dirty, and I could tell Ben loved it. Charley and a couple of neighborhood kids were his pit crew. The rules were were pretty relaxed, so we were in the pits with them. Ben had been leading, when he started losing speed and position and pulled into the pit.\n\nThere was nothing wrong with the car. He had been fighting the flu all week, and the heat had weakened him. We pulled him out of the car and started pouring fluids in him.\n\nThey were both disappointed. He was leading his class in points, and it looked like he may become points champion. If he didn't finish the race, it would hurt his chances badly.\n\nCharley spoke up.\n\nYou know, in cases of illness, he's allowed a sub.\"\n\nHe was looking right at me.\n\n\"Won't work, Charley. The roll cage is designed for his size, I'd never fit in. It'll take someone his size or smaller. We both turned and look at Angie.\n\n\"Oh no. I don't know anything about racing.\"\n\n\"You don't have to race. All you need to know is how to change gears. Just stay at the back of the pack and out of the way. He'll get credit for finishing the race and save a lot of points.\"\n\nBen was listening to the exchange.\n\n\"Do it honey. I really want that trophy. The cage will protect you, just be careful.\"\n\nShe looked at him for several seconds.\n\n\"Give me the helmet. And if I wreck, not a word.\"\n\nWe strapped her in. \"Stay down at the bottom. Keep a steady speed, and they'll catch on and leave you alone. You sure about this?\"\n\nShe looked in my eyes.\n\n\"NO.\" Then she hit the gas a sprayed gravel all over up.\n\nThe first fifteen laps were pretty uneventful. The other racers knew the score and left her alone. All except one. He was behind Ben in the points race, and if he knocked the car out of the race before the finish, it improve his standing tremendously.\n\nHe bumped her the next lap, scaring the hell out of Angie.\n\nWe heard her scream out into the headset\n\n\"WHAT THE FUCK IS HE DOING?\"\n\nI had the other headset.\n\n\"He's trying to knock you out of the race. The next time he runs up on you, tap the brakes and then floor it. He'll bump you, but he won't have enough speed to make a serious damage, and by speeding up he might get tangled in traffic and lose a couple of positions.\"\n\nShe executed perfectly. He came flying up, she tapped the brakes before he was up to speed, and just as soon as he touched her bumper she floored it. He got tangled up with the pack and she actually gained a lap. He caught her again, but this time luck was with him and he put her in the wall. The caution came out and she pulled into the pit. She came flying out of the cage, looking at the crumpled fender. She threw her helmet against the car.\n\n\"Can you fix it?\"\n\n\"We could pull it out, but there wouldn't be time to hammer it into shape.\"\n\nShe was pumped. Apparently she liked it.\n\n\"Pull the damn thing off and get me back into the race. I'm gonna put that asshole in the wall. GoGoGO!\"\n\nCharley pulled the fender while I got her in the cage and buckled up.\n\n\"Don't get stupid. That leads to getting hurt. Watch him, he'll do the same thing again when he gets a chance.\"\n\nCharley yelled \"CLEAR!\" and she was back in the race.\n\nShe was driving it like it was a stolen Maserati. She was actually passing cars. She saw him edging up and I was yelling into the headset.\n\n\"Cut left.....Now!\"\n\nShe cut to the top of the track, surprising him. He rammed into the next car, sending it sideways and causing a pileup. Angie was past it, and when the caution was lifted she was third. She made it to the front of the pack by the time the checkered flag came down, but because of the lost laps came in seventh out of fifteen. The guy that was trying to ram her couldn't finish, so he went on the record as fifteenth, putting him even farther behind Ben.\n\nHe was charging our pit with his crew, when Angie came out of the car and yanked her helmet off.\n\n\"How's it feel to be out driven by a girl, asshole? Whoo! Whoo! Whoo.\"\n\nShe turned around , bent over and patted her ass.\n\n\"Kiss it jerk off!\"\n\nThen she started giggling and hugging Ben.\n\nThe guy didn't know what to do. Finally he pulled a lung full of air in, but I stepped up.\n\n\"The words out of your mouth better be polite. She beat you at your own game. Use it as a learning experience.\"\n\nHis own crew, ready for a fight moments before, were openly grinning. He spun on his heel and left.\n\nSherry had been snapping pictures like mad.\n\nAfter that Angie was hooked. She used some of her trust money to get a car. The local track had a woman's division, and she raced in it for the rest of the year. She started too late for point recognition, but she won two races.\n\nBen won his trophy. They had already started planning next year. His firm and some of their clients agreed to paint both cars matching colors, with their logos prominently displayed. Both our business logos were on them too.\n\nIt was a little, outlaw dirt track circuit, barely legal and recognized, so they knew it was just for fun, although many successful racers began their careers on tracks like it. But for Angie and Ben, it was a hobby they could share, that drew them even closer together.\n\nWhat were Sherry and I sharing? Nothing except Billy. Our business grew, we now had two crews going. She was dressing nicer, acting haughtier, and barely had time for Billy and I.\n\nShe had joined a professional women's organization, and had become active, getting together for meetings and drinks every two weeks. I didn't mind, and when she won an award I was very proud. I attended the banquet, and when I was introduced as her husband, I saw uneasy eyes on a few of her friends. I wasn't as dense as people thought, and I asked her about it.\n\n\"Some of those women seemed awfully surprised when I was introduced as your husband. You got a city husband you're not telling me about?\"\n\nI was joking, but her face got awful red. She made a nice recovery.\n\n\"No honey, they were just surprised to see I wasn't making you up. You really should attend more mixers with me, let me show you off.\"\n\nA reasonable explanation, but it just didn't feel right.\n\nWe got buried at work so I put it on the backburner. She must have gotten a wake up call, and stayed a little closer to home. It was early fall, and business slowed down. We went back down to one crew. They were well trained, and sometimes we let them handle, one or other of us making a courtesy appearance to assure the customer.\n\nWe had a good client base, and some of them actually became good friends. His boss called me, and wanted to have a combination birthday/victory celebration for Ben. He was a likeable guy and very good at what he did, and they wanted to show their appreciation, and give him a chance to brag about his racing career. They wanted me to cook.\n\n\"How many?\n\n\"About forty, all adults. Just his friends. We don't want you there professionally, per se, you're probably the best friend he has outside of work. He says if it hadn't been for you, he and Angie may never had stayed. We just didn't want to offend you by having someones else cater.\"\n\n\"I'll be glad to do the cooking, but let's not get carried away. How's this? I'll cook the meats, pork and chickens, and make the coleslaw. Have your wives make the desserts and side dishes. I'm sure he'll appreciate it more.\"\n\nI told Sherry about it, and gave her the date.\n\n\"I've got an event the same day, we've already signed the contract. I can't.\"\n\nI was a little pissed.\n\n\"They're our friends. If it wasn't for them asking us to do the party the first time, we wouldn't even have a business. It would be an insult if you didn't come. Make a courtesy appearance at the function, make sure it's going smoothly, turn it over to the crew, and come on back. Think of Angie and Ben.\"\n\nI had pulled the cookers over and set them up. I drove my truck back home for more parking. Since our properties joined, Ben and I had cut a small road through the woods, from my deck to his porch. We rode four wheelers back and forth, it was a lot quicker. If I came into the driveway and saw a pink helmet on the deck railing, I knew Angie was visiting.\n\n.................................................\n\nThe party was in full swing, everybody mingling and having a great time. Sherry had just called and said she was stuck at the job, but would be there within an hour.\n\nWe were running low on ice, something on of the partners were supposed to bring. I had some in our freezer, left over from a party the week before, so I volunteered to drive my four wheeler back and get some. I had to take Ben's because mine was blocked in.\n\nHe forgot to put gas in it, and I ran out about halfway home, and had to walk. I was just about to step out of the woods, when I saw them.\n\nThe blinds to the patio door were pulled and you could see straight in to the living room. There on the couch was a couple really going at it. I thought some of the nearby kids had gotten into the house. There had been a rash of breakins lately. They didn't take much, but did a little partying and vandalism, drinking any booze they could find and messing up the beds. And by messing, I meant fucking on them.\n\nI had my hand out to call 911, when the lovers shifted. She was sliding off her skirt, her top lay beside the couch. It was Sherry! I recognized the man, one of the junior associates from Ben's office. They wondered why he had to miss the party.\n\nMy first instinct was to charge in and beat the shit out of both of them, but having a best friend for a lawyer had taught me some things.\n\nBen had actually been a divorce lawyer for a while before he moved down here.\n\n\"Hated it\" he told me one day, \"You become cynical, watching people tear their worlds apart.\"\n\n\"If they just approached it logically, it would save a ton of grief. Unfortunately, it's hard to act logically, especially if they witness the infidelity. And if someone gets assaulted, it gets worse. It's usually the guy, and it weakens his bargaining position significantly. Sometimes they lose their kids due to what her lawyer will describe in damning terms his inclination towards violence.\"\n\n\"Nobody wins in a divorce, especially one with kids involved. The lawyers make money, but that's about it.\"\n\nStanding in the woods, watching your wife betray you, makes it pretty hard to be reasonable. Shaking with rage, I was headed towards the door when I remembered Ben's words. I also remembered what he said about bargaining positions, so I faded back into the trees.\n\nI walked back down the trail a little ways and called Ben.\n\n\"He answered in a happy, slightly buzzed voice.\"\n\n\"Hey bud, what's taking so long? Do I need to send Angie after you.\"\n\n\"No, put Angie on. I need to ask her something.\"\n\nAngie came on and asked if she needed to come get me. She hardly ever drank, so she was clearheaded.\n\n\"Angie, I need your help, really bad. I just saw Sherry at the house, and she wasn't alone and didn't have a lot of clothes on. I want to confront her but I don't think that's all that good an idea right now. I need the soberest of the bunch to come bear witness. And I'll need a reference for a divorce lawyer. Help me.\"\n\nI could hear the pain in her voice.\n\n\"You poor man! Are you sure? Never mind, if you weren't sure we wouldn't be having this talk. Stay back until I get here.\"\n\nTwenty minutes later Angie, Ben, and two of his partners' wives came walking down the trail.\n\n\"Are you sure, Will?\"\n\nI showed them the pictures I had on my phone.",
        "One of the women spoke up.\n\n\"I'm a divorce lawyer, Will, a damn good one. I have a separate practice, my husband thought it would be a good idea. I'm offering advice on how to proceed, and my services if you need them.\"\n\nI never knew she was a lawyer in her own right, I just knew her socially, as the wife of one of Ben's partners.\n\nAngie was hugging me and rubbing my shoulders to try and calm me, telling me to think of Billy.\n\n\"Thanks Julie. I'll accept both, if you would. What do I need to do?\" \n\n\"The hardest thing you can do under this situation, be calm. Don't engage them in conversation when we confront them, let me do the talking. Control yourself Will, it will give you the advantage\"\n\nShe smiled in the darkness, a wolf's smile.\n\n\"That being said, if he's dumb enough to try to assault you in front of a bunch of lawyers, you are within your legal rights to defend yourself.\"\n\nBen got off the phone.\n\n\"They're almost there. Come on.\"\n\nThey had set it up. The most senior of the partners were pulling into my driveway, supposedly for the ice I had promised. The rest of us were waiting just outside on the deck, going up the side steps and avoiding the light coming from the patio door.\n\nWe heard the knock.\n\n\"Sherry? Are you in there? Will sent us to get some more ice, we ran out.\"\n\nHe continued to talk loudly after she didn't answer the door.\n\n\"Aw, well, he did give us the key. Come on boys, I don't like to be in someones' house when they're not there.\"\n\nSherry and her lover were gathering clothes when they heard the door open. She threw the door open and he ran out on the deck, to hide in the darkness.\n\nThe look in his eyes was priceless when I turned the light light on. We had a switch put outside, for times when we wanted to enjoy the darkness and didn't want to have to go back in. We were usually getting naked just about then.\n\nFour cellphones clicked away as he stood there holding his pants, shorts, and shoes. Sherry had managed to get dressed, and was leading the partners to the kitchen, and saw us standing on the porch. She started screaming, ran out of the house and took off.\n\nHe didn't know what to say, but the senior partner held up his hand.\n\n\"Not a word. Be in my office at nine Monday. Now go!\"\n\nHe put all the power in his voice a senior executive had accumulated, and he left. Angie and Ben had bracketed me, each holding a hand to keep me from getting stupid.\n\nJulie gave me her card, telling me to be at her office at two Monday afternoon. Then she hugged me.\n\nWe all went back to the party. I went so I didn't have to be in the house. Naturally it broke up early, and I spent the night in their guest room.\n\nI didn't sleep much, and Angie got me up by turning Billy loose on me. You don't sleep though the attentions of a two year old. I realized with a shock I hadn't thought much about what to do to protect him, and Angie had gotten up early to get him, telling my mother in law I had too much of a good time, so she volunteered to pick him up for me. She had picked him up before when we were just getting our party business off the ground.\n\nHe sat on Angies' lap and she let him feed her breakfast, smearing syrup all over her face, giggling like mad. It made us smile.\n\nWhen she took him to the bathroom to clean both of them up, Ben said we'd talk when we put him down for his nap.\n\nThat afternoon we held our first war conference.\n\nAngie cut to the heart of it.\n\n\"Divorce?\"\n\n\"Yeah. I can look back now and see it coming. We quit sharing dreams. She always wanted to live in a big city. I've always been a country boy, my roots here run deep.\"\n\n\"What about Billy?\"\n\n\"I want custody without a doubt. I think a child would interfere with the lifestyle she wants.\"\n\nBen had a few observations.\n\n\"I agree Billy would not match the lifestyle, but he gives her power over you. She can dangle a custody battle over you as a weapon to get a bigger financial settlement. Everything else is cut and dried.\"\n\n\"Be careful with Julie, she goes for the throat, and will run over anybody or anything that stops her. We have to keep it from going from negotiation to war.\"\n\n.................................................\n\nI didn't see her for six days. I came home and she was there. It took everything I had not to throw her out the door. She saw my eyes and backed up.\n\n\"Please don't say anything right now. I probably deserve it, but I'm just here to pick up some of my stuff, and to see Billy. Please Will. Just for a little while. Then I'll leave quietly. You can even have my car keys.\"\n\nI fell for it, staying out of the way and letting her play with Billy. She had paid so little attention to him lately he seemed bored.\n\nShe asked for her keys back so she could open the trunk, then asked me if I would help her carry her clothes out. I went in for another load when I heard her car crank. I went through the screen door and was on her before she could put it in gear. I snatched the keys out and threw then in the driveway. She was screaming when I pulled Billy out of the car seat.\n\n\"Fuck you fuck you fuck you! He's mine and you can't keep him.\"\n\nBilly was screaming, not knowing what was going on. She was cussing up a storm when she noticed Angie, filming everything on her Iphone.\n\nShe had rode her four wheeler, an custom she had developed, to see Billy and make sure I was all right. She would visit for thirty or forty minutes before going home just before Ben arrived. \n\n\"You bitch! Might have known you would be here. Giving him a little bit before hubby gets home? How many times has poor old Ben had sloppy seconds? Does he hide in the closet and watch?\"\n\nAngie went white with anger. I don't know what would have happened if I hadn't screamed out.\n\n\"Sherry! Leave, and I mean right now! From now on, if you want to visit Billy, get a court order. Now, get the hell out of my life before I call the cops.\"\n\nI had a lot more I wanted to say, but my first priority was Billy.\n\nSherry left, still screaming. Angie taped every word. \n\nThe next day Julie had the tape, and filed a restraining order until Sherry submitted to a mental evaluation. She recorded her screaming response.\n\nI wondered where she was living. Apparently the guy she was with was now her new flame, and they were together. Another strike against her.\n\nHe had been fired over the affair. They used flowery language, but the message was clear. You were gone, no reference. He had gotten on with another firm, at a reduce salary.\n\nI sent out a letter to all our event customers, telling them I was no longer associated with the business, but would honor all remaining contracts. After that, Sherry was responsible.\n\nI was gonna say screw it, but Julie talked me out of it.\n\n\"You've got a good reputation, and you may want to get back into it later. It also gives Sherry a viable income, something that may come into play later.\"\n\nShe got her own attorney and the dance began.\n\nShe wanted the house. Too bad, it was still in my parents' name. \n\nShe wanted the party equipment. Since it was rented from my supply company, which was covered in the prenup, it was out of her reach.\n\nJulie froze most of our accounts. By forced agreement, she handled one crew, I handled the other. Money could only be drawn for salaries and supplies, the rest had to stay frozen until the divorce. All profits generated after I finished my commitment went into a new account completely controlled by Sherry. It was as fair as I could make it.\n\nSherry fought until Julie and her lawyer convinced her to settle if she expected to have any money at all left.\n\nShe wanted a final meeting to vent, but I refused. Come to find out, her lawyer was the fifth lover she had been with in eighteen months. All slick city types, most without money. I couldn't think of a thing I wanted to say to her that didn't end with the phrase \"fucking bitch\" at the end of it.\n\nI tried to stay civil, for Billy. He had turned three, and really didn't miss her that much.\n\nShe ended up with the party/catering business, after giving me a fourth of the profits. I really didn't have time anymore, and Julie dangled it like a carrot. It left her with a business and some working capital. That was all the money she got out of me.\n\nI got full custody of Billy. She had liberal visitation rights, I actually never refused her. She had to stick to rules, though. No men while she had Billy, and if she ever exposed him to something deemed morally or physically dangerous, she lost her rights.\n\nAfter another year, the visits became less and less. Billy didn't seem to mind.\n\n................................................\n\nAngie and Ben became my anchors. They helped me through my grief and anger. Sherry's mom still babysat Billy, after agreeing that if she helped Sherry violate the custody agreement all contact with him would cease.\n\nAngie became a surrogate mom, with Ben's blessing. He still followed Ben around, and Ben had a photo of him, Angie, and Billy on his desk at work. People assumed he was a stepson, and he let them up to a point. He asked my permission first, saying that it made him look like a family man, and that it helped his relationship with new clients.\n\nI surprised him terribly when I gave him a copy of my will, naming them executors and guardians of Billy should something happen to me.\n\n\"You are a family man, Ben. You always have been. You've got the most impressive woman I've ever seen, and you've got us.\"\n\nI've never seen a male lawyer cry. It was moving.\n\nI dated some, after a while. They were fun, and I got my needs met, but never met anyone who I considered long term. Angie gave me hell, saying Billy needed a mother. I just looked at her.\n\n\"He's got one, and soon as I find her match I'll be married so fast your head would spin.\"\n\nThe closest I came was with of all people, a lawyer. It was the senior partners' daughter. A few years older, she had just gone through a bad divorce, lined up a really good job on the other coast, and was taking three months off to collect herself.\n\nShe found herself needing an escort and her dad called me.\n\n\"Do me a favor Will. She's new to town, and I'd really like her to go with me to the banquet, but she has to have an escort. She's considered pretty, if that helps.\"\n\nI had nothing to do so I agreed. I rented a Cadillac, it was deja vu all over again.\n\nWas she pretty? Damn right she was. Barely five feet tall, blond, fair skinned, with a really good body. She looked like a breathing china doll. I could feel the interest rising.\n\nI think she felt a little spark, and her bubbly personality took over.\n\n\"Ooh. A real live redneck. I've never been this close to one before. Do you bite?\"\n\nI gave her my most serious look. \"Yes I do.\"\n\n\"Goody!\"\n\nBen, Angie, and her parents burst out laughing, and it set the tone for the night.\n\nIt was a charity event, the most prestigious of the year. Black tie, the works. I thought I looked pretty spiffy. The meal was good, and Rhonda chattered nonstop. She told me later it was a nervous trait.\n\nShe talked through the appetizer, she talked through the entree, she talked through dessert.\n\n\"Do you ever stopped talking?\"\n\nShe reddened, before giving me an innocent smile.\n\n\"Only when I have something interesting in my mouth.\"\n\nBen snorted coffee through his nose while Angie giggled.\n\n\"Knock it off you two. This is supposed to be a serious affair.\"\n\nThere was a big band and dancing afterwards. Angie taught me to dance, to keep me from becoming morose.\n\nSophie was a great dance partner, graceful, fluid, a joy to watch. She danced twice with her father and once with Ben, and all the rest were all mine.\n\nBen and I were waiting beside the bandstand for the girls when Sherry walked by.\n\n\"Ben, Will, nice to see you. Here alone, Will? You should really get out more. Allow me to introduce my escort. Robert Morgan. You might know his father, Ben, Wilson Morgan? Founder of the Morgan Bank chain?\"\n\nI looked at her as she tried to impress us. Her face had hardened, and she looked like she had gained ten pounds. One look at her escort and you could see he wasn't with her for intelligent conversation.\n\nAbout that time Angie and Sophie came up.\n\nShe kissed me on the cheek.\n\n\"Miss me lover? Good. I want you frustrated all night, it'll make it more fun when we make the mad passionate love you've promised me. Oh, I'm sorry, who are your friends?\"\n\nI looked past her and saw Angie laughing. I knew instantly she had told Sophie who Sherry was, and they were playing it for full effect.\n\n\"Where are my manners? Sophie, this is Robert Morgan, of the banking Morgans. And this is Sherry Blankenship[I made her drop my name and go back to her maiden one], a local businesswoman, and my ex wife. Sherry, Robert, this is Sophie Williams, of the firm Williams, Roberts, Howe, and Hatfield. You may have heard of them? Well, darling, should we waltz?\"\n\nWe left them both with open mouths. As we waltzed I whispered \"Angie told you who she was, didn't she.\"\n\nSophie pressed a little closer.\n\n\"Yes she did, and a little history. I hope she has a miserable time tonight.\"\n\n\"Don't worry, from the looks both are giving us, I think they are.\"\n\nWe finished and she pulled my head down to her, giving me a two minute kiss, complete with tongue.\n\n\"Did she see that?\"\n\n\"Give me a minute to get get blood back into my brain. Yes she saw it, and thank you.\"\n\n\"You're welcome, and the pleasure was mine.\"\n\nSure enough they came to the table a little later.\n\nRobert asked Sophie for a dance, and Sherry asked me.\n\n\"Just for old times sake.\"\n\nSophie smiled sweetly.\n\n\"I'd love to, but I promised my lover the rest of my dances.\"\n\n\"As did I. Sorry, Sherrie, maybe next time.\"\n\nThey looked stunned, and Angie held a napkin to her mouth to suppress the laughter. They left without another word.\n\nI looked at Sophie.\n\n\"I'm glad you're not staying here permanently.\"\n\nShe looked hurt.\n\n\"Why would you say such a mean thing? I was starting to like you.\"\n\n\"Because there would be fights everywhere we went. Me fighting to keep the men away that would swarm to you, and you fighting to keep me off you.\"\n\nShe smiled. slowly.\n\n\"What makes you think I'd put up a fight?\"\n\n...............................................\n\nShe didn't put up a fight, and we spent every moment we could together. Angie even kept Billy for us to spend a weekend away.\n\nShe was the best lover I had ever had, to date.\n\nThough small, she was amazingly strong. She never told me her age but I was guessing it was close to forty, she had the firmness and suppleness of a twenty year old. Very responsive nipples, and she loved oral.\n\nShe had a three step process to sex. First oral, for both of us. Then regular sex, in all kind of positions. Then anal, doggie style. Then she would gently wash me and try for a bonus round. She told me the old timers used to call it round the world, and I racked up the frequent flyer miles.\n\nShe adored Billy, and showed me pictures of her daughter, a cute little replica of her. She looked to be thirteen.\n\n\"My ex has her now, I gave him more time because we're going to be three thousand miles away soon.\"\n\nIt made me sad to think of Billy that far away.\n\n...............................................\n\nLife goes on. I opened a barbeque restaurant to pass the time. Myra was still running the rental business, and was doing such a good job I left her alone. Restaurants are very time consuming, and the success rate is horrible. But, I already had a good reputation, and I did well. I bought four food trucks and had them outfitted, and sent them out to neighboring towns four days a week. They were very successful.\n\nI still didn't have anyone permanent in my life, and pretty much gave up looking.\n\n...............................................\n\nIt hits you when you least expect it. When you come to like your life, when you're truly happy. I'm not talking about love, but tragedy.\n\nBilly was nine. He got off the bus at Angie's house, and then rode his little four wheeler through the woods when I got home. She would ride with him, wave at me, and go home. She would feed him a snack, check his schoolwork, and he would help her with little chores. It worked well for all of us. On the rare occasions I had a date, he would spend the night there, Angie had decorated a room for him.\n\nHe called me at three, right after he had gotten off the bus. He was crying.\n\n\"Come quick dad. Aunt Angie is on the floor crying and I can't get her up.\"\n\nI flew down the road. It was just as he said, she was on the floor, sobbing softly. She wouldn't respond or speak to me. I was getting ready to hit 911 when Ben's boss called.\n\n\"Will! I need you to go see about Angie, make sure she's all right.\"\n\n\"I'm with her now and she's not all right. I can't get her to talk. Ben hasn't had an accident, has he.\n\nI can hear the emotion in his voice.\n\n\"Ben's dead, Will. He had a heart attack, they said death was almost immediate. We found him on the floor of his office when he missed a lunch meeting. He'd been gone an hour by then.\"\n\nI almost dropped the phone.\n\nBen gone? He had become my best friend, but he was Angie's life. I gathered her into my arms. Her face cleared for a second and she clung to me like a drowning woman.\n\n\"Ben....Ben...\"\n\nI held her on the couch, rocking her like a child.\n\nTears flowed,and they weren't all hers.\n\nShe was a zombie. We finally made funeral plans after his boss brought us his will. He had just updated it. He was to be cremated, and his ashes scattered around the farm.\n\n\"It's the only place I ever felt was home\" he stated in the will.\n\nThe turnout for visitation and the service was amazing. Most of his clients had turned into friends, his racetrack buddies showed up in force, and every member and employee if his firm was there. Sherry came, and hugged Angie.\n\nShe sat through the visitation with Billy on her lap, and Sherry's mother beside her. They had bonded over Billy, and were close. Her eyes followed me around the room, and she got agitated if I was out of sight.\n\nBen had been fifty two, older than Angie, and in good health. The doctors said it was a hidden condition, and they couldn't be sure what triggered it.\n\nThe funeral was over, the friends and family gone back to their own lives, and it was time for the grieving to begin.\n\nBilly, Sara[Sherry's mom]and I lived with her for about two weeks. She only started coming back to life at the end of the second week.\n\nWe had a minor setback when the will was read, mostly because it drove home the finality of it.\n\nWhen he updated his will he put a few letters in, his way of saying goodbye to the ones he loved. Angie got one. To this day I've never asked and she's never volunteered what was in it.\n\nHe left one for Billy, to be opened on his eighteenth birthday.\n\nHe left one for me, too.\n\n\"Dear Will,\n\nIf you're reading this, I'm gone. I want to thank you for your friendship. You took an uptight Yankee lawyer and made him into a better man, one who could relax more, and appreciate what he had. I was honored to be your friend. I left something for Billy. It's a college fund, enough for the full ride. I know you could afford it, but it gave me a great deal of pleasure to do it for him and you. He's a great kid. I'm sure if follows your guidance,he'll be a better man. I hope he remembers me with fondness.\n\nNow for the serious part. Take care of her, Will. She'll need you for awhile. I know you loved her, and true to your honor and our friendship you never did anything to damage it. Angie needs someone to love her right now, to help her through the dark times ahead. I'm sorry I won't be around, I would have loved to have seen Billy as a man. You need to find someone yourself, before you give up.",
        "Thanks for being the man you are, and the friend I needed\n\nBen\"\n\nOf course the bulk of his estate, the farm, the investments, went to Angie.\n\nHe left the dirt track he loved so much money to install new, safer bleachers and an announcer booth, along with a better public address system. They renamed the track in his honor.\n\nAngie struggled for a year to find normalcy, but finally gave up.\n\n\"I'm moving back to Philly for awhile. I can't be here. Everywhere I look I see his ghost.\"\n\nEven though he was ten, Billy cried for two days.\n\nI shed my tears in private. She had been my anchor for eight years. I never felt more lost and alone.\n\nShe gave us keys, and asked us to keep an eye on the farm. I would go every two or three weeks, crank her little tractor and drive it a little to keep in good mechanical shape, and walk the house to check on fixtures, and plumbing. She left the power on and installed a state of the art security system.\n\n...............................................\n\nI went on with my life, concentrating on Billy. He was at the age where he wanted to hang with friends, and I knew he would soon be leaving me behind. Our house became boy central. There were always at least three of his best buds around the house. I made sure I knew them and their parents well, and had them over several times, and talked to them when they picked their children up. Several of the mothers were divorced, and I dated one or two, but nothing serious.\n\nThey wanted more, especially one.\n\nI was still in good shape, owned everything free and clear, and had two successful businesses going. \n\nI had franchised the restaurant and now had four scattered across this end of the state. Every one had a minimum of three trucks to service the smaller towns. I was making a lot of money.\n\nI found another small town that had a need for equipment, and opened another store. Myra's husband became the manager, and her husband finally got to stop screwing his boss, unless they both wanted to.\n\nSherry lost the business, she didn't get the sweetheart equipment rental deal she had before. Her master chef quit to go into business for himself, and she lost business until she had to fold.\n\nShe became an office manager for a large insurance company and married a lawyer. It lasted eighteen months and he caught her cheating She still has the job, and is now engaged. I hope it lasts. She still sees Billy, mostly on holidays and birthdays.\n\n................................................\n\nI was tired. I had been working out of town, getting a new restaurant up and running, my sixth.\n\nSara stayed with Billy while I traveled, and they both stood there grinning.\n\n\"What?\"\n\nI looked down to see if my fly was open.\n\n\"We have a visitor. Go on in.\"\n\nIt was Angie. She flew into my arms, hugging and crying. She had called us or we called her at least once a month. I could hear the sadness in her voice. I always ended the conversation by telling her to come home, we missed her. She kept saying she'd think about it.\n\nI asked her how long she was going to stay.\n\n\"Thirty or forty more years, I hope. I'm home Will, and I'm not leaving. I'm tired of having to walk to a park to see grass. And I'm tired of living beside people I really don't know, who have no interest in being neighbors. I want to see the stars instead of smog when I look up at night.\"\n\nShe held my hand.\n\n\"And I want to see you every day. And Billy, I can't believe how big he is. I'll bet he's taller than you when he stops growing. I wanna see Myra,the guys at the dirt track, all my real friends.\"\n\nShe was crying on my shoulder by then. I just held her and felt happy for the first time in almost two years.\n\nWe got her house back in shape. She looked older and out of shape, but as the weeks went by she slimmed down, riding her beloved tractor and tending her garden. Her youthful appearance reemerged.\n\nSara moved into a retirement community, taking a one bedroom apartment. It was in driving distance. She was surprised one day when they moved her out of her apartment and into a larger two bedroom unit. She was even more surprised when I had all her bill sent to me. She protested but I stopped her. I also made regular deposits into her checking account. \n\n\"There were times Billy and I needed you pretty bad and you stepped up. This is payback. You have to have a bigger place so Billy can spend weekends with you, and a happy grandmother is what he needs, End of discussion.\"\n\nWe ate together every night that he didn't spend with his buddies, either at my house or hers.\n\nThree months went by, and we started dating. Movies, concerts, even a little dancing. She visited Ben's old firm and left in tears. They made sure to invite us to all their functions.\n\nShe denied they were dates, saying that we were just old friends.\n\nIt all came into focus as we sat on the front porch swing and watched Billy and his friends tear up the field on there four wheelers.\n\nIt was a little cool and we had a light blanket over us.\n\nI stopped rocking and looked her in eye.\n\n\"Marry me.\"\n\n\"What?\"\n\n\"Marry me. I've loved you for years. You love me but you won't admit it. Let's quit playing musical houses and settle down.\"\n\nTears were leaking down her cheeks.\n\n\"But our ages...\"\n\n\"Listen, I know you're fifty. You know I'm forty three. Listen to me. I don't care, I don't care, I don't care. I love you, and I will to my dying day.\"\n\nShe was rocking, snuffling.\n\n\"This is an ultimatum. Marry me, or I swear on Ben's memory I'll never set foot on this property again. Yes or no. Right now.\"\n\nShe didn't speak. I was crying now, thinking about what I'd lost. I was halfway across the porch when she tackled me.\n\nWe rolled down the steps and Billy rushed over.\n\nHe helped the crying Angie up.\n\n\"Are you all right?\"\n\n\"Yes honey I am. I just got some good news. In a few days or weeks, I'm going to officially be your mother. I hope it makes you happy.\"\n\nI learned that day what an extraordinary child I raised.\n\n\"You've pretty much always been my mom. Now I can say it out loud. I love you, mom.\"\n\n.................................................\n\nThe wedding and the party afterwards was talked about for years.\n\nMyra pulled out all the stops. We married in the spring, outdoors, in a meadow on the farm.\n\nThe castle tent was was our reception room. Most of Ben's old friends from his firm were there. Sophie was visiting her parents and came along.\n\nShe kissed Angie and told her how lucky she was. I could tell from her eyes I was going to have some explaining to do.\n\nThe guys from the track restored her car and gave it to her as a wedding present\n\nThe years flowed by in happiness and harmony. Billy graduated college, married, and he and his wife took over the businesses. We gave them my old house as a wedding present, after having it completely redone. They gave us three grandkids. He named his son Bennett.\n\nI saw her get melancholy sometimes, and knew she was thinking of him. On what would have been their fiftieth anniversary, I gave her an oil portrait of him I had a well known artist do. She went to bed and cried for two hours.\n\nWe hung the portrait over the fireplace. He looks solemn, and I know my eyes aren't as good as they used to be, but at night, when the fire is lit, and Angie is on the floor playing with our smallest granddaughter, I swear he's smiling.\n\n...............................................\n\nAs always, thanks for reading.  "
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/i-started-out-roasting-a-pig"
}