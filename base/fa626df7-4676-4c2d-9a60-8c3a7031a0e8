{
    "title": "The Jenna Arrangement Pt. 14",
    "pages": [
        "ALL CHARACTERS ARE AT LEAST 18 YEARS OF AGE OR OLDER.\n\n-----------------------------------------------\n\nMorning found me spooning with Jenna, still sleeping peacefully by my side. It was the first time in our admittedly few overnight encounters that I'd woken up before her.\n\nI debated on waking her. Despite making love twice last night, just laying beside her still nude form was enough to get my blood flowing. I rubbed her arm gently. She stirred a bit, mumbled something unintelligible, then fell quiet.\n\nI decided to let her sleep. My bladder wouldn't allow me the same luxury, and I reluctantly got up to give in to it's urgent demand. I decided since I was already up to brush, shave and shower. Though it was with some reluctance that I had to wash the scent of Jenna off of me.\n\nAfterwards, I poked my head back into the bedroom to find that Jenna hadn't stirred at all. In fact, she was now lightly snoring. Not the loud, annoying type of snore that would keep you awake all night, but more like a purring kitten. My heart almost melted. I crept quietly into the room, got dressed, then slipped out to go fix our breakfast.\n\nI knew Jenna liked French toast, and I had enough ingredients, so I got to work.\n\nA few minutes later, I heard the bedroom door open, padded footsteps, and then the closing of the bathroom door.\n\nSeveral more minutes went by before I heard the toilet flush and the bathroom door again open, followed almost immediately by the bedroom door being slammed.\n\nStill more time passed before the door opened yet again and Jenna finally made her appearance, clad in baggy sweatpants and a tee shirt.\n\nShe'd always been so perky and upbeat on the few mornings we'd spent together before that I immediately noticed the change in her demeanor. She seemed grumpy.\n\n\"Good morning,\" I said, cautiously. \"Coffee's brewing, breakfast will be done in a few. Your favorite; French toast.\"\n\n\"Not really my favorite,\" grumbled Jenna. She brushed past me and opened my fridge. \"Got any orange juice?\"\n\n\"No, sorry, I'm out.\"\n\n\"Dammit,\" she barked. She closed the door angrily.\n\nJenna turned to look at me and saw my surprise and concern. Her face softened. \"I'm sorry, I'm being a bitch, aren't I?\"\n\n\"I've...seen you happier. What's wrong?\"\n\nJenna sighed. \"Woke up with my period. I knew it was close, but didn't expect it today. Normally it's not this bad, but I just feel like crap. I shouldn't treat you like it, though. I'm sorry.\"\n\nI sighed with relief. Despite how much we'd bonded, how close we'd become, the small part of me that would always be insecure had feared she'd woken up with regrets about finally having sex with me last night.\n\n\"Hey, it's okay, I'm sorry you're not feeling well. Why don't you go take a nice hot shower? Maybe it'll help you feel better. I can keep breakfast warm for you.\"\n\nJenna smiled gratefully. \"Good idea, thank you.\" She slipped into my arms and embraced me. Our lips met for a few moments before Jenna broke the kiss, covering her mouth. \"Morning breath,\" she mumbled, embarrassed. Shoulders slumped, she shuffled off towards the bathroom.\n\nShe seemed in better spirits when she finally returned about forty minutes later, hair dried and no makeup. She wore the same sweatpants as earlier, but the tee shirt had been replaced with a more form fitting tank top.\n\n\"There's my girl,\" I said, \"feeling any better?\"\n\nJenna's smile looked somewhat pained. \"A bit, yes. I'm going to apologize in advance; my mood is gonna be all over the place today, and not just because of my period.\"\n\n\"Anything you wanna talk about?\" I asked as I began heating up our plates.\n\nJenna noticed both plates and appeared startled. \"You didn't eat yet?\"\n\nI shrugged. \"I wanted to wait for you.\"\n\n\"You're too sweet. You didn't have to wait.\"\n\nI shrugged again and hefted my mug. \"I did have my coffee. It waits for no one.\"\n\nThat got a laugh out of her. The mood lightened somewhat, we both sat down to enjoy our late breakfast.\n\nBetween bites, Jenna told me what was on her mind. \"We haven't really talked about this, but I suppose it's time we did,\" she began. \"I have to go home next week. I'm not looking forward to it. My mom and I aren't getting along at all, and I don't like her new boyfriend.\"\n\n\"Plus,\" she said, her lip trembling, \"I'm really gonna miss you.\" Her green eyes misted over with sadness.\n\n\"Hey, it'll be okay,\" I said, trying to comfort her. \"We'll figure something out. Maybe I can take a few Fridays off, come visit, make an extended weekend of it.\"\n\nJenna's face twisted. \"You couldn't stay at my moms. She'd never allow it. She wouldn't approve of any guy coming to visit, but you...\" Her voice trailed off bitterly.\n\nI sighed. \"I get it. The age difference. Well maybe we could get a hotel room or...\"\n\n\"You don't get it,\" Jenna snapped. \"My mom wouldn't tolerate you at all. If you showed up, even to take me away for a weekend, she'd raise bloody hell.\" Her anger was palpable, although I wasn't sure if it was directed at me, or her mother.\n\nSilence filled the room as I contemplated our options. \"Well,\" I finally offered, \"we can still call each other, video calls, Snapchat, you know, stay in touch that way.\"\n\nJenna growled in frustration. \"For almost three months? The whole summer, alone with that witch, without being able to kiss you, or hold you, or...?\" Again she began to cry.\n\nI went over and pulled her up into my arms, hugging her tightly. She burst into fresh tears on my shoulder, openly weeping. \"I should be h,h,happy to go home, to be with my m,m,mother, instead I'm d,d,dreading it, and I don't wanna leave you.\"\n\nI held her quietly for several moments, trying to come up with a solution. Finally, I offered the only one that made sense.\n\n\"You could stay with me.\"\n\nJenna looked up at me, sniffing. \"R...really?\" Her eyes looked hopeful.\n\n\"Of course,\" I said. \"I know, my place is small, but it would only be for a few months, right? Just until you went back to school. We could make it work.\"\n\n\"No, no,\" Jenna objected. \"I couldn't put you out like that. It's too much to ask. I'd just be in your way.\"\n\n\"It wouldn't be a bother at all,\" I said. \"You'll have the place to yourself during the day. It would be nice to come home to someone after work for a change. And it's not like we'd need separate sleeping arrangements now, right?\"\n\nJenna laughed mildly. \"No, I suppose not. But...\" Her voice faded, looking deep in thought.\n\n\"What's on your mind?\" I asked.\n\nJenna looked unhappy again. \"I...appreciate your offer. I truly do. But I can't. It's...too soon. And I have to at least try and make things work with my mother. We have our problems, but I can't run from them. She's still my mom. My dad would have wanted me to at least make an effort.\"\n\nI felt disappointed, but I understood. \"Well, If things change, if it gets too bad, my offer still stands. You'd be more than welcome here.\"\n\nJenna nodded. \"Thank you. And thank you for understanding.\"\n\nBreakfast finished, we moved into the living room. I put my arm around her as we sat on the couch, Jenna resting her head on my shoulder.\n\nThen she spoke up again. \"Are you sure you won't come to the party Friday night? I'm not going to be able to see you much this week between classes and my last shifts at the diner. I'd really like to be able to spend more time with you before I have to leave on Sunday.\"\n\nWhen I hesitated to answer, she continued quickly, \"Or, I could just bail on the party, come stay here instead.\"\n\n\"No,\" I said firmly. \"Your friends want to celebrate your birthday with you, spend time with you, you can't just bail on them. I don't want to interfere with your friends plans, or be in the way, making things awkward for you or for them, ya know? Besides Trish, the rest don't really know me, and I'm sure they don't want some strange old guy hanging around. They'd probably think it was...creepy.\"\n\nJenna looked annoyed. \"I don't give a fuck what they'd think.\"\n\n\"Maybe not,\" I said, \"but I do. I wasn't invited. Are any of them bringing their boyfriends?\"\n\nJenna lowered her head. \"No. But...\"\n\n\"No 'buts.' This is supposed to be a Girls Night for them, and for you. I'm not showing up somewhere I'm not invited and making things weird.\"\n\nJenna looked on the verge of tears again. She crossed her arms stubbornly. \"It wouldn't be that weird.\" But her face said she knew I was right.\n\nI rubbed her shoulder gently. \"Look, let's put a pin in this for now. Let me think things over. Maybe you can talk to your friends, feel them out, see what they'd think about me coming. We can go from there, okay?\"\n\nJenna relaxed under my arm. \"Okay.\"\n\nWe spent the rest of the day cuddled up on the couch, watching TV, listening to music, and talking. Later, I cooked dinner while Jenna took a catnap on the couch.\n\nWhen we finished eating, Jenna decided it was time to go. \"I should be getting home,\" she sighed, sounding depressed. \"I wish I could stay, but tomorrow is gonna be a long day. I'm tempted to call out sick tomorrow night, but I could use the tips.\"\n\nReluctantly, she gathered up her things and I took her home. We left each other with tight hugs, warm kisses, and promises that we'd find the time to spend together somehow before she had to go home.\n\n***\n\nMonday wound up being a pretty long day for me as well, and I'd just gotten out of the drive-thru with some terribly unhealthy food I'd promised myself I'd try and cut back on when my phone rang.\n\nI didn't recognize the number and almost ignored it, but some inkling in the back of my head made me answer.\n\n\"Hello?\" I said, finger poised to hit the disconnect button the moment the telemarketer started their pitch.\n\n\"Tommy? It's Trish. Got a minute?\"\n\n\"Trish? What's going on? Is Jenna okay?\"\n\nTrish spoke calmly. \"She's fine, sorry to startle you. I stole your number off her phone when she wasn't looking. We have something we need to discuss with you.\"\n\n\"We?\"\n\n\"Michelle is here with me,\" explained Trish. \"Hey, Tommy,\" came Michelle's voice in the background.\n\nI was both relieved and curious. \"I'm on my way home, but I can talk. What's up?\"\n\nTrish hesitated a moment before replying, \"It would be an easier conversation in person. Do you have time to come by tonight? I'm at Jenna and Michelle's place. I was hoping we could talk while Jenna is at work. It's about a surprise for her birthday. \"\n\nNow I was truly intrigued. Shrugging off my weariness, I decided I could make the time, especially if it was for Jenna. \"I can be over in a few minutes, actually. I'm not far.\"\n\n\"Great!\" said Trish. \"See you soon.\"\n\nI arrived about ten minutes later, Trish and Michelle both greeting me at the door. After an offer of water and the exchange of a few pleasantries, the girls got right down to it.\n\n\"So Jenna is pretty upset that you don't want to come to the party Friday night,\" began Trish. Michelle, sitting beside Trish on the couch, nodded in agreement.\n\n\"Jenna explained your feelings about it to me today during lunch,\" continued Trish. \"That's when I decided to talk to Michelle, and we came up with... an idea.\"\n\nMichelle took over from there. \"I get your feelings about it being awkward, although you'd really be surprised how many girls our age are seeing older men. You're right, we did want it to be just the girls at the club, but the sleepover we're having here afterwards is also for Jenna's birthday, and we wanted to do something special for her.\"\n\nI smiled, nodding. \"You're good friends, that's really nice of you. I'm guessing this 'something special' somehow involves me?\"\n\nThe ladies looked at each other, both trying, but failing to suppress their grins.\n\n\"Good guess,\" said Trish. \"We were thinking we could make it a CFNM party, with you being the NM, of course.\"\n\nTrish saw my shocked reaction and continued quickly, \"Now hear me out before you say no, okay? Just listen. Originally, we'd considered hiring a male stripper, but it's expensive, and Jenna didn't seem all that enthusiastic about it anyway.\n\n\"But I also happen to know her little kinks, and I thought it would be a great surprise for you to not only be here when we get back from the club, but be naked, and spend the evening with us as our nude butler; making us drinks, serving us snacks and stuff.\"\n\nTrish paused here, allowing me to absorb this shocking proposal. \"So...what do you think?\" she asked hopefully.\n\n\"Wow,\" I said. \"There's...a lot to unpack here.\" I turned to Michelle. \"You're on board with this?\"\n\n\"Why not?\" Michelle answered. \"Saves us money on a stripper, and it would really make Jenna happy. Plus, it just sounds like fun!\"\n\n\"Look,\" Trish spoke up again, \"you know Jenna talks to me. And you know she tells me a lot about your...relationship...with her, right?\"\n\nI knew Trish was fully aware of how Jenna and I truly met, and the things we'd done together leading up to our becoming an actual couple. And I appreciated her doing her best to be subtle about it in front of Michelle.\n\n\"Yes,\" I answered. \"And I've never had a problem with her sharing things with her friends.\"\n\nNow Michelle spoke again. \"I don't talk to Jenna as much as she does,\" indicating Trish, \"but we both know enough to know that Jenna would really enjoy this kind of thing, especially if you were involved.\"\n\nI was beginning to wonder now just how much Michelle knew, although I suppose that night she walked in on me masturbating while Jenna and Trish were watching certainly gave her some hints.\n\n\"What about the other guests?\" I asked. \"I was assuming some other ladies are coming? I don't want another...rude surprise for anyone.\"\n\n\"I'll talk to them this week,\" said Michelle. \"They were already on board with the stripper idea. I know them both well enough to think they'll be cool with it.\"\n\nI was quiet, my mind spinning, chasing a million thoughts at once, not catching a single one.\n\n\"Look,\" said Trish, \"I want to be very clear on something. We're not looking to fuck you, or have some wild orgy. We're gonna pop some popcorn, have some drinks, maybe watch a movie, or paint each other's nails or do makeovers, all that clich\u00e9, girly shit. We just want you to be there as our male entertainment.\"\n\n\"I'm no Chippendale,\" I protested.\n\nThey both laughed. \"No, not like that,\" said Michelle. \"Just, like we said, be there, be naked. Serve us our snacks, refill our drinks, be some eye candy, that kinda thing.\"\n\n\"I don't know that I'm much 'eye candy' either.\"\n\nThey glanced at each other, smiling, then at me. \"We've seen you naked already,\" said Michelle, still grinning, \"and we both agree you're not hard on the eyes.\"\n\nI flushed with a mix of embarrassment and pride. \"Well, speaking of hard, what if, you know...\"\n\nTrish snickered. \"In a room full of young women wearing sexy underwear? We'd be disappointed if you didn't!\"\n\nMichelle again laughed and nodded her agreement. \"We were actually kinda counting on it.\"\n\n\"What about your boyfriend, Dave?\" I asked. \"Would he be upset if he found out?\"\n\nMichelle rolled her eyes. \"Dave and I are very...casual. He's less a 'boyfriend' and more of a 'Boy Toy,' if you get me. Besides, he's gonna be off with his friends getting shitfaced somewhere.\"\n\nThe more I thought about it, the more I wanted to do it. But there was one last problem.\n\n\"I'll do it. But on one condition. Jenna has to approve. I can't have her walking in on me naked in front of her friends if I'm not one hundred percent sure she's going to be okay with it.\"\n\nTrish frowned. \"I get that, but we were hoping to keep it a surprise. I'm pretty sure she'd be fine.\"\n\n\"Pretty sure isn't good enough,\" I said firmly. \"I'd have to discuss it with her first.\"\n\nBoth girls looked disappointed. Then Michelle perked up. \"I have an idea. You come here while we're at the club. The surprise will be that you're here when she gets back. Fully clothed, of course. From there, we can pitch her the idea, and if she goes for it, great. If not, no harm done. You can still hang out for a while if you wanted to. I know she really just wants to spend time with you before she goes home.\"\n\n\"That's a brilliant idea,\" I said. \"Worst case scenario, she's not happy with the idea of me getting naked, but glad to see me. I'll spend a little time here, then make a graceful exit and leave you ladies to your party.\"\n\nTrish and Michelle seemed very satisfied with this solution. \"This is gonna be so much fun,\" said Trish, \"I'm sure it will work out.\"\n\n\"I hope so,\" I said, \"for all our sakes.\"\n\nMichelle spoke up again. \"So, if this works out the way we planned, you'd be okay with being our butler for the night? It wouldn't be all that complicated. We're planning some light snacks and maybe a few simple cocktails, but you'll probably just be pouring us wine all night. Think you could handle that?\"\n\n\"Sure,\" I said, \"I know how to mix a few drinks. And I worked as a waiter for a bit when I was a teen, so serving bowls of popcorn and chips shouldn't be too tough.\"\n\nI snapped my fingers as an idea popped into my head. \"I have an old tuxedo, bought it years ago for a charity thing. I could go fully formal. If Jenna agrees to things, I would strip it off, but if not, I could still play the part as butler for the party.\"\n\nTrish and Michelle smiled excitedly. \"Great idea!\" they said almost in unison.\n\nI found myself excited as well. Even if things didn't go exactly as planned and Jenna rejected the idea of me being nude in front of all her friends, I could still be a part of making her early birthday celebration special.\n\n\"So it's settled then,\" said Michelle. She reached into her purse and came out with a key. \"Take this,\" she said, handing it to me. \"We'll be leaving here for the club around seven o'clock. You can let yourself in any time after that. All the food and drinks will already be here, so you can maybe just set up a few things for when we get back. I'll text you when we're on our way home from the club. We shouldn't be that late. I'm the only one old enough to actually drink there but I hate drinking alone, so at some point we're gonna want to get out of there and get the party started here.\"\n\n\"Just make sure whoever is coming back with you is aware of your plans,\" I stressed. \"I don't want any of them feeling uncomfortable about it or anything.\"\n\nMichelle laughed. \"I appreciate your concern, but trust me, the friends I'm inviting back aren't afraid of seeing a penis. So relax. Everyone involved will be consenting.\"\n\nWith that, I decided it was time to head home. We all swapped phone numbers to stay in touch, then Michelle and Trish walked me to the door. \"Thanks for agreeing to do this, Big Guy,\" said Trish, giving me a warm hug.\n\nMichelle hugged me as well. \"Yes, thank you. I'm looking forward to...seeing you again...Friday night,\" she smiled, dropping me a little wink.\n\nI walked back to my car more than slightly dazed as the reality of what I'd just agreed to do, or at least potentially do, hit me.\n\nI was excited by the possibilities, but also hoping I wasn't getting myself in too far over my head. I repeated the phrase that had become my mantra since I'd met Jenna:\n\n\"Don't overthink this.\"\n\n***\n\nI spent the rest of the week preparing for the party while trying to avoid telling Jenna anything. She'd called me Tuesday evening to tell me the \"very disappointing\" news that Michelle had nixed the idea of any boyfriends, including me, coming to the club with them or back to the dorm.\n\nI hated having to lie to her, and was hoping it wouldn't backfire on me. \"Don't worry, darlin', we'll make plans to spend all day Saturday together. We can do anything you wanna do.\"\n\n\"Anything?\" Jenna responded, a hint of her usual sly self breaking through what had been a somber demeanor.\n\n\"Anything you're up for, I promise,\" I replied, with as much innuendo as possible.",
        "Jenna giggled. \"Be careful what you promise, cowboy. My monthly visitor should be checked out by then, and I'm gonna want to cram the next three months of not being with you into one day.\"\n\n\"Challenge accepted,\" I said with a laugh.\n\nI hit the gym several times during the week, and made a point of using the tanning booth. If Friday night worked out, I didn't wanna look like Casper the Friendly Ghost in a room full of beautiful young women.\n\nWednesday, I dropped my tuxedo off at the dry cleaners, in need of a good pressing and a few minor alterations. They promised to have it ready by Friday afternoon.\n\nI also went shopping to find Jenna a birthday present. I'd already bought her that black dress at the mall, but I wanted to get her something she could wear on a regular basis, like a piece of jewelry.\n\nI eschewed the overpriced chain stores at the mall and instead visited several local jewelry shops before finally finding what I was looking for. It was still a little pricey, but I had enough room on my credit card and figured I could easily pay it off in a few months. They gift wrapped it for free, so there was that.\n\nThursday, I got a haircut, then went to spend some time with Jenna, who'd invited me over. She was originally supposed to work, but things were so slow they told her not to bother coming in.\n\nI tried talking her into coming to my place instead, but she insisted I come there, despite Michelle being home, promising me some of the leftover lasagna she'd brought back from the diner the night before. I'd wanted to avoid any possible complications or slip ups about the plans for Friday night, but I also didn't want to seem suspicious by refusing her offer. Plus, I really did miss her.\n\nAs we sat and ate, I was beginning to suspect her insistence on me coming there was to get Michelle and I better acquainted, with the ulterior motive of perhaps convincing Michelle to change her mind about the No Boyfriends rule.\n\nMichelle was friendly and courteous, of course, but deftly avoided the topic of the party, and dodged Jenna's attempts to bring it up. Occasionally though, she'd give me a knowing smile.\n\nWe said goodnight at a reasonable hour, although Jenna was reluctant to let me go. \"I'm so tempted to ask you to spend the night,\" she sighed as we stood at the doorway, \"even though I'm still not quite up for, well...\"\n\nI held her close. \"Jenna, I'd be more than happy to spend the night without having sex. I'd just want to be with you. But I didn't bring a change of clothes and I have to go to work early. Plus you need a good night's sleep, big day tomorrow.\"\n\n\"I know. I'll just miss you.\" Jenna gave me one last kiss, and I made my way home.\n\n***\n\nFinally, it was Friday. I did have to work, but I'd already arranged to get off early so I could get everything ready.\n\nI went to the gym for a quick, rare afternoon workout, showered, then picked up my tuxedo, trying it on as soon as I got home.\n\nThe alterations made it fit perfectly. It was basic enough that the style was timeless; simple, classy and elegant. I also gave my dress shoes a quick clean and buff before adding them to the ensemble.\n\nI admired myself in the mirror as I fixed the clasp of the black bow tie. \"Not bad, old man,\" I said out loud, \"you clean up well.\" Then I laughed at myself. \"You might be better off keeping this thing on all night.\"\n\nI stripped off the tux, hung it up carefully, then took a nap. I had no idea how long this night might last, and I certainly wasn't the party animal I used to be, so the more rested I was, the better.\n\nI awoke to my alarm two hours later.\n\nI'd had an erection when I woke, and briefly considered taking care of it, but rejected the idea quickly. I hadn't jerked off all week, saving it up so that if I did indeed get naked for the ladies, I would hopefully be fully aroused the entire time. So I ignored my dick and instead headed to the bathroom.\n\nI took some time grooming myself. I wasn't overly hairy, but wanted to trim things up a bit, especially in the nether regions. I also shaved, trimmed my nose hairs, and cleaned, clipped and filed my nails on both hands and feet.\n\nI took a shower. After drying off, I rubbed myself down with body lotion to soften my skin, then put on some aftershave, deodorant, and cologne. All had the same matching scent, just a light hint of mint and spices that left me smelling fresh and natural, not reeking of overpowering perfumes.\n\nI dried and styled my freshly cut hair, using just enough product to keep it in place.\n\nI couldn't remember the last time I'd groomed myself this thoroughly.\n\nI gave my naked body one last lookover. The slightly reddish hue of the artificial tan had faded, as I'd hoped it would, to a more natural looking color. While I was certainly no Adonis, my muscles were looking well toned and my stomach a bit flatter. It would have to do.\n\nI put on the new pair of boxer briefs I'd also purchased earlier in the week. I'd briefly considered a Speedo, but there was no way in hell you'd ever catch me in a banana hammock, even as a joke.\n\nThese were simple, black, with an almost velvet sheen and touch to them. They were form fitting but comfortable, and designed to highlight the package up front, which they did, quite well in fact.\n\nTurning around in the mirror, my ass looked pretty damn good in them too. If Jenna objected to full nudity, perhaps I could convince her to let me strip down to just these.\n\nI checked the time; almost 6pm. I made myself a light meal, then went and put on some jeans and a tee shirt. I'd wait til I got to the dorm to put on the tux.\n\nI packed a small travel bag with a change of clothes and some basic sundries that may be needed depending on how the evening went. I was hoping that, no matter how things went at the party itself, I might perhaps still get to spend the night with Jenna. I also packed Jenna's birthday gift, and the condoms...just in case.\n\nI received a text from Michelle at 6:45pm telling me they were leaving. Almost immediately after I received a text from Jenna with a picture attached: Her in the stunning red party dress, and Trish in her blue skater dress. They both looked ravishing.\n\nHer text read: \"Wishing you were here. \u2764U.\"\n\nI texted back, \"Love you too. Have fun!\" then packed my things in the car and headed out, hopeful yet cautious about what lay ahead for the evening.\n\n***\n\nAlmost everything was out on the kitchen counter for me when I arrived. The alcohol supply consisted of one bottle of rum, one bottle of vodka, and several bottles of wine. There was also beer in the fridge, and I helped myself to one. I didn't want to drink heavily of course, I wasn't there for that, but it did help take the edge off my nervous excitement.\n\nThe snacks were also pretty basic; boxes of microwave popcorn, bags of nachos, chips and pretzels, a store bought cheese and cracker plate, and a couple of boxes of frozen soft pretzel bites and mini crescent dogs, AKA \"Pigs In A Blanket.\" There were also a variety of dips and sauces, as well as paper plates.\n\nNone of it would take long to prepare, and most I wouldn't want to open until just before they arrived. Still, I spent some time familiarizing myself with where everything was and locating a few other items I'd need.\n\nWith time to kill, I found myself channel surfing, but nothing truly held my interest, my mind too preoccupied with how this could go.\n\nI should have been used to the idea of being naked in front of women by now, having done it with both Jenna and Trish. But Michelle would now also be a part of it, willingly this time, along with at least two other new girls I hadn't even met yet.\n\nI found myself talking to myself. \"Relax. You're not here for an orgy, or to do anything with them really. Don't worry about whether they find you attractive or whatever. Be polite, be friendly, be respectful, and have fun with it, right?\"\n\nMy fears kept trying to creep in. \"What if Jenna objects? What if she gets angry about it? Or what if she goes along with it for her friends, but winds up resenting it?\"\n\nI practiced my breathing exercises to calm myself as my dialog became internal. \"It will be fine. I won't do anything unless I'm sure she's okay with it first. And if things get weird I'll just end it, get dressed and go.\"\n\nThe second beer I'd drank was a mistake, and I found myself urgently needing to pee. \"No more beer,\" I told myself, \"unless you wanna spend half the night in the bathroom.\"\n\nI relieved my bladder and used some mouthwash to freshen my breath, and as I turned to exit, spotted something that froze me in my tracks.\n\nIt was a laundry basket. With the lid open. And, sitting right on top, was a silky black thong. The only two people currently living here were Jenna and Michelle. And I'd never seen Jenna wear a thong.\n\nI slowly put out my hand, reaching for it, wanting to touch the soft, tiny gusset. I could see a white stain there clearly, and I desperately wanted to smell it, to sample what I was pretty sure was Michelle's most intimate scent.\n\nInstead, my hand closed the basket lid.\n\n\"No,\" I berated myself firmly. \"No fucking way are you going to invade her privacy like that.\"\n\nThe spell broken, I turned and exited the bathroom.\n\n***\n\nI got a text from Michelle at 11:05 pm. \"On our way back. Approx 20 minutes.\"\n\nI put on the tux, then started setting up the snacks. I'd found their wine glasses and poured several, setting them on a silver tray. I practiced balancing it for a few moments to make sure I still knew how to carry it properly, hoping like hell I didn't drop the damn thing. Then I filled two ice buckets, one to chill the open bottles, the other for the mixed drinks.\n\nI'd just finished laying everything out when I heard them coming up the walkway, all laughter and bustling energy.\n\nThinking quickly, I draped a white hand towel over my arm and, balancing the wine tray, made my way to the living room so I could greet them when they came through the door.\n\nI stood straight and rigid, one arm behind my back, the other holding the tray, approximating, as best I could, the look of a formal butler.\n\nStill, I trembled a little as I heard the key in the lock.\n\nMichelle came through first, followed closely by Jenna. Trish was directly behind her, covering her eyes. Two new faces I didn't recognize trailed behind them. Between the tittering laughter and their clumsy wobbling as they entered, it was pretty obvious that, while they may not have been able to legally buy drinks at the club, they'd all managed to get a pretty good buzz on somehow.\n\nJenna was complaining good naturedly. \"Okay, okay! I'm inside now! Can I open my eyes already???\"\n\nMichelle caught my eye, grinning widely. I smiled back, then tightened my formal stance.\n\nMichelle nodded at Trish, who pulled her hands away with a loud, \"Ta DA! Happy birthday!\"\n\nJenna's eyes met mine, and her face lit up with joy. \"Tommy???\"\n\nI bowed slightly, holding out the wine tray one handed, my eyes never leaving hers. \"Good evening, young miss, and happy birthday. I hope the evening's festivities have been to your liking so far. Would you care for a drink?\"\n\nMichelle had barely enough time to rescue the wine tray before Jenna almost tackled me with her hug. She smelled faintly of vodka and weed.\n\n\"Oh my God, I'm so happy to see you!\" Jenna squealed. She kissed me hard, then pulled back. \"Nice suit! You look amazing!\"\n\n\"So do you,\" I said. \"I knew that red dress was the one.\"\n\nStill grinning ear to ear, Jenna asked, \"Who's idea was this?\"\n\nI nodded towards Trish and Michelle, who were already helping themselves to the wine.\n\nJenna ran over and hugged them. \"I love you guys! Thank you so much! Best birthday present ever!\"\n\n\"Oh, we've only just gotten started with the surprises,\" Michelle said, giving me a sly wink.\n\nJenna saw the wink and looked back at me, happily confused. \"Really? Like what?\"\n\n\"We'll get to that,\" I said, taking the wine tray back from Michelle and repositioning it in my hand. \"But first, why don't you introduce me to your other friends?\" I nodded my head in the direction of the two young ladies I'd seen come in earlier, still standing near the door.\n\nJenna gave me a quizzical smile, still not quite catching on to my butler act. But she waved her friends over excitedly.\n\n\"Tammy, Nikki, this is Tommy, my boyfr...\"\n\n\"Butler,\" I said, cutting her off with a smirk. \"Tonight, I am your butler. Your wish will be my command.\" Jenna again looked at me, understanding slowly dawning on her face. \"I love you,\" she mouthed silently. I simply winked back.\n\nTurning to her friends, I greeted them with a bow. \"Tammy, Nikki, it is my great pleasure to meet you. For tonight, I think it best you call me Thomas, my formal name. Now, may I offer you ladies a drink?\"\n\nTammy, a stunning blonde that looked like every head cheerleader you've ever seen, laughed and gave me her best, if slightly inebriated, attempt at a curtsey. \"Nice to meet you, Tommy, I mean Thomas. Thank you,\" she giggled as she took a glass of wine from the tray I'd extended.\n\nNikki, a curvy, athletic looking young woman with skin almost as dark as her glassy, slightly red eyes, took her drink with a wry smile. \"Why thank you, kind sir,\" she said, deciding to play along. \"It's nice to make your acquaintance.\"\n\n\"Okay, ladies, listen up!\" Michelle's voice rang out across the room. \"Time to get out of these dresses and into our PJ's!\"\n\nMichelle came over to the new girls. \"Tammy, Nikki, you can change in the spare rooms. Let's all get comfy, and then we can really get this party started!\"\n\nAs she guided them towards the hallway, I saw her speaking softly to them. Tammy and Nikki looked back towards me over their shoulders, giggled, then nodded at Michelle.\n\n\"What's that about?\" Jenna was at my side, watching them leave.\n\nBefore I could respond, Trish swooped in. \"Jenna, we need to talk. Let's go in your room.\"\n\nJenna looked very confused, especially when I followed them both into her room and closed the door. \"You guys gonna tell me what's going on or what?\"\n\n\"Okay, so...\" Trish took a deep breath, trying to decide how to start.\n\nI helped her out. \"Trish and Michelle had an idea to do something special for your birthday, but I'd only agree to it if you did.\"\n\nJenna still looked confused. \"And?\"\n\n\"And...\" said Trish, steeling herself, \"we knew you wanted Tommy here. So we invited him to come and be our butler.\" She paused before finally spitting out, \"Our NUDE butler.\"\n\nJenna was dumbfounded. She looked at Trish, then me, then back at Trish. \"This was YOUR idea?\"\n\n\"And Michelle's,\" said Trish nervously.\n\nJenna whipped her head back at me. \"And you agreed to it?\"\n\n\"Only if you agree to it, Jenna,\" I said firmly. \"Trish and Michelle thought you might find it fun. But if not, then I'll remain a fully clothed butler. Nothing else happens unless you're on board.\"\n\nJenna sat on her bed, stunned. \"You guys planned all this behind my back?\"\n\nWe both nodded. I was tense, unable to gauge her reaction at all.\n\nJenna sat quietly for a moment, looking deep in thought. Then she jumped up excitedly. \"I LOVE this idea!\"\n\nI don't know who breathed a louder sigh of relief, Trish or myself.\n\nJenna threw her arms around us, hugging us close. \"I have the best friends ever!\"\n\nJenna seemed a little tipsy, giving me cause to worry about her judgment, but I held off saying anything for the moment.\n\nJenna turned to Trish. \"So Michelle's in on this. But what about Tammy and Nikki? I don't want to freak them out or make them uncomfortable.\"\n\nOkay, so perhaps she wasn't as impaired as I'd thought, if she was considering the other girl's feelings.\n\n\"Tammy and Nikki are aware,\" said Trish. \"Michelle told them all about it before inviting them to make sure they'd be up for it. Our original plan was for Tommy to be naked when we walked in, but he insisted we made sure you were cool with it before going that far.\"\n\nJenna looked up at me. \"Really? Thank you. I think that may have been too much of a shock to my system,\" she said. \"I'm glad I had a moment to think it over first.\"\n\nJenna sat back down. \"So...how do we start this?\"\n\n\"I don't really know,\" I laughed nervously, the reality of the situation now truly hitting me. \"I hadn't actually put much thought into it besides getting your permission.\"\n\nTrish spoke up. \"The idea Michelle and I had was that Tommy would act as our server tonight, bringing us snacks and drinks and stuff. None of us want to do anything more than, you know, look at him. Like those CFNM parties we'd talked about. No sex or anything. Just a naked guy serving a room full of women.\"\n\nJenna nodded, her trademark grin lighting up her face. \"I have a few ideas,\" she said. She glanced up at Trish. \"Can I talk to Tommy alone for a minute?\"\n\n\"Sure,\" said Trish, \"I'll go get changed in Michelle's room.\"\n\nAfter the door closed, Jenna directed me to sit beside her on the bed. \"First of all, I love you,\" she said.\n\n\"I love you too.\"\n\nJenna looked me directly in the eye. \"Are you truly okay with this?\"\n\n\"I am,\" I nodded, \"only as long as you are. You call the shots. You decide how far anything goes. And if you say the word, it's over. I put my clothes back on and leave.\"\n\nJenna looked at me deeply. \"Do you trust me?\"\n\n\"Implicitly.\"\n\nJenna leaned in and kissed me. \"Then let's do this.\"\n\nJenna stood, then grabbed the jumper she'd bought at the mall from her dresser. \"I'm gonna go change in the bathroom. Wait here, stay dressed for now. I'll come get you in a few minutes.\"\n\nShe saw the disappointment I must have had on my face at not being able to watch her undress, and smiled apologetically. \"Sorry, but I have to, well, freshen up a bit too. Lady stuff, you know.\"\n\nShe blew me a kiss and was out the door.\n\nI sat on the edge of her bed, calming myself. It wasn't long before I heard a flurry of activity coming from the hall. Female voices, giggling and excited, making their way into the living room. I could hear Jenna, but couldn't quite make out what she was saying. She spoke briefly, then footsteps signaled her approach.\n\nJenna opened the door. The sight of her now in her adorable, form fitting jumper made my heart race.\n\nShe saw my look and smiled. \"Save it for later, cowboy. We're ready. Are you?\"\n\nI took one last deep breath, held it, then exhaled slowly. \"Ready as I'll ever be.\"\n\n\"One last thing,\" said Jenna in a low voice. \"If you start feeling uncomfortable in any way, tell me you're 'feeling cold.' I'll get you out of there, okay?\"\n\n\"I don't think I'll need to, but okay,\" I said. \"Same with you. If things go too far, tell me you're not feeling well or something. We can come back here and talk it over.\"\n\n\"Agreed,\" nodded Jenna. She kissed me passionately, stirring my desire, then took me by the hand and led me to the living room.\n\nThe sight that greeted me there was a fantasy come to life. The four young ladies had changed into their sleepwear, and my eyes couldn't decide where to look first.\n\nThey settled on Trish, in her purple cami and shorts, toying with the curly dark hair that cascaded down to her shoulders as her gaze met mine. She angled her body subtly towards me, her breasts shifting loosely with her movement, and dropped me a wink.\n\nMichelle sat next to her on the couch, wearing a lacy pink babydoll that, with the way her legs were crossed, wasn't quite concealing the matching panties beneath. Her dark nipples stood out clearly beneath the lacy fabric.\n\nTammy and Nikki had taken the two adjoining cushioned chairs that had been moved closer to the couch, forming a crude semicircle.\n\nTammy, the All American blonde, wore a rose colored two piece mesh lingerie set, with crisscrossing straps that ran across her ample cleavage. The floral lace shorts were sheer, enticing me with the hints of milky skin they revealed beneath it.",
        "Nikki wore the simplest, yet somehow most revealing outfit. Her firm, muscular breasts were covered only by a simple white sports bra. Her more intimate area was barely concealed beneath a tiny white thong, contrasting wonderfully with her ebony skin.\n\n\"I'm dead,\" I thought to myself, \"and this is heaven.\"\n\nJenna moved in front of me, breaking my view and commanding my attention. Her \"Yes, Daddy?\" jumper hugged every curve of her petite body, the neck flap unbuttoned and open to reveal her cleavage. Her freckled, beaming face was a rainbow of joy.\n\nShe was still the most beautiful woman I'd ever seen.\n\nOur eyes met, and she gave me one last look, silently asking if I was still sure. I nodded almost imperceptibly.\n\nJenna turned to face her friends. \"First of all, thank you all so much for coming, and for making this a special night for me. Cheers,\" she said, lifting the wine glass she'd taken from the counter.\n\n\"Cheers,\" the girls returned, with Trish adding, \"We love you, Jenna!\"\n\n\"I love you too,\" Jenna answered. \"Now, as it appears you've all been plotting behind my back, I suppose what comes next is no surprise to you.\"\n\nJenna paused, gave me a quick glance, then continued. \"Sir Thomas has agreed to be our naked butler for the evening. If you need a drink, or a snack, or a good massage, he will be more than willing to accommodate you.\"\n\nMy eyes went wide in surprise. We hadn't discussed this at all. Not that I was objecting, of course.\n\n\"However, I have a few ground rules,\" stated Jenna, attempting to sound more serious than she was. \"First: he will not be permitted to touch you without your consent. Second: you may touch him if you wish, but only with your hands. No lips...either set,\" Jenna finished to a room full of giggles.\n\nJenna turned back to me, her eyes as fiery as her hair, with a grin like the Devil's Mistress. \"Last rule: no one makes him cum but me.\"\n\nHo...lee...shit.\n\nJenna spun back to her friends. \"Any questions?\"\n\n\"Just get him naked already!\" Trish yelled, to a cacophony of cheers and cat calls.\n\nJenna laughed loudly. \"Okay, fine! Who wants to help me unwrap my present?\"\n\nTrish and Michelle immediately volunteered. After a moment's hesitation, Tammy stood up and joined them as they gathered close around me, smiling shyly, but also looking excited.\n\nOnly Nikki hung back. \"Looks a little crowded already,\" she said wryly, sipping her wine, \"but y'all go ahead. I'm just gonna enjoy the show.\"\n\nJenna started by removing my bow tie and unbuttoning the collar of my white shirt. Michelle moved behind me and slipped off my jacket, then the vest, laying them over a kitchen chair.\n\nTrish was already on her knees, undoing the clasp of my pants and pulling down my zipper.\n\nJenna moved aside, inviting Tammy to step in. Her baby blue eyes met mine and she blushed furiously, but smiled as she finished unbuttoning my shirt, revealing my bare chest. She glanced at Jenna for approval before gently running her hand across my pecs. \"Oh, I like a guy with some chest hair,\" she giggled before she stepped back, allowing Jenna to move in again.\n\nTrish was struggling to get my shoes off, and Jenna bent down to help her. Michelle was again behind me, pulling the white shirt off, then wrapping her tan, toned arms around my chest to hold me steady as Jenna and Trish removed my shoes, socks, and finally, my pants. I could feel her firm breasts pressing against my back as she held me. Her faint perfume teased my nose; her dark hair tickled my neck. She leaned in and blew a warm, wine scented breath into my ear that made me tremble.\n\nAll three stepped away quickly, leaving me standing center stage, now clad only in my boxer briefs. To say I was aroused would be an understatement. There was no hiding how excited I was.\n\nI looked around the room. Tammy had already taken her seat by Nikki. Michelle and Trish were also moving back to the couch.\n\nThat left Jenna, still standing beside me.\n\nJenna reached up and put the bow tie back around my neck, then dropped to her knees, her eyes twinkling merrily as she gazed up at me.\n\n\"Last part's for you, girl!\" I heard a voice call out. I think it was Nikki. The other girls cheered, then began to chant, \"Take it off! Take it off!\"\n\nJenna moved slightly to the side to provide an unobstructed view as her hands found the waistband of my boxers and slowly, torturously, tugged them down.\n\nShe paused at the base of my cock, revealing my neatly trimmed pubic hair. \"He manscapes! Nice!\" I heard Tammy say.\n\nJenna continued to pull them lower, slowly revealing my thick and swollen shaft that had been straining to be released since the moment they'd started undressing me.\n\nI could see, and feel, four sets of eyes locked on me in anticipation as Jenna finally pulled the briefs all the way down. My cock sprung free like a coiled spring, to the sound of gasps, applause, and cheers.\n\nMy face now flushed, I took a small, formal bow. My cock was bouncing up and down repeatedly, as if taking a bow of its own.\n\n\"Yep,\" I thought to myself as I stood naked, looking out at the room of scantily clad young women staring back at me, \"definitely heaven. And the rumors are true: It's full of angels.\"\n\n***\n\nI served drinks and snacks as the girls sat, chatting loudly, often speaking over top of each other. Michelle had brought out plenty of pillows and blankets, although none of them were using any to cover up. Instead, they were sprawled out in various comfortable yet revealing positions on the couch and chairs.\n\nFocusing on serving and refilling drinks helped relax my cock only somewhat. While no longer standing at full attention, it was still thick, plump and swollen.\n\nI would often catch them looking at it as I walked by, handing a plate to one girl, or pouring some wine for another, and I'd feel myself twitch every time.\n\nMichelle was complaining as I came into the room with a fresh tray of warm crescent dogs. She continued speaking as the other girls dug into them hungrily. \"Yeah, the club was fun, but I totally picked the wrong shoes! My feet are still killing me.\"\n\nJenna, sitting beside her on the couch, gave me a quick glance, another wicked smile forming. \"Sounds like you could use a good foot massage,\" she said to Michelle. Then, turning to me, \"How about it, Sir Thomas? Would you please give the young lady a foot massage?\"\n\nMichelle looked at me, her grin matching Jenna's. Extending her shapely legs towards me, she wiggled her toes. \"Yeah, how about it?\"\n\nI don't know what possessed Jenna to offer that. Fortunately, I knew enough to feel confident in my abilities. \"Of course, my lady,\"\n\nPutting down the tray, I got down on one knee, took Michelle's foot and rested it on my uplifted leg, then began working her arches with my thumbs. Her foot was soft and delicate, and only slightly cold, but my steady ministrations quickly warmed it up.\n\n\"Ohhh, damn, he's actually good at it,\" Michelle said with a sigh, \"God, that feels good.\" She eased back on the couch and slid herself downwards a bit to give me better access, her legs parting slightly as she did so.\n\nI now had a lovely view of her lacy pink panties, snug and inviting over her very plump mound, and tightly outlining her cleft. My cock soon found itself again at full attention.\n\nI looked up to find Jenna watching me work. She'd also seen where I'd been looking, and the effect it had on me. We grinned at each other like mischievous children. I refocused my efforts back to Michelle, switching to her other foot.\n\nTrish, who'd been sitting to the other side of Jenna, suddenly spoke up. \"Can I be next?\"\n\n\"Wait your turn,\" groaned Michelle as my thumbs dug deep into her arches, \"I'm not done with him yet.\"\n\nI worked her feet for several more minutes before she'd finally had enough. \"Jesus, Jenna, you've been holding out on us. Any guy this good at a foot massage is a keeper.\"\n\nJenna giggled. \"Actually, I had no idea he'd do so well. I was kinda hoping he sucked at it and we'd have to give him a spanking as punishment.\"\n\n\"We still could,\" Trish snickered.\n\nI caught Jenna's eye and gave her a small shake of my head, then crossed my arms and faked a little shiver.\n\nShe understood immediately. \"Nah, he's been doing a great job. Tell ya what,\" she said, standing with a stretch, \"I think he deserves a little break from all his hard work.\"\n\nJenna took me by the hand, pulling me towards the kitchen. \"Come on, how 'bout I fix you a drink?\" I could see the disappointment in Trish's eyes as we walked away.\n\n\"You okay?\" Jenna asked once we were alone.\n\n\"I'm fine,\" I assured her. \"Just...not into spankings. At all.\"\n\nJenna nodded as she poured me a rum and Coke. \"Sorry. I didn't expect Trish to take me seriously. How about everything else? Are you comfortable? We're not too demanding, are we?\"\n\nI smiled softly. \"Everything else has been great. I've been having fun with it. I don't mind massaging them either, that was actually a fun idea. I'll happily continue that if they want them. Just no humiliation stuff, okay?\"\n\n\"Of course. I'd never want to humiliate you.\" Her eyes dropped down to my now semi erect cock. \"How's HE holding up?\"\n\n\"Oh you know, he's a trooper,\" I shrugged. \"Feeling a little lonely, but willing to continue his duties.\"\n\nJenna laughed as she handed me my drink. \"I can get him a little more...involved, if you want.\"\n\n\"That's your choice,\" I said, \"I'm game for whatever you're planning.\"\n\n\"Except the spanking,\" Jenna giggled.\n\n\"Except the spanking,\" I repeated.\n\nJenna stood on her toes and kissed me. \"Duly noted. Now relax, enjoy your drink, catch your breath for a few minutes. Come back out when you're ready.\"\n\nJenna straightened my bow tie playfully, then spun off to rejoin her friends while I took a seat at the kitchen table, sipping my drink while resting my legs.\n\nI took about fifteen minutes to nurse my drink and feed my suddenly grumbling stomach. I also felt the need to empty my bladder, so headed down the hall towards the bathroom.\n\nMichelle came out of the door just before I reached it. There was an awkward moment where we both tried and failed to move out of each other's way, then we laughed as I managed to move aside enough for her to pass.\n\nShe started to walk by, then stopped and faced me. I did my best to maintain eye contact and not be distracted by her sexy, lingerie covered body as she spoke. \"By the way, I wanted to say thanks.\"\n\n\"For what? The foot massage? No problem.\"\n\n\"No, not that,\" she smiled, \"although it was really good. No, I wanted to thank you for passing the test.\"\n\nI was confused. \"What test?\"\n\nMichelle fixed her gaze on me. \"I left those panties on top of the laundry basket on purpose. I checked it when I got home and when I saw the lid closed, I assumed you'd...\" she paused here, looking somewhat embarrassed to finish.\n\n\"Michelle, I didn't...\" I started to object.\n\n\"I know,\" she cut me off. \"I took a picture of them before I left. If you'd have moved them, I'd have known. But you didn't. So...thank you.\"\n\nI didn't know how to respond. But finally I had to ask, \"Why? Why would you do that?\"\n\nHer face turned serious. \"Because while I don't mind kinky, I don't like creepy. And I had to know which one you were.\"\n\nI couldn't be angry at that, especially since I'd come pretty close to failing her test.\n\nShe was moving away again when I stopped her. \"What would you have done if...well, if I...\"\n\nMichelle looked thoughtful for a moment, then broke into a stunning smile. \"Well, certainly not THIS.\" Moving in quickly, her hand found my cock and gripped firmly.\n\nI jumped in shock. Jenna had given her friends permission to touch me, but up until this moment, none of them had.\n\nNow Michelle had a firm hold on my rapidly swelling cock, stroking it to a full erection.\n\nHer touch lingered for only a few moments before releasing it with a sigh. Her eyes looked down with lust at the raging hard-on she'd created, then back up at me. \"Jenna's a lucky girl,\" she whispered. She gave me a wet, warm peck on the cheek, and then was gone.\n\n***\n\nI spent several minutes in the bathroom simply trying to calm my racing heartbeat and allow myself to relax and soften enough to pee.\n\nI also took a few minutes to wash my face, refresh my deodorant and cologne, and rinse with some mouthwash.\n\nAfter my brief respite, I returned to my duties. Surprisingly, the alcohol consumption had slowed down considerably. While all the ladies were obviously very tipsy, I was relieved to see none of them were drinking in excess. Several times, my offers to refill their wine glasses were declined.\n\nThey were, however, very happy to see the fresh tray of soft pretzel bites I brought out for them.\n\nMichelle was on the floor, painting Nikki's toenails while chatting with her and Tammy, when I approached them with the tray. I couldn't help but notice how Nikki's parted legs had left a clear view of her miniscule thong, or how much that thong had now disappeared between her plump, meaty vulva. Nikki caught me looking and, to my surprise and utter delight, opened her legs still further, the bit of pink pussy now revealed contrasting beautifully against her dark skin.\n\nNikki smiled as she watched my cock grow in appreciation, then returned her legs to a slightly more modest position. \"You offering us a snack, or what?\" she asked sarcastically.\n\n\"What? Oh, the pretzels, right,\" I stumbled. Getting back into character, I extended the tray. \"Please enjoy, ladies.\"\n\n\"Oh, we are,\" giggled Tammy. Her eyes were fixed on my erection as well. Leaning forward, she reached out to grab a few pretzels, and in doing so, gave me an amazing view of her large, rounded breasts hanging so low in her mesh top that I could see the edges of her areolas.\n\nMichelle also took one, quickly popping it in her mouth. \"Fhnk ew,\" she mumbled, then reached up and lightly patted my bare ass. My cock jumped at her touch, causing her to almost choke on her pretzel as the other girls laughed.\n\nI bowed with a slightly embarrassed grin, then turned to Jenna and Trish, who were still on the couch.\n\nThey'd both been watching the proceedings with huge smiles. Trish's eyes filled with delight as I faced them, giving her a much better view of my erection.\n\nJenna just sat there, beaming proudly. She was having too much fun with this.\n\nI bowed and offered them the pretzels. They quickly munched a few with hungry delight.\n\nIt was then that I'd remembered Trish had requested a foot massage earlier. Putting the tray down on the coffee table, I knelt before her. \"Would you still like me to rub your feet, my lady?\"\n\nTrish's face lit up. \"Hell, yes!\" She exclaimed, extending a leg out.\n\nAs I'd done earlier with Michelle, I worked each foot individually, drawing moans and groans of delight from Trish. I also had another great vantage point as I looked between her legs. Unlike Michelle, who's most intimate parts had remained hidden behind her panties, Trish, it seemed, wasn't wearing any. Her purple shorts had shifted enough to almost fully expose her sex. Her long, thick pussy lips hung from between her hairless, creamy skinned vulva, glistening with a hint of moisture.\n\nAs I continued to rub her feet, Trish began swaying her legs, open and closed, her feminine scent now strong in the air as her arousal increased each time she clenched her thighs.\n\nJenna sat beside her, fascinated, as Trish suddenly sat up with a jerk, slapping a hand across her mouth to muffle her escaping squeals.\n\nI let go of Trish's trembling leg and looked up at Jenna in awe. \"Did she just...?\"\n\n\"I think so,\" Jenna said. She turned to Trish with amused concern. \"You okay?\"\n\nTrish uncovered her mouth as her flushed face slowly returned to a more natural hue. \"Yeah, I'm good. More than good. He was doing such a good job, it just...kinda snuck up on me.\" Trish looked down at me and her face went red again, this time from embarrassment.\n\n\"Damn,\" Jenna exclaimed. \"I may have to try one of these famous foot massages!\"\n\nI took that as a request and slid over to accommodate her, but Jenna put a hand on my shoulder, stopping me. \"Maybe later,\" she grinned, \"but right now, why don't you come up here and just relax a bit?\"\n\nI stood as they moved over to give me just enough room to sit between them. Our bodies were very close, my naked hips brushing up against their clothed ones. They were so close my arms had nowhere else to go but around them. Both of them snuggled in so tight I could smell the wine on their breath.\n\nJenna rested her hand on my thigh as she purred in my ear, \"You've been doing such an amazing job tonight, making this a special birthday for me. Now, I wanna do something special for you.\"\n\nAs she finished speaking, her hand traveled up my thigh and found my cock.\n\nFor the past two hours or so, my dick had been in a state of constant fluctuation between semi aroused and fully erect. And a man can only take so much. So you can imagine how hard I had to struggle not to erupt in her hand right then and there.\n\nTo her credit, Jenna understood this, and played with me just enough to be pleasurable without sending me over the tipping point. I was reveling in just how soft her hand felt as it traveled up and down the length of my shaft, not stroking it so much as caressing with a light, airy touch.\n\nI managed to break the spell Jenna was casting over me long enough to look around the room. Michelle, Tammy and Nikki had taken a break from their mani / pedi activities and were now watching us intently.\n\nTammy again blushed when she saw me look her way, as if she were embarrassed to be caught watching but also couldn't look away.\n\nNikki, on the other hand, looked pretty nonchalant about the whole thing, still painting her own nails while occasionally glancing my direction.\n\nMichelle, however, looked hungry. And not for more pretzels. When my eyes met hers, she ran her tongue around her lips sensually, popped it back in, only to then use it to push out the side of her cheek three times in rapid succession. I understood exactly what she was implying, and had to look away before I lost control.\n\nI turned to Jenna, but she wasn't looking at me. Instead, she was looking past me, at Trish. Jenna nodded in her direction, and a moment later, I felt another hand join Jenna's on my cock.\n\nI whipped my head towards Trish. She was looking at me with a mix of shyness and excitement. Her ample cleavage was flushed, her breasts rising and falling with her breaths. Her brown eyes fluttered a bit when she saw my surprise. \"Hey, Jenna did say I was allowed.\"\n\nI turned back to Jenna, who was grinning like the Cheshire Cat. My mouth opened to speak, but Jenna lay one finger of her free hand across my lips. She didn't have to say anything. I knew what she was telling me: \"Don't overthink this.\"\n\nAny last nerves, fears or doubts faded from my mind as the two of them began working in tandem to give me the most erotic and pleasurable handjob of my life.\n\nThey leaned in closer, making themselves comfortable against me, the warmth of their bodies and the scent of their skin and hair flooding my already overwhelmed senses. I was gasping and groaning uncontrollably, my body trembling under them.\n\nTrish now had a firm grip on the bottom of my shaft while Jenna's hand sat atop it, working the head with a little twist while Trish pumped my base. They worked like this for a few minutes, then, at Jenna's direction, switched, allowing Trish to take the top position while Jenna began teasing my balls in the way she knew I liked.\n\nTrish removed her hand and I watched as she sucked on her fingertips, lubricating them heavily with saliva, then reached back down and softly ran her wet fingers up my shaft, coming together over my swollen head with a gentle squeeze that made me howl with delight.",
        "Jenna leaned over and spit directly on my cock head, then let go of my balls long enough to spit again into her palm, then reclaimed her grip on my shaft.\n\nTaking her cue from Jenna, Trish leaned over so close I could feel her breath on my tip and released a long string of saliva that slowly dripped down to coat my now aching cock.\n\nTheir hands began to work together again, jerking me with slowly increasing speed.\n\nI could feel Jenna's breath in my ear as she whispered, \"Cum for me, cowboy.\"\n\nTrish heard her and started to pull back her hand when Jenna shook her head. \"It's okay. I don't mind sharing.\"\n\nTrish immediately resumed her duties, just in time to help release the four days worth of semen I'd been saving up for this night.\n\nMy hips were bucking wildly, my roars of pleasure echoing through the room as my first shot of cum erupted so hard it hit me in the neck.\n\nThe girls never slowed as wave after wave of spunk blasted out of me, some hitting my chest and stomach, some running down their hands, making my cock even more slippery and sensitive.\n\nThey slowed their pace as the last few drops ebbed from the tip. But they didn't stop until I finally had to beg them to; I simply couldn't take anymore. My eyes closed as my head dropped back on the couch. I was utterly spent.\n\nI eventually came back to the land of the living to the sound of cheers and whistles. I felt something soft and light hit my chest.\n\n\"Use that to clean up,\" I heard Michelle say. \"Don't make a mess on my couch.\"\n\nLooking down, I saw the white hand towel I'd used earlier in the evening as part of my butler act. Jenna was already reaching for it and, after giving me a soft, loving kiss, began to mop me up.\n\nI looked out at the room to see the other ladies looking back, still smiling and laughing. \"Damn,\" said Nikki, a hint of awe in her voice, \"that was one hell of a load!\"\n\nTammy giggled in agreement. Michelle was just looking at me with an almost satisfied smile, like she was the one who'd made me cum. And in a way, since this was partly her idea, she had. She licked her lips again, then winked.\n\nI turned to Trish, still sitting close beside me. All I could really think to say was a sincere, \"Thank you.\"\n\n\"You're welcome,\" she replied happily, leaning in to give me a quick peck on the cheek. \"That was a lot of fun!\"\n\nFinally, I turned back to Jenna, who was just finishing cleaning me up. As she returned my gaze, I saw no regrets in her shining emerald eyes, no doubts, no misgivings. Only joy, contentment, and love.\n\n\"Thank you, darlin', that was the most amazing thing that's ever happened to me.\"\n\nJenna beamed with pride. \"You're very welcome.\" She turned to face her friends. \"But it's we who should be thanking you, right ladies?\"\n\nThe ladies again burst into applause and cheers. I stood shakily, but managed one last bow.\n\n\"Hey, Jenna,\" Trish suddenly called, \"hand me that towel, will ya? I'm a mess over here!\" A ripple of female laughter ran through the room.\n\nJenna tossed Trish the already sticky towel with a giggle. \"Fuck,\" Trish grumbled good naturedly as she vainly attempted to clean her hand, \"this is no help. I need soap and water.\"\n\nTrish got up and headed towards the bathroom, and I could have sworn I saw her take a quick lick of her fingers before disappearing around the corner.\n\nJenna went to freshen up after Trish returned, leaving me naked and still sticky on the couch. \"I could really use a shower, if you don't mind,\" I said when she got back.\n\n\"Just rinse the tub out real well when you're done,\" cracked Michelle as I headed down the hall.\n\nI'd only been in the shower for a few minutes when there was a knock at the door. \"Tommy?\" called Jenna, \"can I come in?\"\n\n(To be continued...)\n\n-------------------------------------------------\n\n AUTHORS AFTERWARDS\n\nThis is already long, so I'll keep these notes brief.\n\nAs this story grew, I realized I basically had two options: split it into two. or publish it whole.\n\nThe problem with splitting it was that the first part would have been all the build up stuff leading to the party, and while that build up was necessary, there would have been no payoff until I published the next chapter and finally got to the party.\n\nSo I decided to keep it intact and publish it as a longer chapter. Hope you didn't mind.\n\nThe party isn't quite over yet, as you may have noticed from my cliffhanger ending. I already wrote another long section on it that I was going to include here but decided to save til next time. "
    ],
    "authorname": "Djmac1031",
    "tags": [
        "cfnm",
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism",
        "flashing",
        "teasing",
        "handjob",
        "lingerie"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-jenna-arrangement-pt-14"
}