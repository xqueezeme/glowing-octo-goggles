{
    "title": "Christian College Sex Comedy Ch. 33",
    "pages": [
        "*Children must face the scrutiny of their parents*\n\n*I have many people to thank for this chapter; readers who kept in touch, Steve and Shawhollow for editing and about a half-dozen feedback artists who told me what I was doing wrong and what more I had to add to a make the story work. Thank you all.*\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic I'd like to think it is mostly a good-natured romp.)\n\n\nSo, it was Friday, Homecoming Day at FFU, and several dozen of us were not doing what we were supposed to do but I wanted this headache taken care of before the rest of the day's festivities. All the Advocates were gathered as was Ms. Goodswell as a Student Advisor. Other people were gathered to observe the spectacle and guessing which way I would jump. \n\nThis first major crisis of my role as Mediator since the creation of the Janissaries wouldn't have been complete without Iona, my trusty sidekick, and Rio, my chronic pain in the butt/truest friend. In fact, Rio was the reason for this meeting. She had been given the writing assignment of 'place the writings of a juvenile/young adult story into an adult setting'. The train wreck wasn't hard to foretell.\n\nRio had chosen four works of the late, lamented Dr. Seuss (if he wasn't dead he would be after reading halfway through Rio's creation). Rio had attacked the project with a gusto that made Ms. Tucker, her English instructor, hopeful that Rio was finally fitting in (read: conforming). Rio turned in the pornographic Tales of a Cat with a Really Big Hat on Tuesday.\n\nMs. Tucker had flunked the effort and dragged Rio down to Dr. Victoria Scarlett's office but that senior educator had volleyed this time bomb into my lap. I promptly told them to pick an Advocate and get back to me after dinner. Rio Talon/Christina Buchanan's argument had been that the vagueness of the instructions allowed for a liberal interpretations of the assignment.\n\nAthena Varna (representing the rest of Ms. Tucker's class)/Joy Jefferson had argued that the standard was what 'any reasonable individual going to a Christian school would find acceptable' as their defense, which meant that it wasn't acceptable in their opinion. Two days of mediation went nowhere and I wasn't going to let this matter fester through the weekend. \n\nI had called all the concerned parties to join me after breakfast and received Dr. Scarlett's blessing for missing Assembly where many of the students and their families were gathered in our daily religious/social function.\n\n\"Okay, I've given the matter serious thought and I saw merit to both arguments but I found Ms. Jefferson's argument to be the more compelling,\" I led off. \"We live in a society; each person should be free and act with freedom but that cuts both ways \u2013 we have to give our society some support to retain our harmony. This is my judgment.\"\n\n\"I would hope that since Rio did make an exceptional effort in her creative writing work that Ms. Tucker would consider allowing Rio one additional week to make up the assignment since this is one-quarter of her grade and her effort, while misdirected, was acknowledged as a vigorous attempt. That is my suggestion anyway,\" I said hopefully since I wasn't sure if I could instruct a teacher in any manner, much less order a do-over for Rio.\n\nIt took a few seconds for my words to sink in. This was hardly re-writing the Charter of the Commonwealth of Virginia but it did mean I'd ruled against my best friend and the woman I wanted to marry and several girls looked at me in some disbelief that I hadn't gone that way.\n\n\"Thank you Mediator,\" Joy was the first to offer me her hand \u2013 and she was still technically the enemy, being in the Traditionalist faction here at school.\n\n\"Your argument carried the day, Joy. I'm pretty sure there was no favoritism involved,\" I smiled.\n\n\"I will get you next time,\" Christina came up and shook Joy's hand. She turned and clasped my hand after that. \"You were wiser than I thought you'd be,\" Christina winked to me.\n\nA few people came by and went through the same routine until Rio approached last of all. She hit me in the shoulder causing multiple heads to swivel our way.\n\n\"You threw me under the bus Bitch,\" she laughed.\n\n\"Don't look so surprised,\" I rubbed my shoulder, \"you built the bus I rolled over you with, ya Deviant.\"\n\nIona gave me a shy wave right before she slipped out to go meet her parents and most of the girls did likewise. Finally it was Ms. Goodswell, Christina, Faith, Rio and myself.\n\n\"Faith and I will polish off the minutes of your final decision Zane,\" Christina said before turning her imperious head away and leading Faith out to do what seniors do.\n\n\"So, are you two going to be hiding out all day?\" Virginia Goodswell looked Rio and my way.\n\n\"I would but two dozen over-eager and overly-endowed students have asked Zane to be available to meet their ancestors or some other such cheesy crap,\" Rio ranted. \"Besides, I'm sure there is some law or ordinance that causes the rest of you to never leave me alone.\"\n\n\"Yes Ms. Talon,\" Ms. Goodswell said with some gravity, \"That is the Self-preservation Act of 1908. You are listed under 'Elements with Corrosive properties.\"\n\n\"Woot!\" Rio hollered, \"I'm a corrosive influence!\"\n\n\"Thanks Virginia,\" I addressed my teacher and Spiritual Advisor, \"like she needed more ammo.\"\n\nGoodswell laughed and headed out toward the main campus while Rio and I headed for our dorm.\n\n\"I think I'm going to become a superhero,\" Rio teased me. \"My X-ray vision will vaporize the panties off of unsuspecting stuck-up babes.\"\n\n\"Wasn't there a time when heroes were heroes and villains were villains; none of this gray crap?\" I half-grinned.\n\n\"Zane,\" Rio sounded exasperated and but motherly aka Ma Barker, \"you keep saving girls and they keep kicking you in the teeth.\"\n\n\"I look at it as opportunity to get back up again,\" I smiled.\n\n\"That's called masochism \u2013 look it up,\" Rio sneered.\n\n\"Let's go to my room,\" I said, rather redundantly, as we'd reached the elevator door and I'd hit the button. Rio became oddly close to me as we got on board and even let me wrap an arm around her. For me, being parentless today required I convince Aunt Jill that parking would be a bitch and I'd see her Saturday night \u2013 we had our first Marksmanship outing tomorrow morning in Kentucky so I'd would be back to have dinner with my sole family member.\n\nRio's parents hadn't asked Rio if she wanted them to come. They hadn't made any contact at all, denying Rio the ability to scream at her parents and tell them to 'fuck off'. Adding to the misery, Mercy's parents were here and everyone in our close circle had convinced Rio that being close to Mercy would be disastrous \u2013 in the belief that Rio had poor impulse control \u2013 imagine that.\n\nWhen the end of Assembly sounded and the parents began exiting the building to join up with their kids we proceeded to my Solarium level of the dorm. The parents would meet their girl's friends, teachers the key members of their various clubs. We opened my 'vault' door and Rio led me upstairs then gave a start.\n\nI slipped around her to see what the problem was \u2013 Cordelia Dresden. To her credit, Cordelia and her Time Lord Mafia had either been behaving or doing things in such a sneaky manner as to avoid my notice. Besides the three of us, only three freshmen girls occupied the rest of the floor, leaving us effectively alone.\n\n\"Hi Rio!\" Cordelia led off, \"Zane, I only want you to know you have our full support,\" was her cryptic statement that I was still digesting when Rio hurled herself at the slender brunette. Cordelia cried out as Rio toppled them both to the ground. Rio rose up on her knees and slapped Cordelia across the face.\n\n\"Get her off me,\" Cordelia screamed as she raised her hands to defend herself.\n\n\"What's the fucking secret you're hiding?\" Rio growled.\n\n\"Yank Rio off me right now. Zane,\" Cordelia snapped as she took a second slap to the cheek. \"You know what I can do.\"\n\n\"Cordy, Rio wants to live free or die trying so you might want to consider your next words carefully,\" I shrugged. \"She prefers to exist free of fear. Rio, I'm going to the shake dispenser; do you want something?\"\n\n\"A strawberry shake sounds good,\" Rio smiled as she began pinning Cordelia's wrists down.\n\nOnce she finished that maneuver, Rio glared triumphantly down at Cordelia.\n\n\"Great,\" Cordelia met that glare with one of her own, \"what's your next brilliant plan; a little sexual assault to go with your brazen attack?\"\n\n\"Nope, I'm going to drool spit on your face and ears Cordelia-baby,\" Rio answered then began swirling her tongue in her mouth to gather up her first glob of spit.\n\n\"Zane,\" Cordelia pleaded.\n\n\"Rio, let her up,\" I requested (Rio knew my vocal tones). \"She's agreed to help you with your Mercy problem.\" Cordelia had done no such thing but Rio would need help dealing with her lover's parents and Cordelia could be a powerful ally.\n\nCordelia could lie her way out of things, except she would be lying to me and our trust was a fragile thing. If it was just Rio, Cordy would lie in a heartbeat but I believed I was somewhat special to her. Cordy said nothing and Rio got off of her. It wasn't Rio's style to offer Cordelia a hand up even though she knocked her down.\n\nRio joined me making shakes and grinned evilly.\n\n\"Cordelia, do you want a shake,\" I called over to her.\n\n\"Peach,\" she replied. Somewhat reluctantly she walked over to us. Cordelia, like Rio and me, had no parents coming.\n\n\"So, are you going to tell Zane what your secret is or do we go for the best two out of three falls?\" Rio sneered.\n\n\"Let it be Rio,\" I nudged her. \"It isn't something bad. If it was bad, she would have coughed it up already.\"\n\n\"I don't know what you see in this wacky Whore,\" Rio asked me \u2013 with Cordelia standing beside us.\n\n\"She's Ra's al Ghul to my Bruce Wayne,\" I explained. \"How can I step beyond the streets of my own personal Gotham without her?\"\n\n\"Wait, does that mean I'm Harlequin?\" Rio mused.\n\n\"No, you are the Joker, Rio,\" Cordelia huffed, \"and yes, that makes Mercy Harlequin.\"\n\n\"Cordy, there are times I wish you weren't so evil and manipulative,\" Rio observed.\n\n\"Titles such as Evil, like genius, are the hobgoblin of small minds,\" Cordelia countered. \"Zane sees that, which is why I tolerate the rest of you.\"\n\n\"You just want to play jockey to his thoroughbred,\" Rio snorted.\n\n\"Never said I didn't,\" Cordelia bantered. Rio stole a look toward the door so I leaned into Cordelia.\n\n\"Thank you,\" I whispered. Cordy nodded.\n\n\"Pssst,\" Rio hissed. \"Iona is here with a slightly larger version of herself and two guys who look vaguely related to her as well.\" I looked over and there was Iona pointing what had to be her mother my way. She didn't look furious but she wasn't beaming sunshine and happiness at me either.\n\n\"Scatter,\" Rio whispered. \"Pissed off Momma on the way,\" before dashing off behind the showers.\n\n\"I'm gone,\" Cordelia gasped playfully, took her peach shake and slunk away.\n\n(Iona)\n\n\"Mr. Braxton?\" this conservatively dressed woman with a slight build and shoulder length black hair addressed me. I'd seen a few pictures of her on Iona's Facebook page.\n\n\"Mrs. Beckett, I am Glenn Zane Braxton but please call me Zane. Your daughter is one of my closest friends.\" She seemed to mull that over \u2013 whether to be stiff or to give me a chance.\n\n\"Zane, is there a place we can talk in private?\" she inquired.\n\n\"Absolutely,\" I nodded then led her to the far corner and sat down on a sofa with her so that we could both look out over the changing leaves on campus.\n\n\"Mr. Brax \u2013 Zane, what are your intentions with my daughter?\" she came right out with it.\n\n\"She was my second friend here and constantly supportive of my often precarious situation and she's never asked for anything in return,\" I stated. \"I'd paint her house if she asked me,\" I continued, \"or drive across country to help her move \u2013 she's that great a friend.\" I didn't brag about killing or even hurting someone for her, though I would, because that wasn't the kind of extreme friendship her Mom was looking for.\n\n\"Very well Zane, but I am worried about you and Iona in another way,\" she sidestepped. \"You are an attractive young man and there are rumors that you have several girlfriends on campus.\"\n\n\"I think I can answer the real question with three statements of my own; the only person I have ever called girlfriend is Heaven Vickers, a senior here.\n\n\"I love Heaven's best friend, Christina Buchanan, and they are both aware of our relationship. Second, your daughter is the second-smartest, most level-headed, and most forward thinking young woman I have ever met; you have done a wonderful job raising her,\" I related. \"Lastly, I have offered to have sex with your daughter twice and she's said 'no'.\"\n\n\"You did?\" she studied me intently.\n\n\"And she was naked in bed with me both times. She's seen me have sex, too, but she's decided that when she's ready, she'll ask me and I'll say 'yes' because I'm positive that she will pick the moment when it is right for her and no one else.\"\n\n\"Wha \u2013 what?\" Mrs. Beckett's eyes grew wide. \"Naked in bed with you? And nothing happened?\"\n\n\"Yes but I felt safe because I trust her,\" I said calmly. \"You have to admit she is diligent and organized and she's not going to simply jump feet first into anything.\"\n\n\"I have to admit I was afraid you were taking advantage of my daughter's kind nature but you seem oddly frank about everything you two have done. I admit I expected you to be...more deceptive and evasive,\" she mused. \"Do you have sex with any of the girls on campus?\"\n\n\"Tons though, thankfully, things eased off with midterms approaching,\" I smiled.\n\n\"Is that so,\" she said in a clearly questioning tone. \"I want you to understand that Iona thinks the world of you. She writes home every day and you often figure in her experiences \u2013 though I knew she was editing some things \u2013 like why she appears to be friends with Ms. Talon.\"\n\n\"When we started out, Rio and I were doomed to be expelled but Iona joined with us and together we survived some really rough times.\"\n\n\"I recall getting several letters from the Chancellor from that time. Was Iona in any danger?\" she asked.\n\n\"Yes, she got a pair of bloody knees but please believe a whole lot of us were looking out for her,\" I responded. \"Trust me, Ion has a fair number of friends who appreciate her numerous qualities.\"\n\n\"Mom,\" Ion called out as she came over. \"I hope Zane hasn't been scaring you.\"\n\n\"Iona, it is only that you didn't have many friends in High School,\" her mother smiled at her daughter.\n\n\"Mom, I had no friends in high school but Zane gave me the courage and opportunity to come out of my shell,\" Iona interrupted.\n\n\"Zane says you two have been sleeping in his bed \u2013 naked,\" Iona's mother met her daughter with an even gaze.\n\n\"Yes,\" Iona blushed furiously, \"but I bet he's also informed you that we haven't had sex,\" she leaned into her mother, \"and there he lied.\"\n\nMrs. Beckett stared at me, a bit peeved.\n\n\"Mom, that is only because what Zane considers sex and what you would consider sex are two slightly different thing. Suffice it to say, I am still a virgin as far as the marriage bed is concerned,\" Iona assured her parent. \"And I have Zane well in hand because I have control of his phone.\"\n\n\"I keep telling you that smarts count for more to in life than a model's good looks,\" Iona's mother reminded her daughter.\n\n\"I'm glad Iona has both,\" I chimed in. Both women looked my way then grinned.\n\n\"He is such a good friend Mother that I forgive his exaggerations,\" Iona reached over and kindly touched my cheek.\n\nAs that gesture ended, Iona's face grew shocked.\n\n\"Mom, I think we need to go see Mrs. Worsham's class now if we are going to get everything taken care of before lunch,\" Iona hurried her mother.\n\n\"It was nice to meet you Zane,\" we shook hands as we both stood as well.\n\n(Hope)\n\nI followed Iona's gaze and my heart stopped. It was Hope, looking so doable in her school-wear. With her were a petite woman, smaller and maybe a bit heavier than Hope, three more little Hope's in descending age and lastly, a male version of Hope, but this one was made out of Lego bricks \u2013 really big Lego bricks \u2013 it was Yeong Song.\n\nYeong Song had charisma in spades; he wasn't the Angel of Death \u2013 he had grabbed that punk by the short and curlies and taken over his job. That was how he appeared to me at that moment. Oh yeah and he was looking right through me. As if on cue, Hope smiled and whispered something to her father and they both came my way.\n\nImagine a choreographed interpretive dance troupe; you had Hope's three younger girls spread out over the middle half of the room, having fun with some of the few freshmen girls that were hanging around. Yeong was like his eldest daughter in the way they moved \u2013 you could tell they were walking toward you but I couldn't recall their feet moving or even hearing footfalls. \n\nThat was probably just my fear speaking. From personal experience I knew Hope was human with all our frailties and imperfections \u2013 she was simply more perfect than most.\n\n\"Father, this is my good friend Glenn Zane Braxton, who is known by the name Zane to both his friends and enemies,\" demurred Hope.\n\n\"Zane, this is my Father, Major of the Republic of Korea \u2013 retired \u2013 Yeong Song,\" she introduced her father to me. I extended my hand, he took it in a granite grip and gave it two sharp shakes. I stood there like an idiot but at least my heart was beating and I was breathing again.\n\n\"Your pulse is racing young man, your palms are sweaty and you are staring at me with dilated pupils,\" Yeong noted dispassionately.\n\n\"Well, since I've lain down with your naked daughter for a variety of bedroom antics on several occasions I naturally assumed you had come here to kill me,\" I blathered.\n\n\"You have been naked with my eldest daughter,\" he said in a way that could be contrived as a statement or a question.\n\n\"You didn't know?\" I groaned. I wondered if this counted as suicide.\n\n\"You have honorable intentions toward my daughter,\" he informed me. Huh?\n\n\"No,\" I gulped. \"I was thinking we could fool around \u2013 mainly.\"\n\n\"I understand you are the last of your line,\" he glared at me. Uh oh...wait.\n\n\"You know who I am so you must have already been told by Hope what's really been going on,\" I breathed a sigh of relief.\n\n\"See Father, Zane's not dense,\" Hope hugged her father's arm, \"he's simply terrified of you.\"\n\n\"I noticed,\" Yeong (almost) smiled. \"Mr. Braxton, I don't mind you seeing my daughter socially but please learn at least to fight as well as my youngest daughter \u2013 she's nine.\"\n\n\"You learn from people who are better than you, not from people you are better than,\" I tried to interject some wisdom into my pretty abysmal effort to date.\n\n\"Daddy,\" Hope pleaded hopefully.\n\n\"Mr. Braxton do you know the difference in combat between you and a highly skilled warrior?\" Mr. Song said in an eerie penetrating voice.\n\n\"Ten years?\" I shrugged because I didn't have a clue what the answer should be.\n\n\"No Mr. Braxton,\" he came on with that nightmarish calm, \"you don't know when to stay down.\" Now I was a little pissed. Being able to take a beating was one of my few martial qualities.\n\n\"You are wrong,\" I let my anger seep through. Hope's face lost all expression.\n\n\"You always get up \u2013 you never stop fighting until you can't anymore,\" I grumbled. \"If that means I have to break your Precision Hands of Death on my face, so be it.\" Yeong Song turned to regard his daughter; he finally let my hand go.\n\n\"He'll do,\" he told Hope, turned and walked toward where his youngest daughter was playing.\n\n\"What was that about?\" I whispered to Hope who looked equally confused.\n\n\"I don't know \u2013 except \u2013 I believe he decided you would lay down your life for me,\" Hope studied my face as she finished that conclusion.",
        "\"As the old paraphrased saying goes 'I would rather kill for you' but yes, I guess would risk death to keep you safe,\" I smiled affectionately. \"You are my friend.\"\n\n\"You are lucky so many of your friends are better trained than you are,\" Hope snorted in amusement, \"or you might not live long enough to graduate from this place.\"\n\n\"Yes,\" I snorted back, \"that's my grand strategy: hang out with girls who can beat me up.\"\n\n\"Stick with it,\" Hope nudged me, \"it seems to be working for you.\"\n\n\"If you see my wounded ego crawling around today; kill the poor bastard and put it out of its misery,\" I joked back.\n\n\"Oh, do you know that guy Vivian is bringing this way?\" Hope nodded toward the kitchenette.\n\n\"That has to be Vivian's boyfriend,\" I groaned. \"This is likely to be less painful than your dad but more humiliating.\"\n\n(Vivian)\n\n\"I'll be close by in case he starts beating on you,\" Hope winked before slipping away.\n\nVivian and the somewhat reluctant young man entered the cube-ish area where my sofa and several chairs looked over the campus. We both extended hands simultaneously.\n\n\"I'm Thomas Wayne Meyers,\" he said and gave me a strong grip. He was brown-haired, fairly well built and clearly could have been happier.\n\n\"Hi Thomas \u2013 may I call you Thomas \u2013 I'm Zane Braxton,\" I jumbled a sentence together.\n\n\"Vinnie has told me some things about you,\" he began.\n\n\"Listen,\" I broke in, \"it's all my fault \u2013 I took advantage of her so please don't be angry with her because she's one of the nicest, sweetest women I've ever met.\" The guy blinked.\n\n\"Vinnie told me she took advantage of you since she was your official guardian,\" Thomas went from being uncertain to appearing amused. \"More like she tried to take advantage of you but you resisted.\"\n\n\"Oh come on,\" I threw up my hands, \"that's not even remotely believable. Vivian is hot; we both know she's hot and I'm way far removed from a monk of any stripe. If Vivian threw herself at me, I'd be all over that in a heartbeat.\"\n\nVivian snickered and Thomas returned to confused for a moment then laughed too.\n\n\"I appreciate your honesty Zane and I agree \u2013 I'd be all over that too, but I'm willing to wait for our wedding night,\" Thomas confided in me. How much of their history he knew Vivian had related to me was uncertain. I knew of his mistake but it wasn't my place to bring that up.\n\n\"Cool, let me know when and I'll throw you the bachelor party,\" I offered.\n\n\"Oh Hell no!\" Vivian squawked. \"The last thing I need on my wedding day is to get a phone call from Thomas in some South American jail telling me he needs bail money.\"\n\n\"Come on Vivian,\" Thomas chuckled, \"it might be nice to have someone along who knows how to throw a real party.\"\n\n\"No,\" Vivian shook her head, \"Zane \u2013 parties \u2013 prison; they all happen way too often.\"\n\n\"Hey now,\" I pretended to be offended, \"I'll have you know that my record has improved. Now 60% of my dates are law enforcement free and I'm getting better.\"\n\n\"Seriously?\" Thomas looked from Vivian to me.\n\n\"Zane, how many of the police officers between campus and downtown Lancaster know you by your first name?\" Vivian grilled me.\n\n\"Ummm \u2013 those two guys who patrol the Southwest side of campus \u2013 I don't know them,\" I answered honestly. \"But I know just about everyone else.\"\n\n\"No Thomas, he is not planning your bachelor party. He is highly irresponsible, insanely rich and hangs around with scurrilous friends,\" Vivian informed her beau.\n\n\"I hang around with you,\" I point out.\n\n\"I am assigned to hang out with you,\" Vivian reminds me.\n\n\"Would you stop hanging out with me if someone was assigned to replace you?\" I inquired.\n\n\"No way,\" she winked then motioned about the room, \"I'm not giving up all this for a small two bedroom dorm room. I'm not an idiot. If I want a soda, or orange juice or a fruit pastry at four in the morning, they are right out here, plus I never sleep alone so I'm always warm.\"\n\n\"Who do you sleep with?\" Thomas stuttered, half expecting more boys to come out of the woodwork.\n\n\"Mainly Barbie Lynn Masters and Valarie Palmer,\" Vivian replied. \"Don't' worry Thomas,\" she stroked his arm, \"I'm not turning into a lesbian or even bi-sexual.\"\n\n\"They are like sisters that make me feel safe, except they are sisters who don't resent me being the oldest or who steal my stuff,\" Vivian added. Thomas eventually looked back to me.\n\n\"Do you ever touch the wrong woman at night? In bed,\" he clarified.\n\n\"Define the wrong woman because the thing I like most about being in my bed is the faint hope that I'll get an uninterrupted night's sleep,\" I responded.\n\n\"I mean, are the other women with you so much better looking than Vivian that...\" he started to say.\n\n\"Stop right there; women aren't something you place on a scorecard going from one to one hundred. How do you compare the shapeliest thighs with perfect hips, or a dazzling smile against the richest lips?\" I quizzed him.\n\n\"Thomas, if I roll over at night and groggily rest my hand on the small of Vivian's back \u2013 trust me, I will know the difference between her and other women \u2013 I'll apologize and move away. The overriding aspect of our relationship is my respect for her,\" I told him. \"She's a good Christian woman and she's my guardian and nothing else compares to that.\"\n\nHe studied me and nodded. Vivian smiled at me and I could tell this was going about as well as she expected it to. Sure her boyfriend was going to stay a bit jealous but that was probably a good thing because he was pretty good-looking too. My phone rang which was unusual because Iona usually caught such things.\n\n\"Hello?\"\n\n\"Mr. Braxton, this is Ms. Reveal. The Vice Chancellor requests that you pick up three lunches from the Dining Hall and show up at her office at 12:10 pm today,\" Marisol informed me.\n\n\"Sure Ms. Reveal \u2013 will you want the flounder or the vegetable soup?\" I asked. Iona was good at keeping me up to date on important things \u2013 like food and Pay-per-View events.\n\n\"I'll get the soup and an extra helping of okra,\" she answered.\n\n\"Done deal,\" I signed off and found him looking at me.\n\n\"Are you a part-time ma\u00eetre de?\" Thomas seemed amused.\n\n\"Long story/short version \u2013 I occupy a position here called 'Mediator' and it requires me to make certain student body suggestions and to check in with the Vice Chancellor,\" I explained.\n\n\"Vivian, do you have a job title? That could look good on a resume,\" Thomas pointed out.\n\n\"Chief Zookeeper,\" Vivian delivered deadpan.\n\n\"I was going to say Animal Wrangler but that might be more of Mercy's job description,\" I smirked. Vivian rolled her eyes.\n\n(Barbie Lynn)\n\n\"Zane,\" Barbie Lynn called out. Thomas turned around and stumbled.\n\n\"Oh Good God,\" he rasped as he took in a bevy of beauties and one young man. One was obviously Barbie Lynn looking every bit as scrumptious as when I chased her down the stairs this morning. She was coming our way with enough titty tantalization in her movements to cause all kinds of circulatory problems.\n\nVivian elbowed Thomas in the ribs to remind him of who he was here with.\n\n\"Hey Barbie Lynn,\" Vivian and I said together.\n\n\"This is Thomas Wayne Meyers, my betrothed,\" Vivian added.\n\n\"Hey everybody,\" Barbie Lynn turned to present her silhouette looking so good I nearly missed what she said.\n\n\"This is my younger brother, Jefferson Davis Masters and his twin Laramie Persephone and my Mother Savannah Belafonte Masters,\" she introduced her family, \"This is Vivian Philips and Glen Zane Braxton but he goes mostly by Zane.\"\n\n\"Hi,\" Thomas and I said somewhat dreamily.\n\nSee, Barbie was a hot-looking woman just past twenty but nature had been bountiful to all mankind in more than two ways. \n\nLaramie was seventeen going on eighteen and a firecracker blossoming into a high explosive. Her hair had a bit more body to it than Barbie's, her face a tad thinner but that made her lips all that much more luscious. Her physique was just as sporty and by the shapeliness of her legs I could tell her sports excursion of choice was Soccer.\n\nSavannah Belafonte (to be forever seared into my mind as Southern-belle-o-fuck-me) because her cup size was two bigger than her eldest daughter's but childbirth had widened her hips proportionally. Her body was a work of art so lethal that it would kill a Le Mans victor \u2013 off the track, fucked in the bedroom all the way to Heaven by way of Utopia with his trophy used as an ice bucket for the champagne.\n\nShe seemed delighted to see me and I knew I was delighted to see her.\n\n\"Why Mr. Zane, my Barbie Lynn has told us so many wonderful things about you,\" she sounded so sugary that the honeyed words flowed off her tongue in a manner that was barely coherent. Also, her eyes flickered to the shower where I'd nailed Barbie Lynn repeatedly for forty minutes not all that long ago. Next to me Thomas grunted something that sounded like 'hello'.\n\n\"I'm sure she's exaggerated to my betterment,\" I pulled that banter out of my tush \u2013 my brain was suffering catastrophic blood loss.\n\n\"I can't wait to live in this dorm next year,\" Laramie came across with a nearly a molasses like drawl as well. \"Zane, will you let me use this room next year?\"\n\n\"Dude! This is your room?\" Jefferson perked up. \"Mom, I have to come here next year!\"\n\n\"Um, yes Laramie, I'm going to hold this room open to every girl \u2013 and perhaps guy \u2013 in the dorm. I don't need much space,\" I said, \"so keep out of the way of housekeeping and we are good. Also, you are immune from Handmaiden's Duty while here.\"\n\n\"Oh, I was thinking about the game stations, satellite dishes and cable hook-ups,\" Jefferson added. Jefferson Davis \u2013 that name rang a bell.\n\n\"Come on now Honey, a man can't go to a women's...\" Savannah let that sentence die unfinished. For me it was keep the lone male status quo or to get a good night's sleep'.\n\n\"Mrs. Masters, I offer a thin hope for your son; if your daughter could line up some upstanding seniors and juniors, he might slip in under the Zane Exception to the enrollment policy,\" I told her.\n\n\"You'd do that for Jeff?\" Savannah took off her sunglasses and bit one of its arms.\n\n\"Ma'am, I'd wrestle an alligator blindfolded for your daughter. I would certainly put in a good word for her brother,\" I smiled. I had no idea how tough alligators could be but I knew about crocodiles and those were some mean mothers in their own right. Still, faced with alligator wrestling or no butt-sex with Barbie Lynn, I was getting a belt, handbag and new shoes, damn it.\n\nThe odds of getting Jeff in were long \u2013 Victoria barely suffered Heaven being around and it would take an act of the Southern Baptist Convention to bring in a male to replace me when I was gone.\n\n\"It would give your Father another option for Jefferson if you could do this Barbie Lynn,\" Savannah politely replied.\n\n\"That would be great,\" the kid rejoiced. Yes, he was a fully functioning teenage male.\n\n\"Zane can move mountains when he sets his mind to it,\" Barbie Lynn winked at me. Thomas saw it but was caught off-guard.\n\n\"Let me show you my bedroom,\" Barbie offered her kin. They turned and the women sashayed away while Jeff had an almost run-in with Raven and 'company'. Each woman shot a look over their shoulder and smiled at me at some point along their journey which boded trouble.\n\n\"I apologize Zane,\" Thomas mumbled. \"I thought, deep down, you were weak for submitting to your lusts. Now...I don't \u2013 I don't think that anymore.\"\n\n\"Don't sweat it,\" I smiled. \"It is only another day for me ending in 'y'.\"\n\n\"And don't you be forgetting about me and how tough it has been resisting Zane,\" Vivian warned the man she was hoping to marry.\n\n\"A wife should obey her husband,\" he started, \"and a husband should know when to shut up.\"\n\n(Lunch and what comes after)\n\nI dropped Ms. Reveal's lunch off with just enough sassiness to make her smile and believe that our bad episode was behind us. She sent me to the Vice Chancellor's office a minute later and while Dr. Victoria Scarlett was conversing over the phone, I felt comfortable to set her meal up in front of her and mine across her desk.\n\nVictoria only had this canned ice tea in her mini-frig so I swiped two and set one before her and opened mine. I wasn't exactly sure what it was \u2013 it was pretending to be Southern Ice Tea and I pretended to like it. The best thing I could say about it was it was cold. This was our fourth \"working\" lunch where she would insidiously fill my head with her philosophy and I'd causally remind her that women ran this government, not me; I was a figurehead.\n\n\"What are you doing for New Year's Eve?\" she inquired as she daintily cleaned off some crouton crumbs on her cheek. Her look was very intense. I wasn't getting 'quite' sexual signs from her but something \u2013 somehow this was personal. That could only mean one thing.\n\n\"I'm spending it with Ms. Rio Talen but no set location has been chosen,\" I replied.\n\n\"Oh,\" she paused then, \"There is a Science Fiction convention in Seattle that runs from December 29th to through the 1st. My friends and I are attending and Hical asked about you.\"\n\n\"Deal but we have to fit Rio in,\" I agreed.\n\n\"I can send some Universe, TV and movie series and well as costuming information for her to look over,\" Victoria agreed tentatively.\n\n\"No need \u2013 she's a Klingon \u2013 a small craft captain whose Father betrayed the Empire and whose survival is a stain on her honor,\" I told her. \"With that barely constrained fury, she's a natural. You teach her how to use that bat-a-rang and,\"\n\n\"Batleth,\" Victoria interjected.\n\n\"Wicked-curved-bladey thing,\" I continued, \"and you'll see. Oh, I'll need an Orion Slave Girl outfit and some green body paint for Mercy and all of her stuff by October 30th \u2013 cost is not an object.\"\n\n\"I'll call my outfitter when you leave and I must say you are taking this rather well,\" Dr. Scarlet noted.\n\n\"Why? I had a blast in your office that time,\" I admitted. \"As long as I'm not crawling in screaming fur-balls, I'm okay. I'll be a human Starfleet Doctor/Xeno-biologist who has done surgery on multiple species. A \"Doctors Without Borders\" kind of guy. I'll get Cordelia to build me an actual tricorder \u2013trust me.\"\n\nWe ate, she asked for my sizes, I gave her Rio's and Mercy's sizes; at the Con we were all 'Next Gen' except Mercy who would be Old School for Halloween. She offered me a chance to be a Borg but since they all looked to be in desperate need of a sun tan, I declined. All in all, it barely took twenty minutes.\n\n\"You did a very good job as Mediator this morning,\" the Vice Chancellor added as I made to leave.\n\n\"It is not so rough,\" I grinned. \"WWKSD?\"\n\n\"Wha \u2013 oh,\" she smiled warmly. \"What would King Solomon do \u2013 clever.\"\n\n\"Hell, the Bible has a whole book called Judges. This shit ain't so hard,\" I laughed as I breezed out the door. Ms. Reveal was waiting, as was Heaven.\n\nHeaven had to exert some will to not kiss me on the spot. Christina had lectured us on PDAs \u2013 public displays of affection \u2013 during Homecoming. The more people who knew about us, the more the outcry and the stronger Chancellor's radical decision to keep Heaven on as part as the student body would be challenged. As it was, our hands would casually brush one another until we got inside my dorm where I chased Heaven up the stairs, pinching her ass every time I caught up.\n\nAfter entering my code, I gauged Heaven's mood deciding we needed some quiet time; there would be too much traffic over most of the floor (and Heaven being too vocal) to get away with sex and cuddling would be fine anyway. I caught sight of Rio with one of my Marksmanship team mates, Genesis.\n\n\"Hey Zane,\" Genesis stood up. She was a weird one \u2013 going from borderline contempt to grudging respect over the last two weeks. If I didn't know the impossibilities, I'd think she had a boyfriend. \"Hope wants everyone at the Amory for an equipment check at seven. We leave at 8:15.\"\n\nHeaven held my hand tightly.\n\n\"Boudoir occopodo,\" Rio snickered as Genesis made her exit.\n\nHeaven's grip nearly crushed my hand, ouch.\n\n\"Babe,\" I whispered to Heaven, \"let me check this out.\"\n\nI disentangled myself and went for the wall of screens that separated my bedroom area from the rest of the floor.\n\n\"Get some popcorn and get ready to sit a spell,\" Rio joked to Heaven who grumbled. I went around to see who, or whom, were using my room.\n\nInside was not what I expected. Savannah Belafonte Masters had taken off her top (which was peach) and was rummaging with growing frustration through Barbie Lynn's bra drawer. I saw some grape juice splashed on her beige skirt. She saw me, pulled up her shirt to cover her bra-covered assets while looking a bit fearful and upset.\n\n\"What are you doing in here?\" she asked softly.\n\n\"It is my bedroom,\" I replied. \"What are you doing in my bedroom?\"\n\n\"But \u2013 but Barbie Lynn's stuff is in here,\" she gasped.\n\n\"That would because it is her room too \u2013 we sleep together,\" I answered. That slowed her up for a second. \"Can I help you with something?\"\n\n\"I...I \u2013 I spilled juice on my shirt,\" she began.\n\n\"And your skirt,\" I pointed out.\"\n\n\"Oh no,\" she choked back a sob. \"What am I going to do? I'm a mess and none of Barbie Lynn's bras, shirts, or skirts are going to fit me.\" I mused over that for a second.\n\n\"I've stashed some bra extensions around here somewhere and that should allow for the difference is sizes between you and Barbie,\" I said. \"Now give me your skirt and I'll find a replacement.\" She hesitated so I added. \"I'm not going to molest one of my best friends' mom, Savannah. Give me your skirt and I'll take care of everything.\" This time she did it though I had turn my back.\n\nI padded back out to Rio and Heaven who had just returned with the popcorn.\n\n\"Rio, Heaven \u2013 I need you to break into Chancellor Bass' residence and steal a skirt like this,\" I offered up Savannah's.\n\n\"Hell yeah,\" Rio exulted. \"Time for a little B&E.\"\n\n\"Oh, what the fuck,\" Heaven shrugged. \"Count me in.\" She gave me a quick kiss and the two miscreants headed out on their nefarious mission. I went back to the bedroom and stumbled into Savannah, now with her bra off, eyeing two of Barbie Lynn's double barreled slingshots. Our eyes locked.\n\n\"Right,\" I spun away. \"Bra extensions.\"\n\n\"Zane, do you think I'm attractive?\" Barbie Lynn's Mom asked.\n\nWhen women say that they can mean three things; the truth, the lure, or the lie. Some women want to know if you find them attractive. Others want you to find them attractive for nefarious means. Lastly, a few woman want to be reminded that they are beautiful. Savannah was the latter.\n\n\"If you are asking me if you are as good looking as Barbie Lynn, Mrs. Masters, I'll have to say no but that's because you are a lady who is fully a woman and Barbie Lynn is still leaving some of the girl behind. There is no comparison. You are both hot,\" I affirmed.\n\n\"I don't know,\" she sighed. \"It is with my husband then seeing you and Barbie Lynn - in the shower...\"\n\nWhat's wrong with you and your husband, if I may intrude?\" I asked.\n\n\"He had an accident at work \u2013 one of his factories \u2013 and he hasn't been the same,\" she sniffed.\n\n\"Do you love him?\" I questioned. \"Honestly.\"\n\n\"Yes \u2013 yes I do,\" she sighed. \"But he's just not there.\"\n\n\"Do me a favor; come over and sit next to me and I promise to be as well behaved as a Montana Miner (hey, it is where my family comes from),\" I said as I sat at the foot of the bed. Savannah very, very reluctantly came over and sat at my said, but I said nothing.\n\n\"Yes,\" she broke down and inquired finally.\n\n\"I want you to laugh,\" I related to her softly. \"Laugh \u2013 laugh like you do with small kids.\"\n\n\"But, I'm not sure,\" she began then I poked her in the ribs. \"What?\" So I tickled her under her arms. Savannah cover her breasts by mistake so I got some finger in and began making her giggle and squirm.",
        "\"Stop it,\" she gasped for breath so I rolled onto my side and tickled her other underarm until she finally flailed in surrender.\n\n\"See Savannah, I'm not the bad guy,\" I grinned. \"I'm not seducing you because I think you love Barbie Lynn's Dad and you simple need to worry a little bit less and love yourself a little bit more.\"\n\n\"How do I do that?\" she panted.\n\n\"I want you to try on some of Barbie Lynn's new clothes and see what you like \u2013 and what your husband might like,\" I suggested. \"I'm not asking you to dress like a teenager but not every day is Sunday school either.\" Oh God, I was talking clothes therapy to someone's Mother.\n\n\"But,\" she stammered.\n\n\"There is a screen right over there,\" I pointed out, \"that you can change behind and the armoire has a mirror.\"\n\n\"But I'll be parading around her in my bra and panties,\" she worried.\n\n\"Well, that's a bonus for me,\" I shrugged, \"but a lady with a body like yours should be wearing bikini's with less material \u2013 look at it that way.\"\n\n\"Well, don't ogle, alright?\"\n\n\"Sure,\" I lied. What was I going to say? 'I'll pluck out my eyes?'\n\nAfter several tentative steps walking to the dresser and looking over her shoulder at me with really worry that I might find her either too attractive or not attractive enough, I gave up. I covered my eyes because they gravitated toward her backside like a plant seeking he Sun. A minute later she finally spoke up.\n\n\"I can't find anything that I think will fit,\" she said in desperation. I had the answer to that; I went up and picked out the clothes Barbie Lynn wore to the concert a few weeks back.\n\n\"I can't wear this,\" she gasped in fright.\n\n\"Barbie Lynn wore this to a social function,\" I assured her. \"It is perfectly fine and you aren't going to leave here in it, only try it on.\"\n\nYou see, the beauty of this pants/halter top combination was the lacing. I knew it would fit her but she'd be showing a bit more flesh than Barbie had. She looked mortified when she stepped from behind the screens and a little better when she saw herself in the mirror. I withheld my comment until she looked at me.\n\n\"I'm dressed like a hussy,\" she stated sadly.\n\n\"No; a hussy dresses like that when she goes to the supermarket. A wife wears that around the house to remind her husband he's a man and that she's his woman.\" Caveman mentality. Savanna gave her reflection a second, longer glance. This time she took in the sides, and dare I say, her ass; all of which were smoothed out and pulled tight by the leather.\n\n\"My ass looks younger,\" I caught her whispering to herself.\n\n\"My Boobs appear like they are about to bust free,\" she addressed me once more.\n\n\"Yes Ma'am \u2013 yes ma'am they do,\" I smirked. \"That is the whole purpose of the design of the shirt but I assure you Barbie Lynn hasn't had one escape yet.\"\n\n\"Oh, that's nice,\" she went back to looking at herself in the mirror.\n\n\"Now there are some nice shirts in their as well as some \u2013 short \u2013 skirts,\" I directed Savannah. She came out in the first shirt trying to make the buttons hook but they wouldn't. I came off the bed and helped her. That is, I left most of them unbuttoned.\n\n\"But they \u2013 my husband can see my bra,\" she worried.\n\n\"Mrs. Savannah, that would be the point,\" I nodded. \"Let him get a peek of the bra.\" We both heard the quiet footfalls and it couldn't be Heaven and Rio back so soon. Savannah froze and I reclined passively on the bed.\n\n\"Mom \u2013 Zane?\" Barbie Lynn gazed back and forth.\n\n\"Baby-Child,\" Savannah blathered.\n\n\"Wow Mom,\" Barbie clasped her hands in approval. \"The golden shirt with the plum bra is a wonderful combination for you.\" See, I trusted Barbie Lynn more than her Mother did. \n\n\"I was trying on some clothes and \u2013 um \u2013 Zane was helping me,\" Savannah gulped.\n\n\"Oh Mom, don't worry about it,\" Barbie hugged her mother, \"Zane sees eight girls getting dressed every morning. He's used to it.\"\n\n\"Oh...\" she trailed off. \"So he's safe?\"\n\n\"I'd never say that,\" Barbie Lynn glanced back my way and licked her lips. \"But he's a good friend and I think that's more important. Let's try on this next; the black leather will look good with the knee boots.\" \n\nIt continued like this for a while. Rio and Heaven slinked back in with the now rather redundant set of conservative attire. We retreated to the head of the bead with Heaven snuggling next to me and Rio right beside her. Heaven and I shared a pillow \u2013 on our laps.\n\n\"Do you think they have any idea that we're all bi-sexual,\" Heaven whispered as Barbie Lynn was prying Savannah into a red bustier.\n\n\"Momma Mia,\" Rio hissed. \"Those are some mounds. Big fluffy mounds.\"\n\n\"Seriously,\" Heaven nudged us both, \"I'm going to need a blowjob if this goes on much longer.\" I moved my hand behind Heaven, worked it up her skirt and up against her panties until I was giving her bunghole quite a workout.\n\n\"Fine,\" Heaven ground out. \"You can fuck me but I'm coming all over the sheets damn it.\"\n\n\"What was that?\" Savannah called out. \"Do you think this is too much?\"\n\n\"Oh no Mrs. Masters,\" Heaven gulped. \"If I wasn't totally into guys I would think you look \u2013 delicious.\"\n\n\"Why thank you Ms. Vickers,\" Savannah smiled.\n\n\"And if I wasn't totally into guys I'd have you chained to this bed and be ripping your clothes off right now,\" Rio added gleefully.\n\n\"Oh \u2013 huh \u2013 thank you?\" Savanna responded more cautiously.\n\nWhen Barbie Lynn \u2013 now totally torturing us \u2013 convinced her mother to wear a thong and a short skirt something had to be done. I reclined sidewise on the bed while Heaven built a pillow fort behind me and Rio dove under the covers to suck my feisty transvestite off. It was a half-assed endeavor and a minor miracle that nothing went wrong.\n\nFinally Heaven yanked my shoulder back and took a big bite out of it. I could hear Rio slurping up Heaven's cum and prayed the others couldn't.\n\nIs everything okay?\" Barbie Lynn called out.\n\n\"Heaven's got a muscle cramp but we are working it out,\" I fibbed.\n\nSecond later, Rio's tussled head reappeared and she punched Heaven in the ribs.\n\n\"Shit Bitch,\" Rio scooped up some errant semen with her finger, \"Have you been holding that up all week long. You nearly choked me.\"\n\n\"Why don't you come by every morning and we can work out an installment plan?\" Heaven shot back quietly.\n\nRegrettably, Savannah noticed our...acquisitions and reluctantly put them on but I caught sight of her running her hand over some of the racier things left lying around before she and Barbie Lynn left. I had barely gotten outside with Heaven and Rio to see if I was needed when a squeal manifested right behind my ear and a body slammed into me, bowling me over.\n\n(Paige)\n\n\"Lover!\" Paige greeted me. \"Mom, Dad, this is my boyfriend Zane.\"\n\nNow, I was on my back, on the floor with Paige in my arms and with her skirt flapping far, far too up her butt when darkness descended on my world. It took me a moment to realize that the two Joten standing behind the sofa were her parents \u2013 they were freaking HUGE! Her Dad alone looked like he played two simultaneous positions on an NFL team.\n\nPaige's Mother was dainty only in comparison to her husband. Not that she's fat \u2013 oh no, this woman was simply big boned and brawny. I had to ask myself: what happened genetically?\n\n\"Zane, I want you to meet my parents,\" Paige studied my face.\n\n\"Sure,\" my smile wasn't too forced, \"but you have to remember to give me a kiss for luck for tomorrow's match.\"\n\nWe rose up and my arm easily wrapped around Paige's waist. Mom and Dad seemed guarded and wary.\n\n\"What game do you have tomorrow?\" the Dad (Roger) finally asked.\n\n\"Marksmanship Sir. I'm the spotter to the team captain, Hope Song,\" I smiled. \"I'm Zane Braxton, by the way.\" I can do this. I mean, how many other girls here think they have their hooks in me?\n\n\"We have the impression that you and our daughter are \u2013 romantically involved,\" her Mom asked me. It was the way she stated it in disbelief that astounded me and pissed me off, as if big healthy strapping guy like me would choose their 'flawed' daughter.\n\n\"Paige is an upperclassmen so mainly we hook up for the hours of hot sex,\" I pulled her close.\n\n\"Come here, you,\" I turned and looked down at Paige she pushed up and kissed me deeply.\n\n\"What are you doing with my daughter?\" Roger rumbled.\n\n\"I'm kissing my lady,\" I smiled at him, \"What does it look like I'm doing Sir?\"\n\n\"I don't know what you think you are going to get out of this,\" he snarled.\n\n\"Paige,\" I addressed the sultry albino who was all but humping my leg at this point, \"what do I get out of your relationship?\"\n\n\"Hot steamy White Russian sex,\" she purred in a Russian accent. Yes, this side of 'poor pitiful Paige' was new to her parents.\n\n\"But our daughter can't,\" the Mom stumbled verbally.\n\n\"Oh yeah, and I'm taking Paige with me on a cross country motorcycle trip this summer,\" I kept grinning. \"I hope you don't mind \u2013 she's our computer tech and back-up bar bouncer.\" Maybe the bar-bouncer bit was too much.\n\n\"She'll get hurt,\" Roger sputtered.\n\n\"Ah, I bleed more than she does and there will be a dozen of us so if she kicks someone's ass and ends up in jail we'll be able to bail her out,\" I kissed Paige's forehead.\n\n\"Baby \u2013 Paige,\" Roger muttered softly. \"How about we talk about this?\"\n\n\"Sure thing Daddy,\" Paige agreed. \"Zane, I'll catch up with you before you head out for the tournament.\" I swatted her ass, in full view of her parents, which Paige loved. She sauntered off like a woman victorious.\n\n\"You are such an idiot,\" Rio snickered in my ear. \"That girl is a nut-bag and you are feeding her dynamite.\"\n\n\"Speaking of feeding someone some dynamite,\" Heaven took my hand.\n\n\"No one seems to need me at the moment,\" I squeezed her hand back. \"Let's run for it!\" and we raced for the bedroom like lovers possessed.\n\n(Heaven)\n\nI lay between Heaven's legs, her thighs arching up against my own. She wiggled her hips against me and her cock against stomach. I bit down at her nose but she laughed and turned her face away so I nipped her proffered neck instead.\n\n\"Ooohhh,\" she gasped. To show me how much she liked it, she rotated her hips, rubbing my cock around inside her.\n\n\"My Honey likes?\" I teased.\n\n\"You know I do you bastard,\" she panted. \"Nice, slow and hard.\"\n\nI withdrew my penis and then eased it back into her depths. Heaven hisses out her pleasure and with her hands on my shoulders she pulls me in tight.\n\n\"God, I love you,\" she whispered to me.\n\n\"I love the woman grinding up against me too, Heaven,\" I smiled to her. She hiccupped in passion then began thrusting harder up against me until I could feel her ready to erupt. I took hold of her shoulders and begun pounding her in sympathetic penetrations.\n\n\"God Damn!\" she seethed into my collarbone. Dampness flushed up my stomach and onto my chest to the very edge of my neck. Face to face sex really appealed to Heaven and she was really shooting off hard because of it. I slowed down; I hadn't ejaculated yet but I didn't want to wear her down while I worked up to it.\n\n\"Oh no you don't,\" Heaven gasped. \"I \u2013 I know what you want,\" she giggled weakly. Heaven struggled against my hold.\n\n\"You don't have to,\" I said softly.\n\n\"I want to you dummy,\" she kissed me. \"Now let go and I'll roll over.\"\n\n\"No, let me,\" I related before I leaned in for a French Kiss full of need. She gave one more surge of defiance then relaxed. Then I shifted my arm down until I reached the back of her left knee. I pushed it up until she passed my hip. Heaven was glowing with anticipation. I was folding her up and then I was going to pound her thoroughly and fully.\n\nHeaven brought up her right leg all on her own but the real gift was the way she arched her back in ecstasy when I bottomed out in her with all the muscle power I could muster. We held eye contact as I drove into her time and time again. A tear escaped her eye and scarred her cheek.\n\n\"Babe?\" I worried and slowed down.\n\n\"I'm happy Zane,\" she breathed deeply. \"Happy.\" I resumed my energy and the very essence she was lending me set me off by surprise.\n\n\"Oh God,\" I gasped and gave her my seed. Heaven bit her lower lip as I sizzled up her rectum with my hot semen. A smile must have etched my features because Heaven became quizzical.\n\n\"What are you thinking about, Lover?\" she asked softly.\n\n\"I think I've had the best homecoming ever,\" I answered. It took her a second to get it.\n\n\"You can keep coming home as often as you want,\" Heaven licked her lips and bucked her luscious ass against my still rigid rod.\n\n(Brandi)\n\nHand in hand, Heaven and I had barely exited my bedroom when Brandi came rushing up with a girl in hand.\n\n\"Hey!\" she beamed. \"This is my sister March and she's coming here next year. I wanted her to meet you Zane.\"\n\nHow bad could this be? I squeezed Heaven's hand.\n\n\"Hello March, this is Heaven Vickers \u2013 my girlfriend,\" I shook March's hand with my free limb.\n\n\"Hey Zane,\" March said shyly then, \"Brandi says you do things \u2013 with lots of girls here?\"\n\n\"See how Heaven is smiling,\" Brandi whispered to her sister like some conspirator. \"He makes me smile just like she is.\"\n\nWell, I had to think, not EXACTLY like I do with you.\n\n\"Brandi, what did you tell her?\" Heaven intervened.\n\n\"I told her,\" the two giggled, \"that he's magic with his fingers and tongue and he'll do all the things I told her about to me, to her.\"\n\n\"You pimped Zane out?\" Heaven snickered.\n\n\"It \u2013 it isn't like that,\" Brandi back-pedaled. \"I sent her a link to his website and told her to hide it from Mom and Dad.\"\n\n\"And Brandi says we can have sex here with you and God won't hold it against us,\" March piped up. I had to go 'What the Hell?' I give out dispensations from God? He really ought to tell me these things.\n\n\"I wouldn't go that far,\" I got out.\n\n\"Oh, being with Zane is a spiritual experience,\" Heaven snickered. \"Ten minutes ago I swear I was seeing Angles.\" I wanted to stomp on her toes because March seemed to be buying it.\n\n\"Are you a virgin?\" March whispered to Heaven.\n\n\"I swear on the Bible that Zane's never penetrated my vagina,\" Heaven raised up her hand to God.\n\n\"Did he \u2013 you know \u2013 the other way?\" Brandi leaned in expectantly.\n\n\"Until I cried tears of joy,\" Heaven teased her right back. I really wanted to stomp on Heaven's foot.\n\n\"What other way?\" March joined the conversation.\n\n\"You know \u2013 like Barbie Lynn,\" Brandi giggled to her sister. Oh fuck.\n\n\"Didn't it hurt?\" March sounded concerned.\n\n\"Oh no,\" Heaven stroked March's arm. \"He's slow and gentle.\"\n\n\"Okay; fun conversation!\" I declared. \"I see someone who wants to kill me. March, you are a beautiful young lady with an exceptional sister and I'll see you next year.\" I stormed deeper into my apartment only to hear.\n\n\"Look at that ass go,\" Heaven sighed.\n\n\"Yeah,\" Brandi murmured. \"Those pants are so tight.\" They are not!\n\n(Cappadocia)\n\nRio was getting downright mopey when we headed for dinner. As we were going in, I spotted Cappadocia and what had to be her little brother, mother and father. I wasn't sure if she wanted to have me meet the folks so I tried to quietly move passed.\n\n\"Zane,\" she turned and called out. I deviated my path and went over. Rio tagged along.\n\n\"Hello Cappadocia, Mr. and Mrs. Davis and \u2013 um \u2013 young man,\" I greeted them.\n\n\"Tobias,\" the young guy offered his hand and I shook it.\n\n\"This is my good friend Rio Talon,\" I brought her forward. Mr. Davis stepped up and shook my hand next. His grip was stronger than needed in that alpha male style.\n\n\"It is good to meet you Mr. Braxton. My little girl says you are a promising candidate on the new to the first squad,\" he grinned smugly.\n\n\"Well, Cappy would know \u2013 she's Team Captain and I'm sure she'll be Captain next year when she'll get to decide if I stay on First Team,\" I tried to be nice.\n\n\"So does it feel bad to be beaten up by girls?\" he joked.\n\n\"Well, if I ever get beaten up by a girl I'll let you know,\" I gave him my best steely grin. \"Here I get beaten up by women \u2013 really tough women.\" That brought the big guy up short.\n\n\"Oh well \u2013 my daughters a real fighter alright,\" he stammered.\n\n\"I believe you \u2013 she's knocked me unconscious once \u2013 in a practice session. She laid me out cold for about a minute,\" I enlightened him.\n\n\"Zane knocked Coach Gorman down Father,\" Cappy came to my defense, \"and took down three men who threatened some girls once.\"\n\n\"You girls shouldn't be leaving campus,\" her mother chimed in.\n\n\"Mother, we go out in groups and we are just fine,\" Cappy insisted.\n\n\"Are you responsible for this new attitude?\" the Dad asked.\n\n\"Sir, I'm one freshmen in a school of 900 women,\" I shrugged. \"The fearlessness was here before I ever arrived. It will be here long after I'm gone. I belief the unofficial motto for the Karate program is 'I kick ass for the Lord',\" I sort of lied. Cappy said it and she smiled slightly the hear me repeat it.\n\n\"Yes,\" he muttered, \"we want our girls to be strong in their faith for the Lord. It is good to see Cappadocia having a vibrant faith.\"\n\n\"Oh, I've seen Cappadocia vibrant,\" I smirked her way. She restrained herself from hauling me off and punching me because our act of vibrancy had everything to do with sex and nothing that she wanted to tell her parents.\n\nHer dad missed it, her young brother wasn't even paying attention but her mother caught our undercurrent. A smirk creased her face as she looked the two of us over.\n\n\"Cappy dear, you to practice safety when you spar, don't you?\" she cautioned her daughter.\n\n\"Yes Momma,\" Cappy gave a sly smile of her own, \"I'm always careful, even when I have Zane down on the mat.\"\n\n\"As long as you keep control of the situation,\" the Mother nodded.\n\n\"You keep winning Girl,\" the Dad rejoined the conversation, \"because you have one more year of playing around then you need to find a job and let God give you a husband.\" Cappy didn't flinch but I knew how hard she struggled for the team and having it disregarded by someone who meant so much to her.\n\n\"Maybe Cappadocia can either compete on a National level or train students when she goes home,\" I offered.\n\n\"She's real hardcore,\" Rio added. \"No one trains as hard as she does and the other girls know it. Hell, when I first met her I thought she was some Inner City Gangsta Chick, she was such a bad ass.\"\n\nThere was my girl Rio \u2013 the Conversation Killer. Sure, Cappy was African-American but that never came up with us. As I recalled, she came from a moderately-sized town outside Atlanta Georgia.\n\n\"What?\" the father darkened.\n\n\"Rio,\" I tried to pull her away.\n\n\"No,\" Rio growled. \"Listen buddy,\" she poked the man in the chest. \"Your daughter is an athlete and a damn fine one. If she was a he and in football you'd want him to try for the NFL so why are you treating your daughter any different?\"\n\n\"I don't think you know what you are saying young lady,\" Cappy's father stated angrily. \"Maybe I should have a word or two with your father.\"\n\n\"My father is a self-righteous self-serving asshole,\" Rio began before I started dragging her away, \"and he knows I'd kick his ass if he treated me this way!\" she finished screaming at him.\n\n\"Whoa Rio,\" I calmed her. \"The truth is only going to rub that situation raw.\"\n\n\"Cappy deserves more than that,\" Rio spat.\n\n\"Face it, you are channeling some Mercy into this Bro,\" I said. \"She'll be okay and back in your arms come Sunday. Cappy is tougher than her father knows.\"\n\n\"You hope so!\" she groused. \"I swear, with some of these bitches \u2013 they are perfect bright and confident then you roll a man around and out go the lights \u2013 nobody's home.\"\n\n\"Then we'll have to find a way to set them on fire so the light never goes out,\" I suggested. \"Face it, you are the schools premier pyromaniac.\"\n\n\"That I am,\" Rio grumbled. \"I'll find a way to burn this shit up.\"",
        "(Opal)\n\n\"Hey you two,\" Opal greeted Rio and I as we started eating diner. \"What's wrong, Rio?\"\n\n\"Plotting the end of male domination of the Western World,\" Rio grinned wickedly.\n\n\"Is there something I need to know,\" Opal looked from one of us to the other as she sat at my side. \"Are we mounting a rescue mission for Mercy?\"\n\n\"Mercy?\" Rio said suspiciously.\n\n\"Sure,\" Opal sampled her fare, \"give the word and I'll get six or seven girls together for a run at her family if you need it.\" Rio stared at her for a second.\n\n\"Why would you?\" Rio asked suspiciously.\n\n\"A lot of us like her since she came over to our side,\" Opal grinned, \"and she keeps you in line \u2013 most of the time.\"\n\n\"Just to keep things straight,\" Rio sneered. \"I keep her in line damn it.\"\n\n\"Oh please,\" Opal rolled her eyes, \"one little whimper and a look from those soulful eyes and off to the bedroom you two go.\"\n\n\"Grrrr \u2013 as long as everyone knows that she's mine,\" Rio was now embarrassed.\n\n\"And that's why we would come to help you, Rio,\" Opal gobbled a quick bite. I tried not to laugh.\n\n\"Zane,\" Rio pointed her fork at me, \"if you are trying to tell me I have friends, I'll bleed you like a little bitch.\"\n\n\"Who me?\" I grinned. \"Perish the thought that anyone likes you or considers you 'user-friendly'.\"\n\n\"I'm the soul of friendliness \u2013 fuck you,\" she snipped then smirked at me. \n\n\"Opal, Rio met Cappy's dad and that didn't go well,\" I enlightened my shower buddy.\n\n\"What went wrong?\" Opal sighed. With Rio, you never knew.\n\n\"It is the whole bullshit of get your degree, go home, get married and start pumping out babies because that's some twisted vision of God's will,\" Rio stated angrily.\n\n\"Most of the girls here are like that Rio,\" Opal responded. \"Now hold on \u2013 they want to get married but we can certainly help them find the right guy and not some bum foisted on them by their families.\"\n\n\"Opal, that's positively human of you,\" Rio wondered.\n\n\"I was the bad girl before you two arrived,\" Opal snickered. \"I wasn't in your league but I had radical thoughts.\"\n\n\"The first day in the shower showed me as much,\" I confessed.\n\n\"Well, that first body wash confirmed you weren't a girl,\" Opal bumped my hip with hers. \"With Rio \u2013 well, it took us a while to figure out she wasn't a guy with a really small penis.\" Rio reached across me and smacked Opal.\n\n\"My desire to be in the driver's seat doesn't make me a guy,\" Rio griped.\n\n\"You are only the second person on this campus to have a girlfriend Rio,\" Opal rubbed her shoulder. \"Give us a chance to adjust.\"\n\n\"Adjust? I'm hoping for some conversions,\" Rio quipped.\n\n\"Okay then, what are you doing tonight? Brigit and I are at loose ends,\" Opal offered. \n\nRio stopped eating and looked over at Opal.\n\n\"Sure, but the first one to suggest a pillow fight or that we paint our nails gets an attitude adjustment,\" Rio demanded.\n\n\"I can hear Brigit's quim quivering already,\" Opal leered. \"It's a date.\"\n\n(Raven \u2013 and Paige again)\n\nWe had packed the last of our firearms away in the van modified to be a secure courier when the families in attendance and some of the other students gather around the bus. I spotted Raven hanging back with an older woman who was a bit heavier than she was. I walked over to make sure she was okay.\n\n\"Hey Raven,\" I slipped past her guard and gave her a hug. She tensed up and muttered something.\n\n\"What?\" I wondered.\n\n\"This is my mother, Carol,\" Raven said softly. She kept looking down at the ground.\n\n\"It is nice to meet you Mr. Braxton,\" Carol greeted me. She seemed to be studying me intently as if she was expecting something from me.\n\n\"It is nice to meet you to Ma'am,\" I grinned. \"Raven is a really good friend to me and I couldn't be doing as well in English without her.\"\n\n\"Do you and my daughter have a close relationship?\" she pried. I could feel Raven start to fold up next to me in embarrassment.\n\n\"I don't know what you mean?\" I inquired.\n\n\"Mom, we are just friends,\" Raven said sadly. Oh, now I thought I understood.\n\n\"Mrs. \u2013 Raven's Mom \u2013 Carol, please understand that being the only male in such a large female student body, several girls put all kinds of pressures on me,\" I began. \"Your daughter is unique in that she treats me like a student first and that she truly helps me get by. If I couldn't touch base with her from time to time I might go nuts.\"\n\n\"Oh,\" the Mom sounded somewhat disappointed.\n\n\"Raven, how many girls have you helped me get away from?\" I tried a different angle.\n\n\"I...Paige, oh God Paige,\" Raven rumbled then, \"and Barbie Lynn, and Rio and that girl Iona.\"\n\n\"You really do help him with other girls?\" Carol sounded surprised.\n\n\"Yes Mom,\" Raven perked up. \"Girls are always swarming around Zane \u2013 they won't let him study unless I'm around.\" Not totally the truth but hey.\n\n\"I hope you understand that my daughter thinks a great deal of you,\" Carol drilled me with her over-productive Momma eyes.\n\n\"The feeling is mutual,\" I nodded. The bus's horn beeped \u2013 it was time for us to board. \"Raven, give me a kiss for luck at the meet?\" Raven looked shocked but reached up on her tip-toes and kissed me on the cheek. I reciprocated the gesture and turned to leave. I had made it half way when I got blindsided and staggered.\n\nSeveral kisses smothered my face.\n\n\"Hey Lover,\" Paige panted. \"Good luck shooting shit and taking names.\"\n\n\"I'm a spotter Paige. I don't actually shoot things,\" I clarified.\n\n\"Good,\" she purred then stroked my cock. \"Save more of that for me.\"\n\n\"Who is that?\" I heard Carol ask her daughter.\n\n\"That's Paige,\" Raven growled with menace. Yeah, lots of love there.\n\n\"Zane,\" Hope said evenly. We were ready to go. I gave Paige one more kiss and a squeeze on her ass then slipped passed Hope and got on the bus.\n\nHope got on after me and Gorman started up the bus.\n\n\"Well, that's not a send-off I'm used to,\" Genesis chuckled over Paige and I.\n\n\"If it breaks his concentration, it won't be the only thing I'm sending off,\" Hope informed the bus to even more chuckles. Hell, it's a gun club; a bit of bloodthirstiness was to be expected."
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "transgender",
        "anal sex",
        "tease",
        "albino"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-33"
}