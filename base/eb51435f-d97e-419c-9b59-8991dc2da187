{
    "title": "Through The Lens",
    "pages": [
        "I lived at the top end of the village, my bedroom overlooking the main road and, of all things, a cemetery across the other side. Beyond that was the mountain that separated our valley from the next one across, so you'd think this was not exactly the ideal domain for somebody who held an unhealthy interest in space and astronomy while he was growing up. What we did have, though, was a loft conversion with two large windows - one on each side - that tilted open so you had a clear and unobstructed view of most of the night sky from inside the house. While most people had to put their stargazing telescopes outside in the garden, mine was up there in the loft warm and dry all year round.\n\nIt was a nice 'scope - 250x magnification. What that means is that something five hundred feet away would seem almost within touching reach of you as you gazed at it. I don't know how much it cost - \u00a3300, \u00a3400 maybe - as it was part of a long stream of space related Christmas presents that spanned several years from when I was 8 or 9 years old to the time that this tale relates to, when I was a nineteen year old getting ready to graduate from sixth form with my A levels and go to university. Water rockets, star charts, planetarium balls, computers and cameras had for years been my birthday and Christmas presents, and while the telescope was still a few years old, it was my most prized possession.\n\nAnd not just because you could see details of the moon's rugged terrain with it, or make out the shape of the horsehead nebula in the constellation Sagittarius. Oh no. Since I had become sexually aware it had quite often been turned away from the night sky, and tilted much more earthward as a growing curiosity of not only what was above me, but also what was around me, began to plague my imagination. It had started with furtive spying on other kids playing on the mountainside, lighting fires with stolen matches, on older teens drinking and snogging and touching each other up supposedly out of sight of the village and their parents. Then once that had paled it had turned even more groundward in search of voyeuristic delights.\n\nAs I lived at the top end of the village the loft had a commanding view across the large, rectangular plot of allotments that lay behind our house. Around these allotments were other houses, all tightly packed terraced dwellings arranged around the perimeter of the allotments that took about ten minutes to walk around with my dog in the mornings. From the loft, with the telescope angled below the horizontal, I could see inside peoples gardens, kitchens, bathrooms and, obviously, bedrooms. The angles limited exactly what you could see, but with many houses I had what could be considered a fairly interesting view.\n\nThat's when I fell in lust with Rebecca.\n\nRebecca was like me. Imperfect. I was skinny, geeky by nature, more interested in technology and astronomy than playing football and rugby and would rather be out with a radio controlled car than a pushbike. Rebecca was a little overweight - though certainly nowhere near obese - and spent most of her spare time in her bedroom either playing The Sims on her computer or wiling away the nights on the internet. I knew this because I could see her through the telescope. I didn't have a full view of her bedroom, but I got enough of an angle on her room that I could see her desk and dressing table, and maybe a third of the bottom of her bed. It was a bit of a mess, with clothes scattered everywhere, books and papers and hair care containers all over the place, but that was no different to my own. Occasionally mine was tidied, usually shortly after my parents had gone ballistic on me, but more often than not it looked little better than Bex's. I didn't notice after a while, though, because all I was interested in was her. The lens no longer looked out into space, but deep into Bex's bedroom.\n\nShe was a little younger - not by much, though, and had long black hair, most often tied up in a pony tail, and pale milky skin because like me she would rather stay indoors than go out. I don't suppose she had many friends - I never saw anyone else in her room while I was spying on her - and her habit of locking herself up inside rather than going out probably contributed to not just her pale complection, but also the extra pounds that she carried. D on't get me wrong here, Rebecca was not a fat girl, but she did carry that extra baggage that comes with growing up and it hadn't burned off due to the lack of exercise that her internet regimen dictated. She had also been one of the b-grade pupils through her years in comprehensive school, and that's why I hadn't noticed her before - we shared no common classes. Pupils were segregated into achievers and under-achievers from the age of thirteen, but Rebecca had clearly worked hard to move out of the lower band and into the uppers, which I reckoned might also help to explain her lack of close friends. She had outgrown her old ones by leaving them behind in their second grade classes, and the ones in the upper band had their own cliques and she hadn't found a way to be included in those.\n\nAs is common with some overweight girls, her face was rounded and relatively plain. Soft. When you looked closer - as I did on the bus on the way in to school every day and during Maths which was the single cross-over lesson that we both endured together, you could see that beneath the puppy fat there was a very pretty face waiting to break out. Most don't notice these things normally, but when you begin to really focus on somebody the potential becomes so apparent that you wonder why the rest of the world doesn't see it. What attracted me to Rebecca, though, was not so much the awareness of how this girl could grow into a good looking woman, but that her secrets were every bit as dark as mine.\n\nYou see, the telescope showed me things about her that you would never normally imagine. It started when I was scanning the back bedrooms of the houses that overlooked the allotments, hoping to find a couple going at it like rabbits with the lights on and the curtains wide open - something that had happened just twice in about three years of below the horizon stargazing. Then one evening my lens settled on the glow of Becca's computer screen, and her profile highlighted in off-white light in the darkness as she MSN'd to complete strangers with her right hand while she felt her own boobs up with her left. My God that got me so hard it was painful, even though all I could see was a ghostly hand moving over her bra as the position of her desk and chair in relation to my view was at a bit of a difficult angle. I couldn't make out what she was typing, or who she was typing to, but I could see from the images that flashed up on her screen exactly what the subject matter was, and that made my stiff meat harder still.\n\nMen were sending her grainy photographs of their cocks, and while they did that she was navigating through an array of folders and pulling up mobile phone pictures of her own hidden treasures. On one occasion I watched her spread her legs and put the mobile down there, before plugging the phone into her computer and uploading a beautiful picture of her fur lined pussy being invaded by a dainty finger, relaying20it then on to some unknown lucky bastard over the broadwave. She was very careful not to show her face on-line, but her tits and fanny were flaunted to all comers with wanton abandon. I longed for her MSN address as I watched her on those rare occasions when she was online and hadn't closed the blinds, my own hand working my hardness slowly as image after image of hard dicks and gaping pussies flashed up on her screen. Sometimes images of women with cocks in their mouths or men fucking away at their engorged, distended cunts made it up onto the monitor as anonymous wankers from all around the world traded dirty photographs with the object of my secret obsession, while I in turn wanked myself off into the microfibre cloths that I used to polish the lenses on my telescope.\n\nAll the while she sat there, leaning into the screen as she sent and received photographs, her hands working on her tits or moving purposefully between her thighs and out of sight to me. We wanked together, Becca and I, though she knew naught of me, remaining blissfully unaware of my hard, erect manhood being stroked in rigid salute of her as she laughed and sighed in a world of her own until my semen spurted into a cloth, often catching me by surprise as I watched her bare legs and feet propped up on the edge of her desk as she leaned back in her chair, the laptop showing a webcam of some stranger also wanking himself off as she chatted over MSN with him before the days of Skype made t yping old hat.\n\nHow I longed to hear her voice whispering those fuck-me lines, encouraging me to pump my cock harder, to spurt my semen over her full teenaged tits or her open slit, wet and slippery from having just been fingered by red painted nails. I lay awake at night long after she had switched off and gone to sleep herself, replaying the images in my mind, my eyes closed as her husky, lust laden voice urged me to finger her, to eat her out, to ram my hard cock inside her, to flood her womb with my seed or spill it down her gulping throat. I showered every single morning, desperately trying to think of an angle that could get me closer to her as I readied for school, paying more attention to my appearance than I had ever done in my life, depleting Lynx shower gel bottles at an alarming rate and going through a tube of toothpaste a week.\n\nThen one day in Maths class when I was trying to conceal a raging hard-on beneath my desk, it suddenly came to me. This was the last lesson of the day, yet it was only lunch time. Normally I'd walk the four miles home instead of waiting for the bus, but most people that lived our way either spent the afternoon in the sixth form common room or in the library. So this time I stayed behind, leaving my bewildered friends to walk home without me, claiming that I was staying behind because I was having trouble with one of my subjects. I looked for Rebecca in the common roon, found it deserted, then after lunch break I wandered into the library.\n\nShe was there, and she gave me nothing more than a cursory glance as I entered the room. I left it five minutes, thumbing my way through the shelves of books, before finally plucking up the courage to sit opposite her at the table as she worked away at an assignment that she had been given while waiting for the bus to pick her up at the end of the day.\n\nShe looked up at me, her eyes reflecting annoyance and a little bewilderment that of all the seats and tables in the near deserted library I could have chosen to sit at I chose the one opposite her. \" Hiya Rebecca. I'm sorry to be a bother, but did you get those equations in maths at all?\"\n\n\"What d'you mean?\"\n\n\"I just didn't understand how you get the answer from the question. I'm probably just being thick, but the workings out didn't seem to take me to the answer that everybody else was getting.\"\n\n\"Probably.\" she laughed. I was captivated already, I just hoped it didn't show too obviously. \" It all seemed pretty easy to me.\"\n\n\"Could you show me?\" I asked, and pulled out the work that I had done in the class and deliberately got wrong, having carefully made the same mistake on each of the sample equations that we had been given.\n\n\"Ah, I can see what you've done...\" She said after she'd studied my work, then she proceeded to patiently explain to me exactly where I 'd screwed up.\n\n\"That's it?\" I asked, still playing my role as class dunce.\n\n\"That's it. Easy!\" She exclaimed.\n\n\"Well, thanks very much for walking me through that. I can't afford to screw up this close to the exams. Not with uni on the line.\"\n\nAnd from there the conversation blossomed. I told her my hopes and ambitions, why maths and physics were so important to my future plans while I worked towards an astrophysics degree, and she shared her dreams of working in investments and banking, and I bought her a can of coke from the common room dispensing machine as we wasted the rest of the afternoon while waiting for the bus home. I helped with her assignment as best I could, which basically meant that I held her up for a couple of hours, then when the bus arrived I made a point of sitting beside her on the way home. As we disembarked at the end of the ten minute journey I gave her my thanks once again, then went to walk home. She turned away and headed to her half of the village without even a backward glance at me, so I did an about face called out to her.\n\n\"Becca, what are you doing tonight?\"\n\n\"Why?\" She asked suspiciously as I walked back up to her, setting my bag on the floor between us. \" I've had a good time this afternoon, and I was wondering if you fancied, well, I don't know.... going out and doing something.\"\n\n\"Are you asking me out?\" She blus hed as the bus pulled off noisily.\n\n\"Well, yeah. I guess I am. I know I'm not the greatest catch for a girl, and I won't be at all offended if you turned me down - I expect you've got much better things to do than waste your time on me.\" I said, and I said it honestly. I'd had dark dreams of blackmailing her with spreading her secret if she refused to go out with me, but those ideas were quickly squashed once I'd spent a little time with her. If it wasn't going to work, then I'd just keep on secretly using her as my masturbatory muse. I held my breath as I waited for her answer. She seemed to be weighing me up, unsure which way to lean, then after what felt like an eternity but were probably just a few seconds she asked; \" What you got in mind?\"\n\nI didn't have anything in mind, actually. My mind was a total blank. \" Pictures?\" I blurted.\n\n\"What's on?\"\n\n\"I haven't a clue.\" I admitted. And from there it began. That night we caught a movie, and I didn't even hold her hand as I walked her home from the bus stop. She leaned against the doorway of her house as I said goodnight, and I hesitantly leaned forward. Even in the dark I could see her go red, but her eyes fluttered closed and that was all the invitation that I needed. Our lips touched, and I briefly entertained the notion of sliding my tongue between her lips, but her mouth refused to part when I pressed harder so I consciously held ba ck until we broke apart.\n\n\"I'm sorry.\" I mumbled. \" It just happened. I couldn't help myself.\"\n\n\"I'll see you tomorrow.\" She murmured, then she opened her door and disappeared inside. It slammed behind her. I ran home through the dark alley that bordered the allotments and the backs of the houses, not caring if I trod in dog shit as I bombed through the lane. I kicked off my shoes in the hallway and poked my head through the living room door, saying; \" Hello, and goodnight.\" to my parents who were up watching something on TV, then I careered up the two flights of stairs to the loft, threw the window open, and trained my telescope on Becca's bedroom. All was darkness. Obviously she was still downstairs, so I waited impatiently. It took about ten minutes, but soon Rebecca's room was bathed in the yellow glow from the landing as she went in and then the room lit up as she turned on the light. I saw her walk past her desk, still wearing the jeans and black top that she had worn to the cinema with me and my cock jerked alive when she slowly lifted the black silk garment over her head, her back turned to me. I saw her back split horizontally by the white line of her bra strap, and then she turned out the lights. With no street lighting at the backs of the houses everything was pitch dark, and after ten minutes I realised that she had gone to sleep and wouldn't be turning on her PC for some anonymous roleplay. I didn't know whether to fee l disappointed or not. On the one hand I would have loved to see her feeling herself up after being so close to her all night, but on the other hand I was happy that the one kiss we had shared was enough to send her to sleep and possibly fuel her own fantasies. Perhaps she was even rubbing herself beneath the sheets in the darkness. I closed the window, crept down to my room, and dreamed of Rebecca.\n\nI made myself deliberately late for the bus the next day, making sure that everybody else had got on while I ran to catch it, last aboard. I caught her eye as I showed my pass to the driver, and she looked away somewhat coyly as if embarassed about the previous night and my amateurish attempt at kissing her. She was sat next to the window and the seat beside her was taken by her bag. I stopped at my friends, and had never been so glad to see that they hadn't kept a seat for me, and we chatted for a minute as the bus pulled off. The driver shouted at me to sit, so I did, moving up the bus and away from my friends, after asking Rebecca if it would be ok to sit there. She slid her bag off the seat next to her and I sat down.\n\n\"About last night.\" I began.\n\n\"Nothing needs to be said.\" She interrupted me. \" It was a nice night out. I had a good time.\"\n\n\"And the kiss?\"\n\n\"I've had better.\" She admitted, grinning in a somewhat mischievous way.\n\n\"Is that a chal lenge?\" I asked. \" Cuz I hope it is.\"\n\nHer fingers moved across, furtively touching mine as she glanced past me to make sure nobody was watching. I curled my fingers around hers and slid a little closer, our hands now hidden between our thighs. With my other hand I pulled a small scrap of paper out of my breast pocket and handed it to her. Home number, mobile number, email and AIM address, and also my newly created MSN messenger account. The day passed slower than any other day in the history of days had ever passed before.\n\nAfter tea I went to the loft and switched on my laptop. There was no MSN invite waiting for me, so I quickly lined up the 'scope on Rebecca's room to confirm that she was not there and her computer was off. For the next hour I played some Quake, then when I logged off that and logged back on to MSN there was an invite waiting for me. I quickly confirmed it, sending a 'hi' as well, and took a furtive glance through the telescope, finding Rebecca sat at her desk, PC on, doing what I assumed to be homework. I watched her expertly ALT-TAB out of her MS Access screen and got a quick one word hello in reply.\n\n\"Whatcha doing tonight?\" I asked.\n\n\"English. I suck at it big time.\" She shot back.\n\n\"I don't have any work to do, but I hear my kissing needs practice.\" I replied, closing the message with a wink emote.\n\nThis time there was a lengthy pause, before she lolled back. I noticed that her status was still 'offline', so obviously she didn't want her cyber-boyfriends interrupting her while she did her assignments, but had made herself available for me. This I took to be a very good sign, so I pushed my luck as far as I dared. \" Is that all you're doing tonight?\"\n\n\"Gotta get it finished. What you up to?\"\n\n\"Waiting for it to get dark.\"\n\n\"Why? What happens when it gets dark?\" My screen flashed up.\n\n\"The stars come out.\"\n\n\"Pardon?\"\n\n\"I told you in the common room that I stargaze when I'm bored. Want to come across later and have a look?\"\n\nThis time the answer took a long time coming. I watched intently through the telescope as I waited for the audio tone that told me I had an incoming message, watching Rebecca hesitate over the keyboard as she mulled over a response.\n\n\"Isn't it too cloudy?\" She tried stalling.\n\n\"Weatherchannel says it'll be clear overhead by nine. You've got plenty of time to get bored of that assignment, then you can come over here and I'll show you my stuff.\"\n\n\"Stuff?\"\n\n\"My telescope and some of the photos I've taken. It's not as boring as it sounds, honest!\"\n\n\"Hmmm... let me be the judge of that.\" She lolled back. \" I'll msn when I'm leaving. You can meet me halfway.\"\n\nYessss! I punched the air, and I watched her through her blinds for the rest of the evening, stroking myself through my jeans as she criss-crossed her room from wardrobe to dresser in nothing but a bra and white knickers as she tried on various garments until she was happy with the way she looked. Tonight it was black jeans and a red v-neck sweater. She spent a lot of time on her hair, wearing it down and tousled instead of tied back in her usual severe manner - the same as she did when she was pretend fucking over the internet - and she also took extra care over her make-up, but went relatively light on the lip gloss. She hadn't done any cybersex since I'd started hitting on her as far as I could tell, so I hoped she was getting extra horny as a result. If I went two nights without jacking off I'd be ready for anything, and I hoped that principle applied to girls as well as guys. I watched her as she typed an 'On My Way' into MSN and acknowledged it at my end before heading out into the street. I was outside her front porch before she'd even opened the door, then out she came.",
        "\"I like your hair that way.\" I smiled as I walked her to my house, then let my hand brush against hers as we rounded the corner into the darkened alleyway. At the second brushing of our hands I curled my fingers around her thumb and pulled her hand into mine. She didn't object.\n\n\"Taking a friend up the the loft.\" I called through the living room door as I led Rebecca along the hall way and up the stairs. The steps to the loft were difficult, as they were recessed and staggered, so I coached Rebecca through the motions, staying as close behind her as possible just in case she slipped off the narrow steps. She smelled of almonds, and I put my hand on her hip to help steady her as she climbed awkwardly to the top of the house. I turned on the lights when we reached the top step and moved around her, opening the window that looked out over the front of the house and the cemetery. The telescope had already been hastily moved over to that side after she'd messaged me that she was ready - it was heavy but it only took a few seconds to move it into place in the narrow loft.\n\nI walked her through the photos that I had blu-tacced to the walls, then when I was running out of cool sounding explanations of exactly what the dots that she was looking at were, I trained the telescope with a practiced hand onto the crab nebula in the constellation of Taurus. \" That's what it looked like 6500 years ago, because that's how long it takes the light to get here from there.\" I guided her into position over the eyepiece, one hand on her hip and the other steering her hand to the focus dial. \" Just turn this knob if the image isn't sharp, and be careful not to jog the telescope or the image may disappear completely.\"\n\n\"How do you take the photographs?\"\n\n\"The eyepiece unscrews and I have a camera adaptor. I ca n also plug it directly into the computer with a digital camera. I'm a proper geek. In geek classes I'm untouchable. I know more than the teachers.\"\n\nShe laughed her cute and sexy laugh as I turned out the lights, plunging the room into instant and almost total darkness.\n\n\"That better?\" I asked.\n\n\"Oh yes,\" She replied. \" It's so much clearer now.\"\n\nI let her gaze at the night sky for a minute or two, talking her through the dials so that she could swing it around the sky looking at other stars and the moon, then when she pulled back from the telescope I put my hands on her hips and we faced each other.\n\n\"You didn't ask me here to play with your toys, did you?\" She said reprovingly.\n\n\"Tell me you didn't come here to play with my toys.\" I challenged back as I drew her closer. Our faces were just inches apart in the darkness.\n\n\"I didn't come here to play with your toys.\" I heard.\n\n\"What did you come for?\" I murmured as I allowed my closed lips to brush briefly over hers.\n\n\"You know why I came.\" She answered demurely, pulling away an inch.\n\n\"Tell me.\" I whispered as my hand slid up and down the curve of her side. \" Tell me what you want from me tonight.\" I said, my voice almost inaudible as I moved my lips to her ear, my hand now sweeping her cascading hair out of the way. \" Tell me what you want me to do.\"\n\nWhen she spoke it was almost a groan, as if I was forcibly tearing the words from her body. \" Kiss me.\" She whispered as my lips lightly brushed her ear. I closed my hands around the back of her head and turned her face to mine. My lips pressed softly against hers, then I pressed a little harder, parting them when the contact was firm enough that I knew that hers would part, too. I wasn't exactly green at this. I'd had girlfriends before that I'd gone as far as open mouthed snogging with, but not for a while, and when her lips parted I slid my tongue inside her mouth. It was mint, and it was hot and cool at the same time, and my hands slipped down her back to the base of her spine, insistently pulling her forward onto me, her heavy breasts squashed against my chest while my fingers settled on the waistband of her jeans and pulled her closer still.\n\nConscious of my growing hard-on, and also a little embarrassed at it, I wormed my tongue deeper into her mouth. Now she fought back, her own tongue sliding over mine, around mine, under mine, darting past my own teeth as we feasted upon each other. I knew she could feel the hardness of my cock against her belly and I didn't care. I wanted her to be fully aware of the state of arousal that she was putting me in, wanted her to understand that the physiology could not be denied, that what she was doing to me was making me harder than I had ever bee n. I did it shamelessly, and my hands moved to her ass cheeks, stroking them gently, absently, while our tongues still battled for dominance. We broke for air. Then we plunged in again, just as intensely as before, and as my hands began to press more firmly against the flesh of her backside, she dropped her hands down my back to my own butt.\n\nWe crushed our groins together as we kissed. Was this too much, too soon I wondered? I didn't care. I was nineteen, she was eighteen and this was the first time I'd had my hands on a girl's ass in my life, the first time my cock had been pulled into firm contact with the belly of any woman. Her hands were digging into my ass cheeks, pulling them up and down as we swayed in the small room. I pressed her against the wall in an effort to stabilise things and prevent us from falling over as we got more carried away, and she broke away from me in a desperate search for breath.\n\nI moaned softly, then I moved my hands up to her hair, grasping a hand full of the lustrous black strands, and felt her mouth close over mine again, her tongue forcing past mine, almost pushing me back. I fought against her, trying to keep her pinned against the wall, and eventually she gave up and sucked hungrily on my tongue.\n\n\"Tell me what you want from me tonight.\" She whispered as her hands pressed against my chest and pushed me away. \" Tell me why you brought me here.\" She asked again.\n\n\"I have,\" I murmured. \" That was everything I ever dreamed of. Intense. Arousing. I have no idea how we can better that without going too far too soon and risking spoiling everything. I want more, but I don't want to risk having nothing by pressing for more right now.\" I admitted. This was going forward far quicker than I had ever anticipated. From her point of view it had been just two days and I was ready to rip her clothes off and kiss every last inch of her body. There was no way she could have known that for months all I had thought of was this moment and how it would come about.\n\n\"Come on, then. \" She smiled, reaching for my hand. \" Walk me home.\"\n\n\"Already?\" I said, wincing at the naked disappointment in my words.\n\nShe stepped in close to me again and we fell into each other, all hands and lips and tongues. I wanted to touch her breasts, squeeze them together and run my fingers over her nipples. They were already hard - I could feel them through her bra, her blouse and my own shirt - but I didn't dare. I didn't want her to think that I thought she was easy, so the next half hour passed with snogging, more than a little ass feeling, and a sensuous dry grinding of our pelvises against each other before I finally relented and walked her back to her place, my jaw aching a little from the exertion it had been put through.\n\nWe snogged on her doorstep again, and when she disappeared inside I ran home, straight back up to the loft, and trained the telescope on her bedroom window. Tonight she stood in front of the computer desk with the bedroom light on, facing the window, and unbuttoned her blouse, peeling it off her shoulders in one smooth shrug and allowing it to drop to the floor behind her. She was standing there in jeans and her straining white bra, and I unzipped my trousers and awkwardly pulled out my stiff and aching cock as she reached behind her to unclasp her bra.\n\nI saw her big tits full frontal then for the first time, and I watched rapt as her hands cupped them, thumbs stroking the still hard nipples in exactly the way that I had wanted to touch her just moments before as she closed her eyes and licked her lips. Did she know, I wondered, that I was watching her? Was this a show? Had she twigged that the second loft window, the one that I hadn't let her look through in the telescope gave me an unobstructed view of her window? Or was she just doing what she liked to do - touching herself up after she was turned on, whether by the strangers on the internet or by what we had done tonight, and had simply forgotten to close her blinds?\n\nDid it matter, I asked myself as my hard cock jerked again at the sight of her unbuttoning her jeans, unzipping them, easing them down past her hips, her panties inadvertently coming down her legs with them. The triangle of her pubic mound stared me in the face, then disappeared as she20bent forward, eclipsed for several seconds by her hanging tits as she stepped out of her jeans. I swallowed as she stood again, now totally naked, and she threw her long black hair back over her head and put one foot up on the foot of the bed. I watched her hand slide between her legs and hug her crotch, watched it move up and down as she rubbed herself, watched her pinching her teats with her other hand as she closed her eyes and fantasised about fucking me. Did she know I was here with my cock in my hand, wanking slowly? Did she know that we were right at that moment doing exactly what she did with her internet lovers, that I could see her the through the telescope the way that she could see the webcam cocks that had gotten her off so often in the past?\n\nThen she turned and touched the keyboard of her PC, and the monitor sprang to life. She sat down still naked at the desk and typed away. My laptop burbled a warning of an incoming message.\n\n\"What are you doing?\" called the screen.\n\n\"Thinking about you.\" I replied.\n\n\"That's sweet.\" She responded. \" Are you busy tomorrow night?\"\n\n\"Nothing planned.\" I fired back.\n\n\"Come over at eight?\"\n\n\"Love to. Can I ask you something?\"\n\n\"Of course.\" Rebecca replied.\n\n\"Can you send me a photo of you?\"\n\nShe lolled a reply, asking me if I'd forgotten what she looked like already, then I watched her browse through a folder before forwarding me a small 100k jpeg. When I opened it I saw a picture that she'd obviously taken with her mobile by simply holding it out in front of her and guessing. It was skewed and grainy, but the more I saw of her the better looking she seemed to be getting.\n\n\"I like that one.\" I thanked her.\n\n\"I chose one of the better ones. I don't seem to be very photogenic, to be honest. Now no jerking off over it.\" She warned. \" I know what you boys are like.\"\n\nIn a way I was shocked at the way she just blurted that out, but one thing I was learning about Rebecca was that she had a very mischievous sense of humour and wasn't afraid to use either innuendo or overt and frank sexual language.\n\n\"Well I'm completely flabbergasted at your tone.\" I sent back. \" As if I would do something like that. Bloody good idea, by the way. See you on the bus.\"\n\n\"G'night.\" Came back, then we both shut down our screens more or less simultaneously. I watched her for a while longer as she sat naked at her desk, exploring the drawer. After a moment out came a shocking pink coloured tube that it took me a few seconds to recognise as a vibrator. She slipped it into her mouth and turned out the light.\"\n\n\"Nooooooooooo!\" I silently screamed, denied the delicious sight of her spearing her pussy with that sex toy, then my cum sprayed all over the floor, catching me completely by surprise.\n\nI was late again for the bus, but this time when I boarded there was a youngster sitting next to her. I put my bag on a seat that a friend had kept for me, then I quickly moved back down the bus before the driver pulled away from the bus stop. I leaned over the third former sitting next to Rebecca and kissed her hard on the mouth for a full five seconds before winking and returning to my seat before the driver yelled at me again. I left her red faced, while some of the younger kids whooped and laughed. I did it purely because I didn't want her to think that I was keeping our relationship secret. I didn't care who knew I was seeing her, though I had no way of knowing at the time that this act would see me suspended from school in the lunch break.\n\n\"Morning.\" I grinned at my mate Steve.\n\n\"What the fuck was that?\" He asked. \" You and Rebecca Lewis?\"\n\n\"And why the fuck not?\" I said, still grinning.\n\n\"What-the-fuckever, dude.\" Steve shrugged. \" Didn't think she was your type.\"\n\n\"What is my type?\"\n\n\"Dunno, just thought you went for more skinny girls than her. Girls more like your size. You usually do when we're out.\"\n\n\"And where exactly has that gotten me in the last, oh, three years?\"\n\n\"Hey, I'm not judging, man. If that's how it is then you go for it and don't listen to what anybody else says.\" Steve went defensive.\n\nMark, another friend, leaned across the aisle and said with a wink; \" Ignore him, he's just jealous. As he should be. He hasn't snogged a girl since his great aunt Mildred on his twelfth birthday.\"\n\n\"Fuck you.\" Steve gave him the finger as the rest of us laughed.\n\nThe incident that triggered the suspension happened in lunch break when another sixth former caught up with me while I was sat in the dining hall by myself minding my own business with a paperback. I knew the guy, he was lower sixth, fresh in, and a bit of an arse. Bigger than me, as were most people near my age, and uglier. Which is saying something, believe me.\n\n\"Becky Lewis?\" He asked.\n\n\"No, my name's Chris.\" I deadpanned. \" And it's none of your business.\"\n\n\"No need to be a twat. I'm doing you a favour.\"\n\n\"Oh?\"\n\n\"She's used. Been fucked before. I've had her.\" He said, leaning in closer. \" Just thought you should know.\"\n\n\"So? What makes you think I give a shit?\" I stood up, fists clenching at my sides. People were watching now, heads turned by the beginnings of a commotion. \" It's still none of your fucking business so piss off. Who's being the twat now? Just because you say you had her first you have to show off to everybody who she goes out with in the future? What a fucking loser you are. What did she do, dump you because you were crap between the sheets and now you're carrying a grudge? Grow the fuck up, you pathetic jackass.\" I didn't realise my voice was getting louder, but I saw the punch coming a mile away when his right shoulder bulged. I stepped inside and head butted him full in the face. Fuck it hurt. But he was on the floor with blood streaming down his face from his nose while a chorus of 'Ooohh's sounded throughout the hall.\n\n\"Don't bother getting up.\" I spat at him as I walked away. \" I'll just put you back down again. Count yourself lucky I don't fucking piss on you.\"\n\nNeedless to say I was in the head teacher's office before lessons began and my mother was picking me up in the car before two. \" Don't worry about it,\" she said after I'd explained everything. They won't keep you out for long. They know you are an easy four A-levels for their league table. You'll be back in on Monday.\" And that was it. I expected a huge bawling out over ruining my chances of going to university, but all my father did was laugh himself silly at the big purple and yellow bruise growing on my forehead and making me look like one of Star Trek's Klingons.\n\nAt eight I turned up on Rebecca's doorstep and she was furious.\n\n\"So what the hell happened in school today?\"\n\n\"That jerk was dissing you, so I put him on the floor. No big deal.\" I shrugged as I stood out in the drizzle. \" Are you going to let me in or are we going out?\"\n\n\"You got suspended over me? Jesus, you're even dumber than I thought you were.\" She shook her head. \" Get inside before I change my mind.\"\n\nShe closed the door behind me and led me into the lounge. \" So what the hell happened between you and Clive?\"\n\n\"Clive? That's his name? He just came up to me and started bragging that he'd slept with you. Then when I gave him a bit of verbal back he took a swing at me, missed, and I Glasgow-kissed him on the nose with my head. No big deal.\"\n\n\"It is a fucking big deal when you get yourself suspended. Jesus. Why the fuck didn't you just ignore him?\"\n\n\"He didn't look like he wanted to be ignored. Honestly, I think he still fancies you and was trying to put me off by talking shit about you.\"\n\n\"And?\"\n\n\"Well, I'm here aren't I?\"\n\nShe shook her head in disbelief. \" He never slept with me.\" She explained, slumping down on the sofa. I sat opposite her in an armchair. \" We just fucked once, that's all.\"\n\nThat was a bit of a hammer to the balls, I must admit. Obviously you can't go through life thinking every girl you meet is going to be a virgin when she falls into your arms, but I had always thought that my first time would at least be with another virgin. \" Look,\" she carried on. \"20I hope you don't think that I've been mummy's little angel all my life, because I haven't. A couple of years ago I ended up getting mixed up in the wrong crowd with a friend who dragged me along because I had money for booze. We did a little drinking, got a little crazy, one thing led to another and before I knew it it was all over and I was walking home crying all alone. It wasn't how I wanted my first time to be, it wasn't how any girl would want her first time to be, but sometimes shit happens.\"\n\n\"There's no need to explain. It's not important.\"\n\n\"Yes it is,\" she interrupted.\n\n\"Not to me.\"\n\n\"Well, it is to me. Look, I don't know how long we're going to last. We might not even make it through the next hour, but I don't want there to be any secrets, so that if some shithead like Clive starts telling tales you'll at least know the truth from the bull, ok?\"\n\n\"Fair enough.\" I accepted, and leaned forward to listen to her.\n\n\"About two years ago, after I'd moved up from lower band to upper band, I was losing all my friends and had no new ones to replace them. Nobody wanted to know me because all the clever girls assumed I was still thick. It's why I've put on weight - I stopped going out altogether and spent almost all my time studying and playing games on the web.\" I almost asked her what sort of games, but didn't think that this was the right time for tha t. \" I got lazy, and comfort ate. I'm working my way out of it, but it's not easy. There was one girl that I used to bother with when I visited my grandmother, and while my gran was looking after me overnight when my parents went away for the weekend I went to a small house party with this girl and some of her friends. There were about a dozen of us - five girls, seven or eight boys, and there was booze. Some of us got tipsy, some of us got drunk. Then my friend said it was time to play dice and would I play. When I asked her how to play, she told me.\n\n\"Each of us took a number - one to six for boys, and one to six for girls. Then there was a list of 'tasks' for the third roll of the dice. The first roll and second roll paired a girl up with a boy, and the third was for what they then did with each other. I said no at first, but when they started playing I ended up watching and after a while the drink sort of took over and I offered to be number five for the girls. The tasks weren't all that big a deal, except for the six. Handjobs, fingerfucks, blowjobs, all that kind of stuff and I gotta admit that I got pretty turned on watching these impromptu couples making out. Anyway, the dice rolled and sooner or later my number came up. Then the dice rolled again and Clive's number came up. And the bastard groaned. I always hated him for that, and that was when I weighed more than a stone less than I do now. On the thi rd roll came the six, and that's when they all started chanting 'fuck, fuck, fuck, fuck, fuck!'\n\n\"Like I said, I was pretty blasted, and before I knew it I ended up on the floor with my skirt pulled up over my waist and Clive just did me. It's still all a blur in my mind. Don't get me wrong, I wasn't raped and I don't have nightmares about it. I went into that dice game with eyes wide open and fully aware of what the risks were and what might happen, but that's the first and the last time that I've done anything with a guy until you kissed me on Monday. The first time was painful, was over in thirty seconds, and I'm not making that up, and afterward I just got up and walked out, ashamed of myself. I haven't spoken to any of them since. It was one of the most hateful, disappointing ways to lose your virginity that you could possibly imagine, but what's done is done. You're the first person I've told and I'd appreciate it if you didn't spread it around, okay?\"",
        "\"I wouldn't do that. And I'm sorry. If I'd known the truth I'd have just laughed at the little prick instead of flattening him. He was trying to make himself out as some kind of stud.\" Rebecca showed me a curled little finger that signified what she thought of Clive's manhood, and we both burst out laughing, Rebecca somewhat nervously with a moist look in her eyes.\n\n\"Look, I'm not going to lie to you.\" I told her. \" I don't know how long we're going to20last, either but I do find you very attractive. The more I look at you the more I see that I find irresistibly alluring. I admit I'm a virgin. I had a chance to lose it when I was fifteen, but there's no point going there because that's just water under the bridge, a missed opportunity more than anything else, and I'm not looking to lose it any time soon, either. I'm just here to have fun, with you, doing whatever you want to do, and if we get physical further on down the line then so much the better. I'm not going to turn it down. Relax around me. I'm the no pressure cool dude. Ask anyone, okay?\"\n\nShe nodded. \" Right then,\" I said, changing the subject. \" So what are we watching?\"\n\nIt was a Harry Potter film, and by the time it was halfway through I was sat on the sofa while she lay on me with her head on my lap, her feet dangling over the edge of the sofa. I played with her hair, caressed her ear with my fingers, but most of the time I wasn't watching the film - I'd seen the Prisoner of Azkaban before - and just watched her cleavage moving up and down as she breathed. I knew she was dieting, but I hoped she ended up keeping most of the flesh that I was struggling to keep my hands off. They were big and round and I'm sure she knew that I could barely take my eyes off them moving when she breathed. When the credits rolled she turned her head in my lap and gazed up into my eyes.\n\nI bent over and kissed her on the lips, feeling her melt into me as her arms folded around my neck. She was impatient, pushing her tongue into my mouth before I'd fully parted my lips. I put my right hand on her belly as she squirmed into a more comfortable position on my lap, and my fingertips were just a few inches up from sliding between her parted legs, where I had watched her own hand work just the night before, then she twisted off my lap and got to her feet. I looked up at her as she stood over me, then she hitched her black dress up to her knees and straddled me, her knees sliding down my flanks, her hot crotch pressing down against my hardening cock, just the thickness of her panties, my jeans and a pair of boxers separating our sex organs. Her head dipped to mine and we sucked on each others tongues again, and I could feel the twin mounds of her breasts pressing down on me.\n\nI was unbelievably uncomfortable, my cock hard as a rock, trapped inside my jeans, crushed beneath her insistently pressing weight. \" You have no idea what you are doing to me,\" I breathed when we broke apart for air.\n\n\"I can feel it. Don't be shy.\" She whispered in my ear as she nipped at it with her teeth. I wasn't sure what she meant, but I took a chance and slipped my hands inside her blouse, running my fingers up and down the bare skin of her back, from the base of her spine to the taut band of her bra strap. She moaned into my ear as my fingers g lided softly over her spine, then her breath froze when I located the clasp and began to work at it inexpertly. The moment I managed to release the plastic clasp she began to gyrate her crotch against my bulging erection, and as the bra went slack and my hands skated along her flanks to the underside of her heavy tits she slid her tongue wetly inside my ear.\n\nI cupped her breasts in my hands, thumbs caressing the bullet like nipples in precisely the manner that I had watched her do it, and her lips and tongue quickly found mine and we hungrily began kissing while I fondled her tits. \" Oh God that feels so nice. \" She breathed when we broke for air, and I felt the uncontrollable urge to take them in my mouth. I eased her blouse up over her tits and used my hands to guide one of them up to my lips. She gasped as I closed my mouth over the hard bud and began to suck, my other hand still thumbing over the nipple of her other breast. \" Oh fuck,\" She moaned, biting her lip as she leaned back, giving me more room to work. I switched breasts, biting down on the other nipple now and tweaking the soaking wet one that I had just been nibbling on with my thumb and forefinger. Her hands closed around my head, pulling me harder onto her tits, making me swallow more of her teats, my tongue circling around the nipple as I jammed more and more flesh into my mouth. I pulled away for breath and her face covered mine, her tongue doing the work in my mouth as my hands pushed her breasts together, the nipples nearly touching each other as I kneaded them.\n\n\"Nobody has ever done that before,\" She sighed as our lips released each other again, and she buried her head against my chest, her hands reaching for the buttons of my shirt, popping them open one by one before sliding her own hands inside and caressing my chest. I eased myself back onto the sofa and let her work, my shirt eventually fully unbuttoned as she kissed my own small nipples tenderly, her hands massaging my belly and my flanks absently while I played with her cascading black hair, feeling it tickling me as her head moved on my chest.\n\nThen there was the sound of a car door slamming outside, and she instinctively knew that her parents were back home. She slid off me and tidied herself quickly, while I buttoned my shirt, then she threw herself down onto the couch beside me moments before her parents came into the room. Rebecca and I rose to our feet and I beat a hasty retreat to the door, towing her behind me. She kissed me lightly on the mouth as we parted. \" MSN in five?\"\n\n\"Sure.\" I replied, then I pulled her to me, kissed her hard one more time, then walked home to my waiting telescope.\n\nTo my great disappointment she was still fully dressed when the viewfinder settled on her. The blinds were wide open, my view unobstructed, as she sat in darkness, the glow of the monitor on her20face and the keyboard the only light in the room. I watched her for a few minutes, then my laptop beeped it's message waiting tone. I ignored it for a moment, teasing her, watching her impatience mount as she stared at the screen waiting for a reply, then I opened her message.\n\n\"Whatcha doing?\"\n\n\"Trying to figure out how to get this damn telescope to go low enough that I can see you.\"\n\nHer reply was lolled. \" Not sure I like the thought of that.\" Came her next message.\n\n\"You love it.\" I shot back.\n\n\"What makes you say that?\" She pushed back.\n\n\"Instinct.\" I replied. \" Open your curtains.\"\n\n\"I dont have curtains. I have Venetian blinds. And they are open.\"\n\n\"Fuck, wrong window.\" I lied, grinning. \" I've put a thick book under one leg of the tripod so it's pointing down your way.\"\n\nShe ROFLMAO'd, then; \" Can you see me yet.\"\n\n\"I got you. Jesus, this is a fantastic view.\"\n\n\"What am I doing?\" She asked, giving me the finger through the window.\n\n\"Being very abusive to someone you just let feel your tits up. Not nice.\"\n\nI saw her laugh out loud in her room, then she turned her face to the window and waved.\n\n\"I'd wave back,\" I messaged. \" But you'd need a telescope to see.\"\n\n\"My God, you really can see me!\"\n\n\"Not enough o f you, though. It's a bit of an odd angle from my house to yours. I can see the foot of your bed and your desk, and you're turned away from me when you are sat at the desk. I can see half of your back and half of your side when you're typing.\"\n\n\"Fuckin' hell that's scary.\" She sent.\n\n\"Close the blinds.\" I advised.\n\n\"Nah, it's cool. I trust you.\"\n\nJeez, if she ever found out that I'd been waching her cyberfucking over the web for the best part of two months I was history. Dead meat.\n\n\"Any regrets about tonight?\" I asked.\n\n\"None.\" Came an almost instantaneous reply. \" You?\"\n\n\"Just one.\" I typed. \" I never got to see your lovely boobs.\"\n\n\"Boobs? You mean my titties,\" she LOLled.\n\n\"Yep, them things too.\"\n\nShe turned to the window and did exactly what I suspected she would. She lifted her blouse and flashed her tits at me for a half a second.\n\n\"Wow.\" I typed. \" I need some tissues.\"\n\nI saw her rock back in her chair as she laughed again, then she turned back to the window and lifted her blouse for a few seconds, letting her tits swing back and fore as she wiggled her shoulders.\n\n\"That's it.\" I typed. \" Now I need a fresh pair of jeans.\"\n\n\"Maybe you should have taken it out.\" Rebecca sent, attaching a wink.\n\n\"You are so hot.\" I told her. \" Most people would freak out if they knew they were being watched. I know I would.\"\n\n\"I kinda like it.\"\n\n\"Does it turn you on?\"\n\n\"It does.\" She admitted.\n\n\"How much?\"\n\n\"Very much.\"\n\n\"What's the wildest thing you would do, knowing that I'm watching but I can't do anything about it, can't stop you or nothing?\"\n\n\"Jeez, Chris. I dunno.\"\n\n\"Just do it. Now.\"\n\nI watched her hesitate, alternately staring at the screen, then looking at the window, knowing that somewhere out there she was being watched, but could not see anything of who was watching her. This was just what I thought turned her on, was exactly what she had been doing over the internet all the time that I had been spying on her. I hoped like hell she hadn't figured out that I had been watching her all this time and was steering her into doing for me what she had been doing for total strangers. I almost sent a message telling her to forget about it as I watched the indecision of her body language, then she tapped away at her keyboard for a second.\n\n\"Take your prick out and stroke it.\" She sent, then she turned to the window and spread her legs. Her top came off, thrown onto the bed, and she hitched up her skirt.\n\nI quickly sent a message; \" Lights on. All I can see is your silhouette as the glow of the screen is now behind you.\"\n\nShe turned at the beeps, read the message, then switched on the lamp on her bedside chest of drawers. It lit her up perfectly. Her skirt was up around her waist, her white panties shining in the lamplight, and I watched awestruck as she eased the gusset aside and showed me her pussy. She reached between her legs and slowly squeezed the sides of her mound together, and her crack duly opened into a glistening slit as she leaked fluids onto her fingers. I held my silence, my engorged cock thick and hard in my hand as I watched her fingers sliding up and down the wet crack.\n\nSuddenly she stood, and for a second I though she was going to turn off the lights and close the blinds, but instead she simply eased her knickers down her thighs and kicked them off. She settled back down in her computer chair and leaned back, spreading her legs wide apart, and she opened her labia with her fingers, showing me the hole that I hoped my cock would very soon be reaming out. Then she pushed a single finger inside that tiny hole and worked it in and out smoothly, in a delicate sawing motion. Her eyes were closed, her mouth slightly open, her head thrown back, tits upthrust as she slowly, deliberately finger fucked herself.\n\nI swallowed dryly as I watched, my cum building up in my balls as my stroking generated the desired biological effect, then I saw her shudder, her thighs swinging closed, then open again as her finger slid out. My cum exploded=2 0everywhere, streams of it shooting with unprecedented force across the carpet and up the wall of the loft. When I looked back into the telescope the light in her room had gone out and she was sitting nude in front of the monitor once again.\n\nA message flashed up on my screen. \" Well?\"\n\n\"Holy shit that was the hottest thing I have ever seen.\" I texted back. \" How was it for you?\"\n\n\"Fantastic. Normally it takes a while for me to climax, but knowing you were watching me brought me off so fast.\"\n\n\"Are we going to do this again?\" I asked.\n\n\"Wild horses couldn't stop me.\" Rebecca fired back. \" Your place or mine tomorrow?\"\n\n\"Mine.\" I responded. \" Your room looks a bit of a mess.\"\n\nShe gave me the finger, grinned, and when she logged off her room was plunged into darkness.\n\nI was up early in the morning, watching Rebecca stumble out of bed and dress. She paid no attention to the window, just acted like it wasn't there, and I got a few seconds of tit for my troubles that set me up nicely for the rest of the day, my first day of suspension. It dragged. Daytime television sucked, and computer games only kept me busy for so long. Later on I showered, shaved, and tidies my bedroom like it hadn't been tidied in years. My cock books were hidden well , my dirty dvds torrented off the internet tucked away where I doubted even I would find them again. Air fresheners were strategically placed around my room and in the loft around the telescope that had begun to smell a little fausty with all the semen spilled up there recently, and I blew some of my carefully hoarded cash on a bottle of white wine from the local Spar and put it in to chill with a bottle of lemonade. It took a while to find a dice, but eventually I stumbled across one in the junk drawer and set it on top of my TV.\n\nJust in case of an emergency I put a pack of condoms in my bedside cabinet and made a nice playlist of what I like to call 'fuck music' on the laptop. Some Prince, some INXS, some Kate Bush, and Liz Phair. Some Hole and some pj harvey. Girl friendly seduction tunes. I wasn't expecting to get laid, but I wasn't counting it out, either. When 8 o'clock came and Rebecca knocked on the door everything was perfect. I took her up to my room, poured her a glass of wine, topped it up with lemonade, and we talked about my first missed schoolday in three years.\n\n\"You should be back in on Friday. Clive went to the head an set things straight.\"\n\n\"Oh?\"\n\n\"I told him that if he didn't I'd tell anybody who listens that he's got a tiny prick, can't keep it hard and blows his load in fifteen seconds.\"\n\nI almost spat my wine over the walls. \" Wow, I'd best not get on your bad side.\"\n\n\"Consider it a warning.\" She quipped. \" Why is there a dice on your telly?\"\n\n\"Oh, no reason.\" I winked at her.\n\nShe plucked it off the top of the TV and threw it onto the bed. Up rolled the 6.\n\n\"Want to try again?\" I asked.\n\n\"Where's the prize list. What do I get for a 6?\" She smiled, setting her wine glass down and laying back on the bed.\n\n\"There isn't one. What do you say, three each. I do the odds, you do the evens?\"\n\n\"Pen?\"\n\nI wrote mine down and put the paper upside down on the dresser. I'd gone for a gentle break-in. 1 was a three minute snog, 3 was a tit sucking, and 5 was a full strip down to nothing. Basically it was nothing that she hadn't already done. I had no idea what she'd written down for the evens, and she laid her piece of paper down on top of mine. \" Who goes first?\" She asked.\n\n\"You do. And if you don't want to do it you can back out at any time. No pressure.\" I assured her. I placed the dice in the palm of her hand. \" Roll it, baby.\"\n\nIt came up a 4.\n\n\"Hmmm.. that's one of mine.\" She smiled, turning over her piece of paper and folding it so that I could read only what she had written for 4.\n\n\"Undress your partner?\"\n\n\"That means you. I get to undress you. Totally. Stand up.\" She commanded me. Somewhat hesitantly I obeyed, then she gently kissed me on the lips as her hands deftly worked at my belt buckle.\n\n\"What about you?\" I asked as she pulled my shirt up out of my jeans and began to unbutton it.\n\n\"Well, you've already seen me in the nude, and more, so if you don't roll a 4 it gets to be my turn to see you naked and there's nothing you can do about it. Unless you want to chicken out now,\" She added as she slid her hands up my exposed chest and slipped the shirt off my shoulders. Of course, she didn't know that a 5 would see her stark naked as well, but with that she'd have to undress herself. In moments my shirt was on the floor, and her tongue traced lightly across my chest as she sank down onto her knees, my crotch at eye level as she popped the button on my jeans and unzipped me slowly. I gulped, and I looked out my bedroom window and across the main road, suddenly aware that my curtains were open and there was a possibility that we were being watched.\n\n\"I'll close the curtains.\" I said as she undid the laces of my trainers.\n\n\"No! Leave them.\" She said as she inched my trousers down, my hardening cock straining in my boxer shorts. If it got any harder it would be peeking out the top, and she'd be able to see it in a moment. My jeans fell around my knees, and I stumbled onto the bed after a gentle nudge from her that enabled her to then throw my trainers and my socks acro ss the room. \" Stand up again.\" She said, still on her knees in front of me, my penis now stretching my boxers damn near to breaking point. \" Almost there.\" She murmured, licking her dry lips as both hands began to ease the elasticated waistband of my shorts down. My cock was pulled about inside as she eased them down, bent into an uncomfortable angle as her hands tugged my shorts down off my hips, then she moved both hands into light contact with my cock through the thin fabric of my shirts and peeled the cloth over the head of my shaft, exposing me. After that my shorts were on the floor around my ankles, then on the window sill, and she kneeled before me, my cock almost in her face.\n\n\"Now that's a good looking dick.\" She murmured.\n\n\"Seen a lot?\" I wondered aloud.\n\n\"Internet access. Only good for stealing music and hard core porn.\" She laughed, and I felt her cool, minty breath wash over my prick, making it jerk involuntarily. Would she touch it? Would she kiss it, suck it, wank it into her mouth? I mused as I looked down at her and she looked back up at me in blazing, lustful eye contact. I felt her hand on my thigh, moving upward, then her fingers touched mine and pressed the dice into my hand.\n\nI rolled a 1, and showed her my list. She stood up in front of me and we snogged hard, my naked cock rubbing against her jeans as her hands roamed all over my body in the clinch, grabbing at my naked ass, pinching my nipples, her tongue next to frantic as it explored my mouth and my hands were inside her sweater, squeezing her tits through her bra as we moaned into each others mouths. She avoided touching my cock with her fingers as it stood erect, trapped between us, but still I could feel the juices building up in my balls from the arousal that she was driving me to. I broke away and she picked up the dice from the bed.\n\nShe rolled a 2, which was also a snog, and lay down on the bed, beckoning me on top of her. I covered her body with mine and latched my lips onto her face again, and this time her fingernails were digging into my ass as I lay on top of her, pulling the cheeks of my butt apart as she writhed beneath me, my cock pressing down against the vee of her crotch. I groaned as her fingers traversed the crack of my ass, grinding my hips against her in a dry hump that also brought a few moans from her own mouth that were smothered by my tongue. The next roll was another 4 and I went to work as she lay on the bed.\n\nI straddled her now, my cock standing up, pointing skyward as I pulled her sweater up her body to expose her black bra. My balls pressed the pale flesh of her belly as I pulled the sweater over her arms and stared down at the double delights that would soon be unfetterred. I slid down her body, unbuttoning and unzipping her jeans, then I eased them down over her hips. She lifted her ass off the bed to assist me, and soon her black jeans were just a dark pile on the floor on top of her shoes. Now I knelt between her legs, gazing down at her pale skin that was offset by the black bra and knickers that were all she was now dressed in.",
        "\"Roll over.\" I told her. As soon as she had done so, and now lay on her belly, I climbed back on top of her, straddling her ass. I pressed my erection down into the crack between her butt cheeks and leaned forward, kissing her on the shoulders as my fingers unclasped her bra strap. She heaved herself up onto her elbows and the bra fell onto the bed, her big tits hanging down. My hands instinctively moved underneath and cupped them both, but she moaned 'no touching' at me half heartedly, so I released them and instead ran my tongue down along her spine to the small of the back as my attention moved to the final barrier that stood between both of us being naked.\n\nI eased her knickers slowly down, exposing inch after tantalising inch of her flesh, until my tongue was running down the backs of her thighs, eliciting a shudder as it slithered behind her knees, then down to her feet. Her knickers were the latest addition to the small pile of clothes on the floor as I moved back up her body and lay beside her. She turned her face to me and smiled. \" Dice?\"\n\nShe rolled a 5, which was wasted, so handed the dice to me. \" Should we make another list?\"\n\n\"You haven't ha d the six yet.\" She reminded me. And I haven't had the three.\"\n\n\"Put them on the new list? Or we could just let things go their natural course.\"\n\n\"We'd end up fucking inside five minutes.\" She laughed.\n\n\"Would that be so bad?\" I wondered aloud.\n\n\"We've got all night.\" She reminded me. \" Odds and evens again, you write what you would like to do to me, and I'll write what I want to do to you.\"\n\n\"Just as a matter of interest,\" I asked as I handed her the pen. \" What was number 6?\"\n\n\"It'll be number 2 on the new list.\" She winked.\n\nI wrote my choices down. 1 for a titsuck, 3 for a fingerfuck, 5 for pussy eating session. I set the list on the bedside cabinet and put hers on top of it, just about resisting the urge to take a peek. \" Whose turn to roll?\" I asked.\n\n\"Mine.\" She said, and threw the dice at the headboard. It bounced back before us to show a 3.\n\n\"Lucky you.\" I murmured. \" You now have to put up with me fingerfucking you until you come, unless you want to back out?\"\n\n\"Back out? Why the fuck would I want to do that?\" She laughed and reached for my hand as she opened her legs into a triangular configuration as she lay on her side, facing me. I glanced down at the exposed triangle of dark black hair. When I looked back up at her face she was staring at me, her pupils slightly dilated perhaps by the wine, and I felt her fingers close over mine. She guided my hand between her legs, closing her eyes as she pressed my fingers against her damp slit. I leaned forward and parted her lips with mine, sliding my tongue into her mouth as my hand became familiar with the form of her warm, wet cunt, tracing up and down the blood engorged labia as the invisible hole slowly expanded until my fingertip was running up and down between the twin wings of her sex, which had somehow split to welcome my finger inside.\n\nHer tongue froze in my mouth as the tip of my finger broke past the initial resistance of her pussy's opening, and she arched her back, tearing her mouth from mine as I eased my finger in to the knuckle joint. \" Ahhhh;\" she moaned as I kissed her throat, and I pressed myself closer to her, her hard nipples touching my chest as I began to masturbate her slowly, gently, driving the digit in until my palm butted up against her perinium and then wiggling it inside her. \" Fuck,\" She gasped. \" You do that better than I do!\"\n\nI bent my head down and kissed between her boobs, and she immediately put her hands under one of her tits and steered the nipple to my mouth. I didn't need asking twice, and latched my lips over the bud hungrily as the movements of my finger speeded up. \" ohhh;\" she groaned. \" Faster. Faster.\" and she wrapped my hair in her fingers and clutched me to her breast. I did as she asked, suckling on first=2 0one nipple and then the other, and her legs were beginning to scissor around my hand as I worked on making her come. \" Two fingers.\" She urged. \" Oh, fuck...\"\n\nMy second finger slid in easily alongside the first, and I dug them into her soaking hole with no regard for her comfort. This was turning into a proper fingerfucking, not just a heavy petting session. I bit on her tits, making her cry out load, and she began fucking my hand, her pelvis movements answering those of my palm as it slapped wetly against the vee between her legs.\n\n\"Oh God.......Aahhhhhhh...\" She groaned as she climaxed, her tits thrusting into my mouth one last time, her cunt muscles clamping and releasing my two fingers as their motion slowed to a stop, still buried all the way inside her spasming pussy. My cock was now aching terribly. It had been hard for at least half an hour. It took all my self control to stop myself from rolling her onto her back and mounting her right right there and then. Her eyes slowly opened as I kissed her lightly on the nose, my fingers sliding out of her slick hole. In the slowly gathering darkness I brought my glistening fingers up to my face and tasted her juices. \" I never imagined how good having somebody else finger me could be.\" She sighed as she returned to her senses. \" Better than doing it to myself. Much better.\"\n\nI found the dice and rolled it before she could object, and this time it was my turn to laugh. \" Hm mm,\" she sighed gutturally. \" What's 5?\"\n\nI kissed her on the belly as I moved down, making her squirm, and she soon realised what I was up to when my tongue traced down from her belly button to the fringes of her pubic hair. I brought my still wet fingers back down to her shining, dew speckled hole and used them to pull her pussy open. \" Oh!\" she exclaimed, and she raised her knees and spread her legs, rolling over onto her back.\n\n\"Remind me to never play strip poker with you. I wouldn't stand a chance against a bitch with your luck.\" I complained, then I dipped my face into her thighs, tongue searching for the hole. She shuddered as it found it's target, my fingers still holding her wide open, and both her hands grabbed wildly at my hair. She was still tender down there from the fingering, but soon she was thrusting her hips at my mouth and tongue as I swept it over her cunt, inside and out, and my tongue wriggled inside her, teasing her clitoris mercilessly as her feet rubbed up and down my back. \" Oh yes,\" she moaned. \" Don't stop. That's it. Ooohhhhhh....\" My hands slid up her belly to her tits, squeezing them and pinching at the hard nipples.\n\nHer second climax hit her like a freight train. She cried out loud and I momentarily panicked at the thought of my parents bursting through the door wondering what was going on and finding me with my face buried between Rebecca's legs, her hands tangled in my hair, her hips hu mping my chin wildly, and my hands fondling her tits.\n\nI moved away from her as she shook and quivered with her second orgasm, then I held her close as her breathing stabilised, her leg hooked over my waist as I moved my cock into position ready to fuck her. The hot wetness of her cunt burned against my balls as she rubbed her pussy against my hard-on. A little movement down and to the left and I would be inside her, I knew, and nothing she could do would stop me. After coming twice in the space of a few minutes she was in no fit state to fight me off even if she wanted to. The way her pussy rubbed my cock as her thigh slid up and down my leg assured me that she was ready to be fucked, that this was the time, that if I now slipped my cock inside her she'd be well on the way to a third orgasm within moments. The head of my cock found itself at the tight entrance to her cunt, and all it now needed was one little push, one brief, sharp thrust of the hips and she'd be impaled.\n\n\"Easy, tiger.\" She breathed. \" You haven't scored a 6 yet.\"\n\nI laughed and rolled over onto my back, and she wrapped her arms around me and hugged me tightly. \" More wine?\" I asked as I extricated myself from her grasp and clinked the half empty bottle against her glass.\n\n\"Yes, please. Trying to get me drunk and have your wicked way with me?\" She giggled as she lifted the glass to her lips and knocked half of i t down in one go. I knocked half of mine back to match her, then stood up and moved to the work desk for some lemonade to top it up again. \" My God, look at that poor thing.\" She murmured. \" It's been hard for ages and hasn't even been touched yet. I hope you can keep it up that long when we do get serious. Do you mind me talking like this?\" She asked. \" You know, lewd and dirt like?\"\n\nI poured her some more wine and told her that I loved it. That is she wanted to whisper dirty talk in my ear then she could probably make me come without even touching me, and that if I'd thought of it I'd have made that number one on the dice list instead of just a tit sucking that she got for free in the middle of the number 3. She'd had the full suite of dice pleasures and I'd had nothing except the brief feel of my swollen knob trapped at the warm, wet entrance to her tight cunt, not that I was complaining mind.\n\n\"Give me the dice.\" She whispered as I sat down on the edge of the bed. She got to her knees and slid across to me, putting her arms around my neck from behind. I could feel her hard nipples against my back, raking left and right as she swayed behind me. She took the glass from my hand and finished it off for me, then I felt her breath in my ear as her hands moved down around my belly. The dice appeared as if by magic, and she shook it in her hand, then threw it across the room where it simply vanished.\n\n\"Was that a 2 or a 4?\" She asked as she kissed my ear lobe, then her hands moved into a stranglehold around the base of my cock. \" I can't tell.\" She murmured into my ear.\n\n\"Was it a 2 for a handjob, or a 4 for me to suck your lovely hard cock.\" She asked, whispering in my ear. \" Or maybe it was a six. Maybe I should climb on top of you, straddle your hips, and let my hot, wet fuck-hole slide down your big, hard meat. What do you think?\"\n\nI was beyond thinking. The dirty talk in my ear and the fingertips meeting at the base of my cock had fused my brain. Her hands began to move up and down my hard shaft as she cooed into my ear, \" You like this? My hands on your cock, my tongue in your ear, my tits pressed hard against your back, my wet pussy getting desperate to feel your cock slamming in and out of it. Or would your prefer my dirty talking mouth to be busy doing something else, like sucking on the big, purple knob?\" Her hands were moving faster now, both of them wrapped around the shaft, stroking it from the base to the ridge of foreskin bunched up under the taut glans. This was so much better than jacking off.\n\nI swallowed and groaned as she bit my ear-lobe, my cock jerking in her hands. \" Are you gonna cum for Becky? Cum all over Becky's hands? Or would you rather cum in Becky's dirty mouth, or over Becky's fat tits. Or are you saving it all up for Becky's hungry pussy, because Becky's hungry pussy wan ts to swallow up all that sticky cum, oh yes!\" She breathed in my ear as her hands tightened their grip, milking my cock for all it was worth. I couldn't hold back any longer, and I managed to gasp out that I was going to cum just as her tongue squirmed deep in my ear lobe. That did it.\n\nCum erupted from the tip of my cock in a sequence of jets that left me breathless and shaking as it fountained into the air and then rained back down on Becky's hands and my belly. Her hands kept moving as I came, and she gasped in my ear as she watched me orgasm. \" Oh my, look at that, Oh fuck that's so erotic.....\" Her words were lost on me as her hands slowed and I shuddered the last few drops of cum out of my balls while Becky commented on how they were running down the shaft of my cock and soaking into my pubes. Her hands eventually released my cock, and for the first time in an hour it slowly began to deflate. She watched it intently, silently as it changed from stick to snail.\n\n\"Where the fuck did you learn to do that,\" I gasped as I collapsed exhausted and drained onto the bed beside her.\n\n\"Same place you learned to rug munch,\" She offered. \" t'internet. You hear of cyber-sex?\"\n\n\"Sure. Same as mobile phone text-sex.\"\n\n\"Well that's what I've been doing since I lost my virginity. I went dry and disinterested for about a year, but the hormones kicked in again and I was just so lonely - no friends, no boys interested in me because I'd gotten fat.\"\n\n\"You're not fat.\"\n\n\"I was. I've worked a bit at it. Now I'm what is generously described as 'curvy and soft'. Anyway, a girl's got needs, so I went on sex chat websites and let people who couldn't see me flatter me and get me horny. You get real good at dirty talk there. I loved showing guys my tits and my pussy, and I loved watching them wank on webcam while I fingered myself and we both talked dirty. I've tried nagging my father to get broadband so I can get a webcam of my own, but no dice. Money's not there. When I showed off for you last night it was like a dream come true. A guy could see the whole me, the real me and not just a tits and cunt mobile phone close up, and that was enough for him to drop his shorts and beat the meat. Somebody who knew me felt the urge to wank over me. I havent felt so wanted in years.\"\n\nI kissed her tenderly on the mouth, then used my t-shirt to dry up the cum that was still on my belly, soft cock and my upper thighs. She watched, taking a sip of wine. \" How long before it gets hard again?\" She asked idly.\n\n\"No idea.\" I shrugged. Normally after I cum I fall asleep.\n\nRebecca laughed. \" Yeah, it's like that online. As soon as the juice gets loose the screen goes dead. You know what I want to do right now more than anything else?\"\n\n\"I have a vague idea.\"\n\n\"I want to fuck. I want your hard cock in my belly. I want to feel it slamming in me until we cum together, and I want to feel it go soft inside me when you've finished using me.\" She whispered. I could feel my cock beginning to stir again already, and she put her glass down on the floor, wrapped her arms around me, and pulled me down onto the bed. We were upside down in relation to each other, and as she hovered over me, her lips descended on mine, her nose touching my chin, and we kissed upside down. My cock stirred some more, now uncurling itself against my belly. After a moment she began to move down my body and her tits glided over my face. I reached up and pulled one into my mouth, listening to her moan as I suckled hungrily on the nipple, then her hand found my balls and began to squeeze. I released her breast and she moved down further, her belly now directly over my mouth as she hauled my hardening cock upright, then her cunt was in my face and her mouth closed over my penis.\n\nThis was heaven. She spread her legs on either side of my head and lowered her cunt right down. I reached up and grabbed her ass, moving her hole into position over my mouth, then I slid my tongue along her slit as her mouth inched further down my hardening cock, taking more of it inside the velvetty well. She was hesitant at first, uncertain of what she was doing or perhaps just getting used to the taste of cum that undoubtedly still=2 0coated my cock, just sliding her mouth up and down loosely, then she began to use her tongue and her teeth, then as my tongue swiped her clitoris she allowed my cock to fall out of her mouth and slap against my belly as she moaned.\n\n\"Condom....\" I heard her gasp. \" Right now.....you're hard enough!\"\n\nI reached under my pillow and pulled out the rubber as her tongue swirled over the tip of my prick, and tore the wrapping off. I fumbled the thing down toward my cock, but she took it out of my hand and sat upright, her pussy mashing down into my face. I felt her hands working on my dick, dressing it with the condom, my tongue buried deep in her wet fanny and her ass in my nose. Then she turned around to face me, swinging her legs over my body as her hand guided my cock to the dripping wet entrance to her fuck-hole. I looked up, wanting to watch the moment that I lost my virginity and saw her big tits hanging over me, the nipples hard and poking straight out. Her hand gripped my cock tightly as her hips lowered, aiming it perfectly on target. Her eyes were closed in anticipation, her tongue just poking out of her lips, her hair mussed and cascading over her shoulders. I felt the heat of her snatch as our bodies touched, then the exquisite tightness of her vagina as my knob forced it open, nudging it's way inside.\n\nI gasped. Rebecca groaned. The pressure mounted and then the resistance just seemed to disappear as she lo wered her body down onto me while I watched inch after inch of my shaft disappear from sight. When our groins touched, when our pubic hair tangled together, she lowered her upper body down and her mouth found mine. I moved my hands to her tits and squeezed them together as our tongues fought, then I rolled her over onto her side, then onto her back, all the time maintaining mouth to mouth contact.\n\nShe opened her eyes as she lay beneath me, and I saw they were moist as if she were about to cry, then I felt her hands on my ass cheeks, pulling me in, fingernails painfully digging into my flesh as her cunt muscles randomly tightened and released my cock. I knew I should start the time honoured motion and begin making love to her, but the moisture in her eyes momentarily stalled me. I was about to ask if she was okay, then she locked her gaze with mine and whispered. \" This was how I always imagined my first time.\"\n\n\"This is our first time.\" I whispered back as I began to fuck her slowly. \" What came before was just a bad dream.\"\n\nThe lovemaking proceeded slowly, eliciting muted grunts from her as my length slid in and out of her tight fanny. Her hands moved up my back, and her legs spread wider, encouraging me to drive myself deeper into her. Soon she began moving with me, meeting my thrusts, and everything began to feel incredibly natural. I felt like I could keep this up forever, and later learned that this was just som ething that came with wearing a condom. Rebecca closed her eyes and moaned as the rhythm of our lovemaking increased in tempo, and I maneouvred myself so that I was pressing down on her tits with both hands while I fucked her, squeezing them together, pinching the nipples. Her hands caught in my hair and she tried to pull me down into a kiss once more, but I made my upper torso go rigid and unyielding until she gave up. I loved watching her as we fucked, the contortions that went through her face, the ripples that ran through her body and her breasts, the eyes - when they were opened - rolling into the back of her head then snapping back to gaze into my eyes lustfully, wantonly.\n\n\"Ahhhhh,\" she moaned. \" Fuck me, baby.\"\n\nI powered into her, making her gasp, her nose flaring and her eyes going wide. \" Don't talk dirty or I swear I'll come.\" I grunted. \" You know what that did to me earlier.\"\n\n\"Oohhh, yess!\" She hissed as her cunt muscles clenched on my cock again. \" Fuck me harder. Make me cum, too.\"\n\nI closed my eyes, concentrating on not coming and thankful that her making me cum earlier on was helping me keep going now. The condom desensitising me to a certain extent also helped, but Rebecca wasn't listening to me. Perhaps she wanted to hear me talk that way, too.\n\n\"You like this?\" I grunted as my balls slapped against her ass, my hands pushing her nipples together until the touched each other .\n\n\"Oh Yessss.\" She moaned, her thighs lifting, spreading, her hands clamping on my ass cheeks again. I took my hands off her tits and watched them jump and sway as our lovemaking intensified, then she threw her hands behind her head and gasped; \" Fuck, I'm coming again!\"\n\nI wasn't far behind, and after several hard, fast, near frenzied thrusts of my cock I felt her cunt muscles rippling around my cock, and she put her knuckle in her mouth and bit down to stifle her orgasm. The tightening of her cunt on my cock triggered my own orgasm, and I cried out as my sperm exploded out of me, our fucking slowing as I emptied what was left in my balls inside Rebecca. Her legs had scissored around my back, holding me deep inside, preventing me from sliding out of her, and she reached up and pulled my face down onto hers, kissing me slowly and passionately as my cock slowly began to soften inside her. I felt her cunt contracting around my semi-hard dick in valiant but vain efforts to keep me hard and aroused as the minutes passed, then finally it plopped out of it's own accord and I rolled off her.",
        "\"Wow.\" I breathed as we lay side by side on my bed. She sidled up to me and put her arms around me, and I felt her cunt, hot and wet, press against my hip. Her hands teased my nipples and she kissed my shoulder as I subtly removed the condom and dropped it on the floor. I'd worry about the mess later.\n\n\"I've dreamed20about this moment for a long time.\" She murmured.\n\n\"Me too.\" I admitted.\n\n\"I could lie here forever.\" Her hands strayed down to my soft penis and began stroking it absently, as if she wasn't even aware of what she was doing to me. \" I wonder what was on the dice?\"\n\nI laughed. \" Want me to check?\"\n\n\"No.\" She smiled. \" But I know what'll be on the dice tomorrow when I bunk off school.\"\n\n\"Oh?\" I grinned, thinking how cool that was going to be.\n\n\"Yeah. 1-6. Fuck me.\""
    ],
    "authorname": "Millsy",
    "tags": [
        "male virgin",
        "female virgin",
        "virgin couple",
        "his first time",
        "nerdy",
        "first love",
        "18-year-old",
        "male voyeur",
        "bbw",
        "busty"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/through-the-lens-1"
}