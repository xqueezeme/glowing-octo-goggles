{
    "title": "Goddess Ch. 04: Coalescence",
    "pages": [
        "*Author's note- This is the fourth installment of the Goddess series. This chapter will make more sense and be much more meaningful if you read the previous Goddess stories\u2014Goddess, Leaving Heaven Behind, and Gladiators\u2014first.\n\nI allowed Jeff to carry me all the way up the stairs to their dorm room, but had him put me down as Mark unlocked the door. I felt silly. I had no idea what they could possibly show me that would make me feel better or less embarrassed, but I was glad they were speaking to me again. I was also relieved to be out of my room, away from the tiny shards of my beloved mask that littered the floor.\n\nMark ushered us in and shut the door and we all just...stood there.\n\nI didn't want to say anything. One: I was afraid of reminding them they were upset with me, and two: I didn't want to try and answer questions about Vegas. There was no way I could make that night sound any more coherent in their room than I had downstairs in mine. At this point, I felt certain I'd made it a much more poignant memory than it actually had been; it simply wasn't possible that it was as amazing as I kept remembering it to be.\n\nMark and Jeff looked at me, then at each other, then at me again, fidgeting and pacing as much as they could in the small space. Mark would open his mouth, look at the two of us, and then immediately shut it again. A few seconds later Jeff would do the same; it was getting weird. When I finally felt like I had my emotions under control, I cleared my throat.\n\n\"Well? What did you want to show me?\"\n\nThey looked at each other again, a loaded stare that I'd seen between them before\u2014usually out of the corner of my eye. Mark sighed and nodded, and Jeff retrieved something from the dresser between their beds. Without turning around, Jeff said,\n\n\"We didn't know how to tell you, especially once we thought you regretted it.\"\n\nHe stood with his back to me for another beat, then turned to me, handing me a piece of paper. Wait, no\u2014a note. A note with Caesar's Palace letterhead. My stomach dropped into my shoes.\n\nOh my god...\n\nI couldn't look away from the note, from the way it was puckered at the top with juices\u2014my juices\u2014that were long dry. The events of that wild masquerade night in Vegas flashed before my eyes. Prancing around in public while practically naked. Propositioning strangers. Letting two complete strangers fondle me and lick me and fuck me at the same time. My pussy was wet with the memories even as my face burned with humiliation and shame and...and I didn't even know what else.\n\nHow could this be here? How did they get it? How much did they know?\n\nI anxiously looked up at Mark and Jeff, my eyes wide. Theirs were tense. My voice was small, but I was amazed that I could speak at all.\n\n\"Oh my god. How did you...where did you get this?\"\n\nJeff gave me an exasperated look. Mark gnawed on his bottom lip and it finally clicked. His short, blonde hair notwithstanding, I was looking at the dark haired gladiator. One of two that had made me so wet with a stare across the dance floor. The one that had bitten his lip just. like. that.\n\nI looked back and forth between the two of them and wondered how I'd been so goddamn stupid.\n\nBlue hair? Shaved heads? I'm a fucking moron.\n\nThe note clutched in one hand and the mask fragment in the other, I put my fingers into my hair and clenched my eyes tight, my face on fire. The actions of our night together burned incessantly behind my closed lids. These men\u2014my best friends!\u2014had not only seen me naked, but had touched and licked my entire body, and fucked me every way conceivable.\n\n\"Oh my god. Oh my god. Oh my god! Oh my god! OH MY GOD!!!\"\n\nHands still intertwined through my hair, I opened my eyes.\n\n\"Did you know it was me?\"\n\nJeff gestured toward the note as if to say, well, yeah...I gripped my hair tighter and shook my head.\n\n\"I mean, obviously you know now, but when did you know it was me?\"\n\nMark and Jeff looked at each other before they looked back at me, their eyes pleading.\n\n\"Uh...we recognized you at the bar, but...uh...we went there looking for you, Sara.\"\n\nAs the words left Jeff's mouth, I could better identify the other emotions that were making me burn now\u2014betrayal and anger. My hands balled at my sides, the mask fragment cutting into one hand, the note crumpled in the other.\n\n\"WHAT THE FUCK DO YOU MEAN YOU WERE LOOKING FOR ME??? How did you even know I was going to be there???\"\n\nThey looked at each other uncomfortably. Jeff mumbled something about seeing something on my computer, but I wouldn't let him finish.\n\n\"So what? You followed me all the way to Vegas for what? To throw me a pity fuck???\"\n\nI was furious. The anger that had been directed downstairs at Michelle was nothing compared to what I was feeling towards the men I'd considered my closest friends. The fact that my nipples were achingly hard and my groin was throbbing from being so close to them only served to fuel my fury.\n\n\"You think I'm so pathetic that I couldn't get laid at a literal orgy???\"\n\nI don't know how I expected to react when I'd hoped to learn the identities of my gladiators, but it wasn't this, and every hypothetical conversation I'd had in my head that night had not prepared me for it. At all. The humiliation was crushing.\n\n\"DID YOU THINK THIS WAS FUNNY???\"\n\nBoth Mark and Jeff stood staring at me like the proverbial deer in the headlights, and it made me all the more furious. How could they not expect this? Not see that their lack of faith in me as a woman would be construed as hurtful? And damn, it fucking hurt. The most incredible lovers in my life had only been there because they thought...what? That I was piteous? A joke? My voice fell into a harsh whisper.\n\n\"You fucks sat in my bed and taunted me. You knew, and you fucking taunted me. Did you come back here and have a good laugh about it?\"\n\n\"No! No, Sara, not at all! It wasn't like that!\"\n\n\"Really, Jeff? What was it like, then?\"\n\nI was so mad that I could see he was afraid to answer. I covered my face with my hands, the piece of mask poking between the thumb and forefinger of one hand, the note poking out of the other.\n\n\"Oh my god. Oh my god! I can't believe you saw me like that!\"\n\nMy hands moved from my face to rake through my hair, and I started pacing in a tight circle, my stomach in knots.\n\nJeff reached out a hand to my shoulder to stop me, plucking the note from my fingers.\n\n\"Sara, look! You wrote this,\"\n\nThe puckered note mocked me, and I felt my face burning an even deeper shade of red.\n\n\"But it was the best night of our lives, too!\"\n\nHe looked at Mark. All Mark could do was nod mutely, but I saw it. Jeff turned back, hoping I'd calmed down, but his words didn't register with me and I was as mad as ever. I pushed his hand off of my shoulder and shook my head. I bit the inside of my cheek to keep humiliation from boiling over into tears as I had another epiphany.\n\n\"Of course you knew it was me. Your hair. You both cut and dyed your fucking hair to disguise yourselves? Why would you do that to me? What made that seem like such a great joke???\"\n\n\"We weren't trying to trick you, Sara, we were trying to...\"\n\n\"To what, Jeff? To WHAT?\"\n\nDespite my uglier emotions, the thought of either of them wanting me in the ways they'd taken me in Vegas immediately made me sopping wet. I shifted my legs and tried to not let it distract me.\n\n\"We tried to take off the masks, you wouldn't let us...\"\n\nI immediately tensed, the surge in anger over Jeff trying to shift the blame of this onto me, even partially, burning away any threat of tears. The unbidden arousal wasn't so easily dismissed.\n\n\"Why, when I went somewhere that I obviously wanted privacy and anonymity, would you actively search me out? In a different state? In fucking disguises? Weren't there enough willing women there that night? Or was my humiliation part of your thrill?\"\n\nI was starting to see anger reflected back in Jeff's sapphire eyes. Mark looked hurt.\n\n\"How could you possibly think those things about either of us, Sara?\"\n\nI spun toward Mark to respond, but Jeff cut me off, his tone much less apologetic.\n\n\"Listen, damn it! We were trying to approach you in a way that wouldn't completely derail our friendship if you weren't interested.\"\n\nI threw my head back with a sarcastic guffaw. The thought that these two gorgeous men could be intimidated by me was ludicrous.\n\n\"Yeah, sure. You two were afraid to approach me. That is some grade-A horse shit, Jeff. If you're looking for an acceptable excuse, keep looking.\"\n\nI'd had enough, and I turned for the door.\n\n\"Good god, Sara! We didn't say anything because we're in love with you!\"\n\nI'd like to say silence fell, but that would be an understatement to the nth degree. Silence jumped out of an airplane, its parachute didn't open, and it plummeted through the center of the earth.\n\nNone of us spoke for what felt like an eternity. I was the first to break the heavy silence, my voice a whisper as I faced them again.\n\n\"What...I'm...what? What are you talking about? I'm not even your type. You both like tall, leggy blondes...and redheads...\"\n\n\"Yeah, well, you've kind of spoiled curvy brunettes for us, Sara. But do you really think any brunette or blonde or redhead could measure up to you?\"\n\nI just stared, my gaze moving slowly between the two of them. My mouth was closed, but my jaw didn't feel like it was going to snap anymore, so there was that. Mark took the opportunity to try and explain.\n\n\"Sara, you know we'd do anything for you. You mean a lot to us. And Jeff's right, I...we...\"\n\nHe swallowed hard.\n\n\"We're in love with you. We just didn't know how to tell you without ruining everything that we had together.\"\n\nI was listening, so he kept talking.\n\n\"We saw your plans for the trip, and he,\"\n\nMark looked at Jeff.\n\n\"We thought that if we went there and approached you as strangers, you could make a choice between the two of us without feeling pressured because it was us. And if you didn't choose us, we didn't have to lose our friendship. Lose you.\"\n\nI stood with my hand on the doorknob, dumbfounded. They're in love with me? They had both said it, but I couldn't process it. First they're my best friends, then they won't talk to me, and now they're telling me they drove hundreds of miles and changed their appearances in hopes of seducing me? Forget hope, they gave me more orgasms that night than every other lover I'd ever had combined! How was I supposed to respond to this?\n\n\"You're...in love with me?\"\n\nMark nodded.\n\n\"And you're in love? With me?\"\n\nJeff shrugged and nodded as well.\n\n\"And you wanted me to choose one of you?\"\n\nThey both nodded, solemnly.\n\nI thought my head was going to explode. I opened the door.\n\n\"I need to think.\"\n\nI slipped out before either of them could say anything, closing it behind me and leaning against the doorframe, praying I could get my head together before either of them came looking for me.\n\nThe images flashing behind my closed eyes this time were a montage of the three of us over the past couple of years\u2014studying, watching movies, laughing. It was always the three of us.\n\nAlways.\n\nMy thoughts turned to Vegas, and the three of us together that night, too, the masked strangers' faces replaced with the men waiting for me on the other side of the wall. My entire body burned.\n\nHow could I possibly choose one over the other? And yet, there was no going back, either. There was no way those innocent times could occur knowing how they'd made me feel, and what they knew I was capable of, and how they really felt\u2014although that last point still seemed unimaginable.\n\nI had an impossible choice to make, but it had to be made. I took a deep breath and hoped I was making the right one. Opening the door, I stepped inside, leaning against it as it closed softly. Neither Jeff nor Mark had moved at all, despite the fact I felt as though I'd been in the hall for hours.\n\nI looked back and forth between them, then focused on Jeff. His dark hair was growing back, roughly the length of a crew cut. I took a step towards him, but he wasn't the Dark-Hair I was looking for just yet.\n\n\"Wait,\"\n\nI abruptly turned to Mark.\n\n\"You had the dark hair that night.\"\n\nHis voice was hushed.\n\n\"Yeah.\"\n\n\"Kiss me.\" I whispered.\n\nHe looked concernedly at Jeff, then stepped forward, taking my face in his strong hands and angling it up toward his. He bent his head low and hesitated for a split-second, his full lips grazing mine before pressing against them sweetly. I closed my eyes and allowed myself to be kissed, my mind still reeling.\n\nMy gladiator is kissing me! No, Mark is kissing me! Mark!\n\nHe pulled away, and I opened my eyes to his questioning gaze, his hands still on my face. It was great, but it wasn't what I wanted. I took a deep breath.\n\n\"I said, kiss me.\" I licked my lips. \"Pretend I'm the goddess.\"\n\nMark's eyes widened, then sparked, the fire inside familiar to me even if I couldn't yet truly reconcile the fact that those dark eyes belonged to my Dark-Hair. His hands flew from my face to my backside, where he picked me up until we were eye-level, his hard body pressing me against the wall. I had little choice but to wrap my arms and legs around him as I gasped in surprise.\n\n\"I'm not pretending anything,\" his voice was a low growl. \"You are a goddess.\"\n\nOne of his hands slid to my neck and curled in my hair as he crushed his lips against mine, his tongue hot in my mouth. I melted into his firm body. This was the kind of kiss I was hoping for, the kind of kiss he'd first given me on the dancefloor in Vegas. The kind of kiss I was afraid I'd never experience again.\n\nI threw myself into him, meeting his passion. With every thrust of his tongue, I felt my disbelief diminishing, felt the goddess returning. His cock swelled, pressing against the inside of my thigh and making me moan into his mouth. My eyes fluttered open just in time to see Jeff storming to the door, pointedly not looking at us. I pulled a hand away from Mark to clumsily grab a handful of Jeff's shirt, my knuckles grazing the firm ab muscles beneath. He stopped reluctantly, his hand on the doorknob. I tore away from Mark's lips and breathlessly asked Jeff,\n\n\"Where are you going?\"\n\nHe stared at the doorknob, his voice low.\n\n\"You two obviously need some space.\"\n\nI pulled the fabric in my hand tighter, forcing him to meet my eyes as my fist slid further up his muscular torso.\n\n\"How many times do I need to tell you, Blondie? I need both of you.\"\n\nThe relief in his face was so desperate that I thought he was going to cry. He allowed me to pull him in for a kiss no less passionate than the one I'd been sharing with Mark, who watched on with a huge grin before biting gently at my neck.\n\nI wasn't sure if I was actually awake or not; either way, I was in heaven. Jeff's hand had moved under my shirt over my ribs, and his touch was fire. Mark's burning hand moved up the other side cupping a breast and stroking my nipple with his thumb. In tandem, they pulled my shirt over my head, and theirs hit the floor without my feet touching the ground. The heat of their skin against mine sent my mind reeling. Mark and Jeff, Jeff and Mark, my gladiators! How was this really happening???\n\nThen reality hit me hard. This was Mark and Jeff, Jeff and Mark, my best friends. Never in my wildest fantasies had they ever played a part of anything sexual. Not because they weren't gorgeous\u2014because god in heaven, they were exquisite\u2014but because I loved them so much it would have hurt to pretend they were attracted to me when I was so certain they would never be. I had at no time considered the idea they'd harbor romantic feelings towards me, but I knew in the back of my mind that if either of them had wanted a relationship, I'd jump on it in a heartbeat.\n\nSo here, now, in the dorm room where we'd spent countless hours together in comfortable amiability, they both told me they not only wanted me, but that they both loved me. Both.\n\nFuck.\n\nThere was no question that the three of us were fucking magical in bed, but how was a three-way relationship supposed to work? How did this end without someone getting hurt? And how could I possibly do that to either of them?\n\nI tore my mouth away from Mark.\n\n\"Wait...wait...\"\n\nJeff ignored my breathy words and captured my mouth, sucking my tongue into his and eliciting a deep moan. It almost made me forget my concerns. Almost. I pushed him away.\n\n\"Wait!\"\n\nBoth men pulled their faces from my body, but kept me in their arms. My breathing was ragged.\n\n\"We can't do this...we...\"\n\nJeff wound a strong hand through my hair and gently but firmly made me look at him.\n\n\"Stop right there, Sara. I know exactly where you're going with this, and I'm telling you to stop. Stop over-thinking, just for now. Just for right now, let this happen. This needs to happen. We need this to happen.\"\n\nI opened my mouth to weakly object when Mark's throaty voice silenced me, his soft lips grazing my ear and making me shiver.\n\n\"This is going to happen, and we're going to do everything and anything that feels good.\"\n\nOh god, he was turning my own words against me. I felt my resolve slipping. Jeff picked up on it right away, brushing his own soft lips against my other ear. They had no idea how close I was to coming from that contact alone.\n\n\"Because now we're going to kiss,\"\n\n\"And play,\"\n\n\"And touch,\"\n\n\"And suck,\"\n\n\"And fuck.\"\n\n\"Of course, if you really do want us to stop, say so, and we will.\"\n\nAt that, Jeff stuck his hot tongue in my ear and any resistance that may have been lingering was shattered. I didn't want to stop. I never wanted to stop. I wanted to stay naked in this dorm room for the rest of my life giving and receiving ridiculous amounts of orgasms between these Greek gods.\n\n\"Please, put me down.\"\n\nThey pulled their mouths from me, and I could hear the disappointment in Mark's low voice.\n\n\"Sara...\"\n\n\"Please, you have to. I can't take your pants off from here.\"\n\n\"Arrrgh!\"\n\nHe laughed and swung me onto his bed, narrowly avoiding hitting my head on the wall; their dorm room definitely did not allow for king-size play like Caesar's had.\n\n\"Oh, Jesus! Sara, are you okay???\"\n\nI could only laugh.\n\n\"Yes! Missed it by that much.\"\n\nJeff piped in with his movie quote voice.\n\n\"I think we're going to need a bigger bed.\"\n\nI laughed again as I crawled to my knees and pulled them towards me by the waists of their jeans.\n\n\"This will work fine for now.\"\n\nTheir hands overtook mine, stripping off their jeans, leaving two enormous, boxer-clad cocks pointed directly at my face. I reached to take them in my hands, but they each grabbed a wrist and restrained me as much with their hands as with their lustful gazes.\n\n\"Give us a minute to worship you first, Sara.\"\n\nSara.\n\nMy name had never made me wet before, but coming from Mark's mouth right now, it made me gush. Jeff laid me down on the bed, kissing me deeply while Mark released my wrist to undo my jeans. I wiggled my hips to help him peel them off, grateful that the lavender bra and panties I'd chosen that day were in good shape.\n\nJeff's taut chest was pressed against mine as he knelt beside the bed and caressed my stomach and lace-clad breasts, moving his mouth across my mouth and neck and cleavage and back again. Mark climbed between my legs, running his hands over my calves and thighs, his strong fingers making their way to the damp lace between my legs.",
        "Within seconds, he was face-deep in my pussy, inhaling the soaked fabric and dragging his lips across the wet lace.\n\n\"Good god, you smell delicious.\"\n\nI moaned into Jeff's neck. Mark's hot breath was driving me crazy. As much as I wanted to take things slow and enjoy every second with them, I'd been thinking about my gladiators taking me every way possible for weeks. Knowing their identities only made me needier. I pleaded in a cracked whisper.\n\n\"Fuck me, Mark. Please!\"\n\nHe and Jeff both made the little strangled noise I'd fallen in love with in Vegas. Jeff's hair was too short to pull, so I used both hands to angle his face towards mine.\n\n\"I need you both to fuck me, Jeff. Please?\"\n\nThey looked at each other.\n\n\"How do you want to work this?\"\n\nJeff looked down at me and rubbed a large hand across my flat stomach.\n\n\"We're not as prepared to host as you were. No lube.\"\n\nMark grasped each of my cheeks in his large hands, his thumbs caressing my rosebud, making me moan again.\n\n\"There's no way we're fitting in this tight little ass without lube.\"\n\nI won't lie, it was disappointing\u2014but only for a second. I cleared my throat.\n\n\"Let's start right here, then. Mark, fuck my pussy. Jeff, fuck my mouth.\"\n\nThe words were barely out of my mouth before their boxers disappeared, and I didn't have time to fully register that I'd actually said them to my best friends before their hard cocks were seeking entrance.\n\nMark didn't bother taking off my panties, merely dragging them to a side before pulling my hips up to meet his and pressing his thick erection into my impossibly wet pussy. I gasped at the gorgeous sensation and Jeff took advantage of my open mouth, propping one knee on the bed beside my head and angling his own massive cock past my lips.\n\nMy back arched and my eyes rolled to the back of my head; I was immediately lost in the sensations their hard bodies were eliciting. Hands were all over my body, and I didn't know\u2014or care\u2014whose fingers were sliding under my bra to pinch my nipples and whose thumb was rubbing my clit in a delicious rhythm. When I could focus, I'd see one watching the other pleasure me, and it only served to produce ever-deepening orgasms, one after another after another, until Jeff quieted my muffled screams further with jets of warm come down my throat, pulling his still-rigid cock away from my hungry mouth and leaning down to kiss me again.\n\nMark's orgasm was close behind, filling me and filling me until every thrust was pressing our come down my thighs. He wound down to a stop, not completely softening, but pulling out of me anyway to stretch up my body and kiss me deeply as well. I briefly thought about him tasting Jeff's come on my tongue, remembering Jeff doing the same with his in Vegas. I filed it away to ask them later when I wasn't so overstimulated. It hadn't crossed my mind before, but the thought of them \"being there for each other\" was really fucking sexy.\n\nJeff pulled a thigh across his lap and gently swabbed the come off my legs with a soft tee shirt, leaving my vulva dripping as he passed the tee to Mark to clean himself. Jeff swiped some of the remaining moisture from my labia and glazed it across the hood of my clitoris, making me shake and whimper. His thumb moved carefully, avoiding the tender nub, but just barely. The fore and middle fingers of the same hand spread the juices past my tender opening and down to the bud of my asshole, rubbing them back and forth, teasing me with the promise of penetration.\n\n\"You're so beautiful, Sara.\"\n\nA ragged breath caught in my throat. Jeff\u2014smart, kind, gorgeous, honest Jeff\u2014told me I was beautiful, and he meant it. His eyes assured me of that. Mark stretched his lanky body beside mine, his firm, sinewy arms winding around me, pulling me closer on the narrow bed. He brushed the hair off of my neck and dropped soft kisses from my ear to my shoulder and back.\n\n\"So beautiful,\"\n\nHis low corroboration while nuzzling my earlobe made me moan.\n\nGood god, how did I luck out with two of them?!\n\nMark slipped one of my bra straps down my shoulder, kissing the newly exposed skin and working a hand under the lace cup to knead the heavy breast underneath.\n\n\"And so overdressed.\"\n\nI smiled as his hand slipped between us and unhooked the clasp on my bra, freeing me completely as he slung it across the room.\n\n\"I second that.\"\n\nJeff's hand slid from underneath my panties to my hip to pull the drenched fabric down my legs. I inhaled sharply knowing his hand rubbed against Mark's rigid cock, even if it was just for a moment.\n\nWe'll definitely talk about that later.\n\nNow laid completely bare\u2014one leg slung over Jeff's naked lap, the other side of my body pressed against Mark's nude form\u2014the bizarre impression of belonging I'd felt in Vegas was no longer bizarre. It made perfect sense now.\n\nThere was cynical buzzing in the back of my mind\u2014How will this work? What will people say? My family's going to disown me! Their families will disown them!\u2014but all concerns outside of that dorm room paled in comparison to the sensations their four strong hands were creating. Every nerve in my body was screaming with pleasure.\n\nMy hand traced the muscles along Jeff's abdomen, inevitably finding its way to his stiff, still slightly soggy cock. He closed his eyes and almost purred, his happiness undeniable. He gazed at me with hooded eyes as his hand closed over mine, guiding it lazily up and down the length of his unreal member. He reached up with his other hand and ran a light finger across my lips and down my jawline.\n\n\"I love your mouth, but I need to be inside you. Are you up for round two?\"\n\nI pressed my face into his hand and my ass into the erection Mark presented beside me. I squeezed Jeff's cock more firmly.\n\n\"Absolutely.\"\n\nHe grinned and slipped away from my grip, passing a look to Mark, who lifted me upright like I weighed nothing at all. Jeff pulled me in to a deep, passionate kiss before spinning me 180 degrees to allow Mark to do the same. I was deliriously happy, feeling disposed to do anything they wanted, anywhere they wanted.\n\nMark settled back against the wall, his arms propped up on knees spread to either side, framing his thick, delicious cock. My mouth watered. Jeff rubbed himself on my backside, wrapping his strong arms around me to fondle my breasts. Mark watched raptly, licking his lips. Jeff's voice was husky in my ear.\n\n\"I want to watch you suck him. Will you do that for me?\"\n\n\"No.\"\n\nMark squinted at me, confident there'd be more to my answer.\n\n\"I'll do it for me.\"\n\nJeff passed me into Mark's arms, where he held me, studying my face, until he pulled me into another blistering kiss. I reluctantly broke away from his mouth to kiss and feel my way down his sharp jawline and neck, his solid chest and sculpted abs. The further south I got, the heavier I could smell my own scent mixed with his musk. I loved it. I wanted him marked, wanted him mine. I wanted both of them mine.\n\nBefore I could get my mouth on Mark's thick erection, Jeff pulled me back by my hips, setting me on my knees at the edge of the bed. I shot him a look of feigned annoyance over my shoulder and he answered with a look of feigned innocence. I was deliriously happy.\n\nI love you, Jeff. \n\nI turned from the beautiful man behind me to the beautiful man in front of me.\n\nI love you, Mark.\n\nI couldn't say it out loud yet, but I felt it so deeply that I was half-convinced they'd hear it anyway. On my hands and knees, I silently implored Mark to kiss me, and he complied enthusiastically, his hands tangling in my hair. Jeff's hands caressed my hips, searching the curves available to him, his thumbs tracing the lines where my thighs met my ass. I sighed into Mark's mouth, and he released me to relocate to his throbbing cock. I held my weight on my elbows, freeing my hands to explore his sizable offering.\n\nI placed a soft kiss on the tip of his penis, glazing my lips with his precome as he breathed heavily. As I leaned in for another kiss, Jeff slid two of his thick fingers into my wet pussy, and I gasped, inadvertently inhaling Mark's entire crown. He moaned in gratification, and I happily held him in my mouth, sucking and licking all that I could. Jeff's fingers withdrew, dragging my wetness around to the front of my hips, liberally bathing my labia and actively seeking out my sensitive clitoris. I jerked back from the intense sensation just as Jeff thrust forward, causing him to bury his entire length completely. I yelled out around Mark's cock.\n\n\"Ohmahgahh!\"\n\nJeff was so keyed up that his body was vibrating, but he held himself as still as he could.\n\n\"Holy fuck,\" He moaned, clutching my hips almost painfully. \"Did I hurt you?\"\n\nRelishing the fullness, I shook my head slightly, unwilling to relinquish my hold on Mark.\n\n\"Agnnn...\"\n\nI didn't have to see Jeff's smile to know that it was there.\n\n\"Fuck, yeah.\"\n\nHis grip on my hips abated only slightly as he pulled almost completely out of my dripping pussy, then slammed back in, inadvertently forcing me further down Mark's cock again and again. Even with the unintended assistance from Jeff, I could barely work half of Mark's thick pole into my mouth. What I lacked in depth, I made up for with enthusiastic fervor, stroking and twisting the base of his saliva-covered cock, and letting a hand stroke him from crown to base as I sucked his balls into my hot mouth one by one, bathing the heavy sac with my tongue.\n\nIt was hard to maintain focus with the pounding I was getting from Jeff, as another orgasm built in my core, but I did my best to worship Mark, too. I lavished a flat tongue from his perineum to the leaking slit at the top and passionately sucked hard at all I could get into my mouth, savoring his taste. Jeff's thumb began to massage the tender opening in which he was currently not balls deep, making me moan as he worked the digit inside, slick with my own juices.\n\nAnd probably Mark's, too.\n\nThe thought of Jeff using Mark's come as a lubricant pushed me over the edge again, and I screamed, my passion silenced by Mark's mammoth dick. I again slid a hand down Mark's shaft, over his scrotum, and across his perineum, but instead of making the return journey, I took a cue from Jeff and continued until I found the puckered treasure I'd been hunting.\n\n\"Oh my god!\"\n\nI looked up at him with my mouth full of his cock, he stared down at me with hooded eyes, his mouth agape.\n\nMy eyebrow arched.\n\nCan I?\n\nHis eyes closed.\n\n\"Yeah...yessssss...\"\n\nJeff continued to hammer me slow and deep, his thumb buried in my own asshole. He released the other hand from my waist, bending over to press his broad chest against my back and fondle my large, swinging breasts. The raggedness of his breath increased, and I realized he was watching me finger Mark's asshole while I sucked him off. Jeff's efforts were becoming more erratic, but it was Mark that came first, bucking his hips and burying his hands in my hair. As with Jeff, I swallowed every possible drop and continued stroking the softening organ. Mark tried to back away, but was occluded by the small space.\n\n\"Ahh! Ahh! Sara! Stop! Sensitive!\"\n\nI took the opportunity to tease him as mercilessly as they had teased me in Vegas, leaving my finger in his ass and lapping a soft tongue all over his shaft and balls.\n\n\"Ahhh! Sara! Sara, stop!\"\n\nHe started laughing, which made me laugh, which made Jeff grunt as my pussy convulsed around his huge cock. Mark just kept laughing.\n\n\"Dude! Help me out here!\"\n\nKeeping his thumb planted firmly in my ass hole, Jeff wrapped his other arm around my shoulders and shifted back, pulling me upright to my knees while never breaking the contact between my bare back and his smooth, muscled chest. He held me tight as he pumped into me harder, his breathing guttural. Mark dropped low and lapped at my clitoris, ensuring that when Jeff came, I did too.\n\nOrgasms abating, Jeff continued to cling to me, his heart racing. Mark mercifully rolled away from my clit to his back, watching the two of us catch our breath with a huge, dopey grin on his face. Jeff's hold relaxed and I collapsed, panting, onto Mark, returning his smile with one equally dopey, if not more so. Jeff withdrew himself from both of my sensitive orifices and retrieved another tee for cleanup, taking his time to kiss some of the moisture away from my thighs tenderly as I lay across Mark. He smacked my ass playfully before winding a strong arm around me and pulling me to my feet.\n\n\"Let's move this cuddle puddle out of the puddle.\"\n\nI was glad that Jeff didn't let go of me when I was upright; my legs were so weak I don't think I'd have been able to stand on my own. He smoothly pulled me down to lie next to him in his bed, and Mark slid in behind me. It was cramped and hot and clumsy and wonderful. Their hands trailed gentle fingertips across my flank as our breathing slowed. I was entirely too happy, but I have a nasty habit of subverting myself. I murmured,\n\n\"You guys...how is this going to work?\"\n\nMark nuzzled his face into my neck.\n\n\"Later, Sara. Later.\"\n\nJeff kissed my forehead and I let my concerns go as I drifted off between them, knowing anything I dreamed couldn't possibly live up to reality."
    ],
    "authorname": "VeiledVixen",
    "tags": [
        "mfm",
        "two men one woman",
        "threesome",
        "friends",
        "love",
        "oral sex",
        "dp",
        "double penetration",
        "college",
        "coed"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/coalescence"
}