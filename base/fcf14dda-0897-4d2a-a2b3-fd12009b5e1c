{
    "title": "Midnight City Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 9 - Sleight of Hand \n\nTuesday, November 15th. About 8:30pm, as darkness enveloped the land, a limousine pulled up to the scene. Attorney General John Barclay and his wife Daphne got out. He looked composed; she looked haggard. A large number of State Patrol officers from his State were pulling up behind him, as well as a few State Agents. He also had an attorney with him: Forest Gillis.\n\n\"You wanted to see me, Commander?\" Barclay said as he came up to me.\n\n\"Yes, Mr. Attorney General.\" I said. \"I appreciate you coming up.\"\n\n\"Sir,\" said Forest Gillis, loudly, \"be sure to stay on your side of the State Line.\" Gillis then looked hard at me and said \"I don't trust Troy's motives.\"\n\n\"I'm sure they're honorable, Mr. Gillis.\" said Barclay, with a 'sincerity' that fooled no one present. \"So what's this about, Commander?\"\n\nI had the FBI guys and a few State Troopers from my State, as well as a few plainclothes officers... these were actually from the Eastphalia Police, as their county had jurisdiction on my side of the State Line.\n\n\"As you can see, Mr. Barclay,\" I said, \"the U.S. Geological Survey team is continuing to re-survey the State Line for this case, as requested by the Federal judge overseeing it.\" We could see the survey team working behind my left shoulder about 100 feet away. \n\n\"So, what I wanted to talk to you about was Tiffany being moved.\" I wandered over to where a chalk outline of where Tiffany had laid was on the ground, with Barclay and Gillis following. Mrs. Barclay was still near the limousine. Barclay made sure to stay well on his side of where the body marking was.\n\n\"The one thing I cannot figure out, Mr. Barclay,\" I said loudly as officers slowly moved around us, \"is why the body was moved here to straddle the State line. Do you have any idea of why that occurred, sir?\"\n\n\"No, Commander, I don't.\" said Barclay. \"And if you can't figure it out, I don't know why you'd think I'd know.\"\n\n\"Oh, that one is easy.\" I said, turning to face Barclay. \"Because, sir: you murdered your daughter.\"\n\n\"What?!\" said Barclay. \"That's ridiculous. Let's go, Gillis.\" He turned to leave, but found himself surrounded by my State's Troopers. More of them were facing off agains the other State's agents, and all were heavily armed and armored. Cindy was coming up to my side.\n\n\"What is this?\" Gillis roared. \"Your Troopers are across the line!\"\n\n\"No, they're not.\" I said. \"See over there, where those FBI Agents are? That's where the brass plate for the State Line is. You are on my side if the Line, Mr. Barclay... and you are under arrest for the first degree murder of your daughter Tiffany Barclay, a human being.\" I went up to him, turned him around, and began reciting his rights to him as I affixed handcuffs to his wrists behind his back.\n\n\"This is crazy!\" yelled Barclay. \"I didn't kill my daughter!\"\n\n\"Oh yes you did.\" I said. \"She was about to expose the incestuous relationship you were having with her, which would've destroyed your political career. The FBI is executing a search warrant to find your revolver, that you once used to kill a home invader, and more recently used to kill Tiffany. They'll also do a search of the trunk of your car, and even though you washed it out, they'll likely find some tissue, or even the blanket you wrapped Tiffany's body inside of, to carry her around.\"\n\nI began to lead Barclay to a waiting Police vehicle. \"Come along Mr. Gillis. Mr Barclay is in dire need of your services right now.\"\n\n\"John! What have you done!\" a woman's voice screamed out. It was Mrs. Barclay, who was coming up to us. \"You... you killed Tiffany?\"\n\n\"No!\" shouted Barclay, turning to face his wife. \"Now go home! I'll take care of all this, and I'll be home soon.\"\n\nMrs. Barclay's face was one of sheer misery, tears flowing down her cheeks. \"You killed my baby? You murdered my little girl? You bastard!\"\n\nTime slowed down. Suddenly, Mrs. Barclay had a revolver in her hand, and was pointing it right at her husband. As I moved to get between them, I felt myself suddenly and violently being pulled back and to the ground. It was Cindy tackling me, even as Daphne fired.\n\n*POW!* *POW!* *POW!* *POW!*\n\nI saw all four bullets find their mark, and crimson stains appear on John Barclay's shirt. As other officers went for their guns, Mrs. Barclay put the revolver to her own heard as I screamed out \"WAIT!\" Everyone froze.\n\n\"Get off me!\" I snarled at Cindy as I pushed her off me. Getting up, I said to Mrs. Barclay. \"Daphne, you don't have to die. Put the gun down.\"\n\n\"Why? He killed my baby! What do I have left?\" the sobbing woman replied.\n\n\"You have to tell Tiffany's story.\" I said. \"You're the only one that can do that now. Don't let her death be for nothing.\"\n\nDaphne was crying, breaking down. As she took the gun away from her head, I stepped forward, grabbing her hand, then taking the gun. I told Cindy to take Mrs. Barclay to the police car as I took an evidence bag out of my pants pocket and put the gun in it, wrote the proper information on it, and handed it to the Eastphalia Police officer that had come up.\n\n\"He's dead, Commander.\" said a medic that had come up and checked upon John Barclay. I just nodded, then told the CSIs there to begin processing the scene.\n\n\"You're going to pay for this, Troy!\" yelled Forest Gillis. \"This is all your fault! I'm going to have your fucking badge for this.\"\n\n\"I really wish you slugs would come up with some new lines.\" I said. \"I've heard that one too many times to count. Now either go help Mrs. Barclay, or go home, Gillis. I'm not in the mood to tolerate your shit right now.\" I walked away from him. LEOs on both sides of the line were standing down as the CSIs went to work.\n\nCindy had put Mrs. Barclay in the police car, and it had driven away. She turned to face me as I came up to her.\n\n\"Why did you tackle me?\" I asked angrily. \"I could've taken those bullets with my armor, and saved his life.\"\n\n\"I don't give a damn.\" Cindy shot right back, practically screaming. \"You would've been injured, even with armor on. And a bullet could've hit you in the head, which you've reminded us a ton of times you can't armor-plate. No way was I letting you risk your life for that worthless piece of shit!\"\n\n\"She's right, you know.\" said the FBI Deputy Director, coming up to us.\n\nI just nodded, knowing I was on the wrong side of this one. \"Yeah, you're right.\" I said, then did my duty as a man: \"I apologize, Cindy. You did the right thing, and I should be grateful, not angry. Thank you.\" Cindy nodded and we hugged.\n\nPart 10 - Solution \n\nWorking through the process took a couple of hours, and it was nearly 11:00pm when the FBI team got back to the City. We headed to the City Diner, which was open all night, and they had a back room for us. Present were me, Cindy, Jack Muscone, Sandra Speer, Lindy Linares, and the Deputy Director, who had procured the back room for us.\n\n\"So where's Callie?\" I asked Cindy. \"She helped a lot with this case.\"\n\nShe grimaced a little bit as she said \"She flew back to California this afternoon with Norelle.\"\n\n\"Is she coming back any time soon?\"\n\n\"I don't know.\" Cindy replied quietly. A little too quietly. I realized what was going on.\n\n\"I understand. You okay?\" I asked.\n\n\"I will be.\" Cindy said. \"As you've said, I should not mistake a great piece of ass for love.\"\n\n\"I also know that love is the one emotion we can't control.\" I said. \"So if you need to talk, I'm here for you. Or we can go see your father on the way home.\"\n\nCindy nodded. \"Thanks. I'll be fine.\" And though she tried to remain stoic about it, she was giving off the vibe of having a heart that needed some mending.\n\n* * * * * * * * * * * * * * * *\n\n*DING* *DING* *DING* *DING*\n\nSpoon tapped glass as we finished dinner, courtesy of Cindy Ross. She said \"Okay, Don, let's hear how you solved it.\" The FBI team encouraged me to tell, as well.\n\n\"Okay.\" I said, wondering where to start. Deciding, I said \"You FBI guys already knew Tiffany had disappeared, and got me and Cindy over here knowing it was likely we'd be needed. And sure enough, Tiffany was found that evening.\"\n\nI continued: \"The first thing I noticed was the absence of a purse or cellphone, which suggested to me that her body had been moved from another place. I thought that place would be the crime scene, but instead it was from a place well inside the other State. And we found her University ID on her, which was also very interesting. Someone wanted us to know who she was.\"\n\n\"Who?\" asked Lindy.\n\n\"I'll circle back there later.\" I said. \"I also noticed that the girl had been very carefully stabbed right in one place over her heart. Even at the scene, I was thinking that was done to cover up something, and the most likely thing was a gunshot wound.\n\n\"So when I saw that John Barclay had used a .38 caliber revolver to shoot a home invader, I immediately considered a connection. The ballistics of that bullet and wound would be on record, and Barclay knew he had to eradicate all possible evidence of it. He missed the bullet found in Tiffany's rooms, but he did eradicate the wound channel in her. Fortunately, I had asked Martha to specifically look for evidence of a gunshot wound, and being the excellent M.E. that she is, Martha found that very quickly.\"\n\n\"I should offer her a job with the Feds.\" said the DepDirector. Both Cindy and I waved crowbars at him.\n\n\"Do not make us administer a double crowbar beatdown to you, sir.\" I 'threatened'. I went on: \"So... I was already considering Barclay to be my primary suspect. Of course I did not close my mind to ideas it could be others. Daphne, Ethan, or the security people might have access to that same gun, and it was still possible that Betty Lamarr had been waxed by a customer or someone in the adult industry.\"\n\nI continued: \"But the visit to the Barclay home not only cemented for me that the family was where suspicions should lay, but also a reason, a motive for the crime: incest, and some family abuse. Cindy and Sandra noticed that Tiffany's room was just 'not right' for a typical young girl. Her relationship with her mother was not 'ordinary', and was I the only one that felt the seeming oppression of the family members by John Barclay? It was clear he was tremendously dominant, maybe even abusive to his wife.\"\n\n\"Furthermore,\" I said, \"I noticed the importance of Tiffany not having a car. Her father had been having a sexual affair with her, and he was obsessed by her, either for the sex or for keeping her under his thumb. He wanted her to go to college nearby, to Eastern State, and not giving her transportation was one way of keeping her under wraps. But she broke free anyway, went to the University, and hung out with bad boys that were giving her sex. I thought that she might be dating these boys to get back at her father and show him she was having sex with other men, and I think now that I'm right on that.\"\n\n\"So while she was at the University,\" I went on, \"she was being given rides by one Al Guilford. I have reason to believe that Al was hired by Tiffany's father to keep tabs on her, to watch over her, and to spy on her. She found out, and went and made a false claim against him to get him off her back, and as a shot at her father. Guilford had been set up in his place of spying by Barclay, which included us only being able to find one address for him. But his cover was blown, so he transferred back to Eastern State, and I suspect would've continued to work for John Barclay in some capacity.\"\n\nI paused to take a drink, then went on: \"So, let's move up to this past summer. Tiffany never gave away the dark secret involving her father's incest with her, but the incident with Guilford made her irritated. I suspect she went to Ethan and wanted his support to confront their father and make him back off. But Barclay was a very controlling father, and a bully to his son. He forced Ethan to participate in Sports, and was deeply disappointed when Ethan showed no interest in trying to excel at Sports, nor at academics.\n\n\"And Ethan was very timid, and too afraid to confront his father. I don't know what relationship Tiffany had with her brother before, and whether or not sex was involved, but Tiffany was very upset when Ethan would not support her, and their relationship disintegrated as a result.\"\n\n\"So,\" I said, \"when we left the Barclay home, I was absolutely convinced that John Barclay had murdered his daughter. But the 'why', 'how', and 'where' were still problems, and we did not have jurisdiction established yet. So, I bided my time and waited. We soon got a crime scene in the City, and over time we found out that Tiffany was going to a tabloid. And there I had my motive!\"\n\nI continued: \"I don't know for sure, but I believe this was the sequence of events. Tiffany went to Ralph Lycra with her story about her father having incest with her. I should add that the story of Tiffany being a prostitute and Barclay's daughter wouldn't do a lot to harm Barclay's career; he could even say she was majoring in sexual psychology and so on and so forth. But the incest story coupled with the prostitution was one that could hurt him.\n\n\"Anyway,\" I went on, \"Lycra blew her off, but then turned right around and called Barclay. Barclay agreed to pay Lycra off to keep quiet about the story, which is where Lycra got his extra money. And Barclay also knew that he had to kill Tiffany, because she was already showing that she was going to reveal the secret. And more and worse than that, she was breaking totally free of him, which created an enraged jealousy within him.\"\n\n\"So,\" I said, \"Barclay found out where Tiffany was in the City. He might've forced Ethan to get the information, or tricked Tiffany into thinking Ethan was calling her on the phone, or something like that. At any rate, John went there, confronted Tiffany, shot her, wrapped her in a blanket, and transported her out of there. I think he had her in the trunk of his car for hours, at least. He finally figured out what to do, dumped her body in a county with a Sheriff friendly to him, then started the machinations to report Tiffany as missing. And now we're back to you guys calling me and Cindy over for a few days in this great City at midnight and beyond. So, what are your questions?\"\n\n\"So let me see if I have this straight.\" said the DepDirector, overstepping a chorus of questions wanting to be asked. \"You saw the multiple stab wounds carefully made, reasoned why, saw the previous home invasion report and shooting, made the connection, and everything went on from there?\"\n\n\"Pretty much.\" I said. \"Those were the beginning links of my chain.\"\n\n\"And it was there for all of us to see.\" said the DepDirector.\n\n\"That's what he does, sir.\" said Cindy. \"I've seen him do it countless times, now. We 'see', he 'observes'.\"\n\n\"I have a question.\" said Sandra. \"Tiffany became obsessed with sex, she even was majoring in sexual psychology. Is that normal for girls that have had a relationship with their father like that?\"\n\n\"Probably not.\" I said. \"I'd defer to my wife's expertise on this subject, but Tiffany may have been a very willing participant in the sex with her father. That may have been one reason Mrs. Barclay, who I think knew of the relationship, didn't say anything. And Tiffany said things to Laura about how cool and handsome her brother was. Tiffany might have gone for him and he rejected her sexual advances. That's speculation, though. We'll get Mrs. Barclay's story in the coming days.\"\n\n\"Okay,\" said Cindy, \"I'll ask the 800-lb.-gorilla question: who put her body on the State Line?\"\n\n\"That,\" I said, \"is the bugaboo in this case. Barclay could not believe it when her body was found on the State Line. It totally ruined his plan to have the investigation of the death glossed over by his people in his State. He'd talked to Clark Webster to make it look like he was worried and that Tiffany was missing; that came back to bite him in the ass when she was found on the State Line, and the FBI was able to take charge of the case. As to who did it? I dunno... that might be something you can deduce... motive, means, opportunity...\"\n\n\"What about money?\" asked Jack Muscone. \"They didn't find any. Did she leave it at the University?\"\n\n\"I can answer that one.\" said Cindy. \"She didn't keep hardly any of it. After paying her own bills, she used most of it to help the other working girls at her club... pay their doctor bills, helping out with food or medicine for them or their families. She had a good heart...\" Cindy looked a little sad as she related the story.\n\n\"So you don't think she had a car under a third I.D.?\" asked Lindy.\n\n\"If she did,\" I said, \"I think she'd have disappeared to somewhere far, far away, to get away from her father's obsession with her. Hmm...\" I began going into a reverie.\n\nWhen I came out of it, I said \"So, that's it... as Agent Muscone said, it was a prostitute murdered by her john... John Barclay, that is. And thanks to his wife, he is now answering for that crime in front of a much higher Judge...\"\n\n* * * * * * * * * * * * * * * *\n\n\"You're going back tonight?\" asked the DepDirector, as I entered the office he was using while in the City.\n\n\"Yes sir.\" I said. \"Here's all our paperwork.\" I handed him the folder full of papers.\n\n\"You did a fantastic job on this.\" said the DepDirector as he took the folder. \"Sure you don't want a job with us in the FBI?\"\n\n\"No sir, I love where I am now, and I do get to consult with you guys as it is.\" I said. \"And of course... I get to use my own discretion about a few things.\"\n\n\"What things are those?\" asked the DepDirector.\n\n\"Is this room bugged?\" I asked.\n\n\"There are likely microphones.\" said the Director. I pulled out my bug-killer and turned it on as he peered at me.\n\n\"Like my discretion to ask you how you moved Tiffany's body to the State Line.\" I said. The DepDirector peered even harder at me.\n\n\"Have a seat.\" he finally said.\n\n\"Thank you for not denying it.\" I said. \"It was obvious to me from the get-go that John Barclay has been groomed not only as a Democrat politician, but as an Elitist and Globalist. He was sent to North Carolina and married an 'old school' family's daughter. Ergo, a possible connection to Superior Bloodlines itself. At least you think so: you had Muscone investigate him, and you've been watching Barclay for some time.\"\n\n\"Yes, that is true.\" said the DepDirector. \"In fact, Barclay was a solid link to Superior Bloodlines. I was hoping we'd get to talk to him, but his wife blew him away first. Maybe out of grief, or maybe to protect the Enemy.\"\n\n\"Grief, I think.\" I said. \"But I did try to step in the way and save him for you.\"\n\n\"Yes, but I understand Ms. Ross doing what she did to protect you.\" he said. \"She's a brave woman, and a good Detective. I would not mind having her on our team, even if I can't get you. But I digress... so how did you know I had her body moved?\"\n\n\"Motive, means, opportunity.\" I said. \"As to means... well, you're the Deputy Director of the FBI, of course you have the means. You pinged her cellphone location to find the body; ergo, the opportunity to move her after she was dumped. And motive? John Barclay, a rising star in Superior Bloodlines, was ripe to be taken down, but the FBI had to have jurisdiction. How to do that? Put her body on the State Line, call in the Iron Crowbar, and let things flow like the waters of the River. And your plan would've succeeded, if not for Mrs. Barclay bringing the gun that killed her daughter to the scene and killing her husband with it.\"",
        "\"Damn.\" said the DepDirector. \"As they all say... nothing gets by you.\" After a pause, he asked \"So, what's next? Especially regarding Superior Bloodlines?\"\n\n\"I am working to take them down, as I promised you I would.\" I said. \"I'm working on one angle, while I'm sure you're working on other angles that I can't help you with. But we'll get them.\"\n\nWe stood up, and the DepDirector shook my hand. \"Again, that was an amazing job you did, and I do hope we'll be working together more often.\"\n\n\"As they say of us Police,\" I said with a tinge of acerbic humor, \"we're only a phone call away.\"\n\n* * * * * * * * * * * * * * * *\n\nI went and found Cindy, and we made our goodbyes with the FBI team. As I hugged Sandra, she whispered \"Thank you again for last night.\"\n\n\"It was my honor.\" I said, and we both knew what each other was truly saying about our mating.\n\nCindy drove the Black Beauty. As we drove through the City, I looked at the 'concrete jungle', the sparkle of the lights, the buildings. I thought of the power of the Mind of Man to create something like this. And I thought of the millions of souls, and the equal numbers of their stories, their dreams, their pains. The rich, the poor, those in law enforcement, and the prostitutes selling their bodies to make ends meet.. it was all here. If I did not love my Town, I could see myself in this Midnight City, being a part of it, wrapped in its sparkling twilight...\n\n\"Can I ask you something personal?\" Cindy asked as we reached the outskirts of the City and the darkness of University Highway as it stretched to the west.\n\n\"Sure.\" I said.\n\n\"My father says he did not know your father very well,\" Cindy said, \"and you don't talk about him much. And Ethan's situation got me to thinking. What was your father like? And what was your relationship with him like, growing up?\"\n\n\"Well,\" I said, \"I had the somewhat fortune of being the second child, though Elizabeth was far enough older than me that there was a separation there. My father was somewhat quiet, totally absorbed in his law practice, fairly stern but still showed caring for my mom and me.\"\n\n\"Except for taking Aikido,\" I continued, \"my parents did not force either me or Elizabeth to do anything, though they relentlessly drove religion down Elizabeth's throat. When that failed so badly and Elizabeth renounced the Christian God and left home, I think both my mom and dad backed off from pushing too hard on me.\n\nI went on: \"I think my dad wanted me to be a lawyer, and follow him into the family firm, but he never said anything about me majoring in Chemistry. He also never said anything about me joining ROTC and getting a commission... though being a lawyer and believing every word printed by the openly-Leftist New York Times, he was not very pro-military. But my mom told me she thought he secretly was proud of me when I accomplished that.\"\n\n\"And it all worked out.\" Cindy said. \"I just wonder what is going to happen to Ethan. Without his parents pushing him, I can really see him dropping off a cliff, so to speak.\"\n\n\"I think you're right.\" I said. \"But then again, now that he's freed of his father, he might can take flight and do great things.\n\n\"I was lucky, I think.\" said Cindy. \"My father, my Canadian dad, was good to me and Molly when we were growing up... until they rejected my orientation, of course. And then I found out Dr. Eckhart was my father. And just listening to him talk for five minutes has opened up my world to so many possibilities...\"\n\n\"He's not only a great man...\" I said, \"he's a good man, and we're lucky to know him and have him around.\"\n\nAfter a pause, I said \"Are you going to follow him into the family business?\"\n\n\"I'm already in the family business.\" Cindy said, with clarity. \"I'm a Police Officer in the Town & County Police Force, with my sister in the next county over... and my cousin by my side at home. And there's no place I'd rather be...\"\n\nPart 11 - Epilogue \n\nWednesday, November 16th. The kids were put to bed, and the dogs were in their places of guard duty in their baskets besides the beds. I poured Laura a glass of wine and fixed myself a Scotch and Soda, and went and sat beside her on the far sofa against the wall in the den.\n\n\"It is good to be back home.\" I said.\n\n\"And I'm glad to have you back home with me.\" Laura said. \"Tiffany's funeral is tomorrow, and I'm going to go. What about you?\"\n\n\"No, I've missed too much work here.\" I said. \"And I didn't know Tiffany, not like you did. I know she was your student, but you've been pretty quiet about everything.\" That was an attempt to get my wife to talk about what was bothering her.\n\n\"I know.\" Laura said. She sighed, drank some wine, then said \"Tiffany's death got me to thinking about some things. I should've seen that something was wrong, even though she told me nothing was going on with her family. And I'm not sure if letting a girl be a prostitute as part of her psychology thesis is the right thing to do. Dorian Sherwood died too young, and Tiffany was barely more than a girl...\"\n\n\"But it was their choices.\" I said. \"And from what I heard, they both liked what they were doing. No, most of the working girls out don't like it, but how do you stop them?\"\n\n\"That's one thing, but I don't have to enable them, like I did with Tiffany.\" Laura said.\n\n\"I'll understand if you don't want to answer this, or can't answer it,\" I said, \"but were you trying to recruit Tiffany for the Company?\"\n\nLaura got quiet for a moment, then said \"I'm always trying to recruit good people for the Company. As to Tiffany, she's wasn't all that good a candidate, and didn't want much to do with Government of any kind. Last but not least, I'm trying to retire, so I'm not looking for recruits any more.\"\n\n\"Good.\" I said. \"Especially on the retirement. But don't stress yourself about Tiffany... I get the idea that she was in for a clash with her father no matter what else was going on in her life... and it would've ended badly for her... just like... oh, shit...\"\n\n\"What?\" Laura asked as I went into a reverie...\n\n* * * * * * * * * * * * * * * *\n\nCindy Ross sat alone in her apartment. The Canadian Whisky and water only dulled the pain. She was tired, but she didn't want to go to bed. She felt empty.\n\n*BRING!* *BRING!* *BRING!*\n\nIt was her personal cellphone. She answered it.\n\n\"Hi Cindy, this is Jenna.\" said the voice at the other end of the line. \"I'm sorry I haven't been able to get back to you before now, and then I heard you were in the City working on something. Is now an okay time to talk?\"\n\n\"Sure.\" said Cindy, feeling strangely numb, not knowing what to say.\n\n\"It's been a long and busy time since the Election.\" she heard Jenna saying. \"But it's winding down now. Can we get together for lunch, or dinner if that's better for you?\"\n\n\"Yeah, sure.\" Cindy said. \"Cattleman's Club, Friday evening? We can drink at the bar, if nothing else.\"\n\n\"Sure, that'll be fine.\" Jenna said. After a few seconds more of chit-chat, they disconnected the call.\n\nCindy sat and watched the ice cubes melting in her drink glass. She wasn't sure what to think. Even as she'd been talking to Jenna, she was thinking of... Callie.\n\nMy cousin's right, she thought to herself. Damn it all, he's right: love is the one emotion we cannot control...\n\n* * * * * * * * * * * * * * * *\n\nThursday, November 17th. At 10:00am, Chief Moynahan 'invited' me into his office. After having me sit down, he got right to the point.\n\n\"As I said yesterday,\" he said, \"your work on that Barclay case was outstanding. The FBI was impressed, as were the Eastphalia Police and the City Police. I got word that Mrs. Barclay has been talking about the situation, and it's a very sad story that ended very badly.\"\n\n\"What's going to happen to Ethan?\" I asked.\n\n\"He will essentially inherit his parent's money.\" said Moynahan. \"The lawyers are working to keep him out of Child Protective Services, and he turns 18 within a year. After that, he's on his own.\"\n\n\"Yep.\" I said. \"I suspect we'll be running up against him again some time in the future.\"\n\n\"Maybe so.\" said Moynahan. \"But the reason I called you into my office is to let you know that the FBI has developed what they consider to be credible threats to you. Taking out John Barclay was a huge blow to these white supremacists that our FBI friends have been chasing. They're finding that he was an important piece of their financial networks, and now the FBI is crawling all over those. It's like when you began shutting off Mr. Wargrave's money and Pastor Westboro's money... the hornets' nests have been... stirrrrrred.\" \n\n\"Yes sir.\" I said. \"And I'm afraid that there are going to be threats to others, as well. It's about to get ugly again...\"\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "police drama",
        "crime drama",
        "mystery"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/midnight-city-ch-03"
}