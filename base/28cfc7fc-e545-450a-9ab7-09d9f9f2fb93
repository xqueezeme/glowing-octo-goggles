{
    "title": "Sisters of the Fallen",
    "pages": [
        "This is my submission for the 2016 Halloween Story Contest. It is a gothic horror novella based on the vampire mythos. My goal was to try and make the vampires as dark and scary as they were seductive and I hope you will find my attempt successful. The story is a bit of a slow burn since I've taken time to establish the characters, setting, and atmosphere before the action truly begins but the plot picks up quite a bit after the first few pages. Don't worry, there are still plenty of sex scenes but I tried to make this a real story with a beginning, middle, and end so the plot needs to develop before we get to the good parts. The story is a long read, but for your benefit I've partitioned the story into chapters with breaks so that you can stop at certain points if you are unwilling or unable to read the entire story in one sitting. Good stopping points would be the end of Chapter 3 on page 9, the end of Chapter 5 on page 15, and then the very end of the story on page 23. I hope you enjoy my tale.\n\nResubmission: There were some concerns raised in a previous draft about the age of some characters. It wasn't my intention to portray underage sexual encounters but some poor math on my part made it seem that way. I've changed the ages of some of the characters to ensure everything is 18+.\n\n+++++ Chapter I: The Ascent +++++ \n\nThe Carpathian Mountains in Transylvania, 1616 A.D. \n\nThe creaking wheels of the horse-drawn carriage rumbled up and down as they slowly revolved. The car shook interminably as it clambered over the rugged and unkempt road. The clopping of horse's hooves added to the cacophony generated by this mode of travel, disturbing the still silence of the surrounding forest. The dirt path the carriage traveled upon looked like it hadn't been maintained for years and the forest encroaching on both sides of the road threatened to overtake the clearing through the overgrowth that had likely been created centuries before. The trees were so near that the sharp points of branches scraped along the side of the carriage where the path narrowed. The tree limbs reached out for the occupants of the car almost like a predator's claws grasping for its prey.\n\nThe carriage climbed higher and higher over the mountain path, always ascending at a slight incline whenever the team of horses wasn't struggling to pull the covered wagon uphill. It was late in the day, and the descending sun showed with a brilliantly orange light over a clear sky. The blood-orange rays of color shimmered as they cascaded over and down the range of the surrounding mountains. The road cut a clear path between the two largest peaks of this mountain range and led directly up to the grounds of Castle Sidexes. The castle itself was an ancient fortress that had been erected on the highest crest of the tallest mountain in the region. The air at this elevation was thin and cool and made it difficult to breathe for those unused to the height. The castle rested in a perfectly defensible position that was ideal for repelling an invading army but so remote that it was hard to believe the building was inhabited.\n\nCurtains drawn over the side windows of the carriage prevented the setting sun from blinding those inside. The four Pierocent sisters sat in the cramped cabin, facing each other with two siblings to each side. The gnarled and neglected road caused the young women to bounce in their seats with every rise and fall of the carriage. The thin cushion covering the wooden benches they sat upon did not do nearly enough to protect their bottoms from the jostling. But despite the discomfort, none of the girls deigned to be the first to perform an action so unladylike as rubbing their sore backsides. The carriage had to be rented on the cheap due to the newfound and still bewildering circumstances the sisters had found themselves in. They had only found one man willing to drive the carriage. All the other drivers in the nearest town refused to ride this close to the castle. The locals were a superstitious folk who considered the mountains and the wilderness that surrounded them to be cursed. They claimed no one who set foot on the grounds of Castle Sidexes came out alive. An entirely preposterous notion considering Mirela, the oldest of the Pierocent sisters, had corresponded with the Count and Countess claiming lordship of the castle on several occasions.\n\nThe driver of the carriage was a vile man named Caine who had long, shaggy black hair, a dark complexion, and a sharp hooked nose. He grinned at Mirela lecherously every time she spoke with him and Mirela did not care at all for the way he leered at her younger sisters out of the corners of his wandering eyes. Even worse, he treated his horses cruelly. He struck his mounts with a barbed whip in a frenzy to compel the reluctant beasts to climb up the long, treacherous ascent until the animals were past the point of exhaustion. The horses tried to turn back on more than a few occasions, but Caine's vicious whip kept them moving forward despite lashes of blood making red crosses on their backs their backs and foam dripping from their mouths. Mirela's heart went out to the poor animals and she regretted ever hiring this evil man.\n\nMirela peered out the window at the dark forest they were traversing. The woods were eerily quiet and no wildlife could be seen or heard. But wait... there was something out there. A large, shaggy wolf stared back at her from behind a thorn bush, never breaking its yellow, glowing gaze as its eyes followed the wagon's crossing. For just an instant as the carriage passed, Mirela and the wolf's eyes met. Mirela saw the wolf licking its chops and she could tell the creature was wondering what her flesh would taste like. Mirela shivered.\n\nMirela was the oldest daughter of a Transylvanian family of minor nobility. The village that her father had been the lord of was a bit of backwater compared to most of the voivodeships of the province but it was a beautiful little town that Mirela and her sisters had loved fiercely. The Pierocents had borne only girls; the few male children they had propagated either died early in childhood or were birthed stillborn. With no obvious male heirs, the Pierocent women were the strength and foundation of the family.\n\n\"Are we there yet?\" Mirela's sister Loredana complained. \"My rump is so sore and aching.\" \n\nLoredana's whining, simpering tone was beginning to wear on her sisters. Loredana's poor attitude showed itself before they even left their manor and had remained unchanged for the duration of their journey.\n\nBianca, the second oldest daughter, harrumphed. She said beneath her breath, \"If we had a leu for every time you've had a sore bottom in your life maybe we wouldn't be destitute.\"\n\nLoredana's loose skirts were unfortunately a well-known fact to all the men from their village. Bianca not been so quiet as she had assumed. Mirela gave Bianca a withering glare to let her know that this chiding was not helping.\n\n\"We are nearly at Castle Sidexes,\" Mirela said as she consulted one of her maps and correlated their position to an unusual rock formation in the shape of a hand they had recently passed that served as a landmark. The castle was on no map she had found aside from this decaying parchment kept in her family records. \"We should all be enormously grateful to Count Turenau and the rest of his family for taking us in now that we are at our most desperate.\"\n\nAs the oldest of the sisters, Mirela felt a tremendous amount of responsibility for keeping her siblings safe and cared for. She had always been the most sensible and thoughtful of the Pierocent daughters. Mirela was a handsome young woman whose face was perhaps a bit too hard-edged to be considered truly beautiful. Mirela had hazel-colored eyes that took on an almost greenish tinge under a certain light. She possessed long, flowing brunette hair identical to her mother's beautiful locks though her appearance took after her father's side of the family more. Mirela's skin was the same pale white tone that the rest of her family shared. Despite her smooth, luscious tresses of hair, Mirela often wore her hair up in a tight bun. Mirela had a skinny frame with wide, bony hips and slim waist with two small bulbs for a bosom. She might as well have been flatchested in comparison to her younger sisters.\n\nToday Mirela wore a rugged woolen riding dress colored in white with a high collar and long sleeves. White gloves covered her hands while tall, fashionable brown leather boots covered her legs up to her knees. Mirela's dress fit loosely upon her and provided little definition to the form of her body. Modest clothing that had been specifically chosen because it did little to entice the eye. The dress proved useful for such an arduous journey and at least prevented Caine from leering at her as often as he did Loredana and Bianca.\n\nMirela was twenty-seven years old and nearly past the marriageable age of her life. The prospect of spinsterdom loomed if she did not find a husband soon. It wasn't that Mirela was unattractive or wouldn't make a fine wife. She knew how to run a household and she descended from a good family that could provide a handsome dowry. But Mirela possessed a keen intelligence and a passionately devout, almost haughty manner that when combined seemed to intimidate men and drive them away from her.\n\nDespite her current reticence, Mirela had been a bit wild in her younger days. She drank ale with men in bawdy taverns and had more than a few romps in the hay with them. It was a strange time for Mirela considering she had never before behaved that way. She had mostly been acting out after her younger sister and best friend Bianca found herself married well before Mirela. The normally pious and sober Mirela behaved this way partly out of jealousy but also due to loneliness after losing her closest sibling. Mirela always ended these whimful trysts as soon as she felt a hand sneak beneath her skirt and run up her thigh. Unlike Loredana, Mirela understood the value of her virginity and the importance to her family of approaching the wedding chapel unsullied. Mirela held a strong Christian faith and planned to go to her marriage bed pure. But she would only be young once and didn't see any harm in kissing a few boys before binding herself to a man for the rest of her days. Mirela's irresponsible days were short-lived however. Her youth was tragically cut short and her life irrevocably altered by an accident that occurred five years before.\n\nMerila's father, Lord Pierocent, had been thrown from his horse while out hunting and landed right on the crown of his head. He was unconscious for over three days before finally awaking from his coma. Lord Pierocent was never quite the same after that. He managed to relearn how to walk, eat, and dress himself but it took longer for his full capacities of speech to return. Though he eventually returned to some semblance of normalcy Lord Pierocent refused to ever ride a horse again. Mirela's father remained a bit touched in the head, given to muttering and paranoia and unable to wrap his formerly sharp mind around subjects more complex than buttoning his nightshirt. \n\nMirela's mother was a gorgeous but rather simple woman who had been married for her beauty and family connections rather than out of any sort of affection or admiration for her intellect or character. She could certainly order the maids and other servants around and was especially adept at planning great feasts and parties but Lady Pierocent proved woefully incapable of managing the family's finances. She also lacked the organizational mind and ability to devise and implement the planting, buying, and selling of local wheat, rye, and other crops that sustained the family, the townsfolk, the servants, and the serfs who cultivated the land for them. In addition, Mirela's father owned outright or had invested in several other enterprises including milling, shipping, mining, and metalworks. The family faced a potential disaster without someone shrewd and capable there to manage their dominion competently.\n\nFortunately, Mirela proved more than capable of overseeing the her father's dominion. She had observed and assisted her father in his dealings since she became a teenager. Her father had realized early on the powerful intellect that Mirela possessed and began to include her in business decisions from an early age. Mirela formulated her own ideas for how to maintain their family investments but never gave voice to her plans so she would not appear to be contradicting her father's will. Now that Mirela was thrust by necessity into the position her father formerly held, she implemented the ideas that had previously only been fancies in her mind. Not only did she maintain the Pierocent finances and businesses with aplomb, she actually improved their income by eliminating inefficiencies and making prudent investments. She hired a brilliant young bookkeeper named Bac Disperat who helped expand their holdings even further. Under Mirela's leadership, the modestly wealthy family quickly became rich.\n\nThough her father technically still held his seat as lord of the voivodeship, Mirela had assumed the role of head of the family in all but name. Mirela assumed this might make her an even more desirable prospect for marriage, but her two younger sisters were the ones who seemed to draw all the attention of men. Running the household took all Mirela's time and while she had obtained a position of power few women could ever hope of attaining her youth slowly slipped away from her. Mirela's father might have once been able to pluck a minor lord's marriageable young son from another province with relative ease for Mirela to wed, but he no longer had the mind to focus on such an undertaking. Mirela's mother was flighty and seemed rather uncaring for Mirela's plight. The truth was that her mother resented Mirela for usurping her role as the most powerful and influential female in the household. Lady Pierocent's oldest child constantly circumvented her wishes for the management of the family manor and wouldn't cut her in on any of the family business besides providing her an allowance for clothing, furniture, and parties. Mirela instead spent most of their growing fortune on donations to the church and for good works to aid the poor townspeople. Lady Pierocent despised how her own offspring disrespected her and treated her like a kept woman. The servants soon began referring to Mirela as the Lady Pierocent rather than her mother, angering the woman even further. Mirela's mother could tell her daughter was lonely, but rather than consoling her she hoped to see her miserable for a few more years. Eventually she planned to send Mirela off somewhere far away like France or Austria to be married so she could reassume the title of Lady Pierocent.\n\nMirela now appeared likely to enter her thirtieth year still unmarried and still a virgin. This should have bothered her, but it didn't. Mirela cherished her prominent role in the family and realized that women almost never wielded the power and authority she held. Mirela enjoyed her work too much to be tied down to a husband who would not be so accommodating to a woman having such a large degree of power within his household. Mirela planned to settle down once she was good and ready and until then she would continue attaining fabulous wealth and enjoying life to the fullest. But then her parents were brutally murdered.\n\nThe half dozen knights that served as their guards swore there was no way the manor could have been infiltrated without them knowing. A fresh snowfall revealed no tracks or footprints indicating how the break-in occurred. Maybe the guards were just saying that to cover their tracks in the face of sheer incompetence. Regardless, on a beautiful, peaceful winter morning Mirela's mother and father were found murdered in their bedroom. Lord Pierocent's head had been completely severed from his body while the Lady Pierocent had been discovered lying lifelessly upon her bed with her throat torn messily apart. While gore covered the floor that her father's body laid upon and the bedsheets where her mother had breathed her last, the bodies of Mirela's parents were completely drained of blood. The guards found no evidence of a break-in, no weapons left behind, and no apparent motive for such a heinous crime. \n\nThe serfs and other servants that worked at the manor were a simple and superstitious folk who naturally assumed some supernatural force had been behind the killings. Some of them even believed Mirela herself was responsible. No woman who had assumed a position of power like hers could possibly possess altruistic intentions. Godly women were not meant to rule but rather be subservient to their fathers and husbands and any woman who believed otherwise belonged to the devil. The servants huddled together in corners of the manor and whispered to themselves quietly, claiming that Mirela was a witch who had cast an enchantment on her father to dull his wits. When that wasn't enough to attain the power she lusted for Mirela slayed her own parents and drank their blood so she might attain eternal youth.\n\nThe servants soon began making the sign of the cross on their chests or spitting on the floor as they passed Mirela in the hallway. It upset Mirela tremendously to find that despite living her life through Christ and doing so much to help the poor she was feared rather than admired. She thought that through her pious nature she might set an example to others but instead the servants who had worked for the family since Mirela was a small child despised her. Though she believed in Hell and the devil as any good Christian would, Mirela didn't hold with such superstition as these peasants believed. The world had entered the seventeenth century just a decade before, and it marked the beginning of an enlightened age that Mirela hoped would eliminate these backward kinds of beliefs. But these serfs were poorly educated folk who preferred simple answers for the unexplainable.\n\nWhile the deaths of their parents was shocking, disaster truly struck the family when Bac Disperat disappeared along with all the holdings the Pierocents had ever deposited. Further investigation found that all their money had been divested from the family enterprises in the last few days before their parent's murders. Mirela appealed to the banks and money lenders they dealt with, claiming these withdrawals were obviously fraudulent. But every bank was able to produce a note that Disperat had provided them upon withdrawal of their funds. The signed and notarized letters all stated that Mirela's father, of sound mind, had authorized Bac to divest all their savings. Mirela inspected the notes closely and confirmed they were indeed her father's signature. Mirela had no idea why her father would do such a thing, but it wasn't like she could ask him now. With Bac still missing along with the family fortune, the Pierocents were destitute.\n\nMirela did everything she could to keep the household running and take care of her three younger sisters. While the servants were continually suspicious of Mirela, they would continue to work as long as they were still provided food and shelter. Mirela sold several precious family heirlooms in order to keep the serfs fed and working hard. She had banked on this year's harvest turning enough of a profit to keep the family afloat until Bac could be found and their financial situation resolved. But an unusually wet and cold spring led to a poor harvest eventually turned to a famine that further exacerbated their monetary woes. The servants wondered out loud whether the Pierocent family was cursed due to their daughter's unimaginable crime. Farmers, maids, gardeners, laundresses: they all began leaving the estate in droves until all but a couple servants and a single guard remained.",
        "Mirela and her sisters went from a life of opulence and excess to having to sell their furniture just to afford bread for dinner. In both Lord Pierocent and then Mirela's dealings the estate had taken on a sizable amount of debt and loans against their property in order to secure enough funds for their investments. The risk had been worth it, at least at first. The obligations had nearly all been paid off but once the family problems began the debts lingered on unpaid until compounded interest added to the family's growing deficit. Mirela went over the numbers over and over again but every time she arrived at the same conclusion. They were in danger of losing the manor and all of their land, leaving her and her sisters homeless. Mirela appealed to the lords of nearby provinces for assistance but they proved spiteful and vindictive. They seemed to relish the fact that the formerly richest family in the region had fallen so precipitously.\n\nJust when the family seemed at its lowest, a savior came down from on high to rescue them. Not God obviously, for Mirela's Lord had apparently decided to abandon the Pierocent daughters. Rather, it was Count Turenau who offered his charity. Mirela had never even heard of the noble Turenau family prior to receiving the first letter from the Count, though he claimed in his correspondence that the Turenaus and Pierocents had a distant family relation. The letter stated that the tale of the Pierocent family's plight had reached all the way to the remote Castle Sidexes and the Count couldn't stand idly by while one of the oldest and greatest families in Transylvania suffered such misfortune and injustice. The Count offered to cover her family's debt so Mirela could repurchase the family plot and protect it from any buyers who intended to steal the ancestral Pierocent home out from under them. In return, the Count only asked that the sisters visit him at his castle so he could meet his new wards and provide them shelter and sustenance while all the messy financial dealings with the Pierocent property were concluded.\n\nMirela couldn't have been more relieved. Her nerves had been frayed to the point of severing in the last few months trying in vain to generate some miracle that might allow them to keep their home. Mirela had hardly slept due to the stress and as their resources grew scarce she felt the pangs of true hunger for the first time in her life. She couldn't help feeling somewhat suspicious of their newest benefactor's generosity but Mirela did some investigating and found the Count's family line to be an old and respected one and his claims appeared to be legitimate. Even so isolated that a tax collector probably hadn't visited Castle Sidexes in generations, the Count continued to pay tribute to the prince ruling the province and had never wavered in support of the Hungarian rulers who had claimed dominion over Transylvania. Sidexes was located in about the most remote corner of the province atop one of the highest mountains. A site so far out of the way that it was considered a legend by most of the common folk. The Count's wealth seemed to be no myth, however.\n\nThe sisters packed up their few meager belongings and bid farewell to the only home they had ever known. Mirela ran her hands over the hardcarved wooden structure of their manor a final time before taking one last long look at the family seal hanging on the mantle above the gilded fireplace in their main hall. The crest displayed two lions with fiery manes bowing to a golden eagle holding a shield in its talons, a symbol that had represented the Pierocent family for generations. The only heirloom they hadn't yet sold. Mirela thought of taking it with them but they would surely be back here again soon. Surely they would. Mirela sighed in resignation and turned away, walking out of the front door and down the steps to join her sisters waiting for her in the carriage.\n\n\"We were near to starving before Count Turenau offered his help,\" Mirela reminded her sisters. \"The least we can do in gratitude is to meet with our new benefactors and give thanks in person. I for one will enjoy some stability for a change.\"\n\n\"I don't like it,\" Bianca said as she crossed her arms over her ample chest. \"We should be hunting mother and father's murderers, not entertaining our newest patrons. We need to find Bac Disperat!\" Bianca slammed her fist down into the palm of her other hand as she made this declaration. \"He seems too much a coward to have performed the evil deed himself, but he surely knows the fiends who did kill Mama and Papa.\"\n\nMirela counted on her fingers their limitations. \"Bianca, the only food we have packed is what we found tucked far back in the larder, we have no money after paying for this carriage, no provisions, and no other resources,\" Mirela explained. \"Need I remind you that I've sold all but three of my dresses to pay for staying at that inn last night? I want to bring justice to our parent's murderers just as much as you do but what can four young women do when they have nothing to their name?\"\n\n\"More than you think, sister,\" Bianca answered quietly as she stroked the long wooden case resting on the seat next to her. Mirela had no idea what was inside the dark brown case but Bianca hadn't let it out of her sight since their journey began. \"Until we have obtained justice, we will never find peace or prosperity.\"\n\n\"Justice is dead and buried in this land,\" Mirela muttered.\n\nBianca frowned at her older sister. Normally Bianca was the pessimist of the two. Mirela had always been the responsible one, the most reliable and resourceful of the four daughters. The sibling that always had a plan and knew exactly how to execute it. But even Mirela had her limits and it seemed the last few trying months had frazzled the formerly unflappable woman's nerves. Bianca shuddered, knowing that if something ever happened to Mirela the remaining Pierocents would surely be lost without her leadership.\n\nBianca was the second oldest of the sisters after Mirela. Unlike her measured, refined older sister Bianca was all pure emotion and raw intensity. A fiercely independent young girl, Bianca had been riding horses, commiserating with the knights as equals, and dressing in scandalously tight male clothing while her other sisters had been learning their manners and how to properly serve their future husbands. Bianca had bright, sparkling blue eyes and long, curly blonde hair. While Mirela more closely resembled their mother, with her pale golden locks Bianca was unquestionably her father's daughter. Bianca possessed an exquisite beauty and a personality like a raging fire that was liable to flare up at any moment. \n\nBianca would have preferred her normal clothing choice of a shirt and trousers today but Mirela had insisted on Bianca wearing a dress for their introduction to Count Turenau. The blue satin weave of her dress was decidedly ill-fitting since Brianca preferred not to reveal the enticing curves of her body. Bianca knew she had a form that drew a man's eye and had always despised the unwanted attention. The only man she had ever worn revealing clothing for was her late husband. Back when she was still married, Bianca used to commission a special clothing designer from a Wallachian city to weave extremely revealing nightgowns for Bianca to wear for her spouse. Bianca relished the shocked look showing on her husband's face when she removed her plain, demure dress to reveal a transparent negligee that didn't even bother to hide her nipples or obscure the outlines of her buttocks and her sex.\n\nLord Pierocent had married off his second daughter when she was at the earliest marriageable age of eighteen in an attempt to tame an unruly and rebellious girl. This had been the year just before his fateful accident. Bianca was arranged in a marriage to the son of a merchant who owned a mining company that Lord Pierocent had become heavily invested in. It was true that Bianca had married below her class, but Lord Pierocent recognized that the new money of this rising merchant class would someday rival the ruling nobility in power and wanted to help ensure both Bianca and the rest of the Pierocent's future by joining with one of the stronger business families of Transylvania.\n\nIf Lord Pierocent thought marriage would temper his daughter's attitude, he was sorely mistaken. The young man Bianca married proved to have just as fiery and strong willed a personality as Bianca. They were a perfect match. Their lovemaking had been passionate and wild, with Bianca allowing her husband to do things to her that no decent Christian wife should allow. Mirela saw Bianca rarely during the time she was married though she did catch wind of some scandalous rumors that had been spread about her sister. According to hearsay, Bianca and her husband practiced a sort of open marriage. The rumors among the servants at Bianca's new home were that Bianca allowed her husband to sleep any maid of his choosing as long as Bianca was permitted to ride one of the merchant guards whenever she wished. Even more scandalously, Bianca and her husband supposedly invited others to join them in their marriage bed. Rumors said this included partners both male and female who were invited to participate in the married couple's sexual activities. Mirela never learned for certain if there was any truth to these rumors. Though she would be very disappointed to learn the gossip was indeed factual, Mirela never mentioned the rumors to Bianca even after the death of her husband. Mirela respected that the details of Bianca's personal life belonged to none but Bianca herself.\n\nBianca's parents had been disappointed that their daughter was married for nearly five years and had yet to produce a child. Bianca and her husband had no desire at that time in their lives to raise a child. They enjoyed drinking, feasting, racing horses, fencing, and copulating far too much to worry about a baby. They had plenty of time left for chasing little brats around and performing their familial duties. The whole rest of their lives they had thought. But the blood of Bianca's husband ran hot through his veins, and when she was twenty-three he got in a drunken argument with other men at a tavern who had insulted Bianca's honor by inviting her to perform sexual acts for them. Bianca's husband had been slain in what the constabulary called a duel but was truly a massacre with five men pitted against a single one. Bianca's husband managed to take two of his assailants to the grave with him before he expired from over two dozen stab wounds.\n\nThe death of Bianca's husband had been a shock to everyone in the family except for Bianca. She always knew this sort of thing could happen considering how hotheaded her husband could be. The only thing shocking to Bianca was that she had been widowed at such an early age. Mirela invited Bianca to return to the manor to live with the rest of the family but instead Bianca disappeared for several months. \n\nNo one knows the truth of what happened next, but Mirela made her best guess based on her memories of Bianca being taught the use of a sword as a teenager by a blind old knight named Demn. Demn had served the family since before Mirela was born and continued to swear fealty and in return be supported by Lord Pierocent despite the elderly guard's disability. He had after all lost both eyes because of the slash of a bandit's sword that had been intended for Lord Pierocent's throat. Old Demn had lost none of his lucidity due to his advanced age and despite his lack of vision he instructed Bianca well in the ways of the blade. \n\nTwo months after the death of Bianca's husband the three surviving of his murderers were found with their throats slit and covered in multiple sword wounds. Only once they were dead did Bianca return home, now bearing a nasty gash across her cheek that became a permanent scar. The since-healed mark on Bianca's right cheek was her only visible flaw. \n\n\"Why did we have to leave?\" Loredana wailed suddenly. Bianca and Mirela looked at each other and both rolled their eyes. Loredana's constant complaints had begun to wear on them. \"I had three beautiful boys courting me,\" she lamented. \"It was only a matter of time before one of them proposed. Now it's gone, all gone...\" Loredana laid her face in her hands and wept.\n\n\"They were never going to marry you Loredana, you stupid cow,\" Bianca growled at her sister. \"They were just stringing you along until they could get their pricks wet with you. Which we all know was eventually going to happen.\"\n\n\"Bianca, will you desist?\" Mirela demanded with a snarl. \"How are we supposed to make it through these troubles if the four of us are constantly at each other's throats?\"\n\nLoredana sobbed loudly and wept even more prodigiously into her hands. The truth was she had already slept with each of her three suitors. If anything she was the one stringing them along, enticing them with her beautifully shapely body and deliciously naughty ways in the hopes she could convince all three of them to propose. Loredana then planned to take her pick between them but these troubles had ruined all her little plots. \n\nWhile Mirela was a pretty woman and Bianca was truly beautiful their little sister Loredana was in an entirely different realm in terms of attractiveness. Loredana wore long her beautiful, fiery red hair that contrasted perfectly with her vibrantly green eyes. She had a full-toothed, mischievous smile and a lovely face that appeared to be by all accounts flawless. \n\nWhen Loredana was a girl, Mirela and Bianca had teased her mercilessly about how her features were unlike any of their other family members. They claimed Loredana was a foundling who had been left on the stoop of the manor one night after a witch had devoured Loredana's real family as punishment for Loredana not listening to her siblings. So she had better obey her new sisters or else. This led to screaming and crying fits that only calmed once Lord Pierocent held Loredana closely and spoke to her of his own grandfather who had possessed the very same shock of fiery red hair as Loredana.\n\nLoredana had a perfect number of freckles dotting her face, enough that they were apparent enough to contribute to her adorable features without becoming her dominating feature. Unlike Mirela who possessed a figure similar to a tall, lanky man, Loredana's shorter, wider body was more shapely like Bianca's. Bianca and Loredana both possessed wide hips with curvy thighs and sides while also boasting impressively sized chests. But instead of dressing herself in the least revealing clothes she owned as Bianca or Mirela did, Loredana went out of her way to show off the snake-like curves of her body so that her breasts, thighs, hips, and buttocks were emphasized as much as possible. The green dress she wore today had a low cut to display most of her cleavage and a short ruffled skirt with a hem that ended scandalously above her shins.\n\nLoredana's beauty and her ability to easily attract men had a downside though. She loved sex to an unhealthy degree. Even since pubescence she had drawn the eyes of men who noticed how well she had developed and Loredana developed a liking for having a man's prick inside her at an early age. It didn't matter to her who it was with, as long as they had a decent sized cock. It could be with someone noble like the son of one of the minor lords of the province or someone as lowly as one of their bodyguards or a local shepherd. Whenever Loredana wanted a man, she had them. And she wanted often. Loredana was only twenty and Mirela had already had to arrange a doctor's visit thrice to take care of Loredana's mistakes. Who knew who the fathers even were, they could have been any number of men living in the village. With her reckless ways, Loredana threatened to bring shame down upon the entire family. On several occasions, Mirela recalled her father screaming at Loredana and accusing her of spreading her thighs apart for every young man living within a hundred miles.\n\nThough Lord Pierocent's increasingly addled and paranoid mind exaggerated, the accusation was probably not that far from the truth. Loredana had once disappeared from the manor for days after yet another one of these arguments with her father. After she was missing long enough, Lady Pierocent sent a reluctant Mirela to locate and retrieve Loredana. Mirela finally found her sister staying at an inn a few villages away. When Mirela opened the door to Loredana's room, she found her sister naked as the day she was born on her bed and writhing on all fours between two vile, common-looking men. One of the men ran his hands over Loredana's curved torso as he penetrated her roughly from behind. Loredana bounced her body back against him, inviting the ugly, grinning man to shove his prick deeper inside her. Loredana had somehow managed to unhinge her jaw and she held her mouth wide open as the man on the opposite end of her thrust his member down her willing mouth into her throat. The second man held Loredana's head in place with his hands gripping the sides of her skull as he used her mouth for a fuckhole. The choking and gagging noises coming from Loredana's throat were disgustingly obscene. \n\nMirela had never even conceived of taking two men at the same time before witnessing this debauchery. It was not a concept she would have dreamed possible, but here was the proof of it occurring right before her. Mirela threw the man behind Loredana off of her and pulled her sister away as she screamed at the men to leave. The foul-looking peasants laughed as they got dressed and thanked Loredana for the good times they enjoyed the last few nights before they left with a wink. Mirela threw clothing at Loredana and ordered her to get dressed immediately. \n\nLoredana didn't even have the decency to blush or look ashamed at being caught spitroasted between two peasants. She actually had the audacity to suggest that Mirela go apologize to the men and invite them back upstairs so they could engage in an orgy. Loredana said that Mirela could finally lay with a man if she just took that stick out of her arse and let one of the men fill that empty spot instead. Mirela didn't think she had ever been more furious at Loredana, but couldn't let herself grow too angry since she realized the silly girl truly couldn't help herself. Mirela grabbed Loredana by the ear and tugged on it hard to force her outside and pulled it harder every time Loredana resisted or started complaining. That seemed the only way to convince her to return home. Everyone having a pint at the inn laughed with entertainment at Mirela putting her sister in her place. Mirela would have spanked her sister too if she didn't think Loredana would enjoy it. Mirela wished this were the only time Loredana had been caught in a compromising position but this was just one story out of many. \n\nBianca turned to the sister sitting next to her and shook her arm. \"Bela, please speak with us,\" Bianca pleaded. \"Tell us what you know. Anything you can share would aid us.\"\n\nBela barely seemed to notice Bianca tugging at her sleeve. Her hands rested in her lap as she stared at the scenery through the window view mutely. Bela had reached her eighteenth year only a week before and her official passing of adolescence to adulthood had not been a particularly happy one. Bela had been the first to discover their parent's bodies and whatever she had seen in their bedroom so disturbed her that she had been completely silent the long months since. Bela's older sisters hoped the shock would wear off eventually but the horror Bela had witnessed must have been too great for her simple mind to comprehend. Mirela, Bianca, and Loredana began to wonder if Bela would ever again utter another word.\n\nBela had inherited few of the good traits her sisters had. She did not possess Mirela's intelligence and sensibility, or Bianca's courage and passion, nor Loredana's radiance and beauty. Compared to the rest of her siblings, Bela appeared dim and rather dumpy. She was almost an afterthought in human form. She did have a pleasant, patient, eager to please personality though and her sisters all loved her unequivocally. While the older Pierocent girls constantly bickered amongst themselves even before they found themselves untethered to their previously privileged existence, they reserved none of their ire for their youngest sister who was always too gentle and sweet to involve herself in the disputes that consumed the siblings.",
        "Bela had brown eyes and long brunette hair similar in color to the tresses that Mirela had inherited from their mother, though Bela's shading was a much lighter brown. Her hair seemed rather stringy and wiry instead of silky and luscious like Mirela's. Bela's face was somewhat plain though she looked pleasant enough whenever she smiled. She hadn't made that expression nor any other in quite a while however. Bela's body was short and plump, though more filled out and less defined than the curves of Loredana or Bianca. Bela did possess a sweet and docile demeanour and even if her features weren't the most striking she would have made a fine wife to any man before these troubles began. But all that was over now. Her mind had been damaged by what she had seen, perhaps irreparably so.\n\n\"Will you speak with us or not?\" Bianca demanded as she shook Bela's shoulder roughly. \"The one chance you have in your life to actually be of use...\"\n\n\"Oh, let her alone!\" Loredana pleaded.\n\n\"Loredana's right, Bela has been through enough,\" Mirela added. \"She doesn't relive the most traumatic event of her life. I swear your wicked tongue is going to be the death of us all, Bianca.\"\n\n\"Oh, will you fuck off sister,\" Bianca said with a roll of her eyes.\n\nLoredana and Mirela both gasped in unison at the language spewing from Bianca's mouth. Mirela was far too refined to ever utter such coarseness. Loredana had used the curse word numerous times as a verb when telling a lover what she wanted them to do to her but she only did that when she was behaving absolutely filthy. She would never speak such an obscenity in fine company or around her family.\n\n\"What did you say to me?\" Mirela asked icily.\n\n\"I said fuck off already,\" Bianca reiterated with a snarl. \"We all realize how perfect you are, so quit rubbing it in our faces all the time. We all know you are the darling child, the one who can never do wrong. As if we could ever forget it coming from the one who always tattled on us to Mama when we were girls. You've always been better than us, at least in your own mind. Yes, you were Papa's favorite child, the only one he trusted. You were never a rebellious child like I was or a slut like Loredana.\" Loredana bristled and shrank into her corner of the cab as Bianca turned toward her.\n\n\"Nor a simpleton like Bela,\" Bianca continued as she indicated the sister sitting next to her. \"But despite your pretenses, you are just as flawed as the rest of us. Your perfection is your very imperfection. Your self-righteousness and refusal to ever admit when you are wrong is detestable. No wonder no one will marry you. Like any sensible man would let a woman lord over him the way you do to the rest of your family.\"\n\nLoredana made a frightened squeak and looked back and forth between her older sisters. \"You go too far,\" she told Bianca.\n\nContrary to her normally unbreakable composure, Mirela wilted under Bianca's verbal assault and sank into her seat. Mirela stared down at her hands in her lap and promised herself she wouldn't cry. When she looked up after a moment of reflection Mirela noticed that Bianca was chewing at her lip and had a worried look in her eyes. Bianca knew she had crossed a line.\n\nMirela cleared her throat, looked directly at Bianca and said carefully, \"I don't mean to be so commanding, I really don't. I'm so sorry if you feel that way. I just want what's best for everyone. I need to realize that what I want is not always the same as what others desire and that I have to okay with that. I'm not perfect, I make mistakes. I never should have hired Bac, who betrayed us. I should have realized far sooner how much money we had lost trying to make the next harvest when we could have been saving what we had to stave off this disaster. I'm always willing to listen to my sisters if you know a better way. I love and respect you all too much to think otherwise.\"\n\nNow Bianca was the one who looked like she was about to cry. Her watery blue eyes stared into Mirela's pretty hazel pupils as her lips quivered. Bianca voice wavered with remorse as she took ahold of Mirela's hands and said, \"I didn't mean what I said, Mellie. Please believe me. You are our foundation, we depend on you for so much and I can't imagine how difficult that must be for you. I didn't mean to say such awful things. It's just losing our home and our family... it's getting to me.\"\n\n\"I know you didn't mean it, Bianca,\" replied Mirela as she gave Bianca's hand a squeeze and drew a smirk from Bianca's rosebud mouth. \"We've just been cooped up in this carriage for far too long together. It's no wonder we are snapping at each other. Now when are we going to reach this damned castle?\" Loredana and Bianca couldn't help smiling at each other over Mirela cursing, even if it was a minor oath.\n\nAs if on cue, the carriage topped a rise and a large, black castle appeared in the distance. The castle was located next to a steep cliff near a large crack between two of the mountains that a road was built upon. The grounds of the castle stood upon the only passable trail through these mountains. The perfect fortress and a bulwark preventing any invading armies from using the mountain path as a rear entrance. The sharp, spiked spires topping the towers of the castle cast a grim appearance on the surrounding countryside wherever their long shadows touched. During the time that the sisters had been bickering, the sun set rapidly. The orangeish glow shining over the trees and mountains surrounding the castle had begun to turn a deep blue as the sky darkened. Once the carriage topped the final rise leading up to the castle, Mirela realized that with how isolated they were there would be no escape for them once the carriage departed.\n\n\"I really hope we made the right choice, Mellie,\" Bianca murmured as their carriage neared the castle gates. Mirela had just been hoping for the same.\n\n+++++ Chapter II: A Welcoming +++++\n\nIt required the efforts of two men to unlatch the lock of the heavy iron doors of the gate and then swing the doors open for the carriage to pass through. A tall black fence surrounding the castle grounds had wickedly sharp spikes sticking out of it to prevent anyone from attempting to climb over. The horses seemed hesitant to pass through the gate into the yard outside the castle but more sharp lashes from the driver's whip drew blood that spurred the equine beasts to enter. The carriage pulled to a stop inside a courtyard just outside the main entrance to the castle that was hemmed in by a smaller inner fence. The wheels of the carriage rumbled over the rocks and other mountain debris that covered the road until the ride smoothed out upon the dirt clearing of the courtyard. The carriage sat still for a minute while the sun disappeared behind a distant mountain peak and the remaining daylight slowly faded to black. Though the sun had not fully set, due to the solar position behind the far mountain it appeared that night came early to Sidexes. Mirela pinned the curtains back and looked at the courtyard through the window opening to find there was no vegetation within the gates except for some dead, gnarled old trees. Nothing living grew within the shadow of Castle Sidexes.\n\n\"Excuse me, sir?\" Mirela called to the driver as she opened the door to the cab and leaned outside it.\n\nCaine turned in his seat and regarded Mirela with a leer, blatantly staring at her slim but still womanly body. Mirela resisted the urge to cover her chest with her arms. \"Yes, my lady?\" the man answered in his creaking, raspy voice.\n\n\"May we get out of the cab yet?\" Mirela asked. \"I'm not quite sure what we are waiting for.\"\n\n\"We are waiting for the lord to come out and meet us,\" the driver explained with annoyance. \"It looks like it will be just a minute.\"\n\nMirela sat back against the hard seat inside the cab and shrugged at her sisters when they looked askance at her. A moment later, the last remaining rays of sun succumbed to the darkness and night took hold of the realm. Mirela noticed an ethereal, otherworldly light emanating from behind the castle and realized it was the moon already beginning to rise over the other side of the mountain. At this elevation and so far removed from any village the lunar object appeared enormous. Though torches lighted on braziers around the perimeter of the courtyard along with candles lit in windows of the castle provided some scant illumination, the moonlight provided the clearest vision and cast the world in an almost purple-colored glow. Mirela heard distant wolves howling from the forest, rejoicing at the reappearance of the moon. Mirela remembered the wolf from earlier staring at her and she wrapped her arms around herself as she shivered. The air had cooled rapidly since the sun completed its cycle. Though it was late summer, they were high enough in the mountains that the air always possessed a sharp crispness along with a swift wind that was constantly biting at exposed flesh.\n\nWith the sun now absent, the driver hopped down off the front seat and came around to the cab to open the side door. Mirela climbed out first, pointedly refusing the hand that Caine offered to her. But Mirela took a bad step while getting down and nearly tripped over her skirt as she lowered herself to the ground. The driver steadied her with a hand on her waist, which Caine squeezed before lowering his hand to caress her hip. Mirela twisted away from his grip and made a point to stand next to the cab to help her sisters down herself rather than allowing Caine to do so. The driver grinned devilishly and cackled at her efforts to protect her sisters.\n\nFirst out of the carriage was Loredana and behind her Bianca practically dragged Bela to the door. Bianca carried Bela with hands underneath her armpits and she lowered Bela down to Mirela who grabbed onto her youngest sister's waist. Together, the two of them helped lift Bela down to the ground as delicately as possible. The sisters stood side by side holding each other's hands as they looked at their hopefully temporary new home. Now that they were closer, they were able to see how run down the castle really was. The stones of the castle were falling apart while cobwebs were abound near the castle entrance. Mirela noticed Bianca intently studying a large crack forming in the masonry of the entryway. How could the inhabitants living here let their home fall into such disrepair? Did any people actually live in this place?\n\nA teeth-grating creaking and grinding noise offended the ears of the sisters as a wrought-iron door slowly swung open from the main entrance. The sound of footsteps echoed ever nearer through the doorway until a figure emerged from the dim entryway that was lit by a single torch. The horses harnessed to the carriage began whinnying loudly and rearing back before stamping their hooves upon the ground. Caine pulled roughly at their bits and threatened the use of his whip again to get the beasts back under control. Darkness silhouetted the approaching figure until it was close enough that the shadowy profile revealed its shape to be a man.\n\nThe stranger appeared to be approximately the same age as Mirela, either in his late twenties or early thirties. The man wore a fancy purple vest covered in golden buttons along with black tights and a dark cloak. His vest, black boots, and gloves were covered in lace and finery that made it obvious this man was a lord of wealth and taste. He was also strikingly beautiful, almost too pretty for a man. Wavy brown hair ran down his scalp so that his hairstyle appeared shaggy and unkempt yet perfect enough that some painstaking precision must have gone into styling it just so. His eyes were pools of moonlit blue that glowed brilliantly in the torchlight. His face was a touch too pale, but this only served to bring out the color of his full red lips that seemed permanently frozen into a cocky, playful smirk.\n\nThis young lord was the most handsome man that Mirela had ever seen. Though she was supposed to keep on her guard, Mirela couldn't prevent her heart from skipping a beat as her and the man's eyes met. His gaze was intense and penetrating. Mirela considered herself a strong woman but even she had to look away from the overwhelming intensity of the man's blue eyes. His gaze made it look like he wanted to consume whoever he looked upon. Even Bianca had to admit the man was almost painfully attractive. She imagined Loredana must have wet through her underlings at the mere sight of him.\n\nMirela stepped forward and introduced herself. \"My lord, I am Mirela Pierocent. Are you Count Turenau?\"\n\nThe man gave her a slight bow and spoke with a strong, commanding voice, \"I regret to inform you that you have mistaken me for his lordship. I am the Count's great-nephew, Viscount Eduard \u015earpe. The Count asked me personally to receive you upon your arrival and welcome you to the great Castle Sidexes.\"\n\n\"Thank you, my lord,\" Mirela answered back. \"I am very pleased to make your acquaintance. We are so very grateful for your uncle's hospitality.\" She offered her gloved hand to \u015earpe, which he took and raised to his lips.\n\n\"It was nothing,\" \u015earpe remarked after he kissed the back of Mirela's hand. He rubbed his thumb against the fabric of Mirela's glove before releasing her. \"Though it is true we are a very distant relation, whoever would turn their back on family when they are in need is no better than a dog.\"\n\n\u015earpe looked over Mirela's shoulder and regarded her sisters one by one. His smile grew larger as he nodded toward Loredana. \"And this is delectable creature is...?\"\n\nLoredana stepped forward, bumping Mirela with her shoulder as she slid by her sister. \"Loredana Pierocent, my lord,\" said the young woman whose face had turned flush at the sight of Viscount \u015earpe. The red showing on Loredana's face made her freckles appear even more prominently. \"Are you as pleased to make my acquaintance as I yours, my lord?\"\n\nLoredana offered her hand to the lord. He stared at her and answered quietly, \"Very pleased, my lady. Very.\"\n\n\u015earpe raised the back of Loredana's hand to his mouth and let his lips linger there several seconds longer than they had upon Mirela's. Loredana placed her other hand over her mouth and began giggling childishly until \u015earpe finally desisted. While still holding her hand, he stepped closer to Loredana so that they were face to face and then kissed her upon both cheeks. Loredana shivered as she felt \u015earpe's lips upon her and sensed his muscular body mere inches away from her. Loredana had been staring this whole time at \u015earpe's legs and she felt faint at the sight of his muscled thighs and the turn of his calves. He had a cute, tight little bottom too. Loredana breathed deeply and stared intently into the endless blue void of \u015earpe's eyes as she reluctantly stepped away from him, her prominent chest heaving with barely restrained lust.\n\nBianca stepped forward next and put herself between her stricken sister and the handsome lord. She introduced herself brusquely, \"Bianca Pierocent.\"\n\n\u015earpe smirked as Bianca pointedly refused to offer her hand to him. \"No kiss for your long-lost cousin?\" \u015earpe asked with amusement.\n\n\"I'd rather kiss a toad,\" Bianca grumbled.\n\n\"Bianca!\" Mirela cried. \"Show some manners for once in your life.\"\n\nLoredana simply shook her head at her rude sister, though inwardly she was happy to see that \u015earpe paid more attention to her than to either of her older sisters. Maybe the stay at this dreadful castle wouldn't be so bad if this was the company they would be keeping.\n\nBianca shrugged her shoulders and said with fake sincerity, \"I guess I just have to warm up to our hosts a little more first.\"\n\n\"I apologize for my sister's impropriety, my lord,\" said Mirela.\n\n\"I'm certain it is only a matter of time before she warms up to me,\" \u015earpe said with the same charming yet sardonic tone that seemed to be his default mode of speech. As if everything were a great joke that only he understood. Bianca stuck her tongue out at him once her sisters weren't looking which made \u015earpe bark a laugh in response.\n\nMirela stood behind her youngest sister and placed her hands upon Bela's shoulders as she introduced her. \"This pretty young flower is our little sister Bela,\" said Mirela. \"Can you say anything to Lord \u015earpe, Bela?\" Mirela asked tentatively.\n\nBela inclined her head in regard to \u015earpe but gave no indication that she actually comprehended his presence nearby. He might as well be a tree or a rock for all the notice she gave him.\n\n\"So, this is Bela,\" \u015earpe remarked. \"The Count informed me of her... condition.\"\n\nBianca's body tensed as \u015earpe stepped closer to Bela. She had always teased Bela the most out of all her sisters but she had become fiercely protective of the helpless girl since the death of their parents and did not trust this \u015earpe around Bela. Bianca didn't trust him to be around any of them really.\n\n\u015earpe laid a hand on Bela's shoulder, right over Mirela's hand and told her, \"Your worries and troubles are no more, Bela Pierocent. You will be safe here at Sidexes under the protection of Count Turenau.\" Bela stared straight ahead blankly, providing no indication that she understood or even heard \u015earpe's words.\n\n\u015earpe turned around quickly in an about-face and declared, \"You must be weary and starving after your journey. Let me show you the castle. I will have my servant haul your belongings to your rooms. You will each have your own guest bedroom.\"\n\n\"Thank you,\" Loredana and Mirela said in unison. They both recalled having to fit the four of them to a single bed at the inn the night previously and had no desire to repeat the experience.\n\nBianca was suspicious of even the most common generosity. \"We can make do just fine on our own, Lord \u015earpe,\" she said. \"You don't have to help us with our bags.\"\n\n\"I truly must insist,\" \u015earpe said. \"You are surely famished after the ride up the mountain and it is already late. Our cook has prepared an exquisite meal for the first guests we've received in years.\"\n\nBianca did not want this man or any of his servants going through her belongings. \"I appreciate the chivalry, but we are not rich maidens with half a carriage full of bags for just our hats,\" Bianca said. \"Our few precious belongings are scant and easily transportable.\"\n\n\"Bianca...\" Mirela sighed as she tugged on the sleeve of her sister's dress.\n\n\"I don't trust him,\" Bianca hissed at Mirela in a whisper.\n\n\"We have to trust him,\" Mirela whispered back.\n\n\"Fine, we will bring our luggage to the entryway for your servants to move,\" Bianca said in capitulation. \"So will you be carrying all the luggage yourself, my lord?\"\n\n\u015earpe grinned again with a smile that Bianca was already beginning to despise. \"I'll take your first bag,\" he offered. \n\nAll the sisters aside from Bela helped \u015earpe remove luggage from the trunk of the carriage and everything to the entryway. Mirela grimaced to herself throughout the task. It really should be the servants performing this duty, but this only proved again how far they'd fallen in such a short time. Bela stood in place and stared at her sister as they labored, providing no help at all. Once the sister's belongings had been lined up by the door, a heavyset man who Mirela recalled had opened the gate stooped down to pick up the assorted bags, packages, cases and chests and began transporting the luggage to the guest rooms.\n\nThe carriage driver leaned back in the front seat with his arms behind his head and his feet up. He smoked his pipe throughout the transfer, offering no aid to the women. \u015earpe hailed him and threw a small cloth bag filled with gold coins to him. \"I trust you can make the journey back during the night without peril, Caine?\" \u015earpe asked.\n\n\"Never fear for old Caine,\" the driver answered back with a tip of his hat. \"As you know, I've done this ride in the dark plenty of times before.\"",
        "\u015earpe raised his voice so the sisters could overhear him as he addressed Caine. \"You will be back in ten days time to take the sisters back to their home as we planned?\" he asked. \n\n\"Of course, my lord,\" Caine agreed. \"The Dumanica after next you'll see me struggling up my old arse up this damnable mountain again.\"\n\nThe driver winked at the sisters and slobbered his lips with his tongue at them a final time before cracking his whip sharply against his horse's flanks to spur them around. The beasts galloped away from the castle grounds in fright as if they couldn't wait to be rid of the place. Mirela turned back and looked at the long winding road down the mountain that the carriage departed upon. A single guard at his post pushed the gate closed behind the carriage after it left. There could be no escape for them now, Mirela realized.\n\n\u015earpe beckoned the women to follow him into the castle. Loredana trailed after him giddily while Mirela and Bianca followed more hesitantly. Something about this place disturbed Mirela, though she couldn't put her finger on what exactly it was. She supposed she could endure the discomfort for a week and a half if it meant they could win their home back. Mirela took Bela by the hand and pulled her along, using a hold upon her sister's hip to direct the senseless girl on which direction to go. \n\n\u015earpe led them through the entryway to a great hall filled with black stone columns stretching up to the ceiling and intricate stained glass windows covering the walls. The images imprinted upon the windows were barely visibly by candlelight but seemed to be commemorating some great military victory. The sisters followed their host through the hall into winding hallways that seemed easy to become lost in. As they walked, \u015earpe pointed out some of the tapestries that were of historical note and explained how the stonework had been considered the greatest construction of its kind in Europe when the castle had first been built in the nine century.\n\nDespite its opulence, it looked like ages since the castle had last been cleaned. A fine layer of dust permeated the floor and all the furniture. Cobwebs covered nearly every corner in the castle and hung from the ceilings. The sisters kept having to stop in order to pull away loose webs that became stuck in their hair. Mirela became so distracted tearing spiderwebs from her scalp that she neglected to do the same for Bela. She looked over at Bela groaned with frustration when she saw her sister's hair looked like a web had been spun all around it and movements in her hair made it obvious that some spiders came along for the ride. For the first time, Mirela was glad the girl was completely oblivious. She recalled Bela being deathly afraid of arachnids as a child. Mirela asked the others to wait a moment while she pulled the webs and their creepy, crawly denizens from Bela's hair until she was reasonably clean. Oddly enough, the webs didn't seem to cover or affect \u015earpe at all though he walked directly in front of the sisters.\n\nLoredana squealed in fright as she felt something scurry between her feet. She looked back and saw a large, hairy rat with a long, worm-like tail running down the hallway. She turned pale and looked like she might faint for a second before \u015earpe turned and smiled at her, setting her cheeks to blushing again. Even brave Bianca recoiled at the sight of the rat.\n\n\"Disgusting, filthy little creatures,\" Bianca remarked. \"No surprise to find them here.\"\n\nLoredana tried to put on a brave face. \"Don't be silly, sister,\" said Loredana haughtily with her hands on her hips. \"Show me a castle this size that doesn't have a single rat in it.\"\n\n\"Oh, there are definitely rats here,\" Bianca said as her eyes bored into \u015earpe's back.\n\n\u015earpe paid the creatures no mind. The vermin were so far beneath him that their presence didn't even deserve his notice. He turned a corner and they passed by an ornate set of doors built beneath an archway that seemed to lead down to some underground area. A large iron padlock hung outside of the bar that connected the double-doors and kept them locked in place.\n\n\"What is down here?\" Mirela inquired curiously.\n\n\"The family crypt, of course,\" explained \u015earpe. \"Eight generations of noble Turenaus rest down there in addition to the interred remains of the family that lived in the castle long before our time. I'm going to ask that you not attempt any venture below. The steps leading down have fallen into disrepair due to age and are quite dangerous to descend.\"\n\n\"Why is it locked from the outside?\" Bianca wondered aloud.\n\n\"Excellent question, my lady,\" \u015earpe answered quickly. From his tone, Bianca couldn't tell if he was being serious of having fun with her. \"Though we are difficult to reach this high up the mountain, we have seen bandits from time to time and we have no soldiers or guards garrisoned here. We are not stocking any wealth in these crypts, but there are some family heirlooms stored down there that might be construed as precious though they are quite worthless to anyone but those in our family. Surely you ladies can sympathize with not wanting to lose your most loved possessions.\"\n\n\"I surely can, my lord,\" said Loredana. \"I have to say I'm surprised any bandits would attempt a robbery with you here.\" \u015earpe smiled toothily at her and struck a manly pose with his chest puffed out while Loredana giggled and clapped her hands in delight. \n\nBianca rolled her eyes up to heaven in reaction to her sister's simpering, supplicating tone and the way \u015earpe indulged her. Bianca did love Loredana, but that slutty sister of hers would be the death of them all someday.\n\n\"This way, my ladies, to the feasting hall,\" \u015earpe said as he indicated with a nod of his head toward a turn to the right down the next corridor.\n\nBianca noticed a light glowing from a room at the end of the hallway leading the opposite direction. \"What's over there?\" she asked.\n\n\"Oh, nothing of importance to you,\" \u015earpe said too quickly. \"This castle is quite large, you have not even seen the half of it yet. There will be plenty more time to explore during your stay as our guests. Come along now, dinner is past ready by now.\"\n\n\"Oh, I'm starving!\" Loredana squealed as she walked shoulder to shoulder with \u015earpe into the feasting hall.\n\nMirela and Bianca filed in behind Loredana and \u015earpe, pulling Bela along with them. Bianca took one last look at the light in the other direction before following her siblings through a doorway with a large, pointed arch that led the way into the feasting hall. The hall had large windows that stretched up so high you had to crane your next to see the top of them. They normally lent a spectacular view of the forest surrounding the mountain but night had fallen briskly and darkness had overwhelmed the view of the countryside. The windows were draped by enormous purple curtains that billowed down to the floor and appeared to be covered by centuries worth of dust. On the opposite end of the hall, a roaring fireplace with an elaborately crafted mantle provided light and warmth while candelabras on pedestals stood in each corner of the room to help illuminate the great hall. A massive oak table sat atop a tapestry that covered the center of the floor. Ornate high-backed chairs surrounded each side of the table. Though there were enough chairs to seat a party of over two dozen, only a man and a woman sat at the table.\n\nAs the sisters entered the hall with Viscount \u015earpe, the man sitting at the table pushed his chair out and stood up. \"Welcome, my nieces, to Castle Sidexes,\" the man rasped in a crackling voice that sounded like boots crunching on dead, rotted leaves. He regarded each of the sisters individually and when his eyes passed over Mirela a brief look of surprise came over his face, but the expression disappeared quickly. \"I am Count Nicolae Turenau, ruler of Sidexes.\"\n\nCount Turenau looked older than old. True, his face had no wrinkles marring its features but his eyes were heavily lidded, his face deathly pale, and his voice belonged to a man near his final gasp of breath. Every movement of his body seemed to require great effort, as if the state of living were almost too wearisome for the Count to bear. His scalp was completely bald, though he did cover the top of his head with a small, black felt hat. Turenau sported a small bit of facial hair, merely a short black beard on his chin with no moustache. He wore a long, flowing black robe and a dark cloak. His long, spindly fingers were bridged together in front of his chest and when Bianca looked at Turenau's hands they reminded her a bird of prey's talons.\n\nThe woman sitting next to the Count stood up alongside him and linked her arm around his. There could not be a starker contrast between the two. This woman was closer to the sisters' age, probably in her early-to-mid thirties. She was stunningly beautiful. Long, straight black hair colored as dark as night flowed down to her waist. Her face looked as pale as the others living at the castle, which only served to emphasize her piercing blue eyes and blood-red lips. Her body was voluptuous, with slinky curves and a large chest which she highlighted by wearing an extremely low-cut black dress. A slit in the front of the dress reached all the way down to the woman's abdomen and revealed the inside curves of her substantial bosom. The edge of the slit stopped just so to keep from uncovering her nipples though it appeared her breasts might spill out of the dress if she breathed too deeply. The dress clung to her form tightly and stretched all the way down to the floor.\n\nTurenau lifted his free hand toward the woman next to him and introduced her. \"This is my wife, the Countess Turenau.\"\n\n\"Pleased to meet you, my girls,\" said the Countess with a bright, sing-songy voice. \"But please, we are family. Call me Viviana. Countess sounds too formal for my ears.\"\n\nBianca's eyelids narrowed at this woman who couldn't be more than ten years older than her referring to Bianca as a girl. Girl? I'm all woman, Bianca thought furiously. Who does this cunt think she is, anyway? This Vivianna shouldn't be acting so superior considering that in all likelihood the woman had married up by wedding a decrepit old man decades her senior in the hopes she would earn an inheritance once the Count croaked. For Mirela's sake, Bianca held her tongue. For this time, at least. \n\nBianca's sisters were far less dismissive of Viviana however. Loredana whispered to herself, \"She's soooo pretty.\" Mirela appeared clearly relieved to find there was another female presence at the castle who could be a natural ally.\n\nAfter the sisters made their own introductions, Turenau indicated the table with a sweep of his arm and stated, \"You must be hungry,\" he rasped. \"Sit and rest yourselves while we eat.\"\n\nThe sisters sat down on the opposite side of the table from Viviana and the Count while \u015earpe took a seat next to Vivianna on the other side from where the Count sat. Decanters of wine and water had been placed around the table along with dishes of roasted eggplants and peppers and bowls of berries that must have been picked fresh from the forest. At the center of the table sat a roast beast on a platter with a knife and fork sticking out of its hide. \u015earpe carved the beast with the knife and used the fork to lay a cut of the meat on each diner's plate. He allowed the sisters to pour their own portions of wine into their glasses after serving them the main course. Normally this work should have been performed by servants, but in this castle any help was apparently hard to come by.\n\nMirela began slicing into her meat but when she parted the crisp outside with her knife she noticed that the meal had hardly been cooked. The beast was so pink that it was nearly raw. Loredana and Bianca had noticed the same and looked down at their plates in displeasure as they refused to be the first to try a bite of the main course. Bela played with her food using her fork, regarding the food curiously like she didn't understand its purpose. Mirela didn't want to appear impolite to her hosts, so she cut off a small portion of her meat and lifted it to her mouth. As soon as Mirela took a bite of the beast she nearly vomited up the contents of her stomach. The meat was cold, stringy, and chewy, like it had hardly been cooked at all. After recovering from her gag reflex, Mirela steeled herself and forced the meat down her throat as she attempted to chew on it as little as possible. Mirela chased the meat down her gullet with a long drink of water. The raw, bloody taste lingered in her mouth even after chugging from her water glass. Mirela pushed the meat to the side of her plate and instead picked at the fruits and vegetables, but found those dissatisfying as well. The produce was either overripe and rotting or else shriveled and dried of all flavor. The Turenaus didn't seem to mind the meal at all. They didn't eat their vegetables but they tore into their main course with a nearly bestial fervor.\n\nAfter a moment, \u015earpe raised his wineglass and declared, \"A toast! To our guests and new family.\"\n\nThe Count and Countess raised their glasses in answer and so all the sisters except for Bela did so in kind. The sisters murmured a toast in tribute to family and each sipped their wine. Mirela took a deep drink from her glass hoping to wash down the nauseating taste the dinner had left in her mouth. The wine was nearly as awful as the food. It was a dark red color and had a thick and syrupy consistency with an unpleasant metallic taste. Mirela gulped it down quickly and decided she would stick with water for the duration of the meal.\n\n\"How do you like the wine?\" Turenau asked with amusement. \"It is a local vintage quite unique to this realm.\"\n\n\"It is certainly unique as you said,\" Mirela answered diplomatically. She tried another sip to be polite and had to keep herself from retching as the fluid passed too slowly through her mouth and down her gullet.\n\nMirela looked over at her sisters as they sampled the wine and noticed that Bianca had no qualms about showing her true feelings for the local vine. Bianca took a sip, swished the wine around her mouth and then immediately leaned over to spit it out on the priceless tapestry sitting beneath them. Bianca spewed the entirety of her mouthful with a single spurt before drinking heavily from her water glass. Thankfully, the Count didn't notice Bianca's impropriety. Loredana didn't seem to mind the taste of the wine at all as she conversed with \u015earpe while taking deep sips from her glass. Loredana had never really cared about the flavor of wine as long as there was alcohol in it. The Turenaus didn't seem to mind the taste at all though they were likely used to it. They swallowed the wine greedily with long gasping drinks, even the Count who seemed like a rather sober fellow.\n\n\"So please tell me Count, how did your family come to inherit this castle?\" Mirela asked conversationally.\n\n\"An excellent question, my dear,\" said Turenau as he leaned back in his chair. \"Let me tell you the history of this place. The bones of this castle belong to a Roman fortress the empire constructed when they occupied this land over a millennium ago. A Hungarian prince who ruled this voivodeship razed the fortress after the Romans were forced out and built this castle upon its ruins nearly eight hundred years ago. His name was Alexander Sidexes of course.\"\n\nWhile Turenau gave his history lesson, Loredana grew bored. By some great turn of fortune, Lord \u015earpe had been seated directly across from her. Loredana worked one of her slippers off her foot and extended her leg until her toes brushed against \u015earpe's ankle. The table was so wide that Loredana had to stretch her leg until it was nearly horizontal, which likely would have looked ridiculous if anyone happened to be looking underneath the table. Surprise showed on \u015earpe's face for a half-second as he felt Loredana's toe brush against his foot but then he looked over at Loredana and grinned from ear to ear. Loredana gave the Viscount her most winning smile and winked at him.\n\n\"The Hungarians were driven out of these mountain holds a few hundred years later of course and the castle sat unoccupied until it was garrisoned during the invasion by those filthy Tatars,\" continued Turenau. \"The Turenaus were a group of brothers who were knights sworn to Pope Clement and the Catholic Church. The brothers and a group of soldiers loyal to them were enlisted to help push back the heathen Mongol hordes who had invaded Christendom. The brothers chose Sidexes as the most likely position where they could repel a sneak attack through the mountain entrance, and their inclination proved correct. The Turenaus fought in many a great battle less than a mile from where we sit, and three of the six brothers were slain.\" \n\nA heaviness came over Turenau and his eyes took on a far away look, like he was reliving all of these events himself.\n\n\"Though they had repelled the Mongols' first three attacks, the Turenaus knew they were fighting a futile war against an innumerable enemy that they were destined to lose. It was only a matter of time before their army was destroyed and then the Mongol horde would pour into Transylvania. Legends tell that in order to defeat a seemingly insurmountable foe, the oldest brother (who was considered the strongest and bravest of the siblings) discovered an enchantment that granted him great power. With the aid of this enchantment, the Turenaus made their stand here on these castle grounds at the mountain path and threw back the invasion. The Mongols were routed so thoroughly that they never attempted to invade the province again. As a reward for his service, the oldest brother was granted stewardship of the castle and was made the first Count Turenau.\" The Count sank into his chair and sighed. \"And we've been here ever since. We've withstood further invasions by Eastern barbarians, local lords trying to expand their territory at their own peril and the slowly encroaching empire of the Turks. This castle has withstood everything... except time.\"\n\nAs Turenau continued with his story, Loredana's foot slowly moved up \u015earpe's leg until it rested between the thighs he had spread apart once Loredana's intentions became obvious. Loredana pointed her toes straight out and rubbed them against \u015earpe's crotch where she could feel the slight bulge of his prick. The two smiled at each other clandestinely and gulped down their wine while Loredana's foot played with \u015earpe's groin. After masturbating his crotch for a moment, the softness between \u015earpe's legs morphed into a satisfying firmness that Loredana massaged with her toes. Loredana tried filling the space between her toes with \u015earpe's prick but to her delight she found his girth too great for him to fit. Loredana's face became flushed and she felt excitement rising in her chest as her heart beat faster. Wetness seeping out of Loredana's cunny stained her underwear and the seat cushion beneath her. This leaking afflicted Loredana constantly, it seemed something she just couldn't turn off and the slightest provocation made her body react with excitement.\n\nThe Countess glanced over at \u015earpe and the redhead girl shifting in their seats and smirked as she realized what they were doing. Vivianna looked over at her husband and said, \"I think you are boring our guests, darling.\"\n\nThe count chuckled and said, \"I suppose once I get started talking I have difficulty ceasing conversation.\"\n\n\"Actually, I find this quite interesting,\" Mirela remarked. \"Where exactly does our family fit into this tale? You said we had a distant relation.\"\n\nTurenau sighed and a sadness came over his face as he looked directly at Mirela. His story continued, \"There was a Turenau sister. A beautiful, lovely sister. She did not approve of her brothers or the... methods they used to win at war. She fled from Transylvania and then of course wedded Viscount Pierocent, a French noble living in Bulgaria. I suppose this must have been nearly four hundred years ago. That family lived in the Bulgarian region up until the time your great-great-grandfather returned to this land to reclaim your ancestral heritage. I believe that is about the time your manor was built on land that the Turenaus had once claimed.\"",
        "\"Fascinating,\" Mirela remarked honestly as her finger swirled around the rim of the wine glass she wouldn't be drinking from. \"So there was no contact between the branches of the family once my ancestors departed this land? I never heard any mention of the Turenaus from my father or grandfather.\"\n\n\"No,\" Turenau answered slowly. \"We are isolated from the rest of the realm here and hesitant to leave the home we fought and died for. The price the Turenaus paid for victory was a great one. It was only when your family recently suffered your troubles that we even learned you had returned to Transylvania. That is why we wanted to help, to repay an old family debt.\"\n\n\"I want you to know that we are so very grateful for your kindness, Count Turenau,\" said Mirela. \"You don't know how much this means to us.\"\n\nTurenau inclined his head toward his distant relation. \"It was nothing,\" he said. \"I was sickened to learn that none of the other lords were willing to help one of their own. Not so very noble of them for all their power and pretty titles. I have purchased the debt on your manor so I suppose I am the true owner of the property now. But I will gift your home back to you debt free.\"\n\nMirela looked over at her sisters with wide eyes. Free from debt! They could keep their home! Even Bianca couldn't help smiling at the prospect, though oddly Loredana's mind seemed to be fixated elsewhere because she made no reaction to the news. Their troubled times were over and soon they could all be on with their lives.\n\nBianca broke the silence she had maintained throughout most of the dinner when she asked asked, \"What exactly are you expecting in return for these great services you've rendered unto us, my lord?\"\n\nFor the first time tonight, Mirela saw Turenau's face break into a wide grin. \"The pleasure of your company is all I desire,\" he said. \"Let me get to know my nieces... or perhaps cousins would be more accurate. Stay on for a while and enjoy the hospitality of Sidexes for a few more days and then we will send you on your way back home.\"\n\n\"That's not much of a price,\" Bianca remarked.\n\n\"Isn't it, though?\" Turenau asked ominously.\n\nBianca pushed her chair out, stood up, and said, \"Well, I think that's plenty of sustenance for us. Need to watch our delicate figures and all. Would you kindly show us to our guest rooms?\"\n\n\"Bianca...\" sighed Mirela.\n\n\"Of course,\" said Turenau. \"You must be very tired from your travels and it is getting late. Your rooms are easy to locate. Go up the staircase you passed before entering this hall and take the first right down the hallway. Your four rooms are right next to each other.\"\n\n\"Do we have to go already?\" Loredana whined. \"I'm actually enjoying myself.\"\n\nLoredana took another drink of wine and spilled a trickle down her lips to her chin on purpose. She licked her tongue around her mouth deliberately slowly for \u015earpe's benefit as she retrieved the spilled wine. Loredana collected the dribble flowing down her chin with her finger and stuck that digit inside her mouth to suck the wine off her finger. \u015earpe had become fully erect from Loredana masturbating him with her toes and she could tell he possessed a large, thick cock. He performed admirably at masking his reactions to what Loredana was doing to him with her foot though he couldn't help grunting quietly a few times. She couldn't wait to see and touch \u015earpe's prick and maybe put it in her mouth too.\n\n\"Loredana can stay and visit with us for a while longer if you three would like to go up and slumber,\" \u015earpe suggested. Loredana seemed very agreeable to this idea as her chin nodded up and down vigorously.\n\n\"No!\" Mirela cried with more insistence than she had intended. She looked at the rest of the table apologetically. \"Forgive me. I'd just rather us stay together. For tonight, at least.\"\n\n\"Of course,\" \u015earpe said as he scooted his chair out from the table and stood up. He had willed his cock into deflating so no one would notice the bulge of the erection that had been showing through his pants less than a minute ago. Loredana wore a pouty look on her face. She did feel reassured knowing they would be here for several days longer though. Plenty of time to make the Viscount hers. Loredana vowed that before the week was out she would feel the tremble of \u015earpe's body and listen to the quickening of his breath as he moved inside her.\n\nThe sisters stood up and bowed to the Count and Countess. Turenau said, \"I hope you enjoy the rest of your evening, my ladies. I find the nighttime to be when Sidexes is at its most beautiful.\"\n\n\"Thank you, Count,\" replied Mirela. \"We shall visit again in the morning I am sure.\"\n\nBianca tugged on Bela's arm to compel her to stand and the youngest sister trailed behind her siblings like a sheep as they exited from the hall. Loredana turned back before she left and gazed longingly at the beautiful face of Viscount \u015earpe. She blew him a kiss and sighed with resignation before following behind her sisters.\n\nThe Pierocents approached the staircase leading upward to the guest rooms and stopped. \"Here we are, sisters,\" said Mirela. \"Follow me.\"\n\nBianca wasn't listening and instead of stopping she continued walking down to the other end of the hallway. \"Bianca, what are you doing?\" Mirela called.\n\n\"I want to see what is down this way that these Turenaus are so intent on hiding,\" Bianca explained. \"You all can run along now, you don't have to follow me.\"\n\n\"We need to stay together!\" Mirela said insistently. \"Plus we shouldn't just be wandering around in someone else's home, poking our heads in places where we may not be wanted.\n\n\"Mirela is right,\" Loredana agreed. \"If they don't want us down there I'm sure there is a good reason for it.\"\n\n\"If you lambs want to go upstairs and get tucked in to bed like good little children, be my guest,\" Bianca said patronizingly. \"I'm going to explore.\" Bianca turned away and continued walking down the corridor.\n\nMirela stood in place seething with anger before throwing her hands up in the air. \"Damn you!\" she cried.\n\nLoredana gasped. She could never remember Mirela cursing or losing her composure this much. Mirela took Bela by the hand and more forcefully than she intended Mirela pulled Bela along as she rushed to catch up with Bianca.\n\n\"Come along, Loredana,\" sighed Mirela. \"We will indulge Bianca for a moment and then I'm finding the key to open that crypt and locking her down there for the rest of the night.\"\n\nMirela, Loredana, and Bela quickly caught up with Bianca. Mirela glared at Bianca but Bianca merely smiled back at her sweetly. Bianca had to admit she did feel better with her sisters accompanying her. This castle was too creepy to be walking around alone in. They reached the end of the hallway that opened into a small chapel lit by candlelight from two stands on either side of the altar. There were thirteen rows of pews before a set of steps leading up to a stone altar. Several narrow stained glass windows stretched high to the ceiling similar to the rest of the windows in this castle. The strange thing about this chapel was there was no Christian symbology to be found anywhere. Nothing displayed on the stained glass, no crosses, no crucifixes, nothing.\n\n\"What is this place?\" Bianca wondered softly.\n\nThe sisters fanned out and inspected the chapel, with Mirela keeping a tight grasp on Bela's hand as she looked around. Mirela noticed that this room had been in use more recently than others in the castle. The layer of dust and cobwebs that seemed to permeate nearly everywhere in Sidexes were not present within this worship hall. Loredana seemed to only want to inspect the stained glass windows. The pictures were strange and nonsensical, showing beasts like snakes and wolves rather than the lambs and angels that were more typical of these types of chapels.\n\nBianca wandered to the front of the chapel and walked up the steps to the altar. Rather than the ornate altarpieces that were found in every church in Europe this was a simple stone slab that was about five feet long and a few feet deep. There were no symbols or writing upon it, and certainly no Christian imagery. Bianca did find some unexplainable dried black stains covering the altar as well as the floor surrounding it. Bianca's foot accidentally kicked up some dust or soot piled beneath the slab and uncovered something written on the floor near the altar. Bianca got down on her knees, uncaring that the dust would cover her dress below her shins. She cleared the majority of the soot away with her hand and gently blew the rest of the dust away. Written on the floor near the altar was the words of a strange language that Bianca didn't recognize and etchings of pentagrams and other unholy symbols.\n\n\"Pagans,\" hissed Bianca.\n\n\"What?\" Mirela asked.\n\n\"These people are heathens and heretics,\" Bianca said as she raised herself to her feet and pointed at the etchings.\n\n\"Bianca, this chapel is probably original to the castle,\" Mirela said skeptically. \"You heard Turenau when he told the history of Sidexes. The Turenaus didn't live here until over three hundred years after it was first built. Who knows what Prince Sidexes did or didn't believe.\" Mirela wouldn't admit it, but seeing these devilish symbols disturbed her greatly and made her begin to rethink the Turenaus' hospitality.\n\nBianca scoffed. \"I don't believe a single word the Count says.\"\n\n\"Why are you so intent on hating them?\" Loredana asked. \"Their ways may be strange, but they have shown us nothing but kindness since before we even arrived here.\"\n\n\"I don't hate them,\" Bianca explained. \"I just don't trust them. The only people left in this world that I trust are standing in this room with me.\"\n\nAs they spoke, a strange wind blasted through the hallway and into the chapel. The wind chilled their bones and snuffed out the two candles, plunging the room into darkness.\n\nBianca said, \"You know, sisters, I think it might be time to go to our rooms now.\"\n\n\"Finally we agree on something,\" replied Mirela.\n\nThe Pierocent siblings traversed back down the hallway and climbed the stairs to the upper floor. They followed Turenau's directions and soon found four guest bedrooms in a row with the doors hanging open. They peered inside and were relieved to find their luggage lying on the beds in each room and also to discover that the rooms had been cleaned recently. The furniture was thankfully dust and spiderweb free and the linens and bedsheets had recently been washed clean. Each room was lit by candles on the windowsills and the nightstand.\n\n\"Unpack your things and use the privy if you require it. Then meet me in my room before you prepare for bed,\" Mirela instructed her sisters. \"I have a few things I want to go over before we spend our first night here.\"\n\nA few minutes later, the sisters convened in Mirela's room where they ate some of the food they had packed for their travels to compensate for such a dissatisfying meal. Bianca fumed. \"They went through our luggage!\" she complained. \"I'm missing jewelry, a pocket mirror, and one of my knives!\"\n\nMirela sighed. \"Yes, I'm missing some jewelry as well,\" she said. \"The silver crucifix that Mama gave me for my eleventh birthday is absent.\"\n\n\"These servants must have very light fingers,\" Loredana said. \"They are living so remotely here, I doubt they can hire the best help and must make do with whatever servants they can find.\"\n\nMirela was beginning to become quite annoyed with the way Loredana explained away every fault they were finding in the Turenau's household. In truth, Loredana was very upset that her favorite silver necklace was among the stolen items but didn't want to be too quick to blame their hosts.\n\n\"There are no mirrors in any of these rooms,\" Bianca lamented. \"How are we to ready ourselves for bed and then again in the morning? Tell me what kind of good Christian household doesn't have a single cross adorned on any of the walls either, Mellie?\"\n\nBianca began pacing back and forth across the room while her sisters sat on the bed silently watching her. \"I'm sorry Mellie, I know you were trying to do the right thing but we should never have come here,\" Bianca stated. \"That carriage won't be back for over a week and there is no way we can stay here that long. We should raid the larder tomorrow and collect as much food and supplies as we can find so we can start making our way down the mountain path while it is yet morning.\"\n\n\"Mirela,\" pleaded Loredana. \"Talk some sense into her. If we try to make the path on foot we'll die from either starvation or exposure or else be torn apart by wild animals. We have nothing to fear if we stay at Sidexes.\"\n\n\"I...I...\" Mirela hesitated before answering. \"I agree with Bianca.\"\n\n\"What?\" Loredana and Bianca asked in incredulous unison.\n\n\"I don't for one second believe Count Turenau's generosity is purehearted,\" Mirela admitted. \"They want to use us for something, but I just haven't figured out for what yet. Turenau isn't telling us everything.\"\n\n\"Thank you!\" Bianca cried as she gestured with her arms outstretched. \"Finally there's someone else who sees it.\"\n\n\"This is madness,\" Loredana groaned as she placed her head in her hands.\n\n\"Tomorrow I wish to speak with some of the servants and try to learn more about our benefactors,\" Mirela explained. \"They may know more than the Count is telling us. Then maybe we can find some way out of this place and so we can make our way back home. I hope you all realized the implications of Turenau owning our manor. We can't go back there now. We will have to make our own way now. Just like we have been doing these last months, only without a home.\"\n\nLoredana began to sob. Bianca wasn't made of stone. She sat down next to her sister and held her close. Bianca stroked Loredana's long, pretty red hair while she wept against Bianca's shoulder. \"There there, dear one,\" Bianca whispered. \"We'll be okay. Everything will be fine. You don't have to be afraid, I'll protect you.\"\n\n\"Until we know the lay of the land I don't want any of us going off by ourselves,\" Mirela commanded. \"Always keep a sister close by. Always. That includes even when you are sleeping or making your toilet. I suppose we will have to share one room for at least this night.\"\n\nBianca looked down at the bed she sat upon. \"We aren't going to be able to fit four to a bed,\" she observed.\n\n\"Hmm, even just three would be awfully uncomfortable,\" Mirela admitted. \"Fine, one of you can sleep with me in my bed tonight. The other two will move their things to the room adjoining mine and sleep there so we can all be close by.\"\n\n\"Good plan,\" Bianca replied.\n\nMirela said Loredana's name to get her attention. Loredana looked up from the shoulder of Bianca's dress that she had soaked with her tears. Even with red-rimmed eyes and tears staining her cheeks she looked gorgeous. Loredana wiped the teardrops away using the sleeve of her shirt and replied, \"Yes?\"\n\n\"I want you stay away from \u015earpe,\" ordered Mirela. \"I mean it. He clearly has intentions toward you and I don't like it. Keep him at arm's length. Be polite as you would be to any lord but don't allow him to take advantage of you.\" \n\n\"O-\" Loredana breathed deeply and sniffled before continuing. \"O-o-okay.\"\n\n\"Who is going to room with Bela tonight?\" Bianca asked as she indicated the youngest sister. Bela sat upon the bed with her hands folded in her lap as she stared at the wall completely oblivious. \"Somebody needs to take care of her.\"\n\n\"I'll do it,\" Loredana said quickly as she raised her hand.\n\n\"Thank you,\" said Mirela. \"I appreciate you volunteering. Please keep her safe and remember to lock your door.\" \n\nThe arrangements with luggage were all made with Mirela and Bianca helping to move Loredana and Bela's things to the bedroom adjacent to Mirela's that was originally intended to be Bianca's room. After moving Bianca's belongings to Mirela's room, Mirela and Bianca gave their younger sisters hugs and kisses on the lips good night before retreating to their room. Once Mirela closed the door and locked it, Bianca pushed one of the armoires across the floor until it blocked the door from opening. Mirela raised an eyebrow at her sister.\n\n\"What?\" Bianca said with a shrug. \"You can never be too safe.\"\n\nThe sisters stripped down to their shifts and readied themselves to slumber. Mirela let her hair down and Bianca couldn't help staring at it. She didn't understand why Mirela always wore her hair up in a bun when it looked so pretty long. In the absence of a mirror, Mirela and Bianca took turns stroking each other's hair with a brush until their tresses were tangle free. They giggled throughout their brushing as they recalled they hadn't done this for each other since they were little girls. Servants had left pitchers filled with water and more of that horrific wine on the nightstand before they arrived. Mirela and Bianca used the water from the pitcher and mixed it with soda powder they had packed to wash out their mouths and they decided to just spit the mixture into the wine pitcher. They both laughed uproariously as they did so, with Bianca making the most exaggerated facial expressions as she spat to try and make Mirela laugh even harder. Mirela was glad that despite all the darkness that had infiltrated their lives they could still find joy in small things.\n\nAs Bianca unpacked the rest of her clothes and folded them into the dresser, Mirela kneeled beside the bed and clasped the palms of her hands together with her elbows resting on the mattress. Mirela murmured imperceptibly softly to herself as she rocked back and forth.\n\n\"What do you think you're doing?\" Bianca asked.\n\nMirela shushed his sister and replied, \"What does it look like?\" before returning to her prayer. When she was finished Mirela nodded to herself and stood back up.\n\n\"Do you actually think that works?\" Bianca wondered. \"If our prayers were ever answered we never would have been in this predicament.\"\n\n\"Of course it works,\" Mirela answered fervently. \"God is just testing our faithfulness. We will be rewarded as long as we continue to follow His way.\"\n\n\"What do you pray for?\" Bianca asked seriously.\n\nMirela regarded her favorite sister and said, \"I pray for Mama and Papa of course, that their souls will find peace. I pray that Bela will someday recover and become the sweet, gentle girl she once was again. I pray that Loredana might find satisfaction of the spirit rather than of the flesh. And I pray that you will find love again.\"\n\nBianca looked away from Mirela's eyes and down to the floor as her sister spoke of love. The thoughts brought up too many uncomfortable feelings and memories. Without looking up, Bianca asked, \"What do you pray for yourself?\"\n\nMirela was silent for a moment before replying, \"I pray that I might find clarity and guidance to help my family. I pray that my piety will be rewarded.\"\n\nBianca knew her sister too well and knew that couldn't be the only thing troubling Mirela enough for her to pray for. Her sister must feel so lonely all the time and Bianca's heart went out to her. Bianca made her own little prayer that Mirela might someday find a man not intimidated by her strength and intelligence who actually deserved her. Bianca knew of one who would love and appreciate Mirela the way she deserved, but she wouldn't, couldn't speak of it.\n\n\"It's been a long day,\" Mirela said with a yawn. \"I'm going to bed.\"\n\nMirela put out all of the candles except for the one next to the nightstand. She pulled the bedsheet away from the mattress and plumped the goosefeather pillow before snuggling beneath the covers. Mirela laid there for a minute with her eyes closed before realizing that Bianca hadn't joined her. She looked over and saw Bianca sitting in an armchair with a blanket draped over her legs. Bianca sat watching the door with a long dagger clasped between her hands.",
        "\"What are you doing?\" Mirela asked. \"And where in God's name did you get that knife?\"\n\nThe dress Bianca wore had been cunningly designed by the same dressmaker that had designed her nightgowns. It had several hidden pockets stitched within it that Bianca used to store items of discrete importance. The dagger itself had been one of her late husband's favorite hunting knives.\n\n\"Someone should keep watch, just to be safe,\" explained Bianca. \"I'll watch the door for the next few hours and then wake you when it's your turn.\"\n\n\"Don't be silly,\" Mirela said. \"The door is locked shut and furniture is blocking it from opening. If anyone attempts to get in we will be well aware of the fact. Come to bed. If you're half as tired as I feel you'll need the rest sorely.\"\n\nBianca bit her lip and looked worried. She said, \"I just want you to feel safe, Mellie.\"\n\n\"I...I'll feel much safer with you in bed close to me,\" said Mirela. She pulled the bedsheet covering the other side of the bed away and patted the mattress with her hand. \"Come on.\"\n\n\"Fine,\" Bianca relented. She left the dagger sitting nearby on the nightstand and used her fingertips to snuff out the only candle left burning. The room plunged into a darkness so deep that Bianca shivered. Night seemed to go too well with this accursed place. Bianca dove beneath the blankets and scooted over to snuggle up close to her sister.\n\nBianca curled up with the blankets around herself and laid on her side facing her sister. Mirela stroked the blonde curls of her younger sister's hair and listened to her shallow breathing. She had always been jealous of the pale golden locks of Bianca's hair that when compared to Mirela's own tresses made them look rather plain. She had no inkling that Bianca thought Mirela possessed the most beautiful hair she had ever seen.\n\n\"I really am sorry about those things I said earlier today,\" Bianca apologized quietly. \"I didn't mean any of it. Please say you forgive me.\"\n\n\"I know you meant no harm,\" Mirela said. \"I forgive you and I love you.\" Mirela leaned over and kissed her sister upon the brow. \"You're right though, I am not perfect.\"\n\n\"I think you are,\" Bianca whispered. She seemed about to say more but hesitated. She swallowed loudly and then started to speak again, \"Mellie, do you remember when we were younger and I used to come to your bed whenever there was a bad storm?\"\n\n\"Of course,\" Mirela said with a smile of remembrance. \"I could never understand why the storms made you so scared. You're not afraid of anything.\"\n\n\"I don't know what it is,\" Bianca said. \"The thunder frightens me so. One of the only things I'm afraid of.\" The only other thing she feared was that she might fail her older sister in some way. Bianca reached out and caressed Mirela's cheek.\n\n\"Why did you always come to me rather than find Mama?\" Mirela asked.\n\n\"I don't know,\" Bianca said with a sigh. \"I guess you always just made me feel like I was protected whenever I was close to you. You all think of me as the brave one, but I've always thought you were the most proud and courageous of us.\"\n\n\"You're sweet, Bianca,\" said Mirela with a satisfied smile at Bianca's compliment. \"I've always admired you for your passion and how you speak your mind freely. I've never been that way but often wish I could be.\"\n\nBianca traced the back of her fingers down Mirela's cheek until her hand rested upon Mirela's bare shoulder. Bianca caressed her thumb up and down Mirela's shoulderblade and let her thumb linger where Mirela's breast started to form. \"Do you still remember the night of that terrible storm?\" Bianca whispered haltingly.\n\nMirela ceased caressing Bianca's hair and removed Bianca's hand from her shoulder, leaving it resting on the mattress in between them. \"I've tried to forget that night,\" Mirela said.\n\n\"I've never forgotten it,\" Bianca whispered. \"Nothing we did was wrong.\"\n\n\"What we did was very wrong,\" Mirela countered. \"Women are not supposed to do that sort of thing with each other. Especially not when they are sisters.\n\n\"We were just in the midst of developing from girls into women,\" Bianca explained. \"We were simply curious about our own bodies and how they felt.\"\n\nIt had all started innocently enough. Though Mirela was three years older than Bianca they were best friends as girls and always played together. From the time she could walk, Bianca was climbing into Mirela's bed at night whenever there was just a hint of thunder and under Mirela's blankets they whispered to each other and giggled in secret. When they grew older, their bedtime conversations changed to topics like the boys they wanted to kiss. The sisters lamented that all the boys they liked were unavailable either due to the girls being too young still or too high in the social order for the peasant lads of the nearest village. When Bianca turned eighteen, her and Mirela began playing kissing games in the dark with each other, just for practice and preparation for someday kissing boys of course. It started as a dare but then turned into something more regular. They even practiced using their tongues like French lovers were said to do, licking each other's lips and tasting the inside of the other's mouth. \n\nMirela and Bianca both began looking forward to these encounters, with Bianca finding any excuse to hop into bed with Mirela so they might exchange kisses. Mirela was innocent and naive enough that she didn't realize what they were doing was wrong though she sometimes felt bothered by how much she enjoyed it. The truth was she loved feeling Bianca's lips against hers and longed for the caress of Bianca's hand on her face, hair, and shoulder. Sometimes when Mirela felt Bianca's tongue moving within her mouth a tingling sensation prickled her between the legs. Mirela assumed this was a natural reaction to being kissed. It couldn't possibly be because she desired her sister sexually. But whenever Bianca entered her room at night, Mirela always felt so happy and received her sister with open arms.\n\nOne night about six years ago there was a fearsome storm with winds that battered the walls of the manor and struck lightning directly over the manor grounds. The fury of this powerful storm ignited Mirela and Bianca's passion as lightning crashed all around them. Normally when they were trading tongues between each other's mouths their hands remained planted on each other's cheeks or shoulders. But that night, their hands started roaming all over each other's bodies. Mirela and Bianca cupped and squeezed each other's breasts, ran their hands up the inside of each other's thighs, tickled and pinched each other's bottoms, and then moved their hands inevitably toward each other's burning loins. \n\nWhen they had kissed before it had been enjoyable simply to feel the lips of another but the experience had been primarily chaste. This time however, there was a fiery passion as the sisters stuck their tongues deep inside each other's mouths and alternated between biting and sucking on each other's necks. Bianca thought she might die from the pleasure when Mirela ripped the top of Bianca's dress down and suckled upon her nipples. They took turns placing their thigh between the other's legs and allowing that sister to grind her cunny against the other's thigh until arousal seeped from their openings and soaked through their underlings. \n\nMirela and Bianca tore each other's nightclothes off and moaned as their naked flesh joined together. Bianca rolled atop Mirela and started grinding her crotch against her sister as if Bianca were the husband and Mirela the wife. Mirela reached around and clutched Bianca's buttocks firmly to aid her thrusting. As they pleasured each other, Mirela looked up at Bianca and they stared deeply into each other's eyes. Mirela expected to see desire and lust in Bianca's gaze but instead what she found was pure love pouring out of her expression. Mirela leaned upward and kissed her sister as passionately and ferociously as she could muster. The sisters soon used their fingers to discover each other's womanhood. They stroked, fingered, and rubbed each other's sex until gushing wetness spurted out of their cunnys and covered their hands. They silenced theirs moans of ecstasy by clamping their mouths together and grunting like animals while they climaxed. \n\nOnce the ferocity of her passion had been sated, Mirela felt an intense sense of shame as the still warm seepage from her sister's cunny dripped down the palm of her hand. While Bianca was no stranger to the act of masturbation, Mirela had never touched herself despite the desperate yearnings she often felt. The pleasure Bianca gave her was almost too powerful and overwhelming, it couldn't possibly be a good thing but more likely was a terrible sin. Mirela felt like she had taken advantage of her younger sister and knew with certainty that what they had done this time was wrong.\n\nMirela tried to ignore how good the kisses Bianca was leaving on her breasts felt and tuned out the reckless declarations of undying affection her sister made to her after their lovemaking. Mirela pushed Bianca away from her bosom and rolled over and pretended to sleep. Bianca was left wondering what she had done wrong. Thereafter, Mirela still allowed Bianca to come into her room and sleep next to her at nights but Mirela refused to touch her and shied away from Bianca's advances. Bianca seemed hurt at first, and then eventually she became resigned once it was clear that Mirela was finished with this childhood game they had been playing. Bianca stopped coming into Mirela's bed at all and soon after was married off while Mirela became even more devoted to her religion. They had never again spoken of these illicit encounters until now.\n\n\"I don't feel like discussing this right now,\" Mirela said in a monotone voice. \"Why did you even bring it up?\"\n\nBianca sighed and rolled over onto her back. \"No reason,\" she said.\n\nIt had been almost two years since Bianca's husband had been murdered and she returned home. Since her husband's death, Bianca had yet to feel the touch of another and was practically dying for sex by this point. But it had to be with someone right. She wasn't like Loredana, who would give herself to whoever was nearest once she felt that familiar tingling in her groin. Bianca had never forgotten how wonderful it felt to have Mirela in bed next to her. Bianca thought of her sister constantly, even when she had been married she couldn't get Mirela out of her mind. Though she knew it was indecent, Bianca was certain Mirela was the only person she could ever be happy with.\n\nWhen they were girls and young women Mirela and Bianca had been inseparable best friends but after the night of that storm their relationship was strained. Then Bianca was married and they didn't see each other for years. Bianca knew Mirela would never admit it, but she knew her sister had been jealous of Bianca for finding a husband so easily while Mirela seemed destined for spinsterdom. Bianca hoped inwardly that Mirela had been jealous of Bianca's husband as well. If only Mirela knew who Bianca had truly desired. When Bianca came back home after her husband's death she held some small hope that her relationship with Mirela might be rekindled but instead they were awkward and stilted around each other. They still loved each other, but it was a different love than they used to share.\n\nHow idiotic to think Mirela desired pleasure (especially with me) after all we have been through, thought Bianca. Mirela was practically an angel, she would never indulge in such sinful ways again. What Bianca truly needed was someone who could make her come, hold her close, stroke her hair and whisper to her that everything would be alright. Was that too much to ask? But Bianca knew that Mirela was the only one she could ever be that vulnerable with.\n\n\"Good night, Mellie,\" said Bianca. She had been calling Mirela by that name since Bianca was a toddler. \"I love you.\"\n\nMirela murmured something unintelligible and purred as she pulled the pillow and blankets tighter around herself. She was already asleep, but Bianca was wide awake. She reached over and plucked the dagger sitting on the nightstand. Bianca held it tightly in her fingers and stared up at the ceiling. She wouldn't let anything happen to Mirela or her other sisters on her watch.\n\nBianca laid there. Watching. Listening. Waiting. \n\n+++++ Chapter III: The New Family +++++\n\nOnce Loredana and Bela left Mirela's room they took to the chambers they were sharing for the evening and Loredana changed both of them into their nightclothes. Bela wore a drab grey nightshirt that went all the way down to her knees for her pajamas. In contrast, Loredana wore a luxurious light blue nightgown with a low cut that emphasized her cleavage and a skirt that terminated scandalously high to reveal most of her thighs. Not wanting to have to deal with a potential mess when they woke up in the morning, Loredana led Bela to the privy. Though the toilet was near their chamber at the end of the hallway, it still felt creepy walking down the dark, eerie hallway with but a single candle on the wall for illumination. Loredana lifted Bela's dress up as she assisted Bela in sitting on the toilet, which was really just a hole cut into a stone shelf. The castle had very basic plumbing that allowed any deposited waste to sluice down the side of the castle facing the cliffside.\n\nLoredana tapped her foot impatiently as she waited for Bela to commence with her dirty business. Finally after about ten minutes Loredana heard a trickling noise echoing through the hole Bela sat upon. Loredana crinkled her nose as she heard and scented actions she would have rather not dealt with or even considered this evening. There seemed nothing more demeaning than having to wipe clean her invalid sister's bottom.\n\n\"Damn you, Bela!\" screamed Loredana spitefully. \"Why can't you just be normal so I don't have to do this nasty work for you all the time!\"\n\nA sudden rage filled Loredana and she slapped Bela across the face. The side of Bela's cheek turned red but she sat still and made no reaction which only angered Loredana even more. The only response Bela gave to her sister's abuse was to generate more noises from her evacuating bowels, creating an even worse mess for Loredana to clean. Loredana squealed angrily and raised her hand to strike Bela once again but when she saw her sister staring up at her blankly Loredana felt regret and shame filling her being. It wasn't Bela's fault that she was this way; she couldn't help it. Loredana stroked Bela's hair and kissed her on the cheek right where she had been struck before taking Bela by the hands and apologizing to her profusely. Loredana hoped that somewhere in her mind Bela realized how sorry she felt and forgave Loredana her transgression.\n\nOnce Loredana was sure Bela had finished she used a cloth to wipe Bela's cunny and bottom and disposed of the dirty towel in the toilet. She wasn't sure she could trust the servants at this castle to do any of the laundry for them properly and would rather not concern herself too much with washing her sister's excrement out of cloth. When they arrived back in their room Loredana realized Bela had not eaten a single thing so far that day. She found the last of the bread and cheese they had packed for the journey up the mountain and shoved it into Bela's hand.\n\n\"Eat,\" Loredana ordered.\n\nLoredana repeated herself a few more times but Bela simply looked down at the food in her hand and played with it, crumbling it between her fingers. Loredana growled in frustration and began forcing the food into Bela's mouth. She made Bela swallow large gulps of water and wine to wash the solids all down her throat. Bela ate without pleasure or savor. When Loredana was satisfied that Bela had consumed enough food to at least keep from starving, she let Bela's hair down from the bun she had tied earlier this morning and gave her brunette tresses a hundred strokes with her brush. Once she was finished Loredana applied the same number of strokes to her own hair.\n\nLoredana locked the door but left the candles burning. She wasn't sure she wanted to sleep in the dark tonight at this strange, ancient castle. Loredana helped Bela into bed and pulled the blankets over her torso before climbing into bed next to her. Loredana tried to sleep but couldn't stop thinking of \u015earpe. Images of his beautiful face, his overconfident smile, his muscled calves and thighs, and his large prick played themselves over and over in Loredana's memories and fantasies. Loredana forced her eyes open and glanced over at Bela. Her sister's hands were placed one over the other on top of her stomach as she stared unblinking at the ceiling.\n\nLoredana slowly sneaked her hand down past her belly and stroked her already moist cunny. She tried to be as silent as possible as her fingers danced over her clitoris and massaged the folds of her labia. Loredana traced a finger up and down her slit to spread her wetness around her vulva. Loredana closed her eyes and bit her lip as she fantasized about \u015earpe taking her in his strong arms. In her vision, Loredana clutched \u015earpe's head to her bosom and stroked his wavy brown hair as he pulled down the top of her gown and wetted her breasts with his kisses. Loredana moaned softly as she pushed two fingers inside her opening and imagined it was \u015earpe shoving his fingers inside her sex. Loredana put her knees up and spread her legs apart as she imagined opening her thighs for him and begging him to take her. She would give all of herself to him, kissing and licking him wherever he wanted and allowing him to stick his rod anywhere inside her that he desired. Loredana started to feel constricted and weighed down by the heavy blankets covering her. She glanced over at Bela and saw she was still staring silently up at the ceiling. It's not like she's actually going to say anything or take offense, Loredana rationalized to herself.\n\nLoredana threw the covers off her body and pulled her gown up to her waist, exposing her dripping wet cunny that was surrounded by an oval of golden-red fur. Loredana reached down to her loins and masturbated herself in open view of her sister while allowing herself to moan louder, though not so loudly that her neighbors might hear. Loredana whispered Eduard \u015earpe's name over and over with plaintive sighs as she used the fingertips of one hand to rub her clitoris fervently while the fingers of her other hand penetrated deep inside her cunny. She felt the mattress beneath her becoming soaked with her cunny juice as she loved herself.\n\nLoredana looked over at her sister. Bela remained motionless and inattentive to anything around her. How can she just lay there while I do such naughty things right next to her, Loredana wondered. Did all sense of shame or embarrassment leave her along with the rest of her senses? Loredana took a hand from her cunny and reached over to place it atop Bela's right breast. The accumulated fluid from her arousal dampened Bela's nightshirt where Loredana's hand laid, leaving dark stains on the gray fabric. Loredana squeezed Bela's chest through her shirt as she rubbed herself with her other hand. Enjoying the way Bela's breast felt in her hand and becoming more aroused by the indecency of such an action, Loredana rolled over onto her side next to Bela. She stroked Bela's cheek with her dirty fingers, smearing her seepage all over the side of Bela's face. Loredana leaned over and ran her tongue up and down Bela's cheek, tasting her own leavings and cleaning them from Bela's face. Bela still made no reaction; Loredana might as well not exist to her.\n\nLoredana pulled the strap of Bela's nightshirt down off her shoulder until Bela's milky-white breast was exposed. Unlike the well-shaped globes of Loredana's bosom, Bela's breasts were more like bags of fat attached to her chest. Loredana ran her hand over the warm, squishy flesh of Bela's teat, rubbing Bela's nipple between her finger and thumb for good measure. Loredana moved her head down to Bela's bosom and laid wet, sucking kisses all over the skin of her breast before suckling upon Bela's nipple. Loredana reached over and grabbed Bela's other breast, squeezing it roughly as she licked and sucked upon Bela's pointy brown bud. When Bela gave no sign of reception to this stimulation, Loredana bit Bela's nipple and worked it back and forth between her teeth. When she clamped down hard enough on Bela's nip that Loredana's upper and lower teeth nearly met, Bela made a clucking noise in her throat. Loredana released the nipple from her mouth after giving it a final lick and Bela made a sighing noise as the torment ceased. A purple bruise in the form of tooth marks had already formed on Bela's breast."
    ],
    "authorname": "GayTripper",
    "tags": [
        "vampires",
        "sisters",
        "gothic",
        "incest",
        "lesbian",
        "virgin",
        "corruption",
        "demons",
        "anal"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/sisters-of-the-fallen"
}