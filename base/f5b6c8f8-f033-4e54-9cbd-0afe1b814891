{
    "title": "14 Hours Pt. 14",
    "pages": [
        "-Will-\n\nI can hear the sound of everyone down stairs except for Chloe and I. Whenever Lili is over, she's insistent that she make everyone breakfast. No one has the heart to tell her besides pancakes, she's not very good at cooking. The eggs are never as ordered, the bacon is undercooked. Not raw, but it is rubbery. \n\nChloe groans as I get up and put on a pair of exercise shorts and a tank top. I kiss her head before I go what used to be our sitting room, but I set this room up as my gym. I laid down the rubber tiles and built most of the equipment myself, aside from the weights for the racks and the barbells. \n\nI get in a few sets of bench, military press, standing curls, hammer curls, and end with pull ups. As I drop from the bar I turn to see Lili sipping coffee while leaning her shoulder against the frame. She has a grin on her face, and takes another drink, her eyes not leaving me. \n\n\"Don't stop because of me,\" Lili says as I grab my towel and stretch my arm across my chest. When I try to leave she doesn't move.\n\n\"I need to shower before work.\"\n\n\"Let me admire for a minute,\" Lili says, staring at my chest. \"Go ahead.\"\n\nI step passed her and go straight to the master bathroom attached to my bedroom. The water is hot before I step in, and I hear the curtain slide again. Chloe steps, letting the water run through her hair before I start rubbing her back with her body wash. \n\n\"I can smell the undercooked bacon from here,\" Chloe says, both of us laughing. \n\nRubbing her back becomes caress her breasts. That turns into her stroking my dick. From there I finger her, but that is interrupted by her sucking my cock as the water runs down our bodies. Do I escalate this to bending her against the wall or picking her up and lifting and dropping her on my dick? Or do I just enjoy it?\n\nWe are still trying to baby three, so I stop a few minutes in to pick her up. Chloe is one hundred and twenty points soaking wet, literally, so I can do this all day. The back of her knees are on the crease of my elbow, and her arms are draped over my neck. My hands are gripping her ass to hold her up. \n\nThe water is running lukewarm before I finally fill her up and we finish our shower. \n\nLike any other day I arrive at work and pull the first order from the rotation list. Local install jobs jump to the top of the list. Kitchen cabinets by the looks of it. African Black wood, for a cabinet? Sounds like a douchebag. Let me explain.\n\nAfrican Black wood is expensive and isn't commonly used for kitchen cabinets. It's used more in decorative projects. Smaller designer cabinets for liquor for instance. Canes, walking sticks, pool cues, and other small products. \n\nThis guy saw it was expensive, and wanted a fancy looking expensive cabinet without knowing anything about furniture or carpentry. Douchebag. \n\n\"Hey going custom install, doing measurements today,\" I say to Samantha, poking my head into her office after grabbing the order. Day one is measurements and construction, day two is install. \n\n\"Alright,\" Samantha says, not looking away from her computer. Hard to imagine that at one point by this time of the day would have already came in her mouth. \n\nI take the company truck to the site, a new house in a up and coming neighborhood that's been under construction for a year now. We build the frames for three of them. I knock on the door, a man greeting me in a jeans and a hoodie. Douchebag indeed.\n\n\"Mr. Leighton?\" I ask.\n\n\"Paul, you here for the install?\" He asks.\n\n\"Measurements today, I cut it back at the shop, install tomorrow,\" I confirm.\n\n\"Is that why it asks if I'll be home for today and tomorrow?\" Paul asks.\n\n\"Yes sir it is,\" I say and he leads me into the house. The house is basically a shell, and at first look, appears they'd need to sink another forty to fifty thousand to finish. Maybe I can get a few more projects out of this guy. He shows me the kitchen, and we make small talk as I start making the measurements. \n\n\"Will?\" I hear, me turning back to see Kori.\n\n\"You know each other?\" Paul asks, and I don't even stop working.\n\n\"You gonna tell him or should I?\" I ask, marking the measurement on the wall with a pencil. I can tell it annoys Kori a little I don't even stop to focus on the conversation.\n\n\"We dated in high school,\" Kori summarizes.\n\nI look over at Paul, and he looks a little pompous and smug. His face almost saying, 'you're with so much better than this tradesman!'. \n\n\"We just got here, and we don't know anyone besides you guys. Want to double date, maybe get some dinner?\" Kori asks, and Paul agrees that would be fun. He wants to show how much better he is. Samantha said he was a doctor as well. So much better than the man building his cabinet. He clearly doesn't know I own the company. \n\n\"I'll ask Chloe, see if she's cool with it. Our treat,\" I say, Paul insisting he pay. He wants to play my wallets bigger, that's cute. I'm not bragging, but the only thing bigger than my dick is my wallet.\n\n\"I insist, we asked you guys, it's only fair,\" Paul says, and I relent. \n\nAfter measurements are complete, I leave in the company truck, and I can see him eying the truck against his car in the driveway. He has an older BMW, five years old by the look of it. \n\nChloe is okay with the date and my mom is able to watch the kids, so we drop them off on our way to the restaurant. Paul picks an Italian restaurant outside of town with a four-star rating. He's really trying to impress me or show Kori she ended up with so much better. \n\nWe arrive at the same time, Kori and Paul walking across the parking lot as we pull in and exit the vehicle. The SUV is Chloe's but the Porsche is mine, though Chloe loves to drive it every chance she gets. I can tell Paul was expecting the truck, or something that's not a Porsche.\n\n\"Lease?\" Paul asks.\n\n\"It's mine, fully paid,\" I say, locking the door with the fob and walking with them to the door. Paul looks back at the car one more time before we enter. He's going to find out in an hour he picked the wrong restaurant. At least he actually made a reservation. \n\nPaul is a cardiologist, and Kori is an oncologist, we learn this within minutes. He told us that so faster than someone tells you they're vegan. Our answers aren't as fancy. When the waiter asks for wines, Paul over pronounces the wines, wrong at that, and I don't even bother to correct him, the waiter smiling at me. He even makes up the vineyard he thinks it's from. \n\n\"I run the marketing and social media for the company, public relations basically. Will does everything under the rainbow with carpentry,\" Chloe says.\n\n\"That's awesome that you got to do what you actually wanted to do,\" Kori says, and she sincerely means that. Fianc\u00e9 is a douche, but she's still a sweetheart. \n\n\"How long have you worked there?\" Paul asks, Chloe looking at me, finally realizing I've been messing with him the entire time. \n\n\"Five years,\" I reply.\n\n\"Same job? Carpentry installs?\" Paul asks.\n\n\"Sometimes. The orders come in and all employees pick their project off the stack. It has to be completed within two days, sometimes more depending on the job. Local install jobs reach the top of the stack. I was on rotation, and was just next to grab the install job.\"\n\n\"Jack of all trades then.\"\n\n\"I'm also a licensed welder, so that's fair,\" I say, Kori looking over at me.\n\n\"Stop messing with him,\" Kori says, laughing a little and turning to Paul. \"He owns the company.\"\n\n\"Huh?\" Paul says, looking over at me. \n\n\"You don't get CEOs doing customs installs very often, do you?\" I ask, Paul shaking his head in shock. It's just as awkward for him as we eat, his tone shifting drastically. He asks our sales numbers last year, hoping we're relatively small. \n\n\"Eight million in sales last year. We were able to hire on three new guys and increase bonuses,\" I say, and he sinks into his chair. \n\nWhen the waiter comes back, in an attempt to salvage his pride, he asks, \"I'd like to meet the chef, this was excellent.\"\n\n\"The chef is in the middle of the dinner rush I'm afraid,\" the waiter says.\n\n\"Perhaps the manager or owner?\" \n\n\"He's one of the co-owners,\" the waiter says gesturing toward me with a smile, then walks away holding back a laugh.\n\n\"We've been diversifying our investments,\" I say, Paul excusing himself to use the restroom.\n\n\"You could have warned me,\" Kori said, Chloe laughing out loud. \n\n\"I didn't know we were coming here until an hour out,\" I say, also laughing.\n\n\"He's a good guy, a little...\"\n\n\"Smug?\" Chloe asks.\n\n\"No, he's just...\" Kori says, trying to think of a different word than smug. When it fits, it fits, and she's struggling, \"A little smug.\"\n\n\"I get it, Will's the ex boyfriend, he's playing territorial. It's adorable,\" Chloe says, touching my leg under the table.\n\n\"When did you two start going out?\" Kori asks, trying to make this conversation normal again.\n\n\"About a year after high school,\" Chloe answers, \"He was dating Sam a little before that, but I snatched him up at the first chance.\"\n\n\"Did the kid thing, bother you at all?\" Kori asked.\n\n\"That never really bothered me. I think watching him with Alice, was when I actually fell in love with him,\" Chloe says. Kori doesn't know what to make of that. \n\n\"I'm going to check the kitchen real quick, you guys keep talking,\" I say, kissing Chloe before I leave and walking to the kitchen. \n\n-\n\n-Chloe-\n\nI've see many a girl regret a breakup, but nothing like this. I saw it with Samantha. I saw it with Lili and they never really went out. It would be easy to assume she regrets it because of the money he has now, but that's not it. It's because he's happy, and it was possible without her. I'm sitting across from her, and I'm realizing how much of polar opposites we are. \n\nA girl with nothing but career in mind since the day she was sixteen, sitting across from a girl who stays home with two kids while the man works. Granted I work from home, but ninety percent of my day is Henry and Olivia. A family-oriented husband, across from a douche nozzle.\n\n\"Do you regret not working full time? Having a career?\" Kori asks.\n\n\"I work marketing for the company, but no, I don't regret anything, It's our company,\" I reply. \n\n\"Did you guys plan on kids so soon?\" Kori asks, desperate for a glimmer of regret with me. You're projecting sweetie, given the choice when you know the results, it's you who would go back and have his babies. \n\n\"I originally planned on kids a little later, but him having a daughter, gave me all I needed to know on how'd he'd be as a father. We're not done either, I want one or two more.\"\n\n\"Four kids?\" Kori asks, like that was weird. Fuck you. Just fuck you, you judgmental bitch. You're all for choice until I choose something you don't like. I don't think she's trying to be a bitch, but that touched me the wrong way. \n\n\"At a minimum,\" I say, just to shock her. Five kids? Fuck it, let's do it. \n\n\"Maybe after thirty for me,\" Kori says.\n\n\"Everyone has a different plan,\" I say politely. I don't feel like picking a fight here. \n\n\"Are you worried about him working with his ex girlfriend?\" Kori asks. Fair question. Samantha is harmless though, and Will knows better. Will is the one who has stopped that from still being a thing. \n\n\"Not at all, Samantha is aunt Sam to the kids. She's been involved but platonic,\" I say, which is accurate. She's not in love with Will anymore, I don't think. Lili still wants to fuck him though. \n\n\"Got any advice as a wife to a soon to be wife?\" Kori asks. \n\n\"Yeah, a marriage means more sex, not less. Suck his dick raw, and clean as you cook,\" I say, as serious as I'm joking. Sex is the glue of a marriage.\n\n\"I'm trying to be civil and serious,\" Kori says.\n\n\"I was serious, suck his dick. Women seem to think, they get married and they can relax on the sex, like it's something single people do. If you cut off sex and blow jobs, don't come crying to me when he starts cheating or watching porn.\"\n\n\"Porn isn't that bad...\"\n\n\"Does he watch porn?\"\n\n\"I don't think so...\"\n\n\"He watches porn, I promise you. Take the last time you sucked his dick, add the days, divide by two, that's how many times he's jerked off to porn since.\" \n\nI see her doing the math in her head. Get to sucking darling, his nuts are blue.\n\n\"What is your guy's sex life like?\" Kori asks. I put hers front of center, so fair enough. \n\n\"We have sex nearly every day,\" I say, and Kori is amazed. Like where do we find the time. I work at home, that's why we have time. We have friends and family to watch our kids. It's not a mystery. \n\n\"You didn't hear this from me, but Samantha and I double teamed him in high school,\" Kori says with a grin. Sabotage, seriously? Trying to make me pissed off that my husband did something ten years ago, before he started dating me. Something you think I can't give him again.\n\n\"The first time I had sex with Will was during a three some with Samantha, so I know what that's like,\" I reply, and that shuts her right up. Do you know how easy it would be for me to arrange a triple team with Samantha and Lili? \n\nPaul sits back down, knocking Kori out of her funk I just put her in. I'll give it a few weeks before she starts trying to fuck Will. \n\n-\n\n-Kori-\n\nThis is why I didn't want to come home. I've heard from some of my friends in med school about times they won or lost the breakup. Basically comes down to who was worse off. I don't think either of us lost, but Will definitely won. By a large margin at that. \n\nFirst, he's happy. Why wouldn't he be. He turned his skill into a successful business. His kids are adorable and well behaved. His wife seems to enjoy giving him blowjobs. Not to mention he looks amazing now. I don't know when he started working out, but I noticed. \n\nI feel the need to make Paul feel adequate that night, so sleep with him. I hadn't thought of Will for awhile until I saw him again, and I couldn't stop thinking of him. I'm holding Paul's penis in my hand about to start sucking, thinking he's smaller than Will's. I can fit him all of the way, and Will can gag me at half-mast. When he's hard he pumps me for a few minutes, before grunting on top of me, and rolling to the side. Will would make sure I came. \n\n\"Will you help me finish?\" I asked, playing with myself.\n\n\"Sure,\" he says, annoyance in his tone. His tone alone flips my libido to negative. I fake an orgasm just to go to sleep.\n\nPaul has to work on something else when Will was coming to finish the install. I know he was lying, he just doesn't want to talk to Will again. Will threatens him, and its interesting he trust me enough to be alone with him. Maybe he assumes I'm not good enough for him instead of the other way around, and he won't even bother.\n\nWill shows up, me answering the door, wearing my pajama shorts and a tank top with no bra. I have no plans with him, I'm just in my pajamas. \n\nWill drags in the cabinet piece by piece, and the kitchen is a flurry of drills and levels to insure its even. He's so precise. Paul went with the African Blackwood with a dark stain. The appliances we picked out are also black, so I guess we're going with a rustic look.\n\n\"First person I've seen use African black wood for a kitchen cabinet,\" Will says, wiping sweat from his forehead, accidently flexing his bicep as he did. I wish he didn't do that. Makes the gangly man I had not satisfy me last night look even more pathetic. Will shaves every morning too, so his firmer and squared chin stands out impressively, compared to Paul's weak excuse of a beard that will never grow in no matter how often he says it will.\n\n\"Not common as a cabinet?\" I ask.\n\n\"Instruments, custom pool sticks and cane handles. Some furniture like standing cabinets,\" Will explains.\n\n\"Is it expensive?\" Kori asks. \n\n\"This cabinet is putting you back forty five hundred,\" Will says, and my eyes widen. He spent how much?! Paul can already taste his trust fund, and he can't even open it for another two years. We can't afford this. \n\n\"That because of the wood or labor?\" I ask calmly. \n\n\"Labor we only charge fifty an hour, and our rate is fixed. If we promise a two hour install and it takes three, you only pay for two hours,\" Will says. He's the only fair contractor in the world. \"We have to order more African black wood. People rarely buy it, we only keep enough in stock to meet the demand of our largest products.\" \n\n\"Sorry you need to get more inventory,\" I say. \n\n\"It's fine,\" he says, and begins placing all of his tools back into his bag. I walk over and pull on the cabinets. They don't stick, they close all of the way, they're very sturdy. \n\n\"Satisfied?\" Will asks, and I hate he used that word. No I am not satisfied, I needed to fake an orgasm last night. Oh, you're talking about the cabinets.\n\n\"I need to have some words with Paul over the price, but they look really nice,\" I say, smiling over at him. \n\n\"Could you do me a favor, and stand right there next to them?\" Will asks, and I do. Will takes a picture of me and the cabinet for his wall. I guess the custom installs have the customer in there as well. I remember the last time Will and I took pictures...stop thinking about him that way.\n\n\"Did you get my good side?\" I ask playfully.\n\n\"You don't exactly have a bad side,\" Will says, checking the picture on the screen of his small digital camera. The picture of me sucking him off flash across mind. Stop it. \"We might need to reshoot it.\" The picture of my leg over his shoulder flashes across my mind. Stop!\n\n\"Why?\" I ask.\n\nWill shows me the picture, and you can see my left nipple out the side of my tank top. I press my breasts together, blushing bright red and adjusting myself. \n\n\"You could have told me!\" I say, walking passed him with my back to him to get a better shirt on. \n\n\"Not the most revealing picture we're taken together,\" Will says, and I stop cold. Does he still have them? I never thought about that before now. Does Will still have those pictures? \"I don't have them anymore, I deleted them years ago.\" Thank god. The image of him railing me doggy style flashes across my mind.\n\n\"I'll retake the picture, just let me get ready,\" I say, pulling Paul's hoody from the coat rack and zipping it over myself. \"Okay, ready.\"\n\nWe retake the picture, and I approve. The picture of Will giving me a facial flashes across my mind. I feel telling myself to stop is making it worse. \n\n\"Chloe Matson, that kind of came out of nowhere?\" I ask impulsively. \n\n\"It came out of nowhere, for someone who wasn't here.\" Will says, and I know he has a point. Who am I to say something came out of nowhere?\n\n\"How long after we broke up, did you cash in that blowjob from Chloe? I'm going to assume that's how it started,\" I ask, and I know he's uncomfortable about answering that. I know he was dating Samantha days later. \n\n\"A few weeks. I actually had sex with Samantha before we officially broke up,\" Will says, and my fist clinches. \n\n\"You actually cheated on me?\" I ask, and Will nods. He seems to legitimately regret that, and he assures me it ate Samantha alive for years. That only makes his current happiness more aggravating to me.\n\n\"You really have everything, don't you. A wife who fucks you silly, great kids, and your business,\" I say, and he knows I'm annoyed because I cursed. \n\n\"You got to be a doctor, like you always wanted. You didn't get dragged into my drama, like you wanted. Why do you seem so pissed?\" Will asks.\n\n\"I fucking hate being a doctor,\" I say, sighing because I actually let it out. \"I hate it. I can barely stand the sight of blood, I deal with miserable people on the worst days of their lives all day. What would it look like if I came back, saying I made a mistake?\n\n\"I don't even really remember that I got engaged, that just kind of happened like the script I wrote. Hit this age, do this. Hit that age, do this next. On top of that, he's kind of smug prick who spends nearly all of our money on cabinets because he has to live the same kind of life his parents have, who are also snobby smug pricks who look down their nose at me every time I visit. Icing on the cake, he can't even be bothered to give me an orgasm every once in a while. While probably take pride in making your wife cum.\"",
        "I'm breathing deep in irritation, and I'm starting to relax a little. I'm in danger right now. If Will makes a move, I'm his. Maybe not forever, but for right now I will be. Anything he wants.\n\nWill doesn't say anything for a minute. He just cleans up his tools and hands me the receipt to sign before he leaves. \n\nWill knew what state I was in. He could have put it up my ass and I'd smile and ask for more. I would have tried to successfully deep throat him like I was never able to do, and swallow it down. He could have creampied me with the head of his penis an inch from my ovaries at my peak ovulation, and I'd deal with the consequence that is likely to have a name. Will could have came on my face, or on my back after ramming me doggy on my stairs.\n\nHe could have done all of that, and he knew he could have, and he still walked away. Will got in his truck, and went home to his wife and kids. The only thing I got, was a cabinet I can't afford. \n\n-\n\n-Will-\n\nI have found when most of the women I have slept with are still in my life in one capacity or another, emotions are likely to flair, and some options get put back onto the table. When this happens, I walk away. I don't even humor it. \n\nI've had my fair share of close calls with both Samantha and Lili over the years. Less so now. Samantha is more interested in having sex with Chloe, and Lili is just playing to get a rise out of me. \n\nKori was damn near begging. It was all passive, but I still know her well enough. I could have had anything, and just knowing that, is beyond tempting. The first thing I do is remove myself from that temptation.\n\nI arrive home after work, Chloe having dinner on the table like always. After we eat, Olivia colors and Henry builds a five hundred piece puzzle he's been working on for two days. Chloe shows me some first drafts for advertisements, and the updated brochures with pictures of the latest custom jobs. They look amazing. \n\n\"Doing a custom install at Kori's awkward?\" Chloe asks after sliding the brochure away.\n\n\"Little bit. She got emotional, and made herself vulnerable,\" I say, and Chloe shakes her head. \"I didn't...\"\n\n\"I know. If I had to choose between you and that asshat, it's a no brainer,\" Chloe says. \n\n\"She doesn't like being a doctor. Kori is unhappy on many levels, and now seeing what the other option she had at the fork in the road of her life, that has to sting,\" I say, Chloe kind of shrugging. \n\n\"The women around me are a doctor, an accountant, and woman who owns her own photography business. I make brochures, and babies,\" Chloe says, picking up the brochure and placing it on the table again. \n\n\"If you want to wait longer before having the third, or just not at all...\"\n\n\"That's not what I'm saying,\" Chloe interrupted. \"If given the choice, I'd change damn near nothing. I don't even want the other direction of the fork in the road, and I still think about it. Kori, I think full on wants the other direction. Is she sexually frustrated as well?\" \n\n\"Oh yeah.\"\n\n\"Even if it isn't you, she'll probably cheat on him soon,\" Chloe says, and I agree. Kori is about to act very unlike herself. Or maybe like her actual self. \n\nMy phone chimes a minute later, and I see it's a text from Samantha. She sent me a picture of a screen grab she did of a text message from Kori.\n\n'Want to surprise Paul for his birthday. Interested to help?'\n\n\"If he can't satisfy Kori, Samantha will snap his dick off,\" Chloe says and I laugh. That didn't take long. The question is, why? \n\n\"Trying to make you jealous that Paul can get threesomes. You married the boring chick who won't do that. I'll call Lili just to make a point,\" Chloe says, and I begin to say stop before she reminds me she's not serious. \n\n-\n\n-Samantha-\n\nI meet Kori at her house, earlier than I was asked to come by. Just so I can explain in person why I'm not doing this with enough time to leave before he shows up. She eagerly answers the door and starts talking it up, before I shut her down.\n\n\"You are doing this, for the wrong reasons,\" I say, Kori stopping mid sentence as we enter her living room. \n\n\"I need a reason to have fun?\" \n\n\"This isn't for fun. Otherwise, I'd be game. This is spite,\" I say, Kori releasing a fake laugh. \"You want to rub it in Will's face you're the cool wife. You had your chance to be the cool wife. Do you know what you did? You up and left without a word, because you didn't want to handle his drama. Because you stopped liking him the moment he became inconvenient.\"\n\n\"Says the bitch, who fucked my boyfriend before we broke up...\"\n\n\"You were gone regardless, don't act like me waiting would have changed a thing. You just left. Not just him, but me as well. You know I considered you my only friend. Real friend. The only person I was honest with, I could be myself around. Everyone else was just trying to fuck me, or be in the proximity of my popularity. Not you.\"\n\n\"I'm sorry, but I couldn't be reminded everyday by his kid with another woman. Let alone name her Alice. Bottom of the rabbit hole, that's not even subtle.\" \n\n\"If you need to fuck other people in a relationship, it obviously isn't a good relationship. Fix it, don't introduce new problems to it,\" I say, Kori sighing and sitting on her couch. \n\n\"Did Will and Chloe learn that the hard way?\" \n\n\"Chloe has suggested before, Will is the one who turned it down. Will and I got crazy before we broke up. Foursomes with lesbians that I helped him flip. Shit got out of hand. Will and I realized orgasms can't sustain a relationship when you don't want the same things. I don't want kids. I'll be one hell of an aunt, but mommy isn't in my toolbox.\" \n\nKori looked at her feet and rubbed her face with her hands. She's kind of embarrassed. \n\n\"I'll get my house in order before I start putting more in it. What's your return policy?\" She asks pointing at the counters. Damn those are nice Will. \n\n\"Kind of final after installation. We can put it in installments, so it doesn't hit you all at once,\" I say, and she thanks me, saying she'll do it that way. \n\n-\n\n-Chloe-\n\nI'm nauseous as hell, my boobs are sensitive, I can smell the kitchen from the bathroom and the bathroom from the kitchen, my level of irritation goes from calm to chaos in seconds. I'm pregnant. \n\nAbout time too, this one took six months to stick. Henry was pretty much instant, and Olivia I only had one period after we started trying. This one was defiant. \n\nWill is happy, and we celebrate with the thing that led to the happiness. Instead of a creampie, he pulls out at the last second and I suck him off until he's dripping off the edges of my mouth and down my cheeks. It slithers off my chin and drops to my tits. Nausea makes swallowing impossible, so I leave the bed and spit it into the toilet. \n\n\"I still like Frank for a boy, and Holly for a girl,\" I say. After our parents. In his case, his biological mother. I really like Jacob, but Will's younger brother is named Jacob. Holly had Jacob about the same time Will and I got married.\n\nWill is okay with Holly but would rather Nathaniel for a boy. Who the fuck arrives at Nathaniel? \n\nThe next morning while Will is at work I take the kids to go grocery shopping, Olivia sitting in the cart while Henry walks next to me. I avoid a few isles because if we walk past certain products they both go crazy and calming them down after I don't get the item is damn near impossible. \n\nWhen I look back up after placing an item in the cart, Kori turns into the isle and sees me. She's far too polite to attempt to flee, so carries on moving forward. \n\n\"Hi,\" Kori says, looking at the kids, then me. Do I let her know I know she was trying to one up me and failed, or do I behave? \n\n\"Getting some shopping in?\" I ask.\n\n\"A few things,\" she says, and does mental math. Olivia is way to young to be Alice, since I'll assume she's still wondering what she looks like. I'll give you a hint. She's Lili with a duller red. \n\n\"Henry I know you've met, this is Olivia,\" I say, Kori saying hello, Olivia too close to her nap to care. Kori is fidgety as we both wait for the other to continue the conversation. We may need to move if she's going to be this awkward. Was she this passive in high school?\n\n\"I think we got off on the wrong foot,\" Kori says, and I shrug.\n\n\"That was bound to be awkward, one way or the other,\" I say, my own kind of forgiveness. I'm going to sidestep that I know you were trying to make my husband, and the father of my two, soon to be three children cheat on me. I'll just take pride knowing I'm the pregnant one, and I'm less emotional than you are.\n\n\"We live in the same town again, I really want to iron out the tension,\" Kori says.\n\nNo. You want to keep it just calm enough so I don't explode and demand you stay away from him. An outburst I will be well within my rights to do. I do not like you. Stay the fuck away from my husband. \n\nOf course, I don't say any of that. \n\n\"The first step in that, is meeting Alice,\" I say. I'll help make it better. I'll trust Will to know better. \"She's the reason you two broke up. Just know, Will will choose her, one hundred percent of the time. I had to make peace with that too, but I became a priority as well when we got married. Alice is my stepdaughter, I've been in her life since the day she was born, I love her like my own children. So if you look at my daughter with...\" I start to say, then remember I have the other kids with me. Thankfully I didn't have to finish that statement.\n\n\"I understand. I left because Will manned up and took care of his kid. I have nothing but admiration for that. I didn't even try to make it work. I will never pretend that us breaking up, wasn't all me,\" She says. Every sentence she said began with I. That was unnerving.\n\n\"Do you run?\" I ask. \n\n\"Sometimes.\"\n\n\"Every Saturday, Will and Alice go on a run together. Father daughter run. Then they go to the lunch, get calories and carbs, and have a date. They start the run at nine in the morning at Deer Pond. Coincidences happen.\"\n\n\"Thank you,\" Kori says, and she's truly grateful. \n\nI hope this is a good idea.\n\n-\n\n-Kori-\n\nI see Will stretching with his leg extended on a bench, leaning into the stretch to maximize it. His legs are toned and cut, and I know his underwear is tight because his dick would be bouncing like a woman's chest. On the other side of the bench is a girl, about ten years old who smiling and talking, with an occasional laugh toward him. \n\nTo make this visit appear more coincidental, I go around wide to come from the side where he wouldn't have any line of sight on my arrival. I splash some water on my face and in my hair to make it look like I'm sweating and I've running for a while. \n\n\"Hey Will,\" I say as come from around the corner, pretending to be a little out of breath. The girl turns to me as well, and I finally see her.\n\nAlice is weird, because she looks so much Lili, and yet when she stands next to Will you also know it's his daughter. She's really tall for her age too. She's wearing white shorts and a magenta tank top with short white socks and pink running shoes. Her hair is red, but more of an auburn, a straight mixture of him and Lili. Her eyes are nothing but Will's. \n\n\"You look like you're getting it in,\" Will says to me, Alice looking over at Will then back to me. \"This is Kori, she's an old friend of mine.\"\n\n\"Hi,\" Alice says, giving me a look that says she's on to me. Like she knows the water on my face is water and not sweat. \n\n\"Nice to meet you,\" I say back and Alice looks at her dad. \n\n\"You can go your pace dad, I want to run with Kori, have a girl talk,\" Alice says, and that makes me nervous. Do ten-year old's talk like this? She's knows my intent better than I do. \n\n\"Do you mind?\" Will asks me, and I shake my head, and Will takes off, me watching his ass as he does. I remember Alice is there and turn back quickly, but she know I was watching, and what I was watching. This little girl needs to be in a horror movie. \n\n\"My mom told me about you, are you his ex-girlfriend?\" Alice asks, and I nod. It's not strange that she said that. It's strange she understands the context of it. \n\n\"I am,\" I say and she motions for me to walk with her. \"You're really smart.\"\n\n\"I know, adults tell me that all of the time,\" Alice says and looks at me. \"I don't know what it is with my dad, but I've seen a lot of woman walk up and look at him like you just did. I know it so well, because my mom still does it.\"\n\n\"That must be frustrating,\" I say. Having to see her mom still so infatuated with him, but he's married to Chloe. \n\n\"It isn't, my mom's crazy,\" Alice says and I laugh a little. \"Love her to death, but she's nuts. I know kids usually wish for separated parents to get back together, but not me. My mom hasn't been on a date, since I've been born. It's like she's still holding out.\"\n\nLili is psychotically in love with him.\n\n\"Not saying she'll push Chloe in front of a car, but I doubt she'd push her out of the way. I keep telling her to get out there, but she doesn't. Why are you here, when you're wearing that?\" Alice asks, pointing to my engagement ring.\n\n\"I just happened to be here too...\"\n\n\"Your shirt is dry, you splashed water on your face. I'm not stupid. You created the pretense,\" Alice said. Seriously, who taught her this? \"My mom is a victim of her own obsession. Don't be my mom.\"\n\nThis is making me look like Lili. She's absolutely right. A ten year old is right about what I'm really doing here. I'm one push away from being Lili.\n\n\"I don't know, what your husband, or whatever he is, is like. You're wasting your time, like my mom is. Please, don't let it come to a point when you blink and it's been ten years of waiting.\" \n\nThat was sobering. Paul is rough, but I do love him. We have some things to sort out, but I love him. This is a little girl who is so smart it's kind of creepy. \n\n\"You love your dad,\" I say and she nods. \n\n\"Best man I know. I love my mom too, and I want what's best for both of them. It's not each other. I love my brother and sister too. And Chloe. That's my family.\"\n\n\"Thank you,\" I say, and she gives me a confirming nod. Like she knew what I thanked her for. I ran with her for a few miles before I said a few goodbyes and headed home. \n\n-\n\nI kick my shoes off at the door as I enter the house. I walk into the living room where Paul is watching television, and I look over my shoulder at the cabinets we can't afford. \n\n\"I want you to listen to me,\" I say, Paul turning his head, then looking at the television again. I walk around, snatch the remote from the couch next to him and turn off the television. I sit on the coffee table, between him and the television and look directly at him.\n\n\"I want your attention, for a minute. You will never, make a decision that expensive, without me, ever again,\" I say, pointing at the cabinets. \"Do you understand me?\"\n\n\"Yeah,\" he says, nodding like a scolded child. Just his posture is bothering me. Will straight up with shoulders back comes to mind in comparison. \n\n\"I don't want yeah, I want yes,\" I say. Yeah is sarcastic and non-committal. Yes is declarative. \"Do you, understand?\" I ask, slowly.\n\n\"Yes,\" he says and finally looks up at me. \"I talked to Will, asked if I could return them. He gave them as a wedding gift.\" That must have been a punch in his pride. He actually tried to return them. He tried to fix it. While I was trying to, end it. \n\n\"That must have been hard for you,\" I say, and he nods a little. \"Thank you.\"\n\n\"I had a, pretty big slice of humble pie,\" Paul says, and I laugh. \"I said when he and Chloe have their ten year anniversary, we'll do something large as well.\" \n\n\"Okay,\" I say, and we both smile at each other. He was coming around, while I wasn't. I feel guilty it took a ten year old to tell me how much of a twat I was acting like.\n\n\"How did you meet Will exactly?\" Paul asks, and I think back to that night. \n\n\"Will doesn't remember the first time we met. He was on a Ativan high and blackout out. He woke up under a bridge.\"\n\n\"Holy shit,\" Paul says and I giggle. \n\n\"He's come a long way for a guy who woke up under a bridge.\" \n\nWill truly has. A shy, quiet guy who was rather unremarkable. That was the surface. In truth, he was a confident, fun loving guy, who was also a secret player. He was also hiding his amazing talent as a carpenter from his parents who had academic aspirations for him. Until he gave himself permission to be himself. \n\nWill is now one hundred percent of what he could have been back then. That's why his daughter needs to be on constant hoe block. I can't even imagine what he's been tempted by and rebutted. Women flock to him, but it hasn't gone to his head. He's as humble as he is hung.\n\nPaul put his pride on the table, and he doesn't do that very often. If he is willing to take that hit, I'm willing to put his mind at ease. \n\nI slid my shorts off, but my panties don't get caught in the tug, but I don't let it slow me down. His pants hit his ankles and I tug my panties to the side, clearing the path for me to lower myself on top of him. My top and sports bra come off, and he sucks the sweat off my nipples and licks it from my neck. I didn't know that was a turn on until just now.\n\nSomething about the mood, and maybe my endorphin high from the run, I orgasm in only a few minutes. After I cum he tips me to my back on the couch and start to really drill me. I'm not comparing him to Will this time. I'm not thinking about what Will's dick felt like. I'm enjoying what Paul's dick feels like. Not as big, but he's easier to ride and I can actually feel accomplished when I blow him. \n\nAfter I cum again, Paul plunges into me, and he unloads into me. When he pulls out I feel him seeping out and going down my legs. Before he could relax I roll over and drop my mouth on his dick making him squirm. This always made me feel powerful. That I was half a man's size and could make him powerless this way. I think that's why some woman really love sucking dick. It's power. \n\nI lick up to the tip and say, \"Stay hard and fuck me again. You do that I'll suck the cum out of your nuts.\"\n\nI've never said anything like that to him, and he has no idea what to say. He gives me a vague look of shock and understanding and closes his eyes. He's probably thinking of the most erotic things he can think of. I help facilitate that.\n\n\"Think about me sucking your dick with another woman. Us stacked up so you can fuck us one after the other,\" I say and he groans and I lower my mouth back down. \n\nAfter five minutes he's still hard so I mount up against the side of the couch. Paul enters me doggy style and uses my hips to pull me onto his dick. I rub my clit with my right hand as he does, and I cum again. The best part is, because he's already cum, he fucks me for a good long time. \n\nI get it in doggy, missionary, cow girl, reverse and normal, before he tells me he's about to cum so I start sucking again. He must have lost the tingle the moment we stopped because the blowjob takes several minutes, but I don't care. I work his shaft, with my hand while I twirl my tongue around the tip and suck it. \n\nPaul gives me one last warning before he put his hand on my head. I take him all of the way in and taste the spurt and feel it crash into my mouth. With my thumb and index finger wrapped around the shaft I milk him, swallowing before the second shot, and then swallowing that one down too. Even after he's done, I keep sucking him, until I feel him going limp.\n\nI love Paul, and if he keeps fucking me like that every now and then, we'll be fine. \n\n-\n\n-Will-\n\nI curl up with my wife in our bed while she's reading a book. I'm fresh from a shower, so she leans into my warm chest because she's perpetually cold. We had a good dinner to celebrate the pregnancy. The first two she was nauseas, but morning sickness was rare for her. ",
        "\"Hello Nathaniel,\" I said, putting my hand on her stomach. She closed the book and hit me with it. \n\n\"Frank. His if he's a boy name is Frank,\" Chloe says, and I laugh, so she hits me again. \n\n\"Easy,\" I say, her dropping the book.\n\n\"We got boring, didn't we?\" Chloe asks, and I shake my head. \n\n\"You're confusing routine and stability as boredom,\" I say and touch her stomach again. \"How is this baby boring? How is running with my daughter boring? How is teaching my son carpentry boring...\"\n\n\"I get it,\" Chloe says and smiles. \"We used to do some crazy shit. When was the last time we did road head? Or had sex in the back of the car after work.\"\n\n\"Why is boring to you, just related to sex?\" I ask, and she looks at her chest and chuckles. \"Exciting to you now is getting in a quickie when the kids take a nap.\" \n\n\"I know. Remember trying to for Henry? You fucked me everywhere,\" Chloe said with a grin, just remembering how fun that fun. \"This baby was conceived from morning quickies.\"\n\n\"Regardless. I don't need any other women in this bed. I just need you,\" I say, and that quickly escalates to a long completed sixty nine. \n\nI think everyone can point to a single moment in their lives, that changed their lives. I can too. It was waking up under a bridge. \n\nTo this day, I don't fully know what happened. What I do know, is I met every woman who would be important to me that night. The first woman I met, who seemed the least important at first, was Chloe. My wife. Lili, the mother of my daughter. Kori, the first girl I loved. Samantha, the first girl who said she loved me. \n\nBefore that day, I was a shell of myself. A nervous, quiet introvert caused mostly by my parents overbearing pressure on me. One wrong pill and that dissolved. All of them helped me give myself permission to be myself.\n\nKori's journey to do the same inspired me to do it myself. Samantha's shockingly deep character complexity told me I didn't have to choose one thing over the other. Personality traits weren't a zero-sum game. Lili showed me how going too far one way was dangerous and volatile. And occasionally batshit fun. \n\nChloe was the balance between all of them. Sensitive and strong. Compassionate and firm. She was the natural end of the journey. She has her own doubts and insecurities, but she recognizes them. They're part of her, and she knows her weaknesses intimately. \n\nI couldn't have built the business without her support and patience. We couldn't raise our kids without her sacrifice. \n\nMy life could have gone a hell of a lot worse.\n\nMy life turned out pretty well for a guy whose story started under a bridge."
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "marriage",
        "jealosy",
        "cheating",
        "comedy",
        "drama",
        "series",
        "love"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/14-hours-pt-14"
}