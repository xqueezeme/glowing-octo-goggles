{
    "title": "Straight Invaded Pt. 04: Full Invasion",
    "pages": [
        "SUNDAY\n\nAs 7:30 AM approached, my cock began its betrayal. I could not stop thinking about the effect on my body as his cock unloaded in my mouth. I was disgusted with my self as my mind turned to a week ago and tonguing his asshole. \n\nI selected a pair of red full panties this morning, I could not believe how excited I was from the feel of silk against my skin. I felt like a hormone crazed teenager. My whole body just tingled all over, like 17 again.\n\nThe knock at the door startled me. I greeted him in my panties, my cock pointing straight ahead. He shoved me back as he entered quickly and shut the door. \n\n\"Sorry, gonna have to be fast this morning. Family emergency! On your knees please\", he said breathing heavily. \"I have to go.\"\n\nHe shoved me down, unzipped, and pulled out his mostly soft cock and shoved it in my mouth. Startled at first, it took me a few seconds to think. I would need to work him hard first, so I sucked him in all the way and worked my tongue around his stretched dick. He sighed as the blood filled his growing tool. I wiggled my tongue faster and faster as he stiffened. \n\nI wished I could feel his ass directly, as I pulled his hips against me and began to bob my head on his hot cock. I worked him hard and fast, feeling his head in my throat, then pulling out to my lips, working the tip with my tongue. \n\nHe had both hands on the back of my head, and after a few minutes (my lips getting tired) he began thrusting himself in and out of my throat. I would sneak small breathes through my mouth as he pulled back. I struggled to get enough air through my nose, while he pounded my face. There was saliva all over my face and chin as I fought gagging on his meat.\n\n\"Oh Fuck, you fucking slut! Oh fuck! Oh fuck! Oh fuck! Oh fuck!\" he grunted with each thrust. \n\nHe pulsed his load into my mouth as he throat fucked me. Unable to contain it all, I slipped my hands flat against his pelvis, surrounding his cock, to make a shield from soiling his jeans. As his orgasm subsided, he slowed his gyrations, and I did my best to drain his cum. After a few minutes he slid his cock from my mouth, holding my head in his hands, he tilted my head to look at his smiling face. \n\n\"You are quite the cum slut Mr. Thompson. Your family would be proud.\" he said releasing my head and placing his cock back into his pants. \"I wish I had more time to use you this morning but I really have to go. Maybe tonight I can give you more time. If you have any energy after your training day, that is. You are now free until your guest arrives around noon. \n\nIt should take a while so, I will return about 10:00 PM for my second servicing today. We can talk more about your financial obligations then also. Your panties look lovely this morning.\", he said glancing at my cock head escaping the waist band. I shoved it back in while he turned toward the door.\n\nHe turned back and pulled a small baggy from his pocket and held it out. I took it, as I looked up at him, dumbfounded and still on my knees. What a sight I must have been, kneeling with a boner in my red panties. I had saliva and cum oozing down my face, chin and neck, holding a baggy with several blue pills in it. \n\nHe smiled and said, \"I almost forgot, since I let you cum twice yesterday, I think you will need those before you visitor arrives. You might even take 2, at least an hour before noon, but not more than 2 within 24 hours. Believe me you will want to be up for the entire session this afternoon, if you know what I mean. See ya later Davey boy! You might think about a cold shower and shave this morning. Have a great day!\"\n\nSilence overtook my world as I kneeled in my hotel room and the reality of my situation hit home. My hard-on collapsed as his words hung in the air. \"Your family would be proud\"... It's been like a bad dream. I pushed them out of my mind as I have been obsessed with revenge and servicing my assailants. I climbed into bed and tried to think of a way out, as my mind spun between running away and anticipating what he could have meant by, \"pleasures like I have never imagined.\"\n\nAs I lay in bed, I flipped on sports center to give my mind a rest. I ran my fingers over my ass and balls, checking for stubble. It felt smooth, but I may have been feeling the beginnings of stubble. \n\nI jumped in the shower, a bit cold as he suggested. I applied hair remover to my pubes area and it was fine. It seemed to be working, so I spread some on my balls. After a moment the burning sensation became intense, so I washed it off as quick as I could. The burning continued, butt, after a few moments the burning lessened and that light airy sensation retuned. I carefully applied and rinsed, my cock, balls, ass and asshole area. The whole area was alive!\n\nI showered, cleaned up, shaved my face, put on deodorant and cologne. Then I applied lotion to the de-haired areas. I had plenty of time so I threw on some sweats and watched television and ate a sandwich. \n\nAt 11:00AM my balls had a dull ache from almost continuous, at least partial erections all week. I popped one of the Viagra. Having never taken one, I did not want to risk two the first time out. Instantly, it seemed, I began to get harder. I knew it could not be the pill that fast. I got my ice bucket loaded again, to keep my cock at bay, until the \"special visitor\" arrived.\n\nWhen the knock came, I went to the door and tried the peep hole. I saw nothing but a shadow. I opened the door and a young lady in a skin tight red summer dress stood there holding a large shoulder bag . Her black hair contrasted sharply with the bright red dress, as it hung over her left shoulder almost reaching her nipple. The nipple was protruding through the skin tight dress. Her breasts were medium sized and wonderfully shaped. \n\nAs she looked me up and down she smiled and said in an uncomfortably loud voice. \"Hello Mr. Thompson, I have never seen you like this before! Red panties...very nice.\" It was Beth from the travel agency!\n\nI opened the door fully and said quickly, \"Please come in.\" \n\nAs she stepped in, I peeked down the hall in both directions. Luckily no one was out. I closed the door and turned around to see her back side as she looked around the room. Her ass was absolutely gorgeous. It was round and pear shaped and her legs were toned and so smooth looking, I had to wonder what it would feel like to run my fingers over the length of them. She spun around smiling glancing down at my already forming pantie tent.\n\n\"Mr. Thompson how are you feeling today?\" I see you got the memo to wear red today!\" she said giggling. Glancing down she continued, \"Danny told me you are a world class cock sucker, but it looks like you are glad to see me!\"\n\nI nodded trying to think of something witty to say. As I was working on a line, she cut in.\n\n\"First question Mr. Thompson...who owns you?\" She said with her smile fading.\n\nI hesitated a second or 2 and mumbled, \"You do Beth.\"\n\n\"Great!\" she said, smile back in place. \"It is important to make that understood. Let me tell you how this will work,\" she said placing her bag on the chair and removing a small wooden paddle from it.\n\nAs she twisted around her beautiful round ass drew my gaze. There was not a hint of a panty line, nor a roll of fat on her body. I was lost in the thought of just touching that beautiful ass. She was by no means too skinny. She had meat on her bones but in all the right places. Jennifer Anniston came to mind. Suddenly she broke my trance.\n\n\"Mr. Thompson, Please, I am young enough to be your daughter!\" she said glancing over her shoulder. \n\nI stumbled back taking my eyes to meet hers. I fumbled for an apology as she broke in again.\n\n\"I am only kidding, please sit down on the bed. Let me tell you why I am here and how things will work today. You will be pleased to know I am a bit of a nympho, so I like orgasms! Also I have an incredibly sensitive anus. I love any form of anal stimulation! Every man's dream, right?\" she asked smiling.\n\nI nodded wholeheartedly, stunned and again speechless. She once again bailed me out.\n\n\"I am so glad you approve (she glanced at my growing hard on). I have to say I got extra exited when Danny told me you have never fucked an ass before. If you pass your first test, I promise you, will loose your virginity today! What do you think?\" she asked looking at me with true wonder in her eyes.\n\nFighting off cumming in my panties, I said, I think I am up for whatever challenge awaits. Your ass is amazing! I would do just about anything...\n\n\"Calm down Mr. Thompson! I already know you are an ass man. Danny told me everything. I understand you have a rather sensitive anus too. But even more exiting, he mentioned a magical tongue. So many things to explore, I am already getting wet just thinking about it...but lets stay on target. Today is about maximizing my orgasms and expanding your horizons.\" She said pacing with the paddle in her right hand tapping her left hand with it.\n\nI did need to calm down. A beautiful young anal nympho, pacing with a paddle. I forced myself to take some deep breathes and get control. \n\nI spoke slowly and deliberately, \"Please let me know anything I can do to help you achieve your goals. I will use all tools at my disposal.\" \n\nShe laughed, \"I like your attitude Mr. Thompson. Your first test, make the magic tongue work its magic on me. Please sit on the floor with your back against the end of the bed.\"\n\nI sat on the floor, legs out in front, back to the end bed, and head back against the edge of the mattress. I looked up at her controlling my breathing. She walked over and stood about a foot beyond my feet smiling down at me. She spread her legs, her skirt straining and inching up her thighs. She straddled my legs, her red high heels, working closer to me. She kept eye contact as she came closer, flashing a mischievous smile. \n\nThere she was, her skirt line inches from my face looking down at me. All I wanted was a peak up her skirt. She leaned forward, ran her right hand through my hair and gently grabbed a handful, forcing my head back. I could smell her wet pussy as she grabbed the front of her skirt with her free hand. \n\n\"Let me see that tongue Mr. Thompson,\" she insisted. \n\nI did my best Gene Simmons, as she raised the skirt and bent at the knees, bringing her beautifully shaved pussy toward my straining tongue. My tongue hit her steaming pussy and slowly separated her lips. She moved slowly up and down letting my tongue work from clit to taint, forcing me deeper with each pass. I breathed deeply through my nose taking in her strong scent. \n\nShe moaned subtly, her breathing increasing. As her clit approached, I swirled my tongue rapidly targeting her sweet spot. Her pace increased, working her pussy on my tongue, up and down. I reached my hands up, sliding them up the back of her legs toward that beautiful ass. She pushed away and reached behind, grabbed my hands and tossed them toward the floor.\n\n\"No hands Mr. Thompson! This is just my pussy and your tongue.\"\n\nShe moaned and grunted with each pass over my tongue. She pulled her skirt over my head and pushed harder against my face, as her body plunged up and down. There is nothing in the world softer than the inner lining of a woman's pussy! I whished she would stop moving, so I could fully penetrated with my tongue. I could not focus my tongue on her clit either. I needed my hands to hold her still so I could really use my tongue to its full capacity. She pulled her dress up to just below her handful sized tits, grabbed my hair and pulled my head back.\n\n\"Stick out your tongue!\" She panted.\n\nI stuck it straight out as far as I could.\n\n\"Touch your chin!\" she commanded\n\nAs I lay my tongue flat against my chin, she lowered her wet pussy back to my waiting tongue. She pressed her clit against my flattened tongue, holding my head with both hands. She began grinding her clit on my tongue with increasing force, Her breathing became louder and louder and she began to moan uncontrollably. \n\nI have never experienced anything like this. She was using my taste buds as tiny magic fingers for her clit! She was fucking my tongue with her clit. Her juices were flooding my mouth as she road my face. I wanted my hands on her ass so bad, so I tried again only to have her pull off my face and shove my hands away.\n\n\"Tongue,\" she grunted.\n\nI assumed the positon, tongue out and pressed against my chin. She pressed her drenched pussy against me and began to grind more forcefully. This time she leaned forward for support with her hands on the bed, her legs spread wide. She pressing her thighs against the bed, pinning my arms to my side while grinding my tongue with her clit. \n\nMoaning and Grinding she began to chant, \"Oh Mr. Thompson, Oh Mr. Thompson, Oh Mr. Thompson, Oh Mr. Thompson, Mr. Fucking Thompson! I am fucking cumming! I am fucking cumming! I am fucking cumming!\"\n\nHer body was almost vibrating she was grinding on me so fast. To my shock and enjoyment she continued for what seemed like several minutes, rivalling any porn stars orgasm.\n\nShe grunted and screamed, \"Ahu! Ahu! Ahu! Ahu! Ahu! Ahu! Ahu! ...\"\n\nMy entire face was drenched in her sweet juices, as her whole body shook, her weight collapsed on my face. Her beautiful belly pulsing against my head as she was almost gasping for air trying to compose herself. \n\nAfter a moment she stood up and swung her left Leg over me, she turned around and walked toward the chair. I got to see her gorgeous tanned ass and the white outline of a thong bikini. I wanted so much to touch that ass and just bury my cock in it! Hell, I did not care, my cock, my tongue, I just wanted that ass!\n\nShe pulled off the sundress and tossed it on the chair. Then she put her right foot on the chair and bent over giving me a view of her glistening pussy, accentuating that ass!\n\nAs she removed both shoes she began to speak.\n\n\"Mr. Thompson, you pass with flying colors! 2 down...orgasms that is. That is a great warm up. You will be well rewarded, I promise,\" she said spinning around and giving me my first look at her naked breasts. \n\nAs she turned, I saw the silhouette of smooth tummy. I pictured running my tongue from the tuft of hair at the top of her pussy, following the curve of her belly up to her belly button. Her breast were very nice with those nipples begging for my tongue. She walked slowly toward me smiling flirtatiously.\n\n\"Stand up Mr. Thompson, lets have a look at you. I stood up my cock bursting to get out of the red panties. She walked up to me, and gently gripped my engorged penis. \n\nMy panties were soaked from my oozing pre-cum. As she stoked me I thought I might cum on the spot. I sighed and pumped her hand surrendering to the urge to release my cum. She relaxed her grip and stepped back.\n\n\"Easy Mr. Thompson. I assure you, you will get to release the pressure soon enough. You seem to have a leaking problem. Why don't we get these off of you, so our friend here can breathe.\" She said dropping to her knees.\n\nShe grabbed the waistband of my panties and pulled them out so they would clear my boner. She pulled them to the floor in one smooth motion. I stepped out of them and she stood up slowly exhaling her hot breath on my cock, passing dangerously close with her lips. \n\nAgain she gripped me and looked me in the eyes. She milked my cock, squeezing me at the base and worked it to the tip. With her other hand she took 2 fingers and scooped the pre-cum off my tip, brought the fingers up between our faces and slid them into my mouth. I sucked them clean of my spunk. \n\nShe pulled her fingers slowly out of my mouth and replaced them with her hot tongue, swirling it around mine and tasting my pre-cum. She cupped my balls and then reached her hands around and caressed both ass cheeks with her hands. \n\n\"Danny will be proud of your shave job,\" she said brushing a finger over my asshole.\n\nAs I tried to reciprocate and touch that amazing ass, she shoved me backwards so I ended up seated on the edge of the bed. \n\n\"You really are an ass man aren't you Mr. Thompson?\" she asked, turning her back to me and looking back over her shoulder.\n\n\"Yes, and you have such a beautiful ass,\" I said, and was left speechless as she bent down, hands on her ankles and legs spread. Only 5 feet away, the offering before me was too much to resist. I began to get up and move toward the prize.\n\n\"Oh no Mr. Thompson, please remain seated. I'll let you know when your services are needed.\" She said looking at me with her head between her legs. \"Tell me what you want Mr. Thompson.\"\n\nI starred longingly at the sight before me. I had clear sight of her at her dark little sphincter, surrounded by beautifully rounded ass cheeks, a small mole in the center of her left one. Below her dark pink pussy lips still glistening before me. \n\n\"Heeelllooo..., Mr. Thompson, nothing you want here?\" She asked tauntingly, smiling at me between her legs.\n\nThinking, she should call me Dave, but liking the school girl, teacher feel to Mr. Thompson, I began to speak, \"I want to feel my cock slide into that sweet little ass...\"\n\nShe cut in, \"Wow, you just charge right in...no foreplay?\"\n\nI stuttered trying to recover, \"Ye, yes, I want to caress and kiss every inch of it.\" \n\nSuddenly she began to make her asshole pulsate in and out as she wiggled her ass from side to side.\n\n\"Oh hell, how did you do that. It's begging me to kiss it. I want to tease that tender asshole with my tongue. Please let me taste your hot ass!\" I begged like a child in a candy store.\n\n\"Oh Mr. Thompson, you are making me wet. I already told you, you passed the test, and I really like the way your mind works. You have permission to kiss my ass at will!\" She said standing up.\n\nShe turned around ran and dove onto the bed next to me, legs spread and ass up. I crawled up on all fours between her legs, my face inches from the prize. \n\n\"Can I please touch your ass\" I asked, my breath passing over her warm buns.\n\n\"Yes you may, and I am looking forward to the magic tongue Mr. Thompson.\n\nI sat back and began to caress both cheeks using both hands. Her skin was smooth as my silk panties. I squeezed her buns as I leaned on my elbows bringing me closer. The scent of her wet pussy was amazing. I began to kiss her right cheek where her ass meets her thigh. I kissed slowly around her right cheek. \n\nBefore starting the left, I nuzzled my nose in between her cheeks and took a deep breath through the nose. The scent of her ass and pussy combined sent chills through my body. I exhaled through my mouth, flooding her with my hot breath. I smiled as she wiggled and gasped as the hot air touched her. After working the left cheek, I gripped them both and spread them apart, giving full access to her pleasure point. It puckered out and in teasing me again.\n\n\"Can I please kiss your asshole?\" I pleaded.\n\nShe reached back and pushed my face into her crack. Her skin was warm and soft, I was in heaven. I pulled back and spread her open, gazing at her tight asshole. I let my breath wash over it as she pushed it slowly closer. I tickled it, ever so gently, with my outstretched tongue. She sighed and pushed her hips higher as I retracted my tongue. \n\nI moved in and kissed her dark rosebud. \n\nShe gently swayed her hips as she continued to raise her ass to meet my lips. I pressed in, opening my mouth slightly, and circling her perfect sphincter with my tongue as my lips encased her anus. My tongue wiggled and pressed in, gently as she began to moan.\n\n\"Oh God, Mr. Thompson that feels so good, please don't stop. I love that magic tongue. My pussy is so fucking wet,\" she said pressing her ass harder against me.\n\nI lifted up and slid my hands to her hips, pulling her up until her knees, were under her. She left her face on the bed, with her ass fully offered. Then I pushed her knees apart giving me full access. I pressed my face back in kissing her asshole and letting my tongue wiggled and push it's way in. I slid a finger into her steaming pussy as she gasped and gyrated. I took my tongue down to the her taint and pressed my tongue against her. At the same time I removed my finger and replaced It with my thumb in her pussy tickling her clit with my fingers.",
        "\"Oh Mr. Thompson, that feels to good, \"She cried out as my tongue pressed from taint to the top of her ass.\n\nShe began to rock her ass, fucking my thumb as my tongue forced further into her sweet asshole. I pulled my thumb out and replaced it with 2 fingers, now working her clit with my thumb. Her moans became screams as I worked all four fingers in her drenched pussy. I rolled my tongue into a tube as I tongue fucked her ass.\n\n\"Oh fuck I am cumming,\" she screamed. She turned her face into the mattress to muffle her screams. Fuck my ass with your magic fucking tongue! Yes! Yes! Yes! Yes! Yes!\" \n\nShe screamed each time she thrust her pussy onto my fingers. As her climax peaked, I slowed the pace of my tongue and eased the force of my fingers.\n\nRemoving her face from the mattress she yelled in a gravely grunt, \"Don't you fucking stop!\"\n\nMy balls ached from the raging unrelieved hard-on. But, there was no place I'd rather be Kneeling behind this sex crazed gorgeous girl. My face buried in her round ass, four fingers formed in a circle fucking her wet pussy and working her clit with my thumb. My left arm was tiring from supporting my weight as she screamed into the bed in ecstasy. \n\nDanny was right when he said I would experience pleasures I could never imagine.\n\nShe picked up her pace and I continued to meet her piston like hip motion. I could barely hit her asshole with my tongue she was moving so fast. When I found her rhythm we were back on track. Her orgasm was building again and suddenly she stopped her motion. I forced my tongue as far as I could into her hot asshole and worked my hand in her pussy as fast as I could move it. Her body shuddered as she came on my hand.\n\nShe screamed into the mattress, \"Fuck! Fuck! Fuck! Fuck!\"\n\nWhen she was done, I removed my fingers and tongue and she rolled over and off the bed, jumping to her feet.\n\n\"Are you ready to fuck my ass Mr. Thompson? She asked running toward her bag on the chair. \n\n\"Oh god yes!\" I panted.\n\nReaching into the bag she ordered me, \"lay on your back and hold on!\"\n\nMy cock at full attention, I was thankful it had become numb from being hard so long.\n\nShe ran back to the bed and Jumped on top of me straddling my legs. She put what appeared to be a hand vibrator, massager on her right hand. \n\n\"Lay back and enjoy,\" she said gripping my boner with her left hand. \"Thanks to your magic tongue my ass is well lubed, but we may need to help you lube up first.\"\n\nShe scooted her body up closer to my cock, raised up, and slip my cock slowly into her soaked pussy. I moaned in amazement of how hot and wet it was. \n\n\"This should do it,\" she said pumping me slowly. \"Whatever you do, do not cum in my pussy, or tell Danny I did this.\" He wants you all about cock and ass. He does not want pussy for competition. Here it comes Mr. Thompson...\"\n\nShe lifted off my cock and positioned my cock head against her warm asshole. I watched as she slowly pressed down gyrating ever so slowly, teasing my cock, moving it in tiny circles against her tightness. As the pressure increased I could see her ass cheeks drawing in and touching the sides of my shaft, as her asshole refused to yield. \n\nShe wiggled my cock and it began to slip in. I moaned as the head eased into her tight warm ass. She lifted up slightly and her ass cheeks spread back out. They closed on my cock again as she pressed back down and my entire head made it in.\n\n\"Oh yeah, there it is,\" she said sexily, drawing my attention to her face. \n\nHer eyes closed and she bit her lower lip as she lowered herself on to my length. When I was all the way in she, lifted back up slowly, leaving only the head inside. She slid it back in a little faster this time. I could not help but moan in ecstasy as she reached my balls, taking me all the way in. \n\nHer rhythm picked up as she lowered her hand with the vibrator attached and pressed her palm on my stomach. With her other hand she switched it on and I could feel her hand vibrating my stomach. Her hand moved to her pussy as she rode my cock.\n\n\"Holy fuck this feels good,\" she said fingering herself with my cock in her ass. \"You cannot cum until I tell you Mr. Thompson...understand?\"\n\nPanting and fighting blowing my load already, I grunted, \"I u...u...understand.\"\n\nShe was pumping me way too fast for me to hold off any longer. I tried to think of anything that could stop my eruption. When she began wailing it was too much.\n\n\"Oh shit, Oh shit, it feels so good!\" She yelled.\n\n\"Fuck,\" I grunted as all control was lost.\n\nI lunged into her as my first spasm shot in her tight ass, teeth clenched and repeating, \"AH, AH, AH,\" with each blast of cum. \n\nShe continued to ride me after my orgasm subsided, working her pussy with her vibrating fingers. My hard-on remained, maybe do to Viagra, and she was working herself up to climax number 5 for the afternoon. \n\n\"You are a baaaad boy Mr. Thompson!\" she almost sang. I am cumming again!...OH FUCK!, OH FUCK!, OH FUCK!, ...\n\nAs her climax subsided, she slid off my boner and leaned forward kissing me and worked her tongue in my mouth. She sat up and straddled me pressing down on my chest with both hands like a jockey riding a horse. My hard-on lay flat on belly and she straddled it, working her pussy against my boner, until her pussy lips straddle my shaft.\n\nShe worked it slowly up and down rubbing her pussy the length of me. She looked me in the eyes and began to give me new orders.\n\n\"Well, you were told not to cum yet, and you ignored my orders. There will need to be punishment. I can think of 2 options and I will let you choose. Either I will need to use my paddle on your shaved ass, or you can use that magic mouth and tongue of yours to take back your load...What's it gonna be 1 or 2?\" she asked.\n\nMesmerized by the feel of her pussy rubbing my dick, I did not respond, or even understand the question. I just lay there with my eye closed enjoying the sensation.\n\n\"2 it is then,\" she said jumping off me, spinning around and straddling my head. \"Get all that cum outta there tongue boy!\"\n\nI found myself looking at her stretched open asshole oozing with my cum. She was resting on her knees, the rest of her body standing straight up as she lowered her ass. I reached my tongue out to taste my jizz.\n\n\"Oh yes, lick it all off fuck toy! Danny is gonna love how well you are taking to your training!\" She said working the vibrating fingers into her pussy.\n\nI lick up and down her crack and sucked in all my escaping cum. I inserted my tongue into her distended hole. Needing to get it all, I pressed her to my mouth and began to suck her asshole.\n\n\"Oh fuck yes, suck my ass! Get that tongue up in there! I am gonna fucking cum again!\" she said riding my tongue.\n\nShe collapsed down onto my face, my tongue getting maximum penetration, working her vibrating fingers into her pussy, She began convulsing with her 6th orgasm of the day. As it subsided, she rolled off and collapsed on the bed next to me, head toward my feet.\n\n\"Mr. Thompson, you are a wild man!\" She panted, moving her hand with the vibrator on it to my raging cock.\n\nAs her fingers touched it, I began to moan immediately. Electricity shot through me as her vibrating fingers slid down my shaft onto my balls. I pressed my sack against her intensifying the vibration. I closed my eyes and laid my head back enjoying the magic fingers. She caressed my balls and taint causing me to spread my legs to give her full access. \n\nWorking my balls, her finger tip caressed my anus, causing me gasp as my asshole came alive with pleasure. I bent my knees, bringing my heels almost up to my ass, pushing my asshole closer to her fingers.\n\n\"Oh my! you really are sensitive there aren't you Mr. Thompson?\" she asked giggling.\n\nI nodded wildly, raising my pelvis hoping for another touch.\n\n\"Tell me what you want fuck toy, \"she said tapping my anus with the vibrating finger.\n\n\"Please touch my asshole. That feels so good\" I begged. \n\nShe complied and I thrust myself toward her. Again she pulled away.\n\n\"What else,\" she taunted.\n\n\"Finger fuck me please. I want to feel that in my ass!\" I pleaded.\n\nShe pressed the vibrating finger to my asshole and I pushed my self onto her. I breathed deeply as my whole body tingled. She began to work it in and out. \n\n\"Oh yes, finger fuck me!\" I yelled. Please suck me off! I wanna come with your finger in my ass! Please!\" \n\n\"How bout you jack off for me and tell my how you're my fuck toy,\" she command.\n\nI gripped my cock and she picked up her pace. As I stroked, she pulled out and slowly worked in two fingers.\n\n\"Please finger fuck my ass! Make me your fuck toy! I'm gonna cum for you! I'm your fuck toy!\" I yelled, Jacking myself of at machine gun speed.\n\nI spasmed as my cum spurted out in rapid fire streams, my body twitching with each jet. My hand jerking my dick so fast, cum flew all over my stomach and chest. I regained my composure as my orgasm ended. I milked the last bit of cum from my cock as she removed her fingers from my ass, causing me to sigh in disappointment. \n\nShe moved next to me sitting Indian style, exposing her naked pussy. She removed the massager from her hand and swirled the fingers she pulled from my ass, in the pool of cum close to my cock. When she collected a good sized glob she extended them toward my mouth.\n\nWhat a mess Mr. Thompson. You know you're going to have to clean this up,\" she said matter-of-factly.\n\nHer fingers approached my mouth and I extended my tongue to meet her. She stopped just out of reach with a taunting smile.\n\n\"Tell me what you want...beg for it fuck toy,\" she taunted.\n\n\"Oh Beth, please feed me my cum. I need it in my mouth,\" I whimpered.\n\nShe shoved her fingers in my mouth and I sucked them clean. She continued the process until all of the cum was cleaned up. Then she got up and went back to her bag. She pulled out a rubber bag with a tube and plastic probe on the end. Walking back toward the bed she tossed it to me and gave me my new orders.\n\n\"You are doing great Mr. Thompson. It's time for a little break in the action. I know I could use one. You know what that is; correct?\" she asked pointing at the bag I was holding.\n\nWhen I saw the holes in the probe on the end of the tube, I knew it was an enema bag. I nodded with embarrassment. \n\n\"Good, I am going to take a shower and clean up. I need you to go down to the lobby bath room and flush the system, if you know what I mean. You will fill the bag with warm water, insert the probe, and then release the clip on the hose. When you do that hold on because a flood is coming. \n\nNext, you need to hold it in as long as you possibly can, then release. You will need to repeat the process at least once. You should stay close to the bathroom for at least 30 minutes to make sure all the water is gone from your system. Then come back and we will get you showered up and see if you need shaved. See you in about 45 minute, take longer if you need.\" she instructed.\n\nShe went into the bathroom and closed the door while I put on my sweats, put the rubber bag into my gym bag and headed to the lobby. Luckily early Sunday evening the hotel was basically empty, so I had the bathroom to myself. I popped another Viagra to make sure I could keep up with my instructor for the rest of the evening. \n\nI followed the procedure twice, watching the lobby television between flushes. Other than a strange look from the desk clerk, after my 5th or 6th trip into bathroom, I went unnoticed. It took quite a while for me to get over the feeling of needing the bathroom again. \n\nWhen I returned to the room, a bit more than an hour had passed. She greeted me naked and led me to the shower. She turned it on, checked the water temp and stepped in. Through the curtain she gave me the next orders.\n\n\"Get those clothes off and come in, lets get you cleaned up and inspected Mr. Thompson.\" Her words waking up my limp cock. \n\nI stepped in and she greeted me with a wash cloth and bar of soap. She began cleaning the residue of cum from my chest and stomach. My boner returned as she washed my cock and balls, while looking me in the eye only inches from my face. She bit her bottom lip, indicating her pleasure, and leaned in to whisper. \n\n\"Mr. Thompson, you really are glad to see me aren't you,\" she said stoking my cock. She continued while rubbing my balls and taint area with her other hand, \"Smooth...I don't think another shave is needed yet. Turn around, let's wash your back and see how you did,\" she said smiling. \n\nShe started at my shoulders and worked down to my ass. As she ran the soapy wash cloth down my ass crack, she pushed me forward forcing me to bend over. I had to brace myself with my hands on the wall of the shower as she forced my feet apart with her foot. I heard the wash cloth hit the floor as she slid her soapy fingers down my crack, tickling my asshole. \n\n\"Smooth here too,\" she said, working her finger into my asshole, and making me gasp. \"You like that don't you fuck toy?\" \n\nI moaned and nodded pushing myself against her soapy finger. I began rocking, trying to fuck her finger. \n\n\"You really cleaned that ass out good...Tell me what you want fuck toy! Tell me what you are!\" she barked.\n\n\"I want you to fuck my ass like the fuck toy I am!\" I shouted.\n\nShe pulled her finger out, rinsed the soap of her hands, and stepped out of the shower. She left me bent over and wanting more. \n\n\"Wash your hair, dry off and meet me on the bed slut!. You are gonna love what's next,\" she said with joy in her voice.\n\nWhen I dried off and returned to the room, she was laying on her right side, with the massager strapped to her left hand. I walked toward her, with my cock at full attention. \n\nTapping the bed, she commanded me, \"face down legs spread!\"\n\nI did as commanded and her vibrating hand immediately began to caress, my ass. My face was pressed into a pillow and my cock pinned against the bedspread. She circled my ass cheeks repeatedly and tickle my balls, causing my to gyrate my hips, and hump the bed.\n\n\"You are such a fucking slut! On your hands and knees and beg for it!\" she said with a disgusted tone.\n\nAs commanded, I jumped up on all fours, cock pointing dead ahead. Please shove those fingers up my ass! I am your fuck toy! Please fuck my ass! I need you in my ass!\" I yelled.\n\nShe worked her middle finger in my asshole as far as she could reach, as I pressed myself against her gyrating my hips. \n\n\"You want more fuck toy?\" she laughed.\n\n\"Yes please, give me more! I wanna cum while you fuck my ass! I grunted.\n\nShe put in 2 fingers and then 3, working me into a frenzy, as I yelled again, \"Please I need to cum! Please make me cum!\"\n\nMy cock was rock hard as she pulled her fingers out and rolled off the bed. She placed a pillow on the end of the bed. I was confused; on all fours, cock and asshole waving in the wind. She went to the chair and reached into her bag, looked over at me, and gave new orders.\n\n\"Stand up and face the bed. Put your cock on the pillow, bend over and spread your legs. This is going to send you over the edge, fuck toy,\" she said with total authority. \n\nI did as commanded, noting how great the pillow felt on my cock. I looked back over my shoulder to see what she was doing. \n\n\"Eyes front fuck toy!\" she snarled. \n\nShe continued to rustle around in the bag, and then, I sensed her approach. My body tingled; not knowing what was happening. The mixture of fear and anticipation made me breath heavily. I felt her hands on my naked shaved ass, the force increasing as she pressed my cock against the pillow. Suddenly the feel of her breath tickled my balls. \n\n\"Fuucckk,\" I sighed. spreading my legs a little wider.\n\nI jerked slightly as the tip of her hot tongue brushed my balls. \n\n\"Don't even think about cumming until I tell you fuck toy!\" she ordered.\n\nHer tongue pressed against my balls as I felt her hot breath flood my asshole. She ran her tongue up my crack, making me moan loudly as she licked my sphincter and on up to my back. She moved back down as her hands spread my cheeks, giving her tongue full access to circle my asshole. I began to hump the pillow as her tongue pressed harder, She pulled back and slapped my ass hard with her right hand. \n\n\"Easy fuck toy, if you cum before you have permission, the paddle will burn your ass!\" she commanded.\n\nHer tongue returned and my respiration rate took off. I panted in disbelief, my ass could cause such ecstasy as her tongue probed me. I moaned on as she worked it slowly in and out. Then she did several big licks up and down my crack, and pulled away again. I glimpsed her coming around to the side of the bed and she began to speak. \n\n\"Now that I lubed you up, your turn to reciprocate, fuck toy,\" she ordered, shoving a large rubber cock toward me that was strapped to her waist.\n\nShe pushed my head down and shoved me toward it. I opened and she shoved it in. I tightened my lips around the strap-on dick and began to work it with my mouth.\n\n\"Deep fucking throat me bitch!' she said shoving it down my throat. \n\nShe pumped it in and out, drenching it in my saliva. I thought it was more than 2 inches in diameter. There was no chance I could take something that big in my ass, I thought as she pulled it out and took her position between my legs. I cringed when I felt the plastic head press between my buns. She held it there a second, and then, I felt her moving it slightly. Suddenly, it began, a low frequency vibration that echoed through the room. It was electrifying against my rectum. \n\n\"This thing works in both directions fuck toy. After I get mine, you can have your orgasm...and not before.\" she demanded.\n\nShe pressed it in, ever so slowly, the vibration tingling my balls. As it began to penetrate the pain intensified. When I gave a grunt she eased of and wiggled it slight to work it in while minimizing the pain. The pain peaked as the head popped in. As she continued to penetrate ever so slowly. I was amazed I could actually feel the veins in the plastic dick as it worked past my sphincter.\n\nI began to rock back and forth, picking up the pace as the pain passed. I could feel the vibration through the my entire cock, as the strap-on penetrated my ass. The pillow hugging my vibrating cock was getting me too excited to last very long. Suddenly she pulled out and moved to the side of the bed. \n\n\"You like that don't you fuck toy?\" she said pointing the plastic cock at me.\n\n\"Yes, please fuck me with it...please I need it,\" I pleaded while she jacked off the dildo. \n\nI could see she was actually working a knob on the other end of the strap-on against her clit. I grabbed it and worked with my hand as her eyes closed with pleasure.\n\n\"Jack me off cocksucker,\" she pleaded, dropping her hands to her side enjoying the stimulation.\n\nAfter a few minutes she was pumping her hips as she breathed more heavily. \n\n\"Beg for it fuck toy,\" she said moving back behind me.\n\n\"Please fuck me in the ass!\" I begged bracing for her penetration. \"Make me cum with your cock in my ass! Please, I need it...make me your fuck toy!\"\n\nShe eased it back in and began to pump slowly, pushing my cock into the pillow each time. Her pace increasing; her penetration deeper, I was loosing my mind as she began to yell out with pleasure.\n\n\"Oh fuck I'm gonna cum. Ah! Ah! Ah! Ah! Ah! Ah!\" she moaned. \"Cum for me Mr. Thompson, cum for me!\"\n\nIn unison I cried out, \"Oh fuck me please! I'm cumming! Fuck me hard!\n\nI collapsed flat on the bed, my legs leaving the floor, spread as wide as I could, pointing straight out like boards. My back arched as she pumped in time with my orgasm. She thrust deep as I shot cum into the pillow, out, and back in, as I shot the next wad. \n\n\"Oh fuck, fuck, fuck\" I screamed into the bed. \n\nMy orgasm complete, I dropped my legs back to the floor, as she continued to fuck me, finishing her orgasm. Then she grabbed my hips, pulling them up till I was standing on my feet. With my hands on the bed, bent over, she continue to be fucked in the ass. ",
        "\"Clean your fucking cum off that pillow cocksucker,\" she commanded. \n\nI reached down and pulled the pillow forward, bent down and began to lick my cum off. She pulled my head back by the hair and ordered me to beg for it, while she continued fucking me.\n\n\"Please, let me eat my cum like the fuck toy I am! I love to eat cum. Please!\" I pleaded.\n\nShe released me and I lapped it all up, while the vibrating dildo was stirring my cock again. I could feel her building to yet another orgasm, from the strap-on. She shuddered and moaned as she came again.\n\nTo my disappointment she removed herself from my hungry ass, pushing me no the bed and walking back to her bag of goodies. She removed the strap on while I caught my breath on the bed with another hard-on in need of attention. She pulled out a small curved dildo and began to tell me what was next.\n\n\"Mr. Thompson, you appear to be insatiable! I never really imagined you would be this anal centered. You make me proud. You are a trainer's dream, and I have one final test I bet you will pass,\" she said with pride in her voice. \"I need you on all fours facing the head of the bed. I think I can make you cum without touching your cock. If I do, will you be my fuck toy for life? \n\n\"Sure\" I said laughingly. \"But there is no fucking way. You just milked me dry.\"\n\nI watched as she worked the dildo into her wet pussy and took it all. She pulled it out and pressed it to my lips. I sucked the vibrating cock, tasting her nectar as my cock hardened. She took it back and teased my anus with the tip. Damn, she was a master at making me hard. She worked me in and out, but I had been ridden hard lately, there was no way I could cum without my cock being touched. \n\nShe slowly worked the curved dildo at various angles. I just closed my eyes and enjoyed her effort. She angled the curve down toward my dick, and tilted the dildo up working it in small circles. Suddenly, I felt a wave of pleasure in my balls, causing me to shudder.\n\n\"Oh yeah, found it fuck toy\" she said beaming. \"Want more?\"\n\n\"Yes please,\" I said anticipating more.\n\n\"I need you to beg like you mean it!\" she said moving the dildo back to the spot.\n\nI nearly sang it as she hit the spot, \"Please make me your fuck toy! Hit it again, it feels so fucking good! Make me cum, like the fuck toy I am! Oh please don't fucking stop! \n\nI tried my best to stay perfectly still, so she would not loose the spot, but my body shook. What the fuck was she doing. \n\n\"I am your fuck toy for life! Please, don't stop!, I am fucking cumming! Auggghhhhh!\" I growled in ecstasy\n\nI felt my balls pumping even though the well was almost completely dry. My cock was not even completely hard but, cum was pumping out in slow steady pulses. My mouth wide open and eyes closed. I could not make a sound as the orgasm kept going, I felt a feather like touch of her hand to my cock, and saw her cupping her other hand under my cock, collecting my spunk. My orgasm passed, and she fed me the last bit of cum emptied from my balls. \n\nAfter licking her hand clean, I collapsed onto the bed totally spent. \n\n\"Now I own you for life, Mr. Thompson. You just got to experience prostate milking. I am so jealous of men like you. I will never get to know what that feels like. You are my best student ever! Your training is complete. Danny will pay me a bonus, I am sure. I know you will make his day tomorrow! \n\nYou only have 2 hours until he checks in with you tonight, so I will let you get some rest. Trust me, I will be contacting you when I need service! I will text you my contact info later. I think I came 8 times today!\" she said with a satisfied sigh.\n\nI lay there whipped as she wiggled into her sun dress and packed up her bag. She sat on the chair putting on her heels, giving me a last peek at her shaved pussy. Why did I feel like a peeping Tom all the sudden? Man she looked good in that outfit. \n\n\"Thank you so much Mr. Thompson. I am fully serviced!\" she said, walking toward the door. \"I'll be in touch.\"\n\nThe door closed behind her to complete silence. I was stunned; was any of this real? What the fuck is happening to me. I lay there stunned and confused and actually dozed off. \n\nI was startled awake by a loud knock. Oh no! I fell asleep this must be Danny! I ran to the door and cracked it open to peak out as it flew open almost knocking me over.\n\n\"What the fuck Davey boy! I had to knock 5 fucking times!\" He said slamming the door.\n\n\"I'm so sorry Danny.\" I said pleadingly. \"Please don't punish me! I fell asleep! Pl, pl, please let me suck you cock to make it up to you!\"\n\nHe looked at my naked body and spent cock, and smiled, as I dropped to my knees. I noticed he was holding a small gym bag, and wondered what could be in it. \n\n\"It's ok Davey boy. I heard about your training. You are quiet the student to satisfy that teacher. Go ahead and grab a seat on the bed,\" he said, walking toward the chair. He continued as he took a seat, \"I am going to give you a break tonight and in the morning. It's only because I want to save up for tomorrow evening. Also, that will give you the morning to get us our cash.\n\nLet me tell you the plan for tomorrow. We are gonna get the band back together! All the boys from your house plus a good friend of ours. Numbers 2 and 3 have been saving up since they last unloaded in that filthy mouth of yours. You will meet number 4 tomorrow. They will remain anonymous, so the masks will be back.\"\n\nI shuffled uneasily remembering the night this path began. What the fuck! I tried to convince myself the Viagra was causing my cock to stir again, not the thought of servicing 4 guys at the same time. I tried to cross my legs and lean forward to hide it, but my growing cock head peeked out.\n\nHe continued, \"Tomorrow will be a no cum day for you. But, don't worry, we will all have a couple loads each for our fuck toy. I know it will be difficult with 4 cocks filling you up, but it is best to give your balls a break. If you perform well we will let you cum once on Tuesday and Wednesday. Thursday will be no cum and Friday night you may cum at will. \n\nOMG Davey boy, you are looking forward to this aren't you,\" he said, pointing to my boner. I am going to make this easy for you. From this point forward your participation will be strictly voluntary. You can be a free man tonight. But, based on the report Beth gave me on your training day, and the hard-on you have thinking about tomorrow, I am willing to bet we totally own you.\"\n\n\"The fuck you do,\" I muttered. \"What's the catch?\"\n\n\"No catch,\" he said calmly pulling my camera out of bag. \"Here is your camera with the only copy of the movie. I have my laptop with me and we can go through, file by file, to show you I do not have a copy. Ultimately you will have to trust me. You can take it and walk away. You will never see us again and we will forget the balance of the money you owe me by tomorrow. $3950 is the balance.\n\nSo, walk away tonight and go back to your normal life, or continue down the cock sucking, fuck toy path. It's entirely up to you. There is one catch to option 2. If you choose what's behind door number 2, as you cock is telling me you will do, there will be a $1000 per day cock rental fee. Come to think of it, with 4 of us tomorrow it will cost $2000...Agreed?\" he said, stepping toward me with his hand out to shake on it.\n\n\"Deal!\" I said, standing up and exposing my erection fully. \"I am out!\" \n\nWe shook on it. I sat back down placing the cum stained pillow over my cock. He rolled his eyes and shook his head smirking at me. \n\n\"Your dick has already decided, but, your brain just doesn't know it yet,\" he said knowingly. \"We will be here at 6:00PM tomorrow. If you are here, you will greet us in your thong panties and beg to suck our cocks. The $2000 will be stuffed in your panties. You will pay us, and service all of us until we are satisfied. You will not cum tomorrow or you will be punished by your own belt.\n\nIn the unlikely event you are not here, you are free to go. You will not contact me again, unless you have travel needs. Four cocks at once, is too much for a cocksucker, fuck toy to pass up. I bet you are gonna have to jack yourself off tonight just thinking about it. Remember no cumming after midnight until you beg to come Tuesday night.\n\n\"No fucking way!\" I said hiding my hard-on under the pillow. \"I will be home getting ready for Monday night football tomorrow.\"\n\n\"See you tomorrow cocksucker,\" he said gripping his crotch. \"It's already 10:30, I better let you masturbate thinking about the load I have been building up for you. Midnight, and you, will both be cumming soon. Bet you'll eat your own spunk when you're done too.\"\n\nWhen the door closed behind him, the silence was deafening. Alone with my thoughts, the reality of the day setting in and another hard-on was too much to take. Could it be that easy? How could I trust him not to have copied the movie? My mind raced. \n\nI decided rest would be the best thing. I had until 6:00PM tomorrow to clear out. I popped an Ambien, and laid down to sleep. My cock remained stiff as I tried not to think about servicing his hot cock. Four cocks at once. It was 11:30 and my adrenalin was overpowering the Ambien. \n\nI began stroking my cock, thinking of 4 glistening dicks in front of my face, moving from one to the next sliding them in my waiting mouth... I pumped the half load of cum my overworked balls could produce on to my stomach. I scooped it up with my fingers sucked them dry and faded off to sleep...\n\nTo be continued."
    ],
    "authorname": "rimaday",
    "tags": [
        "bisexual",
        "gay male",
        "begging",
        "cocksucker",
        "dominated",
        "non-consent",
        "forced",
        "reluctant",
        "rimming",
        "strap on"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/straight-invaded-pt-04-full-invasion"
}