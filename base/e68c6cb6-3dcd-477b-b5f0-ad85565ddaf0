{
    "title": "Love in All the Right Places",
    "pages": [
        "\"It's not just the money. It's the prestige, too. I mean, why go to all that time and expense if there aren't some really great perks, right? Sure, a lot of lawyers make good money, but no one really likes lawyers. But who ever heard a doctor joke? People love doctors and for good reason.\" He smiled at her then said, \"And I'm not talking about driving a nice car or...\" He pulled on the lapels of his very expensive suit and continued, \"Nice clothes. Those are just a couple of those perks of the job I'm talking about. You know, like being able to afford to travel or having a great home on the water.\"\n\nHe looked at her plate and said, \"You've barely touched your meal. Do you want me to send it back?\"\n\nBefore she could respond, he was snapping his fingers and calling for their server. \"Over here! Yes, you. Come over here!\"\n\nThe young woman walked quickly toward him and asked how she could help. \"The salmon isn't right. Take it back and have them send out another piece.\"\n\n\"Right away, sir,\" the young girl said as she reached for the woman's plated.\n\n\"It's fine, really,\" she said to the girl. \"I'm just not all that hungry.\"\n\n\"Nonsense! We paid good money to eat here, we should at least get the food done the way we want. Take it back,\" he said again.\n\nThe girl reached for the plate again and the woman gave in and let her take it. When she came back a few minutes later, the man didn't even thank her. All he said was, \"You can't let people walk on you like that, Paige. You gotta stand up for yourself.\"\n\nShe smiled politely and forced herself to take a bite.\n\nAs the man she was with continued to ramble on\u2014about himself\u2014she noticed a younger man at a table behind them who caught her eye and smiled. He nodded at the man she was with and shook his head. She was barely able to suppress a laugh and managed to keep it to a smile.\n\n\"What's funny about a kidney transplant? You work at a kidney center, right? I don't see anything funny about that.\"\n\n\"I wasn't smiling at that,\" she said quietly. The younger man held up a hand and opened and closed it rapidly pretending it was talking and she immediately understood he was mocking her date who kept going on and on about his profession, his home, his money, and his many possessions.\n\nThe server came back to get their plates and said, \"Can I get you some dessert or maybe a cup of coffee?\"\n\nThe younger man saw her start to speak then get cut off by her pretentious date. \"No thanks. We've had enough of this place. Just bring me the check, sweetheart.\"\n\nWhen she brought it, the doctor said, \"Okay, what do you say we get out of here?\"\n\n\"No,\" the woman said.\n\n\"What? What do you mean 'no'? We're leaving.\"\n\n\"No, you're leaving. I'm staying.\"\n\n\"Okay. Fine. Tell me, just how do you plan to get home?\" he asked snidely as he stood up.\n\n\"I'm not sure. Walk? Hitchhike? Call a cab? Anything that doesn't involve spending more time with you works for me,\" she said directly without sounding angry.\n\n\"Are you serious? You get asked out by a successful doctor and you act like this? Wow. Good luck ever finding someone like me.\"\n\n\"Thank you for dinner,\" she said. \"Both bites were delicious. But I want coffee and a piece of their pecan pie which you decided for me I didn't want or need.\"\n\nThe younger man smiled at and got the server's attention as this was going on. \n\n\"Fine. Suit yourself. Walk home. It's your loss,\" he said as he threw ten bucks on the table for her dessert and walked away.\n\nA few seconds later, the same young lady brought her a slice of pie and a cup of coffee.\n\n\"Where did this come from?\" she asked totally surprised.\n\nThe girl pointed to the younger man who smiled and raised his hand. He spoke just loudly enough for her to hear. \"I don't try and tell women I date what they want or don't want. Especially the ones who are both beautiful and intelligent.\"\n\nThe woman laughed politely and said, \"Would you care to join me?\"\n\nHe left his plate which he'd pretty much finished and sat down across from her. \"Hi, I'm Kirk Leonard.\"\n\n\"Good evening, Kirk. I'm Paige Allen who evidently isn't very intelligent. After all, it appears I just threw away a winning lottery ticket.\"\n\nBoth of them laughed then Paige thanked him for the coffee and dessert. \"This was very nice of you. Thank you, Kirk.\"\n\n\"My pleasure,\" he told her. \"Not to be too nosy, but do you have a way home on this dark, chilly Friday night? If not I'm happy to offer you a ride.\"\n\n\"I don't think so,\" she said. \"No offense, but I don't even know you, and I don't think I'd be comfortable riding with a stranger.\"\n\n\"No offense taken,\" he said with a smile. \"But by the time we finish dessert, we won't be strangers.\"\n\nShe laughed again then said, \"We? I don't see any dessert in front of you.\"\n\n\"You see, that's all part of my master plan,\" he told her very seriously.\n\n\"Master plan?\" she said before taking a small first bite. \"Mmmm. This is amazing!\" she said as she chewed. \"Sorry. I don't normally talk with food in my mouth. You were saying?\"\n\n\"Yes. My master plan. You see, I plan on letting you eat your dessert while I charm you by not talking about myself, not telling you what I do for a living, and not telling you how much I earn.\" He saw her smile then said, \"And then I'll order dessert for myself while you tell me all about you. Or...yourself or whatever the correct grammar is supposed to be. Oh, and you can skip the part about how attractive you are. I already have that down pat.\"\n\nHis nonsense made her laugh forcing her to put a hand over her mouth as she continued eating. \"You're cute but a little too young for my taste,\" she told him.\n\n\"That's fine,\" he said. \"I'm...an acquired taste.\" She laughed again before he said, \"I tend to grow on people.\" She didn't respond so he said, \"You know, like a bad fungus.\"\n\n\"Oh, my goodness. That was bad!\" she said.\n\n\"But I made you smile again.\"\n\n\"That was a pity smile because of your pitiful attempt at humor.\"\n\n\"Okay, but you're still smiling,\" he pointed out.\n\n\"Just how old are you, Kirk?\" she asked before taking another tiny bite.\n\nHe leaned closer, looked to his left then his right, then said, \"Twenty-three.\" He paused then added, \"And a half. Don't forget the half.\"\n\nPaige covered her mouth again as she laughed and said, \"Twenty-three? Do your parents know where you are?\"\n\nI looked around again then said, \"Yes and no. My mom thinks I went to a Boy Scout meeting, but my dad knows the truth. You won't tell her, will you?\"\n\nShe was genuinely laughing and smiling now. Not loudly but she was definitely laughing. \"You're right, you do grow on people.\"\n\n\"Told you,\" he quipped.\n\n\"So is this what you consider 'charming a woman', Kirk?\"\n\n\"Not normally, but when she's as attractive and sophisticated-looking as you, it's pretty much my only hope.\" He leaned her way again and asked, \"Why? Is it working?\"\n\n\"Maybe a little,\" she replied. \"So what is it you don't do for a living that you're not going to tell me about?\"\n\n\"Whoa, whoa, whoa!\" he said sitting up straight. \"I just watched you shred a very\u2014no, an extremely successful and clearly very rich doctor. Do you actually think I'm gonna tell you what I do after witnessing that kind of beat down? Were I to say something like floor sweeper, it'd be game over!\"\n\n\"I promise to be nice...er,\" she told him. \"I'm a social worker at the Northwest Kidney Center out by the airport. Does that make it any easier for you?\"\n\nKirk stopped smiling and said in an almost hollow-sounding voice, \"My sister, Meghan, goes there for dialysis. She's on the list for a kidney transplant.\"\n\nPaige set her fork down and said, \"Oh, my goodness. Kirk, I had no idea she's one of our patients and I'm so sorry. How long has she been listed and how's she doing?\"\n\n\"As you know, there roughly 100,000 patients waiting for a kidney. She's been on the list for four years and she's up\u2014or down to, depending on you look at it\u2014to number 12,735. Well, as of this morning anyway.\"\n\nPaige obviously felt very bad about what she'd said. \"Not having a family member on the list, I can't claim to know what she and your family are going through, but as someone who sees patients in need of a transplant all day, every day, I'm very familiar with the stress, the anxiety, the loss of hope in some cases, and all that goes with it. I feel terrible now for giving you such a hard time.\"\n\nKirk shook his head and told her, \"Don't. You didn't know and that shouldn't matter when it comes to people talking to one another for the first time. Having a sense of humor is really important and not just when it comes to matters of life and death. When it comes to being charming, I'd say you're doing a pretty fantastic job.\"\n\nPaige lowered her eyes briefly and said, \"Thank you, but I still can't help but feel bad. If there's anything I can reasonably do to help, will you please ask me?\" Kirk told her he would so Paige said, \"Is it possible we could get back to where we were before this very serious, very important matter came up?\"\n\nKirk smiled and told her, \"My father and I own an upholstery business and I've worked for or with him as long as I can remember.\"\n\n\"Talk about coincidental. I have a sofa and an oversized chair in serious need of reupholstering. Where's your business located, Kirk?\"\n\n\"We're in Burien just off of...\"\n\nPaige pretended to hit herself in the forehead and said, \"Leonard's Upholstery. Duh! I know exactly where it is. In fact, I was in there just last week checking on prices.\"\n\n\"I'll beat whatever price my dad quoted you by 10%. After all, we won't be undersold,\" Kirk said in an overly serious tone of voice.\n\n\"Oh, my goodness! You're the boy in the ad with your father!\" she said recognizing their slogan.\n\n\"That was me ten years ago, but yeah, that was yours truly.\"\n\nPaige smiled and turned her head slightly as she looked at him.\n\n\"What? Did I spill mustard on my chin? What are you looking at?\"\n\n\"It's working,\" she said with a smile.\n\n\"Oh, that's...wonderful,\" Kirk replied. \"But um, what is it exactly that's working?\"\n\n\"Your charm. It isn't great or anything, mind you. I've seen much better before. In fact, it's not even really good, truth be told. But it is working. You really are growing on me.\"\n\n\"Oh, that,\" he said becoming serious again. \"Yeah, you might want to get that checked before it spreads.\"\n\nPaige laughed again then told him, \"I guess I could trust you to take me home\u2014now that I'm pretty sure you're not a serial killer or anything.\"\n\n\"Who me? Nah, I just knock 'em off one at a time,\" he said matter of factly.\n\n\"I doubt don't that,\" she replied. \"You're cute enough to um...'knock off' a lot of girls so that doesn't surprise me at all.\"\n\nThe way she smiled at him emboldened him so he said, \"Thank you for finally admitting the obvious. I was beginning to think you might need glasses or something.\" She made a bit of a face which didn't slow Kirk down in the least. \"I mean, I realized how attractive you are the first time I saw you and had you asked me, I'd have admitted it immediately.\"\n\n\"I admitted you're kind of cute.\" She smiled then said, \"I'm also willing to admit I don't have the best track record when it comes to dating.\" \n\nPaige sighed then said, \"Tonight is an excellent case in point. I don't know what it is, but I have this uncanny ability to pick one loser after the other. I'm a reasonably intelligent, very well-educated woman, so it seems it shouldn't be so hard to find a really decent guy.\" She paused then added, \"But experience tells me it is. Or maybe I'm just making it more difficult than it needs to be.\"\n\n\"Maybe you're just looking for love in all the wrong the places,\" Kirk offered.\n\n\"Perhaps,\" she said forced to concede he might be right. \"I work around a lot of doctors so it doesn't seem unreasonable to go out with them when they ask. Maybe I just haven't met the right one yet.\"\n\n\"Sometimes we have to widen the net a little.\"\n\n\"Oh, I see. So that I can catch the much-younger...reasonably cute...upholsterer?\" she said in a humorous way that told him it wasn't meant to be mean.\n\n\"Right. Or even the floor sweeper or the guy who leans on his shovel on those road projects where no one ever seems to be working. Or...\"\n\n\"Okay, you've made your point. But I still don't see anything wrong with doctors in general.\"\n\n\"Me, either. I mean, I'd consider asking one out,\" he said feigning smugness. \"Well, if she was cute enough, of course.\"\n\n\"Ugh! If I still had my salad plate I'd throw a piece of lettuce at you!\" she said feigning disgust.\n\n\"How's the pie, by the way?\"\n\n\"Oh, the pie! I completely forgot.\" She cut off a piece with her fork and held it out for him. \"Here, see for yourself.\"\n\nBoth Paige and Kirk had to stand up slightly to make it work, but he leaned over the table and let her feed it to him. He tried not to laugh at the way she held her hand under his chin in case some of it fell or dribbled out of his mouth the way his mother'd done when he was very young.\n\n\"Mmmm. That is good,\" he said as he looked for the server to get her attention. \n\nHe watched Paige take another bite then said, \"You know we just shared silverware.\" She lowered her head slightly, raised her eyebrows and looked at him. \"No, this is serious. There's an Indian legend here in Washington that says once two people share the same fork, they're forever bonded by an invisible force.\"\n\n\"Right. I believe the English translation is 'wishful thinking'. Or maybe...Bee Ess.\"\n\nKirk couldn't help but laugh as the server came order to take his order. \"So tonight's rather unpleasant turn of events aside, is there someone special in your life, Paige?\"\n\n\"I'm tempted to say something cutesy like 'my parents', but I'll be nice this one time and just tell the truth. No, there's no one special in my life. How about you?\"\n\n\"Me, either. But I just graduated from college last year so I'm not exactly worried.\"\n\nPaige cut her eyes at him and said, \"Unlike someone...my age who's biological clock is ticking away, right?\" \n\n\"I didn't say that,\" Kirk said holding his hands up in a kind of 'I surrender pose.' \"I mean, if I was going to say something like that I'd have said it's 'hammering so loudly you can't hear yourself think.'\"\n\nPaige tore off a piece of pie crust and threw it at him. \"So much for that charm of yours...buddy,\" she said pretending to be deeply offended.\n\n\"I'm not going to ask your age\u2014for several reasons, my health chief among them\u2014but I will say that no matter what it might be, you're an incredibly beautiful...and charming...woman.\"\n\nPaige's expression softened as she said, \"Thank you, Kirk. That was very nice to hear. Sometimes I feel anything but beautiful.\"\n\n\"Then you need to stop hanging out with doctors who are either too blind or too arrogant to see how great you are.\"\n\n\"Okay, you are once again back in my good graces thanks to your continuing charm offensive,\" she said as she took another bite just as Kirk's pie arrived.\n\nThey made small talk about work and college and life in general. Paige was a fellow University of Washington alumnus who had a master's degree in social work who clearly enjoyed the challenges of her job at the kidney center.\n\n\"A bachelor's was plenty for me. I got mine in business administration, but I have to say I've learned more from dad about actually running and administering a business than I did in four years of classroom study.\"\n\n\"But it's helpful to have both experience and credentials, right?\" Paige offered.\n\n\"It certainly can't hurt,\" he agreed. \"It's possible I might want to move into some other business down the road and understanding general principles is always a good thing.\"\n\n\"Do you not like working with your father?\" she asked.\n\n\"No, I love working with him. He's actually my best friend. Well, other than my mom and sister.\" Kirk smiled then said, \"In fact, after I graduated from college, his gift to me was 30% ownership in the business. That percentage goes up each year until we get to 51-49. Then whenever he finally retires, the business will be mine and for now at least, I can't see myself selling it. However, the future has a habit of unfolding in ways we don't often anticipate. My sister never expected to be suffering from kidney failure at 18, but that's the hand she was dealt. So sometimes we...\"\n\n\"That's so true and so unexpected to hear from someone your age.\"\n\n\"Watching someone you love slipping away right in front of you and being powerless to help can do that to a person,\" he told her.\n\n\"Life really is short and sometimes it really can be unpredictable and even cruel.\"\n\n\"It seems tragic to spend it looking for something to make us happy when the answer is often right in front of us,\" he said with no hidden agenda.\n\nPaige took his comment differently. \"So perhaps the key is to open one's eyes rather than to keep looking for meaning or even love in all the same...and...wrong places.\"\n\n\"How else can we be sure we're not missing something meaningful unless we're looking...in every place? The universe can indeed be cruel, but it sometimes gives us opportunities. We just have to remember to watch for them.\"\n\nKirk paid for his own dessert and tipped their server before saying, \"Shall we?\"\n\nHe helped Paige with her coat before stepping out into the cold fall air and opened the restaurant and car doors for her. She thanked him and said, \"You're also a gentleman. I like that very much.\"\n\n\"My parents raised me that way and I do try. It's not always easy to be a gentleman these days when some women wanted to treated no differently than a man\u2014and not just at work where such things matter. It's also a lot easier to be a gentleman to a woman who's a lady. And a beautiful one at that.\" He closed her door then went around and got in and started the car.\n\nThey got better acquainted on the 20-minute ride to her upscale apartment and the subject of upholstery came up again. \n\n\"I'll be happy to come to your place and pick up your furniture assuming, of course, you've already selected your fabric. And I will give you a discount.\" He smiled when he said it and Paige smiled back.\n\n\"I have some swatches at home and I've narrowed it down to two. Give me a couple of days, and I'll give you a call.\"\n\n\"Fair enough,\" Kirk told her as he pulled in. \"I'll walk you to your door.\"\n\n\"That's not necessary,\" she said even though he'd already turned off the engine. \n\n\"Maybe it isn't necessary, but it's the right thing to do. And please don't open your door. That's my job.\"\n\nOther than a street light in the parking lot, it was very dark and Paige couldn't see his face too well, but she couldn't help but smile again. \n\n\"If you insist,\" she told him finding herself more and more charmed by this attractive, younger man.\n\nHe quickly walked around, opened her door, then helped her stand. \"Thank you,\" she said as he closed it.\n\nHe then offered her his arm which she also accepted. He escorted her to her door then waited for her to unlock it. \n\n\"I'm glad we met, Paige. I enjoyed meeting you and getting to know you. I'll look forward to your call,\" he told her.\n\n\"Same here, Kirk. I could never have imagined meeting someone your age who's as...\" She seemed to be searching for the right word. \"Impressive...as you are. I had a really nice time tonight.\" She smiled then added, \"Well, with you, anyway.\"\n\nKirk laughed at the reference to Dr. Strangelove. \"Same here,\" he said. \"Listen, would you maybe like to try this again sometime only without the whole pompous-doctor-at-the-beginning thing?\"\n\nPaige laughed and said, \"You know, before we talked, I'd have said 'no' without hesitation in spite of your rather handsome exterior.\" She smiled then said, \"But after getting to know you and giving what you said some thought, maybe I should try looking in some different places.\"\n\n\"Is that a 'yes'?\" he asked with a smile.",
        "\"It is a 'yes',\" she told him sweetly. He handed her his phone and asked if she'd do the honors. Seconds later he had her number then while still standing right in front of her, he texted his number to her.\n\n\"Fast mover,\" she quipped when she heard her phone buzz.\n\n\"Life's too short to waste a single moment.\" He smiled again then said, \"Goodnight, Paige.\"\n\n\"Goodnight, Kirk. And thank you again.\"\n\nAfter hanging up her coat, Paige sat down and looked at the swatches laying beside her on the sofa. She was staring at them yet not seeing them as she ran the events of the last couple of hours through her mind. She'd said 'yes' to one of the most successful doctors she knew; one who routinely performed organ transplants, and had had a terrible time. Then she'd spent maybe an hour with a much-younger man who'd made her feel both beautiful and special.\n\nOn the surface, it didn't make any sense. Yes, Kirk had a college education and he really was rather cute, but when it was all said and done, he was really a boy; a boy who already owned a third of a successful business and who seemed to know more about life, love, and romance than she or any of the other medical professionals she tended to date.\n\nMaybe he had a point. Maybe she was looking for love in all the wrong places. And what if he was right about needing to 'cast a wider net'? \n\nHer final thought was by far the most troubling. What if the eleven-year difference in their ages didn't matter? \n\n\"That's insane!\" she told herself as she realized she'd been staring at the same swatch since she sat down.\n\nEarly the next morning Paige noticed she had a text from Kirk: \"Good morning, Paige. I hope you slept well last night. I had a little trouble as I found myself unable to stop thinking about someone I'd just met. :-) As to our date\u2014you did say 'yes', didn't you? I was wondering what you enjoy doing. So...I have a couple of questions for you. Which do you prefer: Watching the Seahawks or going to a concert? Which is more appealing? Going hiking or visiting an art gallery? Which interests you more? Wine tasting or going skydiving? If I haven't just scared you off, I'm very much looking forward to seeing you again. Oh, and in case you forgot. I think you're incredibly beautiful. Kirk.\"\n\nShe set her phone down then realized she was smiling again. \"He really does grow on you, doesn't he?\" she said to herself.\n\nShe thought over his questions for a while then replied: \"I did sleep well last night, thank you. And I'm also...strangely...looking forward to seeing you again. Yes, I intentionally avoided using the word 'date'. :-) As to your questions I would say: Seahawks, art gallery, and...can I choose both wine tasting and skydiving? lol. Actually, I've never jumped out of an airplane and while it scares me to death, I think it might be fun. As in...scary. Oh, I think I've decided on a color so you could come by and pick up the furniture at your convenience. Paige.\"\n\nShe smiled again before setting the phone back down. It buzzed as she let go of it and that startled her. It was a reply from Kirk. \"Is now an acceptable time to come pick up your furniture? It's not that I can't wait to see you or anything...it's just business, right?\"\n\nShe hadn't even taken a shower let alone put on her makeup and a part of her wanted to tell him it was only 9am and that it was rude to even suggest coming over, but another part of her disagreed. She thought to herself, \"This is a perfect opportunity to shoo this kid off. Once he sees the real me and how I look in the morning, he won't be back and then you can move on to someone more appropriate.\"\n\n\"Now is fine. Come on over!\" she typed. \n\nShe was wearing a gray University of Washington Huskies sweatshirt and a pair of faded jeans but she did go brush her long, blonde hair and pull it into a ponytail almost immediately after telling Kirk he could come over. \n\nAs she looked in the mirror, she wasn't sure what to think. At 34, she really was still attractive or at least she thought she at least reasonably so. Her hair was a little below chin length and there were only some very fine wrinkles around her eyes. Her lips were soft and full and she'd kept up with her figure since she was in junior high school so...all in all, she didn't feel too bad about herself. Then again, he was 23 and although she hadn't told him so, he was about as handsome as anyone she'd seen in a very long time. Kirk had thick, black hair and a pair of amazingly bright, blue eyes and an equally amazing smile. Clearly, he also took very good care of himself.\n\nSuddenly she felt very old and very unattractive. She panicked and walked quickly back to the living room and picked up her phone to ask him to wait until later in the day when she saw a large truck that had 'Leonard's Upholstery' on the side pulling into her driveway. \n\n\"Damn it all to hell!\" she said. She went to the door, smoothed her hair then opened it just as Kirk reached for the doorbell.\n\n\"Oh, hello there,\" he said as the door opened before he could reach the button.\n\nShe peeked out from behind the door and said, \"I guess I should ask you to come in, huh?\"\n\n\"Only if you want me to take your furniture.\"\n\nPaige opened the door and saw another man get out of the van and opened the back.\n\n\"Is that your father?\" she asked pointing outside.\n\n\"In the flesh!\" he told her. \"So...may I come in?\"\n\n\"Oh, right. Um...sure,\" she said letting him pass her by.\n\n\"So you said the sofa and...what else?\"\n\n\"This,\" she said pointing out the other piece. \"And in this color,\" she told him handing him the swatches.\n\n\"Nice choice!\" he said smiling at her. \"Nice sweatshirt, too.\"\n\n\"Oh, this. Right. I look pretty glamorous, don't I?\"\n\n\"Actually, you do,\" he told her in a very serious tone yet with a smile.\n\nPaige laughed that kind of laugh people do when they feel uncomfortable. \"Yeah, right.\" She stood there feeling silly for a moment then said, \"I actually thought if you saw the real me you might come to your senses and run like...\"\n\n\"Good morning!\" they heard Mr. Leonard say. \n\n\"Oh, hi! Please come in!\" she said. When he walked up to her Paige recognized the face and said, \"I love your commercials!\"\n\n\"We won't be undersold!\" he said pointing at the camera that wasn't there. He was also a decent-looking man for someone who appeared to be around 50 and Paige saw the resemblance immediately.\n\nThe elder Leonard smiled and said, \"I'm Dirk Leonard. I know, I know. Dirk, Kirk. What can I say? It just seemed to fit.\"\n\n\"My dad was a huge fan of the original Star Trek. You know, Captain James T. Kirk and all that?\" Kirk explained.\n\nDirk smiled again then said, \"Kirk told me you were beautiful, and he was right.\"\n\nPaige found herself feeling like a school girl when Kirk said, \"What? You didn't believe me? Come on, Dad. I know beautiful women.\"\n\n\"Okay!\" Paige said feeling both flattered and uncomfortable as she thought about Mr. Leonard thinking about a woman her age dating her son. If only she had a rock she could crawl under or some way to unsend that last text.\n\nThe two men picked up her couch and carted it out to the truck then came back and picked up the other piece. \"I'll meet you outside when you're done, Kirk,\" his father said. \"Nice meeting you!\" he said to Paige.\n\n\"You too, Mr. Leonard,\" she said as he waved on his way out.\n\n\"It's Dirk, okay?\" he said halfway down the walk not stopping to hear her reply.\n\n\"Anyway, you were saying you thought you could scare me off if I saw you in something other than a beautiful dress? I'm still here so...how's that workin' for you?\" Kirk said grinning from ear to ear.\n\n\"Strange?\" she said, her voice rising as she said it. \n\n\"Oh? How so?\" he asked.\n\n\"Well, I was pretty sure you'd see me then tell me something had come up and that'd you'd call me...and that would be it.\"\n\n\"Uh-huh. Epic fail there,\" he said still smiling. \"Any other ideas to get rid of me?\"\n\n\"I'm not sure,\" she told him. \"I mean, if...this...didn't scare you off, I may be in real trouble here.\" She hated herself for smiling but she also couldn't help herself. \"Damn, he's cute!\" she thought silently as he stood there still smiling at her.\n\n\"I'll be by to pick you up at 2 o'clock this afternoon,\" he announced out of the blue. \"And what you're wearing is perfect.\"\n\n\"Oh, no! Wait just a minute. Are you actually thinking about taking me where I think you're thinking about taking me? Please say you're not. You're not, are you?\" Her heart was pounding at the thought of actually jumping out of an airplane.\n\n\"You're not actually thinking about reneging, are you? That's why I asked,\" he said relishing her discomfort. \"It's a tandem jump. You'll be hooked up to a fully-certified jump master and you'll be perfectly safe.\"\n\n\"Ha! Like accidents never happen!\" she said her brain now in panic mode. \"I'm not so sure about this, Kirk. Wine tasting or an art gallery sound very...safe...right about now.\"\n\n\"I'll be here right at two and no need to change. You look perfect,\" he told her ignoring everything she just said. He smiled and started walking away.\n\n\"I may not be here!\" she told him.\n\nHe turned around and smiled again then said, \"Don't make me come hunt you down. I will find you, you know!\"\n\n\"Uh-huh. Why do I think you really mean that? Don't answer that.\" She stood there staring at him with her arms folded then said, \"Okay, but if you get me killed...\"\n\n\"Two o'clock. Be ready!\" He got to the door then stopped. He turned around around then said, \"You look really great in the morning, by the way, Paige. Beautiful, in fact.\"\n\nLike his father, he didn't wait for her to reply, he just closed the door and called out to his dad. \"Okay, Dad! Fire it up. Let's get a move on!\"\n\nShe stood by the window and watched him get in the truck. She was still feeling afraid from thinking about going skydiving, but she was also feeling something else; something that confused and frightened even more than jumping out of a perfectly good airplane.\n\nNot long after they left Paige decided to call her best friend, Angie, and tell her what was going on. They'd been friends since grade school and could talk about anything with complete confidence the other would never tell.\n\n\"What's going on, girl?\" Angie said when she saw who was calling.\n\n\"Where to start?\" Paige said.\n\n\"Uh-oh. This sounds bad. Talk to me.\"\n\n\"If it was anyone but you, there's no way on earth I'd say a word about this, but because of our unique relationship, I want to run something by you.\"\n\n\"I'm still listening, hon,\" Angie said. \"You're kind of scaring me here, though.\"\n\n\"Well, I'm a little scared here, too. I'm going skydiving in a few hours.\" She paused and waited for the reaction.\n\n\"You're WHAT? Tell me you did not just say you're going to jump out of an airplane! Girl, we are way too young for a mid-life crisis so what in the world are you thinking? No...why are you not thinking?\" \n\nBefore Paige could answer, Angie said, \"Oh, wait a minute. There's a guy involved with this idea, isn't there? Uh-huh. You met someone and he asked you to go skydiving. Is it that cute doctor you had dinner with last night? Did you 'do him'? Please tell me you did. My marriage is SO boring so I have to live through you, Paige. Did you?\"\n\n\"Are you done yet?\" Paige said knowing how her friend could go on and on and on.\n\n\"Sorry. Yes, I'm done. Go ahead.\"\n\n\"Well, yes,\" Paige began before being cut off.\n\n\"You did! O...M...G! How was it? Was he good? Tell me everything and don't leave out a single detail!\"\n\n\"Angie? Hello? You're doing it again.\" There's was a moment's silence so Paige said, \"No, the date with the doctor was the date from hell so he most definitely did not 'do me', okay?\"\n\n\"Damn! He seemed so...rich!\"\n\nPaige made a scoffing noise then said, \"But...I did meet someone.\"\n\n\"In the same night? Oh, my God! I want your life SO bad! Who is he? Is he a doctor, too? Or maybe some musician who's super laid back and handsome as hell? Dish, girl!\"\n\nPaige drew a deep breath and exhaled loudly. \"He's...very handsome and...\"\n\n\"I knew it! You get all the hunky guys and I get...Ed. Not that I'm complaining, mind you. We've got two great kids and the sex isn't all that...\"\n\n\"Angie? Yoo-hoo?\" She stopped talking again and let Paige finish.\n\n\"So that's the good part. Oh, and he's a college graduate and a really nice, too. But...\"\n\n\"Oh, boy. There's always a but. Let me guess. He's married, right?\"\n\n\"No, he's definitely not married.\"\n\n\"Is he gay? Oh, God. Don't tell me you fell for another gay guy like Richard.\"\n\n\"I didn't fall for Richard. I just...didn't know, okay?\" Another brief moment of silence.\n\n\"Okay, so here's the bad part. Are you ready for this? And don't you dare laugh.\"\n\n\"Not one chuckle. I swear,\" Angie told her knowing she couldn't keep that promise, not even with her best friend.\n\n\"He's...he's 23 years old.\"\n\n\"Oh, my freakin' GOD! Did you just say twenty-three as in barely old enough to drink alcohol?\"\n\n\"Yes,\" Paige said sheepishly. \"Twenty-three. Oh, and a half. So not just plain 23 but 23.5\" She said the word 'point' as though she were reading a thermometer.\n\n\"Okay, so how do you go out with a handsome...rich...doctor and end up thinking about jumping out of a plane with some kid who's...twenty-freakin'-three???\"\n\n\"It's complicated,\" Paige said not knowing what else to say.\n\nThere's was a lengthy silence before Angie spoke again. \"So that's it. We are now officially MILFs. Jesus. I feel old.\"\n\n\"MILFs? What's a MILF?\"\n\n\"Oh, sorry. You don't fantasize about other men because you're not tied down to just one man. A really good man, mind you,\" she added quickly. Paige knew it was all talk and that Angie would never cheat, but she also knew that after 14 years of marriage, her best friend did look around, at least casually.\n\n\"So what's a MILF?\"\n\n\"Oh, right. It means 'mother I'd love to...fuck.'\" \n\nShe heard Paige laugh then said, \"Don't blame me. I didn't make it up. But it's what guys his age call women our age. We're MILFs. Well, you are anyway. I doubt any handsome guy who's 23 would want himself some of this.\" Angie still looked good but after two kids and 14 years of marriage, she'd gained some weight and didn't feel that good about her appearance. Paige, on the other hand, had never gotten married, never had a child, and still looked hot as hell. \n\nAngie often told her, \"I hate you. You know that, right?\" when some cute guy would smile or flirt with Paige but not even look at her when they went somewhere together.\n\n\"Okay. Now I get it,\" Paige said. \"But it's not like that. He's...different.\"\n\n\"Honey? ALL guys are like that. Trust me, okay? He may not be upfront about it, but a hot guy that young is probably gettin' it all the time. They also know women our age are hitting their sexual prime, so if he hasn't put the moves on you yet, it won't be long. And hey, if it was me? I'd be puttin' the moves on him! After all, he can't be more than a fling so if you want my opinion, go for it. Do him and then do him again for me. Oh, and then give me every detail!\"\n\nOne of Paige's biggest fears had always been getting married too soon\u2014like Angie\u2014and feeling exactly like she was feeling a few years later. Even if one ate filet mignon for dinner, having it every night would be\u2014BORING! Now here she was at 34 wondering if she'd ever get married or have children. \n\nShe shook her head then thought to herself, \"If you want a husband and children, what in the world are you doing with this...kid?\"\n\n\"Paige? You still there?\" Angie said.\n\n\"Oh, sorry. Yeah, I was just thinking. That's all.\"\n\n\"Were you thinking about...him doin' you?\" she asked.\n\n\"Ahh! Give it a rest already, would you?\" Paige said pretending she was exasperated.\n\n\"Okay, okay. But back to the reason you called, are you really gonna do this? Even if you don't...do him? Sorry, I couldn't resist.\" Angie laughed and Paige had to laugh, too.\n\n\"I'm thinking I am,\" she said just then making up her mind. \"We only live once, right?\"\n\n\"Yeah, and you might stop living today if you do that.\" She paused then asked, \"How cute did you say this guy is?\"\n\nPaige laughed again then said, \"Very. And he's a real gentleman. And very intelligent. He's part owner of an upholstery business with his dad. Oh, and his sister is on the transplant list. I'm betting she's one of our patients.\"\n\n\"Oh, my goodness. How sad is that? Is dialysis still helping?\"\n\n\"Evidently it is. I don't know his sister or at least the name doesn't ring a bell. But yeah, I think I'm gonna do this. Kirk, that's his name, said I'd be doing a tandem jump. You know, where you're kind of like attached to the instructor?\"\n\n\"Oh, sure. I've seen that on TV. It actually looks like a blast. Hey, do you think he's got an older brother I could maybe do something in tandem with?\"\n\n\"Angie, you are incorrigible!\" Paige said trying not to laugh.\n\n\"All right. If you're gonna do it, then have fun. Just one question. What would you like me to say in your eulogy? That you died happy?\"\n\n\"Agghhh! Why do I even bother?\" Paige said laughing loudly.\n\n\"You have fun, girl. And if you um...have fun...I want...\"\n\n\"Yes, I know, I know. You want details. Sheesh! Thanks, Angie. You're the best. You know I love you, right?\"\n\n\"Yeah, yeah. You know I hate you, right? I mean if this cute 23-year old does do you? I really will hate you. Just so you know.\"\n\n\"Bye, Angie,\" she said. Just before she hung up she heard Angie tell her she loved her, too.\n\nPaige thought about changing but after what Kirk said, the only change she made was adding a pair of tennis shoes to her elegant ensemble sometime before two o'clock.\n\nHe showed up right on time and when she let him in, Kirk asked, \"Nervous?\"\n\nShe put her ice-cold hand on his cheek and said, \"Any other questions?\"\n\nKirk laughed then said, \"Just one. Are you ready?\"\n\n\"Ha! Like I have a choice, right?\" she said as she picked up her purse.\n\n\"Well, we could stay here and watch I Love Lucy reruns,\" he quipped.\n\n\"Hey, I love that show!\" she said as the headed toward his car.\n\n\"Oh, yeah. I forgot you watched the originals when you were a little girl!\" he said ducking and throwing his hands up in self defense.\n\n\"Smart ass!\" she said as he opened her door.\n\nOn their ride out to the tiny airport where the skydiving school was located they made small talk about upholstery then about Paige's work, and that brought up the subject of Kirk's sister again and how she was doing.\n\n\"She's strong,\" he told her. \"She's stronger than I am, in fact. I worry about her all the time and well, she calls me names indicating how weak I am.\"\n\nPaige laughed. \"Would one of them have an alternate meaning of 'cat' by any chance?\"\n\nKirk cut his eyes toward her as he drove and said, \"Uh-huh. Among other things.\"\n\nPaige feigned being offended and said, \"You really are terrible!\"\n\n\"I thought I was a smart ass?\" he said keeping the banter going mostly to keep her mind off of the upcoming jump.\n\n\"You can be both, you know,\" she told him very authoritatively.\n\n\"But that would make me a terrible smart ass. I kind of thought I was rather...accomplished in that area.\"\n\n\"Oh, you're very accomplished at being a smart ass\u2014smart ass.\" The second he looked her way again, Paige burst out laughing. \"I'm so sorry! But the way you just looked at me!\"\n\n\"Hmmm. You didn't seem to be complaining about the way I was looking at you during dinner after your dated bombed.\"\n\n\"Oh, really? Just how were you looking at me, Kirk?\" she said pretending to be indignant that he'd be 'looking' at all.\n\n\"Like you're a very beautiful woman,\" he said confidently without looking at her.\n\n\"You mean\u2014a much-older woman, right?\"\n\n\"No, I pretty much said exactly what I meant, Paige,\" he told her with equal confidence.\n\n\"Well, we're gonna have to get your eyes checked then,\" she said unwilling to give in.",
        "\"Oh, I see just fine,\" he told her. He turned toward her and did an obvious 'once over' looking her all the way up and down. \"And my eyes tell me I'm right. You are definitely beautiful.\"\n\nPaige wanted to come back with something snappy. Anything to avoid feeling what she was feeling. But she found she had nothing to say. Nothing except, \"Thank you, Kirk.\"\n\nHe pointed to a sign and said, \"That's our turn. If you look out to the east you can see the airport.\" She turned and looked in the direction he was indicating and saw a propeller plane sitting next to a hangar.\n\n\"Oh, my God. We're actually doing this, aren't we?\" she said, the fear showing in her voice when reality set in.\n\n\"Yes, we are,\" he told her as he turned off the main road.\n\nAs they pulled up, Paige could see the airplane and a couple of men near it. That guy looks a lot like your dad,\" she said pointing to one of them.\n\n\"That's because it is,\" Kirk told her. \"He's the pilot.\"\n\n\"Really? He owns a business and he's a pilot. Nice. Is the other guy the one I'm tandem jumping with?\"\n\n\"No, that's our mechanic, George. He's been here for years. Good guy.\"\n\n\"Good thing,\" Paige quipped. \"I don't see anyone else. Is he inside?\" she asked.\n\n\"Yes,\" he said. \"Inside the car. With you.\"\n\n\"You? You're the instructor?\"\n\n\"Fully qualified and at your service. I've been skydiving since I was ten years old. I've got close to 300 jumps under my belt,\" he told her before going around to open her door.\n\n\"Why am I not surprised?\" she said with a smile.\n\n\"Come on. We've gotta do a safety class inside and have you sign some paperwork.\"\n\n\"Is my death warrant one of them?\" she quipped.\n\n\"Nah, we only kill a handful of new jumpers a year. I'm sure you won't be one of them.\" He saw the face she made then said, \"Pretty sure, anyway.\"\n\nSince Kirk was wearing the only parachute, the class was very basic. In less than 30 minutes, they were gearing up for the jump. \n\n\"You don't have a shot of vodka or a valium on you by chance, do you?\" Paige asked once she was ready to go.\n\n\"No way,\" Kirk said. \"You don't want to take the edge of this experience. There's only one first time and you'll want to remember every detail for the rest of your life. Trust me on that, okay?\"\n\n\"The rest of my life. Hah, hah. Which is what? Twenty or thirty minutes?\"\n\n\"Black humor is a perennial favorite around here. It's very popular in the military, too. Or so I hear.\" Kirk smiled at her and said, \"Okay. We're all set. Let's do this!\"\n\n\"Can I change my mind?\" Paige asked sheepishly.\n\n\"Nope.\" Without asking, he took her hand and said, \"Come with me, young lady.\"\n\n\"I really hate you, Kirk. You know that, right?\" she said as he pulled her along.\n\n\"Yes, but you'll love me in less than half an hour. You can trust me on that, too.\"\n\nThe plane was already running when they got on board. Kirk helped her buckle in to a jump seat then gave his dad the thumb's up. \"We're going up to 13,000 feet so we can free-fall for about a minute or so,\" he yelled over the engine noise.\n\n\"Oh, goody,\" Paige said snidely.\n\n\"Still nervous?\" he hollered.\n\n\"Who me? No, I just feel like I'm about to throw up. Other than that, I'm just peachy.\"\n\n\"You'll be fine. I promise,\" he yelled into her ear.\n\nThe ascent was slow and gradual but Paige felt like she was in the Space Shuttle. When they finally leveled off, Kirk said, \"Okay. Time to get buckled in.\"\n\nHe stood up, unbuckled Paige, then offered her a hand. \"I still hate you!\" she said as he spun her around and turned her into a human appendage.\n\n\"Okay, shuffle over to the door and we'll wait for that light to turn green,\" he said pointing to a light by the door that was red.\n\nWhen they got the door, Paige freaked out. \"I can't do this! I can't go out.\"\n\nShe tried to push back but Kirk wouldn't let her. She didn't see the light turn yellow as he said, \"It'll be fine. It's just pre-jump jitters. Everyone has them.\"\n\n\"No, it's more than that. I'm scared to death. I want to go back to the...\"\n\nThe light turned green and Kirk lifted her slightly and stepped out. \"What the HELL are you...\"\n\nAnd that was that. Paige was screaming bloody murder and Kirk couldn't stop laughing. He immediately steadied them up and Paige stopped shrieking when she saw the ground below them. \"Oh, my God! This is SO amazing!\" she hollered.\n\n\"Told you!\" he said triumphantly. \"You're flying!\"\n\n\"I am. I'm really flying! This is the greatest thing ever!\" she yelled.\n\nKirk slowly spun them in a circle a couple of times just to give her perspective. \"Okay, I'm gonna open the chute in a few seconds. Remember what I taught you?\"\n\n\"Yes!\"\n\nAnd just like that, Paige was upright looking out over the horizon as they slowly drifted back to earth.\n\n\"Remember how to land?\" he said loudly.\n\n\"Yep!\" she told him as she saw the ground coming up.\n\nJust as they landed, Kirk pulled on the risers and they floated to ground. Paige lost her balance and pulled them over in a heap. That made her laugh and by the time Kirk fell on top of her, he was laughing, too.\n\n\"Let me up!\" she said.\n\nHe turned sideways, unbuckled her and stood up. As he did, Paige jumped up and into his arms and threw hers around his neck. \"That was the BEST thing EVER!\" she hollered. She pulled back, her smile so big it looked painful, looked into Kirk's eyes then kissed him before letting go and yelling, \"Oh, my GOD! That was SO freaking awesome!!\"\n\nKirk was gathering the parachute as Paige continued to celebrate and bleed off adrenaline. He knew that accounted for 90% of her behavior, but he'd never been kissed on the lips before by any first-time jumper. Nearly every women he'd jumped with had hugged him and many had kissed him the cheek. But this was a first and he couldn't help but smile as he pulled the material together.\n\n\"So I take it you liked that all right?\" he teased.\n\n\"That was...incredible! I can't wait to tell everyone I know I jumped out of an airplane!\"\n\n\"And lived,\" Kirk couldn't help adding. \"I'm glad you enjoyed it. Come on, we need to walk over to that concrete pad where our trusty mechanic will meet us shortly and give us a ride back to the hangar.\n\nPaige talked non-stop the entire way about every detail of what happened. The only words Kirk got in were, \"Aren't you glad you didn't take that valium?\" She playfully hit him when he said that then went right back jabbering while barely taking a breath.\n\nHis dad was landing as they pulled into the hangar and in less than ten minutes they were out of their harnesses and ready to go. Paige waited for Kirk's dad then gave him a monster hug and a prolific round of thank-yous which made him laugh but in a polite way. \"We like our jumpers to have fun. So do you think you'll want to learn to skydive?\"\n\n\"Oh, wow. I hadn't thought about it until just now. But...yes, I think I'd like that.\"\n\n\"Get with Kirk. He teaches the classes. I'm sure he'll take good care of you,\" he said before excusing himself.\n\n\"I like your dad, too\" she said still bubbling with enthusiasm from the jump.\n\n\"Too?\" he asked just to see if he could get a response.\n\n\"Yes...too,\" she said still smiling from ear to ear. \n\n\"Oh, okay. Just checking. Yeah, I'm kind of fond of the old guy myself,\" he told her. \"As I told you, he's actually my best friend.\"\n\n\"I'm envious. I love my dad, but we're not super close. I'm more so with my mom, but I have a best friend named Angie who truly is my best friend. Someone you can share anything and everything with, you know?\"\n\n\"I'd like to meet her sometime,\" Kirk said casually. \n\nPaige smiled and said, \"Hmmm. Something tells me she'd like to meet you too, but for very different reasons.\"\n\nKirk smiled back but didn't 'go there.' \n\n\"I've got a little surprise for you,\" he said. He handed her a CD case with a DVD inside. \"It's a video of your first jump from my helmet cam. It only takes a couple of minutes to download and burn to a disc.\"\n\n\"Oh, wow. That is just so cool. Thank you, Kirk. How much do I owe for that? For all of this, actually?\"\n\n\"We can call it even if you'd let me take you on an actual date,\" he said flashing that great smile her way.\n\n\"I thought this was a date?\" she said jokingly. She turned serious then asked him, \"Do you really want to go out with me, Kirk?\"\n\n\"Of course, I do. Why wouldn't I? I love hanging out with you, Paige. I have fun with you whether we're just talking or jumping out of airplanes. So yes, I'd very much like to go out with you.\"\n\n\"You don't care that I'm...ancient?\" she said with raised eyebrows.\n\n\"My dad is 55 and he's the youngest-acting person I know. You're a veritable babe in the woods compared to him.\" Kirk stopped talking, smiled at her, then added, \"Speaking of babes, you are most definitely a babe. No doubt about that.\"\n\nThat made Paige smile then laugh softly. \"I have to admit I really enjoy...hanging out with you, too. I just wanted to know where we stand. I mean, all kidding aside, you are a very good-looking guy and I have to assume there are all kinds of girls your age interested in you so I...\"\n\n\"And yet I'm asking you out rather than them. For that matter, I'm equally sure there are other guys...you know, the um...successful doctor's age...very interested in you.\"\n\n\"Not too many,\" she said rather quietly. \"And you know what? I'm okay with that.\"\n\n\"So is that a 'yes' or are you trying to find an excuse to avoid going out with me?\" he asked smiling at her and looking directly into her eyes.\n\nPaige suddenly had a very serious look on her face as she said, \"I'm not looking to avoid spending time with you, Kirk. I was giving you the opportunity to not have to spend time with me.\"\n\n\"Well, thank you...I think. But I wouldn't be asking you out if I wanted to avoid being with you, right?\" He moved closer to her and put his hands on her shoulders and said, \"I can't think of anything I'd rather do than spend time with you, Paige.\"\n\n\"Okay. Well, if that's the case then I would very much like to go out with you,\" she said, her heart pounding in her chest. Her hair was a mess from the jump and she was feeling anything but sexy in an old sweatshirt and jeans, but she could somehow tell that didn't matter to this handsome young man she wished with all her heart would kiss her right then and there.\n\n\"I guess I should take you home, huh?\" he said as he lowered his hands. He realized how that sounded and chuckled before saying, \"Let me rephrase that. I should probably take you back to your apartment.\"\n\nPaige smiled but didn't laugh. Her heart was racing again and in spite of herself she said sweetly, \"Either one would be fine.\"\n\nKirk smiled and raised one eyebrow causing Paige to break eye contact then say, \"Well, let me just grab my purse and we can be going.\"\n\nThey chatted about the jump on the way back to her place, then the subject of his sister came up again. \"Is there anything I can do?\" Paige asked.\n\n\"Thanks, but I don't think so. She's mentally very strong and we all know it's just a matter of time. It's a race between a new kidney and...\"\n\n\"Right. Well, a positive attitude is so important. I spend a lot of time working with patients who are desponded, depressed, and even...\" She didn't want to say the word as though it might somehow change things.\n\n\"Suicidal?\" he offered. \"Not Meghan. She's a fighter. She ran cross country and played tennis all through high school and she's smart. Really smart. She graduated 4th in her class with a 3.92GPA. I did okay with a paltry 3.62, but she's just so...smart. She's pretty, too.\" Kirk looked over at Paige and said, \"Her boyfriend of over a year dumped her a couple of months after she started dialysis. What a di...\" \n\n\"Dick?\" she said finishing his sentence this time. \"It's sad to me that people are so shallow. Yes, I know they weren't engaged or married, but if you really like someone, how can you abandon them when they need you the most?\"\n\n\"Obviously, he's not mature enough to handle something like this and honestly? When I was 18 I might not have been able to, either. Meghan's illness has really taught me a lot about things like love, caring, and commitment.\"\n\nPaige couldn't help but stare as he drove. How could someone that young have that kind of perspective on life? When she was 23, she was anything but committed to anyone or anything but having fun. She wasn't flighty or ditzy. She was just a typical young woman attractive enough to date or hook up with a lot of different guys which she regularly did for quite a few years. Since turning 30, she'd stopped the hook-up thing altogether and began looking for longer (but not long)-term relationships. For the last year, she'd finally reached the point where she was not only ready to settle down but afraid she might have waited too long. She found herself willing to date men she'd otherwise have turned down. Men who who were...stable...rather than gorgeous; men who offered security over other things she still valued but less so as time passed by.\n\n\"So how does that sound?\" Kirk said causing Paige to snap out of whatever dream world she'd been in.\n\n\"I'm so sorry, Kirk. I...I was totally daydreaming over here. Can you say that again?\" she asked apologetically.\n\n\"That depends on what you were daydreaming about,\" he said as though he'd been deeply offended.\n\n\"Oh, I don't know. Maybe about the sage advice you gave me to stop looking for love in all the wrong places.\"\n\n\"Ah!\" he said. \"Yeah, sometimes we've got to think outside the box.\" He looked over at Paige then smiled. \"How's that for being cliche?\"\n\n\"Not too bad,\" she said. She looked right at him and told him, \"I'm definitely trying to look in the right place these now.\"\n\nHe glanced back at the road then looked back at Paige. \"Wow. You are so beautiful,\" he said out of nowhere.\n\nPaige flipped the passenger-side mirror down and saw her hair in a tangled mess and laughed. \"You are either the sweetest guy ever or a terrible liar.\"\n\n\"I never lie,\" he said overly seriously. He held up three fingers and said, \"Scout's honor.\"\n\n\"So back to your question; the one I missed because I was daydreaming. What did you ask me?\"\n\n\"I invited you to go on a wine-tasting tour with me next Saturday,\" he said. \"I was thinking about The Tasting Room. Have you been there before?\"\n\n\"No. No I haven't. I've been to Rotie Cellars and the Bartholomew Winery, but not The Tasting Room. I've heard it's very pleasant.\"\n\n\"Their website says they're open from noon to late on Saturdays so I was hoping we could maybe go to dinner somewhere nice then head over to The Room.\"\n\n\"Okay, but only if you'll let me help with the expenses,\" she told him.\n\n\"Oh, no. Sorry. I was raised that when a man asks a woman out, he pays. Period.\"\n\nPaige smiled and said, \"Ah. You're a chauvinist.\"\n\n\"Chauvinist? No. Traditionalist? You betcha. I ask, I pay.\"\n\n\"So...if I asked you, you'd let me pay?\" she inquired.\n\nHe smiled at her and said, \"In that case, we could discuss it.\"\n\nShe didn't respond, she just kept staring at him. \n\n\"What?\" he said.\n\n\"Oh, nothing,\" she told him. \"Just...looking. That's all.\" She assumed the reference went right over Kirk's head, but he got it loud and clear.\n\n\"Do you know the next line to that song?\" he asked.\n\n\"Song?\"\n\n\"Looking for love in all the wrong places. That song.\"\n\n\"Um...no. I don't believe I do,\" she told him.\n\n\"It goes, 'looking for love in too many faces', searchin' their eyes and lookin' for traces, of what I'm dreamin' of...\" He looked back over at her and asked, \"So are you finding any of what you've been dreaming of?\"\n\n\"I'm not sure yet, but it's...looking...very promising,\" she told him never taking her eyes off of him.\n\nKirk smiled at her and held out his hand. She looked down at it then back him and returned his smile before taking it. \"Did I tell you how beautiful you are?\" he asked again.\n\n\"You might have, but I tend to forget things. You know, at my advanced age. So I don't mind hearing you repeat yourself.\" Her voice was soft and sweet. \n\nLeonard squeezed her hand and said, \"I think you're very beautiful, Paige.\"\n\nHe walked her to her door and as they stood there he turned toward her and said, \"So...I'll see on Saturday then.\"\n\n\"Yes. Saturday. And thank you for today, Kirk. That was quite possibly the most fun I've ever had...on a date.\"\n\nHe smiled then said, \"You mean with your clothes on, right?\"\n\nHis comment surprised her so much she couldn't help but laugh. \"Kirk Leonard! Shame on you!\" she said realizing he was right.\n\n\"That wasn't very gentlemanly of me, was it?\" he said as he stared into her eyes.\n\n\"Maybe not, but it was true, so...\"\n\nHe put his hands on her shoulders again and told her, \"Saturday seems like a very long way off.\"\n\n\"Yes, it does,\" she agreed. \"A very long way off.\"\n\n\"I'll have your furniture done by Wednesday. I could bring it by\u2014special delivery\u2014if you like.\"\n\n\"Wednesday sounds much better than Saturday,\" she said, her eyes locked with his.\n\nHe brushed her messy hair back then said quietly, \"Wednesday seems like a very long way off, too.\"\n\n\"I was just thinking the same thing,\" she said barely above a whisper.\n\n\"Perhaps if we had something to tide us over it wouldn't be quite so bad,\" he said as he stroked her cheek with the back of his fingers.\n\n\"Yes. Definitely,\" she agreed. \"Something to remember.\"\n\n\"And look forward to again,\" he said as he leaned in to kiss her. Paige gladly accepted his kiss and ran her arms up through his and around his neck while he put his around her back. \n\nThe kiss lasted a good 3-4 seconds and ended very slowly. \"Something like that,\" Kirk said.\n\n\"Yes. Something like that,\" she said. \"Or...this.\" She pulled him to her for another kiss and near the end offered the tip of her tongue which was met with his.\n\n\"I like your idea better,\" he told her.\n\n\"Well, I suppose I should get inside now that all my neighbors have seen me kissing you on my front porch.\"\n\n\"Oh. Are they watching?\" he said looking around behind and to the sides.\n\n\"Maybe,\" she said. \"You never know, right?\"\n\n\"True,\" he replied. \"Why don't we...give 'em something to talk about?\"\n\n\"You really know your music, don't you?\" she said with a smile.\n\n\"I'd say pretty much anything to have the chance to kiss you again right now.\"\n\n\"No need for gimmicks,\" she said. \"All you have to do is ask.\"\n\n\"May I kiss you again?\" he said. Not waiting for an answer, he pulled her in close and kissed her even longer than either of their first two.\n\n\"I think you should go now,\" she said, her eyes staring into his.\n\n\"That's probably a good idea,\" Kirk replied.\n\n\"It's not that I want you to go,\" she began saying.\n\n\"I understand,\" he told her, nothing more needing to be said.\n\n\"Okay, so...thank you again for a wonderful day, Kirk.\"\n\n\"Thank you for agreeing to do this with me,\" he said again stroking her cheek.\n\n\"I like doing things with you,\" she said very quietly. \n\n\"And I with you,\" he told her. \"I'm looking forward to doing more things with you.\"\n\n\"Same here,\" she said. She began lowering her arms then stood on her toes and kissed him one more time. \"So...bye, Kirk,\" she said before letting him go.\n\n\"Bye, Paige,\" he said waiting for her to go inside. She sat her purse down then peeked out the window and walked him walk away. \"Even his butt is cute!\" she said to herself.\n\nWhen he got in his car, Paige grabbed her cell phone and dialed Angie's number.\n\n\"Paige? You're still alive?\"\n\n\"Oh, yes. Very much so,\" she said happily.\n\n\"How was it? Did you enjoy it?\" Angie asked excitedly.\n\n\"The skydiving or...the kissing?\" she said with a big smile on her face.\n\n\"The kissing? Oh, my God! I want to hear everything and don't you leave anything out, you hear me?\"\n\nPaige spent nearly an hour on the phone with her best friend talking about this new, amazing, incredibly handsome, very young new man in her life. Just before they hung up, Angie told her again, \"You know I hate you, right?\"",
        "\"Uh-huh,\" Paige said back. \"You have every right to because he is so...amazing!\"\n\n\"Oh...my...God! Are you in love with this boy?\" she asked. \"You are, aren't you? Oh, my God! I haven't heard you talk about anyone like this in...in...ever!\"\n\n\"I don't know about that, but whatever this is, it feels really, really nice!\" Paige admitted. \"I feel like I'm 18 again, Angie. Everything is so interesting and wonderful and I feel so...alive.\"\n\n\"I don't really hate you, Paige. I envy you. Just be careful, okay, hon?\" \n\n\"It's too late for that,\" she told her friend. \"I am so gone for this guy. I came this close to asking him in and by 'asking him in' I mean...\"\n\n\"Oh, okay. Now I hate you!\" Angie said making both of them laugh like school girls before they finally hung up. \n\nTo her great delight, Kirk texted her that evening and told her again how much fun he'd had with her. But what she loved the most was when he reminded her how beautiful she was. She sent him back a sweet reply and that's when she realized she was not only wet, she was drenched down below. \n\nIt had been a very long time since she'd pleasured herself, but that night she and her favorite little vibrator spent some quality time together as she dreamed about 'doing new things' with her handsome, young...boyfriend, Kirk Leonard.\n\nTheir texting continued and stayed pleasant and lighthearted for the next two days. By Wednesday however, Paige was having second thoughts again and needed to talk to Angie.\n\n\"So he's bringing your furniture back tonight?\" she asked Paige.\n\n\"Yes. He'll be here around eight so we have maybe an hour or so to talk.\"\n\n\"This won't take that long, hon,\" Angie told her. \"These are 'yes' or 'no' questions. You ready?\" Without waiting for a reply, Angie began.\n\n\"Is he attractive?\"\n\n\"Very.\"\n\n\"Is he polite, thoughtful, and caring?\"\n\n\"Yes.\"\n\n\"He has a college education and is part-owner of a business, correct?\"\n\n\"Uh-huh.\"\n\n\"He's never been arrested, doesn't do drugs, and doesn't drink to excess. Right?\"\n\n\"Um...right.\"\n\n\"Has he ever said or done anything violent or even mean to you or toward anyone that would lead you to believe he has a temper or anger issues?\"\n\n\"No.\"\n\n\"Does he compliment you and make you feel beautiful and special?\"\n\n\"You know he does.\"\n\n\"Does he make you laugh and feel young?\"\n\n\"Yes, but...\"\n\n\"Do you think him about him all the time?\"\n\n\"Pretty much,\" Paige said realizing she was losing\u2014or maybe winning\u2014on every question.\n\n\"Okay, I don't understand what's bothering you,\" Angie told her.\n\n\"Well, I mean, he's 23, for heaven's sake.\"\n\n\"Oh, right. Good point. Dump the poor bastard. Now!\"\n\n\"Angie! Stop!\" she said. \"You're not helping.\"\n\n\"No, you're not listening,\" she said correcting her long-time friend. \n\n\"You make it sound so simple.\"\n\n\"It is simple, my dear. He has a hundred things in his favor and one against him and that's only an issue if you make it one. Oh, there are two issues, actually.\"\n\n\"What else? What did I miss?\" Paige asked hoping Angie would fill in the missing piece of the puzzle she knew she was overlooking.\n\n\"He's not a millionaire or even a doctor, is he?\" she said turning the screws ever harder.\n\n\"Okay, okay. I get it. The age difference is the only...problem.\"\n\n\"Paige? Age isn't a problem unless you...\"\n\n\"All right. I get that, too. But what if I let him in? Way in. And what if he realizes a few months down the road what a big mistake he's making and dumps me?\"\n\n\"Based on the hundred good qualities, I don't see that happening. But you know what? If it does, you'll get up, dust yourself off, and start over. Listen. What would you do if one of these successful doctors did the same thing? What if you fell for one of them and he ended up cheating on you with some hot, young nurse? Would you never date another doctor because he might hurt you someday?\" She answered her question herself. \"Of course you wouldn't. So give Kirk a chance. He seems pretty amazing to me and I haven't even met him yet. Although I wouldn't mind that especially if he does...\"\n\n\"All right, all right! That's enough. I get it. Any other advice for me before I get in so deep I can't get out?\"\n\n\"Follow your heart, hon. You're a smart girl. You have good instincts. If it feels right, it probably is. If it isn't, then and only then, get out. We only live once, you know. What's the worst that could happen? And more importantly, what's the best that could happen?\"\n\n\"You're right. You're absolutely right. Getting hurt is a risk anytime we open our hearts to someone and based on everything I've seen, I trust him. I just wish he was you know...maybe 30 or even 28.\"\n\n\"Or...25, right?\" Angie offered in a friendly way causing Paige to laugh. \n\nPaige sighed then said, \"I think I'm gonna go change. I'm still in my work clothes so...\"\n\n\"Wear something cute and sexy but not over the top. Be obvious but not too obvious. Oh, and make sure it comes off easily. No buttons in back or...\"\n\n\"Goodbye, Angie!\" she said trying to be mad.\n\n\"Bye, sweetie. And please do anything and everything I'd do if I could, okay?\"\n\n\"What would I do without you?\" Paige said.\n\n\"Let's not go there, okay?\" Angie said with a laugh. \"Love you, girl.\"\n\n\"You, too. And thanks. Seriously. Thank you.\"\n\n\"Happy to help. Take care and...have some fun, okay?\"\n\nWith that Paige signed off and went to find just the right thing to wear. \"Oh, right. No buttons in the back,\" she said out loud laughing as she looked into her closet.\n\nIn the end, she settled on a white silky-looking top with spaghetti straps. It was very pretty but also reasonably modest and it would look great with a pair of black pants. Classy but not overly dressed. Sexy but not slutty.\n\nAt the last minute Paige added a strand of pearls and changed earrings to match. She brushed her hair out and rechecked her makeup. \"Not bad,\" she said looking at herself in the mirror.\n\nIt was five 'til eight when the doorbell rang and Paige was still in the bedroom. She headed out then stopped. She nearly ran into the bathroom and added some lip gloss then ran out to the living room. She slowed then walked to the door, took a deep breath, smiled, and...opened it.\n\n\"Mr. Leonard! How nice to see you again,\" she said as she looked for Kirk somewhere behind him.\n\n\"It's Dirk and Kirk's running a little late,\" he told her. \"He said he'd meet me here by eight and I'm a couple of minutes early. I can't carry the sofa by myself but I can wheel the other piece in on a dolly if that's okay.\"\n\n\"Oh, sure,\" she told him. \"Can I help?\"\n\n\"Maybe when I get to the door, but otherwise, I'll be fine. Be right back,\" he said with a smile.\n\nShe watched him lower the rear gate with the piece sitting on his dolly. He carefully wheeled it off and pushed it up the sidewalk. \"If you just help me get over that hump right there,\" he said pointing to the floor under the jamb.\n\nPaige grabbed it and Mr. Leonard pushed. \"No problem,\" he said. \"Where would you like it?\"\n\n\"Oh, right over here,\" she said admiring the work. \"It's beautiful! You guys did such a nice job. I love it!\"\n\nHe placed it then said to Paige, \"Kirk did your stuff by himself. He spent most of last night and Monday night at the shop doing this. Something tells me he thinks you're pretty special, Paige.\"\n\nPaige didn't even know what to say in response so Mr. Leonard continued speaking. \"I've seen him date a lot of girls in the past, but I've never seen him like this before.\"\n\n\"Like this?\" she asked seeking clarification.\n\n\"It's not my place to say, but if it were, I'd say he's got it pretty bad for you.\" The older Leonard smiled then said, \"I'll wait out at the truck for Kirk then we'll get your sofa brought in.\"\n\nHe turned to walk away and Paige found herself saying, \"Mr. Leonard? Um...excuse me\u2014Dirk. I, um...I think Kirk is pretty special myself, but well, I was wondering. Do you think that me being, you know, older is, well...\"\n\nHe smiled and said politely cutting her off. \"Again, that's none of my business so I'm the wrong person to ask. All I'll say is love has a strange way of sometimes finding us especially if we're not looking in that direction. Love doesn't know numbers, Paige. It only knows what the heart tells it.\"\n\n\"Now I know how Kirk is so wise about so many things,\" she told him. \n\n\"Just follow your heart, Miss Allen,\" he said before wheeling the dolly back out.\n\n\"Follow your heart,\" she said quietly. \"Seems like another wise person told me to do the very same thing very recently.\"\n\nIt was nearly a quarter after before Kirk pulled up, and he went straight to the truck to give his dad a hand. As they came up the walk, Paige called out to him. \"Hey, there!\"\n\n\"Sorry I'm late,\" he said as they carefully moved the large sofa toward the door. \"I needed to get my car and make a stop on the way.\"\n\nShe noticed he wasn't wearing his Leonard's Upholstery shirt and as he got closer she could see he was dressed rather nicely for delivering furniture.\n\nThe two men had to lift the sofa and turn it to get it inside, but this was old hat to them. \"Do you want it in the same place?\" Kirk asked.\n\n\"That'd be perfect,\" she said wanting to help but knowing the best thing she could do was stay out of their way. It was just as beautiful as the other piece and Paige couldn't stop going on about it.\n\nKirk's dad pointed out a couple of things Paige didn't know as evidence of fine craftsmanship. \"We try and do our best for all our customers, but this takes a whole lot of extra time and effort.\" He winked at Paige and said, \"That's not something we do for just anyone.\"\n\nHe slapped his son on the back and said, \"I gotta get the truck back so I can get home before your mom gets worried.\"\n\n\"Thanks, Dad,\" he told him as the older man thanked Paige for choosing them. \n\n\"We won't be undersold!\" he said pointing right at Paige before saying goodnight.\n\nThe door closed and Paige said, \"Kirk. This is just so...amazing. Thank you. It looks beautiful.\"\n\n\"You're welcome,\" he told her. \"I um...I have something for you in the car. Give me just a sec, okay?\"\n\n\"What? Kirk, I don't need anything else. This is more than enough. This is...\"\n\n\"Be right back!\" he said ignoring her pleas.\n\nHe was back in less than a minute and was carrying a beautiful bouquet of a dozen red roses.\n\nPaige's eyes opened wide as she put her hands over mouth. \"Oh, my goodness. Kirk, they're beautiful!\" she said as he handed them to her. \"Thank you so much!\"\n\n\"You're welcome and...you're beautiful, Paige.\" He moved closer and even with the large bouquet between them, he pressed as close as he could.\n\n\"This really was way too long to wait to see you again,\" he told her as her eyes met his.\n\n\"I know,\" she said quietly. \"I thought Wednesday would never get here.\"\n\nHe leaned over the flowers and kissed her. Softly at first, then harder and deeper. Paige offered him her tongue immediately and moaned softly when he did the same to her.\n\n\"I hope it was worth the wait,\" he said with a smile as the kiss ended.\n\n\"I'll say,\" she told him still staring at him. \"You look really nice, Kirk.\"\n\nHe was wearing a dark gray sweater over a dark blue shirt with a pair of jeans that Paige was having a hard time not staring at. She loved the way a good-looking man looked in a pair of jeans that fit just right and these fit Kirk...just right.\n\n\"You, too,\" he told her sincerely.\n\n\"Um...let me put these in some water, okay?\" She went to the kitchen then said, \"What can I get you to drink?\"\n\n\"Do you have any beer?\" he asked.\n\n\"Yes, as a matter of fact, I do. Give me just a sec, okay?\"\n\nKirk went into the kitchen and as she trimmed the stems, he put his arms under hers from behind. \"I missed you,\" he said kissing her neck.\n\nPaige stopped trimming and sighed as he continued kissing her neck and earlobe.\n\n\"I missed you, too,\" she told him craning her neck to expose it to him. She put her hands on his and held them close to her. \"That's nice,\" she said as he nibbled.\n\n\"You smell really good,\" he told her as he kept nuzzling. He playfully bit her neck then said, \"Mmm. You taste good, too.\"\n\nPaige knew she was losing control and in spite of wanting to spend a quiet, romantic evening with her new boyfriend, she lifted his hands up and placed them just under her breasts. \"Do I feel good, too?\" she asked before pushing them higher.\n\nKirk cupped both of them and gently squeezed. \"Very,\" he whispered in her ear.\n\nPaige moaned softly as he fully cupped her breasts and gently played with them. \"Kirk? Would you mind waiting for a while for that beer?\"\n\n\"Not at all,\" he said holding a breast in one hand while stroking her silky hair with the other. \"What would you like to do instead?\"\n\nShe pushed back against him and even through the denim material, felt him. \"That feels so nice,\" she said as he pushed back.\n\n\"Would you like to maybe...see how it feels?\" he asked using her words.\n\n\"Oh, yeah,\" she told him. \"I would love that.\" She turned around, put her arms around his neck and gave herself to him. Their kisses became very deep and very passionate. \"Come with me,\" she said forcing herself to break their kiss. She took his hand and led him toward the bedroom.\n\nWhen they got inside she said, \"If we're moving too fast, will you tell me? I like you so much, Kirk, and I don't want to ruin this by...\"\n\n\"I like you very much too, Paige,\" he told her. \"We could wait, but why? I won't like you or want you any more on Friday night or next week. So no, we're not moving too fast. Not when I can't sleep at night because I'm thinking about you. So unless you think it's too fast...\"\n\nPaige began clawing at his clothes pulling and unbuttoning and unbuckling while he gently slid the slippery blouse over her head. Less than a minute later they were both completely naked and again passionately kissing each other.\n\n\"I want you so bad,\" she told him reaching for him as they kissed. \"Mmmm. You feel so good!\" she purred as he came to life in her hand.\n\nKirk returned the favor by bending down and taking a nipple into his mouth and giving it the kind of attention Paige was craving. She gasped as he sucked hard and used his tongue, circling her hardened nipple. \"That feels so good,\" she moaned.\n\nLeonard slowly walked her backward toward the bed then gently pushed her onto it. \"Ladies first,\" he said sliding between her legs. He smiled at her then went to work.\n\nPaige put her hand behind his head and moaned loudly as his tongue slowly lapped her clit with its entire length. \"Oh...God!\" she cried as he repeated the action several times.\n\n\"You taste so good,\" he told her as he continued pleasuring her. \n\nPaige pulled an extra pillow under her head so she could watch her beautiful lover work his magic. \"You are so handsome,\" she moaned as a finger gently slid inside her. \"I love that,\" she cooed as he began preparing her for the real thing. Moments later, a second finger joined the first. Paige hissed with pleasure as his tongue continued the work up above. \n\nKirk pulled his head back and while his left hand was inside her, he used his right to play with her swollen clit. \"Oooo!!\" she cried as he circled it with the tip of one finger, pressing softly then harder then softer again. \n\nHe felt her hand pulling his face in hard and he knew she was on the verge of coming. He replaced his finger with his tongue again and pushed her button until he felt her body tighten and then shudder. \"Oh...fffuck!\" she whimpered. \"Yesss! Oh, God...just like that!\"\n\nWhen her body calmed, he climbed on top of her but Paige pushed him over on his back. \"I am not a selfish lover,\" she said with a smile. She pulled her hair back behind her ear and lowered her warm, wet mouth over his rock-hard cock. It had been many years since she'd been with someone this young who could get that hard and she loved the way he felt in her mouth. The term 'bone' suddenly had real meaning to her. 'Steel shaft' seemed more appropriate, but bone worked quite well, too.\n\nPaige took him deep several times then came up briefly to say, \"I love your cock. It's so thick and hard!\" She went back down and did everything she knew to do in order to make this as enjoyable for him as he'd just done for her, as she cupped his balls while taking him in her mouth.\n\n\"Come here, honey,\" he said pulling her up.\n\n\"Mmmm. I like the sound of that word,\" she said smiling happily.\n\n\"Let me just grab some protection, okay?\" he said. He jumped off the bed, got his wallet out, and opened it up.\n\n\"You really were a Boy Scout, huh?\" she teased.\n\n\"Always prepared,\" he told her as he quickly rolled it on.\n\n\"Speaking of prepared,\" she said pulling him toward her. \"I am SO ready for you!\"\n\nKirk mounted her and kissed her as she reached for his cock. When he was in position, she let go and waited. A moment later, he was entering her and Paige cried out in pleasure.\n\n\"Oh...yesss!!\" she cried as she took him inch by inch. \"That feels SO good!\" \n\nHe was inside her completely and Paige wanted him badly. \"Make love to me, Kirk. Please?\" \n\nFor the next several minutes he took her slowly then hammered her like a piston followed by more slow, gentle strokes. \"Turn over, sweetie,\" he told her.\n\nPaige happily got on all fours and offered herself to him. Kirk reentered her causing Paige to moan with pleasure. \"I love doggy so much. You feel so big in my pussy this way,\" she told him.\n\nLeonard continuing fucking her hard and paid no attention when she used her fingers to help bring herself to another orgasm. He knew most women needed clitoral stimulation to climax even with a very ample amount of um...bone...inside them.\n\n\"Oh, yeah!\" she hissed as he fingers worked furiously just above his steel shaft.\n\n\"Oh, God!\" she cried. \"I'm so close. Cum with me, Kirk. Cum with me!\" \n\nHe felt her tense again and once he knew she was coming he unloaded everything he had shooting hot streams of sticky goo into the thin latex cover. When she was done, she put her hand back on the bed and lowered her head and fought for breath.\n\nHe leaned over and asked, \"You okay?\"\n\n\"Never better,\" she told him as she gasped.\n\nOnce the filled Magnum was disposed of, Kirk pulled Paige onto his chest and kissed the top of her head. \n\n\"You were amazing,\" she told him as she drew little circles on his thick, muscled chest.\n\n\"No, you were amazing,\" he said. \n\n\"Kirk?\" she said.\n\n\"Yes?\"\n\n\"I'm really falling for you. Just in case you couldn't tell.\"\n\nShe turned her head up toward him to see his response. \"Then who's gonna catch me?\" he asked with a smile. \"You know, because I'm falling, too. Hard.\"\n\n\"I guess we'll just have to land together and hope for the best, huh?\" she said smiling at him. \n\n\"I won't ever let you fall, honey,\" he promised her. \"I'll be there to catch you. Always.\"\n\n\"Promise?\" she asked.\n\n\"I promise.\"\n\n\"I love when you call me that, by the way,\" she said quietly. \"It's so special.\"\n\n\"Honey?\"\n\n\"Yes.\"\n\n\"That's good because...\" He waited for her to look up at him again. \"Because...I love you...honey.\"\n\nPaige pulled herself up on one elbow and stared into his eyes. \"What did you just say?\"\n\n\"I love you...honey.\"\n\n\"Please don't say it if you don't mean it, Kirk. I don't think I could stand it if...\"\n\n\"I mean it. I love you, Paige.\"\n\nHe saw tears well up in her eyes. She blinked several times then said, \"I love you, too...sweetheart. I do. I really, really do!\" She rolled over on her back said, \"God help me. I'm in love with a 23-year old man!\"\n\nKirk rolled over on top of her and said, \"Twenty-three and a half. Don't forget the half.\"\n\nPaige laughed then said, \"Say. While you're on top...could we...you know?\"\n\n\"Again? Already?\" he said feigning exasperation. \"Is this how it's gonna be with you. Just sex, sex, sex?\"\n\n\"Well, I am in my sexual prime,\" she reminded him. \"You know, like the rest of us MILFs.\"",
        "Kirk couldn't help but laugh. \"MILF? You're not a MILF.\"\n\n\"Thank you, honey,\" she said happily. \"That's a terrible thing to call someone.\"\n\n\"Well, yeah. I mean, you're not a mother so...I guess you're just a CILF.\"\n\n\"Oh, geez. Do I dare ask?\" she said waiting for it.\n\n\"Hey, Chick I'd Love to...you know, is the best I could come up with. I guess I could have tried HCILF for 'Hot Chick' but you can't say it. Go ahead. Try it. Trying saying HCILF phonetically.\"\n\n\"Would you please stop talking and just fuck your...chick? Please?\" This time Paige started laughing.\n\n\"Oh, so now you're the comedian, eh?\" Kirk said. \"We'll see about that!\" He started tickling her and Paige literally shrieked. \n\n\"Stop! I'm ticklish like nobody's business! KIRK!! Stop!\" She pulled him over and he kept rolling until he was back on top of her before they stopped.\n\n\"You are so gorgeous; so beautiful,\" he said getting serious again.\n\n\"I feel beautiful when I'm with you,\" she told him. \"And you are so handsome. I can't believe we found each other.\"\n\n\"If not for Dr. Strangelove, right?\"\n\n\"Yeah, he was definitely strange, but my how that worked out so nicely,\" she said. \"Now please, really do stop talking and fuck me again, okay?\"\n\nSeconds later he was deep inside her once again and Paige realized she was happier than she could ever remember.\n\nTwo weeks later Kirk asked if Paige was ready to meet the rest of his family, and she said she'd been hoping he'd ask for several days.\n\nHis father already knew how much older Paige and he'd been preparing Kirk's mother, Jean, since the tandem jump. In principle, she was okay with it. It just seemed so...odd to her. \"Why can't he be with someone closer to his own age?\" she'd asked several times. \"Thirty is a lot older. Thirty-four is...\" She didn't know how to describe it but she never expressed her concerns to her son. Ultimately, if he was happy, she was well, not...unhappy.\n\nJean had made a huge roast for all of them complete with mashed potatoes, gravy, fresh bread, and vegetables with iced tea. When Paige walked in it was the first thing she noticed. \"What is that heavenly smell?\" she asked.\n\n\"Smells like my mom's world-famous pot roast to me,\" Kirk said. He took Paige to the kitchen where he found his mom hard at work. \"Mom? I'd like you to meet someone.\"\n\nJean steeled herself, turned around and forced a smile. When she saw Paige for the first time, she was really taken aback as the woman she was looking at appeared younger than she'd imagined. Much younger, in fact. \n\n\"Hello, Paige! It's so nice to finally meet you,\" Jean said offering her a hug hello.\n\n\"You, too, Mrs. Leonard,\" she said sincerely.\n\n\"It's Jean,\" she told her.\n\nMeghan heard the voices and had come downstairs and was standing just outside the kitchen. \"Hey, Megs! Come say hello.\"\n\nMeghan was as beautiful as Kirk was handsome, but Paige could see the telltale signs of kidney failure. There was some slight puffiness around her eyes which Paige was sure was renal edema, the result of swelling as the kidneys lose their ability to secrete enough of the body's fluids.\n\nThe two 'girls' hugged and Meghan said, \"Wow. For once, Kirk didn't exaggerate. You really are as pretty as he said.\"\n\n\"Me? Ha! Look at you!\" Paige said admiring her pretty face and gorgeous body. \n\n\"Hello there, young lady!\" a booming voice said. \n\n\"Dirk! Hey there yourself, handsome!\" she said accepting his hug.\n\n\"How was that wine-tasting tour you guys did a while back?\"\n\n\"At The Tasting Room? It was fantastic!\" she said before remembering Jean doing everything by herself. \"Jean? Is there anything I can help with?\"\n\nThat offer helped cement Jean's decision to like this older woman her son was dating. She took her up on it and the two of them, with some assistance from Meghan, got the table set and dinner served.\n\nPaige was thoroughly enjoying herself. The food was excellent, the conversation was beyond pleasant, and she felt completely at home with the Leonards. She was also very relieved nothing was ever said about the age difference. She fully expected to have to address it, but it never came up.\n\nAnd then something was said that caused Paige a lot of concern. Meghan wasn't very hungry and said, \"I just don't feel like eating all that much lately.\"\n\nPaige didn't want to pry, but she knew loss of appetite was a first sign dialysis wasn't cleaning the blood well enough. \n\n\"How was your URR yesterday?\" her mother asked. \"I forgot to ask and you didn't mention it.\" She turned to Paige and said, \"That's urea reduction ratio.\"\n\nKirk stepped in and said, \"Mom? Paige works at the kidney center, remember?\"\n\n\"Oh, my goodness. I did know that. I'm sorry, Paige.\"\n\n\"No, that's okay. It's none of my business, but is your URR still over 65?\"\n\n\"Barely,\" Meghan said. \"I've still got a long wait and it it drops below 65 at this point...\"\n\nNot wanting to spoil the dinner, Meghan smiled and said something that wasn't true. \"I just forgot to go to the bathroom before treatment so...\"\n\n\"Meghan! You know how important it is not to interrupt your treatment,\" Jean said with grave concern.\n\n\"I know, Mom. It won't happen again.\"\n\nPaige accepted her explanation but was sure she was buying it. Nothing more was said and the rest of the evening was very pleasant.\n\nWhen she and Kirk were alone that evening at her place she asked him, \"What's Meghan's PRA?\" (Panel Reactive Antibody percentage which can be from 0-99% with higher scores meaning fewer donors are available.)\n\n\"She's at 68%. Why?\"\n\n\"I'm sure all of you have been tested. I was just wondering what she was up against.\"\n\n\"We have. I'm the closest match but we're off on one important antigen. It's not as big a deal as it once was, but every little bit helps.\"\n\n\"What's her blood type?\"\n\n\"Meghan is A+.\"\n\n\"Oh, okay.\" Paige didn't say anything else. She had type O blood considered the universal donor. Even so, there are many other considerations involved making one's ability to receive a donor organ that matches more difficult. Meghan's PRA was high but not insurmountable. \n\n\"Kirk? Are you aware there are ways of lowering PRA's through a procedure called Plasmapheresis a blood-cleansing? It's a process that can lower the dangerous antibodies from the blood. Plasmapheresis is usually used when you have an incompatible living donor.\"\n\n\"I am. We all are, as a matter of fact. But it's just so expensive. But yeah, if we could do that, I could donate a kidney.\"\n\n\"Okay. Just wondering. Plasmapheresis can also been used to allow blood-type incompatible donor/recipients to proceed with the transplant. Since you're that close...\"\n\n\"If we had that kind of money laying around we could do it. Even so, it would be ideal to find an even better match. But my dad's already said he's willing to take out a second mortgage or anything else for the treatment. If Meghan gets any worse, we'll do that before she gets too sick to have the surgery.\"\n\nPaige leaned over on his shoulder and said, \"You're clearly very well informed. I'm gonna do some asking around at work on Monday and see what I can do to help. In the meantime, how would you like to do some work on me in the bedroom?\"\n\n\"You've really fallen for him, haven't you?\" Angie said when they met for coffee during Paige's lunch break that Monday.\n\n\"Fallen? I'm hopelessly in love with him. God help me, I'm beyond saving.\"\n\n\"I wasn't going to try and talk you out of it, Paige. I was going to ask if you think he's going to propose anytime soon? Is he?\"\n\n\"There's nothing I'd like more. I'm afraid to even drop hints though, for fear of jinxing this.\"\n\n\"Since when do you believe in jinxes?\" Angie asked. \"You're one of the most rational, down-to-earth people I know.\"\n\n\"Normally, I am. But I don't want to blow this, you know?\"\n\n\"But you do blow him, right? I mean, I hope you do. I sure would!\" she said with a wicked smile. Paige had finally introduced them not long before meeting his parents and predictably, Angie had been relentless with the innuendo and outright commentary.\n\n\"That's none of your business!\" Paige said trying not to smile.\n\n\"He's big, isn't he? And you love blowing him! I knew it! Tell me. Is he big? Come on...tell me. Please???\"\n\n\"You need to get a life,\" Paige said dodging the question.\n\n\"I have a life. What I need is a hot cub like Kirk! That's the name for guys like...\"\n\n\"I know what a 'cub' is, thank you very much.\" She took a sip of coffee then said, \"And yes, he's very big, okay?\"\n\n\"I knew it! I could just tell. Oh, my God, what I wouldn't do to be some fried eggs to his sausage!\" Angie quipped.\n\n\"You know that makes no sense, right?\"\n\n\"Who cares?\" she said. \"If you ever do get bored with him...\"\n\nPaige rolled her eyes then said, \"There's something else I want to talk about. Something unrelated to the size of my boyfriend's hoo-haw.\" Angie laughed and Paige got serious.\n\n\"You know his sister Meghan needs a kidney transplant. Well, Kirk is close to a match but to make it work she needs this very expensive treatment and even that is no guarantee it would work. It would just improve the odds.\"\n\n\"Okay, so?\" Angie said not sure where this was going.\n\n\"Well, you know I've been tested before, right?\"\n\n\"Oh, my God. Are you a match?\"\n\n\"Maybe. I'm having Dr. Feingold check. Since Meghan is our patient, he can look at test results. I asked him to compare me to Kirk to see if I'm as good a match or possibly even better. He said he'd let me know this week.\"\n\n\"Would you seriously consider doing this?\" Angie asked shocked to hear Paige even say this.\n\n\"I...I think I would,\" she said. \"I just don't want Kirk to think it's a bribe or something, you know?\"\n\n\"Oh...to get him to propose?\"\n\n\"Well, yeah. Or anything else. I don't really know Meghan that well, but she's such a wonderful person. Happy, bright, positive, smart as can be, and as you might guess, she's gorgeous. I know that doesn't matter when it comes to something like this, but my heart broke when I found out she's slowly declining. If I'm a match, I'm gonna think about it very seriously. We can get by perfectly well on one kidney, you know.\"\n\n\"You've said that many times. I just can't imagine giving one up. It's scary, you know? And the surgery itself is a big deal. Paige, are you really seriously going to do this?\"\n\n\"I don't know yet. First things first. If I'm not a good match, it's a moot point. If I'm no better than Kirk, then I have another doctor friend who might be able to work out something with this expensive treatment. But if I am, then I need to do some real soul searching.\"\n\nAngie put her hand on Paige's arm and said, \"What if you do that and things don't work out with you and Gorgeous? What then?\"\n\n\"Exactly. I have to do this for the right reasons. Anyway, thanks for seeing me. We don't do this often enough.\"\n\n\"That's not my fault,\" Angie said. \"I don't have a handsome young stud to occupy my leisure time.\" She smiled then laughed and said, \"I still pretty much hate you.\"\n\n\"Yeah, I'd hate me too, if the roles were reversed, but if you were getting what I'm getting, well...you'd...get it.\" Both women laughed before finishing their coffee and saying goodbyes.\n\nOn Thursday morning, Dr. Feingold stopped by and asked if Paige had a minute. \"Of course. I've been waiting all week to hear back. What's the verdict?\"\n\n\"Well, as it turns out, her brother is a very acceptable risk with the Plasmapheresis. However, you are by far a better match, Paige. You and Meghan are compatible on all six antigens and you know how rare that is. The patient is still more than healthy enough for surgery, but she is in decline.\" He set the folder down on her desk then asked her, \"Are you considering becoming a donor?\"\n\n\"Yes,\" she told him. \"I know you're keep this confidential not only as a doctor but as a friend, but please, please don't say anything, okay?\"\n\n\"Not a chance. You know how this procedure works, Paige. There are other tests to be done with cross matching being the most important, but having done this for many years, you two are about as good as it gets.\" He stood up then said, \"I hope this helps, and...good luck with whatever you decide.\"\n\n\"Thank you, Dr. Feingold. You have no idea how much this means to me.\"\n\n\"I've been trying to get you to do out with me for the last two years, Paige. Anything to improve the odds. Speaking of which, are you still seeing this um...much-younger guy?\"\n\n\"I am,\" she said happily.\n\n\"Bummer. Is it serious?\" he asked hopefully.\n\n\"Very,\" she told him.\n\n\"Okay. Well, if that ever changes...\"\n\n\"You'll be the first to know. I promise.\"\n\nPaige spent the next several days thinking this over. And over and over and over again. She and Kirk made love several times but her mind wasn't into it and he noticed.\n\n\"Is everything okay?\" he asked after the third such incident.\n\n\"Yes. It's perfect,\" she said. \"I just have a lot on my mind. That's all.\"\n\n\"Are...we okay?\" he asked with real concern.\n\n\"Oh, honey. We are more than okay. I swear. I love you so much. Never doubt that, okay?\"\n\n\"Okay,\" he replied smiling at her. \"How about dinner someplace nice on Saturday?\"\n\n\"I'd love that,\" she told him. \n\nWhen Kirk showed up wearing a suit and tie, Paige was more than a little surprised. She was stunned. \"You look...amazing!\" she told him when he came inside.\n\n\"Thank you,\" he said with a smile. \"I've been told I clean up rather nicely. You look even more beautiful than ever, yourself tonight,\" he told her.\n\nPaige was wearing a light-pink colored sweater with a black skirt and heels. Between the sexy outfit, her gorgeous hair and makeup, she looked stunning.\n\nAfter they ordered, Paige said, \"I was hoping we could discuss something during or after dinner.\"\n\n\"Anything,\" he said. \"But before we get into a deep discussion, there's something I want to ask you.\"\n\n\"Oh, okay,\" she said. \"Mine is very important, but it can wait.\"\n\nHe took her hand and said, \"Paige, I tried to imagine what love would look like several times before, but I couldn't see it. That's because I didn't have the right person. But since I met you, it all makes perfect sense. I understand love now. I know what it means to love someone more than you love yourself.\" He smiled at her and said, \"That's how I love you, sweetheart. I love you more than anything else on earth. So...\"\n\nHe reached into his pocket and produced tiny, blue box and slid out of his chair. He knelt before her on one knee and said, \"Paige Marie Allen, I love you with all my heart and I want to spend the rest of my life with you.\" He removed the ring, set the box on the table, then, looking into her eyes which were filling with tears, \"Will you marry me?\"\n\nPaige blinked several times then covered her mouth with her hands as she began to nod. Unable to speak, she kept nodding then held out her left hand. Kirk slid the ring on her finger then reached for a linen napkin to dry her eyes.\n\nFinally able to speak, Paige said, \"Yes. Yes, I will marry you, Kirk Leonard. I love you so much!\"\n\nAn older couple was smiling at them and the woman said to Paige, \"Forty-five years with this one today, dear. God bless you, dear!\"\n\nKirk kissed her softly and said, \"I couldn't possibly be any happier.\"\n\n\"Me, either,\" Paige said, her voice still choked with emotion. She held her hand out and admired the ring. \"It's so beautiful, Kirk. I love it.\" She looked at him then said, \"I love you so much.\" She leaned over and kissed him and Kirk asked what it was she wanted to discuss.\n\n\"It can wait until tomorrow,\" she said.\n\n\"Okay, whatever you want,\" he told her. \"There's nothing I wouldn't do for you.\"\n\n\"I know,\" she said still wiping away tears. \"That's just one reason I love you so much.\"\n\nThat night, Paige gave everything she had to her lovemaking and it was good enough to keep Kirk's concerns at bay. \n\nEarly the next morning, when they were having coffee together Paige said, \"Is now a good time to talk?\"\n\nHe kissed and said, \"Anytime is a good time to talk.\"\n\n\"Okay. Here goes,\" she said. \n\nFor the next five minutes, she unloaded everything she'd been holding in for the better part of a week.\n\n\"I don't want to get Meghan's hopes up too high if we're not compatible, but...I want to do this.\"\n\nShe'd never seen Kirk look like this before. \"Honey? Are you okay? Are you upset?\"\n\n\"No. No, I'm not upset. I'm...I'm blown away. I'm in shock.\" He took her hands and said, \"Paige. This is very serious major surgery. You could...you could die, sweetheart.\"\n\n\"I know,\" she told him. \"And I could get hit by a drunk driver tomorrow, too. Life has no guarantees, honey. Except for...death. And if I can give Meghan a normal life but didn't try out of fear, I couldn't live with myself.\"\n\n\"I just don't want to lose you,\" he told her. \"I love you so much, Paige.\" He stroked her hair and she was almost certain his eyes were filling with tears. He turned away and blinked then said, \"There must be a lot of pollen in the air or something.\"\n\nIt was the end of winter and too cold for pollen but Paige let it pass. \n\n\"I know you love me, Kirk. But you love your sister, too. Look. You're a decent match. It could work. But then I could lose you, and if that happened...I'd be...suicidal.\" She squeezed his hands and said, \"Kirk? Honey? I have to do this. You know that, right?\"\n\nHe blinked several more times then said, \"Okay. If this is what you want I'll support you.\"\n\nPaige led him back to the bedroom and gave him a tour-de-force romp in bed telling him several times how much she loved him while he did and said the same to her.\n\nMonday afternoon she called him from work and said, \"Dr. Feingold can do a compatibility test this week so whenever you want to tell Meghan...\"\n\n\"I want you to tell her, sweetheart,\" he said. \"I'll be there with you, but I want her to hear it from you.\"\n\nThat evening, the entire family sat down and ten minutes later, there wasn't a dry eye in the room. Everyone was hugging everyone else and after the obligatory, \"Are you really sure?\" questions, they agreed to do the test on Thursday after her dialysis treatment.\n\nThe next day around noon, Dr. Feingold came to Paige's office and said, \"You're good. In fact, everything looks good.\"\n\n\"How soon can we do this?\" she asked anxiously.\n\n\"Dr. Thompson is the best I know and I already put in a call to his office. As soon as he gets back to me, I'll let you know. I'm guessing it could be as soon as next week.\"\n\nThe entire family spent a very anxious weekend together as Paige insisted on spending it with Meghan getting to know her better and because she now felt this special bond with her. One that would soon be deeply personal and very real.\n\nOn Tuesday, Paige learned the surgery was scheduled for Friday morning and that meant three more days of anxious anticipation.\n\nShe made love with her fiancee as often as they could by taking off the rest of the week and before checking herself into the hospital with Meghan Thursday afternoon.\n\nThe following morning, final checks were done and everything was a 'go'. Dirk and Jean kissed their daughter and their future daughter-in-law, tears freely flowing down everyone's cheeks. Kirk also hugged and kissed his sister before they wheeled her gurney into the OR. \n\n\"If something happens to me,\" Paige began.\n\n\"Shhh. Don't even say it,\" Kirk told her. \n\nPaige smiled and said, \"You don't believe in jinxes, do you?\"\n\n\"No, I just don't want to tempt fate,\" he told her with a smile. \"I love you, Paige. I love you so very much.\"\n\n\"And I love you, Kirk. And I always will.\"\n\nThey kissed goodbye as he stood there watching her gurney disappear just as his sister's had moments ago. Now, there was nothing to do but wait.\n\nA kidney transplant normally took between 2-3 hours\u2014if everything went well. At the two-hour mark, the tension began to build. By 2 1/2 hours, all three of them were pacing in the waiting room. At the three-hour mark, it became unbearable. Just as Kirk was about to ask someone for information, Dr. Feingold, who'd assisted Dr. Thompson came out and spoke to them.",
        "\"Everything looks great,\" he said. \n\nThere were sighs of relief and Jean said, \"Thank you, Jesus!\"\n\nDr. Feingold added, \"So far, at least. The kidney is functioning and purifying Meghan's blood. You all know the potential risks of rejection and infection\u2014for both patients. So while anything is possible at this stage, the procedure couldn't have gone any better. I'll be back in about four hours to check on her again. Does anyone have any questions?\"\n\nBefore he'd even taken two steps, the three of them held one another. Jean cried while the two men fought not to. It was a losing battle and after all the months and months of waiting, it looked like it was finally over.\n\nThat afternoon, they were allowed to briefly visit their 'girls' and both of them were in remarkably good spirits.\n\nThe parents went to their daughter and Kirk to his fiancee. \"How you feeling, beautiful?\" he asked with a smile.\n\nShe touched his face and said, \"Much better now that you're here.\" She reached for his hand and said, \"I asked Meghan to be my Maid of Honor, by the way.\"\n\n\"You did?\" Kirk asked, amazed at this woman's ability to give for others. \"You are the most amazing person I've ever known.\"\n\n\"You inspire me,\" she said sweetly. \"So does Meghan. Why don't you go say hello, okay?\" Kirk kissed her on the forehead then traded places with his parents.\n\n\"Hey, baby sister,\" he said taking her hand in his. \"How are you?\"\n\n\"Happy,\" she said. \"I can already feel the difference. I know it might be the drugs or my imagination, but I feel...clean...inside.\" Tears welled up in her eyes as she looked at her older brother. \"Kirk? I love Paige so much.\" He dabbed her eyes then she said, \"I love you, too. I'm so glad you found her.\"\n\n\"So am I, Megs,\" he said. \"Although the truth is, she actually found me in a sense. Yes, I approached her first, but had she not been willing to look for love in new places, this would have never worked.\"\n\n\"However it happened, I'm so, so grateful. Did she tell you she asked me to be her Maid of Honor?\"\n\n\"She did,\" he told her with a big smile. \"I can't wait to see you standing there healthy and strong again.\"\n\n\"I feel like the luckiest girl on earth,\" she told him. \"And I have you\u2014and Paige\u2014to thank for that.\"\n\n\"Get some rest, okay? We're gonna have a wedding to plan very soon.\"\n\nPaige was allowed to go home two days later while Meghan remained in the hospital for a full seven days, typical after a transplant. There'd been no signs of rejection and the kidney was working perfectly so that Friday afternoon, Meghan was released and allowed to go home.\n\nKirk and Meghan agreed to a May wedding for a very special reason. It would be on May 14th, which was also Meghan's 19th birthday.\n\nPaige was an absolutely stunning bride dressed in white and looking more beautiful than Kirk had ever seen. And while he looked very handsome in his black tux, it was Meghan Leonard who stole the show when she appeared in her light-blue bridesmaid dress looking better than she ever had and more importantly, feeling better than she had in years.\n\nThere were very few dry eyes as the happy couple exchanged vows in a beautiful chapel on the outskirts of Seattle. Before they left for their honeymoon, Meghan grabbed Paige and hugged her and hugged her until both of them cried.\n\n\"Thank you,\" Meghan said wiping her eyes trying not to mascara on either one of them.\n\n\"You are so welcome, Meghan,\" Paige told her. She wiped away her own tears then said, \"Okay, it's your turn now. There's a wonderful guy out there looking for someone just like you.\"\n\n\"I already know who I want to be my Maid of Honor,\" Meghan told her. \"You're a part of me now, Paige, and you always will be. And not just the kidney but in my heart. I truly love you.\"\n\n\"And I love you, sweetheart,\" she said still fighting back tears.\n\nKirk was standing beside them and said, \"And I love both of you.\"\n\nThey hugged one more time before the newly-married couple made their way outside where waiting friends pelted them with animal-friendly bird seed rather than the traditional rice. They got inside the waiting limousine and when the door closed Kirk said, \"I love you more than I can put into words, Mrs. Leonard.\"\n\n\"Don't you dare make me cry again,\" she said blinking furiously. \"But I love you that much too, Mr. Leonard. My wonderful, handsome, young husband.\"\n\nKirk grabbed the bottle of champagne chilling in a bucket of ice and popped the cork. He filled two glasses and handed one to his beautiful new wife. \"A toast!\" he said. \"To looking for love in all the right places!\"\n\nPaige touched her glass to his and said, \"I'll drink to that!\"\n\nA year later, the doctors told Meghan she had no more worries about organ rejection and that bit of good news only added to the Leonards' joy when they learned Paige was expecting their first child, a girl they planned to called Meghan Jean Leonard.\u2028"
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december",
        "older woman",
        "younger man",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/love-in-all-the-right-places"
}