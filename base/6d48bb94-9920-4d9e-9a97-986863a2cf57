{
    "title": "The Lady of the Lake",
    "pages": [
        "After a long sticky day in a steamy kitchen, I threw my towel over a branch, strode to the end of the dock, and dove naked into the crystal clear water of the spring fed lake. After the initial shock, I stroked into a steady free style rhythm. There's satisfaction in slicing cleanly through water. It's exercise without sweat, it's progress at your own pace to a goal, and it's joy in the solitude of sun, sky and water.\n\nSolitude didn't have to mean loneliness. There could be joy in solitude; I kept telling myself. Some day I would believe it.\n\nA quarter mile further, I rounded the dead tree in the water at the point and glimpsed my target, a pine covered island rising out of the center of the lake like an enchanted island in a magical lake in Celtic Britain. I would bask on my favorite sun-warmed rock taking a break before swimming back. Then I would be tired enough to fall asleep tonight. The near constant ache in my side would keep me awake if I wasn't exhausted. The dreams didn't help either.\n\nI had dreamed it again. I heard that heavenly choir, the one where each voice carried one note, but the addition of all the voices made a steady drone punctuated by insect clicks and ratcheting noises. The last time I heard that choir I was laying in the cold dust of Afghanistan trying not to bleed to death before the helicopter came.\n\nThe lake was deep enough that searchers would never find my body if I drowned anywhere beyond a hundred yards from shore, and I embraced that danger. My life, by my own choice, had gotten too predictable. While swimming across a mini abyss wasn't much of a challenge, it gave me something to think about. I had been reading a book on Celtic lore, and a northern Michigan lake was close enough that I could imagine the people who lived in the lake.\n\nA hundred yards from the island, the bottom came up and I was safe. I could still drown, but they'd have a body to bury. Twenty yards out I waded to shore squishing my toes through the marl soft bottom.\n\n\"Now I know who made all the tracks on this side of the island. For a while I thought it was big foot.\"\n\nThere she was, dressed in an orange one piece bathing suit standing on shore waiting for me with her fists planted on her nicely rounded hips. Was she my own personal lady in the lake? I could use some magical assistance. I wasn't stuck like a bug in amber, but I was having trouble moving on like a bug dragging too big a load? It still didn't sound right. I was going to have to work on that image.\n\nMy first thought was to cover myself, but then what the hell. The nudist resort on the lake wasn't a secret. Certainly the adolescent boys from the summer homes on the far side of the lake knew. They canoed or rowed boats across the motor free lake to catch glimpses of the naked women sunning on the shore.\n\nShe seemed familiar to me in the way that you get when you meet someone for the first time and yet there is a certain air about them. It could be their smile perhaps, or their sense of humor, or their way of carrying themselves that makes it seem like you've know them forever. Perhaps we were old souls recognizing each other from a past life. There was a bond at least on my part. Perhaps we had made love upon the shore of a lake before in a previous lifetime.\n\nI continued my pace until I stopped about ten feet away from her at the edge of the water.\n\n\"Am I interrupting something? Let me catch my breath and I'll leave,\" I panted.\n\nShe shook her head. \"It's only me, nude guy. I scull my one man around the lake earlier most days,\" she pointed at her tiny racing shell sitting on the beach, \"but today, I got antsy and grabbed some exercise in the evening, too.\"\n\n\"Forgive me for my informal dress,\" I looked down at my lack of clothing, \"had I seen anyone on the island, I would have turned around and swam back. You surprised me.\"\n\nShe grinned. \"No need to apologize, naked dude. Had I been offended by your lack of dress, I could have warned you off while you were still in the water, besides,\" she gave me a thorough top to bottom scan, \"on you it looks good.\"\n\n\"I'm Sean, and I work at the resort,\" I pointed over my shoulder at the resort hidden behind the point.\n\n\"I'm Vivian, but my friends call me Viv.\"\n\nShe held out her hand and gave me the firm handshake all rowers have.\n\nShe was a long, tall woman. She wore her auburn hair in a pixie cut. I couldn't decide if her wide smile and very full kissable lips were the best feature of her very expressive face or her wide set green eyes. Dimples appeared when she smiled. She also wore an engagement ring on her finger so I stopped my lustful inspection right there. I admired her long kissable neck. Again I shoved that thought out of my head, and admired her toned athletic body. Her tanned skin looked good next to the orange of her suit...\n\nI stopped myself from lusting again. This was going to be harder than I thought. It had been a while, a long while.\n\nWhat the hell? Why was I so attracted to her if all we were supposed to do was high five each other and move on? She was almost a married woman. I would not tempt a woman out of her solemn promise to her man. I'm a firm believer in 'what goes around, comes around.\"\n\n\"Would you mind if I sat? I'm a little out of breath.\"\n\n\"Where are my manners? We have several very nice chairs in the gazebo on the other side of the island. Have you been over there?\"\n\nI shook my head, and followed her up the hill through the pines to the other side concentrating every step of the way on not ogling her ass. The catch-22 of the situation was that I had to think about her ass as I concentrated on not ogling her ass.\n\n\"Do you own this island?\" I asked.\n\n\"My father does, but he and his wife don't come out here much. They built the gazebo a couple of years ago, had a couple of bonfires, then forgot about it. His guests complained about having to row back from the island when they were drunk. He's been trying for years to get the lake changed to one where motors under ten horsepower can be used. Anyway, Dad asked me to keep an eye on the island while I row around the lake.\"\n\nA puckish smile flickered across her face.\n\n\"It's a good thing I do. Now I know about the nature boy trespasser.\"\n\n\"Really, I can leave if you want me to.\"\n\n\"Relax, I'm razzing you,\" she turned to smile at me, \"you clearly aren't here to vandalize anything. Are all naked men as skittish as you?\"\n\n\"Of course I'm nervous. I don't want to be handcuffed and carted off to jail for indecent exposure. Mark Twain said, 'Clothes make the man. Naked people have little standing in society.'\"\n\nShe looked at me with raised eyebrows; a hint of a smile graced her very kissable lips.\n\n\"You know that quote?\" I asked.\n\nShe grinned. \"I started out to be an English teacher. If it's by Mark Twain, I've read it.\"\n\n\"Did you know that Ben Franklin was a proponent of 'air baths'. He would wander around his house naked.\"\n\n\"You got me there. I believe it though. Old Ben was a randy dude.\"\n\nShe climbed up the stairs to the gazebo and sat in an Adirondack chair, and motioned me into another. The gazebo was large, and filled with rather expensive Adirondack chairs and other rattan furniture. It was screened in, and the screen door closed with a familiar slap known to anyone who has ever been to a lake house.\n\n\"Had I known that I'd have company, I'd have brought a towel, refreshments and a fig leaf.\" She eyed my groin. \"A big fig leaf.\"\n\nMy cock surged. I was going to embarrass myself if she kept ogling me. A certain vulnerability crept over me. She had the textile advantage.\n\n\"Which house is yours?\" I asked squinting out across the lake. Thinking about the starting line up for the '68' Detroit Tigers was not lessening my growing tumescence.\n\nThe view from the gazebo was magnificent. The picture windows from the houses reflected the fiery glow of the sunset behind us. If God had been a vacation home developer, this would have been the world he designed.\n\n\"It's the giant A-frame with the roof to basement picture windows.\" She pointed at the biggest, most expensive house on the lake. She bent forward as she pointed out the house giving me a decent view down the front of her suit.\n\n\"Wow. That's an amazing summer home.\"\n\nShe nodded. \"Dad built it to entertain business associates. It's more like a hotel than a home. The lake is nice though, but I like my home better,\" a pensive look crossed her face.\n\n\"Where's home?\"\n\n\"Bloomfield Hills,\" her eyes narrowed and she grabbed the arms of her chair, \"you gave me that look.\"\n\n\"What look?\"\n\n\"The 'she's a rich spoiled brat' look.\"\n\n\"Not what I was thinking at all.\"\n\n\"Then what were you thinking?\" she challenged.\n\n\"That you're smart, good looking and vivacious. A very pleasant combination, by the way.\"\n\nShe grinned at me clearly happy with the compliment, and held up her hand displaying her engagement ring. \"There's no sense hitting on me, I'm out of circulation.\"\n\n\"I saw your ring earlier, and I wasn't hitting on you, nor would I, but even married women enjoy a compliment.\"\n\nThe ring was wrong anyway. She didn't deserve a washed out diamond. She should be wearing an emerald to match her eyes.\n\nShe smiled. \"All right then. I'll take it at face value,\" she straightened up and batted her eyes a few times, \"thank you.\"\n\nShe may be engaged, but she did enjoy flirting. Maybe there was more to her than a nearly married woman that I needed to tread carefully around. It would certainly be nice to have someone around that I could talk to, however I do hate it when women think I'm hitting on them when I'm trying to be nice. Time would tell.\n\nI stood.\n\n\"It's getting late, and it's dangerous to swim in the dark. It's nice to have met you, Viv. If I promise only to leave tracks on the island and touch nothing, do I have your permission to spend a few minutes here in the evening?\"\n\nShe nodded. \"Of course, but I don't want you bringing your naked friends out here having wild orgies without inviting me.\"\n\n\"Viv, I would nev...\"\n\n\"I'm kidding again. I might come out here a little more often, myself, if you don't mind. Are you out here about this time most evenings?\"\n\n\"I am, and I would enjoy your company very much.\"\n\n\"You're not hitting on me?\n\n\"I promise I'm not hitting on you.\n\nThen I wondered if she might interpret that as me trying to get around her defenses. Things could get complicated.\n\nI waded out until the water was chest deep, then began the swim back home. A hundred yards out I turned and waved. She had disappeared.\n\nAs I swam back in the gathering gloom, my mind dwelt on Viv standing there in her orange one piece. It looked amazing against her tanned skin. Then I remembered that she was engaged, then I thought about peeling that orange suit from her body. I was drawn to her. She was beautiful, sexy, smart, and cheeky all at the same time. She was also out of my league, and engaged. I decided spending time with her was worth it even if it was simultaneously frustrating. Then I thought of her naked. Walking the line of being a friend would be a difficult one especially since she seemed to be as happy with me as I was with her. I vowed that I would not blow it with her.\n\nAt five every morning, I got up, showered, and commuted twenty yards along a pine needle strewn path to work at six. After I had humped in all the boxes of cans and the crates of vegetables from the overnight deliveries, I manned the little two burner stove next to the grill. I was the egg man. I cooked two eggs any style except for the omelet. That meant I was in charge of over easy, over and broken, sunny side up, scrambled, poached, soft boiled, and eggs Benedict on Sundays. Once I plated perfectly done eggs, I handed the plate over to Vince who grilled the bacon, sausage, home fries and hash browns.\n\nVince, king of the grill, hated returned plates. The first egg guy who specialized in over-cooked eggs failed to show up one morning and I filled in. When Vince discovered that I had a knack for eggs, I was given a field promotion and a fifty cent per hour raise. Agnes, the head cook, told me later that she had never seen Vince so happy. That amazed me since I never saw him do anything but curse softly under his breath as he tended his potatoes and breakfast meat.\n\nAt ten, I was given four hours off. It wasn't much good for anything but a leisurely lunch and a nap before returning to the kitchen at two pm for the dinner shift. I spent most of my afternoon chopping fruit and vegetables for the evening's salads and side dishes. At six my shift was done, and I returned to the crew house that I shared with the other summer hires.\n\nThe employee rules were simple. Inside the house, we could dress or not dress any way you chose. Outside on the grounds, we had to be naked which meant that everyone including the women pretty much stayed naked all the time by the second week of the season. By the third week, no one thought it unusual. There were a couple women that I fantasized about how they would look with clothes on. The second rule was no contact with the campers.\n\nMost days I'd grab a bit of dinner before I left the kitchen, then after a brief sit down, along about eight, I'd throw my towel over my shoulder, slide into my sandals, and hike down to the lake for a swim. The first couple of times it was strange walking around with my junk exposed, but by day three my nudity seemed normal.\n\n\"You going for another swim?\" Hal asked acknowledging the obvious as I walked through the common room with a towel thrown across my shoulder. The common room separated the men's rooms from the women's.\n\n\"Yep.\"\n\n\"We're starting up a poker game in a few minutes if you care to join us.\" His eyes reminded me of a shark selecting his prey. His body reminded me of a furry teddy bear. The guy had curly honey colored hair everywhere. I wasn't sure he qualified as nude even with his clothes off.\n\n\"No way. I learned in the Air Force that I like my money too much to pass it around, besides I'd get antsy sitting all evening.\"\n\n\"We'll be here when you get back.\"\n\nI liked Hal, he was a nice easy going guy, but his predatory nature surfaced when it came to poker.\n\nMy swim to the island stretched out back muscles made stiff from hours of standing on a tile floor. A quarter mile into the swim it became effortless. I glided through the water as if by will. It's the swimmer's equivalent of the runner's high. When I came out of my trance, I saw Viv standing on the island.\n\n\"Hello, again,\" I said as I waded ashore. No shyness on my part this time. She knew what to expect.\n\n\"Hello, yourself,\" her mouth settled into a wide grin, \"I half expected you to wear a swim suit this time.\"\n\nI had never seen a woman with such an fascinating mouth. She had full lips, perfect teeth, and the cutest tongue. I could have sat entranced watching her read the phone book, kissing her would be even better, but she was engaged.\n\nI shook my head.\n\n\"Once you've swum naked, you'll never want to swim in a suit again. Why don't you try it, this is the perfect opportunity.\"\n\n\"You're trying to get me out of my suit,\" she accused with a wink.\n\nI nodded.\n\n\"Yes, come to think of it, that's exactly what I want to do.\"\n\nShe gave me a funny look as she handed me the towel she was carrying.\n\n\"You're not much for subtlety are you?\"\n\n\"What do you mean?\"\n\nShe shrugged.\n\n\"I find your candor refreshing. You say what you mean. Most of the people I meet spend a great deal of time hiding themselves behind a facade. You're direct.\"\n\nShe motioned for me to follow her to the gazebo. I didn't mind at all. She was wearing a hot pink respectable two piece suit this evening. Her tanned midriff indicated that she wore this suit a lot. Her hypnotic hips swayed in a seductive, ancient rhythm as old a man himself as she walked up the path.\n\nIt was warmer than last evening, and the breeze through the gazebo cooled my damp skin.\n\n\"Care for something to drink? I brought wine, diet soda, and water.\"\n\n\"I'll take a water.\" I waved away an ever present mosquito. They were impossible to get away from in Michigan.\n\nShe handed me a bottle, and took one for herself.\n\n\"I got bug spray.\" she held up the spray bottle in her hand.\n\n\"Hose me down.\"\n\nI stood with my arms out and she enveloped me in a cloud of repellent. She spent a little more time on my groin than I thought it needed, but I wasn't complaining. When she was done, I sat down again as she returned the spray can to the top of the cooler.\n\n\"You didn't bring that cooler over in your scull.\"\n\nShe pointed over her shoulder at the aluminum boat painted a garish yellow behind her. \"No, I took the row boat instead. It feels like rowing a barge compared to my scull, and it gets me here in a half hour instead of fifteen minutes, but I can carry stuff like food and drink.\"\n\nShe pointed an accusatory finger at me.\n\n\"As I was rowing home last night, it occurred to me that I knew nothing about you, Sean. You're very clever at getting people to talk about themselves.\"\n\n\"Not much to tell. I'm twenty-six years old and will be a senior at Michigan State when I go back to school next month. I'm studying accounting with the aim of becoming a CPA.\"\n\n\"Why are you older than the average senior?\"\n\n\"I spent three years in the Air Force where I was an FAC. I was the guy who parachuted into enemy territory and used a radio and lasers to call in air strikes. On my last assignment, I managed to get myself shot while awaiting recovery.\"\n\nI pointed at the zipper scar down the right side of my abdomen.\n\n\"I lost a couple feet of intestine and spent six months in the hospital recovering. When I got out, I decided to use my GI benefits to get a college education.\"\n\n\"You strike me as being a physical kind of guy. Wouldn't you be happier chopping trees or stalking poachers?\"\n\nShe leaned forward and squinted my scars.\n\n\"The doctor's tell me my tree chopping days are over. I'm not even allowed to run or lift weights. They do allow me to swim though. That's why I chose a sedentary occupation that I should be able to do for a long time.\"\n\nI sipped my water.\n\n\"By the way, I like your suit today. It's an improvement over yesterday's.\"\n\n\"You think so? I bought it so I could lay around the pool without my Dad having a fit. Sometimes I look at it and think it makes me look chunky. I like the long line that the one piece gives me.\"\n\n\"You've got beautifully tanned skin, you need to show it more.\"\n\nShe may have blushed. It was hard to tell in the red light of the setting sun.\n\n\"How old are you and what do you do for a living?\"\n\n\"I'm twenty-two and I'm finishing the fifth year of my nursing degree at U of M.\"\n\nShe looked up at me. \"Why are you looking at me like that?\"\n\nI smiled. \"I was picturing you in scrubs. I prefer you in a two piece.\"\n\n\"You don't want to picture me coming at you with a bed pan and an enema bag?\"\n\n\"No thank you,\" I winced, \"been there, done that, and I do not want a repeat.\"\n\n\"You never told me where you grew up.\"\n\n\"I grew up in Southgate in the Downriver area southwest of Detroit. I'm one of those half hillbilly working class kids.\"\n\nShe leaned forward. \"Do you know Steve Sullivan?\"\n\nI nodded. \"He was in my class in high school. How do you know him?\"\n\n\"He's my fiance.\"\n\n\"He was the valedictorian of my class. I didn't know him well, we ran in different circles.\"\n\nIt didn't seem possible that a woman as bright and vivacious as Viv would want to spend her life with a guy like him. Was I being jealous? Hell yes, but the guy had the personality of a tackling dummy left overnight in the rain.\n\n\"He must have really changed.\"\n\n\"Why do you say that?\" she bit her lower lip.\n\n\"Steve was a grind back in high school. I never saw much personality from him. He came in, attended his classes, aced his tests, and went home. You strike me as the social type,\" I squinted at her, \"I see you as a cheerleader.\"",
        "\"Close. I was in the flag corps with the marching band. That would make me a nerd cheerleader.\"\n\nShe narrowed her eyes as she judged me.\n\n\"You were a nerd, too, but you did play sports.\"\n\n\"Guilty. I was on the technical crew for the high school plays, I swam and ran track.\"\n\nA pause followed.\n\n\"Steve is still very directed. I think he started dating me because he could talk medical stuff with me.\"\n\nI wanted to ask her how she kept awake while talking with Steve, but didn't. If she was happy, then the world should support her choice.\n\n\"Okay, one more question then I promise I'll stop prying,\" she gave me a dimpled smile that would have melted any resistance that I might have been able to mount, \"since you're going into your senior year, why aren't you working as an intern for some big accounting firm?\"\n\n\"I needed money so I can return to campus in the fall. There are plenty of unpaid internships available, but the ones that paid were taken by the time I started looking. I guess you have to start lining up your internship during your sophomore year. The downturn pretty much dried up all the jobs around home, so I took this job as kitchen help when nothing else turned up.\"\n\n\"What are you doing for the summer?\" I asked Viv after taking a sip of water.\n\n\"I'm a Property Management Consultant for Shore Wind Realty.\" She sat a little straighter pushing her shoulders back.\n\nI smiled. I liked her shoulders back.\n\n\"And what does that mean exactly?\"\n\n\"I spend the summer working on my tan while looking after Dad's house up here. Dad brings up clients on the weekends to golf at the better courses around Traverse City. My job is to make sure the food and booze is laid in, and all the beds are fresh, clean, and made, the vacuuming is done, and the showers and the toilets are scrubbed. He has a group coming up next Friday.\"\n\n\"That sounds like a sweet way to spend the summer.\"\n\nShe pouted. \"It would be if I could see my fiance a little more often. He's doing his internship at a hospital in Ann Arbor, and he gets zero time off. When he does, by his own admission, he's not much of a country boy. He considers anything north of Flint as out in the woods. As a result, I saw him for a weekend last month, and I haven't seen him at all this month.\"\n\nShe looked worried, but shook it off and her dimpled smile returned. \"I have to get used to being alone. It's what doctor's wives do. Medicine takes up most of their husband's time.\"\n\nHer languid stretch in her chair displayed her long tanned legs. I couldn't help it, I ogled them trying to imagine what it would feel like to stroke those velvety thighs then looked up to see her smirking at me.\n\n\"Anyway, he's coming up this weekend, so I won't be here Friday, Saturday or maybe even Sunday.\"\n\n\"Do you want me to stay away from the island?\"\n\nShe frowned.\n\n\"Why would I want you to do that?\"\n\n\"So you can bring him out here for a romantic picnic? I can't imagine a wet naked guy wandering about the island would add to the ambiance.\"\n\nShe shook her head.\n\n\"No, this is our place. I don't want to bring him to our spot. He can have the rest of the world, but not this spot. I found you and I don't want to share. He has all his friends he can talk to all summer long, and all I have is you.\"\n\n\"What about next week? Can you row out here when your Dad is entertaining clients?\"\n\n\"No problem there. Dad doesn't even want me in the house when clients are there. I stay in the pool house then go in mornings and straighten up things after they've left for the day,\" she looked off into the distance, \"people put me on hold all the time. I wait for Dad's clients to leave, Dad probably sent me up here to keep me away from his new wife, Mom loves me, but she has a new boyfriend, and Steve is really busy at the hospital.\"\n\nThat little worried look crossed her face once again. \"Even my friends are too busy with summer jobs and boyfriends to drive up here,\" an anxious look crossed her face supplanted at once by a smile, \"but things will change in a month when I go back to school.\"\n\n\"Anyway, I like you, Sean. You're the only one close to my age around here that I can talk to. I tried going to town to a bar once. All I got was the fish eye from the locals and open hostility from the women.\"\n\n\"I'm glad you're here. You're too fascinating to put on hold.\"\n\nShe reached out and grabbed my hand giving it a squeeze.\n\n\"Aww, aren't you sweet. You did it to me again. You got me talking about myself. What about you?\"\n\n\"I'm lonely, too. I learned a while back that I can't go home. Besides my parents, there's nothing there for me. My friends are either married or gone. Up here, the people my age at the camp are paying customers and the last thing I need is offending one of them. Most of the summer help are younger than me, and the locals my age don't want to get to know me because I'll be gone in a month. Mostly I sit and read.\"\n\nShe patted my hand.\n\n\"Well, it's a good thing we've found each other. We can both use a friend. Although, I wouldn't recognize you wearing clothes. I guess we'll barely be friends,\" she punned.\n\n\"I nude we would be.\"\n\nShe winced. \"Maybe we shouldn't spend time together if the puns start out that bad. I'd hate to give you a dressing down considering how little you started with.\"\n\n\"That would be the naked truth,\" I deadpanned.\n\nWe parted after that. I swam off into the glowing sunset, and she rowed off into the gathering gloom.\n\nI liked her. There was a sweetness about her that I found appealing and a quick mind that kept our conversations lively. She didn't look bad either. I did wonder about her taste in men though. Why would a beautiful, vivacious woman be engaged to Steven freaking Sullivan? It was like a bird of paradise marrying a chicken. She was touching me too. I knew that there was nothing to it, but it thrilled me when she did. Despite my efforts to rein myself in, my attraction to her was growing. There was a yearning and a vulnerability about her that made her even more attractive to me. I wanted to take her in my arms to comfort her and to assure her that she meant something to me. She was reaching out to me at the same time that I wanted someone like her in my life. It would all end in tears if I did anything more than act like a friend.\n\nI dreamed about her that night. I awoke vowing to keep my feelings in check. She was an engaged woman after all.\n\nA cool drizzle fell off and on all day Friday which killed most of the outdoor activities for the guests. Instead of sunning their pale naked flesh on the beach, the guests milled around the club house naked and listless eating their way through twice the usual amount of food. My boss asked me to hang on to meet the increased demand. I did knowing the overtime would sweeten my paycheck. The afternoon lunch crowd bled into the evening dinner crowd, and finally at six after a twelve hour shift the head cook sent me to my bunk.\n\nI couldn't decide if I wanted to swim out to the island. The cool, clammy breeze promised more rain from the leaden sky. I stared out the window at the mist drifting across the lake, and wondered if Viv would venture out on such a dreary day. When I couldn't stand the thought of her standing alone on the island waiting for me, I threw a towel over my shoulder and trod through the silent dripping pines down to the dock. For once, the water was warmer than the air, and I enjoyed swimming through a couple of rain showers on my way to the island. Rain is no problem, lightening is another story.\n\nAs I swam closer to the island shore, I spied Viv waiting for me. Something was wrong. I was barely out of the water when she threw herself at me.\n\n\"He dumped me,\" she said in a small voice whispered into my shoulder.\n\n\"He did?\"\n\nShe nodded her head against my shoulder, and her tears welled and ran down my chest.\n\n\"He called me up this afternoon about the time I expected him, and dumped me over the phone. He said that he was dating someone else.\"\n\n\"Then he's a coward and an idiot.\"\n\nI pulled her into an embrace. I was naked and she was wearing gray sweat pants and shirt. We made a strange looking pair.\n\n\"He's a coward because he didn't have the balls to break up in person, and he's an idiot if he thinks he can find someone better than you.\"\n\nWhen it started to sprinkle, I led her across the island through the towering white pines to the gazebo.\n\n\"I worried that you wouldn't come today because the weather is so awful, and I needed to see a friendly face.\"\n\nA tear rolled down her cheek, and I fought the urge to kiss it away.\n\nWe sat side by side on the rattan love seat. I dropped a couple blinds to block the drizzle from blowing on us. As we sat she leaned more and more on me until her head rested in my naked lap. She seemed to be fine with it so I didn't object. The gray day faded toward black night as we sat there.\n\n\"It's getting late,\" I rubbed her shoulder, \"I need to swim back to camp.\"\n\n\"Why do people push me away?\"\n\n\"I want you here with me right now. I'll never push you away.\"\n\n\"Could you please stay a little longer?\" she asked in a timid voice without looking up.\n\n\"Yeah, but it's going to be black tonight without a moon or stars so we have to leave while there's still light to see by.\"\n\nI looked out into the gathering gloom. The mists covered the point I had to swim to. I could still see lights across the lake behind me, but there were no guarantees they would remain visible if the fog got thicker. There were stories of swimmers getting lost in the fog where they swam in giant circles for hours before drowning from exhaustion.\n\nShe nodded, but didn't move. Finally, a few minutes later, I stood.\n\n\"We have to leave, now. I don't want you lost in the dark either.\"\n\nI was getting way too comfortable and she was busy hurting. One of us had to be the adult.\n\nShe got to her feet as if she was carrying a heavy weight.\n\n\"Could you please kiss me?\" she leaned against me, \"I could use one right now.\"\n\nI bent over to give her a polite kiss on the lips, but instead got a lip lock. She didn't open her mouth, but her intent was to get some affection and to give some also. It aroused me enough to get my blood stirring, and my erection rose unfettered by clothing.\n\nI stood back.\n\n\"I am so sorry, Viv. I don't have any control when a beautiful woman kisses me.\"\n\nShe looked up and smiled.\n\n\"Are you kidding, that's the nicest thing you could have done for me today. You make me feel attractive and desired.\"\n\nWith that she turned and sashayed down to her boat humming a happy tune. She spun around halfway down the path.\n\n\"Will you be here tomorrow?\"\n\n\"Sure will.\" I shouted back then I walked down to the water, and swam home in the dying light.\n\nI wasn't unhappy that her fiance had broken their engagement. She was out of my league, but now we could be more than friends for the remaining few weeks of summer. Would it end with a break up that would nearly crush me? Probably, but the thought of holding her in my arms overcame any anxiety that I might have about the breakup. She had to know the effect she was having on me. If she was okay with a fleeting summer affair then why shouldn't I be? I was to the point where she occupied my waking thoughts.\n\nSaturday's were crazy. The weekenders checked in Friday evening and the resort burgeoned at capacity. I cooked eggs all morning for the naked masses, worked a couple of hours overtime, and then finished up at the cheese station when we started making pizzas. When I got away, I grabbed my towel and trotted down to the water. The weather had cleared overnight and except for a cool northerly breeze that ruffed small white caps on the lake, conditions were ideal.\n\nI swam to the island wondering about Viv's emotional state Viv's. When I got close, I found her waiting for me on shore wearing a brief neon green bikini.\n\n\"New swim suit,\" I noted.\n\nShe beamed at me.\n\n\"You like? This is what I wear when Dad isn't around. I chose green because everyone else chooses either red or white.\"\n\nShe gave her hips a wiggle.\n\nI took my time checking her out. The suit was cut to be naughty but not lurid. It was more string than bikini but it covered what it needed to cover, and she didn't constantly adjust it to remain chaste. From the side, she looked naked except for the string that kept her bottoms on and the string that crossed her ribs. She looked good displaying acres of skin.\n\n\"I'll bet you turn a few heads when you wear it to the beach.\"\n\nShe twirled giving me a view of her nicely rounded bottom.\n\n\"You don't think it's too brief?\"\n\nI shook my head. \"You got the body for a thong, why not flaunt it.\" I paused for a moment. \"How are you feeling today?\"\n\n\"Better. It occurred to me overnight that while I liked Steve, I held a bit of myself back like I knew that Steve wasn't going to be the love of my life. He liked my Dad more than he liked me.\"\n\nShe looked up at me.\n\n\"Were you ever in a relationship like that where you gave far more affection then you got in return?\"\n\nI nodded.\n\n\"I had a girl friend when I shipped off to Afghanistan. She said all the right things, promised that she'd wait for me. As I kissed her goodbye, a part of me knew that a full year away would be too long. Her letters started out long and lusty, but they got fewer and further between, and then stopped all together. Six months into my posting, the dreaded Dear John letter arrived. Mine wasn't the only one, nor was it unexpected. My sergeant told our squad to expect them around six months into deployment. When the word got around that I had been dumped, I got called into the Sergeant-Major's office. We talked for a long time, he told me about how good airmen lose their edge following a Dear John letter. He told me I was a good airman and he was recommending me for Officer Candidate School if I reupped, and he didn't want to see me killed or wounded.\"\n\nI paused reliving the awful hollow feeling that I carried with me during that time. Suspecting that the letter was coming was one thing, finding out she lasted less than a month before dating again deadened my soul and forced me into introspection when I needed to pay attention to the dangerous world and hostile people around me.\n\nI looked over at Viv.\n\n\"Anyway, a sniper gut shot me on my next mission. I got him when he came looking for me, but the damage was done. For a long time I wondered if I was preoccupied when I should have been minding what I was doing. Now I think my luck had turned. I was lucky at life for a while, and then I wasn't. Being unlucky in Afghanistan got you killed or wounded.\"\n\n\"What about now? Do you feel lucky?\" Viv asked.\n\n\"Yes, finding you was lucky.\"\n\nShe flashed those dimples at me.\n\n\"Maybe my luck has changed, too.\"\n\nShe looked up into my eyes.\n\n\"The first time I saw you, I was attracted to you, but I was engaged,\" She gave me a wicked grin, \"now I'm not.\"\n\nShe threw her arms around me.\n\nI half wanted to go with the flow. The sex would be good for a week or two, then there would be the inevitable lover's spat. The make up sex would be okay, and then the final break up would be devastating for both of us. No, I didn't want to do that, and I wasn't even sure why that was. We had no future together. She was way out of my league. I wanted to kick myself as I passed on this opportunity to get this beautiful woman into bed with me, but her happiness was important to me, and I didn't want to add to her heartbreak. Being a gentleman sucks sometimes.\n\nShe looked up at me when I did not return her passionate kiss.\n\n\"What's wrong?\" she bit her lower lip.\n\n\"I don't want to be your rebound lover.\"\n\nShe stood back and frowned at me.\n\n\"What do you mean?\"\n\n\"Have you ever been dumped?\"\n\nShe thought for a moment and grimaced at an unhappy memory.\n\n\"In high school, just before the prom.\"\n\n\"What happened with your next boy friend?\"\n\n\"Not much, he didn't last long,\" she thought for a moment, \"I acted like a jerk to him.\"\n\n\"Why did you act that way toward him?\"\n\nShe frowned as she tried to recall what had happened.\n\n\"For some reason, I couldn't trust him, and I was a controlling bitch, and I may have been mean to him because I was still angry at my fromer boy friend. If I saw him now, I'd apologize.\"\n\nI nodded.\n\n\"I did the same thing when I came back from Afghanistan. My first girl friend was a caring, loving woman. It's the kind of woman I like and that's why I'm attracted to you.\"\n\nThat drew a smile from her.\n\n\"I made her life miserable. I was controlling, manipulative, and I could not trust her. I broke up with her convinced that she was the problem. My mother set me straight. It took her a while, but I came to realize that I was the asshole. That's when I learned about the rebound lover.\"\n\n\"So what are you proposing? That we part and go our separate ways?\"\n\nI grabbed her chin and kissed her. She pulled herself into me, and I loved our skin to skin contact. I ran my hands down her naked back from neck to buns. She responded by grinding her hips into mine. I did enjoy her urge to grind against me.\n\n\"No, let's be friends first. We can be lovers later if it seems like a good idea. You'll know when you're ready.\"\n\n\"How?\"\n\n\"It's different for everyone. A great start is when you don't think about Steve every thirty seconds.\"\n\nThat hit a chord with her. She dropped her head hiding her eyes.\n\n\"I think about him a lot. So how do we proceed?\"\n\n\"We visit with each other when we want to. We share each other's day.\"\n\nShe took a step back and shook her head.\n\n\"You're hard on a girl's ego. First I get dumped by my fiance, and then you turn me down when I throw myself at you.\"\n\nI pulled her in and hugged her.\n\n\"I'm not stupid enough to turn you down. It's a rain check. I want the confident, sexy woman I met last week. She's gone for a while, but she'll be back. In the meantime, there's this perfectly nice, incredibly beautiful woman that I find fascinating.\"\n\nI took her arm and walked her toward the gazebo.\n\n\"What are the ground rules? Can we kiss and hug?\"\n\n\"Sure,\" I thought for a moment, \"No tongue, or groping though.\"\n\nShe reached behind and pinched my bare ass while giggling.\n\n\"What about that?\"\n\n\"No.\"\n\n\"What if I accidentally brush my hand across your genitals?\"\n\nShe gave me a quick feel.\n\n\"No.\"\n\n\"Purple nurple?\"\n\nI grabbed both of her hands. \"No. Leave my nipples alone.\"\n\nShe pouted.\n\n\"This isn't going to be any fun. It sounds like I'm going to have to strut around naked to get a rise out of you.\"\n\nWe ended the evening with an almost chaste kiss. There may have been a little tongue involved. I had to respond in kind. I'm not made of stone.\n\nSundays were a light day at work. The day still started at six, but I was done at ten. Sunday was the one day we did not provide an evening meal and lunch was a station where people could make sandwiches. I made a ham and cheese sandwich for myself in the kitchen at the crew house then prepared to spend the rest of the day sunning myself and reading. The other college kids, looking odd in clothing, headed off to Traverse City to shop and bar hop.\n\nThe book I was reading did not hold my attention. I pictured Viv lonely and crying. I snapped the book shut mid afternoon and wandered down to the lake where I spotted a garish yellow boat floating off shore. The woman in it waved at me when I wandered to the end of the dock.\n\nIt was Viv, and I wondered how long she'd been waiting there. I dove into the water and swam out to the boat.\n\n\"Are you still free today?\"\n\n\"Yeah.\" I grabbed the gunwale so I wouldn't have to tread water.\n\n\"Hop in. I'll row you to the island. I've packed a picnic dinner.\"\n\nI swam around to the stern where I hoisted myself into the boat with all the grace of a beached walrus.",
        "\"Whoa, now there's a side of you I've never seen before.\" Viv said shaking her head.\n\nI managed to sit upright on the bench seat, but recovering my dignity would take longer.\n\n\"It's a good day for a picnic. Dad and his cronies are spending the day drinking and playing poker, and I wasn't about to sit in the pool house on such a beautiful day. So I packed a picnic dinner, rowed over here, and waited for you to notice me.\"\n\n\"How long did you sit out there?\"\n\nShe bit her lip.\n\n\"An hour?\"\n\nI laughed.\n\n\"That was long enough for the preening studs around here to notice you.\"\n\nShe smirked at me as she pulled the oars.\n\n\"Four swam out to the boat.\"\n\n\"I feel intimidated.\"\n\n\"Like Hell you do, and why am I rowing?\" she released the oars.\n\n\"It's your boat, why should I row?\"\n\n\"So I can do this.\" She reached back and removed her bikini top eliciting wolf whistles from men who where watching what as going on. Viv waved the bra above her head as she stood and bowed. That elicited more cheering.\n\nI like breasts, all kinds of breasts. Hers were modest, high and firm, but perfectly matched with the rest of her slender toned body. I imagined that I would enjoy them in my mouth if I got the chance.\n\n\"You're right about a two piece breaking the line of your figure.\"\n\nHer lithe body flowed sinuously from shoulder to hip. The view took my breath away. Of course, I was so taken with her that I would have found her sexy if she were sitting in an appliance box with only her head sticking out a hole in the top.\n\n\"You win.\" I shifted to the rowing bench, grabbed the oars and put my back into rowing as Viv sans bra posed primly at the stern with knees together and clasped hands resting on her lap. Only the neon green triangle of cloth at her groin kept her from being totally naked.\n\nThe point rapidly drew closer as I put my back into the rowing. I was careful and my side didn't hurt too much.\n\n\"This is nice,\" she hugged herself and rubbed her arms, \"I like this. I feel free out here in the open on this lake.\"\n\n\"It gets better when you remove the bottoms and jump into the water.\"\n\nShe thought for a minute.\n\n\"Taking off my top in public is a big move for me. Let me get used to this first, and I do deserve a hug and a kiss for being brave when we get to the island.\"\n\n\"I agree, you look amazing.\"\n\nShe was too antsy to sit in the gazebo, instead we circled the island sometimes on the minimal beach, and sometimes in the water when the brush got too thick.\n\n\"Why do you keep looking at me?\" she asked covering her breasts by crossing her arms in front of her.\n\nHer smile told me she enjoyed my attention.\n\n\"You're beautiful and there's poetry in your simplest movement.\"\n\nI pulled her arms away, there was no resistance.\n\n\"What should we call what we're doing now?\" she asked, \"dating doesn't sound right considering our current state of dress, and 'pals' seems to preclude flirting which I like doing way too much to give up.\"\n\n\"We could call it friends with a few benefits, or our summer fling,\" I suggested.\n\nShe looked up at me. \"Nope, neither would work. We're more at the 'grab your shot gun, Pa. She's prancing around half naked' stage though.\"\n\nShe pulled my head to her and gave me a great naked chest to naked breasts kiss. I responded giving as good as I got running my hands down her sides to her hips to the ties that held her bottoms on. I was so tempted to pull those strings and let the bottoms fall into the water. She wouldn't have minded.\n\n\"You're thinking naughty thoughts,\" she purred into my ear.\n\nShe reached down and gave my cock a playful tug.\n\nTemptation nearly outdid me, and I knew that I would take a long time thinking about my refusal on the swim home.\n\n\"What did you dream about last night?\" I asked as I stepped back.\n\nShe frowned at me. \"What has that got to do with... I was sitting in a row boat in the ocean, and there wasn't any land in sight. I was waiting for someone to come for me.\"\n\n\"Your fiance?\"\n\nShe responded with the slightest of nods.\n\n\"Did he ever come?\"\n\n\"No, I got sad after a while, then I got angry,\" she looked up at me, \"I began rowing convinced that I would have to save myself. I woke up before anything else happened.\"\n\nI pulled her into a hug as we stood in the ankle deep water.\n\n\"Viv, when I was in the hospital, I had a dream almost nightly that my girl friend would come see me. At first I was happy, then as time went on, her visits got awkward. Finally the dream stopped all together and I knew I was over her.\"\n\n\"What would you do if she appeared right now and told you that she had made a mistake and that she wanted you back?\" Viv took a step back and eyed me, \"be honest.\"\n\n\"I'd tell her no. I could never trust her fully, and I'm not the same person that I was back then. I know what I want in a woman now, and it isn't her.\"\n\nI turned the tables on her.\n\n\"If your fiance showed up right now, and asked to be taken back, what would you do?\"\n\nShe looked away and her eyes got misty.\n\n\"I'd take him back. Does that make me a weak person?\"\n\n\"No, it says that you still love him though.\"\n\nWhen she started tearing up, I grabbed her hands.\n\n\"It's weird,\" she sobbed through tears, \"my relationship with Steve will never last since he cheated on me, but I'd feel so comfortable in his arms.\"\n\nI grabbed her hand.\n\n\"Let's get out of this water before our feet get all prunish.\"\n\nWe spent most of the afternoon in the gazebo on the rattan love seat. She laid her head in my lap and I spent my time stroking her body including her breasts.\n\n\"M-m-m,\" she sighed, \"that feels so nice.\"\n\nI also stroked her hips, and it was obvious that she would have let me pull the strings and take her bottoms off, but I didn't. She still wasn't over her fiance.\n\n\"Why haven't you pulled off my bottoms? You know I'd let you if you did.\"\n\nShe looked up at me from my lap.\n\n\"You have to take them off, not me. The bottoms will come off when you're over Steve. While you wear them, I know that you still have a thing for him.\"\n\n\"But I want you to take them off me.\"\n\n\"If you want them off, take your bottoms off right now.\"\n\nShe began to sit up then hesitated.\n\n\"You're right,\" she said after reflection, \"it does seem like I'm letting Stephen down.\"\n\n\"I want you to joyfully rip off that suit when you see me coming.\"\n\n\"Does it have to be joyfully? Would grudgingly work?\"\n\n\"No, it has to be joyfully,\" I shook my head, \"I won't accept anything less.\"\n\n\"I've never joyfully jumped out of my clothes for any man.\"\n\n\"I guess that makes you a joyful virgin.\"\n\nShe frowned. \"Where do you come up with this stuff? You are by far the weirdest nude man that I have rested my head on.\"\n\nThe week wasn't all tears and remorse. The confident, sassy woman I had first met peeked out from behind her somber face from time to time. I learned that her father owned a string of car dealerships across the country, that he and her mother had divorced, and while he wasn't the most demonstrative father, he wanted Viv to get a good start in life. College was his gift to her.\n\nThe following Sunday, as I swam up to the island, I noticed a subtle change. She greeted me nude. Like the creature from the black lagoon, I emerged from the water drawn to her flawless beauty.\n\n\"Did you joyfully remove your suit when you saw me swimming up to the island?\"\n\nShe placed her hand over her heart and held up three fingers on her other hand.\n\n\"Scouts honor.\"\n\n\"What do you think?\" she asked giving me a little curtsy.\n\n\"You're amazing.\"\n\n\"You don't think that my hips are too wide or that I'm too flat on top?\"\n\nI shook my head.\n\n\"I am captivated by your beauty. You are perfection.\"\n\nThat elicited a smile from her.\n\n\"My fiance used to complain about my lack of boobs.\"\n\n\"We've already established that your fiance is an idiot.\"\n\n\"Why do you say that?\"\n\nI pulled her into a full body hug.\n\n\"You're warm, you're loving, and you're passionate. Sexiness has nothing to do with how perfect your figure is according to some arbitrary standard set by a New York fashion editor. It's in your mind. If he doesn't understand that, then he deserves an overinflated woman who does nothing but lay there looking at social media while he makes love to her.\"\n\nShe laid a hay maker of a kiss on me while grinding her hips into my groin. I responded with an erection that hardened into steel and stood up between us.\n\nViv stepped back and examined what she had done with an approving nod.\n\n\"Part of you enjoys me loving on you.\"\n\n\"All of me does.\"\n\nI scanned her naked, tan line free body.\n\n\"You're a little more used to outdoor nudity than I thought.\"\n\nShe did a pirouette.\n\n\"You like? I sun naked beside the pool, but only when Dad is not up for the week.\"\n\n\"Your beauty is breathtaking,\" I grabbed her hand.\n\n\"Let's go for a swim. I've never done that naked.\"\n\n\"Not even in your pool?\"\n\nShe shook her head.\n\n\"I didn't want to get all that lotion and oil in the pool. It makes pool maintenance harder.\"\n\nI held her hand and we waded into the water until it was chest deep on her then began swimming.\n\n\"Go easy on me, I'm not as strong a swimmer as you are.\"\n\nShe dog paddled around me. I did enjoy watching that amazing butt of hers rising above the water with each kick.\n\n\"I see what you mean about swimming naked. I don't think I'll ever want to wear a suit again. The water flowing over my body is so sensuous.\"\n\nShe swam up and threw her arms around my neck.\n\n\"Mind if I hang out here for a while?\"\n\nShe wrapped her legs around my waist and I slipped my hands under her firm bottom to give her more support. It was no strain at all holding her in the buoyant water.\n\n\"This is nice,\" she murmured into my ear, \"I love the silky feel of our bodies sliding against each other. Let's stay like this for a while.\"\n\n\"Fine with me as long as you don't mind my erection joining the party.\"\n\nShe kissed me.\n\n\"We should make love.\"\n\n\"How often do you think of your former fiance?\"\n\nShe kissed me following it up with a tender nip at my lower lip that made my groin jump.\n\n\"Oh my, your cock liked that little nip,\" she wiggled her hips until my cock was centered in the valley between her legs, \"I think of Steve less and less and not at all around you.\"\n\n\"Are you on the pill?\"\n\nShe shook her head.\n\n\"Did you bring condoms?\"\n\nAgain, she shook her head.\n\n\"Steve took care of that.\"\n\n\"We have a problem.\"\n\nShe pushed off from me.\n\n\"There are still fun things we can do.\"\n\nShe swam off to the island, and I followed admiring her dimpled back as she emerged from the lake looking like a water nymph.\n\nAt the gazebo, we toweled off, and grabbed a couple of waters.\n\n\"I'm going to give you a first class blow job. I'm very good at it, and you've been nothing but nice and supportive to me,\" she wiggled her shoulders.\n\nShe spread our towels on the wooden floor.\n\n\"Get down here, spread your legs and do nothing. When I give head, I'm in charge, so don't distract me by trying to pleasure me.\"\n\nShe lay down beside me and gave he an intense kiss forcing her tongue between my lips until I surrendered and opened my mouth to her. Her enthusiasm had an effect. If I had an erection before, I had a tent pole now. Her erect nipples dragging across my chest had me squirming with delight. From there she drifted down my body planting soft kisses down my chest lingering to tease my nipples where her attentions sent little erotic shocks straight to my groin making my cock jump. The lower she moved on my body, the more excited I got.\n\nShe examined my cock holding her hand around the base sending exquisite shocks through me. I may have moaned in frustration and anticipation. It had been a while, and my control eroded under the onslaught of her exploring lips.\n\n\"You're driving me crazy.\"\n\n\"It's about time,\" she looked up at me while holding my cock against her cheek, \"I was beginning to think that I'd lost my touch.\"\n\nWith that she stroked me.\n\n\"You're thicker than Steve.\"\n\nShe kissed the head of my dick then ran the tip of her tongue along the underside probing that sensitive area while cupping my balls with her other hand.\n\nI wanted her touch so badly that I nearly grabbed her. I caught myself and returned my hands to the floor above my head.\n\n\"You're in my power now,\" she said as she stroked my cock adding to the growing urgency in my groin.\n\nWhen I thought it couldn't get any better she engulfed me taking me deep into her mouth.\n\n\"I'm getting close.\"\n\nShe continued to suck until I tensed up, then she backed off and held my dick straight up in the air as I geysered sending hot cum across my stomach and her hand.\n\n\"Wow!\" she shook her head in amazement. \"That first spurt shot two feet in the air.\"\n\n\"You have that effect on me.\"\n\nShe got up, splashed a little water on the corner of my towel and cleaned me up.\n\n\"Would you like something to eat,\" she asked as she hung the towel over the railing around the gazebo.\n\nI shook my head, no.\n\nShe looked confused.\n\n\"What do you want to do?\"\n\n\"I want you here beside me,\" I patted the floor, \"we have unfinished business.\"\n\nShe looked confused.\n\n\"You pleasured me, and now I pleasure you.\"\n\n\"I don't need to...\"\n\n\"Fair is fair,\" I insisted with a smile.\n\nShe sat beside me, and lay down when I patted the floor.\n\n\"You don't have to.\"\n\n\"I want to.\"\n\nI kissed her lips and detected a little tenseness.\n\n\"What's wrong?\" I asked sitting back.\n\n\"Steve never, you know...\"\n\n\"I'm not Steve and I love pleasuring a woman. It's almost as good as an orgasm.\"\n\nI kissed her again and felt her resistance melt away as I stroked her breasts. From there I dropped lower and did a thorough job on her puffy nipples.\n\n\"Be careful,\" she whispered in a husky voice. \"My breasts are very tender.\"\n\nI tongued her nipples and sucked them gently until she tensed up and shivered.\n\n\"Are you all right?\" I asked lifting my head to look into her eyes.\n\nShe smiled back. \"I had a little orgasm. I've never had one before from a man playing with my breasts.\"\n\nMy lips drifted lower kissing down her ribs, spending time caressing the soft skin of her tummy and breathing in the heady aroma of her delta of Venus.\n\n\"You're driving me crazy,\" she murmured with her eyes closed.\n\nI pushed her legs apart and crawled between them and kissed her outer lips. I took my finger and slowly drew it up her crease collecting her moisture along the way. With my well lubricated finger, I found her clit and circled it stroking it from time to time.\n\nShe moaned as I devoted more and more attention to it. I slid my tongue into her crease and licked from bottom to top. She locked my head in place between her thighs when I moved higher and laved her clit.\n\nShe responded with a scream, then she started bucking and I had to put my hand over my mouth to keep my teeth from injuring her.\n\nWhen she relaxed I tried to tongue her clit again, but she pulled my head up.\n\n\"You have to stop now. I'm too sensitive,\" she tapped her lips, \"you have to kiss me.\"\n\n\"Now? You don't want me to wipe my face off?\"\n\n\"I want to taste me in your mouth.\"\n\nI obliged laying beside her kissing as I stroked her perfect body feeling her respond beneath my hand.\n\n\"Steve refused to pleasure me like that.\"\n\n\"Did I do okay?\"\n\n\"You were wonderful.\" She stroked my chest while nodding, \"I've never had an orgasm that strong from oral sex. Your tongue should be a national treasure.\"\n\n\"You weren't so bad yourself,\" I kissed her on the neck where it met her shoulder.\n\nShe shivered.\n\n\"You're giving me goosebumps.\"\n\nI pulled her in and gave her a full body hug tangling her legs with mine.\n\n\"What you did earlier gave me goosebumps.\"\n\nShe sat up and ran her fingers through her hair. I admired the gentle curve of her back, and the simple elegance of a beautiful woman primping after making love. I wished I had talent. I wanted to paint her like this with the low afternoon sun shining in a pool around her. Her auburn hair glistened with reddish gold highlights in the intense evening light. Her figure was graceful curves moving to a sensual rhythm.\n\n\"Why are you staring at me?\" she asked smiling.\n\n\"Your beauty and elegance enthralls me. I wish I had a camera. I want to remember this moment forever.\"\n\nShe said nothing. Instead she smiled and kissed me.\n\n\"I feel beautiful with you.\"\n\n\"Then I've done my job.\" I ran my hand down that lovely back, \"clothing adds nothing to you. Your beauty should be allowed to shine forth.\"\n\n\"You're making me blush.\"\n\nShe stood.\n\n\"I'm hungry. Let's eat.\"\n\nThe cold fried chicken and potato salad became a naked feast with her. I did eat a little potato salad off her breasts on a dare, and she ate a little off my cock for the same reason. Afterwards we pleasured each other until the sun set. There was no further sex; none was needed. I devoted all of my attention to her and she to me, and those strokes and kisses were all we needed or wanted.\n\nWe stayed longer than we should have. The sunset wasn't even a hint on the horizon when the cool evening temperatures got to us. In the northern sky, the Little Dipper was rising to stand on its handle which meant that summer was nearing an end. I watched Viv pack up. At the last moment, she grabbed her swim suit, thought about it and threw it into the cooler.\n\n\"Aren't you wearing your swimsuit home?\"\n\nShe shook her head.\n\n\"It's dark, no one can see me, besides I don't want to wear clothes. It feels too good running around without them.\"\n\nWe hugged and kissed one final time, and she walked down the path to her row boat. I turned and headed in the opposite direction.\n\nI was happy on my swim home. She was a beautiful woman and she was mine at least for a while. The sex had been good, but it was so much more than that. There was a basic goodness to her that shone through. She was just good people, and she fascinated me. Even without the sex I was drawn to her quirky humor and her vulnerability, but the sex was too fantastic to ignore.\n\nShe disappeared for the final week in August. She hadn't drowned. That would have been news all around the lake. I considered grabbing a canoe one evening and paddling over to her house, but I wasn't sure how I'd be received with or without clothing. Instead, I swam to the island nightly to check for signs she had been there and perhaps left a note. When I found nothing my heart ached. As the week progressed that familiar hollow feeling returned to my chest.\n\nI'd been lonely before, I could do it again if I had to, but her absence left me more wretched than I had been before we met. There had been no vows of exclusivity exchanged, but I thought that she might get word to me if she had decided to move on. Her disregard stung me. She was better than that, but perhaps I wasn't worth her time.\n\nI descended into a tail spin of self doubt. At my lowest, I considered joining the evening poker game. Being alone in company was better than being alone in my room.\n\nLabor Day, my last day of work, dawned hot and humid. My fellow workers had assured me that Labor Day would be the busiest day of the year, and they were right. Even though we did not serve dinner that day, the breakfast and lunch crowds were huge, hungry, and hustling as they prepared for the long drive home. I worked straight through from six in the morning till three in the afternoon. After that I returned to my room and packed for the trip to East Lansing in the morning. It didn't take long since everything I owned fit in a military style duffel. At twenty-six, having that little seemed pitiful. Other men had jobs and careers; I had three pairs of pants and eight shirts. After dinner, I wandered down to the water and gazed out into the lake. The view calmed me. The sun glinted off the water as a breeze rippled the surface. I would miss this place even if those memories were tinged with loneliness.",
        "Viv was out there beyond the point on the other side of the lake maybe. More likely, she had returned to either her home or Ann Arbor. Still I harbored the thought that she would find a way to say goodbye before she left. I admitted to myself for the first time that she had meant more to me than I had to her. The thought stung, but there was nothing to do but shrug and move on.\n\nI returned to my room, and checked the weather app on my phone. A line of good sized thunderstorms was out over Lake Michigan, but it would take a while for the storm to come ashore. I grabbed my towel, and trotted down to the lake breathing in the heavy humid air knowing that this would be my last swim. Despite the loneliness that came with it, I would miss this place. I would miss the evening swims most of all.\n\nA gusty wind raised a chop on the lake and flipped the maple leaves showing their silvery undersides, but the blue sky and puffy clouds hinted no menace. I enjoyed my swim knowing it was my last one.\n\nViv waved to me when she saw me. I wore her orange one piece suit. When I stepped on shore, she hugged me.\n\n\"I wanted to see you one last time,\" she kissed me lightly on the lips. \"I need to tell you what happened.\"\n\nShe handed me a towel and motioned for me to follow her to the gazebo where she handed me a bottle of water and motioned for me to sit down. I chose the Adirondack chair facing away from the lake. I did not want her sitting next to me as she told me her bad news.\n\n\"The day after I last saw you, Steve drove up to talk to me. He apologized for breaking off the engagement and asked that I take him back. I did and we spent five days together. We had some long talks about commitment. He told me about his fling with a drug rep and I told him about you. He wasn't happy, but he agreed it was his own fault for breaking our engagement.\"\n\nThere was a long pause between us. Maybe she expected me to say something or yell at her, but she had the wrong guy. My father had told me long ago that either a woman wanted to be with you or she didn't. No amount of begging or yelling would induce a woman to stay if she wanted to leave. Let the woman walk if she wants to.\n\n\"You've made your choice,\" I said as I stood. \"Goodbye Viv. Thank you for being my friend this summer.\"\n\nViv stood, frowning.\n\n\"Please don't be like that.\"\n\n\"There's no other way for me to be. You're an engaged woman, and I shouldn't even be standing naked in front of you.\"\n\n\"I've hurt you.\"\n\nI nodded.\n\n\"You have. I thought we had something. But I was the only one. I'll get over it.\"\n\nI walked toward the door to leave when an ominous clap of thunder rolled from horizon to horizon.\n\nWe looked southwest across the water in the direction of the nudist resort.\n\n\"I've never seen the clouds look green,\" she turned to me, \"what's happening?\"\n\n\"We're in for one hell of a storm.\"\n\nThe fresh gale blowing out of the southwest dropped to nothing which allowed us to hear the constant growling of distant thunder. The storm had come ashore much quicker than I thought it would. A flash of lightening illuminated the towering clouds giving them definition against the roiling thunderheads behind.\n\n\"How long does it take you to row from here to your house?\" I asked her holding my hand out the door to see if it was raining.\n\n\"About about half an hour.\"\n\nI shook my head. \"You'll never get back to your house in time. I don't want you out on the lake sitting in an aluminum boat with lightening overhead. We'll shelter here on the island.\"\n\n\"Where?\"\n\n\"Underneath your rowboat.\"\n\n\"Why not in the gazebo?\"\n\n\"It won't be any protection at all in the coming storm.\"\n\nI ran down to the water and lugged the rowboat to higher ground. I felt pulling at my incision and an ache deep in my gut, but everything held. When I got it to the sandiest ground I could find, I flipped the boat over then motioned for Viv to climb under it with me as the wind that had been high in the trees descended upon us and nearly tore the boat from my hands as it pelted me with sand grains. The towering Vive pines bent to crazy swirling angles in the gusting winds. Small branches broke off and dropped upon us. Above the roar of the gusts, the sound of creaking and snapping wood filled the air.\n\nOnce we were underneath, I shoved handfuls of sand toward the bow of the boat in the close darkness.\n\n\"What are you doing?\" Viv a voice in the darkness asked above the constant growling of thunder.\n\n\"We need to scoop out a depression so we can lay here without touching any metal. We'll get electrocuted if we're touching metal and lightening strikes.\"\n\nIt took a few minutes, but with Viv's help, we had a cramped place where we could sit up without hitting our heads on the boat seats. My gut ached from the lifting and the digging, but I didn't think I had done any damage.\n\nOutside the storm continued to build, and heavy raindrops thudded on the aluminum. The wind blown hail that followed sounded like shovelfuls of gravel thrown on top of us.\n\nA couple of times, the wind shook the boat, but it stayed in place. I should have pointed the bow into the wind. I hoped we wouldn't suffer from my mistake. Branches snapped and trees crashed to the ground outside our makeshift shelter shaking the ground. Following a huge wind gust, a loud crackle and a louder thump, followed by a lot of scraping scared the hell out of both of us.\n\nShe screamed and a very naked Viv cuddled in hard next to me.\n\n\"What happened to your suit?\"\n\nIt was too dark to see anything in the gloom.\n\n\"It got full of sand and was itching me to death.\"\n\nI didn't mind.\n\nA thousand heart beats later the storm abated outside our shelter under the boat. The wind dropped and the rain abated.\n\n\"It's time,\" I sat up and pushed against the boat. It didn't budge.\n\n\"What's wrong?\" Viv cried, a hint of panic pitched her voice higher in the darkness.\n\n\"A tree fell across the boat.\"\n\n\"Are we stuck here underground?\"\n\n\"No, we're in soft sand. It'll take digging, but we'll get out.\"\n\nI tunneled under the gunwale ignoring the pain in my side pushing the sand anywhere I could. Gradually our depression in the sand filled up. After ten minutes of digging and about the time I was sure there were no other places to shove sand, I broke through to the smell of fresh air heavily scented with pine. None of the branches laying across the opening I dug were big enough to block us and we crawled and wiggled through the wet sand to our freedom.\n\n\"Oh my God!\" Viv said surveying the damage, \"look at the gazebo.\"\n\nA towering white pine with a trunk two feet in diameter had smashed into it crushing the roof. It was the same white pine that had pinned our boat to the ground. Fortunately the gazebo had cushioned us from the full force of the tree falling. We would have been crushed otherwise. The island had protected us.\n\n\"Do you think you can get my boat out from under that tree?\"\n\n\"No way. Not without a shovel and a chain saw.\" I rubbed my side. A piercing pain told me something was not right.\n\nViv hugged herself in the half light.\n\n\"What are we going to do? I don't even have my swim suit. It's buried in the sand beneath the boat.\"\n\n\"We'll swim to the point, take a break there, and then we'll swim to my dock. It's the shortest way to help.\"\n\n\"I'm not that strong a swimmer,\" she said in a daunted voice.\n\n\"Were there life vests in the boat?\"\n\nShe thought a moment. \"They're stowed in a compartment under the middle bench seat.\"\n\nI pushed pine branches aside and began digging. The fight was only half over when I discovered the door. The fallen tree had crushed the keel enough that the door was sprung and would only open about a third of the way. It took twenty minutes of tugging and pulling to remove a life vest.\n\nViv slid the life vest on and zipped it up. We waded into the water. It took a while, but she learned how to swim with a life vest on and we made slow progress through choppy water to the point. I could see nothing in the dark, but near constant flashes of lightening from the retreating storm kept us orientated.\n\nHalf way across, Viv stopped swimming.\n\n\"There's something wrong with the life vest. I'm sinking lower into the water and it feels like a soggy blanket around me.\"\n\n\"We're two hundred yards from the point. Do you think you can swim it without the vest?\"\n\nThe burning sensation in my side made my swim difficult, too. I could only manage a side stroke.\n\nShe unzipped the life jacket and shrugged it off. It sank out of sight.\n\n\"I damn well can't make it to the point wearing that.\"\n\nWe set off again for the point, but progress was slow. Viv was tired and I was feeling worse by the minute.\n\n\"You go ahead, I've got to rest here for a minute.\" I heard fatigue in her voice.\n\nWe were a hundred yards away from the point. It might as well have been a thousand.\n\n\"No way in hell I'm leaving you. We either do this together, or we don't do this at all.\"\n\nExhaustion was etched into her face, I had to do something.\n\n\"Viv, can you float on your back?\"\n\n\"I think so.\"\n\n\"I'm going to put my arm around your neck and buddy swim you to the point.\"\n\nIt took a while for us to get used to it. If I took too big a stroke, I dipped too low in the water and Viv would come up sputtering. We got there, but I'm not sure how. The pain in my side was constant and growing. Something was very wrong.\n\nViv breathed a huge sigh of relief when her feet touched the bottom and she waded to shore.\n\n\"Oh, my God, what's wrong?\" she shouted when she turned to see me doubled over at the edge of the water.\n\n\"I tore open an old injury.\"\n\nShe pulled me from the water and set me on a branch of a fallen tree.\n\n\"We're four hundred yards from the dock,\" she squinted into the dark sporadically illuminated by heat lightening.\n\n\"You can swim that easily once you've rested a bit.\"\n\nThe all encompassing pain that wrapped me in a cocoon had begun separating me from Viv and my surroundings. I didn't care about what happened to me as long as Viv got to safety.\n\n\"I'm not leaving without you. I love you too much,\" she stroked my forehead, \"when I was in trouble, you said we finish this together or we don't finish it at all. Nothing has changed.\"\n\nAfter a brief rest, she pulled me to my feet.\n\n\"We can do this. You were strong for me, now it's my turn to be strong for you.\"\n\nI leaned on her as we waded back into the water. The buoyancy of the water took some stress away from my stomach muscles and the pain lessened.\n\nIt took a long time to swim the last two hundred yards. Viv swam beside me the entire way giving me steady encouragement.\n\nMy final obstacle was the ladder at the dock. I tried to climb it and discovered I was too weak to pull myself from the water. I swam to the boat launch and dragged myself out with Viv's help.\n\n\"What do we do now?\" Viv asked as I lay balled up on the wet grass.\n\n\"I can't go any further. Follow the path, it will take you to a cluster of buildings. The biggest one is the lodge and cafeteria. There will be people there.\"\n\nThen she was gone. I passed in and out of consciousness. I could feel myself growing colder; I was going into shock, and in a strange way, that was all right with me. I had done what I needed to do. Viv was safe. I heard the music again and knew I was dying. The eerie tone soothed me. At times it seemed I could reach out and touch it.\n\nI woke up once to people throwing a blanket over me while a flashing light was shining in my eyes. The next time I awoke, I was in an ambulance and the siren was on.\n\nI drifted back to consciousness in a hospital room. Nothing hurt, but nothing moved well either. I wondered what day and what time it was for some reason and got my answer when I read the whitee board on the wall at the foot of my bed. It was Wednesday, September 5. I had lost a day. The clock above the board said it was 3:35. The sun streaming in the window told me it was the afternoon. With that answered, I wondered where Viv was.\n\nAfter a while, a nurse breezed in.\n\n\"Look who's awake.\"\n\nShe gave me a sympathetic smile when I pointed at my mouth and throat.\n\n\"You're getting your fluids and nourishment by IV for right now, but I can get you some ice chips for your mouth.\"\n\nI nodded and my recovery began.\n\nThrough the miracle of band aid surgery, a specialist from Ann Arbor had flown in to repair the tear in my small intestine, a fistula at the site of my old injury had popped dumping infection into my abdominal cavity. The surgeon discovered that my bowel was seventy percent blocked with scar tissue. My injury had revealed the blockage and an ulcer that had never healed. Once I had recovered a little, and the threat of peritonitis had passed, they released me.\n\nA week later, I signed myself out of the hospital over their objections, and drive downstate to East Lansing. Classes had resumed, and I hoped I wasn't too late. My house mates helped me get set up. Then a campus veteran's association appeared and got me my books and schedule, and began driving me to class. What truly amazed me was when food appeared at the door. One night it would be pizza, another night a Rueben and fries would appear along with a Greek salad. I guessed it was the Veteran's association who was doing it.\n\nMy body healed. I walked to my classes after a few weeks. Sympathetic professors eased me back into the role of a student. Life returned to normal except for my morose state. I dragged around for weeks missing Viv, then decided that the only thing I could do was throw myself into my studies. Over the next few weeks, my mood improved, but there was no way I was getting over her. She had been a glowing candle in the darkness of my life. Even worse, I feared that I had lost the love of my life. There was too much that was right between Viv and me. I was sure I would never find her equal.\n\nAt 11:55 am on a cool, sunny second Friday in October, I received a text as I was leaving my last class for the day.\n\nI'm at the coffee shop on Grand River and Charles St. You've got fifteen minutes to get  here. I'm illegally parked in a loading zone. Viv\n\n \n\nI lurched across campus ignoring any discomfort, and discovered her sitting at a small table that she had snagged despite the crowd. She sat in a pool of sunlight streaming in through the window looking like a preppie angel. A coffee sat across the table from her waiting for me. I settled in and took a sip.\n\n\"How did you know I like my coffee black?\"\n\nShe grinned at me revealing those captivating dimples. I had missed that smile.\n\n\"Your mother told me. She says hi by the way, and she wants you to call home when you get a chance.\"\n\n\"You talked to my mother?\"\n\nShe nodded.\n\n\"I told her everything. How we met on the island with you naked and me wearing a bathing suit, how you saved me twice our last evening together and how the last time I saw you, you were being rolled into an ambulance.\n\nShe giggled.\n\n\"I like her. I learned a lot about you, mystery man.\"\n\nThe frown of concentration crossed her face.\n\n\"You know, I like you better naked. Your clothes are okay, but they hide some really outstanding parts.\"\n\nOne of the two coeds sitting at the table next to ours nearly lost her mouthful off coffee. They both stopped talking and listened in without making it obvious.\n\n\"What brings you to East Lansing?\" I asked nodding my head in the direction of the coeds.\n\nViv winked at me.\n\n\"You do, silly. We have unfinished business. We never got a chance to make mad, passionate love and I really, really want to.\"\n\nShe turned to the coeds as if they were friends enjoying a group conversation.\n\n\"He worked at a nudist resort all summer, and we met on an island in the middle of a lake. We never got the chance to crawl in bed together, and well, look at him. Who wants to miss out on a chance like that?\"\n\nShe gave them a hundred watt smile. Both coeds turned bright red and hunkered down in their chairs. Viv turned back to me.\n\n\"By the way, Steve and I are done.\"\n\nI leaned in.\n\n\"What happened?\"\n\n\"The next morning after your boss dropped me off at my house wearing only a borrowed hockey jersey, I checked my phone and got message after message from Steve who had been trying to reach me all evening. When I called him, he asked me what happened, I told him everything. He went ballistic. He said there was no way that he could love a woman who he couldn't trust. This time I broke off the engagement. I'd had enough of his 'trust me whatever I do, but I control you' attitude.\"\n\nShe pointed at me.\n\n\"That's your fault. You gave me the courage to think about what I want, not what my mother, or my father or Steve want.\"\n\nShe reached up and scratched her neck.\n\n\"I may have told him to go play with himself. He hung up the phone after that.\"\n\nShe sipped her latte, her pride in her assertiveness evident. Confident Viv was back again and I loved every moment of it.\n\n\"I'm done with him. He didn't care about a tree nearly killing me or that I could have drowned or if you survived after saving me. All he cared about was that I had gone out in the boat one last time to say goodbye to you.\"\n\nThe coeds continued to stare at their coffee cups feigning disinterest, but neither had gotten up though both had finished their muffin and coffee.\n\n\"Then he had the nerve a couple weeks later to tell me that he had forgiven me and that he would take me back. He said that I made a great partner for him. He didn't say he loved me, only that I'd be a great partner like we were a law firm. How could a girl not get all warm and fuzzy from that? I'm surprised that he didn't high five me and give me a Team Sullivan tee shirt.\"\n\n\"What did you say to him?\" I may have smirked a little guessing what her answer had been.\n\n\"I told him to go fuck himself,\" she gave me a triumphant grin, \"it made quite a stir in the formal restaurant. I got up and marched out of there with my head held high and called Uber to take me home. He tried calling a bunch of times, but I turned off my phone.\"\n\n\"Anyway,\" Viv continued, \"I'm assuming you want to make love to me. Do you?\"\n\n\"Of course I do, but will this be a momentary dalliance or is this going to be longer term?\"\n\n\"I had a wise man once tell me that it's best to become friends first, then move on to becoming lovers.\"\n\nI turned to the little blond next to me who was listening in.\n\n\"What do you think I should do?\"\n\nShe blushed again.\n\n\"I'd kiss her, but I'd also like to give you my number in case you two don't work out.\"\n\nViv shook her head and shot daggers at the girl with her eyes.\n\n\"Not a chance, Spartie. I saw him first, and he won't be of much use when I'm done with him, anyway.\"\n\nShe may have said it a little louder than she should.\n\nThe little blond's buddy slunk down in her seat so far that I thought she would slide out under the table. The blond withstood the onslaught and looked like she wanted to say something back, but decided not to.\n\nI leaned across the table and kissed Viv to distract her from the blond and also because I wanted to.\n\n\"M-m-m. I've waited for that kiss far too long,\" she cooed.\n\nI stood.\n\n\"C'mon. Let's get out of here.\"\n\nAs we left several tables wished us good luck. More than one table had been listening in. Viv is like that, she attracts attention wherever she goes.\n\nWe climbed into her SUV and headed north on the expressway.\n\n\"Where are we headed?\" I asked looking out the window at the passing trees about ninety percent changed to their autumn splendor dazzling in the sunlight.\n\n\"To the lake, of course.\"\n\n\"It's a bit nippy to be running around naked on the island.\"\n\n\"Relax, I've got everything covered,\" she nudged me with an elbow, \"covered, get it?\"\n\n\"That's good because the island was almost denuded by the thunderstorm,\" I punned right back.",
        "\"The naked truth is that's hardly a joke,\" she smirked, \"I can do this all day.\"\n\nI held up my hands.\n\n\"You win. I can barely keep up.\"\n\n\"We can spend the evening in the pool house. It was home for the summer, and I spent a lot of my time there thinking about you.\"\n\n\"That's romantic in a pool boy fantasy sort of way.\"\n\n\"You're okay with spending the night there?\"\n\n\"A tin shack in a junkyard would seem like paradise with you in it.\"\n\nShe stroked my thigh.\n\n\"You're sweet, and that's the reason why I've missed you so much. You're pretty mushy for a guy. Also the pool house isn't heated. We'll have to cuddle to keep warm. I brought a couple sleeping bags to zip together.\"\n\nShe flashed that thousand watt smile at me.\n\n\"I'm sweet only for you, darling,\" I turned to her, \"so, how have you been?\"\n\n\"Lonely. I went back to Ann Arbor and announced that I had broken off my engagement. Over the next week, I discovered that none of my friends liked Steve. Several of his supposed buddies hit on me, then a girl friend fixed me up with a handsome, go-getter of a Michigan man who was perfect for me in every way but one.\"\n\n\"What was that?\"\n\n\"He wasn't you. I talked with my mother about Steve and you. I told her everything and she suggested that I go on the pill. I'm liking this 'telling the truth' thing,'' she used air quotes which made me nervous since she took her hands the steering wheel to do so and we were doing 79 miles per hour in traffic, \"she also told me that the heart wants what the heart wants. Steve and you had both shown me who you were, and that I should believe both of you. It didn't take much reflection to figure out who I wanted.\"\n\nShe stared straight ahead watching the road, and that freed her to talk.\n\n\"Don't take this wrong, but you're not the kind of guy I thought I'd be happy with. I thought I wanted an urban sophisticate, then along comes you being brutally honest and not caring a bit about fashion or the urban scene. Now I can't get you out of my head,\" she shrugged.\n\n\"I'm not the he-man type, and I do enjoy reading. Not crazy about crowds though.\"\n\n\"No, you're not, but when that storm hit, you knew what to do. I was safe with you,\" she frowned deep in thought. \"It's been a long time since I felt that safe, protected and cherished. I can't even imagine what Steve would have done in the same situation. We'd probably be dead.\"\n\nShe glanced over at me with dewy eyes.\n\n\"I like being cherished and protected very much. I watched my dad leave my mother and me when I was ten. I know the effect it had on her, but I never considered the effect it had on me. When my dad remarried, and my mom got a boy friend, I got lost in the shuffle. I seriously wonder if I was sent away to boarding school to get me away from them. Even Steve nudged me aside to concentrate on his career and his sexual proclivities. I haven't trusted anyone until you. I knew from the moment that storm threatened that you wouldn't leave me, and that you would get us to safety. I could get used to that feeling.\"\n\n\"I would never push you to the side, Viv.\"\n\n\"I know that,\" she looked at me, and I wanted her to keep her eyes on the road, \"you say important stuff so quietly that I don't hear it sometimes. If we're going to keep this thing between us going, I'm going to have to learn to listen to you more.\"\n\nI stroked her cheek.\n\n\"And I promise to speak a little louder when I discover that you haven't heard me.\"\n\nShe directed her attention back to the road, and I relaxed a little.\n\n\"I wanted to stay there after you went to the hospital, but I couldn't be with you because we're not married,\" she stroked my thigh. \"I also had my own classes to attend. So I did the next best thing. I contacted the dean of students at State and told him what had happened. He contacted your professors. Then I called your campus veteran's group. When I told them what you did, they were enthusiastic about helping you. By the way, if anyone asks, I'm your fiancee. Finally, for the first couple of weeks, I ordered you food every night to make sure you got some nourishment.\"\n\n\"You did that for me?\"\n\n\"Well, sort of. I told my father what had happened and how you had saved my life a couple of times. He was the one who sent the specialist to the hospital up north, and he said that I could expense all those meals back to him. He wants to meet you. He wants to thank you for saving me.\"\n\nAfter a brief silence, she patted my leg. \"So how was your time away from me?\"\n\n\"The truth?\"\n\nShe nodded.\n\n\"It was hell. I stumbled around campus half healed and feeling like I was missing the best half of myself. I'd hear a joke and think I should share that with you, then I'd remember that there was no you to share it with. The evenings were the hardest. When I should have been studying, I was staring off into the darkness thinking of you.\" I squeezed her thigh. \"I've never met a woman like you. The thought of never seeing you again made me ache. And I'm not good for myself or anyone else without you.\"\n\nShe slipped her hand into mine.\n\n\"We make a great pair, don't we? How did we get so separated from the normal flow of things? Life seemed to be all sham and nonsense without you. I don't feel complete without you,\" she gave me a sad smile, \"We need to build a life together.\"\n\n\"I was thinking the same thing,\" I patted her thigh.\n\nThe miles passed and farmland retreated giving way to pine forest. At the town of Grayling, we headed west into a country of forests dotted with lakes and swamps. Before long we bumped along on the two lane leading up to her father's palatial summer home. We pulled into the backyard and she carried a huge backpack into the boathouse refusing to let me do it. Across the lake the island looked like Eden, a haven of freedom from the world around it. From my side it had looked like a mystery that I had to explore.\n\n\"We have the place to ourselves. I checked with Dad. He doesn't have any leaf peepers coming up until next week.\"\n\nIn her room, Viv wiggled out of her slacks and threw them over a chair exposing her long beautiful legs. The rest of her clothes followed in short order. When she removed her panties, she shot them at me as if they were a rubber band.\n\n\"The hot tub is set to 102 degrees and I'm looking forward to spending a sunny afternoon sipping wine with my honey, but first, let's make hot, passionate love; I've spent weeks waiting for this moment.\"\n\nI slid out of my clothing while she sat crosslegged on the bed watching.\n\nI settled next to her at bit nervous. Had she built this up in her mind so huge that no matter what I did, it would be less than expected? I did the only thing I could, I pulled her into a kiss. Our bare skin touching stoked the fire in me that had been on low simmer since I had gotten her message.\n\n\"How should we make love the first time?\" she asked.\n\n\"I want to see you have an orgasm. I turns me on to see my partner respond to me.\"\n\n\"Missionary position?\" Viv offered.\n\n\"How about cowgirl? My stomach is still tender.\"\n\n\"Sounds like fun.\" Viv pushed me down onto the bed then straddled my hips.\n\n\"I'm so horny that I want you in me now.\" She grabbed my cock and stroked it a couple of times.\n\nI reached up to gently pinch and twist her nipples until they grew hard between my fingers.\n\nShe smiled down at me then wetted the tip of my cock with her juices. She positioned me below her as she settled onto me. She gasped at first, and then smiled.\n\n\"Wow, you feel good inside me,\" she purred, \"you're a bit more of a stretch than I'm used to, but I like it.\"\n\nHer slightest move sent pulses of pleasure through me. She began with a couple slow comfortable strokes maximizing sensation. I loved the sensuality of her repeatedly engulfing me. A shiver ran through her. A joyful laugh escaped her lips.\n\n\"How do you do that to me? I've never had an orgasm on insertion. You give me orgasms by touching me.\"\n\n\"It's teamwork. You want an orgasm, and I want to give you one.\"\n\nShe wiggled her hips with her face showing her intense concentration. She bent down and laid a deep kiss on me full of tongue and passion.\n\n\"I like this. Steve was never much for experimenting with positions,\" she rocked her hips a couple of times while I brushed her nipples.\n\nShe messaged her tummy. \"I can feel you from the outside.\"\n\n\"You need to play with my breasts while I hump you. It makes for an arousing feeling. You're so deep into me and I love how full you make me feel. Can we stay like this?\"\n\nI grabbed her hips to steady her.\n\n\"We can stay this way forever if you like. They taught me meditation in the hospital for pain control after I was wounded. It has other benefits too. I can hold back my orgasm.\"\n\nShe wiggled her bottom against me.\n\n\"We'll see about that. I accept your challenge.\"\n\nI pushed back her hair from her forehead and stared into those amazing green eyes.\n\n\"I'm making love with the most beautiful woman in the world. That should be challenge enough.\"\n\nShe kissed my forehead.\n\n\"I'm not even close to the most beautiful woman in the world.\"\n\nShe was beginning to wiggle around on my lap and I responded by thrusting up into her. She closed her eyes and leaned her head into mine.\n\n\"My father told me a long time ago that I should only make love to the most beautiful woman in the world, and if I wasn't then I was with the wrong woman.\"\n\n\"Aw, that's sweet.\"\n\nShe began rocking her hips then stopped and collapsed into me. A moan escaped her lips. I held her tight stroking her back while she recovered.\n\n\"These orgasms keep getting in the way. Every time I start rocking my hips, I look into your eyes then wham. I have an orgasm. You need to stop looking so damn sexy.\"\n\nI smiled and kissed her cheek.\n\n\"Take your time and enjoy every moment of this, I know I am.\"\n\nShe resumed rocking on my lap again. But this time it was different. She entered a state of near constant orgasm with her next orgasm building before she came down from the last one.\n\n\"Man, this feels good, but I want you to cum for me. I'm getting tired.\"\n\nThere was urgency in her voice as she ground her hips back and forth.\n\nI relaxed my control and allowed my orgasm to build.\n\n\"I'm nearly there,\" I growled before I held her in a bear hug then pumped and pumped into her.\n\nThat set her off.\n\n\"I'm coming too.\"\n\nShe dug her nails into my back, and the sharp pain intensified my ecstasy. When it was over she rolled off of me onto the bed. She reached over and stroked my cheek.\n\n\"That was so worth waiting for,\" she gasped.\n\nI kissed her shoulder by way of reply. It was the only part that I could get my lips to from my current position spooned in next to her.\n\n\"We should do this more,\" she murmured followed by a yawn, \"your desire turns me on.\"\n\nWe awoke as the sun was setting. The days get short in October and sleeping in each other's arms was perfect way to spend our afternoon together.\n\n\"I brought up two steaks so I could ogle your ass on the pool deck as I watched from the hot tub,\" she sat up and stroked my hip, \"now I don't want to waste the time. Let's order a pizza. You like Hawaiian?\"\n\n\"I love Hawaiian.\"\n\nIn the early evening darkness we watched the pizza guy pull up from the hot tub. Viv got out and pulled an over sized hockey jersey over her wet body. The shirt clung to every curve and crevice on her. She didn't seem to mind and I'm sure the delivery guy didn't either.\n\nShe set the pizza on the edge of the tub, peeled off her shirt and reentered the water.\n\n\"Do accountants make good money?\" she handed me a slice then licked her thumb.\n\n\"CPA's do really well. It takes work to get certified, but I'm going to do it.\"\n\n\"That's good because we'll need a place on a lake. I get horny wandering about without clothing.\"\n\n\"When did we go from friends to lovers to engaged?\" I asked between bites.\n\nShe chewed for a moment deep in thought.\n\n\"I'm not sure we were ever friends. I wanted you the second I watched you wade out of the water naked. What about you?\"\n\n\"I don't believe in love at first sight, but when I saw you standing on shore in that orange suit, it was love at first sight. What do you call it when you don't believe in magic, but magic happens anyway?\"\n\n\"Wonderful?\"\n\nI nodded. \"It's certainly that.\"\n\n\"So what do we do now?\" she rubbed her silky smooth leg up and down mine beneath the water.\n\n\"The usual stuff. We take long walks together, I read you poetry over the phone when we're apart, we spend winter weekends in a cozy bed getting to know each other, we have little spats followed by amazing make up sex. I place you at the center of my world, and you place me at the center of yours, and we let the magic continue to happen.\"\n\n\"Look at you waxing romantic. I like everything I've heard so far.\"\n\nShe threw her arms around me and kissed my cheek.\n\nI looked out across the water to the island. It was only a slightly darker spot in the middle of the dark lake.\n\n\"Can we row out to the island in the morning if the weather's good. I'd like to say goodbye to the place.\"\n\nShe nodded.\n\n\"Do you think the boat we sheltered under is still out there?\"\n\n\"Probably, it's not worth the work it would take to remove it. Why?\"\n\n\"It was under there in the dark with God knows what dropping down on top of us that I realized how much I loved you. I realized that you and I not not spending our lives together would be a tragedy.\"\n\n\"If we're going to rescue that boat, then I want your orange bathing suit buried in the sand under the boat for the same reason.\"\n\nShe slapped me in the arm. \"Is it all about sex to you?\"\n\n\"No, but I wasn't attracted to your huge IQ first. I liked it when I discovered it along with your personality, but it wasn't the first thing. I was attracted to that beautiful woman in her orange suit first.\"\n\nShe stroked my cheek. \"You're going to be a project, but I can be patient.\"\n\n \n"
    ],
    "authorname": "Vaguewriter",
    "tags": [
        "cfnm",
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-lady-of-the-lake-1"
}