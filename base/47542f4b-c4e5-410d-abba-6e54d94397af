{
    "title": "Aztec Treasure Ch. 31-40",
    "pages": [
        "Maria Meztli's POV\n\nArrowhead Woods\n\nI prayed Lance would stop shooting as I entered the fray, and he did.\n\nDropping down on a moving target was dangerous if done wrong. Go too early, and you could get run over. Too late, and you miss. Dad warned me about situations like this with motorcycles; as fast as they were going, they'd knock you out of the fight with the impact. My target wasn't a deer or pig, either; it was an adult male riding a heavy ATV. The key was to drop near the target, but not on him.\n\nMy front claws raked at his right arm and shoulder as I dropped towards the trail, my body twisting to stay out of the way of the tires. I shredded his jacket as he sped past, my claws tearing deep into his flesh. I landed softly, bounding after the ATV as it swerved off the trail and crashed into a rock.\n\nI was on top of the attacker as soon as he stopped moving. I growled at him until he stilled; his rifle was trapped under his back, while his pistol was on his right hip, and that arm wasn't working. I put one of my big front paws on the middle of his chest, the claws poking through the flannel, and roared in his face.\n\nHe pissed himself. \"GET HER OFF! GET HER OFF!\"\n\n\"Hold him while I check the other guy,\" Lance said as he came running down from his shooting position. I could hear two more ATVs coming fast. My prisoner kept his eyes closed as he bled from his wounds. It wasn't long before Lance and two others parked near me. Lance used a set of heavy-duty zip ties to bind the prisoner's arms in front of him, then they sat him against a rock and removed his helmet.\n\n\"Damn, you tore the shit out of him,\" Colleen said as she opened up the medical bag she'd brought along. She had cut away his shirt, but the parallel wounds were deep and bleeding heavily. \"He needs a hospital.\"\n\nI moved silently over to my pile of clothes and shifted, pulling them back on. I felt good; I'd fought to defend my new home, and I proved to them I wasn't a helpless female. \"What's the plan?\"\n\nLance had removed the prisoner's weapons and left them by the crashed ATV. \"We found their vehicles and trailers by the highway; the Sheriff is meeting us there. Monica took a round in the bicep, so she will meet them and head to the hospital to get it patched up. Tony, bring your machine up. We'll load the prisoner on it, then you and Colleen head for the highway and turn him over to the Sheriff.\"\n\n\"What about us?\"\n\n\"We wait here for Alpha Chase and Beta Vic,\" Lance said.\n\nWe got the prisoner loaded onto Tony's machine; he'd lost so much blood that he'd passed out. Lance tied him to the rear luggage rack, and they took off to the south for the road. \"Is he going to make it?\"\n\n\"I don't know,\" Lance said. \"If he dies, it's his fault alone. They came onto Pack lands with hostile intent, they fired at our patrol, and he kept heading for the Pack House. Three of his buddies are dead now. Even if he lives, he's going to jail for a long fucking time.\"\n\n\"I've never...\" I looked at the blood on the ground as my hands started to shake and my stomach flipped. I panicked, running into the woods and behind a tree. I fell hard onto my hands and knees and started throwing up. I kept retching as Lance stood by me, holding my hair out of my face. \"I'm sorry.\"\n\nLance helped me to my feet and kept his arm around me while he turned me back towards the trail. I wrapped my arm around his waist, taking comfort in the hold. \"Your first real fight?\"\n\nI nodded. \"Dad trained me, but I was protected.\" I was still shaking and needed his arm.\n\n\"It's the adrenaline in your system. Let's get you back to your ride, and you can sit down until everyone is here.\" He sat on my ATV, pulling me into his lap and holding me as I kept shivering.\n\nThat is how Chase and Vic found us when they arrived on their ATVs. \"You're all right?\"\n\n\"She's shaken up,\" Lance said. \"It was her first action, and she tore the guy up. Maria did her job; the last one got past me, and she was our last line of defense before reaching the compound.\"\n\nI stood as Chase walked over; he checked my face, then pulled me into a hug. \"You fought well,\" he said. \"I have to ask, though. Is the man you took out going to die from a forced change?\"\n\n\"No, I didn't bite him. Claw scratches are neutral.\"\n\n\"Good. If the idiot doesn't bleed out, the cops will have someone to interrogate. Can you imagine? Four hunters against a Pack when we know they are coming?\" Chase shook his head. \"You'd think they would learn.\"\n\n\"We'll keep stacking bodies until they do,\" Vic replied. \"It's not like we didn't warn them.\"\n\n\"I should take Maria back home,\" Lance said.\n\n\"Not yet; the Sheriff is on his way in now. He'll want statements from everyone involved,\" Chase replied.\n\n\"She's still shaking, Alpha.\"\n\nI wasn't all right, and I wasn't going to talk to the cops. \"Lance is right; I need to settle down. I'm not ready to talk to anyone right now.\"\n\nChase looked at Lance and nodded. \"Drive her to the clinic, and have Possum check her out. I'll take care of the Sheriff.\"\n\nLance put on my helmet, then fired up the ATV as I tucked in behind him. I held his waist as he drove back at a leisurely pace. \"We'll see the rest of the woods on our next date,\" he said with a laugh.\n\n\"You know how to show a girl a good time,\" I said as I leaned my helmet against his broad back. It wasn't long before he stopped at the clinic and helped me inside where Possum was waiting.\n\nMy pulse and blood pressure were high, but that was normal after such a traumatic event. Possum had me lay down for a few minutes. I started to doze off when the door opened. \"Mama!\" Maritza walked into the room, followed by Possum and Lance.\n\n\"Hey, baby,\" I said.\n\nPossum put her up on my stomach and my little girl snuggled in. She checked my blood pressure, and it was back to normal. \"You can go when you're ready,\" she told me. \"Chase will find you when the Sheriff is ready to see you.\" She walked out, leaving Lance behind with me.\n\n\"I'm not talking to the cops,\" I told him.\n\n\"Do you need more time?\"\n\n\"I need a lawyer. I'll never talk to the cops without one; Dad taught me that early on.\"\n\nHe must have linked someone because he didn't respond for about thirty seconds. \"Our Pack lawyer is on his way out. Ralph Emerson remained loyal to Arrowhead from the time of the original Pack. You can trust him.\"\n\n\"No.\" My father had a lawyer representing the Club, but he'd never use that person to defend himself. Civil, criminal, it didn't matter; your lawyer had to be responsible to you, and you alone. His advice was even more important as I came to this pack with baggage from my previous life. \"I'll retain personal counsel.\" I looked on the office computer for criminal lawyers in the Duluth area and made a phone call. My choice would arrive in an hour, and I left his name with Security. \"Would it be safe to duck into the woods with her in cat form before we head to the pool?\"\n\n\"Sure, no one can see you from off Pack lands here.\"\n\nI pulled off Maritza's clothes and diaper, then my own, folding it all before shifting. Maritza shifted as Lance bagged my things, then he opened the door to the hallway. The wolves in the building were fascinated by our cats, and I was happy to scent excitement instead of fear as we walked by. A few were bold enough to reach out and pet or scratch us, which Maritza loved. I walked with Maritza into the woods, where she spent time sniffing and bounding around before doing her business where I did. Now that I knew she wouldn't pee in the pool, we crossed into the doggie door of the Pack House rear entrance.\n\nA hush came over those in the pool as we walked in, wet from the shower Lance had given us in the locker room. Maritza sat up and looked at the huge room, her eyes wide as she looked at the slides and the trees. She heard squeals from the other children and took off for the kiddie area where the other babies.\n\nPeople looked at me, but they were fascinated by Maritza. It dawned on me that because werewolves didn't shift until their teen years, they'd never seen anything like my little jaguar. She splashed in the water as the other babies grabbed at her fur and her tail. I followed her over, taking a little time to rub against some of the females watching them before I plopped down into the shallow water with them.\n\nAll of the babies came over, climbing on me like a jungle gym. I laid there with my tail flopping from side to side as they played with their new toy. When they had enough, I stood up and grabbed Maritza by the neck, carrying her into the deeper water. The watchful nannies kept the toddlers from following.\n\nThe water went from six inches to over two feet deep, leaving my shoulders dry as I let Maritza go. Swimming is instinctual for our cats, and she quickly figured it out. She paddled around for a bit before climbing up onto my back between my shoulders and holding on. I went into deeper water, avoiding the water volleyball game and heading for the area where the slides came down. I sank below Maritza, forcing her to swim again as I led her to the stairs.\n\nWe both shook off the water before I led her up the stairs to the smallest of the slides. My cub had no problems with the stairs and joined me at the top a moment later. I slid down in front of her, splashing into the pool just before she did. This time, she raced for the stairway to do it again.\n\nWhen she was too tired to continue, we trotted back to the kiddie pool area where the babies had been dried off and diapered, and the nannies were feeding them dinner. I shifted, and Maritza stomped a foot in irritation before she changed back. There were extra towels and diapers on the table by the chair, so I dried us off, then put on her diaper and pulled her into my lap. \"That was FUN,\" I told everyone. Other Pack members joined our group, including a pregnant Spider Monkey.\n\n\"How can you stand the cuteness,\" Spider asked. \"I wish our baby could shift like that.\"\n\n\"I've never known different,\" I said with a shrug. The ladies had arranged dinner for the young ones here in the pool area, their high chairs between us as we snacked on pizza and chicken wings. \"I can't get over how cool this place is,\" I finally said. \"Are all Packs like this?\"\n\n\"Only those run by a Nygaard. Carson has a great setup in Casper now, Sawyer's is under construction at the Donner Pack, and what Coral has planned for Blue River Pack blows this place away,\" Lance replied. \"The Pack House and this pool area cost almost five million to build, but it's the focus of Pack life up here in the winter. Chase shared the windfall from the takedown of the Sons... Oh, crap. I'm sorry, Maria. I forget they were your family.\"\n\n\"It's all right, go on.\"\n\nHe looked embarrassed. \"You know that Chase helped take down the Sons drug operation, right?\" I nodded; it was on the news. \"Chase and his brothers snatched millions in cash from a warehouse controlled by the Los Angeles chapter meant for the Cartel.\"\n\n\"And I took millions more from Club accounts before the Feds could take it,\" Spider Monkey said.\n\n\"You took my father's money?\"\n\n\"I did, thus saving it from asset forfeiture laws,\" she said. \"I kept track of the amounts. Now that you are part of the Arrowhead Pack, those funds belong to you.\"\n\nMy jaw dropped; why would she give me that? \"I have no claim to the Club accounts,\" I said.\n\n\"It's part of your legacy, Maria. I've already spoken with the Alphas about this,\" Spider replied. \"We took you in to protect you, but we aren't going to force you to stay with us if you decide to move on. You'll have enough money to settle anywhere you want.\"\n\n\"And if I stay here?\"\n\n\"There are building lots along the lake if you want a home of your own, and those Harleys aren't cheap. You can go to college, provide for Maritza, whatever you want.\" I looked out on the pool, watching the adults play volleyball. The feeling here was different than the Clubhouse I'd grown up around. They were family, and violence wasn't a daily worry. I liked it.\n\nLance stood up and looked at me. \"Your lawyer is at the front gate. Do you want to take Maritza along?\"\n\n\"I'll leave her to finish dinner if that is all right.\"\n\n\"We've got her; go have your meeting,\" one of the nannies said.\n\n\"I better get dressed, then.\" Lance had left my clothing in a cubby in the locker room, and I met him on the other side.\n\n\"I had the riding clothes returned to the garage, and everyone is back now. You can use Beta Vic's office to meet with your counsel.\" We started walking towards the offices. \"Are you sure about this?\"\n\n\"I am. If my legal needs extend to the Pack, I'll bring in Mr. Emerson. I've got a lot to talk about.\"\n\n\"I'll be outside if you need anything,\" he said as he opened the door for me.\n\n\"Hello, Maria. I'm Thomas Kendall,\" the man in the expensive suit said. \"I understand you need help regarding today's incident.\"\n\n\"My whole life has been one incident after another,\" I said as I shook his hand. \"Let's get the business part over, and then we can go over my problems.\" It took almost three hours to go through everything and discuss our strategy. Today I acted in self-defense of others, and he helped me through the interview with the investigators. The rest? Let's just say he'd earn his retainer.\n\nCh. 32\n\nJulio Salazar's POV\n\nOil Rig in the Gulf of Mexico\n\nAs soon as the Doctor ordered the collar removed, I thanked Tezcatlipoca for the favor. I was getting out of here.\n\nI didn't do anything at first, waiting until the guards left for the helicopter to make my move. The Doctor was busy poking me with needles; he assumed that I couldn't shift in the five-point restraints, so he was safe. The explosion gave me the perfect distraction. In two seconds, I did a partial shift of only my hands and feet, the limbs elongating and changing until I could pull the paws through. I shifted my hands back, removing the thick strap around my waist as the Doctor looked out the door. When I was free, my cat emerged, and he was pissed off.\n\nI leaped onto the Doctor's back, my claws digging in as my teeth opened wide. I crushed his skull like an eggshell, and he dropped bonelessly to the floor. I let him go, licking his blood off my teeth as I moved into the passageway. I held my head up, sniffing and listening for threats, and found none. There was a stairway at the end; I reached it and smelled salt air coming in. I bounded silently up the stairs until I reached the hatch leading to the helicopter deck.\n\nI stayed in the shadows, searching the deck for guards. I could smell one male, but I didn't see him until I was on the far right side of the doorway. He was standing near the rail at the north edge, talking on a radio. \"I need extract NOW,\" he told the person on the other end. \"Two passengers.\"\n\n\"Roger that,\" the voice at the other end of the transmission said. \"We're fifteen minutes out.\"\n\n\"Heading to the dock. Out.\" He looked towards me, but I didn't see anything to show he saw me in the shadows. \"Fucking doctor is running out of time.\"\n\nI waited until he was a few steps from the opening before I leaped out. He reacted well, drawing a pistol and getting off a shot as my teeth grabbed his forearm. His bullet pinged off metal as my teeth bit down, crushing his bones. He let out a scream and dropped the pistol.\n\nI used my weight to pull him down, then dragged him to the edge of the platform. He tried to fight, kicking with a leg, but a rake of my claws left his slacks in tatters and his ankle a bloody mess. I dropped him at the edge of the helicopter platform and shifted back. \"Who are you,\" I said as I grabbed him by the neck and pulled him to his feet.\n\n\"Daniel! DANIEL FRENCH!\"\n\nI was lifting him off the ground with one arm, with my grip hand partially shifted. He screamed as the claws pierced his neck. \"And who sent you, Daniel?\"\n\nHe pulled a remote out of his pocket, pressing the button. The oil rig shook as multiple explosive charges went off underwater. \"The Company is going to get you for this! You're dead, and you don't know it! You, Maria, Maritza, all of you DEAD!\"\n\n\"Then I will see you in HELL.\" With one hand on his neck and the other on his belt, I spun Daniel around and launched him like a hammer-toss. He cleared the safety nets, spinning horizontally like a boomerang as he plunged to the ocean. Daniel's scream ended in a splat, fifteen or so stories below me.\n\nI looked around as the platform began to tilt, already beginning its descent towards the bottom. I could see burning wreckage to the north, so that was the direction of land. I was at the top of a sinking oil rig, and I had no idea where.\n\nThe helicopter platform was now leaning out over the ocean, the whole rig listing twenty degrees as the rig continued sinking. I grabbed one of the rescue rings and threw it as far away as I could. The waters were much closer now, and I didn't have much time. I held on to the upper railing and waited; I'd only get one chance to jump clear. I couldn't jump early and end up with the rig landing on me or sucking me down with it. The platform tipped farther and farther over as it sank. When the edge of the helicopter pad hit the churning waters, I pushed off the railing and dove into the waters.\n\nI plunged underwater almost ten feet, swimming forward as quickly as I could. I broke the surface again and swam away, desperate to avoid the structures now crashing into the water around me. I kept swimming for almost a minute before I let up; I could hear the death throes in the water as compartments collapsed and steel gave way. I stole a look back in time to see it slipping under the waves.\n\nTreading water, I looked around for anything that could help. I knew from watching documentaries that offshore oil rigs attracted fish, and with fish came sharks. I needed to get out of the water.\n\nI spotted the rescue ring I'd tossed and swam over to it, grabbing onto it with one arm. I was looking for something better when I heard a boat approaching quickly. The center-console fishing boat was coming my way. I waved an arm and yelled as they approached, and they saw me. Two men in their fifties were on board; one pulled me up as the other turned to look for others. \"What happened?\"\n\n\"I don't know,\" I said. I was tired, naked, and streaked with blood.\n\n\"Here,\" one of the guys said as he reached into a compartment. \"Put this on.\" He tossed me a T-shirt, and I pulled it on. I looked around as they searched for other survivors; several more boats were coming this way, and one of them was there to pick up Daniel and the Doctor. I didn't want to be there when that happened.\n\nI walked up behind the guy who pulled me up as he stood near the bow. One shove in the back and he was overboard.\n\n\"HEY! WHAT THE FUCK?\" The captain was already turning, and I was on him a few seconds later. I grabbed him and broke his neck, letting him fall to the deck. Gunning the engines, I turned east to flee from the approaching vessels. The navigation system showed me exactly where I was, and I set the autopilot on a course of 070.\n\nI removed the dead man's clothes, thankful he was wearing a belt as he wasn't in good shape. With the shorts, T-shirt, and boat shoes on, I took some time to look around. The boat keys were on a float with some others, one of which was for a Ford. Good; he probably left his truck at the dock. His wallet had a gas card, two credit cards, and a couple hundred in cash. I put it back in my pocket, then tossed his body over the rail as I sped away.\n\nLike most offshore fishing boats, this one had a GPS navigation system built into the depth sounder. I played around with the controls to see the track, then scrolled back to the beginning of the voyage. They had put it at the Gulfport Marina.\n\nI went northeast about twenty miles before turning towards Gulfport. Helicopters flew over, and I saw a Coast Guard patrol boat heading that way at full speed. It took almost six hours to get to the docks, and the tanks were near empty when I pulled into the marina. There was a long dock near the boat access, and I steered to it and tied up. I turned the boat off and pocketed the keys. I hopped onto the dock and up to the parking lot, clicking the remote until I saw the F-250's lights flash.",
        "I unhooked the trailer, then opened up the hood and removed the GPS receiver. These trucks weren't cheap, and I didn't want them tracing a stolen truck with it. I found a small toolbox in the back and used it to swap plates with the truck parked next to me. I fired it up and drove out, leaving the mess behind for the police to figure out.\n\nI drove east towards Mobile before picking up I-65 north. I stopped once, filling the dual tanks with diesel and getting a bag of roast beef sandwiches and a big shake at Arby's. I passed through Atlanta before midnight and was in rural Virginia by sunrise. I needed to rest, so I pulled off the freeway and drove until I reached the forests around Wright's Corner. I found a church with a tree-shaded parking lot and parked in the back behind the church bus.\n\nI left the wallet behind, leaving the money and cards in the cargo pocket. I did a quick search of the car and hit pay dirt; under the seat was a pistol safe, and the key was on the ring. Inside was a holstered Smith and Wesson M&amp;P 9 Shield and an extra magazine. \"Thank you, my Goddess,\" I said as I slipped the firearm into a pocket and closed the flap. Heading into the woods, I walked a mile or so until I got to a creek. My nose and ears didn't sense any humans, but I did scent deer.\n\nIt was a decent place to get some sleep. I stripped down, rolling everything in my shorts and tying it with the belt before stashing them under a fallen tree trunk. I shifted into my cat and walked to the stream, drinking my fill of water. Finding a large oak, I leaped up and climbed twenty or so feet up, ending up sleeping on a sturdy branch.\n\nI woke after sundown and jumped to the forest floor. I pulled the clothes out, carrying them by the end of the belt in my teeth as I moved north in the moonlight. I found a rural home; outside was a pickup truck with a gun rack, and I could see a man in his thirties drinking a beer and watching television. Perfect.\n\nI shifted and dressed, placing the holstered pistol behind my rear hip and covering it with the T-shirt. I stopped by the mailbox, verifying by scent and hearing that no one else was around. I snuck up close to the front door, then tossed a rock through the living room window.\n\n\"WHAT THE FUCK?\" The guy yelled, then opened up the front door to see who did it. I fired once from six yards, putting the round through his right eye. He dropped like a stone onto the front steps, and I moved inside and verified he was the only one there.\n\nI dragged him to the shed outside and left him there. Returning to the house, I went straight to the gun safe in the bedroom. It was one of those keypad-operated models, a discount brand offering little security. You could learn how to break into one of these on Youtube; it took me less than a minute to bypass the keypad and open the safe.\n\n\"Damn. Rednecks are good for something,\" I said to myself as I looked inside. I took out an AR-15 carbine with a collapsible stock and reflex sight and a bolt-action sniper rifle in .308 Winchester with a 4-12x Leupold scope. I set both aside, tossing extra magazines and boxes of ammunition with them. Near the top, I found a Glock 22 in .40S&amp;W and about two thousand in cash.\n\nI put extra ammo in a range bag he had on the top of the safe, then zipped up the rifles in gun cases I found under his bed. It had been a great haul, and it was time to go. I hauled everything out to his truck, loading the rifles behind the seat and the range bag in the passenger seat. I drove east, stopping at a Wal-Mart for supplies before heading to a cheap motel. I shaved my head in the bathroom, then spent the rest of the night cleaning the guns, researching the CIA and President with my new Chromebook, and watching the news before taking another nap.\n\nThey'd fucked with the wrong cat. I'd take care of the bastards who tried to disappear me, and then I'd retrieve Maria and Maritza from those damn dogs.\n\nCh. 33\n\nPresident Laura Kettering's POV\n\nOval Office, next afternoon\n\n\"It's confirmed?\"\n\n\"Yes, Madam President,\" FBI Director Patterson replied. \"Surveillance video from the marina has him arriving in the stolen boat yesterday afternoon. Julio Salazar's fingerprints are all over the thing. The Coast Guard is still searching for the missing fishermen, but the owner's truck is missing from the lot. We put an APB out for the vehicle this morning, and every law enforcement agency in the country has Julio's mug shot now.\"\n\n\"I can't believe the CIA fucked me like this,\" I said as I leaned back and looked at the men over the glossy top of the Resolute desk. \"Has Peter Sinclair admitted to anything yet?\" He stood in front of my desk multiple times and denied the CIA had anything to do with Julio's disappearance or the attacks against Maria Meztli. I'd promised Colletta Grimes that we hadn't done it, and now I was finding out I had a rogue agency. I'd fired Peter two hours ago when the news of the black site prison broke. What a mess.\n\n\"No, ma'am,\" Attorney General Marisol Guttierez responded. \"Since the FBI detained him for questioning, he's lawyered up and refused to answer questions.\"\n\nMy Chief of Staff, Lynette Johnson, spoke up as she paced the room. \"It's a clusterfuck, Madam President, and we need to get ahead of this before it destroys you. The CIA conducting operations within the United States to abduct a US Citizen and Federal prisoner? A black site prison operating off the Gulf Coast? The shark-eaten body of the Deputy Director for Covert Operations pulled from the wreckage of the platform, not to mention a helicopter explosion with multiple fatalities? You need to act boldly on this before it sinks you, too.\"\n\n\"Like what?\"\n\n\"Fire the entire CIA leadership today,\" Lynette replied.\n\n\"Jesus, Lynette,\" the Chairman of the Joint Chiefs said. \"You can't decapitate the entire CIA leadership!\"\n\n\"I have to agree with the General,\" Alexander Strickland, my head of Homeland Security, added. \"It would cripple the agency for years!\"\n\n\"I can replace them all in a more orderly fashion,\" I told them. I looked at my Homeland Security Chief. \"Do you trust the Deputy Director?\" The CIA Deputy Director was a retired Army General who was appointed to the position last year. Alexander Strickland nodded. \"Anyone above the Assistant Director level who did know or should have known about the prison, I want you to fire immediately. Bring in leaders from other agencies or make temporary assignments as the General sees fit. I'm also demanding the resignations of all CIA Deputy Directors pending the appointment of their replacement and orderly turnover. We can't do it all at once, but we WILL change the senior leadership this year. And tell the DNI and the Deputy Director that if they can't get it done, I'll change them both out. Lynette?\"\n\nMy Chief of Staff looked at me and nodded. \"I'll take care of it, Madam President.\"\n\nMy Director of National Intelligence was supposed to be holding Peter Sinclair's leash. General Curtis Ripley and a team of FBI agents were at CIA Headquarters right now. They were locking down everything they could find in the Director and Deputy Director-Covert Ops offices. I didn't have high hopes for this; these men were career spooks, and spooks know how to destroy evidence quickly.\n\nLynette was right; we had to do something, and the firings were enough to show I was serious about bringing the CIA under control. It had been one piece of bad news after another today. Fishermen had reported an explosion in the air, then more explosions in the water. It only took a few minutes for the abandoned oil platform to sink in the deep water. They were still pulling bodies out of the water, at least the ones the sharks hadn't eaten. The CIA Deputy Director still had his identification on him, but he didn't have legs or half his arm. He did have four deep, parallel slashes from the claws of an adult werejaguar. With Julio Salazar positively identified, the purpose of the CIA's secret prison wasn't a secret. \"I can't believe I gave Peter Sinclair his job,\" I told them. \"When will we be charging him with kidnapping and a few dozen related felonies?\"\n\nThe Attorney General held up a hand. \"Lying to the President isn't a crime, and it will take some time to peel back this onion and see what he knows. Director Sinclair is claiming that Daniel French ran the whole operation without informing him. I need time to investigate and build a case.\"\n\n\"Time we don't have,\" Director Strickland said. \"With Julio running wild, we risk a public panic. With every person he kills, the anti-were groups get emboldened. We are bound to see more attacks on Packs, and they will fight back. We could lose everything we gained in the past three months.\"\n\nI looked at my FBI Director. \"Hugh, this is your highest priority. I don't want Julio to be able to poke his head out of a sewer grate without four cops drawing down on him. He has to be stopped and now.\"\n\nHugh nodded. \"We're doing everything we can, Madam President. He got a head start, but we will find him.\"\n\nI looked over at my Chief of Staff. \"Lynette, when are we scheduling the update meeting with Colletta Grimes?\" The Werewolf Council was nervous about the extra-judicial moves against Julio and the attacks on Maria. Colletta was flying in from Minnesota now.\n\n\"Tonight at nine,\" she replied. \"We need to wrap this up. The President of Mexico will be arriving in four minutes.\"\n\n\"Agreed. I want the FBI, DNI, and Homeland crawling through CIA Headquarters on this secret prison and Julio Salazar. I'm not playing around; your agents have the highest security clearances. If someone tries to pull this 'national security' crap and doesn't cooperate fully, arrest them. The Attorney General's people will be working closely with you to identify and indict those involved. The FBI also needs to find Julio quickly and get him back in jail before more people die. I want an update tonight at eight-thirty; any major updates, you talk to Lynette. Questions?\"\n\n\"No, Madam President,\" they all answered.\n\n\"Go.\" Everyone except Lynette and Valerie Grunwald, the Secret Service chief, left the room. \"Something to say, Valerie?\"\n\n\"We have a highly dangerous adult male werejaguar out there somewhere. He is probably pissed off at the US Government and you in particular. With your permission, I'll reach out to Colletta and the Arrowhead Pack. I need to find out the best way to take him down if he comes after you.\" I could tell she was nervous; this was not the kind of threat she'd trained to face.\n\n\"You have my permission. You might want to think about bringing those werewolf agents in your training program up here to advise you. They might smell the cat before you see it.\"\n\n\"Yes, Madam President.\" She left me with my cadre of agents as we walked to the Rose Garden to greet my distinguished guest.\n\nThe first big update Lynette whispered in my ear during the State Dinner. \"We found Julio's stolen truck in rural Virginia. No sign of him.\" I smiled and nodded before going back to my guests, but I was confused. The Sons were in Mexico and the Southwest; why would he come this way? The only Pack on the Eastern Seaboard was way the hell up into Maine. I caught Lynette's eyes and looked towards my Secret Service detail. \"On it,\" she mouthed to me.\n\nThe dinner finally ended just after eight, and I headed back to the Oval Office to get the latest. Valerie was waiting for me. \"Julio's in the area?\"\n\n\"Police found the truck in a church parking lot about two hours south of here on I-95. It was cold, so we are assuming he could be in the vicinity already. I've placed your protective detail on alert and called in additional agents.\"\n\nThat was reasonable. \"Any evidence Julio is coming for the White House?\"\n\n\"Nothing yet. We are flooding the area with law enforcement to try and find him. Colletta and Frank Grimes were very helpful; they said a jaguar could move twenty to thirty miles in a night and stay undetected. They don't think he's anywhere near the truck by now, but we'll keep looking. In jaguar form, Julio's natural camouflage will make spotting him difficult at night. He can't change his body heat, though, so he will show up on night vision. We've put extra snipers on the roof, added additional cameras, and cut down the lights away from the building. If he tries to get across the lawn, we'll get him.\"\n\n\"Good.\" The rest of the group joined me and didn't have much to add.\n\n\"The existence of CIA Black Sites has always been a closely guarded national security secret,\" DNI General Ripley said. \"The information is highly compartmentalized, and the budgets are the blackest of black. The agents and contractors operating them are operating under deep cover, often using only codenames. We are still trying to identify them based on the DNA from the helicopter wreck. It's a mess, Madam President, and I can't give you the answers you want.\"\n\n\"What CAN you tell me?\"\n\n\"The oil rig was leased by a shell company incorporated in the Cayman Islands. FAA records show a long-range helicopter flight to that area the day they took Julio from Federal lockup that was not related to ongoing oil operations. We're still looking at records, but we've identified weekly flights meeting that criteria. I would suspect they brought most supplies in by boat, and we're checking local marinas. We've also identified seven unique bodies in the helicopter wreckage, none positively identified as their fingerprints are not in our systems.\"\n\n\"You have nothing,\" I concluded.\n\n\"The investigation is ongoing,\" the Attorney General said.\n\nI shook my head. \"That's the line I'll have to use with the Werewolf Council. 'Actually, we DID have Julio at a black site prison, and those likely WERE domestic CIA teams who attacked Maria, but it's all right. The investigation is ongoing.' That will go over like a fart in church.\" No one said anything; what could you say? \"All right, clear out of here. I've got a meeting to get ready for.\"\n\nCh. 34\n\nMaria Meztli's POV\n\nArrowhead Pack House\n\nThomas Kendall left after we met with the Sheriff's Department detectives and the FBI. I gave my statement about the ATV takedown; it was straight self-defense, and Thomas stopped them from going elsewhere. Special Agent Allison Cook had more questions, and she was well-informed about the Pack and its activities. Lance told me she had been one of two agents assigned to watch Arrowhead from the inside when they got exposed to the world, and she was a good agent. I answered most of her questions, starting with my hiding out at the cabin through my time on the run. Thomas kept the interrogation on track; after all, I didn't know anything about Club activities. Underage girls like me stayed in the Clubhouse area, never even getting in the conference room where business got done.\n\nWhen they finished, Thomas went back to his office to get help. He worked at the big Duluth law firm of Dewey, DeWitt &amp; Howe. Now that I was not a criminal suspect, I needed assistance from a civil litigator and an estate lawyer. Both were in-house and covered by the retainer I'd given him earlier.\n\nWhy would I need more lawyers? Well, there was the matter of my parent's estate. Neither parent got convicted of anything, but the DEA had seized their assets that rightfully belonged to me. They can seize assets obtained through criminal activities, but you have to have proof of that. Dad owned a legitimate business, and Mom worked too. Dad was too smart to mix his money like that. An estate lawyer could deal with everything and get me my inheritance back.\n\nAnd then there was Maritza. As her only living relative, I needed to push through a formal adoption as soon as possible. The last thing I needed was the Government coming in to place her in foster care! Maritza was also entitled to her parent's estate and other benefits. Thomas was right; I had to protect her rights because she couldn't.\n\nI also needed a civil litigation attorney because I was going to sue the US Government. After I recounted my time in Mexico, Thomas brought it up, and Lance showed him the drone footage and communications we'd obtained from the FBI server. You see, the CIA knew the compound was full of innocent women and children; you could even hear the drone pilot talking about it. The CIA team didn't care; they wanted the Mexican Sons of Tezcatlipoca dead, and they didn't want to leave it to the nearby Mexican military.\n\nIf that wasn't enough, they knew some of the people were U.S. citizens. \"You've got strong grounds for a wrongful death lawsuit over these extra-judicial deaths,\" Thomas told me. \"The Government may be able to justify killing drug dealers and violent gang members, but the footage is damning. They knew women and children were present, and they launched anyway. You lost family members, and Maritza lost her parents. The Administration can't sweep this under the rug; it's going to be a huge scandal for them.\"\n\n\"Money can't bring our parents back,\" I'd said.\n\n\"No, but it can set the two of you up for life, and the lawsuit will push accountability,\" he said. \"My firm can represent you on a contingency basis; it won't cost you anything, but we retain thirty percent of anything we recover. We'll be seeking a significant settlement for each of you. It's another reason to clarify your legal status with Maritza because you can sue on her behalf.\"\n\nI looked over at Lance. \"What do you think?\"\n\n\"The press will eat up you sitting in court with Maritza in your lap talking about how the CIA orphaned both of you. The bad publicity alone will scare the shit out of the government lawyers,\" he said. \"Mr. Kendall is right; it's a no-lose situation that costs you nothing up-front. I would bet they would offer a big settlement in exchange for your silence.\"\n\n\"Damn,\" I said. \"All right. I'm in.\"\n\nThomas smiled. \"I'll meet with our team and bring them out here tomorrow to start the process. Dewey, DeWitt &amp; Howe is going to fight for you, Maria.\"\n\n\"Thank you.\" He got escorted offsite while I remained in the room with Lance, soon joined by Alpha Chase. \"Alpha?\"\n\n\"Lance kept me informed,\" Chase said before I could explain. \"You have our backing. Spider Monkey already set aside funds for Maritza, just like she did for you.\"\n\n\"You aren't going to talk me out of suing the government because of your relationship with them?\"\n\nChase shook his head, no. \"All that stuff happened before you joined us, Maria. It's your business, not ours. Honestly, it will work in our favor. People won't stand for the CIA 'disappearing' people to secret prisons or assassinating innocent citizens. The fact that they are doing it to a Were species helps us, in a way.\"\n\nI hadn't expected that. \"Thank you,\" I replied. \"And thank you all for your welcome. It's been a little overwhelming, but I like it here. You have good people in this Pack.\"\n\n\"The best,\" he said with a smile. \"Now, it's late, and Maritza is falling asleep on her feet in the pool.\"\n\nMy eyes got wide. \"I'll go get Maritza right now! I'm sorry, I didn't mean to burden the nannies with her.\"\n\nLance just laughed at that. \"The ladies love Maritza just like they love the other babies in our Pack. Miracles, every one of them.\" We went back to the pool, finding Maritza sleeping in the arms of one of the nannies. I picked her up and followed Lance back to our rooms in Beta Vic's home. After all the excitement, both of us slept well that night.\n\nThe next day, Lance and I accompanied the patrol, and this time it was all quiet. It turned out that the attackers were local anti-were activists motivated by the reward money. Yes, they were dumb enough to send four middle-aged guys armed with hunting rifles against a Pack with warriors and dozens of trained snipers. The survivors were facing Federal attempted kidnapping charges, and since men died, that made it Felony Murder. As Lance said, they were idiots.",
        "By dinnertime, all anyone could talk about was the breaking news about the CIA black prison in the Gulf of Mexico and the violent escape of Julio Salazar. I watched the coverage with mixed emotions. I was glad Julio was out of their clutches but worried about what he would do next. I'd seen him many times at our clubhouse or when visiting family; my father warned me not to be alone with him, ever. If he didn't trust him, I wouldn't either.\n\nThe television station was showing the family of the man who Julio killed to take his boat and truck. Pictures of the stolen truck, along with its license plate number, ran along the bottom of the screen. The Coast Guard had identified one of the bodies recovered as the CIA Deputy Director for Operations, and the CIA was now the center of a criminal investigation. Chase told me that Colletta was on her way to see the President about it and find out how high the corruption went.\n\nI tried not to let any of that affect me as I focused on meeting and fitting in with the people in my new home. I spent a lot of time in the pool area, which made Maritza happy. Jaguars LOVE water, and she didn't want to leave the pool. She and the other children loved it when we were in our cat forms, but it made it difficult to communicate. I so wished I could have a Pack bond, but that wasn't to happen.\n\nOne good thing about all this was there was no longer a need for me to have a new name or identification. Chase had gone public with my presence, and the CIA wasn't a threat. It didn't mean it was safe for me to leave without bodyguards, but it did allow me to transfer my school transcript to Minnesota and enroll in online classes. The Alphas wanted me to graduate in time to start college in the fall, and I agreed with them. I needed to move on with my life.\n\nThe lawyers came back shortly after news broke about Julio's truck turning up at a church in Virginia. Vic and Lance were happy that he wasn't coming our way, but Colletta was nervous. I signed the paperwork for guardianship of Maritza as her nearest living relative and started adoption proceedings. Spider Monkey spent a few hours with the lawyers preparing to file a civil case, providing them with all the information we had on the drone strike. If the Government failed to comply with a discovery proceeding, my lawyers would know. \"When are we going to file,\" I asked.\n\n\"Perhaps never,\" the lead attorney said. \"Mrs. Knightly's information is highly classified, and we don't want to tip our hand about how much we have. I have a meeting tomorrow with the Department of Justice; I'm confident they will make a generous offer to have this go away. If not, we file in Federal court next week with all the typical fanfare.\"\n\n\"Fanfare?\"\n\n\"Of course. We file the paperwork and include the lawsuit in a press release. Our filing lays out a lot of embarrassing information, which we back up with appearances on news shows. It would be helpful for you to consent to an interview, with a friendly reporter and appropriate controls, of course. The more publicity we get, the faster they will settle. With this hitting on the heels of the news about the black site prison, we'll have them begging for mercy.\" Wow. They'd thought it all out, but I didn't want to be a celebrity. \"What I need to know is the minimum amount you will accept in a settlement offer, before or after we file.\"\n\nI had no idea what 'significant' was. \"What will your initial settlement offer be?\"\n\n\"Fifty million.\" My eyes got wide. FIFTY? Holy shit! \"Each.\"\n\nThat made my jaw drop. \"Fifty for Maritza as well?\"\n\n\"It seems like a nice round number,\" he said. \"I doubt if they will take it, which is why I need to know your floor on this.\"\n\nI had zero clues as to how this all would go. \"What do you think is a good number? You're in for thirty percent, after all. I know you'd go as high as you can.\"\n\n\"Juries are a big variable, and the government can drag this out for years and years if they choose. We think we can get you twenty-five million each. For a floor, I'd recommend twenty. I'm confident we can get much more than that at trial if it goes that far.\"\n\n\"Cash?\"\n\n\"You have to pay taxes on it before you pay our fee, unfortunately. You'll probably take home around five million each.\"\n\nSomething didn't sound right. \"So let me get this straight. If you don't even file the lawsuit and in one meeting get the Feds to settle for fifty million, you walk away with fifteen million of it, and Maritza and I split ten million after taxes. Does that seem right? Why shouldn't I find someone else who will do it on an hours-worked basis?\" This was still my \"free\" consultation, so I hadn't signed anything with the firm yet.\n\n\"It's a standard services contract,\" the lawyer said.\n\n\"It's a gift of a case,\" Lance interjected. \"You just told her how easily you thought you could settle this in a week, but you'd still bend her over for thirty percent? Maybe she needs to look elsewhere.\" I could see the panic on their faces. \"I'm sure we can find someone willing to negotiate a lower fee. After all, this isn't a woman complaining about neck pain after an accident. Her case will never go to trial, and we both know it.\"\n\nI could see the lawyers starting to sweat; this case was worth millions to the firm, and the lawyers knew it. It was time for me to be firm. \"Ten percent,\" I told them. \"It's a hell of a payday for a weekend's work. As Lance said, there are plenty of law firms who could take what Spider Monkey gift-wrapped for you and turn it into a big payday. Now, I'm going to check on my daughter. Why don't you call the office and prepare a revision to the representation agreement; if you don't like my terms, Lance will show you to the gate.\" With that, I stood up and walked out.\n\nI couldn't get my clothes off and get into the pool fast enough. I was nervous I'd blown it, so as soon as I was sitting with the nannies, I asked one of them to check with Lance. \"Girl, you are one tough negotiator,\" she replied. \"Lance said they are freaking out on the call with their office. The senior partners don't want to lose the client, but they were already figuring out how to spend the windfall. They finally caved when the lead lawyer said that 'five million next week beats zero all to hell.' They are preparing the revised agreement now.\"\n\n\"Really?\"\n\n\"Yeah. Lance wants to know if he can have any of the millions of dollars he just saved you.\"\n\nI laughed, but he was right. To the lawyers, I was a teenager with a sob story. Lance was the one who made them sit up and realize I wasn't going to let them bully me into a bad deal. \"I'll take care of him,\" I promised.\n\nI signed the deal, and the lawyers went to work.\n\nThe next evening, I was sitting in the pool snack bar when someone turned all the televisions to Fox News and turned up the volume. \"FORMER CIA CHIEF ASSASSINATED,\" the crawl read. \"...one shot rang out, killing former CIA Director Peter Sinclair outside the law offices where he was meeting with his defense team. A source close to the investigation said the FBI has already located the murder weapon. It was a bolt-action sniper rifle in an empty office building five hundred yards away. More details as it becomes available.\"\n\nThe pundits and the speculation began. There were two prevailing theories; it was either a revenge killing by Julio Salazar or deep-state intelligence agents taking out Sinclair to keep the truth from coming out. \"What do you think happened, Maria?\"\n\nI looked over at Lance, then at Chase, who had Rori at his feet. \"Five hundred yards is within Julio's comfort range,\" I said. \"Dad said he once hit a prairie dog that far out, and they are the size of a squirrel. The CIA put him in that prison, so taking out the Deputy Director and the Director makes sense. Julio won't believe they did so without the President giving them direction. He'll take that personally, meaning the President is next on the list. Julio is dangerous as hell, and he won't stop until you kill him.\"\n\n\"Shit.\" Chase said. \"I better let Mom know.\"\n\nCh. 35\n\nPresident Laura Kettering's POV\n\nWhite House- Personal Residence\n\nSix days had passed since the assassination of fired CIA Director Peter Sinclair, and we weren't getting anywhere. No one had woken me overnight; since I left orders to wake me if we found anything, that meant we hadn't.\n\nThe initial investigation was conclusive; DNA evidence and fingerprints recovered along with the sniper rifle proved Julio Salazar was the killer. Despite wall-to-wall press coverage and a nationwide hunt for him, he'd disappeared without a trace. The Secret Service had gone on high alert for a few days but had returned to a normal posture yesterday. You can't make the White House into an armed camp without looking weak; it was something Fort Pelosi had proven last year at the Capitol.\n\nMy valet helped me choose a dress for the day while my secretary went over my schedule for the day. There was little around here as precious as the President's time. Every minute was planned out and accounted for by my secretary and my Chief of Staff. I listened as my valet, the first female in the history of the White House, helped me with my makeup. It was going to be a busy day.\n\nI saw my husband Andrew emerge from his room. We didn't maintain the illusion of a loving relationship in private anymore; he enjoyed the benefits of being the First Husband, while I needed him as a prop for photo opportunities and state dinners. He was wearing white golf pants and a red polo. \"Golf today?\"\n\n\"Finally,\" he said as he walked towards the door. \"The Secret Service is finally letting me out of this cage.\"\n\nI chuckled at that; for a cage, it was a gilded one. \"Where are you playing?\"\n\n\"Chevy Chase Club,\" he replied. \"Senator Fairchild has a membership. We're playing with a few guys from Pfizer.\"\n\n\"Keep things low-key,\" I said. Andrew could play golf every day of the year with the politicians and lobbyists seeking his time and favor. I'm sure if they understood just how little time I spent with him now, they wouldn't ply him with golf, food, and drinks. He'd dropped five strokes on his handicap since I came to the White House. He didn't look back as he left, his lead Secret Service agent waiting for him just outside the Residence. His protection team would drive him to the course in suburban Maryland; he wouldn't be back until late afternoon.\n\nI never ate much of a breakfast, and I was used to getting to the office early. Agent Carter had the lead this morning, and I smiled as I met him at the door leading away from the Residence. \"Good morning, Rufus,\" I said.\n\n\"Good morning, Madam President,\" he said to me. \"Valkyrie is on the move,\" he said into his wrist microphone. Agent Carter was a twenty-year veteran of the Service and was both imposing and capable. Rufus shaved his head because he didn't like to see the grey reminding him that he was getting older.\n\nI walked into the Oval Office at seven AM to start on my calendar. On the corner of my desk was a tray with a toasted bagel, a half grapefruit, and a large cup of coffee. My Chief of Staff stood up as I entered. \"Good morning, Madam President,\" Lynette Johnson said. \"You have a busy day set up. We need to twist some arms to get your defense budget passed.\"\n\n\"I'll make sure I stretch out first,\" I told her. Lynette treasured this time alone with me while I ate; she was my gatekeeper, and we needed to be on the same page. The Chief of Staff was the most powerful person in the White House who wasn't me. It was her job to run the White House offices and advance my priorities, and she was damn good at it.\n\nThe steward took the tray away after I finished, and the meeting schedule began with the Daily Intelligence Briefing. General Curtis Ripley, my Director of National Intelligence, didn't have much to report, and neither did Homeland Security. I was getting a little frustrated. \"We've got NOTHING on him? We just lost him? He just got up and walked away after shooting Peter in downtown Washington?\"\n\nHomeland Security Director Strickland was getting a little defensive. \"If there were jungles in DC, he might have done that. You are correct that Julio can't stay hidden forever. We are doing everything we can to locate him.\"\n\n\"He's not like your typical fugitive,\" General Ripley said. \"We've never had to deal with someone who could become a jaguar and slip into the woods to survive unseen. He could stay out there for months, and we'd never find him.\"\n\n\"We think it is most likely that he left the country already,\" Director Alexander Strickland added. \"He took out everyone on the oil rig, and now he's killed the CIA people responsible. Julio is not stupid enough to risk getting captured again, and the whole country knows his face. He's probably in Mexico.\"\n\nI shook my head. \"Is there anyone in the Sons who could be helping him now?\"\n\n\"I consider that unlikely,\" Alexander replied. \"Between the raids and RICO, there's no one above a prospect left in the Club. All his family members are dead, save two, and we know he hasn't contacted them. Chase would kill him if he tried.\" Julio and his family held grudges, which is how the whole war started between the Sons and the Steel Brotherhood. Chase and his Pack had been instrumental in the takedown of the Sons of Tezcatlipoca. Julio would want his blood as payback for the loss of life. \"If he wants revenge, he'll be in Minnesota.\"\n\nIn the end, it was all guessing. Julio would show up, or he wouldn't. I went on with my day.\n\nI was in the middle of my one o'clock press conference in the East Room when Rufus walked up to me with a grim expression on his face. \"We have to go NOW,\" he whispered to me.\n\n\"What?\"\n\nHe wasn't waiting as he pushed me towards the door, his hand in my back as he moved me away from the lectern. The reporters were shouting questions, all wondering what was going on. Rufus pushed me through the door, where five more agents surrounded me. All had their weapons drawn. \"What is going on,\" I asked because I couldn't see past them. The agents didn't go at my pace; instead, two of them had me by my arms. My toes barely touched the ground as they whisked me to the waiting elevator. Rufus and three other agents entered with me. \"WHAT THE HELL IS GOING ON?\"\n\n\"It's a security situation, and we're taking you to the bunker,\" Rufus said. He ignored me as he listened to updates on his earpiece, and I knew better than to push it right now. The Secret Service's response to threats was to get me to the safest location available. At the White House, that was the underground Situation Room.\n\nRufus left two men at the elevator while he walked me to the situation room. Only the skeleton staff was present, and they all stood as I entered the room. I stood at the head of the table, glaring at my lead agent. \"Rufus?\"\n\n\"The Secret Service detail assigned to your husband called in they were under attack,\" he told me. \"We've been unable to raise them since.\"\n\nI fell back into the chair; the news knocked the wind out of me. \"How?\"\n\n\"I don't have that information, Madam President.\"\n\nIt took fifteen minutes before I got a proper briefing, and by that time, the room was nearly full. The head of the Secret Service gave us the bad news. \"Our team got ambushed on the thirteenth fairway,\" Valerie Grunwald said. \"The gunman used an AR-15 and killed three of the agents. The fourth was seriously wounded and unable to fight back. Mr. Kettering's kidnapper took him through a cut in the fence to a waiting vehicle.\"\n\n\"Where do we sit on the search?\"\n\n\"We are mobilizing air assets and setting a perimeter, but he got a good jump on us. Our only witness so far said it was a white van.\"\n\nThe screens showed the progress of the search. An hour later, officers checking on a white van at a local park found Andrew's wallet and golf glove. There was no sign of the First Husband. \"He changed cars,\" FBI Director Patterson said. \"I'm sorry, Madam President. He could be anywhere by now.\"\n\nIt was after eight at night when the local news station received a ransom note from Julio.\n\n\"I have your husband. If you want to see him alive again, you must give me four things in return. The ten million dollars that you took from my Club. Chase Nygaard, the wolf directly responsible for the deaths of my Club brothers. My only living family members, Maria Meztli and baby Maritza. And a private jet and crew, fueled and ready for me at eight PM tomorrow at the Leesburg Executive Airport. Don't even think about trying to arrest me or stop me; Andrew only has enough air to survive for forty-eight hours or so, and I'm the only one who can tell you where I have him buried.\"\n\nI leaned back in my chair, my headache pounding away. My hands were shaking as I reached for my glass of water. What the hell was I supposed to do now?\n\nCh. 36\n\nChase Nygaard's POV\n\nArrowhead Pack Pool\n\nI was sitting in the hot tub, keeping an eye on the televisions we had around the snack bar area for updates on the First Husband's abduction. Like many, I was shocked that Julio had managed to take down the Secret Service agents and get away with him. Mom had reached out to all the Packs, urging them to send help for the search, and they had responded. Dozens of warriors and trackers were on their way to Washington, where they would pair with law enforcement agencies. The Secret Service would provide clothing with Andrew's scent, and they would all recognize a Werecat.\n\nI smiled as I looked over to where Maritza was playing with the other children in the pool. She and Maria were in their cat forms; my daughter Cheryl was climbing on her chest as she stretched out in the shallow water. Meanwhile, my son Mark was trying to catch her tail as it splashed back and forth at the edge of the pool. The nannies had things under control with the babies.\n\nSpider Monkey was sitting across from me, taking a few minutes to let the jets massage her lower back before she had to get out again. Vic was sitting on the edge behind her, rubbing down her shoulders and neck. She and her team had been looking for Julio, but it was like he disappeared into thin air. All of the screen time was wearing on her, and Vic had insisted she take the night off. Like all werewolf males with pregnant mates, he was obsessively protective about her and the baby. It might drive Spider Monkey crazy, but he'd make sure she got her rest.\n\n\"Alpha, your pizza is coming,\" Spider Monkey said.\n\nI got out of the hot tub and sat down at a table with a towel under me. Rori walked out of the pool to the designated \"shaking area\" for those in wolf form, where screens kept water from flying onto everyone. She came over to the table, climbing up on a platform covered in outdoor carpet that left her just below table level. Her tongue was hanging out to the side, and she was drooling. \"Hungry?\"\n\n\"Starving,\" she said. I put a few slices on a plate for her, peeling the cheese off the top so they would cool off faster. I knew she was frustrated by having to stay in wolf form while pregnant, but it was necessary. Our child was a big one, and her belly was stretched halfway to the ground when she stood up. \"Swimming helps with my back pain.\"\n\n\"It's good for you,\" I agreed. I poured some milk into a dish and set it next to the pizza plate before taking some pizza for my plate. I got to my first bite when the breaking news sounder came over.\n\n\"We interrupt this program with this breaking news. Julio Salazar, the werejaguar kidnapper of First Husband Andrew Kettering, released his demands to a Maryland television station a few minutes ago. Reading from the note: 'I have your husband. If you want to see him alive again, you must give me four things in return. The ten million dollars that you took from my Club. Chase Nygaard, the wolf directly responsible for the deaths of my Club brothers. My only living family members, Maria Meztli and baby Maritza. And a private jet and crew, fueled and ready for me at eight PM tomorrow at the Leesburg Executive Airport. Don't even think about trying to arrest me or stop me; Andrew only has enough air to survive for forty-eight hours or so, and I'm the only one who can tell you where I have him buried.' Thus far, there has been no reaction from the White House House.\"",
        "My jaw dropped at the demands even as I read my name on the list. The ten million dollars was chump change; the Kettering family had nearly a billion dollars in net worth, so it was a rounding error for them. I wasn't shocked that Julio wanted me dead, but to make turning me over a demand?\n\n\"OH, HELL NO,\" Rori thundered over the bond as she stood and growled at the screen. \"You aren't going ANYWHERE, and neither are Maria and Maritza. They are Pack now, and we will protect them from this bastard.\"\n\nMaria had shifted back when the update started. She was staring at the screen in shock as she stood at the edge of the pool. \"He can't have me. You can't give me to that man!\"\n\nShe was shaking, and I pulled her over to sit next to Rori. \"No one is going to give you to anyone, Maria. We won't allow it.\"\n\nVic had moved up until he was standing behind us. \"Julio is a smart guy. By burying the First Husband, he's ensured the police and military won't move against him while he flies out of the country with the money. He's also an idiot because he has to know that you're not going to turn yourself over to be tortured and killed.\"\n\n\"And Maria isn't going to be his breeding bitch,\" I added. \"I have to talk to my Mom about this. She must be freaking out right now. Stay here, and I'll call her from my office.\" Mom and Frank were in Washington, supervising the Council assistance to the Federal Government.\n\nI took a quick shower and dressed before going back to the office. The phone was ringing as I opened the door. \"Hi, Mom,\" I said as I picked it up.\n\n\"You've seen the news?\"\n\n\"Yes, I just saw the summary. Is there anything beyond what the news stations released?\"\n\n\"No,\" Frank said. \"We were in the Situation Room with the President when the news came in.\"\n\n\"It's a no-go, Frank. I can't give myself up to this asshole, and Maria is scared of Julio, for good reasons. She doesn't want to leave, and we won't make her.\"\n\n\"That's where I need you to help us out, Chase,\" Mom said. \"The President can't compel you to give yourself up. She won't ask that of you. What we DO need is to give Julio the impression we are preparing to meet his demands.\"\n\n\"What do you mean?\"\n\n\"We want you to bring Maria and Maritza to Washington. The Air Force will transport you out here on one of their planes out of the Duluth. We'll make sure the press sees you, and that will keep Julio thinking we are going to meet his demands,\" Frank said.\n\n\"I don't like it,\" I said. \"What is to keep the President from shooting us with tranquilizer darts and trussing us up as presents for Julio? I mean nothing to her, and Maria even less.\"\n\n\"The Council would go to war over that, and you know it,\" Mom said.\n\n\"And then what? We're out in the open now, and the Administration has all the intelligence they need to win a war if we start one. We're talking about the President's husband!\"\n\n\"There is no way the President can make that trade, Chase. It's a non-starter,\" Mom said. \"Her political career would be over if she caved to these demands.\"\n\n\"My life is more than a political calculation,\" I said. \"Look, I have to talk it over with Rori and Maria, and I don't need to make the decision now. I also don't plan to put myself under the military's control; I don't see the need for it. I'll call you in the morning with my decision.\"\n\n\"I understand,\" Mom said. \"President Kettering is our ally, Chase. We need to do what we can to help while staying true to our values.\"\n\n\"I agree, Mom, and Pack sanctuary is one of those values. Make sure you get your rest, Mom. We miss you here.\"\n\nMom laughed. \"Trust me, Chase. Frank is just as overprotective as every other werewolf male. I'll be fine. Tell everyone we love them and miss them. We've got a search underway for Andrew, but it doesn't look good. Julio cut out the tracker the Secret Service implanted and left it in the van we found. He could be anywhere.\"\n\n\"It has to be somewhere he could dig a hole without being discovered,\" I said. \"Somewhere he could have confidence it wouldn't be disturbed or stumbled upon.\"\n\n\"We're on that,\" Frank said. \"We are deploying thousands of troops and volunteers in the search, and we're placing a werewolf with each search team. We figure we can smell a cat faster than they can look for one.\"\n\n\"If you see him, kill him,\" I said. \"This guy needs to die.\"\n\n\"We can't do that, Chase, not until we find Andrew.\"\n\n\"And he knows that. Goodnight, Mom. You've given me a lot to think about.\"\n\n\"Goodnight, baby. Tell the babies Grandma misses them.\"\n\n\"I will.\" I hung up the phone, leaning back and thinking over the options. They all sucked.\n\n\"We're coming in,\" Rori sent to me just before the door opened. She trotted over and sat by me, her head on my leg. Maria came in behind her with Vic. I filled them in on what Mom and Frank told me and my promise to get back to them.\n\n\"They've put us in an impossible position,\" Vic complained. \"If we refuse, the Packs take the blame for the First Husband's death. If we agree, we risk both of you.\"\n\n\"Andrew will die, and we can't change that,\" Maria said. \"Julio won't be satisfied with the money, not if he blames the President for what happened to him. He wants the President to suffer for what she did. He's only using him as a shield so he can get away, probably to Mexico.\"\n\nMy eyes got wide at this. \"Mexico? Really? The government will turn him over in a heartbeat, and the Cartel already killed the Presidents.\"\n\n\"There's more than one Cartel, you know. And the government controls less of the country than you might think.\"\n\nI disagreed with Maria about the destination, but I knew Julio wasn't going to let Andrew live.\n\nCh. 37\n\nPresident Laura Kettering's POV\n\nWhite House Situation Room\n\nI couldn't focus. It was now eight in the morning, and I'd gotten only an hour or two of sleep since yesterday morning. The White House was in crisis mode.\n\nAll around me, men and women in suits and uniforms talked on phones, updated screens, and directed tens of thousands of people searching for my husband. We had been at this all night, and we had a big fat nothing to show for it.\n\nI sipped at my coffee as the next meeting began. My Vice President, Robert Cartwright, was sitting to my left. The Chairman of the Joint Chiefs, Chief of Staff of the Air Force, and Chief of Naval Operations were seated to my right. My National Security staff, including Homeland Security, FBI Director, and acting CIA Director, were on the other side. Colletta Nygaard and Frank Grimes were sitting along the wall along with several aides and experts. At the other end of the table sat the Secretary of State and my Chief of Staff, Lynette Johnson. She started the meeting. \"The purpose of this meeting is to strategize a response to potential actions Julio Salazar might take tonight if he gets his money, the jet, and the people he wants. My first question is whether it is possible to meet his demands.\"\n\n\"I've already directed my bank to deliver the ten million in cash out of my private account,\" I said. \"It will arrive in an armored car this morning. I'll show the cash to the press to prove I'm complying, and it will be at the airport well before the time required.\"\n\n\"I don't like the idea of paying off a terrorist,\" Homeland Security Chief Alexander Strickland said quietly.\n\n\"I don't either, but I have to show the cash to draw him out,\" I responded, a little annoyed. \"What about the private aircraft?\"\n\nGeneral Kirk addressed that. \"The Air Force has two volunteer pilots and a Learjet 70 standing by. The plane has already moved to Leesburg Airport, and the crew is on their rest time. We've got it parked on a remote taxiway. We'll be ready.\"\n\n\"That leaves the most unsettling of the demands,\" I said. \"Colletta and Frank, thank you for coming. Have you gotten an answer from Alpha Chase?\"\n\n\"I did, Madam President,\" Colletta said. \"He is willing to travel here with Maria and Maritza if needed to draw Julio out. He is NOT going to get on a plane with him, and he is not going to sacrifice himself or the two girls to get your husband back. Julio Salazar wants Alpha Chase dead, preferably in a slow and torturous fashion, and Maria said Julio would rape her to get werejaguar sons and daughters.\"\n\n\"I could never ask that of them,\" I said. \"I genuinely appreciate their cooperation. Without it, Julio would disappear and strike again later.\"\n\n\"We will be there as well, along with all the werewolves we've gathered. If Julio tries to escape, we'll take him down,\" Frank Grimes replied.\n\n\"Valerie, which agency will be lead at the airport? The FBI or Secret Service?\"\n\n\"The FBI will be the lead agency,\" Valerie said.\n\n\"The Hostage Rescue Team will be onsite, along with a multi-agency team including the Secret Service, Homeland Security, US Marshal Service, and local law enforcement,\" Hugh Patterson added. \"We will be ready for anything.\"\n\nI looked at my FBI Director. \"So what is the plan, Hugh?\"\n\n\"We have the crew in place, and the plane fueled and idling, by 1945. The money will be in the cargo compartment in five or six heavy-duty duffel bags.\"\n\n\"Five bags?\"\n\n\"A million dollars in bundled hundreds is about the size and weight of a box of copier paper. These bags won't be small or light; I'm surprised Julio didn't ask for gold or diamonds, something much easier to transport than bags of cash. It helps us because he can't carry it; he'll need a vehicle at the other end. He's also not about to parachute out of a plane with bags of cash because they will break apart.\"\n\n\"We take him alive?\"\n\n\"We have to, Madam President. If we kill him, we lose any chance of finding out where your husband is. Our teams will do their best to take him down with non-lethal force. Nothing is a guarantee, of course. A lot can go bad in a situation like this.\"\n\nThat was an understatement. \"And if Julio goes after Chase or Maria?\"\n\n\"We'll have to put him down with any necessary force,\" Hugh said softly.\n\n\"You can't mix it up with him if he goes jaguar form,\" Frank said. \"Anyone he bites, he kills. Maybe not then, but within twenty-four hours? They will be getting their last rites.\"\n\n\"My men will be in body armor,\" Hugh objected.\n\n\"All it takes is one bite on exposed flesh, and armor doesn't cover their throats. Julio will be going for their throats, and if they are fighting not to kill, your men will die,\" Frank concluded. \"I have a better idea. Let us handle Julio.\"\n\n\"What do you mean?\"\n\n\"I'll have fifty warrior and Beta-level werewolves here by dinnertime. We hide them around the airport, and we move in when Julio approaches the aircraft. Julio will have to shift to meet us. We put a couple more inside the plane, out of sight. They can work with Chase to protect Maria and Meztli when we move in. Unlike you, my wolves aren't affected by jaguar saliva, and we have been training specifically to take cats down. We can disable him without killing him, even if we tear him to shreds doing it.\"\n\nHugh didn't like the idea. \"What do we do? Stand around and watch?\"\n\n\"Yes. You set a perimeter at the fence and make damn sure Julio doesn't get out. And you make damn sure you don't shoot any of my people while you do it.\"\n\nNo one said anything for a minute. \"Anyone have a better idea? General?\"\n\n\"Our scenarios were all based on the jet taking off with Julio and the hostages aboard, Madam President.\"\n\n\"Anything could happen,\" Frank replied. \"What if Julio overcomes the guards and gets Maria and Maritza in the jet with him? Will you prevent it from taking off?\"\n\nHugh didn't like this. \"We can't stop the aircraft without risking the hostages,\" he said.\n\n\"You're going to have to risk it,\" Frank said. \"You never let the kidnappers leave with the hostages. A Learjet 70 has a two-thousand-mile range. It could make it to Mexico, Cuba, or Central America! We'd be at a real disadvantage if we don't know where it is going.\"\n\n\"Shooting it down is easy,\" General Kirk said. \"Our contingencies include fighter escorts, pre-positioned Aegis-capable warships, and radar tracking. The problem is stopping him without killing everyone on board.\"\n\n\"I can warn off Cuba and the others,\" my Secretary of State added. \"No one will allow him to land without turning him over to us.\"\n\n\"It's best if Julio can't get on the plane. As soon as our wolves start the attack, Chase should get the girls inside and get the door closed.\"\n\nI'd heard enough. \"Work with Frank to set everything up,\" I said. \"Defense, Homeland, FBI, Secret Service, and our guests are all excused. I need Marisol, Lynette, and Robert to stay behind.\"\n\nEveryone stood, and the group filed out, leaving me with my Attorney General, Chief of Staff, and VP. As soon as the door closed, I looked over at Marisol. \"Legally, where do I sit with paying a ransom?\"\n\n\"It's not illegal, but it does go against US policy on dealing with terrorists,\" she replied. \"If it is your own money and it never actually changes hands, I don't see an issue.\"\n\n\"I do,\" Lynette said. \"You're still the President, and you're operating from a position of weakness. You'll embolden bad actors around the world, thinking this is official policy.\"\n\nI'd been considering this all night, and it was time. \"Lynette, I don't plan to do this as President.\" Her jaw dropped. \"I am invoking the 25<sup>th</sup> Amendment of the Constitution.\"\n\n\"You're stepping down?\"\n\n\"Temporarily, and at my direction. I shouldn't be making decisions when my head isn't in the game, and I can't make decisions that could result in Andrew's death. Draw up the paperwork and call the Chief Justice. We'll turn over the Office of the President at eleven in the Rose Garden. Notify the press I will be holding a press conference, but say nothing to anyone about this.\"\n\n\"Yes, Madam President,\" she said.\n\nIf everything went to shit, I wasn't going to drag this office down with me.\n\nCh. 38\n\nPresident Laura Kettering's POV\n\nWhite House Press Room\n\nI waited in the next room with everyone involved as my Press Secretary laid down the rules. \"The President will make a statement and may take questions following. I don't want a bunch of yelling and screaming. Act like professionals, and I'll call on you like one.\" I hated how some of them behaved, and it rubbed off on my Press Secretary. I made it a point never to acknowledge or answer a question shouted at me. They were learning. \"Ladies and Gentlemen, the President of the United States.\"\n\nEveryone rose as I entered the room, followed by the Vice President and my Chief of Staff. I went to the podium as they waited at the back of the room. \"My fellow Americans. Yesterday, in a brazen and unprovoked attack, Julio Salazar killed four brave Secret Service agents and took my husband hostage.\" The fourth agent had died during surgery. \"Last night, we received his demands. He thinks that I will do anything to save my husband. Let me be clear on one thing: the United States does not cave to the demands of terrorists. The President of the United States cannot be held hostage to demands, nor can she perform her duties while her heart is with the man she loves. As such, I am invoking the twenty-fifth amendment to the Constitution at my discretion. I am stepping down temporarily from this office for the duration of this crisis. Mr. Vice President?\"\n\nThe room erupted as Robert stepped forward, and we ignored it. I signed the document first, then Robert signed it. \"With this letter, I formally notify the President Pro Tem of the Senate and the Speaker of the House of my temporary inability to perform the duties and responsibilities of the office of President of the United States. The Vice President is now the Acting President. He will remain in that capacity until I notify them in writing that I am once again able to resume my Constitutional duties. If Congress does not act to prevent it, four days later, I will resume the duties of the office of the President.\"\n\nI handed the papers to my Chief of Staff, who left with them to deliver it to Congress. I shook his hand before he waved me back to the podium. \"Acting President Cartwright now has the sworn duty to defend the Constitution against its enemies, and I am no more than a private citizen, with none of the power or authority of the office. Now that I'm just Laura again, what I do next will not reflect on official US policy or actions.\"\n\nThe door opened, and two security guards pushed a cart into the room containing the five large duffel bags of money. \"This is what ten million dollars in cash looks like,\" I said. I opened one of the bags, taking out a handful of bundled hundred dollar bills and showing them to the cameras. \"The money is my own, as is the decision to meet Julio's demands. The ransom will be waiting with the plane tonight.\"\n\nThe reporters started shouting questions, but I picked one who raised her hand quietly. \"Miss Thompson?\"\n\n\"Madam President, the ransom demands included Alpha Chase Nygaard and Maria Meztli. Are those demands going to be met?\"\n\n\"The demands are known to both people. Even when I was President, I could not compel them to do anything like this. What I do know is that Julio is without honor or courage. Julio's threatening the life of my husband to get Alpha Chase Nygaard delivered to him in chains. He knows that is the only way he'll get him because he doesn't have the BALLS to face him alone.\"\n\n\"Are you saying you'll deliver Alpha Chase to him?\"\n\n\"I'm saying Alpha Chase is more of a man than Julio is. He is willing to put himself in harm's way for a friend, which I am proud to say that I am. When Chase shows up, it's on. He is going to kill Julio like the gutless little Hijo de Puta that he is.\" That should get his attention. \"Maria and Maritza will go to the winner.\"\n\n\"They are coming?\"\n\n\"My understanding is that Chase, Maria, and Maritza will be arriving in Leesburg tonight. Chase Nygaard knows how unstable and dangerous Salazar is, and he volunteered to tear Julio's furry little butt up until he gives up the location of my husband. That is the end of my statement, and I will not be taking questions. Thank you for coming, and God Bless America.\"\n\nThe Acting President stayed in the room, and I walked out a free woman. My Secret Service team met me, along with Frank Grimes and the FBI Director. \"Think that will stir him up?\"\n\n\"Our profilers think so,\" Hugh Patterson said. \"He's a megalomaniac, always thinking he is superior to everyone else. The Sons of Tezcatlipoca never backed down from a challenge, and Chase is bringing that in spades. Julio has to respond.\"\n\n\"I hope so,\" I said. \"Where am I going to be tonight?\"\n\n\"Nowhere near Leesburg,\" Hugh said. \"You should watch from the Situation Room in case the airport is a diversion.\"\n\n\"Well, I'm heading to the Residence to get some sleep,\" I told them. \"Wake me if something important comes up with the case. If it's President stuff, it's Robert's problem now.\" With that, I walked back to my bedroom and was asleep as soon as my head hit the pillow.\n\nChase Nygaards' POV\n\nLeesburg Executive Airport\n\n\"So this is what the minnow feels like on the hook,\" Maria said to me. We were standing together on the tarmac, fifty feet from the idling engines of a Learjet on a remote taxiway. We'd arrived just after seven PM on a private jet of our own that was getting fueled up for the return trip. Since we got dropped off at the new plane, we'd been standing in front of the stairs.\n\n\"It must be,\" I replied. I'd been keeping the link open with Frank and the Arrowhead wolves since I arrived, so he was listening to everything I said and thought. \"Maria, we're surrounded by dozens of armed agents. I've got fifty werewolves who can be here within thirty seconds. I should feel safe, but I don't. My gut's twisted in knots. It's like there is something bad about to happen.\"",
        "\"I've had that feeling all day,\" she replied. Maritza was fussing in her car seat, wanting to run around, and we couldn't do that. The baby's safest place is in her car carrier. \"Do you think Julio's demands are just a bullshit diversion? Look at that money; there's no way he's going anywhere without a truck and outside help. Who the hell is going to help him? The Feds will come down on them like hellfire.\"\n\n\"I was wondering the same thing. Even if we take off, the military will track us to wherever we go, and you can bet the military has prepositioned SEALs and Special Forces to get us back. And ten million? That's nothing. Not even the Cartels will risk war with the US over a lousy ten million. Frank, what do you think?\"\n\n\"I've been wondering the same thing. The President is damn near a billionaire. He could have asked for ten times that, and she would have paid it in gold, diamonds, bearer bonds, even bitcoin.\"\n\n\"It's almost eight. Where the hell is he? Do we have anything yet?\"\n\n\"Nothing. No sign of Julio at all.\"\n\nI looked over to Maria, who wasn't part of the Pack Link conversation. \"Frank is wondering why he didn't ask for a hundred million in bitcoin instead.\"\n\n\"He got you here, and he killed the CIA Director at five hundred yards. Is it that simple? Is he planning to shoot you in front of the cameras?\" There were news vans everywhere outside the airport, reporting live.\n\n\"I can't see Julio being satisfied with a long-range kill. These Sons of Tezcatlipoca assholes, they like their vengeance up close and personal. Our Club in Orlando had an ex-DEA agent who testified against the Sons and another club. The Sons compromised Witness Protection and found him twenty years later with his wife and daughter. They raped and tortured his wife in front of him before they killed him. The Sons want the whole bloodline wiped out.\"\n\nMaria looked off towards the setting sun. \"So if he wants vengeance on you, why are you here instead of your family?\"\n\n\"Frank?\"\n\n\"She's right. Killing the First Husband before the President fits the pattern, but you don't. Unless...\"\n\nThe answer hit me like a thunderbolt. \"Julio's not here because he's at ARROWHEAD! Son of a BITCH! He's going after my family!\" I pulled my phone out and called the Pack security line. \"It's Chase. RED ALERT ARROWHEAD! Get Rori and the babies to the safe room NOW!\"\n\nCh. 39\n\nFirst Husband Andrew Kettering's POV\n\nChevy Chase Club, Maryland\n\nI couldn't find a fairway with a guide dog today.\n\nMy tee shot on thirteen had gone into the trees on the right near the boundary fence. \"Dammit!\"\n\n\"You just don't have it today,\" Senator Fairchild said with a laugh. \"Drop me at my ball, then meet your detail in the woods. Maybe they know where it is.\"\n\nI slammed my driver back in my bag. Five hundred dollars for that piece of ham on a stick that was supposed to cure my slice, and it was as worthless as the last three. Maybe the golf pro was right. I'd asked for a lesson at the range while we were warming up, and she had watched me take a couple of swings. \"I've got good news and bad news for you, Mr. Kettering.\"\n\n\"Better give me the good news first.\"\n\n\"You have fantastic hand-eye coordination for a man your age,\" she said.\n\n\"And the bad news?\"\n\n\"With that swing, you need it.\" I rolled my eyes, then ignored her recommendation that I leave the driver in the trunk and carry a trouble-seven wood instead. \"You'll never keep that in the fairway, and you aren't strong enough to make the driver a better choice than a three-wood.\"\n\nWell, if I did that, I might as well put on a skirt and swing from the Ladies tees. She did give me some advice; I wasn't as limber as I had been a decade ago, and when I tried to wind up for a big hit, I'd lift my head. Focusing on keeping my head still helped, but it cost me distance, and I couldn't abide that. By the fourth hole, I was trying to kill the ball again. My drives started right and kept going. If I aimed down the left side to compensate, they didn't stay on the fairway. One time by some miracle, I hit it straight and long, but I was aiming so far to the left that I went straight into a fairway bunker.\n\nThe Senator had his ball just off the fairway on the left side, so I left him there and drove across to where my Secret Service detail was sitting in their golf cart. \"Did you see it, Jack?\"\n\n\"It went into those bushes,\" he told me. The detail worked in teams of two, the second trailing behind us. One guy watched the surroundings while the other watched me.\n\nI was lifting some branches when I heard a POP POP POP. \"GUN!\" I looked over to the lead cart just in time to see Jack's head explode into a red mist; his partner tried to get his weapon up, but he took two in the chest. I dropped to the dirt as the gunfire continued, watching in horror as the two trailing agents fell to the ground.\n\nThe sounds stopped, and I heard footsteps approaching. I saw a man coming my way, and he was scary as hell. He grabbed my belt, hauling me to my feet, and shoved the hot barrel of a rifle into my back. \"MOVE,\" he said.\n\nI moved. My kidnapper pushed me to the fence and through a hole cut through the chain link. A plumber's van was waiting by the street; he tossed me inside, then stabbed me with a needle before closing the door. I felt myself getting dizzy before I blacked out.\n\nI had no idea how long I'd been out when I woke up. I was cold, hungry, sore as hell, and I smelled blood and urine. I had a cloth gag in my mouth and handcuffs on my wrists. There was no light; I lifted my hands to find I was in a coffin-sized box. I couldn't move my elbows out or up, and my knees could only go up a foot or so before they hit metal. I could feel a sharp pain from my left collarbone, and I realized he'd found and removed the tracker the Secret Service implanted there.\n\nIf they couldn't track me, I was screwed. I could be anywhere by now.\n\nI knew from the road noise and vibration that I was in a vehicle, but I had no idea where. I screamed into the gag and pounded on the metal until I sensed we were slowing down and coming to a stop.\n\nI heard the sound of latches before the top opened on a side hinge. I was inside a van, and it was dark out. I could see only the shadow of the man who captured me as he unzipped his white coveralls. \"Who are you,\" I asked.\n\n\"My name is Julio Salazar,\" he said as he stepped out of his clothing. \"And your wife has offended me.\" A moment later, a large cat stood in his place, big white teeth bared at me as he growled.\n\nI promptly wet myself, then tried to turn away, but I was still in the box. My shoulder exploded in pain as the teeth bit down. I screamed into the gag until the bite stopped. I was breathing hard when I saw him again, now back in his human form with my blood on his lips and teeth. He held up a syringe, plunging it into my neck, and it was lights out again.\n\nI woke up once, and this time he didn't say anything as he injected me again.\n\nIt was noticeably cold in the box the next time I woke up. I'd learned my lesson; there was no point in making noise. No one could hear me anyway, and it would only get me a shot. My shoulder ached, but the bleeding had stopped. I tried not to move, knowing any motion could rip the scabs open again.\n\nI tried to focus on any clues as to where I might be. The cold was one big one; I wasn't in the DC area. The road was smooth, with regular expansion joints, so it was probably a freeway.\n\nI had no idea how long I'd been awake when I figured out we weren't on a freeway anymore. It sounded like I was in a city, then we were driving fast again.\n\nI was hot, and I knew I was coming down with a fever. The big cat bit me, and I knew what that meant. With werewolves, you'd get a fever within 24 hours, leading to a painful death. Alpha Chase and his people figured out a way to save a couple of people, but it wasn't easy. The werejaguar must be the same.\n\nI started singing songs in my head to pass the time; I was about one album in when we turned onto a road with stoplights again. I was sweating profusely and getting the chills, making it difficult to concentrate. Twenty minutes later, after making slow turns at much lower speeds, we came to a stop, and Julio put the van in park.\n\nThe lid opened, and Julio looked down at me. He was holding a strip of cloth. \"Resistance would be both futile and painful,\" he told me. \"Sit up.\"\n\nMy body wouldn't cooperate, so he reached down and grabbed my shirt, pulling me to a sitting position. My shoulder was in agony, and I gritted my teeth to keep from crying out. He let go and pulled a bandana out of his pocket, tying it as a blindfold.\n\nI heard a door open then he pulled me out of the box and out. I felt the cool breeze on my face as my feet touched pavement; my body was sore, and I had trouble standing. \"Listen carefully, and you'll be free. Stand here and count to five hundred. When you finish counting, remove the blindfold and walk down the hill until you find help. If I see you peeking, I'll shoot you in the head. Do you understand me?\"\n\n\"Yes,\" I said through the gag.\n\n\"Start counting.\" I heard him get into the van and drive off by the time I got to twenty-five. I kept counting until I reached five hundred, then pushed the blindfold off with my thumbs and untied the gag. I was in the woods, and I could see a lake ahead of me. The sun was just below the horizon, but I didn't know if it was morning or night. I started walking downhill slowly as the feeling came back to my butt and legs.\n\nI could see some homes to my right, but I kept going towards the stop sign at the bottom of the hill. I could see and hear people to the right side as I got there; looking over, I was shocked to see a news van with the satellite dish up. \"HELP! HELP ME!\"\n\nOne of the men standing outside the van turned my way; he stumbled a bit as he saw me. \"HEY! CALL FOR HELP!\" A few people came running, and the driver turned his lights on to illuminate me better. \"IT'S THE FIRST HUSBAND!\"\n\nI got plenty of help, and three cameras were rolling live as one of the men sat me on the back of his truck. \"He needs an ambulance,\" he said to the driver.\n\n\"Ambulance is fifteen minutes out,\" he called back.\n\nHe shook his head. \"Arrowhead has a nurse and a clinic. Call them now!\"\n\nI looked at him in amazement. \"Arrowhead? Where am I?\"\n\n\"North of Duluth in Minnesota, sir. We're outside the Arrowhead Pack entrance.\"\n\nCh. 40\n\nBeta Vic Knightly's POV\n\nArrowhead Pack Beta Residence\n\n\"Oh, God! Vic! Yes! Right there!\"\n\nSpider Monkey was moaning in pleasure as I worked my thumbs into her back and neck. I worked my way down her spine, my big hands massaging the stress right out of her body. We'd gone to dinner early, and I'd noticed her wince when she stood up. All I had to hear was that her back was sore, and I carried her home to take care of her.\n\nI'd put an old sheet down over the bedspread, put a throw pillow down to make her more comfortable with her pregnancy belly, and broke out the massage oil. Now I was straddling her thighs, both of us naked as I worked her muscles. The tight spot I was working was on her lower back, and it was as stubborn as she was. I dripped on more oil and started using the heels of my hands from the spine out towards her hips. I smiled as Spider's moans became louder and near-continuous.\n\nI could scent something else; her arousal was becoming overwhelming. It always happened, and I always enjoyed the fruits of my labor. I teased her as I moved down from her back, kneading her gluteus maximus before going down to the backs of her thighs. She tried to move to get my hands where she wanted them, but I was wise to her ways and kept them clear. Instead, I kept going down her legs, working her thighs and calves before ending at her feet.\n\nSpider Monkey was a small woman carrying a big baby, and her feet and back paid the price. Marcellus Wallace was right; a foot massage was a sensual thing. I worked oil in as I rubbed her instep up to her toes. She moaned with pleasure as I rolled her onto her back and started working my way north again.\n\n\"Please, Vic, I'm so horny right now,\" she said as she grabbed my head and guided me down. \"YES! That's it, right there!\" I slid my oiled hands under her tiny butt and lifted her hips as my lips and tongue went to work. She came quickly as my tongue flicked over her swollen clit, but that wasn't enough for me. It wasn't long before she lost the ability to speak, and I lost the ability to breathe as she held me in place. She came twice more before she let go of me, exhausted from the pleasure.\n\n\"Better?\"\n\nShe nodded as she caught her breath. \"I need you, baby. Please.\"\n\n\"Carefully,\" I said. Doc said she could continue to have sex as long as it wasn't painful or uncomfortable. Our size disparity was such that I wouldn't get on top anymore, and her belly was too big to ride me for long. I grabbed her thighs, scooting Spider until her butt was at the edge of the bed, and held her legs as I pushed inside her. She was hot, tight, and wet; I wouldn't last long.\n\n\"More,\" she begged me. I sank in halfway, watching her for any sign of pain. Her head fell back, and she let out another moan as she pulled me deeper. I stopped before I could bottom out, slowly backing up and then moving forward again. I set up an easy rhythm, enjoying the sensation of the coupling. \"Faster,\" she begged.\n\n\"No,\" I told her as I started rubbing her clit with my thumb. \"I can't lose control.\" It didn't matter; we were building to a climax that nothing could stop. I forced myself to hold back as I waited for her to peak with me.\n\n\"Beta Vic, you are needed in the security center. Chase and Maria are about to land in Leesburg.\"\n\n\"I'll be there shortly,\" I told Larry, the warrior running the Security Center.\n\n\"What's going on?\"\n\nSpider Monkey didn't have the link, but the glazed-over look and my disappointment made it clear someone had talked to me. \"Work. Not until I'm done with you, though.\" I speeded up my thrusts and held her thighs closer together, making her sex even tighter on my throbbing cock. It only took ten more strokes before she went off again, and I came with her. I filled her up as she came down from her peak. \"I love you so much, baby,\" I told her as I rolled her onto her side.\n\n\"I love you too, baby, but I'm a mess here.\"\n\nI grabbed a towel and held it in place while I carried her to the bathroom. I had just enough time for a quick shower before I pulled on my clothes and headed out, leaving Spider Monkey alone in the shower. \"What's going on,\" I asked Larry as I walked into the state-of-the-art security center. From here, we could monitor perimeter alarms, monitor the motion-sensing cameras, and control all of the people and equipment that made up our Pack defensive plan. High-def monitors of all sizes filled the walls, and one was showing the live news from Leesburg. Chase's plane was on its final approach.\n\n\"I don't like the Alpha being out there, and I don't understand risking Maria,\" Larry said.\n\n\"It's their call. The Feds need to draw Julio out; there is no way Chase is getting on a plane with that guy.\"\n\n\"I'm more worried he'll kill the Alpha on sight.\"\n\n\"We know Julio wants Maria and Maritza alive, so he won't do anything that endangers them. I won't worry until they are outside the plane.\" We watched as his plane landed and taxied to the terminal area. Three FBI vehicles were waiting as the stairs came down. Chase was out first, carrying Maritza's car carrier seat, followed by Maria and the warriors forming his protective detail. The group loaded up and drove across the airport to where the government jet waited, ten million in cash inside the open cargo bay.\n\nWe watched as they stood on the tarmac and nothing happened. The deadline passed, and still nothing. The news team had cameras focused on the group, and I saw Chase pull his phone out. Our phone rang a few seconds later; Larry hit the button for the speakerphone. \"It's Chase. RED ALERT ARROWHEAD! Get Rori and the babies to the safe room NOW!\"\n\nLarry was hitting the emergency alarm while Alpha Chase was still talking. Alarms started sounding in all the buildings. I opened up the Pack link to everyone. \"Red alert, red alert, man defensive positions and lock down all entrances. All others get to the safe room.\" I knew Chase could hear the alarms going. \"Alpha, what's going on?\"\n\n\"Julio isn't here; he never was. He wanted us out of the way so he could take out my family before he kills me.\"\n\n\"DAMN!\" I knew Spider Monkey would be high on his list. I made sure one of the warriors was escorting her to the Safe Room. \"We've got nothing on the sensors, Alpha. Roads are clear. In two minutes, we'll be at full readiness, and the safe room will be secure.\"\n\n\"I want to know as soon as Rori and the babies are secure,\" he told me. Three more people entered the room, each taking a station monitoring different parts of our defenses. The last defender reported to Larry she was in place; a Red Alert meant attack in progress, so everyone had rounds chambered. Vehicle barriers were in place across the roadways that could stop a truck. Building exterior doors and tunnels entrances were all locked down, and all ground floor windows shuttered closed. Trained snipers were in position on the rooftops and deployed to prepared fighting positions. It would take a company of infantry with armored vehicles to make it through the killing field now.\n\nSoon after, Rori linked to me that everyone else was in the safe room and the door was closed. It would take a truckload of explosives to get at them now. \"We're locked down and ready, Alpha. There's still nothing on the alarm screen or cameras.\"\n\n\"He's around there somewhere,\" Chase said. \"I need to talk to Frank. Call me if anything changes, Vic.\"\n\n\"Yes, sir,\" I said before he hung up on me. You could cut the tension with a knife as we waited; I filled the Pack in on what Chase had told me. \"Make sure weapon safeties are on, and keep up your scanning routines,\" I told everyone. \"This could be a long night.\"\n\n\"I don't think it will be,\" Larry said. \"If Chase is right and Julio did this to get them away while he attacked, he has to do it in the next four hours. Chase isn't going to stay in Washington if his family is in danger, and it's a three-and-a-half-hour flight time.\"\n\nI called Oxbow Lake and let Alpha Michael know what was going on. Many of his warriors were in Washington, so he decided to go on alert just in case. I'd just gotten off the phone when Larry pointed to the television. \"I don't believe it! It's the First Husband!\"\n\nThe live cameras showed Andrew Kettering sitting on the back of a news van parked along the road outside our main entrance. One of the technicians was cleaning an injury to his shoulder. \"Son of a BITCH!\" I said as the camera closed in on his shoulder. \"Julio fucking BIT him!\"\n\n\"The wounds are scabbed over, Beta. He must have bitten him hours ago.\"\n\nI nodded at Larry. \"Form a detail and bring him to the clinic. Tell them that we're the only ones with experience treating bites if they want to put him in an ambulance instead. Possum will have to take care of him until I can get Doc here from Oxbow Lake.\" I made that call to Alpha Michael.\n\nIt wasn't about Rori at all. Biting Andrew sentenced him to a long, painful death that the President would have to watch along with the entire world. I didn't know if we could stop it, but I was sure we'd get blamed for it."
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "werecat",
        "pack",
        "alpha",
        "jaguar",
        "werejaguar",
        "biker"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/aztec-treasure-ch-31-40"
}