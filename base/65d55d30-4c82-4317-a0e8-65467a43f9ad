{
    "title": "In the Spider's Web Ch. 03",
    "pages": [
        "I hung in the grip of a huge wasp, paralysed and helpless, as it flew through the night. Unable to lift my head, I saw only the ground far below. If I could move, the height would have made me tremble. \n\nThe top of a building entered my line of sight. The wasp that held me landed on it. I heard it call to another of the creatures in a female voice. \"Hey, Yera! Look what I got!\"\n\n\"Another of the natives?\" Another female voice, presumably Yera's, answered. \"Nice! The queen will reward you for sure! Take it down to the larval chamber.\" \n\nThe wasp entered the building. I could still only see what was below me. At the moment it was dirty floor tiles and the creature's legs. \n\nMy captor exchanged pleasantries with other wasp things as it passed them, sounding very cheerful. We went down one flight of stairs, and then another. Finally we entered a room. \n\nThe enormous insect shifted its grip on me, allowing me to get a look around. It looked like this had once been a fairly typical cubicle farm. However, now all of the cubicles, desks, and computers had been shoved to the walls in an untidy mass. \n\nIn the center of the room... I wished I could scream. In the center of the room was a mound of bodies, most human. All were at least partially devoured. Enormous white larvae writhed among the bodies. Most were around the size of cats, but many were larger. One pale, blubbery form was almost as big as my captor. Around the edges I could see huge cocoons, presumably larva on their way to becoming wasps. \n\nWhat was worse, at least one of the bodies was still alive. Its one remaining eye followed us as we entered the room, and it twitched weakly as a larva gnawed on the stump of its arm. \n\nMy captor dumped me right in the center of this mess. I felt the bodies beneath me give as I fell onto them. \n\n\"I brought you a yummy,\" the wasp cooed in baby talk. It nudged one of the smaller larva onto my torso. \"Eat up! Grow big and strong for our mommy!\" \n\nAs the wasp left the room, the larva on me squirmed. I could feel it wriggle its way across my skin, leaving a gelatinous trail behind it. I tried frantically to move as it crawled up my stomach, and wriggled between my breasts. I could do nothing as it crossed my neck and moved onto my face. A mouth surrounded by tiny, sharp teeth entered my line of sight. It got closer to my eye. Closer. The little mouth opened wide, preparing to devour my eyeball. \n\nOnce again, I wished I could scream. \n\nAnd then, the larva was gone. \n\nIf I could have moved, I would have cried. I was that relieved. But was this only a temporary respite? \n\nA familiar face entered my line of sight. \"Hello, Beloved.\" Mattias smiled. \"Don't worry. You're safe now.\" \n\nAnd then he was gone. \n\nI lay there, surrounded by blood and gore. The smell was revolting. Soon, in the distance, I heard feminine screams. Was Mattias fighting the wasps? I heard his cry of pain, and I wondered if he was winning. There were so many of them... \n\nAnd then everything was silent. I waited helplessly for some sign of who had been the victor. \n\nInsectoid footsteps approached. Was it Mattias? Or one of the wasps, come to check on their larvae? \n\nMattias entered my line of sight again. \"Sorry about that, Beloved. I had some business to attend to.\" He smiled. \"Don't worry, I have the antidote for the vesper venom. I'll give it to you momentarily.\" \n\nHis face left my vision, but he kept talking. \"First, though, I need to make sure you don't try to go anywhere once you can move again.\" \n\nI felt him wrapping my ankles in silk. Then he moved up my body, binding my calves, my knees, and my thighs. My arms were bound firmly to my sides. \"There we go,\" Mattias said. \"All done.\" \n\nEver so gently, he opened my mouth. \"I'll give you the antidote now,\" he said. I tasted something sweet that tingled all the way down my throat. \"It should take effect fairly rapidly.\" \n\nI blinked. I could move! \"Mattias...\" I whispered. \n\n\"Yes, Beloved?\" He gently stroked my cheek. \n\n\"Th-thank you...\" Then I started to cry. \n\nMattias gathered me into his arms. \"Shhh... There's no need for that. You're safe now. That's all that matters.\" He turned to carry me out of the room. \n\nI squirmed in his hold. \"Wait. I... I think some of the... Of the others in here are alive.\"\n\nMattias shrugged. \"Probably. Vespers try to keep the food for their larva alive as long as possible so it doesn't rot.\" \n\n\"Well, if they're alive... We can't just leave them!\" I protested. \n\nMattias cocked his head. \"Why not?\" \n\nI swallowed. \"We- We just can't!\" I blinked back tears. \"Please, Mattias, I'm begging you, don't just leave them here. Please, please! Help them?\" \n\nMattias blinked in surprise. \"Your people are more social than I'd realized.\" He smiled. \"There's no need to beg me, Beloved. If you want something, just ask. There are few things in my power I would not do to please you.\" \n\nI started to cry again. \"So, so you'll help them?\" \n\nHe sighed. \"I'll see what can be done. Keeping them alive may be beyond my abilities. And, if they are no longer sane, the kindest thing to do might be to give them a clean death.\" \n\nMattias webbed me to his spider abdomen. Then, carefully, he sorted through the bodies. Most were just that. Bodies, their owners long gone. But one... Mattias prodded a bloody form. \"This one lives. And he is not beyond helping. Physically, at least.\" \n\nCarefully, he opened the man's mouth and poured in a few drops of red liquid. \"There. Now we will see...\" \n\nThe man blinked his one eye. He turned his head, looking from Mattias to me and back again. Mattias looked at him thoughtfully. \"Are you still sane?\" \n\nThe man nodded. He opened his mouth, and I saw to my horror that his tongue was missing. A whine, like that of a dog, escaped his throat. \n\nMattias smiled. \"Good.\" \n\nThe man shook his head. He had one arm left, and, while his pinky was gone, the rest of his hand was still intact. He made a slashing motion across his throat, and whined again. He... He was asking Mattias to kill him. \n\nI began to sob. \"Oh God...\" \n\nMattias laid a gentle hand on my cheek. \"I can help him, Beloved. I can definitely regrow his tongue, and I might be able to regrow his arm and legs as well.\" \n\nSwiftly, Mattias shrouded the man with webbing, binding his arm to his side and gagging him. Then he webbed the poor guy to his abdomen as well, on the opposite side from me. \"There we go. Now, it's time to go home.\" \n\nAs Mattias hurried down the hallway, I stirred in my bindings, considering. Escaping from Mattias had, in the end, not gone well. If I tried to escape again, and I knew it would not be as easy the second time, who was to say I wouldn't get killed before he recaptured me? \n\nAnd now I had my fellow vesper victim to think about as well as myself. Mattias was only taking care of him because I'd asked. If I managed to escape for good, or I tried and got myself killed, Mattias would have no reason to keep the poor man alive. And there was no way I could keep both of us alive in the urban wilds. I wasn't even sure I could carry the guy. \n\nBefore I decided to stay, however, there were a few things I needed to ask. \"Mattias?\" I called. \n\nThe arachnoid didn't pause in his stride, but he looked over his shoulder at me. \"Yes, Beloved?\" \n\nI swallowed. \"What... What will happen when you get me pregnant?\" \n\n\"I'm not sure I understand the question, Beloved,\" Mattias replied. \"If you want a lesson on reproductive biology, that will have to wait until we get home.\" \n\nI shook my head. \"That's not what I meant. I mean, what will happen to me? Will... Will I die?\" \n\nMattias stopped. \"Of course not!\" He twisted to look back at me. \"You are my beloved. My mate. Not a tool for reproduction, to be used and thrown away.\" He looked a bit hurt. \"Did... Did you really think...\" His voice trailed off, and he shook his head. \n\nI looked away. \"I wasn't sure.\" \n\nMattias sighed. \"No wonder you tried to run away.\" \n\nWe were silent for a moment, neither of us looking at the other. Then Mattias began to head for home once more. \n\nSo. He cared about me. In his own twisted, inhuman way, he cared. I could live with that. I snuggled into the webbing, getting comfortable for the ride home. \n\n*\n\nWhen we arrived, Mattias carried me into a room I hadn't entered before. In it, there was a tub full of water. Swiftly, he removed the webbing binding me. \n\nI dipped a hand into the water. \"It's warm!\" \n\nMattias shrugged. \"I prefer warm water for bathing. If you'd prefer something different, just ask.\" \n\nI struggled to hold back tears. \"It's been... I mean, I've definitely tried to keep clean, but... It's been so long since I had a warm bath.\" \n\nMattias stroked my cheek. \"You may have as many warm baths as you like now. I hope that will incentivize you not to try to escape again.\" \n\nI nodded. \"It does.\" I looked down at my grimy outfit. \"Is there any possibility you could me get what I need to clean my clothing?\" \n\nTo my surprise, Mattias reached behind the tub and pulled out a clean outfit, along with a washcloth, a towel, a bar of soap, and a large rock. \"I went foraging and found this for you,\" he explained. \"That is part of the reason it took me so long to realize you were missing and come after you.\" \n\nI blinked back tears. \"Thank you.\" \n\nMattias smiled. \"You're very welcome, Beloved. Is there anything else you need?\" \n\nI looked at the rock on top of the towel. \"What's with the rock?\" \n\n\"A pumice stone. It is an igneous rock, like the obsidian I use for my knife. My people use it to remove dead skin cells, and to make sure our abdomens are shiny,\" Mattias explained. \n\nI lifted the rock. \"Ok, then. I don't think I need anything else.\" I gestured to the guy we'd rescued. \"What about him?\" \n\n\"I will clean him, and perform a cursory medical examination,\" Mattias told me. He scuttled to a large doorway shrouded in a silk curtain. \"I will be in the next room should you need anything.\" He paused, and picked up the towel. \"I did not have time to spell this for warmth. I will do that now.\" \n\nAs he moved to the next room, I began to strip. The blood and gore on my clothing made it stick to my skin. I grimaced at the red stains. \"Those will never come out,\" I muttered. Then I grinned. It had been a long time since I'd had the leisure to worry about clothing stains. \n\nThe pumice stone was very good for getting the grime off, and it floated, which was nice. I also used it to file my nails. I wondered if Mattias could find me nail trimmers if I described them to him. Probably. \n\nI got out of the bath, feeling properly clean for the first time in... I wasn't sure how long. Months, definitely. Mattias had left the towel in the doorway, and it was wonderfully warm and fluffy. Once I was dried, I dressed in my new clothing. \n\n\"Mattias?\" I called. \"I'm done.\" \n\n\"As am I,\" Mattias replied, entering the room. \"I presume your people have nudity taboos?\" \n\nI nodded. \n\n\"Then I will have to find clothing for the male we found,\" mused Mattias. \"Until then, I suppose a towel will do.\" He paused, and then added, \"I was hoping you could answer a few questions for me.\" \n\n\"Sure,\" I replied. \n\nMattias held out some canned broth. \"I found some of these in the same building where the food items you requested were. Do they also contain food?\" \n\nI nodded. \"Yeah. I can't get them open, though. There's a tool we usually use called a can opener, but I haven't been able to find one.\" \n\nMattias was already opening the can with his knife. \"No need. I can open them.\" He sniffed the broth. \"So you do eat meat,\" he mused. \n\n\"Yes, but...\" I wondered how to explain. \"But not just any meat. Just animals. Well, some animals. Others, like cats and dogs, we don't eat.\" \n\nMattias frowned. \"That is a word I don't know. Animals?\" \n\n\"Ummm... They're, you know, not intelligent? They don't talk, or anything like that.\" I began to get a sort of cold feeling inside. How could he not know what animals were? Maybe he just had a different word for them. Or maybe- \n\n\"We don't have those where I come from,\" Mattias said with a frown. \n\nI shuddered. \"So... You eat people? Everything you eat... You could talk to?\" \n\n\"I am an obligate carnivore. I cannot consume plant matter. So yes,\" Mattias replied. \n\n\"That's... That's horrible!\" I shuddered again. \n\n\"I would not consume any of your kind,\" Mattias soothed. \"Not now that you are my mate. And I do try to make the process relatively painless for my prey.\" \n\n\"Still horrible,\" I muttered. The idea of eating a person... My stomach rebelled, and I forced back nausea. \n\nMattias frowned, and wrapped the towel around my shoulders. \"You are shivering. Are you cold? I can make it warmer in here.\" \n\nI leaned away from his touch. \"I'm... I'm fine.\" A total lie. \"So you said you could regrow that guy's lost tongue? How?\" \n\nMattias shrugged. \"The right combination of herbs and magic. Also, he will need lots of nutrients to regrow the missing flesh.\" He gestured to the broth. \"This will be ideal for feeding him, if I can find enough of it.\" \n\nHe set down the broth and scooped me up in his arms. \"I will begin the preparation of the regrowth formula soon. Before that, however, I would like you both to eat and rest.\" He carried me onto the balcony and scuttled off of it. We entered the room he had left me in before. This time, however, a few things were different. \n\nFor starters, the balcony had a sort of net made of webbing surrounding it. Mattias would be able to get in and out easily because he could manipulate his webbing at will, but I would not be escaping via the balcony again. \n\nThe other thing that was different was the hammock in the corner. In it, the man we'd rescued lay, wrapped in a towel. \n\nNo, not man. As his eyes met mine, I blurted out, \"You're just a kid!\" He couldn't have been any older than 16. \n\nSlowly, the kid nodded. He made the slashing gesture across his throat again, and looked at us pleadingly. \n\n\"No,\" I told him. \"I won't kill you. Mattias says he can regrow your tongue, at least.\" I slipped out of Mattias's hold, and went over to the boy. \"We'll take care of you,\" I promised. \"Don't worry.\" \n\nThe boy whined, and shook his head. His one remaining eye was streaming with tears. \n\nMattias picked up another can of broth from a pile of cans in the corner. \"You both need to eat,\" he told us. \n\nI selected a can of tomato soup. \"Can you warm this up?\" \n\nMattias cut it opened, dipped one finger in, and drew a sign on the side of the can with the liquid. \"There.\" He handed the now warm can back to me. Then he used the same symbol on the broth. He pulled a vial from his pouch, and added a few drops to the liquid. \"To help him sleep,\" he explain to me. \"And dull any pain he is feeling.\" \n\nMattias went over to the boy. \"Open your mouth,\" he instructed. \n\nThe boy shook his head, mouth tightly shut. \n\nMattias sighed, and reached into his pouch again. He withdrew a funnel with a long tube at the end. \"This food is going into you,\" he informed the boy, \"One way or another. I would prefer not to force you to eat, but I will.\" \n\nI frowned. \"Is that really necessary?\" \n\nMattias raised an eyebrow. \"Would you prefer him to starve?\" \n\nReluctantly, I shook my head. \"No.\" \n\nMattias turned back to the boy. \"So, which will it be? Will you allow me to feed you? Or must I force you to eat?\" \n\nReluctantly, the kid opened his mouth. Mattias carefully fed him the broth, his movements surprisingly tender. Afterwards, the boy's eyelids drooped. He shook his head, as if struggling to shake off the weariness. \n\n\"Relax,\" Mattias told him. \"Let the potion take effect. When you awaken, I will have more food for you, and the potion that will start your regeneration.\" \n\nThe boy's eyelids slid shut, and he went limp. \n\nI yawned. \"I... I think I'll sleep, too.\" \n\nMattias smiled. \"Good. Have pleasant dreams, Beloved.\" \n\n*\n\nI awoke to Mattias staring down at me, smiling gently. I frowned. \"How long have you been standing there?\" \n\nHe shrugged. \"About an hour. I like watching you sleep.\" \n\nI winced. \"That's creepy.\" \n\nMattias frowned. \"So you would prefer me not to do it?\" He sounded disappointed. \n\nI shook my head. \"If you really want to, go right ahead. Yeah, it's creepy, but, given the whole half spider thing, the creepy meter is already off the charts.\" \n\nMattias blinked. \"The creepy meter? How do you measure... Creepiness?\" \n\nI giggled. \"Figure of speech.\" \n\n\"Ah.\" Mattias stroked my hair, smiling. \"Have I ever mentioned how lovely your hair is? Now that it is cleaner, it is truly a sight to see. So golden and shiny. And so soft!\" \n\nI smiled. \"No, you haven't mentioned it.\" \n\nMattias had a sort of dreamy look in his eyes. \"I hope one of our children gets your hair.\" \n\n\"So they will inherit things from me?\" I asked. \n\n\"Of course. They will get a fair amount of their genetic material from me, to ensure that they are of my species, but adding in a bit of yours will improve their vitality via hybrid vigor.\" The dreamy look returned. \"I do have some control over what is inherited... Perhaps I can ensure they get your hair... And giving them your melanin count will improve their resistance to the sun of this world... And perhaps...\" He shook his head. \"I'm getting off track. I need to examine you again.\" \n\nI nodded, and glanced over at the kid, still sleeping in a hammock in the corner. \"Could we go somewhere else? Doing it with him in the room would be weird.\" \n\nMattias shrugged. \"As you wish. We can use my laboratory.\" He scooped me up in his arms and scurried out of the room. \n\nAfter a quick trip up the vertical side of the building, we entered Mattias's laboratory. It looked a bit like a chemistry lab, except most things that would be glass in a lab were instead made of ceramic, wood, or rubber, and many were inscribed with strange runes. In one corner, a beaker bubbled in the middle of a circle of symbols. In another, a complex system of tubes dripped liquid into a vial. \n\nFrom the ceiling hung a number of bunches of dried herbs. Shelves along the walls held containers full of what were presumably more ingredients. The few I could see into held strange liquids or powders, some of which glowed faintly. A skeleton of something large and vaguely humanoid with two heads stood in the corner nearest the window. A few charts, made of leather or thick papyrus, hung on the walls. I shivered, thinking of where he must have gotten the leather. \n\nMattias frowned. \"Are you cold?\" \n\nI shook my head. \"No. It's just a bit... Creepy in here. With the skeleton and all.\" \n\nMattias stroked my hair soothingly. \"The skeleton's owner died of old age.\" Sadness passed across his expression. \"She was my mother.\" \n\nI stiffened. \"That's... Not something I needed to know.\" \n\nMattias bowed his head briefly. \"My apologies. She did agree to my keeping her skeleton, just so you know. She wanted me to have something to remember her by. My father has her ashes, and her other children have pieces of her jewelry, but I was her youngest, and the most like her. She wanted to keep me close, as much as she could in death.\" He smiled sadly. \"She would have liked you, I think.\" \n\nI shivered again. \"Ok, then.\" I fingered my pants. \"Should I... take these off?\" \n\nMattias nodded. \"Of course. I can hardly examine you with them on.\" \n\nI stripped off my pants. Mattias knelt, his spider legs folding, and bent over. He sniffed my pussy, and stuck a finger in to feel around. \"Hmmm... Interesting.\" \n\nI frowned. \"What?\" \n\n\"You appear to be close ovulation.\" He smiled. \"You will likely be ready for us to mate tomorrow.\" He stood. \"I will take you back to your sleeping area.\" \n\nI raised a hand to stop him. \"That's it?\" \n\nMattias strugged. \"That was all that is required.\" ",
        "My hands brushed my thigh. \"You're not going to, umm.\" Eat me out was likely the wrong way to put it. \"Pleasure me?\" \n\nMattias smiled. \"If you like, I am more than happy to do so.\" He knelt again. \n\nI stopped him again. \"I don't really want to get my first look at your, umm, equipment, tomorrow. I'd like to see it now, if you don't mind.\" \n\nMattias frowned. \"My equipment... Oh! You mean my phallus.\" \n\nI nodded. \"Yeah.\" I didn't want to get an unpleasant shock right before he stuck the thing in me. I was also curious. \n\nMattias nodded. \"Very well.\" He undid his belt, and began to stroke the area beneath. When I looked closely, I could see a thin opening in the chitin. Was that where his dick would come out? I reached out, and my fingers brushed the area alongside his. \n\nMattias shuddered in pleasure. \"Ohh... You don't need to-\" His voice caught as I stroked him again. \n\n\"I want to,\" I told him. \"I mean, you've done so much to make me feel good.\" \n\nI moved his fingers aside. Hesitantly, I licked the slit. \n\nMattias shuddered and groaned. \"Beloved...\" The slit opened, and a very human looking dick popped out. \n\nI looked it over. It really did look more or less like a flaccid human penis. The contrast with his weird spider half made it look very out of place. It was a nice size, too. Thick, but short. Very attractive. My girly bits tingled, and I got a strong urge to put it in my mouth. So I did. \n\nMattias's eyes widened. \"What-\" He spasmed briefly as I licked him. \"What are you doing?\" \n\nHis dick popped out of my mouth. \"You mean you've never heard of a blow job?\" \n\nHe looked down at me. \"A... blow job?\" \n\nI nodded. \"Like when you lick me, except the other way around. You know?\" \n\n\"Are you certain you want to-\" He moaned as I fluttered my tongue against his dick's head. \n\n\"I'm certain,\" I told him. I grinned. \"You're cute when you're flustered.\" Then I engulfed his head in my mouth once more. \n\nI'd never been able to deep throat, but Mattias certainly didn't seem to mind. His legs trembled as I began to work slowly up and down his shaft. As I worked, his dick slowly grew and hardened inside my mouth. I moaned in pleasure, and began to stroke myself with one hand. The other hand went around Mattias's dick, stimulating the length I couldn't fit in my mouth. \n\nMattias's dick throbbed, and I tasted his salty precum. I savored it, just as I savored the flavor of his skin. My own girly bits were damp with desire. I groaned. \n\nMattias tried to pull me off of his dick. \"Let me-\" I sucked harder, and his hands faltered. \"Ohhhh...\" \n\nHe tried to remove me several more times, but, as his arousal grew, his hands fumbled and shook. \n\n\"Beloved...\" He moaned. \"Don't...\" \n\nI slowly drew off of his dick. It left my mouth with a pop. \"Is something bad going to happen if you cum in my mouth?\" \n\nHe shook his head. \"No, but-\" He groaned as I began to suck on him again. \"It's my job to... to...\" He spasmed. \"Oh, God!\" \n\nI hummed happily as his dick twitched within my mouth and more precum entered me. Yummy. \n\nI could tell Mattias was trying to hold back, just as he was trying to remove me from his dick. I worked faster, harder, sliding up and down his shaft with determination. He would cum for me. My eyes met his. Slowly, I closed my eyes and moaned with pleasure, working my clit all the while. I was ready, but I held back. We would cum together. \n\nSoon Mattias's legs were trembling so hard he could barely stand. I could tell he was beginning the final climb. His lips worked soundlessly, and his three eyelids fluttered. \n\nThen he came. The sudden rush of cum, much more than a human man, surprised me and I choked, pulling away. With a cry, I came. Then I watched as Mattias made a rather impressive puddle on the floor. \n\nMattias sank down until his abdomen rested on the floor, groaning and shuddering. \"Oh, Beloved...\" \n\nI grinned. \"Now, was that so bad?\" \n\nHe shivered. \"No, but...\" \n\nI frowned. \"But what?\" \n\n\"You were sucking on me,\" he said, puzzled. \"Why is it called a blow job?\" \n\nI began to laugh."
    ],
    "authorname": "charmscale",
    "tags": [
        "webbing",
        "erotic horror"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/in-the-spiders-web-ch-03"
}