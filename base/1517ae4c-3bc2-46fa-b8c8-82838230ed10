{
    "title": "There and Back Again Ch. 016",
    "pages": [
        "Chapter Sixteen: Self Defense \n\nThe next morning, instead of going down to the main hall, I asked a servant to bring me something for breakfast. She also offered to have my clothes washed, to which I readily agreed. After I ate, I buckled myself into my borrowed leather armour, grabbed the practice sword, and headed down to the courtyard hoping to locate Wayne. He wasn't there, but a few of the guys I'd brawled with the day before were around, so after warming up a bit, we resumed practice. A couple of times the young knights managed to get a hold on me, or get in a lucky hit, but for the most part I was able to take most of them down with the throws Wayne had taught. We joked good-naturedly about it, and then I fell to practicing my sword forms and footwork. A couple of the more experienced knights called out corrections or suggestions, but for the most part I practiced alone until lunch. \n\nDeciding that I couldn't avoid Teagan forever, I ate in my armour in the main hall. Teagan was polite, and smiled at me, but was back to calling me 'my lady' and we only talked about neutral topics. Afterwards he excused himself to do some business down in the village, and I decided it would be an ideal time to try to find Alistair's 'shower'. I begged a spare loose-fitting dress from Isolde, which I thought would fit me, if only just, and gathered up a bundle of things including my soaps, shampoo, and a towel I borrowed. \n\nI snuck down into the bowels of the castle, heading through storerooms and long disused hallways. I carried a candle, which I lit as I got to a hallway without sconces lit like in the rest of the castle. I avoided the dungeons, as my destination wasn't near there, to my relief. After a few wrong turns, I found the crack in the foundation that he had mentioned, squeezing through, and then following the sound of running water. \n\nAlistair was right about the warmth; despite the cold water, the room was quite comfortable. Sunlight filtered in to the room through a few holes in the rock opposite where the waterfall flowed. I set the candle protectively in the corner, sure I'd never get back if it went out. I stripped off my armour, folding it onto a dry spot on the floor, but putting my borrowed dress, towel, and clean spare undergarments on the little ledge that seemed purpose built for holding clothes. The floor was slightly slippery, and I cautiously eased my way to stand under the full blast of water coming from a crack in the far wall. \n\nThe water pressure was almost enough to bowl me over, and I stood under the full brunt of it only for a few seconds, before sidling over towards the corner where the spray was soft enough for me to wash. I scrubbed myself with a small cloth until I was too cold to continue, then stepped out of the spray to wash my hair. I warmed up quickly in the heat of the room, so I braved the spray again to rinse out the suds. \n\nI dried myself off with the towel, and slowly started to dress. I marvelled at the crazy construction that allowed this little room to exist, with no one above aware of its presence. I had just succeeded in putting on bra and underwear, still gawking around, when I was startled by a hand on my waist. I heard a voice say something that I couldn't quite make out through the thundering sound of the waterfall, and instinct kicked in before I could think. \n\nI grabbed the wrist of the hand at my waist, turning away, bending forward, and twisting my hips as Wayne had taught me, and tossed the offender to the ground with a thump. Thinking frantically, I kept spinning with the momentum of the throw, reaching to grab the dagger out of the sheath on the ground with my armour, and then spun again to drop onto the back of my attacker, arm around his neck in a submission hold and the point of the dagger just barely digging in to the skin over his jugular. \n\nAt which point I finally looked at the person I had thrown, and realised I knew him. He was now slightly damp, face down on the slippery rock floor, and blood was trickling from where my dagger had pierced, but there was no mistaking that stylish brown hair or strong jaw. \n\n\"Theron!\" I hissed. \"What in the hell are you doing down here?\" \n\n\"If you get off my chest, I'll better be able to answer that, Sierra.\" \n\n\"No. Answers first. You don't sneak in and lay hands on a half-naked woman without a bloody good reason.\" I backed the dagger away from his neck, but didn't put it down. \n\n\"I didn't sneak up! I called out and you didn't hear me. Sierra, please. It's sort of hard to breathe, down here, and the water is sodding cold!\" \n\nI considered, very briefly, and then jumped up off him, retreating to grab the towel and wrap it around myself as some sort of covering while he picked himself up off the floor. I still held the dagger at my side, gripping the handle as hard as I could, unable to decide between fury, fear, and embarrassment. \n\n\"So answer the question. What are you doing here?\" \n\n\"I followed you, okay? I saw you sneaking through the halls and I thought I'd see where you were going. I'm supposed to be your ladyship's bodyguard, am I not?\" \n\n\"So exactly how long were you watching me?\" Fury was winning, suddenly, and I realised I had taken a step towards him, dagger now held out front, threateningly. He backed away, empty hands raised in a placating gesture. \n\n\"I didn't, I swear. I had to stop and move some rock from that crack you squeezed through - I couldn't fit. I just got here.\" \n\n\"And so you thought you'd come and visit with me when I was undressed? Were you planning to wash my back?\" I took another step forward, the anger on my face belying the flippancy of my words. \"I suppose you thought I would invite you to join me, that I would fall into your manly arms overcome with desire?\" \n\nAnger flashed across Theron's face, suddenly, countering my own. \"No, I think that you've got quite enough manly arms offering to catch you, Sierra.\" \n\n\"What the hell does that mean?\" \n\n\"Well, how many men can you string along, really? Seriously. Straight from Duncan's tent to Aedan's? Did you think no one would notice? And now poor Teagan, hanging on your every word? And don't think I missed how you danced with Alistair last night. And me. What, are you just trying them all out, seeing who will fit the bill? Or maybe waiting for the best offer?\" \n\nThe ringing sound echoed through the small room as I slapped Theron's face, as hard as I could. Damn, now my hand hurts. My shoulders sagged, and suddenly all the rage drained out of me. I stepped back, dropping the dagger onto my pile of armour, head down. I turned away, speaking over my shoulder just loud enough to be heard. \n\n\"I'm glad to see you're consistent in your beliefs, even if they are undeserved. So much for being like a brother, hey? I've been honest with you from the beginning, and maybe that's the problem. You've been too pampered, too spoiled, and too important for anyone to ever tell you the truth. You don't know how to handle it. \n\n\"Get out, Theron. Go to your room and stay there, or go seduce another poor Redcliffe serving girl. I mean, hell, what's another royal bastard in Redcliffe Castle? Just stay away from me. Because I swear, if you ever touch me again without permission, I will use this dagger instead of just threatening with it.\" \n\nI waited until his footsteps were gone before sinking down to sit on the ground, towel loose around me, nakedness forgotten. I dropped my face into my shaking hands, bursting into tears. As the adrenaline wore off and my body accepted I wasn't being attacked, the fear disappeared, leaving behind a mixed jumble of emotions. Anger, still; hurt; embarrassment at my over-reaction; shame, somehow, despite logically knowing I had done nothing wrong; they all combined to leave me miserable and sobbing on the cold stone floor. \n\nThe chill finally got to me, and I stood up, slowly dressing in my borrowed clothes. I suddenly felt old and frail, my back hunched, the bundle with my armour heavy, my chest aching from crying. I crept out of the basement, slowly, making it to the main floor and then deciding I needed a rest before continuing to my room. I turned into the small library, assuming it would be empty, but I found Morrigan there, in discussion with Jowan and Teagan. I would have left, but my arms suddenly felt weak and I dropped the pile of armour I was carrying unexpectedly. I looked down at it, in surprise, and when I looked back up, Morrigan's concerned face was swimming across my vision. I think she said something to me, but I couldn't even have guessed what it was. Damn, in front of Teagan? This is going to complicate things. The world started spinning, and I fell, my vision tunneling down to a single small point of light, then everything was gone. \n\n******** \n\nFor once I was unsurprised to wake in hospital. It wouldn't have taken me long to figure it out, in any case, because there were monitors buzzing and ringing like crazy around me. It was almost like there were sirens going off. I opened my eyes to see hospital staff rushing past me, heading for the source of the noise - the bed next to mine. I sat up, looking over to see the unfortunate patient having a seizure or something, and I looked away quickly, feeling like a creep for staring. I had noticed, briefly, that the monitors on the wall weren't in use, and instead she was surrounded by portable monitors with wheels. I decided to wait before ringing for a nurse, and settled with doing a personal inventory instead. I noticed that, for once, I didn't have an IV, though a large bruise on my forearm explained that. The catheter had been left out, and I was relieved to find I didn't wake up with a feeding tube or any other new orifices. \n\nAhh, hospital gown. I decided changing was my first priority. I didn't feel particularly grubby, so either my recent shower in Redcliffe transferred, or someone here had just given me a bath. I did notice my right hand was still sore. Damn, why does slapping someone hurt so much? I realised if I thought too much about that I was going to start crying again, and I couldn't even start to predict the fall-out of disappearing into thin air in front of Jowan and Teagan, so I forcibly turned off my brain and concentrated on standing up without showing off my ass through the back of my gown. I pulled the pathetic excuse for a privacy curtain around me, opened the nearby cupboard thing, found my clothes, and changed into my usual jeans, t-shirt, jacket, and boots. \n\nFeeling much less vulnerable, I opened the curtain again to find a young, very scared looking nurse eyeing me uncertainly. The fuss next door had apparently settled down and the rest of the staff must have left while I was changing. \n\n\"Hi!\" If she looked like she'd seen a ghost before, apparently being greeted by one was even worse. Hers eyes got huge, her mouth opened, and a surprised 'urk' sort of sound escaped from her throat. \n\n\"Y- you're awake? You're supposed to be in a coma.\" \n\n\"Yeah, I sort of do that. Sorry to startle you. No one warned you that I pop in and out?\" \n\n\"Uh, no. I'm new here.\" \n\n\"Ah. So, um, what now?\" \n\n\"I...think I'll go talk to the charge nurse.\" \n\n\"Sounds like an excellent plan. I'll just wait here, shall I?\" I sat in a nearby visitor chair, and the nurse gave me one more odd look - trying to reassure yourself you're not dreaming? Join the club - and then darted off to find herself backup. \n\nA few minutes later, an older, less panicked looking nurse and my now familiar doctor entered. The nurse hovered, checking my vitals for a few minutes, before the doctor finally cleared his throat and she reluctantly left. The doctor eyed my unusual hospital garb, sitting on the edge of the bed I had vacated. \n\n\"What's with the clothes?\" I sighed. How to explain? \n\n\"The dreams. When I am having them, it seems...whatever I was wearing when I blackout is what I am wearing in the dream.\" \n\n\"Why not just...change?\" \n\n\"They're not like that. I mean, I feel awake. I know what has happened, know that my body is here in hospital, know who I am. But it's not like I've heard lucid dreams described - I can't just decide to fly around or summon cake with only my imagination. If I want new clothes, I have to find new clothes and then take these off and put the new ones on. So I either have to buy them, or steal them, or whatever. But then I wake up here wearing either the same thing I blacked out wearing, or you know, a hospital gown. I told you what some of the dreams are like - I don't want to end up in my dream wearing just a hospital gown.\" \n\nHe sat for a while, face pensive. The only thing he said is \"I don't understand how this is possible.\" \n\n\"Magic,\" was my only response, and though I wasn't joking, he laughed. \n\n\"Wouldn't that be nice!\" You have no idea, doc. He asked me if I expected any other injuries this time, and I shook my head. None you could see on the outside. \n\n\"So why no IV this time?\" \n\n\"Well, the one you had went interstitial, so we had to take it out.\" He gestured at my bruised forearm. \"And there was some sort of weird power surge here a few days ago, and it disrupted some of the monitors and things, so it took a couple of days to figure it out before we realised we forgot to replace it. We decided to wait and see what happened if we didn't put a new one in, since you were fine for two days... And I can't understand it to save my life, but despite no fluid for, I think, four days total - you aren't dehydrated. And you should be. You haven't voided,\" when I looked confused, he clarified, \"uh, gone pee (or poop for that matter) in six days. You look like you've lost maybe a little bit of weight since I first met you, but not like you should be if you frequently go days without eating! I just don't...\" \n\n\"Understand. Yeah, me neither, doc.\" \n\n\"I'll come see you again tomorrow. I'd like to do a PET scan with you awake, compare it to the one we did when you were out. We can talk more then.\" Joy, more scans. \n\n\"Wait, one sec. When exactly did the weird power surge happen?\" \n\n\"Two days ago.\" At my 'give me more detail' gesture, he thought back. \"Around noon, I guess. Why?\" \n\n\"Just curious. Thanks.\" \n\nHe nodded, and left. I tried to think back, trying to guess times in my head. Two days ago was the day we entered the castle. And noon would probably line up normally with the fight in the courtyard. With the revenant. Was it possible that events here somehow carried over in some way? Perhaps the power surge was the source of the blast? Strange. Maybe I have faulty wiring to thank for Leliana's life. \n\nWith nothing else to do, I fell into a natural sleep. I had actual nightmares that night - normal ones, not waking up with darkspawn attacking, but instead dreams of being attacked, or raped. Some of them were clearly Theron, and he was usually telling me that he was allowed because he was the King. Sometimes the face wasn't visible, and I didn't know who it was. The last, the worst, was Alistair. It started out sort of romantic, and then he was naked with that beautiful body of his, and then he changed, and suddenly he was hurting my arm, shaking me... \n\nI opened my eyes and found the same young, frightened nurse from the day before. She had a surprisingly strong grip on my upper arm, and was shaking me, hissing in my ear. \n\n\"Sierra! Wake up! You're dreaming. Wake up!\" \n\n\"I'm awake.\" I pulled my arm from her grasp, rubbing it ruefully and giving her a dirty look. \"Ow!\" \n\n\"Sorry. You were screaming, and I was having trouble waking you up.\" \n\n\"I...yeah, sorry. Nightmares.\" \n\n\"Dare I ask what about?\" \n\n\"Uh...I don't remember.\" I lied. She shrugged, letting it drop. \n\n\"It's time for your PET scan, anyway. Come with me.\" \n\nA porter wheeled me to the scan in a wheelchair. I was allowed to wear my clothes into the PET scanner, although I earned some strange looks from the techs running the machine. It was a sort of entertaining scan, actually - they played images on a screen as it did its thing, and I was supposed to just stare at the images and try not to think too much. \n\nAfterwards I ran into the doctor in the hallway, and he took over pushing my wheelchair back to my room. He told me it would be a day or two before he had results from the PET scan. \n\n\"Listen, tomorrow you should meet with a lawyer. There's one the hospital uses - the social worker you met can help set it up.\" \n\n\"A lawyer? Am I in trouble?\" \n\n\"No, no. It's an...estate planning thing. To figure what's going to happen to you, who's going to take care of paying your bills and managing your money and stuff. And figure out where you should, uh, live. Because staying in a hospital isn't really necessary, considering that you don't seem to need any medical treatment, but you can't really be at home if you keep blacking out like this, and I've exhausted the tests I can think of to do. You need somewhere you'll be safe, where they can manage you when you black out.\" \n\n\"Oh. I, uh, suppose I should do that then.\" My face must have looked like I felt - worried, sad, offended, and betrayed all at once. \n\n\"It's not my choice, Sierra. I've been fighting them on it for a while. But if you don't pick something, eventually they're going to make the decision for you despite what I think, and instead of waking up here, you'll wake in some nursing home or something. Anything would be better than that.\" \n\nI sighed. \"Okay. But...doc?\" \n\n\"Yes?\" \n\nThe dizziness suddenly threatened to overwhelm me, and I was glad for the wheelchair I had been embarrassed about earlier. \"I don't think I can make it tomorrow.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-16"
}