{
    "title": "RTFM",
    "pages": [
        "Note: This story takes place in the near future. The toy in this story was inspired by a story on another site, \"The Curator,\" and is used with permission. Google \"Streetwalker Squid Stimulator Deluxe with Partner Play\" to find it. \n\n\n\n\nKaren started to shake in her silken sheets as her orgasm hit. Despite being alone in her apartment, she instinctively grabbed a pillow to smother her moans. Somehow it just felt too embarrassing to make noise when she came. Maximillian continued his relentless rhythm, pushing her to her limits as her climax raged. Finally, as if he knew just how far she could go, he backed off and guided her to a gentle landing. Exhausted and sweaty, Karen weakly pushed the pillow off of her face. She brushed a few stray locks of her blonde hair out of her face and stared absently at the ceiling. She cupped her breasts, full but not large, savoring the light touches of her fingertips on her delicate skin.\n\n\"Max, you really are a wonder worker,\" she sighed.\n\nMax had been a gift from Sally, a special, private gift. Sally and her other friends had encouraged her to take some time off from dating since her breakup. With a nudge and a wink, she had given Max to Karen to help \"ease some of the tension.\" Officially named \"Keyholder Remote Extended Squid Stimulator\", she had immediately re-christened it to a more manageable \"Maximillian\" after her first experience with it. The toy was simply amazing, and Karen knew she was only scratching the surface of it's capabilities. Karen gave another sigh and reached over to get the extraction tool. Minutes later, with Max wrapped in a towel waiting to get cleaned, she drifted off to a peaceful sleep.\n\nOn a Saturday night a couple of weeks later, Karen treated herself to a special dinner, even opening a bottle of Sauvignon Blanc. After dinner, boredom got the better of her and she took her glass of wine back to her room. She retrieved Max and his controller from her nightstand and reclined on her bed to study them. Despite being a single woman, she generally avoided masturbation, averaging an event only every couple of weeks. Somehow, it just didn't seem proper to pleasure herself in that way, doubtless Catholic guilt at play deep in her head. A well-compensated professional working in Finance, she not only appeared prim and proper, she was prim and proper. \n\nShe took another sip from her glass and looked at Max. He was made of translucent pink silicon, with small \"tentacles\" hanging down from the tapered, oblong head that held the batteries, looking roughly like a squid. The tentacles were amazing works of technology in and of themselves: she knew from experience that they were fully articulate. Each was lined with small nubs, some thick and long and others quite thin. She poked and prodded Max for the hundredth time before picking up the remote. The remote was about the size of a small bar of soap, with a few buttons and a surprisingly sparse display. She had managed to lose the instruction manual during her moves of the past few months, back before she was willing to resort to a sex toy. Now, she was curious about how to use more of Max's capabilities. All she had was the \"quick start\" guide, five easy steps to blow a girl's mind. After pushing a few of the buttons and getting nowhere, she managed to get to a different menu screen. Scrolling down the primitive list, she came across a website for the device.\n\nCuriosity piqued, Karen took the remote out to the kitchen and poured herself another drink, tipsy from finishing a whole bottle. Once she entered the site, it asked for Max's serial number. Minutes later she was setting up her account. A pang of reservation struck her and she put the browser on Private mode so that the pages she visited would not show up if someone else was on her computer. That way, if anything awful happened to her and her mother had to sort through her things, her secret would be hidden. Prompted to enter a username and password, she thought for a few moments. She knew how to make strong passwords, but wanted to use a different username than her usual one. Finally, she settled on a pair of words and created her account. Next, they asked for an email. She studied the request for awhile. She would definitely not feel comfortable having sex site emails coming to her regular email accounts. She also didn't want to bother making another email account just for one site that she would likely never enter again. She entered a fake email address. If needed she could set it up later.\n\nThe site popped up on her screen. The first thing that caught her eye was a credit of 100 tokens and a free e-book reader. Her friend Sally was insanely wealthy and there was no doubt in Karen's mind that Max was quite expensive. Sally had mentioned that Max included the \"platinum package,\" which apparently included extras on the site. There were dozens of accessory items available for order, items for both men and women. There were a range of costs up to thousands of points for a fully integrated suit \"able to allow you feel your lover even if he is far away.\" Karen smiled wistfully at the memory of having a lover. Maybe in a few more months she would try out the dating scene again.\n\nKaren sipped her wine as she studied the accessories she could she could buy. Obviously, buying something would mean shipping them to her apartment, something she definitely wasn't comfortable with. Delaying the decision, she started browsing the ebooks, settling on a few highly rated ones. \n\nFortified with another glass of wine from a new bottle, she studied the accessories again. It would be a shame to waste the credits on the site. She carefully began adding items to her cart, being certain not to go over her free credits. She snickered as she saw the spanking apparatus, designed for use with the popular abdominal excerciser advertised late night on the infomercials. The idea of misusing a piece of exercise equipment like that was just too funny. \n\nShe finally settled on an expensive bra-like item that claimed to mimic the actions of a lover, a software extension that allowed the user to interact with a program, and a pair of synthetic panties that somehow were supposed to work with Max. She smiled at how efficient she was: her total was 99 tokens. Another ebook for one token and she had used her entire allotment. She stared a the request for a shipping address before finally entering her information. Lots of women get sex toys, she rationalized, her conscience soothed by a bottle and a half of wine. \n\nAfter ordering, Karen pecked around on the site and came across the instruction manual. She was too tired to read much, but she briefly browsed the controls of the remote. She snorted in amusement as she realized how stupid she'd been, she had somehow neglected to push the one button that accessed the menu. Nodding in thought, she finished her glass, logged out, and staggered off to bed. Just before she passed out, she had the stray thought that she should have written down her username and password. \n\n***\n\nBy the next morning, Karen regretted having ordered anything. Since she wasn't home during the day, the package would sit in the Manager's office until she got home. To compensate, she placed several dozen orders at various online stores, just to cover her tracks. Boxes started appearing over the next few days, and she was relieved when the sex toy order arrived is such a nondescript box that she was uncertain what it was at first.\n\nKaren decided to delay until the weekend, when she could properly devote some time to the contents of the box. Friday night finally arrived and she got ready for a night of pleasure. First a long, luxurious bath followed by a light makeup session. Then she took out Max, his controller, the bra and the ebook reader. She glanced briefly at the instruction manual for the bra. It basically went on like a normal bra with a clasp in the back, only the straps were broad and crossing like a sports bra. She got up and looked at herself in the mirror: the bra added at least a cup to her figure. The thought of wearing it at work crossed her mind, causing her to grin.\n\nShe inserted Max and got into her bed, nude but under her sheet. She adjusted everything one last time and picked up the remote. Lit by only the reader and the controller, she browsed the menus. There seemed to be dozens of categories, some with easy to guess purposes, some with short names that doubtlessly needed the instruction manual to decode. She finally stopped delaying and selected \"Ebook Easy Start.\" Max twitched immediately. \n\nKaren panted as she read her erotic ebook. It was an amazingly hot story of a successful man seducing Angie, a successful, smart woman and bringing her to the peaks of ecstasy. At least, she assumed he'd take her there, she hadn't read that far yet. Even more amazing was the way Max and her new bra were working, seemingly in tandem with the racy novel. She could feel the hero's hands caressing her breasts as she read, Max working his magic in her love tunnel. Further, Max was behaving differently. Before, he had simply been an amazing vibrator. Now, his tentacles were active, stroking her in ways he never had before. She wondered if he would make her come with the heroine. Karen took a few breaks while reading, envisioning herself in Angie's place, allowing Max to work his magic on her for even longer.\n\nBreathless pages later, one of Max's tentacles started actively working her clit just as Angie felt the tongue of her lover for the first time. As the heroine started to cum, Max pushed her over the edge. Karen's world exploded as she struggled to continue to read, a bizarre contest between the incredible orgasm raging in her loins and a second one consuming her mind. Her head rolled back as the reader fell to the side as she gave herself fully to the sensations rocking her body. She belatedly clamped a pillow over her mouth and screamed in rapture. Her orgasm raged, white hot in her brain. On and on she rolled about her bed, Max seeming able to wring every last ounce of energy out of her. Finally, Max backed off to allow her to recover. Her skin slick from sweat, Karen shook as aftershocks rocked her body, Max completely relaxed inside of her. Her dazed eyes wandered the dark room for just a moment before the welcoming curtain of sleep fell over her. \n\nWeeks passed as Karen held off the urge to sample Max again. She still felt guilty about pleasuring herself, but Max sure made it fun. Her intellect was intrigued at the huge list of options the controller had displayed when she had played with it last. She wondered what other things Max could do. The \"Tease and Please\" option stuck in her mind and she couldn't help but wonder how much teasing Max could give and how much pleasing she could take. She set a goal for Saturday night and started to fantasize about the evening. This time she played with the remote for awhile, perusing the menu options. She really wished she had the instruction manual, the options just seemed to go on an on, many with names that made her wonder what the heck they would do. Some options were grayed out, probably requiring accessories that she didn't have. She remember downloading a software package that she never opened and wondered if it would enable even more features. \n\nKaren finally had had enough and selected the \"Tease and Please\" option. Choice after choice was presented. With a guilty glance a the clock, she set the duration for two hours. She vacillated between \"Master\" and \"Lover\" before settling on the latter, intensity on auto. Max twitched in response. She picked up her ebook and started reading as Max performed his magic on her. Again, his movements and the bra seemed synchronized with her reading. Lost in the book, she was once again breathing heavily as the heroine approached climax. This time, however, Max stopped her just on the edge of an orgasm. Karen was so confused she checked the controller before realizing she was in the \"Tease\" portion of the program.\n\n\"Max, you naughty boy,\" she complained as she started to read again.\n\nMax allowed her to cool off before starting up again, this time with just a low vibration as the bra pleasured her nipples. It felt like fingers gently flicking her nipples, mixed in with the occasionally pinch. Her body completely aroused, she found it increasingly difficult to concentrate on the page and glanced at her clock. She whimpered as she realized she had a whole hour remaining. He wouldn't tease her that long, would he? Was there a fast forward button? Pages later, the lovers reunited for a frantic tussle in a private jet. Once again, the sex was steamy but Max only pushed her to brink and abandoned her. \n\nKaren shook in denial, dismayed at being left on the edge again. Her hand snaked down beneath the sheet and found a tentacle over her love bud. She gently pushed it out of the way and started to relieve the longing herself. Max joined in with his vibrations and pulsed deep inside of her. Reluctantly, she withdrew her hand. Max was set for 20 more minutes, and she resolved to let him do his job. The pages flew by as Karen, completely aroused, raced to the end of the book and the timer. She couldn't help but glance at the clock as Max craftily manipulated her to what was sure to be a massive orgasm. With minutes to go, she put down the book and allowed Max to perform his magic. The bra was sucking her nipples as Max rhythmically expanded inside of her, a tentacle teasing her engorged clit. Karen tensed for the onset of her much deserved orgasm and then...nothing. Max stopped completely, leaving her hanging yet. \n\n\"Max, please!\" she screamed in frustration.\n\nKaren grabbed the controller, trying to see what had happened. There, on the screen, she found the display counting down. \"PLEASE MODE in 4...3...2...1.\" Karen felt Max twitch again and realized that the 2 hour timer was for the \"Tease\" mode, only now would Max would take her to her destination. He started again, and she whimpered in anticipation. Remembering she still had pages to read, she frantically picked up the ebook and began reading. Max fell in line again, working her body in sync with the action in the book. A nagging doubt festered in Karen's mind as the hero and Angie united again: would Max finish her this time? As the hero mounted Angie, Max swelled up inside of her and seemed to pulse in time with his thrusts. As Angie climaxed, one of Max's tentacles latched on to Karen's clit and drove her into the abyss.\n\nKaren thrashed under the sheets as Max pushed her to new heights. All her sensitive parts were aflame and being manipulated at the same time. Max was hard and throbbing inside of her, stimulating her vagina as one of the tentacles sucked on her clit. Her nipples felt like they were being worked over by two mouths. Karen convulsed in ecstasy, her mechanical lover driving her wild. Max was relentless, causing her to thrash so wildly on her bed that she slid off the silken bedsheet and fell to the floor. Curled up on the ground in a fetal position, he still was active in her. \n\n\"Max, please...\" she begged weakly, and finally he backed off. \n\nWith a dazed giggle, Karen pulled the rest of the sheet down off the bed and fell asleep on the floor. \n\nWith a three day weekend on hand, Karen decided to play with Max on Friday night when she got home. A pleasant start to the weekend, followed by girl's day of shopping with her new friends. After a nice bath and preparation session, Karen decided to open the software program she had downloaded before her \"date\" with Max. After installation, she started the program. First, it asked if she wanted her mediator to be male or female. She picked female, the prospect of working with a male was too weird for her. Next came an array of options for the female: bitchy boss, strict headmistress, mean girl, snotty sorority sister, Mother Superior, the list went on and on. She selected headmistress, wondering what this program was going to do. Soon, an animated classroom appeared on her screen with a woman behind her desk, looking at some papers. \n\n\"Hello, and what is your name?\" the headmistress asked, looking up.\n\n\"Oh, I'm Karen,\" she replied, amused at talking to her like she was a real person.\n\n\"Karen, what a lovely name. And what can I do for you?\"\n\n\"Um, I don't know. What can you do for me?\"\n\n\"Are you the Keyholder?\"\n\n\"I, um...yes, that is me.\"\n\n\"Excellent. I can arrange events for your partner to participate in. When you are away, I can administer your commands to your partner. I can answer questions about our devices and services for you. I can help you order items to increase your partner's experiences. When your partner is ready, activate your devices.\"\n\nKaren thought about it for a few moments. It did not sound like fun having this woman tell her what to do. \n\n\"Thanks, I'll pass for now,\" she replied politely.\n\n\"As you wish,\" the lady answered, and seemed to go back to work on some papers.\n\n\"Well, that wasn't much fun,\" Karen thought ruefully as she quit the program. \n\nReturning to her bedroom, she felt a naughty flush as she retrieved Max from her nightstand. This time she inspected the panties that she had yet to try. They were black and made of a fairly thick material, somewhat like leather or vinyl. They would cover her above her navel. The crotch panel was thicker than the rest of the panty, and she wondered if it held another vibrator. She glanced at the instruction manual, but basically you just put them on like a pair of panties. After inserting Max, she pulled on the panties and put on the bra. She slid under her sheets, switched off the light, and turned her attention to the remote. She started scrolling through the menus, again marveling at the range of options. She once again regretted not having her instruction manual. One menu was different than the others, with it's own subheading: Training. She wondered what it would do.\n\nKaren selected Training and set the counter for two hours. The remote then asked for a mode, and she selected random. Next, she selected Master as a setting. Lover had been fun, but she was intrigued at what Master would do. She set Auto as the intensity. Security was next, and she knew enough that it was always better to be secure. Finally, it asked her to confirm her settings. She selected confirm, picked up the ebook reader, and looked forward to a couple hours of pleasure.\n\nThe ebook was deliciously naughty, and Max and the bra were working his synchronized magic. Just as he had before, Max brought her to the edge before stopping. Karen shook in grinning arousal, continuing to read her book. Over the course of the next hour and a half, Max worked her body with an artist's precision, bringing her to the brink of climax repeatedly. Finally, her two hours were up and she put down her ebook, closed her eyes, and allowed Max to blow her mind. Suddenly, Max was acting different, actually thrusting in and out of her as he throbbed inside of her. She reached down between her legs and discovered to her delight that the panties formed a platform for Max to attach to, allowing him to actually thrust in and out of her like a lover. Karen laid back with a moan and rode Max to what was sure to be a mind-blowing orgasm. The bra clamped down on her nipples as she peaked. And then, just as she was cresting, everything stopped. \n\nKaren's head whipped around to the clock. The two hours had well expired, Max should be working his magic on her. Her hand flew down to her crotch, hoping to finish the task herself. Instead, she found the panty largely prevented her from contacting the her sensitive bits. She could apply pressure around her clit, but direct stimulation was impossible. Frantic and confused, she rolled around on her bed, trying futilely to get the additional stimulation needed to push her over the edge. Finally she reached over and grabbed the remote to try and figure out what was happening. The display simply said \"Training Mode engaged.\" She tried to select other functions but the remote would not let her enter anything else. She started pulling on the bra and panty, but they didn't budge. She frowned and looked at the remote again. While she studied the remote, Max started up again. Within minutes she was hurtling towards another orgasm. Desperate, she mindlessly humped her pillows as her body was teased. Yet again, Max left her breathless and unfulfilled. ",
        "Karen tried to pull the panties off again, but the waistband was completely inflexible. She sucked her belly in as far as she could. To her delight, a small crevice opened between her skin and the panty. She stuck a finger in, and then to her horror the waistband tightened. She barely managed to pull her finger out in time. Now, even breathing was difficult. She struggled mightily but was unable to get it to move more than a fraction of an inch. As she was struggling, Max started up again. This time Max was gentle, slowly ramping her up. This time, just as she was about to cum, the bra pinched her nipples so hard she tried to protect herself. All stimulation stopped, and Karen found that the bra effectively prevented her from feeling her breasts. The bra, usually soft and yielding, was now fairly stiff. She could squeeze her breasts but it was like squeezing a soda bottle and only generated mild pressure across her bosom. She attacked the bra, hoping to at least get it off, only to find the clasp was now unyielding. \n\nThe remote beeped, surprising her. She hadn't realized it made noise. A statement appeared on the screen: \"User Action: Stimulate Breasts.\" Karen stared at it in confusion\u2014how was she supposed to stimulate her breasts when the bra wouldn't let her? Unexpectedly, the bra bit her nipples. Karen yelped in surprise, instinctively bring her hands up to protect her breasts. To her shock, she could feel her fingers. More precisely, her breasts could feel her fingers, even though all her fingers could feel was the stiff surface of the bra. The remote beeped again with the instruction \"User Action: Stimulate Breasts.\" She furrowed her brow in thought, trying to figure out what to do. The bra bit her again, and again she brought her hands up. This time, she started to simulate touching her breasts. The remote seemed content and silently allowed her to feel herself up. She laid back on her bed, staring up into the darkness as she manipulated herself to full arousal. The bra, while blocking sensation to her fingertips, mimicked the feeling of her hands on her breasts.\n\nKaren glanced a the clock in despair. This cruel game of denial had been going on for nearly three hours! Having been teased to the brink of orgasm numerous times, she quickly was becoming fully aroused with only her hands on her breasts. As her body got hotter and hotter, she decided to try and stroke her clit. No sooner had her hand left her breast than the remote beeped again. Karen immediately brought her hand back up to her breast as she read the remote. Apparently she was not allowed to stop. Her mind reeled at what was happening to her. Why hadn't Max stopped? How long was this going to go on? The remote beeped again. This time the instruction read \"User Action: Stimulate clitoris.\" \n\nKaren reached down and started to stroke herself. Just like the bra, the panty prevented her fingers from touching herself, but one of Max's tentacles began mimicking her finger's movements. She knew just how to touch herself, and in mere moments she was rubbing herself to an orgasm. As she feared, everything stopped as she approached climax. Her hands ground helplessly on the now solid bra cups, generating nothing more than light pressure. She frantically pawed at her crotch and breasts to no avail, the panty and the bra stiff and unyielding. She again tried to attack the bra and panty, struggling mightily to get them to budge. Finally she gave up, whimpering in misery. \n\nThe remote flashed again, and Karen's cycle of torment started up again. \"User Action: Stimulate Breasts.\" Afraid of getting bitten, she started playing with her breasts. She couldn't figure out what was happening. Why was Max not shutting off? How long would she be stuck like this? She contemplated calling 911, but it would be far too humiliating to try and explain getting stuck in a masturbation outfit. The remote flashed again. This time the instruction read \"User Action: Stimulate clitoris.\" Defeated, she started talking to Max in the darkness, begging him for mercy. He showed none.\n\n***\n\nAs it was designed, the \"Keyholder Remote Extended Squid Stimulator\" (KRESS) recorded everything, building a larger and more precise database on the user. Heart rate, PH levels, lubrication, electrical conductivity, blood pressure all fed into the algorithm. The KRESS was now learning exactly what the user responded to, recording the precise movements of her fingers as she pleasured herself. A training cycle, if it ran continuously, would last for four days. Two cycles had been requested by the keyholder. By the end of the two cycles, the user would be highly sensitized to pleasure and would be able to enjoy a much more rewarding sex life with her keyholder.\n\n***\n\nKaren recovered enough to try another shot at the remote. This time she managed to find a prompt that asked if she wanted to cancel the current setting. Her heart leapt in hope as she selected yes. She was then asked for the keyholder passcode. She stared at the device. Was it Max's serial number? She tried it and it was rejected. In desperation, she tried it again. This time the remote warned her that one more failed attempt would lock her out. The remote flashed and the prompt reappeared: \"User Action: Stimulate Breasts.\" With a sigh she obeyed.\n\nDenied yet again, Karen glanced at the clock. This had been going on for over five hours, well past her usual bed time. The constant pattern of arousal and denial was literally starting to hurt her. It almost felt like she was cramping, although the pain was less physical than mental. She was completely exhausted, not only by the late hour, but also by the endless teasing. Her spirit was broken. If only she could cum, she might be able to rest. The remote flashed and her tired eyes read the instructions. \"User Action: Stimulate Breasts.\" Karen whined in helplessness and began touching herself. After being abandoned at the edge yet again, she slipped into sleep. Nightmares filled her dreams, imaging sexy men making love to her, touching her. Nasty images filled her mind, unable to shake off the messages her body was sending. \n\nKaren drifted awake to the sensation of having her breasts fondled. She groggily reached for them and rediscovered the bra. Apparently her hands were no longer needed. She glanced at the clock and figured she had slept for only a couple of hours. She fell asleep again as Max started to stir inside of her. An hour later she awoke again to the same sensations. Now, Max was treating her like a relaxed lover on a lazy morning. Despite not being needed, her hands went to her breasts and absently played with them. This time when Max stopped she swore she had started to orgasm, but once again there was no relief. Her mind wandered. Suddenly, she sat bolt upright, her tired mind gripped with a brilliant idea.\n\nKaren leapt out of her bed and raced into her living room, shoving the chair out of the way. Kneeling, she activated her computer and started the Headmistress program. Maybe the Headmistress could help! Finally the program started, showing the Headmistress working at her desk.\n\n\"Excuse me,\" Karen asked.\n\n\"Just a minute,\" the Headmistress replied without looking up.\n\nKaren stared in shock. She waited for a few seconds before trying again. \"Excuse me, please.\"\n\n\"I said in a minute,\" the Headmistress snapped, the irritation obvious in her voice. \n\nKaren gaped in confusion but held her tongue. She appraised the Headmistress again. The graphics were really quite good. The Headmistress appeared to be older, maybe forty. She was pretty and slim, but with her hair pulled back she looked quite sever. As the minutes ticked by, she realized she really needed to use the toilet. Surely she wasn't going to have to pee with the panty on! Finally, the Headmistress looked up.\n\n\"Now, what can I do for you, Karen?\"\n\n\"I, um, I have to go to the bathroom.\"\n\n\"Why of course, you may go.\"\n\n\"I, um, how can I go with this...on.\"\n\n\"I have released the panel, you may pull it out of the way.\" An image appeared next to the Headmistress, showing the panel on her panty detaching from the back. \"You have five minutes. Please return when you are finished.\"\n\nKaren turned and ran to the bathroom. Just like the picture had shown, she was able to peel the center panel away. She relieved herself and wiped. Realizing the situation she was in, she took advantage of the freedom and started to touch herself. She knew she wouldn't need long, just a few precious moments. Seconds later, one of Max's tentacles forced it's way between her finger and clit. Karen tried to push it away, but it responded by pinching her most delicate spot. She tried again to remove it, but the tentacle was remarkable firm and again responded with a painful pinch. She yelped in confused pain, finally realizing that Max was not going to let her do that. Reluctantly, she pushed the panel back in place. Moments later it had reattached itself, as solid as ever. She sighed and walked back to the Headmistress. \n\n\"Young lady,\" the Headmistress started severely, \"Why are you standing?\"\n\n\"I...\" she started, before dropping to her knees. The position caused her to have to look up slightly to the Headmistress.\n\n\"Now, what were you doing in the bathroom?\"\n\n\"I, um...nothing,\" Karen replied, still embarrassed to be talking to a computer. \n\n\"Do not lie to me,\" the Headmistress snapped.\n\n\"I, uh, I was touching myself,\" she finally replied meekly.\n\nThe Headmistress tut-tutted in disapproval. \"I am very disappointed in you. Apparently, you can't control yourself at all. I hadn't taken you to be so weak.\"\n\n\"I'm...sorry?\"\n\n\"I know. You will need to be punished. Don't you agree?\"\n\n\"Yes?\" Karen answered, wondering what was going on.\n\n\"Yes what?\"\n\n\"Yes ma'am, I agree.\"\n\n\"Good. As punishment, your training clock is reset. You are starting over.\"\n\n\"I...ma'am?\" she asked.\n\nThe headmistress raised her hand to stop her. \"Not now young lady. How long has it been since you ate?\"\n\n\"I...um...last night.\"\n\n\"Go eat, you must keep your strength up. Return here in twenty minutes,\" she said, pointing to the clock behind her, \"and we can continue our conversation.\"\n\n\"But, I...,\" Karen started before giving up. \n\nShe rose and went to her kitchen and fixed herself breakfast, her mind awhirl with what was happening. What did the Headmistress mean 'your clock is reset'? She called her friend to let her know that she would not be joining them for lunch and shopping, feigning a cold. Finally, twenty minutes nearly expired, she returned the Headmistress. Remembering the last time, she kneeled in front of her again.\n\n\"Did you have a pleasant meal?\" the Headmistress asked sweetly as she finally looked up from her paperwork.\n\n\"Yes. What do you mean, my clock is reset?\" The Headmistress' harsh glare caused Karen to correct herself. \"What do you mean, my clock is reset, ma'am?\"\n\n\"Your keyholder engaged you for two training cycles. You started last night. Because you have no self-control, you are starting over.\" Karen gasped as the bra started to work on her breasts again.\n\n\"But I set the remote for two hours, ma'am.\" \n\n\"Two cycles,\" the Headmistress corrected her. Karen lurched sharply as her nipples were stroked firmly. \n\n\"Stop squirming, girl!\" the Headmistress admonished.\n\n\"Sorry ma'am,\" Karen apologized, trying to stay straight. I...how long is a cycle? I mean, how long is a cycle, ma'am?\"\n\n\"Forty eight hours when run continuously.\" \n\n\"Eight days?\" Karen exploded. \"I can't miss work for two weeks!\"\n\n\"Young lady!\" the Headmistress thundered, slamming her hand on the desk. \"You will not use that tone of voice with me!\"\n\n\"I'm sorry, ma'am,\" Karen pleaded. \"I just...I have to go to work! I can't go to work like this.\" \n\nThe Headmistress simply stared silently at her. Finally, she spoke.\n\n\"Right now, you are in training mode. And, due to your dwandling, you are behind schedule. We need to get you back on track. Please get the position...what you young people call,\" she paused as she consulted a sheet of paper. \"Doggy style. Are you familiar with this position?\"\n\n\"Yes ma'am. But please, I am the keyholder.\"\n\n\"Assume the position, young lady.\"\n\nKaren started to protest but then dropped to her hands and knees. She knew the position, of course, but had never let her boyfriend have sex will her like that. She found it too degrading. She squeaked as Max came alive inside of her.\n\n\"Please ma'am, there must be something you can do.\"\n\n\"Young lady, I will not talk to someone I cannot see.\"\n\nKaren reached up to adjust the computer and crawled back so that she was facing the Headmistress. From her position on the floor her neck had to crane up steeply to see her.\n\n\"Please ma'am, there must be something you can do. I am the keyholder.\"\n\n\"The keyholder can terminate the training cycle at any time.\"\n\n\"Ma'am,\" Karen started before letting out a grunt as Max slammed into her. She felt his impact all across her butt and throughout her pussy. \"How does the keyholder terminate the training cycle?\"\n\n\"There are two ways the keyholder can terminate the training cycle.\" \n\nKaren panted as she listened, Max picking up the pace as they spoke. \n\n\"First, on the remote, the keyholder can cancel the settings simply by entering the keyholder's passcode.\"\n\n\"Ma'am,\" Karen gasped, \"Where does the keyholder find the passcode?\"\n\n\"The passcode is written on the inside cover of the instruction manual.\"\n\nKaren groaned, in part in dismay at discovering she needed the instruction manual and in part for the liberties Max was taking with her. Where the hell had she put the instruction manual? Was it in her storage room in the basement?\n\n\"But, ma'am, what if the keyholder has lost the passcode? How can I get it back?\"\n\n\"To recover the passcode, the keyholder simply needs to log in to the keyholder's account and request the passcode.\"\n\nKaren's heart fell as she heard the news. She did not remember either the username or the password she used, and she used a fake email address to set up the account. It did not look like that was going to work at all. \"Ma'am, what is the second way to terminate the training cycle,\" she asked, failing to keep the arousal out of her voice.\n\n\"The second way to terminate the training cycle is to log on to the keyholder's account and request a termination.\"\n\n\"But...I...oh...,\" Karen whimpered, defeated again. \n\nShe stared in a daze at the Headmistress, Max now thrusting firmly inside of her as her nipples were fondled. The Headmistress seemed to be gazing at her in bemused disgust. Karen's eyes drifted to the ground, only to be reprimanded by the Headmistress. She raised her head again, craning her neck to look at her. The familiar wave built in her core, and just as she feared, in the millisecond before she came, all sensation stopped. Karen's hips bucked in protest and a whine escaped her throat. Finally, her breathing returned to normal.\n\n\"You may get up,\" the Headmistress offered, and Karen gladly took to her knees. \"Now, you have been a bad girl, but that is not uncommon for someone just starting out. You are trying and have a good attitude. So, I am tempted to give you this,\" she said, and pulled out a glowing pink diamond that floated over her hand.\n\n\"What is that?\" Karen asked. A pause hung in the air. \"Ma'am.\"\n\n\"An orgasm, of course. Now, go take a shower and get cleaned up. Return in forty five minutes and I will consider rewarding you.\"\n\nAn orgasm. The idea seemed almost too good to be true. A huge smile broke out on Karen's face. At least she would get something out of this horrible adventure.\n\n\"Oh, thank you ma'am, that would be wonderful,\" Karen beamed.\n\nThe Headmistress nodded knowingly. \"You will be able to take off the assisting devices, have them back on when you return. The KRESS will remain in place.\" With a wave of her hand, the Headmistress dismissed her and returned to her paperwork.\n\nKaren scrambled to her feet and practically ran to the bathroom. As the Headmistress had said, she was now able to easily remove her bra and panty. Max, however, stayed in place. She jumped in the shower and started to get cleaned up. She marveled at her breasts, finally able to stroke them again. She soaped and massaged them much more than they needed, shocked by how sensitive they were. Max felt different also, like there were little jets of water were being swished around inside of her. It felt like he was cleaning her vaginal walls while she cleaned her skin. Her hands fondled her breasts and she considered trying to masturbate while free of the bra and panty. She wondered absently if the Headmistress would deliver on her promise. She decided to trust her and stepped out to dry off.\n\nForty five minutes later, with the bra and panty back on, Karen knelt before the Headmistress and waited for patiently instruction. The pink diamond glowed and danced temptingly on her desk. Finally she looked up.\n\n\"Are we all clean?\" \n\n\"Yes, ma'am.\"\n\n\"Would you like this?\" she asked, motioning to the pink diamond.\n\n\"Yes ma'am,\" she nodded with a smile. \n\n\"Very well,\" the Headmistress grinned. A long silence hung in the air as they Headmistress stared at her. Finally a light went on in Karen's head.\n\n\"Um, ma'am, may I please have an orgasm?\"\n\n\"Why yes, you may. Thank you for asking so politely.\"\n\nWith that, she flicked the diamond off her desk. It seemed to fly straight at Karen, disappearing after it covered the screen. Max twitched in response. Karen looked up at the Headmistress in confusion. The Headmistress smiled back at her.\n\n\"Go on, young lady, run along and enjoy,\" she smiled, dismissing her with a wave of her hand. \"You may come back any time you like.\" She then returned to her paperwork and the program minimized. \n\nKaren got up and looked down at her panty. Did this mean that Max was going to make her cum? She quickly ran back to her bedroom and jumped in her bed. Moments later, the bra started. She went to fondle her breasts only to get a beep from the remote. She looked at it to find a new instruction: \"User Action: No hands.\" With a sigh, she let her hands drop to her sides and allowed herself to enjoy the sensations. Having been teased mercilessly for over twelve hours, she really did not need any foreplay, but Max was taking his good old time. Doubt nagged the back of her mind as she wondered if he would deliver this time. His talented tentacles worked her, touching her most sensitive spots. All the while she lay there, unable to interact at all, helpless to his touches. He teased her again, sucking on her clit before backing off to stroke her labia, Karen breathless in anticipation. She approached her climax and this time Max drove her over the peak. \n\nThe orgasm ripped through her mind and body, releasing hours of pent up arousal. Brilliant reds and oranges filled her vision as her blood seemed to turn to fire. She barely choked off a scream Max punished her, thrusting in and out of her, sucking her nipples and her clit, driving her crazy. Her exhausted brain overloaded on pleasure and she passed out. She awoke just before noon and grinned weakly.\n\n\"Max, you nearly killed me,\" she groaned before sliding out of bed.\n\nKaren walked to the living room with a purpose. Her animal urges taken care of, she now had a new mission to accomplish before Max started playing again: figure out how to get these devilish things off of her. "
    ],
    "authorname": "astuffedshirt_perv",
    "tags": [
        "orgasm denial",
        "tease and denial",
        "frustration",
        "humiliation",
        "female masturbation",
        "orgasm",
        "virtual reality",
        "artificial intelligence",
        "trapped",
        "teasing"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/rtfm"
}