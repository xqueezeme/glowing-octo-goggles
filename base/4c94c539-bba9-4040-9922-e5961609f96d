{
    "title": "Eric & Will make a B Movie",
    "pages": [
        "Chapter One.\n\nI met Eric at the tennis club I had joined. We were both single men with no set schedule to speak of, so we played together pretty often. I'm a pretty laid back guy on most things, but tennis was one of the few things I was competitive at. Eric, it turns out, was the same way, and some of our arguments over points almost devolved into fistfights. The club pro took an interest, and soon we were playing in amateur tournaments as a doubles team. We were pretty much undefeated for two years, even beating a couple of pros in charity events. Of course, they were both just north of forty, but I was no spring chicken at thirty-seven. Eric was twenty-six, a fact he liked to rub in every once in a while.\n\nOur friendship began slowly, mostly because of the age difference. The fact that I was prematurely gray highlighted our difference, and when we began to hit clubs together he'd introduce the girl he was targeting to me as his Dad, to make him appear harmless. I wasn't a troll, and the years had given me a wealth of patter to draw on. I think it shocked him that I could pull women faster, but he adapted, becoming my wingman. It was never anything serious, I'd given up on a permanent relationship long ago. Still fun to have a hot, sweaty night with a sweet young thing, as long as she knew she was going home in a cab the next morning.\n\nI knew the girls talked, as did the people we knew in the community and at the tennis club. We both had money, never seemed to work, didn't have a set schedule. The general consensus was that we were drug dealers. It got to the point that we would get stopped and have our car searched on a regular basis, and people we barely knew were wanting to know if we could 'hook them up'. A couple of phone calls from some very high priced lawyers ended the harassment, and a few well placed \"FUCK OFFs!' took care of the rest.\n\nSo then, where did the money come from?\n\nFor Eric, it came the old fashioned way. He inherited it. His family owned several very successful businesses, and when they all went down in a plane crash, he inherited everything, along with some very nice insurance settlements. No idiot, he had an MBA from one of the most prestigious schools in the country. But he soon discovered he couldn't stand the rigid demands of business on a regular basis, hired top notch managers, and went in to his office twice a week for five hours, to keep check on things. He also had two sets of accountants and a very good law firm to look out for his interests, so he was pretty much set.\n\nHe didn't just slack around and party. He kept in shape, with tennis and martial arts, and had numerous hobbies that were pretty demanding.\n\nI was almost the exact opposite. My parents were dirt poor. I was just lucky enough to pay for their funerals when they passed. I'd been married, and after five years she told me I'd never amount to anything, and she was leaving me for a better life. Took almost everything of value with her when she left.\n\nHer exit plan was a victim of timing, I did indeed have nothing when we divorced, but eighteen months after I got the final decree, something I'd been working on in my spare time paid off, and the paydays just kept getting better. My darling ex somehow discovered my good fortune and came sniffing around, hinting that perhaps she'd made a mistake, and maybe we should work on mending fences.\n\nI politely told her to kiss my ass, rubbed my good fortune in her face, and moved away without a forwarding address. I bought the condo I live in seven years ago, and just kept moving forwards.\n\nEric and I had many of the same interests, and our attitudes complimented each other. He'd get enthused over something, try to drag me along with him in his latest scheme, and I'd be the voice of reason, pointing out holes in his plan until he got bored and dropped it. But if he really, really wanted to do something, no force on earth would keep him from trying.\n\nChapter Two\n\nWe had decided after three days of sleet, freezing rain, high winds and blowing snow that enough was enough. The islands were looking really attractive, that or southern France. We flipped a coin, and France won.\n\nWe were to meet at my condo and cab to the airport. I had one of my rare business meetings, so I told Eric I'd be a little late. He said he'd amuse himself until I got there. That should have had warning bells going off in my head, but I was focused on what I was doing and missed it.\n\nHe was sitting on my sofa, an old issue of National Geographic in his hands, when I came through the door. \"How'd you get in here?\"\n\nHe just gave me that lopsided grin of his. \"You know how I am when I want to learn something new. I thought once that it might be cool to learn how to get pass locked doors, so I looked a guy up. He'd been a master thief for years, until an associate got caught for something else and sold him out for a lesser sentence. He did five years, and when he came out he started a consulting business, teaching individuals and corporations how to keep guys like him out. He told me he made as much in his second year as he did in all eight years of thievery. He also had an associate that knew a thing or two about computers. Issabella, really? I can't tell you how cool it is that you're Rock Stone, and Smiley B. Wiley, but Issabella? Sounds kind of gay to me.\"\n\nWell, the truth was out there now. My upturn in fortune? It was from writing, something I'd done while still married. My wife belittled me, but I bet she isn't laughing now. I write under three aliases, and make pretty good money off all of them. I decided early on an alias was the way to go, mostly to keep my ex-wife in the dark. We'd parted almost a year before I started making any money off my writing, but with her you never knew, and I didn't want a long, expensive battle over whether she deserved any money for standing by me for the years she did. Then, I liked the idea that I could walk the streets and no one had a clue who I was or what I did. Since I started out self publishing, I wasn't obligated into future book signings or tours to support the work. Oh, I probably would have made more money if I had, but it was worth the trade off to me.\n\n\"Shut the fuck up! I'll have you know Issabella paid for this condo with her romances. And good old Smiley bought the four-door truck and the motorcycle with his mysteries. The Battle Babes royalties are just gravy. Very nice gravy. The profits from the video game alone would keep me very comfortable for the rest of my life.\"\n\nHe was laughing out loud now. \"Okay, okay. I gotta tell you, man, you're my hero. I started reading Battle Babes of Borth when I was fourteen, Can you imagine?\"\n\nI couldn't help smiling. \"I'm glad you liked them. You were fourteen? Tell the truth, did you beat off thinking about Captain Titts?\"\n\n\"Fucking A I did! Until I was raw! Her, then Sergeant Hipps, Redhaired Hellion, then Private Partz, Going Commando. You got a pretty wild imagination, dude.\"\n\nI thought about the series when I was half buzzed one night, reading an old paperback sci-fi from the eighties, about a group of mercenaries that traveled the universe for fun and profit. They were a womanizing lot, and spent more time screwing than fighting. I had a stray thought about reversing the image, and have it be a bunch of extremely attractive, extremely horny women, offering their weapons and 'services' to the highest bidder. I hacked out the outline of the first three novels that night, then spent eight months developing the characters and plot lines.\n\nI published online, without hope of a book deal. By the time the third book came out I had a small cult following, that swelled in time to millions all over the world. I was up to book thirty-five now, with two spinoffs. There was also a video game that was ranked number five world wide, and several graphic novels I'd done with a famous comic book artist. I'd even been approached twice for a possible movie deal.\n\nIsabella came about when I was bored with the Battle Babes, and about the time romance became hot. Seems I was pretty good at it, and two of the four became movies. There was a huge online debate going on as to who she actually was. I laughed a couple of times about the guesses, but so far they were nowhere near the truth.\n\nSmiley came along when I needed a nom de plume for a series of mysteries I developed. They were the least successful of the bunch, but still made more money than I ever thought I'd see in my lifetime, so I couldn't complain. Combined, they added up to a very nice chunk of change. And now the cat was out of the bag. \"You gonna tell anybody?\"\n\n\"Shit no(did I mention that on average one out of three words out of mouth were generally swear words?)I'm not. I would never do that, man. You're my friend, and I just don't have that many. Still pretty cool though.\"\n\nI believed him. In the time I'd known him I'd never heard him betray a confidence. \"Good. Now relax, while I take a shower and get changed. Then we're off to the airport. Boobies for everybody!\" \n\nThe beach we'd be frequenting was topless, except for one area. There completely nude people frolicked, enjoying the climate and scenery. \"Boobies for everybody!,\" he echoed, before taking the old National Geographic up again, thumbing through it while I got my gear together.\n\n\"Hey, this is cool,\" he said, showing me the article. A man had been hunting in Arctic Canada for polar bear, and he shot one that he thought had mud on it, only to discover it was brown fur on its' feet and ears. He'd shown it to a provincial biologist, and they ran a DNA test, proving the bear was a cross between a Grizzly and a Polar bear, coming about because the Polar bear was losing habitat due to global warming, and the Grizzly was expanding theirs.\n\nI'd read the article. \"Yeah,\" I grinned, \"tell me that isn't a cheesy B movie wanting happen. I can see it now, GROLAR! SCOURGE OF THE NORTHLANDS!\"\n\nIf I had been paying attention I would have noticed the glint in his eye that always led to some adventure or another, but I was busy packing. We were on the plane and I was half asleep when he brought up what was on his mind.\n\n\"I think we should do it.\"\n\n\"Do what?\"\n\n\"Make a B movie.\"\n\nMy eyes snapped open, and I saw the look on his face. Shit! Now I had to talk him down. \"What makes you think we could make a B movie? I for one know nothing about the film industry, how to make a movie, how to pitch a movie, how to get it in theaters. We'd be tap dancing in a minefield, it would end up blowing up in our face. And movies take money to make, who'd finance us?\"\n\n\"We'd finance us. I'll put in a million if you will. That should be enough, remember B movies are cheaply made anyway. You write the script, and I'll get it made. I bet if we put our minds to it we could make a classic.\"\n\nI just shut up and let him enthuse. No way in hell was I pissing a million dollars away on something we knew nothing about. Maybe it would be out of his system by the time we got to France.\n\nIt was warm, the girls pretty and willing, the wine excellent. We pulled our third set of girls in four days, cute little Aubrey Hepburn lookalikes. They couldn't speak English, and I knew just enough French to get my face slapped, but we each made it clear to each other what we wanted. We danced, drank, went back to the suite and banged them, switching partners sometime before morning. I woke up with both girls draped across me. As much fun as it was to feel that much nubile young flesh rubbing against me, I needed to go really bad. Maybe I'd come back and figure out a way to get rid of my morning wood. Maybe I'd take them out to lunch, and buy them a nice bauble to remember us by. We'd kiss, gaze into each others eyes longingly, make vague promises, and never see each other again. Life would go on.\n\nI heard a noise and checked, amazed to see him sitting at the kitchen table, his laptop open, and a notebook filled with scribbles. Whatever had gotten him away from the girls must have been important to him. I felt the skin on the back of my neck start to crawl.\n\nThat was my tell. It always tingled right before we'd embark on whatever adventure he'd come up with. I always thought it was my subconscious analyzing data, drawing conclusions, and trying to force my conscious mind to acknowledge it. \n\nI woke the girls, walking them naked into the kitchen, and when he didn't even look up the crawling intensified. This was bad. I told the girls to get dressed, called the driver we used, and escorted them back to town. The driver put the privacy panel up, and they took turns showing me how grateful they were for last night. We had to sit a minute after we stopped to straighten our clothes. I took them into the first jeweler we came to, and dropped about a grand U.S. on them, knowing they'd return it for the money, minus a twenty-five percent fee handling fee, before I got back to the villa. It was the thought that counted.\n\nI found him on the patio, his laptop humming, notepads scattered everywhere. He wasn't working, just lying on a lounger, soaking up the sun, wearing an expensive pair of sunglasses and nothing else. Four beer bottles were on the table, and he was face down and snoring.\n\n\"Turn!,\" I said, sticking an ice cold beer on his leg just below his junk, enjoying the way he jumped and automatically covered up, \"if you don't, the vacation fun will slow way down, what with sunburned balls and all.\"\n\n\"Fuck you,\" he said, struggling into his shorts and a tee. \"the girls still here?\"\n\n\"Nope, already placed the little beach bunnies back into their natural habitat. They're probably already frolicking with a new set of wolves.\"\n\n\"Well just shit then. What am I supposed to do with this?\" He was looking down at the erection that had sprang up.\n\n\"My best guess would be take matters into your own hands. Need a minute?\"\n\n\"Fuck you, I'll just save it until later. I'm starving.\"\n\nWe hopped in to the little two seater roadster we'd rented, and hit a village known for its' many bistros. Say what you want about the French, those frogs could cook. I think you can ingest five hundred calories just looking at the plate. Sated, we went back to laze around until the afternoon was half over, then hit the beach. Then we'd cruise the bars, looking for Miss Right Now. Or two. Or three. Whatever. I once tried to talk Eric into buying stock in a condom maker, my point being that our business alone would keep them solvent. He'd gotten an STD once, and it scared him to the No Glove, No Love, school of thought.\n\nHe plopped down on the patio, looked at the papers, and grinned. \"Guess what I was doing while you were shagging our little French bimbettes?\" \n\n\"Regretting not joining us? Having a bit of penis envy, maybe. We can't all be hung like satyrs, you know.\"\n\n\"Well, I was a little worried about your health, so I tried to find your supply of Viagra and hide it, before you blew that feeble old heart of yours out. Then I decided if that's the way you wanted to go who was I to stop you? Instead, I researched B movies, looking for the formula, you know, the ones that make B movies classics.\"\n\n\"Really? And what have you learned, mighty scholar?\"\n\n\"Well, first of all, the female lead needs to be blond.\"\n\n\"And I suppose she has to have a nice rack? Plus, her character would have to hate wearing bras, right? Lots of shots of her in tee shirts, preferably wet?\" I was grinning back now. This kind of banter is what made him such a good companion.\n\n\"You're damn right. And the shirts have to be tight and as thin as possible. Now, any ideas who she could play in our epic?\"\n\n\"Sure, she can play the biologist who discovers the crossbreeding.\"\n\n\"How you gonna make a big titted blonde look smart enough to be a scientist?\"\n\nI thought for a minute. \"Big glasses and a lab coat.\"\n\n\"See! See! I knew you'd be good at this shit. Now, who's the leading man?\"\n\n\"The hunter of course. he has to be devilishly handsome, and dumb as a fucking post.\"\n\n\"Is the biologist his love interest?\"\n\n\"I don't think so. He'd be too intimidated by her brains. No, I think a native girl is the way to go here.\"\n\n\"Goddamn! Naked natives! Now you're fucking talking!\"\n\n\"Who said anything about naked natives? It's set in the Arctic, you moron. Where the hell would we get naked natives?\"\n\nHe leaned back and grinned. \"You're the writer. Figure it out.\"\n\nThe game had gotten to me. I thought for a few minutes. \"Sweat Lodge! A sweat lodge full of naked natives, with the hot blonde biologist and the hunk right in the middle.\"\n\n\"Think you can get her to go topless?\"\n\nMan, to have an IQ just over 150, he could be downright dense at times.\"I thought you said you researched B movies? We aren't going to get anyone who's a serious actor in the thing anyway. I'm sure there's a young aspiring actress out that somewhere who'd get naked in a flash to be in a movie. Dumbass.\"\n\n\"Fuck you very much, old man. Wait, does that mean we'd be on the set with a bunch of topless women?\"\n\n\"Why the hell would we be on the set?\" \n\nIt was his turn to look at me like I was an idiot. \"Because there would be a bunch of topless women. I'm the executive producer. I'd have to be there to make sure our money is well spent. You'd be there as co-executive producer and technical advisor, to make sure they fuck up your masterpiece.\"\n\n\"You mean don't fuck it up, right?\"\n\n\"I meant what I said. We'd have to do so many revisions that the finished product doesn't even slightly resemble the original concept. It's how all successful B movies are done. Of course, you'd have to throw a temper tantrum or two, and I'd have to talk you back into the fold as executive producer. You can thank me in advance, if you'd like.\"\n\nI stood up. \"This bullshit is giving me a headache. Come on, beach time.\"\n\nWe hit the beach, and I watched all the pretty little girls parade up and down, in brightly colored thongs and nothing else, looking for their next victim. I'm firmly convinced women can smell money on you, like a shark smells blood. Eric had pretty decent looks, and I was okay in a middle-aged man who takes care of himself kind of way. We didn't wearing Rolexes or bling, but they'd gravitate to us, flirting, posing, showing off their assets in the best possible way. Everybody knew the situation. Most of them were barely making a living as secretaries or factory workers. They'd probably saved all year for the few days they'd get to spend in the sand and sun. They wanted adventure, someone to sweep them off their feet for a vacation fling, something to entertain the girls they left behind, with tales of the handsome stranger and the special connection they'd felt instantly. If they were rich and could take them to the finer places, so much the better. Most were more than willing to trade sex for their dream. It's why I tended to give them little gifts and act heartbroken when I took them home. It made the story more interesting, made them feel better about what they'd done to earn it.\n\nThey were like schools of brightly colored little fish, and like little fish fleeing from a shark, they scattered. I looked to see what caused it. A woman, with long black hair and olive skin, was rising from the sea. Her breasts could have been used as a model for all the classic sculptors, sitting high, firm, and full. As she rose, it was obvious she had strayed from the nude beach, the privacy fence stretched across the beach fifty feet behind her. Unlike all the smooth little bunnies, she had a full, luxuriant bush, jet black silk shedding droplets of water as she swayed towards us. \n\nShe stood directly in front of me, smiling, and started talking. Greek, maybe. I held up my hand. \"My humble apologies, Goddess, I do not speak the language of Olympus. I'm just a vulgar American, overwhelmed by your beauty.\"",
        "Eric was standing beside me, and I had an almost uncontrollable urge to reach over and close his mouth. She gave a little laugh, and spoke in almost perfect English.\n\n\"Goddess?\"\n\nI grinned, still enthralled by her beauty. She had to be over forty, but she carried it extremely well. The girls were right to scatter, they would have been invisible next to her. I bowed slightly. \"Yes, my lady, Goddess. Are you not Aphrodite, or Venus, risen from the sea? No mortal could attain your beauty, so ergo, you're a Goddess. I suspect you appear from time to time to show mortals what real beauty is. Sadly, you ruin those in your presence, because mortal females, no matter their attributes, will be pale imitations compared to their memory of you.\"\n\nHer laugh was like music. \"And people say there is no poetry in the soul of Americans. Or are you an exception to the rule?\" Her eyes flickered up and down my body. Then she smiled again. \"I like you. You amuse me. Tell the truth, what is in your mind right now?\"\n\nI looked directly into her eyes. \"I was thinking I'd like to be somewhere private with you. I would like to lick the saltwater off your pubic hair, replace it with the juices of our lust, until you screamed in climax, at least twice. Then in a fumbling way not anywhere near the standard you deserve, I'd try my best to give you a fucking worthy of you. That, Goddess, is what is in my mind.\"\n\nEric was looking at me like a stranger as the goddess stood before us. I was using a low, crooning voice, a tone I almost never used. The tenderness of my tone belied the vulgar words, but they had the desired effect. Her nipples had popped out while I talked, and her breathing became rapid. She slowly nodded. \" You have the gift. I knew I was right to follow my instincts. It is not often one meet a modern day Mage. Your tongue weaves an interesting tapestry of lust and desire, Wizard. Well, I hope your tongue is at good at pleasing me as it is in forming words. I command you, as your Goddess, to follow me, Wordweaver. Worship your Goddess well.\"\n\nI bowed fully then. \"Your servant awaits. Perhaps, Goddess, you'd like my robe? Although such a vulgar garment should be burned for obscuring your beauty. \"\n\nShe looked down, noticing she was naked while everyone else had at least bottoms on. She smiled even more brightly. \"Well, it isn't far to my chambers. But it comes off the second the door closes.\"\n\nShe took my hand and we started walking. We got about fifty feet before she stopped, and turned back to look at Eric. \"Apprentice, are you coming? A Goddess should be worshiped by the masses. Don't you agree, Mage?\"\n\nHis grin almost obscured his face, and he ran to catch up.\n\nShe was by far the sexiest, most skilled lover I'd ever had. Her body was flawless, tight and firm where it needed to be, soft and yielding otherwise. I think every woman I'd ever been with, every act of passion before this had been merely training for this moment. I used every trick I'd ever learned to give her pleasure, and she showed me things I never even considered. She whimpered, she howled, she cried. She scratched welts on my back as we mated, bit my shoulder until the blood flowed, manipulating her body in ways I didn't know was possible. I bit bruises on both breasts, put a huge hickey on her neck. Eric sat amazed for almost an hour, just watching. She'd occasionally reach out and stroke him. He'd shut his eyes and moan. I think he set a personal best for maintaining an erection. After almost an hour nonstop, I was done. There was no life left in me.\n\n\"Sorry, Goddess, but this mere mortal is finished. May I sacrifice my young friend here to you? He may not be skilled, but he has the ability to learn quickly. At the very least, he'll die smiling\"\n\nIn essence, she treated him like a bitch. She controlled every action. An hour of watching must have been a big strain because he popped after five minutes of her riding him in reverse cowgirl. He blushed and started to apologize, but she twirled around, still mounted, and touched his lips. \"Hush, young one. Let me work my magic. \"\n\nShe sat still, a frown of concentration on her face. Eric said it was like a hand massaging an udder. He was hard again in four minutes, and she rode him for what seemed forever, until he screamed(like a girl, I thought)and arched into her for a final time. She had a serene little smile on her face, and I wondered if she'd orgasmed at all. Eric just lay there, tears in his eyes, as she strode across the room, the results of her matings glistening down her legs, and got us all a glass of wine. I took it and raised it to her. She smiled and touched her glass to mine.\n\nWe sat companionably for a few minutes, not speaking. What could one say to do what just happened justice? The door opened, and a tall, handsome man strode in. He took in the room at a glance and grinned.\n\n\"Ah, my dear, you have guests. How rude of me to barge in. Please excuse me.\"\n\nEric was staring wideyed, wondering when the violence would begin. I rose naked, and bowed again. \"Please, do not bother on our account. We were just going. Too much time in the presence of a Goddess is not good for mortals. We'll take our leave now.\"\n\nThe man smirked, looking at the woman. She actually blushed before her eyes sparkled in merriment. \"Yes, apparently he's convinced I'm Aphrodite. And he is a Mage, with his young apprentice. But he speaks truth. Too much magic in such a small space for extended periods of time is not good. Goodbye Wizard. I'm sure we'll meet in another life.\"\n\nShe kissed our cheeks as she ushered us to the door. She whispered something to Eric, creating a full body blush.\n\nWe were walking down the beach when he let out a tremendous howl and ran into the water, rolling around like a madman. Finally restraining himself, he came back to our cabana. \"Over it now?\" I asked, as he shook the water off like a puppy. \n\n\"I'll never be over what just happened! It was the most amazing experience of my life! You ARE a Wizard. She said so, and I believe it.\"\n\nCuriosity got me. \"Is that what she whispered to you?\"\n\n\"Part of it. She said we both have bright auras, and they're even brighter when we're together. She also said as long as I stayed near you, good things would happen.\"\n\nI laughed. \"I think she's drained too much blood away from your head. She's no goddess, just a horny woman that took a chance and it worked out well. I bet right now her husband is balls deep in her while she tells him how she seduced a couple of stupid Americans. And we need to get tested when we get home, we never used condoms. Heat of the moment, I guess.\"\n\nHe shook his head stubbornly. \"Believe what you want, man. I think she's right. What just happened wasn't normal, and you know it.\"\n\nChapter three\n\nWe both agreed nothing could surpass what had just happened, so we packed and left. I'd been typing away on my laptop while Eric dozed. He finally stirred, and asked me what I was working on. \n\n\"A new Battle Babe. I haven't introduced a new character in a while, and I think the time is right.\"\n\n\"Let me guess. She'll be hot, horny, another stone cold fox. Describe her.\"\n\n\"Exactly as you said. Olive skin, jet black hair, I think she'll be older than the rest. Might be good for them to have a mother figure.\"\n\n\"Got a name?\"\n\n\"I'm leaning towards Goddess. What do you think?\"\n\n\"I think you'll make another million bucks. Thought any more about the screenplay?\"\n\nI rolled my eyes. The boy could be relentless. \"In the first place, I've never written a screenplay. The best I could do would be write the story, then turn it over to someone who knows what they're doing. And I haven't said that I'd do it yet.\"\n\nHe smirked. \"I'll add that to the list. Screen writer. Hopefully someone who can string words together in a comprehensible fashion. Oh, and we'll be filming in Canada.\"\n\n\"Why?\"\n\n\"Because they have a lot of snow, dumbass. And it's a lot cheaper to film in Canada, I checked. Don't want to blow the budget too soon.\"\n\n\"You know, B movies always have more than one hot bitch in them. After all, the bear has to eat somebody, right? Might as well be somebody hot. Redhead? Brunette?\"\n\nHis eyes seemed to gleam. \"Redhead. It'll make her look better all bloody lying in the snow. And you have to have at least one black girl, with big tits and a ghetto ass. And she needs to wear booty shorts.\"\n\n\"Canada, snow, cold, remember? She'll freeze to death in booty shorts. Although, we could make it a running joke about her not understanding why she's so cold all the time. Maybe we can have her wear the shorts with thermal tights under them.\"\n\n\"Now you're rolling! How soon can you be done?\"\n\n\"I haven't agreed to do it, yet. Don't get your hopes up.\"\n\nHe lay back, closing his eyes. \"Oh, you'll do it, all right. You're hooked, I can see your brain working with my eyes closed. We WILL do this. I guarantee it.\" \n\nI just sighed and went back to my laptop.\n\nChapter Four\n\nI tried to leave it alone. Really. I had stuff to finish, stuff that would make me money, instead of something guaranteed to make me lose money. But Eric was right, I was hooked. I'd finally given up, and dedicated one day a week to it. I didn't tell Eric until I was done with it. He'd dropped by, on his way to another date. Somehow word got out that we weren't drug dealers, but movie makers. Poor little rich girls, poor girls, and just regular girls were suddenly interested in playing tennis with us, inviting us to the juice bar afterwards to 'get acquainted'. It got so bad I thought seriously about changing clubs.\n\nEric was having the time of his life, banging his way through all our admirers, making promises he had no way of keeping. It took another minor STD to slow him down. Even condoms aren't always effective. At least he was a little more selective, and there was a mild scandal, not to mention an increased number of doctor visits by some very pissed off women, when it came out. I was surprised he could find someone still willing to go out with him.\n\nHe was moaning about it on my couch when I dropped the binder in front of him.\n\n\"What's this?\"\n\n\"It's what you've been obsessing and bragging about for the last five months. It's your movie.\"\n\nHe was almost reverent when he picked it up. \"No shit?\"\n\nI grinned to see him at a loss for words. \"No shit, as cheesy a piece of junk as I could make it. Tell me what you think when you get time to read it. Now go enjoy your date.\"\n\nHe pulled out his phone, and started texting like crazy. He threw it down and grinned at me. \"Seems I'm suddenly at loose ends. Mind if I read it here? And order some takeout, I'm starving.\"\n\nI couldn't believe he blew off his date for this. \"Where did you leave the poor girl waiting?\"\n\n\"La Petit Chateau. She has a thing for French food. Why?\"\n\n\"Because I'm going to stand in for you, no need to let good food and a hot woman go to waste. Text her back and tell her I'm on my way.\" I figured he'd bitch, but he caught her just as she was about to leave. He didn't know whether to be pissed off or not when she said she'd be happy to wait on me.\n\nI came back three hours later, grinning. Seems the perfect thing to go with a nice meal is a little dancing. She directed me to a club I'd never been in before. It was a jazz bar, and it featured an eighteen piece combo that played mostly forties and fifties music. She taught me how to foxtrot, and we enjoyed several nice waltzes. I liked it so much I decided to take advantage of the Wednesday night dance lessons they offered. The young lady I was with seemed delighted to be my practice partner. Looks like Eric might have lost a dolly. The fact that I treated her like a princess and didn't try to peel her dress off her on the dance floor may have swayed her decision.\n\nHe could have cared less. There were takeout containers strewn from the kitchen to the living room, along with empty beer bottles. He was grinning like mad, waving the binder. \"This is going to be a hell of a movie.\"\n\nI snorted. \"It'll be junk. We're gonna lose our ass if we make it. No one wants to watch shit like this. They never make any money.\"\n\n\"Oh yeah? Seems I remember a movie recently that had weather dumping sharks all over town. It was terrible. So were the two sequels. I hear they're thinking about number four. It still made the guys who came up with it shitloads of money.\"\n\n\"Why is so important to you? You're already rich. What do you need to prove?\"\n\nHe went unusually quiet for a few minutes. When he started talking it was so low I had to strain to hear. \"It's about doing something that's mine. Something that doesn't have anything to do with the businesses I inherited. You think I don't know what they're thinking? If I hadn't inherited this stuff, I wouldn't have a pot to piss in. If it wasn't for my board and managers, I'd have already lost everything. It's not true, but it's what they think. I wanna take this movie and cram it down the throat of every asshole I've had to deal with, wave the money around and laugh at them. So we have to make damn sure it's a success, understand?\"\n\nWow. I knew how he felt. It was the same when I was struggling to be a successful writer, working dead end jobs just to keep fed and housed. It was why my wife left me for that asshole she took up with. Rubbed my face in the fact that her new man had a great career and money to spend on the nicer things of life, and I'd be a pathetic loser until the day I died. If she only knew. Our twentieth high school reunion was coming up. Maybe I'd show up in a limo, a sweet young thing that was almost young enough to be my daughter on my arm. Maybe two. Maybe not. I didn't really like most of the people I went to school with, and if they were assholes then, they were probably bigger assholes now.\n\nI held my hand out. He shook it, wondering why.\n\n\"Now it's official. We're gonna make a movie. You better not lose my money, dickwad. And I get to name our company. Two Fools Productions. Has a ring to it, doesn't it?\"\n\nHe grinned and raised his beer bottle. \"Here's to two fools.\"\n\nI clinked my bottle against his, privately thinking truer words had never been spoken.\n\nChapter five\n\nMy financial advisor had a fit when I had him move money around to pay my half. \"This is the stupidest idea I've ever heard. Do you or your partner know anything at all about making movies?\"\n\n\"Only if watching a whole bunch of them counts. Look, I know I'm probably pissing this money away. I might as well open a window and throw it out, for all the return I expect to get off it. But it is MY money, and I'm sure in your career you've seen people spend good money for the goofiest of reasons. Now, where do I need to sign?\" I still had to promise to get a good accountant and save every receipt.\n\nWe got an entertainment lawyer, formed an LLC in case things really went South, rented a set of offices. \"Kind of a lot for two guys, don't you think?\"\n\nHe waved his hands around. \"Oh, I expect things to change fairly quickly. We may need more than this soon.\"\n\nThe first order of business was to get a really good producer. We interviewed several, and I'm no expert on producing, but I am pretty good at reading people, and didn't like any of them. We had flown to LA, a town I've never really liked. Eric found an up and comer with a really good record in several decent films as an associate producer. I liked him immediately. He was direct, honest in his expectations of us as clients. I took lead on this interview, so I laid it out to him.\n\n\"I'll be the first to admit we have no clue what we've let ourselves for. This is why money won't be discussed until we find someone we can trust. Can we trust you?\"\n\nProbably a question he never expected to be asked. \"Yes, you can trust me, as far as making the best movie possible within the financial constraints you have. Might not want to loan me ten bucks for lunch though. When I'm totally immersed in a project, things fall by the way. You can ask my wife. I eat, breathe, and live the project. It's even put a strain on our relationship in the past. Too bad she can't work on the project with us, it would make things a lot easier.\"\n\n\"Is she in entertainment also? In front or behind?,\" I asked, meaning which side of the camera. I had a vision of some leading woman wanna be shoving portfolios at us.\n\n\"Behind. She's a screen writer, pretty good one, if I say so myself. Already sold five scripts so far, and she's just on the edge of being really successful. We're working on a series, that she writes while I produce. It's really good, but everybody we've pitched it to wants to take it, and leave us out of the loop.\" He went on to tell of her successes. I'd even seen two. Pretty good stuff.\n\n\"Has she ever adapted a book to the screen?\"\n\n\"No, but she's always wanted to try. Leah is a big sci-fi and fantasy nut, so she leans towards those things. I don't know if you've ever heard of them, but there's a series of books on line about a band of mercenary women, called 'Battle Babes', that she swears would make a great screen saga, or at the very least some very popular cable movies, most likely on HBO or Starz. They seem to love stuff like that. She says she doesn't believe a man wrote them, because of the insights occasionally, and the sex scenes. According to her, no man alive has ever processed emotions that well. \"\n\nEric sat back grinning, and I wondered if he was going to spill the beans, but he didn't. \"Really? I'm one of the few people in the world who can count Rock Stone a friend. Next time I see him I'll bring it up. Don't get your hopes up, he's already been approached twice, and wasn't interested either time. Oh, and he's definitely a guy.\"\n\n\"God, if I tell her that, she'll drive us all crazy. Best not to bring that up in conversation.\"\n\n\"Well, we are looking for a screenwriter. I mean, I wrote the story, but I know diddly all about screen writing. Have your wife come in and talk to us. Give her the story, let her think about it. And Dorian, we're not trying to make something that will win an Oscar for somebody. After all, it's a nod to the B movie genre. So we don't want it to be too good, now do we? You'll have to walk a pretty narrow path here, after all, it will be your first shot as co-executive producer. Your name will be right beside ours in the credits. Give it some thought and get back to us.\"\n\nHe called us back ten days later. \"I'd like to give it a try, if you haven't gotten any one else yet. And my wife is definitely interested. She's done a little work on it, and wants to run it by you. I'm working right now. Eight weeks on an action-adventure. One of those high on car chases and explosion things, and low on actual plot. It's got some major players and a new up and comer in it, though, so maybe it'll get some good press. Let me know.\"\n\nWe got our lawyer to draw up the contract. Our responsibility was coming up with the money. His was everything else, with minimal oversight. Of course, he'd have to hire the associate producers and support staff we needed.\n\nThe meeting with his wife went well, as long as you kept her away from science fiction classics and fantasy movies. The woman knew almost every cheesy B movie by heart, even the old Ed Wood drivel. I thought for a minute she and Eric would slobber over each other. We thought she'd be perfect, once she understood we didn't want War and Peace. And truthfully, we don't really care up to a point how good it was. Oh, we'd like to recoup our investment, but you can never tell. We told ourselves going in it was just a very expensive indulgence, the only real return we expected was memories.\n\nChapter six\n\nMy latest Battle Babe book, Goddess of The Golden Galaxy, was the best selling in the franchise history. Even serious critics commented on it. Ed Silver of Critic's Choice said it was the best erotic romp he'd ever read. \"Whoever Rock Stone really is should consider writing some serious stuff. The love scenes were exciting without being vulgar, erotic tapestries woven with skill and style. Some made my wife blush. And smile. And the unfolding of the interpersonal relationships showed insight into the human condition, revealing more personal details of the main characters than ever before, humanizing them, as it were. If he ever decides to write a romance, Issabella better keep an eye on her rearview mirror, because he'd be coming fast.\" ",
        "I couldn't help but grin when I read that. Maybe it was time for Issabella to get a little more risque.\n\nApparently, making a movie was pretty hard work. We had our producer, our screenwriter, a good lawyer, and a business manager, just to track the money. Leah, the writer, was a joy to work with. She was short, five one, a chunky little ball of fire with cheeks that dimpled when she smiled, flashing blue eyes, and long auburn hair that she usually wore in something I think was supposed to be a ponytail. Her usual attire was skintight jeans and a tee, with a movie logo or book cover on it. And the tees tended to be pretty tight. Sometimes she even wore a bra. \n\nEric was enthralled, and being the horndog he was I warned him off. \"Don't fish in the company pond, Eric. Make a move on her and we lose our producer and screen writer in a flash. Don't you notice how Dorian tends to hover? Go bang one of those bimbette actresses or something and leave her alone.\"\n\nLeah seemed to like me, though. Maybe because I was older, or maybe because I didn't drool when she was around me. Usually, after we got started, we tended to zone anyone else out and work. I liked her approach, and she reworked several things for translation to the screen that I would have never thought of, but worked really well. During breaks, she would tell me a little about their life.\n\n\"We grew up in the industry. Dorian's mother is a sound editor, and his father was one of the most sought after second unit directors around until he died in a car crash. In case you don't know, second unit directors were usually the ones that did all the action scenes, working closely with special effects people and stuntmen. He was one of the best, doing things that scared most directors to death.\n\nMy Mom was one of what I call professional pretty people. She could rock an evening gown, and looks good in a bikini, even now. As an extra, she was in big demand, for party and beach scenes. Even got a few lines in a couple of classics. She still does it. She met my dad on a shoot. My Dad, well, my Dad is Jerry Webber.\"\n\nJerry Webber was a pretty successful comedian a couple of decades back. He did the talk show circuit, even made a few movies himself. He was semi-retired now, and worked primarily in Vegas and Atlantic City.\n\n\"The fame got to him, and he got out of control, drugs and numerous affairs, until Mom just couldn't stand beside him anymore. The divorce shocked him, he thought she'd be there forever. Twelve years now, and he still sends her flowers, gifts, takes he out occasionally, but she hasn't forgiven him. Although since he's been clean for the last five years, I'm detecting a thaw. She kissed his cheek the last time they went out, and he walked right into a wall. Then she kissed his bruise, so he walked into the wall again. They were laughing like mad when they said goodnight.\"\n\nI saw the wistfulness in her eyes, and decided to change the subject. \"Well, honey, I'd say we've about beaten this thing to death. I'm declaring it done, except for the on the fly rewrites you'll have to do as we go. Ready to make a movie?\" She was indeed.\n\nChapter six\n\nWell hell, what was I doing in Canada on a pretty May morning?\n\nWorking, of course. While Eric's enthusiasm had waned when faced with the innumerable things it took to make a movie, I was enjoying the hell out of it. We were in Winnipeg, one of several places we were considering using as home base, and the government officials on all levels were trying to come up with a more enticing way to kiss our asses. Movies are big business in Canada, especially since costs had skyrocketed in the States. Many popular American series are actually filmed here. We were wined, dined, escorted every place we wanted to go. A few offered us extra incentives, anything from drugs to women. We dropped those places pretty quick. Well, Dorian and I did, I think Eric was a little tempted.\n\nTo be honest, if I had known how much work went into a movie, my million bucks would have never left my hands. What was called pre-production was pretty much done, and we were finishing the casting stage now. We had a casting director, and Leah and I tagged along to a few of the 'cattle calls', me just to see what it was like, Leah because she had a certain criteria she wanted met for the leads.\n\nI was amazed at the first two. It was open auditions, and the crowds were tremendous. We'd decided to pretty much cast in country, maybe bring in a few better known character actors, but the bulk would be fresh faces, to Americans, anyway. Some were downright horrible. Some were pretty good. I sat at the table watching Leah and the casting guy compare notes, bored out of my mind, when THEY walked in. I knew who they were instantly. Kathy Kumms and Crimson Red.\n\nNot their real names, of course. They were porn actresses. Pretty good porn actresses. I'd spent many a lonely night after my wife dumped me with one of their videos and a bottle of lotion. They'd made movies hot and heavy for about four years, then disappeared without a trace. I still pulled one up once in a while, because they were so damn hot. Both were on my bucket list.\n\nKathy was a willowy blonde with a nice rack and a killer ass. Besides the smoking hot body, she had a beautiful face and a great smile. Crimson Red was a natural redhead, and unlike most porn actresses, didn't go for the bald look. Her body and looks easily equaled Kathy, and their girl on girl action probably sparked more bi-sexual and lesbian adventures than alcohol, date rape drugs, and Viagra combined. Why the hell were they here?\n\nI flagged down Leah while they were filling out their paperwork. \"See the redhead and the blonde over there?\"\n\nShe giggled. \"Yeah. So did every guy in the room, and most of the women. Why?\"\n\n\"I think I know them, but I'm not sure. The redhead would be perfect for the biologist's sidekick, wouldn't she? And the blonde, put a lab coat and big glasses on her, and she's the biologist, almost exactly the way I described her in the story. Can you get Jerry to have them read before I leave?\"\n\n\"Sure. Jerry had the same thoughts when he saw them. How bad do you want them?\" \n\nI looked at her expression. \"Get your mind out of your panties, girl. I've never interfered with a casting decision yet, and I'm not about to start now. If they can't act, out they go. I just find them...interesting.\"\n\nShe colored a little bit when I spoke, but recovered nicely. \"All right. But tell the truth, you think they're hot! And if the opportunity came up, you'd be all over them.\"\n\nI grinned. \"Faster than you could ever imagine. But let's be clear here. There will be no 'casting couch' decisions on this set. It's one of the reasons we picked Jerry to start with, and why I'm just an observer here. Thinking with your little head leads to some pretty poor decisions, just ask Eric.\"\n\nEric was back in the States, nursing bruises and a cracked rib for screwing somebody's wife. I always told him sooner or later he was going to run into some guy who took marriage vows seriously, whether the wife did or not. I hope it taught him something. There's just too many willing girls who are unattached out there. A few dates, a little attention, most times that was all it took. But then again, it's human nature to desire what you can't have. Never ends well, though.\n\nSo I sat through several readings, spectacularly unimpressed with most. There was one guy who impressed me as the nerd in the story. I saw Leah and Jerry making notes, and knew he'd get a call back. Finally Kathy got to read.\n\nIt was surprisingly good, for a cold reading. She was hoping for a minor part, and was really surprised when they had her read for the biologist. I could see her in her lab coat, lecturing the other characters. Again, judging by the notes, there would be a call back.\n\nThe redhead was quite good, reading for the sidekick part. They were almost done when I asked a question, the first ever in the time I'd been observing.\n\n\"Can you scream?\"\n\nThey looked at me blankly. \"This character does a lot of screaming. We need to know how good her scream is.\"\n\nThe redhead just grinned, drew in a big breath, and let out a scream that sent chills down my spine. I nodded and thanked her, while Jerry and Leah scribbled furiously.\n\nChapter seven\n\nThey got a call back, as well as the guy we thought would be perfect for the nerd, and a few more they thought would be good for minor parts. I made sure to attend. They'd studied the script by then, and both were very good. When I saw Kathy(her real name, Cathy Wiggins)in a lab coat, hair in a bun, large glasses perched on her nose, giving a serious lecture about the discovery of a new breed of bear, I almost believed her. If anything, she was too good. Crimson Red(real name Victoria Cross, like the medal, she'd say) was almost as good, but since a good bit of her dialogue was screaming, it really didn't matter.\n\nWe hired the guy for the nerd part, as well as a number of native actors for bit parts, and the sweat lodge scene. We explained it would involve full nudity, and while a few refused, most were all right with it. It made me realize just how far people were willing to go to get parts. We also hired two more natives for pretty sizable parts, integral to the story.\n\nEric was back, healed, and eager to go. I hoped he'd learned something, but I had my doubts. He was especially keen on Cathy and Tory, as Victoria asked to be called. I knew if he ever found out about their porn background it could get a little sticky. He was also smitten by one of the natives, a cute little woman even more petite than Leah. I got a bad vibe watching him chat her up.\n\nI caught her after he'd left, and asked for a word with Leah and I. I found out she was just barely eighteen, and her name was Sylvia Shining Elk. Her parents thought she was still in school, but she'd dropped out to pursue acting.\n\n\"I just want you to know you already have the part, and you don't have to be in the sweat lodge scene if you don't want to. I know you're of legal age, and can make your own decisions, but I urge you to think about it. You don't want to be labeled, and end up typecast, getting naked native parts and little else.\"\n\nLeah put her hand on her arm. \"He's right. Take it from someone who grew up in this business. Actresses are a dime a dozen, honey, and producers know it. They feed on desperation, and many times the poor girls make decisions that affect their life for years to come. Free advice here. You're good, or you wouldn't have gotten the part. Maybe this will lead to bigger things. But if I were you, I'd continue my education, have something you can fall back on if the parts dry up.\"\n\nShe looked back and forth, trying to judge our sincerity before she let out a sigh and a tear trickled down her cheek. \"Thank you, for the advice and for giving me a choice. I would prefer not to do the nude scene, I'm not to the point in my career that I'm comfortable with it. Let me ask a hypothetical question. If someone connected with the movie, someone pretty high in the food chain suggests that me 'being good' to them would help my career and I refuse, do I still have the job?\"\n\n\"Absolutely. If something like that comes along, tell Dorian, Leah, or me if I'm around. We'll take care of it. Understand?\"\n\nShe nodded shyly, hugged Leah, and left. She looked over at me. \"You need to talk to him. He's letting it go to his head. You're not from this world, but it can be very ugly, especially if you let the power get to you. Producers are like minor Gods, they can have complete control over your career. And sadly, most people bitten with the acting bug, male as well as females, will do just about anything to attain stardom.\"\n\nI looked at her and sighed. \"I don't think I like your world very much. Has it ever happened to you?\"\n\n\"Twice. I lost one job because of it, I managed to finish the second, but I made it clear neither Dorian or I would ever be interested in working with her again. Luckily it didn't affect our careers, she isn't very well thought of.\"\n\nIt was a depressing conversation, so I stopped it, promising to talk to Eric.\n\nChapter seven\n\nI cornered Eric at our hotel, telling him I needed a quick word about possible locations. He let me into his suite, grinning. I got right to the point. \"I talked to Sylvia Shining Elk. Don't deny what you're doing. The poor girl is only eighteen. What were you thinking? And just so you know, there will be no date with her.\"\n\nHe actually got a little pissed at me. \"Listen DAD, what I do with willing females is none of your business.\"\n\n\"You're absolutely right, but I think you've blurred the line on willing. Ease up a little, you're young, good looking, rich, you can get most any woman you want. But you need to be a little more selective. How's the rib?\"\n\nHe touched his side, wincing slightly. \"Still hurts if I bump it. I don't know why he was so pissed, it was only a little sex. I was no threat to him or his marriage.\"\n\n\"I can't believe you said that. She was married, and you knew it. When you get married you make certain promises, promises you're supposed to keep. I can tell you from being on the other side that it hurts. Was the pussy worth the ass kicking you got? Are they still together?\"\n\n\"Separated. She calls me constantly, whining about what we did. Says she still loves him, then asks when we can get together again. He threw her out with nothing. I'm not a complete asshole, so I gave her a little money, paid for an apartment for six months, shit, I'm even paying for the marriage counseling. I eased her down, apologized for messing with her marriage, and thought it best we not see each other until she resolves things with her husband.\"\n\nWell, that earned him points. \"Good. Now back to what I was saying. Stop it. You're putting pressure on those poor girls, whether you mean to or not. Every time you talk to one of them they're wondering if today is the day you make them a proposition.\"\n\n\"What about you? You didn't see at least one of them you wanted?\"\n\n\"I see a bunch of them I want, but I'm not going to make a move on them. When this thing is over, and it's wrapped, I may ask one or two out, but that's months down the road. Besides, I've got Dolly, and she keeps me pretty busy.\"\n\nHe couldn't help but grin. Dolly was the girl he stood up to read the script. I enjoyed her company so much I asked her out again. And again, until finally we settled into a semi-serious relationship. She wasn't quite moved in, but she spent most of her time at my condo.\n\nHer real name was Cindy, and at twenty-four she was way too young for me, but she was intelligent, good looking, and fun to be with. And as a bonus, the sex was really, really good. She had come with me, I'd even gotten her a job as an assistant to the business manager. My one act of nepotism. Not many knew of our relationship, and while I didn't care, it was probably best. She was smitten by the business, was even trying to talk me into paying for acting lessons. When she said that I knew I had a limited shelf life. Reflecting, it didn't bother me as much as I thought it would. I think the experience with my ex had burned me out on permanent relationships. I had made peace with it.\n\nI hoped Eric got the point, as as the days passed I forgot about it. We had pretty much filled all the parts, got everything we needed to go forward. There had even been some filming, which I got to see. It was on an island off the coast. They had gotten a bunch of Polar bears and after dying their ears and paws, turned them loose. I wondered how that managed to happen, until I saw three wildlife agents and a real biologist, there to make sure the bears weren't stressed. I wondered how capturing the bears, tranquilizing them, dyeing their fur, and turning them loose in a strange environment didn't stress them, but kept my mouth shut. They filmed carefully, they were after all very large, very dangerous animals. After three weeks, they declared they had enough footage, and transferred the bears back to their home territory.\n\nIt was confusing to me because the film wasn't shot chronologically. They might spend two days filming scenes that took place in the middle of the movie, a week filming the ending, then spend the next on the beginning. The whole thing was monotonous and boring, sometimes they'd do twenty takes(sometimes twice that) of the same scene. The director we'd hired, on the recommendation of Dorian and Leah, was pretty good. He wasn't a prima donna, but he wasn't all business either. I remembered the interview.\n\n\"I don't know how other directors approach a film, but this is how I do it. I'm like, say, a plumber you hire to fix your pipes. I'm not there to change your whole system, I'm there to fix your problem. If there's a better way I'll suggest it, but in the end it's not my pipes, so I'll do it the way you say. All I can hope for is that it holds water when I'm done.\" \n\nWe interviewed three more, just in case. I wasn't impressed with the first two, and the third was a total nut job. \"IF I agree to do this, I'll want complete control. If I don't like an actor, a cameraman, the scriptwriter, they're gone. I may even change the direction of the movie if I don't like it. No one, absolutely no one, may override one of my decisions. And what you're offering isn't enough, I'll require at least a third more. I also want...\"\n\nHe stopped because I had started laughing. When he asked what I found funny I told him.\n\n\"You. You're the most hilarious thing I've seen in months. Tell me, how do you avoid bumping into things when you walk around with your head so far up your ass? I checked on you, you know. Fired from your last two jobs. If your father wasn't such a powerhouse in the industry, you wouldn't be working at all. You need to get a grip, and realize the world doesn't revolve around you. You're interviewing for a job, dumbass. A job you don't have a chance in hell of getting with that attitude. Have a nice life.\"\n\nHe flew into a rage, threatening to have his father ruin me. I laughed until I had tears streaming down my cheeks. Dorian and Leah, as well as a few others in the room couldn't help it, and laughed along.\n\n\"Think I give a fuck who your father is? This is a vanity project for us. We supply all the money, so we get a big say in things. I probably don't have as much money as your father does, but I'm not broke. And this isn't my world, once this is done I'll walk away from it. So get up and walk your self important ass out of here. We're done.\"\n\nIn the end, we had to have him escorted out. He was still ranting when they left him on the curb. Interestingly enough, I got as call from his father a few days later. There was no preamble, he got right into it. \"I hear you were pretty rough on my boy.\"\n\nI agreed, which I think surprised him. \"Yes I was. He needed a good dose of reality, so I gave it to him. You know, whether you'll admit it or not, that with his attitude he has a limited future. Oh, a few will hire him as a favor maybe, but if he has to stand on his own he'll never get a job.\"\n\nI was kind of shocked when he thanked me. \"I'm glad you did it. Everyone else would have been gentler, because of me. I hope he learned a lesson from it. I refused to do anything when he whined to me, but I did check you guys out. I know how your partner got his money, but there isn't much of a paper trail on you, or how you came by your money. I find that interesting, but see no reason to pursue it.\" What he said next surprised me.\n\n\"When you get done with your little project, give me a call. I have a distribution company, and we might be interested.\"\n\nWell. Never expected that. I told Leah about the conversation and her mouth flew open. \"That would be wild. He's a major player, this would open doors and get us a lot of press, and press translates to dollars.\"",
        "I shrugged. This wasn't my day job. If Leah and Dorian, or the rest of the people working on the project got some mileage out of it, good for them.\n\nChapter eight\n\nI was still writing, after all, it was what I did. My newest Issabella book was taking shape, and I was quite pleased with it. There were a lot more sex scenes this time, in keeping with what the reviewer had said. I was down to the end, and had three directions I wanted to take. Unable to decide, I wrote all three, then I called Leah in. She still didn't know what I did, just accepted I was one of the idle rich, like Eric. Once she told me I wrote well enough to consider it a career, and I just shrugged.\n\n\"I need your word, your absolute bond, that you will tell no one what I'm about to reveal. I'm doing it because I trust you, and need a professional opinion. Do you agree?\"\n\nOf course she agreed. Curiosity was consuming her, and after all, she was a woman. I opened the file. \"I want you to read this. Here. In this room. It doesn't go out of here, understand? It should take about two hours, so if you can't do it now schedule a time you can. And Leah, you can't tell a soul, no one, not even Dorian. Do you agree?\"\n\nShe looked from the screen and back at me several times, but in the end female curiosity got the better of her. \"Now would be good for me. And I promise, not a word.\"\n\n\"Good. I need to see Dorian about a few things, and talk to our business manager. I think it looks like we might go over budget, and I want to make a few adjustments.\"\n\nI left her, and went to my meetings. Two and a half hours later I walked into my suite, to see an almost empty box of tissues, the rest strew across the floor. She looked at me like I was from Mars or something. I just grinned at her and asked what she thought.\n\n\"You really wrote this?\" I nodded, watching her face. \"It's wonderful! I've already got half the screenplay written in my head. It'll make a killer movie. You should publish it. I'm sure somebody will be interested.\"\n\n\"I already have a publisher. I've even got the name I'm going to write under. It'll be a woman's name. Want to know what it is?\" Of course she did.\n\n\"Issabella.\"\n\nHer hands flew to her mouth and her eyes widened. \"Really?\"\n\n\"Yes, really. Remember, you promised not to tell.\"\n\n\"Oh shit, oh wow! Now I know where your money comes from. I gotta tell you, I think the screenwriter on the last movie butchered the script. It could have been a lot better. Does anyone else know?\"\n\n\"Just Eric, and believe it or not, he can keep a secret. And I agree with you about the last movie. If this one goes to the screen, well, I know more about moviemaking now, and I'll retain a lot more control. Know any good screenwriters or producers? Think about it. Now, which ending did you prefer?\"\n\nShe was in her element here, and her response was immediate. \"The middle ending. The first was too strong, the third was too wishy-washy, for lack of a better term. Actually, you should bring in some overtones of both the other endings, for balance.\"\n\nI smiled. It was exactly how I felt, but it was nice to hear it from someone else. I pulled up a fouth file. \"Something like this?\"\n\nIt took her twenty minutes to read. She had tears in her eyes but a smile on her face. \"Damn near perfect. Now I want you to listen to me. If you give anyone else the screenplay, I'll hunt you down, and when I'm done, you'll be a lot closer to a real Issabella, because I'll do some serious damage to your equipment. You hearing me?\"\n\nShe said it with a smile, but the look in her eyes was enough to make me take her at her word. \"Agreed. If I decide to let it go to the screen, you get first option, but only if Dorian is included in the deal.\" The big smile was back, then she frowned.\n\n\"How can I keep this from my husband? He can look me in the face and know something is up.\"\n\n\"All you need to tell him is that I confided a big secret in you, and you can't tell him just now. Then say no more. If he trusts you he'll let it go. When we decide to make the movie, you can tell him.\"\n\nShe left, after I promised her she could have a copy to use for work on the script.\n\nAll the sound stage work was done by now. It was late October. The snow had fallen, so it was time for the location shots. I grinned, thinking about Savanna in her shorts. We had hired her, because with her body shape she was perfect for the part. Jet black, she had a huge rack and a very plump bottom. Tory and Cathy had recommended her, so they let her read. I suspected she had a background in porn, but wasn't sure. I was amazed no one had made the connection, especially in the topless scenes.\n\nWe had found our leading man in Canadian television. He had the rugged good looks and the natural accent we were looking for. He was fine until we were almost done shooting. He was arrogant and demanding more of the focus than the film called for. It got so bad they called me in. Eric didn't like to handle the hard stuff.\n\n\"I hear we've got a problem.\"\n\nHe looked at me, arrogance on his face. \"I think the focus needs to shift to me. After all, I am the leading man. The blonde and the redhead are just window dressing.\"\n\nI sighed. The girls were actually better actors than he was. \"Mr Fielding, you were hired to do a job. You read the script, knew the direction the film was taking. What makes you possibly think we're going to change directions two thirds of the way through? Now, I suggest you do your job, follow directions, and get this thing done. There will be no rewrites, and the script stands, unless I say otherwise. Understand?\"\n\nHe sputtered and fumed, but when I threatened to fire him immediately and reshoot his scenes with another actor, he shut up. He glowered at me though, and I knew I'd have to watch him. His revenge caught me by surprise. He went after Cindy, and got her, making sure I knew.\n\nI decided to follow his script, walking in on them. It didn't hurt me nearly as bad as they expected it to. I knew she was short term. I just sighed.\n\n\"You could have at least had the decency to have not used my bed. Now, your point has been proven, so I suggest you both leave.\" He smirked, enjoying the scene immensely.\n\n\"I don't think I'm done yet,\" he said, reaching for her. She had slid all the way across the bed, huddling under the covers.\n\n\"I think you are,\" I replied, grabbing him by the long hair he was so proud of and dragging him off the bed to his hands and knees. He moaned and cursed as I dragged him along, still on his hands and knees, until we got to the door, kicking him through it to sprawl naked on the floor. I then shut and locked the door. He'd have a bruise or two on his ass tomorrow, I hoped. His room was three floors down. It took him about fifteen minutes of pounding before he realized I wasn't going to open the door. A maid finally felt sorry for him and brought him a robe. A lot of people had seen him, and word spread all over the hotel. At dinner that night there were quite a few giggles and a couple of outright laughs when he walked in. He turned around and went back upstairs, ordering room service.\n\nCindy, well Cindy was sorry. She never meant to, he was just too persuasive, too handsome, she was a little buzzed, a whole host of platitudes and excuses until she ran down.\n\n\"I get it. Doesn't matter, we were probably going to split soon anyway. I just wish you'd have come to me, ended it on good terms. Don't worry, you still have your job, and I won't speak ill of you. But you're moving out of my suite, right now. Get dressed, get packed, and I'll have a room for you by the time you're done.\"\n\nShe started to protest but I shut her down. \"Don't. Leave with a little dignity, don't force me to throw you out, because I will if you push it. What's done is done, and you can't change it. Oh, and it wasn't about you. He could give a shit less about you. This was about me and him, and revenge. I hope he dug two graves, because I'm about to bury him. My advice would be to stay as far away from him as possible in the near future.\"\n\nShe left, and I lay back on the couch, thinking.\n\nThree days later you could hear him screaming all over the set. \"Bullshit! I won't fucking do it. I'll quit first.\"\n\nLeah and I stared at him. She had a small grin on her face. Dorian just sighed. \"If that's how you feel. If you do, it'll be really hard to find work for awhile. No one is gonna hire somebody who quits when a project is three quarters through. It will cost us a little but we can find somebody else and reshoot. We release you. Go home, have a good life.\"\n\nHis face said it all. In his wildest dreams, he never thought we'd tell him to go. \"I'll get a lawyer! I'll sue your ass off!\"\n\n\"Over what?,\" I asked calmly, \"we're not the ones breaking the contract. Rewrites happen all the time. You even suggested it. The director and producers agree with the plot change. You're just an actor, and you have no input into such decisions. Now either go do your job, or leave. Tonight.\"\n\nHe called his agent. He called a lawyer. Both told him the same thing. Suck it up and finish, or suffer the consequences. In the end he stayed because he really had no choice. I made sure I was present when they shot his final scene, him obviously wetting his pants while running from a bear, screaming like a girl. I actually had them dub in a girl screaming to make it more realistic. I felt eyes on me, and looked up to see Cathy. She had a little half grin on her face as she nodded. Later, we met in the meal line. She invited me back to her table with Tory and Savanna. \n\nOf course I went. I hadn't talked to either of them very much, it just seemed I was always doing something else when they shot. They both eyed me coolly, like they were expecting something.\n\nTory finally broke through the idle chitchat. \"You know, don't you?\"\n\n\"I know a lot of things. Which specific thing are you speaking of?\"\n\n\"Oh, he's cute, and clever. Stop pretending, we can see it in your eyes. You know about our past. How come you've never said anything?\"\n\nI shrugged. \"It never came up in a conversation where it was relative to the subject. Yes, I remember you. You and Cathy right away. It took me a while to remember Savanna. Modern Jungle Love is the one I finally remembered.\"\n\nI didn't elaborate. They knew I knew, so it had to be on their minds. Cathy brought her thoughts into the conversation. \"Why did you cast us, knowing our past?\"\n\n\"In the first place, I didn't cast you, the casting director, the scriptwriter, and the producer cast you. I was just an observer. I'm curious though, since it's out in the open. Where have you been? None of you have done porn in at least four years.\"\n\nWe were talking quietly, because we didn't want anyone to hear. Tory suggested we take it up in private, so we decided to meet in one of the hotel conference rooms at nine. It had me wondering what they wanted to talk about.\n\nThey gave us a small room, that even had a fireplace. It had a small conference table, and couches scattered about if you wanted to be a bit less formal. The hotel was old, and had been added on many times over the years, but the core remained, down to fireplaces. I'd asked for and gotten a small bar set up, not knowing what they wanted to drink, of if they even drank at all. I started a fire, for atmosphere.\n\nTo my surprise, when they showed up, they had Dorian, Leah, Savanna, and Eric with them. Eric had just gotten back, he still held his meetings, watching his money, as he put it. I raised an eyebrow. Cathy shrugged. \"Dorian was telling me about a project he has coming up, and that there might be a part in it for me or Tory, or both. We both wanted to tell him the truth, see if he still wants us. He has no secrets from Leah, and Eric deserves to know because of his investment. But first, let's relax for a bit.\"\n\nI knew she wanted a little alcohol in them to soften the news, so I started mixing drinks. After about an hour, we all ended up sitting at the small conference table. Tory took the lead.\n\n\"I'm about to tell you some things you might not want to hear. Dorian, I'll understand if you don't want us with you on your next film when we're done. Savanna, Cathy, and I all have a film background. I can't speak for Savanna, but Cathy and I have made forty-three films together.\"\n\n\"I don't understand,\" said Dorian. \"Forty-three films? Why don't I remember you?\"\n\n\"Because they were all porn films, honey,\" Cathy explained, \"and it's been over four years since our last one. What you have before you are three verified porn stars. Look us up, we're on the internet. Our residuals are actually pretty good. But you need to understand, we haven't, Tory and I anyway, done that for years.\"\n\nThere was absolute silence in the room. Everyone seemed shocked, with the exception of Leah. I knew instantly she'd known or they had told her at some point. I watched Cathy, and while she didn't seemed ashamed, she didn't look happy either. Dorian wondered out loud if it would affect the movie.\n\n\"Of course it will,\" I said, grinning, \"think I'll be the only one in the universe who recognizes them? But you know what? They did a good job in their roles. I think it will add a new dimension to the film. A little notoriety can be a good thing. A certain segment of the audience will want to watch just because of them. That's perfect for a B movie. Press is press.\"\n\nTory looked up sharply. \"You're going to exploit our past for the movie?\"\n\n\"Not at all, but we'll probably end up exploiting your present. I can speak for everyone when I tell you the knowledge won't leave this room if you ask. But like I said, people will recognize you, guys my age anyway. If you weren't prepared for that, you shouldn't have taken the roles.\"\n\nCathy put a hand on her arm, more of a little caress. \"Calm down, honey. We talked about just this type of situation before we decided to do this. Who cares if they figure out who we were?\"\n\nI noted the caress and smiled. It verified what I suspected. They were a couple. That explained why they shot down all the people who had hit on them for the last few months. She caught my smile.\n\n\"That's right, Will. I see you get it. We're in a serious relationship, have been since the porn days. Problem with that?\"\n\nIt was said with a firmness that brooked no argument. \"Why should it? I don't recall if we asked when you interviewed for the part if you were in a relationship with anyone. Like everyone else involved, what happens outside the set isn't my concern. Nor is it anyone else's in this room. But tell me, why come out now?\"\n\nTory answered. \"Because you were good to us. You, at least, never hit on us(she gave a sharp look to Eric, who just grinned)or offered to expose us. You needed to know this before the film was released, to be prepared for the press we'll probably get. Of course, you can edit us out, get new actresses, and reshoot.\"\n\n\"The film is almost in the can. We're not going to the expense of hiring new actresses and refilming. You stay in.\" Everyone looked at Leah, surprised by her statement. \"Like Will said, it will get the film attention whether we want it of not. Best to be on top of it. You may have to do interviews to pitch it, are you up for that? If not, we'll spin it as respect for your privacy, which is what it will be. It'll add a little mystery to the film. Like he said, press is press.\"\n\nThey looked thoughtful for a second, before Savanna spoke. \"Screw it. In the unlikely event we get interviewed, we'll talk about the film and nothing else. Now, let's do some serious drinking.\"\n\nSo we did.\n\nChapter eight\n\nWe were still sitting around the conference table, bottles piled in front of us. I'd chosen straight rye, my favorite, and while everyone else proceeded to get blasted, I just sipped. The conversation went all over the place, until it finally came to romance. Dorian and Leah told how they got together. Savanna was between relationships, and she and Eric ended up beside each other, flirting lightly. Now that they had come clean, Cathy and Tory gave each other loving touches, even kissing a few times. Inevitably, they got around to me.\n\n\"Sorry about Cindy.\" Tory was talking, watching me closely. I shrugged.\n\n\"I'll miss her, she was a lot of fun, and was a great dancer. But she was just too young for me, and except for sex and dancing, we really didn't share many interests. I knew I had an expiration date going in, I just didn't expect it to be so soon.\"\n\nCathy wanted to know why I became involved if I knew it wasn't going to last. \"She was fun. Capable of holding a conversation. And she was a tiger in bed. I wasn't looking for anything else.\"\n\n\"No serious relationships in your past?\"\n\n\"A wife, years ago. She left me for a man with more money, wanting the high life, I think. Called me a loser and said I'd never amount to anything in this life. It kind of soured me on anything permanent.\" I looked around the room, at the three couples, Dorian and Leah, snuggled together, Eric and Savanna lightly touching, Tory and Cathy sitting so close Tory was almost on her lap. I was the odd man out. With that thought I prepared to leave.\n\nTory grinned. \"I think she may have miscalculated in this case. I don't know exactly what you do, but you seem successful at it. What do you do beside writing stories that turn into films?\"\n\nI was deciding how to answer that when Eric spoke up. \"He's a real life Wizard.\" Nobody understood what he was talking about, and I gave him a warning look, that he completely ignored.\n\n\"A wizard? Really? What kind of magic does he do?\" This from Leah, grinning. I had the feeling I was about to be outted.\n\n\"He's a Wordweaver.\" Eric was smirking while I shot another dirty look at him.\n\n\"Words? How do you weave words?\" This from a buzzed Savanna.\n\n\"Oh, he sings songs of seduction. I've seen him work. it's awesome.\"\n\n\"Eric! Enough!\" But it was too late. Cathy looked at me, a slight smirk on her face.\n\n\"Really? Sing us a song of seduction, Wizard. See if you can impress us.\"\n\nI was a little pissed by now, a little buzzed, so I looked them up and down, starting with Leah. \"The pixie smiled, working her charms on the man of her dreams. A tiny wood nymph, oozing sensuality as she seduces her chosen one. Her petite frame is designed to entice, her attributes making the man weak with desire. Tiny nipples, sitting high on her chest, hardened beacons of her intent. Her body was firm, vibrating with arousal, as she teased her prospective mate.\" \n\nLeah, of course, wasn't wearing a bra, and her nipples popped straight out while she flushed. Unconsciously, she stuck her chest out, making the nipples more prominent. I continued, in the crooning voice I had used on the Goddess.\n\n\"The man, overcome with desire he can't understand, stands before her. Right now, in this moment, he would do anything she asked, his desire to worship her exceeding all reason. He touches her, and the feeling courses through his body. He must have her. Now.\"\n\n\"The pixie smiles, knowing her magic has worked. She guides him down to the moss in the glen, dropping her simple covering, exposing the nubile, toned body. The breasts firm and as beautiful as he suspected. Her tiny waist flares out into generous hips, the tangle of sparse pubic hair visible between her legs, the lips swollen and leaking with arousal. She mounts him, not in dominance, but love, and rides him to a crashing climax, before rolling over, offering him her body in the classic position, submissive but still in control. The man moves with an urgency he'd never felt before. The forest stills, the birds and animals at some level realizing what they were witnessing, before bursting forth in songs of joy, knowing that a new life had been created, as the man slows, and then falls beside the pixie, who gazes at him with loving eyes, knowing he is now hers.\"",
        "Leah had a glazed look in her eyes, flushing in waves, the color going from deep red to bright pink. She was snuggled tightly against her husband. Judging form their positions, I knew they were fondling each other under the table. I looked at Savanna and Eric, eyes wide at what they'd witnessed.\n\n\"The explorer stood before her, a Nubian fertility goddess, made flesh. Her pendulous breasts, badges of femininity and motherhood. Her wide hips, indicators of her child bearing capabilities, sway gently as she walked towards him, the curly tangles of her silky pubic hairs glistening. She reaches for him, words still unspoken, and pulls him to her. She feels the stirrings of his desire, and he feels the soft breasts against his chest, aching to be filled with the milk of life.\n\nThe contrast of skin tones heighten their arousal. She tugs at his clothing, and he tries frantically to rip them off. Finally exposed, they fondle each other, committing the feel to memory, implanting it on their genetic makeup. She drops to her hands and knees, looking back over her shoulder, her eyes begging him to take her. They do not make love. They mate, rutting together with intensity and purpose. She screams while he grunts, racing towards his finish, unable to stop. With one last scream, she drops her head down, leaving her hips in the air to better receive his seed, while he collapses over her, spent. They stay this way for a few minutes, until she slowly starts undulating her hips, the muscles of her core caressing him softly, until he is ready, and they mate again, more slowly, enjoying the sensations, affirming an unspoken commitment to each other.\"\n\nSavanna is breathing raggedly, wiggling in her chair. When Eric reaches for her she flies into his arms, almost upsetting both their chairs. They start kissing and fondling, in seeming desperation.\n\nFinally, I looked at Cathy and Tory, their eyes almost begging for their story.\n\n\"They stand before each other, stunning symbols of sapphic beauty, fire and sun. Their bodies are perfect, the crimson haired temptress, with fire above and below, the blonde, outshining the disc in their sky. The flames of their passion burn brightly. Even though they know the body before them in intimate detail, it still manages to arouse, knowing the delights it holds. They love each other, not for procreation, but for the beauty of the act. Mortal men, seeing them, weep with frustration and desire, knowing such beauty is denied them. They lie, together, in passion and afterglow, clinging to each other, united to the world.\"\n\nEvery nipple in the room was prominently displayed. The glazed looks and passionate moans told me my work here was done. Damn Eric, anyway. I stood, and walked to the door.\n\nCathy broke from a deep kiss, looking at me oddly.\n\n\"What about the Wizard?\"\n\n\"Alas, the Wizard has no mate. Perhaps it is his destiny to walk this path alone. Good night, my children. Passionate dreams.\"\n\nI went down to the bar still in full Wizard mode, and forty-five minutes later I had a young beauty in my suite. I was careful to pull someone not associated with the movie. Inspired by the events of the night, we didn't stop until almost three. I have to admit as I pounded her I imagined in turn a blonde, a redhead, an auburn haired nymph, and an ebony goddess in my head.\n\nChapter nine\n\nLeah jumped me at breakfast. \"How do you do that?\"\n\n\"Do what?\"\n\n\"You know, what you did last night. It was almost an orgy after you left. Dorian had my shirt off, Eric and Savanna were on the couch fucking in front of all of us, and it was all Cathy and Tory could do to stay clothed long enough to make it to their room. I came to my senses long enough to get my shirt back on and tug Dorian to our room. My shirt was off again before we made it, and I led him inside by his dick. Some little old lady got an eyefull last night.\"\n\nShe giggled at the memory. \"He still isn't up yet. Poor baby, I just couldn't seem to leave him alone. I haven't told you, but we're trying for a baby. It's been six months and nothing, but if I'm not pregnant after last night, I don't think I ever will be. If it's a boy, his middle name will be William.\"\n\n\"I thank you for the compliment. How do I do it? No idea. It came to me after my wife left me, in one of my darkest times. I decided to see if I could seduce someone with just words, with no physical touch at all, and I tried it in a bar one night. I was amazed when not one, but two women shared my bed that night. I've only done it three times since then, and unfortunately, Eric got to witness it once.\"\n\nCathy and Tory came in, and I stood as they approached the table, seating them before I returned to my breakfast.\n\n\"Mah, mah, Ah declare, a man with manners. Good morning to you, sugah, sleep well?\" I grinned at Cathy's faked southern accent, before returning it in kind with my real one.\n\n\"Like a rock, ma'am,\" I said mournfully, my accent genuine, \"all alone in my big ol' bed, pining for what I'll never have.\"\n\nTory snorted. \"It might have been a big ol' bed, but I'm pretty sure you weren't in it alone. A little birdie told me the Wizard paid a visit to the bar, and charmed a sweet young thing out of her clothes and into that bed.\"\n\nI shrugged. \"Even a wizard has needs.\"\n\n\"Well Wizard, the next time you feel 'need', look us up. For such a magnificent specimen of manhood as yourself, we're willing to share, as long as we each get a turn.\" Cathy batted her eyes outrageously as she spoke.\n\nLeah listened to the verbal sparring, hanging on every word. Why did I feel like it was going to show up in a screenplay somewhere? \"Well, that's a very attractive offer. Very attractive indeed. But to give a mortal a taste of heaven, and then take it away from him, would destroy him. I'm sure I'd never be the same again, a mere shell of what I once was. And as I said last night, I don't interfere in relationships.\"\n\nTory smiled, \"oh, for the right person, you'd find our relationship very open. You might be what we're looking for, a permanent partner, someone to balance us out.\"\n\nI had the feeling she was semi-serious, which made me very nervous, but I continued our banter. \"You'd wish an early death on me? There is no way I could keep up with one of you beauties. Two? I'd look like I was sixty in a year, dead the year after. But you know what, it would probably be worth it.\"\n\nThey both glowed. Cathy licked her lips, slowly, flicking her tongue out. \" I do believe we'd be gentle on you for a little while. After all, we have each other if you're not up to it.\"\n\nI rose, grinning, my breakfast finished. \"You'll have to excuse me. Recent events have left me quite faint. I think I need to lie down. Leah, best of luck.\" I kissed her cheek and started to leave.\n\nTwo steps away, I was called back. Cathy offered me her cheek. \"I feel slighted, as does Tory. Kiss!\"\n\nI started to kiss her cheek when she suddenly turned, grabbed my head, and gave me a full on kiss, holding it for several seconds. She licked her lips and grinned at Tory. \"Potential,\" she said.\n\n\"If you don't mind, I'll judge for myself,\" Victoria said with a grin. Her kiss seemed longer, her tongue knocking at my door, wanting to be let in. Going with the flow, I returned it, far longer and deeper than she expected. She was breathing heavily and her face was flushed, her lips still puckered, when I pulled back. The other girls looked on in amazement while she recovered. I was again two steps away when she gathered enough breath to speak. \"Definite potential.\"\n\nI was almost out of the room when Cathy called out. \"You owe me a better kiss, Wizard! And I always collect on a debt.\"\n\nI turned, bowing deeply. \"At your convenience, Princess.\" I'm sure the dining room buzzed when I left, we weren't exactly quiet, or discrete.\n\nBack in my suite, I got my laptop and started scribbling notes, working on some new plot ideas for my mystery series. Eric staggered in, looking like a wrung out dishrag.\n\n\"Rough night?,\" I asked, grinning.\n\n\"I think I'm in love.\" I just rolled my eyes. he thought he was in love every time a woman impressed him in bed.\n\n\"I mean it, Will. The woman had skills, I kid you not. But it wasn't that. I felt like our souls connected.\"\n\nThis was new. I'd never heard him say anything near that before.\n\n\"Stop and think, Eric. You don't know the woman at all. I don't want to hurt your feelings here, but consider it. She was in serious heat, just like you, and you were available. Don't make it more than it was.\"\n\nHe seemed offended, somehow. \"Well, I'm going to see where it takes me.\"\n\nI just nodded.\n\nChapter nine\n\nThe movie was in the can. One year, almost, of my life, but it was worth it. I'd learned a lot, deciding I really liked the movie business. So did Eric. We were seriously considering doing something else, if we could find the right project.\n\nAs it wound down, Eric and Savanna grew closer. Six weeks after the conference room incident, Leah rushed in, smothering me with kisses and hugs, crying hysterically. Unable to talk, she held something up. An early pregnancy test, showing positive. Cathy and Tory were still hanging around, even though their parts were long completed, and for some reason they were always nearby. They pulled her off me, doing a little three way dance, tears pouring from all of them.\n\nWhen they calmed down, I caught Tory and Cathy looking at me like they were judging a bull for breeding purposes. It made me very, very nervous. I asked them if they didn't need to go home to their day jobs. They laughed.\n\n\"Honey(they seemed to enjoy calling me that)we started doing porn when I was nineteen and Tory was twenty. We were broke, no prospect for furthering our education, looking at low end, minimum wage jobs for the rest of our lives. The best we could hope for was marrying well, an option that didn't appeal to us. We actually went into porn on a calculated risk. We hated it, crying on each other. I actually threw up for the first three films. But we toughened up, and watched everything, saving our money. After the second year, we not only starred in our films, we produced and distributed them. We made one about every three to four weeks, and netted about twenty-five grand off every one. When we made what we needed, we quit, cold turkey. Since then, we've both gotten degrees, mine in economics, hers in business. We had moved up here, where we weren't so well known, and got jobs in our fields. We're both worth about a million two, and our return on investments exceed our needs. So right now, we've decided to be ladies of leisure. As a hobby, we've decided to take up hunting.\"\n\nI couldn't see them with guns, so I asked what they were hunting. \"You'll know soon enough. When we bag him, we'll mount him while he stuffs us. What do you think?\"\n\n\"I think you need to think this through. You obviously love each other. Why would you take the chance of messing that up? What could another partner give you that you you don't already have?\"\n\n\"Babies,\" said Tory, a faraway look in her eyes.\n\n\"Yeah, honey, our little clocks are ticking. Tick-tock, tick-tock.\" Cathy was enjoying the look on my face.\n\n\"You know you don't have to actually have a partner to have a baby nowadays, why not take that route?\"\n\n\"Because, HONEY, our babies need to know their father. We don't want any random sperm. We want yours. There. We've said it. We'd like you to consider a relationship, hopefully permanent, with us.\"\n\nI'd known it was coming. I was a little dense sometimes whem it came to women, but not that dense. I still couldn't understand why, why me of all people. Oh, I was personable, not repulsive to look at, had a really nice bank account(though I doubted they knew how much), but really, why me? Curiosity got me, and I surprised them.\n\n\"All right, let's get to know each other better. How about a date? Tonight, in the hotel ballroom. They've got a really good band tonight, feel up to a little dancing? Before you say yes, consider this. It's a date, not a commitment. Goodnight kisses are expected, but there will be no sex. Understood? This is a get to know you date, not a get to know you biblically date.\"\n\nThey looked at each other, a nonverbal discussion going on between them. Tory finally looked at me. \"We'd love to go out with you tonight, honey. What time should we be ready? Dress code? We want to look our absolute best for you, honey.\" Cathy just nodded agreement.\n\nI wished they would stop the honey stuff. It made me uncomfortable. The whole thing made me uncomfortable. I'd looked polygamy up. It seemed all kinds of unfair for the women in the relationship. But then again, all that was based on the presumption that the women weren't bi-sexual. Still having a hard time with the concept of two wives, at the same time, though.\n\n\"Seven. Nice dresses, and we'll meet here in the restaurant. After a light meal, we'll stroll across to the ballroom. Wear comfortable shoes, I like to dance.\"\n\nThey squealed and rained kisses on my cheeks, before pulling back. Cathy tugged on Tory's arm. \"Come on girl. We need to hit the spa, the salon, a shop or two for the perfect dresses. We need to look absolutely stunning for our date. Maybe we can entice him into more than a good night kiss.\" They strolled off arm in arm, chattering happily. Leah just sat and grinned at me.\n\n\"What?\"\n\n\"You don't have a chance, you know? May as well stop fighting it. I don't understand you at all. Two of the most beautiful women I've ever seen throw themselves at you, and you keep putting them off. Why?\"\n\n\"Because, Leah, there's two of them. And they already have a firm relationship going back years. Why would they risk that? What if one of them decides they want me exclusively, or I care for one of them more than the other? The whole thing could get pretty sticky pretty quick. I don't know if I need that kind of headache in my life right now.\"\n\n\"Your ex must have done a number on you. All these years later, and you're still scared of commitment. Don't deny it, I've been around you long enough to see it. Turn it loose, Will. It does you no good. You've got a lot of love in you, time for you to pick someone and share it. If not the girls, someone else. Every woman you meet is not out to stab you in the back. Now if you'll excuse me, I'm joining the girls. I'd like to look really special for my man tonight.\" \n\nSo I took my Cinderellas to the ball.\n\nStunning was the only description that came to mind when I met them that evening. Tory was in a black sheath, hair elaborately done in loose ringlets. Cathy had chosen the same dress in white, her almost platinum mane in an artful bun. There were glimpses of long shapely legs and hints of cleavage, nothing overt, and all in all they were very nice packages. I told them so, honestly and without embellishment. They seemed to glow under the praise. Dinner was light, and we shared one bottle of wine, not a lot of alcohol for three people. This was deliberate, one tended not to dance as well on a full stomach or a surplus of alcohol.\n\nWe strolled into the ballroom, the girls on my arms, and almost stopped the dance as everyone inspected us. Leah and Dorian were there, as well as Eric and Savanna, and they waved us over to their table. I would have preferred a table alone, but the girls seemed to want to join them, so we did. The girls oohed and aahed over their respective gowns, trading air kisses to avoid damaging the makeup. The guys just grinned at each other.\n\nLeah, out of her jeans and tee shirt for the first time since I'd met her, looked great in her tight, short red dress, the auburn hair seeming to glow in the lighting. She was quite the little package. When I praised her she flushed a little, before grinning. \"The girls helped me pick it out. I hardly ever wear a dress, but I wanted to look my best for hubby tonight. I want him to keep this image in mind when I look like a beached whale, waddling like a duck when I move.\"\n\n\"He won't be able to keep his hands off you, baby. Besides being the love of his life, you'll now be the mother of his child. Nothing makes a woman sexier.\" I told her this quietly, and she surprised me by hugging me as a tear slid down her cheek.\n\nShe touched my cheek in a loving manner, completely devoid of sexual overtones. \"You're going to be a very handsome godfather, if you'll consent to it.\"\n\nIt was my turn to get emotional. I'd never been close enough to anyone to ever have considered it, and looking in my heart, all I could feel was pride that they had chosen me. \"I'd love to, baby, but only if I can fulfill the role in every sense of the term. If I do this, I'm part of your lives from now on, understand?\"\n\nThe tears did come then, and they whisked her off the bathroom for makeup repair. \"What did you say to her, Wizard?,\" asked Dorian, so I told him. He seemed to have a little moisture in his eyes when I was done. My unofficial name in our little group now was Wizard. He hadn't made another appearance since that night, and that was the way I liked it.\n\nThe girls returned, looking fabulous as before, and smothered me with enough kisses that I had four different colors of lipgloss on my cheeks. Tory and Cathy cooed as they cleaned me off, then planted another kiss on each cheek, the gloss visible. \"Don't even think about wiping it off,\" grinned Tory, \"we're marking our territory.\"\n\nI had no reply to that, so we danced. The band was a eclectic blend of celtic and jazz, fiddles, accordions, trumpets, saxophones, keyboards, guitars, and percussion. I thought they sounded great. They were semi-regulars, and attracted an older crowd, because they played a lot of waltzes. I handed the girls a coin. They looked at me with curiosity in their eyes.\n\n\"I won't choose one over the other. So, the winner of the flip gets the first dance.\" Tory won, and I twirled her out on the floor. She moved easily, matching me perfectly, and she felt great in my arms. she started to talk, and I stopped her. \"No talking. Just enjoy the dance.\" I may have nuzzled her neck a little, but it was just incidental. Made her glow a little, anyway. I escorted her back to the table, offering my hand to Cathy. She rose gracefully, and fit into my arms as well as Tory. I did the same to her, telling her to just enjoy the dance without the distraction of words.\n\nI had bribed the band, giving the same amount the hotel was paying them, telling them to go heavy on the waltzes. They were more than happy to comply. At the end of the first break, the bandleader gave me a nod. I slipped on stage and took the proferred microphone.\n\n\"Ladies and gentlemen, this is a special occasion. Two dear friends of ours learned just today they were about to be first time parents. Please, if you would, let them have this dance, in celebration of this milestone in their lives.\"\n\nThe crowd applauded, and I led Dorian and Leah out on the floor. The band started a slow waltz, the female singer crooning in French as a single spotlight hit the couple. For four minutes they swayed across the floor, while Leah sobbed in happiness. The crowd applauded wildly as the last notes lingered. Leah jumped into my lap, still crying, raining kisses all over me while Dorian grinned. \"Thanks, Wizard. You really are magic.\" I just nodded at him, close to my own tears. \n\nI glanced at the girls, and the looks they were giving me were almost primal. I made sure I danced exactly the same number of times with each of them, which I'm pretty sure they noted. On the odd occasion I danced with Leah and Savanna, they took the opportunity to dance with each other. It was really erotic to watch them sway together, sharing small kisses now and then. \n\nI happened to notice an older couple, sixties at least, sitting near us. He had on a nice suit, but she was dressed to the nines, her white hair shining in the lighting. She sat, holding his hand, tapping her feet to the music. Her husband, unfortunately, was in a wheelchair. The girls were taking a bathroom break, so I took a chance and walked over.",
        "\"Sir, if you would permit, may I have a dance with your wife?\" His eyes widened in surprise, then a small smile appeared as he nodded his assent. I bowed slightly, offering my hand. \"Madam, would you honor me?\"\n\nHer eyes were shining as she rose, saying something softly to her husband, in French. She was an excellent dancer, light as a feather. I danced her near the bandstand, making a swirling motion behind her back to the bandleader, and he nodded slightly. They played for eight minutes. Her eyes were glistening, as she rested her head on my shoulder. After the dance I walked her back to her table, bowed and kissed her hand. Then I shook hands with the husband, thanking him.\n\nEveryone at the table was staring at me when I returned to the table. \"The Wizard strikes again!,\" said Eric, a note of envy in his voice. The girls didn't notice, but Dorian looked at me with a raised eyebrow. I just shrugged.\n\n\"They looked like a nice couple. She wanted to dance, and he couldn't. I took a chance, trying to bring a little happiness into their lives.\"\n\nThe girls all approved, and Leah made Dorian ask the lady for a dance. She accepted, after her husband approved. After that, it seemed she had a line of dance partners, if she wanted. I went back to dancing with my girls exclusively. It just seemed the thing to do.\n\nWe danced until the ballroom closed at midnight. We strolled to their room, one on each arm. When we reached the door I gave them the coin again. Cathy won, so I kissed her first. And I mean REALLY kissed her, holding nothing back. When I let go she was panting. Before anyone could speak I grabbed Tory and gave her exactly the same. When I let go I stepped back, thanked them for the evening, and walked away. It was enough, this time.\n\nChapter ten\n\nSo the seduction dance began. We went to events, went skiing, sat in the living room of my suite and snuggled. The kisses got more intense, the suggestions more erotic. It came to a head one night, after I'd been gone on business for three days. They wanted to go with me, but I told them I needed to focus, and couldn't seem to focus on anything else when they were near. It was exactly the right thing to say, because they smiled and told me they'd be waiting.\n\nThere was a knock on my door. Cathy walked in when I opened it, carrying a small bag. I raised an eyebrow in question.\n\n\"I won the toss, so I'm going to be with you tonight. Tory will get you tomorrow. We didn't think it would be a good idea for both of us at once, so we came up with this. Now change, we're going out tonight.\"\n\n\"Do I get any say in this?\"\n\nShe shrugged, \"Yes and no. Decision time here. You can say no, and I'll leave, get Tory, and we'll be out of your life completely. You can say yes, and have two women who love you, forever, if we have anything to do with it. Choose now.\"\n\nI looked at her, almost dancing with nervousness. \n\n\"Where are we going tonight?\"\n\nShe actually screamed before diving into my arms, starting a hot makeout session that must have lasted fifteen minutes. We ended up caressing body parts, on the couch, until she forced herself back, panting.\n\n\"If it was up to me, the only place we'd go would be the bedroom. But I put a lot of planning into this, so get dressed. Put on your heaviest clothes, we're going to be outside.\"\n\nShe wouldn't say anymore, so I bundled up, and followed her. A hot air balloon, with an enclosed basket, sat on an unused parking lot. She hustled us in, and the operator took us up around a thousand feet. We could see the ski slopes to the east, still lit as people made their final runs. The hotel and the small town lay below us, spread out like toys, lights twinkling. But to the North, the lights seemed to dance and writhe, changing colors and shape constantly. I watched, amazed.\n\n\"I brought you up here for a reason, honey. This is an allegory as to what our lives will be. Soaring above the average, clear skies and bright lights. Beacons of our contentment, forever.\"\n\nThen she kissed me. Not a physical connection kiss, but a soul kiss. And if you don't know the difference, you've never been in love. She had me and knew it when she stopped us.\n\n\"I'm so hot right now if Pierre wasn't here I'd start a new style of mile high club.\"\n\nPierre, of course heard us and grinned. \"It is not uncommon, madame. If you wish, I can face away from you, and I have sound dampening earphones.\"\n\nTempted, we declined. Even enclosed, with a small heater going, it was still below freezing. We opted for a nice, big, comfortable bed instead.\n\nI knew her past, she knew I knew her past. It didn't matter to me. That was then, and this was right now. I had some small skill, and I did my very best to make it enjoyable and memorable. Her body was exactly the right combination of softness and tone. I started out by kissing every square inch of her body, starting at her toes, missing the good parts until I reached the top of her head, before going back down. I worshiped her breasts and nipples, kissing and biting, leaving a small bruise her and there. I kissed across her stomach, feeling it contract at every point my lips landed. Reaching the gates of heaven, I put everything I'd ever learned about pleasing a woman orally to use, until she had three orgasms, screaming through the first, whimpering through the last. Rising up after the last one, I slid into her before she could react, bottoming in one smooth motion, and her body convulsed with another small orgasm. I stroked slowly, savoring the feeling, until she came down a little. Then I rolled her over, pulled her to her hands and knees, and pumped furiously, gripping her hips savagely. I rolled us over again, pulling her upright. She bounced, she ground, she rotated her hips in small circles, until I couldn't hold back anymore. She tossed her head back and howled as I released, achieving her own climax at the same time. She collapsed on my chest. I felt the tears, but wisely remained silent. Finally she drew herself up, looking me in the eye.\n\n\"I knew. I KNEW! I told Tory six months ago you were the man we were looking for. I don't think she believed me at first, but the night you took us dancing sealed it. We've been looking for you for years, honey. We weren't interested in a same sex relationship when we were younger, but having to do it for the porn films changed our outlook. And the men we were around at the time had very little interest in love, they just wanted to get on, get off, and leave, unless it was to hang around to degrade and abuse us. \n\nWhen we got out of the industry, we swore off men, and sex in general. But we were young, and still full of hormones, so we used each other as an outlet. Need turned to love, and I can't imagine our lives without each other. But we felt something was missing, and it took us a couple of years to figure it out. We wanted, no, we needed, a man. A man with enough confidence to love us both. We had a prospect two years ago, but it turned out badly. We'd given up until we decided to do this film and met you.\"\n\nShe laughed, a musical sound, while she arched sensually against me. \"In the end though, we got lucky. We didn't find a man, we found a Wizard. He has charmed us with his spells, and we are his willing thralls.\"\n\nFor the first time that night I felt uncomfortable. \"I wish you would get over this wizard nonsense. I'm just a man, with all his frailties.\"\n\nShe kissed me, a slow sensuous duel of lips and tongue. \"You ARE a wizard, honey. Whether you know it or not, you have power. Power to look inside a person, see the goodness within, and find a way to draw it out. You ask any person who worked on the movie, and almost all will say the best part was meeting you. Sylvia Shining Elk and all the native actors know how honorable you were in your treatment of them. And the myths of the wizard reached their ears. In their culture you'd be an honored shaman if nothing else. The best part is you let your power lay dormant until it's needed, then bring it forth like a beacon. So, it matters little if you admit it, but you are what you are. It's part of the reason we fell in love with you.\"\n\nI couldn't think of a good argument for that. In fact, while she talked her hands had been busy, and I had risen to the occasion once again. She giggled. \"See, you truly are a wizard, because you have a magic wand!\" It was slower this time. We explored, established likes and dislikes, noting them as we went. It felt like we were at it for hours, but it had only been about twenty minutes before physical need surged to the front, and we pounded each other for release. She gave a keening moan as she orgasmed, while the intensity had rendered me speechless.\n\nShe fell against me, snuggling like a giant cat until she found the perfect position. \"Honey,\" she said drowsily, \"I lo...\" And just like that, she was asleep. I held her, stroking her magnificent mane, for a long time, before I finally drifted off.\n\nChapter eleven\n\nI woke, alone in my bed, reaching for what wasn't there. I found a note on her pillow instead. I opened it, wondering if it was a good bye letter.\n\n\"My honey,\n\nPlease forgive me for leaving before you awoke. I spent a good bit of time this morning, thinking about last night while I watched you sleep. Even in slumber you have power, I wanted nothing more than to lie back down, and wake you as you deserved. Then I realized I needed to process the night before. It was almost too perfect. People don't get love like this in real life. But I did, and I treasure it. And more than anything else in my life, I want to keep it. You won't see me today. Our other third will claim your time tonight, then sometime in the morning I'll be joining you, if I'm still welcome. I love you. Understand? I. LOVE. YOU! Please treat her as you did me this evening.\n\nCathy\"\n\nI sat up, holding the note. My life had taken on the unreality of a romance novel. Looking at the clock, I noticed I slept two and a half hours later than normal, and I was craving coffee badly. Showered, dressed, and out the door, I made my way to the dining room. It was almost deserted this time of morning, but Leah was sitting there, sipping coffee, looking over some notes. We could have all left weeks ago, but there was just something about the place that held us. She said it was because it had real seasons, unlike L A. She and Dorian were thinking seriously about moving, for the health of the baby. They could live anywhere, and travel for work.\n\nShe grinned when I sat down opposite her.\n\n\"Get a good nights' sleep? Never mind, you don't have to answer that. Cathy drifted in here this morning like a party balloon that had slipped the string. The girl was floating! She hugged Tory and then cried for about ten minutes. After a minute Tory was crying. I'm hormonal as hell right now, so I cried with them, and I didn't even know why.\"\n\n\"You need to get your rest. Tory has high expectations for tonight. if you don't perform as well for her, she'll be crushed. I'd ask for details, but I know you wouldn't tell. I need a favor. If you will, let Dorian follow you around sometimes, maybe some of your magic will rub off on him.\"\n\nHer eyes told me she was joking, and I tried to look solemn when I agreed. She changed the subject, asking me if after the next few days she could show me what she had on adapting the new Issabella novel to screen. We set a meeting for Monday.\n\nTory didn't even knock, she just opened the door and walked in, gave me a kiss that should have stopped time, and stepped back. \"Get dressed, and bundle up. We'll be outside for a while.\"\n\nWe walked a bit, and I trailed a little behind. Even in a huge, fur lined parka, it was still a great bottom to watch. She looked back, smiling, and put a little extra sway in.\n\nShe led me to an honest to God, right out of the movies, reindeer pulled sleigh. Four of them, with bells on their harness. We got in the back and snuggled under the heavy quilts, and the driver cracked his whip. The sleigh seemed to glide over the snow like it was a feather, the occasional jingle of the bells or the snort of a reindeer the only things breaking the silence. \n\nWe went up a mountain for about forty-five minutes, using the time to snuggle and caress. She thought conversation unnecessary, and I agreed. Finally we stopped, in front of a log cabin, the windows lit by candles. The driver helped her out, and just as soon as I was out he clucked to his team, and drove away. We could hear the bells long after they disappeared from sight.\n\nShe took my hand and led me to the door. The cabin was small, with a fireplace that took up one whole wall. It was lit, and the room was very warm, so we were soon out of our heavy clothes. She stepped into the bathroom, asking me to get the wine as she went. I popped the cork and poured two glasses. She returned, wearing a filmy black nightgown, that covered and exposed at the same time. She was between me and the fire, and it seemed like the logs blazed a little brighter, making her hair look like a red halo on her head. She took my hand and led me to the four poster bed, covered in brightly colored quilts. She raised my hand and held it to her breast. I felt the nipple harden instantly.\n\n\"Cathy is air,\" she said, \"that's why she took you up. I'm fire, much more elemental. While she soars, I'll keep you grounded, keep the home fires banked, ready to give you warmth any time you need it. And I love like fire.\"\n\nI was consumed with an all burning passion to see if that was true. I practically ripped the gown off in my haste to have her, and she didn't object at all. Her father had been half Columbian, and it gave her body a dusky hue. I had to have her, now! She was more than eager. She wasn't anymore passionate than Cathy, but she expressed her passion much more loudly, her cries almost screams at times. I treated her exactly the same way I did Cathy, right down to the pillow talk. Tory, like Cathy the night before, gave me her personal history.\n\n\"Our parents disowned us. My father hasn't spoken to me in eight years. Mami calls every once in a while, when he is away on business. When he got caught in the financial crash, he refused my help completely. I managed to slip some money to Mami through a sister that just barely tolerates me. Papi thinks the money came from her. I don't care. I saved their house, and Mami knows it. I think that's why she cries every time we speak. So you see, Cathy and I are the only family we have. We want a big family, at least two each, and we want them to know that whatever course they choose in life, their parents will still love them. All we want is happiness, Will. Can you give that to us?\"\n\nI surprised her by asking how old she was.\n\n\"I'm twenty-nine. Why?\"\n\n\"Because two isn't enough, and I wanted to make sure you were young enough not to risk your health to have them.\"\n\nShe fainted. Honest to goodness fainted. Her face lost color, her eyes rolled back in her head, and she went out cold.\n\nI'd forgotten how good a screamer she was, but she reminded me when she revived. I thought my eardrums would burst in the confines of the small cabin. Then she grabbed me, and proved she was fire all over again. I felt like a burned out husk when she was done. In fact, I passed out first, my head pillowed in her soft breasts while she crooned a lullaby in Spanish. \n\nI woke later, alone. Tory had gotten up to add more wood to the fire, as the cabin had cooled considerably. I watched as she stirred the embers, admiring the way the flickering fire highlighted her body. She must have sensed me, and she turned and smiled. A smile of happiness and contentment. She bounced back to the bed, sliding in and snuggling to me.\n\nShe was cold! I gasped a little as she giggled. \"I'll warm us up, honey.\" And she did, until I had to fling the covers off to catch my breath. She laughed, the throaty laugh of a woman fulfilled. \"It gets better, honey. You've had us both now. Can you imagine it in stereo?\"\n\n\"You'll kill me,\" I moaned. \"Seriously, I know my limitations. I don't think I can keep up with both of you on a regular basis.\"\n\nShe gripped me tighter. \"Yes you can! But more importantly, you don't have to. We love you, but we love each other. In fact, there will be times when we we'll want to be alone. Can you handle that?\"\n\n\"Not a problem. I knew coming in you need to love each other first. I'll never interfere with your relationship. Never. And if there ever comes a time when it isn't working and you need a change, I want you two to tell me up front. It'll probably hurt me, but it'll hurt worse if you don't.\"\n\nShe tightened her embrace. \"I don't think that'll ever be a worry. And we'll ask the same from you. If you have any problems with us, tell us right away. You can't fix a problem you don't know exists.\"\n\nAs with Cathy, she drifted off to sleep, a contented smile on her face. I watched her for a long time in the firelight, wondering what I'd gotten myself into.\n\nChapter eleven\n\nThey lived, oddly enough, in Ohio. My home was in a little town right outside of Atlanta. I loved the area, with the huge old houses harkening back to a bygone era, the seemingly unhurried flow of life a refreshing change from the rush of L A or Chicago. My condo was just outside the city limits of Atlanta but very close, a good place for a single man. It looked like I'd be needing a bigger place soon.\n\nWith a lot of reluctance, we said goodbye to Canada. Despite the cold, I felt I could easily live there. The few days after the nights I spent alone with them were amazing. When we got back from the cabin, we discovered Cathy had moved everything into my suite. The first night when we were all in bed together is etched in my memory forever. We rolled around in every combination two women and a man could dream of. I managed(just barely)to satisfy each of them once. By then I was drained, so they reached for each other, and I was content to watch.\n\nWe talked about it long and hard, and mutually decided they would stay on birth control for at least a year, to make sure we were truly bonded before we brought children into the mix. They grinned afterwards. \"That doesn't mean we won't practice, honey. We will. A lot.\"\n\nThey had closed up their house in Ohio, and put it on the market. They were in our condo, and had no intention of leaving.\n\nI finally told then where the money came from. It was kind of funny when they found out. \"Really? You're Issabella? I've read every book she's...that you've written.\" This was from Cathy.\n\n\"It gets worse. I write under a couple of other names also. I'm Rock Stone.\"\n\nCathy didn't make the connection, but Tory did. \"You write Battle Babes? I've read a lot of those when we were doing po...er, had our earlier career. It helped me to think in at least one universe the women were equal to or better than the men.\"\n\nI'd learn they were a little shy, now that we were together, about their past. I had cleared the air on that fast. \"What's done is done. You had your reasons. And it's years in the past, and you can't rewrite history. What matters is we're here, right now, and we're committed to each other. If I didn't trust you, this would never work.\" I got some extra good loving, if that was even possible, from them that night.\n\nOnce Cathy understood what I'd written, she grinned, a grin that made me nervous. \"We are so doing a Battle Babes movie. I was born to play Captain Titts, and Tory is Sergeant Hipps. We'll kill it.\"\n\nI'd been thinking along the same lines, but that was in the future. Right now, Leah and Dorian were in L A. She was working on the Issabella script, and Dorian was a line producer on a major film. It was several steps up from his past jobs, and he credited us.\n\n\"Grolar, Scourge Of The Northlands\" was a bona fide hit. Of course, we'd overrun the budget by about a million and a half, but we'd already netted ten times our investment. Cathy and Tory got good reviews, and Tory was voted \"Screamer Of The Year\" by a fan magazine. Their background came to light, and they were interviewed quite a bit. If any of them brought up their past, they ignored the question. They did comment on it in an interview by a show devoted to Hollywood, saying that the past would always be there, and they weren't apologizing for it. They also praised the film, thanking the casting director, Dorian, the director, and the executive producers, especially me, for giving them a chance."
    ],
    "authorname": "qhml1",
    "tags": [
        "polygamy",
        "romance",
        "porn",
        "porn star",
        "porn movie",
        "movie"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/eric-and-will-make-a-b-movie"
}