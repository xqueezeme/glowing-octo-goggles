{
    "title": "Westrons Pt. 11",
    "pages": [
        "It certainly looked like their whole army. There was nothing wrong with my eyesight; I identified ten separate regiments, each with their ox-drawn artillery, headed in our direction. There could easily be even more troops behind these. \n\n- \"Fighting withdrawal.\" I told the Captain of the 1st. \"Just as we practised.\" \n\nI turned and jogged to the rear. There was a great deal to be done, and it had to be done quickly. \n\nFirst, I sent the 3rd company forward, to leapfrog the rifles. \"Open order. Skirmish. Pull back if they keep advancing. I'll have the 4th ready to replace you.\" \n\n\"Tallia - write out this message: 'Enemy army advancing directly at us, 10+ regiments plus artillery. Request immediate support. Will stand at village of Limset.' Include the map coordinates.\" \n\n\"Four copies - quick as you can. Two to Colonel Berandot, two to General Vis.\" \n\nIf I sent four runners, the message should get through. \n\nLangoret arrived just as I sent off another company to reinforce the skirmishers. I filled her in on everything I'd seen, and what I'd done so far. \n\n- \"What are you suggesting?\" she asked. \n\n- \"Remember those spots we passed, yesterday?\" \n\n- \"The village? And the odd slope?\" \n\n- \"Yes. I'm thinking that we could make a stand there. For a short while, at least.\" \n\nLangoret looked concerned. \"Ten regiments, Cook.\" \n\n- \"But they can't all come at us at once.\" \n\nThe road we'd been following wound its way through farmland and orchards, with occasional groves of mixed forest. In some places, we could have lined up five regiments shoulder to shoulder. \n\nBut in many other locations, there was limited space on either side of the road to deploy troops. Two or three regiments would have difficulty advancing in line abreast. \n\nIf the Crolians pursued us, we could lead them on, using our new tactics to snipe at them, to sting and harass them all the way. \n\nAnd if we did stand - or when we made our stand - we could do so on ground of our choosing, with significant advantages. Not a Thermopylae, by any means, but something much more gradual, and more subtle. \n\nLangoret looked me in the eye. I'm sure that she could sense how excited I was. \n\n- \"You think that we can do this.\" \n\n- \"I'm pretty sure we can.\" I said. \"It's what we've been rehearsing for all year.\" \n\n- \"What is the worst case scenario?\" she asked. \n\n- \"Nobody comes to help us. We have to spike our guns and run for it. But we'd get away, Langoret. They can't keep pace with us.\" \n\n\"And we'll have hurt them, badly, before that ever comes to pass.\" \n\nLangoret nodded. \"I believe that you have the rights of it, Colonel. What are your orders?\" \n\nWe sent word to the ox-drawn artillery, turning them around, and sending them back to Limset. We got our three pounders sorted out, and set them up in trios. \n\nI explained my intentions to Major Chardeia and Captain Faregil (2nd Company). Tallia heard it all, too, so that she'd have some idea of how I expected the day to go. \n\n- \"You might want to send a company back to the supply wagons, and have them bring more powder and shot for the rifles.\" I suggested. \n\nTallia reached into her satchel, and handed me a piece of paper. \n\n- \"Already written. It sounded like they were using quite a bit of powder up there.\" \n\nI wanted to kiss her. I settled for leaning over, and whispering that thought into her ear. She grinned, and produced pen and ink so that I could sign the order. \n\nLangoret and I went forward a bit, to watch the enemy advance. We were just in time to see the Crolian regiment halt. They were being harassed by 40 or 50 of my riflewomen, spread out in ones and twos over a front of half a mile. \n\nBut the Crolians were plainly frustrated. They presented muskets, and fired a volley. \n\nI saw one riflewoman fall. \n\nOne of her companions ran over, and helped her to her feet. They withdrew together. Wounded, then; not killed. \n\nThe Crolians had fired 300 shots, give or take a few - for one hit. \n\nMeanwhile, rifle shots could be heard almost constantly, at the speed of a two-finger typist. A Crolian soldier fell. Then another. \n\nMy sharpshooters were showing their skill, and the benefit of all their training. They were also shooting at a huge target: a wall of Crolian infantry, 300 wide by three deep. \n\nSome of the riflewomen were so good, they were targeting officers - and hitting them. \n\nBut they'd been in action long enough. I had the recall sounded. As the rifles pulled back, the 3rd company advanced to replace them. \n\nSkirmishers with muskets had to get much closer to be effective. Still, they were spread out over a wide front, and they were shooting as the same large target. They could also reload and shoot at a faster rate than the rifles. More shots - just less accurate. \n\nThe Crolian commander was plainly confused. He ordered another volley, which brought down two of our troopers. In the same period of time, however, at least half a dozen of his soldiers fell. \n\nHe chose to advance, and brush these gadflies aside. \n\nThe 3rd retreated, just as we'd taught them, leapfrogging by platoon. There was always someone shooting at the enemy. The Crolians could plainly see that there were very few troops opposing them. There was literally nothing to fire a volley at. \n\nYet they were taking continual losses. A man here, two there. Pinpricks. Bee stings. But the losses were beginning to add up. \n\n- \"It's amazing.\" said Langoret. \"I apologize. It is ... just as you said.\" \n\n- \"Sometimes you have to see it, to understand.\" I said. \"And there are plenty of officers who see it, and still don't get it.\" \n\nThat might have described the commander of the Crolian regiment. He could see his men falling. He fired volleys at our skirmishers, to little or no effect. Finally, he had his men fix bayonets, and charge. \n\n3rd Company simply retreated, at a run. The Crolians were trotting forward, keeping their linear formation more or less intact. Our women simply outran them. \n\n4th Company took the place of 3rd. They fired a few shots, and then retreated, because the Crolians continued to advance. \n\nBut the enemy regiment couldn't run for long. After a 1,000 yard jog, they halted, and re-dressed their lines. \n\n5th Company got their chance, and advanced as a cloud of skirmishers. \n\nThe Crolian regiment suffered more casualties. \n\n- \"Can you see it?\" I asked. \n\n- \"Their third line.\" said Langoret. \"It's looking very sparse.\" \n\nThe lead enemy regiment had lost more than a hundred men - perhaps over 150. They weren't all killed, of course. But a wounded man who needed help to withdraw took 2 or 3 enemy combatants out of the equation. \n\nThe Crolian Colonel was either very courageous, or very stubborn. He kept pressing his advance, at a considerable cost in killed and wounded. Finally, he realized that his predicament was basically unsolvable. He withdrew. \n\nI sent my 6th company forward, to harass the enemy as the pulled back. \n\nThe rifles wanted another crack at our foes. 2nd, 3rd and 4th companies expected the fun to continue, while 7th through 10th wanted their turn. That was only the Anelis; Langoret's regiment wanted a chance, too. \n\nWe sent for Langoret's 1st: her rifles. The Crolian lead regiment was pulling back, and a fresh second regiment was advancing in its place. \n\nLangoret and I unleashed nearly 200 sharpshooters on them. \n\nWhatever words of wisdom the Colonel of the lead regiment imparted to his colleague in the second unit obviously went unheeded. People so rarely profit from good advice, or listen to the voice of experience. \n\nTheir second regiment proceeded to make all of the same mistakes. They advanced in 3-deep line, presenting a massive target to our rifles. \n\nWhen their casualties became noticeable, the Colonel halted, and fired several useless volleys. The whole time they did that, our sharpshooters lay down in the grass and chose their targets. \n\nLangoret turned to me, her mouth half-open. \n\n- \"This is ... even better than you said. I can hardly believe it.\" \n\nFor the rest of that afternoon, the second Crolian regiment repeated every single mistake that their predecessors had made. We inflicted significant losses, while suffering very few of our own. \n\nTheir next decision was to bring forward artillery. \n\nOur riflewomen had a field day. \n\nWhat's the point of firing a cannonball at a single individual, 200 yards away? The guns were smoothbores - meant to be fired at large, compact formations. The Crolians lost quite a few gunners, and more officers, before they sent the first regiment forward again, to screen their guns. \n\nWe sent another four messengers, in case the first ones hadn't gotten through. We also rotated our skirmishers, to give as many companies as possible a little action. \n\nAt dusk, as the visibility faded, we pulled out troopers back 2,000 yards. I didn't anticipate a night attack, but we preferred to be safe rather than sorry. \n\nLangoret and I received reports from our company commanders: we'd lost 11 killed and 17 wounded. \n\nWe gathered all of our captains, and explained the situation to them. Their confidence was sky-high, after a successful day. \n\n- \"Tomorrow may not be so pretty.\" I said. \"You have to tell your troopers that. There will be some pain, until the rest of the army arrives to support us.\" \n\n- \"But we are very pleased with your performance today.\" said Langoret. \n\nWe discussed possibilities for a time, and then ate dinner. Langoret went off for further discussions with her own captains. \n\nNo sooner was she gone than I felt a hand on my ass. \n\n- \"That was amazing to watch.\" said Oshide, as she pretended to whisper in my ear. In fact, she was nibbling on my ear lobe. \n\n- \"I thought your hemmer was over.\" I said. \n\n- \"It is.\" she said. \"But I'm already looking forward to the next one.\" \n\nShe and Yehla followed me as I circulated through the companies. They'd done well today, and deserved to hear it from me. \n\nIt was quite late before I was comfortable that I'd talked to everyone I needed to. Tallia waited patiently as I expressed my last worries aloud. \n\n- \"You need to sleep.\" she said. \n\n- \"I feel like I forgot something.\" \n\n- \"It's too late to do anything about that. If it makes you feel better, I'll wake you before dawn.\" \n\n- \"Promise?\" \n\n- \"Lie down.\" When I did, Tallia crawled into my arms, and turned around, presenting me her back - and that taut little ass. \n\n- \"Tallia ...\" \n\n- \"Shh ..\" she hissed. \"Go to sleep.\" \n\n- \"It won't be easy to sleep, with ...\" \n\n- \"Then do something about it.\" she suggested. \"And then you can go to sleep.\" \n\nI'm reasonably certain that Robert E. Lee or Stonewall Jackson never got laid the night before a battle. I'd bet that Oliver Cromwell never did. Marlborough, on the other hand ... \n\nTallia reached back, and tucked my growing erection inside her. \n\n- \"You're ... a bad influence.\" I said. \n\nShe just chuckled, and thrust her ass back at me. \n\n*** \n\nAt first light, we took another good look at the maps. Tallia wrote up a second set of messages to Colonel Berandot and General Vis, and we sent off four more runners. \n\nThe Crolians, meanwhile, were deploying four regiments, side by side. They were also bringing up ox-teams and unlimbering guns. \n\nI should have worried about them doing that by night. If their guns had been in place before first light, they could've inflicted some casualties on us. \n\nInstead, we simply retreated. \n\nOur own artillery was already on its way back to the little village of Limset. We had nothing here but foot soldiers and our light 3-pounder guns. We were on our way and well out of range before the enemy had set up a single battery. \n\nOshide and Yehla hovered near me at all times; Tallia was close by, too. \n\nTwo leagues before the village, we came to the second spot I'd identified as advantageous. There was a stream - the barest trickle of water, but it had steep banks, so that a bridge of stone and wood had been built to cross it. \n\nIt was scarcely necessary for soldiers: a quick hop and a jump, and they could be across the stream without even getting their feet wet. But it was a much more serious obstacle for ox-drawn artillery. \n\nThe little bridge was the only way across for them - and it was barely wide enough for one team to pass at a time. \n\nOn our side of the stream was a farm. I felt sympathy for the first hardy family that tried raising livestock or growing crops here. The ground must have been covered with rocks and stones at one time. They had moved them, one at a time. \n\nThey'd built the bridge, and a low stone wall to enclose two of their fields. Good cover for our skirmishers, which I'd spotted right away. \n\nBut our side of the stream was also somewhat narrower than the far side. If four Crolian regiments arrived in line abreast, and crossed the stream, they'd find it a tight fit on the other side. And if they advanced ... \n\nThey did. \n\nFour Crolian regiments came across, and found that there was only enough space for three. After some confusion and conferencing, the fourth regiment was sent back across the other way. \n\nAll this took time, of course. While the Crolian Colonels met and conferred, and sent back to their General for instructions (who knows where he was), time passed. \n\nOur soldiers, hunkered down behind the stone wall, had a field day. There was no shortage of targets. \n\nThe 3- pounders added to the enemy's consternation. Eight or nine-pounders might have swept them from the field entirely, in bloody ruin. But our little guns contributed to the damage. \n\nIt's extremely unpleasant to stand still while someone is shooting at you. It's very disconcerting when the person next to you is hit. The Crolians repeatedly fired back at us, but the effect was minimal. It was probably just to keep their troops occupied, and make them feel as if they were at least striking back. \n\nBut they could tell that we had cannon, however small, while they had none. \n\nThat was probably why they attempted to do two things at once. The three regiments began to advance, in line. At the same time, they began to bring up their artillery, to cross the bridge. \n\nLangoret's 1st Company were in the woods to the south, some 300 yards from the bridge. My 1st company was to the north, in a smaller copse of trees, and a little farther away. \n\nAs instructed, they let two guns cross the bridge before they opened fire. \n\nBoth oxen pulling the third gun went down. The bridge was now blocked. Gunners and drivers began to fall. The fourth gun team, still on the far side of the stream, was hit. The next teams in line began to turn around and retreat. \n\nThe gun teams already across were sitting ducks. One crew didn't even try to unlimber their gun; they took cover. \n\nThe officer commanding the fourth Crolian regiment showed some initiative: he shortened his line, and marched towards the little copse where my riflewomen were posted. \n\nThey had neither the numbers nor the rate of fire to defend the position. As they'd been instructed to do, they withdrew. \n\nMeanwhile, the Crolians advanced on us. At 100 yards, they stopped, straightened their lines, and fired a volley. It had little to no effect. But they made great targets for our muskets, and the 3-pounders couldn't seem to miss. \n\nThe Crolians calmly fixed bayonets. Then they resumed their advance. \n\nNow they began to take fire in the flanks, from companies we'd posted in an orchard to the south, and behind a stone wall which ran parallel to their line of march on the north side. \n\nThe Crolians weren't stupid; they just hadn't seen this type of fighting before, and their command structure was no more flexible than the traditional Westron organization. They weren't cowards, either - they kept coming. \n\nWe had, at best, a regiment and a half to receive them. But we also had some cover, and twelve little cannon. Those little guns repaid the investment we'd made. \n\nThe Crolians halted at forty paces, and fired a volley. That one did some damage; we took losses. But our answering volley, bolstered by a dozen 3-pounders, was hard for the enemy to take. It changed their minds. \n\nThey didn't press home the attack. Instead, they began to retire. \n\nYes, if they had charged, the fight might have gone their way. But ask yourself this: would you have been willing to charge straight into the mouth of a cannon? \n\nHorses can balk before a jump; so can people - especially in groups. Even Napoleon's Old Guard finally broke, at Waterloo. The firing on their flanks and behind them must have helped to influence their decision, too. \n\nThe enemy retreated all the way to the stream. \n\nIt was a victory, of sorts. Our soldiers were elated. They were a little surprised when I ordered an immediate withdrawal. \n\nThe farm and the stream had served their purpose. If we stayed there, though, the Crolians would clear away our sharpshooters, and bring heavy guns across. Once that happened, we would start to take heavy casualties. \n\nSo we pulled out before they expected us to, and marched for the village of Limset. \n\n*** \n\nTallia came through for me again; she'd ordered up more powder and shot for the units which had been in action. She'd also written up a summary of the action to date, which I sent off to Berandot and Vis. \n\nIf they were marching towards us, we had a chance to win a significant victory. \n\nIf they weren't, then we'd be in serious trouble before dark. \n\n- \"Will they arrive in time?\" asked Langoret. \n\n- \"I hope so.\" \n\n- \"Regardless of what happens after this, you should be proud, Cook.\" she said. \"Your ideas have been vindicated. This is a major achievement.\" \n\n- \"Thank you. It wouldn't have been possible without you, and your regiment.\" \n\n- \"It is your achievement.\" she insisted. \n\n- \"You misunderstand me, Langoret. I'd be dead. You saved my life - and most of the Anelis - at Tonol. We bit off more than we could chew, and you saved us.\" \n\nShe didn't quite get the 'biting and chewing' reference, but Langoret knew what I was saying. She smiled. \n\n- \"Still trying to share the credit for Tonol, are you?\" she said. \n\n- \"Till the end of my days.\" \n\nWe had time to meet with our captains, and to repeat our instructions. \n\nLimset was at a crossroads, of sorts, which would allow Berandot's brigade to reach us more quickly - if they were coming. \n\nIt was on a rise, at the top of a deceptively steep hill. I'd looked back, the day before, when we were at the bottom of that long slope. I could barely see the village. \n\nIf the Crolians set up artillery down below, they wouldn't quite be able to see us. Indirect artillery fire was a rare skill, in Earth's 18th century; I could only hope that the same held true for the here and now. \n\nLimset had a sizeable barn, and perhaps fifteen dwellings. Like the farm at the stream, they were built of stone, which was plentiful. The walls of the houses were of stone for the first three or four feet, and then of wood thereafter, with wood shingles for a roof. \n\nThe inhabitants - Crolians - had all fled at our approach. There was no one to apologize to, when we vandalized their houses. The troopers made loopholes in the wooden walls, to see and to shoot through. \n\nOn our right, there were a dozen excellent little fortresses, as each house could be turned into a strongpoint. Langoret put three of her companies into the houses, and posted the rest of her regiment behind them. \n\nOn the left, there was the barn - another strongpoint. I put my 6th Company in there. There was a gap between the barn and the rest of the village. We sited Langoret's artillery in the gap. \n\nAneli's artillery went to the far side of the barn. We also placed six of the 3-pounders, and kept the remainder in reserve. ",
        "- \"Satisfied?\" asked Tallia. \n\n- \"For now.\" I said. \n\nLangoret was right; the tactics I'd introduced had been proved a success. Now, though, we had a chance at something even better. If Berandot and Vis answered our call, we could inflict a serious defeat on the enemy. \n\nIf they didn't, our two regiments would take heavy casualties, and we would probably have to abandon our guns. \n\nBut I intended to make the Crolians pay a heavy price while I could. And I had one more ace up my sleeve. \n\nOn the enemy side of the field, there was a slight rise which would be irresistible to gunners and artillery officers. I was betting heavily that they would position their heavy guns there. \n\nBecause a little further south, some 250 yards away, was a rocky outcropping, with a sprinkling of stunted pine trees. Langoret's 1st company were there. \n\nThe Crolians arrived in force, and they put on quite a show. Six regiments - four of them new, marched towards us. Oshide had very sharp eyes, and was busily calling out uniform colours and distinctive lapels or shoulder patches to Tallia, who wrote them all down. \n\nBehind them came a mass of artillery. Most of the Crolians were about to find out that they couldn't quite see our ranks; they were going to be firing blind, or aiming for the roof of the barn. \n\nThe heaviest guns went to the little rise, just as I'd hoped. \n\nLangoret's riflewomen opened fire, with immediate effect. They inflicted considerable losses on the ox-teams and drivers, the gun crews and the officers. The Crolians tried bravely to set up a gun, and fire back, but they finally had to give up the attempt. \n\nA regiment of infantry was sent to drive these annoying sharpshooters away; they discovered that there was no easy way to climb the rocky outcrop. \n\nMeanwhile, the rest of their artillery opened fire. Most of our troops were farther back than they knew. Cannonballs did strike the houses, and the barn took several direct hits. We suffered casualties. \n\nSeveral soldiers were wounded by flying splinters, something I hadn't expected. But most were protected by the stone walls. \n\nAfter a lengthy barrage, the Crolian infantry began to form ranks, preparing to advance. \n\nThat was when Tallia caught my sleeve. The runners I'd sent to Berandot were back. \n\n- \"They aren't coming, Colonel.\" said a dark-haired trooper. She looked disconsolate. \n\nI bit back a curse. Swearing my head off wasn't going to help anything. \"What did Berandot say - exactly? Can you remember?\" \n\n- \"She read the message. Then she called her Colonels - Avette and Seriba. She told them what the note said. Then she said that she would continue to obey General Vis' orders, until instructed otherwise.\" \n\nMy heart sank a bit. I don't know if I'd really expected Berandot to come, but I must have been holding out some hope, because the messenger's report felt like a kick in the balls. \n\n- \"That's all?\" \n\n- \"That's it, Colonel.\" \n\n- \"You made good time ... Aylen, is it?\" (I have a good memory for names) \n\n- \"Thank you, Sir.\" \n\n- \"Stay nearby, will you, Aylen? I may need you again.\" \n\nI immediately told Langoret. \n\n- \"Not good.\" \n\n- \"No.\" \n\n- \"My regiment could cover your retreat.\" she suggested. \n\n- \"When it's time, we'll retreat together.\" I said. \n\nWe couldn't withdraw now - not with five enemy regiments advancing on us. They couldn't run as fast as Westrons, but to retreat now would mean abandoning our wounded. \n\nI remembered what I'd seen at the bastion outside Tonol. I wasn't about to leave my soldiers behind, to be raped, or ... eaten ... not if I could help it. \n\nWhen the Crolians crested the hill, they immediately came under fire. It wasn't a concentrated volley, but there were muskets firing from the woods, on their flanks. There were also troopers firing from the loop-holed buildings. \n\nThe enemy continued to come forward - what else could they do? They flowed between and around the houses, and around the barn. \n\nThe doorways of the houses had been barricaded: a couple of Crolian musket butts had no impact on them whatsoever - especially when the men closest to the doorway were immediately shot down. \n\nThe Crolians who swept around both sides of the barn got the biggest surprise: our artillery opened fire at 200 yards' range - with canister. They went down like ninepins. \n\nThat first attack faltered, because the Crolians hadn't been prepared for what they had to face. They tumbled back down the slope, pursued by our skirmishers. \n\n- \"Amazing.\" said Trooper Aylen, behind me. \n\n- \"Tallia - ammunition for the barn.\" I called out. \n\n- \"On the way.\" \n\n- \"Major Chardeia - put three of the 3-pounders to the right of the barn.\" \n\nNo, it wasn't an AFOTA TacSim. I knew that. People were dying out there. People that I liked, and cared about. \n\nBut if I handled this correctly, fewer of them would die. And their sacrifice would mean something, if I could turn this into a significant victory. \n\nLangoret appeared at my elbow. \n\n- \"They've done well.\" she said. \n\n- \"They certainly have.\" \n\n- \"Time to go?\" She didn't look afraid. It was a fair question. \n\n- \"Not yet.\" \n\n- \"Are you sure?\" said Langoret. \n\n- \"General Vis may be moving. Berandot may come.\" \n\n- \"She said that she would not.\" \n\n- \"That was yesterday. They must have heard the guns, later that afternoon.\" I reminded my colleague of Napoleon's maxim: march to the sound of the guns. If Berandot did that, she'd be late, but we could still win. \n\nLangoret gave me a long look. \n\n- \"Alright.\" she said. \"I trust you.\" \n\nThe second Crolian attack was no more successful than the first. Our troopers almost welcomed it, because the enemy artillery stopped firing as their soldiers climbed the hill. \n\nThey hadn't brought any special tools with them; they still could only hammer on barricaded doorways with musket butts. When they pushed past the buildings, they met massed artillery fire and concentrated volleys. \n\nThere was a long bombardment, thereafter. The Crolians were withdrawing three of the regiments who'd attacked us; their losses had been heavy. \n\nHours passed, as the Crolians brought up more ammunition for their artillery, and moved fresh regiments into the front line. I moved 6th Company out of the barn, and let 9th Company take their place. Major Chardeia asked if she could command them. \n\n- \"That's a good idea.\" I let her go. \n\nThe next attack was led by fresh, enthusiastic troops - and it failed again, as they ran into point-blank artillery fire where they didn't expect it. \n\nLangoret came to consult with me again. \n\n- \"We're running a bit low on ammunition.\" she said. \n\n- \"I can send you some.\" said Tallia. \n\nThe next attack was the most serious. \n\nSome of the Crolian troopers had brought along stacks of dry brush, which they piled outside the door of the houses, and then tried to set alight. They took appalling losses doing so, but once some of the buildings were on fire, a few of our troops panicked, and tried to sortie. \n\nThey emerged into the midst of enemy regiments, and were immediately engaged at close quarters. Bayonet work, hand to hand - that was not to our advantage. \n\nThe enemy also seemed to have learned from their previous experience. A dozen or so Crolians emerged from behind the barn, and ran towards our main line. \n\nOur artillery belched fire, and those attackers disappeared. \n\nBut their sacrifice had been deliberate. The moment our guns had fired, a mass of Crolians appeared, and charged us in a mob. \n\nThere were several hundred of them - not quite a full regiment. But I didn't have nearly so many soldiers to hand. 1st Company were sharpshooting, 9th were in the barn, 7th were in the woods ... \n\n- \"Tallia - get back. Captain Faregil!\" I called. \n\n- \"Here!\" \n\n- \"2nd Company to counterattack - on my command.\" \n\nI heard the trio of 3-pounders fire. Then the two companies nearest us fired a volley. The enemy charge seemed to stagger, for a moment - then they came on, and at twenty paces, they fired a devastating volley of their own. \n\nMy first instinct was to look for Tallia. I couldn't see her. Then Oshide sprang at me, and shoved me with both her arms. \n\nI was falling, looking back at her, when I saw the spurt of blood and shattered bone from the side of her head. She stumbled, and fell. \n\nFaregil didn't wait for my order. She launched her elite company at precisely the right moment. \n\nThe Crolians weren't expecting a countercharge - not after their close-range volley. Faregil smashed into them, with almost 100 of the best troopers in Aneli's regiment. \n\nOshide was dead. I knew it right away. I leapt to my feet, and drew my sword. Half of 6th Company rallied to me. Faregil and the 2nd had gone to the right of the barn. \n\nI went left, and gathered the 5th and 8th. With some 200 bayonets, I led a charge around the left flank. \n\nThe barn was on fire; Major Chardeia and the 9th had sortied, and were fighting hand to hand. There were still women inside, still shooting, to judge by the musket flashes at the loopholes. \n\nWe hit the enemy from a direction they hadn't anticipated. \n\nIt was like the fight at Vanova's hotel bar all over again. I was outnumbered, but I had position and surprise on my side. They just didn't have the space to re-deploy, to take advantage of their numbers. \n\nWe overran the first group we encountered, quite easily. The second bunch fired a few shots, and then broke and ran. \n\nThe next enemies we encountered had their backs to us - they were more concerned with 2nd Company's counterattack. \n\nI fired my pistol at one, and slashed at another, taking most of his forearm off. Tallia wasn't there, to reload my pistols (as Themis had done at Tonol) - but Yehla was beside me, and she was as enraged by Oshide's death as I was. \n\nAylen, the messenger, came up on my left, and shot a Crolian. Then she took a bayonet in the guts, and went down. I slashed her attacker across the face. \n\nThey were running. \n\n- \"Sound the recall!\" I ordered. \n\nThere were still masses of enemies down below; we couldn't afford to mix it up with them. \n\n- \"Sir!\" Yehla was pointing, to the north. \n\nFresh troops, coming down the road. \n\nOurs? \n\n- \"Avette's regiment!\" shouted Yehla. \n\n- \"Find me Major Chardeia. And Faregil!\" \n\nChardeia was dead, but Faregil was fine. \n\n- \"Take your company. Open order. Pursue and harass. Keep going until you meet solid resistance. I'll send you support as soon as I can.\" Faregil was a solid officer; she knew what I wanted her to do. \n\nOur soldiers were brave - but they weren't suicidal. Most of them knew better than to charge after the Crolians with an unloaded musket. They'd also had a year and more to absorb my teaching, and their training held. \n\nI was able to re-form half a dozen companies in a matter of minutes. Two of them I sent after Faregil, to join in harassing the retreating enemy. \n\nLangoret was re-organizing her regiment when I found her. The two of us could see the Crolians streaming away. Many of them, it seemed, weren't stopping to rally. \n\n- \"What next?\" she asked. \"Back to open order?\" \n\n- \"Yes. Pursue and harass.\" I said. \"Avette's regiment is coming. We'll use the 3-pounders to break up formations.\" \n\n- \"I can handle that.\" she said. \"You should go to meet Colonel Avette. You don't want to trust this to a messenger.\" \n\nThat made sense. I took Yehla, and half a dozen troopers. Tallia looked like she wanted to come, but I sent her back to collect whatever ammunition we had left, and move it forward. \n\nThe rifles were still cracking, firing from the woods, and the 2nd were shooting at any Crolians who didn't run fast enough. \n\nAvette's regiment came marching up to the crossroads. \n\nI'd met the Colonel before; we'd been introduced, and then attended several command conferences together. But as a junior member of Berandot's brigade, I hadn't paid her much attention at the time. It was hard to notice other people when the imperious, charismatic Berandot was in the tent. \n\nAvette had copper-coloured hair, pale blue eyes, and small mouth. Her olive complexion made for an unusual contrast; for some reason, she made me think of a Renaissance painting. \n\nI didn't stand on ceremony. \n\n- \"We're very glad to see you and yours, Colonel!\" \n\n- \"I apologize, Colonel Cook.\" she said, very formally. She spoke slowly, carefully, and enunciated every word. \"We should have left at once, but I hesitated far too long.\" \n\n\"Colonel Seriba and I were ordered not to march towards you. I regret that I wasted so much time before realizing that this command was dishonourable as well as unmilitary.\" \n\nAvette was an Inhaber; she owned her regiment outright. Still, disobeying a superior officer's order was a serious matter. \n\n- \"You arrival presents us with an excellent opportunity.\" I said. I wanted to shake my head - this was the first time I'd ever spoken to Avette, and I was already sounding just like her. \n\n- \"Consider my regiment a part of your brigade. I will accept your orders.\" \n\n- \"That's ... a very noble gesture.\" I said. On impulse, I bowed to her. \n\n- \"No more than my conscience demands.\" she said, proudly. But she curtsied to me in return. \n\nI filled her in on the situation as we directed her troops to the battlefield. Even though they hadn't been trained in open order fighting, they were relatively fresh, and could tackle smaller enemy formations while my skirmishers flowed around and past them. \n\nThe Crolians were in full withdrawal. Five or six regiments were retreating from two. Well, three now. We had to keep them off balance. \n\nLangoret had most of our brigade on their way down the slope from Limset. I sent more messengers, to General Vis, and to Berandot, just for the hell of it. \n\nThe pursuit from Limset had a sort of unreal quality to it. We were pushing a force twice our size. The rifles kept picking off officers, or the oxen pulling artillery or supply wagons. \n\nThe skirmishers fired at any target that presented itself. And when we ran into large groups that looked like they might be on the verge of rallying, my soldiers concentrated on them, and then Avette's regiment advanced on them. \n\nOnly one group stayed for more than one volley. \n\nAnd that encounter was enormously significant. Several colourfully-dressed officers were trying to gather more troops around them. Two were picked off by sharpshooters, and another was wounded. \n\nSeveral men immediately clustered around the stricken officer, as if shielding him with their bodies. Hello, I thought - who's this? \n\nAvette's troopers fired a volley into them. While the survivors fled, Faregil's 2nd company overran the remnants of the little group. \n\nWe didn't know it, but we'd just won the war. \n\n*** \n\n- \"You should see this prisoner, Sir.\" said Faregil. \n\nThe Crolian officer had the typical heavy jaw and beady eyes of his people, but he was rather short, and a bit chubby. His uniform was bright red, and loaded down with so much gold braid that I wasn't surprised he'd chosen to surrender rather than run. \n\nHe'd been hit in the hand, and seemed to have lost a finger. He was grimacing with the pain. \n\n- \"This is Colonel Cook, Commander of Aneli's regiment.\" said Faregil. \n\n- \"You're ... not a Westron?\" said the chubby Crolian. \n\n- \"Pylosian.\" I said. \n\n- \"And male?\" He didn't seem sure whether that made matters better or worse. He clumsily detached his sword and scabbard from his belt. Then he awkwardly turned it around - almost dropping it in the process - before presenting it to me, hilt first. \n\n\"I offer you my sword.\" he said. \n\n- \"I accept your surrender.\" I answered. \"You ... fought bravely. Ah ...?\" \n\n- \"I am Crown Prince Ellem Anry of Crolia.\" \n\n*** \n\nThe fat little bugger we'd captured was the heir to the Crolian throne. \n\nI had no way of knowing if his removal from the field had any immediate effect, but the Crolian army continued to come apart at the seams. \n\nAs it turned out, the war was over, even if the Battle of Limset was still going on. \n\nIt was much like a snowball rolling downhill. As the Crolians withdrew, their retreat picked up speed. Regiments which hadn't even been involved in the fighting were swept away along with the beaten. \n\nWe pursued them for the rest of that day. Avette's regiment joined in, of course, but her greatest contribution might have been sending three companies back to her supply train, at a run, to bring back extra ammunition for Langoret and me.  \n\nThe rifles ran out of bullets long before dark. \n\nThe Crolian infantry fled as fast as they could: that meant abandoning ox-teams and artillery, supply wagons, tents ... there were oxen everywhere. That was one of my most vivid memories of the aftermath of the battle. \n\n*** \n\nOur troops were exhausted. Avette volunteered two of her companies to act as pickets. \n\nI was too keyed up to sleep. The magnitude of our victory was enormous. If I was right, the capture of the Crown Prince, even without the destruction of his army, meant that the war was effectively over. \n\nOshide was dead. My tantalizing, clever bodyguard, who'd already been looking forward to her next hemmer. Major Chardeia, as well, and probably far too many of our soldiers. \n\nTallia tried to stay awake with me, but she was worn out, too. I let her sleep. \n\nIn the early hours of the morning, Langoret found me. She came to stand beside me, but remained silent for a while, which I was grateful for. \n\n*****"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "18th century",
        "battle",
        "sci-fi",
        "fantasy",
        "military history",
        "muskets",
        "rifles"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/westrons-pt-11"
}