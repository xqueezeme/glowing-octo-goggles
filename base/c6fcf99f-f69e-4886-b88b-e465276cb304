{
    "title": "Women's Studies Ch. 12",
    "pages": [
        "\"Are you shitting me?\" Kennedy nearly shouted. \"What is this, the 1950's? She has a ticket and an ID.\"\n\nWe were leaving for spring break, and I just knew I should have dressed more androgynously, maybe some baggy jeans and a sweatshirt. My breasts would have been impossible to hide, and it was definitely too warm out for that kind of clothing, but it would've made things a lot easier.\n\n\"I'm sorry miss,\" The TSA Agent said to Kennedy. \"But this ID is for a man.\"\n\n\"For fucks sake!\" Kennedy yelled. \"We're going to miss our flight!\"\n\nTaking a deep breath, I prepared to explain myself. I was absurdly uncomfortable because we had been holding up the line for a few minutes now, and everyone was staring at me. Before I could speak, Abigail came to my rescue.\n\n\"Listen,\" Abigail began, stepping closer to the TSA Agent. \"My name is Abigail Lockwood, and yes, that Lockwood. Here is my Platinum Flier's card, and my personal identification. My friend here is transgendered. I'm sure if it's absolutely necessary, she'll show you her penis. However, if you continue to make a scene out of this I will make a phone call, and in 45 minutes to an hour you'll be unemployed, not to mention unemployable in any position that doesn't require you to ask me if I want fries with that,\" Abigail said in a freakishly calm but firm voice. \"Now, do we need to find a private room so she can whip it out for you, or are we done here?\"\n\nBy the time Abigail was finished, the TSA Agent was looking around sheepishly, and Kennedy and I were staring open-mouthed and speechless. Abigail had been developing a more assertive side lately, but this was simply spectacular.\n\n\"These three are good,\" The TSA guy said gesturing to us, and casting a weary look at Abigail before stepping back over to the security line.\n\nWhile Abigail kept a steady eye on the now nervous TSA agent, Kennedy and I quickly retrieved our bags, grabbing Abigail's as well, before returning to her and gently ushering her along.\n\n\"Holy shit!\" Kennedy whispered, her voice thick with excitement. \"Where did that come from?\"\n\n\"I don't know,\" Abigail said, looking a lot less confident now. \"I think I might throw up.\"\n\n\"Wherever it came from, thank you,\" I said squeezing her hand.\n\nHaving narrowly avoided what would have been a humiliating pat down by an over-weight middle-aged airport cop, I was more than happy when Kennedy forced us to pick up our pace to a near jog through the terminal. For the first time today, I was glad for the flats I was wearing in place of the cute heels I would have preferred. The last thing this vacation needed was for me to faceplant before it even started.\n\nWe had planned on getting to the airport early, but Kennedy avoided packing until the night before. When morning came, and we were supposed to be leaving, she kept remembering things that she had forgotten, putting us in an unfashionably late position. With the hiccup at security, we only had about fifteen minutes to make it all the way to our terminal. It sounds like a lot of time, but in an airport this size, we were cutting it close.\n\nWe made it to our gate out of breath, and with a few minutes to spare. Thanks to a generous upgrade from Mr. Lockwood, we were immediately escorted into first class. I had made a small fuss about it when I'd heard what he'd done, but sinking into one of those big comfy seats, in a secluded part of the plane, and being brought preflight champagne while a bunch of loud, raucous college students piled into coach behind us, left me feeling grateful. Five hours of enduring that, while we were all no doubt hit on by any guy within screaming distance, would have been tiring.\n\nAbigail, obviously used to flying, downed two glasses of champagne quickly before takeoff, and as soon as we were safely in the air, announced that she was going to take a nap. Kennedy and I, however, decided to indulge in our taste of the high life, and continued to drink and fiddle with everything in sight. For Kennedy, that included me.\n\nWith easy access from the seat next to mine, she lifted the armrest and slid closer, then proceeded to grope and kiss me, to what I assume was a real treat to the other two men that shared the first class cabin with us. No matter how hard she tried though, she couldn't entice me to join the mile-high club with her. It had been very tempting, and Kennedy made her case well, but I just wasn't sure if I could go through with it.\n\nIt turns out I was a nervous flier. Who knew? This was after all, my first time in an airplane. It wasn't anything crippling, but I was a little nervous about the slight shudders of minor turbulence. So, while Kennedy eventually admitted defeat, and cuddled into me for a catnap, I thought about our vacation.\n\nCancun, Mexico. The most clich\u00e9 spring break destination, and for good reason. Or at least that's how Skylar put it when she offered it up after hearing us discuss what we wanted to do for our break. Audrey had said good things as well. I tried to convince my sister to come along with us, but they had a Playboy thing in Daytona this year that she was making big bucks off of, much to Kennedy's dismay.\n\nTurbulence withstanding, I should have felt incredibly relaxed right now, but I didn't. Last week I had finally been let off of academic probation, and no longer had to see a counselor twice a week. I had my breasts, which still surprised me every morning when they were there. I was still bummed about Danny, but there wasn't much I could do about that, and he hadn't tried to ruin me, so that was something. What had me off kilter was something my sister had said to me in a conversation we'd had on the phone two days ago.\n\n\"I really want you to have fun on this trip,\" Audrey pleaded over the phone. \"You've never gotten a chance to do anything like this before. Take full advantage of everything.\"\n\n\"Well, that's the plan,\" I said, wondering exactly how boring she thought I was when she wasn't around.\n\n\"What I mean is, say yes to everything,\" she clarified. \"Don't think, just do...unless it's drugs. Don't do those,\" she laughed. \"Sure, you're going to want to relax and drink your ass off, but there is so much there, Mayan ruins, hidden waterfalls, the most breathtaking underwater caverns...and so much more. Just say yes!\"\n\n\"Even to the gang bangs, and the girls gone wild bunch?\" I asked sarcastically.\n\n\"Sure,\" she said simply. \"If you want to get fucked silly, do it. As far as showing off the ta-ta's, you've got some now. And some pretty damn good ones too!\"\n\n\"I was joking,\" I laughed nervously.\n\n\"I wasn't,\" she said seriously. \"Think about who you are. Not the person you pretend to be at school because you're afraid of what might happen if people found out. I'm talking about the person you could be without that. You talk about hating having to hide who you are...well, where you're going, you won't have to. Instead of Lexi, the girl hiding a penis, you could be Lexi, the hot fun girl that has a little something extra up her skirt!\"\n\n\"Did you forget how well that went with Danny?\" I asked rhetorically. \"No thanks.\"\n\n\"That was one guy, and a horrible sample size,\" she scoffed. \"What about Josh? Or Kennedy and Abigail? Or me even? We're proof that that idiot doesn't speak for society as a whole.\"\n\n\"With Josh it was different,\" I sighed.\n\n\"Why?\" Audrey asked. \"Because he was your longtime friend? Or because he was gay? You don't think there will be gay people there? The gays...they're everywhere honey,\" she laughed.\n\n\"He's not gay!\" I said a little more defensively than I intended. \"He's bisexual.\"\n\n\"Whatever. All I'm saying is, try and consider this a trial run for what your life could be like. Be open. Be your real self,\" she tried in earnest.\n\n\"I'll think about it,\" I promised.\n\nI knew what she was getting at, but I wasn't sure who my true self was. To be honest, I had never been my true self. Maybe in those moments alone with Kennedy and Abigail, but that was different. They were my lovers, my best friends and confidants. I already knew I was safe around them. It was my fear of how other people might see me that held me back. I keep flashing back to Danny's reaction when I told him the truth about me. Somewhere in my thoughts I had drifted asleep and I woke to a somewhat violent shudder of the plane as the flight attendant announced that we would be arriving shortly.\n\nAfter landing, and a tedious line at customs, we picked up our rental car and set out for our hotel. Being in a foreign country, neither Abigail, nor I, felt comfortable driving, but Kennedy had no such compunctions. As far as I could tell, she took no exception to a foreign land and drove with her usual slightly manic demeanor.\n\nWe passed through downtown Cancun on our way to the hotel zone. There was something about the streets, and the colorful shops that told you that you were well and truly out of the States. The buildings themselves weren't that different, but there was just a feel in the atmosphere.\n\nFrom what Abigail explained, downtown was more for the locals than it was for tourists. Most of the fun we were looking for would be happening in the Zona Hotelera, or the Hotel Zone. It was a long thin strip of land off of the mainland, referred to as The Seven for its distinctive shape.\n\nAs soon as we reached The Seven, I could see the difference. In the middle of the day, there were thousands of people out and about, crowding the walks, and even more on the beautiful beaches. Luxury hotels dominated the skyline, and there was a feel of a huge party in the warm humid air.\n\nAfter fighting the spring break traffic, we finally arrived at our hotel and discovered our first shock.\n\n\"What do you mean we don't have a room here?\" Abigail asked. \"I booked it two weeks ago.\"\n\n\"I'm looking at my screen, and there's nothing for an Abigail Brooks,\" the receptionist said calmly.\n\n\"That's impossible, because I have a confirmation email stating that I already paid the deposit on the room,\" Abigail said, digging her phone out of her purse.\n\nKennedy and I watched on, guarding our pile of bags on the bellhop trolley next to us. This wasn't looking good. If they really didn't have a room for us, then we might be forced to sleep in our car the entire week. Being spring break, the whole city was packed with college students looking for the biggest party of the year.\n\n\"Um...let me get my supervisor,\" The receptionist said after looking over the email on Abigail's phone.\n\n\"Brooks?\" Kennedy asked as the receptionist stepped away.\n\n\"Yeah, it was the only way my dad would let me come alone,\" Abigail shrugged. \"He's afraid of something happening to me because of who I am. You wouldn't believe what it took to keep him from sending security along with me.\"\n\n\"I never even thought of that,\" Kennedy said. Her entire body language instantly became tighter as she scanned the people around us, as if one of them would possibly hurt her friend.\n\n\"Relax, Love,\" Abigail said, laying her hand on Kennedy's arm. \"Nothing's going to happen. My dad is just a worrywart. And if anything does happen, he'll send Liam Neeson after us. I'm just worried about where we're going to sleep tonight.\"\n\nA few minutes later the receptionist returned with her supervisor.\n\n\"I'm sorry Miss,\" he stated apologetically. \"Every room in the hotel is occupied. I'm not sure how this happened, but we don't have a room for you.\"\n\n\"What are we supposed to do now?\" I asked cutting in.\n\n\"We can refund you your deposit immediately and you can find accommodations at another hotel,\" he said. \"I'm so sorry for the mix up.\"\n\n\"Another hotel?\" Kennedy asked. \"It's spring-fucking-break! If you don't have a single room to spare, do you really think anyone else will?\"\n\nAbigail was upset, Kennedy was pissed off, and I was worried as we hauled our luggage back to our car in the parking lot. While Kennedy and I loaded the bags back into the car, Abigail shucked off her white blouse, revealing a tiny, skin-tight tank top, and took a seat on the hood of our car as she went to work on her phone, making calls. After each call ended, she appeared to be more and more worried, until after the eighth call, when a strange look crossed her face. She made one more call, and as soon as she asked if they had any rooms, a big smile lit up her face.\n\n\"I found a place!\" she said, sliding down off the hood of the car as she hung up the phone.\n\n\"Really?\" I asked, perking up.\n\n\"Where?\" Kennedy asked on top of me.\n\n\"Hop in!\" she directed. \"It's just down the street!\"\n\nLa Blanc. The name itself meant nothing to me, but the hotel spoke for itself. It was gorgeous! We pulled up and valets rushed to open our doors and grab our luggage. The entire place screamed of luxury and affluence.\n\n\"You see, every place I was calling was completely booked,\" Abigail explained as we walked through the hotel lobby. \"There were no rooms anywhere, not even the cheap motels, so I asked the last place where the most expensive hotel was, and this was it. I figured most college kids wouldn't be willing to pay top price and cut into their drinking money.\"\n\n\"How much does this place cost?\" I asked.\n\n\"About twelve hundred,\" Abigail replied coolly.\n\n\"That's not bad,\" Kennedy observed.\n\n\"A night,\" Abigail clarified.\n\n\"Holy hell!\" Kennedy said shocked.\n\n\"That's insane!\" I added.\n\n\"Don't worry about it,\" Abigail said pulling a black credit card out of her wallet. \"This one's on Daddy.\"\n\n\"Your dad is going to flip!\" I said putting my hand over Abigail's to stop her. \"We can find another place...\" I began, realizing that we were likely at the last place with a room. \"I could at least help pay for it,\" I said wincing, thinking about the price. I still had a small chunk of change left from my amazing night at the casino, but after therapy and breasts...it wouldn't survive this.\n\n\"Not a chance!\" Abigail said pulling her hand away from mine quickly.\n\n\"I'm with Lexi,\" Kennedy said. \"I say we at least try and find another place before we go this route.\"\n\n\"Call me spoiled, but I'd rather not waste any more of my vacation,\" Abigail shrugged. \"It's not a big deal. Really! My dad figured I would be spending way more than I have been. And this card is technically for emergencies. I'd say this qualifies.\"\n\nKennedy and I stared at each other uncomfortably for a few moments. We did our best to always pay our own way in our friendship. The last thing either of us wanted was for Abigail to think that we were her friends because of her money. Well, that and our pride.\n\n\"No more objections?\" Abigail asked looking from Kennedy and then to me. \"Good!\" she said quickly, spinning away from us to approach the front desk.\n\nThe check-in process went by fairly quickly, and in no time at all we were being shown to our room on the top floor. There were only three rooms on the entire floor, and we had a butler to see to our needs. I had gotten a few glimpses of the lifestyle that Abigail grew up around, but a butler?\n\nAfter showing us around our massive suite, and apologizing for there being only one bed for the three of us, Abigail passed him a generous tip and he left us to our own devices.\n\n\"A damn butler?\" Kennedy asked, echoing my own thoughts as soon as the door closed behind him.\n\n\"What?\" Abigail asked defensively. \"I didn't choose this place. I would've been just as happy cramming ourselves into one of the small rooms at the hotel we were supposed to stay at.\"\n\n\"Holy hell!\" Kennedy exclaimed again, ignoring Abigail as she peeked her head into the bathroom. \"I could swim laps in this bathtub!\"\n\nListening to Kennedy go on about how absurdly luxurious our room was seemed to be making Abigail uncomfortable. I knew Kennedy didn't really mean anything by it, but I was more than sure that what Kennedy saw as absurd extravagance, Abigail saw as completely normal, only highlighting how different our lives really were. I had seen a few glimpses before, for Kennedy, this was her first view into the Lockwood lifestyle.\n\n\"Don't worry about her. She'll wear herself out eventually,\" I said, putting my arm around Abigail and giving her a kiss on her reddening cheek. \"We really will find a way to make this up to you.\"\n\n\"Will you cut that out?\" Abigail said getting a little annoyed. \"You guys don't owe me anything. You want to know something?\" she began, fidgeting awkwardly as she avoided looking at me just as Kennedy rushed out onto our ocean side balcony. \"I get an allowance,\" she paused. \"Three thousand dollars a week. I barely ever spend a fraction of it. It's not really my money, I didn't work for it. I didn't earn it. It's just given to me because of who my dad just happens to be. So, yeah, every time we go out and it's your turn to buy drinks, I get this wave of anxiety because all I want to do is take care of it, but I don't. This time, I'm taking care of it.\"\n\nEventually Kennedy settled down...somewhat, and then we were all standing around our lavish hotel room wondering what was next.\n\n\"What do you guys want to do first?\" Abigail asked.\n\nWe had planned on coming to Cancun for weeks now, but the extent of our plans had only reached as far as laying on the beach and getting wasted.\n\n\"Can we go to the beach?\" Kennedy asked hopefully. \"I've never been to one before.\"\n\n\"Never?\" Abigail asked.\n\n\"Unless you count the Great Lakes, then no,\" Kennedy replied.\n\n\"I've never been either,\" I added.\n\n\"I guess we're going to the beach then,\" Abigail smiled, opening one of her bags to look for her bathing suit.\n\nA few minutes later, when Abigail ducked into the bathroom to freshen up, Kennedy moved closer to me. \"So, have you thought about it?\" she asked quietly, eyeing the bathroom door suspiciously.\n\n\"Have I thought about what?\" I asked, not understanding why Kennedy was trying to be so secretive.\n\n\"About what your sister said,\" she clarified. \"She told me what you guys talked about.\"\n\n\"She told you?\" I asked, a little surprised. \"When did you two start talking?\"\n\n\"I got her number from your phone a few weeks ago,\" she said, a little color filling her cheeks. \"I wanted to know when she planned on making good on her promise. And of course she told me about your conversation.\"\n\nThe promise she spoke of was a chance to sleep with my sister. It was surprising that Kennedy had waited this long to reach out to her. The crush she had on Audrey was nothing short of God-like worship, and Kennedy had wanted to sleep with her long before we even met.\n\n\"So, are you going to do it?\" she asked again.\n\n\"I don't know,\" I said truthfully as I rummaged through one of my bags. \"To be honest, I don't even know who I really am. How am I supposed to be myself when I don't even know?\"\n\n\"What are you talking about?\" Kennedy asked. \"Of course you know who you are.\"\n\n\"It sounds simple, doesn't it?\" I sighed. \"Since all of this happened, I've been hiding, lying to everyone.\"\n\n\"You don't lie to us,\" Kennedy shrugged.\n\n\"That's different,\" I said. \"You both already know me. It's the people I don't know that worry me. What do I tell them? Do I just say, hey my name's Lexi and I have a penis?\"\n\n\"That's one way to do it!\" Kennedy chuckled. \"You don't have to come right out and say it I guess, but just don't be afraid to tell people. Some of them might surprise you.\"\n\n\"What are you guys talking about so quietly?\" Abigail asked as she came back in the room.\n\n\"Nothing,\" I said casually.\n\n\"Audrey thinks Lexi should use this vacation to relax and be herself,\" Kennedy said, giving me a look. \"She's always hiding who she is back home. She never gets the chance to just be herself.\"\n\n\"That sounds like an amazing idea!\" Abigail exclaimed as she began peeling off her clothes in front of us. \"You should do it!\"",
        "\"Really?\" I asked, slightly annoyed. \"Both of you now?\"\n\n\"Hey, I thought you loved it when we teamed up on you,\" Kennedy said slyly as she smacked my ass in my jeans.\n\n\"It's usually a lot more fun than this,\" I muttered.\n\n\"Are you both going to sit around and talk all day, or are we going to go see the beach?\" Abigail asked as she tied the bottoms of her dark blue bikini.\n\nShe was right. We were in party paradise. Thankfully Kennedy let it go for now, but I was sure it wasn't the last she had to say on the subject. By the time we fished our suits out of our bags, Abigail was already ready and waiting on us, kicking her foot anxiously as she sat on the edge of the bed.\n\nIt was a little nerve wracking for me, putting on a bikini. I had the breasts to more than fill one now, which made me nearly giddy as I stared down into my ample cleavage, but it was the bottoms that had me on edge.\n\nI had gotten used to wearing jeans or leggings that hugged my form, but a bikini was so much smaller. I spent over five minutes in the bathroom adjusting myself and tweaking my gaff to make sure I looked just as ladylike as my friends. I twisted and turned, bending myself in front of the mirror to check and recheck, and even though nothing showed, I still wasn't comfortable leaving the room. Finally, I decided to wear some jean shorts over my bottoms.\n\n\"About damn time!\" Kennedy said hopping up from the couch as I returned.\n\nI quickly dove into my bag and pulled out a pair of faded shorts.\n\n\"I thought we talked about this,\" Kennedy said sternly. \"You look fine. Better than fine, you look spectacular. Stop hiding!\" she finished, a slight pleading in her voice.\n\n\"Come on!\" I pouted. \"Why are you so gung-ho about this?\"\n\n\"Because you deserve the chance to be yourself, even if we have to force you,\" Kennedy finished with an evil smile. \"Now, if you put those on, I swear to God I'll strip you down and drag you by the hair to the beach naked!\"\n\n\"You look fine,\" Abigail cut in kindly. \"I can't see a thing. I promise.\"\n\n\"Don't coddle her!\" Kennedy said holding out a finger to Abigail.\n\nIt took some work, but I finally convinced Kennedy, with Abigail's help, to allow me to at least wear a semi-transparent wrap around my waist. It didn't cover much, and with its diaphanous fabric you could still see a lot, but just the feeling of the cloth on my butt and thighs had a soothing effect on my nerves.\n\nThe walk through the hotel and down to the beach had me on edge the whole way. As the three of us walked side by side, nearly every man, and most of the women around us took notice. I felt like all the people watching could see what I was hiding, and I told Kennedy as much.\n\n\"They're staring because of your sweet little ass,\" Kennedy said, her hand sliding down my back to give it a soft pat, then letting it linger on my curves.\n\nWe spent most of the day out by the beach sunbathing and drinking beers from a tin bucket filled with ice, conveniently provided by one of the hotel employees. Kennedy even convinced us to go topless with her. I was surprised that Abigail joined us. It wasn't as if she had much of a choice though, with Kennedy stealing her top as we were applying extra strength sun block to her delicate porcelain skin. The surprising part was how little of a fight she put up before giving in.\n\nMyself, I figured that I'd spent enough money on my new breasts that it would've been a shame not to let them see the world. Besides, all of my worries at the moment were directed below my waist.\n\nI felt a mix of emotions when I first removed my top. Excitement, exhilaration, and anxiety. I didn't know when it happened, but I had developed feminine modesty. I had been shirtless as Alex many times, but for Lexi, this was a first, and it was a bit overwhelming in the beginning.\n\nWith our near naked state, and Kennedy's insistence to be the one to apply the lotion, it was incredibly surprising that our little day by the beach didn't turn pornographic. There was however a good while where I had to stay on my stomach with my thighs pressed tightly together following a very thorough application by Kennedy that involved her fingers slipping beneath the back of my bikini bottoms to massage my tiny pucker.\n\nThe first few times I caught someone looking, my heart raced, and my hands itched to cover myself, but as the day went on that feeling became less and less. The only time I truly felt like covering myself was when a group of guys came by and tried to chat us up. It was kind of creepy the way they talked to our breasts with lumps in their shorts.\n\nBefore they could slide from casual conversation to pick up line, Abigail told them to piss off, which they did to my delight, and relief. For the most part though, everyone else just left us to ourselves, and despite that one occurrence, it was an extremely relaxing day.\n\nAs the sun began to set, we finally made it back to our hotel room to collapse into bed exhausted. With the steady beers, coupled with the sun sapping away our energy, we fell asleep easily on top of the fluffy comforters. A few hours later we woke to a darkened sky and the distant sounds of loud music, feeling refreshed and ready for a little more fun before officially calling it a night.\n\nAfter slipping on our little black dresses and sexy heels, we took a walk a few blocks away to one of the quieter bars in the vicinity. It was a nice little place called Los Gringos with an open-air beach vibe. There were probably thirty or so people there, but it was surprisingly laid back, especially for spring break. We slid up to the bar and ordered a round of shots and beers, and proceeded to settle in.\n\n\"Where did you hear about this place?\" I asked Abigail.\n\n\"I called downstairs while you two were spending all that time in the shower without me,\" Abigail replied.\n\n\"You could have joined us,\" Kennedy admonished. \"Don't put that blame on us.\"\n\n\"I wasn't doing anything of the sort!\" she lied.\n\nNot wanting to make something out of nothing, I changed the subject. \"What do you guys want to do while we're here?\" I asked. \"We haven't really talked about it.\"\n\n\"I thought we were going to be wasted twenty-four-seven by the beach,\" Kennedy offered. \"It sounds like a solid plan.\"\n\n\"Really?\" Abigail asked. \"You fly thousands of miles to drink and laze around in the sun? We had all of that back in Arizona.\"\n\n\"Not the beach,\" Kennedy countered. \"Noooo beaches in Arizona.\"\n\n\"You know what I mean,\" Abigail scoffed, before offering, \"We could go and see some of the Mayan ruins.\"\n\n\"That could be fun,\" I said, taking a sip of my beer. \"My sister told me about these caves you can only reach from underwater, and she said that there are some amazing hidden waterfalls,\" I added\n\n\"I did see a brochure for skydiving in the hotel lobby,\" Kennedy said, perking up a bit. \"That sounds like a lot of fun.\"\n\n\"There is no way I'm jumping out of a plane,\" I said, heading off that train of thought before it could get going.\n\n\"Me either,\" Abigail agreed. \"Let's try to stick to things that couldn't just as easily kill us all.\"\n\nThere were some arguments on what we all wanted to do, but in the end, Abigail and I did prevail on one topic. No skydiving. Sure, it sounded fun, in a scary it could kill you kind of way, but if I was going to do it, I would much prefer doing it in a country that I knew would have strict safety protocols about such things. Besides, dying would seriously ruin this vacation.\n\nAfter our first drinks were gone, a fresh round of fruity cocktails arrived in front of us.\n\n\"We didn't order these,\" Abigail told the bartender.\n\n\"Courtesy of the three gentlemen in the back,\" he said gesturing to a group of guys standing by a long table situated along the back wall.\n\n\"Should we accept these?\" Abigail asked, leaning in to whisper.\n\n\"Of course we can,\" Kennedy said scooping up one for herself. \"We earned them.\"\n\n\"How exactly did we earn them?\" Abigail asked.\n\n\"We're hot,\" she said taking a sip of her donated drink. \"That takes a lot of work, you know.\"\n\n\"She's got a point,\" I said taking up a drink for myself and raising it to the guys watching us from across the bar.\n\nBefore, I would have said being a hot girl was easy. I had always thought it was just one of those lucky genetic things, but I knew the truth now. You could have all the right assets, and if you didn't put in the effort, you would merely just be okay-looking. Seeing the two of us enjoying our drinks, Abigail finally picked up the remaining one and gave a shy smile to the guys as she took a sip. They really were quite delicious. Not long after, they came over to talk to us.\n\n\"Hi, I'm Jake,\" said the one with the short black hair. \"This is Zach,\" he said patting his buddy with blond hair and blue eyes on the shoulder, \"And that right there is Trevor,\" he finished motioning to the largest one in the group.\n\nTrevor seemed to be built like a tank with his broad shoulders and burly arms. I didn't know a thing about him, but I knew for damn sure he didn't look like a Trevor. Zach on the other hand fit his name in my opinion. He was the shortest of the three, only a couple of inches taller than Abigail or Kennedy, and he was muscular but lean, whereas Jake was just plain chiseled.\n\n\"Well, it's nice to meet you, Jake,\" Kennedy said, offering him her hand to shake. \"I'm Kennedy. This little hottie right here is Abigail,\" she said gesturing to Abigail between us, \"and the little sex kitten on the end there is Lexi,\" she finished, making me blush.\n\n\"Now that the introductions are out of the way...\" Kennedy said, sizing up Jake and his Adonis-like physique. \"What can we do for you gentleman?\"\n\n\"I...Well...Um...\" he began.\n\nIt seemed being put on the spot like that was a new one for him. Usually a drink and in introduction were enough for most guys to slide into conversation, but Kennedy's question had him back on his heels. I could see the wheels turning in his head as he sought for a reason that didn't make him look like a jackass. We thought you were hot and want to sleep with you? Yeah, that was pretty much all the thought he'd put into it when he made his approach. I couldn't help but fight back giggles as I watched him scramble.\n\n\"We're total losers,\" Trevor spoke up, making a move. \"It's hard enough just hanging out with each other, it's that bad. We figured you would be better company than each other,\" he said smiling.\n\nWe were silent for a moment, taking in his bold move, before Kennedy finally pronounced, \"That'll do! Pull up a stool.\"\n\nI could almost feel the collective sigh as they realized they weren't being rejected, and it caused a small thrill knowing what kind of effect we had on men.\n\n\"So, I assume you're on spring break?\" Jake asked as he signaled the bartender for another round of drinks. \"Where do you go to school?\"\n\n\"Mayweather,\" Kennedy replied coolly.\n\n\"Mayweather?\" Jake replied. \"Don't think I've ever heard of it.\"\n\n\"It's in Arizona,\" Kennedy added.\n\n\"We're in Arizona too, U of A,\" Zach jumped in.\n\n\"I've heard of Mayweather,\" Trevor said. \"It's that all girls college, isn't it?\"\n\n\"That's the one,\" Kennedy sighed.\n\n\"That must be fun...no guys...\" Jake grinned.\n\n\"You make it sound awful,\" Abigail interjected. \"It's not a convent. They don't lock us in or anything. We can come and go whenever we want, just all the students are girls.\"\n\n\"I don't think I would be able to handle an all guys school,\" Jake said shaking his head.\n\n\"Bet you wouldn't be able to go on living if there weren't coed showers, huh?\" Trevor ribbed him causing all of us to laugh.\n\n\"Don't knock shower time,\" Kennedy interjected. \"There's some good stuff going on in there!\"\n\nIt became a little too quiet for a moment as the guys probably tried to imagine exactly what she meant.\n\n\"So... now you're all thinking about us naked in the shower,\" I said.\n\n\"Please, they were thinking about that before they even came over here,\" Abigail piped in with an only slightly nervous smile.\n\n\"We were,\" Trevor admitted, shrugging his shoulders coolly.\n\n\"Dude, not cool,\" Jake said.\n\n\"Come on, you couldn't shut up about how totally hot those girls are!\" he said quoting him, then winking to Kennedy. \"Especially the one with the red hair.\"\n\n\"Jack ass,\" Jake muttered, pissed.\n\n\"You like my hair, huh?\" Kennedy grinned as she twirled a few strands in her fingers. She absolutely loved the byplay, as well as the attention.\n\nJake looked quite flustered. He must have been wondering if Trevor had completely ruined his chances or not.\n\n\"You might have a shot,\" Kennedy said, looking him up and down. \"Let's talk about dick sizes.\"\n\nFluid sprayed from Abigail's mouth at Kennedy's blatant comment, and I was thankful we weren't near an open flame. Jake's mouth opened and closed, not making a sound as he tried to wrap his head around what Kennedy just said. I knew she was just fucking with him, but this was a whole new level.\n\n\"Well, this is awkward,\" Zach said after another moment of silence. \"How about a game of Beer Pong? Guys against girls?\"\n\n\"I don't know...\" Abigail said unsure.\n\n\"You're not afraid of losing, are you?\" Zach smiled. \"Besides, there really are no losers in beer pong.\"\n\nAbigail seemed a little uncertain about the challenge as she looked to me.\n\n\"Afraid of losing?\" I scoffed. \"We would destroy you.\"\n\n\"Oh ho!\" he laughed, looking to his friends, amused. \"Cocky, aren't you?\"\n\n\"You have no idea,\" Kennedy blurted out uncontrollably, causing Abigail to choke on her drink as she tried not to laugh.\n\nJake looked at my two friends skeptically and then back to me. \"I don't get it.\"\n\nThe things Kennedy had said to me earlier had been flowing through my brain for a while now, and there really wasn't a reason to hide anything here. No one knew who I was, and in one short week I would never see any of these people again. \"What she means, is that I have a penis,\" I stated evenly after taking a deep drink for courage.\n\n\"That's funny!\" he laughed lightly, letting his eyes scrutinize me further. I could tell he was looking for any hint that what I said was true, but unless he had x-ray vision, and could see through my little black dress and panties, then there wasn't a chance. Besides, my round breasts and cleavage were too distracting for him, it seemed.\n\n\"If you say so,\" I shrugged, letting my boobs bounce for him. \"So, are you ready to lose, or what?\" I gestured toward the table.\n\n\"So how are we doing this?\" Kennedy asked, stepping up to the table. \"There are three of us...\"\n\n\"The same way as doubles, but with three people instead of two,\" Jake said. \"Just try not to get so drunk you forget the order.\"\n\n\"Fat chance of that!\" I laughed. \"After we're done kicking your asses, we'll make sure and call you a cab to drive you home.\"\n\n\"You know, you talk a lot of shit for such a small girl,\" he said.\n\n\"Big things come in small packages!\" Kennedy shot, giggling hysterically towards the end.\n\nI knew she was only having a bit of fun, but with every little comment I felt my cheeks flush a little bit more.\n\nThese guys weren't bad at this. What was surprising though, was how good Abigail was. She had never played Beer Pong before, but nearly every throw she made landed in a cup. Kennedy was a different story, which was also amusing. With her tomboyish attitude, I'd have thought she would've been better. After the third game, Kennedy and Jake called it quits, leaving Abigail and I to finish them off, and after the fifth we were well and truly drunk. We stood victorious, but only barely. They say it's the game you can't lose for a reason.\n\n\"Best out of seven?\" Zach pleaded. \"We can't stop now!\"\n\n\"Not tonight boys,\" Abigail said shaking her head. \"One more game and we won't be able to make it back to our hotel. You can, however, ask me to dance,\" she said without the slightest hint of shyness in those playful eyes.\n\n\"Hell yes!\" Zach breathed.\n\nBefore the words were fully out of his mouth, Abigail grabbed the front waistband of his shorts and pulled him along behind her to a clear space on the floor.\n\n\"I guess it's just you and me,\" Trevor said, casually moving closer.\n\n\"It appears so,\" I replied absentmindedly.\n\nHe was pretty hunky, and I couldn't deny the pull his strong arms had on my eyes, but I was more interested in Abigail and her new carefree attitude she was adopting. I almost couldn't believe what I was seeing.\n\n\"What was that?\" I asked, barely catching something Trevor said.\n\n\"I said you're beautiful,\" he repeated, blushing slightly, and losing some of his smoothness from earlier.\n\nI wanted to say something. I wanted to tell him that I wasn't lying when I said that I had a cock between my legs. I didn't want him to waste his time on me, or say anything that he might be embarrassed about later. Seeing how nervous he was, having a hard time even keeping eye contact now, I couldn't.\n\n\"Thank you,\" I murmured, embarrassed for him, and myself for not having the nerve to completely shut him down.\n\nFor myself, the rest of the night was an exercise in tedium. Trevor was a gorgeous man, and interesting as well, and it took real effort not to let myself get swept up in our conversations. So, with all of my willpower summoned, I tried to remain friendly but distant, keeping myself as monosyllabic as possible without ruining it for my friends.\n\nSpeaking of friends, Kennedy and Abigail were having a blast. From the vantage of our table, I couldn't be sure, but I had the strongest suspicion that Abigail had her hand down the front of Zach's shorts as they made out on the dance floor, and Kennedy was shamelessly rubbing her ass all over Jake.\n\n*** *** ***\n\n\"Fuck!\" Abigail cursed drunkenly as she pressed a hand to her mound through her dress. \"I'm so horny right now.\"\n\nMidnight had come and gone, and we were riding the elevator back up to our room.\n\n\"You're such a cock block,\" Abigail mumbled, frustrated.\n\n\"Would you have really done it?\" Kennedy asked. \"Fuck him, I mean.\"\n\n\"I would have done something,\" Abigail sighed as she rubbed her thighs together sensuously.\n\n\"I'm sorry,\" I apologized. \"I could have just come back by myself.\"\n\nFrom Abigail's silence, I was sure she was wishing the same thing. I felt bad for having killed what looked like a promisingly pleasurable night for the both of them, but it had already been a long day and gently dodging Trevor's endearing advances had left me feeling frustrated and worn out.\n\nAs soon as we entered our room, I made a beeline for the bathroom. All of the alcohol had chosen this moment to run right through me. After washing up, I exited the bathroom and was greeted by a beautiful sight. Abigail was completely nude, sitting on the edge of the bed while Kennedy, still fully clothed sat on her knees on the floor, eagerly licking her pussy. Abigail had two fistfuls of Kennedy's hair in her hands as she held her in place.\n\n\"I love your fucking tongue,\" Abigail moaned.\n\nI watched for a few minutes as Abigail's tight little body writhed around in pleasure before I was finally noticed.\n\n\"You like what you see?\" Abigail asked, in a much better mood now that her needs were being satisfied.\n\n\"You know I do,\" I replied, not feeling frustrated for the first time since the night started.\n\nShe crooked a finger, and in seconds I had my dress up over my head and on the floor. I climbed up onto the bed with her, and her hand dove straight for the growing bulge in my panties, freeing me. Without a word, she wrapped her lips around my stiffening cock and took me all the way in.\n\nThis was one of my favorite things. Kennedy might have been the wild adventurous one that pushed me to my limits, but the sight of Abigail, her sweet innocent face, with her lips wrapped around my cock; very few things turned me on more.",
        "\"Oh God, Abby!\" I moaned.\n\n\"Mmmm mmm!\" she replied, her pretty lips vibrating deliciously around my cock.\n\nThe more Kennedy lapped at her pussy; the more wild Abigail became. Her eyes locked to mine as she sucked me with a wanton spirit. Her moans came faster and faster, and the sheer bliss of it was driving me towards the edge. A moment before I was about to blow, she pulled away.\n\n\"I'm so fucking horny!\" she purred like a slut as she slowly stroked my cock. \"I want you both to fuck me tonight. I want to feel you both inside me.\"\n\n\"Hell yes!\" Kennedy spoke up excitedly, removing her wet lips from Abigail's pussy.\n\nShe darted quickly to her luggage to find her strap-on. It was far from the first time we had used it, but surprisingly it would be the first time any of us would experience double penetration.\n\nTwo short minutes later, we were all completely naked and on the bed. Kennedy was sporting a bright pink cock that was as impressive as my own. Just seeing it protruding out from her hot body made my own ass tingle in wanting, but as much as I wanted my hole fucked, I needed to see Abigail stuffed between us.\n\nAbigail wanted it too. Before Kennedy had even returned to the bed, Abigail had already assumed the position she wanted, on all fours with her back arched and her round porcelain ass sticking out for Kennedy.\n\n\"How much did you have to drink, you little slut?\" Kennedy asked, giving Abigail's ass a nice smack as she moved up behind her.\n\n\"A lot,\" she giggled, giving her ass a little shake for her. \"Are you two going to fuck me or talk about it? OH!\" she finished with a squeal as Kennedy slammed all the way inside her.\n\nNo kisses, no foreplay, as soon as her mouth opened I pressed my cock between her lips. Abigail accepted me eagerly and purred around a mouthful of my hard shaft. She took more and more of me into her mouth, and it took serious effort to not blow my load from the sight before me.\n\nKennedy gripped her hips tightly as she steadily thrust into her. Abigail's long curly brown hair was held up in one of my fists, and some spit was dribbling down her chin from her effort to take me all the way down. In this position, she looked like the sexiest little whore.\n\nWhat really made it hard was when Kennedy and I held still, and Abigail rocked back and forth between us, taking us inside her in turns like she was sliding back and forth between two pistons. She was like our own little sex machine, and her moans the sound of her engine revving up. Her constant moans of pleasure vibrated my cock harder and harder as she neared her own climax, driving me wild.\n\n\"Oh, you hot little slut! Don't stop!\" Kennedy called out. \"I'm gonna cum!\"\n\nI almost admired the way Kennedy held still, continuing to let Abigail rock between us. Her discipline only lasted so long though, as her orgasm loomed ever nearer, she gave up and began hammering into Abigail quick and hard. With Kennedy's force, Abigail lost all concentration on her task and stopped bobbing on my cock, resigning herself to simply holding me in her mouth as she moaned her way to climax.\n\nHer hot, wet mouth, and the vibrations buzzing through my cock were too much, and I watched on with lust as first one, and then the other climaxed in front of me. Abigail quaked between us as Kennedy drove deep, and her teeth clenched down around my sensitive shaft. The added sensation, even pain, was too much for me, sending me over the edge. My cum began to fill her mouth. As soon as the first spurt splashed onto Abigail's tongue, she began sucking gently, milking out every last drop.\n\nIt took her a moment to finally loosen her teeth after I finished cumming, but once she did, I gratefully removed my cock from her mouth.\n\n\"Fuck!\" I called out as I fell back on the bed, cradling my cock in my hands. \"I thought Kennedy taught you about the no teeth thing.\"\n\n\"Oh, I did,\" Kennedy assured me as she pulled out of Abigail and crawled up to lay beside me.\n\n\"I got a little carried away,\" Abigail smiled bashfully. \"Still, I think you liked it. You came buckets!\"\n\n\"That's not the point!\" I tried.\n\n\"Actually,\" Kennedy cut in. \"that's exactly the point.\"\n\n\"Okay, okay,\" Abigail said, crawling up onto my other side. \"Want me to kiss it better?\"\n\n\"I don't think so. In fact, I think you might have lost your Lexi-cock privileges for a while,\" I teased.\n\n\"Are you sure about that?\" Abigail asked, running her hand down over my breasts and stomach to slip underneath my own hands to my cock. \"Because there's something I want to try tonight. Something I'm going to need your help with.\"\n\n\"And what is that?\" I asked, suspicious.\n\n\"Well, ever since I asked you what anal felt like, I've been wanting to try it,\" she blushed, giving my cock a playful squeeze.\n\n\"Anal?\" Kennedy asked surprised. \"What the hell has gotten into you tonight, girl?\"\n\n\"Besides your cocks?\" she asked. \"I don't know, but all I want to do is get fucked until I can't think straight.\"\n\n\"Honey, we passed straight months ago,\" Kennedy smirked.\n\n\"Hardy-har-har,\" Abigail said flatly, then turning back to me, \"So, are you gonna help a girl out? Or do I need to ask Kennedy?\"\n\n\"Hell no, you don't need to ask Kennedy!\" I said quickly. \"And as far as apologies go, this is a pretty good one.\"\n\nAbigail smiled, and hopped up onto her knees excitedly. \"So, how do we do this?\"\n\n\"First, I think we're going to need more alcohol,\" I said.\n\n\"I'll summon the butler and have him send up some wine,\" Kennedy said in a funny accent as she got up to grab the phone.\n\nAbigail was trembling with excited anticipation next to me. Knowing exactly how she was feeling, I reached out and pulled her down to me. We kissed softly, saving the passion for what was to come. I let my hands roam over her body, slowly working down towards her ass. She gave a small little jump as my fingers first brushed over her pucker, but she quickly settled down and began to grind against me. Feeling her beginning to relax, I began rubbing circles around her virgin hole.\n\nAs I slowly slipped a finger, slick from her own juices, into her tight hole, I couldn't help but bite my lip in anxious excitement.\n\n*** *** ***\n\n\"I feel so sore!\" Abigail moaned as she shifted in her seat at breakfast the next morning.\n\nAfter all the wine we drank, most of the night was a blur, but there were a few memories that shined through in vivid detail.\n\n\"You asked for it,\" I smirked, knowing all too well what she was feeling.\n\n\"Repeatedly!\" Kennedy added.\n\n\"I think you took advantage,\" Abigail said, eyeing us both suspiciously. \"I was pretty drunk.\"\n\n\"You think so?\" Kennedy asked, smiling innocently. \"Why don't you take a look at something for me.\"\n\nKennedy scooted her seat next to Abigail's and pulled out her phone. After tapping the screen a few times, Abigail's eyes grew wide, and even with the volume turned down, I could still hear why.\n\n\"Let's see what Little Abby has to say on the subject, shall we?\" Kennedy mused playfully.\n\n\"Oh my God!\" Abigail gasped, quickly looking around to make sure no one else could see the screen. \"You videotaped us?\"\n\n\"Only for a minute or two,\" Kennedy replied. \"Oh look! Here's my favorite part!\"\n\nI could clearly hear Abigail begging me to fuck her ass harder, demanding me to call her my little slut.\n\n\"Turn it off. Turn it off!\" Abigail said blushing furiously, trying to bury her face in her hands. \"Delete that now!\"\n\n\"Oh, come on! Don't you want a little something to remember spring break?\" Kennedy teased.\n\n\"Please?\" Abigail begged. \"I don't want anyone to ever see that.\"\n\n\"It's not like I'm going to show it to anyone,\" Kennedy said.\n\n\"Oh, just delete it Kennedy!\" I finally cut in. \"It's not like we'll ever need a reminder about what happened last night,\" I smiled.\n\nI understood Abigail's anxiety over having a video of her being fucked possibly floating around. I was in that video too, and even though it wasn't me being fucked in the ass, I really didn't want even the hint of possibility of the world seeing it. It had to have been even worse for Abigail. As sheltered as she was from society, she wouldn't be forever. Sooner or later she would have to step out of the shadows to take the reins of the Lockwood Empire, and the last thing she needed was a sex tape of her wild night in Cancun.\n\n\"Fine,\" Kennedy sighed, tapping the screen of her phone. \"See? All gone,\" she showed Abigail.\n\n\"Thank you,\" Abigail murmured, relieved, but still highly embarrassed.\n\nAfter breakfast, we took a bus with a bunch of other people from our hotel to see the Mayan ruins to the south. It was kind of surreal. Only a few miles from our luxury hotel, and one of the biggest beach parties of the year, was the sight of giant step pyramids and the ruins of an entire civilization.\n\nWe weren't allowed to go into the structures, and had to keep to a strict perimeter, but it was still amazing. We traveled to two other sites, and took hundreds of pictures between us before calling it a day. By the time we got back to our hotel our legs were exhausted. We didn't even have the energy to make it down to the beach, opting for the shorter walk to the pool where we took a nap in the shade.\n\nAs much as this was supposed to be a vacation to remember, several of our nights became a blur. With all the alcohol and dancing, coupled with live music and flashing lights, it was hard to remember where one night ended and the other began. One thing we truly remembered though were the mornings after. Sometimes I was surprised that we even made it back to our bed. Our hangovers seemed legendary, waking up in a groaning tangle of sweaty limbs, reeking of the alcohol seeping from our pores.\n\nEach morning it took several hours to recover, and finally get to a functioning state, and each time we made a pact to take it easier the next night. Somehow, we forgot all sense once the liquor was flowing again. So much for the high tolerance I possessed. If we had too many more nights like this, I was going to need a new liver.\n\nAs for being myself, it seemed a little easier when I was drunk. If a guy tried to flirt with me, I just told him that I had a cock. It hadn't really been going well though. That seemed to be a deal breaker to a lot of men. I did get a strange look of surprise and curiosity from one guy, but he still turned me down. His friends were right there with him, and I didn't think he wanted them to know that he was into what I was offering. I did catch him staring throughout the night. He was cute, in a boyish kind of way, and with the state I was in, I wouldn't have said no if he wanted to sneak off for a little kissing and touching.\n\nIt turned out being my true self was more of a burden than even I had thought. Not wanting to lead anyone on, and trying to be honest with people about myself, it left me a little lonely. I still had Kennedy and Abigail, but I didn't want to intrude on their fun either. It mostly left my dance card a little thin. It was a bit of a bummer, but one thing that got easier and easier was telling people about me. It was quite liberating, in a scary sort of way. I loved the fact that while I was technically hiding my cock in my panties, I wasn't actually hiding from all of these people.\n\nWhile our nights were filled with drinking and dancing, along with debauchery in our hotel room, our days were usually spent exploring. We had seen nearly all of the Mayan ruins, went snorkeling off the coast of Isla Mujeres, shopped in the markets, and after some detailed directions from my sister, visited one of the hidden waterfalls. It had been breathtaking, the water cascading down from a thirty-foot cliff into clear blue waters. We spent over an hour there, all alone, frolicking in the water and basking in the beauty of where we were.\n\n\"What were you two thinking?\" Abigail laughed from the back seat of our rental car.\n\nWe had just spent thirty minutes hiking back to our car, through what I could only describe as a jungle, after a very uncomfortable transaction with the local law enforcement.\n\n\"What I was thinking was, sex under a freaking waterfall!\" Kennedy replied. \"Does it get any more awesome than that?\"\n\nShe had a point there. It had been incredible while it lasted.\n\nAfter so long without anyone else coming along, we thought we had the entire place to ourselves. Kennedy didn't even have to talk me into it as she swam up to me and began kissing me. The place was just magical, seducing us all by itself.\n\nHer smooth body slid against mine in the warm waters, and her fingers dipped into my bikini bottoms fishing out my hardening cock. Using it as a handle, she pulled me toward the flat rock where the water was crashing down. Before either of us knew what was happening, I was on top of her, thrusting my aching cock into her wet folds. We were so caught up in the moment; we didn't hear the commotion by the shore until it was too late.\n\nTwo police officers had shown up, and appeared to be quite pissed off. As they called us out of the water, it was impossible to hide my cock from them. As hard as it was, and as tiny as my bikini bottoms were, the only thing I could do was tuck myself in as best as I could and cover what else remained with my hands clasped in front of me.\n\n\"I'm just glad we didn't end up in a Mexican jail,\" Abigail sighed.\n\n\"We wouldn't have gone to jail,\" I replied. \"They just wanted money.\"\n\nIt was true. You hear about police corruption with tourists, and it was no lie. They said that they were going to write us a three-hundred-dollar ticket that we would have to take to the court to pay downtown, or we could pay the ticket immediately for half the price. It was a no-brainer. Between us, Kennedy and I had more than enough money to cover it. We weren't about to ask Abigail for help either; it wasn't her fault we got caught screwing.\n\nDespite getting into trouble and having to part with over a hundred bucks to get out of it, it was still quite amusing. I could hardly believe we had just been caught fucking, right there, out in the open. At that moment, I was still pretty worked up, and was wishing that Abigail was the one driving so Kennedy and I could finish what we started. I was even tempted to crawl over my seat, into the back with Abigail, but the last thing we needed was to get caught with my dick in one of them, again.\n\nInstead, I shimmied back into my jean shorts and tried to think of anything except how much I wanted to cum, in an attempt to reduce my bulge to a more manageable size.\n\nThe drive back to the Hotel Zone took over an hour and it was quite relaxing. With the windows rolled down, we were graced with the warm ocean air as we relaxed listening to music from Kennedy's iPod.\n\n\"We still have a few hours before sunset,\" Kennedy said, as we pulled up to our hotel. \"What do you guys want to do?\"\n\n\"Anything but the beach,\" Abigail said. \"I've been pushing it enough as it is.\"\n\nShe had, too. Her normally pale alabaster skin held more of a pinkish tint to it now, and it was a surprise that she hadn't burned yet with all the sun we were getting.\n\n\"Come on!\" Kennedy pleaded. \"I love the beach.\"\n\n\"I'm a little tired of the beach as well,\" I added. Sure, it was such an amazing view, but I didn't think my liver could handle another afternoon of day drinking in the sun. \"Let's just relax until tonight.\"\n\n\"You two suck!\" she pouted, trying to win us over.\n\n\"Funny, I seem to remember you doing a lot of sucking yourself, last night,\" Abigail quipped.\n\n\"Oh? You're going there?\" Kennedy asked, raising an eyebrow meaningfully. \"How's that ass of yours?\"\n\nThe memory of the video Kennedy took of us fucking the other night was still fresh and caused her cheeks to redden dangerously.\n\n\"Before Abigail dies of embarrassment, can we get something to eat?\" I asked, smiling to Abigail playfully. \"I'm starving.\"\n\n*** *** ***\n\nWhat was one of the best parts about tourist traps in Mexico, you ask? Tacos. You can hardly throw a rock without hitting three taco stands. I didn't know what it was, but those dollar beauties were so delicious. A half a block from our hotel we found ourselves sitting at a table on the sidewalk powering down a handful of tacos and a beer.\n\n\"This is delicious!\" Kennedy mumbled through a full mouth. \"Oh God! I swear I could cum right now,\" she exaggerated.\n\n\"You could cum from a steady breeze,\" I ribbed her.\n\n\"Yeah right,\" she denied. \"But wouldn't it be awesome if you could?\"\n\n\"Is that Skylar?\" Abigail cut in, looking behind Kennedy and I. \"I thought she said she was going home for break.\"\n\nMy heart jumped at the thought of someone from school being here, and I spun around a sight quicker than Kennedy. I had been outing myself almost the entire time I'd been here, thinking that there wasn't a soul around that knew who I was. My eyes scanned the crowds, but I just couldn't see what Abigail saw.\n\n\"I don't see anyone that looks like her,\" Kennedy said, perfectly calm as she swayed in her seat, trying to get a better look.\n\n\"Are you sure it was her?\" I asked, a little more on edge.\n\n\"I don't know. I just caught a glimpse,\" Abigail said.\n\n\"Hey! Fancy running into you here!\" someone said from behind us, causing all of us to give a little jump.\n\n\"Jesus Christ!\" I called out, realizing it was only the boys we'd met on our first night. My heart was throbbing, and not in a good way.\n\n\"You've got a mouth on you!\" Jake smiled.\n\n\"She has other things too,\" Kennedy said playfully. \"Are you stalking us?\"\n\n\"No, of course not!\" Zach defended before Trevor cut him off.\n\n\"They tried,\" Trevor said slugging Zach playfully in the arm. \"They just couldn't find you guys after that night in the bar.\"\n\n\"Aww, that's too bad. I've never had my own stalker before...\" Kennedy mused teasingly.\n\n\"Oh, they're great fun,\" Abigail interjected. \"Right up until they begin mailing you dead puppies.\"\n\n\"Someone mailed you a dead puppy?\" Jake asked, shocked.\n\n\"Not me, but someone I knew,\" Abigail said, shuddering at the memory.\n\n\"Wow, this just got incredibly awkward,\" Kennedy sighed, crumpling up the greasy paper from her finished tacos.\n\n\"So uh, listen. There's this thing going on tonight...a bonfire,\" Jake began. \"It's a little ways down the beach. Do you think you guys might want to go to it with us?\"\n\n\"I think we could be persuaded,\" Kennedy said. \"What time?\"\n\n\"It should get going just after sundown,\" he said. \"It's supposed be a pretty huge thing, but we'll be near the Golden Sands Hotel.\"\n\n\"We'll keep an eye out for you,\" Kennedy smiled.\n\n\"Great!\" Jake said, clapping his hands together eagerly as he backed away. \"See you then!\"\n\n\"Bye Lexi,\" Trevor smiled as he turned to walk away with his friends.\n\n\"Ohh! Someone's got it bad for you!\" Abigail laughed as they left earshot.\n\n\"Yeah he does!\" Kennedy agreed.\n\n\"Cut it out!\" I said, more irritated than I intended to be.\n\n\"Come on! What's wrong?\" Abigail asked, putting her arm around me as we walked back to our hotel.\n\n\"You know what's wrong,\" I said. \"He doesn't know.\"\n\n\"But you told him,\" Kennedy said. \"That first time we met them, you told them all that you had a...dick,\" she finished a little quieter.\n\n\"He didn't believe me. I think they all thought it was some big joke,\" I said. \"There's a difference between being told something and actually believing it.\"\n\n\"How do you know he doesn't believe you?\" Abigail asked.\n\n\"Yeah, did he say something?\" Kennedy added.\n\n\"Well, no,\" I said. \"But I can just tell,\" I finished before Kennedy or Abigail could jump onto my insecurities.\n\n\"So, tell him again...tonight,\" Kennedy offered, like it was the most simple solution. \"Hell, show him if you have to.\"\n\n\"Right there on the beach?\" I asked sarcastically, giving her a wry look.",
        "\"Why not?\" Kennedy smiled, ignoring my tone.\n\nUghhh!\" I cried, feeling my frustration rising.\n\n\"Don't get yourself hung up on how Danny reacted. Not every guy you meet will be like that,\" Abigail reassured me.\n\nI was feeling a little worked up, and with not much else to do, since sunning on the beach was off the table, Abigail booked us some time at the spa. Facials, pedicures and manicures, as well as a glorious hour-long massage. It was the first time that all three of us were moaning together in the same room and one of us wasn't inside one of the others.\n\nAs wonderful as the massage was, I almost regretted getting it. I was so relaxed by the time we got back up to our room, all I wanted to do was sprawl out on our bed and fade into a peaceful sleep.\n\n*** *** ***\n\nI knew I would be telling Trevor that my having a penis was no joke tonight, but getting ready for the night out was soothing. There was just something about picking out a cute outfit and doing my hair and makeup that just felt right. While the rest of my world might not always spin on the right axis, this one thing remained a constant ritual.\n\nKnowing that the moment I told him that I had a cock, he would see me as a man, I wanted to make sure that my appearance shouted that I was all woman. I used heavy eye shadow, making my eyes look smoky and large, and shiny bubble-gum-pink lip gloss to accentuate my sexy lips. For clothes, I decided on a tight white tank top and a black cotton skirt with bold pink underwear underneath. You could easily see my bra through the semi-transparent fabric of my top as it stretched itself around my perky breasts. I wanted to wear some cute heels, but they would be next to useless on the sand, so instead I opted for a pair of wedge sandals that had the same effect of lengthening my legs and perking up my ass even more than normal.\n\nWith my hair grown down, just past my shoulders now, and long past the cute asymmetrical bob, I added some product and twisted dozens of small locks of hair, giving it a sexy wet look.\n\nI wasn't the only one that seemed to be preening for tonight either. Kennedy and Abigail were both putting in extra effort to impress. Kennedy even let Abigail borrow a very short, very slutty, jean skirt to wear with her dark blue bikini top. Kennedy wore her bikini top as well, but with shorts.\n\nThe sun was well and truly set as we began our walk towards the bonfire. We could hear the party from over three blocks away. The loud voices of laughter and revelry were barely contained by the sounds of live music filling the air. If that wasn't enough to tell us we were heading in the right direction, the orange glow in the sky from the fires on the sands were a beacon.\n\nOnce we finally turned off the main street, and started heading toward the beach, the view became clearer. There must have been thousands of people packed together up and down the sands. No less than half a dozen fires lined the beach, stretching out to either side, providing more than enough illumination. Every so often, there were clusters of pickup trucks parked together on the sand with people handing out steady streams of plastic cups they were filling from kegs of beer.\n\nSince going off to college, I had to redefine what I thought a crazy party was, but this certainly raised the bar from what I had become accustomed to. There were so many people, so much going on, I didn't even know where to look. It was chaos and bedlam under the open night sky. I was so taken in by what I was seeing; I hadn't even realized we had all stopped dead in our tracks, dumbstruck.\n\n\"Holy shit,\" Kennedy exhaled, deadpanned. \"This is insane.\"\n\n\"This looks like a bad idea,\" Abigail commented, unsure.\n\n\"This looks like an amazing idea!\" Kennedy smiled.\n\n\"Open fires and enough alcohol to kill all of Greek Row?\" Abigail asked. \"Yeah, there's no way this doesn't end badly.\"\n\n\"Come on!\" Kennedy smiled. \"Where's the fun, wild Abby we've been seeing all week?\"\n\n\"She's not drunk yet,\" Abigail said nervously.\n\n\"Let's fix that!\" she said, grabbing Abigail's wrist as she hooked my arm in hers, escorting both of us toward one of the many trucks dispensing beer on the outer perimeter.\n\nI had been silent during the exchange, but I was somewhat inclined to agree with Abigail. As amazingly fun as all of this seemed, there was no way something bad didn't happen tonight. Hell, I was surprised something bad hadn't happened already. Even knowing that, I couldn't say no to this. It was our last night in paradise. At noon tomorrow, we would be back on a plane heading home. I guess Abigail felt the same because she didn't protest as we were each handed red solo cups full of beer.\n\nIt was exactly what I expected of a beach party. There was live music, alcohol, dancing, and all kinds of revelry...except times a thousand. It was a bit intimidating. We sipped our beer and unconsciously swayed to the music as we watched from the fringes of the party.\n\n\"Where do you think they are?\" Abigail asked no one in particular as she twisted, looking around.\n\n\"Relax, girl!\" Kennedy laughed. \"They'll find us. Try not to be so obvious.\"\n\n\"I think someone has a bit of a crush,\" I teased.\n\n\"So, what if I do?\" Abigail asked defensively.\n\n\"Don't get snippy,\" I laughed. \"If you like the guy, I say go for it. But I agree with Kennedy; try not to appear too eager.\"\n\nWe stood around for about ten minutes, Abigail fidgeting about the whole time, preening her skirt and bikini top in a futile attempt to look as sexy as possible. She already looked it without trying. When the boys did finally show, it was a relief just for the fact that I no longer had to watch Abigail's nervous display.\n\n\"You're lucky, Zach,\" Kennedy said as she gave Jake a hug. \"Abigail almost got tired of waiting for you.\"\n\nHer little lie was quickly shattered as Abigail planted a deep kiss on him, pressing her tight body firmly against his.\n\n\"Well, they're happy to see each other,\" Trevor commented, before turning his full attention to me. \"Can I get you a refill?\"\n\nLooking into my glass, I realized it was still mostly full, but just seeing him staring at me like that made the butterflies in my stomach do back flips, and my entire skin began to tingle pleasantly. I hated the uncontrollable effect a cute guy had over me. I had to tell him, and soon.\n\n\"Sure,\" I replied, quickly chugging down the rest of my beer, in what I feared might have been a very unladylike fashion, before handing him my empty cup.\n\nAfter a few beers and some idle chitchat, that was mostly unintelligible from the constant din of music and loud voices, Abigail and Kennedy moved off with their dates, leaving me alone with Trevor, but not before casting reassuring looks in my direction. I guess it was that time.\n\nIt was depressing as hell. I knew once I told him it would all end, and all I wanted to do was let this last a little while longer. I loved the way he looked at me, with that little sparkle in his eyes, the way he tried so hard to focus on my eyes, but would wander over my curves before he could catch himself. A little longer wouldn't hurt.\n\nListening to the music, and watching the band play, I found myself leaning back into his strong body. His big arms wrapped around my small frame, and I let out a sigh. I found myself lost in the feeling of him holding me and wishing that I could really have this someday. A man who knew me completely and loved me anyway, who would hold me like this and not care who knew.\n\nI began to sway against him to the music.\n\nTrevor's hand moved slowly up my body to my chin. He tilted my head up and to the side, then leaned down and kissed me. It wasn't strong, or passionate. His lips pressed softly to mine and I melted.\n\nHis lips against mine, his big arms surrounding me as he towered over me, and the smell of his musky cologne filling my nostrils seemed to take me over. Our kiss lingered for a moment as I savored it. When his lips slowly began to part, I finally came to my senses and pulled away. I was making the same mistakes all over again.\n\n\"I can't...\" I began.\n\n\"I'm sorry,\" he said on top of me. \"I just thought...\"\n\n\"No, it's not you. It was wonderful. You're wonderful...but I can't,\" I said as I pulled myself from his arms.\n\nHe looked slightly hurt by my reaction.\n\nI saw Abigail looking in my direction as she was dancing closely to Zach. She saw what had happened, and she smiled at me encouragingly, motioning me to go ahead and tell him what I needed to say.\n\n\"Can we take a little walk?\" I asked, not wanting an audience when this went horribly wrong.\n\n\"Sure, whatever you want,\" he said, reaching out to take my hand.\n\nHesitantly, I took it, and led him away from the cacophony of the party. We walked in silence for a while as we made our way to the edge of the party and beyond. He seemed completely fine in our silence as the sounds of music and partying faded behind us. I, however, was a nervous wreck, and I was thankful I had my phone with me, because when this went badly, I just knew I wouldn't want to stick around. It wasn't until we made it into the hilly dunes that he finally spoke.\n\n\"So, what's up?\" he asked, breaking the long silence.\n\n\"Well, you see...\" I tried. \"The thing is...\" This was even harder than I thought. My heart was pounding painfully in my chest and my palm was sweating in his hand. Taking a few slow deep breaths for courage I tried again. \"Do you remember what I said when we first met?\" I asked.\n\n\"Ummm...\" he said thinking back. \"Could you be a little more specific?\"\n\n\"When I said that I had a penis,\" I said awkwardly.\n\n\"Oh!\" he laughed. \"I remember. That was hilarious by the way.\"\n\n\"It wasn't meant to be,\" I continued, pulling my hand from his as we walked side by side. It was easier now that I had started, but I still couldn't look at him. \"I wasn't joking. I was being serious. I didn't want to give anyone the wrong impression, but I could just tell that you thought it was all some big joke. I like you, but I really don't want you to think that I tricked you. I never wanted that...and when you kissed me...\" Unshed tears were welling up in my eyes now.\n\n\"So, you're saying that you have a...\" he began. \"But you're so...beautiful,\" he finished\n\nI felt a catch in my chest as he said that. I was sure he knew I was telling the truth now, but he still thought I was beautiful?\n\n\"Don't cry,\" he pleaded, stopping to pull me into a comforting hug.\n\nI collapsed into his chest as he held me up, gently rubbing my back. I thought that I must have been dreaming. How could this be going so well? He didn't seem repulsed, or even taken aback by what I'd just told him. My leading theory was that I was unconscious. That he had taken it so badly that he knocked me out, and now I was dreaming while I lay unconscious in the sand.\n\nWhen he finally pulled back, he looked down at me with those sweet eyes and asked me if I was okay.\n\n\"You're taking this a lot better than I anticipated,\" I said as I wiped away the moisture from my eyes, praying that I hadn't ruined my makeup.\n\n\"Well you did tell all of us before, at the bar. It's my fault I didn't believe you. Besides this is the twenty-first century. You're not the first transsexual I've accidentally hit on,\" he smiled before adding a little shyly, \"but you are the first one that I want to intentionally.\"\n\nI felt stunned at his words.\n\n\"You're not grossed out?\" I asked.\n\n\"Why would I be?\" he asked. \"You're fun, smart, and gorgeous. What's not to like?\"\n\nI thanked the darkness as I felt my cheeks flush with color at his comments. It felt so surreal. He knew and still liked me. I had spent so much time dreading him rejecting me that I never thought of what would happen if he accepted me. My entire body felt warm and there was a buzzing in the air, causing me to tremble with possibility.\n\nTrevor reached out and pushed a few strands of my hair behind my ear, letting his fingers brush against my cheek lightly. I bit my lip nervously as I looked up at him, and taking a risk, I stepped right up to him. Immediately, his arms wrapped back around me, and I rose up onto my toes just as he tilted his head down to kiss me.\n\nAgain, it was soft and tender, but the longer our lips touched, the more of him I wanted. My lips parted slightly, and my tongue brushed against his lips, and without hesitation they opened for me. He kissed me deeply and his hands pulled me tight against him as they rubbed along my body.\n\nOur tongues danced and my knees felt weak. I was sure that if his arms weren't there, I would have been a puddle on the floor.\n\nOne of his hands slipped down to my ass, cupping my cheek firmly. His fingers fumbled with the cloth of my skirt, and before I knew it, I felt his hand squeezing my bare ass playfully. I moaned into his mouth in response, and pushed my body harder against his, feeling the growing erection in his shorts.\n\nI didn't know what came over me, but I felt this need rising up inside of me. I wanted him. My whole body screamed for him, and I knew that I had to have him. The things he said...and the passion I felt coming off of him in waves, I had to have him, and my body and hormones took over.\n\nI let one of my hands slip from around his neck, down his hard body to the waist of his shorts between us. As my fingers brushed over his bulge, my heart shuddered. It was huge. Still in his shorts, I knew it was bigger than anything I'd seen, and deep down I wanted it desperately.\n\nWith his lips still on mine, I pulled the drawstring on his shorts, loosening them, and snaked my hand inside the waist. He was so warm and smooth, and as I hefted it in my hand, heavy. It was his turn to moan for me as I slowly stroked him.\n\nMy own cock was screaming at me, and my little pucker was tingling like crazy as I squirmed in his grip. His fingers were so close to my hole and I desperately wanted him to touch me there.\n\nSince the moment our lips touched, I knew what I wanted to do, but it took me forever to build up the courage. In the end, it came down to one thought. This was my last night. If I didn't take what I wanted now, I would never get the chance again.\n\nSteeling my resolve, I pulled away. Biting my lip nervously, I looked him in the eyes for a moment before slowly sinking to my knees on the powdery sand. His massive cock was sticking straight out, perfectly even with my mouth. A little nervous, I closed my eyes and stuck out my tongue as I leaned forward. The tip of his cock brushed against my wet tongue. I took my time, exploring him with my mouth before I finally took in his head, sucking gently as my tongue swirled over it.\n\nHis fingers ran through my hair as he watched me, and I finally began to suck him. I took him in, little by little, as I slowly began to bob on his shaft. Only half of him was in my mouth when I felt him hit the back of my throat. As I felt him press in, stretching my throat open, letting a couple more inches slide inside, I silently thanked Kennedy for her lessons.\n\nI felt so slutty, on my knees for him right here on the beach, sucking his cock, but I also felt like a woman. I savored the taste of him as his precum oozed slowly onto my tongue. His wide cock was making my jaw ache, but I loved every second of it. Eventually I felt his hands tighten on my hair and I knew he was getting close. I began to suck harder, putting in extra effort as I reveled in knowing what I was doing to him.\n\nOut of nowhere, we heard laughter from just over the sandy hill behind us. Trevor quickly extricated himself from my mouth, pulling up his shorts with one hand while helping me to my feet with the other. He used me to cover his erection just as a guy and a girl crested the hill and saw us. Seeing us, they chose a new direction and kept walking.\n\nJust as they disappeared over the next hill, we both burst into laughter at having almost been caught.\n\n\"That was close,\" I said.\n\n\"Tell me about it,\" Trevor groaned in frustration.\n\nI knew his pain. He had been so close; I just knew he was aching right now. Part of me felt for him, but the other part found it hilarious and satisfying, knowing what kind of power I had. As sadistic as that last part was, I was in need as well. My own cock was throbbing painfully, and I was in desperate need to cum.\n\n\"What do you say we get out of here?\" I asked forwardly.\n\n\"Like where?\" he asked.\n\nI could tell what he wanted to say, but he was trying to be a gentleman, even if he did just have his cock in my mouth.\n\n\"Someplace where we can finish what we've started,\" I said, enjoying the smile that it produced on him.\n\n\"My hotel is right over there,\" he pointed.\n\nI took his hand in mine, and began marching us the hundred or so yards to his hotel. It felt like it took forever to make it into the hotel and up the elevator to his room. Knowing that he wanted me, my entire body felt like it was vibrating with excitement.\n\nTrevor fumbled his key as he let me into his room. It was much smaller than ours, with two twin beds and what appeared to be a marvelous view of the parking lot. I didn't have much time to take in more, because as soon as the hotel door closed behind us Trevor spun me quickly around to face him. My small body crashed into his much larger one, and he brought his lips down to kiss me. His arms easily encircled my body as he held me tightly to him, mashing my breasts deliciously into his hard body. My hands quickly snaked around his neck as I kissed him back.\n\nThe whole time our lips danced, I couldn't fight the smile from my face even if I had tried. The way he touched me, the way he held me, I could feel his desire, and my own for him was an easy match. My body practically quivered for him. I eventually became lightheaded and had to break away from our kiss.\n\n\"Are we really doing this?\" I asked dreamily.\n\n\"I hope so,\" Trevor smiled back at me, his gaze filled with lust.\n\nHe wouldn't be the first man I'd had sex with, and even though I hardly knew him, I felt absolutely safe with him. I couldn't explain it. Josh had known about me, but I had still been shy, but in this moment, I felt nothing but empowered.\n\nLetting the excitement wash over me, I gently pushed him back until he was sitting on the edge of one of the beds. Biting my lip seductively, I reached down and peeled off my tank top, throwing it at him playfully. Next, I reached behind my back and deftly unclasped my bra. Teasingly, I crossed an arm over my breasts as I slipped off the straps, making a great show of it before I slowly lowered my arms, letting my bra fall to expose my breasts to him. His eyes were glued to my body. His hand reached out to touch me, but I took a step back, out of his reach.\n\n\"Not so fast,\" I smiled, holding up a finger. \"It's your turn.\"\n\nTaking the hint, I watched him tear off his tank top in record time, revealing his hard-muscled body. It was my turn to stare. He was such a hunk! I was sure I even saw him flex a couple of times for me.\n\nBack to my turn, I stepped out of my wedge sandals and kicked them out of the way. I then hooked my thumbs into the sides of my black skirt and panties, and wiggling my hips, I slowly inched them down, keeping my eyes locked on him as he watched my little show.\n\nWith my legs pressed together, my cock was hidden as my skirt and panties hit the floor. I watched his eyes locked to my hairless crotch, and feeling the first bit of nerves since we entered his room, I slowly parted my legs for him. As soon as there was ample room, my cock sprung free from its confines, not fully hard, but definitely already pressing for its full rigidity.\n\nI stood there, fully naked for the first time in front of a man, and I loved what I saw in his eyes. He traced every inch of my body, never shying away from my cock, and all I saw in him was approval. Just the way he looked at me right then made my cock throb harder, and my eager hole tingle in anticipation.",
        "\"Ah-hem,\" I cleared my throat after a few long moments. I loved the way he looked at me, but I needed more.\n\nHis eyes quickly snapped away from my body to my face, and seeing my smile, he quickly kicked off his shoes and shorts, leaving him just as bare as myself, and magnificent. I took two swaying steps to him and climbed up onto his lap, straddling him. I could feel my own cock brush up against his larger one as I settled onto his lap.\n\nWithout hesitation, his arms pulled me against him, and he kissed me passionately. As our lips danced, I slowly began rocking against him, letting our hard cocks rub together teasingly.\n\nReaching for my small clutch on the bed next to us, I said a silent thank you to my sister for teaching me about the importance of being prepared. Not taking my lips from him, I fumbled for the small bottle I kept in there. Once in hand, I popped it open and squirted some of the contents into my open palm before tossing it aside.\n\nI coated his throbbing member with the lubricant, and the little that was left over I reach back to smear on my ass.\n\nUnable to wait even a moment longer, I rose up off of his thighs, and reaching through my legs from behind, I lined him up with my hole. Even in my hand he felt huge. It was bigger than anything I had ever had, and I was worried that it wouldn't fit. Not for the pain, but because I desperately wanted him inside of me.\n\nAs soon as I had his head nestled right against my opening, I took a few deep breaths and began letting my weight down. It took serious concentration and effort, but when I finally felt him pop inside, I let out a relieved sigh. The pain of him stretching me was immense, but the pleasure of feeling so full was overwhelming.\n\n\"Are you okay?\" Trevor asked, brushing some hair from my face after I hadn't moved for a bit.\n\n\"I'm perfect!\" I sighed. \"You're just so big!\"\n\nHe chuckled at my words, but made no further comment. Instead, he stroked my back and hair soothingly. Feeling a little better, I sank down his shaft a little more. I knew he was barely inside me, but I felt utterly stuffed. Embracing the pleasure and blocking out the pain, I began to slowly ride him, rising up, and with each down stroke taking more and more of him. By the time my ass touched his thighs I was gasping for breath in his arms.\n\nResting now with him fully inside of me, I caught my breath and savored my accomplishment. He was fully in me. I had done it! And God did it feel incredible. I could feel every inch of him, so warm, and throbbing quickly with his pulse. Just the throbbing itself was sending shivers of pleasure throughout my body.\n\nTrevor took my face gently in both of his hands and tilted it up to his. Stroking my cheek softly, he looked deep into my eyes before placing a tender kiss on my lips. I clung to him.\n\nAs we kissed, I slowly began rocking atop of him, letting just the smallest of motion occur. The longer our embrace lasted though, the larger my motions became. Soon all pain seemed to fade away to the background and I was taking his giant cock in long full strokes. His strong hands moved down to my ass, aiding my tired legs as he began to help me fuck his cock.\n\nI leaned back as he maneuvered me along his cock and brought his head down to my breasts. He eagerly took my nipple into his mouth, lavishing it with his tongue as he sucked on it, causing me to moan for him.\n\nWith my back arched just so, his cock began hammering down on my sweet spot with each thrust, driving me wild. In no time at all, I was a moaning mess as he worked my body over.\n\n\"Oh fuck!\" I cried as that tidal wave of pleasure began to build. \"More! Oh God, more!\"\n\nHis pace quickened as he lifted and dropped me faster and faster onto his cock. I was already gone, and I knew it. Even if he stopped now, it wouldn't prevent the inevitable. The only question now was intensity, and if he kept this up, I was in for a doozy.\n\nMy own cock throbbed between us, gliding along his rippled abs in a slick sticky mess of my own leaking fluids, doing nothing but adding to my pleasurable torment. With each thrust he made, my pleasure ebbed and flowed, constantly rising. I didn't even try to hold back as it hit.\n\nLike shattering glass, my orgasm broke, washing over me and through me, sweeping me away. My cock sprayed out, coating our bellies and chests in my cream, smearing it between us as our bodies slid against one another. All through this, Trevor was still fucking me for all he was worth, grunting like a beast, sending more pleasure throughout my little body than I could handle.\n\nI was panting hard, unable to take a full breath as he ravaged me. My voice was so hoarse from my moaning. Even if it wasn't, I didn't know if I could even speak right now. Just when I thought I would pass out, he made two more hard thrusts up into me before calling out his own orgasm.\n\nI could feel it. His warm cum filling me in fits and spurts. So warm, and so much of it, with each blast a new shock of pleasure washed through me.\n\nSpent, Trevor fell back onto the bed and I followed, resting on his chest, his cock still firmly up my ass, holding his seed in place. Our entire bodies were covered in sweat and fluids from the effort of our fucking, and I basked in the afterglow, feeling the heavy rise and fall of his chest under me.\n\n\"That was fucking incredible!\" he sighed, stroking the soft skin of my bare back.\n\n\"Mmmmmm,\" I sounded contentedly, too worn out for a more coherent reply.\n\nWe lay together for a while, savoring our high, our bodies still entwined. I would like to say that I had profound thoughts...some sort of revelation that changed me, but the truth was I was thinking about nothing. My climax washed away all thought and left my head wonderfully empty, letting my body rule as the aftereffects of my orgasm slowly faded away.\n\nI had nearly fallen asleep in his arms when my ringtone snapped me awake.\n\n\"What time is it?\" I asked sitting up, quickly looking around.\n\n\"I haven't a clue,\" he said.\n\nRolling off of him, I scrounged around on the floor, looking for my purse.\n\n\"Shit!\" I exclaimed under my breath, seeing the time. \"It's almost one o' clock!\"\n\nThe message on my phone was from Kennedy checking in on me. I quickly shot a text back saying that everything was okay, and that we would meet back up shortly.\n\n\"Everyone is wondering where we are,\" I informed him as I crawled back onto the bed with him.\n\nI cuddled up against his large figure, loving that he instinctively pulled his arm around me.\n\n\"What do you want to tell them?\" I asked. \"When they ask where we've been.\"\n\n\"Whatever you want me to tell them,\" he replied after only a moment of thought.\n\n\"You're not worried about them knowing that we...you know,\" I said feeling more shy now than I had at any time before.\n\n\"Not really,\" he mused. \"They're my friends, sure, but if they have a problem with this then they're not really my friends.\"\n\n\"Just like that?\" I asked, sitting up a little to look him in the eyes curiously.\n\n\"Why not?\" he asked, cocking his head slightly. \"Tonight was one of the best nights of my life, Lexi Allen. I won't let my friends shame me for that.\"\n\n\"Ughh!\" I sighed, burying my face in his chest laughing. \"How are you this amazing?!\"\n\n\"Oh, I was born like this,\" he bragged, giving my side a tickle.\n\n\"No! Stop that!\" I cried, trying to get away. \"We have to get back and...ugh...we're both a mess,\" I said as I rolled onto a giant wet spot where his cum had leaked out of me. \"I need to use the shower really quick.\"\n\n\"Not a problem,\" he said.\n\n\"Oh, and I'm really sorry about your sheets,\" I blushed a little.\n\n\"Oh, this isn't my bed,\" he smiled as he slowly got off the bed himself. \"It's Jake's.\"\n\n\"Oh God!\" I laughed as I turned away from him and into the bathroom.\n\nMaking sure to keep the water away from my face and hair, I washed the sweat and drying cum from my body. After a quick dry, I left the bathroom with a towel around my body to find Trevor already dressed and waiting for me, sitting casually on the edge of the bed.\n\n\"You just like watching, don't you?\" I asked as I let the towel slip from my body, giving him one last good look before I got dressed again.\n\n\"Among other things,\" he replied. \"Besides, I think you like being looked at.\"\n\n\"What makes you think that?\" I asked as I scooped up my bra and began putting it on.\n\n\"Most hot girls do,\" he shrugged as he continued his admiration.\n\nMy clothes were all over the place, and the next thing I found was my top.\n\n\"Have you seen my panties?\" I asked looking around on the floor for them. I had my skirt in one hand, still completely naked from the waist down. My shrunken cock was dangling in front of me in what felt like an absurd fashion.\n\n\"Nope,\" he said, looking around on the floor for them.\n\nI hadn't really taken in the room before now, and it was organized in a typical guy fashion. Everything was everywhere. Clothes and luggage were strewn around the room, mostly on the floor, and even some of the drawers were hanging half open.\n\nFifteen minutes later, I felt like such a girl, and I wasn't sure how proud that made me feel. I had lost my panties on a one-night stand and now I was walking down the boardwalk in a skirt. It had been forever since I'd walked any measurable distance without my cock tucked, and I felt strange. Strange and naked. With every step, I was dreading a freak wind would come and blow up my skirt for everyone to see. Not to mention that steady breeze coming off the ocean to swirl up and between my thighs, caressing my genitals. The last thing I needed was an erection right now, but luckily, I was more than spent from earlier.\n\n\"There you are!\" Kennedy exclaimed when we finally reunited with them. \"What have you two been up to?\" she asked knowingly.\n\n\"We were just hanging out,\" I blushed.\n\n\"I'm sure you were...hanging out,\" she whispered softly into my ear as she gave me a hug. \"Naughty girl!\"\n\nTrevor's friends eyed him, and the way he held his arm around me, his fingers tickling my hip pleasantly.\n\nAfter a few awkward moments, where everyone silently guessed at exactly what we had gotten up to, we slipped right back into the feel of the party. Trevor hardly left my side for the rest of the night as we danced together and kissed by the orange glow of the raging fires. With every new caress and kiss, I felt that familiar rush wash through me anew.\n\nSurprisingly, the sex wasn't the best part of the night. When the boys went off to find us some fresh drinks, I heard part of their conversation.\n\n\"You do know that chick Lexi has a dick, right?\" Jake asked Trevor as they were walking away.\n\n\"So?\" Trevor asked with a funny smile on his face, as he looked down to his friend. \"She's gorgeous.\"\n\n\"So, you don't care that you've been making out with a dude?\"\n\n\"She's not a dude, and I like her,\" he said firmly.\n\nTheir voices quickly faded, and I didn't get to hear the rest, but that little bit was enough to make me melt. Here was this amazing hunk of a guy, strong, kind, and handsome, and he wasn't the least bit afraid of liking me, or of people knowing it.\n\n\"I told you every guy you met wouldn't be like Danny,\" Abigail smiled at me proudly.\n\nI couldn't say anything to that, only blush. We stood huddled together waiting for our men when Kennedy finally blurted out what she must have been dying to ask the whole time.\n\n\"So, how big is it? I mean, the dude is built like a tank. He has to be packing, right?\"\n\nTaking a quick look around to make sure they weren't heading back yet, I held my hands apart a good distance to give them an idea.\n\n\"Oh God!\" Abigail laughed, seeing the size.\n\n\"You must have been in heaven!\" Kennedy exclaimed on top of her as she gave my sore ass a smack.\n\nMy giddiness finally overflowed, and we devolved into giggles as we held onto each other.\n\n\"What's so funny?\" Trevor asked as he returned.\n\n\"Nothing!\" Abigail said quickly, putting on her most innocent look, which only made us look all the more guilty.\n\n\"Just something Kennedy said,\" I added.\n\n\"Well as long as it wasn't about me,\" he said with a wry, knowing smile as he handed me my drink.\n\nThe night seemed to slip away from us too quickly, and it was hard saying goodbye to Trevor. We were some of the last few to finally admit the party was over. The eastern sky over the ocean was just beginning to lighten when I kissed him goodbye and began heading back to our room with Kennedy and Abigail.\n\nExhausted and satisfied with our final night in paradise, we all crawled into bed, not even bothering to undress, and immediately fell asleep.\n\n*** *** ***\n\nWith only a few hours of sleep, our morning was miserable. Still a little hung over and sleep deprived, packing all of our luggage and getting ready for the airport was a real chore. In a near zombie-like fashion we checked out of our room and drove to the airport.\n\nIt wasn't until I was easing myself into the comforts of first class that I realized we hadn't had a single problem getting through airport security. Abigail fell asleep before takeoff, and once in the air, Kennedy only made a half-hearted attempt to convince me to join the mile-high club again, before falling asleep herself.\n\nI felt mixed emotions about this vacation ending. It was amazing to go an entire week without having to hide anything about myself, and now I was back to the charade. It absolutely sucked that I would likely never see Trevor again, but on the other hand he gave me hope. Abigail was right, not every guy I met would be like Danny. Hiding the truth about me might be a necessity for now, but I wouldn't have to hide forever."
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "spring break",
        "transsexual",
        "lesbian sex",
        "anal",
        "vacation",
        "party",
        "group sex",
        "public nudity",
        "cancun"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/womens-studies-ch-12"
}