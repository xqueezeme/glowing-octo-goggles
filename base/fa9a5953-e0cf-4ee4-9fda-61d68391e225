{
    "title": "Eva",
    "pages": [
        "A/N -- Hello. Giving a romance story' another shot, though I guess this could have also gone under 'mature', but I don't think it really fits the latter. Most stories on here with divorces are generally bitter (particularly in the 'Loving Wives' category), usually for drama and conflict, and which does make sense most of the time. But, for this story, I've gone a different route.\n\nHope you enjoy.\n\n*****\n\n\"This is the last box, Dad,\" I grunted as I carried it towards my old bedroom. Placing it down with all my other worldly possessions, I'm sure many would have considered it rather pathetic that I was moving back home at the age of twenty-five. I certainly hadn't planned on it happening, but sometimes, life throws a curveball or two.\n\nNo surprise Mum had already opened one of the boxes and started putting things away. She noticed my arrival, hearing the thump of the box on the floor, turning back and blushing slightly. \"I thought I'd...\"\n\n\"It's fine, Mum. You're just helping.\"\n\n\"Want a beer, Mark?\"\n\n\"Love one, Dad.\"\n\nI followed him back to the kitchen, open plan with the dining table nearby. Mum followed us out, taking a seat, Dad grabbing a couple of beers and a bottle of wine from the fridge. Handing me a bottle, I popped the cap and took a sip, Mum pouring herself a glass of wine at the same time. Leaning back in the chair, I removed my cap and sighed, running fingers through my dark hair.\n\n\"So how were things when you were leaving?\"\n\n\"She couldn't stop crying.\" I sighed and shook my head. \"We both know it's for the best, but she's still my best friend. I still love her. But it just wasn't working. We agreed to part on good terms before it got toxic and we hated each other.\"\n\n\"Was it really that bad?\" Dad wondered, \"You never said much about it.\"\n\n\"I'm twenty-five, so we've known each other over half our lives. We met at primary school when we were ten. Started dating at fifteen. We were each other's firsts in just about everything. No-one was surprised when I popped the question. But we're different people to who we were at fifteen, eighteen, even twenty-one. She didn't want to let me go that final time....\" I trailed off and shook my head again. \"We're both hurting, but we agreed.\"\n\n\"Sure you're not being too hasty?\" Mum asked softly.\n\n\"We haven't been happy in at least a year, if not longer. We're just too different now, and there's no real common ground between us, and we have different expectations. Not just regarding marriage, but life in general. I hate that it sounds like we've given up, but although we can't be together, we wanted to maintain that friendship. That is what was worth saving. We'll hurt for now, we'll need to mend bridges, but we'll get there.\" I took a sip of beer. \"Our break-up is better than most, to be honest. She's got a friend taking the spare room in the apartment. She was there as I was leaving and she was as upset as my wife is. At least she doesn't hate me for it. I can only assume Emma told her the reason why.\"\n\n\"Will you see her anytime soon?\"\n\n\"We agreed not to see each other for a couple of months, though if she wants to message or call, I'm always available.\" I held up my hand. \"I'm still her husband but I had to take it off. We're not only separated, we know the end result of this separation. She said she wasn't going to remove hers, though I hope she does. She deserves happiness with someone who can provide what she really wants. I just wasn't that man in the end.\" I lowered my head again, feeling the need to wipe my eyes. \"Going to miss the hell out of her,\" I whispered to myself.\n\nI felt a hand on my shoulder. \"You'll get there, son. And I'm glad you're not throwing away fifteen years as friends.\"\n\n\"Neither of us would allow that. Last thing she said before I walked away was that I'd always be her best friend. And I feel the same way. But being married just wasn't working. I just hope we don't look back in a decade and regret it. But it's better this way than in a decade, and a bitter divorce because we utterly despise each other. Has to be something worth saving now.\"\n\n\"So what will you do?\" Mum wondered.\n\n\"Focus on work. Now that I'm over this way, I'll have to change my website, plus I'll start putting up some cards and flyers around the neighbourhood. A lot of the work I do get is through word of mouth. I do work on someone's house, then their friend or relative calls, so on and so forth. My guys will have to travel a little further from time to time, but I don't want to let them go either.\" Taking a deep breath, I asked, \"So where are the tearaways? Going to be a full house again for a while.\"\n\n\"Michelle is out with some friends from university. Jamie is at work.\"\n\nMichelle and Jamie were my younger sisters. Our relationship was horrific at times while growing up, but since they'd turned into adults, it was much better. We could now be in the same room together and not be left wanting to kill each other. Though, to be fair, their relationship was worse at the best of times, it was only when they ganged up on me that only nuclear warfare looked worse. Or better, depending on your point of view. Emma did always wonder why I preferred being at her place more often than not, even if her parents were home or not.\n\nMoving into the living room, Dad flicked on the TV as normal, Mum sat next to me on the couch. \"So what's the gossip?\" I wondered, \"Haven't lived here in six years.\"\n\n\"Mark, it's a street of divorced single women now. Some living alone. Some still have kids at home. Some have new boyfriends.\"\n\nI felt my eyebrows rise in surprise. \"Really? That bad?\"\n\n\"Your father and I, and I think only four other marriages are still going strong. They were falling like bowling pins at one stage. I mean, I know divorce rates are high, but the rate they were failing here was ridiculous.\" She met my eyes and smirked. \"If you're back on the market...\"\n\n\"Nooooo. No. No. No. No. I know most of them, Mum. Probably went to school in the same year, or at least know their kids too. That is playing with fire.\"\n\n\"Shame. You'd be a catch. Handsome young man with his own business.\"\n\n\"You have to say I'm handsome because you're my mother.\"\n\n\"Emma married you for a reason.\"\n\n\"I'm looking at getting divorced from her too, Mum.\"\n\nShe glanced at the nearby cabinet where a photo of Emma and I sat, taken the day we'd wed. \"Well, I'm your mother, and I think you're handsome.\"\n\n\"Thanks, Mum.\"\n\n\"You're welcome, sweetie. What do you want for dinner?\"\n\n\"I'm not bothered. Whatever you two want with the girls.\" I finished my beer. \"I'd better go sort out my room. I'm not the messy little bastard I was ten years ago, at least.\"\n\nI sighed again when I arrived at the doorway. It had been decorated since I moved out, at least. New coat of paint. New mattress, thankfully now a double bed. I didn't really plan on bringing any girls back, but you never know. The wife and I had made love the night before I left her. It probably wasn't the best idea, but our sex life had always been great. It was everything outside of the bedroom that went wrong. And great sex wasn't a good enough reason to remain married.\n\nStill, making love then have her falling asleep in my arms for the last time... the feelings of melancholy would likely take time to fade away.\n\nI was still clearing up when my sisters arrived home within an hour of each other. Michelle first, who watched me put things away before she gave me a hug. \"Bad reason but my big brother is home, at least for a while,\" she said, resting her head against my chest.\n\n\"Missed me?\"\n\n\"Yeah. Don't tell Mum or Dad I said that though.\"\n\n\"My lips are sealed.\"\n\nJamie turned up as I was lying back on my bed, playing with my phone. She flopped onto the bed next to me, snuggling into me. \"Okay, this is highly unusual,\" I exclaimed, chuckling away.\n\n\"Enjoy it while it lasts, Mark. We'll probably start annoying you within a week.\"\n\n\"Long as you don't hog the bathroom while I'm getting ready for work, you'll be fine.\"\n\nShe kissed my cheek. \"Mark, I know things weren't great while growing up, but Michelle and I... we love our big brother. And while you're home for a bad reason, it'll be better this time around. We promise.\"\n\nI kissed her forehead. \"Thanks, Jamie.\"\n\n\"Are you okay?\"\n\nI sighed. \"It could be worse. Could have ended in arguments of hate and a bitter divorce. Instead, it's just a divorce but hopefully we'll remain friends. I've said, if she were to remarry, I'd walk her down the aisle.\"\n\n\"You would?\"\n\n\"She doesn't have a father. I'm her best friend.\"\n\n\"So it's really over?\"\n\n\"It has to be to save some sort of relationship with her. Can't imagine my life without her in it somehow. She feels the same way.\"\n\nJoining them for dinner that night was the first time we'd dined as a family, outside of birthdays and holidays, since I'd moved out. Once Emma and I were living together, we focused on each other, and to be honest, I spent more time with her parents, and then her mother after her father walked out and disappeared. I was left in no doubt everyone was doing their best to help my mood, plenty of jokes and old stories that had us reminiscing. I noticed they tried to avoid anything to do with Emma, but assured them she'd been a major part of my life, but also theirs. I wasn't going to break down in tears at every mention of her name.\n\n\"We should have a party next weekend,\" Mum suggested, \"Weather is getting warmer, the pool could do with some use. A re-introduction to the neighbourhood.\"\n\nI groaned. \"You just want to set me up with someone already.\"\n\nShe playfully slapped my arm. \"Nothing like that, though I guess you and your father might feel slightly outnumbered if they were all to accept an invitation. Nothing more than nibbles, drinks and some might want a dip in the pool.\"\n\n\"Honey, they're going to be all over him,\" Dad muttered, \"Newly single man like him? He's going to be a lamb to slaughter.\" Then he looked up at me. \"But you're guaranteed work around here. Probably nothing major, but even doing something like mowing, tending to gardens, that sort of thing. But I know a few want to update their houses.\"\n\n\"Guess they'll want some sort of deal, right?\"\n\n\"I'm sure you could work something out,\" Michelle stated, a twinkle in her eye.\n\nJamie started giggling at the insinuation. \"Michelle Taylor! Get your mind out of the gutter,\" Mum exclaimed.\n\nI just shook my head, eating the rest of my dinner in silence, the family gathering in the living room for a quiet Saturday night in, before heading to bed. Waking alone the next morning sucked. I had spent some nights alone in the spare bedroom during the worst part of our marriage, but we always ended up back in the same bed, at least. Lying there by myself, mind going at a million miles an hour, I was left wondering if we'd done the right thing. I guess the doubts would eat at my mind until I actually moved on.\n\nGetting back to work on the Monday was the best thing. I kept my mind and body busy as I had a couple of major jobs to complete. The lads who I employed didn't complain when I told them there was a good chance most of my work would be closer to where I was living now. I didn't particularly like travelling all over the city, preferring to remain relatively local, maybe willing to travel fifteen to twenty k's at most. Not unless it was a big job and worth a lot of money. That would always make travelling worthwhile.\n\nMum spent all week calling around, preparing the party for the Saturday night. I'll be honest, it did give me something to look forward to. I intended to keep myself busy all week so I could relax and unwind on Saturday. I recognised some of the names Mum gave me of those invited, figuring those divorced may have reverted to their maiden names. I had gone to school with most of their kids, but many of them no longer lived at home. Michelle and Jamie remained at home simply due to rent being so damned expensive unless you house share, and buying a house for young people is prohibitively expensive. Emma and I were married, and even with our joint incomes, buying was almost impossible unless you wanted to move miles away from anyone you know and accept the smallest property available.\n\nReturning home mid-afternoon on Saturday, a few people had already arrived, popping my head out the sliding door that led onto the decking where the pool was, then the large backyard, letting the parents know I'd shower, dress, then come say hello. It was unseasonably warm, and my side gig in landscape gardening was physically demanding at times. As I told people, jack of all trades, master of none.\n\nThrowing on a light blue polo shirt and light colour slacks, I walked outside barefoot to join those who had already arrived. I recognised plenty of faces, receiving a kiss on each cheek from all the women. As Mum had warned, there were no men present yet, though three married couples had accepted to come, though they'd likely only arrive later. Gossip spreads quickly in the suburbs, and they all seemed to know about my separation and impending divorce. Dad then announced what I did for a living, and that I was looking for work.\n\nThe glare I gave the old man actually made him slink away for an hour.\n\nEnjoying a couple of drinks as the sun started to set, Dad flicked on the outside lights, including those in the pool. My two sisters wandered out in bikinis to take a dip, no surprise at least half a dozen of our visitors joined them. I was prepared to go find my swimming shorts when the next visitor stopped me in my tracks.\n\nI'm sure most young men have had fantasies of an older woman or two while they went through puberty. Sometimes it'll be a teacher at school. Sometimes it'll be a neighbour you've known as you grew up. Sometimes it'll be the mother of a friend. My fantasy, apart from my girlfriend, was the mother of my best friend, Steven.\n\nEva.\n\nI'd known her first name for years, but I always called her 'Mrs Wilkinson', even after I turned eighteen and she'd laughingly said I could drop the title and formality. But it was a simple bit of respect in her direction. She appeared through the sliding doors wearing a simple white blouse, figure hugging jeans, open toed sandals. I saw the colour red on her toes. She had raven black hair, a pair of chocolate brown eyes, and that olive skin that only come from someone of Mediterranean extraction. I knew her parents, or maybe it was her grandparents, had immigrated from Italy in the 1950s.\n\nI also knew how old she was. Forty-two years old. She'd fallen pregnant while still at high school. The scandal was the age of Steven's father at the time, as he was at least ten years older than her. The only reason the family didn't do anything to him, not in a legal sense but having father, uncles and brothers beat the ever living shit out of him, was that he promised to take care of the child and put a ring on her finger too. He'd bought the house five doors up from ours, and my mother had adopted her as a younger sister from the get go.\n\nShe locked eyes immediately on me and smiled. I'd been a fixture at her house for years, as much as Steven had been at mine. We'd been two peas in a pod, running amok around the neighbourhood. Gliding towards me, she embraced my tall frame. \"It's so lovely to see you again, Mark,\" she practically cooed. She'd always liked me.\n\n\"Lovely to see you again, Mrs Wilkinson.\"\n\nShe leaned back, her smile faltering slightly. \"No, that won't do, Mark. Please, call me Eva, like I've asked many times now.\" The smile then left her face entirely. \"And I'm no longer Mrs Wilkinson.\"\n\nI felt my brow furrow. \"What do you mean?\"\n\n\"You don't know? Steven never told you why he left?\"\n\n\"No,\" I replied cautiously, \"It's the one thing I've always wondered, and he's never told me about.\"\n\nShe lowered then shook her head. \"Damn it, this isn't the time or place,\" she muttered, before looking up, \"I'm going by my maiden name now. Eva Ricci,\" she added with a smile.\n\nI cleared my throat, kissing her cheek. \"Lovely to see you again, Miss Ricci.\"\n\nShe laughed at that. And I was suddenly transported back to those awkward teenage years when I dreamed about my best friend's mother in entirely naughty ways. She took my arm and had me escort her around, saying hello to everyone around the neighbourhood. I hadn't seen my best friend in at least five years. He'd never been home to visit since the day he'd flown out. I tried keeping in contact with him, but it was minimal at best. I still tried but it was mostly a one-way relationship.\n\nEva let go of my arm as I made a beeline for my mother. She could read my face easily and had seen me walking around with Eva. \"You don't know, do you?\"\n\n\"Know what, Mum? Steven's gone for some reason and she's now a divorcee?\"\n\nMum sighed. \"It was never our place to say anything. Gossip is one thing, but what happened with them...\" She looked up. \"I'm sorry, sweetie. It's something she'll have to share with you herself.\"\n\nDad added, \"She'll probably ask you for help. She lives alone now and I know she's finding the upkeep on her house difficult.\"\n\n\"Oh...\" The idea of Eva living alone? Madness. She should have suitors lined up around the block for her. Not in a bad way, but if she was divorced, surely she'd have a new boyfriend or something? Gorgeous woman like that, and I knew she had a good job. Soon as Steven was at school, she finished her HSC and then completed a university course.\n\nIt grew darker. I made sure I ate as I sank a few beers. Michelle and Jamie barely left the pool and were soon calling me, and others, to join them. I headed inside to change into my shorts, wandering back out, immediately aware a few pair of eyes wandered towards me. I guess being six-one, rather fit after nearly a decade of gym work, a rather good tan as I worked outdoors and shirtless when it was warm... Emma admitted she'd always found me physically attractive, but she always said my best feature was my blue eyes.\n\n\"I don't always know what you're thinking, Mark, but I certainly know what you're feeling. Your baby blues are the most expressive I've ever seen,\" she said quite early on in our relationship.\n\nJoining my sisters in the pool led to quite a few others throwing off clothes and joining in. And, I'll be honest, the skin on display to prove rather titillating. And I was impressed at the confidence. Most of the women would have been in their early forties at least, but most of them had no problem walking around in a bikini. They might have been a little thicker than they were in their twenties, but most of them still had 'it'.\n\nWhen Eva stripped off to reveal an absolutely gorgeous red bikini, that's when I was in trouble. All the blood in my body was 'all systems go', straight towards my cock. \"Fuck,\" I muttered. I know I stared. I couldn't help staring. Again, I was that awkward teenager, watching the object of my dreams walk towards the same pool I was in, carefully stepping into the pool, watching her swim under the water for a few seconds, before surfacing near me. With her wet hair against...\n\n\"Fucking hell,\" I muttered. She returned what I could only call a flirtatious grin before she swam to float next to me, my arms spread against the edge of the pool.\n\n\"I'll have to thank your mother for inviting me,\" she said, \"It's nice to see you again after so long, Mark.\"\n\n\"Sorry it's been so long.\"\n\n\"You were married and lived far enough away I wasn't your concern, Mark. You don't have to worry about your friends' old mother.\"\n\nI snorted. \"Old? You serious?\"\n\n\"Older than you, Mark. Not as old as your parents, but old enough. Old enough that Michael...\" She stopped herself as Mum appeared, lowering a glass of wine for Eva, a bottle of beer for me. \"I thought you would know everything.\" I shook my head. \"I'll tell you later sometime. Not tonight. Tonight is about your return. I know it's not under good circumstances, but I think some of these women will keep you busy.\"",
        "I spat my beer everywhere, followed by a coughing fit. My sisters found that hilarious, while Eva released the sort of delightful giggle that almost had me groaning in despair. \"Ah, I see why you might have taken that the wrong way. Well, looking at who is here, there are at least eight single women, all divorcees, looking for a good man. Or a good fuck, at the very least.\"\n\nThat had me gazing at her in surprise. \"Holy shit!\" She smirked as she sipped at her wine. \"Don't think I've ever heard you curse in front of me, Miss Ric.. Ah fuck it, Eva.\"\n\n\"I think there are many things you don't know about me, Mark.\" I had to swallow back at least half a dozen retorts in the space of three seconds. And she knew it too. She moved a little closer, resting her hand on my chest. \"I am sorry to hear the news, Mark. You were friends for so long. I remember your wedding.\"\n\n\"Yeah. It's why Mum threw this little shindig.\"\n\n\"Weird being back home?\"\n\n\"Definitely, but Mum and Dad have always said, if we had troubles, we'd always be welcomed back home. I'm the only one to have left then returned though. I'm here until I get my head on straight, save a little cash, then I'll think about my next step.\"\n\n\"Are you busy tomorrow?\"\n\n\"Might be hungover, but otherwise, no.\"\n\n\"I've been alone for a while now and... well, the house needs a little TLC. Well, a lot, to be honest. I don't want to take advantage but...\"\n\n\"I'll be there around midday.\"\n\n\"I'll make us some lunch. I know you probably already have a mountain...\"\n\n\"We'll work something out. Don't worry.\"\n\nShe kissed my cheek. And it wasn't the sort of peck she sometimes used to give me when greeting me long ago. The sort that made me glance at her, seeing something in her eyes that delighted me. She was playing with me, I knew that much. And I didn't mind one little bit.\n\nIt was only when I was helping clear up after everyone had gone that Mum and Dad almost cornered me. \"You were looking friendly with Miss Ricci,\" Mum said, an almost knowing smirk on her face.\n\n\"You mean Eva?\"\n\n\"Oh, so you're now on first name terms?\"\n\n\"I'm twenty-five, Mum! She's been asking me to call her that for seven years, at least.\"\n\n\"I'm just teasing, Mark. What did you talk about?\"\n\n\"Well, you were right, I had a half dozen job requests, including from Eva.\"\n\n\"She needs it, son,\" Dad explained, \"After everything that happened, trying to maintain that house she now has is difficult. And, as you know, some people like to take advantage by charging outrageous prices. She's been to see us more than once about quotes she received.\"\n\n\"Why not ask me? I'd have done something.\"\n\n\"She didn't want to impose.\"\n\nI almost rolled my eyes at that, but left it alone. \"I guess I can find out what happened.\"\n\n\"Just be careful. It won't be an easy topic,\" Dad warned, \"It tore that small family apart.\" A look must have crossed my face, so he nodded before adding, \"Yeah, it wasn't good for anyone.\"\n\nThankfully, I didn't have a hangover the next morning, thinking I drank in moderation more than I'd planned. My sisters, on the other hand, had barely risen by the time I was out the door. Arriving at Eva's house, it was obvious to see that the front yard had seen better days. The grass had been mown but that was about it. The garden looked a little better, but could do with some serious work. I almost dreaded the backyard.\n\nKnocking on the front door, Eva answered it quickly, smiling at my appearance. She wore a tight t-shirt and shorts that showed off most of her legs, with sandals on her feet. I tried desperately not to look her up and down, my eyes covered by my sunnies at least. \"Come in, Mark.\"\n\n\"Thanks.\" Hearing her close the door, we walked into the living room and I could immediately see half a dozen things that could be done. She watched my eyes as I clocked one thing then the other. \"I see what you mean, Eva. Want me to just wander around and you can point out the urgent jobs, then the jobs you would just like done?\"\n\nShe smiled. \"Sure. And then there's... the backyard.\"\n\n\"Jungle?\"\n\nShe shrugged. \"Could be worse.\"\n\nWhat was immediately obvious to me was that her ex-husband wasn't a handyman, and if he was, he'd never completed a single job in his life. I asked Eva if she'd done anything. She'd admitted to trying, but didn't have the confidence with any sort of tool in her hand. I said at least she'd tried, but wished she'd asked my mother to call me.\n\n\"I'd have come in a heartbeat, Eva,\" I said. The smile she returned... well... I think the sentiment meant something, at least.\n\nThe backyard was as bad as I expected. Just getting the lawn in some sort of decent state would take work. But then Eva added that she wanted further improvements. I listened to what she wanted and was impressed with her vision, but warned her it wouldn't be cheap, and that I might not have the time to focus on it. \"I can give up my Saturday's, but...\"\n\n\"Whatever you can do will be appreciated, Mark.\"\n\nAt least her pool was in good condition. Letting her know that, she smiled again, explaining it was the one thing she'd always taken care of, by herself or with Steven. I'd made a couple of lists on a notepad, those listed as urgent or non-urgent, looking over the lists at the table as Eva prepared some lunch. I was just expecting sandwiches or something simple.\n\nInstead, I had a plate of lasagna with a bowl of salad placed between us, Eva ensuring there was also a bottle of red wine to accompany it. \"Wasn't expecting this, Eva,\" I admitted.\n\n\"We obviously need to talk, Mark. About everything that happened.\" She took my hand in hers. \"I thought you knew. I thought Steven would have told you what his father did.\"\n\n\"He never told me. I have a feeling he never told anyone.\" I took a bite of my meal before asking, \"When did you last see him?\" When she looked away, obviously upset, I squeezed her hand. \"Been a while?\"\n\n\"He hasn't been home since he left.\"\n\n\"What?\"\n\n\"That's how bad it was, Mark. He simply can't face returning here. Too many bad memories.\"\n\nI moved my chair closer and hugged her. I just had to. And when she started to cry softly on my shoulder, my heart damn near broke for her. In fact, it did. Her son had been gone for five years now. \"You hear from him?\"\n\n\"Occasionally. He does call from time to time.\" I stroked her back until she lifted her head, kissing my cheek. \"Thanks, I needed that hug.\"\n\n\"Just an additional service I provide free of charge. Only to certain customers though.\"\n\nResuming our meal, she started to tell the story. \"So you obviously know I had Steven young, and that his father was older. I never had the impression Michael was unhappy about marrying me. I mean, he said he loved me. Proved it by marrying me, providing me with this house, and for the first few years of our marriage, all seemed well.\" She sighed. \"But I knew he had a wandering eye. He had the young dutiful wife at home and he was busy at work all week. Long hours. Travelling. Perfect opportunities.\"\n\n\"Ever catch him out?\"\n\n\"Never got concrete evidence, but I could put two and two together well enough. I think he knew I had it figured out, and he also knew I didn't want to rock the boat, so to speak. If we divorced, I might have done well out of it, but Steven obviously wouldn't have a clue. And I didn't want him to grow up without his father around. Too many broken families as it is. So my focus went to my son. Michael and I rarely argued. I made sure he wasn't subjected to that sort of thing. But I let Michael know I was on to him. He was more careful after that, but I knew he was still playing around.\"\n\n\"Damn...\"\n\nShe took a large gulp of wine, then a deep breath. I took her hand in mine again, which earned a slight grin. \"How old was Steven when he met Charlotte?\"\n\n\"Seventeen.\"\n\n\"She went to a different school, right?\" I nodded. \"So different circle of friends, all that sort of thing?\"\n\n\"Yeah. I met some of them in social circles, but I won't claim to know many of them. I certainly had little to do with Charlotte outside of seeing Steven every so often once we left school. Emma simply didn't like her so they had nothing to do with each other.\"\n\n\"Emma's a smart woman.\" My mind started clicking into gear. I was almost dreading what was coming. I think I had it figured out already. \"I already knew what my husband was up to. Once Steven was about sixteen, my ex-husbnd gave up all pretence about his affairs. By that stage, I just didn't really care about him, certainly didn't love him anymore. Our sex life was non-existent.\" She glanced at me, but I just nodded in understanding. This wasn't the time for joking or innuendo. \"Steven and Charlotte seemed happy until the time of nineteen. Then I noticed his behaviour change slightly. I knew her but I guess I didn't know her that well. She would visit and, while she was friendly, there was something I couldn't put my finger on.\"\n\nShe took another gulp of wine, then she laced her fingers between mine. I had a feeling this was the difficult part. \"Michael was sleeping with his son's girlfriend.\"\n\n\"Fuck,\" I muttered, \"How long?\"\n\n\"It had been going on a year before Steven found out. Soon as he did, he and his father had the mother of all blowouts. How they didn't end up killing each other that night... My son is rightly angry, embarrassed, end of his tether. Charlotte ripped out his soul. Cheating on him is bad enough. But cheating on him with his own father? I'm not sure there's a word in the English language to describe such behaviour.\"\n\n\"Evil. That's absolutely fucking evil, Eva. A black heart and soul to do something like that to your own son.\" I sighed. \"That explains his departure then, right?\"\n\nI noticed tears start to fall. \"His father said the vilest of things. 'I fucked her on your bed'. 'I fucked her on our marital bed'. 'She'd tell you she was busy while her lips were...'\"\n\n\"Okay, Eva,\" I said softly, \"I get it. I get it.\"\n\n\"Steven couldn't stay here. Simply couldn't. He got online, booked a one-way ticket to the UK, organised a visa, packed a bag. We two were the only people to know he was even leaving. I know you asked about Charlotte at the airport. 'She's around,' was what he said. She was with his father at that very moment.\"\n\n\"Fucking hell,\" I muttered.\n\n\"I obviously kicked him out. He happily left as he had an apartment already. Charlotte moved in with him immediately. Divorce went through a year later. They're now married.\"\n\n\"What the fuck? Really?\" I leaned back, running a hand through my hair. \"God, no wonder he doesn't want to come back.\" I helped her to her feet and hugged her, feeling her head rest just underneath my chin. I knew it hadn't been easy to tell me all that. \"I simply had no idea. I was surprised he was leaving, but he just said it was something he needed to do. He was my best mate. He still is.\" I released a deep breath. \"But even I can understand why he wouldn't tell me.\"\n\nEva grabbed the wine and her glass, I picked up mine, and we walked into the living room to sit on the couch. \"That sort of things leaves scars, Mark. My son is gone. My husband... destroyed my self-worth. His family hate him, at least. I don't really speak to them anymore, but his parents practically disowned him for what they did to his own son, their grandson.\" She looked around. \"I want all this changed, Mark. I've lived with reminders of those days for at least five years. I need it to look different for my own sanity.\"\n\n\"I'll start next Saturday.\"\n\n\"You don't...\"\n\n\"Eva, next Saturday. 8am. I'll be here to start. I'll go through the list, start tallying up costs. I will only charge the price of materials, I won't charge labour.\"\n\n\"But... you'll be working all day, right?\"\n\n\"So pay my labour with meals and your company.\" That earned a blush. \"Just come and talk to me while I'm busy. That's all I mean.\"\n\nI finished the wine and felt the urge to leave, though after that revelation, I didn't particularly want to leave her alone. So I sent a message to Mum, asking if we should invite Eva around, insinuating that I now know the truth, she was obviously upset, and that she could do with company.\n\nMum called Eva immediately, invited her to dinner, though as soon as she hung up, she turned to me. \"Thank you, Mark.\"\n\n\"Eva, I may have been Steven's best friend, but I always hoped that, despite the fact you were his mother, you would have seen me as a friend too.\"\n\n\"I did. I do. But... it's difficult.\" She took my hand in hers again. \"I'm sorry. I should have told you before. But I honestly thought Steven would have told you at least.\"\n\n\"Don't apologise, I wasn't expecting or asking for that. I'm just... Honestly, I want to find where Michael is living and give him the mother of all beat downs.\"\n\nWe chatted for another half an hour or so before I decided to leave, Eva giving me another tight hug before leaving her. Walking back inside when getting home, Mum had a beer in my hand within ten seconds, practically ordering me to sit at the dinner table. She admitted to knowing but had been sworn to secrecy by Eva. I assured her it was fine, that everyone assumed Steven would have told me. I was tempted to call him, but I figured after five years, he wouldn't want me bringing up that pain again.\n\nI felt a little despondent the rest of the afternoon after all the revelations. Added to my own continued melancholy about my own failed marriage. A dip in the pool helped me feel at least a little better, joined by my sisters a little later, the pair helping put a smile on my face, at least.\n\nDad suggested a barbecue since it was a nice evening, I quickly messaged Eva, asking if that was okay, since she'd already been invited. She replied, assuring me she loved a good barbecue as much as the next girl, so that was good news. I was getting dressed when I heard the knock at the front door, Mum answering and the usual chatter of two middle-aged women. Wandering out in a polo shirt, slacks and shoes, both turned towards me and smiled.\n\n\"Thank you for the invite, Mark,\" Eva said, wearing a simple red sundress with white patterns.\n\n\"Looking as ravishing as ever, Eva. Care for a drink?\"\n\nMum gave me a look as Eva walked to the kitchen. I smiled and shrugged. \"Just being friendly,\" I whispered.\n\n\"I know about that crush of yours, Mark,\" she whispered back.\n\nDrinks in hand, I joined Dad outside, sipping at our beers as the meat was prepared. Mum had already prepared everything else, so Mum, Eva and my sisters sat around, drinking wine, chatting and laughing away. \"You aren't thinking with your right head,\" my father muttered.\n\n\"What?\"\n\nHe glanced at me and winked. \"Just be careful if you're going to do what I know you're going to do.\"\n\n\"I'm not doing anything.\"\n\n\"You're full of shit, Mark. Just be careful. Don't make Eva your rebound. She doesn't deserve it.\"\n\n\"Dad... Seriously...\"\n\n\"You're my son, and I trust you, but Eva is a friend,\" he said quietly, \"You're still hurting so just think carefully.\"\n\nStill, when we'd finished cooking, I was sat next to Eva, the six of us chatting away happily. I was chewing on a bit of steak when I almost choked as I felt Eva's delicate hand rest on my thigh. Didn't move, just rested. I glanced at her, but she was focused on chatting to Michelle. I continued eating but occasionally took her hand in mine and squeezed it. I noticed her smile. Mum and Dad noticed too. I shrugged ever so slightly.\n\nI walked Eva home once we'd eaten our fill and drunk enough that everyone had a light buzz going. Eva was laughing away at one of the stories I told her, the shenanigans Steven and I used to get up to. I assured her we caused far more trouble than she knew, but we never broke the law. We just ran amok at times.\n\nStopping at the driveway that led up to her house, she turned to face me. I knew kissing her was just out of the question. \"Thank you, Mark. I had a great time tonight.\"\n\n\"I'm glad. And you're welcome to visit anytime.\"\n\n\"I'll see you on Saturday. Food and my company, correct?\"\n\n\"Yeah.\"\n\nI hugged her to my body, feeling her holding me tightly in return. She felt good. Smelled even better. Caressing her back, I felt her do the same to me. It seemed neither of us wanted to let the other go. When she leaned back, she had a curious look on her face. \"I know this might seem weird, but I've told you all about my story, but I don't know yours.\"\n\nI smiled. \"Then another reason to stop by next Saturday.\"\n\n\"You could always visit... during the week...\" Meeting her eyes, I was surprised to see her almost pleading with me to say something positive.\n\n\"Sure. I'll call you.\"\n\nThe smile that formed was simply dazzling. \"I look forward to it.\" She kissed my cheek, caressed where she just kissed with her fingers, whispering, \"Goodnight\", before she walked to the front door. I waited until she was inside before returning home. Mum and Dad were in the living room on the couch. I sat down in one of the armchairs. I must have had a look on my face.\n\n\"Mark.\" I looked at my father. \"It's good to see you smiling, son.\"\n\n\"Haven't seen Eva smile and laugh like that in years either,\" Mum added.\n\n\"Think we can stop this, honey?\"\n\nMum snorted. \"No. All we can do is give our son guidance when he needs it.\"\n\n\"We're just friends,\" I stated, \"I've only just left my wife. As Dad said, I wouldn't want her feeling like a rebound, even if something does happen.\"\n\nI was in a good mood that week, at least. I'd organised with all the neighbours the jobs they needed doing. I still had three jobs to complete elsewhere, so fixed my calendar so I could let everyone know when I'd be around to start. Some jobs were minor, but there were a couple that was almost like an entire house repair. I didn't mind that as it would give me and the boys something to keep us occupied.\n\nI did drop by Eva's place on Wednesday night. I sent the occasional text throughout the day, but we were both busy, and I certainly had no expectations for her to drop everything and give me her undivided attention. She knew I was just as busy so didn't get upset if I didn't answer for a few hours. I popped around after I'd had dinner at home, Eva making sure a glass of wine was in my hand by the time I'd sat on the couch next to her. She was dressed in a silk robe that barely covered her arse, and I felt a stirring in my loins as she curled her legs.\n\nAfter discussing our week so far, we got to the point of my invitation. Ensuring my glass was topped up, I leaned back and was surprised she changed position, her head leaning against the back cushion. \"We've obviously known each other a long time,\" I started, \"I'll be honest, I thought she was going to be my only girlfriend, fianc\u00e9e then wife. Even when we had our issues, going so far as to break up twice, we never dated anyone else.\"\n\n\"If you didn't, you believed her?\"\n\n\"Oh, her friends loved me. If she took up with another guy, one of them would have told me. Instead, they told me she usually spent our brief times apart crying. Never lasted more than a week before we resumed our relationship.\"\n\n\"So what went wrong, Mark? I remember your wedding. So many of us said 'If there's one couple that'll stay strong...' Hearing you were moving back home was a shock to everyone.\"\n\n\"It's wasn't just the one big thing. It was a bunch of smaller things too. We're just not the same people we were, even when we married. That's the thing, when we married, we were still growing as people. I know I'm very different at twenty-five compared to twenty, and she admits the same. When we started to argue and not settle it before going to bed, carrying the resentment into the next day, and then the next day, that's when I knew something was going wrong. Some would have suggested counselling, but while I think that would have helped, we were left thinking further problems would just come in down the line.\"",
        "\"What's the big thing, Mark?\"\n\nI took a sip of wine. \"Kids. I want them and I'd like to start soon. I don't want to be in my forties with small kids. I'm young and energetic now, best time to raise them. When we married, she wanted kids. Now?\" I sighed and shook my head. \"I'm left thinking she's not ready for them, and might never be ready for them. That was the crux of many arguments. I never demanded she give up everything just to pop out a child, but I had to know if she ever wanted them, and if she did, when could we start. She couldn't give me a definitive answer. Pile that on top of all the other problems and things were just going to spiral.\"\n\n\"Separating means you'll be waiting for kids though.\"\n\n\"True, but it gives me the chance to meet a woman who does want children.\" I glanced away and smiled. \"My Dad told me when I was an adult that the best thing he ever did was having us. He said he never felt such love and pride while watching us grow into the people we are now. He admits it's hard at times, but the end result is worth all the sacrifice. I'd love to experience that feeling, whether I have a little boy or girl. Hopefully both...\"\n\nEva shuffled closer, feeling her chin lightly rest on my shoulder. \"I wanted more children,\" she whispered, \"But Michael was never interested. He was barely interested in Steven.\"\n\n\"You do? I mean... I know... er... um...\"\n\nShe giggled. \"You're cute when you're flustered, Mark\"\n\n\"Just unexpected to hear, that's all.\"\n\n\"Have you remained friendly? Was the separation amicable?\"\n\n\"She's still my best friend. It's why we've split now instead of later. We're hoping that, despite the failure of our marriage, we can still keep that foundation of friendship we've had for fifteen years. We were friends before we started dating.\"\n\n\"Sounds better than most of the bitter divorces around here.\"\n\n\"Mum said it was like tenpins for a time, one marriage after the other.\"\n\nShe took a sip of wine. \"I wasn't the only one cheated on, I know that much. A couple ended simply because they stayed together until the kids left the house. Couple of marriages ended quite badly. I'm talking the most bitterly contested divorces. At least Michael just fucked off and left me alone.\"\n\n\"I'm still shocked about all that. Man's a fool, far as I'm concerned.\"\n\nI glanced to see a smile on her face. \"Well, at least someone thinks I'm attractive.\"\n\n\"Eva, if you're here with me instead of someone worthy of your attention, then there must be a lot of blind men around.\"\n\n\"I only sit at home, drinking wine, with the sort of men I like, Mark.\"\n\nI glanced at her again, sipping at her wine, her eyes gazing at mine. I took a sip of my wine before I put my foot in my mouth. We eventually polished off the bottle of red before I checked my watch. It was rather late, I needed a shower and I had an early start. So did she, but it was only with some reluctance either of us moved from the couch.\n\nWalking me to the door, I turned and gazed down at her for a second before I held her in my arms again. When she looked up, I leaned down and pressed my lips softly to hers. Only for a couple of seconds before I leaned back. I felt like an awkward teenager again. Thankfully, she seemed to be feeling the same way. \"Thanks for the wine,\" I said.\n\n\"Thanks for visiting, Mark. I missed your presence here.\"\n\n\"Different this time?\"\n\n\"You're now a man.\" She rested a hand on my chest. \"You're a good man, Mark. I hope you'll visit more often, even outside of a Saturday. I'd like that.\"\n\nI felt the smile form. \"I'd like that too,\" I admitted.\n\n\"Good. So you can visit whenever you like. I'll even cook dinner for you. Been a long time since I've been able to provide culinary delights for a man who'll appreciate it.\"\n\nI kissed her again, only briefly, before wishing her goodnight.\n\nI was in a good mood the rest of the week, Dad and I sitting on the deck out the back on Friday night, the girls relaxing in the pool with a bottle or two of wine. I was relaxed in my chair, content with life. Wasn't exactly going as planned, but I suddenly felt an inkling of hope for the future. \"I think I might have to call Emma,\" I said. Dad gave me a look. \"Just in case, Dad. I'm not going to do anything too soon, won't move too fast, but... I think she might be interested in me.\"\n\n\"You're twenty-five, Mark. As I said, I'll trust your instincts.\"\n\nEva was up and ready for my arrival at 8am the next morning. I'd driven my ute, simply so I had everything I needed close by, including everything I would need for her lawns. I said I'd focus on the front yard first, and try and get all the grass mown out the back at the very least. Once the outside was in good condition, I'd focus on the inside. She liked that idea, and left me to it for a couple of hours.\n\nIt was obvious that, apart from some mowing, the grass hadn't really been cared for. It took a couple of hours to have it looking like it should. Eva walked out with a jug of iced water for me, and definitely looked me up and down more than once as I already had my shirt off.\n\n\"Have you put on sunscreen, Mark?\"\n\n\"Not yet. Sun isn't exactly...\"\n\n\"Stay there, I'll get some for you.\"\n\nShe returned within a couple of minutes, asking me to turn around so she could do my back first. Feeling her soft hands moving up and down had me at least semi-hard, and considering the shorts I was wearing... well, if she had me turn around, she was going to notice. \"You look after yourself,\" she whispered.\n\n\"It's physically demanding sometimes,\" I said, \"Long hours during the summer.\"\n\n\"Turn around.\"\n\n\"I can do my chest, Eva.\"\n\n\"Turn around,\" she said softly, but with authority.\n\nSo I turned around as she did my chest at the same time. I had my sunnies on, but watched her face the entire time. She was enjoying herself, that was for sure. \"Been a while since I've done this for a young man,\" she whispered.\n\n\"Oh, who was that?\"\n\nShe laughed. \"Probably my son.\" She paused. \"Hmmm, not as sexy as it sounds, now that I think about it.\"\n\nShe then focused on doing my arms, and I may have flexed as her hands moved over my biceps then forearms. She knew what I was doing and I noticed the look cross her face. She was now definitely enjoying herself. \"So, you going to let me get on with it, or just put cream all over my body the rest of the morning?\"\n\n\"Maybe you could come do me when I lie by the pool this afternoon?\" Okay, fully erect cock at the term 'do me'. She knew what she just said too, as she started to giggle. \"I mean put cream on me.\" She giggled some more. \"God, even that sounds...\"\n\n\"Eva, you're very cute when you're flustered. Now, while I'd like to stand here and flirt some more, I really should get this yard finished by lunchtime.\"\n\n\"Hope you build a good appetite.\"\n\nShe kissed my cheek before disappearing inside, thankfully leaving the jug of water nearby in the shade. I was rather thirsty. I finished the lawn, then focused on her garden. Definitely needed some weeding and livening up. I'd have to take her to a garden centre so she could buy what she wanted. Standing back next to my ute after a couple more hours, it certainly looked better. Comparing it to other lawns, I figured I might be doing the same thing for other households soon enough.\n\nHeading inside, I smelled some wonderful scents emanating from the kitchen. Eva grinned at my appearance. She'd cooked a staple of Australian diets. Spaghetti bolognaise, but according to her, 'Just like Nonna used to make'.\n\nShe was right. It was the tastiest spag bol I'd eaten in my life. It was all fresh ingredients, none of that out of the jar stuff. We chatted away, no alcohol at lunchtime, though Eva was pleased to see me polish off two bowls of the stuff. Though I could have sat there all day chatting to her, I did want to make a good start on things.\n\nThe backyard was a mess. I needed to get the weed-whacker out first before I could even mow. After a couple of hours in the hot sun, I was streaming with sweat, enough that Eva called me over towards the pool. She took one look at me, disappeared inside and returned with a towel, then pointed at the pool. A quick dip did sound good, so I happily dove in and felt my temperature cool immediately. Eva lay back on her lounger, reading a book, though looked my way as I crossed my arms on the edge of the pool.\n\n\"Want to put some cream on me now, Mark?\"\n\nI made sure I moved as slowly as possible. Once she was lying on her front, the erection that had disappeared returned in full force. The string bikini went up the crack of her arse, giving me the perfect view of her two pert cheeks. I'd died and gone to heaven. I'd applied sunscreen to Emma enough times in my life to remember quite a few times it had ended with us doing other things. \"Want me to undo your top?\"\n\n\"Please,\" Eva replied softly.\n\nI figured if I applied the cream, and also offered a slight massage, it would help her relax. She certainly cooed with appreciation as I worked it into her shoulders before moving down her back. Definitely more than one involuntary moan as I worked further and further down towards her arse. I avoided that, focusing on her delicate little feet before working up the calves and thighs of one leg, then doing the same to the other. Taking my chance, I them kneaded her arse, and my thumbs went as close to her pussy as I allowed myself.\n\nThe noise she made when I did that suggested she was liking it more than even I imagined. I eventually had to clear my throat. \"That's your back all protected, Eva,\" I murmured. I had to move as I was going to do something else otherwise.\n\nI quickly got up and returned to my equipment, glancing back just the once to see Eva relaxed, but with a smile on her face. At least she was happy. I kept at work until around 6pm. Still needed more doing to it, but it had been a good start. The fence needed to be fixed, and could probably do with some paint and primer. Eva's idea would take a few Saturday's, so I would leave that until last, long as the good weather continued.\n\nShe'd disappeared as I started packing up my ute. I'd mentioned lunch as part of the deal, but as I headed inside, ready to go home, she approached me with a smile. \"Go home, shower, change, come back for dinner.\"\n\n\"Oh... I wasn't...\"\n\n\"Would you like to join me for dinner?\"\n\n\"Yes, I'd love to,\" I replied immediately. I wasn't going to lie.\n\n\"Good. Back in an hour? It should be ready by then.\"\n\n\"Okay. See you shortly.\"\n\nMum and Dad asked me where I was going as I dressed, put on deodorant and cologne. Stuck to the usual ensemble considering it was still quite warm. Polo shirt. Slacks. Shoes. I told them Eva was cooking me dinner. Mum suggested I was on the verge of dating her. That brought me to a halt. \"No, dating would mean I actually take her out somewhere,\" I said.\n\n\"Thinking of doing that?\" Dad wondered.\n\n\"She's just cooking me dinner as a thank you for helping her out.\"\n\n\"Uh-huh,\" Mum murmured, a wicked grin on her face, \"Should we expect you home tonight?\"\n\nMum and Dad shared a glance and started to laugh. I just groaned. \"God, it's like role reversal, living with a pair of children. I'll see you later tonight. Don't wait up on my account.\"\n\nI got out of the house before my sisters heard and started to tease me. Good naturedly, of course, but they were already dropping comments about my apparent relationship with Eva. Considering I was still legally married, though separated with no real chance of reconciliation, I wasn't exactly sure what I should do. I figured the first thing I should do would be to call Emma and discuss it. If either of us moved on, that was the clear signal it was over.\n\nI hated the idea of well and truly breaking her heart though. I'd prefer she did it to me first.\n\nKnocking on her front door a few minutes later, she opened the door to reveal she'd dressed up, a lovely blue dress that hung just off her shoulders, ended almost at her knees, with a pair of short heels on her feet. Think she'd moisturised as her skin simply glistened. Even a little make-up, if I guessed correctly.\n\nFollowing her to the kitchen, she announced that she was preparing seafood pasta. Then she worried, asking if I did like seafood. \"I'm not picky, I'll eat just about anything.\"\n\n\"Well, you're better than my own son in that regard.\"\n\n\"Mum never forced us to eat something, she'd just suggest we try it. Plus, I think my taste buds have changed as I've gotten older.\"\n\nI found a glass of wine in my hand again, realising I drank that instead of beer in her presence. Probably better for me in the end. She served dinner within a matter of minutes, ensuring we ate by candlelight. It was all rather romantic. Yet still, we talked like old friends, reminiscing about days in the past, what we'd been doing during those years we hadn't seen each other much, if at all. Once we'd finished, she served coffee, taking my hand in hers, just gently caressing hers with my thumb.\n\nGod, she was beautiful.\n\nEnding up back in the living room, she turned on her stereo to play a little music, sitting on the couch so we were facing each other. I took a moment just to drink in her gorgeous face. Wouldn't have thought for a second that she was a forty-two-year-old mother of one. \"You're married,\" she finally said.\n\n\"Legally, yes. Technically, we're separated with the intention to divorce.\"\n\n\"You don't plan on changing your mind?\"\n\n\"No.\"\n\n\"Why not?\"\n\nI smiled. \"My future doesn't lie with Emma. We both know that. We're free to pursue other relationships. Once I've found someone I want to date, I said I'd call her, let her know. It will hurt us both, knowing that would be the first real signal it's truly over, but I want her to find happiness, much as she wants it for me.\"\n\n\"Your wife sounds rather incredible through all this.\"\n\n\"She is. I still love her. But it's the love of a friend, no longer as my wife. I'm not in love with her anymore.\"\n\nShe shuffled a little closer, leaning forward ever so slightly. \"Is there anyone in your life at the moment taking your interest?\"\n\nI took a sip of wine. \"There is. But I've only just separated from my wife. The last thing I'd want her to think is that she's a rebound. So I'm going to take it slow. Probably more for my benefit than hers. I don't want to leap into anything.\"\n\n\"But you have met someone?\" she asked, seeing the smile on her face.\n\n\"I have. There's added awkwardness, for various reasons.\"\n\n\"Oh, what are they, Mark?\"\n\n\"She's an older woman. At my age, I guess it doesn't really matter, but there's enough of an age gap to raise eyebrows. Not that I care about that sort of thing.\"\n\n\"Anything else that could be a concern?\"\n\n\"Hmmm. Well, I think if my best friend found out, he could be rather upset by it.\"\n\nShe moved closer until our noses almost touched. \"So this older woman you know, are you thinking about dating her?\"\n\nI met her eyes. \"I'd love to,\" I replied softly, \"But, as I said, I don't want to rush things. When I do ask her out, though, I hope she says yes.\"\n\n\"Oh, I think there's a good chance she'll say yes, Mark.\"\n\nI kissed her. Not that chaste kiss of previous times either. She returned the kiss immediately, stopping just long enough to put down our glasses, before we resumed. She tasted of wine. Her lips were soft. Her tongue was playful. She moulded her body into mine, while my hands certainly caressed those wonderful curves of her body. No idea how long we kissed. Might have been five seconds, five minutes, five hours. The only thing that mattered while kissing her was... her.\n\nWhen we finally stopped for air, her lips slightly parted, her breathing a little more rapid that usual. \"Can definitely show patience if you're going to kiss me like that all the time, Mark,\" she said softly.\n\n\"Hopefully not too long.\"\n\nWe eventually cuddled on the couch and watched a movie together. A little more kissing, but that was about it. I knew Eva wasn't going to push me too fast. I had no doubt she wanted me to stay the night. I wanted to stay the night. But I wasn't there just yet. I knew I needed to deal with other things.\n\nLeaving her house well after midnight, I pulled her close at the threshold and kissed her again. Pressing her body into mine, she smiled as she wouldn't have missed the fact I was hard. She didn't touch me though. I'd add thankfully, because if she did, I probably wouldn't have left. I hated leaving though.\n\nI called Emma the next day, asking if she'd like to meet for a coffee during the week. She was surprised to hear from me, particularly asking to see her, but I had to tell her before anything with Eva progressed further. I let Eva know what I was doing, so let her know I'd only see her on Saturday. She didn't worry about it, letting me know that she would just miss my presence at her house until then.\n\nWe met for coffee on the Wednesday afternoon, and I wasn't surprised to see she brought along her friend, well, our friend, Rachel. I took their orders and bought their drinks, one for myself at the same time, before returning to the table. Emma looked as good as ever, but the feelings of deep love I'd felt, even as recently as a couple of months before, had already receded.\n\n\"You've met someone,\" she stated bluntly, but thankfully smiling.\n\nI chuckled. \"Am I that easy to read?\"\n\n\"It's the only reason you'd invite me out for coffee so soon, Mark. I won't ask who it is, that's none of my business. But is it rebound fling or something serious?\"\n\nTaking a sip of my coffee, I gave it a few seconds. \"I'm hoping serious.\" Emma didn't cry, but I knew that's what she didn't want to hear. She lowered her head, hands in her lap. I had to remember she was still my friend, I hated seeing her upset or hurt, taking one of her hands in mine. \"Sorry,\" I muttered.\n\n\"Please don't be. We agreed to this, Mark. Good guy like you would always meet someone.\" That made me smile. \"You obviously don't need my permission, but does she know you're still legally married?\"\n\n\"Yeah, already explained the complexities of how we'd proceed.\"\n\n\"You moving on should mean our divorce will go through quickly, at least.\"\n\nRachel started to laugh, causing us both to look at her. \"Look, we've already seen friends divorce, and it was bitter. You two are acting like it's just a... I don't know... simple thing.\"\n\n\"It hurts,\" Emma admitted, \"But it's for the best. We'll both find someone we can be happy with, and hopefully maintain our friendship into the future.\"\n\nI squeezed her hand. \"Definitely will.\"\n\nWe caught up on our lives for the rest of the hour we were there. She was happy in her job, and found having Rachel living with her stopped her feeling down in the dumps too often. They'd been out a couple of times, though Emma admitted she'd rather meet someone elsewhere than a club or pub, but as we'd been together the entire time during our teenage years and early twenties, she was going to let her hair down for a little while, at least.\n\nHugging as we parted, she whispered into my ear, \"I hope she makes you happy, Mark.\"\n\n\"It was good, most of the time, right?\"\n\n\"The best,\" she whispered. We hugged tightly before I let her go. Rachel hugged me too, whispering words of encouragement that she'd take care of her, and wished me happiness too.\n\nI had good friends. I hoped it would survive what was to come.\n\nArriving home that night, I sat down to dinner with the family. I must have looked distracted as Mum finally asked, \"Something on your mind, Mark?\"\n\n\"I met up with Emma.\" That earned plenty of glances across the dinner table. \"I told her I've met someone and I'm considering dating them.\"\n\n\"Who?\" Michelle asked excitedly.\n\n\"Um... Eva...\"\n\n\"Miss Ricci!\" Jamie exclaimed, \"Oh my god!\"\n\nMichelle got just as excited before Mum told them both to settle down. \"How did she react?\"",
        "\"There's no doubt she was upset, but I didn't tell her who it was. She didn't want to know. But now that I've met someone, she'll probably feel it now right to do it herself. But... it now makes our separation and eventual divorce inevitable.\"\n\n\"Well, let's see how...\" Dad started to say.\n\n\"I really like her, Dad. I mean, I can see myself...\" I trailed off. I didn't want to think about the L word just yet. Far too soon for those sort of feelings. \"But Emma and I won't be getting back together. I'll just take it nice and slow with Eva. If things work out, great. If not... I don't want to think about it.\"\n\n\"Good lad.\"\n\nThe guys who worked for me joked I worked with a constant half-grin on my face. Considering they knew I was separated and looking at divorce, they admitted to being surprised. I wasn't going to share anything about Eva with them just yet. I still wasn't sure what was going on. I visited her twice during the week, one just for a drink in the evening, taking a dip in her pool at the same time. That ended up with some rather heavy petting. Dragging myself back home took all the willpower I had, particularly as she bid me farewell at her front door, still just wearing her bikini. We enjoyed dinner together on Thursday, another traditional Italian dish she loved preparing.\n\nTurning up at her front door on Saturday morning, she met me in another silk robe, this one white and a little transparent, to be honest. Barefoot, noticing she'd painted her toenails. Her legs glistened again after being shaved and moisturised. \"Are you sure you don't mind working six days a week, Mark?\" she asked.\n\n\"You are paying me for this, Eva. I don't mind.\"\n\n\"And my food and company?\"\n\n\"That's the real bonus. I'm going to finish the backyard this morning, at least regarding the lawn and garden. This afternoon, I'll get started on some of the small jobs inside. Still want painting and decorating?\"\n\n\"Yes, definitely in the living room, kitchen and dining room.\" She paused and smiled. \"And my bedroom.\"\n\nI smirked. I couldn't help it. \"Well, I don't remember you showing me what you wanted in there?\"\n\nA look passed over her face for a moment before she took me by the hand. It was tastefully decorated, as I would expect. All she wanted was a new coat of paint in a different colour. That would be easy enough. Sitting on the edge of the bed, she crossed her legs, her robe parting so I got a hint of her panties. She smiled as it was obvious where my eyes went. \"Have you had breakfast, Mark?\"\n\n\"Yeah. Toast and coffee.\"\n\n\"So you'd like some lunch?\"\n\n\"Yes please.\"\n\n\"And dinner?\"\n\n\"If you don't mind.\"\n\n\"I don't mind at all, Mark. I love looking after a hardworking man such as yourself. And I love to cook him food that I know he'll enjoy.\"\n\n\"I do love your cooking, Eva.\"\n\n\"Good. And I might just head outside later to keep you company. Maybe a little sunbathing. Perhaps you can ensure I don't get burned again?\"\n\nI met her eyes and made sure I smiled. \"Well, I can admit that I'd enjoy doing that again.\"\n\nI figured I'd best leave and get started, so I turned around but she called out, \"Mark, did you speak to Emma?\"\n\nStopping, I turned back to her. \"Yeah, I met up with her on Wednesday.\"\n\n\"And?\"\n\n\"I told her I'd met someone and I'm considering dating her. She wasn't surprised but wished me luck.\"\n\nEva smiled, undoing the tie around her robe, parting it just enough that I got a look at her again. She wasn't wearing a bra, keeping the robe just in place so I didn't see them. My feet felt like they were in concrete for a few seconds before I finally stepped forward. I stopped just before Eva, who had never moved her eyes from mine. \"I should... probably go outside and... do stuff...\"\n\n\"I might do some early morning sunbathing, Mark.\"\n\nShe sat up then got to her feet, her eyes still not wavering from mine. Running her hands up my arms to my shoulders, down my chest, I leaned down and kissed her again, running my hands up from her arse and her bare back, not feeling a bra. My tongue slid into her mouth, earning a light moan. I was rock hard within seconds again, Eva stepping back to sit on the bed. I broke the kiss, needing to catch my breath. \"Fuck,\" I muttered.\n\n\"Too fast?\"\n\n\"No... Go out with me tonight.\"\n\nShe smiled. \"A date?\"\n\n\"A date.\"\n\n\"I'd love to, Mark. Make sure you finish early.\"\n\n\"Anywhere you'd like to go?\"\n\n\"You decide. I'd just love your company.\"\n\nI kissed her again before I practically tore myself away and headed to my ute to grab my things. I was there to do a job, not do something else I really wanted to do, and I was fairly sure she really wanted to as well, but I didn't want to rush. Though I had a feeling it was going to happen sooner rather than later.\n\nAt least she didn't lie. I was still hard at work on the garden she kept out the back when she walked out in a different bikini, this one barely covering the important bits. I tried not to gaze at her constantly but it was bloody difficult. Then she called me over as she insisted she needed cream applied.\n\nDoing the same as last time, she seemed a little more sensitive as I massaged from her shoulders downward. I undid the string of her bikini top, no surprise she just flung it away in the end. Moving down over her arse towards her legs, I gave them plenty of attention before I focused on that fantastic arse of hers. She spread her legs and I could almost feel the heat of her pussy, and I allowed my thumbs to brush against it.\n\n\"Mark,\" she murmured. It was easy to see she was turned on, considering the damp patch in her bikini bottoms.\n\n\"Turn over,\" I stated.\n\nShe didn't hesitate, and I got my first look at those utterly perfect tits. She was a B-cup, but they suited her body perfectly. Still delightfully perky. I'm surprised my cock didn't burst through my shorts. I focused on her legs first, though my eyes constantly looked up to hers, though we both wore sunnies. Applying more cream to her body, I avoided her breasts, instead making her giggle as I did her arms and hands.\n\nThen I moved to her breasts. Her nipples were hard enough to cut diamonds. She moaned as I gently squeezed her breasts, pinched and pulled at her nipples. \"Mark,\" she moaned softly.\n\nI leaned down and kissed her deeply. \"I should keep working but if you want to put on a show for me, I won't complain.\"\n\n\"Touch me...\" she whispered.\n\nI sighed. \"Eva...\"\n\nShe caressed my cheek, lifting her sunnies so I could see her eyes. \"Mark, I know I'm not a rebound. I know how you really feel about me. Touch me. Please. I want you to touch me. I've thought about you doing it since that first night you were home.\"\n\nI sat back and wasted no time removing her bikini bottoms. The fact she was shaved completely did surprise me. I would have thought she'd have a little hair around. I didn't mind either way. Emma went through periods of shaving, periods of leaving it trimmed. Leaning forward, I kissed Eva again, a soft, sensual kiss as my fingers touched her for the first time.\n\nShe was soaking wet. No surprise she admitted to heading inside and making herself orgasm the previous weekend. I teased her at first, my fingers just running up and down her lips, running over her entrance, just enjoying how warm and wet she felt. I sensed how her body reacted, kissing her deeply as she released a loud moan.\n\n\"Oh fuck,\" she cried, needing to break the kiss.\n\nSliding a couple of fingers inside her earned one hell of a passionate kiss, her fingers running through my hair as I quickly had my fingers moving inside her. Curling them around, I didn't take took long finding her special spot. \"Oh my god!\" she cried, \"Please, Mark. It's been so long...\"\n\nI didn't say anything, just focusing on her gorgeous face as my fingers continued to work. Managing to position my hand properly, I added my thumb as I started to rub her clit. She whimpered immediately, feeling her body quiver, pressing down into my hand.\n\n\"Cum for me, Eva,\" I whispered.\n\n\"Mark... please...\" she begged.\n\nShe didn't last more than a couple more minutes before I felt her squeeze my fingers, her thighs trying to squeeze into my body, her head rolling back as she released the sort of moan that suggested it was one hell of an orgasm. I enjoyed every second watching her, only stopping when she relaxed back on the lounger with a satisfied smile on her face. Removing my fingers, I tasted her for the first time. I made the sort of approving noise I'm sure every woman would love to hear.\n\nKissing her cheek, I stood up and got back to work.\n\nShe was positively beaming at lunch, unable to stop touching me, whether my face, arm, chest, thigh. I think she wanted to return the favour somehow. What she was going to learn was that I loved making... well, considering she was only my second lover, she was going to learn that I loved making my lover orgasm without needing anything in return.\n\nAfter lunch, I started on some of the smaller jobs around the house. Nothing more than a screwdriver, drill or hammer could repair, fix or put up. Eva hovered constantly, which I didn't mind, keeping my mind occupied as we chatted anyway. Any small job I finished successfully earned me a kiss, at least.\n\n\"I could get used to that, you know,\" I said.\n\n\"Just don't go expecting it from some of the tramps that live around here.\"\n\nI nearly snorted at that. Now they were tramps. The other day, they were all good friends. What she didn't know is that I didn't fancy any other neighbours. Sure, they were friendly towards me, and I was in return, but although I'd help them out with fixing things, I wasn't interested in anything else... though I'd heard more than one offer...\n\nPacking up at 4pm, I let Eva know I'd pick her up at 6pm, and that we'd get a taxi or something into the city as I didn't want to drive. She kissed my cheek, letting me know she'd be ready on time. Heading home, I took an hour just to chill out. Mum was home and I figured I couldn't keep it a secret for long.\n\n\"I'm taking Eva out tonight,\" I said.\n\n\"Where to?\"\n\n\"Well, I know she likes a good steak. There's a few in the city that should fit the bill. After that, we'll find a quiet bar we can just relax in.\"\n\n\"Know her quite well already.\"\n\n\"Anytime I'm there, we talk non-stop. She's so easy to talk to.\" I smiled to myself. \"It's almost like there's no pressure. It's completely natural. We both know where this is already going.\"\n\nI showered, put on some deodorant and cologne, a nice dress shirt, trousers, leather shoes, a good watch, sunnies as it would be daylight until around 9pm. I called the taxi to pick us up from Eva's. Knocking on the front door at six, she answered wearing a black dress, the top resting just above her breasts, the hem barely halfway down her thighs. Black heels and what I assumed were thigh highs. She had some light make-up but she didn't even need that. Styled her hair.\n\nShe was a goddess.\n\nThe taxi drove us all the way into the city, Eva cuddling into my side. I'd managed to snag last minute reservations at a decent restaurant. She was pleased with my choice. No surprise we both chose a steak, though went for three courses, because I insisted on treating her all night. The smile that lit up her face was worth it.\n\nThe food was fantastic. She sipped at red wine, I enjoyed a light beer or two. After dessert and a coffee, we wandered hand in hand towards a bar suggested by a friend. Man sat at a piano. Light conversation filling the air. We found a table that came with a couch, ordering a couple of cocktails to sip on as we listened to the music while conversing.\n\n\"Mark, I haven't been on a date in years,\" she admitted.\n\n\"Why not?\"\n\n\"As I said, Michael... he left too many wounds on the inside.\"\n\n\"So why go on a date with me?\" I had to ask. It was something in the back of my mind.\n\n\"I know you. I've seen you grow up and now I can see the man you've become. And I like the man you've become.\"\n\n\"Can I go with corny?\"\n\n\"I love corny!\"\n\n\"You're like a fine wine, Eva. I thought you were beautiful before. Now? My god!\" She put a hand to my cheek and ensured I was ready to kiss her. The look in her eyes told me what I should say next. \"Should I order us a taxi home?\" She nodded eagerly.\n\nWe were back earlier than I planned, not that I minded. Waiting for her to open her front door, she made sure my hand was in hers as she walked inside. Soon as the door was shut and locked, we were all over each other. Any suggestion we'd slow things down ended once I had the zipper of her dress down, pooling around her feet. She stepped out of her heels, I managed to kick off my shoes and socks.\n\nMaking our way to the bedroom, my shirt and trousers disappeared before I even knew it, and my underwear disappeared at the same time. The smile on her face as my erect cock appeared suggested at least some approval. She'd gone all out on her lingerie. I had to remove her bra quickly so I could finally get my lips around those hard nipples.\n\n\"Oh, Mark,\" she breathed as I practically devoured her breasts.\n\nThose were fun, but apart from making love, there was something I was almost desperate to do. She seemed to sense my intentions, giggling away as she gently pushed my head down. I earned further giggles by taking her panties in my teeth and dragging them off, Eva spreading her legs for me. I'm sure my cock grew another inch at what I could see.\n\nI inhaled her scent first. \"Fucking hell, I've thought about this more than once,\" I confessed.\n\n\"About time you gave my pussy more attention, Mark.\"\n\nI revelled in her taste. The feel of her pussy. The way she reacted to anything I did. The sounds she made. Her skin was so smooth, running my fingers up and down her legs and body as my tongue did the work. She was wet as hell and hot to trot. Made her orgasm barely after touching her clit, and she wanted even more. Two fingers inside her, find that spot, even better orgasm.\n\n\"Mark!\" she whimpered, glancing up to see her eyes glistening in the light of the bedside lamp. I was feeling it too. She knew all about the crush I'd had on her. \"Mark, baby, we need to make love right now,\" she added softly.\n\nI groaned as I slid my cock slowly inside her. She whimpered again, and I almost worried I was hurting her, though when I felt her legs wrap around me, it was simply her way of letting me know how great it felt. I kissed her deeply and gazed into her eyes. Hers were as alive as I'd ever seen them, a swirl of emotions, all of them good.\n\nShe wasn't a loud partner in bed, shouting out for me to fuck her. I asked a few quiet questions, but we relied on soft sounds, touch and the other senses. She felt wonderful, so tight, so warm. I couldn't stop kissing her. I kept the pace gentle to start, waiting for the signal to go faster, though I was already feeling the urge to cum.\n\n\"Pill?\" I asked. She smiled and nodded.\n\n\"It's okay. I'm safe. Got a new prescription as soon as I wanted you to make love to me. And I wasn't having you inside me with a condom.\"\n\nI enjoyed quite the orgasm. I enjoyed more than one that night. Eva enjoyed quite a few more as I slowly discovered what she enjoyed. She gave me one hell of a blowjob, which left me as empty as I'd ever felt. And when we finally had to stop, we laughed away as we showered together. We couldn't stop kissing, moulding our bodies together. I knew I was falling in love with her big time.\n\nWaking up the next morning, we made love again before breakfast. I spent most of the day with her, in and out of her bedroom, until I needed to head home. Wishing me goodnight at the front door, I didn't want to let her go. I also wanted to tell her how I felt, but it was too soon. There wasn't any rush to share. And although she'd assured me that she wasn't a rebound, I didn't want to make that leap too soon.\n\nSummer arrived and I was in a much better place than when I'd left my wife a few months arrived. Eva and I were dating but not particularly official, not yet, taking things nice and slow. She wasn't dating anyone else, as she had no interest, and while not official, I wasn't going to date around. That wasn't my thing. I'd told her she was the only one.\n\nAdd to that, I was still married, legally at least, so there was no real point in rushing into anything. I was now picking up plenty of work in the neighbourhood. All the single ladies were eager for my help, and in addition to paying me, they'd offer me the chance of dinner and drink. I thought nothing of it, figuring they were a bit lonely, wanted a bit of company. They all knew about my relationship with Eva, and apart from talking about that, I learned about their own relationships. Sometimes, it was rather upsetting. Other times it wasn't a real surprise. Only a few still had their children living at home. My parents seemed to be unique that all their children were at home.\n\nIt was perhaps a month or so before Christmas when...\n\nI was seeing Eva a couple of nights a week, plus the usual Saturday, though that had now turned into arriving Saturday morning and leaving Sunday evening. Sometimes I'd even stay through to Monday morning. I turned up at her house on a Wednesday to find the screen door locked and the front door shut. I knocked, waiting a couple of minutes. I knew she was home as there were lights on.\n\nShe opened the door and I couldn't really see her. \"What do you want?\" she asked coldly.\n\n\"Eva?\" I asked, \"What's wrong?\"\n\nShe scoffed. \"What's wrong, he asks. Here for another one of your booty calls. Is that it?\"\n\n\"What the hell are you talking about?\"\n\n\"I know what's going on, Mark. How many women are you sleeping with around here?\" I felt my jaw drop in... shock. \"You're really no better than him, are you?\"\n\nI should have been angry that she'd ever compare me to him. Instead, I just felt incredible disappointment she'd even think that about me. I had no idea what got into her mind, but she was clearly upset. \"Eva, I'm not doing anything with anyone else.\"\n\nShe scoffed again, sensing she rolled her eyes at the same time. \"Sure you're not. That's why you're walking home after spending an evening with them. A single man doesn't stay unless he's getting something else in return. So, how many are you fucking, Mark?\"\n\nI just shook my head. I didn't want to argue, and I knew nothing I could say could convince here. \"I'm with no-one else but you, Eva,\" I said softly, sighing afterwards.\n\n\"To think I trusted you. Allowed you into my bed. That I... shared everything with you.\" I noticed the door start to close. \"Just go away, Mark. Leave me alone.\"\n\nI waited until the door clicked shut before I had to wonder what the fuck just happened. Where the hell had she got the idea I'd been sleeping with anyone else? She knew I was helping around the neighbourhood. I'd taken on main jobs and also took on some side gigs as plenty of them needed help. They paid for my time, and I enjoyed their company. But the idea of sleeping with any of them never crossed my mind...\n\nI trudged home, trying to figure out why she would leap to such a conclusion. I knew she was friends with most of the women around the neighbourhood. I was left wondering what I would face walking in the front door. Mum and Dad were in the living room when I walked in. They were surprised to see me. And what just happened must have appeared on my face, Mum to her feet immediately. \"Mark?\" she asked softly.\n\nWith a sigh, I just walked past. \"Don't worry about it,\" I muttered.\n\n\"Are you hungry?\" she called.\n\n\"Not really,\" I muttered, \"I'm just going to shower and... fuck it, I don't know.\"\n\nI showered and just went to bed. Seemed pointless doing anything else. Early to bed meant early to rise. At least I had a job to keep me occupied for a few days. Mum and Dad got up early, no doubt hearing me potter around the kitchen. Thankfully, they didn't ask any questions, though I did hand Dad a piece of paper, listing names and phone numbers. \"What's this?\" he asked.",
        "\"Give that to Eva. It's a list of people who can finish all the jobs I was in the middle of doing.\"\n\nThey shared a glance. \"What happened?\"\n\nI finished my coffee and grabbed my bag. \"Don't want to talk about it. I'll see you later.\"\n\nI'll be honest, it felt worse than my separation from my wife. That had been mutual, as we'd parted as friends. Eva had flat out accused me of cheating and... that was it. The fact I wasn't, and she had no evidence, should have pissed me off. Could have gone marching to her door and tried to talk to her. But she was that upset with me, I just didn't think she'd listen.\n\nSo I focused on my job. I was a professional, and would have continued the work at Eva's, but I didn't think she'd accept it any longer. So I just got to work on the list of other jobs. Worked all day, every day. No point doing anything else. And the less time I spent at home, the less chance my parents could ask questions. Barely had breakfast with them, made my own lunch, though Mum always made sure a plate of dinner was left in the oven for when I got back.\n\nIf I wasn't working, I was at the gym. If I wasn't doing that, I caught up with some friends I didn't see all that often. They could see something was wrong with me, and knew it had nothing to do with Emma. I must have seemed bad to everyone as even Emma was summoned to talk to me. Seeing her just made me feel even worse. But we sat outside in the backyard at my home and I told her everything that happened. Despite her being my future ex-wife, I knew she'd listen to me and not judge.\n\n\"Where the hell did she get that idea from?\" she finally asked.\n\n\"I honestly don't know, Emma. Everything was fine one day, and then it seemed like, the very next, she'd convinced herself I was a complete prick and just like her ex-husband.\"\n\n\"How long ago was that?\"\n\n\"Three weeks, I think.\" I sighed, running a hand through my hair. \"I don't know,\" I muttered, \"I miss her.\"\n\nShe hugged me, and I'll admit, that did make me feel better. \"You're a good guy, Mark. I don't know her, but she's obviously got her wires crossed somewhere. It'll work out,\" she said softly.\n\n\"I hope so.\"\n\nThe week leading up to Christmas sucked. I'd had all these ideas to do with Eva, really make it a big deal for her as it would have been our first one together as a couple. Those plans now laid in ruins. So I focused on work again. It was around three days before that Mum knocked on my door late at night. I sat up on my bed and said she could enter.\n\n\"You look like shit,\" she said, humour in her tone. Still, it made me chuckle. Then she handed me what looked like an invitation. \"Just read it,\" she said to my curious look. It was an invitation to a party on Christmas Eva at Eva's house. That had been a bit of a tradition growing up, one household hosting a party for both adults and children to attend. They'd always been good fun. Guess tradition had continued even after most of the families had sadly fallen apart.\n\n\"The Taylor family? That include me?\" I wondered.\n\n\"She said you should come along.\"\n\n\"Really?\" I retorted, unable to keep the sarcasm at bay, \"Last time we spoke, she didn't seem particularly enamoured by me, Mum. In fact, I distinctly remember her accusing me of cheating on her, then suggesting I leave her alone.\"\n\nShe took my hand, making sure I stood up, before wrapping her arms around my broad frame. \"Please come along. All you've done nearly all month is work.\"\n\n\"Nothing better to do,\" I muttered, \"No wife, now no... girlfriend...\"\n\n\"Are you going to make me beg, Mark?\"\n\nShe was almost pleading with her eyes. And I found it very difficult to refuse my mother at the best of times. She still had me wrapped around her finger. I sighed again in defeat. \"Fine. I'll join you.\"\n\nKissing my cheek, she wished me goodnight. Once she shut the door, I laid back on my bed. I dreaded to think of the reception I was going to get. The fact she said I should attend suggested she was just being neighbourly. I figured she'd spend all night avoiding me. Frankly, it would suit me just fine.\n\nI finished work early on Christmas Eve, walking into the house to find the family in the middle of getting ready. There was going to be swimming, so I put on my swimming shorts underneath my dress shorts, a nice polo shirt, and some shoes. Joining everyone in the living room, I wasn't excited about going at all. Must have appeared on my face, my Dad laying a hand on my shoulder.\n\n\"It'll be okay, son. Don't worry about a thing.\"\n\nI had to bite back at least half a dozen comments. I didn't really want to go, but Mum had asked, and I had a feeling Dad would drag me there if I refused. Didn't feel like starting a family fight on Christmas Eve, so with a fair amount of trepidation, we walked up the street toward Eva's place.\n\nThe side gate was open, walking around towards the backyard. There were a few people already, friendly greetings taking place. Soon as they were over, I grabbed a drink and hovered in the background. I was already thinking of an exit strategy. I didn't really feel like lying under Eva's glare for any longer than necessary.\n\nStill, there were a few blokes around, so I did end up chatting to them. What I didn't expect was the arrival of Emma, Rachel and a couple of guys. She'd sent me a message that she'd met someone, but I'd ignored it, not in the right frame of mind. I wasn't surprised she sought me out and introduced me to her potential boyfriend. Seemed like a good guy, so I shook his hand, introduced myself. He seemed to know who I was, and we ended up chatting for a few minutes. Emma watched on, smiling away.\n\n\"How are you?\" she asked quietly as he disappeared to get them drinks. I shrugged. Not sure what else to say. \"Have you spoken to her since?\"\n\nCouldn't help but snort at that. \"She told me exactly what she thinks and feels, Emma.\"\n\n\"You're not... regretting...\"\n\n\"No, Emma. I haven't changed my mind regarding that. I mean, I think we'll always have regrets, but no, I'm just going to... I don't know, figure something out.\"\n\nI'd had a few beers by the time food was served up. I joined the line of people picking out what looks like a veritable feast. Well, I guess one positive is that I'd get to taste Eva's cooking again. I'd definitely missed that. I was just about to start serving myself a few things when I heard a voice behind me.\n\n\"Mark,\" it said softly.\n\nI almost jumped out of my skin, and I noticed the eyes all looking in my direction, the entire backyard going silent. \"Fuck,\" I muttered.\n\n\"Mark,\" Eva repeated softly.\n\nI turned slowly to see her a couple of steps away, looking rather nervous. And quite upset. Any other time, I'd have taken her in my arms, reassured her, made her feel better. But my defences were up and I didn't know what to think or feel. \"Thanks for the food,\" I managed to say.\n\n\"You did always like my cooking.\"\n\nI managed a slight smile. She took a step forward, I stepped back. She noticed and stopped, looking even more upset. I could hear the silence around us, feeling all eyes on us. \"Mark, I'm sorry. I'm so sorry. I don't know... I know you'd never do what I said.\"\n\n\"But you still said it, Eva. You still compared me to him. How could you even think I'd be anything like him? The guy is an absolute fuckwit. I still remember every word you said to me, Eva. What you said about him, and then what you said about me that night. Do you have any idea how much that fucking hurt me? I thought you trusted me, at the very least. I was clearly wrong about that. I was wrong about everything.\"\n\n\"No!\" she exclaimed, stepping forward, \"Mark, I was wrong. I was... falling for you, falling in love with you, and it scared me. I was so scared to fall in love again after so long.\"\n\n\"Jesus wept, Eva, you think you were the only one scared? I've just left my wife after five years of marriage. Yet my one constant thought since that night we met again has been you and only you. My one constant thought since that night you visited for the first time since I moved home was you. I looked forward to every Saturday as I knew I'd spend the entire damned day just basking in your presence, and all the hard work I was putting in meant the world if I just earned a smile on your face. Then add that to the fact we were pretty much dating, definitely an item, as they'd call it. I was spending more and more time here, then add to that I'm absolutely head over heels in love with you and...\" I paused. Her face lit up in a smile. Then I went over what I'd just said, and what she'd said, and whispered, \"Oh...\"\n\n\"I'm a fool,\" she whispered, stepping closer to me, \"I've obviously talked to them. They all think I'm an idiot. I'm definitely a big, stupid idiot.\" I heard more than one muttered voice in agreement. \"I just had so many bad memories, then I got scared, and I put two and two together to get six. I've missed you so much, Mark.\"\n\nI sighed, running a hand down my face. \"Eva, the one thing I know more than anything is just how much I love you.\"\n\n\"I love you too, Mark.\"\n\nI dropped the plate on the table behind me and kissed her. She started to cry. I barely held my emotions in check. Fairly sure there was applause, though I think I've seen too many romantic movies. I pulled her tight to my body, savouring the taste of her mouth, the feel of her body against mine. No idea how long we kissed before we came up for breath.\n\n\"Wait here,\" she whispered, disappearing inside. She returned a minute later holding a small box. I noticed her hand shaking as she offered it to me. \"An early Christmas present.\" I took the lid from the box to find a keyring with three keys. Glancing at Eva, she smiled. \"One for the front screen door, one for the front door, one for the sliding door there. I'm hoping, between Christmas and New Year, that you'll move in.\"\n\n\"You're serious?\"\n\n\"I'm tired of living alone. I want the man I love with me. Would you like to move in with me?\"\n\nI turned back to my parents. \"I'm moving out again!\" That made them laugh, at least.\n\nI put the keys in my pocket before kissing her again. She leapt up so she could wrap her legs around me, both of us chuckling away as I heard conversation start up again. Resting her forehead against mine, I noticed the tears leave her eyes. \"Forgive me?\" she whispered.\n\n\"Of course,\" I whispered back, \"One proviso.\"\n\n\"Anything.\"\n\n\"Please talk to me next time.\"\n\n\"I will. I promise. I...\"\n\n\"We're both scared, Eva. It's a big thing this. You should feel my heart beating right now. Enough to put me in the ICU.\" She giggled before holding me tight in her arms. \"Eva, as soon as my divorce is finalised, we'll talk about marriage. Deadly serious about that. That's how much I love you, and want to be with you. I'm talking rest of my life sort of thing.\"\n\n\"I look forward to that day, Mark.\"\n\nEva had likely met Emma at our wedding, so I figured I should probably introduce them properly. Emma was smart, putting two and two together, the fact she was Steven's mother. She gave me a look. \"Does he know yet?\"\n\n\"I'll let him know in the new year,\" Eva replied.\n\nEmma hugged her. \"Look after him for me,\" she said.\n\n\"Just like your new fella will look after you,\" Eva said softly.\n\n\"If he doesn't, Mark will surely kick his arse.\" Emma gave me a look. I replied with a wink.\n\nEva didn't leave my side for the rest of the night. No chance I was heading home that night. My sisters hugged me and Eva before Mum and Dad did the same, Mum inviting Eva to join us the next day. \"I was expecting your invite. I have enough to feed him breakfast, so we'll be down mid-morning.\"\n\n\"Have fun tonight!\" my Dad exclaimed, making me groan though Eva giggled away. I helped her clean away all the plates and garbage before she asked if I wanted a late night swim. Even better was when she suggested the swim take place without clothing.\n\nSoon as we were in the pool, we were all over each other again. The look in her eyes told me she wanted one thing only. Sex in the pool sounds great but can be awkward, so we cooled off before getting out, patting ourselves dry, before I took her hand and led her towards her bedroom.\n\nWe made love into the next morning. Eva just wanted my cock inside her, and I wasn't going to complain about that. Watching her ride me through one orgasm then the next was certainly a Christmas treat. I thought there'd be tears. Instead, there was just a constant smile on her face, and I knew I was returning it.\n\n\"I love you, Eva,\" I whispered.\n\n\"I fucking love you... and your big dick!\"\n\nI would always like hearing both things from her.\n\nWaking up the next morning with Eva in my arms was the ideal Christmas present. I let her know that, watching her turn around in my arms. She apologised, as that was her idea. She'd been desperate to speak to me for at least two weeks, but she'd spoken to my parents, everyone in the neighbourhood. She knew she'd hurt me. \"I'll keep apologising until...\"\n\nI kissed her softly. \"Forgiven, Eva. These are new feelings after so long. To a point, I do understand.\"\n\n\"You're nothing like him. I know that. I've always known that.\"\n\nI cuddled her tightly, reassuring her it was okay. Might take a couple of weeks to get back to where we were but we'd get there easily. We now knew how we felt about each other. That was the important bit.\n\nAfter breakfast, we dressed and headed to my place, Eva taking a bag as she'd bought presents in preparation. I had presents under the tree for the family, but once they were opening theirs, I headed to my bedroom and took a few into the living room for Eva. Her face lit up when she noticed. \"I live by the theory that I should always live in hope,\" I said.\n\nI'd never been big for hugely expensive gifts, preferring gestures that meant something. The one thing I did get Eva was a necklace and bracelet duo, something she could wear for me when we headed out on dates. She loved it, of course, as the stone in the necklace and the smaller stones in the bracelet were her favourites. As I'd told Mum, I knew everything about her.\n\nDad and I started the barbecue around midday, Mum and my sisters preparing everything else. Eva hovered near me the entire time. \"What are your intentions with my son, Miss Ricci?\" Dad asked, fairly sure he was joking, but one can never tell with my father at times.\n\n\"Well, once he moves in with me in the next few days, I'm going to keep him satisfied in more ways than one.\"\n\nDad almost spat his beer everywhere at the insinuation. Eva wrapped an arm around my waist, leaning down to give her a soft kiss. \"Well, I think I might just have to return that idea and then some, Miss Ricci.\"\n\n\"God, it's a good thing you're moving out if this is what it's going to be like,\" Dad muttered, \"Still, good to see you both so happy with each other.\"\n\n\"Worked out for the best in the end, Dad. Thanks for the kick up the arse to get me up to Eva's last night.\"\n\n\"Your mother and I knew, of course. Had to keep it under wraps. She was desperate to tell you.\"\n\n\"Hope it was a good Christmas surprise, Mark,\" Eva said softly.\n\n\"Hmmm. Waking up with Eva Ricci in my arms on Christmas morning? Trying to think of anything better.... Nope, got nothing.\"\n\nThe one sound I remember from lunchtime is laughter. Everyone was in a fantastic mood, my sisters were excited about all their presents, and pleased to see their big brother smiling again. Not upset I was moving out, as I was only moving up the road, so I would be much closer than before. Mum was sad I was going so soon, though understood I needed to move onto the next chapter of my life.\n\nI started moving in on Boxing Day. Didn't take everything, just my clothes and a few mementoes. As I always took the time between Christmas and New Year to myself, I offered to restart the work I'd started. As soon as those words left my mouth, Eva dropped to her knees and thanked me with a blowjob in the kitchen. After I'd cum in her mouth, she swallowed it all down, rose to her feet and kissed my cheek. \"Thank you, sweetie,\" she said, \"I'll watch you and definitely give you motivation to work hard.\"\n\nHard at work the next day, her motivation was walking outside naked, resting back on her lounger. She stayed in the shade until the sun was nice and hot. She insisted she apply sunscreen to me first before asking me to do the same to her. No surprise I ended up eating her out to a couple of orgasms, my fingers bringing on one more, until I got back to work. We ate lunch together, made love in the garden, then I kept on working. And that was how things went until New Year, and the garden feature she wanted was pretty much finished after a few days of hard graft.\n\nWe attended a New Year's party at a neighbour house, attending as an official couple for the first time. Everyone remembered what had happened only a few days before, so there was plenty of chatter about Eva finally figuring it out, while I was asked plenty of pointed questions as to when I'd ask for her hand in marriage. They knew I was still legally married, but Emma had given our relationship her complete and utter blessing, insisting she was going to attend and be involved with the process. I think Eva fell in love with her a little bit for that offer.\n\n\"Now you know why I married her,\" I whispered, \"But I really want to marry you and spend the rest of my life with you.\"\n\n\"How much?\"\n\n\"I am so utterly in love with you, Eva, it still scares me a little bit.\"\n\n\"Me too,\" she whispered back.\n\nAfter a couple of weeks living with Eva, it was like we'd lived together for years. She learned very quickly I wasn't a lazy slob. The only thing I'd never been good at was cooking, though I had no problem helping out, and ensuring I picked up the slack elsewhere. She assured me she loved cooking regardless, and loved watching the man she loved enjoy what she placed in front of him.\n\nHer parents visited within a month of my moving in as they hadn't the time during the Christmas break as she did have a lot of brothers and sisters. Her family was huge. I had worried about that, but she was more worried about our reunion than anything else. They knew who I was, and while there were one or two awkward questions, particularly the age gap, they accepted our relationship, accepting me into the family with open arms.\n\nI made sure life never got dull. I worked hard, so did Eva. We both tried to keep our life exciting, though also loved nothing more than lazing around the house from Friday to Sunday night, doing little more than spending the entire time making love, or taking breaks from making love. The honeymoon phase of our relationship seemed to be never-ending. Whenever we hit even the smallest of bumps, we made sure to talk it out. Eva still had the scars, so I tried to be understanding. What she needed at times like that was unending affection, and I had no problem giving it. A lot of cuddles and kisses, and she was feeling better within a few minutes, most of the time.\n\nAt the back of my mind, I was counting down the days to my divorce. So was Eva, the calendar in the kitchen having the date of our court date circled where it should be granted. Emma and I stayed in communication, and I'm sure many would have found it strange that we invited Emma and her new partner around for dinner. Same guy I'd met at the Christmas Ever party. His name was James, and he was a top bloke. After dinner, we sat down and chatted about everything. Immediately obvious was the fact he was utterly smitten with her. Then he said something that made me laugh.\n\n\"She said if I break her heart, her soon to be ex-husband will come kick my arse. Seeing how you two are still so friendly...\"\n\n\"Weird?\"\n\n\"No, I've seen plenty of marriages end bitterly. Get things like kids involved and it's just ugly. Sure, having dinner and drinks, and now sitting talking to you... how long until your divorce is official?\"",
        "\"Couple of weeks.\"\n\n\"And you're going to propose to Eva?\"\n\n\"Well, I already have the ring I want to give her.\"\n\nHe grinned. \"Serious, eh?\"\n\n\"James, I've wanted to marry her since... probably not long after I saw her again for the first time in a few years. I told Emma very quickly about my feelings for her. Obviously, she's happy for me, much as I'm glad she's happy with you.\"\n\nHe beamed at that. \"Thanks, Mark.\"\n\n\"No worries, mate. No worries.\"\n\nWe didn't need to attend court, as we'd made a joint application to divorce, but Emma and I decided to go just to make sure everything was in order and that there were no last minute hiccups. I'm fairly sure the magistrate didn't see as many friendly ex-couples as us. Eva and James were also in attendance. Quite frankly, the whole process was a breeze, and told that we'd receive the divorce order in thirty-two days.\n\nIt was only when leaving the building that Emma got a little bit tearful as our divorce was now reality. James and Eva gave us time as I hugged her. \"You're still my best friend,\" I whispered, \"Always will be too.\"\n\n\"You're mine too. But it still hurts we couldn't make it work.\"\n\n\"Hurts like hell, but it's for the best, right?\"\n\n\"I know. Regrets?\"\n\n\"I'll always have them.\"\n\n\"So will I.\"\n\n\"Let's give it a month. Once it's official and we get the paperwork, we should... commiserate together.\"\n\nThat made her giggle. A dagger to the heart, in many ways. \"How many men remain good friends with their ex-wife?\"\n\n\"Probably more than we'd think. I'd hate to lose you from my life.\"\n\n\"Not getting rid of me that easily, Mark. I expect an invite to the wedding.\"\n\n\"I'll make sure you're next to my parents.\"\n\nI kissed her cheek then gestured for James and Eva to wander over. Emma hugged him, Eva hugged me. We wished each other the best before splitting apart, heading back to my ute. Before I stepped in, Eva stopped and hugged me tightly. She knew how it felt, but her marriage had ended disastrously.\n\nFor the next month, I organised a party, somehow managing to keep Eva in the dark, thanks mostly to Mum, my sisters and many of our friends around the neighbourhood. What I didn't expect a couple of weeks before the party was a surprise of my own. I don't think Eva was expecting it either. It was the middle of the week, I was at home as work had dried up as the weather cooled, plus I'd had the lads working balls to the wall for months on end. They needed a breather.\n\nI was reading a book on the couch when a knock at the door grabbed my attention. Opening that then the screen door, I near enough fainted. \"I heard my best friend is currently shacked up with my mother. You know anything about that, Mister Taylor?\"\n\n\"What the fuck are you doing here, you daft cunt?!\"\n\n\"Could say the same thing about you since you're living in my mother's fucking house, you dodgy cunt!\"\n\nThen we grinned, laughed liked idiots and hugged each other tightly. \"Fuck, mate, it's good to see you,\" I said.\n\n\"You too, mate. You too,\" Steven replied, \"Way too fucking long.\"\n\nLetting each other go, I wasn't embarrassed by needing to wipe my eyes, noticing him do the same thing. Then I noticed that he had someone with him. \"Mark, I'd like you to meet someone. This is my wife, Melissa. Mel, this is my best mate, Mark. He's currently living with my mother.\"\n\nI rolled my eyes, leaning in to kiss Melissa on the cheek. \"Delighted to meet you.\" She had an accent, though I couldn't pick from where from in the UK.\n\n\"You too, Mark. Heard a lot about you.\"\n\n\"I'm sure. Anyway, where are your things? Come in, come in.\"\n\nAfter grabbing their bags from the hire car parked on the street, I offered to make drinks. And I told Steven I had to call his mother. Grabbing my phone, I dialled Eva. I knew she'd be at work, so hopefully not in any meetings. \"Hi, sweetie,\" she answered, \"Thinking about me?\"\n\n\"Always thinking about you, gorgeous. But I have someone here that wants to say hello.\"\n\nI handed Steven the phone, putting it on speaker. \"Hello, Mum!\"\n\nThat provoked the desired reaction. Eva babbled for five minutes before stating she was leaving the office immediately. The three of us decided to chat about inconsequential shit until Eva got home. I heard her car pull up onto the driveway next to my ute, the car door slamming before there was the click of her heels, bursting through the front door. She was already in tears by the time Steven was hugging her.\n\n\"My baby,\" she cried, \"My baby is home!\"\n\nMelissa got teary, and was even worse when Steve introduced her. I had a feeling he kept a lot of things to himself. After learning what I had, I didn't blame him. No chance of eating at home that night. After we'd dragged their luggage to his old room, thankfully not close to our room at the front of the house, we gathered in the living room to catch up on things. Eva sat on my lap, and I noticed Steven needing to get used to the sight.\n\n\"It's going to take time,\" he admitted.\n\n\"Can't help who you fall in love with, mate. I know that also brings back...\"\n\n\"Oh no, he didn't fall in love with her. He did it to spite us.\" He paused a moment. \"Anyone know where the prick lives?\"\n\n\"Don't, baby. Leave it be,\" Eva said. Melissa squeezed his hand, kissed his cheek. No doubt she knew everything too. \"He's not worth worrying about. Not worth thinking about.\"\n\nSteven chewed on that before nodding a silent agreement. Before heading out, Eva and Melissa wanted to change, Steven joining me outside with a beer. I didn't want to ask, but had to know. \"Why didn't you tell me, mate?\"\n\nHe sipped at his beer, taking a deep breath. \"I was fucking embarrassed, mate. That was one emotion. My own father stole my girlfriend and just flaunted it in my face. Add to that the anger that my father would do such a thing. I'd suspected Charlotte, but never in a million years would have thought... I regret leaving my mother alone to deal with the fallout, but I just needed to get away. I felt like a complete and utter joke.\"\n\n\"I see what you mean.\"\n\n\"So, you and my mother...\"\n\n\"I love her, mate.\"\n\n\"I know that. Don't worry, not going to lose my shit. Frankly, she's snagged herself a good guy. How'd it happen though?\"\n\n\"I'm not sure. We just connected.\"\n\nHe grinned. \"You were always her favourite. She's always adored you in her own way.\" He sipped at his beer again. \"So you're divorced from Emma?\"\n\n\"Yeah.\"\n\n\"Damn. Still good friends though?\"\n\n\"Yep. We parted on good terms.\"\n\n\"And you're going to propose to my mother?\" I met his eyes and he smirked. \"Your mother got in contact with me.\"\n\n\"Is that why you're here?\"\n\n\"One reason.\"\n\n\"What's the other?\"\n\nHe tapped the side of his nose. \"That's for me to know. Plus, it was time to come home, at least to visit. I'm sure Mum hopes I'm here to stay, but I'm not. My home is with Melissa in London. I've got a great job, we've got our own little place, my life is there now.\"\n\nHeading out for dinner, I didn't find it awkward being affectionate with Eva, simply because it was natural after a few months together. Steven might have found it awkward to begin with, but he eventually relaxed and it was a good night to catch up. He let Eva know straight away this was only a visit, but he would be around for a few weeks before flying home. Eva seemed to be aware of the reality, so spent most of her time speaking to and getting to know her new daughter-in-law.\n\nReturning home rather late, we enjoyed a nightcap at the dining table before retiring to our respective rooms. \"Don't make too much noise,\" he called before disappearing with his wife.\n\nEva dragged me into the bedroom, shut the door, and pushed me onto the bed. \"You're now going to fuck me something stupid,\" she insisted.\n\nLike I'd say no to that demand.\n\nThe next two weeks passed quickly before it was the day of the party I'd organised. It was for a Saturday, naturally, but I made sure I was out of the house most of the day working, figuring I'd get back in time to shower, change, then meet everyone to surprise Eva. What I didn't expect was a message from her, stating she'd been phoned by a friend about an emergency, and that she'd be out until late.\n\nWell, that was an abject disappointment, immediately messaging everyone the part would be delayed until later that evening. Not wanting to go home until time, I visited my parents, making use of their bathroom before getting changed. There was no sign of Mum or my sisters, just my Dad, reading his newspaper at the table. Noticing I was not doing anything, he asked, \"Need to go home?\"\n\n\"Well, you know I was organising...\"\n\nHe stood up, gestured with his head. \"Come on, we'll sink a couple of beers before she gets home.\" He locked up before we began walking up the street. \"Nervous?\"\n\n\"Nah, I want to marry her, Dad. Been planning this for a while now. I want it to be right, you know?\"\n\n\"I know, but all she needs to know is you love her, Mark. Doesn't need to be a big deal. Think she's going to say no to you?\"\n\nI stopped and looked at my father. \"Thanks, Dad.\"\n\nWe hugged it out. \"Proud of you, my boy. Damned proud.\"\n\nEntering through the front door, I heard music playing from the backyard. That had me wondering what the hell was going on, glancing at my father who had a look on his face. Stepping through the rear sliding door, the music was eventually turned lower and Eva appeared through the crowd. She was dressed up and smiled widely at my appearance. Everyone was there who I'd invited, including Emma and James, Steven and Melissa, everyone from the neighbourhood.\n\nShe was holding something against her chest, though I couldn't see what it was.\n\n\"Hang on, what's going on?\" I asked.\n\n\"I've had a secret of my own, Mark. I hope you can forgive me.\" She took what she was holding. It looked like a piece of paper. Offering it to me, I turned it over and... I looked up and met her eyes. \"I'm twelve weeks pregnant, Mark. That's our baby.\"\n\n\"You're... you're...\" I looked at the picture again. \"We made that? It's ours?\"\n\n\"Yes, sweetie. That's ours. You're going to be a father.\"\n\nI needed to wipe my eyes before hugging her. \"Holy shit,\" I muttered, \"Holy shit!\"\n\nShe giggled in my arms. \"Good surprise?\"\n\n\"Best surprise ever!\"\n\n\"So I think you have something to do now, don't you?\"\n\nOf course she bloody knew, though I didn't care a bit right then. I handed my mother the photo of the sonography before taking the box I'd carried with me all day from my pocket. After that announcement, this felt a bit anticlimactic, though I didn't really mind anymore. \"Eva, you're now carrying our child, but I'm not about to do this because of that. I love you. I mean, I really fucking love you. Probably not the most eloquent of proposals, but I never claimed to not be part-bogan.\" She smiled and giggled, wiping her cheeks. \"All I know is that I want to spend every single day for the rest of my life basking in your presence. You make me feel, want to, and be a better man. Will you do me the honour of being my wife?\"\n\n\"Abso-fucking-lutely!\"\n\nThere were cheers aplenty as I placed the ring on her finger and kissed her deeply. Long enough that there was more than one cleared throat, telling us that what we might end up doing had led to her being pregnant. I noticed Eva wasn't drinking, and almost slapped my forehead as I had noticed her consumption drop, though she didn't exactly go through a bottle a night or anything. Explained why Steven was around, though. He knew about the proposal and the pregnancy. I was the last one to know about the latter. I didn't mind as I hadn't lied. Greatest surprise of my life.\n\nWe married within three months. Eva wanted one thing, that we married in a church. She was a lapsed Catholic, while she knew I wasn't a particular believer in anything. I just didn't give it much thought. But if it made her happy on our big day, I'd do anything she wanted. Other than that, she didn't want a big bash. Her first wedding had been all the bells and whistles. She wanted a smaller, more intimate affair. The reception would be at our home in our backyard.\n\nEmma was a constant visitor. So was Mum. So were all of Eva's family and her close friends. I stayed out of the way, giving my opinion where required. Otherwise, the only thing I was left to deal with was my suit and sorting out my groomsmen. Steven had to fly back to the UK though would fly back for the wedding with his wife.\n\nEva was six months pregnant when we married. She was utterly radiant as she walked down the aisle towards me in her gorgeous white dress, the smile on her face lighting up the church. She'd never been more beautiful. Steven, my father and James stood to my side, the latter now a very good friend, and he was already considering proposing to Emma. As for Eva, she had two of her close friends, though Emma was one of her bridesmaids. She met my eyes as I stood waiting for Eva and smiled at me.\n\nIt was a great day. A fantastic night. The food was fantastic. The alcohol flowed, though I stayed teetotal alongside my wife. The music had people up and dancing. That first dance with my wife... I didn't want to let her go. Emma danced with me, had a little cry on my shoulder. I promised I'd walk her down the aisle at her own wedding, as I'd said before. Dad watched with nothing but pride on his face. Mum cried. So did my sisters.\n\nAs soon as everyone buggered off for the evening, my wife and I consummated our marriage more than once until Monday morning.\n\nTen weeks later, I was called by the nearby hospital, informing me that my wife had gone into labour. I made it in time to see her deliver our child. He was healthy, a good set of lungs on him. I watched in disbelief as he was cleaned before being handed to my wife. When she handed him to me, I couldn't stop myself from crying.\n\n\"I already know his name,\" she whispered, \"I'll name him after his father, but with a nod to my heritage.\"\n\nWe named him Marco.\n\n*****\n\nEpilogue\n\nI knocked on the door. \"Are you decent?\"\n\n\"I am,\" she replied.\n\nOpening the door, her bridesmaids all turned towards me and smiled. Eva was one of them. Emma and my wife were now incredibly close. \"Looking good, Mark,\" Rachel said, \"Eva is keeping you in line?\"\n\n\"Of course. I'd never disappoint my wife.\" I met her eyes and winked.\n\nHer bridesmaids filed past, all of them kissing my cheek, Eva giving me one hell of a kiss before departing. Emma's friends were still my close friends, even after everything that happened. Emma hadn't turned around yet, not until I touched her shoulder. When she did, I couldn't help the gasp that escaped me.\n\n\"Fucking hell, Emma,\" I muttered.\n\nHer face lit up as she hugged me. \"Don't make me cry. I just finished doing my face.\"\n\n\"Like you need much make-up for your face, Emma.\"\n\nShe hugged me tightly. I was her best friend. James still understood that, even after all this time. \"Regrets?\" she asked.\n\n\"I'll always have them. But things are better now.\"\n\n\"I still wonder... but yes, things are back to how they were. I've got my best friend back in my life.\"\n\nShe leaned back, the smile still on her face. \"Ready?\" I asked.\n\nShe took a deep breath. \"Let's go.\"\n\nEmma and James wanted a church wedding. Neither were religious, but there's something about getting married in a church. I'd enjoyed it when Eva and I had married. The car stopped outside, the bridesmaids having arrived a couple of minutes earlier, preparing themselves to walk in. Stepping around the car, I helped Emma out. Thankfully, her dress was sensible. Just a veil, her dress stopping at her ankles.\n\nTaking my arm, I helped her upstairs as I heard the music start from inside, the wedding organiser doing her job. \"We could always run away,\" she whispered, \"Spanish island or something. They'd never find us.\"\n\nI laughed. \"Can I bring Eva with me?\"\n\n\"Two women? You're a greedy guts, Mister Taylor.\"\n\n\"You want to marry him, Emma.\"\n\nShe glanced at me and smiled. \"Fuck yes, I do!\"\n\n\"Good. Let's get this how on the road.\"\n\nI wonder how many ex-husband's have escorted their ex-wife down the aisle so they could marry their new partner. I would think not too many. All eyes were on Emma, though I received quite a few nods of recognition. Once I was near James, I shook his hand and embraced him, wishing him luck. I then took my place in his line of groomsmen. Eva was a bridesmaid for Emma.\n\nMy parents were looking after our three children. Marco was now four. Our twin daughters, Sofia and Carlotta, had just turned two. After our daughters, she'd chosen to have her tubes tied, joking that I was so potent, a vasectomy probably wouldn't work on me. Eva had always wanted a daughter, and having been blessed with two of them, I don't think anything could wipe the smile from her face. Even on her worst day, and our toughest times as a couple, seeing her twin daughters put the smile straight back on her face.\n\nThe wedding was wonderful Emma and James were perfect for each other, they really were. He was now one of my closest friends. We'd play golf together once a month, meet up to watch the footy, and they were constant visitors to our place. I noticed Emma's maternal instincts kicking in, particularly once our twins were born. I had a feeling she'd give into temptation, and I knew James was interested, but was patient.\n\nIt was obviously a different father-daughter dance as I led Emma out onto the dancefloor. In many ways, it was a reminder of our first dance as husband and wife all those years ago now. Halfway through the chosen song, I kissed her cheek and beckoned James closer. As I handed her over, I said, \"Break her heart, I kick your arse.\"\n\nThankfully, both of them chuckled, and I soon found my wife in my arms as we danced together. I kissed her deeply before she rested my head against my chest. \"What next for us?\" she wondered.\n\n\"Now we live life, watch our children grow up, and we grow old together.\"\n\n\"Hmmm. I do like the sound of that. Maybe a trip to visit my oldest son?\"\n\n\"I think we can organise that. Plus, you need to see your grandchildren via other means than a video call.\"\n\n\"Never would have imagined in a million years I would have married his best friend and had his children.\"\n\n\"I'm glad you did.\"\n\nShe gazed into my eyes, nothing but her love for me reflected. \"Well, could have done worse, I guess.\" I tickled her for that, which made her burst out into laughter, eventually turning her around so her arse was resting against my crotch. \"Hmmm. It seems my husband is excited. Does he want some private time with his wife?\"\n\n\"Think they'll miss us for half an hour?\"\n\n\"Just be blunt and say you want some time to fuck your wife.\"\n\nMy wife had a way with words. I glanced at Emma. \"We're going to our room early. Back soon.\"\n\nEmma rolled her eyes but smiled. James burst into laughter. Taking my wife by the hand, I led her out of the reception hall towards the elevator. Entering our room, I was amazed at how quickly I got her out of the dress, I reckon chosen for ease of getting naked. Once I joined her in nakedness, I could only marvel at her body. She was forty-seven years old, her body had carried four children, twins the last time.\n\nAnd she was an absolute fucking goddess. She always would be in my eyes.\n\n\"Well, someone approves,\" she said rather seductively, her delicate hand quickly wrapping around my cock, her lips finding mine as we shared an intense, passionate kiss.\n\nNo surprise we ended up on the bed rather quickly, making love. Even through the tough times, we rarely went more than a couple of days not showing how much we loved each other. The old wounds were gone. Her heart, her soul, I'd helped mend hers as she'd helped mend mine.\n\nEva. The mother of life. The women who have given my life back. Never had a name been more appropriate.",
        "*****\n\nA/N -- Hope you enjoyed the story."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "romance",
        "older woman",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/eva-59"
}