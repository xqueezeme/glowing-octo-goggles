{
    "title": "The O Pair Pt. 02",
    "pages": [
        "Both Marjory and Lisa were quite competitive, and despite the age difference their pace was similar. Each pushed herself harder than she would have if running alone, so within a quarter of an hour they were both breathing heavily and shining with sweat. \n\nMarjory had also been overdoing it deliberately because shortly before sprinting off, Lisa had whispered the phrase 'get them sweaty' to her. Marjory was eager to please.\n\nMarjory had woken in the early hours of the morning to find that her knickers had indeed been returned to her after their adventure, and were lying at the foot of her bed like a Christmas stocking. \n\nThey were clotted with cum - hers, Lisa's, Greg's - and Marjory felt it was an exceedingly filthy act to replace what she was wearing with them. She switched them with glee and dozed off with them clinging to her, images from the night before playing gently on repeat. \n\nShe woke a little later to hear Lisa getting her running stuff together. Marjory jumped up and pulled some Lyra shorts on over the hot messy situation that she was now adding to. What would the day hold, she wondered, now that her mistress had dictated that she start it so subserviently. \n\nLisa's eyes had sparkled darkly as she greeted Marjory. \n\n\"Good morning! Did you sleep ok?\"\n\n\"Wonderfully, thank you,\" Marjory replied, blushing deeply. \n\n\"I've a fairly hardcore route planned for us this morning,\" Lisa warned, lingering over the word hardcore and catching Marjory's eye. \n\nMarjory was drinking a tall glass of water and remembering Lisa on all fours with her arse full of Greg's big dick, the image thrown up at Lisa's turn of phrase. \n\n\"Well I'm quite up for a really intense session today,\" Marjory replied playfully. \n\nLisa nearly purred with pleasure. She liked this girl. \n\nSo they had set off, waving a hello and goodbye to Greg and Alex who were just descending the stairs together, talking animatedly about spiders and whether they really needed all those legs. \n\nMarjory watched Lisa's tits bouncing as she ran, despite the tight sports wear doing its best to contain them, and let her eyes dwell on the patch of sweat forming at the base of her spine. Her curly blonde hair was tied back and bouncing in time with the other bits that bounced. \n\nThe woman was hot, no question, and Marjory was right now sweating into the knickers she'd seen her getting fucked in. She heard her own panting, and she pulled the waistband of her little shorts down slightly to expose the top of the knickers before giving it a burst of energy and overtaking Lisa. She wanted Lisa's eyes on her arse, and watching how well she was doing as she was told. She also wanted to remind Lisa that she was younger and full of energy - just in case Lisa felt like making her ride her husband to exhaustion, for instance. \n\nThey were turning a few heads as they crossed the park - a flurry of pony tails, bouncing tits, sweaty tight Lycra and long legs. Lisa did indeed enjoy the view that Marjory gave her, and was devising her plan for the day, her eyes enjoying Marjory's tight little arse and the glimpse of the reminder of last night's action. This time, Marjory would do more than just watch. \n\nAlex had a kid's party to attend so they would spend the morning making her costume (a spider, no doubt, as that seemed her theme for the last few days. She'd stand out among the princesses that was for sure).\n\nBut Lisa was planning what would happen when they'd dropped Alex off. She would give Greg a surprise. And Marjory would get a surprise too, she decided, and a lesson. \n\nShe picked up her pace suddenly too and ran alongside Marjory for a while - they would be back at the house soon. Greg would enjoy seeing the pair of them - he was always turned on when she was hot and sweaty, and Marjory was looking amazing, Lisa couldn't deny. \n\nThey slowed to a walk for the last fifty metres as a warm down, and as they stepped across the threshold Lisa said to Marjory very simply, \"Don't wash.\" \n\nIf Lisa wanted her dirty, so be it, thought Marjory as she brushed her teeth (no prohibitions there). She didn't want it to reflect badly on her with Greg though, and for a split second she panicked that it was a deliberate and jealous ploy of Lisa's, to make sure Greg wasn't attracted to the younger woman. She was quite wrong. \n\nShe threw a stretchy cotton dress on, and soon forgot all about her sticky salty skin, as she was hunting high and low for materials that would best replicate an exoskeleton and something sturdy enough to form legs, with Alex helping enthusiastically.\n\nGreg had struggled not to ogle his wife and their new au pair when they had fallen through the door together panting. Instantly he pictured them tangled together, and Marjory's flushed face and sheen of sweat made her look as though she had just received a mighty fucking, and he wished that were true and that he had administered it. The black dress she reappeared in only made it worse as it hugged her figure and she still looked ruffled. \n\nGreg watched the beautiful girl as she played with his daughter and he couldn't keep his mind from the scent of her pussy in the wet knickers that he and his wife had so thoroughly enjoyed the night before.\n\nMarjory looked up from her tangle of electrical tape (shiny and spidery but a bit narrow for the job at hand) and caught Greg looking at her hungrily. She recalled his muscles glistening as he pushed his large cock up his wife's backside, and felt herself moisten.\n\nAn hour later the costume was finished and Alex insisted she wore it while they had a quick lunch together before the party. Probably just as well Marjory thought, since she wasn't sure it would stand up to too much taking on and off. Alex was grinning from ear to ear, and looked frankly terrifying in her homemade arachnid suit. The theme was nursery rhymes and so she was Incey Wincey, but really Greg and Lisa were used to making what Alex wanted to dress up as fit the theme, rather than vice versa. \n\nLisa beamed at them both (she had been sticking black sequins to a black helmet along with a large number of googley eyes that finished the look off perfectly, and trying to keep her mind from wandering to what she had planned for Marjory). \n\n\"Great work! You'll be the best dressed spider there!\"\n\n\"I'll be the only spider there, probably,\" Alex said through a mouthful of salad, sounding both proud and incredulous that it wasn't a more popular choice of costume among her peers.\n\nLisa gave Greg a quick kiss as he bustled the chatty little spider out of the door and into the car, and whispered to him, \"Hurry back.\" \n\nShe knew full well that there would be parents there who would corner you for an age with interest rates, catchment areas, their children's achievements and other tedium unless you made it extremely clear you had other plans already. And Lisa did. \n\nMarjory and Lisa tidied the plates into the dishwasher, and in a small voice, Marjory asked a question she couldn't quite believe she was asking : \n\n\"Can I wash yet?\"\n\nLisa gave a wicked smile at the girl asking her permission to clean herself. \n\n\"No, sorry. Do you feel dirty?\"\n\nMarjory's eyes flashed at this question, and she bit her lip coyly and nodded. \n\nThe fact was, she did a bit. She hadn't been explicitly told to keep them on, but the same pair of knickers were still on her and when she had gone to pee earlier, Marjory could definitely smell her own pussy strongly - she'd spent much of the night fingering herself and then gone for a run in what could only be described as some well worn underwear. \n\n\"We'll see to that, don't worry. When you hear the car on the drive, I want you to run upstairs, take that dress off, and kneel on our bed. We'll give Greg a surprise.\"\n\nMarjory did a double take. Was she the surprise? Obviously, but was Lisa really proposing to share her husband with her? What would she let him do? Suddenly Marjory was imagining a number of things Greg might do to her, and since her questioning look was met with a sincere, reassuring and mock-stern one from Lisa she nodded. \n\nShe didn't have to wait long as tyres soon crunched on gravel unmistakably and her heart began to race as she ran upstairs and stepped through the door she had knelt outside the night before. She pulled the dress up over her head and unclasped her bra so her tits bounced free. Her nipples were rigid with anticipation - it felt extremely forbidden to be climbing into the bed of her employers, almost naked and waiting to be discovered. The bedclothes were soft and expensive, but smelled of sex. This was, after all, the scene of the filthy activities she'd witnessed from the hall.\n\nMarjory rubbed her pussy through the knickers while she waited, kneeling and looking at her perky tits, hoping Greg would like them. They weren't as big as Lisa's, but they sat high and were big enough to move when she was fucked - she really hoped he was going to make them move. \n\nDownstairs, Lisa kissed Greg as he came through the door, her hand on his crotch already. \n\n\"I've a surprise for you,\" she whispered. \n\nGreg ran his hand down Lisa's belly and slid it down the front of her jeans, assuming she meant that she had nothing underneath, or had waxed or something. While she was delightfully soaking to his touch, that clearly wasn't what she meant. \n\n\"Nope,\" Lisa said, pulling his hand back out of her knickers and sucking herself from his fingertips, her eyes locked on his. \"In the bedroom...\"\n\nGreg swung the door open and his jaw dropped when he saw Marjory kneeling on their bed, her tits looking incredible and one hand caressing her pussy through the very same knickers he'd gotten to know so well the night before. She stared back at him, and Lisa pushed him forward into the room. \n\n\"Catch up Greg, we've only a few hours,\" she chastised him, at the same time pulling his shirt from him and squeezing the the growing bulge of his cock. \n\nMarjory's expression was simultaneously both self-conscious and affectedly slutty - she was now finally exposed for both of them and it was quite different to any sexual experience she'd had previously. She had turned twenty that summer and was still not completely comfortable in her own skin, especially when confronted with Lisa's sexual dominance and Greg's gaze of pure lust exploring her. Lisa addressed Greg again.\n\n\"Marjory's very dirty, and since sniffing her knickers makes you into a horny goat, perhaps you'd help out by licking her clean.\"\n\nLisa delighted in embarrassing and arousing both parties in equal measure. \n\n\"On all fours over him, I think, Marjory, so you can see quite how much he's enjoying his job.\" \n\nShe was unbuckling and removing Greg's trousers and he was lost with excitement at the sight of the girl removing those messy knickers and letting him see her sticky pussy with its swollen lips.\n\nMarjory was trying to keep her cool but Greg's cock was out now, already raging hard and any second his tongue would be on her. Her cheeks burned as she really could smell her own arousal and was certain the others could too - without a doubt Greg would when she knelt over his face. She checked Lisa's expression again -was she serious that she wanted her husband to lick her messy cunt in front of her? Deadly serious, it seemed. \n\nGreg lay back on the bed, giving Marjory a smile that said 'are you on board with this?' Sweet of him, Marjory thought, and she looked him directly in the eye, gave her own little smile and touched her clit. Fuck, she couldn't wait to sit on his face. \n\nLisa could smell Marjory's body in the warm room, and reached out and touched her smooth skin for the first time, seeing the girl respond as she did so. She was encouraging her onto her hands and knees over Greg. He couldn't help but pump his cock in his hand as he looked at Marjory, now so fully on display for him - her thighs apart, he could see her lips open and shining and as Lisa had her arch her back, Marjory's beautiful curved arse moved back towards him so her cheeks parted a little more and he glimpsed the girl's arsehole. \n\nBut the thing that was threatening to make him come on the ceiling was the scent coming off her. Deafening was the only word that suited since there was no equivalent for that sense, but the overpowering aroma of her horny and sweaty cunt and arsehole subsumed everything for Greg as she backed towards his face. Marjory felt that to be the case and was on the edge of apologising, her cheeks scarlet, but Lisa's intensity and how enormous Greg's cock looked hovering so close to her own face now both kept her quiet. \n\n\"Let go of your cock darling, or you'll come everywhere when you taste her...\n\nGood, now lick her sticky pussy clean!\"\n\nGreg really didn't need telling, and although he knew they didn't have that long, he also wanted to delight in Marjory's body and tease her a bit. He slid forward a bit and licked the skin below her belly button, enjoying how she trembled in response. Her skin was salty and he ran his tongue down into her neatly trimmed but matted pubes.\n\nIt was glorious, the scent of her, and he decided to revel in it a few seconds more before diving in with his tongue. He switched to kissing her thighs, and brought his hands round to her arse, holding each cheek with one hand and parting her. Marjory moaned. She wanted his tongue, and it felt obscene that he was sniffing her like an animal - especially there! She marvelled at how his cock throbbed and bucked in front of her.\n\nGreg was indeed sniffing her there, and although his cock was untouched he felt as though he could come in the girl's face any second, and he watched her tight, wrinkled hole twitch as he inhaled her.\n\nLisa watched her husband sniffing their au pair's arsehole, his cock straining in front of her face, and she slipped her own jeans off and then toyed with the little bud of her clit. \n\nGreg gave in to himself, and started to lick Marjory's inner thighs up towards her leaking pussy. He licked each of her lips in turn and she spilled onto his tongue. He pushed the pointed tip of it forwards through the lake between her folds to flick her clit briefly (she caught her breath) and then backwards to trace the join of her lips at the bottom of her cunt and the sensitive route further back. \n\nHe kept going, his tongue flicking her in little circles and she moaned as she felt a man teasingly lick her arsehole for the first time - in front of his wife. \n\nGreg was enjoying his explorations, feeling every wrinkle and every twitching response through the tip of his tongue. He glanced at Lisa, still not quite believing what was happening. She was practically salivating, and he saw her busy fingers inside her knickers. He resumed licking Marjory, who tasted like a girl who'd been masturbating most of the night and then gone for a run in some cum-stained knickers. She was dirty and beautiful, Greg thought. \n\nHe gave a little pointed jab with his tongue to slip it through her baffled little sphincter for a second (she squealed). Then he journeyed back to clamp his mouth over her drooling twat and bully her clit with his tongue for a bit - he had to swallow, she had been leaking so prolifically.\n\n'Christ, he's good at that,' thought Marjory as she struggled not to come. It had been such an intensely erotic new sensation when he'd been licking her arsehole, but this was pure skill born of significant experience. She felt like she was an orchestra and the tip of his tongue was the conductor's stick. She couldn't help but grind her pubis onto his chin, and try to fuck his tongue. Nor could she take her eyes off his big dick in front of her. She was desperate to suck it but felt like she needed permission. She looked at Lisa with her mouth open. \n\nLisa shook her head. Permission denied. \n\nAs if to lay claim to it, Lisa drew closer and bent at the waist, enclosing Greg's cock in her own mouth without touching him in any other way, her eyes on Marjory the whole time. She was face to face with Marjory and she moaned and sucked Greg's cock with overly dramatised delight. Greg moaned too, into Marjory's pussy, and raised his hips to try and fuck his wife's throat. \n\nAs Lisa bobbed and gagged she also reached forward and pinched Marjory's nipples, enjoying the firmness of her tits and the noise that Marjory made involuntarily.\n\nLisa sensed correctly that both Greg and Marjory were on the verge of coming ferociously. It was time to slow things down and change things around, she decided. She released Greg's cock - coated in drool - and coaxed Marjory off Greg's mouth despite some resistance from Marjory who had been moments from climax. \n\nLisa disappeared into the other room for a second and Marjory and Greg looked at each other - both were wild eyed with lust, and Greg's lips and chin shone with the sweet clear slime from where she'd ridden him. Lisa reappeared holding Marjory's little bullet vibe triumphantly (she'd found it earlier in the day, since firstly it wasn't very well hidden and secondly, she had a sixth sense for such things). \n\n\"Marjory, stay on your hands and knees please, there's a good girl.\" Lisa's tone worked on both of them. \n\nShe pulled Greg over by his cock to stand in front of Marjory and flicked the vibrator on, before holding it in place on Marjory's clit. Marjory blushed that Lisa had found her vibrator - although the woman was sharing her husband with her so it didn't seem a big deal just now. \n\nMarjory moaned at the familiar feeling of it buzzing on her clit before starting slightly as she next felt Lisa's gentle fingertips parting the lips of her highly sensitive cunt. \n\nThe girl was boiling and her pussy parted for her like a flower, but Lisa had plans - she was only dipping in to steal the girl's lube. She spilled and coaxed it with her fingertips down the cleft of Marjory's cunt and used its slickness to slip a fingertip into Marjory's startled arsehole. \n\n'Fuck, Lisa's got her finger in my arse,' Marjory told herself, enjoying how the gentle probing was working with the vibrations, and how Greg's cock bounced near her mouth. \n\n\"Spit on his cock,\" Lisa said. \"And before you look at me like a hungry little bird, no you may not suck it, you horny little slut. Just spit on it so it's nice and slippery.\" \n\nAs she said this she slid her finger in up to the second knuckle - Wow Marjory's arsehole was tight, she thought. Greg would have to take it slowly. \n\nGreg wished he had a better view of the back end of Marjory and what his wife was doing that was making Marjory's eyes roll as dance like that, but he didn't want to move his cock away from her face, particularly as she now carefully spat a string of saliva onto it and then smiled up at him. \n\nLisa spread it gently over the bulging head and along the shaft of Greg's solid dick.\n\n\"Good girl, now spit in my hand.\"\n\nMarjory felt the digit slip out of her, and Lisa's hand appeared by her mouth. She spat obediently, perceiving the scent of her own arse as she did so. \n\nGreg was astounded by the command his wife had over this young beauty, and he recalled her promise that she would make Marjory wear the knickers. She had delivered on that - having leaked his load into them she chased the girl through the park wearing them. His wife was a superb sexual puppeteer, and in that moment he was overcome with love for her, as she added a second probing finger into their au pair's surrendering butthole, massaging her own spit into her depths.\n\n\"You watched me take that big dick up my arse, now it's your turn,\" Lisa told a quaking Marjory, who was once again drooling onto Greg's cock. \n\nIt was less that she was trying to drool on it, and more that she couldn't close her mouth because of the feeling of Lisa stretching and massaging her interior whilst still buzzing her clit, and both hands were supporting her. Lisa's words were repeating themselves in her head over and over.",
        "To Greg, Lisa said, \"She's ever so tight you know, I dare say she's never been fucked up the arse before. Would you like to break her in?\"\n\nLisa's assessment was correct and Marjory was certainly concerned about how that huge thing was ever going to fit - not to mention how jealous her pussy was about the scenario. But if it felt as good as Lisa's fingers - 'Fuck, was that three now? She was sure she could hear them being forced into her forbidden tunnel' - then she was keen to give it a try. Besides, there was no disobeying Lisa now, in her role as ringmaster (literally). \n\nGreg was ecstatic - he couldn't wait to buttfuck this hot girl while his wife watched and helped. It was an incredibly erotic idea. \n\nLisa pulled her fingers free of Marjory's clutches and watched her little hole stay open above her angry cunt lips. She kissed Marjory's lower back and the globes of her arse, and then let a mouthful of saliva cascade between her cheeks. \n\nShe brought Greg round to stand behind Marjory, and leaned the girl back on her haunches so her arse spread for him. Then she kissed Greg deeply, tasting Marjory on him as she did so, and guiding his slippery spit-slicked penis between her cheeks. \n\nMarjory was shaking slightly with nervous anticipation. Lisa wanted her relaxed, so she switched ends, and cradling the girl's face (and putting her in charge of her own vibrator for a minute) she kissed her lovingly and lingeringly. Marjory opened her eyes suddenly and after a second let her guard down and kissed Lisa back. She'd never kissed a girl before - although they did feature in her fantasies - and it definitely felt different. Mind you, so did the seemingly giant dick that was now gently but firmly pressing itself against her arsehole, with the very certain intention of pushing through it and invading her back passage. \n\nShe was lost in sensation and gave a little whimper into Lisa's mouth, pushing her vibrator hard against her clit. \n\nGreg watched the two women kissing, and continued his insistent negotiations with Marjory's gatekeeper - this was her first time after all and he wanted to ease it into her and let her get used to the intensity of it, to feel her heartbeat through her opening ring. \n\nSo he was knocking most politely at her back door, despite his cock screaming at him to break it down and dive up into her. That is, he was trying hard to control himself enough to gently make love to her in this new way, and suppress the desire to ram her up the shitter (as his baser instincts would describe it). \n\nLisa was whispering to Marjory now, dropping the bossy tone in favour of an encouraging and sisterly one. \n\n\"Breathe deeply, and push out slightly - focus on opening up, but mainly relax.\"\n\nMarjory felt Lisa's face soft against her own -they were cheek to cheek. At some stage Lisa had deployed her large tits and Marjory looked at them whilst listening to the anal advice of the woman she knew to be an expert. She tried to relax and accommodate the invader - fuck, he was big - and all of a sudden she felt him succeed in pushing the head through her sphincter. Marjory made a little noise of surprise at the intrusion.\n\nGreg moaned with pleasure as he looked down at Marjory's arsehole stretched around the neck of his cock. She felt tight and hot and her ring was snug around his bell end like a collar - a turtle neck, he thought suddenly, as he pushed slightly and saw it slip along his shaft. \n\nMarjory was struggling with the intensity of Greg's dick going into her, up her, where he shouldn't have it, and the joy on Lisa's face was such a turn on. 'Her husband's pushing his prick up my arse and she looks over the moon about it,' she thought. \n\n\"Breathe,\" Lisa urged her, giving the girl's nipples a tweak. \"It's big and it's going all the way in.\" \n\nGreg and Lisa had never brought anyone into their bed before and only spoken about it as a fantasy while they were fucking. They both had good imaginations though and could construct elaborate fantasies as they came. Marjory was beyond any of their fantasies and the reality of having her in their bed did make them both nervous. This time it was real - this was a real woman, struggling to fit Greg's dick in her backside and making little noises in Lisa's ear. Greg looked into Lisa's eyes and considered that although it was Marjory he was sticking out of so obscenely, he was also fucking Lisa - he could see her pleasure as he drove his hips forward. Soon she would start talking the way only Lisa could, he knew. He just hoped he could last a while before her words and this girl's tight arse became too much for him. \n\nHe was right. As soon as Lisa could see from Marjory's face that discomfort had become pleasure, she abandoned her gentle encouragement in favour of her foul mouthed dominating persona. Greg slid a few more millimetres into Marjory, his hands on her hips guiding her back onto him. He was now about halfway and her tunnel gripped him like two slippery fists. \n\nMarjory thought she was going to cum every time it moved further into her. So unusual to feel something slide in that direction, she thought crudely. The vibrator on her clit was so slick by now it was becoming hard to hold. She looked up at Lisa- with her big tits and blonde hair and her hand on her hip she looked like such a cliche. This woman was going to watch her come soon, she knew. In that moment she wanted to pleasure Lisa too and make her scream. \n\nLisa slipped a finger into herself and began to address the pair in front of her. \n\n\"Look at you, squirming with my husband's cock in your dirty arse. Appalling behaviour!\"\n\nTo Greg she said, \"Ok, she can take it, fuck it like you own it. Make the slut come.\"\n\nThat caused Greg to push the rest of his cock into Marjory, until his hips pressed against her arse cheeks and his balls became wet from touching her cunt. He was through her doors and her rectum danced and spasmed around him. \n\nMarjory heard herself grunt like an animal when Greg pushed the whole thing in. Fuck, she'd never felt so full in her life. And now it was moving, so deep inside her! How fucking dirty and hot that felt. \n\n\"Your little arse is so packed full of fat dick. Do you like that?\"\n\nMarjory nodded and Lisa slipped her finger out of her own pussy and very quickly reached under Marjory and slid it into hers, right the way in, and crooked her finger tip into her g spot. Marjory squealed in delight and surprise. Now she's mine, Lisa thought as she felt her husband's cock move in Marjory's body as well. \n\nShe massaged Marjory inside and kissed her husband's muscled abdomen as he stoked the girl's gradually relaxing arse and he tried not to hear Lisa's monologue of filth. \n\n\"Fuck that little hole until it's soft and wet and sloppy like her cunt.\" (Lisa wiggled her finger quickly so Greg could hear how wet Marjory was.) \n\n\"You're such a horny slut - you're dripping from your pussy because my husband's driving a big fucking truck up your one way street.\"\n\nLisa pulled her finger out and pushed it into Marjory's open mouth so she could taste herself. But the sudden evacuation of her pussy combined with Greg's harder thrusts made Marjory's cunt sneeze violently - a hot gush of liquid hit the sheet in two bursts as Marjory yelped and came hard. \n\nIt took all three of them by surprise. Greg redoubled his efforts, determined to fuck more juice out of her, and thrilled by the sudden squeeze that her whole body had done as she gushed. \n\nMarjory herself had never known it to be that much although she did know her pussy would sometimes spit a bit if she came hard or suddenly. \n\nLisa was delighted and seized on it.\n\n\"You dirty girl, your cunt has soaked my sheets!\"\n\nLisa suddenly slapped Marjory hard on the arse, and the shock of it sent another dribble out from between her lips. A small red hand print was visible on Marjory's cheek. \n\nMarjory hadn't really stopped coming since that first squirt and Greg's dick was sliding quite freely in and out of her slippery chute now as though she took a big cock up her arse on a daily basis. She could hear that she was wailing and that Greg was grunting as he buggered her, while his thighs clapped wetly against her sweaty arse cheeks over and over. Her arsehole had given up it's proud resistance and made lewd noises around the pounding invasion. \n\nHer pussy hissed another stream of cum again as Marjory said, \"Unghh fuuuuck. Yes,\" followed by sounds that were pure lust.\n\nLisa was saying to Greg, \"You're making her cum - now fuck the shit out of her. Deeper!\"\n\nGreg growled a warning, way beyond speech.\n\nLisa replied urgently, \"Do it then, fill her up with cum. Send a load as deep as you can.\"\n\nGreg was watching the deep red that Marjory's back had turned as she continued to quake and climax, and he kept pistoning through her rubbery hole and riding her orgasm. He couldn't prevent his own any longer, and felt like a hose seconds before the flow reached the tip. Or a spray foam nozzle coaxed into a tight cavity - he would spray this girl's arse to overflowing he was certain, and his wife had a ringside seat! He roared as he began to erupt into pretty little Marjory's bowels. \n\n\"My husband is coming in your arse, slut, can you feel it pumping?\"\n\nMarjory could indeed, and was wondering what would happen to it - she remembered the cum running back out of Lisa the night before so explicitly. \n\nShe felt Greg's cock stop leaping in her bum, and soften slightly to slither out of her -and that much more familiar feeling made her blush especially as she sensed herself gaping under Greg's gaze. She was right, he was looking at her open hole and her dribbling pussy and the mess of the sheets below her. So was Lisa, who was now feeling extremely starved of attention. \n\n\"Kneel over here please. Yes, you with the buttload of jizz and the supersoaker pussy.\"\n\nLisa was indicating for Marjory to kneel on the floor in front of her. Marjory was wondering how to get there without dropping all the cum out of her hole, which had yet to close back up tightly. She knew that Lisa knew this was her predicament and that Greg was also watching - his cock was growing again! \n\nMarjory smiled and blushed as she rolled on her side, feeling and hearing as some bubbled out of her. \n\n\"Come here and lick my cunt, Marjory,\" Lisa barked urgently at her, and Marjory enjoyed hearing her name in such a rude demand, and wondered what licking pussy was going to be like. \n\nShe didn't have to wait long. As soon as she knelt on the floor subserviently in front of Lisa she parted her legs, lifting one onto the bed. Lisa was thrilled with excitement - her pretty little slave looked up at her with her dazzling green eyes, all flushed and sweaty from the extreme arse fucking her husband had just given her. Her auburn hair had fallen mostly out of her pony tail and her lips were open and ready. Lisa held her by the pony tail, and pulled her face towards her belly. She gave Greg a look that said 'watch me come in this girl's mouth' and she sighed loudly as Marjory kissed her stomach, trailing downwards. \n\nMarjory could see and smell how turned on Lisa was and she felt the grip on her hair tighten and Lisa's stomach fluttering as she approached the woman's swollen pussy with her kisses. She looked up at Lisa's big tits heaving above her, and the shock of blonde curls framing her face. Lisa's pubes were also near blonde and Marjory traveled through them and put out a tentative tongue. \n\nThe taste didn't surprise her, she had tasted her own juices on her fingers before so she knew what horny girl cum tasted like, but just how hot and wet Lisa was did startle her, and the silky suppleness of Lisa's lips against her own did too. \n\nAfter exploring with the tip of her tongue to orient herself (Lisa moaned) Marjory settled on Lisa's clit and enjoyed the feeling of power it gave her to control that much pleasure. \n\nIt turned out she was good at licking women, Marjory thought. And pretty good at taking it up the arse. Not to mention having a cunt that could write off bedding without warning! As she knelt on the hard floor and Lisa's juices coated her lips and chin, she heard the soft patter of spent cum dropping onto the Victorian floorboards below her, falling through her depths now that she was upright. 'I'm licking pussy while my arse leaks cum on the floor,' she told herself. Her new job had taken an interesting turn.\n\n\"Ah, fuck, yes. Lick me. Greg, bring that over here,\" Lisa said, pulling Marjory's mouth against herself and indicating Greg's dick with her eyes. \n\nHe stepped alongside, and Lisa had him stand on the bed so that his cock was by her face. There was no mistaking where it had been, Lisa perceived as it swelled in front of her. She teased Greg by opening her mouth and approaching it, but really she was teasing herself too. Was she going to suck that dirty cock? \n\nMarjory was looking up and also wondering. She held onto Lisa's arse with her hands, to stabilise herself and to pull her cunt harder against her flicking tongue. \n\nGreg was watching his wife's eyes carefully, and knew she was on the edge. He put his fingers through her curly blonde hair and held her head in a strong grip. His eyes never left hers as he pushed his now rock hard cock into her open mouth. \n\nLisa moaned and began to come, tipped over the edge by the thought (and the musky reality) of sucking Greg's arse-flavoured dick while their au pair knelt between her legs. \n\nShe sucked Greg's cock enthusiastically as she came, moaning. He didn't need much stimulation now, and his wife's filthy ecstasy at tasting Marjory's arse on him was enough to set him off as well. So Lisa felt him spurt a hot thick load into the back of her throat and her legs shook as the waves of her orgasm were slowing. \n\nShe pulled Marjory's mouth from her pussy - she looked beautiful drenched with her cum, Lisa thought, and she leaned over quite swiftly and kissed Marjory deeply, spilling Greg's cum into her mouth as she did so and sharing it in the kiss. \n\nMarjory kissed Lisa back, tasting Greg's cum and swirling it with her tongue and reeling with all of the sexual adventure they had crammed into the last hour. She kissed Greg too, realising that was the first time and enjoying that she was bringing him the taste of his wife's cum and his own. He kissed the young girl back, surprised by her passion, and he held Lisa round the waist as he did so.\n\nAll three gently returned to earth, or that was the feeling, and despite the unspeakable filthiness of the past hour, they felt intimate and gentle as a threesome now. \n\nLisa was sure to reassert her ownership of Marjory though, and tugged the girl's nipples for a second as she said,\n\n\"Now you may wash, Marjory.\"\n\nIn fact they has all better get cleaned up and restore some normality and decorum in time to fetch their little spider from the party. \n\nMarjory stood in the hot jet from the shower and the last globs of Greg's cum slid down the back of her thigh. Her poor neglected pussy, she thought. She needed to feel Greg in there. Maybe next time, she thought, wondering when that would be."
    ],
    "authorname": "JoeStirling",
    "tags": [
        "sharing",
        "domination",
        "group",
        "dirty talk",
        "anal",
        "anal sex",
        "group sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-o-pair-pt-02"
}