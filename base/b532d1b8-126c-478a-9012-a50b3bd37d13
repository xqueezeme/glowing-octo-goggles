{
    "title": "Always and Never Ch. 02",
    "pages": [
        "Author's Note: So here it is, nearly six months later. They've been six hellish months, let me tell you. I honestly couldn't write an ending for this story when my own felt so unfinished. And my ending is still nebulous, but at least in the fiction world I can create the resolution I desperately crave in my own life. So I hope you enjoy the end to Rachel's story. It took me a long time to get here, but I thank everyone for sticking it out. \n\nHappy Reading, \n\nSienna H.\n\n********\n\nHis breath came in heavy pants; the heated snorts of desire tickling her skin, threatening to scorch. Her back arched in pleasure even as her heart told her to resist. His thrusts became deeper as he lifted her leg over his shoulder, his teeth nipping the soft skin. \n\n\"Tell me what I want to hear\" he rasped as he slowly rocked his cock deeper into her wetness. \n\nRachel moaned, her fingers clawing the sheets underneath her sweat slicked body. This wasn't supposed to be happening. She was supposed to be stronger than this. She was supposed to stay away from him. But one phone call had sent her running to Room 8 of the Sunshine Motel once more. \n\nTwo hours later she'd stop counting the number of times she'd come, lost track of the many ways his tongue and cock brought her to massive heights of pleasure. Her body practically vibrated each time he made contact, each time his fingers ran sensuous trails down her nearly spent limbs. \n\nFuck, she couldn't give this up. So maybe she would tell him what he wanted to hear, that she wanted only him, that she would always be his. Because the more she said it, the more she was inclined to believe. \n\nHis hands clenched tightly on her upper arms as he started to pick up speed. Rachel wrapped her long legs around his waist, her heels digging into his cheeks as he pumped harder. It bordered on perverse pleasure and slight pain. She wondered when he would let up. She loved tender Brendan. Lately he had been anything but. Their recent sessions had been long and rough. He wore her out, twisting her body, making the sweat drip tiny rivulets. He would barely let her come down from an orgasm before he was flipping her over, spreading her legs wider. \n\nShe longed for the days when he would take her into his arms, cradling her to him as he slid slowly inside her, his lips caressing hers gently, his hands tangled in her curls. Those were her favorite; the times she thought he was truly hers. When she didn't feel like his designer whore. \n\n\"Brendan, slow down baby\" she cooed between gasps. \"Take it slow. Please.\"\n\nHe continued as if he didn't hear her, his cock ramming harder into her pussy. Rachel hissed, her hands clenching his upper arms as slight shocks of pain rippled through her system. \"Brendan please.\"\n\nBrendan looked down, his eyes that nebulous pond color. She remembered when those eyes smiled warmly at her as he lifted her from the bed, carrying her into the bathroom with the sunken tub, where he would fill it with steaming hot water and wash her before climbing in to ravish her once more. Those were the times he looked and acted like a man in love and for a few hours she could pretend that she was Mrs. Brendan Doyle. \n\nBut this, this was different. He wasn't his usual dominant self. No, he was bordering on cruel. \n\nRachel clenched her pelvic muscles, squeezing his cock tighter inside her. Brendan groaned loudly. \"Oh gorgeous. Fuck, I think I'm going to...\" He shuddered and she felt the hot liquid shoot inside her. His face went slack, melting with absolute pleasure before he fell onto the bed beside her. \n\nRachel couldn't bring herself to look at him, unsure of what just happened. It was the first time, in their whole relationship that she hadn't come when he did. She squeezed her legs together and tried not to think about soreness that was sure to come later on. \n\nShe felt the bed dip and she felt him get up and start to dress. She couldn't believe it. He wasn't even going to stay and rest for a little. She wanted to talk with him. Things were so different from before. Rachel couldn't pinpoint what it was exactly, but slowly she could feel him pulling away from her. \n\nAs he slid on his jeans, she couldn't help but feel irritated; at him, but mostly at herself. She couldn't keep doing this anymore. This has to stop, she thought. \n\n\"This again?\" she heard him say with a sigh. \n\nRachel looked up. He was staring down at her, his v-neck shirt in hand. She realized she must have spoken aloud. \"What do you mean this again?\"\n\n\"This pointless rant you do about leaving. I don't know why we always have to get into this.\"\n\n\"Oh, I don't know\" she sniped. \"Maybe I just realize when I'm not wanted and figure I'd cut out while I can. Isn't that what all good whores do?\"\n\nHis full lips pulled into a half-smirk. \"You said it, gorgeous. Not me.\"\n\nRachel scoffed. \"God, Brendan. I can't keep playing these games anymore. I keep telling myself it's the last time; that I won't give in to you. But I can't stop. And you know that.\"\n\n\"Oh, I count on it\" he said smoothly. His shirt was on now and he shrugged into his black blazer. \n\n\"Look Rachel, if you really wanted to leave you would. Plain and simple. But you don't. You like what we do, love the way I make you mine. You're a sucker for pain babycakes. The requisite victim in your own Shakespearean tragedy. And that's why you'll never leave.\"\n\nRachel felt the hot tears welling in her eyes, but she refused to cry. \"Why do you do this? You could be so good to me. Why do you have to hurt me like this?\" The questions sounding pointless even in her head; but she couldn't stop them from spewing forth. \n\nHis green eyes blazed with the familiar emerald fire as he stepped towards her. \"Because you need me to play the role of the villain. So I'll play my part, baby. And I'll have fun doing it. You know how it was the moment we started this thing. I haven't changed, and neither have the rules. You can either play along and give yourself to me, or just get out. We're not in a relationship. You aren't my wife.\"\n\nRachel stared up at him, his harsh words sinking in, shredding what was left of her heart. So this is what it took; he had to break her down fully. Somehow she would recognize that it's all part of the game. She was blinded, her vision clouded with fruitless ambition and dumb hope that she could tame him, that she was up to the challenge of making a man like Brendan Doyle love her. That was clearly wishful thinking. He would never change. \n\nSlowly, she got up from the bed. Methodically, she dressed, barely registering her fingers buttoning her shirt, sliding on her jeans. She could feel his eyes as they followed her but she refused to meet his gaze. As she picked up her purse, she finally turned to him. There was so much she could have said in that moment; how much he hurt her, what an asshole he was, how she deserved better. But it was pointless; her words would fall on deaf ears. \n\nShe couldn't bring herself to speak. With one last look, she turned and opened the door. With one light slam, she closed off Room 8 of the Sunshine Motel. \n\n********\n\nRachel woke to the sound of thunder clapping loudly. Her eyes flew open, blurring for a bit in the graying light of the dim room. The red numbers on the digital clock next to the bed gave off a menacing glare, reminding her it was still early; 7:30. A loud sigh filled the quietness of the room; she could never sleep late after a night of drinking.\n\nHeavy lids lifted drowsily, revealing reddened hazel eyes. She stared out the window, glimpsing the dun colored Sunday sky as large raindrops started to fall. Close your eyes and try to get back to sleep was the only sentence her alcohol-soaked brain could form without the frivolity of meaningless thought process. \n\nA surge of white anger shot hotly through her veins, making the room feel even more stifling and she turned from the window, the slender curve of her back left bare in the slight heat of the room when her long brown legs twisted the sheets in her irritation. It was too early to be so emotional, she thought as her body fitfully tried to return to its previous state of uncomfortable slumber. \n\nIt was no use. Every time she closed her eyes, she saw his face. And when she did dream, the mistakes from the past five months were in continuous loop, playing non-stop in her head. She wished like hell for a chance to do it all over. But it was pointless; wishing did nothing but make her miserable. \n\nShe longed for sleep, the only place it seemed where she could make things right. In her dreams, things were perfect. Brendan was loving, attentive, and caring. The perfect boyfriend. And completely hers. \n\nBut shit, that's all it was. A damn dream. \n\nSitting up groggily, she staggered to the window before pulling it up, not caring if her nude body was exposed to the neighborhood. The sound of the rain was louder now and tiny droplets landed on the windowsill. The room became cooler and she breathed a sigh of temporary relief. \n\nThe bed groaned as her weight returned to it, her back lying against the cool white sheets. Maybe she could sleep now. She needed to. No, what she needed was courage, and a double fucking dose of it. \n\nDrinking at a time like this. It was stupid, yes. But it seemed like the only way to dull the throbbing ache of regret that pulsed in her veins and beat loudly against her temple. Being this unhappy was uncomfortable and draining. She needed release. \n\nShe needed him. \n\nHe was the only one who could make things right, make her right. Make her whole. Hah, clearly. \n\nShe was pathetic, pining over him. It made her sick, the constant worrying and wondering what he was up to, why he hadn't called for almost three days. He was angry with her, she thought. Angry because she hadn't spoken to him that night after the Sunshine Motel incident. It was a rare moment of bravery. She needed time to herself, to sort things out so she ignored his texts, his phone calls. It made her feel empowered, strong. \n\nFinally, the upper hand was hers. It wasn't until the second day of no contact that she realized she was right back where she started\u2014on the losing end. Foolish, she was to think she could have beaten him at his own game. It was always his way. Always. \n\nAnd so she drank, because she was depressed and it was the only way to cope with the surge of helplessness consuming her thoughts, making her head swim. Something had to give. She needed to make sense of things. This situation was beginning to take its toll on her. Rachel didn't know how much longer she could go on like this. \n\nHer love for Brendan was like a disease, spreading quickly, poisoning her heart. Slowly but surely, it was killing her. \n\nIn her drunken state, she couldn't help but think of his touch; she was only human, after all. She craved that feeling of closeness. She dared her mind to think back to better times, the feel of his thick cock pushing inside her. A small shiver weaved a jagged path down her spine, making her whole body shudder. She could still hear his voice, the low timbre making her melt. His tone was forceful, the rolling sounds of his Boston accent sending deliciously sinful pulses to the most secret part of her body.  \n\nHer hand traced the ghost path his tongue would make, tickling the soft nape of her neck, teasing the generous swell of her breasts before reaching the sensitive nipples, dark capped and begging to be sucked. \n\nHer fingers were his, sliding down her generous curves, tracing the tight cinch where hips met waistline before dipping down to stroke the silken folds of her pussy. She was aroused, the wetness coating her fingertips. When she slid two fingers inside, she sighed. It wasn't him, but it felt good enough. \n\n\"That's right\" she could almost hear him say. \"Touch yourself for me, Gorgeous.\"\n\nHer back arched as she gently bucked her hips. Her fingers were sliding with ease. She tried to focus on her fantasy, trying to picture his eyes, the way his voice rose and fell, the unabashed desire in his words when he said...\n\n\"You like touching yourself.\"\n\n\"Yes,\" she answered aloud. \n\n\"Mmm,\" she could hear him moan. His voice was ringing in her ears. \"You look so pretty right now, baby. Don't you wish that was my cock inside you?\"\n\nShe moaned, her free hand reaching up to pinch her nipple. She twisted the bud tightly, relishing in the pleasure/pain sensation. Her body trembled with her rough actions. This is how she liked it, how he wanted it. The only way it could be. \n\n\"Tell me Rachel,\" the ghost voice whispered. \n\n\"Yes,\" she gasped out. \"I want you so bad, Brendan.\" Her thumb grazed her clit and she bit her lip in pleasure. \"I want you to fuck me.\"\n\n\"Slip another finger inside, baby. Open up that tight little hole for me.\"\n\nRachel complied, sliding a third finger inside, feeling her pussy clench around them. \"Oooh,\" she moaned. \"Oh Brendan.\"\n\n\"You want to come for me, baby?\"\n\n\"Yes,\" she said breathlessly.\n\n\"What does my little girl want?\"\n\nShe was fucking herself harder now, twisting her nipples tighter, her fingers plunging deeper. She was close, so fucking close. She could feel his breath in her ear and it made her shiver. \"Make me come, Brendan. I need it so bad.\"\n\n\"Come for me, Work that sweet pussy like I know you know how.\"\n\n\"Ahh,\" she cried. Her muscles tensed as her orgasm hit. She whimpered loudly, her toes arched in pleasure. She felt it all over, the whole body spasm making her a bit disoriented. As she slowly tried to come down, she heard his voice chuckle. \n\n\"That's my good girl. My gorgeous girl.\"\n\nShe gulped air, finding it suddenly hard to breathe. Her fingers slid out of her warmth, the sticky wetness growing cool in the exposed air. She was still shaking, a shudder running through her body that had nothing to do with post-orgasmic euphoria. \n\nThe emotions were overwhelming: shame, pleasure, anger, love. It was sensory overload. The tears began to fall. She was shaking harder now as she covered her face with her hands. She could still smell her essence on her fingers as she rolled onto her side, her legs curled close to her chest in a fetal position. \n\nShe was losing her grip.\n\n********\n\n\"Rachel? Rachel? Hey! Get up!\"\n\nA low groan rumbled from her lips. She was dreaming. She had to be. She could have sworn she heard Lucia's voice, although why she'd be dreaming about her best friend, she'd never know. \n\nNow it didn't feel like a dream. Someone was actually poking her. Angrily, she swiped at the hand and rolled over. She heard Lucia chuckle. \n\n\"Get up, you lazy bitch.\"\n\nGroggily, Rachel opened a hazel eye. She saw Lucia glaring down at her, hands on her wide hips. She was clad in bright pink sweatpants with a matching zip-up hoodie. Her heavy dark brown hair was slicked back into a high ponytail. She was way too brightly dressed for a Sunday. And what fucking time was it? \n\n\"What time is it?\" Rachel croaked. \n\nLucia huffed. \"Nearly one-thirty.\"\n\nRachel groaned. \"Shit, Luce. I'm sorry.\" It was their usual routine; every Sunday they'd go for brunch at Mae's, a local diner that was famous for its strawberry pancakes. Just thinking about the fluffy golden hotcakes was enough to rouse her from the bed. Wrapping the sheet around her nakedness, she yawned. Sleeping late had never been her forte. She was an early riser, never going past nine o'clock. And on a Sunday, too. \n\nHer Mama would be ashamed, especially since she drank heavy the night before and didn't even go to church the next day. \"Imma take back that damn key I gave you.\" Her head was throbbing, and it felt like there was a metal band playing a kickass solo behind her eyes. \n\nLucia raised a surprised eyebrow. \"Mama, what happened last night? I come in and there's a bottle of Stoli on the table. You haven't drank vodka since sophomore year.\"\n\nRachel groaned again. The Vodka debacle of sophomore year. How could she forget? It was days before her 20th birthday when she, Lucia, and a group of her girlfriends decided to have a night out on the town. Before leaving the girls surprised Rachel with a bottle of Absolut as a birthday gift. They pre-gamed in the dorm room Rachel shared with Lucia, giggling over \"breaking the alcohol rules\" as their hall was a dry dorm. They drank shot after shot, toasting Rachel until she could barely stand up. \n\nAfter the bottle was empty they walked to the club, tottering on spiked black heels. At the bar, male admirers kept plying them with alcohol and Rachel, not to seem like a baby, accepted. It was then she realized that she really was the only one who was wasted. But she was having too much fun to care, until she was dancing with a random guy who decided it would be cool to twirl her around. It was all downhill from there. Literally. She fell, puked all over her new Betsey Johnson dress and had to be carried out of the club by the bouncers. \n\nThe next morning, she woke up still reeking of stale vodka and vomit. She questioned a suspiciously guilty-faced Lucia who confessed that she, along with the other girls had been pouring water into their glasses, after the first round of shots. Rachel had essentially downed an entire bottle of vodka singlehandedly. \n\nIt was then she swore never to touch the stuff. Last night, she broke that promise. Vodka was the only thing guaranteed to fuck her up beyond belief. And that was exactly what she wanted, to be numb to everything. \n\n\"Rachel? Are you even listening to me?\"\n\nHer eyes once again focused on Lucia. Truthfully, she'd forgotten she was even there. \"Check\" she said while nodding. \"Stoli on the table. Liquor bad.\"\n\n\"Why were you drinking?\"\n\n\"Wanted to see if I could stomach the vodka after all these years.\"\n\nLucia sniffed. \"Damn. You smell like a hobo. Why don't you take a quick shower and then we'll head to Mae's? After some food in your belly, you can explain why you're acting like a goddamn fool.\"\n\n********\n\nTwenty minutes later, they were at Mae's, sitting in their usual corner booth. Rachel took a minute sip from the cup of black coffee nestled in her hands. She didn't even realize they were shaking slightly until Lucia chimed in. \n\n\"Okay, seriously what is wrong? You're off.\"She paused. \"It's him, isn't it?\"\n\nRachel looked up in surprise. Lucia never mentioned Brendan. Ever. She knew they were together, knew the particulars, but never really wanted to talk about it. And now here she was, bringing to light everything Rachel wanted to keep private. But there was a small part of her that yearned not to carry the burden of hopelessness and regret all alone. \"Luce, I...\"\n\n\"You know, you can act like a tough-as-nails broad all you want but don't forget I know you.\"\n\nRachel stared, hoping the look on her face was more withering than pathetic. \"What are you talking about?\"\n\nLucia waved her hand, shooing away her words. \n\n\"You know exactly what I'm talking about. Don't play dumb. It doesn't become you. The vodka, the distant stares...this shit is all because of him. Now I've held my tongue because despite me being your best friend and going through more shit in the past nine-almost-ten years I didn't say anything as you monumentally fucked up your life for the past five months. It's not enough that you are knowingly messing around with a married man, but even worse, you're involved with someone who doesn't give a shit about you. I'm not trying to be a bitch. I'm just trying to be real. This shit...give it the fuck up, Rach. Leave now with at least some of your dignity.\"\n\nThis was too heavy, especially on an empty stomach. There was a pregnant pause as the waitress brought their food. Rachel sat in silence, staring at the stack of golden strawberry pancakes with the butter melting just the way she liked. Her stomach suddenly felt bloated and sour. The food was making her sick. She took a deep breath as she felt the hot tears slide down her cheeks. Crying. It was all she seemed to be doing these past days. ",
        "Lucia was right; she was a goddamned wreck. Drinking alone in her house, and now she was crying into her strawberry pancakes. Things were far from right. She sniffed loudly, trying to wipe away her tears. \n\n\"Oh god Rach,\" Lucia exclaimed. She reached across the table for her hand. \"I'm sorry. I was too harsh. I shouldn't have thrown all this at you.\"\n\n\"No, it's not your fault\" she said. \"It's not like I don't know it's true.\" \n\n\"Still doesn't make it right.\"\n\n\"We all know you can't hold your tongue for shit,\" Rachel smirked, wiping the fresh tears. \n\nLucia smiled. \"This is true.\"\n\n\"Thanks Luce.\"\n\n\"For what?\"\n\n\"For slapping me with reality. I think it's time to cut the ties.\"\n\n\"What are you going to do?\"\n\nRachel sighed. The million dollar question. \"Close my eyes and wish it all away?\"\n\n\"Sorry, Mama\" Lucia said, shaking her head. \"You don't get away that easily.\"\n\n\"I know,\" she groaned. \"I made my bed and now I have to lie in it. But I don't know if I can.\"\n\n\"What, give him up? Why not?\"\n\nShe couldn't explain it, her reasons for sticking around. To an outside person, it wouldn't make sense, staying in a relationship that wasn't really much of a relationship at all. To Rachel, it was better than the alternative, facing the encompassing loneliness that surrounded her almost daily. To say it aloud would force her to admit defeat, to acknowledge she made a terrible mistake, and that she never could handle the challenge of making Brendan love her. \"It's...it's complicated.\"\n\nLucia shook her head. \"No, it's not. It only seems that way because you already know the answer. You already know what you have to do Rach.\" She sighed. \"I just wish you could see how much more you deserve than Brendan Doyle.\"\n\nRachel sighed, running an errant hand through her ebony locks before swooping the dark mass into a high ponytail, securing it with the black band on her wrist. \"I know, Luce. I can't make him love me. And I can't make him leave his wife. I just wish this shit wouldn't hurt. I ache. My heart literally hurts with every beat.\"\n\n\"I know honey,\" she replied. \"Now just imagine how it would hurt even more to stay in this mess. Trust me, you don't need him.\" She shook out her shoulders. \"Enough of all this. Let's not let it spoil our brunch. Eat up.\"\n\n********\n\nFriday morning Rachel awoke with a new heartbeat. It pulsed excitedly, as if her whole body could sense the immense change on the horizon. She was determined to stay positive, to not let her wanting take over and make her miserable. It took four days of moping and sporadic sobbing before she dried her tears and rose to the challenge. She was stronger than this situation, she kept saying to herself. The funny thing was, the more she said it, the more she believed it. The simple words gave her a renewed strength. Rachel supposed a big part of her confidence was that she hadn't heard from Brendan for an entire week.. That wasn't unusual. Most of his time during the weekend was spent playing the dutiful husband, going to various functions and playing sports with the husbands of his wife's friends. \n\nShe recalled how he would make fun of them, with their ridiculous sense of entitlement and blue blood snobbery. He didn't consider himself one of them because unlike Warner Huffington or Cash Haverfield, his inheritance was well earned, a product of hard work and savvy business and leadership skills. Though his father's empire was gingerly placed in his hands, it was those very hands that made it into the powerful conglomerate it was today. \n\nIt was one of the many reasons why she loved and admired him. He was smart, possessing both book knowledge and street smarts to navigate the shark-infested waters that was the business world. His intelligence was sexy, but it was also irritating at times; the way he always thought he was right about everything made her want to scream in frustration. Plus he could be stubborn as hell, refusing to budge even the slightest inch. \n\nRachel shrugged off thoughts of Brendan. Today was a fresh start; it was a brand new day. Her black peep toe Louboutin heels clicked sharply as she crossed into her kitchen. Reaching into a cupboard, she pulled out her favorite cobalt coffee mug. She was about to pour the fragrant drink when her cell phone chirped loudly. Rachel placed the pot back on the burner and reached into her purse on the counter for the phone. \n\n\"Hey Luce,\" she said, cradling the phone between her cheek and shoulder blade. \"I know I'm running a little late babe but I've got good reason to. Just go ahead and do the AgriCorp consultation without me...\"\n\n\"Are you trying to play hooky, gorgeous?\"\n\nA cold chill of realization doused the fire of hope in her heart. Of course it would be him. Just her fucking luck. Her mind raced for the perfect comeback, something biting sharp that would show him just how much she really didn't need him. \"Um...hey.\" Smooth, Tunney. Real smooth. \n\nBrendan chuckled, a low rumbling sound that made her knees dip slightly and she wished like hell for the strength to resist him. \"Are you planning on making some time for me? Or are you just going to dodge me?\"\n\nRachel felt her mouth go dry, the words lodged in her throat, a large lump of regret. It wasn't that she couldn't say no to him. It almost felt physically impossible. Fuck, why was she always so feeble when it came to him? \"Uh...\"\n\n\"You know, I was pretty upset with you when you ignored me the other night.\"\n\n\"I know, but...\"\n\n\"Very childish, gorgeous. You could have just said no.\"\n\nHe made it sound so easy, as if telling him no was the equivalent of asking a stranger for the time. \"Could I really?\"\n\n\"Yes. I know I was harsh, but what I said was the truth. You aren't my wife and I'm not looking for a new one. But I still want you. You know what I want and how I want it, Rachel. If you aren't mature enough to handle my wants and needs, then let me know. If you can't say what you want like a grown woman, then I can just stop wasting my time with you.\"\n\nIt was as if he said the magic words. \"I have to get to work.\" She pressed END, cutting off the call. Her fingers gripped the black granite countertop, trying to steady her trembling body. She let out a long shaky sigh, realizing she'd been holding her breath for a while. A small smile spread on her lips. That felt good. It felt damn good. \n\n********\n\n\"You did what?\" Lucia's dark brown eyes widened in surprise. She was sitting across from Rachel in one of their conference rooms. \n\nRachel grinned slightly. \"I know it was childish but it was the only thing I could think of.\"\n\nLucia's loud laughter bounced off the walls. \"Rach, you are fucking insane. I can't believe you hung up the phone on him.\"\n\n\"I just couldn't take it anymore. He was just talking and saying the dumbest shit. My first reaction was to hang up. And then afterwards I almost started panicking because I thought I made a mistake.\" Her fingers ran a jagged path through her hair. Her heart was still pounding erratically. Stupidly, she wondered about what he was thinking. She shouldn't care...but it was still there. \n\n\"You aren't regretting it, are you?\" Lucia's question brought her out of her thoughts. \n\n\"Kind of. It's such a small action, hanging up the phone. But I swear it was like the equivalent of slapping him.\"\n\n\"Hey, I'm all about you slapping him too.\"\n\nRachel smiled. It was a long time since a smile. It felt good. \"Small steps, Luce.\"\n\n\"I'm just saying. Anyway now that you're a free agent and all...you have more time to hang out with your best friend.\"\n\nShe groaned. \"Was I really that bad, Luce?\"\n\nLucia shrugged. \"Let's just say if it wasn't for work I would hardly recognize you.\"\n\n\"Okay now I feel bad.\"\n\n\"Don't. We've all done it before, gotten swept away by the penis.\"\n\n\"Yeah, well I just wish it was for a penis that deserved it.\"\n\n\"No worries, Rach. I've got faith you'll find what you're looking for.\"\n\n\"I hope so. I really do.\"\n\n********\n\nShe hated being alone. When she was younger and in college, she longed for the years when she would come home and find her place in complete silence. It was understandable to feel that way after years of living at home with her parents, to life in the dorms, to off campus apartments with friends. There was always someone around, no sense of privacy whatsoever. \n\nNow she craved at least some of that noise, the comfort of knowing someone else was there. Coming back to an empty house was a sinking, lonely feeling. She placed her bag on her kitchen counter and stared at her surroundings. The kitchen was modern and neat, painted in muted hues of pumpkin and spice. Everything was as it should be, and yet nothing was the way she wanted. \n\nThis was bigger than Brendan. It was something that had been brewing long before. He was just the catalyst. It was unexplainable, the way loneliness can creep up almost as quietly as a disease, spreading like wildfire. It was all-consuming and the false comfort of a selfish lover can seem like a cure-all, but in reality it just feeds the sickness. \n\nRachel needed to get out, to escape her problems for a little while. As if on cue, her phone chirped loudly. Stepping out of her heels, she fished through her purse. \"Hey Luce, I just got home.\"\n\n\"What are you doing tonight?\"\n\n\"I don't know. Figured I might take a bubble bath. Order some takeout, maybe watch a movie.\" \n\nShe smiled when she heard Lucia snort through the phone. \n\n\"You're a wild one, Mama. You should come over. We're having a little dinner party.\"\n\n\"Lucia, I don't know if I'm up for a big party...\"\n\n\"Oh Jesus, Rachel it's not like we're having a block party. It's just me, Aaron, and the kids, and some of Aaron's friends from the shop. That's all. You just need to get out the damn house. The more you sit at home, the worse it'll be.\"\n\nShe was right; being alone with her thoughts right now wasn't the best thing. She needed the comfortingly numb effect of people and mindless conversation. Rachel sighed. \"Alright, alright. Give me some time to get ready.\"\n\nAn hour later Rachel was walking up the cobblestone pathway that led to Lucia's house. She belted her black Burberry walking coat around her; she should have worn a warmer coat. It was getting much colder. As she got up to the house, the door opened and Lucia peeked her head out. \n\n\"Finally! I thought you weren't going to show up.\"\n\n\"Well clearly I'm here.\"\n\n\"Whatever girl, come on in. Everybody else is already inside.\"\n\nRachel stepped in, shrugging off her coat and placing it gingerly on the coat rack near the door. Lucia let out a low whistle. \"Wow. This is the most dressed down I've seen you in almost three years.\" She pointed to Rachel's outfit. \n\n\"I didn't feel like getting all dressed up.\" The truth was, she didn't feel like there was a need to get dolled up, not anymore. She was wearing a pair of light blue jeans she had since college. They were soft, practically worn in the seat and had artful holes in the knees from a night she got creative in undergrad. She paired it with a red short sleeved t-shirt and a white long-sleeved thermal underneath. She was wearing the barest of makeup, her unblemished face left smooth by no foundation; no eyeliner, with just a hint of nude gloss. She felt years younger. \n\nLucia snickered. \"You didn't feel like getting dressed up? Lord, now I know something's wrong. At least you left your hair down. Your one beauty.\"\n\nRachel smiled, shoving her playfully. \"Shut up. You sound like my mother.\"\n\n\"Well come on. Everyone's in the back. Aaron's already fired up the grill.\"\n\n\"Grill? Luce, it's freaking December.\"\n\n\"Please don't make me try and understand the goofball I married. I think he's trying to show off for those fools he works with.\"\n\nThey walked through the modest living room into the large kitchen in the back. Rachel could hear the raucous that was pure male camaraderie. \"Luce where are the girls?\"\n\n\"Oh, I gave them dinner and put them to bed. Think I'd let these fools around my babies? The last time they taught Annalise some dirty song which she sang for show and tell. That was an interesting parent-teacher conference.\" \n\nRachel chuckled. This was what she needed, mindless time. Although she wasn't particularly keen on spending it with a bunch of rambunctious man-boys. Lucia's husband Aaron was co-owner of The Ink Blot, one of the city's hippest tattoo parlors. They had a constant stream of clients, both celebrity and civilian. There was even talk about a reality show in the works. \n\nThe guys were in the kitchen, cracking jokes while Aaron seasoned a large tray of ground beef. He smiled when the two of the entered. \"Alright guys, behave now. There are womenfolk among us.\" \n\n\"Listen to Torres,\" a guy with curly brown haired said. \"He's so whipped.\"\n\n\"At least he has a girl, Metzger. When was the last time you've seen a naked woman?\" the dark skinned guy shot back, a half smile on his full lips. \n\n\"Last night, when your mom came over,\" the guy named Metzger returned. \n\nA whole chorus of \"Ohhh\" rang out. \n\nLucia shook her head. \"Welcome to my life. It's like being stuck in junior high.\"\n\nAaron smiled. \"Aww, baby it's not that bad.\" He washed his hands before embracing Rachel. \"Rach, let me introduce you to the boys. That loudmouth over there is our resident Jew, Dino Metzger, there's Markus Foster, and the quiet one on his cell phone is Cullen Donnelly. Boys, this is Luce's best friend Rachel Tunney. Be nice, you assholes.\"\n\n\"I will,\" Dino said. \"Where the hell have you been hiding this one, Luce? She's hot as balls.\"\n\n\"You trying to say I have ugly friends, Metz?\"\n\nDino shook his head, his hazel eyes sharp. \"Not at all. I'm just saying, we've never seen this one before.\"\n\n\"Well, she's always busy. You know, doing actual work.\"\n\n\"Um, can you two stop talking about me like I'm not here?\" Rachel could feel all their eyes on her, taking in her appearance and she couldn't help but feel like a piece of art on display. \n\n\"Alright children, stop ogling her as if she were the last rib at a fat man's barbecue. Aaron, get to work on this food so we can eat at a decent hour. Markus, set the table and Dino you get the drinks. Cullen get off that damn phone and find something to do.\" Lucia shot them all a look that clearly meant business. \n\nGrumbling, they set to work. Lucia looked around the kitchen. \"Where's Jared?\"\n\nAaron thumbed in the direction of the patio. \n\n\"What else? Killing his lungs.\"\n\n\"Do you need any help doing anything, Luce?\" \n\nRachel wasn't the best of cooks, but she was willing to keep her mind busy. \n\nLucia shook her head. \"No, Mama. Beer's in the cooler on the patio. Go and relax. Me and these knuckleheads will whip up dinner in no time.\"\n\nLucia practically shoved her onto the porch, and she wished she would have grabbed her coat before heading out. The night air was brisk and she shivered slightly against the chill. She pulled her long sleeves over her hands before reaching into the cooler and pulling out a beer. Twisting the cap off, she drank slowly, savoring the icy taste. A loud burp escaped and she chuckled softly. \"Nice one, Tunney\" she said to herself. \n\n\"I would have given it a ten,\" a voice said from the darkness. \n\n\"Holy shit!\" Rachel exclaimed, nearly dropping the bottle. Flicking on the outdoor light she spotted a man sitting on the railing of the patio, a cigarette dangling from his lips. \"Jesus you scared the shit outta me.\"\n\n\"Sorry,\" he said sheepishly. \"I thought you knew I was out here. I'm Jared. Jared Kuroki.\" He held out his hand. \n\nStepping closer, Rachel took a good look at him, as much as the dim light would show. His onyx hair was spiked in a fauxhawk that was more hard rock than the meterosexual David Beckham look. Taking a silver lighter from his pocket, he lit his cigarette with one hand, illuminating for the briefest of moments the warmest pair of brown eyes she'd ever seen. \n\nHe stared at her, his almond-shaped gaze held a hint of amusement. \"You gonna take my hand or what?\" \n\nRachel looked down and noticed that his hand was still extended in greeting. \"Oh sorry,\" she said, taking his in hers. \"My name's Rachel.\" She was expecting his palm to be rough, but it was surprisingly warm and somewhat soft, not at all callused as she thought. His grip was strong and firm, his muscles flexing lightly as his large hand practically swallowed hers. He had artists' hands with big, strong, nimble fingers, and a firm grip. \n\nHe smiled. \"Oh yeah, you're Lucia's friend. The one she works with. The one with the shitty boyfriend.\"\n\nThe polite grin slid from her face, replaced by an almost painful grimace. \"Uh yeah,\" she stammered. She shifted from one foot to the other. \n\n\"Ahh, shit sorry about that\" he said quickly. \"I have a tendency to run my mouth at the most inappropriate times. That was rude of me.\"\n\n\"No\u2014no, it's okay.\"\n\n\"Peace offering?\" he said, pulling another cigarette from his pocket. \n\nRachel shook her head. \"I don't\u2014ahh, hell just this once.\" She took the square from him, bending forward slightly so he could light it. Rachel breathed in slowly, watching the embers light before blowing the smoke out. \"God, I haven't had a cigarette since college.\"\n\nJared chuckled. \"Rebel.\" \n\n\"Kind of. So why are you out here in the dark all alone?\"\n\nHe shrugged, dragging on the cigarette once more. \n\n\"Don't know. Just needed some time to think.\"\n\n\"Yeah, I know how that is. Actually lately all I seem to be doing is thinking. I think my brain is secretly plotting to drive me crazy.\" Rachel took another drag on the cigarette, inhaling slowly before blowing the smoke out in slow wisps. She snuck a peek at Jared and noticed he was watching her, his chocolate eyes pensive. \"Hey,\" she chuckled nervously. \"Snap out of it, buddy.\"\n\nJared shook his head. \"Sorry. It's just....I might be too forward but that was the sexiest thing I've ever seen.\"\n\nRachel rolled her eyes, shooing away his compliment. \"What? Me blowing out smoke?\"\n\n\"Oh hell yeah.\" He laughed, and she found herself smiling too. He had an infectious chuckle, the sound shooting out all over her body, wrapping around her like a warm quilt. \n\n\"So do you always say whatever thoughts are whizzing around in your head?\"\n\n\"Pretty much,\" Jared said as he stubbed out his cigarette. \"I don't have that filter most people do when it comes to polite conversation. I say whatever's on my mind. It's a blessing and a curse.\"\n\n\"I can imagine.\" Rachel put out her cigarette. \"Brr, it's a little chilly out here. Should have brought my coat.\"\n\n\"Here,\" he said. He thrust a black zip up hoodie under her nose. \n\nRachel pulled her arms through, before zipping the hoodie up all the way. It smelled of aftershave and cigarettes, the sharp scent tantalizing her senses. \"Thanks.\"\n\nHe shrugged his shoulders. \"No prob. So, you and Luce have been friends for a while?\"\n\n\"Since freshman year of college. We had a few classes together before realizing we lived in the same dorm. We started studying together and eventually became closer. Been love ever since.\"\n\nJared gave a light chuckle. \"She's a real cool chick, although I have to admit I was a little afraid of her when we first met.\"\n\n\"Hahaha yeah she can have that effect on people. She's a total pussycat, long as you stay on her good side.\" Rachel hopped up on the railing next to him. \"So you're a tattoo artist like Aaron?\"\n\n\"Yup. Been sketching since I was sixteen, did my first tat at eighteen. I'm the newest addition to The Ink Blot family. I've been working with the boys for about six years.\"\n\n\"Six years? That doesn't seem like a newbie.\"\n\n\"Yeah, well it is to those clowns. They still give me shit about being the new guy.\"\n\nRachel smiled. \"They seem like a lot to handle.\"\n\n\"Oh, they're fucking nuts for sure. But I can't imagine being anywhere else except doing what I love with some of the best guys I know.\"",
        "There was a long pause in their conversation as they listened to the noises coming from the kitchen and other nighttime sounds. The silence was comforting, no sign of the usual awkward lull that usually accompanied first-time conversations. There was something soothing about his presence, the way he really didn't seem to want anything but to inquire about her. It was kind of refreshing. \n\n\"So do you have a girlfriend?\" The question was out before she could stop herself. \n\nJared laughed lightly. \"You asking me out?\"\n\nShe could feel the heat creeping up on her cheeks. \"I-I-I well...\"\n\nHis laugh rang out into the night air. \"Relax Rach. I'm totally fucking with you.\"\n\nHer chuckles mixed with his as she loosened her tense muscles. \"Jerk.\"\n\n\"I couldn't help it,\" he said between gulps of air. \"You're so wound up.\" \n\n\"Yeah, this past week has been a stressful one. Actually stressful doesn't even begin to cover it.\"\n\nHe nodded. \"I can imagine.\"\n\nRachel liked that he didn't push the subject. His words weren't full of false comfort or fake empathy. They seemed quite genuine and she found herself willing to open up. For the next fifteen minutes she told him everything about her and Brendan. For his part, Jared listened intently, nodding his head occasionally but stayed silent. \n\n\"...and so that's where I am today. I don't know what's going to happen between the two of us. I guess it's over, but I don't know and that not knowing is killing me. I just wish we could really finalize things. But maybe even after all the bullshit I went through, I'm just not ready to say goodbye.\" She was silent, waiting for him to say something. He had lit another cigarette during her story. He smoked in silence and seemed to be in deep thought. Rachel couldn't bear the thought of him judging her. \"You must think I'm such a total idiot, or a whore for being with him.\"\n\n\"Seems like that's how you perceive yourself. Me? I just think you were human.\"\n\n\"I...\" Rachel started, but he interrupted her. \n\n\"You seem so concerned about what other people think of you, about what you did but it really sounds like you're the one who can't forgive herself. You made a mistake, Rach. But you've got to stop playing the martyr.\"\n\nHis words stunned her into silence. They were a slap to the face, stinging sharp and deep. Her first reaction was to be offended, the anger starting to rise but she quickly realized he was right. She was torturing herself. \n\n\"Fuck, I did it again\" he said. \n\n\"Yeah, you did\" she said softly. \"Thanks.\"\n\n\"Oh. Well in that case, you're welcome.\"\n\nThey both laughed. Rachel was about to say something when the patio door opened and Lucia stuck her head out. \"What the hell are you two doing out there? Food's ready.\"\n\nRachel turned to Jared. \"Apparently we're being summoned. We better go before she threatens to cut us.\"\n\nLucia rolled her eyes. \"Will you stop making me out to be some angry basket case?\" \n\nThey stepped inside the kitchen, which was warm and smelled of spices. \"I thought you said Aaron was firing up the grill?\"\n\n\"Yeah, he did.\" Lucia pointed to the George Foreman grill on the counter. \"I wasn't letting that dumbass light an outdoor grill in December.\"\n\nWhen they stepped into the bright light, Rachel could finally see all of him. He really was a nice looking guy. Just as she suspected, he was much taller than her, with a wiry build. He had a slight tan, most likely left over from the summer months. Under his black shirt, she could see his fully inked arms. \n\nShe was intrigued by him, this tattooed guy who tended to talk too much. There was something about him that she couldn't quite put her finger on. As if he could feel her eyes on him, Jared looked up. He smiled shyly before winking dramatically at her. \n\nRachel couldn't help it. She smiled back. \n\n********\n\nGod, she was stuffed. Aaron and Lucia made a mini-feast. Each time she thought her stomach would implode, Lucia would shove another piece of chicken her way. \n\n\"Luce, I swear to god you're trying to make me fat. You do that and I really won't find a boyfriend.\"\n\n\"Oh, so you're in the market for a new man, huh?\" Her brown eyes sparkled with a secret. \"Mmm-hmm, so it all makes sense now.\"\n\n\"What makes sense?\"\n\n\"Nothing, nothing. I'm going to give you some leftovers to take with you. God only knows what the hell you eat anymore.\" Her dark eyes roved \n\nRachel's body. \"Whatever you're doing, keep it up. You're losing ridiculous amounts of weight.\"\n\n\"It's called the' My Boyfriend is an Asshole Which Makes me Stress Out' Diet. Pass it on.\" \n\n\"Nice to see it hasn't affected your sarcasm. Things should totally be fine.\"\n\nRachel shrugged. \"I suppose. One day at a time, right?\" She glanced at her watch. \"I should go.\"\n\n\"Really? It's only ten-thirty. I thought we could hang out, watch a movie or something.\" \n\nAs much as Rachel wanted to hang out with her, she just couldn't bring herself to do it. She needed some alone time. Being around all that happy was just depressing her even more. \"Um, I just need some quiet time. I'll call you tomorrow and we'll get together before the weekend is out. I promise.\"\n\n\"Okay Rach. I'll hold you to that.\" \n\nGrabbing the Tupperware out of Lucia's hands she walked out quickly to her car. What's wrong with me, she thought with a hint of irritation. Everything had been fine for a moment, and then suddenly changed. The world was as schizo as her heart. \n\nRachel hadn't even noticed she was in her car and driving, and before she knew it, she was already home. She was ready to curl up with a large pint of cookies and cream, and watch Pride and Prejudice. Rachel turned off the ignition and reached over to grab the large Tupperware bowl. \n\nIt was then she realized she left her coat at Lucia's. Looking down, she noticed she was still wearing Jared's black hoodie. \n\nShe couldn't help it. She smiled. \n\n********\n\nThe sweat was pouring down her face, her breath coming out in long, heavy pants. Her muscles felt like they were on fire, but she continued on. It was part of her new routine. No more strawberry pancakes. Saturday morning was exercise time. It was all part of her 'Try to Forget Brandon' phase. \n\nIt was eight o'clock in the morning and she was huffing away, shuffling on the sidewalk of her street. She had only run about a mile and a half but it felt like running the distance between Dallas and Houston. \n\nRachel turned up the volume on her MP3 player, the sounds of Rammstein blaring through her earbuds. She loved listening to loud rock during her workouts. It had been a while since exercise, at least working out like this. She liked the new her. Slowly, she could feel things starting to fall into place. She wasn't happy, but there wasn't that continuous lonely feeling numbing her senses. As long as she kept busy, kept her mind constantly working, she wouldn't have time to focus on Brendan. \n\nHer house was in view, only fifty-four more steps to go. She willed herself to press on, moving her feet in time to the pulsing beat. She looked a hot mess, dripping sweat, damp heat in places that should never be...but she kept moving. Thirty-seven...thirty-six...thirty-five....fuck you, Brendan Doyle, you can't win...twenty-nine...twenty-eight....She closed her eyes and concentrated on the music, forcing her steps to move in time. Her muscles pumped, feeling stiff and jerky and almost gave out when her body instinctively stopped. \n\nShe opened her eyes, glancing up at her front steps. A tired smile spread on her sweaty face. \n\nShe did it. \n\nRachel sat down on her steps, stretching out her legs in front. She was thankful she wore shorts. The early morning air was cold and crisp, a sure sign winter was here. But she was burning up. She peeled off her baby blue long-sleeved t-shirt, fanning her heated body. There was a large bottle of water next to her. There was a satisfied hiss as she opened the bottle and lifted it to her lips, feeling a small tinge of glee as the cool water slid down her throat. Rachel drained half the bottle before coming up for air. \n\nPushing her damp locks from her face, she couldn't help but grin. She was dog tired, but there was a new energy pulsing through her veins. \n\nStanding up, she stretched fully before running up the steps into her house. \n\nAfter a hot shower, Rachel settled onto her couch with her laptop. She had a ton of work to do for their latest client, including putting together a presentation brief for the new advertising campaign. She felt peace wash over her as she opened the design program. There was something about using technology and colors to create that calmed her. \n\nShe was so distracted by her design work, she almost didn't hear her phone ringing sharply on the table next to the couch. Without looking, she stretched her arm out, snatching up the phone and pressing the 'ON' button. \"Yeah,\" she said distractedly. \n\n\"Ahh, so the hoodie thief answers.\"\n\n\"Jared?\"\n\n\"Yes, it's me. I'm calling to discuss ransom money.\"\n\nShe bit back a chuckle. \"For this old rag? I'm thinking five hundred.\"\n\nRachel heard him scoff through the phone. \n\n\"Please. It's easily worth about four bucks. Am I interrupting you from something?\"\n\n\"No,\" she lied easily. She quickly saved her work before closing the program. \"Just playing around on the computer.\"\n\n\"Oh, well cool.\" She heard him clear his throat. \n\n\"So I was wondering...if we could meet up and you can give me back my property.\"\n\n\"You asking me out on a date?\" Rachel couldn't believe the girlish tone of her voice. It was almost...flirtatious. \n\n\"Uh, well hello there Miss Conceited. I'm just looking to retrieve my item that you so calculatingly pilfered.\" \n\nShe giggled, shocked at the high pitched sound. What the hell is going on here, she thought. \n\n\"Um..\"\n\n\"It would be a friendly get-together. My friend's band is playing at this club. Maybe we could go.\"\n\n\"Aren't we a little old to be going to shows?\"\n\nJared chuckled. \"We're almost thirty, we're not dead. If I didn't know any better, I'd say you were trying to avoid me.\"\n\nRachel smiled in spite of herself. \"It's not that. I just...can't help but feel...\" How was she supposed to put into words. \"You know what? I will go.\"\n\nShe could practically feel his smile through the phone. \"Sweetness. How about I meet you at your place in an about an hour?\"\n\n\"Sounds good. You know where I live?\"\n\n\"Uh, well yeah.\" He chuckled nervously. \"Lucia kind of told me.\"\n\nRachel grinned. Damn Lucia and her meddling. \n\n\"Okay then, stalker. I'll see you in a bit.\"\n\nClicking off the phone, Rachel felt a shiver of excitement. A date. She was going on an actual date. Shit, it was honestly a good seven months. The excitement soon gave way to dread. What the hell was she doing? Things with Brendan still weren't completely over. Correction: she still wasn't completely over him. But she was so lonely. And Jared, he was nice and completely different from Brendan. Maybe this wouldn't be so bad. \n\nAnd so she rose from the couch, moving unhappy thoughts from her mind; at least for the time being. \n\n********\n\nThe sound of the doorbell startled her, nearly making her smudge her eyeliner. Cursing softly, Rachel steadied her hand and continued her task, making a thick line of kohl on her upper eyelids. Setting down the pencil, she glanced at herself in the mirror. Her fingers nervously smoothed her hair. She didn't know what to do with it, so she just brushed it down, letting it hang long around her shoulders. Not to overdo it she dressed casually in dark skinny jeans and a bright turquoise tunic shirt. \n\nThe doorbell rang once more. \"Coming!\" she yelled. She left the bathroom, padding down the hallway. There was a brief nervous smile as she opened the door. Jared stood there, a shy half smile on his lips, something she was quickly noticing as signature. \n\n\"Hey,\" she said. \n\n\"Hey yourself.\" His brown eyes flickered briefly over her. \"You look nice. I think shoes might be a requirement, but otherwise, you look good.\"\n\nRachel chuckled. \"Shoes. Now why didn't I think of that? Come in,\" she said, stepping to the side. \"I just have to grab some footwear. I'll be right back.\" Walking a little ways back down the hallway she turned to him. He was dressed in dark, ripped jeans, a beat-up black leather jacket and a green band t-shirt. When she looked down, she cracked a smile. He was wearing bright green Chuck Taylors. \n\n\"You don't look so bad yourself,\" she said. \n\nShe turned into her bedroom, slipping her feet into the black Louboutin pumps by the door. Taking a deep breath, she walked back out to meet him. He was still by the front door, shifting lazily from one foot to the other. \"Sorry about that,\" she said. \"Ready to go?\" She shrugged into her black Calvin Klein leather jacket before grabbing her purse. \n\n\"Yeah.\" They stepped outside, pausing briefly for her to lock the door before continuing down the steps to the sidewalk. \"I was thinking we'd take my car,\" he said.\n\n\"That's fine,\" Rachel replied. \"Where did you park?\"\n\nJared grinned. \"Right here.\" He pointed to a black car in front of them. \n\nRachel whistled. \"Whoa. This is yours?\"\n\nHe nodded. \"Yeah, this is Aoki. My baby.\"\n\nShe shot him a quizzical look. \"You named a '67 Pontiac GTO 'Aoki'?\" \n\n\"Yeah,\" he said with a laugh. \"You got a problem with that?\" He held open the passenger door for her. \n\n\"No,\" she said as she slid inside the car. \"I just think it's a little blasphemous naming a classic American machine a Japanese name.\"\n\nHe chuckled, closing the door before jogging over to the driver's side. As he got in, he turned to her. \"Well last time I checked I am Asian. And my car my rules, princess.\"\n\nRachel raised her hands. \"Okay, okay truce. I promise not to make fun of Aoki so long as you don't call me 'princess' again.\"\n\nJared winked at her. \"Deal.\" He started up the car. \"So how do you feel about funk?\"\n\n********\n\nTwenty minutes later, they were sitting in what Rachel could only describe as a \"dive bar\". The place looked like it hadn't been cleaned in months. The main area was large but packed with round tables and straight back chairs. The large circular bar sat in the center of the room, which struck Rachel as odd. Across from the bar was a raised platform that she guessed was some sort of stage. At least it was well-lit, she thought. \n\nThere were plenty of people in the space, making it feel even more crowded. \n\n\"So what do you think?\" Jared asked as they winded their way through the crowd to get find a good seat. He led her to one of the tables near the front. \n\n\"Um, it's got character\" she said, sitting down gingerly. \n\nJared raised an eyebrow questioningly before cracking a smile. \"Right. You look like you're about to whip out some hand sanitizer and go to town.\"\n\nThey shared a laugh. \"No, not that\" she replied. \"Although I probably won't be using the bathroom in here.\"\n\n\"Don't worry. It will totally be worth the gnarly setting.\" He took off his jacket and settled it on the back of his chair. \"Why don't I get us something to drink? What's your poison?\"\n\n\"Surprise me,\" she said. \n\nHe grinned again and Rachel couldn't help the excited flutter of her heart. He really did have a fantastic smile. \"Famous last words,\" he said. \"I remember saying that once. It was during my initiation night party with the boys. Twelve shots later I was wearing nothing but a cowboy hat and my underwear screaming that a road trip to Canada for fries and gravy was an excellent idea.\"\n\nRachel fought the urge to smile. \"Really? You would have made it all the way to Canada in your drawers and a hat?\"\n\nJared shrugged. \"Hey, when you got a great idea you just gotta go for it. Be back in a bit.\"\n\nShaking her head, Rachel set her bag on the table. Well things were off to a great start. She wasn't particularly sure what was going to happen on her 'kinda-sorta not really' date, but she couldn't help but feel excited. She reached into her bag to silence her phone when she noticed the flashing lights indicating a text message. That's funny, she thought. I never heard it beep. \n\nScrolling down, she opened the message and felt her stomach lurch a little into her throat. \n\n\"Are you going to ignore me forever? Tsk tsk Gorgeous. I need to see you.\"\n\nRachel chewed her lip nervously. This would definitely be her luck. How the hell was she supposed to respond to a message like that? What kind of game was he playing at? She couldn't take anymore of his weird mood swings. Stuffing her phone back into her purse, she tried to move thoughts of Brendan Doyle from her mind. No, she told herself. You're over him, remember? Move on, Tunney. It's time to move on. \n\n\"You okay?\"\n\nShe looked up to see Jared staring quizzically at her, two large pints of beer in his hands. \n\nRunning a hand through her hair, she smiled. \"Absolutely. Just putting my phone on vibrate.\" \n\nShe tried to force a smile, hoping it met her eyes. \n\nHe continued to look at her, as if he knew there was something she wasn't telling him. Thankfully he didn't push the matter. \"Well I didn't really know what to get you, so beer it was.\" He set down one of the glasses in front her. \"But I will say it is one of the best beers in the world.\"\n\n\"Really now,\" she said with a smirk. \"And what makes you think I will enjoy it?\"\n\n\"Hmm,\" he said as he stroked his chin, a look of faux intense thought on his face. \"That is true. After all, you come on a date with me wearing four hundred dollar stilettos. Don't get me wrong, they're hot as fuck but completely impractical in a place like this. I don't think you're the type of girl who drinks beer. I probably should have ordered you a vodka and cranberry, something sweet and fruity like that.\"\n\n\"Need I remind you Mr. Kuroki, that I was drinking a beer when you scared the shit out of me on the porch the other night?\" She took off her jacket and glared at him. \n\nHe dismissed her comeback with a slight wave of his hand. \"Semantics, Tunney. Purely semantics. We're talking now. Tell me something: on a typical night out, what do you usually order?\" His brown eyes glinted with amusement, as if he already knew the answer. \n\nDespite the small nip of irritation, she couldn't help but smile. \"Shut up. Well, I can still drink beer with the best of them.\"\n\nJared raised his glass in salute. \"Aww, dream big baby.\"\n\nRachel raised her glass in his direction before taking a large swig. Tipping the glass back, she downed half the beer in one long gulp. Setting the pint down, she smiled triumphantly at Jared, who was looking at her with something akin to shock. \"You were saying?\"\n\n\"I digress.\" He cleared his throat. \"Marry me,\" he said.\n\nRachel laughed. \"Don't hold your breath.\" She took a more ladylike sip of her beer. \"So who are we seeing tonight?\" \n\n\"A buddy of mine is in this band. He asked me to come out and take a look at them. They're pretty decent.\"\n\n\"What kind of music do they play?\"\n\n\"They're an Earth, Wind, and Fire tribute band.\"\n\nRachel nearly spat out the sip she had just taken. \"Are you serious?\"\n\nJared nodded. \"As Lindsay Lohan's mental state. Why do you ask?\"\n\n\"That is either the most ridiculous idea I've ever heard or the most epic fucking band ever. I practically grew up on Earth, Wind, and Fire. My dad owns every single one of their albums.\"\n\n\"No shit? Your dad is fucking awesome.\"\n\n\"I know.\" Rachel grinned. \"This is going to be so much fun.\"\n\n********\n\n\"So you just witnessed the epic-ness of Serpentine Fire. How did you like it?\"\n\n\"I have to say, it wasn't too bad. Your friends can jam.\"\n\nJared nodded. \"Sweet. I'll have to let them know you dig it. Now what do you want on your sundae?\"\n\nAfter the show, they decided to walk a few blocks to Smitty. It was one of Rachel's favorite late night haunts. The old-school diner was a throwback to the 50s, the kind of place where the staff still wore paper hats and stark white aprons. Smitty's had the best old-fashioned soft serve ice cream. ",
        "They slid into one of the booths, the seats covered in cushioned red plastic vinyl. Rachel picked up one of the laminated menus. \"They make the best soft serve, I swear.\" She glanced at the menu. \"It's going to be hard to choose.\"\n\n\"I'm going to leave the decision in your capable and well-manicured hands,\" Jared said. He reached into his pocket and produced a quarter. He turned to the mini-jukebox on the table, flipping through the selections. \n\nRachel busied herself with the menu. Making a choice, she signaled over the waitress, a matronly-looking woman wearing a cheery yellow uniform with a crisp white apron. \"Can I help you?\" she said, reaching for the pencil stuck in her grey bun. \n\n\"Yes, I'd like an extra large sundae, with one scoop of vanilla, black raspberry, and sweet cream ice cream with double whipped cream, hot fudge, chocolate sprinkles, and a cherry.\"\n\nThe waitress raised an eyebrow. \n\nRachel smiled back. \"Oh, and two spoons. Thank you...\" She looked up at the waitress' uniform, a nametag with 'Deena' pinned to her ample bosom. \"Deena. What a lovely name.\"\n\nDeena flashed a warm grin. \"Why thank you. I'll get your order in right away.\" \n\nJared watched as she walked away. \"She probably thought they were going to have to pry you out of the booth with a crane.\"\n\n\"Shut up!\" Rachel said with a laugh. \"Clearly with the two spoons it means we're sharing.\"\n\n\"Yeah, or you could just be double fisting it.\" He smiled before taking off his jacket. \"I found the perfect song.\" He slid the quarter into the slot before pressing the button. \n\nThe opening notes of Love TKO filled the diner. \"Teddy Pendergrass?\" she said with a raised eyebrow. \"Really?\"\n\n\"Yes. I grew up listening to this kind of music.\"\n\nShe was taken aback. \"Really?\"\n\nHe nodded. \"When my parents came from Japan, the first apartment they had been above a record store. My father loved old soul records. I grew up on Marvin, Barry, all the greats. Teddy Pendergrass was my favorite.\"\n\nRachel shook her head. \"Wow. You truly are complex.\" They both looked up as Deena returned and set a large silver dish on the table. \n\n\"Whoa,\" Jared said. \"I think we really will need that crane.\" He picked both spoons, handing one to Rachel. \"Well, let's get to it.\"\n\nTen minutes later, they were still working on the sundae. \"How are things going on your end,\" Jared asked, lifting a spoonful of black raspberry to his lips. \n\n\"Ugh I think I might have to take a break.\" \n\nRachel stuck her spoon in the dish. \"I think I have a slight case of brain freeze.\" She pressed her fingers to her temples, rubbing slowly. \n\nOpening her eyes, she looked at him. He was still eating the sundae. \"How the hell can you still be eating?\"\n\nJared shrugged before eating a large spoonful of vanilla and whipped cream. \"I have a stomach of iron, let me tell you.\"\n\nRachel grinned. \"Can I ask you a question?\"\n\n\"You just did, but we'll overlook it.\" He set his spoon in the dish before wiping his lips on a napkin. \"What's up?\"\n\n\"Your tattoos,\" she said, pointing to his arms. \n\n\"They're pretty intense.\"\n\n\"Are they now?\"\n\n\"Don't get me wrong, I like them. It's just...they're so intricate.\" She slid her hand across the table. \"Do you mind?\"\n\n\"No. Go ahead.\"\n\nRachel brushed her fingertips across his arm, tracing the detailed swirls and patterns. Every inch of his arm was covered with gorgeous designs. \"What do they all mean?\"\n\n\"Some of them are just random patterns I did because it made the arms look complete. These here are my parents' names. I don't know. Many are scars of my ridiculously wasted youth. They do have meanings, but most of all they are just reminders and memories. And some are mistakes.\" \n\nShe glanced up at him and was surprised to see he was watching her fingers dance across his skin. He drew a slow breath and she felt his muscles tense underneath her touch. \n\n\"Why do you keep the mistakes?\"\n\n\"Because the design wouldn't be complete without them. Besides, I'm the only one who knows where they are.\"\n\n\"I have a tattoo.\"\n\nHe grinned. \"Really now? I would love to see it sometime.\"\n\n\"Puh-lease. It's a small one. Nothing as beautiful as yours.\"\n\nHis brown eyes met her hazel-hued gaze. \"I doubt you could be anything but beautiful.\" \n\nRachel was quiet for a while, the silence settling in comfortably. There was something so serene about him, as if his very presence was enough to make her feel at peace. It was comforting and a little unsettling at the same time. \n\n\"You're buzzing,\" he said quietly. \n\n\"What?\" she asked, snapping out of her daze. \n\n\"Your bag. It's buzzing.\" He inclined his head to her purse atop the table. It was vibrating loudly.\"\n\n\"Oh,\" she said. She withdrew her hands, which were still stroking his skin and reached into her purse. Scrolling through her phone she noticed six new texts. All from Brendan. \n\n\"It's him, isn't it?\" \n\nRachel nodded. \"He wants to see me tonight.\" A long sigh escaped her lips. \"Why does he do this?\" She glanced up, noticing his look of extreme discomfort. \"Oh, I'm sorry Jared...\"\n\n\"No, no\" he replied. \"No need to apologize to me. We should be going. I should get you home.\" He reached into his pocket and set a ten dollar bill on the table. \n\nRachel felt it, the mood change. Things went from comfortable to tense. She wanted to say something, anything to make it go away.\n\nJared got up from the table and she followed suit. They were quiet even as they settled into the car. As he started up the engine, she turned to look at him. \"Jared,\" she started. \n\n\"There's no need to apologize, Rachel. Apparently you just can't help yourself.\"\n\n\"No that's not it...\" \n\n\"What then?\" he asked. \"What the FUCK is it about this guy that makes you so goddamn weak?\"\n\n\"Who are you to judge me?\" she asked, the rising anger evident in her voice. \n\nHe sighed. \"I'm not judging you, Rachel. I'm just wondering how long you're going to fucking torture yourself.\"\n\n\"I never even said I was going to see him Jared. Besides, I don't have to explain anything to you. We're not together.\"\n\nJared scoffed. \"You're right. But you're going to have to do better than that to get rid of me.\"\n\nRachel sighed. \"Why do you care? Why do you want to talk to me so badly?\" She fought the tears threatening to fall. Why was she so upset? And why did she feel the need to explain herself to him?\n\n\"You think you're damaged goods? Bullshit. You think I should move on? I think otherwise. You're so hung up on a guy who used you as his goddamn plaything and you blame yourself. It's fucking ridiculous.\" He sighed once more. \"He really did a number on you, baby.\"\n\nThe dam cracked open, the tears flooding her cheeks. \"How can I explain it? How do I put it into words?\" She buried her face in her hands. \"I let him in, let him use me even though I knew he didn't love me. And I stayed. I stayed because I didn't know what else to do because by then I was in too deep. I'd fallen for him. I kept hoping he'd care, hoping he'd say those things I wanted to hear. But it never happened.\" The tears were coming harder now. She gasped heavily, her bitter confession making it hard to breathe. \"It's all my fault, Jared. Completely my fault. I let my guard down for a man who wasn't fucking worth it just because he wanted me. It's all my fault, all my fault. And now I have to live with the fact that I'm responsible for breaking my own heart. I let him in. It's all my fault.\" \n\nRachel was crying heavily, the hard sobs shaking her body. All those days of holding it all inside, pretending that everything was alright. She was completely broken now. She finally understood; she was the one who caused this all, opening her heart to a man like Brendan. Stupid, so fucking stupid. \n\nVaguely she felt the car stop, heard the soft click of his seatbelt. When she felt his arms wrap around her shoulders, she leaned into him. He undid her seatbelt and drew her close, settling her almost on his lap. \n\n\"Rachel,\" he whispered. \"The weight of your regrets is going to kill you. You have to let it go, honey. You've been carrying it around too long.\"\n\nHer cries were softer as she clung to him, her hands gripping his jacket as she inhaled the scent of his cologne mixed with the smell of his cigarettes. \"There were times when he was so incredibly sweet. When he held me, when he kissed me, when he was...\" the words were lodged in her throat, a hardened lump of ache and regret. \n\n\"If that's the only thing keeping you from letting go, then would it help to know that you can have that same feeling with another guy? With a guy who wouldn't make you just his hotel whore, but his entire world. Those sweet times wouldn't be a rarity. They would be the standard. That's what you deserve, Rachel. Everyone deserves it.\"\n\nShe was quiet now, listening to the soft beating of his heart as he held her close. \n\n\"I feel like I know so much about you. I've been in your shoes; I've given my heart away to someone that didn't fucking deserve it. You feel cheated, denied the payoff of a happy relationship. I know what it's like to finally let the wall down, to finally let someone in, to strip away all your fears and doubts and give yourself to them completely only to be hurt. Love like that is always dead on arrival. It's one sided and most likely a poison dart aimed straight for the heart. You can blame yourself for letting this person in, allowing them to hurt you or you can pick yourself up and try to mend the pieces. You move on. You heal. Those are the only things that matter.\" \n\nRachel could hear the slight tremor in his voice. It flickered briefly before he cleared his throat, the moment of weakness gone. \"Jared?\"\n\n\"It's no big deal,\" he said, brushing off her inquiry. \"There will always be this pain, but everyday it hurts a little less. You'll see.\"\n\nRachel raised her head, her eyes meeting his. She could see the small trace of moisture in his almond- shaped eyes and for a brief moment she wondered who the woman was.\n\nJared chuckled softly. \"I must sound like a bitch.\" He chuckled again, a painfully awkward sound. \"I really wish you would say something.\"\n\nShe pressed her lips to his, so gentle. She felt him holding back, knowing he wanted to deepen it but he restrained himself. It made her push forward, sliding her tongue between his lips. They were so soft, his upper lip a bit plumper than the bottom. She sucked gently on it and he moaned, drawing her closer to him. Her hands clenched him tighter, gripping the leather of his jacket harder. \"Rachel,\" he moaned. \n\nShe wanted to kiss him deeper, wanted him to take away that lonely feeling. She could feel that familiar throb of desire beginning to stir, pulsing in a place that had been dormant for so long. \n\nHis fingers wove their way through her hair, gripping firm enough to elicit a moan of longing. Her tongue savored the lingering taste of the ice cream. Her body instinctively fell into his, her hips moving her further into him so that she was sitting on his lap. \n\nJared gripped her hips, his fingers digging into her skin so tightly she gasped with pleasure. She needed to feel him, needed to know for sure that he would take away that numb feeling. \n\n\"Jared,\" she whispered. \"Jared please.\" Fingers traced a jagged path of desperation down his stomach. When her fingers cupped him he let out a low groan. \n\n\"Jesus,\" he said. \"Rachel, tell me. Tell me what you want, baby.\"\n\n\"Take it away,\" she cried. \"Make me feel good. Take away this feeling.\"\n\nHis hands clasped hers, stilling their motions. Her eyes. The heated flame of lust burning brightly did nothing to mask the pain hidden clumsily behind it. The hurt was etched deep and dark. He knew he couldn't take advantage of that. \n\n\"Rachel,\" he husked. \"We have to stop.\" He kissed her hands before moving her away with, as she noticed, great effort. \n\n\"I'm sorry,\" she whispered. \"I shouldn't have taken advantage of you like that.\" She felt the blush of embarrassment creep on her cheeks. God, she practically threw herself at him.\n\nJared's chuckle was soft as it eased her mind torture. \"And here I was, thinking I was taking advantage of you. You're vulnerable right now. You don't know what you what.\"\n\n\"Maybe. I've been so wrapped up in Brendan. My life has been Brendan for the past six months.\" \n\nShe sighed. \"But that kiss. That kiss was amazing.\"\n\n\"Yeah, it was. Been a while since I've been gripped like that. You've got some strong hands.\"\n\nRachel grinned. \"Are you okay?\"\n\n\"I'm cool. I'm used to rescuing cute girls.\"\n\nShe wanted to ask him. \"Jared...who was she?\"\n\n\"Who? The girl who took me on the infinite merry-go-round of shit? She was a fucking head trip, more concerned with being with different guys when all I wanted was to be with her. She was completely wrong for me, this much I knew. But it didn't stop me from falling headfirst into the most ridiculous, exciting, passionate shitshow ever. But we both know something like that can't last. I realized I couldn't hold her. I couldn't be that wild guy for her and she wasn't willing to be a girlfriend. So we parted ways, not before saying some terrible things to each other. She's nothing but a memory now, a somber reflection on my worst drinking nights.\" He glanced down at her, kissing the tip of her nose. \"Besides, I kind of like the distressed damsel I'm holding right now.\"\n\n\"Did you really mean what you said before; about feeling that way about a different guy?\"\n\n\"I do\" he said, nodding his head. \"Brendan might have cracked your heart, but it's not like it can't be repaired. With the right glue, of course.\"\n\n\"The right glue? Are you supposed to be that glue?\"\n\n\"If you want me to be,\" he said quietly. \"We've all experienced the letdown of love gone wrong, Rachel. But in the end, like I said before, we pick ourselves up and we move on. We deal with the pain in our own little ways. Maybe...maybe I'm the one who helps you to heal.\"\n\nShe let his words sink in. There was something about him, the way he comforted her, his quiet demeanor, the way he listened. It was a salve for her heart. But she couldn't do that to him, especially after what he revealed. \"Jared, I can't use you like that. It would be unfair.\"\n\n\"Who said anything about using? I know you need time to really get over him. I know this. I just want you to know that Brendan isn't the only option. That if you want, there is someone else out there who's willing to give you exactly what you want, if only you're ready to let him in.\"\n\nHis sincere words nearly brought fresh tears to her eyes. And she knew them to be sincere; his sienna eyes held no lies. They were completely open and honest, such a change from the nebulously green hue of Brendan Doyle. \"Can I think about it?\"\n\nHe placed a gentle kiss on her forehead. \"Of course you can. Now what say we get you inside? I think you've had enough excitement for tonight.\"\n\n\"Inside?\" she looked up, realizing they were in front of her house. They scrambled out of the car and Rachel reached into her bag for her keys. As they walked up the steps onto the porch, she turned to him. \"Would you...I mean if you want to...do you mind...\" She fumbled with the sentence, her nerves getting the best of her. \n\nJared reached for her hand. \"It's no problem. I'll stay.\" \n\nRachel breathed a sigh of relief. \"Thank you.\" \n\nShe unlocked the door and stepped inside, pulling him with her. She switched on the lamp near the door, lighting the living room. Jared took off his jacket, resting it on the back of her couch. \n\nHe turned to her as she stepped out of her heels and threw her coat off. \"If you show me where the extra blankets are, I can make up a bed on the couch.\"\n\nShe pointed to a closet down the hall. \"Blankets and pillows are on the middle shelves. I'm going to change.\" She padded down the hallway, turning left into the bedroom. Taking a deep breath, she tried to calm the flutter in her chest. Things were so confusing: Brendan, Jared, the way she was feeling towards both. She needed to sort it out. She undressed and quickly changed into a pair of pink shorts and a blue shirt. \n\nRachel quickly washed her face in the bathroom before heading back to the living room. He made up the couch and already had the television on, flipping through the channels. He looked up when she entered, a flicker of lust in his eyes when he noticed her tiny shorts and tight shirt. He'd kicked off his sneakers and folded his pants neatly on top of his jacket. He was clad in his t-shirt and boxer briefs and Rachel could see the tattoos on his calves. \n\n\"Do you want something to eat or drink?\" she asked. \n\n\"Nah, I'm good.\" He patted the spot next to him. \n\nShe obliged, sitting down and propping her feet up on the coffee table. She reached for his hand, caressing the top softly. He brought their entwined fingers to his lips, kissing her hand. \n\n\"What do you want to watch?\"\n\n\"Doesn't matter,\" she said. \"I'm probably going \n\nto crash in the middle of it.\"\n\n\"Party pooper.\"\n\n\"Bawling an entire river can really take the wind out of your sails.\"\n\nHe smiled. \"So I hear.\"\n\nThey sat in silence, watching some random action movie until Rachel felt her eyelids droop. She rested her head on his shoulders and before she knew it, she was fast asleep. \n\n********\n\n\"Rach?\" she felt herself being shaken gently. She felt him press his lips to her cheek. \"Rach, you'd be more comfortable in your bed.\"\n\nRachel opened her eyes. The television was off. The living room was dark, save for the glow of the streetlamps outside. \"What? What time is it?\"\n\n\"A little after two.\" He nuzzled her cheek. \"Are you ready for bed?\"\n\n\"Yes,\" she said with a yawn. \"Will you come with me?\"\n\n\"I...okay.\"\n\nHe rose from the couch, taking her with him and leading her down the hall. \"Are you sure you want me to sleep with you?\" he asked. \n\nShe nodded. \"I'm sure.\" The moonlight shone bright, illuminating her large bed. She pulled back the covers before sliding inside. \"Come here.\" \n\nJared obliged, getting in beside her. \"Rachel, I...are you sure?\"\n\n\"Yes. It's nice to have someone close. I miss it. Nighttime is the hardest. I get so lonely. I can keep busy all I want during the day but I can't stop my mind from working, especially when I sleep.\"\n\nHe drew her to him, cradling her close. \"I think it's like that for everyone. That comfort is the hardest thing to let go of when things end.\"\n\n\"You being here, it helps. It really does. But I don't want to use you as a security blanket.\"\n\nHe kissed her. \"Don't worry. You aren't. I want to be there for you, if you want me to be. Now go to sleep. We can talk more in the morning.\"\n\nIt felt oddly settling, nestled in his arms, warm under her blanket. She listened to his steady breathing, felt the warmth of his breath gently caressing the back of her neck. \n\nAnd as she slept a small, jagged piece of pain fell from her heart, melting into the night.\n\n********\n\nShe could hear ringing. Opening one eye, she tried to figure out where the hell it was coming from. She glanced up at the clock; it was only seven-thirty. The ringing continued. Her phone was silent on the nightstand beside the bed. \n\nIt was then she realized it was the doorbell. She got up to move when she noticed Jared. He was still next to her, sleeping on his stomach, a protective arm thrown around her waist. The sight sent a warm feeling straight to her heart and once more she felt the icy grip of pain loosen its hold ever slightly over her heart. \n\nRachel got up from the bed, sliding her feet into a pair of black flip-flops before shuffling down the hallway. She couldn't fathom who would be ringing her doorbell at this early hour. She assumed it was the paper boy looking to collect. \n\nShe opened the door, ready to tell the kid to beat it but the sharp words died on her lips as she noticed who it was. ",
        "Brendan was standing on her porch. \n\nShe blinked slowly. This had to be a dream. Once again she shut her eyes, breathing deeply for a brief second before opening them again. Yup, he was still there. He looked slightly disheveled; his dark denim jeans hung low on his hips and his dark gray knit zippered sweater was a little rumpled. Even his hair was askew, the normally slick reddish brown locks were haphazard, giving him a startled appearance. It was if he'd been running his hands through his hair all night. \n\nRachel was taken aback. \"Brendan what are you doing here?\"\n\n\"You never answered me back,\" he said smoothly. \n\n\"Brendan, it's really early. Why are you here?\"\n\n\"I called you. Texted you many times. What were you doing?\" \n\nShe couldn't believe his line of questioning. He'd ignored her for days and suddenly she was the bad guy? \"I was busy. My life doesn't revolve around you.\"\n\nHe scoffed. \"Since when?\" \n\n\"Look, if that's what you came here for...then you can just turn around and walk your ass right back off my porch.\" She made to close the door but he stuck his foot out. \n\n\"No, wait Rachel. We have to talk.\"\n\n\"About what?\"\n\n\"About me and you.\"\n\n\"There is no 'me and you'. I'm not your wife, remember Brendan? We're not in a relationship. I believe that's what you said to me.\"\n\n\"I know what I said, Rachel. But maybe...\"\n\n\"No, there's no maybe.\" Rachel tried to keep her voice low. Grabbing the nearest jacket, she stepped out onto her porch, shutting the door behind her. \"Does your wife know you're here?\"\n\n\"Why do you always have to bring her up?\"\n\n\"She is a valid point, Brendan. You might try and forget her, but she's always on my mind. You know, these past days have been an eye-opening experience for me.\"\n\n\"Really?\" he said. \"Is that why you haven't answered my calls?\"\n\nShe folded her arms across her chest. \"Actually yeah. I weighed the situation, decided it wasn't in my favor to keep putting myself through this over and over again. I'm like that mouse in experiments; I keep going for the cheese even though I know it's wired and going to shock me. But I keep thinking I'll outsmart the shock, that I'll beat the system. But it never happens.\"\n\nHis stare was intent. \"Rachel, I really have no idea what you're talking about.\"\n\nRachel chuckled, a mirthless sound that rang hollow in the early morning air. \"No, you wouldn't get it, Brendan. It's always been about what you wanted. And I let you take it, because I guess I was just desperate to fix that tiny crack in my heart. But loving you, it didn't fix the crack; it made it bigger, widening into this chasm of loneliness that got too big to bear.\" \n\nShe looked up at him, her hazel eyes filled with sadness. \"I'm not sure when loving you started hurting so much. I guess it's when I realized you could never love me back.\"\n\nIt was uncomfortable, saying these things to him now. She felt exposed in the chilly December air. She zipped up the jacket and realized it was Jared's black hoodie. \"I've been playing the martyr for so long, blaming myself for letting you in. I thought it was pointless to hold you responsible for your actions because in the end, you wouldn't care. I just want to know one thing...did you ever even feel something for me besides a desire to control? Did you ever love me?\"\n\nShe could see that her words were making him uneasy. It was weird to see the great Brendan Doyle sweating a little. \"I...what do you want me to say?\" he asked. \"You knew how things were when we started.\"\n\n\"So that makes it alright?\" she countered. \"God, Brendan you were married! You used me and the worst part is I let you. You have absolutely no idea the lengths I would have gone to please you. And that scares me, that I would give up so much trust. Especially for a man who wasn't worth it.\" She sighed. \"I thought I would change you, that we'd have this perfect love and you'd realize I was the one you were supposed to be with. You'd leave your wife and we could be happy.\"\n\n\"We could be happy,\" he said quietly. \"You and me.\"\n\nShe laughed softly to herself. \"Don't tell me those things,\" she said. \"You won't leave your wife and I'm tired of loving half of a man. I don't deserve that. And I don't need you.\"\n\nRachel looked up at him and for the first time, she could see his eyes clearly. They were no longer the cloudy green hue but a greenish brown much like her own. For the first time, she saw a flicker of apprehension in his eyes. \"You might not need me, but you can't deny you still want me.\"\n\n\"I won't deny it,\" she said. \"A part of me will always want you. But my life and happiness are much more important. This thing we have going, it's toxic. It's poisoning both of us. So I'm ending it.\"\n\n\"Is that it?\" he asked. His voice was slightly raised; he was showing much more emotion than Rachel thought possible. \"Are you just going to walk away? Christ, Rachel you made it sound terrible. It wasn't all bad.\"\n\nA small, sad smile played on her lips. \"No, it wasn't. Even during the hurt and the bullshit, we had great times. But I deserve those great times all the time. I deserve someone who won't make me feel like I lose a bit of myself each time I give into him.\" Her mind went back to Jared, still asleep in her bed. The way he held her close. His lips on hers. \"I want to be more to someone than just a hotel fuck.\"\n\nBrendan grabbed her hand. \"Rachel, don't do this. I...\" he seemed at a total loss for words. \"I need...fuck. I won't say I love you.\"\n\nShe chuckled hollowly. \"I wouldn't expect you to. That's not Brendan Doyle fashion. You broke my heart. But it's not like it can't be repaired.\" She smiled, thinking of Jared once more. \"With the right glue.\"\n\n\"Is he the right glue?\" Brendan pointed to Jared's car parked out front. \n\n\"For the time being, I'm the glue. I'm the one who has to fix things.\" She took his hands, gently squeezing them. \"Time to let go. I hope you find what it is you're looking for.\"\n\nHe pulled her to him, wrapping his arms around her. Rachel couldn't help it; she breathed him in, inhaling his cologne for old time's sake. \n\nEven as a small beat of wanting pulsed through her body, she no longer felt that overwhelming desire like before. The flame had cooled to a whisper; she didn't feel that ache for him even as he squeezed her tight. \"You should ask yourself why you're finding it so hard to let go,\" she whispered. Reaching up, she kissed him on the cheek. \"Goodbye Brendan.\"\n\nRachel stepped away, moving back into her house. She was about to close the door when she heard him speak. \n\n\"You did mean a lot to me, Gorgeous.\"\n\nHer heart almost gave in at the open sincerity in her words. It would be so easy to go back to the way things were, to give in. But she knew things wouldn't change. It would always be like this. And she couldn't and wouldn't do it anymore. \n\n\"I know, Brendan,\" she said in a small voice. \"I know. But it's not enough.\" She sighed. \"It's not enough.\"With one last look, she closed the door on him, finally putting an ending on her chapter of heartbreak. \n\nWalking back down the hallway, her body began to tremble. It was an exhilarating feeling of joy mixed with sadness, elation, and fear. She felt like laughing and crying at the same time, the emotions tumbling into each other. Even as she entered her bedroom, her mind still couldn't grasp the situation, the madness of her actions. \n\nJared was lying on his back, his eyes still closed in slumber. Rachel slid in next to him. He immediately rolled onto his side, his long and lean body curled around hers in a snug fit. \n\n\"Feel better?\" he whispered. \n\nShe smiled. \"You were awake that whole time?\"\n\n\"I'm a light sleeper.\" He was quiet for a moment as his sleepy brown eyes focused thoughtfully on her, the emotion hidden in them unreadable. \"You wanna talk about it?\"\n\n\"No,\" she said with a yawn. \"Not right now. I'm done with talking. I just want to sleep.\"\n\nRachel was still trembling as he held her tighter. \"No problem,\" he said. \"I'll be here when you wake up.\"\n\n\"I'm counting on it.\" She yawned once more, closing her eyes and snuggling into the pillows. \n\n********\n\nSix months later...\n\nThe sharp sound of the alarm pierced the early morning quiet of the dim room. Rachel slid a hand from underneath the blankets, tapping the snooze button. A small groan tumbled from her lips. Six-thirty. She hadn't been up this early since high school. Her dad used to joke that the only people up at that hour were people coming off a night shift and people up to no good.\n\nRachel practically rolled out her bed, trudging over to her chest of drawers. She reached for a hot pink sports bra and black tank top. As she changed, her phone chirped loudly on the nightstand. Looking at the screen, she smiled before pressing ON. \n\n\"Morning sunshine,\" she said with a giggle. \n\nA loud yawn met her greeting. \"You're the only person I know who can be so goddamn chipper at this ungodly hour.\"\n\n\"Aww, poor baby\" she cooed putting on a pair of tight pink running shorts. \"You were the one who wanted to get into shape. Although I don't know why. You really need to eat a something.\"\n\n\"Mmm, you're right. I think I'm in the mood for something hazel-eyed and chocolate curves.\"\n\nRachel laughed. \"Behave yourself, sir. We've got three miles ahead of us.\" She slid on white ankle socks and black New Balance sneakers. \n\n\"Ugh, don't remind me. Where are you, anyway? I'm freezing my 'nads off out here.\"\n\n\"Hold your horses, I'm almost ready.\" Clipping her keys to the waistband of her shorts, she ran down the hallway and swung the front door open, a giant smile plastered on her face. Now there was a great early morning sight. \n\n\"Hey there, pretty girl.\" Jared said with a grin. His long frame leaned against the doorjamb. \n\n\"Hey you,\" she replied. Reaching up on her tiptoes, she kissed him softly on the cheek. As she went to move away, he pulled her closer. \n\n\"Now what kind of a kiss is that?\" Dipping his head, he lowered his lips to hers, capturing her fullness. Rachel arched higher, her feet practically leaving the floor. It was amazing how he could be so gentle yet forceful at the same time. It sent nervous shivers sprinting down her spine. \n\nJared set her down gently. \"Now that's what I call a good morning. Why don't we just say to hell with the run? I can think of another way to work you out.\" He wiggled his eyebrow suggestively, the overdramatic gesture making her laugh out loud. \n\n\"Nice try, Kuroki. You're not getting out of running. But if you're a good boy, I can guarantee there's a surprise in your future.\"\n\n\"Well shit woman, what are we waiting for.\" \n\nBounding down the steps, he began to stretch his limbs. Rachel had to laugh at his attire. When they first started their early morning running dates, Jared forwent real running clothes, preferring to jog in cutoff sweatpants, band t-shirts and Chuck Taylors. After a minor shin injury, Rachel convinced him to change his look to more athletically appropriate. She was astounded and amused when he showed up in running shorts straight out a 1980s track meet and a tight t-shirt, tall striped tube socks and bright running shoes. \n\nHis wacky wear became the norm, every morning a different pair of bright, running shorts, a retro tee and bright sneakers. Sometimes he'd even throw in a sweatband for good measure. She loved his goofy side and how he could switch from being completely playful to serious when needed. \n\nAs she stretched alongside him, her mind began to wander. The past six months were a trial. It took a while, but she finally felt like she was over Brendan. She kept his number and didn't feel guilty about it. She also didn't feel the need to ever dial it. To her, it was a symbol, a marker of how close she came to losing herself. It was a digital warning to never ignore her gut, to always speak her mind. \n\nShe was great, not that fake happy that always comes after a breakup where there's only that pretend happiness to infuriate the ex. No, she was truly happy. Because for the first time in a long time she felt like herself. She knew what she wanted. Things at work were stellar, she and Lucia were closer than ever. After some major groveling that included several dinners at their favorite Italian restaurant, she was able to make up for ignoring her best friend. Besides working at the office, they hung out with Aaron and the girls. Rachel even attempted to get to know the rest of the guys at The Ink Blot, who were really like twelve-year-old boys. It was a new beginning, a second chance. \n\nAnd then there was Jared. Godsend couldn't even begin to describe him. She was so grateful to have him in her life. Being with him, it was indescribable. At first she couldn't shake the guilty feelings, assuming she was using him as a crutch. But he assured her that that wasn't the case. It had been six long months, during which they grew closer. They hung out nearly every day and he slept over often but they hadn't actually had sex. Despite their growing closeness, she knew she wasn't ready to take that next step. She wanted to wait, and he was okay with that. Call it careful but she wanted to be absolutely sure. And the way things were going, she felt like things were going in the right direction. \n\nAnd as for Brendan, she hadn't spoken to him since the morning on her porch. It was hard at first, but with the support of Lucia and Jared she pulled through. He hadn't tried to make contact, and she was grateful for that. She avoided places like the bar he owned and of course the Sunshine Motel. There was still a small pang every time she thought about Room 8. \n\nAnd then there was the incident at the Hilton during the AgriCorp banquet. She and Lucia were there as a favor to their client for planning and hosting the event. Jared was her date for the evening. They were chatting with the AgriCorp CEO and his wife when she noticed him out of the corner of her eye. He looked dapper in his tailored black tux, his arm wrapped around the slender waist of a bubbly brunette Rachel knew to be his wife. His wife was talking animatedly, her chirpy voice breathy and high-pitched. Brendan was silent, sipping from his champagne flute with a positively bored look on his handsome face. \n\nIt was as if he felt her staring at him. His eyes met hers and a look of genuine surprise crossed his features. Rachel should have known he would have been there. Laura, her secretary was in charge of the guest list and sending out the invitations. She should have remembered that AgriCorp did business with Brendan's family. Despite how great it was to have Jared on her arm, she couldn't help the nervous flutter in her chest when she saw him. Brendan gave her a soft smile and tilted his head greeting. And that was it. No tears, no champagne in the face. It was civil. And that's when she knew things would be okay. \n\n\"Are you ready?\" Jared asked, bringing her out of her musings. \n\nShe glanced up at him and his ridiculous outfit. \n\n\"Oh yeah. Are you ready for me to kick your ass?\"\n\nHe laughed. \"We'll see Tunney. You'll have to catch...Hey!\" He yelled in protest as she took off down the street, her loud giggle bouncing off the empty cul de sac. \"Way to cheat, Tunney!\"\n\nShe pumped her legs harder. \"Wah-wah-wah. Less talking, more running Kuroki!\" She slowed down a little for him to catch up. \n\nAs he met up with her pace, he elbowed her slightly. \"You are going to pay for that.\"\n\n\"Yeah, yeah, yeah. Move it. Loser buys breakfast.\" Rachel sped up once more. Her heart pounded loudly in her head. \n\nIt sounded like freedom. \n\n********\n\nThanks for sticking out this kind of painful but extremely therapeutic ride. I'll be posting the playlists for Always and Never on my blog soon, so definitely check it out. New Stories to come! n4m"
    ],
    "authorname": "nerd4music",
    "tags": [
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/always-and-never-ch-02"
}