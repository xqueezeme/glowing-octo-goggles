{
    "title": "Hunting the Hunter Ch. 07",
    "pages": [
        "In the high recesses of the vaulted room, the air hung heavy with waxy sediment and a silent, suspended cloud of ancient, flickering dusk. The late morning sunlight illuminated them as it streamed in through the high, leaded glass windows. \n\nThere was a thin, tepid quality to the light. Indeed, it seemed too weak to crawl anymore than halfway down the ash gray walls, leaving the well worn floor shrouded in milky darkness. It always seemed that way here, in this place, no matter how bright and robust the sun outside. \n\nOn the walls, ensconced candles made up for the lack of light from above, casting unnatural shadows and making even the cheapest bits of glass and metal shimmer like rare Altmeri treasure. Dark velvet hangings complemented the unsettling aura, adding an element of the prurient to the mise-en-scene. \n\nThere were three figures standing in the sickly spot light. Three figures, and their audience\u2014a black and silver cat who watched intently through heavy-lidded eyes. Brilliant slits of emerald peering out from the darkness. One of the figures turned his own eyes away and tried to find something else to focus on.\n\nThe figure, Arthur Delatour frowned at the glass case in front of him and valiantly resisted the desire to open his mouth, to denounce this abomination, and rail against all that was ugly in the world. It was a truly powerful urge. Every ounce of his being was dying to cry out, to snatch up the monstrosity from the woman's hands and hurl it to the ground, thus saving her from what was surely an unspeakable fate. But to do so would upset his business, bring unwanted attention to his presence, and no doubt delay him further. It was simply best not to get involved.\n\nInstead, he feigned immense interest in an unusual pendant which for all intents and purposes appeared to be a large ruby set in an ebony square, surrounded by some sort of veined green stone...jade perhaps. On closer inspection, the ruby appeared to be one of those nasty, laboratory grown fakes mages liked to produce when they're down on their luck. He sniffed.\n\nIt was fascinatingly garish...but it wasn't any worse than the nightmare the woman beside him was cooing over. \n\nTo his dismay her hand, the nails of which he noticed were unfashionably long, suddenly appeared under his nose and the horror stared back at him: three minuscule little stones exploding out of a decidedly thick ring on overly long prongs. Pink. Pale Blue. Yellow. In descending order. He glanced up at her. \n\n\"They're my birth stone, and those of my children....be honest, what do you think?\"\n\n\"You've payed for it already?\" He asked mildly, giving in as he was no longer able to hold himself away from the conversation, yet still determined not to make a scene.\n\n\"I had it made especially. I designed it myself!\" She beamed.\n\nHe smiled charmingly. \"I think it's quite lovely. And such a nice family keepsake.\"\n\n\"That's what I thought!\" She smiled down at her ring with renewed pleasure. \"They can pass it on to their own children one day. Maybe even add a stone or two.\"\n\nThose poor children, he thought with an internal head shake. Delatour glanced up at the Nord behind the counter with a desperate expression. The Nord caught it and cleared his throat. \"Would you excuse me 'mam, I just have to fetch something for this gentleman.\"\n\nShe waved him off. A brief moment later he returned and Delatour bowed gratefully. \n\n\"See how it fits...if there are any problems...just drop by anytime.\" The man said, nodding to the envelope.\n\nDelatour waited until he was well away from the shop, and sure he wasn't being followed before he opened the package and withdrew the letter. A new report from Cheydinhal. He smiled darkly. With very good news it appeared. \n\nHe made a bee-line for the elven gardens and veered into a narrow alley off of the main thoroughfare. \n\nHe knocked, almost giddily, and waited with his hands pressed behind his back, still gripping the letter. \n\nThe man opened the door a crack, and seeing who it was, stepped back letting the door follow.\n\nDelatour took it as an invitation, stepped crisply into the dimly lit room, and held the letter out to the man without preamble. The roughian took it, and scratched at the shadow of a beard covering his chin, his sharp blue eyes coldly razing over the letter. Delatour couldn't help but smirk as he looked up from the paper with a raised brow. \n\n\"This lead any good?\"\n\n\"Oh yes.\" Delatour drawled, his smirk turning into a proper grin of delight. \"My friend, we are, as they say, in business.\"\n\nDelatour caught the repressed curl of a sneer and decided to tone down his enthusiasm a touch and cleared his throat. \"Yes, well, you'll have to forgive my excitement. If you were the one who had to explain to our collective employer why we've had so little success as of late, and why we've lost so many people, then you would be chipper too.\"\n\nHe grunted and turned away, gesturing to a nearby table. \"Want a drink?\" Delatour glanced around the place and winced. It was dank and dusty and had that mildewy atmosphere of...il ne su quoi. But generally, in his experience, such an atmosphere connoted the lack of a woman's presence...or money...in that order. Even the meanest shack or hovel could be made livable when a little delicacy is shown. \n\nAs a bachelor it often amazed him to see the level of barbarity some men let themselves descend into, even at the heart of the empire, in its capital city no less. Then again, Imperials as a rule weren't generally inclined towards delicacy...too much of the rough and ready in their nature to be truly refined. \n\nHe adjusted his sleeves and cleared his throat. \"Thank you no, I have much to see to, and to arrange. This was my first stop, but once our business is concluded I must make myself available to our gracious lord.\"\n\nThe hard blue eyes shot back to his. \"You came here directly?\" There was a sharpness in his tone which well matched his eyes. \"What if you were followed?\"\n\nHe, however, was not one to be chided by the likes of this cave dweller, no matter how effective an operative he was. \"I was not.\" He bit out shortly. \"And quite frankly enough time and resources have been wasted already. I heartily suggest you spend what little time we do have pursuing this lead and less fretting about someone finding you asleep in your bed, all unprepared. \n\n\"Frankly I expect you won't be here come sundown anyway.\" He straightened, tugging his jacket. \"His lordship has requested that should the information we received prove reliable, we will act immediately with the plans he himself has drawn out.\"\n\nThe man scoffed. \"What does he know of it? Some prissy high-born fool who d\u2014\"\n\n\"Might I remind you,\" he interrupted coolly, \"that the prissy fool is the one footing the bills and paying your wage...and what's more, he has no reason to believe any plan of yours will be any more successful than one of his. It's not as if you've had a very good track record so far. Between the debacle with the guard and the attack on Wariel...\"\n\n\"Fine. Yes. Very well.\" He waved him off and dropped into a chair, resting his elbows on the table. \"As long as it's known I don't favor the plan. \n\n\"I've been talking around,\" he continued, \"listening to the chatter, and I think this new player is more dangerous than your master realizes. I've seen her work, seen the results of that work. He hasn't. She wasn't alone at Wariel you know, there were claw marks on at least half the bodies...claw marks, and arrows, and burns that'd make your stomach turn. By Talos, Delatour, she was fucking the creature while it was pretending to be a man, when she must know what it is. What kind of person would do that?\"\n\nDelatour shrugged. The man's obvious distress was a little unnerving, but he maintained his airy calm. \"Well, she is a dark elf. Vicious, treacherous creatures those.\" He chuckled to himself. \"Like Altmer really, just more upfront about it.\"\n\nThe man shook his head, rubbing his mouth in obvious frustration. He continued as if Delatour had never spoken. \"If this fails like I think it will...it's just going to make her more aggressive. It'll bring her out...force her into an offensive position. And the rest along with her. It's already begun.\"\n\nThe Breton only smiled in response, his eyes darting to the door, as if seeing through it and into the distance. \"Yes. That, I believe, is the point.\" \n\n**\n\nShe didn't hear him moving toward her, but she felt it. There really weren't words to describe the sensation. Or how she knew who it was slipping soundlessly into the room for that matter, but she knew it when she felt it. \n\nThe hair on her neck rose and her flesh prickled. \n\nIt was just like it had been the first time, in those ruins. Only this time it was stronger, and more familiar, and this time she didn't need to turn around. \n\nInstead she simply kept breathing, slowly pulling the air in and out of her lungs. Eventually he came close enough that she could hear his breathing as well. Slow and steady. For a moment, she mistook it for her own. \n\nHe was in front of her, she guessed, and watching her. She could feel those eyes on her. She still didn't open her eyes to confirm it, but she allowed a small smile to turn the corners of her mouth before she resumed her meditation.\n\nShe focused inward again, feeling the pulse of her magica as it flowed through her like blood, in some ways very literally like blood-- in her blood for that matter. It filled her until her skin fairly pulsed with it. \n\nShe'd been telling the truth when she admitted to being no good with summoning spells. What little she knew came from her stint as an acolyte of Boethia, and even that required she use her natural abilities with blood magic. Without it she'd be even worse at summoning than she was at healing. A half decent summoner would never need something like that. Some didn't even need a circle...but what are you going to do? Not a whole hell of a lot.\n\nShe flinched slightly as she realized she was drifting and took a deep breath, letting it out slowly and refocusing on the pulsing in her veins. She was almost back into it when she felt something else. A niggling sensation at the back of her brain. \n\nA stray thought, not fully formed, which really shouldn't have been there.\n\nShe reached for it and was a little shocked to realize it wasn't hers. It was too...green. \n\nHer lip twitched. He must be projecting. It felt just like it had when she'd accidentally slipped into his head the other night. She wondered if he knew he was doing it. Was he trying to get into her head?\n\nInstead of pushing it out or ignoring it, she gave up on her focusing exercise and turned her attention to the intruding thoughts.\n\nOr perhaps 'thoughts' was too strong a word. They were more impressions...feelings. The most prominent one was concern. There were different shades of it. There was a general sense of fear and foreboding, lingering and undefined, but she could feel a sort of watchful caution, one which flirted with...curiosity. This felt more immediate, more directed. After a moment she realized it was directed at her. \n\nEver so slowly she opened her eyes. \n\nHe was right in front of her, a few feet away, resting on his haunches with his paws extended before him like one of those guardian statues you see outside of a khajiit temple. He was staring back at her as she knew he would be. \n\nThe sensation at the back of her mind shifted slightly in response, but it wasn't anything she could put her finger on. \n\nShe smiled slowly. It was a naughty smile. \"Hello handsome. See anything you like?\"\n\nThe sensations shifted again, only this time warming in a funny way\u2014and not haha funny. It seemed to grow until her insides started to respond and heat in turn. It didn't take her long to add those numbers together. \n\nHe hadn't so much as blinked, let alone moved or given any indication of hearing her, but it was so obvious he did. That is, if the vibes he was giving off were to be trusted. She chuckled.\n\n\"Did you know you're projecting?\"\n\nHe did blink then, and tilted his head slightly. She felt a vague sense of confusion from him, but the more distracted she became the fainter it was. \n\n\"You must be more of a natural with the mystical crap than I thought. I seem to be picking up the vibes you're sending out.\" She grinned. \"Hey, I have an idea. Lets play a game.\" She wanted to test out how accurate this vague sensation was. She took a deep settling breath and closed her eyes, trying to refocus herself. \n\n\"Ok. Think...sexy thoughts.\" Nothing. She frowned and opened her eyes. Even though he was still a lion, the look he was giving her was unmistakable. \"Oh come on! Don't be such a spoil sport!\"\n\nAfter a brief stare down he snorted. \n\n\"Good.\" She inhaled again and closed her eyes. \"Lay it on me.\" \n\nDid he ever. She was expecting another one of those warm tingling sensations, but instead she got blasted with an incendiary spell...only in the good way. Like...really good. And then it just got out of hand.\n\nIt was as if her body was a raging, fiery ball of hot and red and want, and just as quickly as it hit her, her mind slammed down on it to block it out, shocked by its suddenness.\n\nIt had lasted all of a few seconds, but she was breathing hard and her hands were shaking. Her eyes fluttered open to see him staring hard at her. She knew that look all too well. In fact she was probably returning it ten fold.\n\nHe rose to his feet and closed the gap between them until they were less then a hand's span apart. She raised her hand and ran it up his neck, closing it tightly in his fur. He didn't move, and she wondered if he was aware of the tremors shivering in her belly or the wetness growing between her legs. \n\nShe knelt there, trying to think of something to say...but she was getting nothing. \n\n\"Inanna!\" A voice called from down the hall...Desdemona's voice. She wasn't sure if she should be grateful or annoyed. Either way the interruption saved her from having to come up with something halfway intelligent to say.\n\n\"There you a....oh, ah, sorry.\" Inanna's hand dropped into her lap as they both turned to face Des. \"I...didn't mean to interrupt, but your figures...\"\n\nInanna licked her lips and took a deep breath, trying to settle herself and refocus. \"What about them?\"\n\n\"They're looking a little weak, and starting to flicker and fade in a way that doesn't look too healthy. I thought they'd last longer than that.\"\n\nShe nodded. \"They should. That was my fault. I was distracted and lost my focus.\"\n\n\"Yeah.\" Inanna noticed the wary glance she cast in Feric's direction. \n\n\"No worries. I'm about as ready as I'll ever be anyway. Might as well get started.\" She looked back at Feric. \"You and everyone else are welcome to watch the fireworks. It's perfectly safe. I'm not summoning anything hostile...well...Aunty Beobani was always known to be a little jumpy...but that's what the defensive circle is for.\" She grinned and got to her feet, using his shoulder to steady herself as the blood began flowing properly, making her legs ache something fierce. \n\nThere was something about the action which threw her mind back to the night at the lake...or maybe it was just the lingering red haze still drifting at the corners of her vision and the warmth between her legs. \n\n\"Inanna?\"\n\nShe shook herself back into reality and grinned toothily at Des. \"Let's get this over with shall we?\"\n\nThe room was all set and ready to go with the summoning circle writ large at the center of the long hall. The cubs were being corralled, as usual, by the team efforts of Aina and Lucas who were keeping little hands and feet off of the markings. Everyone else was there as well, though most were keeping a polite distance and all except Feric were human and dressed. They had been since they'd arrived with Des. Des who was still casting side long glances at Feric as they entered the room. \n\nAh, yes, that. For some reason it hadn't occurred to her that their lion forms would make Desdemona uncomfortable. \n\nIt seemed to have occurred to everyone else. Everyone but Feric apparently. Then again, maybe it had occurred to him. Maybe he was perfectly aware of the effect it could have on her. Naughty boy. She winked at him when Des wasn't looking...he probably didn't understand why...but that was fine, let him think she wasn't on to him.\n\nInanna surveyed the circle with a quick walk around, double checking that all was as it should be. The red glow of the runes looked a little odd, clashing as it did with the perpetual bluish glow of the ruins, and looked rather sinister. Red, glowing Daedric script usually did look sinister though, regardless of the location. Still, the contrast was an off putting reminder of where her own natural skill originated, along with a good chunk of her family tree. On Muthsera-mama's side at least.\n\nShe put it out of her mind. It was what it was, and it worked. That's what really mattered. And it wasn't about the nature of the thing but the application....right? After all a sword in the hands of some one like her Max was not doing quite the same job as the sword in the hands of the Dark Brotherhood. \n\nThen again, a sword is made for one thing and one thing only: to kill. There was no getting around that cheery little fact.\n\nThey were fine in terms of usefulness, the runes that is, except for the fade Des had mentioned. Nothing that would cause any problems, but a sure sign she'd lost her focus some. What could she do? Get rid of the distraction? Hardly.\n\n\"Alright.\" She waved her hands in an unnecessary shooing gesture. Unnecessary since Des was the only one close enough to the circle to cause any problems. \"I'm not doing anything too dangerous but it's best if everyone keeps their distance. Okey dokey....here goes nothing.\"\n\nShe didn't dick around, and simply unsheathed the knife she'd brought and ran the blade lightly over the top of her arm. She knelt and pointed her arm downward and waited for the welling blood to flow in the right direction. Her pointed index finger hovered over the the outer ridge of the circle which had been, through clever device, connected to the inner circle as well...one of Desi's tricks, a mystical two for one. And so long as the line held, so would the spell.\n\nAs the first drop left her finger she began her incantation. This particular spell was rusty from infrequent use, but she'd make it work. It was really all about will and focus anyway.\n\nOn the last word, the red glowing runes shifted into a purple and then lightened to blue, matching the blue glow of the surrounding walls. Inside the central ring a half dozen spots of concentrated blue appeared, swirling like mist around a glowing core, each one growing stronger, larger, and more distinct as the spell came to fruition. There were six of them...six.\n\nShe dropped her arm and frowned. Finally each glowing mass resolved itself into a fully...or at least mostly, articulated figure of one of her ancestors. All of them were looking at her...a few of them looked rather smug...which was never a good sign. She watched them back. They declined to comment.\n\n\"Six? Seriously?\" She asked in Dunmeri, looking at each of them in turn. Uncle Assurban smiled slightly, but that was the only reaction she got from any of them.\n\nFinally one spoke, Her great-grandmother, and former wise-woman. \"Have you forgotten so quickly? You ask too much of us, and most who headed your call did so begrudgingly.\"\n\nHer jaw literally dropped. \"Again...seriously? Are you people nuts?\"\n\nHer grand mother sighed and rolled her eyes. \"Inanna...\"\n\n\"It was for the bloody Nevarine! Dagoth Ur was trying to fetching kill us! \"\n\n\"Language!\"\n\n\"Language my black a\u2014\"\n\n\"Inanna...\" Assurban interrupted gently, \"you must have expected something of this nature. It's not as if you've been in perfect standing with the family recently.\"",
        "\"Or ever, for that matter.\" Offered another snidely.\n\n\"Like mother like daughter...In more ways than one...\" Inanna caught the sneering glance in Feric's direction and resisted the urge to flambe the bitch...not that it would have done an good.\n\n\"At least her mother remains to do her duty to her people...\" Her great-grand father chimed in, not wishing to be left out apparently.\n\nThe nattering continued until her Great-grandmother raised her hand causing them to fall silent.\n\nInanna huffed, crossed her arms across her chest, and glared back at them. \"Just because it's expected doesn't make it right.\"\n\nAnother huffed back...her Great-great-great-Aunt Orvona from the looks of her. \"And what, young lady, is right? We helped your N'wah, and we broke many ancient laws doing so. But you cannot expect such favors more than once. And for the love of all that is sacred, you used blood magic to summon us...does that not strike you as inappropriate?\"\n\n\"Oh please, I use what I have because I have to...and what did it hurt? Nothing. Tradition does not knit the fabric of the universe people...these aren't the laws of magica we're talking about here.\"\n\n\"Careful child...\" her grandmother again, \"we are not unaware of the laws you yourself have broken...some very recently.\"\n\nShe bristled and sighed, bowing her head and placing her hands on her hips. For a long moment she paused and thought over what she wanted to say. With a final swallow she got to her hands and knees and leaned forward, touching her forehead to the cool stone. \n\n\"Blessed ancestors,\" she began, \"I understand your hesitation in heading my call, and the absence of so many of my line. I come to you in humility and with shame in my heart for the ancient laws I have broken and with a desire to do penance to cleanse my spirit and to regain your most high favor.\"\n\n\"Somehow I doubt that.\" She heard one of them mutter. Inanna ignored it, prayed, hard, for patience, and kept going. This was going to take a while.\n\n##\n\nFeric watched, fascinated as the strange inscriptions began to glow more brightly until they changed color, filling the space above and around them with a bright light. The air in the room seemed to crackle with energy and it made his fur stand on end. So to did the figures in the center of the ring, though in the less literal sense. \n\nSix figures, spirits, began to articulate in the light and haze. They were clearly Dunmer, two males and four females, their features eerily distinct while at the same time being almost transparent. He felt his hackles raise and could see the others shifting uncomfortably at the sight. It was rare that one encountered a such a spirit who was not intent on your immediate destruction.\n\nOnce they'd materialized, they simply hovered there. He glanced at Ina and mimicked the frown he saw on her face.\n\nFinally she spoke, shaking her head and sounding irritated. Her words were in Dunmeri, so he couldn't follow what she said, nor the heated response she received. There was some sort of argument which ended with Inanna resting her hands on her hips and sighing in what looked like defeat. She completed the impression by getting down on her hands and knees and apparently grovelling before them. \n\nShe continued speaking, this time in a much softer tone...and did so for a long time. She stopped finally and there was a pause. What seemed to be the leader of the spirits, a woman, responded. He could feel the wave of frustration and anger which came off of Ina, but she didn't do anything more than pull her hand into a fist for a moment before spreading it palm down on the floor as it was before. She spoke again, her voice tight, but calm. He glanced at Desdemona who was watching with passive interest. He was tempted to ask her what they were saying, but that would mean shifting, and he didn't want to interrupt the proceedings.\n\nInanna said something else, which seemed to really get them going, a few making obvious gestures of frustration and anger themselves. But Inanna was insistent. \n\nAnd then she said something which made all of them fall silent, and even caused Desdemona to start and let out a subdued 'oh my' from behind her hand. \n\nThe spirits were all but shouting now, and Inanna had risen to her knees and was arguing right back. He looked to Desdemona, hoping she could interpret his need to know what the hell was going on. She happened to glance over to him, then sidestepped until they were close enough for her to murmur to him. \n\n\"She's claimed you...all of you. Naturally they're pissed.\"\n\nWhat did that mean? \n\nHe looked up and noticed that one of the spirits, a male seemed to be chuckling, though he was pinching the bridge of his nose and shaking head. Another spirit made some comment to him, and they all turned to look at him. Whatever he said made Desdemona chuckle as well. \n\nHe looked at her again, and she leaned in whispering, \"they chided him for laughing, and he told them it makes no difference what they say or how they react, this is Inanna they're talking about, and she needs no encouragement. They were telling him not to encourage her...obviously.\"\n\nThere was another round of back and forth. \"Now they're just being petty.\" Des whispered after a minute. \"Oh...there we go.\" All but two of the spirits vanished, leaving the leader, and the male who had chuckled. Inanna looked frustrated and shook her head. Her voice was calmer though. \n\nShe reached out and smudged the circle. The woman drifted toward her, speaking, her voice stern, but the conversation seemed to have turned civil once more. She hovered before Ina, who crossed her hand over her heart and bowed her head as the spirit touched her fingers to the top of Ina's head. The words she spoke seemed to interest Desdemona more than Inanna though. \n\nAnd then she vanished as well, leaving only the last spirit. Inanna got to her feet and gestured to him, smirking and saying something obviously sarcastic.\n\nThe spirit only smiled and shook his head, then turned and looked toward where he was standing. \"Desdemona,\" he called in common. \"So nice to see you're still about and causing mischief.\"\n\nShe held up her hands. \"Don't look at me honored uncle, I'm just following your niece as always.\"\n\nHe looked back at Inanna then flitted over to her, touching her forehead as the other had and said a few words in Dunmeri.\n\n\"A fat lot of good that will do me.\" She muttered in common.\n\n\"You'd be surprised. Don't take it personally...you know how they are.\"\n\n\"They're the ones taking it personally.\"\n\n\"Yes...but we're old, and set in our ways. We have no patience for the frivolities of youth.\"\n\n\"There is nothing frivolous about this...I'm deadly serious. You know that.\"\n\n\"Yes, I do know. But I know you better than they do. They will come to understand eventually.\"\n\n\"Eventually isn't good enough.\"\n\n\"It will have to be. It's all you have I'm afraid.\"\n\nHe glanced once more in their direction, nodded politely, then vanished as well.\n\n\"I hate my life.\" Inanna said aloud to no one in particular. Then turned to look over her soldier to see everyone looking at her curiously. \"What a waste of time.\"\n\n\"Not a total waste perhaps...I heard something about a prophesy? That sounds interesting.\" Desdemona piped from behind her.\n\n\"It's not....trust me.\" After their little group circle jerk where they all decided to get uppity and righteous on her ass, her great grandmother had at least paused to give her some 'advice'. It was pretty useless really, just gestures toward actual help...which they flat out denied. Except uncle Assurban of course. But he'd always been the exception.\n\n\"There are many powerful creatures in the web, she says. Consider your prophesy, she says. Look both ways before crossing the thoroughfare. Don't run with a knife in your hands. Don't swim after you eat...gee, thanks grandma.\" She looked around. \"Dead end. Sorry folks. No ancestral guardians for us.\" She called out to those who were still watching. \n\n\"I suspected they wouldn't go for it twice.\" Des murmured, walking nearer and crouching down next to her.\n\n\"Had to try.\"\n\n\"So what is your prophesy?\"\n\n\"Long story.\"\n\n\"Make it short.\"\n\n\"Ok, boring story.\"\n\n\"Make it interesting.\"\n\n\"I hate you.\"\n\n\"Fill in the gaps: Inanna is destined to...\"\n\n\"It's not that big a deal. We all get one when we're born. After the smack on the ass and just before they rub the ash all over you.\"\n\n\"Ash?\"\n\n\"Yeah. How do you think we get so dark?\"\n\nShe made a disgusted sound. \"Be serious.\"\n\n\"Alright, I'll tell you but it isn't useful. It's just a bunch of common places and keywords strung together to sound interesting. Like those lunar astrological things. 'You may or may not recognize someone you met years ago, today is a bad day to travel, you lucky number is one, three, four, eight, or ten.'\"\n\n\"tell me already.\"\n\nShe sighed and cleared her throat. \"One of many roots of a great tree, your fortunes will grow and multiply like its leaves, and its trunk will remain strong against wind and axe. Greater yet will it become, fed and watered with the blessings of the hunter and kin.\" She arched a brow at Des. \"See. Useless. It could mean anything or nothing. That old bat lives for that crap. Fetching mystics. You know I bet they've never given a bad one. No one ever says, 'you're life will be boring and you'll do nothing useful or interesting,' or, 'you will be betrayed by everyone you care about and will die sad and alone.'\"\n\n\"I'm sure everyone has something positive to offer.\" Another voice commented from behind her. She turned and raised a brow as Feric who was now hovering over her right shoulder. \"Or at the very least can play a part in something greater than themselves...even if they are unaware of it.\"\n\n\"You are too cute for words. Did you pick that up from a priest of Akatosh or something? Maybe read it in a psalm book?\" \n\nHe gave her wry look, but declined to answer.\n\n\"Ah...you are aware that you're not wearing anything...\" Desdemona was eying the naked man standing next to her with an amusing mixture of discomfort and appreciation. He only smirked and crossed his arms over his broad chest. \n\nThe flush that infused the Breton's face made Inanna grin maniacally. She'd gotten so used to the casual nudity round here that she forgot the effect her sexy cat could have on the uninitiated. \n\n\"Yes, well.\" She cleared her throat and pretended not to look at him. \"He's not all wrong, dear. Even if it does sound a little 'Sundas morning special'.\" \n\n\"Not you too?\"\n\n\"Think about it. We've encountered our share of sorry souls who have in their own way played an integral part in much larger tales.\"\n\n\"Fine. That still doesn't make my tree analogy any more useful.\"\n\n\"True enough.\"\n\n\"Maybe it's not completely an analogy?\" Feric offered. \n\n\"How do you mean?\"\n\n\"Well it mentions kin, right?\"\n\n\"Yes...\"\n\n\"Maybe it's talking about a family tree. Meaning your family will grow.\"\n\n\"Not a bad thought actually.\" Des agreed nodding. \"That does fit in well with the Ashlanders' fixations on ancestry and kinship.\"\n\nInanna had to admit it was probably true. \"It still isn't helpful. I mean it probably has nothing to do with what I'm doing right now...it could just be a general thing. Like you are destined to pop out a ton of babies. Plus if 'kin' is supposed to be helpful...well, not so much...obviously.\"\n\nThey all looked contemplatively at the wasted summoning circle. \n\n\"What if it was Kyn...as in Kynareth?\" \n\nShe blinked and looked back up at him.\n\n\"Or the hunter,\" offered Des, \"could mean Hircine the hunter...he is known to be associated with were-creatures.\"\n\n\"You're both serious aren't you?\" they looked serious. Hell...who knows. It could be worth a shot. \"I don't know.\" She hedged. \"It seems like a long shot. Also, Hircine and his kin? I don't think I like his kin. But I guess I could go bother him...though I hate to think what he'll want in exchange for help.\"\n\n\"Still it could be worth looking into.\" Des countered. \"Do you know where the shrines are?\"\n\n\"I've a good idea. I guess once everything is set up here I could see what's what. They're near enough to the city that I could check in with you in a couple of days once you've settled in and go from there.\"\n\n\"Also, have you considered using your other talents more extensively? They could be most useful here.\"\n\nShe made a face. \"Ugh, don't wanna. When there's no other way, I'll use it, but I don't like the resemblance to necromancy. Especially suspecting what we do about our villain. Plus I don't see how. The spells I know aren't immediately useful as far as I'm concerned.\" \n\n\"Oh don't be such a prude. The waste witches use it.\" \n\n\"And you know how I feel about those nutty broads.\" \n\n\"Speaking of which...I do know of a weald witch or two who you might be able to get more applicable spells from.\"\n\n\"Oh hell no.\"\n\n\"Inanna...\" she warned.\n\n\"Desdemona,\" Feric interrupted, making them both start as his silent presence had been momentarily forgotten, \"she's doing more than enough already, and more than can or should be asked of her.\" \n\nIna tilted her head at him, and he looked down to meet her eye. \"Don't do anything you're not comfortable with. You've already risked yourself enough for our sakes.\" She quirked a smile at him and sighed, turning back to Des.\n\n\"Well I guess I have to at least check it out now.\"\n\nHe scoffed behind her. \"Impossible woman...just because I said you shouldn't?\"\n\nShe smiled sincerely at him. \"No, because you just had to go and be so sweet about it. I'd feel like a heel if I didn't.\"\n\nHe shook his head. \"I mean it Inanna. Don't take risks you don't have to.\"\n\nShe grinned. \"Whatever you say boss man.\"\n\n\"Why do I have a bad feeling about this?\"\n\nDes chuckled. \"Because you're smarter than you look.\"\n\n\"Hey! Take that back, he looks plenty smart.\"\n\n\"Alright, because you're smarter than she looks.\"\n\n\"Have I told you I hate you yet today?\"\n\n\"Four and counting.\"\n\n\"I hate you.\"\n\n\"Five.\"\n\n**\n\n\"She likes you.\"\n\nFeric glanced at the Breton woman next to him. He had joined her under the auspices of company, but he was in truth keeping an eye on her. Having let her come here at all meant it was too late to do anything about it if she betrayed their trust...but he still felt better keeping an eye on her...and he knew it made Mirisa less edgy to know she didn't have free reign. \n\nOf course this time he was in human form...and dressed. He smirked to himself.\n\nMirisa had more or less accepted Inanna's presence, or at least had stopped complaining about it. They both seemed to have come to some sort of accord after the hunt. Which made his life significantly easier. But that didn't mean she liked this new development any better. In fact, he'd already had an earful from her.\n\nShe didn't mind Inanna's presence, but she certainly didn't trust her like he did. He doubted any of them did. Which was fair enough. They trusted him, however, and he was determined to be worthy of that trust. Hence babysitting the Breton. \n\nDesdemona had been doing something to the wall with a piece of chalk but whatever she had drawn was suddenly gone.\n\n\"Where did it go?\" He asked nodding to the wall, deciding to continue ignoring her previous comment.\n\nShe cocked a brow at him. \"It's still there. I used an illusion spell to hide it. Not much of a trap if they can see it coming. It's good enough that only a decent mystic will be able to see it. One of Inanna's caliber could do it.\"\n\n\"You keep mentioning that. Mysticism...and what was it called, blood magic? I really don't think she's interested.\"\n\n\"She should be.\"\n\n\"Is she really so unusual in that, and is that why it bothers her?\"\n\nShe shrugged and crossed the catwalk to peer down over the side to the hall and gate below. \"Yes and no. The mysticism is pretty common for Ashlanders. Even those who aren't naturally talented are at least intimate with it on a theoretical level. Is that gate connected to this push block?\"\n\n\"Yes.\"\n\nShe nodded and walked over the block, examining it closely. \"They're actually well known for it in Morrowind, among the Ashlanders.\" she continued, \"Especially the wise women...and Ina has several in her lineage, on both sides. So it makes sense that she should come by it naturally. Of course it's probably part of the reason she's so pig headed about using those particular skills. She respects her ancestors, but she's never gotten along with them.\n\n\"The blood magic she avoids because it's something the waste witches use, so there's a bit of a taboo against its use. Plus there's the Daedric thing. It indicates that the one using it has Daedra tainted blood. Many Dumner would be fine with that, but Ashlanders are especially mistrustful of the Daedra...even the ones they hold in high regard.\"\n\n\"Is it true?\"\n\n\"What?\"\n\n\"That she has Daedric blood?\"\n\n\"As far as I know, yes. Ina seems to think so as well. But there's never been a proper study done on it that I know of. But then my knowledge is limited to what is publicly released by the guild and what I can squeeze out of my own contacts. So it's partial at best.\"\n\nShe crossed her arms and smiled mildly at him. \"Are you pretending you didn't hear me earlier?\"\n\n\"Yes.\"\n\n\"Well?\" She prompted, her smile widening slightly. There was something predatory about it that he wasn't sure he was comfortable with.\n\n\"I know.\" he finally answered, facing her down and mentally challenging her in an attempt to get her to leave it alone. It didn't work.\n\n\"Do you? How's that then?\"\n\n\"She told me.\"\n\n\"And you believed her?\"\n\n\"She gave me no reason not to.\" He turned away slightly, giving her his shoulder, once again attempting to end the conversation.\n\nShe only smiled knowingly, which he caught out of the corner of his eye. Oddly enough it didn't bother him anymore. He knew the truth about Ina...he'd always known...since that moment their eyes first locked, and he'd seen her fearless gaze turn to wondering shock...and heard her arrow pass harmlessly through the air. She'd lowered her weapon, and he knew everything he'd ever need to know to trust her. Everything that came after was just the visible proof. So he no longer cared what other people knew, or thought they knew.\n\n\"Do you love her?\"\n\n\"What?\" he turned to look at her, surprised, and certainly not expecting that question...or to be asked so bluntly at least.\n\n\"Love...do you love her?\"\n\n\"No offense, but I hardly know you to be asking questions like that.\"\n\n\"True. But I know her.\"\n\n\"So you say.\"\n\n\"What, you don't believe me?\"\n\n\"I didn't say that.\"\n\n\"You implied it.\"\n\n\"That's your interpretation.\"\n\n\"My, my, you are the equivocator aren't you? Are you sure you're not an Imperial?\"\n\nHe chose not to respond to that.\n\n\"You don't like me very much do you?\"\n\n\"I don't know you well enough to like or dislike you.\"\n\n\"What are you a bloody law clerk? Fine. You don't trust me.\"\n\n\"No, I don't.\"\n\n\"Ina does.\"\n\n\"And that's the only reason you're here. I trust her. Implicitly.\" He looked at her again...hard, \"And she is my friend and I have a great deal of affection for her. So if someone were to betray her trust...I would be quite upset.\"\n\n\"Is that a threat?\"\n\n\"Only if it needs to be.\"\n\nShe laughed. \"Well you may not like me...but I think I like you Feric. Why don't you trust me if I might ask?\"\n\n\"You aren't what you seem.\"\n\n\"Come again?\"\n\nHe turned to look at her full on. \"I look at you, and I see one thing, but every instinct in me tells me you're something else.\"\n\n\"Physically you mean?\"\n\n\"That's part of it, I'm sure.\"\n\n\"Well, it's true...so I can't fault you there. I am not anything in particular...and therein lay the problem. I tend to be whatever I need to be. It's part of my profession, you see. Bard's are master illusionists...or at least the good ones are. Often actors as well. Of course you're probably sensing the magic around me...\" She waved a hand about her as if gesturing to some unseen force hovering around her head. \"I have a number of enchanted toys, and a few permanent enchantments which allow me to make myself appear a particular way.\" ",
        "Her hair suddenly turned dark red...the same color as Ina's. He gaped. \"See? Tell me, are you a mystic?\"\n\n\"N-no, not really.\" Her hair turned back and she looked thoughtful.\n\n\"Hm. Inanna is, as I've said. In her case I suspect she could potentially be a very powerful one, but she rejects that aspect of herself. No, reject is too strong a word...neglects perhaps. My point is, she can see that about me as well. It irritates her. She finds me difficult to be around sometimes, for that and other reasons...but to be honest she pisses me off half the time as well. I love her to death, don't get me wrong, but we clash on some very fundamental points...we see the world in two very different ways.\"\n\n\"Then why are you so close?\"\n\n\"At some point in your life, if you haven't already, you will look death in the eye, and feel its inevitability revealing itself to you, crushing you. And if, at that moment there are arms that hold you, and a voice that brings you some small comfort, that tells you that you will not have to face it alone...well those arms and that voice will forever be dear to you. We've been this to each other...more than once. I've held that woman's hand as we walked into hell, expecting not to come out. So as much as we fight, and lord do we ever, it does not change the fundamental reality of our deep and unassailable affection for one another.\"\n\n\"That I can understand. Ina said something similar.\"\n\n\"And you must understand as well..Dunmer are odd when it comes to showing their affection. Real affection I mean. They will never and I mean never, throw around the word 'love.' Unless they're young and barely more than children, or just screwing with you...or talking about things they do in the sack. There isn't technically a word for it that matches it in their language. Well there is one word that is often translated into common imperial as love, but it's actually a courtier's term for 'want to make my companion', a gender free term for 'mistress'. But outside the courts you either like someone, sincerely, or you don't. You can lust after people to, but the word for that does not necessarily denote any lasting affection.\"\n\nThis he was curious about. \"How do they express their affection then?\"\n\n\"This is my favorite part of their culture,\" she smiled, \"the subtly of it. They don't. They don't have to. People assume they're cold or aloof, simply because they're perfectly reasonable. At least in my opinion. The fact of the matter is, if you're close enough to the person for them to truly care for you, then you'll know them, and you'll know what their actions signify. \n\n\"For example. I have many 'friends',\" she made a quoting gesture with her fingers to emphasized the sarcasm that was clear in her voice, \"many associates, supporters, companions, lovers, what have you, among those of the house Telvanni, to which I am allied, albeit as an outsider and junior member. Among those there are a very, very small minority to whom I would ascribe the term equivalent to 'like.' To the Dunmer it means to truly 'honor' and 'respect', and to take pleasure in their company. Of those, there is only one with whom I have sex for my own enjoyment, and for no other purpose than he amuses me. I know his returned desire for me is sincere since he gains nothing from our dalliance but similar entertainment and pleasure, and I know he enjoys my company because although he complains that I distract him, he has never once failed to invite me to join him as he works and when I leave, it is always of my own volition. Because I know him, and I know that he's a power-hungry shut-in whose home is riddled with traps and whose dining ware is enchanted with poison-detecting spells, and who would rather spend any given evening tinkering with ancient artifacts than going to a party or, god forbid, talk to people... because I know all this and much more, I know what a remarkable compliment it is that he offers to let me stay with him whenever I like, for however long I like. \n\n\"The first time he stopped me when I left his bed to go to my own room, and then actually fell asleep next to me as if it were the most natural thing in the world...well that was more significant to me than any actual declaration of love I've ever heard. You see where I'm going with this?\"\n\n\"I think I understand you, yes.\"\n\n\"Well like I told you...I know Ina, and she likes you. I'm willing to bet she trusts you as well, as you've said you trust her. My point is, that this is no small thing, and so I very rudely asked you if you loved her because I was curious to know if you returned her feelings.\"\n\n\"So you're essentially saying you think she loves me.\"\n\nShe shrugged. \"Basically, yes. So what is it? And don't worry I won't say anything. I mean if she knew we were having this conversation she'd probably introduce her fist to my mouth, repeatedly. Perhaps I should say reintroduce...since her fist and myself are already acquainted.\"\n\nHe chuckled dryly.\n\n\"Don't laugh, it's true.\" She muttered though pursed lips.\n\n\"I believe you...that's why it's funny.\" he grinned. \"You know I almost jumped on her when you two got into it in the street. I thought I'd have get between you because of the things that were coming out of her mouth, I was ninety percent sure she was going to set you on fire in about two more seconds. I mean, she's got a mouth, but generally she's perfectly in control of it and just likes to come off as being a little rough around the edges...but the things you two were saying were just plain cruel.\"\n\nShe laughed as well. \"Seems like maybe you have gotten to know her pretty well yourself. But you still haven't answered my question.\"\n\n\"Well, I've already told you that I trust her. I like her. And it's been suggested to me by my brother in law that a person would have to be deaf, dumb, and blind not to notice that I want her. And I have to believe him because my sister and second had already weighed in on the subject long before he had. So, that's that then, isn't it? Your trinity? What more is there to say?\"\n\nShe grinned. \"Equivocator.\"\n\n\"If you say so.\" He relented enough to smile back.\n\nOwyn suddenly appeared in the doorway, in a state of extreme agitation. Feric could feel his own metaphorical hackles rise at the waves of anxiety coming off the young lion. A brief moment of intense staring later he let out a gasp and his jaw twitched to work, but he found he couldn't quite force the words out. \n\n\"Challenged?\" Feric managed after a shocked moment.\n\nHe received an affirmative. And a moment after that he was racing toward the entrance, taking the stairs three at a time and skidding to a halt as he beheld his most recent nightmare. \n\nTo the right of the broken, winged statue, was Mirisa, her fangs bared and hackles raised. In the air was the faintest scent of blood...Ina's blood. A low growl filled his throat when he caught then scent. He caught sight of her a second later, circling the statue, staring Mirisa down. Her face was twisted with anger and frustration, and there was a rather daunting looking ball of flame readied in the palm of her hand. \n\n\"What's going on?\" The question was redundant, since it was obvious...but he'd be damned if he knew what else to say.\n\n\"You'll have to ask her.\" Inanna snarled, her eyes never leaving Mirisa's. \"She jumped me out of no where. Now she's messing with me like I'm some kind of over-grown mouse.\"\n\nMirisa snarled and circled to the other side of the statue as Ina tried to put it between them.\n\n\"Damn it Mirirsa, stop it!\" She shouted, \"What are you playing at? I swear if you get any closer I'll light you up like a torch.\" \n\nMirisa continued to circle, but wisely kept her distance.\n\n\"Mirisa stop this.\" Feric commanded, though it was more a plea since he knew there was little he could do at this point. He also knew this wasn't a death match...but Inanna didn't...and that meant it could get very ugly, very fast.\n\nMirisa only snarled again, effectively telling him to mind his own business, as expected, and continued to circle. Inanna let out a frustrated near growl of her own. \"You of all people know exactly what I'm capable of...don't do this...I'm begging you. Don't make me hurt you.\"\n\nHer voice sounded desperate, but it wasn't an empty boast. Yet they continued to circle, both watching the other cautiously. Mirisa, it seemed, also knew the truth of Inanna's words because she was looking a lot more unsure of herself than she normally did, and was clearly growing more concerned as the seconds dragged on. Perhaps she'd come to realize that Inanna really didn't have any idea of what was going on. \n\nIn truth, that fact was probably apparent to all watching by now. He noticed that there was an audience gathered. Cyrus, Lucas, and the cubs were still inside. Of those present only Aina looked surprised. \n\nHe cursed under his breath. If she had to know, then this wasn't the way he'd wanted her to find out. Then he wondered how the others had managed to figure it out on their own. After all, there was really only one reason for Mirisa to go at Inanna like that without provocation, and that was in order to honorably resign her position. And there was only one reason she should be inclined to do so. \n\nIn any pride he'd known of...it was generally tradition that the Head's mate would take a position either as second or co-leader, depending on ability or personal preference, the rare exception being when they were essentially incapable of it due to some great weakness or disability which made them a less than pragmatic choice. \n\nIn this case, Inanna had already proven herself a capable fighter, and useful to the group in numerous ways. The only problem was that she wasn't aware that she'd been made a member...had been for some time now. He had thought no one knew but him. It appeared he had been sorely mistaken.\n\nAnd now...now he was going to have to do something before this all when even farther south than it had already.\n\n\"Inanna...don't. She's just testing you.\" He called, somewhat uncertain himself about what to say or do. He wasn't supposed to get involved...but then this was an extenuating circumstance if ever there was one, wasn't it?\n\n\"Test like hell, the bitch drew blood.\"\n\n\"Mother Mara!\" A voice breathed next to his shoulder. He flicked his eyes toward it and saw Desdemona gaping at the sight. He sighed.\n\n\"It's...she's not going to hurt you...I mean, she doesn't want to kill you.\" He replied, trying to sound as sure as he could.\n\n\"Gee, that's comforting.\"\n\nMirisa took her moment of distraction to make a lunge. Feric was grateful to see that instead of blasting her, Inanna merely dodged again. \"Fetching hell Mirisa! Are we just going to dance around all day or are you going to back the fuck off and tell me what the hell is going on?\" \n\nMirisa did stop, and shifted. She looked from Feric to Inanna. \"You honestly don't know?\"\n\n\"No!\"\n\n\"We're fighting over the position of second.\" Mirisa tilted her head warily, waiting for a response.\n\n\"Okay that's clear as mud.\" \n\nMirisa frowned. \"You didn't tell her to expect that?\" She turned to look at Feric, who found very little to say in response. There must have been a good deal written on his face however, because hers suddenly dropped and she turned back to Inanna, her voice unusually tentative. \"When an alpha takes a new mate, it's usually tradition to scrap a little over the position of second, it's mostly for show. He should have warned you.\"\n\n\"Whoa...back that horse up.\" Inanna held up a hand. \"What the hell do you mean 'takes a mate'? I think there may have been a miss communication somewhere along the line here.\" Feric caught the glance she threw in Aina's direction. \"I mean sure we've...spent some time together...but it's a little early to be jumping to those conclusions, don't you think?\"\n\n\"So you know nothing of this?\" Mirisa asked her, disbelieving. Feric starting silently counting down the second he had left alive. Even he was no match for three pissed lionesses...even if one of those was technically an elf. A dangerous elf....\n\n\"I think I'd have noticed thanks.\"\n\nMirisa then looked to Bella, as did Feric. Bella frowned and nodded, and Mirisa's eyes went square. \"You didn't tell her?\" She asked turning her glare on Feric. \n\nBella's own eyes went wide. \"What?! Are you kidding? Feric, are you insane?!\" eight...seven...six...\n\n\"People! Will some one please tell me what in the sixteen hells is going on here!?\" Inanna looked around the clearing at the various expressions of shock, confusion, and anger. The expression that got her attention the fastest was the one of pure, stricken pain and guilt written all over Feric's face. Her stomach dropped into her boots so fast it made her head spin.\n\n\"What didn't you tell me?\" He had that same look on his face he had the night before they'd hit Wariel. \"Nu-uh...none of that nonsense. You're going to spill this time or so help me I will shred you within an inch of your life. What did you do?\"\n\nEveryone else suddenly piped up and there was a chorus of voices all calling loudly at once and not one was making a lick of sense. She winced but didn't break her glare at Feric.\n\nHis jaw squared in response. She too was about to start piping like a stuck cliff racer when he held up his hand to stop the noise. \"Enough.\" He growled.\n\nIt was weird. He spoke lowly, roughly...almost quietly...but just like that everyone fell silent. Even she suddenly lost the urge to say anything. He straightened and squared his shoulders, took one long look around, catching each eye, and finally landing on hers. Those eyes pinned her to the spot like a pair of green glass stakes. \n\nShe watched warily as he approached her. She was ninety percent sure it was just her imagination...but he suddenly looked bigger than normal...and it gave her strange flash backs. Not the fun sexy kind neither. More like, 'big lion, sharp claws and naked little Dunmer' flashbacks. She found herself suddenly wondering if she would be able to take him is she had to...could she even bring herself to do it?\n\nHe stopped about a foot in front of her and she turned her eyes up from the mass of chest to the hard jaw, and then to the intense green eyes. Maybe she was only sixty percent sure it was her imagination....\n\n\"We need to talk.\" He swallowed, and suddenly he seemed a tiny bit less huge, \"Obviously.\" His lip twitched, and the hardness in his eyes faltered just enough for her to see the sadness there. \n\nThere was a long moment of silence and the 'I'm fetching bigger than you' vibe notched back up again. He cast a glare over his shoulder at the now rapt audience. They stared back. Mirisa with an especially dark expression on her face.\n\n\"Alone!\" He bellowed. There was a brief hesitation, but eventually everyone scattered, leaving just the two of them in the clearing. \n\nShe crossed her arms over her chest and set her mouth, refusing to be cowed by whatever trick he thought he was going to pull with this 'big bad alpha' thing he had going on. \"Well?\" \n\nHe met her eye and deflated almost instantly. \"Come on.\" He grabbed her arm and pulled her after him, toward the woods.\n\n\"Hey!\"\n\n\"I'd rather this not be overheard.\"\n\nShe yanked her arm out of his hand. \"Ok, fine, but there's no need to get grabby.\"\n\n\"Sorry.\" He muttered. \n\nShe sighed and gestured for him to lead the way. She followed, watching his back as they moved through the brush going...wherever it was they were going. When they reached what he apparently thought was a sufficient distance, he stopped and faced her. He didn't speak right away, but put his hands on his hips and looked at the ground for a bit. \n\nShe resumed her 'impatiently waiting for answers' pose.\n\n\"Alright...\" he started, sighing deeply, \"I need you not to say anything for a few minutes.\" He glanced up into her face and she cocked a brow at him. He foolishly seemed to take that for agreement, and continued. \"I'm just going to lay it all out for you...from the beginning...so please wait until I'm done before you attempt to set myself or anything else on fire.\" \n\nThe brow inched a little higher but otherwise she kept her piece.\n\n\"That night in the clearing...by the pool with the waterfall...that first night, I bit you while we were...\"\n\n\"Fucking?\" She offered when he trailed off.\n\n\"Yes. Well, when my kind mate, when we bond with another, the male has to mount the female in the form of a lion, he then draws blood by biting the shoulder or neck...\" he trailed off again, clearly uncomfortable. Her cheek twitched despite her best efforts to restrain her growing amusement with his painfully obvious awkwardness. \n\nWhen he didn't continue right away, she sighed. \"Feric, this sounds way too much like the 'talk' you probably gave Aina. You screwed me as a lion. We had sex. You bit me. So what? I'm assuming you aren't trying to give me a lesson in anatomy. In which case I wonder what you are trying to explain. What is your point?\" \n\nHe glowered. \"My point is that biting you like that bonded you to me. I mated you. Period.\"\n\n\"Feric,\" she huffed with a frustrated sigh, \"I get that part...but what does it mean? What, are we like the were-lion version of married? And what does that entail exactly? And I'm not one of you...so...\" she spread her arms and gave him an expectant look. \n\n\"It means that to me, and my pride, that you're my mate...and what that means in your case is....unclear. As you say, you're not one of us so I can't know how it will physically affect you. For myself, I'm pretty clearly bonded to you. I know when you're close...I instinctively know where you are and how to get to you...and I don't want anyone but you. The others, in part thanks to Mirisa, will consider you to be not only officially part of the group, but one of the heads.\"\n\n\"Why would she do that?\" She interrupted, frowning. That didn't make much sense to her. Unless she was mistaken, Mirisa still didn't much like her. \"I mean...it's not like I would ever challenge her position in the group...I'm an outsider, what the hell kind of right would I have?\"\n\n\"That's just it. You aren't. Not anymore. And if I know her, she just wants to make sure there aren't any divisions in the group...not when things are so harried already.\"\n\n\"But she doesn't even like me?\"\n\n\"She likes you fine.\"\n\nInanna snorted. \"Got me fooled.\" She intoned dryly.\n\n\"She does.\" He was giving her his, sincere and earnest 'would I lie to you?' look. She was more than dubious. \"Besides, even if she didn't, she's more concerned with keeping the group united and functional than being vindictive or petty.\"\n\n\"All the more reason why she should keep her position. She clearly deserves it.\" \n\nHe grunted, nodding in agreement. \"Hell...I should give her mine.\"\n\nShe cocked a brow at him. \"Why's that?\"\n\n\"I'm the one that caused the problem to begin with.\" He shook his head wearily. \"Inanna...I'm sorry. I never intended for this to happen...I certainly wasn't planning...well, anything. I barely know how it happened. You were...the way you looked, the way you smelled...I was just suddenly there and every instinct in me was screaming at me to do it.\" His eyes turned beseeching. \"Please, I'm not making an excuse, but believe me when I say I would never have done something like this consciously, not without your permission. I have no idea what got into me.\"\n\nShe stared at him a bit, not completely sure about what she had to say to that. She didn't know what she thought about the situation, if she were to be honest. It did give new context to her own odd behavior over the month or so. What that signified remained to be seen however. \"Ok.\" she said, after letting her head spin unproductively for a while.\n\n\"Ok?\"\n\n\"I don't know what else to say. No...wait...I do have one question. Why?\" \n\nHe frowned. \"Why?\"",
        "\"Yeah.\"\n\nHe shrugged uncomfortably, \"As I said, it was just...instinctive. I can't give you a why, other than to say that I must have, on some unconscious level, wanted you badly enough to claim you.\"\n\nShe rolled her eyes. \"No, you moron. Who gives a shit about that? So you bit me? You got excited, got carried away and bit me. Instinct, heat of the moment...shit happens. It's not like you severed a fetching artery.\" \n\nHe was frowning again now too. \"But I bonded with you...without your permission. The effects...we don't even know what those could be...\"\n\n\"You seriously think that's what I'm more likely to be pissed about?\" She get her jaw and glared, hoping the light would go on in that thick head of his. Nothing. \"Why, Feric? Why didn't you fetching tell me!\" Her voice raised naturally, and something small startled in the brush near them at the sound. She ignored it in favor of continuing to glare him down. \"Did it not occur to you that this would be information I might need? That you should probably let me know that you may have altered my life in an incredibly vital way. If I'm your mate...shouldn't I know that?!\"\n\nFeric gaped. It wasn't quite the reaction he'd expected. Anger, certainly...but over the bit about mating with her without her knowledge or permission...which didn't seem to upset her all that much.\n\n\"So...\" he began hesitantly, \"you're not upset that I claimed you?\" She rolled her eyes, and he felt his brow arch in disbelief. \n\n\"That's the one part of this I get...that I'm sympathetic with. For Azura's sake, you clod...think about it! I'm a lot of things, and I'm sure as hell not perfect, but I'm not a hypocrite. I'm not going to tell you to trust your instincts all the bloody time then get pissed at you for it when you do. Granted it's messed up...and frankly...I don't really know how I feel about it yet...but tell me if I'm wrong. Is it wrong to be upset that you kept this from me? We've been working together...we've been partners on all this and you fetching kept this from me!?\" She threw her hands up in frustration and started pacing back and forth. \"I mean, gods! Is there anything else you'd like to let me in on? Dammit, I need to be able to trust you...I did trust you...I'm of a mind to deck you....seriously.\" \n\nHer expression was a turmoil of confusion and frustration, and her eyes burned with emotion. Behind the anger there was a sincerity and vulnerability which left him a little speechless.\n\nFor some reason, it also left him feeling strangely calm. And then something shifted and clicked into place. She wasn't angry about what he'd done, just that he'd kept if from her. He might have smiled if she wasn't still glaring a hole through his head.\n\nHe stepped forward and grasped her by the shoulders. \"It was never my intention to deceive you. I didn't tell you at first because I wasn't sure it even affected you...and I wanted to either find some way to undo the binding or fix it before you had to deal with it at all. I didn't want to trouble you with it if it was unnecessary. Hell, I half expected never to see you again. But then I did, and eventually it became apparent to me that you might be affected after all.\" He dropped his hands from her shoulders and squared them.\n\n\"And?\"\n\n\"And when it did, I started to rethink it all. I made up my mind to fulfill the claim. I had hoped to convince you to stay with me of your own accord. But the fact is I've claimed you...and that's all there is to it. It should never have happened the way it did, and I handled it poorly, and for that I apologize and hope to eventually earn your forgiveness.\" He braced himself. \"Honestly...I am sorry for not telling you, it was cowardly of me, but I can't say I regret having done the deed to begin with. Now that it's done, I can't bring myself to be sorry.\"\n\nHe waited for a response and she just stared. After a while his courage left him and he felt himself deflate again. \"Inanna?\"\n\nShe seemed to shrink as well, suddenly looking very tired. She brought her hands to her face and rubbed with a frustrated sigh. She straightened, and he watched cautiously as she gnawed on her bottom lip and glanced upward as if looking for divine inspiration. Without warning she turned and began to walk away.\n\n\"Inanna?\" He called again. She didn't answer, but waved him off. His stomach lurched and he started after her.\n\nShe did turn then. \"No...\" she called over her shoulder, pointing an accusatory finger at him. \"You stay there.\"\n\n\"We should talk about this...\"\n\n\"Oh, you think so? Now you do. How convenient.\"\n\nHe bristled. \"It's not like that Ina...\"\n\nShe huffed out a great breath and turned back to face him. \"I know that, Feric. I know it isn't. But I'm... pissed off. I don't want to talk about it right now.\" Her hands fisted and she turned away, muttering from over her shoulder again. \"Because...\" her voice hitched slightly, and she straightened, turning her face to glare once more. \" 'Cause...I just might break your face...and as it happens I like it the way it is...so back off.\"\n\nShe didn't wait for a response but turned on her heel and marched off into the trees. He watched her go and didn't follow. After a long moment of staring into the trees, he sighed.\n\n\"That went a bit better than expected.\" He whispered softly.\n\n**\n\n\"Go away.\" Inanna groused from behind her hands.\n\n\"Don't worry dear, I'm not going to make you talk about your 'feelings'. I just want to know if we're still on. Shall I make my way to the capital tonight as planned?\"\n\nShe removed her hands and let her arms flop to her sides. She turned to look at Desdemona who loomed over her. \"Yes, please, go away.\"\n\n\"Well, that's not very nice. Don't be petulant Ina...it'll give you wrinkles.\"\n\nShe huffed and sat up, resting her arms on her bent knees. \"It's nothing to do with my 'feelings'. The faster you get there and work your mojo, the faster we can be done with this.\"\n\nDes dropped elegantly to her knees beside her and folded her hands in her knees. \"Don't let your impatience get the better of you. Sometimes patience is the tool which best serves us.\"\n\nInanna glared. Des smirked. \"Yes, well. Don't make me cite past examples.\"\n\n\"I don't want to talk about it.\"\n\n\"talk about what dear?\"\n\n\"I don't want to talk about it.\"\n\n\"Really, Ina...\"\n\n\"I don't want\u2014\"\n\n\"Oh, come on! What's going on, what did he say?\"\n\n\"I don't want to talk\u2014\"\n\n\"Stop it you cur, just give me a little something to tide me over...it doesn't have to be much...just a tiny taste...\"\n\nShe sighed. There was no point in fighting her. She was relentless. \"Apparently he bonded with me and inadvertently married me. Or something.\" She admitted grudgingly.\n\nThere was a long pause which made Inanna glance up to see her friend's expression. It was unnervingly stoney.\n\n\"Inadvertently?\"\n\n\"Don't be that way Des. It's...complicated. He said it was an accident...sort of...and I believe him.\" She sighed. \"We'll figure it out...I just want to get this crap with the hunters dealt with first.\"\n\n\"Tell me, how does one 'accidentally' marry someone?\"\n\n\"I said I didn't want to talk about it. And stop looking at me like that. I know damn well what you're thinking and you're wrong. Des...\" She warned. She could see the thoughts spinning in her head, and knew exactly where they were going. It all sounded a little too familiar to her own ears as well. \"It isn't like that...not anywhere near. It's not the same, he's not the same...and I'm not Emily.\"\n\n\"You're the one who said it first. Interesting that you should bring up that particular comparison.\"\n\n\"Fuck you Des.\" She said the words, but there wasn't that much feeling behind them. In a way she was right...but this was different...completely different. \"He's...he's just not like that. You can see it can't you? And you know I'm not like her. I'm not that naive.\"\n\nDes sighed and shifted so that she was sitting beside her. \"No...but he's very handsome, and very charming...and you do still have a heart...\"\n\n\"Oh please.\" She rolled her eyes.\n\n\"I'm not saying you're sentimental...far from it. That's what worries me in fact. It's all fun and games until it's not...right?\"\n\n\"Des...seriously...\"\n\n\"Yes, I know. You don't want to talk about it. We're years older...but no wiser it seems.\" She smirked when Ina glared again. \"Fear not, I include myself in that. Well,\" she clapped her hands together and rose to her feet, \"I guess I'll just pack up my toys and see myself out then. I showed Aina everything, as you requested\u2014 sweet girl that one\u2014and have set everything else up as I said I would. It isn't optimal, but we're short of time and this place isn't terribly convenient in terms of defensibility.\"\n\n\"That's fine. I figure we're looking for a way to buy time so we can get out if need be.\"\n\n\"Hopefully it won't be necessary.\" \n\n\"Cheers to that.\"\n\n\"So shall I expect a visit in the near future?\"\n\n\"Yeah, who should I look for?\"\n\n\"I'll be an out of town Telvanni, but I'm not sure where I'll be staying. It's very likely that I'll be under the name Elaine De Beaumont.\"\n\n\"I remember that name. An oldy but a goody.\"\n\n\"Indeed. It's been a while since I last used it, but it was, as you recall while dealing with the Telvanni, so it should provide adequate cover if anyone starts asking difficult questions. My friends and associates will recognize the nature of the cover and will respond appropriately I'm sure. 'oh yes, Muthsera De Beaumont, I met her once at a party. Charming, but not worth the effort of looking into. Was in Vivec last I heard...or was it Balmora?'\" She paused and looked at her nails. Inanna eyed her warily.\n\n\"Drop it Des.\"\n\nDes sighed and let her hand fall into her lap. \"I'm sorry, I can't. Granted he seems nice enough, and I admit I don't know him as well as you...but doesn't this seem a little odd? A little convenient?\"\n\n\"Ok, what? What the hell is convenient about it?\"\n\n\"Well, all of a sudden he's got you running around hell's half acre on a search and destroy mission looking for his enemies. And now you're bound to help them whether you like it or not. I mean what does this 'bonded' even mean? Could he have control over you?\"\n\n\"Oh my god Des, really? Think about it. This hasn't changed my mind at all. And I'm not in his pocket. I'm helping because I want to. And how the hell is this convenient for him? You saw the look on Mirisa's face. I bet even as we speak she's tearing him a new one. Not that he doesn't deserve it, the fetcher.\"\n\n\"So what is it? Are you going to defend him? Or is he a fetcher?\"\n\nShe made a face at her. \"Both. Leave me alone.\"\n\n\"As always you are the living contradiction.\"\n\n\"I'm complicated.\"\n\n\"What you are is inconsistent and you take unnecessary risks.\"\n\n\"Shut it mom.\"\n\n\"Fine. I'll go. But do talk to me when you figure it out.\"\n\n\"Fine.\"\n\n\"Fine.\"\n\n\"Oh, by the way, you want me to bring anything when I drop into the city?\"\n\n\"No, I should be set up. Though, if you're in Skingrad for some reason and you come across those little chocolates they make with the wine in them...\"\n\n\"I'll see what I can do. Watch your ass in the city.\"\n\n\"Toujours. Salut ma belle.\"\n\n%%%\n\nFeric was torn. He knew what he was doing was cowardly...and that it was that same cowardice that had kept him from telling her in the first place. It was the very reason Inanna wasn't speaking to him, but here he was anyway. Running...hiding...a coward.\n\nMoving though the brush he tipped his head and scented the air. He was too far from Cyrus to make contact but close enough to know where he was. It had been his idea to go on a tracking mission with Cyrus...the one person he knew was unlikely to spend the trip chewing his ear off . \n\nLucky for him Cyrus was also their best tracker, so it wasn't even suspicious. Of course that didn't stop Mirisa and Bella from giving all kinds of knowing and accusatory glares. Though, he'd rather have that then what Ina was giving him: nothing. She was glacial. Not that he blamed her, but every time he entered a room and she blithely went on doing what ever she was doing like he was perfectly invisible was another knife in his gut. So he left. He had to. One more day of that and he wasn't sure what he'd do. \n\nThe only person who wasn't punishing him was Aina...much to his surprise. He'd gone to her almost immediately after Inanna had left him standing with his foot in his mouth and his stomach in his proverbial boots. He'd explained as much as he could to her, and as honestly as he could, though it was a rather awkward subject to broach with his own daughter...all things considered. She'd been quiet, then asked how Inanna had taken it. Then she'd looked him in the eye and asked if he loved her. Just like Desdemona had.\n\nWhat could he say? He wasn't going to 'equivocate' with his own daughter like he had with Desdemona, so he answered honestly. She just nodded then patted his knee consolingly and told him not to worry, that it would be ok.\n\nHe huffed and glared into the trees ahead of him. When did that happen? Wasn't he supposed to be the one telling her that? As much as he hated to admit it...Inanna might have been right about her. \n\nHe lifted his head, hoping to catch something interesting which might help distract him. Nothing....but Cyrus was closer....and closing in. He frowned. It wasn't long before their paths converged.\n\nHe'd found a number of scents which seemed like good leads...and they were heading in the direction of one of the abandoned forts which lay hidden in the foot hills. They pursued it and after a few hours surveillance tested the theory by setting a trap. If they were hunters rather than just bandits, then they'd recognize the trail they'd left them for what it was.\n\nUnfortunately the few who stumbled upon the hint seemed not to pick up on it. Feric was about to call it a bust when two new figures emerged from the fort. He recognized one of them immediately. It was the mercenary who'd argued with Inanna and had been arrested by Max while they escaped the waterfront district. \n\nSatisfied, he and Cyrus turned back, though they were careful to obscure their true path as they went. They'd found them, yes, but the last thing they needed was to inadvertently lead them back to the den.\n\nThey were a little under a day's travel away. It was uncomfortably close in his opinion. However, if they took this group out, that might buy them a few weeks reprise, a few weeks which Ina and her associates could use to track down the heart of the enterprise...and hopefully put an arrow through it. He had to admit, he'd like to have the opportunity to tear out their throats himself, but in the end he just wanted to see it over. Ultimately it didn't matter to him how that was accomplished.\n\n**\n\nInanna didn't leave until Feric did, and until she was satisfied that she'd tortured him past endurance. He'd actually lasted a good deal longer than she'd thought he would. Which put her a day or so behind schedule. That just meant she'd have to make up the time some other way...sadly that seemed to mean a horse.\n\nShe winced and adjusted for the umpteenth time. The first couple hours hadn't been so bad...but by the time the city bridge was finally coming into view she was beyond ready to turn this damn thing in. It didn't help that it tried to bolt every time it thought it saw something it didn't like. Siltstriders, now there's an elegant way to travel. Safe, comfortable, and fast. No jittery rental horses, or saddle sores. If only.\n\nShe gladly left the horse at the stables and set out for the rest of the journey on foot. She wanted to hit the shrines before she dropped in on Des.\n\nShe didn't expect much help...no more than the platitude laden advice she got from her own ancestors that is. With that in mind, she decided to head to Kyn first, thinking that, despite her own tendencies to favor Daedra, she might be inclined to help considering one of her peoples...or animals...were on the line. It took most of the day to get there, so she ended up heading to Skingrad and spending the night first...though not before tracking down those chocolates Des wanted. They were actually pretty damn good.\n\nThe next morning, through a combination of bad directions from the local priests and aimless wandering, she managed to find it...though it was rather late in the morning...actually it was pretty much noon, when she did finally spot it.\n\nIt wasn't really what she expected. Normally the nine had proper churches and cathedrals in which the shrine was kept...this was actually more like a Daedric shrine, just sitting out in the open under a canopy of trees. Nature goddess...made sense if you thought about it. \n\nThere was an older woman kneeling in the small clearing in front of the statue, her head bowed in prayer. She was wearing what looked like some kind of rough, scratchy robe, like a penitential pilgrim's. Inanna looked around for someone more priest like, but it looked like it was just them chickens. \n\nShe shrugged, dropped her pack, arrows, and bow in a pile, and went over to kneel beside the woman, taking up the same position. The woman wasn't speaking, so it might be that these imperial gods didn't use words in the traditional sense. \n\nShe wasn't sure how long she knelt there waiting...but it felt like an eternity. When her knees started to ache and complain she leaned over slightly toward the woman...who still hadn't acknowledged her.\n\n\"Sorry to interrupt...but you wouldn't happen to know how one summons the attention of this god, would you?\"\n\nSlowly the woman turn to regard her. Her face looked like it should be friendly...old, soft, big brown eyes...and yet it so wasn't. Inanna raised a brow.\n\n\"This is not a Daedric shrine Dunmer, you do not summon Kynareth. If she want's you, she will summon you.\"\n\nInanna grinned. \"That's what they all say, but get them a big enough sacrifice and they're all ears.\"\n\nThe woman's eyes darkened. \"Again, this is not a\u2014\"\n\nInanna waved dismissively, cutting her off. \"I know, I know. I just need her help and I've never dealt with one of the Nine. I was just teasing, I don't mean to be offensive.\"\n\nThe woman still looked sour. \"If you wish to pray for guidance, then pray.\"\n\n\"I would...but like I said I don't really know anything about the nine so I don't know how to go about praying. You wouldn't happen to have crib notes or anything? Is there an incantation? Ruins or something?\"\n\nShe turned away and bowed her head again. \"Just say what's in your heart.\"\n\nInanna cocked a brow at her. \"What does that even mean?\"\n\n\"If you don't know, then I don't know how better to explain it.\"\n\n\"Ok...I am really sorry for disturbing you, but isn't there supposed to be some kind of priest or something? You know, those righteous fetchers with the shiny robes. The Chapels are crawling with them...\"\n\n\"I am the priest.\" She grumbled, still bowing her head toward the statue.\n\nSuper. Inanna sighed, cast a sidelong look at the priestess and then bowed her head and closed her eyes, hoping that mimicking the woman would help.\n\nShe sighed deeply, shrugged, and started talking.\n\n\"Umm, dear Kynareth.\" It wasn't a great start, but what the hell. \"I don't know if you're aware but there's sort of a genocide on right now that you might be interested in. I'm here as, um, a representative, I guess, of a people who call themselves your children. Were-lions? Ring any bells? If so I'd like awfully if you'd give me a hand finding the people responsible for their on-going massacre so I can stop them in as unambiguous a method as possible.\"\n\n\"Now, I don't know you and you don't know me, but these people call themselves the children of Kyn, so you must have some kind of investment in them, even if only as your followers. Or the fact that they're, you know, part time lions. I hear you're into the whole wild animal nature thing.\"",
        "\"So, with that in mind I've coming here to beg assistance. More is better, but at this point I'll take what I can get: information, blessings, spiffy weaponry...whatever. Or, I don't know, send guardians to help protect them. Anything. Though frankly the warm fuzzies you particular gods seem to trade in, while swell, aren't going to be that useful. Think practicality.\"\n\nShe frowned to herself and considered what else she had or wanted to say. There was something, in her heart, as it were, but she hesitated to say it, all things considered. Well fuck it, the broad told her to. She should know, she was the priestess right? \n\n\"Ok, since I'm here and I'm apparently supposed to be saying what I think, or feel, or what ever the hell 'in your heart means', I have to say that you are kind of disappointing as a mother. I thought you Aedra were supposed to be all cuddly and sympathetic. I get the tough love thing, I really do. Letting your kids duke it out, live or die by their wits, being stronger for it...but come on, this is just unfair. Even my own mother, who was the queen-imperial of tough love, would have at least offered some advice by now. Seriously. They're getting hunted down to extinction. As far as we know there's one pride left, and that one has been on the run for decades. Decades! Did you seriously not notice that? If these were my kids I'd be on their ass like white on rice.\"\n\n\"I know you god types reeeeally don't like us lowly mortal scum getting too big for our britches, but sometimes these things just need to be said...you know? Plus don't you people have all kinds of deus ex machina hoodoo all set up and waiting in the wings? Maybe some implausible hero who can ride in and save the day? 'Cause I could totally use one of those right now...it would really cut down on my work load. If this is the case, and we just haven't gotten to that part yet, could you, I don't know, give me a sign or something? So I know to just go about my business and stop worrying about it?\"\n\nShe cracked an eye and peered up an the statue. It peered solemnly off into the distance. She did notice that the priest was staring at her like she'd just grown a new head. \"What?\" she asked. \"Did I do it wrong?\"\n\nThe woman's look of...what ever it was, got stronger and she tipped her head as if trying to figure out what she was looking at. She was about to reiterate her question when a lion appeared in the corner of her eye. \"Huh, would you look at that.\" the lion was smaller, too small to be one of hers she decided, since it wasn't Mori or Ambrose...and it didn't 'feel' like one of hers either. Just your standard run of the mill mountain lion. She didn't like how close it was to her bag though.\n\n\"You think that's my sign or did it just smell food in my bag? Hey! Lion! Eat those chocolates and I'll stuff and mount you.\" And not in the fun way, she added silently with a mental chuckle. It looked toward her and cocked it's head, surprisingly calm, all things considered. \"That's right pussy cat, I'm talking to you.\" she dusted off her legs and stood, deciding for the moment to ignore whatever look the woman was giving her and focused on the cat. \"So...great timing and appropriately cat like. Are you my sign? If so, what do you mean?\" She tried sending out magica feelers, but she got nothing...it was just, apparently, a cat. It looked at her for a bit, then moved on. Her bag remained untouched. \n\nShe decided if anything she'd take it as a good open. The cat didn't look angry like they normally do around people, and it didn't steal her stuff. By her measure that was a good thing.\n\n\"It's a blessing.\" The woman had stood up beside her and was now watching the forest where the cat had disappeared to.\n\n\"Oh yeah? What kind? Do I get magical cat powers or something?\"\n\nThe woman frowned again. \"Are you always so crass?\"\n\nIanna grinned. \"Yes.\"\n\nThe woman sighed and shook her head. \"I won't pretend to understand what you just spoke of...but I have heard of the legends of the children of Kyn...but those are ancient and lost to us in these days. It is clear that she supports your efforts and this has been a sign of that.\"\n\n\"Alright. So this is going to be one of those\" she gestured ambiguously to the air around her head, \"...fare thee well stalwart soldier deals then? She wishes me luck and generally hopes I make it out alive, but that's more or less it?\"\n\nThe woman looked up to the statue and then back to where the lion had stood. \"I cannot say. Sometimes the gods work in mysterious ways.\"\n\nInanna scoffed. \"Yeah...and sometimes they're just waiting and seeing, and hedging their bets like the rest of us. But\" she countered, and turned to the statue. \"I'm glad to know you're interested at least and thank you for humoring me. I just mean to be helpful to them...but I'm sure you know that, what with your being a god and all.\" she bowed low at the waist. \"Hopefully if I'm ever back in these woods, I'll have better news for your divine ears.\" \n\nNot knowing what else to do or say she simply turned and fetched her things. The priest was still watching her. \"Do I pay you or anything? Like, donations?\" She asked while shouldering her pack.\n\nThe woman did smile at that. She opened her arms and tipped her head back. \"What need have we for money who have for our walls the mighty cedar and the sky as our celestial ceiling?\"\n\n\"Food?\" Inanna hazarded, regretting it the moment she did. It was never good to give a priest an opening to sermonize. \n\nShe turned her gaze back to her. \"What is needed, Kyn provides.\" She said simply, and turned back to the statue. \n\nWell, that wasn't so bad. The priests of the tribune just went on and on and on if you let them. She could get used to this. Though she wasn't totally comfortable with the distant, ephemeral nature of the Aedra. A Daedra isn't too good to at least tell you to kindly fuck off if you're bothering it. Aedra seem kind of...uppity.\n\nLuckily the trip to Hircine's shrine was a quick one. She'd come across it before in her travels so it didn't take too much wandering around in the woods to find it. And as an added bonus she recognized one of the legionaries headed down the road. So she was able to buy a ride for the low, low price of a thigh grope and a smack on the ass. Cal always was the handsy sort...but harmless enough. \n\nOnce there, a much more familiar sight greeted her. A preacher was standing on a stone near the statue, and a number of followers were sitting on benches in front of the sermonizing Dunmer. Behind him rose the weather worn statue of a man with a stag's head, flanked with hounds, and a number of sacrifices piled before the alter.\n\nShe sat on the nearest empty bench and waited politely for the sermon to finish. She'd missed most of it...but it sounded like he was explaining how whatever she had missed was an allegory for the hunt...or maybe that was the other way around...regardless, it was pretty trite and obvious from what she could tell. Though, when he began reciting the four steps of the kill, she found herself listening more intently.\n\n\"...Stage One -- The Drag, in which the Lesser Dogs drag the ground to flush out the Hare. Stage Two -- The Chase, in which the Greater Hounds drive the Hare before them. Stage Three -- The Call, in which the Greater Hounds trap the Hare and summon the Huntsmen for the kill. Stage Four -- The View, in which the Huntsman makes the kill...\" \n\nThat was something to ponder. She gnawed her bottom lip thoughtfully. In her head she began her own allegorical comparison. The drag...were their hunts...and now the attacks on the forts which flushed them out and put them on the run. The Chase, was catching wind, or sight of the prey...what they were doing now with Des and the thieves. The call would be next. For some reason the word 'trap' was strong in her mind.\n\nHircine liked his hunt to be a two way affair...where the hunter could become the hunted at a moments notice. So what was true in one direction was true in another. Her stomach shifted in a way she didn't like. It was more than possible that while they were on step two, the enemy might already be working its way to three...or worse...the thought caused a deep frown to cut furrows in her brow. With a dangerous and clever prey, it was best to assume that you were already a step behind. The thought didn't sit well with her.\n\n\"Praise be to Hircine,\" she muttered when he finally finished. She waited an appropriate period of time before making her way up to the statue and the acolyte guarding it.\n\n\"What is it you desire friend?\" He asked as she approached.\n\nShe gave a half-bow. \"To give petition to intrepid Hircine.\" She hoped she'd said it right. She'd only dealt with Morrowind temples and they tended to be run a little differently. He arched a brow.\n\n\"You must first make an offering.\"\n\nShe cast an eye to the foot of the statue and could guess what that offering typically was. \"I don't suppose he'd be interested in trying something new?\" the previous offerings were the skins of bears and wolves...some how she didn't think Kynareth would be too thrilled by that. \n\n\"Petition demands an offering.\" He reiterated staunchly.\n\nWell ok then. She really didn't have time to go running around on a hunting trip if she didn't have too...never mind Kynareth...so, what to do? What to do?\n\nWhen in doubt, bluff. She put her hands on her hips and sauntered boldly up to the statue, looking up into its strange deer eyes. \"Serjo Hircine.\" No reason not to be polite, after all. \"I am on a hunt for a mysterious and formidable prey...time is of the essence. So, if you want a hide, of wolf or bear, send me one of your great hounds to gut, or better yet, appear before me in one of your aspects and I'll skin you were you stand.\" \n\nNow there was really only three possible reactions to this. The first and most likely was that the Daedra would ignore you. The second was that they'd take up your challenge and kill you but good. The third was that they'd think you were awfully cute and funny, and decide to humor the amusing little mortal. She was aiming for the third.\n\nTo her surprise a strange and hollow voice filled her head. \"Mortal we know of your quest. Why do you importune us without a proper offering?\"\n\n\"I'm trying not to piss off Kynareth.\" she responded aloud. \"If there's something you'd like me to hunt for your sake which doesn't involve her furry little woodland creatures, I'd be honored to do it.\" \n\n\"You will give gold then...but only this once. I approve of your hunt, and have an interest in your success, and so I will allow you this courtesy so that you will not lose your trail. Do not test my patience again.\" Interest? That could be very good or very bad.\n\n\"You're very gracious my lord. May I ask what interest it is you have in my lowly mortal affairs.\"\n\n\"I have watched this particular hunt for many years, and you have made it more interesting by far. Fresh hunters and fresh prey. The end of the hunt is near and wagers as to your success have been placed. Your master and I are in accord on your success.\" Well it wasn't terrible, but it wasn't good either.\n\n\"My master?\"\n\n\"Lord Boethia, of course. She feels that you will triumph. I am not as certain, but you have proven yourself most entertaining thus far. I have not been disappointed.\"\n\n\"Ah, of course. Give my Lord my best when you see him...er, her. I'm terribly flattered and gratified by your confidence, but it is unfortunate. I'd hoped to ask for assistance, but if there are already wagers involved then you are no doubt obliged to remain neutral.\" \n\n\"True, but you are also a supplicant at my shrine who has come of their own freewill. I can not assist you directly, but my acolyte will.\" Inanna looked toward the acolyte and noticed the Dunmer stiffen and get a far away look in his eyes. \"Give your offering of gold, and receive your blessing. I will tell you only this, that you hunt a beast with many, colored arms, but only one, golden head.\"\n\nGolden head? What had a...Altmer! A fetching Altmer, and probably a necromancer...figured. Fetching S'wit! She could think of no one more deserving of an arrow through the cranium. She heard a low chuckle in her head and guessed that the Daedra had been party to her thoughts. \n\n\"Good luck hunter.\"\n\nAnd then he was gone. Her head felt oddly empty and silent...which was a disconcerting feeling. She shook it off and cleared her throat. \"So, your boss says we're good to go...\" She pulled open a pouch she had hanging off her belt and took out several gold septimi. \n\nThe acolyte accepted them, seeming to have shaken off his own momentary daze, and motioned for her to kneel before him. She did and closed her eyes as he placed his hand on top of her head and began muttering a prayer...or perhaps it was a spell...it was difficult to tell. She felt something strange shoot through her, tingling like inner fire and filling her. It felt like it was in her blood, her veins, her skin. The tingle withdrew inside of her until it seemed to condense itself, concentrating in a few choice places...her head especially seemed to buzz with it. \n\nEventually it dissipated until there was just a residual echo.\n\n\"Go supplicant, with the Hunter's blessing. Be swift of foot, strong of arm, and sharp of mind.\" The Dunmer removed his hand and leaned in, speaking in a voice only they could hear. \"And if it's Altmer you're hunting, get some good reflective spells.\" She looked up, surprised, wondering if Hircine had told him or if he'd somehow been party to the conversation. He smirked, in friendly enough way, and stepped back so she could rise.\n\nShe did, looking around. Some people were watching curiously, but most were occupied in prayer. Supplicants to Daedric shrines weren't totally uncommon...nor was their receiving a response...though it wasn't always a positive one. She was happy to take what they would give her...but something more concrete would have been nice. Then again, Altmer was a start. Not an X marks the spot...but surprisingly helpful coming from Hircine. After all, it was the hunt he enjoyed...not necessarily the kill. \n\nShe thanked the Acolyte and collected her things. It was already close to sundown. It would be dark when she reached the city, not a good time to be wandering the woods. Then again, she'd rather wander them then sleep alone in them. \n\nThe walk back to the city was surprisingly uneventful. The woods were quiet, and all she encountered on her way were a handful of startled deer who took off, leaping over a creek bed and off into the trees. \n\nShe came into the waterfront district from the wrong side, which was probably why they didn't see her. Two men were loitering suspiciously near her shack, keeping a watchful eye, it appeared, on both entrances. She winced and melted back into the shadow of the trade houses. \n\n\"Fancy meeting you here.\" A voice whispered in her right ear, making her swallow her tongue. \n\nShe twisted her head sharply at the sound and was relived by the brilliant white smile which greeted her. \"A,\" she breathed, \"you gotta stop doing that.\" His smile seemed to leap from his dark skin and the shadows around him into which he so easily blended, it almost seemed disembodied. Redguard were dark like Dunmer, only their skin leaned to shades of red tinged brown where Dunmer tended to be more blue or grey. Though she'd met one Redguard so black she thought he looked near blue in the sun...though in that case she almost suspected him of having Dunmer blood in there somewhere.\n\nArmand, or A as he was called, was a Doyen for the thieves guild, and a damned good one. \"Come.\" He pulled her deeper into the shadows. She knew better than to argue. He slipped them into a hidden door behind his house which lead them beneath the shipping buildings of the harbor. The staircase was cool and empty...silent. He pulled them through a few corridors until they came to an unassuming door. Inside it was bright and warm, and a good number of people were about, filling the air with a pleasant hum of chatter. A few people looked up and nodded or waved a greeting, but most were deeply involved in their conversations, or in their dinners. \n\n\"You eaten?\"\n\n\"No, not yet. Just got into the city.\"\n\nHe nodded sagely. \"As you can see, it's not a great place for you to be right now. Words out apparently, and it seems they know who you are...I dare say they know about your other home as well, or will soon.\" She nodded. It wasn't surprising...unfortunate, but not unexpected. It meant she couldn't linger. She'd have to check with Des, and then get her ass back to Cheydinhal asap. Even if it meant a horse again. \n\nHe sat her down and went to get them something to eat. She took a moment to look around. She'd been here before, it was sort of like a 'guild hall' for those in the loop. It was a lot less formal though, so it looked more like the common room of an inn and had more of a communal feel than most guilds. Here business was conducted in dim corners over drinks, not over a desk with formal writs and orders...and bonus, no paper work. After all, you didn't want anything to be tracable.\n\nHe came back with stew and bread and they got down to the business at hand. He apparently already knew all about Des, which was both disconcerting and convenient, and had arranged for an operative to sneak her over once they were done. Dar'jirra, her name was, the same one the last thief had mentioned. \n\nWhile they waited for her to arrive he filled her in on what little they had. They had a list of names of regulars who were seen at the Red Diamond jewelers for her to pass on to Des, and an identification on the merc who'd pissed her off last she was in the city: an Imperial who lived in the city and currently went by Fenius, though they were ninety percent sure that was just one of many names. Disconcertingly, he'd been recently seen leaving the city, but the tail lost him north of the Yellow Road fork. She really didn't like how much closer that was to Cheydinhal. \n\nThankfully Dar'jirra was prompt and didn't make them wait too long. She thanked A for the intel and the food, and was off without ado. Another great thing with this group, they all understood that if you rush off it isn't personal, and that time is of the essence when there's business to be done.\n\nDar'jirra was every bit the sneaky thief she'd been led to believe she was, and led them with startling speed and competency through the under works, avoiding the usual pitfalls one finds in ancient sewers with aplomb. Sneaking was generally done silently, so there wasn't much talking. Inanna did take the time to check out what she could, though with the leathers and hood there wasn't much to see. She was the typical slim, gracile khajiit one usual associates with the prefix 'Dar'. She was even a bit shorter than Inanna, though not by much, and fine featured from what she could see. Her muzzle and the tip of her tail was a dark brown, and the rest of her visible fur the color of caramel. When she smiled at Inanna and paused at a trap door, her teeth were little pointed daggers, bright against her dark muzzle. She pointed up toward the door. \n\nInanna bowed her thanks, and the female bowed back and slipped off into the dark tunnels. The door was unlocked. She opened it cautiously and peeked into the room. It was a cellar, and not an interesting one. There was a lamp lit in one wall sconce which was enough to let her know that the coast was clear.\n\nShe carefully made her way up the stairs, pausing to listen at the door...which didn't do much good since it was pretty thick. It was also locked. Damned inconvenient. She cast a life detection spell and noted there were two warm bodies on the first floor...still not that helpful actually. She had two options. She could pick it, or she could just knock. In the interest of time, she knocked...hoping she was actually in the right place.",
        "Dar' Basha appeared in the doorway before her, another lamp in hand, looking more than a little surprised to find a Dunmer in his basement. She grinned. \"Good evening sir, could I interest you in the latest edition of the Encyclopedia Imperial? For just a few, low, monthly installments, you too can have all the learning and knowledge of the Empire at your finger tips.\"\n\n\"Darling is that you? What on earth are you doing in the basement?\"\n\nDes came up behind Dar'basha and peeked over his shoulder. \"She appears to be selling encyclopedias\" He replied dryly. \"Do you think you'd be interested my lady?\"\n\nShe clicked her tongue. \"Come on out of there.\"\n\nDar'Basha wrinkled his nose as she brushed past him with a wink. \"You've been crawling around in the sewers.\" he noted with more than a little distaste.\n\nShe shrugged. \"Nothing for it I'm afraid. There are people everywhere with an eye out for me so I had to come via the not so scenic route.\"\n\n\"Did you want to freshen up?\" Des offered.\n\nShe sighed. \"I really wish I could...and sleep for that matter, but I just came from the guild and they have some news which is going to put me back on the road as soon as I'm done here.\n\n\"Ah. I'm sorry to here that. Let's get to it then. Basha love, would you be a dear and fetch Ina something to drink, tea? Tea, and perhaps some lemon water as well. Oh, and bring yourself a cup as well darling, you should really join us.\" \n\n\"Nice place.\" She noted, looking around. \"Very posh.\" It was. Everything looked silky and polished. She felt bad sitting on the seats in her well used leather. Des was draped in some sort of silk robe, something reminiscent of the robes one often saw in Morrowind, yet with a more modern twist. The bottom of the robe had skirt like volume and the top opened at the shoulders to expose an expanse of creamy white skin at her collar. It worked for her. Exotic while still being chic. At least by Imperial standards. Back in Morrowind it was simply a 'nice dress.'\n\n\"Well I am performing a part, one needs the right staging. This is a little bland for a Telvanni, but I am a Breton so I persevere. There are some who would find these apartments intolerably plebeian.\"\n\n\"As I'm sure you've told everyone who'll listen.\"\n\n\"Too right.\" She grinned. \"Now, what news? How have you fared with the Gods...or have you been to the shrines yet?\"\n\n\"I have and it went much as expected. Kynareth was silent, though possibly supportive...who can say with Aedra.\"\n\n\"They work in mysterious ways.\"\n\n\"So I've heard.\"\n\n\"Hircine's Acolyte gave me a blessing, but that was about it.\"\n\n\"What was the blessing.\"\n\n\"Hell if I know.\"\n\n\"For Mara's sake Ina, didn't you at least think to ask.\"\n\nShe shrugged. \"Probably to increase my speed, strength, and 'sharpness of mind'. At least that's what he said at the end. But that just sounded like something he says to all the girls.\"\n\nShe rolled her eyes. \"Not sharp enough apparently. It would be nice to know specifically what advantage you may have been given.\"\n\nInanna cringed inwardly. She wasn't wrong, and it made Ina wonder what was wrong with her. Outwardly she grinned and shrugged. \"It was extra tingly in my head so I'm going to say my senses may have been improved. Usually I know instantly if I've been given some special ability...like remember that time we were supposed to take out that cave of sleepers for the Temple and the Priest there blessed us? I knew right off what he'd done. I can even tell with others sometimes as well. This time, it wasn't so specific. It was more one of those general improvement things I think. Which works for me.\"\n\n\"Yes well, next time think to ask. At any rate,\" She adjusted herself on the couch, pulling up her legs and accepting a cup of tea from the khajiit who had just joined them, \"I have some news for you.\"\n\n\"Oh?\"\n\n\"I've complied a list of strong possibilities but it's going to need more time before I can figure out where they will lead. One or two of them look like they're going to be hard nuts to crack so it might even take more time than I have, unless you have new news yourself. More positively I've figured out where Melisande has hidden herself these days. Apparently she's been living in Drakelowe, a little farm house south of your new home town and situated along where the Corbolo becomes the Reed river.\"\n\nInanna looked at her skeptically. \"And who exactly is this Melisande?\"\n\nDesdemona arched a brow and set her cup down. Not a good sign. \"Now, hear me out before you get into a snit,\" also not a good sign, \"but I think you should give it some serious thought before you dismiss it.\"\n\n\"Des...\"\n\n\"Melisande is a weald witch...better than that she is one of the few remaining witches of Glenmoril\u2014\"\n\n\"Oh hell no. Those chicks are into some crazy shit Des.\"\n\n\"Calm down...as you know the Glemoril are connected to Hircine\u2014\"\n\n\"I know no such thing.\"\n\n\"Stop interrupting. They are connected to Hircine. I did some further research at the mages guild here in the city and confirmed it. This probably means it's his blood in their veins, diluted as it is, which means they will probably have something useful to you...something a hunter could use. Don't you think?\"\n\nShe really wanted to say no. \"I don't know. Maybe....but...\"\n\n\"Fine, just consider it. Frankly I think you need to get over yourself. Who cares what blood you do or don't have?\"\n\n\"Should I make you a list?\"\n\n\"Ok, let me re-phrase that. Who cares whose opinions you actually give a damn about.\"\n\nShe rolled her eyes and set down her own tea. \"Well there's my father for one.\"\n\n\"He was just worried you would end up in the wastes fricasseeing merchants. He doesn't have anything against it personally.\"\n\n\"What do you know about it?\"\n\n\"Ok, look at it this way: you've thumbed your nose at countless rules and traditions and pissed off pretty much everyone in your acquaintance at some point or another in your life...what makes this any different?\"\n\n\"I've decided to be unreasonable about this one. A person can only be so reasonable for so long...one must draw the line somewhere.\" \n\nDesdemona laughed at that. \"At least you're honest.\" She picked up her cup again. \"I'll take that as concession for now.\"\n\n\"In other news...\" Inanna pulled the list she'd been given out of her curiass and passed it to Des who primly unfolded it. \"That's the list tha\u2014\"\n\n\"Delatour. That's the one we want.\" She gave a small smile and folded the list, handing it back.\n\nInanna tilted her head curiously. \"You're sure? You haven't been in town that long.\"\n\n\"Almost. Off that list anyhow.\"\n\n\"I...there was a suggestion that an Altmer might be behind it...\"\n\n\"Oh! In that case I'm positive.\" She grinned. \"I managed to pull in a few big fish for a party just last night, and Delatour was one of them. Of course he's a shrewd fellow and played fisherman most of the night himself. So I didn't get much out of him...but I did get something out of a few others. Apparently there is a mysterious Altmer keeping house in the capital. A rather unsociable fellow, but that is common enough with their race. Delatour, it is said, visits often, but is closed lipped about it.\" She nodded to herself.\n\n\"Now that I've introduced myself formally to him, I'll have him in for a social call. I'll work as quickly as I can, but these things are delicate. Certain niceties must be seen to.\"\n\nInanna nodded as well. \"Thanks. See what you can dig up about the Altmer. I have a feeling about this.\"\n\n\"Just a feeling?\"\n\n\"Yeah.\"\n\nShe chuckled. \"Good or bad?\"\n\n\"Both.\"\n\n\"Ah. Well. I shall get to it then. Are you sure I can't keep you here the night?\"\n\n\"No...I... don't like being away. And I have a definite bad feeling about what's going on with this merc who the guild's been watching for me.\"\n\n\"That's unfortunate. There's a perfect little soiree I'm attending tonight which may prove to be useful. It would be lovely to have a second there for additional recon.\"\n\nInanna shook her head. \"Damn woman, you've been here a few days and you've been to two parties?\"\n\n\"And a dinner, two luncheons, a wine tasting, and tea. It was easy. I had a friend invite me to lunch and to go along with my pseudonym. I spent the evening being eccentric, worldly and charming. The next day my dance card was filled. Normally I'd be more aloof, but time is of the essence. The only consolation is that this is the empire, so the society here isn't all that complicated. Remember what torture it was to even get my big toe in the door with the Telvanni? This was child's play.\"\n\nWell, as much as I'd love to see you in action again, I really do have to start back. Even with a horse it'll take the better part of a day.\"\n\nDes grinned. \"Well if that's the case, you can stay after all.\"\n\n\"How do you suppose that?\" she asked sceptically. \n\n\"Well, I didn't mention it since I only managed to get it set up for one way travel, but I placed a teleport spell in the ruins...in the 'basement' as they call it there. That way if you or another needed to sneak back in, then they could. It takes a very long time to set up though, even in one direction. So I figured one way is better than nothing.\"\n\n\"This way you can come with me and leave directly afterward. You'll still be home faster my way than if you rode.\"\n\n\"Or I could just leave right now.\"\n\n\"Or you could do that.\"\n\nInanna considered it. It would be nice not to smell like sewer, and she was interested in watching Des work... \"Alright, but we can't stay too late.\"\n\n\"Oh there's no worries there. I never stay too long at any one party. Women like me always have something more interesting to do, you know.\" She winked. \"Come lets get you set up.\"\n\n\"Ah, there's one problem.\" Desdemona paused in the middle of rising from her couch.\n\n\"What's that?\"\n\n\"I can't be recognized, remember?\"\n\nShe laughed. \"Oh darling there is no worry there either. I'll just change your hair color.\"\n\n\"I'm not sure that will be good enough.\" \n\n\"Oh believe me dear it will, you Dunmer all look alike to them.\"\n\n\"Well that's kind of racist.\"\n\n\"Yes it is...they do tend to be that. But be honest, the Dunmer say the same about humans.\"\n\n\"I don't.\"\n\n\"No love, and I don't say it about Dunmer...but we're exceptions aren't we. Now come along. We have to get you presentable and we don't have much time.\"\n\n%%\n\nAn hour and a half later Inanna was scrubbed, perfumed, and wrapped in something silky and staring into a mirror. Two faces looked back at her. A grinning Desdemona, and a perplexed looking Dunmer girl who only looked vaguely familiar. She tilted her head to the side to examine the way her now blue-black hair was twisted up at the back the pinned in place with two long slender pins which in her mind resembled paintbrush handles, or knitting needles. They were clearly decorative though, since the tips sported something shiny and green at the end. She squinted at it. \"What is that, green glass?\"\n\n\"Yes.\"\n\nThe matched the little beads which dangled from a chain Des had attached at the top of her ear, and the dash of color across her eyelids. \"Nice.\" She turned her head to the other side where the hair was allowed to fall in an unusually straight sheet, partially obscuring the delicate white lines and spots over her right eye. She ran her finger over one of the pale lines of her illusory tattoo. \"These are pretty, but don't you think it's a little...ethnic, for their tastes?\"\n\n\"That's the point. You're an ex-Ashlander House slut. Deliciously exotic. And there's enough truth in there that you can sell it. You are Ashlander after all. And a slut.\" She laughed lightly and slapped her shoulder playfully.\n\n\"Wait, I'm what? A House slut?\"\n\n\"That's what we call the n'wah and velothi who fuck their way into House society.\"\n\n\"So, you?\"\n\n\"Not at all dear. I'm no one trick pony.\"\n\n\"What does that mean?\"\n\n\"It means I make sure it's very clear that I have a great deal more to offer before I start in with the sexual favors. Besides it's a good way to get yourself killed. All you have to do is sleep with the wrong person's mate, lover, or child, and that's that.\"\n\n\"So I get to be one of these geniuses?\"\n\n\"It's perfect cover. That way if you say anything gouache, no one will be surprised.\"\n\n\"Then why would a classy girl like you be bringing me?\"\n\nDes chuckled and swayed around her, draping an arm over her shoulder and sliding a finger down one of her ears, causing her to shudder involuntarily. \"Why is anyone interested in pretty little house sluts?\" She murmured thickly, giving her reflection a wicked smile.\n\nIna smirked. \"It's like that is it.\"\n\nDes withdrew with a wink. \"Mm. Either way, it'll be fun for them to try and figure it out, won't it? Are they? Aren't they? All those rich, bored, and curious little girls will that much more curious...and who knows what they'll let slip in their eager curiosity.\"\n\nInanna rose and eyed the dress she was wearing. It was one of Des' which her talented Khajiit slave had altered while Ina had been bathing. \"Isn't this a little covered up for a 'house slut' then?\" It was more traditional than what Des was wearing. That is to say, less skin, and where Desdemona's dress was a subtle arrangement of black, blue, and purple layers with silver detailing, her own robes were an intense green and gold pattern, and were more closely fitted around the hips with a broad, flat belt cinching in her waist. When she moved she reminded herself of the sea snakes one saw twisting in the waters from a night ship out of Khuul. \n\nIt was kind of hard to move in...restrictive. And it was rubbing her upper thigh in a weird way...\n\n\"You're a Telvanni darling, not some cheap Dres courtier.\"\n\n\"Ah. I stand corrected. Well then my gracious lady, shall we?\"\n\nNormally Inanna wasn't down for this sort of thing, and in general she tried to keep her mouth shut, hoping it would come off as aloof and mysterious rather than nervous and uncomfortable. Des made it easy. As exotic as a Dunmer lady in traditional clothing was to these, it had nothing on Des who was simply magnetic. They showed up veiled, which seemed to start them off on the right foot.\n\nThey were announced and Des was magnanimous as she removed her veil, smiling brilliantly for the watching crowd. Yet, still regal, imperial even. She stepped into the small ballroom and seemed to draw all eyes. It was hard to put her finger on how she was doing it as Ina couldn't taste any sickly sweet spells in the air. Something in her gestures or movements perhaps. But then the gestures themselves seemed familiar.\n\nDesdemona introduces her affectionately as \"little Llathyanea.\" Inanna cursed her for it each time she was forced to bite the inside of her cheek to keep from laughing at the way their tongues kept tripping over the breathy syllables. 'You may call me Latha,' became her mantra for the first hour of the evening. But she supposed it did lend a certain authenticity to the illusion. \n\nShe eventually found herself nodding and smiling, and saying vague things to a group of young, fashionable ladies who were intensely curious about court life in Morrowind. She wasn't having too much luck with fishing for info in this crowd...she hadn't the foggiest idea how to handle them. Threats, boasts, and crude jokes worked for her usual 'types' but she was in way over her head here. She felt like she was on the defensive and was just trying not to screw up. Maybe this wasn't such a hot idea after all.\n\nIn the corner of her eye she noticed Desdemona with two gentlemen and it finally hit her. Azura. Desdemona was channeling Azura, the epitome of the gracious queen-bitch if ever there was one. She'd appeared to them as an apparition once or twice...or rather she'd appeared to Emily, but they'd been there to witness the miracle. Damn...she was good. She must have really been paying attention. She watched fascinated as she gestured to the group of musicians playing in the far corner: the fingers, the twist in her wrist...it was perfect, almost ethereal. The men were enthralled. Hell, she was enthralled.\n\n\"Latha?\"\n\n\"Hm?\"\n\n\"I...ah I was just wondering how long you were going to be in the city.\" Ina met the young lady's eye and was inspired. She couldn't do Azura and play elegant queen...but there was one or two Daedra she was intimately familiar with, and who were far more her speed. \n\nWhen in doubt ask, 'what would Boethia do?' He'd eat these little girls for dinner and use their bones for darts, that's what. Boethia's code went something like this, \"Can I kill it? If not can I screw it? If not, how do I manipulate it into a false sense of security until I can do either?\" It wasn't a deep philosophy, but it had its moments.\n\nShe let a slow smile spread across her lips and shrugged negligently. Her eyes held the girls, just like a snake's would, and she let them narrow suggestively. The girl blushed and Ina gave her a hint of tooth. \"Just for tonight, my sweet.\" She spotted a couch nearby in the corner of her eye decided to head for it. She settled comfortably into it with one arm draped over the back.\n\nThe group of girls were eying her uncertainly. She allowed her smile to become a tiny bit more predatory as she eyed them back in turn, one at a time. That was how Feric had done his 'I'm alpha here' routine, wasn't it? If it worked for him, why not for her? She decided the little pointy nosed blonde looked like she knew more than she should about the way the world worked, she let her eyes linger there and patted the seat next to her. To her amazement it actually worked. She looked positively delighted and more than a little smug as she cast a parting glance to the group. They shifted closer as well. Not letting the preferential treatment stop them.\n\nAs with any battle she let the opponent make the first move, at least now that she'd issued the challenge. Inanna stared her down with her little smile until the girl caved and shifted awkwardly. \"Are you enjoying the party?\"\n\nPoor thing, what a terrible opening volley. \"Not really.\" She answered honestly. \"Are you?\"\n\n\"Ah...I've been to better.\" She straightened and looked knowingly at Ina who smiled knowingly back. Despite the fact that what they knew wasn't immediately apparent.\n\n\"Even in this town?\" \n\nShe seemed to find that slightly offensive. \"This is the heart of the empire, everyone who's everyone comes through here at some point...though some are more interesting than others.\"\n\n\"Why don't you tell me about some of the interesting ones? Maybe it'll inspire us to find a way to liven this\" she waved to the room, \"up.\" An obvious move: the trap disguised as an easy out. But this was easy prey, and once the chosen girl seemed to lag, the others were quick to pick up her slack. Easy wasn't even the word for it. All she had to do was lounge there looking like a hungry, and somewhat bored, serpent while the group of them vied to tell her their most interesting stories. \n\nShe let them go on for a bit before leading them to more recent news with an \"ah, but that was so long ago...\" And off they went again. It still wasn't revealing anything useful. It was like setting a web to catch a dragon fly and having the whole thing cluttered up with gnats.\n\nBut, then, she was Telvanni, well, she was pretending to be Telvanni. So she also found it boring...because it was boring. Sometimes honesty is the best policy. \n\n\"You know,\" She interrupted, looking as bored as she felt, \"At home affairs, backhanded business dealing, and assassination attempts are so common that they're hardly worth the air needed to mention them. You might as well be talking about the weather...which is also, by the way, more interesting than yours.\" She turned a feral grin on them. She then sighed and cast her gaze over the room. \"I mean really, our idea of a parlor chat is taking guesses at which of his cloned daughters Divayth Fyr is fucking these days. ",
        "\"Elaine has money on Uupse, but I keep telling her, just because she's the favorite doesn't mean she's the bed warmer. Plus she's too busy with the corprusarium, looking after all those poor creatures, and probably getting what she needs from that Argonian of hers to boot. I've heard they can do unspeakable things with those forked tongues of theirs.\" She smirked. \"My money is on Alfe. Very sweet and has a rather submissive air about her.\"\n\nThey looked appropriately shocked and horrified...and fascinated.\n\n\"Clones? What are clones?\"\n\n\"His own daughters!?\"\n\n\"What on earth is a corprusarium? It sounds dreadful!\" \n\n\"The product of some very strange experiments. Yes. And a dungeon chock full of corpus monsters, and, I've heard, a Dwemer...but that seems very unlikely to me. Seeing as how the last must have died well more than a thousand years ago.\" She answered blithely.\n\n\"It's not shocking to you that he's openly sleeping with his daughters? How does he get away with something like that.\" Another asked still aghast. She just laughed. A perfectly honest reaction. And gave a perfectly honest answer.\n\n\"Divayth is quite possibly the most powerful mortal alive, I don't think he could even begin to care what anyone else thinks. If you told him, he'd either laugh or ignore you...if you're very lucky. Besides, he's actually rather personable, and has a lovely sense of humor.\" She didn't actually know if there was anything doing with his daughters, nor did she care, but that last part was a fact. She'd gotten a right kick out of the old goat when she'd met him. He was pretty funny. Scary as hell, but funny.\n\n\"I don't suppose you have anything amusing like that here? No rogue sorcerers with strange experiments in their basements? A coven of Argonian vampires in the Temple District? Some sanguinite Altmer necromancer whose been stealing virgins off the streets to do ghastly things with them...and then do even ghastlier things after that...you know, fun.\" She smiled benignly, waiting for the seeds to sprout.\n\nThere was a pause, then one girl licked her lips and made an offering. \"Well, I did hear about one mysterious Altmer who's taken up my cousins house in just the district you speak of, actually.\"\n\n\"Oh, him.\" another interrupted. \"Not much to say about him. He never leaves from what I've heard. Just stays locked up inside all day and night. Never goes to any parties.\"\n\n\"He must go out some time.\" Ina interjected.\n\n\"No. I live directly across from him, and I've seen him once. That's it.\"\n\n\"Well did he at least look interesting.\"\n\nShe shrugged. \"Yes and no. He was terribly handsome, but not very stylish. He had rather long hair, far more than is fashionable, and he had those flouncy robes you sometimes see the really old Mer wearing.\" she glanced at Ina. \"Not you of course. I think your robes are simply lovely.\"\n\nInanna merely smile thinly at her.\n\n\"I heard he was here on trade business.\" Offered another.\n\n\"No, he's here visiting the mages guild. My brother said he saw him there. My brother is studying enchantments right now. His instructor says he's the best in his cohort.\"\n\nThe other girls rolled their eyes, but Inanna obliged her. \"How nice for your family. Was it in this enchantments course that your brother encountered our mysterious Altmer? Perhaps he is only a visiting mage then, just here for dull research.\"\n\n\"Oh no. He said he was speaking to Caranya. And that when my brother came closer they both stopped talking and glared him nearly to death. He thought his heart was going to stop. He said the Altmer was even more terrifying than Caranya.\" she offered gleefully.\n\n\"No!\" cried another in politely feigned disbelief.\n\n\"Yes!\"\n\nInanna simply cocked a brow. \"Caranya is a master-wizard on the council of mages,\" the blonde explained, \"but she refused to renounce her ties to necromancy when Traven placed a ban on it. She's one of the few in the mages guild powerful enough to get away with such an open challenge to his authority.\"\n\n\"Perhaps our Altmer is a necromancer after all.\" Ina mused aloud.\n\n\"They are both Altmer nobles though, it could just be one of 'those' things. You know how they get when they're together.\" Commented another.\n\nEveryone including Inanna nodded sagely. Fetching Altmer.\n\nThey continued to chat, but she got little more out of them that could be considered useful. She rewarded them with a few scandalous Telvanni tales, some of which were actually true, and then extricated herself as gracefully as she could.\n\nDesdemona had a new group around her, and she was headed to join her when she was waylaid halfway across the room. A Breton looking man with grey eyes and light brown hair, of middling age and middling looks, but his impeccable manners and dress were apparent even to the likes of her. \n\nShe tried to hide her surprise as he took her hand and bowed over it. \"Mademoiselle, this is an unforgivable presumption, but your rare beauty has compelled me to speak to you.\" Definitely a Breton. \"Please, show mercy to this poor palmer and accept an offer to dance, and I will swear to importune you no longer, if that is your wish.\"\n\nWhat could she say to that. Not much. Frankly with an opening like that, anything she said would probably sound lame or coarse, so she hedged her bets and nodded as gracefully as she could. Of course she remembered that she couldn't actually dance when they were half way to the floor.\n\nShe panicked. \"Ah, sir, perhaps this is not such a good idea.\" She'd taken the arm he'd offered her and was now gripping it to slow their forward motion. \n\nHe looked curiously at her and she willed the blush out of her cheeks. \"I accepted your offer forgetting that I am not at all familiar with the dances of this country. Please...\"\n\nHe got a strange glint in his eye but smiled. \"I am most disappointed.\" \n\n\"Perhaps we might watch the other dancers together instead?\" Was that something these people did? Or did that just sound weird. His smile did seem to soften and the glint dimmed, so that was a good thing, right?\n\n\"I'd be delighted.\" \n\nThank god. She tried to keep the relief out of her own smile. \"Latha, by the way.\"\n\n\"Just Latha?\"\n\n\"Llathyanea, actually, but I find most hu\u2014\"\n\n\"Llathyanea. What a lovely name.\" \n\nHe pronounced it perfectly. She found herself inexplicably pleased by that, though for the life of her she couldn't imagine why. It's not like it was even her name. \"Thank you. And what might I call you, sir?\"\n\n\"Arthur.\"\n\n\"Just Arthur?\" she teased. He chuckled. \n\nShe noticed he was still holding her hand between his...his thumb was caressing the back of her hand...and for some reason she was grinning at him like an idiot...\n\nThat slick son of a bitch. \n\nShe pulled up her own spell, absorbing his charm until it was little more than a tickle at the back of her mind, and with a much milder smile extracted her hand from his. He was watching her carefully and the glint came back. She knew what it was now: 'thwarted!' Damn right buddy, she groused mentally while keeping her smile polite. \"I'm relatively new to society,\" she explained, deciding to keep on the topic of dancing, \"so I have yet to learn all the social niceties which accompany it.\"\n\n\"You seem to handle the ladies with aplomb...and they are the most dangerous aspect of society, by far.\" He murmured while pretending to examine a nearby group of dancers.\n\nShe bit back her smirk. \"Do you think so?\" She cast a sidelong glance at him. \"I can imagine something more dangerous than them.\" He returned his glance and the glint in his eye changed.\n\n\"I overheard you speaking of a mysterious Altmer earlier...your friend also seems interested in this Altmer...\" Apparently they were just getting straight to the meat of the matter then. Good.\n\n\"Does she?\" Inanna did smirk then. \"That must mean there's actually something to be interested in. Good to know. I'll have to exchange notes with her later in the evening.\" She arched a brow. \"Did you have something to add to the gossip pool? Perhaps your looking for something in exchange?\" His own lip twitched into an almost smirk of its own.\n\n\"There isn't much to say about the gentleman...merely a visiting practitioner visiting the university. They're a common thing here.\"\n\n\"Hm, If you overheard us, then you'd know I knew as much already. It doesn't seem like something to interest Muthsera Elaine. So there must be something neither of us know.\"\n\n\"That's what I was wondering. Perhaps you might find out for both of us?\"\n\nInanna chuckled. \"So that's what you're up to. I'll save you the trouble. If she's interested it's because he's either obscenely rich, or obscenely powerful. She has a thing for power-crazy Mer with more money than they know what to do with.\"\n\n\"Ah. She's a gold digger?\"\n\nInanna laughed at that. \"I call her that with affection...but that's far too common a term for her. She is far more than that. It's an honest preference from what I've seen...as much as you can call it that. If she's a whore, than she's a whore who enjoys her work far too much. \n\n\"Personally I don't know how she does it sometimes, or what she finds so appealing. I find them exhausting much of time. Their arrogance, presumption, and casual cruelty is sometimes more than I can bear...but we all do what we must to protect what's ours. Even when it becomes a test of the will.\" she cast another glance at him, remembering herself. Honesty was fine, it made for the best lies...but there's a limit. \n\nThe glint vanished entirely and his shoulders seemed to relax slightly. He was nodding. \"We do indeed.\" He agreed. Also with perfect honesty. It seemed to strike a cord. A servant appeared before them with glasses of wine and broke the moment of cordiality. Arthur took the glasses and handed one to her, clinking them together lightly. \n\n\"Here's to the triumph of the will over presumptive arrogance and casual cruelty.\"\n\n\"And to protecting what's ours.\" \n\n\"Salut.\"\n\nOver top of her glass she spotted Desdemona giving her the strangest look. She didn't know what to do with it, so she ignored it. \"So,\" she continued, picking up the conversation. \"Do you have a type?\"\n\n\"Power-crazed Mer with more money than they know what to do with.\" He muttered dryly. She laughed at that. \n\n\"Is that so? Trying to weed out the competition then? I suppose the real determining factor is which way his pendulum swings. That will determine the winner right off. Unless he swings both ways of course.\"\n\nHe smirked. \"Only in a sense. I make my living liaising for the rich and eccentric, not bedding them. It's profitable work...but difficult at times. Some times more than others.\"\n\n\"I can imagine. I doubt you'll find any competition in that regard. I wouldn't try any funny stuff with her though, she'll catch on much faster than I did...and wouldn't be so forgiving.\" She cast a sideways look in his direction.\n\n\"I apologize for that.\"\n\nShe chuckled. \"Only because I caught you.\"\n\nHe chuckled as well. \"That I can't deny my lady.\"\n\n\"You know, I think you'd do well in Morrowind. Bretons, it seems to me, have better aptitude for the courts there than most. You should consider it if you're looking for something new, and if I may say, better. If you like I can mention it to my friend, she's been very helpful in getting my foot in that particular door. She could do wonders for a man of your considerable charm and breeding.\"\n\nHe seemed to like that. A lot. Well who didn't like a little recognition and ego soothing. \n\n\"That's very kind my dear.\" Was his noncommittal response, but she decided to interpret it as the polite social form for 'hell yes, woman!' They sipped at their wine and watched the dancers, and made idle conversation about trade tariffs and the truly horrifying shade of pink half the ladies in the room had smeared their cheeks with. Maybe this high-class thing isn't so hard after all, she considered. \n\nEventually she got tired of the weird looks Des kept shooting in her direction and decided to investigate. She thanked Arthur, reiterated her intention to mention his interests to \"Elaine\", and made her way over.\n\nDesdemona introduced her to whoever was around, then decided she needed some air and dragged Inanna out to a nearby balcony. \"Well, what did he say?\"\n\nInanna blinked at the intensity of the question.\"Who?\"\n\n\"Delatour?\"\n\n\"Again, who?\"\n\n\"Delatour, the one from the list, the one working with the mysterious Altmer...\" she was looking at her like she was addled.\n\n\"How should I know what he says?\"\n\n\"You were just gassing it up with him over a glass of rather mediocre Vernage, you dolt.\" \n\nInanna felt herself go pale. \n\n\"You seriously didn't know?\"\n\n\"How the hell was I supposed to know? He said his name was Arthur.\"\n\n\"Yes, Arthur Delatour.\"\n\nActually...it was kind of obvious now that she thought about it. Shit. Seriously, what was wrong with her head? Shit. If this was because of that mating thing she was so going to thrash Feric within an inch of his life. \n\n\"Ah...he...he was curious about your interest in his boss, then, I guess. I thought he thought you were competition.\"\n\n\"What did you tell him?\"\n\nShe shrugged. \"Just that if you were interested it was, well, because you're a gold digging whore.\" She grinned at the very unimpressed look which crossed Des's face. \"Not in those words...exactly...well sort of those words. I also told him you're good for hook ups with the Morrowind high rollers, and offered to mention him to you. I, ah, don't think he likes his job much actually, or the guy he's working for.\" She bit her lip and considered that. \"Shit...that's sort of awkward....the guy's snaky, but he was kind of growing on me. Sort of reminded me of you actually.\"\n\nDes surprised her by grinning maliciously. \"Ha! See, it's not always black and white is it? Moral ambiguity bitch, deal with it.\" She shook her finger at her triumphantly. Inanna sneered back.\n\n\"Don't start with me woman.\"\n\nDes sobered slightly and leaned back to glance into the room full of high-end carousers, looking thoughtful. \"I do see potential in this though...do you think we could swing him? If I could offer him more money...more power...\"\n\n\"Less dickishness, actually.\"\n\n\"What?\"\n\n\"I think his problem, after the money/power thing, is the fact that he can't stand what arrogant s'wit the crazy, rich Mer of the world tend to be. If you can sell him on that, it might help.\"\n\n\"I'd have to lie.\"\n\nShe grinned and shrugged. \"And that's a problem why? If you can swing him, or at least neutralize him, then I don't care. Besides, anyone who chooses to associate with rich Mer are just asking for trouble. This way he gets all the sugar daddies he can take, you get a new pawn to play with in that cluster-fuck you call 'society,' and I have one less person to kill. Everybody wins, huzzah.\"\n\n\"You're a vicious little thing aren't you?\"\n\n\"Nobody's perfect. Now lets get the hell out of here, this dress is starting to chafe in places I didn't know I had.\"\n\n%%\n\nHer timing was perfect, or heinous...depending on your perspective. \n\nAfter ditching the party and changing back into her clothes Inanna had Des teleport her back to the ruins. She found herself in the little room just off of the hidden exit, the one that last zombie had been hiding in. The thought gave her a momentary shudder. \n\nDes, she knew would be headed straight to bed since teleporting another can be pretty taxing. She was also headed straight for bed, when the front door opened beneath her and Cyrus appeared in the opening. He went directly inside, an anxious expression on his face. And who but Feric should appear behind him. He paused and closed the door but shifted into lion form before continuing. And then he didn't continue. Instead he tilted his head, and looked up....way up, and stared. She looked down. Deja vu.\n\n\"Hey green.\" She whispered, forgetting for the moment that she wasn't talking to him any more. She dropped down into a crouch next to him, though he didn't jump back this time, and she had nothing smarmy to say. \"I have some news from the city. That Merc, the only who led the attack by the city, he was spotted not too far south of here.\" He nodded. \"You spotted him too?\" He nodded again. \"Shit.\" \n\nHe didn't need to nod for her to sense his affirmation of that last thought. However, he did let out a suitably pissed snarl for good measure.\n\nShe touched two fingers to her forehead in benediction. \"Verily.\" She murmured with mock reverence.\n\nThere was a rather long pause before he turned to her, his muzzle pausing inches away from her shoulder, his eyes watchful. \n\nShe remained where she was, watching back to see what he would do. \n\nEver so slowly he inched towards her, dipping his head until his cheek brushed her arm. She gave in with a sigh and lightly scratched the fur beneath his ear. \"I'm still mad at you.\" she whispered. He looked up and tilted his head at her, nuzzling her hair. \n\nShe chuckled. \"Are you deaf, I just said I'm still mad.\" He pulled away and tipped his head again, and she realized he was asking a question and not just getting fresh. \"Oh, this? Yeah, I was in disguise in the city. Apparently there are people looking for me, so Des did her thing. It'll fade in a few hours. Course that means my house is probably compromised too.\" \n\nShe stood and took a deep breath. \"Well, we should probably catch everyone up. After you Serjo.\"\n\nHis head twitched, and his eyes took on a familiar glow. \"Ah-ah, no, I don't think so. Don't look at me like that. I'm still mad at you, and don't you dare forget it.\" She held up a warning finger...but it didn't seem to help. Fetcher.\n\nHe turned. She followed. What else could she do after all? \n\n...Fetcher.\n\n%%% \n\nAfter much argument and deliberation it was decided that a group would go south to take out the fort before the hunters could get much closer. Of course in order to ensure it worked and that they didn't take the chance of losing anyone, a fairly good portion of them would have to go. Especially after the close call she and Feric had the last time. That wasn't a risk they could afford to take again, and certainly not one either of them were prepared to let the others take.\n\nNaturally Inanna wanted to go, but, when all the cards were on the table, she was the obvious choice to stay. On the off chance something did go down while they were away, or that this latest maneuver was a trap (something she refused to discount), then she was the one best suited to manage the wards and traps they'd laid for just such an occasion and get the little ones to a secure location.\n\nBella immediately volunteered to stay to protect the cubs as well. Owyn offered...but three didn't seem like quite enough to go on the hunt, and Inanna figured she and Bella could manage since they also had Lucas and Aina, not to mention home turf advantage.\n\nFrankly she didn't think the competition had the resources for a proper two front war at this point. Even if it was a trap, they'd have to expend some warm bodies down south to give them the time to make a real go of it.\n\nAt least she hoped so. \n\nEither way it was a bit of a nail biter...and here she was, cold and alone in some lonely corner of the ruin with no warm body of her own to take it out on. In any sense of the phrase.\n\nWell maybe not. She opened her eyes as just such a warm body magically appeared behind her on the sleeping roll. A thick, bare arm slid around and over hers, pulling her in and closer to said warm body. She clenched her jaw and stared hard at the gray of the wall across from her. \n\nShe could feel it. The pull...the need...the overwhelming urge to turn around and bury her fingers in his hair and devour him completely. She frowned at the wall. Was that her...or was that this mating thing? The bond, or whatever they call it. How was she supposed to even tell the difference? What if Des was right and everything since that first night was just...a compulsion...a byproduct.",
        "\"I'm still angry with you.\" She whispered.\n\nThere was a pause. \"I know.\" His breath was warm against her ear.\n\n\"This isn't ok. It might never be ok.\" There was a much longer pause.\n\n\"I know...I'm sorry.\"\n\n\"I don't think that's going to cut it.\"\n\nThis time there was no response, just more warm breath against her neck. Then, a hot mouth against the back of her shoulder and a hand brushing aside her braided hair. She didn't know what to do with it. It was pleasure...desire. She wanted it. She was supposed to want it, that's what one did with pleasure...but now she felt like she wasn't allowed to have it. How could something so intense, so immediate, be an illusion? \n\n\"I don't know what to believe, what to trust.\" She continued, even as he pressed another shiver inducing kiss to the edge of her ear, dragging his lips tortuously up to the tip. She couldn't bring herself to stop him. Her eyes fluttered closed and she had to breathe deeply to still the low moan attempting to escape her throat.\n\n\"You sound like me. What about trusting what you know?\" He whispered back.\n\n\"That's the problem.\" She clenched her jaw. \"I'm having trouble differentiating between what I know is real and what's...induced.\"\n\nHis fingers curled against her stomach. \n\n\"What are we going to do?\" She asked, her voice sounding smaller than she liked.\n\n\"I don't know.\" She could hear his breathing hitch slightly. \"No. I do know. We're going to sleep. And then tomorrow we hunt...and if I survive that, I'll come back, and we'll talk. If I don't make it, then you'll be free of me. Problem solved.\"\n\n\"Well that's the most asinine thing I think I've ever heard you say. I'm going to pretend you didn't. Otherwise I'd be obliged to kick your ass for it.\" There was another long pause. \"What are we even supposed to talk about?\"\n\n\"I don't think it matters at this point. We just...need to talk. About figuring out a way to end this...or figuring out a way to make it work. Either way it's a start. We will get this figured out, and whatever you decide you want to do, I will do everything in my power to make that happen. Even if you decide to go.\"\n\nShe bit her lip and swallowed the knot that seemed to be growing in her throat. \"How am I supposed to decide one way or the other?\" She turned enough that she could see his face. Her eyes searched his. \"I don't want to go anywhere. Do I follow that feeling?\"\n\nHe looked away.\n\n\"What?\"\n\n\"You know what. You know how I'd answer that.\"\n\n\"Then do it. Say it Feric.\" He turned his dark eyes back to hers.\n\n\"Yes. Follow it...believe it...stay.\"\n\n\"What if it's just the bond? What then?\"\n\n\"So what? What does it change? Does that make it less real?\"\n\nShe pulled out of his arms and sat up, leaning on one arm to look down at him. \"I don't know.\"\n\nHe sighed and smiled sadly. \"Better 'I don't know' than 'yes' I suppose.\"\n\n\"You want me to stay.\"\n\n\"Obviously.\"\n\n\"Aren't you worried that this, us\" she gestured between them, \"is just an effect...like a spell? That everything has just been a...a spell, or god knows what else?\"\n\nHe rolled onto his back and folded his hands over his stomach, looking thoughtful. \"What is it that happens when two people...click? Or, and I know you probably don't use this word often...but what is love? Not the kind that takes years to grow, but that instant kind, the kind that makes your stomach drop and your head swim?\"\n\nShe smirked. \"That's lust, stud, not love.\"\n\nHe adjusted his arms back behind his head and sighed. \"Fine. What's lust then? Why did I want you as badly as I did? Why did I lose my head? What made you do the same? Why did you put down the knife that night, and why didn't you pull away? I mean...all you could have seen was that a lion was circling you. How did you know?\" He shook his head. \"I'm still trying to figure out how you knew to turn your bow that first time.\"\n\nShe considered it, then shrugged. \"I don't know. Who knows? I just did.\" He raised an eyebrow at her and she smirked. \n\n\"Does that not knowing change it? Make it any less real? And now, for one reason or another, I want you. What matters to me is that I feel the way I do, and what I'm going to do about it, not why.\" \n\nShe bent over him, bracing herself on either side of his head. He stared up into her eyes. She leaned in until their lips were barely a breath apart. She drifted there, letting the whatever-it-was between them build until it was palpable...like an electric current of energy buzzing between them, making her lips tingle. \n\n\"What is that?\" She murmured thickly. He seemed to understand what she was meant.\n\n\"Are you looking for a technical term?\" He asked, his voice a low growl. She felt that growl in the pit of her stomach...and lower. \n\nShe glanced down at his body, naked and hard. Very hard. She turned back to him and sighed. She lay a hand on his chest, then let her fingers slide down over the short golden-brown hair which ran in a tapered V down his stomach. She could already feel the heat climbing up her throat and into her cheeks and ears. \"I'm going to hate myself in the morning.\" \n\nHis jaw clenched and she could tell he was holding back a smile, if only by the glint in his eye.\n\n\"Then let it be my fault, and hate me instead.\" \n\nHe grabbed her by the waist and turned her onto her back, straddling her hips. She drew her nails down over the plane of his stomach before dropping them to her sides. She gnawed her lower lip as she eyed the impressive erection now laying against her stomach even while trying to ignore the throbbing between her thighs. It wasn't working very well.\n\nAh hell... fuck it to oblivion. Literally in this case.\n\nFeric gazed down at her, watching with intense interest as she eyed him. He half expected her to tell him off again, but a man could still hope. \n\nShe arched a brow and wriggled, pulling her long, loose night shirt up over her head, leaving her nude save for her ever present little smirk. \"I think I can do that.\"\n\nThe smile he'd been resisting finally broke free as he arched over her, anxious to get started before she could change her mind. Of course once his mouth closed around her breast it became clear there was little chance of that. Her fingers wound tightly into his hair, and she gasped and arched against him, her nipple becoming instantly hard against his tongue. \n\nIt was so bloody sexy, the way she always responded so quickly and so completely. The way her nipples hardened and skin tightened. The way she mewled and growled and writhed under his mouth...under his hands. The way her hands gripped his hair, and her nails scored his shoulder, back, and ass. It was as intoxicating as that taste of salt and cinnamon on her skin\u2014 as the heavy, fiery spice and the mouth watering scent of her arousal. \n\nHe knew it wasn't all for him, or because of him. It was just her, part of who and what she was\u2014demanding and hungry....voraciously uninhibited. She wanted what she wanted and when she wanted it. He certainly didn't want to be the one to ruin that for her, to make her stop wanting, to make her doubt. \n\nAnd he hoped to hell he hadn't.\n\nAs if in response to his thoughts she bucked under him and pushed down on his shoulders. \"A little lower if you don't mind\" she rasped, a sultry laugh tinting her quick-sand voice. His cock throbbed painfully as he moved down her body, and he shuddered as he slid against the soft silk of her thighs. \n\nShe tasted so damn good.\n\nInanna laughed softly and gripped the back of his head, pressing her hips up toward the deliciously hot mouth which had latched itself around her aching, swollen clit. He wasn't gentle either, and she sucked in hard, fast breathes as she bucked against him. As he pushed harder, and his teeth bite down, she dug her nails into the back of his skull in retaliation. \n\nIt just seemed to make him worse. He nipped and sucked at her flesh like a starved man, and when she thought it might just kill her, he switched tactics, impaling her with his eager tongue instead. \n\nHe didn't let up there either. He crossed the foreplay line and kept right on going until she was digging her nails into his shoulders and broke her spine trying to levitate off the floor. Trying since much of her was still pinned under her wicked cat...the same wicked cat who decided it might be fun to see how much farther he could keep pushing her.\n\nHe pinned her wrists as well, gripping them in one hand as he shifted to push one leg free and over his shoulder. It seemed there was nothing she could do but forebear. Poor, poor, Inanna. What ever would she do? \n\nNothing but writhe and whimper apparently...and do her very damnedest not to start wailing like a netch in heat. That and find religion apparently. Or so the unstoppable litany of ' oh god's' and curses seemed to indicate. She even began begging him to stop, but the bastard just chuckled and kept going. \n\nBy the time he took pity on her now aching back and excruciatingly sensitive girl parts, she'd counted at least three proper climaxes. At least while she was still paying attention. \n\nAnd yet, despite all odds, she still wanted to jump him. And How.\n\n\"Azura's ghost, Feric.\" She breathed, blinking away stars as she stared up at the ceiling. \"You'd think you were auditioning for something.\"\n\nHe crawled back up her body, grinning as he caressed one of her ears and watched her shiver in response. \"I sort of am.\" He replied. \"Have I gotten the part?\"\n\nShe tilted her head and arched a dainty brow at him. \"Well...I don' t know. There are still so many people left to auditio\u2014\"\n\nHe didn't seem to like that response and used that talented tongue of his to give her mouth something else to do. Not that she minded terribly. And talk is so overrated.\n\nShe grinned crookedly up at him when he finally pulled away. \"I like how I taste on your tongue.\" \n\n\"Not half as much as I do.\" He teased her bottom lip with his teeth, biting it gently and shifting his hips until his cock was grinding against the top of her smooth mound. She squirmed to prolong the contact, but her legs were still pinned between his. \"But then,\" he murmured, as he dragged his mouth along her jaw to nip the bottom lobe over her ear, \"You'd taste good anywhere.\" He made a sound like a gravelly purr against her ear and she felt her insides contract in response. He had to know what that did to her...the ear...the sexy growling...purring...\n\n\"Oh, god, shut up and fuck me already.\" She groaned. \n\nHe pulled away, grinning hotly, and pressed a knee between her legs, knocking them apart. Her legs were already wrapped around his hips and pulling him close before he'd even managed to settle back between her legs. \n\nJust as quickly as she'd reached for him, she seemed to change her mind and pressed a warding hand against his chest. \n\nLuckily she didn't give him time to start worrying. \"Wait. Lets do this the right way.\"\n\nHe watched her with a mixture of uncertainty and amusement. \"We're doing it wrong?\" \n\n\"Look, if I'm going to be stupid and do something I'm going to regret, then I'm not going to do it by halves. Change.\"\n\nShe pushed his at his chest and wriggled out from under him. He cocked a brow and backed away from her a little. His stomach dropped and he felt the heat of his desire wane a little.\n\n\"Look, Ina, if you think we're doing the wrong thi\u2014\"\n\n\"Don't argue, stud. Just do it.\" She emphasized her point by rolling up onto her hands and knees and presenting him with a very tempting view. God he loved that. Such a sweet little ass...\n\nYet, he still hesitated. She cast a dark grin at him over her shoulder. \"Don't pussy out on me now kitty cat. This is supposed to be your fault, not mine remember? Don't make me come over there and force you to ravish me.\" \n\nHe could feel the low groan rumbling around in his chest as he gazed down at her raised, swaying bottom. She made it that much worse by spreading her knees even further apart, exposing the slick, dark folds of her glistening slit, and ran two slender fingers up between them, spreading herself until he could see the pink, heated center.\n\n\"Damn it woman, do you have any idea what it does to me when you do that?\" He growled.\n\n\"I have some idea.\" She whispered softly back...her fingers now pressing deeper, slowly penetrating herself under his fixed gaze. \"Come on Feric, wouldn't you rather this were you?\" Her grin became feral. \"I won't bite...if you do it first...\"\n\nThat was about as much as he could take. Before he knew it he'd shifted and had buried his muzzle between her thighs, his hungry tongue fighting her fingers for purchase inside of her. \n\nShe groaned and dropped her forehead to the thin mat below her, using it to prop her up as the sensation of the hot, rasping tongue forcing its way between her probing fingers made her limbs tremble weakly. \n\nA moment later the rest of her gave as well as the soft fur of his belly brushed her ass and back, and she felt the iron hot tip of his length glance against the cleft of her sex. She found enough will left in her to buck her hips on the next pass, trying desperately to angle him inside her.\n\nHe too shifted, however, leaving her empty and wanting. \"Bastard.\" she growled against her forearm, and ground her ass up against stomach. \"Keep teasing me like that, and I will show you a whole new world of pain.\" \n\nHe slipped lower, pinning her once again, and grasping her shoulder with his teeth. Her cry of pain was mixed with one of relief and pleasure as he jerked his hips forward and thrust into her half a second later. \"God, yes!\" She panted out, arching back into the thrust and clawing her fingers against the thin mat. \n\nInanna wondered, and not for the first time, if she'd lost it. She was supposed to be mad at him...supposed to be keeping him at arms length while she figured it all out...supposed to be...\n\nShe wasn't supposed to be enjoying this... wasn't supposed to want to be fucked senseless by a bloody lion...and sure as hell not begging for it...\n\nShe groaned as he stroked out of her body slowly and gasped hard as he drove back into her with a literally breathtaking lunge. As always it was all she could do to hang on, breathlessly cooing her encouragement as he speared into her with glorious ferocity.\n\nOh, who was she kidding, she loved everything about this. The way he moved inside of her, filling and stretching her, riding her hard and fast. The feel of his hard, muscled body bearing down on her, siding against her... and he was magnificent in either form. Whether it was lovely tanned skin under her nails or the luxuriousness of his thick fur moving along her body...she wanted it, adored it. There was nothing like it. Nothing like him. \n\nShe could feel his teeth at her neck, and in the corner of her eye saw his claws flex for purchase. She shuddered as the reality of her situation weighed down on her...literally. Four hundred pounds or more of solid muscle and perfect killing machine...mounting her, covering her...moving inside of her. She moaned at both the thought and the sensation accompanying it.\n\nShe gasped and cursed and reached for him, gripping his neck hard as her body spasmed around his still thrusting cock. \n\nFeric could feel her nails digging into his flesh and it pushed him over the edge. His jaw clamped tighter, finally breaking skin, and he thrust hard and deep, growling into her shoulder as he jetted rope after rope inside her, filling her until he'd felt like he'd emptied his entire being, his very self, into her beautiful, lithe body.\n\nThey stayed that way for a long, moment, silent save for the music of their labored, panting breathes. Finally he shuddered, spent, and rolled off of her onto his side. When he blinked his eyes open, she was facing away and he could see the still bleeding wound on her shoulder where he'd bit her.\n\nHe carefully pressed his muzzle to her shoulder and when she didn't move or complain, gingerly lapped at the fresh marks and blood. She grumbled but allowed it, and even lifted a lazy arm to brush loosened strands of hair from her neck in order to give him better access.\n\nHe was pleased beyond measure that she did. And even more so when she eventually shifted closer to nestle against him for warmth...even if he was pretty sure he knew exactly what five words she was muttering incoherently into his fur as she did.\n\nEither way she fell asleep with her hands buried in the thick fur around his neck and shoulders and with her slight, naked frame curled up against his side, much as she'd been the night of the storm...after they'd come back from Wariel.\n\nHe understood then that it wasn't just warmth she was seeking, that she needed, then or now. He could only hope that as she slept, she found it.\n\n@@@\n\n\"I'm still mad at you.\"\n\nFeric was very careful not to smile. \"I know.\" He intoned. He'd lost count of how many times they'd had that exchange today. She was determined that he not forget it.\n\nThis time it was by way of goodbye, and therefore had a somewhat different tenor. It sounded less like 'don't think you've gotten away with anything' and more like 'be careful, and come back in one piece.' So, necessarily, his \"I know\" was actually \"I will.\"\n\nShe confirmed her meaning by crossing her arms, glaring, and then telling him to keep off the roads and stick with the western ridges. She knew damn well that was already the plan, but he appreciated the thought and the unspoken words behind it and nodded.\n\nSo it was that they parted with terse words and curt nods and under the curious observation of the rest of the pride. He knew it was partially for their sake. It was one thing to make a tentative peace between them on a personal level, but public restitution had yet to be made by him. He understood that, and had kept his distance. \n\nOnce he'd left however, he regretted it. Despite the previous night, and despite the palpable subtext of their terse exchange, there was still a deep wound that needed to be tended to, and leaving it like that, without a soft word or soothing touch...it made his skin and brain crawl with apprehension. \n\nHe hated leaving it like that.\n\nIt looked like he'd have to make it back in one piece after all..."
    ],
    "authorname": "Enithermon",
    "tags": [
        "were-lion",
        "were",
        "oblivion",
        "inanna",
        "feric",
        "mating",
        "fantasy",
        "angst"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/hunting-the-hunter-ch-07"
}