{
    "title": "Louise Ch. 15",
    "pages": [
        "Gene spent the day on pins and needles. Several times he almost backed out. Each time he mentioned doing so; Leon didn't say or do anything to dissuade him unless Gene asked him a direct question.\n\n\"Do you think that I should do this?\" he asked.\n\n\"I can't answer that.\" Leon replied. \"It comes down to what you can live with. Will you be able to live with yourself if you don't?\"\n\n\"If you were me, would you tell her?\" Gene asked.\n\n\" I'm not you and the answer doesn't change.\" Leon replied.\n\nGene was so nervous that he couldn't eat. It seemed as if time had slowed to a standstill. To pass the time, Gene asked Leon about his plans.\n\n\"So you're really going to move out here?\"\n\n\"That's the plan.\" Leon said. \"I have to go back to Pittsburgh to take care of business, but then I'm coming back.\"\n\n\"I know that I've asked this before, but what about a job and a place to live?\"\n\n\"I'll worry about that later, in the meantime, let's get you through tonight. Have you thought about how you're going to tell them?\"\n\nGene shrugged. \n\n\"How do you tell your sister that you were going to kill her for money?\" he asked. \"I mean, Leon, I all but sold her...\"\n\n\"But you didn't and you didn't kill her.\" Leon reminded him. \n\n\"I know, but I thought about it! When Clay approached me about info on Kev, I should have told him where to go. When he told me to kill her, I should have told him to go fuck himself.\"\n\n\"Who do you think killed him?\" Leon asked.\n\n\"If I had to guess, I would say Puff.\" Gene replied. \"He had a thing for Kevyn too. He's also the only one who had enough balls to do it.\"\n\nLeon nodded in agreement. He like Gene was aware that Puff had feelings for Kevyn, but had never acted on them. Puff knew better and Kevyn wouldn't have gone for him any more than she had Clay.\n\n\"What do you think happened to him?\" Gene asked.\n\n\"Who knows?\" Leon replied. \"No one was ever arrested for killing Clay, but I think that the police would be the least of Puff's worries. I hope that he's somewhere where he can't be found.\"\n\n\"What?\" Gene asked when he saw that Leon was looking at him.\n\n\"Were you really considering killing Kevyn?\"\n\n\"Yes.\" \n\n\"How would you have lived with that?\" Leon asked.\n\n\"Would you believe that I didn't think about that? \" Gene replied. \"All I thought about was the money. I just wanted to get back to the place I was before Dana left.\"\n\nLeon didn't comment, there was nothing to say. The important thing at that moment was that Gene was finally realizing that he needed to change and that he needed help to succeed. Leon thought about Barb. He knew that there was something going on with her and wanted to ask, but they had never been as close as he and Louise were. \n\nThat didn't mean that he didn't love her; he did even though she sometimes made it difficult. He just didn't understand the way she thought although he tried. The few times he tried to reach out to her were unsuccessful. After each failed attempt, he told her that all of them were there for her if she needed them.\n\nHe knew that Barb put a great deal of emphasis on money and possessions and to some degree, he understood. All of them had dreamt of being able to buy whatever they wanted and lush vacations; it was something that they talked about. What he didn't understand was why she was so angry at them. It was an anger that seemed to grow with each gathering. \n\n\"One thing at a time.\" he murmured as he made a pot of fresh coffee. He glanced back at Gene and mentally grimaced. He was glad that he wasn't the one that had to face Kevyn.\n\nOn a whim, he decided to call Nadine. He hadn't spoken to her for hours but it seemed much longer. She answered on the third ring. \n\n\"Is everything alright?\" she asked after they exchanged greetings.\n\n\"It is for now.\" Leon replied. \"I'm sorry about the sudden change in plans. Are we still on for tonight?\"\n\n\"Family is important.\" Nadine replied. \"Your brother needs you and yes, we're still on for tonight. Call me when you're free.\"\n\nLeon hung up with the knowledge that Nadine was the one. He was honest enough to admit that the speed in which their relationship was building still made him nervous. He decided that leaving for two weeks was a good thing. It would tell him if what he was feeling for Nadine was infatuation or something more.\n\nHe poured the coffee and carried the mugs out to the living room only to find Gene gone.\n\n*********\n\nHans was pleasantly surprised when Juliette called saying that she wanted to talk.\n\n\"I thought that you were going to meet with your sisters.\" He said.\n\n\"I was, but I think that we need to talk some more.\" She replied. \"In the end whatever happens between us is our decision and our business. I still plan to talk to them at some point.\"\n\n\"When may I come for you?\" Hans asked.\n\n\"Come before the kids go to bed. They want to see you. I thought that I could order some coffee and we could talk here if that's okay with you.\"\n\nHe would have much rather talked to her alone, but he didn't say that. He was willing to talk with her wherever she chose; and he did want to see the children again.\n\n\"Could the five of us have dinner together?\" Hans asked. \"We could go anywhere you like. I'm sure that the children are tired of the food at the hotel as good as it may be.\"\n\nHe could almost hear the wheels turning as Juliette debated on what she should do.\n\n\"Alright.\" She said after a few minutes. \"They would like that. Is six too early?\"\n\nHans hung up with a feeling of exhilaration. He had already checked on the real estate website available only to vampires for a house suitable for five or more people. He contacted a realtor about two of the houses, but hadn't heard back yet. \n\nTo pass the time, Hans called the number of a house in Pittsburgh. It was a house owned by the Sinclaires', but was currently not in use. Hans was going to buy a small home there, but as Patrick pointed out, if he was planning to come back to California; why buy a house? Patrick also reminded him that they were family.\n\n\"Feel free to use any of our homes and that includes the ones that we're living in. Our doors are always open to you and yours.\"\n\nSatisfied that the house was ready, Hans thought about calling his family. He decided to wait until he had something more definitive to tell them. He felt a rush of energy as he thought about everything that needed to be done. \n\nOne of the most important things was to meet and talk with the children's father. It was important that he know and understand that he was and would always be their father. Their father also needed to know that the children would be loved and cared for as if they were his own.\n\nThe next thing he thought about was the children's education about who and what he was. He stopped himself. While those things needed to be thought about, Juliette hadn't accepted him yet.\n\nWith nothing to do for the next few hours, Hans set about baking treats for the kids. He turned on the radio, began to hum and before long; he was dancing to the music from the forties.\n\nThings were definitely looking up.\n\n**********\n\nLouise opened her eyes and looked around. Sometime during the day, Nathan had moved her to the bed and covered her with a light blanket. A happy smile came to her as she remembered hearing the baby's heartbeat for the first time. Even the memory of it filled her with awe.\n\nThere was so much to learn and she was eager to learn all of it. As soon as it was dark, she planned to go to a book store and buy several books on babies. She also planned to talk to Katrina and Nathan's mother to ask for guidance. \n\n\"Good evening sweetheart.\" Nathan said as he came into the room carrying a breakfast tray. \"Did you rest well?\"\n\n\"Yes, thanks. When did you get up? I didn't hear you.\" Louise replied.\n\n\"I've been up for several hours.\" Nathan said handing her a glass of warmed blood. \"I've been on the phone with the Dean from the cooking school.\"\n\n\"We can't possibly go.\" Louise said. \n\n\"I know.\" Nathan replied. \"That's why they're coming here.\"\n\n\"Here?\" Louise asked.\n\n\"Here.\" Nathan said with a smile. \"Our instructors will be here in two weeks. I already have a shopping list of the things that we'll need.\"\n\n\"Where will they stay?\" Louise asked.\n\n\"I thought about that.\" Nathan replied. \"How do you feel about them staying in one of the guest suites at the other house? We would have our lessons there as well.\"\n\n\"That works. Do you think that we could go to a bookstore tonight? I want to start reading about how to take care of a baby.\"\n\n\"Of course we can.\" Nathan said. \"If you like, we can shop for the things on our list and have them delivered to the house.\"\n\n\"Can we look at baby things too?\" Louise asked shyly. \"I saw that Wal-Mart had some things on sale.\"\n\nWhile she was now comfortable with her sexuality, she still hadn't adjusted to having money. The credit cards that Nathan had given her remained in her wallet and unused. If she bought anything, she paid with it from her own account and it was never from a high-end store.\n\n\"We could do that.\" Nathan replied. \"In a few days we'll talk about the nurseries. Now eat up and we'll get going.\"\n\nLouise ate everything on the tray saving the prenatal vitamin for last.\n\n\"Down the hatch!\" she said grimacing.\n\n\"Down the hatch!\" Nathan echoed as he popped his prenatal vitamin into his mouth and chased it with a swallow of water. \"By the way, Gretchen is stopping by to see you on her way to mom and dad's. She called while you were asleep.\"\n\n\"Then I'd better get in the shower.\" Louise said setting the tray on the bed. \"Nathan, I'm worried about Barb.\"\n\n\"I know you are, would you like to go check on her?\"\n\n\"I think that we should. She isn't answering her phone and I need to know that she's alright.\"\n\n\"We'll stop in on the way.\" Nathan said.\n\n********\n\nGretchen popped in just as Louise finished dressing.\n\n\"How are you feeling?\" Gretchen asked as she examined her.\n\n\"Good.\" Louise replied.\n\n\"And you're taking the prenatal vitamins?\"\n\n\"Yes.\" Louise said with a grimace. \"We actually need more.\" She added.\n\n\"More? How many are you taking?\" Gretchen asked.\n\n\"I'm taking them too.\" Nathan said. \n\n\"I get it.\" Gretchen said. \"The support thing. Well they can't hurt you so have at it.\"\n\nShe asked Louise several questions regarding sleep, diet and sex.\n\n\"You're doing great. I'll see you in two weeks.\" Gretchen said as she stood, reached into her bag and took out two large bottles of the vitamins.\n\n\"Call me if you need me.\" She said as she vanished.\n\n*******\n\nBarb woke up stiff, sore and nauseated. She rolled off the small sofa and headed for the bathroom. She was grateful that no vomiting accompanied the nausea as she rinsed her mouth with cold water.\n\nWhen she was done, she examined her face for any new eruptions. Seeing none, she washed her face and went back into the kitchen to make breakfast. The size of the small kitchen reminded her that she would have to move. The efficiency would work for a while but when the baby started walking, it would be too small.\n\n\"This is your fault!\" She growled to both Thorne and the baby. By the time she finished breakfast, she added Kevyn and Louise to the list of those she blamed for her problems.\n\nBy mid-morning, she was in a mood. She didn't understand how everyone with the exception of her and Gene; had someone. Things had fallen into place for Leon and Juliette just as easily as they had for Kevyn and Louise. \n\nKevyn and Louise she could almost understand. They were like her even if they didn't admit it. She even thought that she figured out how they did it and wished that she had thought of it herself. She thought about Leon and Nadine- Nadine had to be in it for what money Leon had. It may not have been much, but Leon would give her what he had. Hans she didn't get at all. What man in his right mind would go after a woman with three children?\n\nBut then, it gave her a glimmer of hope. If Juliette could find a man who would take her with three kids, how hard could it be to find a man who would take her with just one? \n\nShe sighed heavily. Who was she fooling? Juliette and Hans was a fling just as Leon and Nadine were. Leon, Gene, Juliette and the kids would be leaving the day after the get together at Jonesy's. Once they were gone, she could concentrate on what she was going to do with the baby.\n\nShe spent the afternoon cleaning the apartment dreaming of a day when she wouldn't have to do such menial work. She worked until the tiny apartment was spotless and then got online to check her bank account. At some point, she was going to have to find a doctor.\n\nBefore she knew it, the sun was setting and her stomach was growling. It was a welcome feeling and sound as she hadn't been able to really eat without throwing up for almost a month.\n\nImmediately she stopped what she was doing and heated up a can of chicken noodle soup in the microwave. When it was hot, she took a cautious spoonful of the soup and waited for the nausea to come. When it didn't, she took another spoonful and then another until the bowl was empty. She was still hungry, but she didn't want to tempt fate. Instead, she nibbled on crackers and sipped on ginger ale while she channel surfed.\n\n********\n\nNathan helped Louise into the car. He didn't want to go to Barb's, but Louise wouldn't relax until they did.\n\n\"I'm sure that she's alright.\" Nathan assured her with a kiss on the temple. \"I want you to know that I won't allow her to upset you.\"\n\nLouise hesitated. She was about to say something that Nathan wasn't going to like.\n\n\"I need to talk with her alone.\"\n\n\"Absolutely not!\" Nathan replied.\n\n\"Nathan, I need time alone with her. She won't talk to me if you're with me.\"\n\n\"Louise...\"\n\n\"No, listen to me. She may be angry, but she won't hurt me; at least not physically. But even if she does, she needs to know that we still love and care about her.\"\n\nThey argued about it during the drive over to Barb's apartment. Finally, Nathan gave in.\n\n\"I'm only agreeing because I know that she won't hurt you and because you won't be at peace until you talk to her. However, if I sense that things are getting too much for you, I'm coming in.\"\n\n\"Could you please not listen in?\" Louise asked. \"This needs to be a private conversation.\"\n\n\"I won't listen, but I will be feeling for too much emotional upset.\" Nathan replied.\n\nA few minutes later, Louise was knocking on Barb's door.\n\n*******\n\nBarb had just gotten comfortable on the sofa when she heard the knock on the door. Frowning, she got up curious as to who would be at her door. No one other than her family and the landlord knew where she lived.\n\n\"Hold on!\" she yelled as whoever was at the door knocked again. \"Wh....?\" \n\nShe froze when she saw Louise. Barb felt a mixture of emotions as she stared at her.. Anger, disbelief, jealousy, hatred and finally; relief all blended together inside of her.\n\n'What are you doing here?\" Barb demanded.\n\n\"I was worried about you.\" Louise replied. \"You aren't answering your phone.\"\n\n\"There's a reason for that.\" Barb snapped, \"I don't want to talk to anyone. As you can see, I'm fine so go back to your happy little life.\"\n\n\"No.\"\n\n\"Fine, suit yourself.\" Barb said and started to shut the door.\n\nLouise stopped the door from closing with no effort.\n\n\"I'm not leaving until I say what I came to say.\"\n\n\"If you're going to tell me what a selfish bitch I am, you've already told me so save your breath.\" Barb said and tried to shut the door again.\n\n\"That isn't what I wanted to say.\" Louise replied. \"Please let me come in.\"\n\nBarb hesitated wondering where Nathan was.\n\n\"He's in the car.\" Louise said. \"May I please come in?\"\n\n\"If it will get you out of my hair, then by all means come in.\" When Louise was inside of the apartment, Barb didn't offer her a seat; but waited for her to say her piece.\n\n\"I just wanted to tell you that we love you and if you ever need us, we're here.\"\n\n\"Do you feel better now?\" Barb asked.\n\n\"Excuse me?\" Louise asked. \n\n\"Admit it; you just came here to gloat. You wanted to rub it in my face...\"\n\n\"That isn't true!\" Louise shouted. \"We're worried about you!\"\n\n\"Are you done?\" Barb asked.\n\nLouise shook her head and turned to walk away; but then turned back to face Barb.\n\n\"I meant what I said, we love you and if you need anything; we're here for you.\"\n\n*********\n\nLouise left the apartment with a heavy heart. She not only worried for Barb, but for the child she was carrying. She knew that Barb was pregnant the moment she walked into the apartment; but hadn't said anything.\n\nFor one, Barb would have wondered how she knew and two, she would have denied it. She wondered if Barb told Thorne about the baby and then decided that she hadn't. A flash of understanding hit her. Barb was going to use the baby to get the life that she wanted. She would use the baby to get Thorne to marry her.\n\nShe understood that Thorne needed to take responsibility for his child, and had the feeling that he would if he knew about it. She also knew that it wouldn't be enough for Barb. She would want a wedding and everything that went with it.\n\nSuddenly she froze.\n\n\"Oh no.\" she murmured. She had just realized that Barb while human was immortal and her baby, if male would be born vampire. Things had gotten even more complicated.\n\nNathan stood by the car waiting for Louise to come out of the apartment. He did as he promised and didn't listen in on her and Barb's conversation. He did, however keep tabs on Louise's emotional state. He wasn't concerned until the last few minutes when he felt the spike in her anxiety level.\n\nHe left the car and met her part way.\n\n\"Sweetheart? What's wrong?\" Nathan asked taking her into his arms.\n\n\"I'll tell you in the car.\" Louise said. \"We need to talk to Kevyn and Patrick.\"\n\nNathan helped her into the car, got in and drove in the direction of Kevyn and Patrick's house.\n\n\"Maybe I'd better call them first.\" She said as she dug for her cell phone.\n\n******\n\nBarb stood in the same spot for almost fifteen minutes after Louise left. Tears of anger, frustration and an emotion that she didn't want to recognize ran down her face. She angrily wiped the tears away and made a decision. She would put on her happy face and go to the farewell party for her siblings. After that, they wouldn't hear from her again until she had what she wanted. A lifestyle that rivaled that of her sisters and she knew just how she was going to do it.\n\n\"I'll show you.\" she muttered under her breath.\n\n******\n\nLeon found Gene sitting in the hotel bar holding a mug of beer. \n\n\"'What are you doing?\" he asked as he sat down next to him.\n\n\"What does it look like?\" Gene retorted. \"I'm having a beer.\"\n\n\"How many does that make?\" Leon asked.\n\nGene hesitated before replying.\n\n\"None... I haven't touched it yet. I've been sitting here trying to tell myself that one beer isn't going to hurt anything. That it will help me do what I need to do. But that's been my problem hasn't it? Using alcohol to boost my courage I mean.\"\n\n\"Are you waiting for me to tell you not to drink it?\" Leon asked. \"Because if you are, it isn't going to happen. You have to decide for yourself whether to take that drink or not, but if you do; are you ready to accept the consequences? That's the question I ask myself every time I want to smoke a joint or score.\"\n\nGene looked at the beer that he was still holding tightly between his hands and slowly relaxed his grip on it.\n\n\"You know, there's got to be a meeting around here somewhere, why don't we find one?\" Leon suggested. \"I'll go with you if you want me to.\"\n\nGene looked at the beer and then at Leon.\n\n\"Let's go.\" He said.\n\nThey found a meeting not far from the hotel and decided to walk. Gene's nervousness increased as they got closer to the church where the meeting was being held. He hesitated at the door, looked at Leon and walked in. ",
        "He sat in the back and tried to be inconspicuous. He looked around the room surprised at the number and variety of people already there. There were people dressed in business suits to people dressed in shorts and tee shirts. What amazed him was that they intermingled so easily. \n\nA woman in an Armani suit sat down next to a man who looked as if his face hadn't seen a razor in months. Gene listened in amazement as the woman warmly greeted the man by name and then asked if he wanted a cup of coffee.\n\n\"We're all battling the same enemy.\" Leon said as he watched Gene's reaction. \"It's a fight that we can't win unless we support and help each other.\"\n\nIt wasn't long before the meeting started and the moderator was asking if there were any new comers. Leon stood up.\n\n\"My name is Leon and I am a drug addict. I know that this is an AA meeting, but I came to offer my support to any that need it.\"\n\n\"Welcome Leon.\" A chorus of voices said.\n\n\"Yes welcome.\" The moderator said. \"Alcohol is a drug too is it not? Anyone else?\"\n\nGene sat immobilized. His mouth was dry as he finally forced himself to stand. This would be the first time that he publically admitted that he had a drinking problem.\n\n\"Ummm hello, my name is Gene and I'm an alcoholic.\"\n\n\"Welcome Gene.\" The group said.\n\nGene sat down and looked around him. He thought that he would feel a sense of relief; but he didn't. \n\n\"You've just taken the first step.\" Leon whispered.\n\nAfter the meeting, people stopped and greeted them. Gene soaked up the warmth and caring that he felt as he shook hands with members from the group. The moderator was the last one to talk to them.\n\n\"Do you have a sponsor yet?\" he asked.\n\n\"No, but I'll find one as soon as I get back to Pittsburgh.\" Gene replied.\n\n\"Good, it's important to your recovery.\" he said. \"Thanks for coming.\"\n\nThey walked back to the hotel and got into Leon's rental car. It was almost time to face Kevyn.\n\n*********\n\nKevyn looked over at the clock and closed her eyes again. She wasn't sure that she wanted to hear what Gene had to tell her. She knew by the tone of his voice that it was bad, but she couldn't imagine what it could be. \n\nShe turned over to face Patrick who looked to be still asleep. She had a game that she liked to play when he was asleep. She liked to see how close to touching his face she could get before he caught her.\n\nThis time she didn't even get to lift her hand before it was in his.\n\n\"Damn.\" She swore laughing.\n\n\"I've been awake for as long as you've been.\" He said laughing as he pulled her so that she was flush against him. \"I'm so ready to have you all to myself.\"\n\n\"I'm ready for that too and we still need to talk about school. I still want to go.\"\n\n\"I was hoping that you would. \" Patrick replied. \"You'll have to retake the anatomy and physiology class; but it can't be from me. It wouldn't look right.\"\n\n\"I know and I don't want you to make any suggestions either.\"\n\n\"I knew you'd say that.\" Patrick said, \"I also know what you're going to say next.\" He said nuzzling her neck.\n\n\"Alright smart ass, what was I going to say?\" Kevyn asked.\n\n\"You were going to tell me that you're going to use your maiden name.\" Patrick replied. \n\n\"How do you feel about that?\" Kevyn asked.\n\n\"I have no problem with it.\" Patrick said. \"In fact, I think that it's a good idea. You seem surprised.\"\n\n\"I am kind of.\" Kevyn replied.\n\n\"Why?\" Patrick asked. \"I know that you're my wife, you don't need to use my last name to prove it.\"\n\n\"I just don't want any special treatment because I'm married to you.\" Kevyn said. \n\n\"I Understand.\" Patrick replied. \"Enough business, I think that we have time to....\"\n\nThe phone rang before he could finish his sentence. He reached over Kevyn and answered the phone.\n\n\"Louise? Hi... Gene and Leon are supposed to be coming in about an hour... what's going on? I don't know, Gene wants to tell Kevyn something.... Now? Barb? What about her? Alright, we'll see you in a few minutes.\"\n\n\"What's going on?\" Kevyn asked.\n\n\"I have no idea.\" Patrick said, \"She only said that it had something to do with Barb.\"\n\n\"What now?\" Kevyn muttered.\n\nLess than five minutes later, Louise and Nathan were sitting in the kitchen with Kevyn and Patrick.\n\n\"So what's up?\" Kevyn asked.\n\nLouise told them about her short meeting with Barb.\n\n\"She's still angry with us but.... Kev, she's pregnant. I didn't say anything because she would have denied it and she would have wanted to know how I knew.\"\n\n\"Are you sure?\" Kevyn asked.\n\n\"I'm sure and here's the kicker, I think that Thorne Blackwell is the father.\"\n\n\"Thorne?\" Kevyn asked. \"Oh shit!\" she added when she understood the implications of the pregnancy\n\n\"Exactly.\" Louise said. \"I know that Gene and Leon are coming over, but I wanted to let you know. As far as what we can do about it, at this point nothing. We have to wait for her to come to us.\"\n\n\"She won't do that.\" Kevyn said.\n\n\"No, she won't.\" Louise agreed. \"I have a feeling that she's going to use the baby to get Thorne to marry her. But look, we'd better get going. Can you call me when you're done with Gene and Leon?\"\n\n*******\n\n\"Maybe this is a good thing.\" Kevyn said after Nathan and Louise were gone. \"Maybe a baby will help Barb think about someone other than herself.\"\n\n\"Maybe so.\" Patrick said. \n\nHe could almost see the wheels turning and decided to put an end to any doubts before they took root.\n\n\"We will have a baby when the time is right.\" He told her. \"And even if we don't, it changes nothing between us.\"\n\nKevyn sighed. \"I know that. I'm just trying to figure out the logic of your fates. I mean, Lou is pregnant and that's great. She and Nathan will be great parents and that kid is going to be loved and cared for. On the other hand, there's Barb who's pregnant by a man who used her. Kids were never a part of her life's plan but yet, here she is pregnant. I don't get it.\"\n\n\"The fates are fickle creatures.\" He said kissing her temple. \"Don't bother trying to understand them. You'll drive yourself crazy.\"\n\n\"I wish that I could talk to one of them.\" Kevyn said. \n\n\"What would you say to them?\" Patrick asked.\n\n\"I would ask them why they made some of the stupid assed decisions that they made.\" Kevyn replied. \n\n\"They're here.\" Patrick said before Kevyn could elaborate on her answer. \"But hold that thought. I want to hear what you would say to them.\"\n\n*******\n\nGene sat in the car too afraid to move; but knowing that he had to. Leon sat in the driver's seat patiently waiting for Gene to indicate that he was ready to go in. There was nothing that he could say to make it any easier for him other than he had been in his position not that long ago.\n\n\"How did you do it?\" Gene asked nervously.\n\n\"It wasn't easy.\" Leon replied. \"There were a lot of false starts, mumbled apologies and tears. I think that the hardest part of it was going to mom and dad. Seeing the hurt and disappointment in their eyes was worse than being beaten; but we got through it just like you will.\"\n\nGene nodded and looked out of the window and at the house. He opened the car door acutely aware that he was sweating and that his hands were shaking. He stood by the car and waited for Leon. His heart pounded as they walked side by side to the front door of the house.\n\nKevyn answered the door and let them in.\n\n\"Are you hungry? Can I get you anything to drink?\"\n\n\"I'll take a soda if you have one.\" Gene said.\n\n\"Sure... is cola alright?\" she asked giving Gene a curious look.\n\n\"Any kind is ok.\" He replied nervously.\n\n\"Gene, are you alright? You look peaked.\"\n\n\"I've been better.\" Gene replied quietly. \"Is Patrick here?\"\n\n\"He's in his office. He thought that we might need to talk privately.Gene, what's going on?\"\n\n\"Could you go get him? I want him to hear this too.\"\n\nKevyn looked at Leon who gave her a nod and a smile. When Kevyn left to get the drink and Patrick, Leon put a hand on Gene's shoulder.\n\n\"You're doing great.\" He murmured.\n\nA few minutes later, Kevyn was back with Patrick. Gene looked away when Patrick looked at him. It started the way Leon it would. Several false starts later, he was confessing to everything.\n\n\"I for all practical purposes sold you to Clay Robinson. I was the one who told him when you were coming into town.\"\n\n\"Gene, why would you do that when you knew how I felt about him?\" Kevyn asked.\n\n\"I.... it was for the money. When Dana left, she took everything... but the problems started before that. I was drinking on the sly, only Dana knew; but after a while she couldn't take it and she left. \n\nI got to the point where I just didn't care anymore and started drinking even more. I had to do something to save my job so I went to Clay to ask him to invest with me. He agreed, but told me that I had to do something in return.\"\n\n\"You had to let him know when I was home.\" Kevyn murmured.\n\n\"Kev, I'm sorry... I thought that it was a onetime thing, but it wasn't. Every time I asked about the money he blew me off and asked me when you were coming home again. When he did give me money, it was such a small amount that it wasn't even worth writing up as a proposal. I tried to save the money so that I could make an investment but I always ended up using it for something else.\"\n\nKevyn hesitated and then spoke.\n\n\"Gene, I'm going to tell you why I left home the way I did and why I wanted nothing to do with Clay Robinson.\"\n\nGene and Leon sat with their mouths open as Kevyn told them about the night she saw Clay and his friends kill someone.\n\n\"I remember that!\" Leon said. \"You saw that? Why didn't you say anything?\"\n\n\"Because I was afraid that he would come after you guys and I thought that he might kill me.\"\n\n\"I didn't know.\" Gene murmured. \"He never said anything about that night.\"\n\nSomehow, hearing about that night made the rest of what he had to tell her more difficult. He took a big gulp of the soda almost spilling it because his hands were shaking so hard.\n\n\"I need to tell you something else.\" Gene said and stole a glance at Patrick whose expression was unreadable.\n\n\"The night that Clay was killed, you were supposed to die. I..... I had a gun. Clay was going to make a huge investment if I killed you. I didn't want to do it; but I didn't see any way around it. I agonized over it and.....\"\n\n\"You were going to kill me at mom's repast dinner?\" Kevyn asked shocked.\n\n\"No, I mean you know how superstitious Clay was about things happening at funerals. I went back and forth about which of you I would kill; but the choice was taken out of my hands.\"\n\nKevyn went into a quiet shock as she tried to digest what Gene had just told her. Her own brother had thought about killing her for money. For the thousandth time, Kevyn felt like they could all be on the panel of a bizarre television show.\n\nShe felt arms go around her as she began to shake in pain and anger. She shook them away as she stood up and glared at Gene.\n\n\"What in the fuck is wrong with you and Barb? Both of you want everything handed to you on a silver platter and are willing to do anything to get it including hurting your own family! This isn't how we were raised! You were supposed to help us; but you didn't. You fought me at every turn, you didn't.... and now you tell me that you traded me for Clay's money?\"\n\nTears ran down Kevyn's face as she took another step toward Gene. Patrick moved to her side ready to intervene if things got out of control. He noticed that Leon had also moved, ready to jump in if necessary.\n\nGene sat on the sofa with his head bowed. His shoulders shook as he sobbed. There was nothing that Kevyn could say or that could make him feel any worse than he did.\n\n\"What's wrong with working for what you want?\" she asked softly. \"You knew who Patrick was, why didn't you contact him about investing instead of alienating him? You had options!\"\n\n\"I know that now.\" Gene said, \"I'm sorry! I don't know what else to say.\"\n\nGene then looked at Patrick fully expecting to see fury. What he saw was anger that was mixed with... respect and understanding.\n\n\"I owe you an apology too.\" Gene said to Patrick. \"This one is a sincere one. I acted the way I did because you have and had what I wanted-money and power. I wanted it without having to work for it. I sold out my own sister because I wanted it so badly. I came here looking for a way to save my job and instead of being honest about it; I tried to use my sisters to get you to invest. I'm sorry for the disrespect that I showed to you and to them. Kev, I have a lot more to tell you. I told you the worst of it. Sometime, I would like to tell you the rest of it.\"\n\nKevyn barely heard what Gene was saying. She was trying to wrap her head around the fact that her brother had been involved with a drug dealer and a murderer, that he had valued money more than her life. She barely heard Leon and Gene leave.\n\n\"He was going to kill me.\" she whispered to herself.\n\nPatrick put his arms around her and hugged her. \n\n\"Let's go sit in the Jacuzzi.\" He said and began to lead her away.\n\n*********\n\nGene was shaking so hard that his teeth chattered. He was almost positive that he would be carried out in bits and pieces once Patrick heard what he had done. Kevyn, as he had expected was furious and hurt while Patrick had been angry; he hadn't been murderously so.\n\nGene had noticed how both Patrick and Leon were ready to intervene if necessary and realized that at that moment; Kevyn had been more dangerous than Patrick. He also realized that Leon was right about something, the pain, anger and disappointment on Kevyn's face was worse than being beaten. \n\nThe knowledge that that he had lost what little respect that Kevyn had for him compounded the pain. The knowledge that he had gained a little respect from Patrick did nothing to diminish the pain. It wasn't Patrick's respect that he wanted or needed. It was Kevyn's and the rest of his family's.\n\nThe drive back to the hotel was quiet with each man lost in his own thoughts. Leon didn't feel right about leaving Gene alone and made a decision. He would postpone his date with Nadine. \n\n\"Why don't we catch a movie or something?\" Leon asked.\n\n\"What about your date?\" Gene asked.\n\n\"I'll call her; she has stuff to do for school anyway.\" Leon replied.\n\n\"No, you go, I'll be okay.\" Gene replied.\n\n\"Ummm, no you won't.\" Leon replied. \"You've had one hell of a day and it would be easy for you to convince yourself that one drink won't hurt anything. So what flick do you want to see?\"\n\n\"Could we just talk?\" Gene asked.\n\nAs Leon thought, Nadine understood.\n\n\"Gene is lucky to have you.\" She said. \"Why don't you come to my house for lunch tomorrow?\"\n\nThey set up a time for lunch and then hung up.\n\n\"I take back everything I said about her.\" Gene said. \"She's good people.\"\n\nLeon made a pot of coffee and called for sandwiches. It was going to be another long night.\n\n*********\n\nHans packed up the cookies that he made for the children and put them by the door. He paced with excitement at the prospect of his new life. Unable to help himself, he called his sister to share the news.\n\nHe laughed when she squealed loud enough to make his ears ring.\n\n\"Now Gussie, I need you to keep this quiet until she accepts me.... yes, she's lovely and she has three lovely children... two girls and a boy... very well-mannered and intelligent... Juliette... no.... no. I suppose that I'll have to tell her if she asks. \n\nI have more good news; Nadine has found her mate as well. Yes he is worthy of her... he is the brother of my mate. No don't call her, they haven't talked yet... Tonight I believe... yes.\n\nA favor if you please... I will probably be going to Pittsburgh for a time. Could you please keep an eye on things here? Of course the house will be warded; but you never know. Thank you Gussie... Yes I will keep you informed.\"\n\nHans hung up, looked around the kitchen and left grabbing the boxes of cookies on his way out. At the last moment, he doubled the wards on the house telling himself that he needed to be extra careful now that he had found his family.\n\n*******\n\nWanda, Victor and Celeste sat on the couch and waited for Juliette to come out of the bedroom.\n\n\"How many times is she going to change her clothes?\" Victor groaned.\n\n\"I don't know.\" Wanda replied. \"She just wants to look nice.\"\n\n\"She looked nice time before this.\" Victor retorted. \"And we're only going out for pizza.\"\n\n\"What do you think?\" Juliette asked coming out of the bedroom.\n\nWanda and victor looked at each other and laughed.\n\n\"What's so funny?\" Juliette asked looking down at herself.\n\n\"That's the first outfit that you put on.\" Victor replied still laughing.\n\n\"No it isn't!\" Juliette replied and then looked again. \"I guess it is.\" She said sheepishly. \"Maybe ....\"\n\n\"NO!\" Three voices cried out at once.\n\n\"Mom, you look nice.\" Wanda said.\n\nJuliette took a deep breath and let it out. Her children had met other men that she dated but they had never gone out with them. She still had so many questions and little time to ask them. She hadn't believed Hans when he told her that he would move to Pittsburgh if he had to.\n\nWhen the tap on the door came, Victor was off the couch like a shot.\n\n\"Mr. Hans!\" he shouted excitedly.\n\n\"Hello Victor, how are you?\" Hans asked.\n\n\"I'm fine. Thank you for taking us out for pizza.\"\n\n\"You are very welcome. I have a little gift for each of you.\" Hans said handing Victor the box wrapped in paper covered with airplanes. \"You must ask your mother before you eat one, understood?\"\n\n\"Yes sir.\" Victor replied as he ripped the paper from the package. \"Peanut butter cookies! Thanks!!\"\n\nHans handed Wanda hers next. Her box was wrapped in paper covered with microscopes.\n\n\"Chocolate chip! Thank you Mr. Hans and I promise to ask before I eat one.\"\n\nFor celeste, Hans knelt down. \n\n\"Come Celeste, I have a gift for you too.\"\n\nCeleste made her way to Hans and looked at him.\n\n\"Thank you.\" she said as she shyly took the box which was wrapped in paper covered with paints and crayons. Unlike her siblings, she took her time in opening the package taking care not to rip the paper. A big smile spread across her face as she looked at the box filled with sugar cookies of every color with pink being the predominant color.\n\n\"You're welcome.\" Hans said to all of them.\n\nJuliette stood back and watched as Hans gave each child their package. She saw the same gentleness that Angel always showed them when he was around and like Angel; she knew that Hans would keep their children .....\n\nShe broke off the thought before it could be completed. It was much too soon to be thinking in terms of \"our\". She was actually rethinking the whole going out with the children thing, but when she saw the way that Celeste was smiling at Hans and how excited all of the children were to see him; she couldn't back out.\n\nThe pizza place had all kinds of games that could be played for tickets that could be exchanged for prizes. Hans took Celeste under his wing and played 'skee ball' with her padding her tickets enough that she could pick out a stuffed animal.\n\n\"Which one would you like?\" he asked her.\n\n\"The pink one.\" She whispered.\n\nVictor won enough tickets to get a poster with the picture of an Air Force fighter plane and Wanda won enough to get a small stuffed animal which she gave to Celeste.\n\nJuliette sat back and watched Hans as he went from child to child only bringing one of the girls back to her when they had to use the restroom. She was also keenly aware of all the attention that Hans was generating.\n\n\"Damn!\" she heard one woman mutter when Hans passed by.\n\nWhat impressed her was that Hans didn't seem to notice. If he was spoken to; he politely responded but didn't engage in conversation.\n\nFinally, it was time to go. All three children were full and sleepy. In fact, Celeste was already half asleep.",
        "\"Ok guys.\" Juliette said. \"You know the drill. As soon as we get back, you get ready for bed, say thank you and good night to Mr. Hans for the nice evening and then you hit the sack.\"\n\nSurprisingly, no one argued with her. As soon as they hit the door, all three started their night time routine. All three were tucked into bed and asleep within forty-five minutes.\n\n\"Would you like a cup of coffee?\" Juliette asked.\n\n\"I'm fine thank you.\" Hans replied. \"Come sit next to me.\"\n\nJuliette paused and then sat down on the sofa next to Hans. She didn't object when he took her hand in his and stroked the back of it before turning it over and stroking the palm. Her breath caught when he brought her hand to his mouth, gave the palm a quick but light lick; and then kissed it.\n\n\"Tell me what you're thinking.\" He said.\n\n\"I'm thinking that I can't possibly stay here.\" Juliette replied deciding not to prolong things. \"I can't uproot my kids for what could be a fling; they had a hard enough time when their dad and I split up. They like you and if this didn't work out; they would be devastated.\"\n\n\"Do you really believe that this is a fling?\" Hans asked.\n\n\"Maybe.\" Juliette replied. \"But even if it isn't, there are other issues. Believing you about being a vampire isn't one of them. I saw you levitate remember?\"\n\n\"The children.\" Hans said. \"I understand your concerns; how can I alleviate them?\"\n\n\"I don't know that you can.\" Juliette replied. \"If it were just me I'd say the hell with it and go for it; but Hans, I can't do that no matter how much I may want to. Do you understand?\"\n\n\"I understand, but Juliette; how much of this is your being frightened?\"\n\n\"I'm not scared!\" Juliette exclaimed.\n\n\"Aren't you?\" Hans countered. \"Everything that you've said involves the children. Please don't misunderstand, they are a very important part of this but you have to be honest about your own feelings too.\"\n\nJuliette hesitated before she spoke again.\n\n\"I told you that this was too fast. The last time I met a man, we clicked just like we did. He said that he liked kids and that he wanted to meet mine. I liked him and went for it. We took the kids to a movie and they liked him. The next thing I know, I'm getting the you're a nice person speech and I had to deal with some very hurt children.\"\n\n\"Did Celeste like him?\" Hans asked already knowing the answer.\n\nJuliette frowned.\n\n\"No, she was the only one who didn't. Why do you ask?\"\n\n\"Have the children met any of your other dates?\" Hans asked.\n\n\"No, after that one time, I never allowed it to happen again.\" Juliette replied.\n\n\"May I be honest with you?\" Hans asked.\n\n\"Okay.\" Juliette said nervously.\n\n\"I think that you know that this isn't a fling as you call it. I also think that while your concern for the children is valid and understandable, you're using it to hide your own fear of failure in a relationship. I don't know what happened in your relationship with the children's father; but judging by the way the children talk about him, he loves them very much and he loved you as well.\n\nI also know that in human terms that this is fast. That is why I told you that I would give you all the time that you needed. I am fully prepared to do the human mating ritual if that's what it takes. I also told you that I would relocate to be with you and the children; but you don't believe me.\"\n\n\"No I don't.\" Juliette confirmed. \"What man leaves a good job to move to a city where he knows no one except for a woman that he's known for a week?\"\n\n\"A man who knows where his future lies.\" Hans replied. \"You and those children are my future. I knew it from the moment you walked into the hotel. Juliette, I love you and those children. I don't expect or want to replace their father; but they are already loved as if they were of my blood.\"\n\nJuliette's heart and mind battled with her mind winning.\n\n\"I can't do this now. If we were staying, I would love to do the human dating thing with you; but we're leaving.\"\n\nThey talked until early morning. Juliette finally told Hans about Angel.\n\n\"I was the one who messed up so I guess you're right; I'm afraid that I'll screw up again.\"\n\n\"You are now a different woman.\" Hans said. \"You have matured and you are raising three beautiful children. I see you not only as my mate and mother of my children; but as someone who isn't afraid of work and who will work by my side.\"\n\n\"You seem sure that I'll say yes.\" Juliette said.\n\n\"That is because I know that it will happen.\" Hans said with a smile.\n\n\"I have a question for you.\" Juliette said.\n\nHans nodded his consent; he knew what was coming.\n\n\"Who was the woman that turned you away?\"\n\n\"Before I tell you that, I want to reiterate something. She has nothing to do with what I told you. Her rejection of me has nothing to do with my wanting you.\"\n\n\"Barb.\" Juliette whispered. \"It was Barb wasn't it?\"\n\n\"Juliette....\"\n\n\"'Let me guess.\" Juliette said. \"You don't have enough money for her and you didn't put up with her crap. No wonder she looked like she swallowed a lemon when you came to breakfast with us!\"\n\n\"You're not angry?\" Hans asked.\n\n\"Why should I be?\" Juliette asked. \"Her loss is my gain, but I have a question. How did you get out of it? I mean, I thought that the mate thing couldn't be broken.\"\n\n\"Believe me when I say that I pestered the fates so much that one of them paid me a visit. They told me that the decision had been made and that I needed to deal with it.\"\n\nHans told Juliette about the night at the club.\n\n\"By that time, I was going to accept her as my mate and find a way to coexist with her. Had she accepted me, I would have fought to the death for her. But she didn't, she refused me several times with two of those times being in the presence of the vampire that she went home with. When that happened, I planned to spend eternity alone and I was fine with that. Imagine my shock when you walked into the hotel.\"\n\n\"Did he hurt her?\" Juliette asked.\n\n\"It depends on your definition of hurt.\" Hans replied. \"At the very least, I'm sure that he hurt her pride.\"\n\n\"She must be furious with us.\" Juliette said. \"Barb always wanted so much but we were never able to afford the things that she wanted.\"\n\nJuliette told Hans about the poverty of their childhood.\n\n\"Things were so tight sometimes we didn't where the money for electric was going to come from; but it always worked out. We may not have worn the latest styles but we didn't starve and we had clothes even if they were hand me downs. I guess it affected Barb more than it did the rest of us.\"\n\n\"I understand poverty.\" Hans said. \"My family lived from day to day not knowing if we were going to find a safe haven or not. We could live on blood but we also needed human food. There were times when we didn't eat human food for days. By the time we reached Lund, we had nothing except for the clothes on our backs. \n\nOne night my brother Rikard came home with a satchel filled with food. As soon as we saw it, we set upon him like vultures. My father stopped us and we couldn't understand why. After all, we were starving for human food; why would he deny us? \n\nMy father asked Rikard how he had come by the food. At first Rikard lied and said that he found it. Of course we knew that he didn't find it, but that didn't matter; we wanted it. Finally, he confessed to stealing it. He tried to explain to my father that he was helping and that he couldn't bear to see us hungry.\"\n\n\"What happened?\" Juliette asked.\n\n\"My father made him take the food back. We all objected and begged to keep just a little of it, but father would hear nothing of it. When Rikard returned, father sat us down and explained why he made Rikard take the food back. \n\nWe are Ahlbergs he said. We do not steal for any reason. Once you do it, it becomes easier to steal the next time and the reason will be less pressing. We do not use others to satisfy our hunger. He said that because it came out that Rikard compelled the people to give him the food. \n\nFather went on to tell us that there is nothing more important than family and integrity. I believe that is why my family has remained so close. If one was in need, someone stepped in and helped. There was no taking advantage of each other. It is still that way between us.\"\n\n\"Did you eat that night?\" Juliette asked trying to imagine what it must have been like to be so close to food and then to have it taken away.\n\n\"No, but we did the next night. It was food intended for the pigs, but it was a feast to us. Things slowly got better once we moved to Lund. My father found work with a vampire who was building a home in the country. Since we needed food and lodging more than money, my father worked for nothing in exchange for the things we needed.\n\nWhen the house was completed, the vampire gave my father a letter of reference. That letter opened doors for us. Our family name became well known because of our hard work and honesty.\"\n\n\"That's quite a story.\" Juliette replied. \n\n\"It's true.\" Hans said with a smile. \"My point is this, millions of people are poverty stricken and they work to better their station in life. They don't wait or look for someone to take care of them nor do they hurt their families to get what they want. \n\nI hope that your sister realizes that there is more to life than money and that it doesn't guarantee happiness.\"\n\n\"Do you think that there will be someone for her?\" Juliette asked.\n\n\"Who can say? Our fates are temperamental. They must have been in a good mood when they decided to give me another mate.\"\n\n\"Hans, I'm not saying no.\"\n\n\"I Know you aren't\" He replied. \"I need to go; the children will be stirring soon. May I take you and the children to the gathering tonight?\"\n\n\"We would like that.\" Juliette replied.\n\nBefore she could change her mind, Juliette leaned over and kissed Hans' cheek. Her nipples tightened when her lips touched the smooth skin of his jaw.\n\n\"Do you feel it?\" Hans asked softly as he took her face in his hands. \"Trust what you know to be true.\"\n\nHe leaned forward and brushed his lips lightly across hers before kissing her. All too soon, Hans broke the kiss.\n\n\"I will see you tonight.\" He said and then vanished from where he sat.\n\n\"Stick to your guns.\" Juliette muttered to herself. \"Stick to your guns,\"\n\n*******\n\nLouise laid in bed her head resting on Nathan's shoulder. She couldn't get Barb out of her mind. A baby she thought to herself. She couldn't imagine not wanting her baby, but then; she and Barb were in two different places in every possible way. The problem was she didn't know how to close that gap.\n\n\"You're thinking too hard.\" Nathan said softly.\n\n\"I know; but I can't help it.\" Louise replied.\n\n\"Sweetheart, I owe you an apology. I shouldn't have argued with you about seeing your sister alone. I know that even at her angriest she would never hurt you. You have enough to deal with without me adding to it. I'm sorry.\"\n\n\"Thank you.\" Louise said. \"I appreciate that. How do you think Thorne is going to react to the news?\"\n\n\"I don't know him, but judging from what I saw at the club; not favorably. Lou, you do understand that Thorne and Barb are mates don't you? That's the only way that she could have gotten pregnant by him.\"\n\n\"But wasn't your grandmother raped by your grandfather before your father met her?\" Louise asked. \"Your father is your grandfather's son.\"\n\n\"That's true and I have no explanation for how or why that happened.\" Nathan replied. \n\n\"Do you think that Barb and Thorne were meant to be together from the beginning?\" Louise asked\n\n\"Are you asking if the fates made a mistake when they paired her and Hans? Possible although I don't think they'd admit to it. I think that it was a combination of things that caused the change including the fates screwing up.\"\n\n\"Well, it looks like Barb's going to get what she wants.\" Louise said. \"I hope that it's all she thought it would be.\"\n\n********\n\nLeon stayed awake with Gene following his lead. They talked when Gene needed to talk, kept quiet when he needed quiet. It was during one of the quiet moments that Leon wondered if he should tell Gene about the job offer. The topic of his job and living situation came up at least once an hour.\n\nFinally, he understood what was happening. Gene was trying to get him to change his mind. It was confirmed during the last conversation they had.\n\n\"You know what I was thinking?\" Gene asked. \"I was thinking that maybe we should live together. It would cut expenses for both of us.\"\n\n\"Shit.\" Leon muttered under his breath as he debated what to do. Finally, he made his decision. He would tell Gene about the job offer. If he didn't, Gene would think that he could change his mind and it wouldn't be any easier later on.\n\nGene woke up two hours later, used the bathroom and started making plans again. \n\n\"Maybe we could fix up the house and sell it.\" He said as he sat down again.\n\nLeon let him talk until he stopped to wait for a response.\n\n\"Gene, I'm moving to California.\"\n\n\"But you don't have a job.\" Gene said heatedly.\n\n\"Actually, I do. I just haven't accepted it yet; but I'm going to.\" Leon replied.\n\n\"Doing what?\" Gene asked. \"There aren't any steel mills out here and when did you go job hunting?\"\n\n\"I was approached.\" Leon said \n\nLeon watched as a look of understanding crossed Gene's face.\n\n\"Who was it?\" he asked. \n\n\"Nathan.\" Leon replied. \"I'll be renting a house from him.\"\n\nThe old Gene raised his ugly head.\n\n\"It figures!\" he snapped. \"Your head was so far up his ass .... How much of this has to do with that woman?\" he demanded.\n\nLeon didn't respond immediately. He wanted to give Gene a chance to regain control of himself. Fifteen minutes passed before Gene contritely apologized.\n\n\"I'm sorry.\"\n\n\"It's okay.\" Leon said. \"It takes time to teach yourself how to react differently.\"\n\n\"So tell me about this job.\" Gene said.\n\n\"School? You?\" Gene asked laughing. \"You hated school.\"\n\n\"I still do, but I want to do this.\" Leon replied. \"I'm tired of the Pittsburgh winters.\"\n\n\"I hear you.\" Gene replied. \"What about your apartment? Aren't you ahead in your rent?\"\n\n\"Yes and I'll need to talk to my land lord about that.\" Leon replied an idea forming in his head. \"I'm going to Nadine's for lunch today; will you be alright by yourself?\"\n\n\"I'll be fine and besides, I have a few other people that I need to talk to.\" Gene replied and then hesitated. \"Leon, I really am sorry about my reaction. Congratulations on everything and good luck with your lady.\"\n\n\"Thanks.\" Leon said. \"I'm going to hop in the shower; I'll talk to you later.\"\n\nGene went to his own suite, picked up the phone and called Juliette. She was next on his list of those he wanted and needed to apologize to. After he hung up, he went online to find a meeting.\n\n********\n\nSeveral hours had passed since Gene told Kevyn what he had done and what he was thinking about doing to her. During that time she alternated between rage, sadness and pity at her brother. Gene she knew, was capable of many things, but to plan the murder of his own sister?\n\nDuring one of her calmer moments, she recognized that he didn't have to tell her. He could have gone home and she wouldn't have been the wiser. Something was happening to him and it was for the better but then she would get angry again.\n\nPatrick didn't say much, but offered emotional support. The fact was, he identified with Gene. It hadn't been that long ago that he had to confess his past to Kevyn. He vividly remembered the fear and anxiety that he experienced when he told her. He saw the same fears in Gene.\n\nHe also saw something else; he saw the beginnings of change in Gene. He saw a man who was beginning to accept the consequences of his actions and was trying to make amends. He saw the beginnings of the man that had always been there but had been hidden beneath layers of insecurity and self-doubt.\n\n\"How could he have done this?\" Kevyn asked again. \n\nShe wasn't expecting an answer and was surprised when she got one.\n\n\"Fear can make us do many things.\" Patrick said softly. \n\nKevyn turned to look at him surprised that he wasn't angrier.\n\n\"You're defending him.\" she commented.\n\n\"No but I understand.\" Patrick replied. \"I am angry, but sweetheart, he didn't kill you because he couldn't. In the end, when it counted; he was going to kill for you. He was going to go to prison to save you. That doesn't make anything that he's done right, but I think he's trying to make his amends.\"\n\nKevyn was quiet as she thought about what Patrick said. He was right. In the end Gene had chosen family over the power and money that he craved. The ball was now in her court as to what happened next. Gene had mentioned that there was more but she hadn't been in the mood to hear it. Now she was.\n\nShe wrapped her arms around Patrick and kissed him.\n\n\"Thank you.\"\n\nA few minutes later, she was on the phone with Gene.\n\n*********\n\nLeon finished his shower and went to check on Gene. Anxiety hit him when he saw that he was gone. \n\n\"Damn it.\" He grumbled but then he saw the note written in Gene's fancy handwriting.\n\n\"I went to my room to make some calls. I'm okay.\n\nGene\"\n\nLeon let out a sigh of relief and continued to get ready for his lunch with Nadine. As he dressed, he wondered what she had to tell him. Whatever it was made her nervous which in turn made him nervous. He thought about Gene's question. \"How much of this has to do with that woman?\"\n\nIt was a valid question even though it had been asked in anger. He had been telling himself that he would move even of things between them didn't work out; but was that the truth?\n\n\"No it isn't\" Leon murmured. \n\nWhile it was possible that he would have moved anyway, it was doubtful. He was moving for one reason only... Nadine. He was still nervous about the speed in which their relationship seemed to have taken off and he hoped that lunch with her would relieve some of that anxiety.\n\nNow that he was dressed, Leon turned his mind to other things. The house. Gene had made a good point when he said that the house needed to be fixed up. The thing was; Leon didn't want to sell it. \n\nNot only did he see it as a place of happy memories, he saw it as the place where his life began again after his recovery from his drug addiction began. He called a realtor friend in Pittsburgh and asked him to do an appraisal on the house. His plan, if Gene agreed was to buy it and to fix it up in a way that their parents would have liked.\n\nIf Gene agreed, he would approach the others and ask if they wanted to contribute to the renovation. When the house was done, Gene could live in it or it would be a place for them to stay when they went home to visit.\n\nLeon opened his laptop and started a new document entitled \"House \"\n\nBefore he knew it, it was time to leave for Nadine's house. His stomach fluttered with nerves and rumbled with hunger. He checked to make sure that he had his cell phone and that it was on just in case Gene called.\n\nHe left the room with a sense that he wouldn't be leaving California as he had planned to. He didn't know or understand why he felt that way, but he didn't discard the thought.\n\n\"We shall see.\" He murmured as he walked toward the elevator.\n\n*******\n\nNadine checked the jalapeno bread that was baking in the oven and smiled in satisfaction. She had gotten the recipe from Louise who assured her that she couldn't go wrong with spicy food.\n\n\"He loves the stuff.\" Louise told her. \"I'm surprised that he doesn't have problems with his stomach.\"\n\nNadine herself wasn't a fan of spicy food and made plain bread for herself. Actually, she didn't enjoy cooking but conceded that it was probably because she didn't like cooking for one. \n\nShe peeked into the pot of vegetable soup simmering on the stove. It was a recipe that she and Hans used to make when she lived with him. It was simple but filling and she could continue to work on her thesis while it cooked.",
        "She gave the bread one last glance, stirred the soup and went to call Hans for advice.\n\n\"What do I say?\" she asked anxiously.\n\n\"The truth.\"' Hans replied. \"He may have difficulty believing you and may need proof, but always tell the truth.\"\n\nThey hung up several minutes later with her feeling better but still nervous. After checking on the food and taking the bread out of the oven, she took a quick shower and got dressed.\n\n********\n\nLeon pulled up in front of the small house and parked. Surprisingly, his nerves settled. He looked over at the bouquet of flowers and grinned. He was a confirmed romantic. Since he was a few minutes early, he waited in the car.\n\nAfter five minutes had passed, he picked up the flowers and got out of the car. The odor of cooking food grew stronger as he neared the house. As he waited for Nadine to answer the door, he took another look at the house and frowned.\n\nIt was barely noon but all of the shutters on the windows that he could see where tightly closed. He found that odd but then shrugged it off as not important.\n\nNadine answered the door a few seconds later with a nervous smile.\n\n\"Would you like to come in?\" she asked shyly.\n\nLeon hesitated. The question threw him. He had been expecting the usual \"Please come in or welcome to my home.\"\n\nHe recovered quickly and accepted the invitation. As he walked into the house, something niggled in the back of his brain. The niggling was forgotten as his stomach grumbled.\n\n\"Are you hungry?\" Nadine asked.\n\n\"Starved.\" Leon replied. \"Oh, these are for you.\" he said handing her the bouquet of flowers.\n\n\"They're beautiful, thank you. I hope that vegetable soup and fresh bread is alright.\" Nadine said as she took the flowers.\n\n\"It smells great... do I smell jalapeno bread?\"\n\n\"I got the recipe from Louise; I hope that it's hot enough for you.\"\n\n\"I'm sure that it's perfect.\" Leon replied as he looked down at her.\n\nAs of yet, he hadn't kissed her yet. The pecks on the cheek didn't count. \n\nThe scent of food and the rumbling in his stomach was forgotten as Leon took the flowers out of Nadine's hands and dropped them to the floor. Once his hands were free, he placed them on her shoulders and pulled her into him.\n\nNadine looked up at him expectantly and waited. \n\nShe didn't have to wait long. Leon bent down and lightly placed his lips on hers. The kiss was gentle, almost tentative before it deepened into a kiss of want and need.\n\nNadine broke the kiss first. They couldn't go any further until they talked.\n\n\"Let's eat.\" She said backing away.\n\nFood was the furthest thing from Leon's mind but he followed her to the small kitchen. \n\n\"Have a seat and I'll bring it to you.\" Nadine said.\n\n\"I have a better idea.\" Leon replied, \"You sit and let me serve you.\"\n\nAfter going back and forth several times, Nadine finally sat at the table while Leon filled their bowls with soup and sliced the bread.\n\n\"I'll get the beverages.\" Nadine said and started to stand up.\n\n\"Tell me what it is and I'll get it.\" Leon said stopping her.\n\nFinally, lunch was served and Leon devoured every bite of it.\n\n\"This was great and the bread was perfect.\" He told her.\n\n\"Did you get enough to eat?\" Nadine asked. \"If not I can make you a sandwich or something.\"\n\n\"I'm stuffed,\" Leon replied. \"Nadine, you're nervous and to be honest; so am I. I propose that we get out whatever needs to be said so that we can both relax.\"\n\n\"I'm a vampire.\" She blurted out.\n\nLeon looked at her and then laughed.\n\n\"Okay.... That was funny...\"\n\n\"I'm not joking, I really am a vampire.\"\" She said her voice tight with anxiety. \"That's why I asked you if you wanted to come in and don't tell me that you didn't notice the shutters and dark drapes.\"\n\nWhen Leon didn't say anything, she continued.\n\n\"That's why we were so drawn to each other... we belong together just like my father and Juliette belong together... Leon? Say something.\" She said panicked.\n\n\"A vampire? Like that Elvira chick?\" Leon asked still not sure if Nadine was teasing him or not. He got his answer when she responded.\n\n\"That.\" She said tartly, \"Is not a vampire! That is an abomination!\"\n\n\"Whoa baby!\"' Leon said raising his hands in surrender.\" I was just playing along.\"\n\nNadine took a deep breath and calmed down.\n\n\"I'm sorry but I can't stand that woman.\" She said. \"But that doesn't change what I am and what we are to each other.\"\n\nLeon didn't say anything for a long time wondering why he wasn't running for the door and why he believed her. He had never given thought to the question of whether there were other forms of life in the world but here he was sitting with a woman who claimed to be not human and he had to see proof.\"\n\n\"Okay...I'm not saying that I don't believe you, but could you show me some proof?\"\n\nNadine thought about showing him her fangs but changed her mind. She needed to do something that left no doubt as to what she was. She vanished from where she was, stood behind Leon and kissed his neck as she ran her hands down the front of his shirt.\n\nLeon flew out of his chair knocking it over in the process. He looked around for Nadine jumping when she appeared in front of him. Leon was speechless. He has expected her to show him her fangs.\n\n\"Oh shit...this is for real.\" He whispered as he looked for a place to sit.\n\n\"Chair.\" Nadine said softly.\n\nLeon's eyes widened as the chair that he had just knocked over moved behind him.\n\n\"Double shit.\" He murmured still amazed that he wasn't afraid.\n\nWhen he had sufficiently recovered from his shock, they moved to the living room to talk.\n\n\"Tell me everything.\" He said.\n\nSix hours later, Leon knew everything about Nadine and Hans.\n\n\"That was the condensed version.\" Nadine said.\n\n\"Let me recap.\" Leon said. \"Hans is older than Methuselah, you're over a hundred years old and both of you are vampires.\"\n\n\"That's correct.\" Nadine confirmed.\n\n\"You and I were destined to be together and so were Hans and my sister.\"\n\n\"Yes.\"\n\n\"In order for us to be together, I have to become a vampire and drink blood which means that I will always be six feet two inches tall and handsome forever plus I get you.\"\n\nNadine laughed relieved that Leon seemed to be taking things so well.\n\n\"Modest aren't you?\" Nadine teased \"but yes, that's the gist of it.\"\n\n\"In my experience, everything has a downside.\" Leon said. \"So talk to me.\"\n\nNadine spent the next hour giving him the cons of the vampire life style.\n\n\"Secrecy is our best defense. There are those who would like to see us eradicated, but I need to clarify something. You don't have to turn. You can be immortal but any children that we have may be born human. If I had been the human mate, and you vampire; the male child would be born vampire and it could go either way for the females.\"\n\n\"So fifty-fifty both ways.\" Leon mused not liking the odds. \"But if I turn they'll be born vampire?\" he asked.\n\n\"Yes.\"\n\n\"Even the girls?\" he asked.\n\n\"Yes but Leon; we may not have children, not all of us do. If we did it might not be for centuries.\"\n\n\"Who would do the turning?\" Leon asked.\n\n\"It would have to be a male of your choosing.\" Nadine replied.\n\n\"I understand, but back to these people who want to kill you; who and what are they?\"\n\n\"They are called hunters.\" Nadine explained. \"They are as old as the vampire race itself. For the most part they are human, but other species join them. They have made it their mission to destroy us because they feel that we are evil. Make no mistake, there are those of us who are evil and we try to avoid them at all costs.\"\n\n\"Other species? You mean like werewolves?\" Leon asked.\n\n\"Yes and others. Every creature that you've ever heard about in your bedtime stories exists. Some of them are evil, some not.\"\n\n\"Wow.\" Leon whistled, \"I feel like I should be calling a psychiatrist or something... let me ask you something, are the Sinclaires' vampires too?\"\n\n\"Yes but Leon, they have a story to tell. It isn't a pretty one, but it is one that they tell to every new mate and child when they are old enough. I expect that they will tell it to you and Juliette too.\"\n\n\"I don't suppose I can talk to Gene about this.\" Leon said.\n\n\"Could you trust him with this knowledge?\" Nadine asked.\n\nLeon wanted to say yes, but he knew that he couldn't.\n\n\"No,\" he replied, \"At least not yet.\"\n\n\"Then you have your answer.\" Nadine replied softly. \"It's important to remember that we are all responsible for the safety of each other. For that reason, very few humans know of us and we do little to dispel some of their beliefs about us. I can tell you about those later, it's time to go to the party.\"\n\n\"Wait a minute.\" Leon said. \"Don't you want to know my answer?\"\n\n\"Of course I do, but I didn't want you to feel as if I was pressuring you.\" Nadine replied.\n\n\"I was going to leave tomorrow.\" He said. \"I was going to use the time to figure out what this thing between us is. I had to know whether it was an infatuation or something more. I also had to ask myself what the real reason for moving here was and it's you. The truth is, if that job had been offered to me before I met you, I would have turned it down. So now the question is, am I going to be on that jet tomorrow evening? The answer is yes although I admit to having the feeling that I wouldn't be.\n\nI have business to wind up and I have to make sure Gene is alright. After that, I'll be back unless... you want to come with me. I'm sure that we can find a place to stay while we're there.\"\n\nNadine was surprised. She had expected him to ask for time to think. \n\n\"I would like that.\" she replied, \"'but if you change your mind, tell me; I won't be offended or upset.\"\n\nLeon found himself wishing that they weren't going to the party. He had so many questions and he wanted spend the evening and night getting to know this woman/vampire that he was going to change for. \n\nNadine touched his face, ran a finger over his lips and kissed him.\n\n\"Thank you for believing me.\" she whispered and kissed him again.\n\n**********\n\nPatrick and Kevyn were the first to arrive at Jonesy's. Because there were so many coming, Jonesy closed the restaurant.\n\n\"The place is yours for as long as you need it.\" He said after greeting them. \"I also have an ulterior motive; I came up with some new recipes that I want you to try out.\"\n\nNathan and Louise arrived next followed by Juliette, Hans and the children. An hour later, everyone who was coming was there with Barb being the last one to arrive. She had changed her mind several times but decided to show up.\n\nShe sat at a table with Gene in the anticipation of having someone to commiserate with. \n\n\"Hey sis.\" Gene greeted with a sincere smile that made her hesitate.\n\n\"Hey yourself.\" Barb greeted as she sat down.\n\n\"So tomorrow is it.\" She said as she looked around.\n\n\"Yep.\" Gene said. \"Back to the city of bridges and reality.\"\n\nBarb looked at Gene and then at his drink.\n\n\"You aren't drinking beer?\" she asked surprised.\n\n\"No, I'm on what they call the wagon.\" Gene replied.\n\n\"Sure you are.\" she replied with a snide tone in her voice.\n\n\"I haven't had a drink in over twenty-four hours.\" Gene replied. \"I want to tell you something before anyone comes to sit with us. I'm sorry that I wasn't a better brother and person to you. I'm going to try to do better although I'm sure that I'm going to fuck up.\"\n\nBarb stared at Gene as if he were a creature from another planet. \n\n\"What are you up to?\" she asked. \"Is this one of your games to get an investment out of them?\"\n\n\"No game.\" Gene replied. \"The other night when we were watching movies it dawned on me that I haven't done anything that dad wanted me to. I failed him and I failed you guys too. Losing Dana was my fault too. Remember how dad used to tell us that we're responsible for what we say and do? That lesson has finally hit home.\"\n\nBarb was speechless. Gene was sincere. She had lost the one person who truly understood what she wanted.\n\n\"What about your job?\" she asked. \"You were counting on an investment from the high and mighty Sinclaires.\"\n\n\"I'll deal with that when I get home.\" Gene replied.\n\n\"Have you tried to sell your act to anyone else?\" Barb asked.\n\n\"It isn't an act but yes, I've talked to everyone else. You were the last one. There's one more thing that I need to tell you.\"\n\nBarb listened stunned as Gene told her about his involvement with Clay Robinson.\n\n\"You told her?\" she asked shocked.\n\n\"Yeah, she knows.\"\n\n\"And you're still alive to tell about it?\" \n\n\"Patrick was plenty angry.\" Gene replied. \"'But I was more afraid of Kevyn. Jesus Barb, the look on her face... it was as if I'd shot her.\"\n\n\"Leon knows too?\" she asked.\n\n\"Yes, he was as shocked as you are.\"\n\n\"Shock doesn't even cover what I'm feeling.\" Barb said in a hushed voice. \"Damn Gene! You were really thinking about doing that? I've done some things in my time but thinking about murdering my sister? And then you were going to kill Clay?\"\n\nGene's face burned with shame as Barb talked. Hearing it from her made it sound as bad as it was.\n\n\"What about Louise? Did you tell her too?\"\n\n\"Kevyn said that she would tell her.\" Gene replied.\n\n\"Wait a minute.\" Barb said, \"I'm a little rusty on my twelve step program thing, but aren't you supposed to do that?\"\n\nInstead of replying, Gene stood up and looked around the room until he spotted Louise. Barb had made a valid point even if it had been meant as a jibe. He took a deep breath and approached her table.\n\n\"Gene.\" Lou said smiling at him. \"Is everything alright?\"\n\nGene hesitated for a second and then spoke.\n\n\"I was wondering if we could talk before I left tomorrow. There's one thing that I haven't told you.\"\n\n\"Ok, we can meet for lunch if you like.\" Louise replied wondering what else there could possibly be to tell.\n\n\"Can you come to my suite? And Nathan, you come too.\"\n\nGene walked away from the table and went outside. He needed a few minutes alone to calm his nerves. \n\n\"It's hard isn't it?\" Patrick asked from behind him.\n\nGene jumped. He hadn't heard anyone coming.\n\nGene didn't respond but turned away. \n\nPatrick stood beside him but didn't speak for several minutes.\n\n\"I know that we aren't on the best of terms.\" Patrick said. \"But I wanted you to know that I know and understand how difficult telling Kevyn the truth was for you.\"\n\n\"What did you do? Gamble away the kid's college fund?\" Gene asked tersely. He couldn't see how Patrick could possibly understand what he was going through.\n\n\"I wish that it was something like that.\" Patrick replied. \"What I'm trying to tell you is that it wasn't that long ago that I put that same look on Kevyn's face.\"\n\n\"God it hurt.\" Gene said softly.\n\n\"Yes it did and it still does.\" Patrick replied. \"I want to tell you something else. In the end, you chose to save her. That means something.\"\n\n\"It never should have happened.\" Gene replied.\n\n\"No, it shouldn't have and neither should what I did. All we can do is try to make amends and learn how to live with the things we've done.\"\n\n\"What did you do?\" Gene asked again.\n\n\"Let's just say that I hurt people. The whys or how's don't matter. The end result is the same. By hurting those people, I hurt your sister and my family.\"\n\n\"Did she react as badly as she did last night?\" Gene asked.\n\n\"Much worse if that's possible. She ran away from me and went to Pittsburgh. That's why she was there when your mother died.\"\n\nGene was silent as he tried to imagine what could be worse than what he was going to do. He had the feeling that Patrick wasn't going give specifics and didn't ask again. He also had the feeling that Patrick really did understand.\n\n\"Thanks for talking to me, I appreciate it.\" Gene said.\n\n\"You're welcome.\" Patrick replied and walked away leaving Gene alone.\n\n******* \n\nWhen Gene got back, Leon was talking to Barb. He could tell by the look on her face that she didn't like what he was saying. He hung back until Leon got up and walked away shaking his head.\n\n\"What's up?\" he asked when he got back to the table.\n\n\"You tell me!\" she snapped. \"Since when are you and Patrick Sinclaire buddies?\"\n\n\"We're not.\" Gene replied. \"We were just talking. What crawled up your ass?\"\n\n\"Nothing.\" Barb replied remembering her vow to plaster on a smile.\n\nThe restaurant was filled with laughter and music that eventually drew Barb in. She fought it at first and then gave in telling herself that it was all for show. She found herself laughing at Leon's impersonations of several well-known actors. She had forgotten just how funny he could be.\n\nHer good time came to a screeching halt when Leon, who had just been a source of amusement for her stood up and announced that he was moving to California.\n\n\"I'm going home for two weeks to wrap things up and then I'll be back.\"\n\nHe waited until the applause died down before he continued.\n\n\"I'm going to be running one of Nathan's companies and I am so looking forward to the challenge.\"\n\nBarb was stunned. Once again someone from her family was reaping the benefits of the Sinclaire generosity. She was going to say something to Gene, but stopped herself. He had changed or was starting to and no longer had the same agenda as her. \n\nShe waited for the next bombshell, but it didn't come until the dancing began. It became clear to her that Nadine and Leon weren't a fling and that she had been a part of his decision to move. She looked at Juliette and Hans and saw the way that they looked at each other and knew that Juliette would be back too.\n\nIt seemed that everywhere she looked, there were couples who cared about each other. Instead of reevaluating her priorities, she got angry. She renewed her vow not to see her family again until she had what they had. \n\nMoney.\n\nBarb slipped out of the restaurant without speaking to anyone. The only person who saw her leave was Celeste. Her small shoulders sagged with relief once Barb was gone and she let out a soft sigh. She could lift her sheet now.\n\n*********\n\nThe next day was busy with everyone getting ready to leave. Gene had his lunch meeting with Louise and Nathan and told them what he had done. Nathan's expression was unreadable, but Gene didn't get the impression that his life was in danger. What he noticed was that Nathan sat back, listened; but offered no opinion.\n\nLouise was every bit as horror stricken as Kevyn had been and had been just as speechless. Every time she opened her mouth to speak, nothing came out. She hadn't known what to expect, but it wasn't this. \n\nWhen she could speak, the only thing that she could say was \"Oh Gene.\" And then she started to cry. Somehow, the tears were worse than the flat out anger that Kevyn had shown. She didn't ask him why he did it, which surprised him but once she got over her shock, she hugged him.\n\n\"Aren't you angry?'\" he asked her.\n\n\"Yes but what will it change?\" she asked. \"I'm glad that you told us. You're going to get help aren't you?\"\n\n\"Yeah, I already made some phone calls.\" Gene replied.\n\n\"Take care of yourself.\" Nathan said as they walked by.\n\nInstead of being offended, Gene was relieved and glad that it wasn't Louise that he had tried to hurt. He knew beyond a shadow of a doubt that Nathan would have torn him apart.\n\nHe finished packing and put his bags by the door. He took one last look around and went to the lobby to wait for the van that was going to take them to the airport. As he waited, he realized that there was one more person that he needed to talk to.\n\nHe took out his cell phone, pulled up his contact list and looked at the number. He closed the phone. He wasn't ready to talk to Dana yet.\n\nLeon came down and sat next to him.\n\n\"How's it going?\" he asked.\n\n\"I'm tired.\" Gene replied. \"Not physically but emotionally. Does it get better?\"\n\n\"Yeah, it will, but you always have to be on your guard. Make sure that you lean on your sponsor and I'm just a phone call away.\"",
        "\"Where's Nadine?\" Gene asked changing the subject.\n\n\"She's meeting us at the airport. I wanted to run something by you.\" Leon said. \"The other night we were talking about the house and how it needed fixing up. I talked to Kevyn and Louise and we'd like to fix it up and keep it in the family. We would all go in and buy it from you and when it's done, you could live there.\"\n\n\"I couldn't help with the renovations.\" Gene replied.\n\n\"Don't worry about that, what do you think? You could stay at my apartment while the house is being renovated.\"\n\n\"I don't know what to say.\" Gene replied.\n\n\"Kev thought that maybe we could fix it up the way that mom would have liked it. Louise probably knows what mom liked better than any of us and agreed to supervise that part of it if you have no objections.\"\n\n\"What did Barb say?\" Gene asked.\n\n\"She wants nothing to do with it.\" Leon replied, \"Maybe she'll change her mind later.\"\n\n\"Leon, do you realize that the house isn't worth much? It's going to take a lot of money to fix it up\"\n\n\"I know, but it has sentimental value. I don't know about you; but some of my happiest times were in that house. When I got out of rehab, it represented a new beginning for me. The house is in your name; the decision is yours.\"\n\n\"Actually, it was Louise's house until I pressured her into giving it to me.\" Gene said. \"I say let's do it. I'll stand by any decisions Louise makes as long as I can do my own room. I also have another stipulation. I want all of our names on the paperwork and that includes Barb even though she doesn't want anything to do with it.\"\n\n\"Agreed.\" Leon said shaking Gene's hand.\n\n*********\n\nJuliette made the kids check the suite several times. All of them did it, but with long faces.\n\nThe longest face belonged to Celeste. She hadn't spoken or smiled at anyone all morning. Juliette tried to explain why they had to go back to Pittsburgh, but they weren't convinced.\n\n\"You have school and your friends are there.\" She said.\n\n\"We can make friends here.\" Wanda said thinking about Victoria.\n\n\"What about your father, won't you miss him?\"\n\n\"We can call him and we can visit.\" Victor replied, \"Mom can't we please stay?\"\n\n\"NO!\" Juliette replied in a tone harsher than she had meant to use, \"I'm sorry, but we can't stay now get packed.\"\n\n\"What about Mr. Hans?\" Wanda asked. \"Are we going to say goodbye to him?\"\n\nJuliette hadn't thought about it. As far as she was concerned, they already said their goodbyes. A lump formed in her throat when she remembered the way Hans had hugged each child and kissed them on the cheek. Of the three, Celeste was the one who clung to him as if her life depended on it.\n\n\"Don't cry alskling-sweetheart, I will see you again.\" Hans told her. \"I promise.\"\n\nThen the other two were crying. It was almost enough to make Juliette change her mind, but she stood firm. It took several minutes to calm them down and get them into bed. Hans didn't say anything to Juliette as he took her into his arms and gave her a kiss that left her breathless.\n\nAfter he left, she wondered why he hadn't actually said goodbye to any of them. She stayed up in the hopes that she would sleep during the flight back and packed. As she packed she thought about the kiss and blushed. She finally admitted to herself that she didn't want to leave any more than the kids did; but she had no choice. She tried to think of something else instead.\n\nThe house.\n\nShe loved Leon's idea but like Gene, she couldn't contribute financially to the renovations. Leon had given her the same assurances as he had given Gene and she gave the project her seal of approval.\n\n\"Who's designing it?\" She asked.\n\n\"'Nathan, but we have final say. I'm going to ask my friend Barry to oversee the actual work. Gene will keep watch on things and let us know if there are any problems.\" Leon replied.\n\nLike Leon, the house held happy memories for her. She smiled when she thought about the things that her parents did to try to make them happy. Her all-time favorite were the fried biscuits rolled in sugar with hot chocolate on a cold winter night.\n\nAlong with the pleasant memories came a feeling of guilt that she hadn't been more active in the care of their mother and that to some degree, they had denied Louise the right to a normal life by letting her do all of the work.\n\nThat Louise had forgiven them and was now happy did little to assuage the guilt. \n\n\"I can't undo it.\" She whispered. \"I'm sorry mom.\" She whispered and wiped away a tear.\n\nShe glanced at the clock, ordered breakfast for the kids and prepared herself for another round of begging to stay.\n\n**********\n\nHans double checked everything before he got ready to leave the house. He made one last call to his sister giving her the pass word into the house.\n\n\"I'll be gone for as long as it takes.... Yes... oh and I gave Noreen your name and number. She's looking for homes for me. If she calls, would you mind looking at them for me? Thank you... yes call me with your impressions... yes.... Check your email, I've sent my specifications to you... if either of them meet the specifications then yes buy it. No, don't start any decorating; I want to do that with Juliette and the children. Yes... thank you and we will speak again soon.\"\n\nThe next phone call was to Nadine. It was obvious that the revelation to Leon had gone well. He had to laugh when she told him that she just blurted it out.\n\n\"Well, if you had to blurt to anyone, he would be the one to blurt too.\" He said. He laughed again when she told him about the conversation about Elvira. \"I'm sure that you gave him your honest opinion on that subject.\" He teased.\n\n\"I was just calling to tell you that I'm going to Pittsburgh, Pennsylvania for an indeterminate length of time... what? You're going too? Where are you staying? .... You can stay with me if you wish. The Sinclaires' have been kind enough to allow me to use one of their homes. Of course he can stay! He's your mate isn't he? I look forward to getting to know him better. Nadine, I'm happy for you. Leon is a good man.... Yes, I'll see you at the airport.\"\n\nHe made a quick phone call to the house in Pennsylvania to alert them to the fact that there would be two more houseguest. It was too early to leave for the airport so he packed the rest of the cookies that he made for the children and sat them with his bag. When that was finished, he took a moment to thank the fates for giving him Juliette and the children. As an afterthought, he said a quick prayer for whoever Barb's mate was.\n\n\n********\n\n\"When do you think we should tell the others about Barb's pregnancy?\" Kevyn asked Louise over lunch.\n\n\"I don't know.\" Louise replied. \"I know that they would want to know but they have other issues going on too.\" \n\n\"I think that we should tell them and tell them that she isn't ready to talk about it... which is true.\" Kevyn said.\n\n\"But she doesn't want anyone to know.\" Louise countered. \"I only know because I heard the heartbeat when I lowered my shields. She doesn't know that I know so what happens when one of them calls her? How do we explain how we knew? I think that we need to wait for her to say something.\"\n\n\"I guess.\" Kevyn replied. \"Do you think she'll come to the airport?\"\n\n\"I doubt it but I'll give her a call.\"\n\nLouise dialed Barb's number, listened to it ring and then frowned when a message played.\n\n\"This number is no longer in service....\"\n\nThinking that she had misdialed, Louise tried again only to get the same message.\n\n\"What's wrong?\" Kevyn asked.\n\n\"Her number's been disconnected.\" \n\n\"Maybe you dialed wrong.\" Kevyn said taking out her own phone.\n\nShe dialed Barb's number and got the same result. She looked at Louise not sure of what to think. \n\n\"We could go over there.\" She said after a few minutes.\n\n\"She doesn't want to see us.\" Louise said quietly. \"She's on her own now.\"\n\nKevyn started to protest but knew that Louise was right. There was nothing that they could do.\n\n\"Kev, Gene told me about Clay Robinson.\" Louise said. \n\n\"Yeah I'm still trying to wrap my head around that one.\" Kevyn replied. \"It had never occurred to me that Gene was the one selling me out.\"\n\n\"But he's changing.\" Louise said. \"And if he can, so can Barb.\"\n\n\"Change of subject.\" Kevyn said wanting to talk about something else. \"Have you decided on a theme for the nursery?\"\n\n\"Not yet but I was hoping that you would help me with that.\" Louise replied. \"We have some ideas though.\"\n\n\"I would love to help!\" Kevyn replied her voice full of excitement.\n\n\"We have some time.\" Louise said. \"Nathan hasn't started the nurseries yet and I was hoping that Juliette and Barb would help too.\"\n\n\"I think that you can plan on Juliette.\" Kevyn replied.\n\n********\n\nEveryone with the exception of Barb stood around the jet, ready to board. Celeste was in Leon's arms softly crying into his shoulder while Wanda and Victor stood sullenly to the side.\n\nJuliette had given up on trying to get them to see reason and had resorted to the \"because I said so\" card. None of the children had spoken to her since.\n\nGene stood off alone looking at his cell phone. He put it away and joined the group. Part of him was sad to be leaving but the other part of him was relived. California had been an unexpected source of pain for him and he didn't see himself ever relocating. On the other hand, his rebirth had begun here. \n\nNathan and Patrick stood back and let the family say their goodbyes only stepping forward when it appeared that they were finished. They hugged and shook hands with everyone including Gene. \n\nWhen Patrick shook Gene's hand, he gave it a tight squeeze.\n\n\"I want you to remember that I do understand. If you ever need to talk, call me.\"\n\nThe offer surprised Gene.\n\n\"You don't like me so why would you make an offer like this?\"\n\n\"Because we have something in common.\" Patrick replied. \"We both hurt someone that we love and because there are times when you need someone who understands to bear the burden of guilt with you.\"\n\n\"'You aren't going to tell me what you did are you?\" Gene asked.\n\n\"Not now.\" Patrick replied. \"But one day I may.\"\n\nAs Patrick made the statement, he realized that Leon and Juliette would have to be told about the family legacy. He briefly closed his eyes and then opened them again. \n\n\"Here's' my card.\" He said. \"I mean it; call me if and when you need to talk.\"\n\nGene took the card, looked at it and slipped it into his pocket. \n\n\"Good luck.\" Patrick said and walked away to join Kevyn.\n\n*********\n\nKevyn watched Gene and Patrick talk and knew that she couldn't send Gene away thinking that she hated him. When Patrick came back to her, she made her way over to Gene.\n\n\"Hey, I just wanted to let you know that even though I don't understand why you did what you did, I don't hate you. I'm angry and hurt but I'm proud of you too. It took guts to tell us and to admit that you have a problem. I'm glad that you're finally getting help. Mom and dad would be proud of you.\"\n\n\"Kev.... I don't know what to say except thank you.\" Gene replied as tears ran down his face. \"I can only promise to keep trying to be a better person.\"\n\n\"You'll make it.\" Kevyn replied giving him a hug. \"Call us ok?\"\n\nAs Kevyn walked away, she realized that they were slowly becoming the family that their parents would have wanted them to be. She had to admit that it was about time and that it felt good. The only piece of the puzzle missing was Barb.\n\n********\n\nGene was the first on the plane. Dee and the pilots, Bruce and Ben's greeting was a much warmer one than the one he received on the trip out.\n\n\"Hello Mr. Yancy.\" Dee said with a smile. \"I was asked to give this to you.\"\n\nShe handed him an envelope with no name on it.\n\n\"Thank you... Umm I would like to apologize for my behavior during the flight out.\" Gene said as he accepted the envelope.\n\n\"Apology accepted.\" Dee said with a genuine smile on her face. \"I'm pleased that you're feeling better. Please make yourself comfortable.\"\n\n\"I wasn't....thank you Gene said and moved to a seat by a window. Curious, he opened the envelope. His eyes widened when he saw that it was a letter from Nathan.\n\n\"Gene, \n\nPlease contact my office at your convenience. I would like to discuss the proposal that you left for me.\n\nNathan Sinclaire.\"\n\nGene was even more stunned by this than he was when Patrick had given him his card. He looked out of the window and saw Nathan looking at him. When their eyes met, Nathan gave him a nod of his head. Gene nodded back still in a daze.\n\nLeon and Nadine got on next. Leon still had a very upset Celeste in his arms when they boarded.\n\n\"Look Ben! If it isn't cutie pie!\" Bruce exclaimed smiling at Celeste. When she didn't smile, Ben looked at her. \"What's the matter darlin?\"\n\n\"She's upset about something.\" Leon replied. \"It's good to see you guys' again.\" he added extending his hand.\n\n\"It's a pleasure to see you again too.\" Bruce replied, \"I hear that you'll be coming back in a couple of weeks.\"\n\n\"That's the plan.\" Leon replied with a big smile. \"We'd better get moving.\"\n\nThey had just gotten to the cabin of the jet when Celeste began to struggle in his arms.\n\n\"Chill baby girl.\" Leon admonished as he tried to contain her. What's wrong with you?\"\n\nFinally, he put her down and she took off at a dead run. \n\n\"What?\" Leon asked and then saw who she was running to.\n\n*******\n\nCeleste's chest hurt. She didn't; want to leave the place where she had felt safe. She didn't want to go home where she could feel the feelings of everyone around her; she didn't want to leave the safety of Hans.\n\nThe problem was that she didn't know how to say what she needed except by crying and no one understood what she was trying to say. All she could do was hold on to Leon and soak up his warmth. In her anxiety, she had forgotten to shield herself.\n\nShe felt Gene's remorse and hope, the sadness of her siblings, Juliette's indecision and more. On top of it all was her almost over whelming fear. Not even the pilot's warm greeting could cut through the myriad of emotions that ran through her.\n\nIt wasn't until she saw Hans sitting in the back of the jet that she came to life. She struggled to get free of Leon, fighting until he finally let her go. Once she was free she took off at a dead run not stopping until her small brown arms were wrapped tightly around Han's neck.\n\n********\n\nHans was on the jet an hour before Gene got on. He sat in the back not wanting to be noticed right away. Gene had been so preoccupied that he didn't notice him. Hans' attention riveted to the front of the jet when he heard Leon's voice. \n\nSuddenly, a small figure was running toward him. He stayed where he was, waiting for her. The only one of the three children who had known who and what he was from the first time she saw him.\n\nHans caught her as she jumped into his arms and hugged him.\n\n\"I told you that you would see me again.\" he said as he kissed her head.\n\nIt was then that he understood something about Juliette. She had to be shown and not just told. He had done the right thing by going back with them. \n\n\"What are you doing here?\" A voice filled with confusion and relief asked.\n\nHans looked up to see Juliette looking at him in disbelief.\n\n*********\n\n\"Come on.\" Juliette said to Victor and Wanda. \"They're waiting for us.\"\n\nReluctantly, the siblings got on the jet only smiling when they were greeted by the pilots.\n\n\"How's the future scientist and future pilot doing?\" Bruce asked.\n\n\"Okay.\" They replied in unison.\n\n\"We're glad to see you again\" Ben said shaking Victor's hand. \"Want to see the cockpit again?\"\n\n\"Can I?\" Victor asked not looking at Juliette for permission.\n\n\"Check with your mom first.\" Bruce replied.\n\n\"Can I?\" Victor asked. \"Please?\"\n\n\"Don't touch anything.\" Juliette replied. \n\nShe made her way to the cabin and stopped short. She blinked rapidly not quite believing what she was seeing. She slowly made her way to the back of the plane and stopped in front of Hans who was holding a now calm Celeste in his lap.\n\nHer heart pounded as she looked at him in disbelief.\n\n\"What are you doing here?\" she asked.\n\nWhen Hans looked up at her and stood up still holding Celeste, her breath caught. \n\n\"I have finally figured out with the help of Celeste that you need to be shown and not told.\" Hans said as he stepped closer to her. \"This is me showing you that I love you and these children. I told you that I would move to Pittsburgh if I had to I order to be with you and you didn't believe me. Do you believe me now?\"\n\n\"Your job...\"\n\n\"Will be there when we return.\" Hans replied. \"Everything is arranged. We can now date if you wish.\"\n\n\"Mr. Hans!\" Wanda and Victor screamed as they ran down the aisle of the plane. \"Are you coming with us?\" Victor asked.\n\n\"I am. Your mother and I have unfinished business.\" Hans replied as he sat Celeste down on a seat. \n\nHe took another step toward Juliette, took her by her arms and pulled her into him. Juliette put her hands on his waist and looked up into glittering gray eyes. She didn't object when he bent down and kissed her.\n\nShe didn't; hear the clapping or shouts of approval as she returned the kiss.\n\nGene watched and felt a longing that he hadn't felt in a long time. He had loved Dana even if he hadn't acted like it and he loved her now. He began to wonder if she had remarried or was involved with anyone. Both scenarios were a very real possibility but what if she were still free? Had he done too much damage to repair things?\n\nHe looked over at Hans and Juliette who were still standing. The kiss was over but they were still holding each other. Gene took out his phone and time instead of just looking at the number; he hit 'dial\"\n\n\"Dana?\" he said a few minutes later.\n\n*********\n\nKevyn, Patrick, Louise and Nathan watched as the jet took off. Louise interlocked her fingers with Nathan's to her right and Kevyn's to her left. Kevyn then took Patrick's in hers. They watched until the jet was out of sight and then each couple went their separate ways it had been a long, exhausting week both emotionally and physically. It was time for a respite.\n\nAs Nathan and Louise walked toward their car, Louise froze. She was paralyzed with a feeling of foreboding that was gone as soon as fast as it had appeared. \n\n\"Sweetheart? Are you alright?\" Nathan asked. He had felt it too. Had Louise not felt it, he would have brushed it off.\n\n\"Did you feel that?\" she asked seeking confirmation that she hadn't imagined it.\n\n\"Yes but it was gone so quickly that I didn't have a chance to process it. Are you sure that you're alright?\" he asked concerned.\n\n\"I'm fine,\" Louise replied. \"Maybe it was just a fluke.\" She added still thinking about the feeling of foreboding.\n\n\"Maybe.\" Patrick replied; but neither of them believed it."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-15"
}