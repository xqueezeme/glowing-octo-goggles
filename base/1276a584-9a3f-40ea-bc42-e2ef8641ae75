{
    "title": "Incubus Pupa Ch. 07",
    "pages": [
        "Disclaimer: All character engaging in sexual activity in this work of fiction are 18 years of age or older.\n\n**************************\n\nI spent the rest of the day trying to wrap my head around what I'd just done with the girls. Before heading home, I stopped by Ms. Laughtner's classroom to erase her memory of our sordid encounter, figuring she probably didn't need that weighing on her conscience. \n\nAll in all, the fact that I pulled it off at school in the middle of the day with almost zero repercussions was pretty mind-boggling. Better still, the little voice inside urging me to do things was somewhat dimmer since the feeding frenzy, leading me to believe I'd be able to eventually get everything under control. After all, Elias had talked about this being a period of synchronization or something like that. Hopefully once that happened, things would start to look a little more normal for me.\n\nBut right now, today, my life was still a bit of a mess. Every time I felt like I had my hands firmly on the wheel, something came along and gave it a sharp jerk in one direction or the other. I needed to formulate a plan.\n\nWhat were my objectives? I felt like a guidance counselor asking \"where did I see myself in 10 years?\" Boiling it down, I realized that they were surprisingly few: to keep myself fed with Vitae and make my girls happy and secure. What had happened in the band room earlier had me thinking about just how much Vitae I was going to need from day to day, and all signs pointed to a lot. After gaining my wings -- which I suspected may have been some kind of metaphysical construct for the change that had happened inside of me -- I noticed that I was burning through my stores more quickly than before. It made sense. More horsepower; more gas. \n\nWhich meant more girls, so I needed to get on that quickly. I wasn't too eager to find out just what would happen when my Fae \"took over\", as Elias had put it. I'd be subsisting with Sandy and Christine and the occasional one-off here and there so far, but I could tell I'd need more with my newly enlarged reserves. \n\nBut then there were the logistics. Limited by the daily routine of a high school senior, rotating visitation with my girls to feed enough might not be possible without putting undue strain on any one of them. And given how much Sandy had been obsessing over me, I guessed that they'd start making things difficult for me if they only saw me once a week or less. Somehow putting all of us under a single roof seemed the only way to manage things, but that would undoubtedly carry its own issues... And more than that, how the hell was I even going to make that a reality as an eighteen-year-old currently living with his parents. \n\nOn top of it all, there was college knocking on my door, and while I knew that I'd eventually need the credentials it would earn me to make my mark on the world, it had sunk pretty low on my list of priorities. Postponing it a year or two seemed the prudent thing to do to get my new life in order. My parents wouldn't like it one bit, but there was nothing unusual about taking some time to mature and get serious before wasting a lot hard-earned money. \n\nBut how could I make this happen now? Hmm, I did have that money from the business. It wasn't much, but maybe...\n\n**************\n\n\"You're serious?\" Christine's voice was incredulous at my request to move in with her, but it seemed to be a good kind of incredulity. She paused in her lazy gyrations from atop my lap, turning to look me in the eye.\n\nI nodded slowly, slightly uncertain. \"I am. Unless...that's not something that you'd want. I know we've only been together...well, not long at all, and this is probably looks completely nuts. But I like you, Christine, and I want you to be mine, and no one else's.\" I said, gently urging her to resume her slow grinding motion with my hands on the flare of her sinfully wide hips. My cock was lodged in her pussy, and we had been languorously fucking that way on her couch while we watched an episode of some crime show she liked. \n\nHer blue eyes had started misting at my explanation, and she twisted to face me as I finished. Taking my face into her hands, she kissed me tenderly. \"Ohhhh, Adam,\" Kiss, \"Yes!\" Smack, \"Yes, of course!\" Suck, \"I am yours, and no one else's. I'll always be yours. Mmmmmm.\" she moaned, her breath coming heavy, \"Yours,\" Pulling away, she stared into the depths of my eyes, biting her lower lip with a small, suggestive smile, \"Whenever and however you want me.\" Christine continued grinding on me then, closing her eyes in rapture. Damn, this girl knew how to goose my ego. \n\nI knew this position was her favorite, and that suited me just fine. Not least because it gave me a perfect view of her teeny-tiny waist juxtaposed with her jaw-droppingly wide hips and luscious bubble butt. The way her flesh splayed out against my lap as she smushed into me was such a turn-on; the feeling indescribable. A slow and steady flow of Vitae oozed from her; somehow more decadent than getting it all at once. My dick had not left her steamy sheath even once in the past forty minutes. \n\nShe stopped and turned once more to put a hand on my cheek lovingly, crushing moist lips to mine in another kiss -- this one sloppy and wet. \"It makes me sound like a psycho, I know, but I'll admit that I've been dreaming about this ever since you took me home that first afternoon. All I want to do when I get home from school or work is lay around with your cock buried deep in my pussy.\n\n\"I just can't help it. She...unnnnngggh...misses him so badly when he's gone.\" She fattened her lip, affecting a pout. \"His home is...Right. Here.\" Tapping her lower tummy, she punctuated the words, \"Keeping her niiiiice and...uuugghhhhh...full. Ooooohhhhhh.\" Eyes closed, her rocking paused while she tremored faintly in ecstasy.\n\nI hugged her from behind as she trembled her way through another O, pulling her back to my chest. She laid her head on my shoulder, so I rested my cheek on her hair, inhaling her enticing scent. Christine was such a lovely little creature, and I found myself falling for her in ways that had nothing to do with feeding off her essence. \n\nI felt relieved. Christine had been nothing if not a sweet, doting girlfriend from day one, but asking her to move in with me after only a few weeks was a bold declaration no matter how devoted she was. I may have tweaked her here and there with my powers of persuasion, but a few proverbial rolls in the hay weren't exactly the same life choices that becoming a live-in girlfriend was. Using my new abilities to get her to spend her life with me wouldn't have sat right with me. \n\nThis arrangement would work for now. At the very least until I found more permanent digs for my girls and I. From what she had told me, her roommate was gone so often it didn't make much sense for her to pay half the rent. I figured she'd welcome the idea of subletting to me for the remainder of the lease. \n\nThe move would give me some distance from my parents and allow me to keep my food source close at hand, and the drive to school wasn't much further than the one from my parent's. The fact that I enjoyed being around little Christine only made the decision that much easier. \n\nMy parents would argue, of course. It wasn't sensible; \"a complete waste of money\", they'd no doubt say. What high school teenager moved out of his parent's house before college? But the fact was that I was eighteen, and they'd just have to accept my decision. In a perfect world, Sandy's mom would be OK with her joining us too (she'd informed me that her dad was no longer in the picture). I figured she probably wouldn't balk at Sandy at least keeping some clothes there to stay over a few nights a week, if not moving in entirely. Worse come to worst, I was confident I could 'persuade' her mom. \n\nMoney was a concern, but the rent wasn't much, and what I had saved could easily float me until I could start raking in the cash again come the summer of next year. Or, if I got that internship my Mom had proposed... \n\nCome to think of it, since we'd be living together, it was inevitable that Christine would be a party to my efforts to build and sustain a harem. Might as well lay it all on the table.\n\n\"Hey Baby, there's something else I wanted to talk to you about,\" I said, keeping my tone mild.\n\nA deep lassitude had settled on Christine; her mind floating in a sea of endorphins.\n\n\"Mmhmm.\" She murmured, eyes still closed on my shoulder.\n\n\"It's something about me. Something that not many people know.\" She cracked one eye open to peer at me as I continued. \n\nI exhaled sharply, \"Okay, here goes. I'm an...Incubus.\"\n\nHer eyes were open now, but narrowed in confusion. \"An Incubus? What's that? Sounds kinda familiar... Is this like...some kind of roleplay thing?\" A crooked smile slunk onto her face.\n\n\"No, Baby, it's not. You've probably heard of Incubi being...uh...demons. Like...Succubi are female sex demons? Well, Incubi are sorta like the male version.\"\n\nShe chuckled. \"Well, you got the sex demon part right.\" Then she sobered, seeing that I wasn't laughing. \"Wait...you're serious.\" Her eyebrows bunched, \"But, you're trying to tell me you're...some kind of monster? I don't understand. You look normal enough to me...\" She appraised me briefly, \"maybe with a few more than welcome exceptions.\" She bounced her delicate brows suggestively. \n\nI sighed. \"Well, I'm human, but I'm also something more. Didn't you ever wonder at that overwhelming and instant attraction you felt to me?\"\n\nShe cocked her head in thought, \"Well, I guess...no, not really. But thinking back on it, I do kinda remember wanting to rip your clothes off and get you to fuck me hard right there on the floor of the...\" she trailed off, \"Hmm, yeah, now that you mention it, that does seem kind of odd. I don't usually have that kind of connection, even when I meet a hot guy like you.\" She bit her lip and looked up, making a cute little face as she considered.\n\nI smiled, flattered at her casual praise. \n\n\"Are you telling me you took advantage of me or something?\"\n\nCrap, this was heading in a direction I didn't want it to go. \"Well, I don't know if I'd say that...\" Then again, she wasn't exactly wrong. The fact that she was so obviously happy being with me took some of the guilt out of it though.\n\n\"But I can...do things. Things that aren't normal. Like, tinker around in people's heads a little. Mostly to amplify what's already there, or gain a better understanding of how to give people what they want, deep down. So, it's entirely possible -- likely, even -- that we would have ended up together had I not done any of those things. To you. It just gave us a little push in the right direction.\"\n\nShe smiled. \"Good, because to be honest, I really don't care. All I know is that I love you and always want to be with you. I feel so good whenever I'm with you.\"\n\nWoah. That was the first time a girl had told me that. I didn't know how to process the L-word right now, but I felt really warm inside at her words nevertheless. \n\n\"I like being with you too, Baby. But there's more to what I'm trying to say. You see, there are certain, um, peculiarities that I need to deal with. As part of being an Incubus. I know it sounds creepy, but I feed off of sexual energy.\"\n\n\"Feed? So what happens if you don't get enough...food? You'll starve? How does that work?\"\n\n\"Basically, yeah. Honestly, I don't know what would happen. This is kind of a recent thing for me, and I'm learning most of it as I go along. What I do know is that there's something inside me that really, really needs to have sex. Well, more like to give women sexual release, if I'm gonna get technical about it, but it amounts to the same thing. It's gotten a little out of hand at times, but I'm learning to control it.\"\n\nIt was time for the shoe to drop. \n\n\"Of course, what it means is that my needs are pretty significant. Significant enough that one woman alone can't meet them without hurting her.\"\n\nI let her put it together in her head, which only took a moment. \n\nA sly grin crept across her face. \"Adam, are you trying to tell me you need more women in your life?\"\n\nFuck it, I'll go for broke. \n\n\"Not exactly,\" I smirked, looking her straight in the eye. \"I'm trying to tell you I already have them.\"\n\nHer smirk widened as she playfully elbowed me in the ribs. \"Stud.\" \n\nShe thought for a second before continuing. \n\n\"OK, well, whatever. I'm good with it. Though it sure sounds like you're not really asking for my permission, but yeah, I'm good with it. God, what would my mother say?\" she giggled, shaking her head in disbelief. \n\n\"Screw it. It's my life, and I don't care what anyone else thinks. I just want to be yours.\" She laid her head back on my shoulder, \"I don't care how I get you. I can't explain anything about our relationship, but I do know that I've never been this happy in my life.\n\n\"Actually...\" She resumed rolling her hips on my lap, bringing my penis from its half-hard state to fully engorged inside of her. Christine moaned as I grew to fill her. The Vitae she'd supplied me with after her last orgasm had felt a little...thin, so I applied a block to the conduit by which I fed to avoid hurting her. Her slow grind picked up pace quickly as she worked herself up. \"Something about it makes me...\" she started to breathe heavily, \"...makes me kinda hot. It's like, my man is such a beast...\" she crushed her lips to mine, \"...so potent and virile...\" another passionate kiss, \"...so fucking packed full of cum that he needs to find a whole stable of women just to relieve the pressure.\" She shivered. \"Ohgod ohgod ohgod! I'm gonna!... oooooohhhhhhhhhhh.\" She exhaled a long sigh.\n\nI crushed her trembling little chest into my own, enveloping her while pleasure ripped through her. I almost couldn't believe the fact that not only was that easy, just telling her I wanted to make her a permanent fixture in my harem actually turned her on. \n\n\"I'll talk to my roommate about a sublet in a few days when she gets home. I'm sure she'll be ok with it. She's never here anyway. I can't believe this is going to happen! It's so exciting! Mmmm, I get to have you in my bed every night.\"\n\nI still hadn't gone soft within her. We turned back to the TV.\n\n*************************\n\n\"Put some decent clothes on, dear, she'll be here any minute, and you need to look nice! Remember, you should try to wow her if you want a shot at that internship.\" My mother browbeat me while straightening a fork on the dining room table in preparation for her boss's visit.\n\nI'd done my part, tidying up the rest of the house, and everything seemed prepared. The aroma of freshly baked bread and my mother's ratatouille wafted out of the kitchen.\n\n\"What's wrong with what I'm wearing?\" I asked.\n\nShe paused as she lit the candles and gave me a level look. \"Adam, that is not what I'd call decent. And I think maybe it's time we got you some new jeans.\" She gave me an embarrassed look. \"You seem to have...grown out of those.\n\n\"Come on, Honey, I want slacks, not jeans. Hurry up. And a shirt with a collar, please? Now scoot!\" she shooed me away.\n\nI trundled upstairs to comply. I loved my parents, but the inconvenience of stuff like tonight had me eager to move out. Just thinking about what I could do with that freedom was pretty thrilling.\n\nAs I searched my closet for something that would resemble what my mother described, I pondered the potential opportunity I had tonight, and how it might dovetail into my plans for independence. That internship probably paid pretty nicely. Maybe I could work my mojo on my mother's boss. Hopefully, she wouldn't be a complete gargoyle of a woman.\n\nI'd been practicing with my newfound mental awareness; now the little dips and bumps that were people nearby resolved with additional detail, each unique to the individual. Complex forms of variegated color, texture, and shape, I knew on a subconscious level that they were life patterns. And they got even more detailed and intricate the more I focused on them. What I didn't know was what each element of the patterns translated to. Physical traits? Emotions? Desires? Thoughts? Maybe all of them.\n\nFinally dressed, I checked myself in the mirror. The face that gazed back at me looked markedly different than the one in the group shot of me and some friends pinned to the wall. I looked more like a young man getting ready to graduate from college now, not one just about to enter it. And my body had matured to match. Gone was that lanky, almost stretched look that men recently out of adolescence have. My frame had gained some of the bulk that only age could normally bestow.\n\nReturning to the couch in the family room, I killed time browsing some tech website before hearing a car door shut out front. I saw her signature in my mind; definitely female and arriving right on time, it could only be our guest. \n\n\"Mom, I think she's here.\" I called out.\n\n\"Oh! Thank you, Dear! Can you get the door for me? I'm just finishing up.\" My mother scrambled, putting the breadbasket on the table and pulling the steaming entr\u00e9e out of the oven. \n\n\"No problem,\" I responded after hearing the doorbell ring. As I walked to the door, I almost stumbled. Her presence in my mind was beautiful. It had a glow and an...organized complexity. It was the only way I could describe it. Shaking off my awed state, I finally opened the door.\n\n\"Hello...\" Arm extended in greeting, the words died in my mouth as she turned to face me. \n\nShe was absolutely, jaw-droppingly gorgeous. Social media influencer gorgeous. The kind of woman who had hundreds of professionally taken Instagram photos showcasing their perfect body in trendy clothing and comically large sunglasses, lounging on exotic beaches. This woman could have millions of followers. \n\nIn my mind, I felt like Wayne Campbell watching Cassandra from across the bar, saying, \"She will be mine. Oh yes, she will be mine.\"\n\nHer nose was slim, and she had a wide, full mouth with perfect cupids bow lips. Big green eyes were almost luminous in the lamplight, contrasting hair that was nearly black, pinned up high in the back. A thick, shoulder-length tendril of it stubbornly resisted capture, escaping its brethren to drape over one side of her face, giving her a sultry appearance. \n\nThe almost total absence of lines on her tanned Mediterranean skin told me she couldn't be older than thirty, but the depth of her vibrant eyes made me uncertain. A pair of thin, dark-rimmed glasses rested upon the bridge of her slim nose.\n\nShe gave me a radiant smile as I took in her beauty, regarding me in return.\n\n\"Evening. You must be Adam.\" Her hand was cool and soft in mine as she returned my handshake. \n\n\"Erm, yeah. Nice to meet you, Mrs....\" I prodded, continuing to hold her hand, not quite wanting to let go. Her eyes twinkled in amusement.\n\n\"Just Ianthe, please.\" Her voice was throaty and warm.\n\n\"Ianthe.\" I mused, \"That's a pretty name. Come on in.\" I entreated, trying to hide how embarrassed I was with my ridiculous attempt at charm. She finally released me from her penetrating gaze as she entered the house. \n\nHer ensemble was professional; a small, unbuttoned navy blazer assisted her cream-colored dress in showcasing her curvy form. Standing in a pair of black leather pumps, she was several inches short of my six-foot height. The dress hung just north of her knees, its houndstooth pattern hugging her everywhere. I noted the conspicuous absence of a ring on her left hand.\n\n\"Can I take your coat for you, Ma'am?\"\n\n\"Ohhhh, no. None of that. I've got a long way to go before I want to be called that.\" She waved a finger at me in admonishment. ",
        "\"Sorry.\" I chuckled nervously. \"I didn't mean it that way. To be honest -- and don't take this the wrong way -- but you don't look old enough to be my mom's boss. No offense.\" Hopefully, she'd take that as the flattery it was intended. \n\nIanthe crossed her arms under her breasts in mock outrage. \"No? How about old enough to be your boss?\" She said it playfully, without heat, but I felt my cock stir in my pants at the suggestion.\n\nMy mother made her appearance in the foyer then, dissipating the little bit of sexual tension I was feeling. \"Ianthe, welcome!\" she turned to me with a frown, \"Adam, where are your manners?\" my mother gave me a soft slap on the shoulder. \"Offer to take our guest's jacket.\" \n\nNot wanting to look like a child by protesting, I ignored the undeserved barb, simply rolling my eyes in Ianthe's direction to express my frustration. She gave me an understanding smile in reply, handing me her designer clutch purse so she could remove the diminutive blazer.\n\nAs the two women greeted one another, I took the opportunity to start laying the groundwork for my conquest of my mother's boss. My eyes painted feather-light strokes of power over her body. Over the delicate line of her collar bone, up her graceful neck, round each swell of her breast. These were not the uncoordinated attempts of my early transformation. My control had increased dramatically. \n\nI returned to the present. \"...really appreciate you opening your home to me. I feel like I've been going non-stop ever since the move.\"\n\nMom drew us into the living room and motioned for us to sit. \n\n\"Would you care for some wine, Ianthe?\" she offered.\n\n\"That'd be lovely, thank you. I prefer red if you have it.\"\n\n\"Of course! I just picked up a nice Malbec at the market earlier that I think you'll enjoy. I'll go grab it.\"\n\n\"Perfect.\" My mother withdrew, leaving me sitting on the couch with the gorgeous Ianthe. She tucked the errant clump of hair behind an ear with her hand, regarding me.\n\n\"So, Adam, your mother has told me quite a bit about you. She thinks very highly of you.\"\n\n\"Well, I'm not sure that's saying much. Isn't it a law that parents have to brag about their kids to anyone who'll listen?\"\n\nShe chuckled, her eyes twinkling. \"You may be right. I wouldn't know.\"\n\nI squashed an impulse to ask her why she never had kids, figuring it was just as likely to be something she didn't want to be brought up. \n\nIanthe crossed her legs, making the stretchy fabric of her dress plunge into the hip cleavage that materialized. She didn't fix her dress immediately, and it rode up to mid-thigh. I admired her legs for a pregnant moment -- just longer than was polite, noticing how delightfully toned and lean yet thick with muscle they were. My eye lingered over the sexy bulge of her calf muscle. It was hard to believe, but Ianthe was hotter sitting down than she was standing. Smooshed against the couch, her butt extended the curve of her hip, making it even more pronounced.\n\nI got some mixed signals when she returned my leer with a flinty glance that evaporated as she adjusted her dress downward. This surprised me. I swore I had caught her eying me earlier, and she should have been more receptive to the trickle of power I was pushing to her. She might be my toughest capture yet, but my confidence was unshaken. \n\nI struggled to make small talk. \"So, mom tells me you're from Canada? What's that like?\"\n\n\"Yes, my parents were natives of Ohio here in the States, but moved to a suburb of Vancouver for work, where they settled. Canada isn't so different from the US, honestly, but it's a heck of a lot cheaper to live here.\"\n\n\"Ahh, well that's always a welcome change, right?\"\n\nI was saved from grasping for more conversation topics by the ringing of her cellphone. She took it out of her purse and answered it.\n\n\"Yes?\" Her tone was frosty. \n\nA pause, then, \"What do you mean? I specifically told him to check those figures three times. Does the idiot think-\" she cut herself off. \"Put him on the phone.\"\n\nWoah, was this the same woman I was just chatting with?\n\nAfter a moment, she must have gotten \"him\" on the phone. \"Explain.\"\n\nShe stood up and started pacing from the living room into the hall, now fully in business mode. Her intensity was staggering. My mother came back with the wine and a cheese and veggie tray in the meantime. We both waited uncomfortably for Ianthe to finish.\n\nAll I heard for the next couple minutes was a lot of \"uh-huh.\" and impatient \"yeah, yeah, yeah, I got it.\" Finally, she cut him off, \"Look, enough. I told you several times that you needed to verify the numbers with the subs before submitting the ROM to contracting.\" Her finger stabbed at the air with her words, as if she were delivering her ire to him in person.\n\nShe continued to berate. \"You may remember sitting in my office, not two days ago, when I laid all of this out for you step-by-step. I explained it so clearly that a five-year-old could have handled the task, but I gave it to you because I thought you could use it to show you're ready for that promotion.\"\n\nI shot an incredulous glance at my mother that said \"seriously? Is this how she always is?\" She gave me a \"don't ask\" shake of the head. \n\nIanthe wasn't done. \"But now, I have to come in over the weekend, fix your mess, and pray that Geller will accept a retraction and rebid. Whatever you had planned for this weekend, cancel it. Meet me at the office tomorrow morning; 7am sharp. Oh, and you get to be the one that tells the team they'll be joining us over the weekend to fix this mess. Be sure to tell them why.\" \n\nShe hung up. \n\nUh, wow. \n\nShe sat back down with an embarrassed look on her face. \"Ah, sorry about that, Linda. Guess I got in work mode there. It's so hard to find competent people you can depend on, like you. If only you had the bandwidth to manage his division too.\"\n\n\"John?\"\n\nIanthe gave her a flat look. \"Got it in one.\" \n\nMy mother clearly didn't know what else to say, but she went up a couple of pegs in my esteem that night. The fact that she dealt with a boss like this and managed to keep her sanity was impressive. \n\nThe mood mellowed as the three of us continued to chat over appetizers, eventually transitioning to the dinner table where the conversation continued. I was shocked to learn that Ianthe had earned her MBA from Dartmouth at the age of twenty-three, a full year early. Damned impressive for such a challenging and prestigious institution. I found women of that level of intellect alluring, even if it was an allure that was spiked with a heavy intimidation factor. \n\nThe meal was finishing up when Ianthe looked to me, asking, \"So Adam, Linda told me that you're interested in a business career.\" Her eyes bored into me. \n\nI nodded. \"That's my plan, anyway.\" \n\n\"Well, the reason I ask is that we have a program set up at Forge Whiteman to develop young entrepreneurs. Your mom mentioned to me that you've been running some sort of small business doing yard maintenance. \n\n\"That's the kind of thing that impresses the selection committee, if you're interested in applying. I happen to be on the panel, so I might be able to give you a sense of where you stand. You seem a very mature young man; not many people have a knack for finding opportunities and exploiting them.\"\n\nMy face reddened at the notion of having to tell her about my \"business\", and I certainly wouldn't call the few thousand bucks I made each summer exploiting anything. When compared with what this woman did every day, I felt like a kid running a lemonade stand. \n\n\"I'm not sure what my mom told you, but it's not much of a business. I just picked up some used yard work equipment and pay a few neighborhood kids to provide some of the labor. Nothing fancy.\"\n\nMy mother chimed in, \"No, no, Honey, that's a big accomplishment. Don't be bashful. You should be proud of yourself.\"\n\nIanthe's amusement at mom's parental pride peeked through in a tight smile, but she echoed my mother, \"Your mom's right, Adam. Don't sell yourself short. It takes good instincts to set up and operate something like that, especially without any formal education or training. Most kids your age are still using an allowance from their parents.\" \n\n\"Kids,\" was it? That got my back up. Well, no matter. I was pretty sure I'd cracked the code on bad boss Ianthe. After tonight, she'd know exactly how much of a kid I really was. I'd finished dinner; now it was time to feed.\n\n\"Did you want to take a look? I rent some space in the garage from my parents to do all the maintenance on my equipment. I could give you a quick tour if you have a few minutes.\" I hooked a thumb over my shoulder toward the garage.\n\nShe looked to my mother, who helped me out, \"Go ahead. It'll take me a while to clean up all these dishes.\"\n\n\"Alright then, lead the way.\" Ianthe got up to follow.\n\nWhat she didn't realize was that I was priming her throughout most of the meal. Getting a sense of the woman deep inside her. Each chance I got while the ladies spoke, I worked. Reaching into my mental space and focusing on the representation of her (I had started thinking of them as \"avatars\"). The twisting forms of light and shape were mesmerizing. As I observed it, trying to discern patterns in the chaos, I started to understand. Like a codex was opened to me by my subconscious, not only allowing me to see how some features translated to inner desires, but how to manipulate the patterns to aid my own aims.\n\nI reached out mental hands to alter the weave. Exuding a sense of trust into it. Soon, I noticed it responding to my touch. Seemingly random pieces of it started reordering themselves to bring it into a more harmonious alignment with the elements I'd manipulated. \n\nTaking her to the garage, I gave her a dime tour of my equipment, keeping conversation light to build rapport. Through our conversation, I made casual contact with her a few times -- asking about the material of her dress, brushing a wisp of dust that had settled on her shoulder -- and was happy to note that she remained unguarded. \n\nAll evening, Ianthe hadn't responded to my power the way the others had. Her natural resistance was inexplicable, but I was both trepidatious and eager to have to do most of the work without cheating.\n\nI talked of organization and the detail that went into my planning, and she responded positively. \"Well, this is certainly impressive. I think you'd be a great candidate for our program. If you're interested, have your mom let me know and I can send you all the application documents.\"\n\n\"Do you mind sparing another minute or two? I wanted to get your take on my accounting system. I thought you could give me some tips.\"\n\nShe glanced at her phone to check the time.\n\n\"Well...\"\n\nInternally, I caressed the core of her avatar, infusing it yet again with warmth and trust. \"Come on, it'll just take a sec.\" I pressed. \n\nShe shivered a little, nodding uncertainly. \"Yeah. I suppose your mom is probably still clearing dinner. Let's take a look.\"\n\nI had occupied the large loft space above the garage some years prior to shelter my comings and goings from my parent's prying eyes. It worked beautifully for this reason now.\n\nAs soon as I had her in my room, I quietly closed the door behind us. She moved toward my PC as if nothing was untoward.\n\n\"Ianthe.\"\n\nShe looked back to me, immediately discerning the difference in my tone. Her defenses went up.\n\n\"Yes?\" she said uncertainly\n\n\"I saw how you were looking at me tonight.\" Closing the distance between us, I stood up straight and looked down into her eyes, emphasizing our height difference.\n\n\"Adam, whatever you think you saw, you're mistaken.\" She looked up at me, challenging me with her eyes. I'd seen the little girl inside her though. I sensed that my power had etched faint cracks in the shell enclosing her, but somehow, I needed to smash it open. \n\n\"Don't deny it, Ianthe. I saw you...watching me.\" I said, peering down past the bridge of my nose to the bulge in my crotch that defied concealment. Her eyes widened as she sucked in a quick breath. \n\n\"Adam, this is inappropriate.\" Her voice was hard and filled with anger. She tried to shore up the cracks as more appeared beneath my power.\n\n\"Now, you and I are going to go back downstairs, finish our evening, and forget all about this. Are we...\" she cleared her throat, blushing as I stepped even closer into her personal space, radiating confidence. I caught her momentarily glancing down at the bulging pecs evident in my thin cotton polo shirt. More cracks. \n\n\"Are we clear?\" She gulped, trying to steel herself into a presence of authority, fumbling with the mental mortar to shore up her defenses. Just a bit more... \n\nI continued my assault on her with my power, bludgeoning her with waves of it, eschewing a nuanced approach for brute force to stoke her libido and emphasize my dominance. The signs were finally there: heavy breathing, flushed d\u00e9colletage. But she was too intelligent to let her base desires rule her completely, I needed to reach her there too.\n\n\"How difficult it must be...being Ianthe.\" I mused, my voice calm control.\n\n\"A towering intellect with the body of a goddess.\" Her blush deepened, and she looked down for a moment. \"Having drive, determination, and an indomitable work ethic, but forced to Kowtow to inferior men every day to play the game and rise through the ranks. Weathering the attention of lecherous dogs who sniff and paw at you, ejaculating cheap praise upon you in feeble attempts to gain your favor. \n\n\"I suspect you chased some trite notion of love and marriage for years, turning away specimen after perfect specimen of masculinity, always searching, but never finding one with the ability to keep pace with you. To match your brilliance. Finding none that knew the real you, or how to reach her, you eventually gave up.\"\n\nSensing that what I was saying was resonating with her and she was unlikely to bolt, I got even closer and gently placed my hand on the curve of her lower back above her butt. My touch was light but channeled possession. She quickly darted a look down at my arm, but returned to my eyes when I continued.\n\n\"You probably had to work three times as hard as all your male peers just to keep pace with idiots that relied on nepotism and shortcuts to advance. Taking on the face of a monster with your subordinates when they show the slightest ineptitude to ensure that pace.\"\n\n\"But it's a curse, all that power. It forces the real you -- not the Ianthe I saw on the phone in there, but the girl in here,\" I pointed to her heart, \"to be something she's not. \n\n\"She doesn't want control, or power, or dominance. She has no need for them. She just wants to be told how to be a good girl so she can be accepted and loved. Always. \n\n\"But you've buried her under Ianthe, and now you can't be happy because she's not happy. But I can give her happiness. I can help her never doubt who she is, or that she's cherished and respected.\" \n\n\"Oh, come on. You think you can spend two hours psychoanalyzing me and all of a sudden you know me? You're just a boy.\" Her voice was shaky. Uncertain.\n\n\"Ianthe.\" I gave her a dubious look. What she was showing me was obviously a last-ditch effort to reassert herself, but her body language convinced me she'd already cracked. \"I think we both know that I'm more than that...\"\n\n\"I can give you...\" I traced an index finger across her collar bone, curving downward over her left breast to the where a hard nipple tented the fabric. \"...pleasure.\" She moaned as my fingertip left a trail of fiery ecstasy across her skin, looking at me in wonder.\n\n\"Make you feel cared for.\" My incubus was sharing the secrets of her life pattern, giving me astonishing insight into how to manipulate her. I held her avatar in my mind, infusing it heavily with the love of a provider. A protector. It drained my store of Vitae significantly, but it was worth it when she closed her eyes and silently basked in the sensation of her soul feeling complete.\n\n\"How are you doing...? What...\" she continued to gasp from the pleasure. \"What are you?\"\n\n\"I am your master, and you are my precious child.\"\n\nShe looked up to me with eyes filled with acquiescence and...hope? I looked down at the swells of her heaving breasts. Her nipples looked ready to rocket through her dress. I started to detect the bouquet of her musk in the air as she reacted to my power.\n\n\"Y-yes.\" She whispered as if in a trance, licking her lips and staring at mine as I continued to work my power into her. I reached behind her and slowly pulled the pins from her hair, setting thick, lustrous waves of it tumbling about her shoulders. \n\n\"Good.\" I nodded, channeling the gentle patriarch. \n\n\"Now, kneel and swear yourself to me, and I will lift you out of this painful existence. Take all your troubles away.\"\n\nShe dropped to the floor slowly, first on one knee, then both, overwhelmed with emotion as she looked up at me. Awe, lust, and relief warred for purchase on her face.\n\n\"I-I swear.\" \n\n\"Good, now repeat after me.\" She bowed her head. \"I accept Adam Connor as my rightful Master...\"\n\n\"I accept Adam Connor as my rightful Master.\" Her voice wavered slightly, but her eyes burned with determination. \n\n\"As his slave, I give him my eternal bond of obedience, and will follow his will in all things...\"\n\nShe parroted my phrasing, nodding.\n\n\"I will seek to please him with my every word and deed...\"\n\nHer response sounded surer.\n\n\"All that I am, and all that I have, I give to him...\"\n\nIanthe responded.\n\n\"And I shall accept no other Master.\"\n\nI heard her echo my final statement, bowing her head.\n\n\"And in return, Sweet Girl, I promise to bring you happiness as you've never felt it. To treasure you and ease your troubles. To make your desires manifest, and never neglect you.\"\n\nIt almost felt like we were exchanging marriage vows, I mused. This stuff was heavy, but I vowed to let our words mean something.\n\nTears were rolling down her cheeks now as though she had just found God at a church revival. \"Thank you, Master, thank you!!\" she reached up to take my hand in hers, kissing it fervently. \"How may I please you? I want to be a good girl, Sir. Please tell your good girl what to do to make you happy. Let me show you how good I can be for you.\"\n\nI smiled, gazing down upon her patronizingly. Lifting her chin with a finger, I pulled her gaze to mine. The air was thick with her pheromones, verifying what her desperate emerald eyes told me.\n\n\"You are my good girl, Slave, and I'm glad we understand one another now.\" She beamed, and I could see from her life pattern that my words had brought her genuine happiness. I got a thrill that this was working so well while I stroked her hair gently. \n\n\"My sweet Pet,\" I cooed, \"so good... I promise to show you many ways in which you can serve me. But first, I must teach you what happens when you are not a good girl.\"\n\nHer limpid green eyes teared up. \"But...why, Sir? Have I upset you somehow? I only want to make you happy. What can I do to please you?\"\n\n\"Shhh, enough now, I know.\" I nodded. \"And you will, Slave. I know you will. But you talked back to your master earlier, and I cannot tolerate disrespect, can I?\" she shook her head slowly. \n\n\"Little girls that misbehave need to be punished. Don't they?\"\n\nShe nodded.\n\n\"Yes, they do.\"\n\nI didn't get off on hitting women, so I chose something I found more fitting: punishment through desire.\n\n\"Oh, but please Master, forgive your pet. I didn't-\"\n\nMentally, I summoned my reserves of life essence, drawing deeply, putting all I could hold into a single lash of lust, flaying her with it.",
        "She groaned, and the scent of her longing became nearly overpowering in the room. Holding a mental finger to the flow that would have allowed her release, I denied it. \n\nIanthe collapsed to the floor, thrashing, savagely pressing fingers to her needy pussy as if I'd edged her for hours.\n\n\"Master, pleeeease! Make it go away. Your slave needs to cum so badly. I'll be good, I promise. I swear I'll do anything you ask of me. Please, fuck your slave, Master! Please?\" The gorgeous woman begged, \"I will make it so good for you! Just put out this fire inside me...\" she whimpered.\n\n\"You have my word, I'll never be a bad girl again! Not ever! I promise! Ahhhhh!\" She cried out, lying on her back and furiously trying to put out the burning itch, attacking her crotch with both hands, uncaring that it made her look like an animal in heat.\n\nOkay, maybe I put a little too much into that one. In truth, I had this whole slow game of dominance, manipulation, and pleasure torture planned to cement my control with her, but I had promised I wouldn't be a cruel master, and I was determined to honor our bond. \n\n\"Do not presume to tell me what to do, slave. Who makes the decisions here?\"\n\n\"You do, Sir, you do! I'm sorry Master, I beg forgiveness.\" She groveled on the floor, rubbing her nipples against the carpet.\n\n\"Yes, I do. And I will take you only when I decide; not before. It seems you need additional...guidance, to learn your lesson. Remove your dress.\" \n\nIanthe wasted no time, scrambling to her knees and furiously unzipping the side of her dress, standing to execute my command before returning to a kneeling position. The jiggling of her flesh as she tore her dress off brought my cock to full hardness, tightening my pants. I noticed she had not removed her heels, bra, or the sodden pair of lacy blue panties she wore. Good. She was proficient with \"Simon says\".\n\nHer figure was a perfect hourglass, with an expansive bust mated to a trim waist with just a sexy hint of a pooch, and full, childbearing hips. Her thighs were thick with toned muscle, and bulged enticingly as they pressed against her calves in her kneeling position.\n\nKeeping my face impassive, I walked around her, inspecting her body.\n\n\"You are a treasure, indeed, Pet. Remove your bra. I would look upon these beautiful breasts.\"\n\nShe reddened demurely as she once again did my will. \"Your servant is unworthy of your praise, Master.\"\n\nComing closer, I saw faint stretch marks tell the tale of how rapidly her young breasts must have grown to their current healthy D-cup size. Naturally, they didn't have the resiliency of the much younger Sandy, but they were still pert, sagging only very slightly. Large, pouting nipples topped her wide areola.\n\nTracing a finger across her silky skin, I left a line of goosebumps in the wake of my touch. She groaned at the web of bliss I wrought upon her flesh, simultaneously tortured by her inability to achieve satisfaction. \n\nI moved over to my bed.\n\n\"Come here.\" I pointed to a spot next to me.\n\nShe shuffled over, awaiting my desire. I walked to the door, locking it. There would have been many dishes to clean, but my mother should have been finishing up any minute. There wasn't time to address the threat now though. I needed to break-in my new lover.\n\nUnfastening my belt, I pulled my pants down. When my swollen nine-inch cock sprung free of my constrictive slacks, I noticed her jaw tremor in anticipation.\n\n\"One of your responsibilities, Pet, is to care for this.\" I indicated my dick, where her eyes were already riveted. \"You will be spending much time in service to it. Treat it well, and I'll reward you.\"\n\n\"May I...may I suck it for you, Master?\" she bit her lower lip, I could see the heaving of her breasts with her respiration.\n\nI sat on the bed in front of her kneeling form, putting my cock just below her face. It looked massive next to her; nearly the same length as her head. Pre-cum gushed from it, dribbling onto my balls and down onto the sheet beneath me.\n\n\"Yes, Pet. Take it.\"\n\nWith a finely manicured hand, she grabbed it, giving it a couple of strokes, smearing my pre-cum along its length. \n\n\"It's so thick.\" She said in wonder. Her petite hand made it look even bigger.\n\n\"Open,\" I commanded. She did, slowly leaning forward to take me in. Before she could reach me, I gripped my steely prick at the base with a hand, swinging it side to side to lightly club her cheeks with the head. I chuckled at the sight of her trying to catch it with her mouth like an infant being fed spoonfuls of pureed food. \n\nFinally, using both hands, I lined up and grabbed the back of her head, unceremoniously shoving her toward my crotch, spearing her face with my cock.\n\nIanthe gagged as my invading member struck the back of her warm, wet mouth, coughing with me inside, but I held her fast, enjoying the feel of my slave's throat. The texture of it was stimulating me fiercely. I was uncertain about debasing her like this at first, but her life pattern couldn't lie to me, and it told me how much she got off on the rough treatment. What gave me chills was that I liked it too.\n\nI fucked her head as though I were thrusting into an appliance, with little regard for her comfort. I did virtually all the work, only allowing her a modicum of control. Her eyes watered as she continued to gag upon the meaty head of my cock. \n\n\"Guuuggght...sshhllllppt.\" The lewd coughing, gagging, slurping noises that issued from this supremely accomplished woman brought me no end of pleasure. Her bright green eyes looked directly up into mine, glassy with lust. A heavy mixture of her saliva and my overflowing pre-cum drooled from her pretty mouth, lips stretched taut over my voluminous cock as she dribbled the slurry. \n\n\"Mind my balls, Slave.\" \n\nShe reached up a hand and started an uncoordinated massage of my huge testicles through my tightening scrotum. Slightly smaller than kiwi fruit now, my epididymides had expanded vastly to warehouse my overabundance of sperm, leading to a vaguely achy feeling when they were full. Ianthe's dexterous fingertips felt heavenly as they probed my baby-making equipment, soothing away the discomfort from all those packed-in swimmers.\n\nAfter a few minutes, I could tell that my pre-cum had loosened up her throat, since I was able to hilt myself with her beautiful face, balls smashing heavily into her chin with each swing.\n\nI saw her reach down to satisfy herself, and put a stop to it.\n\n\"Ah, ah, ahh... I haven't given you permission to touch yourself, slave.\"\n\nPulling away from my cock, she looked up at me with pleading eyes, lip trembling in need. \"Master, I need to cum so bad it hurts. I will happily choke on your glorious manhood all night long if it pleases you, but pleeease, Sir, pretty please, take me now. Haven't I been a good girl for you? Your slave feels like she's melting!\"\n\n\"Tsk, tsk.\" I shook my head, \"Need I remind you that only I choose when and in what manner you will get fucked. Do not forget that your holes are mine to use.\" \n\nI sighed. \"But you've pleased your master, and I am lenient. Get up.\"\n\nIanthe scrambled to comply, tits bouncing wantonly. Her gaze was downcast, looking at the floor like a teen who had stolen the family car, waiting for punishment, still wearing her blue panties and heels.\n\n\"Remove the rest of your clothes.\"\n\nShe obeyed, carefully pulling her heels off and setting them down close by. Lowering her panties, she stepped out of them one foot at a time. She removed her necklace last, laying it upon her piled dress. \n\nThe way her tits plunged when she bent over had me flexing my cock in anticipation. Standing before me completely nude, I admired her body. She was truly spectacular. Ianthe didn't quite have Christine's superlative ass, Amy's devilishly long legs, or Sandy's supple and tight body, but she was lean and fit and the whole fantastic package, with tantalizing fat in the right places, and fantastic muscle tone. A woman in her prime, all baby fat now gone.\n\n\"Turn around and bend over on the bed.\"\n\nShe did so, presenting me with her succulent ass. I could see the swollen lips of her labia winking at me through her legs, flushed and hugely engorged. Nectar wept from her cunt freely, both thighs coated in it.\n\nI aligned my cock, and slammed it into her gooey hot pussy, simultaneously removing the block on her mind.\n\nShe screamed from the sharp spike of ecstasy I had just driven into her, cumming hard and clenching down on my dick as I hilted into her. A warm gush of fluid splashed onto my pelvis as I scrambled to cover her mouth with my hand, fearing my mother would be coming to check on us any minute. Lucky for me, the loft was technically a part of the garage structure, so it was sonically well-insulated from the main house.\n\nAs she came, my inner beast inhaled the fresh flow of Vitae, twice as savory as what I'd been getting recently from my other ladies as it was a completely new flavor to me. I pounded into her inert body, making the fat and muscle of her luscious cheeks quiver under each slam of my hips. \n\nI could feel my tip unerringly striking the entrance to her womb with each thrust, desperate to force open that tightly-clenched portal and deposit its load within. Since I hadn't fully bonded with Ianthe yet, her body had yet to mold itself to accommodate my exceptional length, so I wasn't able to achieve full penetration. In time, it would happen, as I'd seen with my other girls.\n\nSlamming Ianthe's body down into the mattress, I leered at the sight of her round butt rippling. Her breasts spread to the sides of her chest with every violent thrust. She continued to cry out in supplication, but I couldn't tell whether her pleas were for more, or for me to curtail the unending storm of pleasure.\n\nSoon enough, I had found my peak, the swell of pleasure starting in my balls and rising through my body like a hurricane, overwhelming me. My dick swelled almost painfully before exploding into her. Cum rocketed from me in waves, relieving the pressure in my balls as I bathed her pussy in my hot spunk. I crushed myself into her soft form, losing count of how many jets of cum I injected into her hot womb while I with her breasts at her sides. \n\nIanthe shivered violently beneath me, and from the waning but still present flow of Vitae I was receiving, she was still actively cumming. I could feel the pulsations of her vaginal walls as they spasmed around my still-hard dick.\n\nI flipped her over, cradling her gently. She opened her eyes and looked at me with pure devotion. \n\n\"Come, let's get you cleaned up and dressed, Pet.\" Her expression was sublime contentment despite the way her tears and our fluids had destroyed her cosmetics. Her abused pussy peeked at me from between her up-drawn legs, obscenely leaking the cargo I'd delivered.\n\nShe seemed almost comatose, so I grabbed a towel and wet it with a half-empty bottle of water on my desk, cleaning her face of the ruined makeup, tenderly scrubbing my pet's face with the soft cloth. Next, I used another to daub between her legs, stroking her head as I did so to show her how I cherished her. All the while I bathed her life pattern in a healing flow of Vitae, soothing away her discomfort.\n\n\"Master?\" Her voice was weak. \"I do not deserve your care. Your slave has...never felt like this before. Thank you.\" Tears pooled in her verdant eyes, threatening to spill. \n\nDeciding she'd probably rather not wear the panties home in their current state, I gave her an older pair of my briefs and pulled them on her, again doing most of the work myself. I luxuriated in the feel of her soft, naked skin on my hands. Helping her dress the rest of the way, I tried to come up with a way to fully cement our new bond. My inner voice helped me, an idea popping into my head.\n\nI stood her up and pulled her in front of my mirror, laying hands on her shoulders.\n\n\"Master, the thought of having to go back...becoming Ianthe again. I'm scared. Please forgive my impertinence, but I don't want to leave your side. I never want to be without your calming voice.\" Her eyes were dim, downcast.\n\n\"My wonderful pet. We are bonded now. Connected. Can you feel it? Try now, it's here.\" I placed my palm upon her stomach. \"Close your eyes and reach inside yourself.\" \n\nShe did so, standing still for several long moments as she searched. Then she gasped, turning over her shoulder to look up at me with wonder.\n\n\"I do, I feel it! You're...inside me!\"\n\nGiving her a warm smile, I nodded.\n\n\"It is still thin, but it will grow as our bond deepens. This connects you and me, no matter the distance between us. If you ever feel afraid, reach inside for that link, and feel that I am with you.\" \n\nSatisfied, she closed her eyes and turned around to clutch at my chest, laying her forehead on my shoulder. I embraced her, sending warming sensations coursing through her body as I stroked her back. We stood that way for a long moment, then I pulled away. \n\n\"I want to give you one more gift to set you at ease, my treasure.\" She looked up, curious, and I spun her around so that we faced the mirror once more. \n\nResting my fingertips upon her graceful neck, I closed my eyes and focused on what I wanted to do. It took more Vitae than I expected, but a thin gold band about the thickness of her pinky finger materialized around Ianthe's neck. I opened my eyes to regard it in the mirror, tracing the image of it with a fingertip, though I couldn't feel it.\n\nIt was completely unbroken and immaculate; a perfect circle.\n\nShe drew in a breath, touching it with her fingers to verify its corporeality and looking at me in amazement. \n\n\"But...how?\" she whispered.\n\n\"This is a symbol of your total submission to me. The fact that you can see and touch it is evidence that you've given yourself to me without reservation, and that I have accepted your bond and devoted myself to caring for you. If you ever feel doubt, the proof will always be here.\" I touched a finger to it once more.\n\n\"As this is a special symbol shared only by you and me, to all others it is as if it does not exist, so do not fear their judgment.\"\n\nTears formed in her bright eyes. \"Oh, thank you, Master! Thank you!\" She gave me a crushing hug, smooshing pillowy breasts into my stomach.\n\n\"Now, let's get back downstairs. I'm starting to wonder if my mother fell asleep from all that wine you both drank at dinner.\"\n\nShe smirked. \"Well, I suspect I can hold my liquor much better than she can. I've had plenty of practice, after all. Half of business is schmoozing with the higher-ups over drinks.\"\n\nA thought came to me then, and I slapped a palm to my forehead. Stupid! Can't believe I didn't think of this earlier. It would certainly be the answer to some of my problems.\n\n\"Pet, would you like it if I were to come live with you?\"\n\nHer eyes widened. \"Oh master, do you mean it? Please don't tease your pet.\" She started nodding vigorously, almost in tears, \"I would love that more than anything in the world!\"\n\n\"And your home, I assume it has multiple bedrooms. Room enough for more?\"\n\nShe grinned, nodding furiously like a child. I could tell her brilliant mind was already making the leap to what I intended. \n\n\"Yes. Yes, plenty! Space enough for many more! With the cost of land so cheap here in the US, I decided on a larger home over a cramped penthouse in the city. My-\" she interrupted herself, \"that is, our home is twelve thousand square feet on over six acres. All fenced and gated, and very private. No prying neighbors. \n\n\"Though, if you'll pardon my presumption, I desperately hope you'll let your pet stay by your side. If she's a good girl and deserves it, of course.\" She conceded, bowing her head.\n\n\"Of course, Sweet,\" I chuckled indulgently, \"but we'll need to make arrangements for my other bonded as well.\"\n\n\"Yes, master, of course.\"\n\n\"Come then, pet. Let's go.\""
    ],
    "authorname": "Nexte100",
    "tags": [
        "female submissive",
        "harem",
        "humiliation",
        "incubus",
        "male dominant",
        "master",
        "mind control",
        "teeenager",
        "slave",
        "blowjob"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/incubus-pupa-ch-07"
}