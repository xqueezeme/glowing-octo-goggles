{
    "title": "End of the Line Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 1 - Prologue \n\nMonday morning, October 17th, 5:45am. I was at Town Fitness Centers. The swimming wasn't enough, so I began riding the exercise bike to get some cardio. It was all good, except it agitated the pain in my lower back.\n\n\"Everything okay, Commander Troy?\" asked Wanda, one of Cindy's partners. She was about 5'5\" tall, in extremely good shape, and had a mane of dirty blonde hair that reminded me of Farrah Fawcett from years before. Wanda's face was attractive, not beautiful but certainly not ugly, and I suspected she'd had a bit of plastic surgery. But her most stunning feature was that she was over 50 years old, but looked like she was in her 30s. She'd been a contestant in the 'Miss Physical America' competitions that Cindy had been a part of, and (Wanda) had done very well against the much younger women. I could see why as I looked at her legs, too.\n\n\"Please, call me Don.\" I said. \"And my back is irritating me.\"\n\n\"May I?\" Wanda asked as she felt along my spine as I sat on the bike. I certainly did not object. \"Oh, I can feel that slight bulge.\" she said. \"Did you dislocate your back in the past?\"\n\n\"I was told it wasn't dislocated,\" I said, \"but it sure hurts sometimes. I'm supposed to see an Eastern doctor on Wednesday.\"\n\n\"Good.\" said Wanda. \"Eastern medicines are overlooked in the West, but they can be very helpful. I studied Yoga in Thailand for two years. Would you like me to try to massage your back?\"\n\n\"I'd love that.\" I said, knowing that Wanda's invitation wasn't just for a massage... she'd been giving me looks as I had been giving them to her. \"But I'll have to take a raincheck. I have to get ready for work.\"\n\n\"Cindy invited Ariel and me to your cabin at Lake Watchacoochie this weekend.\" Wanda said. \"Maybe we can get in some mutual massages.\"\n\n\"Mmmm, that sounds like a plan.\" I said. I felt my cock stirring, despite an intense blowjob from my wife Laura less than an hour before, and I knew I'd better get out of here before...\n\n\"I'll see you soon.\" I said.\n\n* * * * * * * * * * * * * * * *\n\nAt 6:15am I arrived at Police Headquarters. I'd been getting into the habit of doing my toilet (shit, shower, and shave) in the locker room of the Police Headquarters gym. I had noticed over the last week or two that more and more Officers were doing the same... and they were working out in the gym, being led through Tai-Chi and other yoga forms by Cindy Ross. \n\nThen Cindy invited Officers to oppose her in the ring for Police Boxing Matches training. Only a few had the stones to do it, one of them being Micah Rudistan, who was actually pretty agile for his body type. Joanne Warner also took every opportunity possible to train with Cindy, no matter how often she got beat down. Such work would help her in the field, I knew.\n\n* * * * * * * * * * * * * * * *\n\nAnd speaking of gorgeous older women... you know what 7:00am means: Bettina!\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redhead from in front of the Courthouse. \"Channel Two News has learned that former TCPD Officer Robert Brownlee is appealing the dismissal of his lawsuit, asking the Appellate Court to force a ruling to install him in the Operations Officer role with his full rank of Commander restored. Judge Rodney K. Watts dismissed the lawsuit, and the appeal will be argued before Appellate Judge Leahy this afternoon! Due to the need for a speedy resolution of this case, believed to be before November 1st, the Brownlee legal team will push for an expedited result.\"\n\n\"In other news,\" said Bettina, \"the acrimony in the political campaigns is heating up! Early voting begins today, and it is expected that the lines at the two early-voting posts will be long. Any Town or County resident may vote at either of the two polling locations, which are at the Old Mill Building, where Police Precinct 2 is located, and at the Old Post Office building in the northern part of Town.\"\n\n\"And it is not likely that the early voting will reduce the rancor that has pervaded the local and State elections!\" Bettina went on. \"Governor Val Jared continues to accuse suspended SBI Director Jack Lewis of corruption, and promises to prosecute Lewis as well as SBI NTF Director Richard Ferrell if and when the several investigations into Lewis and Ferrell's conduct are finished. Meanwhile, State Legislature Democrats are calling for a special session to impeach Val Jared, stating that the Governor's suspension of Director Lewis is unlawful and politically motivated. Public Policy Polling has the race moving to a slight edge for Lewis, 49-47%, well within the margin of error.\"\n\n\"And in the District Attorney's race, it's pure 'scorched earth' as both candidates throw haymakers at each other. Jenna Stiles has relentlessly accused incumbent Gil Krasney of racism and sexism, and Krasney has accused Stiles of recklessness, race-baiting, and a poor record as A.D.A. Krasney continues to lead the race, 48-44%. And now for Sports, with Nick Eastwood! Nick!\"\n\n\"Thank you Bettina!\" said Nick Eastwood, reporting from the University Athletic Complex. \"The good news is that the Bulldogs have this weekend off and two weeks to prepare for the undefeated Wildcats on October 29th. The bad news is that the Wildcats also have an open date this weekend and two weeks to prepare for the undefeated Bulldogs! State Tech will play the Tigers on Saturday, and with State Tech's increasing reputation for dirty play, look for the Tigers to make a special effort to demolish the Engineers!\"\n\n* * * * * * * * * * * * * * * *\n\nThe C-Level meeting began in my office at 8:30am. Present were myself, Captain Cindy Ross, Lt. Wes 'Coldiron' Masters, and Lt.(P) Teresa Croyle. That '(P)' is actually the Army's designation for 'promotable', as Teresa had been approved for a promotion to Captain, which would occur on November 1st.\n\n\"So how is the transition to Vice, Coldiron?\" I asked.\n\n\"Smooth so far, sir.\" said Masters. \"But we are badly understaffed.\" Teresa nodded vigorously.\n\n\"I know.\" I said. \"And it's not going to get any better, I'm afraid. We're working on it, though.\"\n\n\"Sir,\" said Masters, \"if I happen to know some good people from other Police Forces that might want to work here, is there any way we can get them in?\"\n\n\"Like from Midtown?\" I asked. Masters nodded. I said \"I'll ask the Chief about it. He's already mentioned how your old Department is beginning to struggle. And two of their I.A. people resigned and left, as well.\"\n\n\"That sucks.\" said Teresa Croyle, who'd spent six months in Midtown P.D.'s Internal Affairs Unit. \"Are they being threatened, or bribed?\"\n\n\"Whichever works best.\" said Coldiron. \"The truly honest ones, that were put in I.A. because they were honest, are being told they and their families will wake up dead if they persist in pursuing the upper-level Officers, including three Captains, that have been bought off. And they're trying to push new people into I.A. that are already on the take.\"\n\n\"They need some people with crowbars down there.\" Cindy said.\n\n\"They need a lot more than that.\" I said. \"And it will depend on the Election. If Jared wins, there are plans to weed out the trash. If Lewis wins, there will be no hope.\"\n\nConsidering that everyone in the room but Cindy had lived in Midtown for at least some time, that news brought gloom to the room.\n\n\"What's their recourse?\" asked Teresa. \"If their own I.A. is corrupted, what can be done?\"\n\nI replied \"Theoretically, the SBI's Office of Ethics and Review could be called in for an external audit. However, Britt Maxwell has her hands full investigating the SBI itself, and Midtown hates the SBI as much as the rest of us do. Like I said, Governor Jared has plans on how to deal with all this, but if he's defeated then it will all be for nothing.\"\n\nAs the meeting went along, I noticed that Teresa was getting more and more introspective. So after the agenda items were done, I told Cindy to meet with Coldiron about MCD assignments, and asked Teresa to stay a moment.\n\n\"Something bothering you, Captain-to-be?\" I asked.\n\nAfter a moment, Teresa said \"Yes sir, and I've been struggling with the idea of telling you, or not. I've already told Todd, and he just said he'll support whichever decision I make.\"\n\n\"Ah, family stuff.\" I said. \"Let's hear it.\"\n\nTeresa marshaled her thoughts, then started in: \"Sir, on Saturday there was a party for little Jack Burke. He turned three on Saturday, and I was invited to the party because I'm his godmother.\"\n\n\"Sounds good.\" I said. \"Was it up at Lake Amengi-Nunagen?\"\n\n\"No sir.\" said Teresa. \"Michael Burke sold the house in this County, the one he lived in with Eleanor, and he bought a townhouse in the River Valley subdivision. One or both of them come down here from time to time on business, mostly him with University Trustee business.\"\n\nTeresa went on: \"Todd didn't go to the party, but Michael wasn't there either. I was talking to Jeanine, and she told me that she was concerned about some things. She said Michael had been meeting with some strange people. One of them is a Board Member at BigPharmaCorp, and another was Tom Riordan, who is also a University Booster. And there was another couple, named Doug and Roberta, but she couldn't remember their last name.\"\n\n\"Interesting.\" I said, trying to appear less acutely interested than I really was.\n\n\"Jeanine said that Roberta talked to her about some organization, and was probing her, Jeanine, about her feelings on race relations and how whites are being treated in the country. Jeanine shut it down rather quickly, and the woman didn't speak much more to her the rest of their time there.\"\n\n\"Where is 'there'?\" I asked.\n\n\"Oh, the Lakeside Inn & Suites in Nextdoor County. The newly refurbished resort over there.\"\n\n\"Doug and Roberta... maybe their last name was 'Jackson'?\" I asked.\n\n\"Jeanine couldn't remember, but------ wait, those names sound familiar.\" Teresa said, becoming thoughtful.\n\n\"They should.\" I said. \"Doug and Roberta Jackson were the parents of Jefferson Davis Jackson, who died while having sex with Tom Riordan's wife at the Lake Ocheekobee Golf Club in Coltrane County.\" That was the 'Murdered Football Player' case we'd investigated.\n\n\"Oh yeah!\" Teresa said. \"That's it!\"\n\n\"Is Jeanine still in Town?\" I asked. Teresa nodded that she was and I said \"Doug and Roberta are from around my old haunts of Apple Grove. Get DMV pics from that State, and if you can meet Jeanine quietly before she goes back home, show her the pics and ask if they're the ones.\"\n\n\"Yes sir, I will.\" said Teresa. \"Sir, is something going on with them? Jeanine seemed pretty concerned.\"\n\n\"I don't know.\" I said. \"But tell Jeanine to be careful. You heard about 'Operation Apple Grove' last Spring?\"\n\n\"Some of it, from Cindy.\" said Teresa. \"I understand you cleaned up some trash up there. 'White trash' in particular.\"\n\n\"That's a good way of putting it.\" I said. \"Okay, get with Jeanine if you can, and we'll see if there are any threads for us to tug at. And thanks for telling me this, Teresa. It could be important.\"\n\n\"Yes sir. If you'll excuse me, sir...\" Teresa said. I excused her. After she left the office, I got out my Police cellphone and speed-dialed a number.\n\n\"Hello, Jack.\" I said to FBI Special Agent in Charge Muscone when he answered. \"Where are you right now?\" \n\nPart 2 - Plots and Plans \n\n\"So you're going the legal route?\" asked Katherine Woodburn.\n\n\"Yes, Senator. This ought to be a shoo-in.\" said Kelly Carnes. \"This ought to be a done deal. Easy-peasy.\"\n\n\"Why do you sound so sarcastic when you say it?\" asked Thomas P. Cook, with a sardonic grin on his face.\n\nIt was 9:00am, and they were in Cook's business office, which was in a building near the Courthouse, and east of the Federal and State Office Buildings. Most of the renters were lawyers, paying exorbitant rates for the location and convenience. Cook's office was richly appointed, though not overdone. Kelly liked the superlative comfort of the guest chairs. Katherine liked the light brown paneling and the dark mahogany desk. What both women detested was the man behind the desk.\n\n\"Because if there is one person that can fuck up a no-brainer, shoo-in, easy-peasy, slam-dunk case, it's Robert Brownlee.\" Kelly said. Cook laughed heartily.\n\n\"You're right, you're right.\" he said. \"Don't you agree, Senator?\"\n\n\"Yes I do.\" said Katherine, though without a trace of humor in her voice.\n\n\"Well, Brownlee will will be here in about five minutes.\" said Cook. \"We'll do whatever we can to make sure he doesn't fuck this one up.\"\n\nMoments later, Robert Brownlee arrived. He had shaved, but looked as if he still needed one. His wavy brown hair looked a bit unkempt. The look on his face was one of hatred of the world.\n\n\"Have a seat, Robert.\" said Cook. \"Is your legal team ready for the Appellate hearing today?\"\n\n\"Yes, Councilman, we're ready.\" said Brownlee as he sat down. He was wearing casual clothing, and it looked like he'd gotten the items out of a pile on the floor.\n\n\"Are you going to be wearing a pressed suit and tie to Court?\" asked Kelly Carnes derisively. \"Judge Leahy appreciates immaculate dress.\" Everyone in the room wondered if Brownlee even understood the word 'immaculate'.\n\n\"No, I'm going to be wearing my Police uniform today.\" said Brownlee. \"My legal team and I want to make a point with the Court, and the appearance in uniform will help.\"\n\n\"If you'll excuse me,\" said Katherine Woodburn, \"I have a speech to give to the Town & County Chamber of Commerce. Good luck in Court, Mr. Brownlee.\" She made quick goodbyes and left.\n\n\"Are you still with the Police?\" asked Cook. \"Technically, you're still in limbo.\"\n\n\"That's the whole point of the exercise.\" said Brownlee. \"My lawyer wants to make the point that I am still in the Police Force, and never was not a part of it through my illness.\"\n\n\"All right, Robert.\" said Cook. \"Councilwoman Carnes and I filed amicus briefs with the Superior Court and the Appellate Court on your behalf. Go get a haircut, clean up, and get ready for Court.\"\n\n\"One piece of advice.\" said Kelly Carnes as Brownlee got up to go. \"Leahy hates the Iron Crowbar with a passion. Make sure you and your legal team let him know you want back in the TCPD to be a check upon the Iron Crowbar's vaunting ambitions.\"\n\n\"No doubt about that.\" snarled Brownlee. He left without another word.\n\n\"Wow, not even a 'thank you' for all we're doing for him.\" said Cook, with some amusement.\n\n\"That guy is totally losing it, if you ask me.\" Carnes said.\n\n* * * * * * * * * * * * * * * *\n\n\"I just have one question.\" Cindy said as she and Paulina sat in my office, discussing Court issues with me. \"That immunity the Commander offered Jayne Hallerton... I know he's within his bounds to do that, but what's the legal situation on it?\"\n\nPaulina replied \"All of us in here are Officers of the Court. In addition, Commander Troy is part of the Police Command Group; therefore, he is a principal for the Police and, to a lesser extent, for the Court. He can authorize expenditures of money, and enter into binding contracts on the TCPD's behalf. As such, he can make an Immunity Agreement that would be binding on both sides. As to you, Captain Ross, you could probably do it and, as a Captain, your actions would hold up. But please do me a favor and don't test it.\"\n\nI said \"I wouldn't have done it at all, if it weren't for the time-critical situation we were in.\"\n\n\"And that's a consideration.\" said Paulina. \"But obviously, I and my fellow Assistant District Attorneys, not to mention Krasney himself, would prefer you work in conjunction with us on things like that.\"\n\n\"What about the Brownlee appeal?\" I asked. \"How are we going to do on that?\"\n\n\"The City Attorney is representing the County on that one.\" said Paulina. \"He thinks we're going to do fine.\"\n\n\"Why does that worry me?\" I asked, looking up at the ceiling.\n\n\"You don't have a 'warm and fuzzy' about that, do you?\" asked Cindy.\n\n\"No.\" I said. \"No I do not. Leahy is rabidly Leftist and rabidly anti-Police. He'll put Brownlee back in the TCPD just to fuck with us.\"\n\n\"He can't do that.\" said Paulina. \"He can only reinstate the case Brownlee filed, that Judge Watts threw out, and force an expedited hearing.\"\n\n\"What if he tries?\" I asked.\n\n\"Then it goes up to the next level.\" said Paulina. \"The State Supreme Court. And it only takes one Justice to kick it back down if Leahy overreaches. So we expect it to be back in Watts's courtroom.\"\n\nI nodded. Just then my Police cellphone chimed with a text. I fished out my cellphone and read it.\n\n\"Don, what is it?\" Cindy asked, seeing my shocked face. I showed her the text, which was from an unknown burner phone. Her face showed similar shock when she read it. It said 'Brownlee to appear in Court in Police Uniform'.\n\n\"Okay,\" I said, \"we have to move fast, here. Ladies, if you'll excuse me, I have to call the Sheriff. Cindy, if you'll tell the Chief we need to talk to him in about five minutes, I'd appreciate it...\"\n\n* * * * * * * * * * * * * * * *\n\nAt 10:00am the Press gathered at City Hall, in front of the formal Office of the Town & County Sheriff. Sheriff Deputy (Captain) Scott Peterson took to the microphone.\n\n\"Thank you for coming.\" he said. \"The Sheriff wishes to make a formal announcement. He will not be taking questions, but I will do so after his comments. Sheriff?\"\n\nSheriff Daniel Allgood strode up to the microphone, wearing his Sheriff uniform with dark brown jacket over his khaki shirt and pants, khaki tie tucked into the shirt, his Police and Sheriff Department ribbons on the jacket.\n\n\"Thank you, Scott.\" Allgood said. \"Ladies and gentlemen, I'm hereby announcing that as of one hour ago, Robert Brownlee has been and is assigned to the Public Health Department as Second Assistant Public Health Officer. In this position he retains the same rank and pay grade as his former position in the Police Department. I have forwarded the official paperwork to the City Attorney and the Courts, and this will be presented to the Appellate Court to show our compliance with the Law in placing Robert Brownlee in an equivalent position to the one he left when he had his heart attack.\"\n\nThe Sheriff continued: \"Let me be clear: Robert Brownlee is no longer part of the Town & County Police Force, and will not be again. He is not authorized to wear a TCPD uniform, and he is not authorized to carry or use a firearm as part of his Public Health Office duties, unless he acquires a special waiver and re-qualifies with that firearm. Thank you.\"\n\nThe Sheriff ignored the shouted Media questions as he stalked off into his office. Scott Peterson fielded questions. The thread of the Media's line of inquiry was obvious.\n\n\"Captain Peterson!\" yelled Priya Ajmani, \"is Commander Donald Troy behind this reassignment of Commander Brownlee?\"\n\n\"No, Priya.\" said Peterson. \"Sheriff Allgood made the decision as to where to locate Assistant Public Health Officer Brownlee.\"\n\n\"Did Commander Troy advise the Sheriff on this action?\" yelled John Hardwood.\n\n\"The Sheriff took the decisive action.\" said Peterson. \"Donald Troy is on the sidelines, his input did not and does not matter here...\"\n\n* * * * * * * * * * * * * * * *",
        "\"That,\" Cindy Ross thundered, \"was insubordinate.\" We were watching the breaking news in the Chief's Conference Room.\n\n\"Technically, yes.\" I said. \"I still outrank him. But he's the Sheriff's little boy now.\"\n\n\"I will still call the Sheriff and make a complaint.\" said the Chief. \"Doing that on television like that is improperrrrr.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 12:59pm, Robert Brownlee and his attorney stood outside the Appellate Court. Normally the Appellate Court was in its own Courtroom in the Courthouse Complex, but due to the extreme Media interest in the case, this hearing had been moved to the Old Courtroom. \n\nBrownlee was in his Police semi-formal uniform, with only a few ribbons; most of them were for various Police Academy courses, the basic Service ribbon and Division ribbon, a a scant couple of Achievement Awards, and just one Commendation Medal.\n\nA slender man, balding and with glasses came up, followed by a man with a camera. \"Commander Brownlee?\" he asked nervously.\n\n\"Yes?\" said Brownlee, thinking he was a reporter wanting to ask a question. Instead the man handed him a document.\n\n\"You've been served, Mr. Brownlee.\" said the man, who then rushed away along with his cameraman.\n\n\"What is that?\" asked the attorney. Brownlee handed him the document. \"Oh shit!\" said the attorney. \"We've got to------\"\n\n\"Let's go, boys.\" said the Deputy. \"The judge is waiting for you.\" They were all but pushed into Leahy's Courtroom.\n\n* * * * * * * * * * * * * * * *\n\nLeahy frowned as he saw Robert Brownlee in Police uniform. Speaking to the Attorney, he said \"Are you aware that your client is no longer a Police Officer and is now Assistant Public Health Officer? I have the papers stating that right here, sent by the Sheriff this morning.\"\n\n\"Your Honor,\" said the attorney, \"we were served these papers informing us of that literally one minute before entering this Courtroom. My client was given no notice, no time to change clothes.\"\n\n\"That's no excuse.\" Leahy said, scowling. He was a large man, and on top of that (pun not intended) his head seemed too large for the rest of his body. His forehead was prominent, and glistened in the lights, even the rather inadequate lights of the Old Courtroom. \"Your client is out of uniform in my Courtroom.\"\n\n\"Your Honor, if I may make a statement to that.\" said the Attorney. \"As part of this suit, my client is insisting that he is still a TCPD Commander and should be fully reinstated as such. He believes his job was wrongly assigned to another Office, and an inferior position at that, and therefore he remains entitled to wear his Police uniform.\"\n\n\"Oh really.\" said Leahy witheringly.\n\n\"Furthermore, Your Honor,\" continued the lawyer, going for broke despite knowing he'd been effectively ambushed, \"my client has stated in the documents that he will only accept a Police position commensurate with his rank as Police Commander, and he rejects any attempt to be reassigned to any post outside the Police Department.\"\n\n\"Is that in writing?\" asked Leahy.\n\n\"Yes, Your Honor. Page 12 of our complaint.\"\n\nLeahy read the pertinent information. \"Very well. Mr. Brownlee only has these choices... take whatever position the Council offers, or resign, or put in retirement papers. This refusal could be construed as a resignation, since the Council is within its legal bounds to offer an equivalent position.\"\n\n\"I'm no fan of the Police,\" continued Leahy, \"but I like it even less when someone impersonates an Officer in my Courtroom. I am summarily denying the appeal, and upholding Judge Watts's dismissal. Furthermore, I am sending the rest of it back to Judge Watts to determine if Robert Brownlee has resigned. I would suggest, Counselor, that you quickly re-file this so that your client can retire if he refuses the Public Health Office position.\" Leahy banged his gavel and ended the proceedings.\n\n* * * * * * * * * * * * * * * *\n\n\"Sir, you need to go see the Chief.\" said Wes Masters, who had all but run into my office. \"He's not saying anything out loud, but I can tell something is wrong.\"\n\n\"Okay.\" I said, noting Coldiron's worry as well as the form of his sentence. I went to the Chief's office, and was admitted. The Chief was looking out the window that faced the back of the property.\n\n\"Hi Chief.... er, is everything all right?\" I asked.\n\n\"Just fine, Mr. Crowbar.\" Moynahan said. \"Just fine. Whatever you needed, I'm sure it's okay, so run with it.\"\n\n\"What I need, Chief... is for you to tell me what's bothering you.\"\n\nThe Chief turned and peered at me, then said, \"Nope, nothing does get past you, does it?\"\n\n\"That's my job.\" I said. \"And it's also my job to take care of my people, including the one in the chair above me. So spill it.\"\n\n\"Have a seat.\" said the Chief. As I did, he came over and sat in his chair behind his desk. \"Okay, no crowbar beatdowns for this, okay?\"\n\n\"I could give you the 'my own counsel will I keep on that',\" I said, \"but I won't. Whassup?\"\n\n\"I called the Sheriff, about Peterson.\" said Moynahan. \"I told him that Peterson's on-air comments about you were disrespectful, insubordinate, unprofessional, and required action on his, the Sheriff's part.\"\n\n\"Uh oh.\" I said. \"And what did the Sheriff say?\"\n\n\"He said he'd handle it.\" Moynahan said. \"Then he made a point to say that Peterson was his employee, no longer ours, and that I was to stay out of the Sheriff Department's business. I replied that dissing you on television was my business, and he told me that he was my boss, not the other way around, and if I didn't like his handling of it, I could submit my immediate resignation.\"\n\n\"Shit.\" I muttered. \"I hope you didn't do that.\"\n\n\"No, not yet.\" said Moynahan. \"But this is no longer about ranks, it's about manhood, and honor.\"\n\n\"Let me see what I can do, Chief.\" I said. \"If you'll excuse me....\"\n\n\"Again, no crowbar beatdowns, Mr. Crowbar.\" admonished the Chief. \n\nI just smiled. \"There's more than one way to administer a Crowbar beatdown, Chief...\"\n\n* * * * * * * * * * * * * * * *\n\n\"I'm sorry, Commander,\" said the Sheriff's assistant, \"but the Sheriff is very busy today and will be unable to speak with you at all. He suggests you call back tomorrow.\"\n\n\"Oh really?\" I said, my voice full of venom. \"That won't be necessary.\" I hung up, and looked at Cindy, who was watching me from the sofa.\n\n\"O-kayyyyy,\" I said, \"let's have a little fun with the Press. I want you to watch this.\" With that, I got out my personal cellphone and called Bettina Wurtzburg.\n\n\"Hi, Bettina.\" I said. \"Hope I didn't catch you at a bad time.\" Those were codewords with Bettina that this was no small thing. \"Well, I'd like for you to do me a big favor. And of course, if you do it, you will have my gratitude... and I'm sure I will be able to return the favor at some time in the future... Oh yes... Oh, I'd like you to ask Sheriff Allgood one simple little question...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Sheriff, I have an appearance to make with the Kiwanis Club tonight.\" said Scott Peterson. \"Mind if I head on out to get ready for it?\"\n\n\"Just one thing before you go.\" said Allgood. \"Those comments you made about the Iron Crowbar... not using his proper rank, disrespecting him on television... his Chief called me about that. I covered for you and told the Chief to pound sand, but you need to be careful about that... you were insubordinate. I'm not asking you to apologize, but just don't do it again.\"\n\n\"Uh, yes sir.\" said Peterson. \n\n\"Okay, give 'em one hell of a speech tonight.\" said Allgood. \"We really need you to beat the hell out of Michaels for that Council seat.\"\n\n\"Yes, we do.\" said Peterson, who had his own agenda for wanting to win. \"See you tomorrow, Sheriff.\" He left.\n\nA moment later, Bettina Wurtzburg entered the room, having slipped by the assistant. \"Hello, Sheriff Allgood.\"\n\n\"Hello Bettina... how'd you get in here?\" asked Allgood.\n\n\"Oh, your assistant went to the restroom and I just took journalistic liberty.\" Bettina said with a smile. \"I only wanted to ask you one question, Sheriff: do you have any comments in reply to Commander Troy scheduling a Press Conference tomorrow morning to announce his endorsement of Loran Michaels for the vacant Council seat?...\"\n\nBettina would later tell me (in bed) that the look on Daniel's face was 'priceless'.\n\n* * * * * * * * * * * * * * * *\n\n\"All right, Commander Troy, what do you want?\" asked Daniel Allgood acidly. He'd somehow just found the time out of his busy schedule to call me.\n\n\"Just two things, Sheriff.\" I said. \"As we military types know, insubordination has to be addressed quickly. Your Press Relations Officer was insubordinate to me, among other things. Now you can jack him up for it, as you should... or I'll come over there and jack his ass up, and I can assure you that it will be an unforgettable lesson.\"\n\n\"I've already spoken to him about it.\" Daniel said. \"And it's my place to do so, not yours.\"\n\n\"It'd better be formal and in writing.\" I said. \"I'm not kidding, Sheriff, it's a matter of my authority being questioned in front of this entire County, as well as a despicable example where my subordinate Police Officers could see it.\"\n\n\"Commander, I'll do my job and you do yours, okay?\" said the Sheriff.\n\n\"Okay, is that how you want to play it, Sheriff?\" I asked coldly, then let my voice get even colder as I said: \"And we haven't even gotten to the part where you disrespected my Chief of Police.\"\n\n\"Well, speaking of insubordination...\" said Allgood. I was having none of it.\n\n\"He wasn't insubordinate, and he was doing the right thing taking up for me.\" I said.\n\nThe silence on the other end of the line was 'deafening'. And I let it linger.\n\n\"Again,\" Daniel finally said, \"I'll do my job, and you do yours. I've already talked to Peterson, and I'll reinforce it to make sure he doesn't do that again. And you and the Chief need to do your jobs, Commander.\"\n\nThe line went dead. The look on my face may have been conveying the same (lack of) feeling.\n\nCindy was looking at me, her ice blue eyes wide with shock. \"What are you going to do?\" she asked. I could tell she was worried about what my reaction might be.\n\n\"Homey don't play this shit.\" I muttered as I dialed another number...\n\nPart 3 - Back and Forth \n\n7:00am, Tuesday, October 18th. Two items are a must to start one's day in our Town & County. One of those is coffee. The other, of course, is Bettina!\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" she shouted from in front of the Courthouse. \"Channel Two News has learned that Judge Leahy of the Appellate Court has summarily denied Robert Brownlee's appeal! This all but guarantees that Robert Brownlee will never return to the Town & County Police Force in any capacity!\"\n\nI heard a huge cheer erupt from all over Police Headquarters, as the Personnel & Records Officers had been watching in their offices. The MCD room was likewise full of happy Detectives, happy Lieutenants, and happy Captains.\n\nBettina went on: \"Legal experts had expected Leahy to reverse Judge Rodney K. Watts's ruling and return the case to the lower Court; however, Leahy upheld the dismissal with stinging rebukes for Brownlee and his attorney.\"\n\nBettina continued: \"What is not determined is Brownlee's status with the Public Health Department. Sheriff Daniel Allgood has assigned Brownlee to the Public Health Department, but Public Health Officer Loran T. Michaels has opposed that and has sued over it. He filed for an emergency stay to enjoin the order to put Brownlee in the Public Health Office.\n\nMore Bettina: \"Michaels is running for the Town & County Council seat vacated by the death of Pastor Raymond Westboro. Additionally, Brownlee says he will accept no position other than with the Police Department, and he plans to appeal to the State Supreme Court. His chances there are considered slim.\"\n\nBettina went on: \"And one opening that Mr. Brownlee might have sought is now closed, as Fire Chief Quinlin made an announcement yesterday. Roll tape.\"\n\nThe tape rolled, showing Fire Chief Quinlin and Superintendent Davies in front of Fire Department Headquarters, with the Chief saying \"... and Superintendent Davies's knowledge of our Fire Department, its workings, and its Firefighters will serve him well in this position, and will serve me well to be advised by him. Therefore, I've nominated Superintendent Davies for the position of Assistant Fire Chief!...\"\n\n\"And finally,\" said Bettina, \"a Press Conference has been called at 9:00am at City Hall by Loran Michaels, who said he has picked up two huge endorsements. Channel Two News will bring live coverage of that event...\"\n\n* * * * * * * * * * * * * * * *\n\n*WHEET-WHEW!*\n\nThe catcall whistle was from Cindy as I entered MCD. I was wearing a well-fitting light gray suit, white button-down shirt, and a light cyan-blue tie. \"Looking good today, Commander.\" she said. \"What's the occasion?\"\n\n\"Damn, Commander, you out-GQ'd me today!\" said Theo Washington, who always dressed well. \"Whassup wit' dat?\"\n\n\"Press conference.\" I said. \"Oh, I'll have company.\" I pointed to the door, where Chief Moynahan was coming in, also dressed in a suit and tie.\n\n\"Captain Ross,\" said the Chief, \"you and Commander Harlow mind the store. The Police Commander and I have some important business to do.\"\n\n\"Alpha-dogs, Joanne.\" said Cindy, knowing what our important business was. \n\n\"Yes, ma'am.\" said Joanne Warner. \"But good-looking and well-dressed alpha dogs... or alpha-wildcats.\"\n\n\"Perceptive Detective, she is.\" I said. Cindy did not look amused.\n\n* * * * * * * * * * * * * * * *\n\nI cannot wear a Police uniform at political events, except for things like security. I cannot wear a Police uniform when participating in political events, giving speeches as a candidate, endorsing candidates, working at a Campaign Office, and so on. But, within bounds of reason, I can wear my Medal of Valor with civilian clothes, and at such events.\n\nAnd I did, for this one.\n\nRed crowbar in hand, I stepped up to the podium, in the front atrium of City Hall with two other men: Police Chief Moynahan and Public Health Officer Loran T. Michaels. \"Thank you for coming.\" I said to the gaggle of Press and their cameras, all eyes and lights on me. \"I am here to endorse Public Health Officer Loran T. Michaels for the vacated Council seat for which he is a candidate. I believe that Public Health Officer Michaels is the the best choice among those running for this seat, and he will do the best job working with the rest of the Town & County Council in the coming years.\"\n\nI gave way to Chief Moynahan, who said \"I also endorse Public Health Officer Loran Michaels. His record of service as Public Health Officer is an outstanding one, and I believe he will serve on the Council with the same level of dedication to you, the Citizens of this Town & County.\"\n\n\"I want to thank Chief Moynahan and Commander Troy for their support.\" said Michaels. \"Their own Police records are stellar, and to have them supporting me for the Council seat is a great honor, for which I am grateful to them...\"\n\nAfter the speeches and platitudes, the Press opened up on us:\n\n\"Commander Troy,\" yelled Priya Ajmani, \"do you have any other endorsements to make?\"\n\n\"No, Priya.\" I said. \"Just this one right now.\"\n\n\"Commander, why are you endorsing Mr. Michaels, but not making any other endorsements?\" asked Bettina Wurtzburg.\n\n\"I believe that this Council seat election is very important, Bettina.\" I said. \"The other races are important, as well, but none more so than this one, and I hope the voters will choose the right person for the seat.\"\n\n\"And the right person for the seat is Loran Michaels.\" said Chief Moynahan. Yeah, he could play the Game, and play it well, I noted.\n\n\"Commander,\" said John Hardwood, \"will you be giving Mr. Michaels any helicopter rides in the near future?\" Silence was instantaneous, and awkward.\n\n\"I certainly hope I won't need to.\" I said. \"But if you need a helicopter ride with me, Mr. Hardwood, I'll be ready to provide one. Vote for Mr. Michaels, everyone!\" I said to the cameras, then we all walked away from the podium...\n\n* * * * * * * * * * * * * * * *\n\nScott Peterson and Daniel Allgood were watching in the Sheriff's office. It was not a cheerful room at the moment.\n\n\"Damn, Troy went and endorsed Michaels because of what I said about him yesterday?\" Peterson asked, his voice a snarl.\n\n\"That's half of it.\" Daniel Allgood said. \"I guess that beats him coming over here and whipping both of us with his crowbar.\" Daniel looked and felt as if he'd been run over by a freight train.\n\n\"How do we counter this?\" asked Peterson.\n\n\"I don't know yet.\" said Allgood. \"I'm going to have to think about it.\"\n\n\"You could endorse me publicly, as a counter to them.\" said Peterson.\n\n\"Oh, I've already called a press conference to do that.\" said the Sheriff. \"The problem here, Scott, goes beyond you and your campaign. The last thing I need is an internecine war with my Police Department. I'm having enough trouble as it is with Quinlin and the Fire Department. So after the press conference endorsing you, Scott, you are going to take a leave of absence to 'concentrate fully on the campaign'.\"\n\n\"Sheriff,\" said Peterson, \"being your Press Relations person give me more exposure.\"\n\n\"The problem, Scott,\" said Daniel, \"is that in that capacity you're only speaking as my mouthpiece, and you need to be speaking as your own mouthpiece, and as a candidate. So get ready to do that, and I'll try to find a way to mend fences with my Police Command Group.\"\n\n* * * * * * * * * * * * * * * *\n\nI took a phone call from Laura.\n\n\"Hi Darling.\" she said. \"The back doctor from Japan is going to be speaking at the University tonight, and has agreed to see you in my clinic area before his speech. So if you'll get your hot little ass over here...\"\n\n\"On my way.\" I said.\n\n* * * * * * * * * * * * * * * *\n\nAfter receiving a thorough probing and prodding from the doctor, mostly around the damaged area of my back, he said in good English \"Ah, Donald-san, a vertebrae in your back is still slightly dislodged. Not enough to cause real damage, but enough to inflame the area and cause you pain. If you will lie down on this mat on the floor, I will apply a realignment process.\"\n\nI lay down on my belly on what looked like a reject of a wrestling mat that was on the floor, wearing only my underwear. The doctor straddled my back, and putting the bottoms of his hands together in the middle, the fingers pointing to each side, he began pressing inward and downward. For the most part, my back 'popped' as knuckles pop, but I could feel the way he was keeping my spine straight and aligned.\n\nJust above the damaged area, when he pressed down I felt something shift, and a short, jabbing pain. Then he said \"Take in a breath, and when I press down, let it out.\" I did so... but the 'letting it out' was in the form of a scream.\n\n\"AAAUUGGHH!\" I cried out as he pushed hard against the vertebrae. I did feel it move back into place, but it did so only after letting me know how much it hurt. Then the doctor pressed on my spine down to my coccyx. I was still gasping from the pain... but I could tell it was going to be much, much better when it stopped hurting.\n\n\"Just lie still until the initial pain diminishes.\" said the doctor. \"I must go, but it has been an honor serving the Iron Crowbar today.\"\n\n\"Arigato, Doctor-san.\" I replied. Laura showed the doctor out. Fifteen minutes later, I was able to move up to my knees, then Laura helped me to stand. She helped me to take some steps, then I rotated my arms and body around my core. It still felt very sore, but I could tell I was better.\n\n\"I'm going to give you a shot for the pain and the inflammation.\" Laura said. She did so, injecting the drug right onto the area of the pain. I felt instantly better.",
        "\"You are the best doctor.\" I said. \"I always feel better after your treatments... especially the ones in bed at home.\"\n\n\"And I look forward to giving you a few more of those treatments this weekend.\" said Laura. \"You're going to be flat worn out after Wanda and I are through with you.\"\n\nPart 4 - The Only Way It Could Be \n\nWednesday, October 19th. At 6:00am, I went into MCD and, being the first one to arrive, I made coffee. As it percolated, Detective Joanne Warner came in.\n\n\"Good morning, sir!\" she said brightly. \"How's your back? Did you see the doctor?\"\n\n\"Good morning, Detective Warner.\" I replied. \"Yes, I did see the doctor. My back is still sore from his treatment, but I'm not feeling the grinding nor the shooting pain, so I think it's going to be much, much better.\"\n\nIndeed, Laura had medicated me to let me fall asleep, and then entered a prescription note on my Police record in case I was ambushed with a surprise drug test. So I felt okay, but was really looking forward to that coffee..\n\nAs Detectives trickled in, I sat at the corner desk near the back... the desk I'd originally used when I first came to the TCPD. I noted the conversations between the Detectives, and those between Vice and MCD, and I was extremely pleased at the camaraderie... unlike days past, we were a cohesive unit where everyone had everyone's back... something sorely (pun intended) needed in the SBI.\n\nAnd then came 7:00am, and that meant the one and only Bettina!\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette from in front of City Hall, where the Public Health Offices were. \"Channel Two News has learned that Public Health Officer Loran T. Michael's suit to gain an emergency stay preventing Robert Brownlee from being forced into the Public Health Department was upheld by Superior Court Judge Harry 'Spud' Nance!\"\n\n\"Nance stated that the stay was to give time to examine all the issues of the case in a timely manner.\" Bettina continued. \"PHO Michaels's suit does not challenge the law that Commander Brownlee can be given an equivalent position after his extended illness, but challenges whether Brownlee can be forced into the Public Health Office when other positions are available for Mr. Brownlee to fill.\"\n\n\"In other news,\" said Bettina, \"Sheriff Deputy Scott Peterson took a leave of absence from the Sheriff Department for the rest of the month to concentrate on his campaign for the Council seat vacated by the death of Pastor Raymond Westboro. This was announced after Sheriff Daniel Allgood endorsed Peterson in the strongest possible terms. Roll tape.\" The tape showed Sheriff Daniel Allgood endorsing Peterson in the strongest possible terms.\n\nBettina continued: \"This comes after Police Chief Sean Moynahan and Police Commander Donald Troy strongly endorsed Peterson' opponent, Public Health Officer Loran Michaels, for the same position. When asked if there was significance in these contrasting endorsements, Sheriff Allgood said that people having differences of opinion are what make for political races in the first place. But sources tell Channel Two News that there is a rift between the Sheriff and his Police Department's leaders over this issue, and that the relationship between these law enforcement officers has chilled in recent days.\"\n\n\"Finally,\" said Bettina, \"at 2:00pm this afternoon, there will be a ceremony at the Veasley Community Center, where the Ladies Auxiliary will honor Police Deputy Chief Della Harlow as Town & County Woman of the Year! Channel Two News will have live coverage, and we congratulate Deputy Chief Harlow for this accomplishment!...\"\n\nAs Bettina went to Sports, I said \"No disrespect to Commander Harlow, but I don't care what the Ladies Auxiliary says. My Woman of the Year is my green-crowbar-carrying partner, Captain Ross.\" There was loud acclaim for that.\n\n\"Sir,\" said Joanne Warner, \"isn't your wife part of the Ladies Auxiliary that decided who would get that award?\"\n\n\"Detective, you are attempting to create 'trouble'.\" I said jovially. \"And you are succeeding.\"\n\n\"Uh oh, the I.C. is gonna be sleepin' on the sofa.\" said Theo Washington, shaking his head in mock sadness for me.\n\n\"At least your back is better, Commander.\" Joanne said helpfully.\n\n\"Yes.\" I said. \"At least my back is better.\"\n\n\"Still wearing the girdle, sir?\" asked Cindy, her ice blue eyes sparkling with merriment.\n\n\"Yes. Yes I am,\" I said, \"until I can do some exercising to strengthen my back. And I may keep on wearing it: I like the bulletproof aspects of it.\"\n\n\"And with the SBI around,\" said Teresa Croyle, \"that's always a wise precaution.\" There was a lot of agreement with that.\n\n\"Okay, everyone.\" I said. \"Many of us in here are expected to attend the Ladies Auxiliary gathering. And some of you are on Security Detail for it, is that not right, Lt. Croyle?\"\n\n\"That is correct, sir.\" said Teresa, who was already taking a leading role in such matters.\n\n* * * * * * * * * * * * * * * *\n\nRiverside Drive was closed off behind City Hall and in front of the Veasley Community Center; people had to drive around Courthouse Square as a detour. The gathering was fairly large, and it was nice weather and not too cold.\n\nCindy and I were at the intersection of Elm Street, which was the road that formed the north border of the rectangle of Courthouse Square, and Riverside Drive, mostly staying out of the way and watching the people gathering. Mrs. Myrtle L. James and the Ladies Auxiliary were inside the Community Center, and would come out just before the proceedings.\n\nI saw Della Harlow on the street right in front of the podium, talking with Bettina Wurtzburg and Fire Marshal Zoe Singer. Loran T. Michaels was coming up to them, shaking hands and congratulating Della. Near them were Chief Moynahan, who was talking with Chief Emeritus Griswold and with Joe Smedley. Further south was Fire Lieutenant Roy Easley, who was now part of Zoe's Arson team and the Fire Department's version of Internal Affairs.\n\n\"Commander,\" said Cindy, \"any truth to the rumor Roy Easley is going to help Inspector Maxwell investigate the SBI?\"\n\n\"You did not hear that from me.\" I said. \"But between you, me, and the crowbars... yes, that might be a part of the Governor's plan to weed out the rot. But it's not a done deal, so we'll have to see... and Jared has to win the election first.\"\n\n\"Think he will?\" asked Cindy.\n\n\"I dunno.\" I said introspectively. \"I don't know.\"\n\nJust then, Priya Ajmani came up to us, smiling brightly. \"Commander, can I get a comment on Commander Harlow's award today?\" She put the microphone up to my face.\n\n\"Deputy Chief Harlow is an accomplished Police Officer that has done an outstanding job, and she's very deserving of this recognition.\" I said. \"I'm proud to be working with her every day to make our Police Force the finest in the State.\"\n\nPriya said \"There is some talk that your partner here, Captain Ross, should have been Woman of the Year. Any comment on that, Commander?\"\n\n\"Absolutely.\" I said. \"While I would never dream of contradicting the ladies of the Ladies Auxiliary Club, I am blessed to have Captain Ross as my partner in crime-fighting, and there's nobody I'd rather have working with me to crush the criminals of this County than her.\"\n\n\"Captain Ross,\" said Priya, \"how do you feel about Commander Harlow's award------\"\n\n\"Wait...\" I said, to Cindy. \"Do you hear something?\" I was hearing a hum...\n\n\"Uh no... oh, wait.\" Cindy said. \"Yeah, it's getting louder.\"\n\n\"It's a motorcycle!\" I said. Something more than instinct said this was trouble as I grabbed my Police radio.\n\n\"Break! Break! Break! Motorcycle!\" I said into it, walking away from Priya's cameraman, who then was more strongly impeded by Cindy. \"Where's that motorcycle I'm hearing?\"\n\nChatter started up on the radio. \"No motorcycle at Checkpoint Alpha.... nothing at Checkpoint Charlie... no sighting, Commander, from what direction are you hearing it?\"\n\nI began walking towards the Community Center... and Time seemed to slow down.\n\n\"From the south!\" I yelled as I saw the motorcycle flying up Riverside Drive. \"Stop it!\n\nBut it was too late. I could see that the rider was a male, dark brown pants, light brown leather jacket, black helmet. He rushed towards the crowd in front of the Community Center at breakneck speed, then suddenly slowed down and almost stopped right in front.\n\n\"Gun!\" I yelled, seeing the man pull a semi-auto pistol from his jacket pocket and aim at the group right in front. I was running, Cindy behind me, but we were too far away as the man began firing.\n\nJoe Smedley had moved in front of the women as the motorcycle had approached. Now he was trying to cover Della as Zoe Singer tackled Loran Michaels. In all-too-slow motion, I saw the fabric on the back of Smedley's shirt seem to separate, followed by the formation of little black holes. Smedley was being shot! I realized. He was taking the bullets!\n\nThe motorcyclist sped up, roaring north along Riverside Drive, past me and Cindy and Priya. Cindy pulled her gun to shoot at him but I pushed her arms down.\n\n\"No!\" I gasped. \"Too many people!\" Cindy nodded, and then we turned to see the horrific sight.\n\nFor the only time in my life, I saw Chief Griswold frozen in place with shock. Lieutenant Croyle had rushed past him with Roy Easley to attend to Joe Smedley. Smedley was on his back now. He looked up at Teresa.\n\n\"Remember our talk, Ms. Croyle.\" he said quietly. \"Mr. Easley,\" said Smedley, \"keep my Fire Department right.\"\n\n\"Hang on, Mr. Smedley. Medics are coming.\" said Easley just as Chief Griswold got to them, agony on his face. He knelt beside Smedley and put his hand under Smedley's head to support it and keep it off the asphalt. Smedley clutched at Griswold's other hand.\n\n\"Yes, hang on, Smedley!\" ordered Griswold, tears forming in his eyes as he looked down upon the dying man he'd served with on Police duty for many years.\n\n\"It's... it's okay, Grizz.\" said Smedley. \"Avenge me, my friend, avenge me...\"\n\n\"No, you hang on!\" Griswold said, willing Destiny to yield to him, and losing.\n\n\"This is... this is how it should be, Grizz...\" gasped Smedley as a crowd formed around. \"For me, anyway... don't you see? This is the only way for me to go.\"\n\nWith a faint smile, he looked at his comrade-in-police-arms and said \"End of the line, Grizz... end of the line.\" And with that, Joe Smedley's grip on Griswold's hand relaxed as Smedley took his rightful place amongst the heroes somewhere in the sky watching over all of us, a place without suffering nor the need of heroes...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "police drama",
        "crime drama",
        "mystery"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/end-of-the-line-ch-01"
}