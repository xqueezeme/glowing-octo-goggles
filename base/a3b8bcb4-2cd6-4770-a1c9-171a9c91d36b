{
    "title": "Serendipity",
    "pages": [
        "*Note to readers: I recently wrote about a cruise I went on in the Fall of 2012with my former boyfriend, Tim. I wrote it in response to the many private emails I got asking me why I don't live full-time as a woman. The short answer is: I don't want to because I enjoy being a man. I only want to be Callie a few hours at a time.\n\nTim and I broke up shortly after the New Year because he, like me, seems unable to be satisfied with any one person for very long. While he was gorgeous and a genuinely nice guy, I got bored with him and just couldn't put any more energy into the relationship. \n\nI stayed single for almost about ten months\u2014a record for me since I got my braces off in high school. And then, purely by chance, I ran into someone at a marathon I was running in mid-September of 2013.\n\nI've only dated a handful of women since I stopped lifting and starting crossdressing again. I like women. If a cute girl hits on me and wants to hook up, I definitely won't say no. I honestly believed no really attractive female would be comfortable living with a guy who loves to crossdress and dates men. And by dating, I of course mean....\n\nSo for the most part, I stick to dating guys when I'm Callie. However, this very special person I met has been my girlfriend and lover for just over two years. When I told her I enjoy writing erotic stories, she encouraged me to write \"Cruisin' for a Bruising\" and when I mentioned writing about us, she was very supportive. So thank you, honey. This is our story and I love you very much!\n\n*****\n\n\"Name?\"\n\n\"Cal Petersen.\"\n\nThe official scanned the registration and handed me #8. \"Wow. A top-ten qualifier. Here you go, Mr. Petersen. Good luck.\"\n\nI thanked him and took my bib with the number eight on it and turned to go back upstairs when I saw her. She was in another line waiting her turn. I excused myself as I cut through two other lines to get over to her then moved alongside and said, \"Well, this is a pleasant surprise!\"\n\nShe turned to look at me and it took her a second to make the connection. \"Oh, my God! I know your face, but I'm drawing a blank on the name. Can you help me out?\"\n\n\"It's Cal. Petersen.\"\n\n\"Yeah, right! The flight engineer guy on base. The guy with the ponytail. You really helped us during that two-week sea trial. I recognized you as soon as I saw you, but that's been, what, maybe a year ago now?\"\n\n\"Just over,\" I told her. \"And I have to admit I can't remember your name either, Lieutenant.\" I remembered her rank and her face but that was about it.\n\n\"Randall. Kay Randall,\" she said.\n\n\"Is that like Bond, James Bond?\" I kidded.\n\nShe laughed and then I remembered that smile. She was really very pretty. I'd only ever seen her in uniform and remembered thinking she was cute, but seeing her in shorts and a tee-shirt with no make up told me she was downright good looking. \n\nI have a thing for short hair on the right girl, and she most definitely had the face for it. She had that kind of pixie cut I really like. Not spiked. I hate spiked. What I really like is when it's both short and smooth. The most beautiful woman I could think of with that kind of cut was Halle Berry who also sometimes wears the dreaded spiky kind of pixie I despise. Hers was most definitely not spiked or gelled. It was very short, soft, and smooth and sexy as hell. \n\nNot only was her face incredibly attractive, she had a thin, runner's build and I've always liked thin. Not emaciated\u2014thin. I tried not to stare, but I managed to get a good look at her boobs and I guessed she was probably about a full B. (My suspicions were confirmed later on.)\n\n\"I could tell you, but then I'd have to kill you,\" she said, thus showing me she could both give as well as take. Any career military person, officer or enlisted, has to be good and getting and giving sarcasm as the military thrives on it.\n\n\"Number 8,\" she said admiringly as she looked at the bib in my hand. \"What's your qualifying time?\" \n\n\"I could tell you but...well, you know.\"\n\nShe laughed and said, \"Ha! Cute and funny. That's a winning combination in my book.\"\n\nI stood and talked with her as she inched her way toward the registration table and as we were chatting another guy I recognized made his way through the lines and told her, \"I'm all set.\" He was holding #316.\n\nI said, \"Oh, sorry. I didn't realize you guys were together.\" I didn't show my number but I did raise the bib slightly as I said, \"I saw Kay in line after I picked up my number and was just saying 'hey.' I'll leave you two alone.\n\nBoth of them smiled as Kay said, \"No. It isn't like that. Jared and I are both Naval Academy grads and old friends. Nothing more. Besides, he isn't my type.\"\n\nI looked at him and wondered what her type was. He was tall, athletic, good looking, and had a great smile. He was obviously intelligent. I knew he was good natured and easy going from having kinda, sorta worked with him during the sea trials. That comment peaked my curiosity but I didn't ask and she didn't tell.\n\n\"We're gonna get together for dinner tonight. You wanna join us?\" she asked.\n\n\"Nah. No thanks. Third wheel and all that. I appreciate the offer, but I'll be okay but.\"\n\nJared chimed in and said, \"I meant to tell you I can't make it tonight, Randall. I ran into Douglas and he wants me to meet his new fiancee. So problem solved, right?\"\n\n\"No kidding? James Douglas is taking the plunge? Wow. Seems like everyone from our class is getting hitched. Jesus. I hope that's not contagious.\" She turned to me and said, \"Lucky you, right? Seems like you and I can grab dinner together without the real third wheel over here being around after all,\" Kay said as she used her thumb to point at her fellow Navy officer. That confirmed what she'd said. There was indeed no romantic interest between them. \n\n\"Well, okay. Sure. I'd like that. What time and where?\" I asked her.\n\n\"Is the hotel restaurant okay with you?\" she asked.\n\n\"Fine by me,\" I told her. \n\n\"How about 7 o'clock? I'll meet you down here in the lobby if that sounds all right?\"\n\n\"See you then,\" I told her. \"Nice seeing you again, Jared,\" I said as I excused myself.\n\nI'd been running six or seven days a week for nearly five years but hadn't run a marathon until a year before that. I ran a respectable 3:25:37 my first time out, and I'd whittled my time down to just under 2:45 since then. Kay was also a strong runner and could finish the 26-mile race in under three hours herself. Neither of us were anywhere close to world-class distance runners who could run the race in just over two hours, but we both really enjoyed running.\n\nAfter a lazy afternoon, I took a shower and got ready for dinner. While I love to really get dressed up as Callie, I'm not into clothes as a guy. I wore a pair of jeans and button-down shirt which, for me, is really getting fancy.\n\nI was sitting in the lobby waiting for Kay when I heard her say, \"Hey! Ponytail guy!\"\n\nI put down the paper I was reading and looked up. \"Wow. You look great,\" I told her honestly. \n\nAnyone who's read my stories knows I have a thing (a huge thing) for women's sweaters. I'm insanely obsessed with them and as Callie I wear very little else. As Cal, I love seeing a cute girl in one and Kay looked amazing in the long-sleeved, pale green, rib-knit sweater and jeans she was wearing. Being a crossdresser, I pay attention to every little detail when I see a cute girl, and I noticed Kay was wearing a pair of small, gold earrings and a gold necklace as well as the perfect amount of makeup.\n\n\"Ah, a jeans guy, eh?\" she teased as I stood up to meet her. I was thrilled when she offered me a polite hug which I accepted.\n\n\"Uh, sweater guy actually,\" I told her without offering any additional details.\n\n\"Oh, really? I've heard of sweater girls but never met a sweater guy before,\" she said continuing to be playful.\n\n\"Shall we?\" I said as I led her into the dining room.\n\nWe made small talk about the sea trial\u2014especially her former boss whom we all called Commander Napoleon. He was a flaming asshole that nobody liked, but everyone seemed to respect. As long as he got the job done, the Navy was happy to reward with promotions and command. \"Flamers\" was one more reason I could never have spent a career in the military. I don't do well with taking orders especially from hard asses. I'll do anything I'm asked, but if someone tires to order me to do something, we're gonna have words right then and there.\n\nAfter gleaning some personal information, I kind of summed it up by saying, \"So you're 27, a Naval Academy graduate, a supply officer, cute as hell and single. I couldn't help but overhear your comment to Jared about that guy named Douglas taking the plunge and the way you seemed to almost fear getting married. Care to talk about that or am I in need of being told to mind my own business?\"\n\nKay took a sip of the one beer she always drank the night before a race and said, \"No. It's not personal. Okay, what I mean is, it is personal because it involves me, but it's not a big secret with my friends.\"\n\n\"Secret? You have secrets, Lieutenant?\" I said with feigned incredulity.\n\n\"Not any more,\" she said. \"At least not since the repeal of 'don't ask, don't tell.'\" She waited to see if my facial expression changed then said, \"I'm gay. And although gay marriage is now legal, I really don't have any interest in marrying anyone and especially not any time soon. So when I see my former, fellow midshipmen all taking the plunge, it kind of scares me.\" She paused then asked, \"How about you?\"\n\n\"Long story,\" I told her. \"But I'll be kind and give you the nickel version.\" \n\nI briefly shared growing up overweight and having horribly bad teeth which made me invisible on my best days and the butt of endless jokes on my worst. \n\n\"Oh, my God. I'm so sorry to hear that. You have a great smile and you're really cute\u2014for a guy,\" she told me.\n\n\"Thanks\u2014I think,\" I replied. I went on to tell her how I started lifting weights, lost the baby fat, put on a ton of muscle and got the braces off.\n\n\"That must have been a huge change for you,\" she said. I could tell she was a good listener and that she genuinely cared. That was important to me because after the way I'd been treated for so many years I learned a lot of empathy for people. Not just sympathy but the ability to actually feel for them. I hated when people teased someone for the way they way they looked and even after my 'transformation' I never put anyone down for something physical over which they had no control or for being overweight.\n\nI shared with her how I went from being invisible to being hit on by pretty much every cute girl in school but that I was still too shy to deal with all the new attention. Besides, I'd had a crush on my English teacher for two years and I had this fantasy of being with her. I wrote about her in one of my papers and that led to me having an affair with her for several months. I also told her about another brief affair with a lonely, married Mormon woman followed by my enlistment in the Marine Corps to escape my little hometown. I explained how during my last year on active duty, I'd met my former wife in South Carolina who became the woman of my dreams through her willingness to do and wear and be anything and everything I'd ever wanted. \n\n\"Wow. So how did something that great come to an end?\" she asked. Quickly she added, \"If you don't mind me asking something so personal.\"\n\n\"Not at all,\" I told her. \"As this all unfolded, she slowly began learning she was a very, very submissive woman.\" I watched as Kay raised her eyebrows in genuine interest. \"It got to the point where I dreaded going to bed with her because I had to be her dom. She needed to be tied up, handcuffed, chained, hooded, spanked, and many other things that just didn't do it for me. For a long time I felt obligated to play along because she did everything I'd ever dreamed of and it only seemed fair I do the same for her. But at some point, it got to be so burdensome, I lost interest.\"\n\n\"So what happened after that?\" she said. I could see this was a topic she really liked discussing as much as I did.\n\n\"Well, that's where it gets really personal and I'm not sure I'm ready to talk about that yet. Let's just say it led to us going out with other people and my wife wanting someone very strong and very dominating in her life, and that was no longer me.\"\n\n\"It's hard to imagine you were ever fat or unattractive, but it's just as hard imagining you as a guy who lifts. That's quite a swing back and forth.\"\n\nI pulled out my wallet and showed her a picture of me and my former wife at the beach. \"Holy shit!\" she said. \"You really were freakin' ripped.\" She kept looking at me then my pic then back at me. \"Wow. That's unbelievable.\"\n\nThen I showed her a pic I carried of me in the tenth grade just before I got my braces put on. \"I don't even know what to say. I feel like I just met three completely different people.\"\n\nShe handed me my wallet back and I said, \"Well, there's actually a fourth me, but that's the personal part.\"\n\nShe finished her beer and said, \"Okay, you can NOT leave me hanging like this. You were overweight and unattractive, then ripped and gorgeous, and now you're rail thin and still very good looking. Who or what is this fourth you?\"\n\n\"Oh, no. Sorry. Not gonna share that with you. If we knew one another better and if I felt I could trust you then maybe. Even then, it would be a 'maybe' at best.\"\n\n\"Okay, how about if I share something personal with you?\" she said.\n\n\"No guarantees even then but I am a good listener and I don't talk out of school,\" I let her know.\n\n\"I said I was gay but I'm actually bi. Well, kind of.\"\n\n\"Kind of?\" I asked looking for clarification.\n\n\"Yeah. I mean, it's been really confusing. I only dated guys until my third year at the Academy although I was pretty much always attracted to other girls. I really enjoyed sex with guys, but I couldn't shake this overwhelming need to be with another woman. That's when I met this other Mid name Allison who was from a small town in Missouri. She knew she was gay all her life. We started spending all of our free time together and she was as gay as they come but hid it perfectly from everyone. Oh, and she was very butch. And for the record, it really is true that most lesbians are pretty butch and Allison was definitely all that.\"\n\n\"You don't look very butch to me. Do you hide that because of the Navy?\" I asked her.\n\n\"No. Not at all. This is the real me. I'm what people stereotypically call a 'lipstick lesbian.' I like being a pretty, feminine woman. I just like...women.\" She quickly added, \"Sorry. That must have sounded pretentious claiming I'm pretty. I just meant I like to feel pretty. Anyway, I stopped dating guys after that and have only dated women since. Yet sometimes I still miss having sex with a man if that makes any sense.\"\n\n\"That makes perfect sense and nothing you said was pretentious,\" I assured her. \"You are pretty. In fact, you're a very attractive woman.\"\n\n\"Well, thank you,\" she said almost demurely. \"I guess the real problem for me is I want the best of both worlds.\" She looked at me to see if I was going to ask a question, but I just listened. \"I can't plead being drunk after just one beer, so I'm not sure why I'm telling you this when I barely know you, but you strike me as someone who isn't judgmental and as someone who really gets this stuff. So here goes. In my ideal fantasy, I would meet a very pretty girl but that girl would have...well...she'd have a dick to please me with.\"\n\nI felt something surge through me like a bolt of electricity. I didn't say anything but I felt my heart start beating faster.\n\n\"I know. It sounds crazy to me too, when I say it out loud. Too weird for you?\" she asked with raised eyebrows.\n\n\"No. Not even a little bit weird. We all like what we like, right? I have this thing for sweaters and even just admitting that to a girl used to embarrass the hell out me of because I thought she'd think I was either weird or controlling.\"\n\n\"Sweaters? Wow, you're really are out there on the fringe, ponytail guy.\" She smiled then said, \"Sounds pretty tame to me,\" she said. \"What other um...things...do you like?\"\n\n\"I could tell you, but then I'd have to....\"\n\nShe put her hands and said, \"Okay. I get it. That's crossing the line. I won't ask anything else. I promise.\"\n\n\"But I will,\" I said. I reached back and grabbed my wallet again. \"I'm just curious. I have a sister some guys say is pretty good looking. She's a fraternal twin so she's obviously my age. I'm just curious to know what you think.\" I opened the wallet and showed her a picture of me as Callie and said, \"Would you go out with someone like her by any chance?\"\n\nShe reached for the wallet again, but this time she had that look in her eye that said, \"I can't believe you're trying to set me up with your sister. You've gotta be kidding.\" She looked down and I saw her her eyes open wide. \"Oh, my God. She's beautiful.\" She held the picture up so she could compare Callie to me and said, \"Oh, yeah. I see the resemblance. You're definitely twins. You're cute but she's the looker in the family.\"\n\nShe handed the wallet back and said, \"Yeah, I'd definitely go out with her. She's pretty and feminine and pardon me for saying this about your sister, but she's sexy as hell. If she lives around her I wouldn't mind you introducing me. If she's also gay, that is. Oh, and single, of course. I guess I should have asked.\"\n\n\"She's definitely single and she's also bi-sexual,\" I told her. I paused then said, \"Can I tell you a secret about her?\"\n\nKay laughed and said, \"Sheesh! You and your secrets. Okay. I'll bite. What's the big mystery?\"\n\n\"Um...well...my sister has the um...extra body part you mentioned you're looking for in a girlfriend.\"\n\nKay was a smart girl, but she was temporarily mystified. \"I'm lost. How can your sister have a....\" She looked at me then said, \"No. Oh, holy shit!\" Kay was clearly blown away. \"Are you serious? Is that picture really...you?\"\n\nI nodded just once. \"It is. So now you know my secret,\" I said wondering if I'd made a tactical mistake by telling her. I realized it wasn't really a big deal, but this just wasn't something I went around advertising. The last thing I wanted to deal with was a bunch of jokes and ribbing at work. You know, panties on my locker, someone handing me lipstick instead of Chapstick or asking me if I remembered to douche.\n\n\"You're absolutely freakin' gorgeous,\" she said still trying to process everything. \"I mean, she's gorgeous. Well no, wait a minute. Since that IS you, then...Jesus. This is just so confusing to someone who considers herself so avant guard on this kind of stuff. I would have never guessed.\"\n\nI laughed and said, \"Honestly? I would have never guessed you're gay, either, but that just goes to show you really can't judge a book by its cover.\"\n\n\"Yeah. I agree. I tend to hang out at lesbian bars and because I'm so femme, I tend to be pretty popular with a lot of the dykes. But I want to find a lipstick kind of girl like myself to be with, you know?\"\n\n\"Dykes? Oh, okay. I guess that's like a black guy using the 'N' word. He can but we can't.\"\n\n\"Bingo,\" she said. \"Although being called a dyke doesn't bother me in the least. Like Popeye said, 'I yam what I yam', right?\" Both of us laughed.\n\nWe talked for another half hour or so about my um...hobby...and how it led to my wife and I double dating once when I was dressed as Callie and the way it contributed to our eventual divorce. I was also completely honest about my affairs and hook ups with various men over the years as a kind of full disclosure thing.\n\nAfter dinner, I walked Kay to the elevator and we both got in. On the way up, we were all alone when she said, \"I don't mean to be weird a or anything, but I was just wondering. I know you said you...I mean...Callie...only dates guys, but I gotta tell you I can't stop thinking about her...sorry...you...as her. My head is really spinning here, you know?\"",
        "\"I understand,\" told her. \"You decide to share your biggest fantasy with a near stranger and then he springs this on you. I get it.\"\n\n\"I'm not always the most tactful person,\" she continued by saying. \"So I hope you'll forgive me if this blunt but I'm just gonna ask. Would you even consider going out with me sometime as Callie? I mean, do you date women when you're her?\"\n\nWe arrived at her floor and as the elevator came to a stop I said, \"Well, I'll have to ask her, but I think there's a pretty good chance she'd say 'yes.'\"\n\nKay laughed out loud and said, \"Be serious. I took a big risk asking you so don't be mean.\"\n\n\"Sorry,\" I said. \"I often use humor\u2014good or bad\u2014to deflect serious things. I certainly didn't mean to hurt your feelings.\"\n\nKay stopped the doors from opening and turned to me and said, \"You're really adorable, Cal. Maybe that picture has tainted what I'm about to say and you can't really blame me if it has, right? It's just that you're the first guy I've even been willing to consider going out with you since I came out. And it may not mean much to you, but considering I'm a girl who sees herself as about 95% gay, that's pretty high praise, ponytail guy.\"\n\nI knew she was being serious, but I just couldn't help myself when I said, \"Yeah, that is high praise. But let's be honest here. I'm still not sure you're up to my high standards.\"\n\nShe let go of the button and the doors opened. Kay turned around and feigned punching me in the stomach. She stood in the doorway to keep the doors from closing and said, \"I feel like I'm back in high school or something. My stomach has butterflies in it and I'm wondering if I'm going to get a goodnight kiss.\"\n\nI smiled and said, \"I think you're confusing me with my twin sister. She's probably the one you're wanting to kiss you goodnight.\"\n\nWhen I said that, Kay closed her eyes and moaned softly. \"Mmmm. You are so right. My God! I've never even considered...well, a girl like you...er, her but she's...no, you're so...gorgeous...and she's got all the right equipment and...this is just so...crazy. I can't believe we actually met and talked AND found this out about each other. You know, I don't believe in God or fate or that kind of thing, but this is serendipity at best, don't you think?\"\n\nI leaned over and kissed her on the cheek and said, \"Most definitely.\"\n\nThe door started to close and I said, \"Oh, wait. What's the protocol for this relationship? Should I call you or will you be calling Callie?\"\n\nKay smiled and said, \"You're a nut. An adorable nut but still a nut. Good night, Cal. I had a really nice time.\"\n\n\"Me, too,\" I said as the doors pulled shut.\n\nWe had an early breakfast together the next morning, but we didn't talk about the night before or dating. We were both focused on the race and I liked that she was someone who seemed really centered and self-confident without being cocky. I don't like arrogant men, and I can't stand loud women. The few lesbians I've met have tended to be like that and I found them to be a little too over the top for my liking. Kay, on the other hand, seemed to be pretty damned near perfect.\n\nThe race started at 10am and I finished in 2:39:03, a personal best for me. I finished 7th in my division and was more than satisfied with my performance. Kay also had a personal best coming in in 2:53:18. I was waiting for her at the finish line. She was absolutely exhausted and fell into my arms a few steps beyond the \"Finish\" banner. I congratulated her on her time and while trying to catch her breath she said, \"I gotta tell you, ponytail guy, the thought of going on a date with Callie was the best motivation I've ever had. Anytime I started hurting, I'd thought of the beautiful girl in that picture kissing me goodnight and I was able to keep going.\"\n\nWe grabbed some Gatorade and Kay downed two cups immediately then sipped a third as she began recovering. Jason saw us as he came across the line about five minutes later and we waved him over to join us.\n\n\"Holy shit!\" he said while panting heavily. \"You gotta have at least five years on me and you kicked my ass. What was your time?\" I told him and he just threw up his hands. \"Kiss my ass!\" he said jokingly. \"How'd you do, Kay?\" She let him know she beat him, too, and he said, \"Shit! If I had a gun I'd shoot myself.\" Both of them laughed and hugged each other. \"See you guys around, okay?\" he said as he headed off.\n\nThe hotel was about a mile walk from the finish line so we slowly strolled back together. We barely said a word until we got to the lobby. I opened the door for Kay and she said, \"That makes me wonder who should open the door for whom when Callie and I go out.\" Kay wasn't serious. She was just letting me know she was really looking forward to our date.\n\n\"Callie's only been on one date with a woman and that was her ex-wife who was with another man so it's kind of um...virgin territory for her, too. I'm sure she'll be fine no matter who goes inside first.\"\n\nKay laughed at the virginity reference and said, \"She sounds like my kind of woman.\" We got to the elevator then she said, \"And she definitely looks like my kind of woman.\"\n\nI made a split decision to say what I was thinking and chimed in with, \"Yeah, and you haven't even seen all of her yet.\"\n\nKay stepped inside then closed her eyes and said quietly, \"Don't remind me. I'm already unable to think about anything else.\"\n\nI pretended to be greatly offended and said, \"I don't think Callie would appreciate being talked about that way. She's a very nice lady, you know.\"\n\nWe were at Kay's floor and as the doors opened she said, \"That's okay. I have a way of dealing with nice ladies I think she'll like.\" As the doors closed she looked over her shoulder and added, \"A lot. Call me soon, okay?\"\n\nI was too tired to get hard, but I knew I'd be spanking the monkey later that night dreaming about a first date with this smart, funny, and beautiful young Navy officer. Another first for Callie coming up!\n\nI got a text from Kay the next morning. \"When you ask your sister about going out with me can you ask her what she'd like to do? I hang out in gay bars a lot, but that doesn't seem like her thing. I don't even know what to wear for her. Okay, a sweater, for sure, but what else? In case you can't tell, I'm pretty nervous about this first date. I want to make a really good impression so anything you can tell me would be appreciated. Oh, btw, please don't tell her any of this. I don't want her to think I'm some kind of flake. Kay.\"\n\nAs Callie, I didn't go to gay bars and rarely ever went anywhere crossdressers hung out. Mainly, I wanted to seen as a unique individual not one of many people with the same thing in common. I preferred being seen as a beautiful, straight girl so I tend to spend my time at singles bars or lounges where young, single (or married) men congregated. The one time I did go to a gay hangout called Screaming Queens, I met Tim. Even so, that just wasn't my choice of venue for Callie.\n\nAfter giving Kay's text some thought, I texted her back. \"Callie said she'd love to go out with you so you can stop worrying about that, okay? She just wants you to take her somewhere nice. Doesn't have to be expensive. Just something quiet and comfortable. Oh,I showed her the pic I took of you and she loved it. She said if you want to wear something like that be very happy. Sound okay to you?\" I ended it with the ubiquitous smiley face.\n\nI got a reply moments later. \"Oh, my. You see, I'm usually the girl in any relationship, but it sounds like I'm gonna have to take the lead in this one. Okay. No worries. I believe every challenge is just an opportunity to excel so I'll find someplace...nice...and I'll do my best to look pretty for her. Tell her I can't wait to meet her, okay? K.\"\n\n\"Callie says you won't have to try because she thinks you already are pretty.\" Smiley face.\n\nThe next evening I got another text from Kay. \"Can we please talk? K.\"\n\nUh, oh. She must be having second thoughts. I should've known. \"Sure. Anytime.\"\n\nThe phone rang almost as soon as I hit 'send.'\n\n\"That was fast,\" I said as I answered the phone.\n\n\"I wanted to call you because I didn't want to say this in a text,\" she said very seriously.\n\n\"Okay. What's on your mind?\" I asked knowing what was coming.\n\n\"Can we get together and talk in person? Tonight maybe?\"\n\n\"Are you breaking up with me before our first date?\" I said in a tone of voice that belied my fear she was doing just that.\n\n\"What? Breaking up? Are you crazy? No! I just need to talk with you. I mean, with...you. With Cal before I go out with Callie who is you which is why I need to talk to you...Cal.\" I heard Kay make an 'argh' kind of noise.\n\n\"Everything okay?\" I asked.\n\n\"Yes,\" she said. \"No. Not really. I mean, maybe it is, but that's why I need to talk to you right now. So can you? Can we? Do you have time tonight?\"\n\n\"Calm down, Lieutenant! I'll be right there. Just text me your address. I'm on my way. Oh, and Kay? Breath, okay? Just breath. I'll be there as soon as I can.\"\n\nI lived in the suburbs on the west side of the city and Kay lived in a nice apartment in downtown DC. There was very little traffic and I got to her place in less than an hour. I walked up one flight of stairs to the second floor and rang the doorbell.\n\n\"Hi. Thank you for coming over. I'm sorry for sounding hysterical or psychotic or whatever. I'm normally so calm and so focused people think I'm stoic. This is really out of character for me. I just don't want to blow this\u2014whatever 'this' may be.\"\n\nKay showed me to her sofa in what was a very nicely furnished place. \"Please have a seat. Can I get you anything? A beer maybe?\"\n\n\"Only if you're having one,\" I told her.\n\nKay returned with two Bud longnecks and we clicked bottles before taking a first sip. \n\n\"So whatcha got on? Your mind?\"\n\n\"What?\" Kay said with a puzzled look. \"Oh, okay. I get it.\"\n\n\"Sorry. Just me trying to deflect again. I'll be quiet and listen,\" I promised her.\n\n\"I hope not,\" she replied. \"I need you to talk to me. I know you'll be honest so that's not the concern.\"\n\n\"What is the concern then?\" I asked as I took a long pull from the bottle. I didn't drink beer very often but it tasted so good for the first few days after a marathon.\n\n\"You're an engineer and I majored in math at the Academy. That means we're both rational, logical people. That means we can separate fantasy from reality. So when we talked about my fantasy and you told me you knew someone who could be my fantasy, I temporarily lost the ability to think rationally. I was so caught up in the fantasy, reality didn't matter. Then I came down off of the endorphin-induced high and started having doubts.\"\n\n\"What kind of doubts?\" I asked as I took another drink.\n\nKay took a long drink of her own beer and said, \"The list of doubts I'm not having might be the one to start with because it's a lot shorter.\" She stared at me to gauge my reaction then said, \"Sorry. That was my attempt at humor. Looks like we both have some work to do in that area.\" I smiled and let her know I was paying attention.\n\n\"I'm gonna try not to ramble. I'll try and stay focused. But something tells me I'll end up being all over the map anyway.\" She looked at me again and I didn't say anything. \n\n\"The fantasy is dating Callie. A pretty 'girl'\"\u2014Kay used air quotes to emphasize the word\u2014\"who has that special something I want so bad. But the reality is I'm dating you. A guy. A man with a dick.\"\n\n\"And that troubles you I take it?\" I asked. I felt like I was a psychiatrist asking my patient questions.\n\n\"Well, yeah. I mean, I'm not really attracted to guys. I like women. Pretty women. Like Callie. But you're Callie. There is no real woman who is available 24/7 named Callie. She's a fantasy who can only appear now and then, right?\"\n\nI finally realized where she was going with this and said, \"That's true. I spent a week in drag once on a cruise\u2014including two days of flying\u2014and by the third day I was tired of it. By the fourth, all I wanted to do was drink beer\"\u2014I took a big gulp\u2014\"and belch\"\u2014I ripped one off that startled Kay and made her laugh.\n\n\"Exactly!\" she said excitedly knowing she was getting her point across. \"So if I have a relationship with Callie\u2014something I very much want\u2014I'm also having a relationship with you.\"\n\n\"Something you very much don't want, I assume.\"\n\n\"That's what's really confusing,\" she said as she took another drink.\n\n\"How so?\" I asked as I finished my beer.\n\n\"You want another one?\"\n\n\"No, thanks. One's my limit. Sorry. Go ahead. How is that confusing to you?\n\n\"Let me me see if I can explain this. When I looked at your pictures, I felt sorry for the little boy growing up being teased mercilessly. When I saw the guy with the ripped body, I wasn't turned on in the least. Sorry, that's just how my brain works. I obviously LOVED the pic of you as Callie, but what's really hard for me to wrap my head around is that I find myself somehow attracted to you. Like this,\" she said as she used her hands to indicate she meant me as I currently looked.\n\n\"I think I should say thank you but I'll wait for the other shoe to drop when you give me the 'however' part that's sure to follow.\"\n\n\"No! That's just it. There isn't any 'but' coming. I really am attracted to you and I think it's because you're so thin and small and....\"\n\n\"Feminine looking?\" I said filling in the blank.\n\n\"Yes. That's exactly it! Does that bother you? You know, as a man?\"\n\n\"Not at all,\" I said honestly. \"You know how I used to look and I worked unbelievably hard to get strong then worked just as hard to get thin. It's very difficult for me to maintain this weight, but it's the only way I can fit into a size 8 dress.\"\n\nKay put her hands over her mouth as she laughed loudly. \"You're a size whore!\" she joked.\n\n\"Guilty as charged. I'd die if I had to wear a size 10,\" I told her. And while I wouldn't actually die, I would be very unhappy.\n\n\"All kidding aside, I have no idea whether this will be one-time thing or whether we might really like one another but if it is going to work, it has to work with me and you and me and Callie and it kind of scares me to think I might be falling for a girl who's a guy and I'm confused as hell.\"\n\n\"Would you like my opinion?\" I asked sincerely.\n\n\"Oh, my God. I've been doing all the talking. I'm so sorry. Of course I want your opinion. That's why I asked you to come over.\"\n\n\"I think we take things one day at a time. Let's go slowly and see whether or not you really do like Callie or if you just like the fantasy of Callie. That means you and I have to take it slowly, too, to find out whether or not you and I actually like each other as friends. I can tell you you're the first woman I've really been attracted to since my divorce, and I'll also tell you I pretty much gave up on even trying to find another woman because of Callie. Even so, I'm never giving her up again and what I most like about you\u2014other than you being cute as hell\u2014is that you not only don't mind Callie, but you find her attractive. That is a 'must have' for me in any possible future relationship with any woman.\" \n\n\"I gotta tell you that even when the fantasy high went away, the butterflies I feel every time I think about Callie didn't go away. What surprised me the most was when I got them thinking about you,\" Kay said sheepishly. Kay was looking right at me until she finished her sentence. She looked down and away as if she feared me saying I didn't feel the same way.\n\nI reached my hand out and waited for her to notice. She saw it then looked up at me before reaching out to take my hand. \"Come over here,\" I said. She let me help pull her toward me. \"I like you, Kay. I'm attracted to you physically for sure but more importantly, I'm attracted to you mentally and intellectually. Smart women turn me on. Smart, pretty women really turn me on.\" Kay smiled. \"But meeting a smart, pretty woman who loves and accepts Callie is more than a fantasy. It's well...I'm not sure. It's...too good to be true? Like you, I don't believe in God so I don't pray. Therefore, this can't be an answer to prayer. But it is, as you said, serendipitous for sure. I feel very fortunate to have met you and I'd like to give this...to give us...a chance. So if you feel the same way then....\"\n\nKay leaned over and closed her eyes as she kissed me on the lips for the first time. \"I do feel the same way. And I just had those butterflies again.\"\n\n\"Me, too,\" I told her as I kissed her back.\n\nI knew we'd end up in bed if I didn't force myself to stop and somehow I managed to pull back shortly after Kay offered me her soft, warm tongue. \"Oh, my God,\" I said with real desire in my voice. \"Listen, if we don't stop right now, we definitely won't be taking this slow.\"\n\nKay heaved a sigh and said, \"I know. I was thinking the same thing but I just wanted to be with you so bad.\"\n\n\"Me, too,\" I confessed. \"But you need to meet Callie and see if you hit it off with her first. Well, me. No. Me as her. Sheesh. This really is confusing, isn't it? But you know what? I have a very good feeling about this so we owe it to ourselves to wait and see, don't you think?\"\n\n\"Reluctantly, I have to agree with you,\" she said. As she slowly took her arms down from around my neck she said, \"But I have to warn you. If I like Callie as much as I like you, then there won't be any stopping my freight train of pent-up emotions.\"\n\n\"Forewarned is fair warned,\" I told her with a smile.\n\n\"So have you decided where you're taking her/me/Callie yet?\" I asked.\n\n\"I have,\" she proudly announced. \"But it's a surprise. Just let her know it's going to be something very nice and very special. Ask her to be ready this Friday at 7 o'clock for me, okay?\"\n\n\"I will,\" I said. \"And I'm sure she'll love it. She really likes it when her date takes the initiative and makes plans for her. And you can order her food and drinks too, if that's something you're comfortable with. Well, if you're taking her to dinner, that is.\"\n\n\"That's a safe bet. I want to show off my beautiful date in public. That doesn't mean I'll embarrass her with any public displays of affection, though. Just in case she might be concerned about that.\"\n\n\"Callie is very open minded so while she might not want someone to paw all over her, I'm sure she wouldn't mind having her hand held or maybe even being kissed a time or two.\"\n\n\"Good to know. Thanks for the intel, ponytail guy,\" she said with a very bright, very happy smile.\n\nKay walked me to the door and said, \"Thank you for coming over tonight. I really needed to talk to you. It means a lot that you dropped everything and did this for me.\"\n\n\"For us,\" I said as I put my hands on her shoulders. \"There are essentially three people in this potential relationship, Kay. I'm in and I'm pretty sure Callie will be, too.\"\n\n\"I'm in, too\u2014with you at least. I'm also pretty sure I'm gonna like Callie just as much. So, well...goodnight then, Cal,\" she said with a hopeful look on her face.\n\nI wasn't about to leave without kissing her goodbye so I leaned over and gave her a short but nice kiss before leaving as I told her goodnight. \n\nI was glad Kay was fairly tall for a woman. I was only 5' 8\" which is a real help with passing in public but with heels I'd tower over Kay who was 5' 7\" herself. As I left I was thinking about how that might look until I remembered she wasn't butch meaning there was a good chance she might also wear a sexy pair of heels on our first date. I felt myself growing hard as I got in the car and started the engine.\n\n*****\n\n______________________________________________________________________\n\nThe weather was turning cool and I was thrilled about shopping for new sweaters. I hadn't been to my favorite stores much the last few months and I ran into several girls who didn't know me at a couple of them. They were very helpful and friendly even when I told them I was shopping for myself. I didn't go in drag because I hated messing up my hair and trying not to get makeup on my clothes when taking them on and off.",
        "Oftentimes, people pay a lot of money for a designer label when something equally nice (or even nicer) is available for a lot less. Within reason, I don't care how much something costs. If I like it, I'm buying it. But after spending hours looking around Saks and Neiman Marcus and other high-end stores, I found the most beautiful sweater at Macy's.\n\nIt was a cream-colored, Ralph Lauren wool-cashmere blend ballet-neck sweater with long sleeves and rib-knit cuffs. It was exactly what I wanted. Dressy, classy, and only $145. I couldn't have been more thrilled!\n\nI had several...no...many short skirts to wear with it and there was no reason to buy another one except that I wanted another one. \n\nSo after taking the sweater out to my car I went back in for round two and I wasn't leaving until I had a beautiful skirt, some new heels and a purse to match, and just maybe some more jewelry I didn't need. But as with shoes and bags, a girl can never have too much jewelry, right?\n\nAfter another ridiculously long search for the perfect short skirt in those same upscale stores, I ended up back at Macy's where I found a beautiful, black pencil skirt that came to just above the knee. For some reason, I thought perhaps Kay would appreciate a more sophisticated look whereas men would want short and sexy. \n\nI stayed with Macy's for everything else and I'm glad I did. I found a pair of gorgeous Jessica Simpson Ralyi evening sandals with 4\" heels and an ankle strap for under $100 then was able to pair it with a very nice looking Calvin Klein leather tote bag for under $200. I loved, loved, loved the entire ensemble and the price was definitely right!\n\nAs much as I wanted to buy new jewelry, I already knew I was going to wear my favorite gold and onyx necklace, bracelet, and earrings which would be killer with the black skirt, taupe colored sandals and matching bag. I couldn't remember the last time I was that happy with a purchase and I couldn't wait to wear my new outfit for Kay.\n\nI made an appointment for a complete body was with my favorite salon and I also made a later appointment to come back and have my hair, nails, and makeup done. Normally, I do everything myself, but I knew the girls at this shop very well and because I was a loyal customer I knew they'd be glad to take care of me. Also, I was quite a novelty there and one of the girls always made a big deal of showing me off when she was through making me pretty.\n\nAfter the waxing I came home and ran 10 miles. It was pretty chilly outside but some of the residual wax came loose thanks to the sweat I ginned up during the run. I took a very long, very hot shower then turned the water temperature down to close my pores before toweling off. The only thing I didn't wash was my hair because they would take care of that at the salon.\n\nNo matter how many times I go through this ritual, it never fails to excite me. I came out of the bathroom and saw all of the pretty new things on the bed and I started getting hard just thinking about wearing them. It had nothing to do with Kay or sex. Just the clothes themselves did it for me. I pulled on my padded hip garment to give me some shape in the bum where I had none, then pulled on a black garter belt followed by the barely a pair of shimmery suntan-colored stockings that would look sensational with the creme-colored top. I pulled on a black slip and then the tight-fitting pencil skirt and zipped it up in front then spun it around.\n\nI decided to wear a black bra just to add a little bit of sexiness to my otherwise professional look. I knew Kay would notice. I just hoped she'd like it as much as I did. Many women would never wear a black under something white or cream but it was a very sensual look and I was a huge fan of it.\n\nI sprayed my pretty new sweater with my favorite Ombre Rose perfume then slid it on over the lacy black bra and the C-cup breast forms I was wearing underneath. I feel of the cashmere along with the scent of the perfume was intoxicating. I was tightly tucked down below and incapable of getting an erection, but I could feel blood flowing through me regardless.\n\nI went over to the jewelry armoire and removed the gold earrings and carefully inserted the gold posts before securing the clutch in back. I draped the necklace on around my thin neck and hung the bracelet on my left wrist. \n\nNormally, I'd be very excited at this point but because I had no makeup on and because my hair was a mess, I wasn't feeling it quite as much. \n\n\"Hi, Callie! Love your outfit, girl! Who's the lucky guy tonight?\"\n\nI walked closer to my friend, Lucretia, and whispered, \"Girl.\"\n\nShe threw her head back and said, \"Get out of here! Since when?\"\n\nWithout sharing details, I told her about meeting Kay and that she was taking me to dinner tonight. \"Wow! That sounds really nice, girl!\" she said as she showed me to one of the makeup stands.\n\nThirty minutes later, my hair was up in rollers and Lucretia was working on my makeup. In another half hour, she was finishing up by applying a pair of very long false eyelashes. \"Girl, you know you really don't need these, right? I'd kill to have your lashes.\"\n\nI thanked her and told her I wanted to look perfect tonight. \"Must be someone special because you be lookin' extra fine!\" She finished up and asked me to take a look. Although my hair was still up, I was stunned. \"Honey, you do such an amazing job I told her.\" I grabbed my purse and pulled out a $20 from the clutch inside and said, \"That's just a starter tip, girlfriend.\"\n\nI knew Lucretia was a single mom with two little boys so I always tipped her well. After another thirty minutes had passed she took out the rollers and styled my hair. I rarely wore more than one soft wave in it with wispy bangs but I let her put a little extra body in it in the form of several gentle waves. I was utterly thrilled with the end result.\n\nWhen she rang me up, I added 25% to the bill and thanked her again. Lucretia was really appreciative of the extra cash and said quietly, \"Girl, you be prettier than most of my real girls and you for damn sure more generous than all of them.\"\n\nI thanked her sincerely again, accepted a big hug from her with her best wishes for a wonderful evening, then went outside. It was already dark but the parking lot was well lit. It was less than 50 yards to my car but in that short distance I got whistled at and complimented twice. Under normal circumstances, I'd have made it a point to talk to the one cute guy who told me I looked great but not tonight. I had a real date with a real girl and I couldn't wait!\n\nI got home at a quarter to seven, ran upstairs, very carefully pulled everything down to pee knowing I wouldn't go again the rest of the night no matter what, then grabbed my best black coat and sat down to wait. \n\nI had just crossed my legs when the doorbell rang. I was so startled I felt like I'd come out of my skin. My fear was immediately replaced by a deep sense of excitement and anticipation. \n\nI peeked through the peephole then opened the door. \"Oh, my God!\" I said as I invited her in. \n\nKay didn't move. \"Oh, my God is right! Holy mother of God,\" she said as she just stood there and stared at me.\n\n\"Do you want to come in, Kay?\" I said in my female voice.\n\n\"Um, sure,\" she said as she stepped through the door. \"Say something else.\"\n\nI wasn't sure what she meant so I asked her how she'd been. Her eyes were closed when I spoke. \n\n\"That's amazing,\" she said. \"If I didn't know who you were, I would have guessed genetic female. Your voice is as passable as you are and you are not just passable\u2014you look like an actual women. Damn!\"\n\nWe both stood there looking at the other person. No, we were staring at each other. While Kay was taking all of me in, I was doing the same to her.\n\nShe'd chosen this very chic, black, tight-fitting, short-sleeved, skinny rib-knit top with a crew neck. She looked like a freaking supermodel with her small, B-cup breasts and tight little waist. Below it she wore a gorgeous suede skirt with black pumps that made her as tall as me. I couldn't help but notice hers also had an ankle strap. She wore a beautiful silver necklace with matching earrings and a very expensive diamond tennis bracelet which I was admiring.\n\n\"Naval Academy graduation present from my dad,\" she said as I held her wrist to get a better look.\n\nI hadn't even noticed the bouquet of roses when she came closer and said, \"Hi, Callie. I'm Kay. These are for you.\"\n\nI felt myself tear up as I took them from her. \"Thank you so much. They're beautiful,\" I told her as I went to put them in some water.\n\nKay followed me to the kitchen and said, \"Callie? I knew you were beautiful, but I'm just blown away. You are truly gorgeous.\"\n\nI sat the flowers down and blinked away a tear. I did not want my mascara getting ruined.\n\nI took a step toward her and said, \"Thank you, Kay. This was so nice of you.\" We both reached out at the same time and we hugged for the first time. I loved the scent of her perfume and the feel of her ultra-cute, very expensive top. I'd seen it on line and new that short little sweater was $250. I also knew the suede skirt was top of the line and probably around $300 or so.\n\n\"You have no idea how badly I want to kiss you right now,\" Kay said as we looked into each other's eyes. \n\n\"Oh, I think I have a very good idea because it's all I can do not to ask you to kiss me,\" I told her. \"You are so pretty.\"\n\n\"So you like?\" she said as she let go and spun around.\n\n\"I love!\" I told her sincerely. \"I almost bought that very top. Thank goodness I didn't, huh?\"\n\nKay laughed and said, \"I'm glad you didn't because I wouldn't have been able to see you in this pretty creme-colored cashmere top. It's so soft and it's...very flattering.\"\n\nI offered Kay a drink but she suggested we leave so we wouldn't be late. She had reservations for 7:30 at one of the nicer restaurants in town.\n\nKay helped me with my coat and handed me my purse then opened the door for me. I thanked her, locked the door, then turned around and was stunned when I saw the limo sitting in front of my house. \n\n\"Oh, my goodness. Kay. You didn't?\"\n\n\"Oh, yes I did!\" she said excitedly as she opened my door then slid in next to me.\n\n\"Talk about making a great first impression,\" I said as I slipped my arm inside of hers.\n\nKay took my hand and said, \"I hope this is just the first of many great first impressions, Callie.\"\n\nLipstick of no lipstick, neither of us could stop that first kiss from happening. We were as careful as we could be not to mess up the other's makeup, but we really didn't care. We kissed for several seconds exchanging tongues and moaning softly. \"Wowww,\" I said as she ended the kiss.\n\n\"Wow, indeed,\" Kay said back. \"I just cannot get over how beautiful you are, Callie. The picture you should me was one thing but you are...did I mention you're beautiful?\"\n\n\"Thank you again, Kay, and I want you to know I feel the same way. You are so pretty you take my breath away.\"\n\nWe held hands and talked on the way to the restaurant. I'd seen my own nails many times but seeing them entwined with another woman's was amazing. I loved looking at our four legs in skirts, stockings, and heels while reveling in the scent of our perfumes and the feel of the soft cashmere on my skin. I was afraid I might have an early eruption right there in the back of the limo.\n\nWe arrived at 7:25 and the driver came around and opened our door. \"Ladies,\" he said as he offered Kay his hand. Kay had chosen not to wear a coat but she did have a very pretty cardigan sweater that went with the crew neck she wore. She asked me to help her slip it on before we got out. She stepped out then offered me her hand.\n\n\"You ready?\" she asked as she took my hand and led us inside. I nodded and squeezed her hand in the chilly September night air.\n\nAn attractive guy of about 35 opened the door for us and welcomed us. He directed us to the maitre'd, a woman who looked to be maybe 30. She not only didn't stare, she smiled as she welcomed us both. Kay, who was still holding my hand proudly said, \"Reservations for two under the name of Randall, please.\"\n\n\"Ah, yes. Right this way ladies,\" she said as she showed us to our table. Kay helped me with my coat and my chair. I thanked her and then she seated herself next to me.\n\nThe room was very nicely furnished and the tables were fairly close together but still afforded enough privacy for people to talk with one another without being overheard. \n\n\"Very impressive, Lieutenant!\" I told her.\n\nThat made Kay laugh. \"I honestly forget you were....you know\u2014you. Until you called me 'lieutenant' I'd completely forgotten he exists.\" I saw her face change expression. It was a look of horror. \"Oh, my God! I am so sorry! I did not mean that the way it sounded. Please forgive....\"\n\nI smiled and said, \"No offense taken. I'm actually very flattered.\"\n\nJust then an older gentleman stood next to our table and said, \"Good evening, ladies. My name is Jeffrey and I'll be serving you drinks and dinner tonight. What may I get for you?\"\n\nHe turned to me first and I turned to Kay who, without missing a beat said, \"I'll have a vodka tonic and my beautiful date will have the same.\"\n\nHe nodded and said, \"Very well. I'll return with your drinks shortly.\"\n\n\"Thank you for ordering for me,\" I told her.\n\n\"My pleasure,\" she said. Her smile was killing me. I couldn't get over how pretty she was. Kay was just stunningly beautiful!\n\nWhen our drinks arrived Kay said, \"A toast?\"\n\n\"Definitely,\" I said.\n\n\"To...serendipity?\" she said as she raised her glass.\n\n\"To serendipity,\" I repeated as we each took a first sip.\n\nKay sat her glass down and leaned over to kiss me. \"Do you mind? Is this okay? You'll tell me if I'm moving too fast, right?\"\n\n\"It would be more than okay,\" told her. \"It would be wonderful. And I'm not sure you can move too fast for me.\"\n\nAs we talked over dinner, it seemed like we never took a breath. We talked about growing up, coming to grips with who and what we were, our families, our views on life, love, politics, and even religion.\n\n\"So you were raised Catholic?\" I asked as we nibbled at our entrees.\n\n\"I was. I guess technically I still am although I haven't been to mass since I came out.\"\n\n\"How did your parents react when you told them?\"\n\n\"Surprisingly well. They both go to church every week, but they're really very liberal in their faith. Their main concern was for me, my safety, and my happiness. My mother still holds out hope I'll marry a man one day but that's never gonna....\"\n\nKay stopped in mid-sentence and leaned over to kiss me again. After she did, she said very quietly while looking into my eyes, \"Never say never, right?\" She reached over and took my hand and I held hers back.\n\n\"Callie? Does this feel right to you? You and me? Us, here in this place?\"\n\nI squeezed her hand, smiled and said, \"Kay, nothing has ever felt more right in my entire life. You?\"\n\nShe was staring directly into my eyes and I could feel her other hand on mine. \"I didn't want to say anything the other night when I met Cal, but I don't think I can not say it tonight.\" She kissed me one more time and said, \"I hope you don't think I'm crazy, but I think I may be falling in love with you, Callie.\"\n\n\"I don't think you're crazy because that would mean I'm crazy, too.\"\n\nKay wanted to make out the entire way back to my place and I was more than willing to do so. \"You are so pretty it makes my heart hurt,\" she said after one very long, very passionate kiss.\n\n\"I don't ever want to hurt you or your heart,\" I told her.\n\n\"I know that and when I'm with you, my heart hurts in the best way possible.\" She circled my lips with her finger and said softly, \"You know I'm not going home tonight, right?\" she said before she kissed me again.\n\n\"I hope not,\" I said as I pulled her close and kissed her back. \n\nFor the first time, I felt her hand move down my arm and across my body. It stopped on my tummy then drifted up until it was until my breast. I was so happy when she began pushing up then gently squeezed me. \"I want you so bad,\" she told me.\n\nI whispered back, \"I want you to want me.\" \n\nWe felt the limo come to a stop and the driver getting out. Kay kissed me one more time before we sat up and waited for our door to open.\n\n\"Ladies,\" he said again. Kay thanked him and signed the receipt. I noticed she tipped him a hundred dollars for which he was very appreciative.\n\n\"Sexy and generous. You're a keeper!\" I said as she took my hand again.\n\n\"Let me get that for you, pretty girl,\" she said as she took the key from me. Kay opened the door, let me in, then closed it and locked it before handing the key back to me. \n\n\"Is that the key to your heart by any chance?\" I asked her as I took the key from her and set it in a small bowl on a sideboard near the door.\n\n\"Symbolically speaking, I guess it very well could be,\" she said as she came closer to hold me in her arms. \"I have never met anyone like you in my entire life, Callie. I'm not talking about just your anatomy.\" She smiled playfully when said that then continued with, \"I'm talking about you. All of you. You're the most fascinating human being I've ever met and I want to learn everything there is to know about you.\"\n\nKay kissed me passionately then I told her, \"Dittoes. And Kay? You give me something I haven't felt in such a very long time.\"\n\n\"What might that be, sweetheart?\" she said as she stroked my face with her tiny, soft hand.\n\n\"Hope.\" I knew I didn't need to explain what I meant in detail. Kay was very intuitive and I knew she understood I was talking about finding real love with another genetic woman. She knew I'd given up believing that might ever happen again and now here was this smart, pretty, funny, wonderful girl who wanted me...for me. Were I taking female hormones I would have been so overwhelmed with emotion I'd have broken down and cried. Instead, I felt a familiar stirring between my legs as Kay took my hand and led toward the bedroom.\n\nIt wasn't very romantic, but it was a fact of life. I needed to pee. So did Kay. I let her go first. When she came out I said, \"I'm not sure what you're expecting so do you want me to come out um...unsheathed or um...holding it down tight?\"\n\nKay giggled and said, \"Surprise me. I'm sure I'll be very pleased either way.\"\n\nI took care of business and decided to leave the padded undergarment in the bathroom. I pulled my panties back up over my package and left the pencil skirt laying next to my faux hips. I was still wearing my pretty cashmere sweater, garter belt, stockings, and heels.\n\nKay had taken off her cardigan sweater and was laying on the bed waiting for me. She'd turned out the lights and lit all of the many scented candles I had around the room. She looked positively stunning in the flickering light when I walked in and saw her and I let her know it.\n\n\"Thank you, Callie, but it's you who looks so amazing. You are not only prettier than most of the girls I've dated, you're by far the most feminine and that is such a huge turn on. Why don't you come over here and let me show you how much I appreciate your soft, feminine look?\" She patted the bed next to her and I slid on top of the bed then over next to her.\n\n\"This was my biggest fantasy for such a long time,\" I told her as she brushed the hair away from my face. \"But I not only stopped fantasizing about it, I quit even thinking about it when it seemed impossible I'd ever find an attractive woman who'd want me for who I am.\"\n\nKay was gently brushing my hair and listening to every word. \"It's been my only fantasy since I came out, Callie. But until I met you it never occurred to me a genetic male could be the ideal 'woman' I'd meet and fall in love with. Yet here you are laying beside me. Laying here looking at you and even listening to you speak, I honestly can't tell you're not a genetic woman. I'm not just saying that, honey. You look and sound exactly like a beautiful woman.\"",
        "I smiled and thanked her for saying that then told her, \"And I really do have the one thing a genetic woman doesn't have.\" I reached up and took her hand and slowly guided it to the area between my legs. \"I am so happy you need me to be exactly what I am.\"\n\nWhen Kay's hand touched my growing cock, I heard her inhale sharply. \"Oh, my God. That feels so wonderful, Callie. I've had to settle for strap-on play since the first time I made love with another woman but this...\" she gently stroked me through the lacy black panties...\"This is what I want so very badly.\"\n\nKay pulled me close and kissed me as her hand reached into the waistband of my panties. I lifted up allowing her to slide them down then helped her get them completely off. \n\nNormally, that part of my anatomy is off limits during sex because it makes me feel like a man and when a man is making love to me, I need to feel like a woman. Playing with Mr. Happy ruins that for me. I've only ever let one man touch me there and that was during a foursome when a very cute guy's very attractive wife begged me to let her husband perform oral sex on me. It had been a fantasy of his for a long time and I think she may have wanted to be able to tease and humiliate him about it after that. Regardless, I made an exception to my only real rule.\n\nWith Kay, I had no such inhibitions. I still felt feminine and pretty, and because I knew she wanted and needed me like that, I loved having her touch me the way any woman would during sex.\n\nI undressed Kay as she continued to fondle and kiss me. When she was down to just her own garter belt, stockings, and heels I quit taking things off. She straddled me and lowered her small, perky breasts to my mouth. I hungrily licked her nipples and sucked hard on them alternating from left to right until she was moaning loudly. I also ran my hand down between her legs and softly massaged her clit as I pleasured her with my mouth.\n\n\"Let me turn around, honey,\" she said. Kay flipped herself over being carefully with her spiked heels. Her knees were around my head as she lowered her pussy onto my face. As her warm slit came into contact with my mouth I felt hers take my cock inside it. I could hear her moaning softly as she used her hand to stroke me while her mouth went up and down. \"Oh, my God. I haven't done this in years and I've never, ever enjoyed it before but I am really loving this, baby,\" she said as she came up for air.\n\n\"You taste good, too, sweetie,\" I told her as I ran my tongue from the bottom of her pussy to her clit then went the other way over and over. I brought my left hand into play and as my tongue swirled around her clit, I slid one then two fingers inside her. I felt Kay tense then moan loudly with pleasure.\n\n\"Oh...shit. Oh, Callie. That feels so good!\" she cried. \"Don't stop, baby. Please.\"\n\nI didn't. I managed to get a third finger inside despite the awkward angle then used the index finger of my other hand to diddle her clit. As I did, Kay stopped what she was doing and said, \"Jesus! That feels so fucking good!\"\n\nThis went on for another two or three minutes before Kay had her first orgasm. I felt her entire body tense as she stopped sucking me again. \"Oh...fuck!\" she cried out. \"I'm cumming.\" She shook and trembled then said, \"I need you inside me.\"\n\nShe flipped back around and stayed on top which I liked very much. \"Make love to me,\" I said letting her know I wanted to the submissive one. Kay grabbed a condom from the night stand on slid it on in short order.\n\n\"I will, honey,\" she said. \"But I also plan to fuck you\u2014hard. Do you want that?\"\n\nI moaned and said, \"More than anything. Please fuck me!\"\n\nKay reached down and lined me up with her warm slit then slowly lowered herself all the way down and stopped. \"Oh...God!\" she said. \"Yes! This is what I've wanted for so fucking long. A pretty girl with the perfect pleasure tool. Oh...my...God!\" She ground her pussy hard using me for her pleasure which felt amazingly good to me, too.\n\nKay began to raise and lower herself taking me all the way in and out on each stroke. \"You feel so good inside me, honey,\" she said as she kissed me hard. Kay began increasing the rhythm and hitting herself harder each time she went down. I wasn't sure if she wanted me to push back but the first time I did she screamed, \"YES! Fucking YES!\"\n\nI began hammering her the way I'd done many other women and Kay put her arms around me and held on tight. I pushed and she pushed back. The sounds of lovers fucking filled the room. Kay's face was next to mine. I heard her say, \"Oh, my God, Callie. I love you so much. I love the way you look and I love fucking you.\"\n\nI felt her tense and as she did I said, \"I love you too, Kay. And I love when you fuck me like this so much.\" As she squeezed with her arms as hard as she could I let loose every drop of cum inside me into the condom I was wearing inside her pussy.\n\nKay collapsed on top of me but unlike most men who wanted to just lay there, Kay wanted to kiss me. She started at my forehead then moved down to my nose, mouth, chin, cheeks, and neck.\n\n\"I have never been so happy before, Callie,\" she said as she stopped and looked into my eyes. \"Let's not mess this up because this is as close to heaven as I've ever been. I'm not just saying it when I tell you I love you. Do you know that?\"\n\n\"Yes, I do,\" I replied. \"And I mean it too, Kay. I really do love you.\"\n\nKay rolled off me and onto her back. She lay there for a moment then started kicking and squealing with delight. \"I am SO fucking HAPPY! I'm in love with the most perfect person on earth and I am finally HAPPY!\"\n\nI turned over on my side and said, \"It makes no sense to say this but thank God for serendipity.\" Kay laughed and pulled me close then kissed me hard. \"I want to fuck you again.\"\n\nAs she pushed me back over on my back I felt myself growing hard again. Kay pulled off my messy condom and licked me clean. \"Mmmm. I'm even enjoying that. Wow. So many new, wonderful firsts,\" she said as she took my growing cock back in her mouth.\n\nI was up before her and went into the bathroom to pee. I have a light beard but I could see traces of beard shadow and smiled. I actually hated seeing that because it broke the illusion of being a girl. Normally, I'd have removed my makeup before going to bed but after round two with Kay, I was too tired. I peed then removed every bit of my makeup and got in the shower.\n\nA few minutes later I heard Kay come in and go pee. She opened the shower door and said, \"Mind some company, ponytail guy?\"\n\n\"Not at all,\" I told her as I offered her my hand and helped her in. I pulled her close and kissed her and was please when she responded in kind. \"I have to warn you though, I might be the one fucking you this time.\"\n\n\"Mmmm,\" Kay murmured. \"Is that a promise?\"\n\nI was immediately rock hard and lifted her up and sat her on my raging hard on. She slid down so easily and moaned loudly as she did. \"Oh, my God!\" she said. \"Another first.\"\n\n\"Which one this time?\" I asked as I drilled her hard.\n\n\"I'm being fucked my a man and I'm enjoying it!\"\n\nKay and I spent the rest of the day talking and getting better acquainted. Both of us had so much to learn about the other and so much to offer beyond the obvious physical attractions\u2014plural.\n\nAt one point, the subject of marriage came up again and I shared my Las Vegas wedding fantasy with her. I never had any real intention of marrying a man\u2014any man-ever\u2014but I had fantasized many times about wearing a beautiful white dress with a tiara and going through a non-legally binding ceremony where we exchanged rings and vows.\n\nKay was curled up next to me as I shared it with her and she said again sweetly, \"Never say never, right?\" She kissed then said, \"That sounds a lot like my fantasy except there's no groom.\"\n\n\"Oh, really?\" I said with genuine interest. \n\n\"Really,\" she said. \"It doesn't have to be Las Vegas. It just has to be with the woman I love and want to live with the rest of my life. Everything else in my fantasy is the same as yours except the wedding is legal and real.\" Kay waited for a moment to see if I'd comment. When I didn't she asked me rather coyly, \"Aren't you going to ask me if you count as a real woman to me?\"\n\n\"Uh-uh,\" I replied.\n\n\"Uh-uh? That's all you have to say?\"\n\n\"Uh-huh,\" I said.\n\n\"Uh-huh and uh-uh? Seriously?\"\n\n\"Yes, seriously. I don't have to say anything else or ask any questions.\"\n\nKay sat up and turned around to look at me. \"Oh, really? And why is that?\"\n\nI pulled her back into me and said, \"Because I know that's exactly how you think of me. I'm as much a woman to you as any woman you've ever dated.\"\n\nMy arm was draped around her neck and she was holding my hand. \"That's true,\" she said. \"My head is still spinning from last night and this morning in the shower and from...everything.\"\n\n\"Are you dizzy?\" I teased.\n\n\"Nope. Not at all. Things are spinning but not spinning out of control. It's just that I still can't believe this has happened to me.\" She squeezed my hand and said, \"To us.\"\n\n\"I've never been happier, Kay,\" I told her honestly.\n\n\"Me either,\" she said quietly. \"I just don't want to do anything to mess this up, you know.\"\n\n\"I do,\" I assured her. \"We're just going to have to be completely open and 100% honest with one another about everything. What we want, what we need, what we're feeling, and everything else.\"\n\n\"I couldn't agree more,\" Kay said as she kissed my hand.\n\n\"So can I ask you something?\" she said.\n\n\"Of course. Anything.\"\n\n\"Do you think you and I can be completely monogamous for the rest of our lives?\"\n\n\"Is that what you want?\" I asked rather than answering with a 'yes' or 'no.'\n\n\"I don't know. I mean, you told me you get bored after a while and I'm sure that at some point you'll want to date other men.\" She paused then said, \"Don't you think?\"\n\n\"That seems pretty likely. And it seems pretty likely you'll want to be with other real women. Right?\"\n\nWe sat in silence for a while wrestling with our first major relationship issue; something virtually no other couple at this stage would even think about let alone raise as a potential concern. But Kay was right. I'd told her about the threesomes and couple swaps my ex-wife and I had tried and the double date she and I went on my first time in drag in public as well as the foursome I'd had with my ex-boyfriend Tim and his best friend and his wife.\n\nKay spoke first. \"I know we need to take this a day at a time and see where it goes but do you think it might be possible to love one another for life and still have an arrangement of some kind? Does that even apply here? Can something like apply and a marriage still work?\"\n\n\"My gut reaction is 'yes', it can. I'd say that we already know we aren't traditional people. That's a given. We also know we both like sex with men and women. I offer you what you called the best of both worlds and you are absolutely gorgeous and desirable.\"\n\n\"But...\" Kay said.\n\n\"But...I think you're right that at some point, just this, as great as this is, may not be enough. But as long as both of us loved one another very deeply and as long as we only dated other people with the other's permission then maybe....\"\n\nKay sat up and turned around again. \"Maybe...we could always be together. You know, like you did with your best friend and his wife. If we always shared these things together\u2014openly and honestly\u2014with well, eyes wide open to be cliche\u2014then maybe that would work for us.\"\n\n\"I like the way you think, Lieutenant,\" I said with a smile.\n\n\"And I like that we can talk about anything no matter what, ponytail guy,\" she said as she slid over to kiss me again. \"I really have to go. I have a ton of stuff to do to get ready for work tomorrow and really, really need to get in a good, long run today.\"\n\n\"I completely understand,\" I told her. \n\nWe kissed goodbye and promised to call and text often. Kay hadn't even gotten in her car (which she'd parked in my driveway before the limo showed up) before she texted. \"Had the most wonderful time\u2014EVER! Luv U, PTG!\"\n\nI smiled and understood that was me\u2014Pony Tail Guy.\n\n\"Luv U 2, LT!\" I texted back. Kay sent me a smiley face and three red hearts in reply. I did the same and went to take care of the stuff I'd been neglecting all weekend starting with a load of laundry and dirty dishes in the sink.\n\n*****\n\n______________________________________________________________________\n\nIt was the last week of September and while I knew the Navy was celebrating its birthday in mid-October, I never paid much attention to it. The celebratory balls for officers and enlisted were separate functions but held on the same night on or very close to its birthday on the 13th. The only reason I cared about this year was Kay asked me I'd like to go with her as her date.\n\n\"As Cal or as Callie?\" I asked with genuine interest and a bit of trepidation.\n\n\"As Callie, of course,\" she said in a very sunny but serious way.\n\n\"I know you're out of the closet, but I've never told anyone I work with that I have an alter ego.\" I waited before adding, \"And I'm not sure I want that to change.\"\n\n\"No problem,\" she said cheerfully. \"There's a ball here on this base and another in Washington DC. I'm assigned to the Washington Navy District so we can attend that one. While I can't guarantee no one you've ever met will be there, it seems very unlikely.\" She put her arms around me and said, \"Besides, I honestly don't think anyone would recognize you even if they saw you.\"\n\n\"I'm not really in the know about these things, but doesn't the word 'ball' imply formality as in me needing a formal to wear?\"\n\nKay smiled and said, \"Uh-huh. It does. And you would look so, so pretty in a beautiful formal and I really, really want you to go and please don't make me beg because I will but I shouldn't have to because you love me and want me to be happy and....\"\n\n\"Okay. Okay. I'll go,\" I said.\n\n\"Really?\" Kay said excitedly. \"You don't have to, of course. And I don't want you to be uncomfortable or worried. I just really, really want to show you off as my new girlfriend. So do you want to go or are you just being nice?\"\n\n\"Both,\" I told her. \"I am being nice, but I would enjoy going with you. We need to do other things than just go to dinner or a movie and this sounds like it would be really fun. So yes, I'll be your date.\"\n\n\"Oh, thank you, thank you, thank you!\" she squealed. For a very intelligent, very sophisticated graduate of the United States Naval Academy, Kay Randall was, after all, first and foremost a girl. Okay, a woman but she had a very playful girlish side to her which I dearly loved and she was confident enough in our relationship to show it to me and that meant a lot.\n\n\"I'm assuming you'll be wearing your formal dress uniform, right?\"\n\n\"You assume correctly, PTG,\" she said. She'd started using the abbreviation since the first time she used it in a text. \"I'll be wearing my Dinner Dress Blues which is indeed dark blue so keep that in mind when you go shopping for your formal.\"\n\n\"Would you like to go with me?\" I asked her.\n\nKay threw her arms around me and jumped up on me. I caught her just before she knocked me off balance. \"Can I take that as a 'yes'?\" I said into her chest as she crushed me in her hug.\n\n\"Yes you can! I didn't even want to ask because I didn't think you'd want me going shopping with you, but I would love to go with you! Are you sure you don't mind?\"\n\n\"I'm positive,\" I told her. \"I want you to love what I wear as much as I do. Besides, the first real test of any relationship is finding a dress for your man that he loves as much as you do, right?\"\n\nKay slid down and said, \"You nut! I love you so much. Did you know that?\" We kissed for quite a while before agreeing when we'd go looking for my dress.\n\n\"Can I pick you up?\" she asked. \"Oh, before you answer, are you going shopping as Cal or Callie? It doesn't matter to me. I just thought I'd ask.\"\n\n\"I usually only manage to dress up once a week although I'd prefer twice so since we're going tomorrow night which is Wednesday, I can go as Callie. And yes, you can definitely pick me up. Then you can take Callie somewhere else this weekend, too. Sound good?\"\n\n\"Sounds perfect!\" she said. \"I am so excited! Oh, wait! One more question, then. What are you going to wear? I don't want to be over or under dressed.\"\n\n\"I'm not sure yet, but it'll definitely be something easy to get in and out of without worrying about getting makeup all over it or what I'll be trying on. Maybe a blouse and skirt with flats?\"\n\n\"But you'll need heels for the gown, won't you?\"\n\nI smiled and realized that for all my experience with crossdressing I still didn't always think like a girl. \"Good point,\" I admitted. \"Then a nice blouse with a skirt that's easy to get out of and some heels.\"\n\nKay smiled wickedly and said, \"I have plans to get you out of whatever you wear later that night so it better be easy to get off you.\"\n\nI really was falling in love with this beautiful, bi-sexual Navy officer who seemed to really adore me, too. Maybe miracles did happen after all.\n\nI'd been looking for an opportunity to wear this really cute white ruffle-neck fitted blouse I'd bought over the summer, but my obsession with sweaters kept from ever wearing it. This was the perfect time because it would be very messy pulling a sweater on and off in a changing room. This blouse only had five buttons and was open from the ruffled collar to the middle of where my bra would be. It was open wide at the top then narrowed to the first button. It had 3/4-length sleeves and a very tight, form-fitted waist that would look perfect with a pair of black pants, something else I rarely ever wore. It didn't tuck in making it even easier to take on and off. I wore a pair of black flats from Nine West to complete the look.\n\nI texted my change of plans to Kay who thanked me and told me she'd wear pants, too. Oh, and a cute little sweater, she added. She loved to tease me with the things she wore and I loved her doing it.\n\nI did my nails myself and wore a pair of gold hoop earrings and a thin gold chain necklace. It was chilly so I had my long black coat ready along with a black bag when Kay rang the doorbell.\n\nTrue to her word, Kay had on a very cute crop sweater with a cable knit. I don't normally like the cable-knit look, but this was really cute on her. It came just to the top of her high-waisted black pants and I was very envious of how petite she was! \n\nWe kissed one another hello as though we hadn't seen each other in days. We held one another for quite a while just drinking the other person in. \"I've missed you so much,\" I told her.\n\n\"You, too. I can't even concentrate at work because you're in every thought,\" she confessed.\n\n\"Is that a problem?\" I kidded.\n\n\"Yes, but it's the nicest problem I've ever had. I've never felt like this about anyone. Ever.\"\n\nShe stepped back and said, \"You always look so classy. I love the blouse, by the way. Can I wear it sometime?\"\n\nI laughed. \"Honey, you're a size 2. I'm an 8. I don't think you want to swim in your clothes.\"\n\n\"True. But I do want to drink you up. And...eat you up and....\"\n\nWe went to the Tyson's II Mall with its many upscale stores. I was thrilled when Kay opened the door for me then took my hand as we walked in.\n\nWe stopped into Saks first and immediately, one of the regular girls who knew me approached us and said, \"Hi, Callie! Haven't seen you in here in a while.\"\n\n\"I was in recently, but the girl who helped me said you were off that day. Oh, and this is my beautiful girlfriend, Kay.\" \n\n\"She is beautiful. Maybe even more so than you, Callie, although it's a close call.\"\n\nKay came to my defense and said, \"She is definitely the prettier girl ,but thank you for the compliment.\"\n\nThe store clerk asked, \"So are we looking for Kay or for Callie or both today?\"",
        "I loved when Kay took charge. She said, \"I'm taking Callie to the Navy Ball on the 13th and we need a formal gown for her. Something elegant, graceful, and as gorgeous as she is.\"\n\n\"That's a tall order even for Saks, but I think we might have something that will fill the bill. Let me show you.\"\n\nShe led us to an area where several designer labels were on display. I've said money isn't normally an object but when I see a price tag of $3,000, that's a bridge too far. \n\n\"It's beautiful,\" I told her but can we maybe stay under $500?\"\n\n\"Hmmm. Let's take a look over here.\" She showed us several gowns and then I saw it! \n\nIt was an open-back, off the shoulder long prom dress by La Femme. It was black and had a two-inch wrap around the upper arm and another two-inch wrap on the shoulder. It was only $378, but my heart sank when I noticed it didn't have bra cups. I could go braless, but only if my breast forms didn't show even the tiniest little bit . Unfortunately, this one would expose them on both the sides and the top.\n\n\"No, this one won't work. I love it and the price is right but I have um...girl problems with it.\"\n\nShe didn't bat an eye or ask what I meant. There was one more rack of sale dresses and the last one I saw was even prettier than the one I couldn't wear. I flipped over the price tag and saw it was just $398. It was another long prom dress. This one was made a JVN by Jovani. It had an illusion neckline with gold details, an open back, and the bra cups I needed. The neckline was a see-through black chiffon that provided the perfect background for me to wear braless where nothing would show. It was 64\" long and perfect for a model my height wearing 6\" heels. I'd only worn heels that high once before in public and there was no dancing involved. My feet were going to kill me, but I HAD to have this dress. All I'd need would be a wrap, a pair of long, dangling gold earrings and a clutch.\n\n\"I love it, honey!\" Kay said as we held it up. \"Please try it on for me, okay?\n\nOur girl carried it to the changing room and I got undressed and slipped into it. I asked Kay to come zip me up. Once she had, we both looked at it from every possible angle. I asked her, \"What do you think, Kay?\"\n\n\"I LOVE it, Callie. Do you like it?\"\n\n\"I do and I want it. It's perfect.\"\n\nOur girl did a great job of packaging it, but we both carried it out to her car to make sure nothing happened to it.\n\nWe spent the rest of the evening watching an old movie, sipping wine, and making love.\n\nKay spent the next ten days on temporary duty or TAD (TDY in the Army and Air Force) and got back the day of the ball. We called and texted as often as we could, but we were very excited to see each other again. Because she was going in uniform, she didn't need to do anything special in terms of hair or makeup. I, on the other hand, had another half day of preparation spent getting a full-body wax then having my hair, nails, and makeup done. I was so glad Lucretia was there again. She was not only really good at what she did, she was just a riot to talk to!\n\nI got home with an hour left, and all I needed to do was get undressed and into my gown so I carefully took everything off I'd worn to the salon then started by gluing my breast forms in place. The good news was I didn't need to do any shading to create cleavage, something I'd gotten very good at over the years. Once they were dry and in place, I went pee for the last time for many hours then pulled on my CAD-designed padded booty and a pair of barely black pantyhose. I don't like pantyhose but for an occasion like this, a garter belt just doesn't work well. \n\nI then tied a fishhook to the zipper in back so I could zip up my own dress, stepped into it and worked it over my faux boobs. I pulled the fishing line straight up behind me and the zipper worked as advertised. A quick shake helped the fishhook fall out and I turned to look in the mirror to check it out. The fit was perfect!\n\nI had a pair of very expensive earrings Tim had given me for Christmas and couldn't wait to wear them with this dress. They hung about three inches below my ear and were a kind of modified teardrop shape. I felt that old familiar feeling come on that happens every time I'm fully dressed up in women's clothes. Then I remembered the shoes!\n\nI lifted up the hem and sat on the bed as I stepped into the 6\" heels. I'd forgotten how treacherous they are. I got them buckled up then stood and realized I was now well over six feet tall. \"Oh, my God!\" I thought. \"This isn't good.\"\n\nI pulled them off and chose a pair with 3 1/2\" heels which felt SO much better but now my dress was dragging on the floor. \"Fuck!\" I said in my male voice. \"Fuck, fuck, fuck!\"\n\nI'd have to wear the 6\" heels or risk tripping on the material that would puddle on the floor. I knew Kay couldn't wear anything taller than maybe 3\" heels in uniform so I was definitely going to tower over her. \n\nI took the shorter heels off and sat on the couch waiting for Kay. Every minute not spent in the monster heels was one minute less of torture. Yes, I know. Six-inch heels sound glamorous, but let me assure you they are not! They are waterboarding for the feet!\n\nI'd given Kay a key to my apartment before she left town but I had the door unlocked when she arrived. I heard the door open followed by her saying, \"Ahoy, Matey! Lieutenant Randall arriving!\" \n\nKay came in wearing her dress uniform. Now Kay is simply gorgeous, but I don't find women (or men) in uniform attractive the way many women do. But there was no way I was going to tell her that especially when she was so happy and bubbling over with enthusiasm.\n\nKay came over and offered me her hand to help me stand up and said, \"You look so freaking gorgeous I want to take you to bed and fuck you right now but I can't even kiss you or I'll mess up your lipstick. Wow! You look beautiful, Callie!\"\n\n\"Thank you\u2014Lieutenant. You look very dashing in your uniform!\" I lied. Well, I didn't lie. She probably did look dashing to some people. I just wasn't one of them. I'd enlisted in the Marine Corps to escape my small town life and avoid working for Weyerhaeuser like my dad and grandfather had and to get the GI Bill for college. I didn't dislike the military by any means, I just wasn't impressed by all this stuff.\n\n\"You ready?\" she asked excitedly.\n\nI got back into the stilts and stood back up. I was a good four inches taller than Kay and when she stood next to me it was very awkward. I said, \"I feel like a man in a dress for the first time in my life.\"\n\nKay grabbed my wrap and put it around my shoulders and handed me my clutch then said, \"Callie, you are a man in a dress. But trust me, you are unbelievably passable and while your height may be a 'tell' I can assure you there will be women there as tall or taller than you. I see it every year. There won't be many, but there will be a few. And since I love you for who you are, who gives a shit what anyone else thinks, right?\"\n\nI really did love Kay. She was so comfortable with herself and who she was. I was still technically in the closet although crossdressers don't typically 'come out.' In fact, most crossdressers are 100% heterosexual although some percentage of us are like me and prefer men. Or bi-sexual women or.... I was feeling confused and out of sorts so I decided to stop thinking and analyzing and just enjoy being out with my new love.\n\nThe ball was being held at one of the nicest, five-star hotels in Washington DC. It had a huge ballroom which would double as a dining and dancing area. Having been an enlisted guy, I'd never been to a ball of any kind even though the Marine Corps makes a very big deal out of its ball every November 10th. They weren't mandatory for anyone below the rank of Staff Sergeant and I always chose not to go. \n\nI was very impressed with how well the room had been decorated. It had an obvious Navy theme to it but it was very tastefully done. \n\n\"Do you want a drink, honey?\" Kay asked. \n\n\"Yes, please,\" I told her.\n\nShe brought back to vodka tonics. \"In case you're wondering, I'm not not holding your hand because I don't want to. It's just not allowed in uniform.\"\n\nKay knew I'd served four years on active duty but she also knew I didn't know much about the Navy or its customs. I assured her I understood.\n\n\"But I will be able to dance with you later on, though,\" she said as we toasted to having a wonderful time.\n\nWe hadn't been there long when a very tall couple came in. The man was probably 6'4\" or so and his wife or date was nearly as tall in her heels. \"See?\" Kay said as she pointed them out. \"I told you so, right?\"\n\nWe made small talk then Kay noticed someone she knew and said, \"That's my old CO (commanding officer.) I've gotta say hello. He was a really great skipper. Do you want to meet him?\"\n\n\"Sure,\" I told her. \n\nShe took a few steps and called out while waving, \"Captain Woods! Sir?\"\n\nHe turned and saw her then smiled and headed her way with his wife in tow. \"Kay Randall! How are you, Lieutenant? Last time I saw you, you were a j.g. Congratulations!\" (Lieutenant, junior grade\u2014just below lieutenant.)\n\n\"Yes, sir, and you were a commander. Congratulations to you, too.\"\n\n\"Sir, this is my girlfriend, Callie Petersen. Callie, this Captain Woods.\"\n\nI was about an inch taller than him in my elevator heels and a good four inches taller than his wife. I've never been 'read' in public and I had no reason to think he'd 'made' me. He looked me in the eyes, smiled, and said, \"Nice to meet you, Callie. Kay's a very lucky girl. And one of the best officers I ever had work for me.\"\n\nHe then introduced his wife, Marilyn, who said, \"I love that dress, Callie. Where did you find it.\"\n\n\"Saks at Tysons II,\" I told her.\n\n\"Well, it's beautiful and so are you, dear. You two have a wonderful time tonight!\"\n\n\"That wasn't so bad, was it?\" Kay said.\n\n\"Not at all. I hope you don't think I expected it to be. Bad, that is. I'm really glad you asked me and I'm happy to be anywhere with you. I want to share every part of your life, Kay.\"\n\nKay turned to me and said, \"I love you so much. I feel like such a...girl...whenever I'm with you. I'd forgotten how nice that feels.\" She got close to my ear and whispered, \"And I can't wait to see how nice you really feel later tonight. I want to kiss you so bad it's killing me.\"\n\n\"Later, okay. I promise. We won't just kiss, either. I can also promise you that!\"\n\n\"Ohhh! You are such a bad girl and I like bad girls just so you know,\" she said. I felt her hand run up and down my arm just one time. The feel of her touch electrified me but it was hands off for now.\n\nWe were getting ready to be seated for dinner when we both heard, \"Hey, Randall! I didn't think you'd be here at this ball.\"\n\nWe turned around and saw Jared or LT Keating as his name tag said.\n\nI came very close to saying, \"Nice to see you again\" but managed not to speak.\n\n\"Yeah, I just wanted to show my new girlfriend the city. Jared, this is my date, Callie.\"\n\nHe extended his hand and I offered mine. He shook it without squeezing it and said, \"You look familiar. Have we met?\"\n\nKay answered for me. \"Remember the marathon last month? Well, it turns out that engineer guy has a fraternal twin sister. We talked for a while and I told him I'm gay and he told me his sister was, too. He went to show me a picture and I thought she was gonna be you know, um...a frumpy spinster kind of woman but when I saw it I said, 'Hot damn and hell yeah I'd go out with her!' He gave me her number and we've been dating for several weeks now.\n\n\"Oh, okay! I totally see it now. I just couldn't place it. She's definitely not frumpy. I'd say 'hot' but I don't feel like gettin' kicked in the balls so I'll just say, 'It's really nice to meet you, Callie.' And I hope you know you've got just about the most special girl in the world here tonight. Randall and I go back to our plebe year at the Naval Academy and she's good to go.\"\n\nI smiled and told him it was a pleasure meeting him, too. When he went to find his assigned table, I breathed a sigh of relief.\n\n\"I heard that!\" Kay said. \n\n\"Was it that obvious?\" I said quietly.\n\n\"Yep. But I was a little concerned, too. He bought the story. I can tell. Trust me. I know when he's lying and he had no idea.\"\n\nWe had a very lovely dinner where we made small talk with the other couples assigned to our table. I had no idea whether or not any other gay officers were there with same-sex dates until the dancing began. I saw one male couple dancing as well as one other female couple. Things had come a very long way since I was on active duty and homosexuality was grounds for automatic discharge. No one cared a wit that Kay and I were together as a couple or that we danced nearly every slow dance together. Kay even kissed me at the end of each slow song and again, no one looked or commented. It was a very pleasant evening in a very welcoming atmosphere.\n\nAt about 9:45pm Kay said she wanted to get pictures taken before the photographer left at 10. There was no line and we were able to get several photos taken in three different poses. Kay paid for them and we were told they'd be ready in about a week.\n\n\"You ready to go home yet, baby?\" she asked at about 12:30am.\n\n\"Sure. Whenever you are,\" I told her. I took both of her hands in mine and said, \"Kay? I had a really, really nice time tonight. I mean it. This was very special. Thank you for asking me to go with you.\"\n\nThere was a look in her eyes I hadn't seen before. \"I was gonna wait until we got home but I want to give you something, okay?\"\n\nI hadn't noticed this very tiny bulge in one of her pockets before but as she reached into it it was obvious there was something in it.\n\n\"Sit down for me okay, sweetie?\" she said. \n\nI sat and Kay produced a small blue box. My heart skipped a beat thinking it might be an engagement ring. I was both excited and scared to death thinking she might be asking me to marry her but I managed not to show it.\n\nShe opened the box and inside was a ring but it wasn't a diamond. She took it out and said, \"Callie? You make me happier than I've ever been. I was hanging out at gay bars looking for love in all the wrong places. Then you came into my life and turned it upside down and inside out in the best way imaginable. I love you, Callie. This is a friendship ring but I want it to be so much more than just friendship. I guess maybe I'm really old-fashioned in this respect but it's meant as a promise ring. A promise that I love you. A promise that I'll love no one else as long as you love me, and a promise that I want even more at some point down the road. So...will you wear it for me, my love?\"\n\nI put my hands over my mouth as I felt myself tearing up. I was caught so off guard and the surprise was so unexpected and so pleasant I thought I might cry. I nodded and tried to speak. I tried to say, \"Yes!\" but I'm not sure how it came out.\n\n\"You can wear it on either hand. Which would you like?\" she asked.\n\n\"The one wear an engagement ring might go one day,\" I said in a very choky voice.\n\nKay slipped it on my left ring finger then kissed me on the lips with people all around. \"I love you, Callie,\" she said softly.\n\nI held up my hand and looked at the beautiful gold ring with my birthstone in it. \"I love you, too, honey,\" I told her. \"It's so beautiful. Thank you.\"\n\n\"Do you like it?\" Kay asked as though I might not.\n\nI hugged her tight and said, \"I love it. I love it so much. This was so very special. Thank you.\"\n\n\"You're welcome. I bought it before I went TAD. I thought about giving it to you before the ball but this just seemed like the right time.\n\nI held it out again and admired it. \"It's perfect. Just like you, my beautiful girl,\" I said.\n\nAs Kay let me inside the house, she went back to grab something from the car.\n\nI waited for her and when she came in, she led me straight to the bedroom. She set the wrapped box with the beautiful red ribbon on the bed and said, \"Open it.\"\n\n\"Another gift? Kay, you shouldn't have,\" said as I lifted the lid and pulled back the crinkly white paper. Inside were two rib-knit ballerina sweaters. One was pink and the other a light blue. Kay knew about my sweater fetish, of course, but I'd also told her how much I loved little ballerina sweaters like this once.\n\n\"Pink for my sweet baby girl and blue for me.\"\n\nI sat on the bed and teared up again. \"Hey, you okay?\" she said as she sat next to me.\n\nI nodded. \"Then why are you crying, sweetheart?\"\n\nI managed to get control of myself and said, \"Because no one and I mean no one, has ever gotten me before.\" I tried to say something else, but I couldn't. I sat there and cried like...like a girl.\n\nKay put her arm around me and said, \"I get you. And I know what matters to you because I do get you.\" She turned my face toward her and wiped my tears. \"I love you for who you are and because of who you are. Never forget that, okay?\"\n\nI put my head on her shoulder and sobbed. I finally stopped and took several deep breaths. \"I've dreamed about a relationship like this for years. I fantasized about a woman like you. I just never really thought....\"\n\n\"Me, either,\" Kay said as she held me. \"I knew I wanted the best of both worlds but I honestly didn't know what that meant until you came into my life. Now I have it.\"\n\nShe lifted up my chin and kissed me and said, \"Now I have...you.\" She kissed me again then said, \"Go take care of your makeup, honey, and I'll get ready for bed, okay?\"\n\n\"Okay,\" I said quietly. \n\n\"What is it, honey?\" she asked with real concern.\n\n\"What did I ever do to deserve you? How did I get so lucky to find you?\" I said as I began crying again.\n\n\"Deserve me? Callie, I'm the lucky one. And we found each other through...serendipity.\"\n\nThat lightened the mood and made me smile. \"I'll be right back, okay?\"\n\n\"I'm counting on it,\" Kay said with a smile.\n\nA few minutes later I was out of my gown and heels and slipped into the little pink sweater. I told Kay not to peek as I went to the dresser and slipped on a pink strapless bra to avoid having my hideous-looking breast forms in her beautiful face.\n\n\"Okay,\" I said once it was in place.\n\n\"Oh, my God! Get your pretty ass to bed right fucking now, young lady!\" she said as she grabbed my hand and pulled me toward her.\n\nKay looked so beautiful in her own tiny ballerina sweater and nothing else. She pushed me onto the bed and got on top of me and began kissing me hungrily. \"I've wanted you so bad for the last two weeks I thought I'd go crazy!\"\n\nAfter going down on me and offering her pussy to my mouth she turned back around and said, \"I've been on the pill since our first date. Do you want to cum inside me?\"\n\nI moaned with pleasure and said, \"God yes!\"\n\nKay slid down onto my very hard cock and moaned. She sat up and began bouncing. Her perky little tits bounced right along with her. I was overwhelmed again with her beauty and with her love and told her so. \"You are so amazingly beautiful, Kay. I love looking at you and especially like this.\"\n\nI could tell she was getting close as she began closing her eyes and biting her tongue. \"I love looking at you, too, Callie. You're so...fucking gorgeous.\" Her voice rose on the last word. She pushed down hard and took me all the way to the hilt. As she began to cum, she used her hand and fingers to intensify the orgasm. \"Oh...fuck!\" she whimpered. \"Fuck me! Cum in my fucking pussy! Oh, God I love you!\"\n\nI couldn't hold off another second. I felt hot cum shooting from my body and into my lover's pussy. After a half dozen very long, very hard pumps, Kay and I were both finished and she collapsed on top of me with me still inside her.\n\nShe was purring and murmuring softly. \"Oh, Jesus,\" she said. \"Jesus Christ almighty that was amazing!\"\n\nI held her close and said, \"Thank you again for the most special night of my life, sweetheart.\"",
        "She held me back and said, \"Oh, you ain't seen nothing yet, girl. This is just the beginning.\"\n\n\"Is that a promise?\" I asked as I lifted up my left hand to look at the promise ring again.\n\n\"You better believe it,\" she said as she kissed me one more time."
    ],
    "authorname": "komrad1156",
    "tags": [
        "crossdressing",
        "bi-sexuality"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/serendipity-19"
}