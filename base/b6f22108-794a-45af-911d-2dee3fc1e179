{
    "title": "Sosoni Ch. 04",
    "pages": [
        "The state police inquest took more than two weeks, the main reason being Sosoni's less than basic vocabulary. Experts and professors from Boise State descended on McCall to examine her. Nothing I could do about it.\n\nI did not, in fact, have cameras all over my house as I suggested to Headley, but every bit of evidence pointed to our innocence. My three homicides were declared justifiable. Sosoni's murder of Headley was likewise cleared.\n\nTwo of the three men I had killed had bitter-looking relatives, and I grew concerned. The investigation, however, revealed a meth ring involving Headley, the three others, and several of those relatives. The press rolled with it, and the heat was off me.\n\nThrough it all, I never got to see Sosoni, except at the hearing. Even when it ended, and I was able to return home, Sosoni wasn't there; the lab coat posse took her to Boise.\n\nCharles called.\n\nHe explained to me that his friend at the Department of Health and Welfare allowed Deborah to accompany Sosoni, and she would be able to remain with her the entire time.\n\nThe weeks without Sosoni rolled on and on, but Deborah called from Boise with updates and news.\n\n\"She's asking for you...\"\n\n\"The Shoshone tribe in Fort Caldwell is sending a representative to confirm her identity...\"\n\n\"She's been identified by the tribe as the likely daughter of Okoweney and Tonjadika...\"\n\n\"A team was dispatched to the area in and around the cave to look for evidence and possible remains...\"\n\n\"She keeps asking for you...\"\n\n\"The only remaining blood relatives are two cousins and a great uncle; two of them are coming to here for DNA testing...\"\n\n\"They found Sosoni's cave...\"\n\n\"DNA confirmed Sosoni's lineage...\" \n\n\"The remains of her older brother were discovered. DNA tests confirmed it. The coroner determined his death by pneumonia...\"\n\n\"She wants to see you, but they say you may not come...\"\n\n\"The remains of a man and a woman were discovered, ages estimated to be 27 and 24. DNA tests confirmed them as Sosoni's parents. The coroner confirmed both deaths by blunt force trauma\u2014both likely mauled to death by a bear...\"\n\n\"Sosoni had been orphaned in the wild sometime between the ages 6 and 7...\"\n\n\"Now, they're only letting me see her for about ten minutes each day...\n\n\"I think Sosoni is confused and angry...\"\n\n\"They tell me the cousins and great uncle have indicated that she would be welcome to return to the reservation with them...\"\n\n\"I hear the state has officially named her Sosoni Elo Tonjadika\u2014Sosoni, daughter of Tonjadika. They're creating a birth certificate and putting in paperwork for a social security number...\"\n\n\"I just don't know what's going on. It's like they're hiding something...\"\n\n\"Rumor is they're letting her go tomorrow morning. Charles's friend thinks we can get you a visit before that happens...\"\n\nI left five minutes later, picking up Charles on the way through McCall.\n\nWe checked in at the same downtown hotel where Deborah stayed. She met us in the lobby, and we went up to her room.\n\n\"Is she okay?\" I asked.\n\nDeborah said, \"I just don't know anymore. I know it's a lot for her to take in, and it's difficult to know how much she understands. Some, I'm sure.\"\n\n\"I can't imagine,\" Charles offered.\n\nI nodded. \"So, they're releasing her?\"\n\n\"Yes,\" Deborah sighed.\n\nI said, \"Good! It's about damn time.\"\n\nDeborah called my name. She said, \"Wait.\" She took a deep breath, and she went on. \"They're releasing her to the Fort Caldwell Shoshone.\"\n\n\"What?\"\n\nShe nodded, wiping her nose. \n\n\"She...she doesn't get to choose?\" I asked, stunned.\n\nShe shook her head. \"I'm sorry. I tried. I really did. All that we could get for you was a brief visit before she goes to Fort Caldwell.\"\n\n\"Fuck!\" I hollered. Then, seeing Deborah's sadness, I said, \"Thank you, Deborah. I know you did your best.\" Then, I asked, \"Is that what Sosoni wants? To go?\"\n\n\"She's so confused right now. I don't know that she's in any frame of mind to tell them what she wants.\"\n\nIt was two in the morning. I thanked them both and went to my room.\n\n***\n\nAt 7:55 the next morning, the three of us were stopped outside the two-story office building where they had been keeping, interrogating, and examining Sosoni.\n\nInside, a man in a suit told us that Sosoni did not wish to see me.\n\nI couldn't move. \n\nThey had turned her against me, I thought. Or, even worse, she saw me clearly now: I was the lascivious bastard who took advantage of her innocence.\n\nNo, I refused to believe it.\n\nCharles said, \"That's impossible.\" \n\nDeborah added, \"I don't believe that for a second.\" \n\n\"It's what she and the family want,\" the suit declared.\n\n\"Where is she?\" I asked. Before the man could give an answer, I turned to Deborah. \"Where do they keep her in there?\"\n\nShe glanced from the man to me, and said, \"Second floor, room 202.\"\n\nI ran past the man.\n\nThrough the doors, another suit stepped toward me. I saw the entrance to the staircase on my right and dashed for it. \n\nBounding up the stairs, I blasted the door open. Two security guards stopped me. \n\n\"Let me through, fellas. Please! Let me see her!\"\n\nThey began to drag me back toward the stairs.\n\n\"Sosoni!\" I screamed. \"Sosoni, I'm here!\"\n\nThe guards' grips were like iron vices, and there was no breaking free. \n\n\"Sosoni! Sosoni!!\"\n\nA door opened. I heard people arguing and running footsteps in the hall. \n\nA woman in a lab coat appeared.\n\n\"Where is she?\" I demanded.\n\nAnother woman in a lab coat came up behind the first.\n\n\"They're gone already\u2014left ten minutes ago,\" one said.\n\nThe other said, \"Reservation police have orders to turn you away.\"\n\n***\n\nSomething inside me broke\u2014something in my brain. What I write going forward is a collection of memories. Some belong to Charles and Deborah. Most of them are mine, but as I say, something in my brain broke the moment I lost Sosoni to her relatives.\n\nI loved her. I killed\u2014without hesitation\u2014for her. I had set her free.\n\nAnd she had chosen, well, not me.\n\nLosing her was like losing a wife and a child together. A wife is a partner and companion in life. Sosoni was like that for me in the short time we were together. She always wanted to be by my side. \n\nBut, she was like a child, too. I devoted time and energy to her protection, health, and education. I made enormous sacrifices for her well-being, as every parent does for his or her child. So, to lose Sosoni hurt all the more because those sacrifices ultimately added up to nothing. Zero.\n\nMy mind concluded in those crazy days that I would die of a heart attack and alone.\n\nI didn't have to be alone, of course. A rich fucker like me? Young as I was? Of course I could spend some time down in Boise and bring back a wife.\n\nBut, not one that compared in any way to Sosoni.\n\nI would grow resentful.\n\nIt was Sosoni or nothing. So, it was nothing.\n\nYeah. I broke. \n\n***\n\nI remember drinking and puking. I remember kicking Charles and Deborah out of my home so that I could drink and puke without being judged.\n\nA week after I'd lost her, Deborah and Charles came up to see me at home. I was well on my way to another blotto day. The house was trashed.\n\nSosoni had gone missing from the reservation, they explained. Apparently, her family had been slow to report it to reservation authorities, searching on their own for a few days. \n\nShe had left the very night she arrived\u2014a Tuesday. The State Police had only joined the search the following Monday.\n\nMy broken mind saw it clearly. \"She's coming for me,\" I said, and I started packing.\n\nCharles and Deborah tried to stop me. They tried to talk sense to me, but I was single-minded, and that single mind was no longer working properly.\n\nI left for the cave a few minutes later on the ATV\u2014I had repaired the tires during those weeks when Sosoni had been in Boise.\n\nIt was insane, and in my heart, I knew it.\n\nFort Caldwell was on the other side of hundreds of miles of mountains and forests from me. It would take a person weeks to travel the distance. To actually find the pond and the cave\u2014without a map or compass or GPS\u2014would be nothing less than miraculous. \n\nBut, I was a believer in miracles at that point. I had found Sosoni once. She would find me this time.\n\nShe did not.\n\nAugust became September. September slipped away into October.\n\nI went home once a week to resupply. Charles left messages and texts. They called off the search. No one said the words, but the signals were obvious: Sosoni was presumed dead.\n\nNights grew frigid at the cave.\n\nNovember came and went.\n\nMy ex-wife left messages, begging for me to take care of myself. Charles must have gotten desperate and told her.\n\nDecember elapsed.\n\nI quit listening to the fucking messages. I left my cell phone at home.\n\nThe ATV broke down on the way back out in January. I walked the rest of the way, feeling my pistol weigh heavily on my right leg.\n\nI'm not going back, I decided.\n\nI ran out of food and water a week later. The pond froze over. My clothes were rags, my beard a gnarled bird's nest. I fell asleep next to a tiny fire, cradling the pistol.\n\nI felt happy when I awakened.\n\nThis was it\u2014the day of days.\n\nI slipped from under the blanket, grabbed the pistol and walked buck naked out of the cave to piss. Walking back, I realized I wanted to see the spot I first saw her, one last time before I climbed into the cave and blew my brains out.\n\nI shivered, but I didn't feel the cold. I stood next to the tree, smiling at the memory of cum-fed fish. I remembered how athletic she had been, leaping into the brush after seeing me masturbate. It was right there. My shaking finger pointed to the spot.\n\nAnd the bear!\n\nI staggered over to the spot, my entire body trembling. \n\nI'm not cold, I thought.\n\nSnow covered the ground, but I knew it was here. The bones were right here, except the skull. The skull was home\u2014the skull of that fucking thing that nearly killed both of us. Hell, it may have even killed her parents.\n\nI don't think I can make it back to the cave, I thought. This is the spot. It's a good enough one. \n\nI drew the pistol up. I tried to charge it, but my fingers weren't working. I used the pad of my thumb and, after four or five tries, I finally got a round chambered. I used my teeth and tongue to flip the safety.\n\nMy hand could barely hold it. \n\nCan I even do this?\n\nI raised the gun to my head and concentrated on squeezing the trigger.\n\nSqueeze it. Just squeeze. Come on.\n\nMy finger moved, I thought.\n\nNow.\n\nPull.\n\nPull!\n\nI screamed, \"Pull!\" \n\nThen, I lost everything.\n\n***\n\nI awoke in the cave, warm.\n\nI opened my eyes. Looking to the side, I saw a smart little fire in the place where I had lit the first one, long ago.\n\nCouldn't be.\n\nI had let the fire die out in the night.\n\nThe air was still. I felt the blanket tucked underneath my body on both sides. I heard the rubbery crunch of footsteps on snow.\n\nA shadow encompassed the cave.\n\nI looked over.\n\nSome dark figure crawled inside carrying wood.\n\nFuck, she looked like Sosoni.\n\nBut, her hair was way too short. She was decked out in cold weather gear.\n\nShe fed the fire with a few small logs, and then she looked at me. She said my name.\n\nShe sounded like Sosoni, too.\n\n\"Am I alive?\" I asked.\n\n\"Ah-life,\" her voice responded.\n\n\"Am I dead?\"\n\n\"Det?\" the voice answered. \"No det.\"\n\nHaving fed the fire, the woman undressed and slid under the blanket, and I felt her warm body against mine. This is the afterlife, I thought. She whispered my name, and I fell asleep.\n\n***\n\nI awakened.\n\nThe woman remained beside me, her arm over my belly.\n\nIt was night.\n\nI looked at her face.\n\nShit, she looks like her, I thought.\n\nThe woman stirred.\n\nHer eyes opened and found mine. \n\nJust like Sosoni, I thought. I felt one of her nipples against my shoulder.\n\nMy cock grew hard, tenting the blue blanket.\n\nHer hand slid down my belly and grasped it.\n\nI looked at her.\n\nHer eyes grew eager and she disappeared underneath the blanket.\n\nHer lips. Oh, shit.\n\nThe wet warmth.\n\nThe blanket rose and fell over my groin.\n\nSosoni's mouth felt like this, I thought.\n\nI closed my eyes and imagined her. Before long, I felt the eruption surge within me. I grunted, and the woman's lips clasped me tightly near the base. The blanket quit moving.\n\nI grunted.\n\nSemen shot and spilled from me, and the strange woman never moved. My erection remained almost completely inside her mouth and throat. Her lips encircled the shaft just inches from my pubic hairs.\n\nShe swallowed. She swallowed again. \n\nOh, fuck.\n\nShe swallowed.\n\nI groaned.\n\nShe hummed.\n\nIt was over, and she didn't move for a time. As my erection flagged, she let it slip from her lips, and I felt her head slide up my belly.\n\nShe sighed when her face emerged.\n\nI did, too.\n\n\"You look like Sosoni,\" I said.\n\n\"Yuh-oo Sosoni,\" she responded.\n\nI slept.\n\n***\n\nI woke early in the new morning.\n\nThe woman was beside me, her back to me. My arm draped across her tummy.\n\nI drew it away, and she rolled onto her belly.\n\nGlancing down the blanket, I saw the shape of her body\u2014the rise and fall of the blanket over her ass.\n\nShit.\n\nUnder the blanket, I reached down, sliding my hand over her warm, soft flesh.\n\nThis, I thought, is some kind of beyond. I had squeezed the trigger. The bullet had gone home into my brain.\n\nMy body lay out there in the frigid morning air, blue and lifeless.\n\nYet, somehow I had been gifted me with a few moments of paradise. The woman's body was warm and soft beside me. \n\nShe so looked like my Sosoni, except for the short hair.\n\nAn erection grew down below.\n\nI caressed the supple hills of her ass.\n\nI need to take it while I've got it, I decided. I need to grab the now of this afterlife before it's passed on to something worse.\n\nI sat up.\n\nShe stirred and adjusted herself, presenting, it seemed, her bottom.\n\nI grabbed it.\n\nShe moaned.\n\nI moved down over her body, between her legs, and spread them.\n\nSosoni was a virgin. \n\nI spread the woman's bottom and licked her vagina. My tongue dipped inside. I probed with it.\n\nThe hymen was there, but different\u2014more open. Yes, I thought, after I fingered my Sosoni, it would have changed. This woman's body, I concluded, was crafted to be a perfect match.\n\nBut, I mustn't fuck her, I thought. It is too precious a gift.\n\nI spread her apart. Rubbing her clitoris with my middle finger, I began to lick her anus. \n\nShe moaned with appreciation. I slid two fingers inside her tight pussy until she cried out her climax.\n\nHer anus softened for me, so I climbed over her, spread gobs of saliva on my penis, and positioned myself against her.\n\nShe cooed softly.\n\nI drove the tip inside her.\n\nOh, fuck, her ass was just like Sosoni's. Perfect. \n\nThe woman surrendered herself underneath me without protest, moaning and granting passage. Her legs spread, and her back pushed down, arching her bottom up toward me, offering herself for deeper penetration. I drove my hips into her until I felt the crests of each fleshy mound of her bottom tap against my own skin.\n\nShe cried out my name.\n\nI hesitated.\n\n\"What's your name?\" I asked.\n\nShe said, \"Sosoni Elo Tonjadika.\"\n\nPerfect.\n\nI drove myself into her, and she into me. When the peak arrived, I drew back to the tip, and let myself release inside her. \n\nShe cried out my name.\n\nI repeatedly grunted, \"Thank you\"-to her, to the cave and the very air that surrounded me.\n\nWhen it was all over, I collapsed beside the woman, and she rubbed my chest until I fell asleep again.\n\n***\n\nI woke refreshed. The smell of sex hung in the cave's air. The fire was nearly dead, and I guessed it was early afternoon by the light outside the cave entrance.\n\nI reached up and felt my right temple, lightening the pressure of my middle finger so that it would slip inside the hole the bullet had made there.\n\nIt didn't.\n\nIt glided over skin and hair.\n\nI sat up, feeling the pang of hunger twist in my belly. I slid from the blanket, feeling the air on my skin. It was a mild day. Not frigid, not cold, but cool. I crawled naked out of the cave and stood in the sunlight.\n\nI went over beside of the pond to urinate.\n\nMy penis felt sticky in my hands, and I guessed I had a wet dream. The moment those words crossed my mind, flashes of images swept across my mind. A blowjob under the blanket. Licking a pussy and discovering a ruptured cherry. Cumming inside a woman's perfect ass.\n\nSosoni, her name had been, and she had been the mirror image of her...except for the hair. My Sosoni had hair that stretched down over her bottom to the back of her thighs. \n\nI drew a breath of air, and it was cool enough to be refreshing.\n\nThis was it, I thought, the day of days.\n\nIt was made all the better by the dream\u2014the dream of that woman.\n\nWhere was my pistol? I wondered.\n\nThen, a new thought slashed across that one: why do I even need it?\n\nDo I really want to kill myself today?\n\nLooking up at the sky, I knew I didn't. In fact, I wanted to go home and eat. Maybe I would stay there this time and not come back to the cave.\n\nI heard footsteps behind me. Turning, I saw the woman squat and urinate. \n\nA part of me wanted to scream; another part knew this must still be part of the dream. I kept quiet.\n\nShe rose and stood beside me.\n\nI said, \"Thank you for the dream.\"\n\nShe said something, but her English was unclear. It sounded like \"Aye-uh luff yuh-oo.\" She rubbed my shoulder, her face a mask of deep concern.\n\nWhatever she had said, it showed her care for me, and that was enough. I said, \"Go home?\"\n\nShe said, \"Ho-um. Yes.\"\n\nI grabbed my rags from the cave and slipped them on. She wrapped the blanket around me.\n\nShe dressed in panties, socks, black yoga pants, a bra, a thin white tank top, and a fuzzy sweater. She pulled on black boots. \n\nI went over and took her snow pants and coat. It was warm enough that she wouldn't need them\n\nCarrying them for her, we walked back to my home. As we passed by the place where I killed myself, I looked away.\n\nI did not want to see my body. It might wake me from the dream or end my time in this paradise.\n\nIt was growing dark by the time my house came into view. The lights were on.\n\nThe woman cried, \"Deh-boruh! Char-ells!\"\n\nI glanced at her.\n\nAgain she cried the words.\n\nThe basement light of my house came on. The sliding glass door opened. Charles and Deborah ran out.\n\nDeborah screamed with joy.\n\nCharles cried, \"Oh, thank heavens!\"\n\n\"Charles?\" I asked.\n\nHe ran to me and hugged me.\n\nDeborah joined him, and then she hugged the woman.\n\n\"We thought you were dead!\" Charles exclaimed.\n\n\"Me, too,\" I said, \"I mean, aren't I?\"\n\n\"What?\" he asked, glancing from Deborah to the woman.\n\n\"Never mind that now, let's get you inside,\" Deborah suggested.\n\n***\n\nThey shoved me into the shower. The water felt like a baptism. When I emerged, the woman helped me dress, and she led me into the kitchen. A plate of Italian pasta-bake awaited me, steaming hot with a cap of molten mozzarella cheese and two slices of seasoned, buttery bread.\n\nI shoveled it down. The woman ate beside me. Charles and Deborah watched.\n\nI asked for another plate.\n\nWhen I finished, Charles began. He said, \"Isn't it a miracle, my friend? Isn't it wonderful?\"\n\nI said, \"Yeah, this has all been great.\"\n\nCharles and Deborah exchanged another glance. Deborah asked, \"What's been great?\"\n\nI looked at her and shrugged. \"This,\" I said, pointing all around and at each of them and the woman. \"Just everything.\"\n\nCharles shook his head and leaned toward me. \"Do you know where you are?\"\n\n\"Home,\" I said. \"Is it heaven?\"\n\nDeborah came toward me. She pointed to the woman and asked, \"Who is that?\"\n\n\"Sosoni, she says her name is,\" I responded, looking at the short black hair. I turned to Deborah. \"Doesn't she look almost exactly like her?\"",
        "Charles rose and went to the woman. He put his hands on her shoulders. \"This is Sosoni, don't you see? This is her. She's alive!\"\n\nDeborah said my name.\n\nI turned to her.\n\nShe said, \"Do you think you're dead?\"\n\nI reached up to my temple, feeling the place. \"I...uh...yeah. I shot myself in the head at Sosoni's pond.\"\n\nDeborah's eyes shifted toward Charles's.\n\nI said, \"I saw my body there\u2014well, I didn't actually see it. I didn't want to look at it and wake up, you know?\"\n\nThey didn't respond.\n\n\"But, it was there,\" I finished.\n\nCharles took the woman's hand and walked her over to me. \"You're not dead, old friend. You're confused. You're alive. This is Sosoni. She's just...she cut her hair off so that she wouldn't be recognized.\"\n\nI stared at the woman.\n\n\"You were right,\" Charles exclaimed. \"She came back to you.\"\n\n\"Wait,\" Deborah said, and she left the room. She returned with my phone, and she opened the messages. She played one.\n\n\"If you get this, old friend, you've got to call me, please! She's alive and she's here! Sosoni is here! She came to our house today\u2014to Deborah! I can't believe it! Wait...let me call you back.\"\n\nShe played another message.\n\n\"Listen: Sosoni wasn't coming through the woods to find you. She fooled them all! Cut her hair off and got rides to McCall. No one recognized her with the short hair! Everyone searched the mountains looking for her, but she fooled them. Reason it took so long is because she didn't know how to get here\u2014where to find you. She got driven all over heck and gone before...hang on, let me call you back.\"\n\nDeborah scrolled to the next message, watching me with tears forming in her eyes.\n\n\"Me, again. She saw her story on some news segment up in Coeur D'Alene. She heard the name McCall and she remembered our names. Some truck driver helped her find our home. It's just...she's here, thank goodness. She's alive. She's safe, and she's here. You've got to call me when you get this. We love you, old friend. Sosoni does, too.\"\n\nThe last message was Sosoni's voice. She said my name. She said to come home in her broken English. She said something else I couldn't quite make out. \n\nThe short-haired woman had said the same thing to me earlier.\n\nCharles pleaded, \"Don't you see now?\"\n\nThe woman took my hand.\n\nI looked at her. \n\nI let go of her, walked into the bedroom, and shut the door. \n\nThis was a trick. This was how hell tormented you\u2014by giving you your dreams and yanking them away.\n\n\"No,\" I said.\n\nI was not going to fall into the trap.\n\nI pulled that fucking trigger. \n\nThe words sounded right in my mind. I turned to the door and hollered, \"I pulled that fucking trigger, Charles!\"\n\nNo one responded, and I stalked my bedroom.\n\nThe door opened. The woman slipped inside and closed it behind her.\n\nI stopped and watched her.\n\nShe came to me, and she undressed me. Then, she slipped out of her clothing. She drew close, put her hands on my shoulders and kissed me. Her lips were soft and wet.\n\nShe drew back and led me by the hands toward the bed. She pulled my head toward her bare breasts, and I sucked on her nipples.\n\nHer hand slid down my stomach, through my hairs, and grasped my budding erection. \n\nMy fingers found her wetness and rubbed. \n\nShe sighed with pleasure.\n\nWhen I was fully hard, she laid back on the bed.\n\nI climbed over her. We kissed. She smiled.\n\nThere was something. \n\nWhen she smiled, her eyes drew up and the corners of her mouth down. That was... \n\nWe stared at one another from about six inches apart.\n\n\"Oh. Oh, my gosh,\" I muttered. \"Sosoni?\"\n\n\"Sosoni. Yuh-oo Sosoni,\" she responded breathlessly.\n\nI lowered my hips, and the tip of my erection nuzzled between her labia. Heat and wetness met it there.\n\nIt was her. It was Sosoni.\n\nI kissed her deeply, and then I said, \"Will you be my wife?\"\n\n\"Why-uff?\"\n\n\"Like Charles and Deborah. You and me, together forever. Wife.\"\n\n\"Meh-ry? Why-uff?\"\n\n\"Yes. Marry. Wife.\"\n\n\"Yes. Yuh-oo why-uff. For-eff-er.\"\n\n\"Forever,\" I repeated.\n\nShe whispered, \"Aye-uh luff yuh-oo.\"\n\n\"I love you, too, Sosoni.\"\n\nShe smiled, more broadly now.\n\nI pressed our bodies together and drove myself inside. \n\nSosoni gasped.\n\nHer hymen ruptured completely, and my penis slowly sank home.\n\nHer hands clutched me. Her face appeared torn between bliss and agony.\n\nI said, \"Sosoni.\"\n\nShe looked at me. She uttered, \"Yes. Yes. Yes.\"\n\nOur bodies mashed together. I was fully seated in her.\n\nShe gasped, looking at me with amazement. I was her hero again. I was her miracle man. \n\nI drew back and brought us together. Before long, she joined the motion. Her legs wrapped around my waist. Her hands held my hips. Her body rocked with me.\n\nShe cried out repeatedly and forcefully. Her climax seemed to reverberate through the entire house. I followed close behind, and at the moment her screams diminished, my erection began to throb inside of her. She moaned, and her eyes caught mine. Her eyes showed me she knew my semen\u2014my magic medicine\u2014was filling her up. \n\nWith a final, deep thrust, I pushed us together, held in place for several seconds, and then my body gave way. I pulled out and fell on my back beside her.\n\nIf she would have me, I thought, I wanted her for life.\n\nHow had I not known that it was her?\n\nSome time later, Sosoni and I emerged from my room. Charles and Deborah were thrilled to have me back-to have us back, together.\n\n***\n\nI don't know if it was the cold, the loneliness, malnutrition, or grief, but I lost my mind out there.\n\nAnd I almost killed myself.\n\nI found the pistol the next spring. One round had been fired. The casing lay a few feet away. In the frigid cold of that insane day, had I missed? Had I passed out the moment I finally mustered the strength to squeeze the trigger?\n\nI came damn close. Terrifyingly close. So close that when I wake up in the dark of night, it haunts me.\n\nBut, I didn't do it.\n\nStrange thing is, Sosoni found me out there lying in the snow because she heard the shot. \n\nIn the days and years that followed, there were times I doubted the truth of it. It still felt too good; it had to be a dream. I sometimes wondered if that bullet really did plunge through my brain. Are these dreams, I thought, a final gift from the few neurons still firing as my blood turns the snow red and freezes?\n\nI decided to accept what I've been given, whether it's a dream or reality.\n\nSosoni and I have four children now. Two girls and two boys. Sosoni is an incredible mother\u2014fiercely and gently loving. Charles and Deborah love them like their own grandchildren.\n\nWe built a burial plot to the north of our house. In it, there are three sets of remains and three gravestones marked Tonjakida, Okoweney, and Tonjadika the Younger. Upon the gate is mounted the skull of a grizzly bear with a small caliber bullet hole in its temple. \n\nAt least once a year, I tell our children the story of their grandparents and their uncle. Then, Sosoni tells them the story of the bear killer.\n\nWhen Sosoni wants me, she pulls me aside, kneels under me, and coaxes my semen free with her mouth. \n\nWhen I want her, I carry her to our bed, draw her legs apart, and pleasure her with my tongue and fingers until she can barely move from the orgasms.\n\nWhen Sosoni needs me\u2014needs the bear killer\u2014she flashes me her bottom and leaves the room. I seek her out, and when I find her, she bends over to be devoured and impaled, and she is only satisfied when she feels my essence inside her guts. \n\nWhen the bear killer needs her, I paw her bottom and pull her to the nearest place where I can spin her around, prepare her, and drive myself into her. I stalk away while she collects the fluids leaking out of her bottom and down the insides of her thighs.\n\nWhen she loves me, she sits on my lap, facing me. She kisses me until she feels my hardness under her body. Then she waits to be carried to our bedroom. She lays on her back and spreads her legs; she slaps the bed for me to hurry up and get undressed. \n\nWhen I love her, I brush her new crop of long hair. I kiss the back of her neck. I nuzzle her there, tickling her with the spiky little hairs of my beard until she giggles. Then, I take her hand and we run to bed, laughing.\n\nWhen the first warm day of spring comes, we leave the kids for a few hours and drive out to the little pond near her old cave. Sosoni likes to feed the fish.\n\n*****\n\nErrors herein belong to me. Thanks for reading! -FS"
    ],
    "authorname": "fsqueeze",
    "tags": [
        "dream",
        "feral",
        "indian",
        "interracial",
        "mind",
        "native",
        "oral",
        "wild",
        "woman",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/sosoni-ch-04"
}