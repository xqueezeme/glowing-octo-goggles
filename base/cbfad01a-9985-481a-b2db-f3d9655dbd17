{
    "title": "Falsely Accused Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nAnd by the way, none of what is written here is intended to make comparisons between Jesus Christ and the Iron Crowbar.\n\nPart 9 - Search And Destroy\n\nSunday, August 13th. I entered Police Headquarters wearing my civilian black outfit: badge on my belt, gun in a shoulder holster, light trenchcoat (very warm in the heat of summer), and my khaki Tilley Hat. And the red crowbar.\n\nMCD was active. Myron was at a desk, typing on a computer. Mary was watching the wall monitor, trying to not get emotional. Joanne and Theo were at their desks, and in contact with the CSI personnel (that's J.R. Barnes and Christina Cho) and Uniformed Officers at the scene.\n\n\"All right, folks,\" I said, trying to keep my voice calm, \"what do we have?\"\n\n\"Neighbors heard what sounded like a struggle at Professor Milton's home.\" said Joanne. \"Then a white van drove out of the driveway. No one got a license plate, and the description is a Ford Econoline 350 with no markings on the side or back.\n\n\"Might as well try to stop half the vans in the State.\" I said. \"Myron, any pings?\"\n\n\"His cellphone is at his house,\" said Myron, \"and the homing device in his belt was activated, but was removed from his person and left behind. He did swallow a homing capsule, and I had a signal... going west. I think they took him out of State.\"\n\n\"We'll have to call the FBI to continue the pursuit.\" said Cindy.\n\n\"And if they're the bastards that kidnapped him?\" I replied acidly. Silence in the room was instantaneous. I looked around.\n\n\"I'm not kidding, people.\" I said. \"The FBI thinks Professor Milton is a disloyal subversive, and they were very, very pissed off when Myron refused to help them find the Guardians of Justice... and they were pissed when I backed up Myron on that. Okay, Myron... my office.\" We left a stunned group of Police Officers in MCD and went into my office.\n\nOnce in the office, I got out the bug-killer and turned it on, not giving a damn right now about Internal Affairs. Myron sat in one hot chair and I sat in the other one, very close to him and keeping our voices low.\"\n\n\"Myron,\" I said, \"do whatever you need to do to locate that capsule transmission.\"\n\n\"Sir,\" said Myron, \"I can't do it from here at Headquarters. They're watching, and monitoring. This whole thing may be a trap to see what I do about it.\"\n\n\"That's Iron Crowbar thinking, there.\" I replied. \"So, where can you do it from?\"\n\nMyron thought for a moment, then his eyes lit up...\n\n* * * * * * * * * * * * * * * *\n\nThe drone took off and flew north. It was a TCPD drone, but had been modified by Myron to not transmit a signal unless it picked up something to transmit, and then to deliver a 'burst' signal. It is possible that Myron had been the one who created the drone I'd used in the Larry Wheeler 'Whistleblower' murder case.\n\nMyron and I were standing on the front lawn of the house at Point Hollow. With us were six Uniformed Officers in plain clothes; it is no coincidence that they were all 'Blood Orange'. Also with us was Captain Cindy Ross, who drove up in the Black Beauty, and Captain Teresa Croyle, dressed in all black civilian clothes.\n\n\"How do you keep from losing that thing when it gets out of range of the controller?\" Teresa asked.\n\n\"It's triangulating off the radio towers in Town, the University, and in Hammondsville.\" said Myron. \"I programmed it to fly in circles until it finds something, then home in on that and send a burst signal to us.\"\n\nWe did not have very long to wait. Within ten minutes, Myron's monitoring device beeped as a burst signal reached it. A blue dot lit up on a map on the screen.\n\n\"Northwest of us.\" I said, watching with Myron. \"Up that two-lane road through the forest that we used to get to that cabin where Annemarie and Sherry Kim were found.\" (Author's note: 'Point Hollow', Ch. 01.). \"But the signal is on the west side of the road, not the east.\"\n\nAnother burst came in, and the location of the capsule signal was more strongly confirmed. Myron sent a command for the drone to return.\n\n\"All right,\" I said to everyone, \"here is what we're going to do. And before we begin, let me make sure you're all good with one thing: if any LEOs at any level, from local to Federal, try to interdict us, we will be blasting through them and shooting to kill. Any problems with that?\" \n\nThere were no expressions of any problems with that.\n\n* * * * * * * * * * * * * * * *\n\nThe Black Beauty led the way, with Cindy driving, me riding shotgun... and two black-clad, black-masked individuals in the backseat. We were going ahead of the others, because the Black Beauty gave off no electronic signatures, because it had equipment to detect and home in on the capsule signal, and because it could access the drone flying overhead that detected infrared signatures of human beings.\n\n\"So far, no lookouts.\" I said. \"The location is an abandoned house just off the road. It still has electricity and water running to it.\"\n\n\"No sign of humans.\" said Cindy as we drove past the house. We turned into a dirt road about 75 yards further down. \n\n\"They could be in a basement.\" I said. \"Okay guys, get ready to go inside. I'll cut the power...\n\n* * * * * * * * * * * * * * * *\n\n*WHAM!*\n\nThe thug drove his closed fist into Marvin Milton's jaw. The old man was seated in a chair, his hands tied behind him and the back of the chair, his legs tied to the legs of the chair. Duct tape covered his mouth. Blood was seeping from his nose.\n\n\"Fucking piece of shit.\" muttered the man hitting Milton. \"Think you can leak shit and get away with it? What do you think of your 'Guardians of Justice' now?\" With that, the man drove his fist into Milton's belly.\n\n\"You want a couple of shots at this shit eater?\" snarled the first man.\n\n\"Sure.\" said the second man. \"Too fucking bad Rodriguez is not here. We'd let him rape the shit out of this bastard's ass before we kill him.\" The second man then swung his fist in a haymaker, catching Milton in the side of the head, just below the left eye. The blow sent Milton and his chair toppling over.\n\n\"God damn piece of shit can't sit up straight.\" said the first man, going over and viciously kicking the old man in the ribs.\n\nSuddenly, the lights went out, throwing the basement room into total, inky blackness.\n\n*WHAP!* *BIFF!* *OOOF!*\n\nWhen the lights came back on, the four perps were lying on the ground, their hands zip-tied behind them. Several persons in all black clothing and black masks were in the room.\n\n\"Kato,\" said a tall, broad-shouldered man, his voice soft, scratchy, gravelly, \"take Milton to the hospital in my SUV. You drive the Black Beauty and lead the way, and if anyone tries to stop you, blow them the hell away.\"\n\n\"Roger that, sir.\" said the shorter person, obviously a woman and a toned, fit woman at that. She and most of the black-clad persons untied Marvin Milton and carried him out of the room.\n\n\"Everyone except Buddy,\" the tall man said, pointing at another black-clad, masked person that was obviously a woman, \"get out of here. Wait for us outside.\"\n\n'Buddy' was the codename for Teresa, of course. She and I were the only ones left in the room with the four perps. It was time for interrogation... 'Blood Orange' style. Well, actually much, much worse.\n\n\"Well, Buddy,\" I said as I took a leather billfold out of my pocket, \"you are about to learn something new.\" I took out a syringe full of liquid and injected the person I suspected was the leader.\n\n\"AAAUUUGUGGHHHH!!\" the man screamed as the tremendous, debilitating pain raced through his entire body. He shook violently as he screamed.\n\n\"Well,\" I said to the second man, \"looks like your friend here is in some pain. Now if you don't want to experience that for yourself, I'd suggest you start telling me who hired you to beat up that old man.\"\n\n\"Man, I don't know nuthin'.\" gasped the second man. \"I swear to God, I don't know a damn thing!\"\n\n\"Better be sure.\" I said. I injected the second man with a smaller dose. He began screaming in agony. I went to the third man.\n\n\"So!\" I said, \"Looks like your buddies are pretty stupid. How about you?\"\n\n\"Man, Dirk there hired me.\" the man said, indicating the first man. \"I don't know nuthin' else... I SWEAR TO GOD, I DON\"T KNOW NUTHIN'!!\" he screamed as I was about to inject him.\n\n\"We'll see about that.\" I said. I got out the second syringe, that had the antidote, and gave the second man a shot. He stopped screaming and crying as the pain left his body. \"So, you ready to talk?\"\n\n\"I swear to God, I don't know anything.\" said the second man.\n\n\"What's your name?\" I asked. \n\n\"Joey Smith.\" he said.\n\n\"No, the real name.\" I said.\n\n\"I swear, that's it!\" he gasped. Then he gave me his prison number from State Prison in Jacksonville. I wrote it down. The third and fourth men were also forthcoming with their identities.\n\nI finally went to the first man, who was now vomiting and had lost control of his bowels. \"You ready to talk, shithead?\"\n\n\"Pleeeeease, make it stop!\" gasped the first man. I finally injected him with antidote.\n\n\"Okay, plenty more pain if you don't start singing like a canary.\" I said. The man started singing like a canary.\n\nI then took out a third syringe. The men cringed, but it was only a drug that would wipe their short-term memories, and make them forget this whole little episode ever happened. Then I called in the other masked men, who loaded the perps into TCPD cruisers and drove them back into the boundaries of our State and County.\n\n* * * * * * * * * * * * * * * *\n\nAs we were driving back, me driving my Police SUV and Teresa riding shotgun, I said \"Well, I guess you now know.\"\n\n\"I already knew.\" Teresa said. \"I'm engaged to the brother of the punk that created those drugs. And I remember what happened to Steven Moschel before we found him, and I had every idea then what had been done to him. You're not dealing with an Agency of the Weak Minded, you know.\"\n\nI enjoyed a long hard laugh at that one...\n\nPart 10 - Retribution\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette from in front of University Hospital at 7:00am, Monday, August 14th. \"Fox Two News has learned that University Professor Marvin Milton has been severely beaten and is near death here at University Hospital!\"\n\nBettina: \"Details are sketchy, but Professor Milton was brought in late yesterday afternoon with severe internal injuries. Trauma doctors worked to save him, including Hospital Administrator Leonard Cordell, who was a war surgeon with years of experience treating battlefield wounds. At this hour, Dr. Milton is stabilized, but is not out of danger.\"\n\nMore Bettina: \"Asked who is responsible for this crime, Police Commander Donald Troy issued a statement that the Police are investigating the attack upon the father of a Police Officer, and that he, Commander Troy, is giving this attack priority and his personal attention. Chief Sean Moynahan issued a statement that the assault on Dr. Milton was an assault on the entire Police family, the entire University family, and it will not go unpunished.\"\n\nBettina then brought in University President Sidney Wellman, who said \"Of course our prayers go out to Professor Milton and his family that he will survive and recover from this horrible attack. I have asked the Campus Police to assist the TCPD in any way they can to solve this case and bring whoever was behind this vicious attack to Justice.\"\n\nMore Bettina: \"Four men were arrested in connection with the beating, but details are sketchy as to where they were arrested. Lawyers for Chase, Lynch & Berry, P.C. and Gresham & Mason, P.C. were quick to offer to represent the four arrested men pro bono, saying the Police abused the suspects after arresting them!\"\n\nThen Bettina moved to the bombshell. \"And in State news, Governor Val Jared has formally asked the SBI-SIS to investigate Republican U.S. Senator Samuel Russell and BigAgraFoods for conspiracy in the death of Larry Wheeler. The Governor cited the documents released by the Guardians of Justice, and the Governor's Office has made FOIA requests to obtain the originals from the Federal Government, and has requested subpoenas through the Courts for BigAgraFoods documents. This comes after apparent inaction after the Governor's meeting with FBI Assistant Director Dana Fox.\"\n\n\"In retaliatory response,\" said Bettina, \"Senator Russell issued a statement saying the Governor is mentally incompetent, and is delusional to believe the treasonous Guardians of Justice. Other Republicans, especially Lieutenant Governor Graham Collins and House Ways and Means Chairman Wilson Hammonds, were also quick to strongly condemn the Governor for his actions.\"\n\n\"And finally,\" finished Bettina, \"Peter Dwayne Gordon will be in Court for his preliminary hearing this morning for allegedly raping a woman last week. He is being defended by Mike G. Todd of the Madison and Ives Law Firm, and D.A. Gil Krasney is personally overseeing the Prosecution's case, saying that this is about the predatory treatment of all women...\"\n\n* * * * * * * * * * * * * * * *\n\nAs I watched the broadcast in my office, with Cindy the only other person in the room, my mind was flashing back to the day before:\n\nProfessor Marvin Milton was barely alive. His jaw was cracked in two places, as were the bones around his left eye, which was swollen shut with bruising. He had a severe concussion in two places on his brain. Several of his ribs were cracked, some puncturing his lungs. He was extremely lucky in that the soft tissue damage where he'd been punched in the belly was limited. He was in ICU now, with his son Myron and daughter-in-law Mary at his side.\n\n\"If he makes it through the next 24 hours,\" Dr. Morgan had told me at 10:30 Sunday night, \"he might have a chance. We're monitoring for bleeding and for clots, but there's nothing more we can do for him. He'll have to pull through himself.\"\n\nA story had been relayed to me that the Death Cat had been seen walking down the hall towards ICU in the middle of the night, and the nurses had expected the worst. But the Death Cat had not arrived at Milton's bedside. Instead, Mary had whispered into her father-in-law's ear over and over to hang on, to live to see his grandchild that she was carrying. Marvin Milton was still alive when the sun came up.\n\nI also remembered my conversation with the Hospital Administrator, Admiral Cordell. He'd asked me \"Any idea who the bastards are that did this?\"\n\n\"Yes sir.\" I said. \"The perps talked. We won't discuss how that was induced.\" The Admiral's eyebrows raised at me just a bit, but he also saw the dead light in my eyes, dead to all but Justice... no, to retribution.\n\n\"Good.\" said the Admiral. \"I won't ask who is responsible for this, but I hope you wipe 'em out.\"\n\n\"Yes sir.\" I said. \"And thank you for doing all you can for Dr. Milton.\"\n\n* * * * * * * * * * * * * * * *\n\nNow, back in present time, I felt Cindy trying to read my mind.\n\n\"Any idea who did this?\" asked Cindy.\n\n\"You tell me.\" I said.\n\n\"Well,\" Cindy said, \"It's understandable that Myron and Mary would be at his father's side, but that denies us their services for the time being.\"\n\n\"Yes.\" I replied. \"Very conveeeenient for our enemies.\"\n\n\"Which enemies are those?\" asked Cindy, trying to steer the conversation back to me answering her questions.\n\n\"Take your pick.\" I said. \"The ones that want to cover up for BigAgraFoods, and the ones that don't want me finding out the truth about this rape case.\"\n\nCindy's face suddenly changed. She said \"If you'll excuse me, sir...\", got up, and left the office.\n\n* * * * * * * * * * * * * * * *\n\n\"This is John Hardwood, Five-Alive News in the Morning, bringing you the news you have a right to know.\" said the untrustworthy reporter from in front of the Federal Building at 8:00am. I was watching with undivided attention and concentration.\n\n\"Five-Alive News has learned that Professor Marvin Milton, who the FBI considered a 'person of interest' in the Guardians of Justice treason case, was severely beaten in his home Sunday afternoon.\" said Hardwood. \"Milton barely survived the attack and is in ICU at University Hospital with severe injuries.\"\n\n\"Several suspects were arrested in the case,\" said Hardwood, \"but their legal representation is saying that the Police actions in the case are irregular at best, and possibly physically abusive at worst. Professor Milton is the father of TCPD Supervisor Myron Milton, and father-in-law of Vice Detective Mary Milton.\"\n\nHardwood went on: \"And Governor Val Jared continues to act in a bizarre manner that suggests he is not mentally fit to hold public office. His latest unbelievable act is to ask the SBI-SIS to investigate the honorable U.S. Senator Samuel Russell, as well as important company BigAgraFoods, for conspiracy in the cover up of the murder of Larry Wheeler, a BigAgraFoods employee who may have treacherously betrayed the company by leaking information. Most disturbing is that Val Jared actually cited the documents released by the cyber-terrorist traitor organization 'Guardians of Justice'. This alone brings the Governor's mental competence into question...\"\n\n* * * * * * * * * * * * * * * *\n\nAt 10:30pm, Monday, August 14th, I met Mike G. Todd at his office. My bug killer was on, whether or not it was needed.\n\n\"It was rough, Commander.\" said Mike. \"Krasney was there himself, as was Stiles. Strange bedfellows, eh?\" I smiled briefly at the joke, then Mike continued: \"Folsom was the judge. He's not a bad judge, but I would rather have Watts. Anyway, I raised objections, and I used the affidavits about the dress. Krasney worked like hell to have that evidence excluded. Folsom said he'd consider if we could admit it at the trial, and I knew then that the whole thing was a sham, just going through the motions, and we were going to lose. So I held back on Luskin's past record as a prostitute, so they won't know until we have to give it to them during Discovery.\"\n\n\"Good.\" I said, knowing Dexter Epstein would've butchered that. \"Good job. I appreciate your good work on Peter's behalf. By the way... did we win on bail?\"\n\n\"No... and yes.\" said Todd. \"Stiles was going on and on about no bail, and I let her. Then I said I would agree to no bail, provided my client got his Constitutional right to a fair and most very speedy trial. Folsom said his calendar was clear on September 5th... of this year.\"\n\nI smiled. \"And I'll bet the Prosecution did not object one bit.\"\n\n\"No, they didn't, which shocked me.\" said Mike. Then he peered at me. \"What, did you expect they wouldn't object?\"\n\n\"Yes.\" I said. \"I expected it to go pretty much as you've described.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 1:45pm, Cindy returned to Police Headquarters. She had been gone most of the late morning, and I'd been too busy to ask why.\n\nAs she came into my office, she was surprised to find Teresa already there, attired in heavy armor.\n\n\"Captain Ross.\" I said. \"Based upon intelligence information gathered yesterday, we are about to administer some retribution for Professor Milton. As part of it, I will be turning in my FBI Consultant badge. What do you want to do?\"",
        "\"Tell me what it's about.\" Cindy replied. I told her... and made sure to add that her father was considered a 'subversive' by the FBI.\n\n\"I'm coming with you.\" Cindy said, her ice-blue eyes flashing fire.\n\n* * * * * * * * * * * * * * * *\n\nIt was a somber meeting in the FBI offices at the Federal building. Team Lazarus had heard of Professor Milton's beating, and were shocked. Tanya had called Myron, and she'd told him that Team Lazarus, which included former TCPD Detective Martin Nash, were going to help Commander Troy find whoever did this. Myron was understandably skeptical.\n\n\"Well!\" said Dana Fox brightly as the meeting started, \"looks like Professor Milton got what was coming to him. If we don't get any more GOJ leaks, then maybe this case is solved, eh?\" He was met with a wall of uncomfortable, tense silence.\n\n\"Okay, let's get started.\" said Fox. \"We've got a bank robber in the City to look into, and a known serial killer and child abductor to deal with. His name is Red Brookstein. Name ring a bell, Jack?\"\n\n\"Yeah.\" said Muscone, his beady eyes going jet. \"I busted him ten years ago. One of my first big cases. I was with a BAU (Behavioral Analysis Unit) then.\"\n\n\"Well, we got a lead that he showed up in Boston after escaping prison.\" said Fox. \"He may try to make his way west or south--- what the...\"\n\nThere was a commotion outside, and a lot of voices. Then the door practically exploded open. Before anyone could react, the Iron Crowbar, dressed in all black, rushed at Dana Fox.\n\n*WHAM!*\n\nI drove my fist into Fox's face, knocking him back against the wall. He turned and tried to parry my attack, but his defense was pitiful; I easily sidestepped and then drove my fist into his belly.\n\n*WHUMP!*\n\nMore blows rained down, then I grabbed his arm, twisting it behind him, and slammed his upper body face down on the table.\n\n\"You fucking son of a bitch!\" I hissed. \"Did you think I wouldn't find out?\"\n\n\"Find out about what?\" Jack Muscone asked. He and his fellow Special Agents had remained immobilized. Several TCPD Officers (most of them 'blood orange') had guns drawn and ready. Teresa Croyle was one of them. Cindy Ross was another, and her green crowbar was blocking Jack's path, mostly in warning.\n\n\"Waddell.\" I said, naming the FBI Agent that had once worked with Les Craig (Author's note: 'Slender Man'). \"He used to work with Les Craig, then was assigned to Fox here. He's the bastard that hired the thugs that beat up Milton. And he did so on your orders!\"\n\n\"Whaaa?\" gasped Muscone. The other Agents were equally shocked.\n\n\"So, Fox,\" I snarled, \"you thought you could get away with nearly murdering Myron's father after I told you to stay the fuck away from Myron? Huh?\"\n\n\"You're full of shit.\" gasped Fox. \"I didn't do anything----\"\n\n\"BULLSHIT!\" I roared. \"Get the picture, mother fucker. If Milton dies, I will kill you, and nothing on God's earth can stop me.\"\n\n\"Fuck you!\" gasped Fox.\n\n\"You just ain't listenin', boy!\" I growled. \"Get. It. Straight.\" I was banging Fox's face into the table with each syllable. \"If-Mil-ton-dies-then-you-die...\" *WHAM!*-*WHAM!*-*WHAM!*-*WHAM!*-*WHAM!*-*WHAM!*... \n\n\"Don! That's enough!\" I heard a woman's voice say, cutting through the tension of the room. To my shock, my wife Laura came in, followed by her sister, Melina Allgood. Melina was dressed in all black, also... which did not bode well for someone.\n\nMelina grabbed Fox's other arm and bent it back as Laura had me release him and guided me away. Melina said \"The Iron Crowbar is not quite correct. First, read the label...\" She put her CIA badge in front of Fox's eyes. Yes, CIA agents have badges, though they rarely carry them on field missions.\n\n\"Second,\" Melina said, \"if Professor Milton dies, Commander Troy will not get the chance to kill you... because I will kill you first. And I have a so-called 'license to kill'... the written authorization of the CIA Director to take you out if that man dies, or if anything happens to his son or daughter-in-law. Do you understand?\"\n\nFox did not reply. I came over and drove my fist into Fox's ribs from the side. \"I don't think this bugger is listening. Maybe a crowbar to his kidneys will improve his hearing.\" I wasn't kidding; I readied to deliver the blow.\n\n\"All right, all right.\" gasped Fox. \"I hear you. But I'm going to kill you, Troy, so help me God...\"\n\nMelina slammed Fox's face into the table again as Laura began taking control, having all of us move to the door and out. As I left, I threw my FBI Consultant badge on the table, and Cindy did the same thing. Jack Muscone's face fell when he saw the badges on the table.\n\nMelina threw Fox against the back wall. As she then moved to the door and left, someone else came in. Fox got up and was going to charge at the door, and almost ran headlong into... the Deputy Director of the FBI.\n\n\"Sit down, Dana.\" the DepDirector ordered. Nash helped by forcing Fox into a chair, guarding him from behind.\n\n\"Everyone but Nash, take a break. Outside.\" said the DepDirector. Everyone else left.\n\n\"Okay, Dana.\" said the DepDirector, sitting down in front of Fox, with the corner of the table between them. \"You're lucky to be alive. Don was going to kill you. Laura wants to kill you. Melina will kill you, and without so much as batting an eyelash.\"\n\n\"Sir, I didn't have a god-damn thing to do with Milton's beating----\" started Fox, but the the DepDirector raised his hand.\n\n\"It doesn't matter.\" said the DepDirector, knowing that the Iron Crowbar was right and that Fox was lying. \"Don is right. Waddell hired the thugs, and now we can't find him. You may not be involved, but an OPR will determine that. In the meantime, for your own safety, and to calm this situation down, you're being transferred. San Francisco. A couple of my Federal Marshals will drive you to City Airport. We'll have your stuff packed and sent to you.\"\n\n\"What about Troy?\" snarled Fox. \"I'm not forgetting what he just did---\"\n\nThe DepDirector again raised his hand. \"You've got a hard head, apparently.\" he said. \"I'd suggest you let that go. You're alive. You try to go after Troy, you won't stay alive very long. Allgood wasn't kidding: the CIA authorized her to kill you if Professor Milton dies or if anything happens to his family. And if you really think you have a shot in hell against the Iron Crowbar in personal combat... especially when he is gunning for you...\" He did not finish the sentence. He did not need to.\n\n* * * * * * * * * * * * * * * *\n\n\"Wow.\" said Chief Moynahan as we had supper in the back room of the Cop Bar. \"Just wow.\"\n\nWith him was me, Laura, Cindy, Teresa, Melina, Daniel, Chief Griswold... and Mary Milton. I had visited the Hospital and told Myron and Mary what I'd learned, and what I'd done about it. They were grateful. Then I told Cindy that we were taking Mary to eat with us, as she had not left her father-in-law's side except to go to the potty. Mary protested; Cindy ended the protest by all but carrying Mary out of ICU. I told Myron I'd take him out for some food when we brought Mary back.\n\n\"Well, Crowbar,\" growled Chief Griswold, \"you have made friends and influenced people again.\"\n\n\"I don't care, sir.\" I said, feeling more bad than angry now. \"I don't think I've ever felt so betrayed in my life. Casey Walker was one thing, but this...\" I did not finish the sentence.\n\n\"Speaking for Myron and myself,\" said Mary, \"I appreciate what you did for my father-in-law.\"\n\n\"How's he doing, by the way\" asked Daniel Allgood.\n\n\"It's still touch-and-go.\" said Mary. \"But the doctors say he's doing a bit better. They were afraid his lung wounds would lead to complications, but so far nothing bad has cropped up. And no infections, so far.\" We all nodded.\n\nJust then, we were shocked to see Jack Muscone, Martin Nash, and the Deputy Director of the FBI come in. Most of the looks at them were of shock. Mary's was one of death daggers.\n\n\"Guys,\" said the Deputy Director, \"I came over apologize for any role the FBI had in Professor Milton's abduction and assault. I also want to let you know that Team Lazarus had nothing to do with it. Fox has been sent to California, and I hope he has the good sense to stay there.\"\n\n\"I'll get this.\" I said quietly as I got up. Cindy got up with me. \"You can stay here.\" I said.\n\n\"Like hell.\" Cindy replied, with some emphasis. I argued no further.\n\nWe directed the FBI Agents through the front room, then outside onto the patio. \"Listen, guys,\" I said, \"I know you had nothing to do with this. But the CIA didn't actually authorize one of its deadliest Agents to kill Fox for just no reason. So what I suggest is that we see if Professor Milton makes it... and then we'll talk.\"\n\n\"All right.\" said the DepDirector. \"And I sincerely hope the man does make it. Well, Jack, looks like my retirement plans are not working out. I'll have to be gone by September 30th, and I'm not sure what we're going to do about your team...\" He then held up two FBI Consultant badges. \"So, what about these?\"\n\n\"In time, Mr. Director.\" I said. \"In time...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Yes, it's bad.\" said Laura as we sat on the back porch of the Mountain Nest while the dogs did their business, the sun setting over the western horizon as the headlight of a train came out of that horizon and eastward towards the River. \"William is very angry; this is fucking up his retirement plans, not to mention making the FBI look bad. The CIA has no love lost for Milton, but they hate the FBI even more, and Melina likes Myron and Mary. And the CIA Director is still a friend of mine, and had great respect for what you did to exterminate Sergei Molotov and bring me and Melina back home.\"\n\n\"And with a list of double agents and traitors.\" I replied. \"So... what else?\" I asked, knowing.\n\n\"Yeah.\" Laura said, acknowledging my knowledge. \"BigAgraFoods and the Guardians of Justice. The CIA Director does not like Senator Russell, and if anything, this is poking a sharp stick in Russell's eye. So tell me, Darling, if the GOJ is not the Miltons, who is it?\"\n\n\"There are a number of suspects.\" I replied. \"But I'm not really in a mood to help anyone catch them right now. And if Professor Milton dies... heads will roll. And I've got the katana that can make those heads roll, and is crying out for me to do so...\"\n\nLaura peered at me as I went into a reverie, something I'd been doing a lot of recently. \"Darling,\" she asked quietly, \"are you okay?\"\n\n\"I don't know.\" I said. \"I know you're with me, and Bowser and Buddy are with me. But I truly don't know if I can trust anyone else... even my fellow Police Officers. It's that bad right now...\"\n\n* * * * * * * * * * * * * * * *\n\nThere was a small bit of light coming from somewhere, but I could not tell where, and it was that kind of light that was completely drained of all color. I was on top of a woman, and my condom-sheathed cock was fucking her with violent, powerful thrusts. \n\n\"Come on, boy! Fuck that bitch!\" I heard a voice say. It was Jack Burke's voice. I looked up and saw him watching me fuck the woman. He was naked, as the woman and I were, and his huge cock was throbbing hard and standing out. The woman was in her thirties, a bit fleshy but with a very pretty face. Her mouth was gagged with duct tape.\n\nThen I realized that Jack was still college-aged, and so was I... this had to be a weird dream. I continued to thrust hard into the woman, feeling my nut rise as Jack Burke exhorted me to climb the mountain and bust my nuts into the woman.\n\n\"Uhhh!\" I gasped, feeling myself come, feeling the warmth around my cockhead as the condom filled with sperm. After several more violent thrusts I was satiated, and I withdrew.\n\n\"Shit, boy,\" said Jack as he moved to take my place between the woman's spread legs, \"you don't know how to fuck. Let a real man show you how to properly fuck a bitch!\" With that he mounted the woman and placed his huge cockhead between her gaping cuntlips, then I watched as Jack Burke shoved his incredibly huge cock into the woman with savage power until their pelvises met. The woman screamed into her gag.\n\nI watched Jack Burke fuck this woman with that languid, smooth motion, his hard muscular ass bobbing up and down as he powered his huge meat into her. His seemingly easygoing fucking motion was exactly like his brother Todd's motion whenever Todd fucked my wife or another woman within my sight. Despite the seeming ease of it, though, Jack Burke was fucking the woman with brutal power, and she would grunt or moan each time he drove his long, thick, hard shaft into her abused cunt.\n\nAs I watched, I saw a woman's pair of gorgeous legs appear. Looking up, it was Angela Harlan, gloriously naked, her breasts riding high, her nipples hard pointing spikes that begged to be sucked. She watched the rutting couple in front of me for a moment, then came around to me as I knelt on my haunches, watching Jack Burke violently fuck the woman beneath him. \n\nThen I felt Angela ease behind me, her breasts pressing into my upper back and her abs into my lower back. Her right arm slid around my upper chest as she pressed her right cheek to my left cheek.\n\n\"Mmmm, Donny...\" Angela whispered into my ear, \"doesn't that just look delicious, watching Jack Burke fuck that bitch? You love watching Jack fuck women, don't you, baby?\"\n\nI said nothing as I felt Angela kissing my neck and jaw. I turned my head and Angela pressed her mouth onto mine, and I could feel the wetness of her tongue as we deeply kissed. I felt my loins stirring again.\n\n\"Retribution is coming, my dear Don.\" Angela whispered as she broke the kiss. \"Your day of retribution, of punishment for your filthy sins... is at hand. You will be abandoned... you will be denied... you will be betrayed, and all alone...\"\n\n\"Wha?\" I said, not so much at Angela's words, but at the change in my dream. I saw a man in a black suit and black tie standing on the other side of Jack and his sexual assault victim. Just as Jack gasped that he was coming, and began shooting a huge load into the moaning woman, I looked up at the man on the other side. His head was all white, and he had no facial features at all. It was the Slender Man!\n\nThough he had no eyes, I could sense where Slender Man was looking. At first he was watching the fucking, then I felt a chill as I realized he was looking up... right at me...\n\n\"Huh!\" I gasped as I woke up, sitting up.\n\n\"Don?\" said Laura, who had awakened. \"Are you okay?\"\n\n\"It was... it was a dream.\" I gasped. \"A nightmare... oh my God...\"\n\n\"Left arm.\" Laura said, getting out of bed. She was going to take blood samples...\n\nPart 11 - Betrayal\n\n(Author's note: see 'Chefs Special', Ch. 03 for more relevance to this portion of this story.)\n\n15 And Simon Peter followed Jesus, and so did another disciple. Now that disciple was known to the high priest, and went with Jesus into the courtyard of the high priest. 16 But Peter stood at the door outside. Then the other disciple, who was known to the high priest, went out and spoke to her who kept the door, and brought Peter in. 17 Then the servant girl who kept the door said to Peter, \"You are not also one of this Man's disciples, are you?\"\n\nHe said, \"I am not.\"\n\n18 Now the servants and officers who had made a fire of coals stood there, for it was cold, and they warmed themselves. And Peter stood with them and warmed himself.\n\n...\n\n25 Now Simon Peter stood and warmed himself. Therefore they said to him, \"You are not also one of His disciples, are you?\"\n\nHe denied it and said, \"I am not!\"\n\n26 One of the servants of the high priest, a relative of him whose ear Peter cut off, said, \"Did I not see you in the garden with Him?\" 27 Peter then denied again; \n\n...and immediately a rooster crowed.\n\n--- The Gospel According to St. John 18:15-27 (NKJV)\n\n\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the redheaded reporterette from in front of the Courthouse complex at 7:00am, Tuesday, August 15th. \"Fox Two News has learned that the Guardians of Justice released another batch of highly sensitive documents last night!\"\n\nBettina: \"These new documents show that BigPoultryFoods, a wholly-owned subsidiary of BigAgraFoods, schemed with the U.S. Department of Agriculture to substantially raise the prices of eggs and chicken by introducing bird viruses that would decimate chicken populations on farms in the South. Additional documents show the Department of Agriculture and BigAgraFoods created a plan to spray crops with an insecticide that would decimate bee populations, causing food plants to not be pollinated. BigAgraFoods denies the allegations, and the USDA has declined comment, citing the ongoing investigation into the Guardians of Justice and their cyber-terrorism.\"\n\nMore Bettina: \"However, more documents released by the GOA show a U.S. Government 'watch list' of persons they consider to be 'subversives', and disloyal to the Government. Among the names on the list are Dr. P. Harvey Eckhart, founder and leader of 'The Vision' self-help empire; Dr. Marvin Milton, who is still clinging to life at University Hospital after being severely beaten; and Commander Donald Troy, of all people. The GOJ documents allege that the CIA tortured Commander Troy shortly after he defeated Pastor Raymond Westboro, believing Commander Troy to have leaked classified data to a reporter. Neither Commander Troy nor the TCPD have responded to repeated inquiries for comment.\"\n\n\"I have with me FBI Special Agent in Charge Jack Muscone!\" said Bettina. \"Agent Muscone, what is the situation with these GOJ leaks?\"\n\n\"Bettina,\" said Muscone, \"the FBI denies these so-called 'hit lists', and I and my superiors would be outraged if this was being done by anyone in the Bureau. Also, after last night's release of data by the Guardians of Justice, it's pretty clear that Professor Milton and his family have nothing to do with it, as they're all at the Hospital.\"\n\n\"Do you think Dr. Eckhart or someone else in the area is doing this?\" asked Bettina.\n\n\"Obviously I'm not at liberty to discuss leads, Bettina,\" said Jack, \"but this is not a small operation by teenaged hackers. There's serious organization behind this, and it's threatening the national security of all American Citizens.\"\n\n\"Thank you, Mr. Muscone.\" said Bettina. She continued: \"And in local news, Peter Dwayne Gordon was indicted by a Grand Jury yesterday, for kidnapping, forcible rape, lying to Police, and other related crimes. I have with me State Attorney Jenna Stiles. Ms. Stiles, you are working closely with D.A. Krasney, whom you ran against in the last Election. Why the cooperation now?\"\n\nJenna said \"It is time that women stop being treated as objects of sexual pleasure for men. This indictment will go a long way to showing sexual predators that Justice will catch up to them. I wish to ensure that the rights of all women are properly protected. I do credit D.A. Krasney for his swift response to this case, and I condemn the disparaging comments about the victim by certain Police Officers.\"\n\nIt is not film tape about to roll, I thought to myself as I saw who was standing next to Jenna: Cindy Ross. Bettina asked \"I have Captain Cindy Ross, Chief of Detectives of the TCPD with me. Captain, is Peter Gordon guilty? And is Commander Troy wrong to investigate the victim more than the suspect?\"\n\nCindy replied \"The results of the Police investigation were turned over to the D.A.'s office and to the State Attorney, and the D.A. went to the Grand Jury, which is normal procedure. Mr. Gordon's trial will determine his guilt. Commander Troy is doing what he believes to be right, but I believe he may be wrong on this one...\"\n\n* * * * * * * * * * * * * * * *",
        "It was dead silent in MCD. Even Sergeant Rudistan had nothing to say, and was solemnly quiet. All eyes were on me, most in shock. Teresa's eyes had a different quality to them; 'Teresa Cunt' anger. It is possible that it was a good thing she did not routinely carry a crowbar.\n\n\"Welllll,\" I said, keeping my voice relatively calm, \"someone is wrong.\" As I got to the door to the back hallway to leave the room, I turned back and said \"By the way... Captain Ross is still you Detectives' boss, so I'd better not hear one word of disrespect. Do I make myself clear?\"\n\n\"Yes sir.\" came a jumble of voices from a group of disbelieving Officers. Teresa also fled the room, through the side hallway door.\n\n\"I cannot believe what I just saw.\" said Theo Washington. \"How that man could remain so calm after that...\"\n\n\"Maybe he hasn't processed it yet.\" suggested Joanne Warner.\n\n\"That man is like a computer.\" said Theo. \"He processes everything. Immediately. I sure feel sorry for Captain Ross, though.\"\n\n\"Yeah.\" said Teddy Parker. \"Especially since Peter Gordon is innocent.\"\n\n\"Why are you so sure of that?\" asked Joanne Warner, a tinge of anger in her voice. \"What if he is guilty?\"\n\n\"You believe that? Beyond a doubt?\" retorted Teddy Parker. Joanne was about to say something ugly, then caught herself.\n\n\"I... I don't know.\" she said. \"What I do know, is that this case is tearing this Police Department apart.\"\n\nThen they all noticed that Deputy Chief Della Harlow was looking into Vice from the hallway, a malicious smile on her face...\n\n* * * * * * * * * * * * * * * *\n\nI was called into the Chief's office. While talking with him, Cindy came into Headquarters via the side door. She looked into Vice, then MCD, and saw her Detectives sitting at their desks, silently working. Very silently working.\n\nShe went to her office and sat down behind her desk. As she began looking over Police logs, the door to her office opened. Teresa Croyle appeared, entering without knocking. And the look on her face suggested that 'Teresa Cunt' was about to go ballistic on someone.\n\n\"Hi. Didn't hear you knock.\" Cindy said. \"What's up?\"\n\n\"How could you?\" Teresa snarled venomously.\n\n\"How could I what?\" asked Cindy, though she knew what was coming.\n\n\"That little TV appearance you just made.\" Teresa replied. \"How could you do that? You know the case is still being investigated!\"\n\n\"The D.A. needed to go to the Grand Jury.\" said Cindy. \"So I gave him what we had... like we always do.\"\n\n\"We don't always give them a half-ass case!\" Teresa shouted. \"And from everything I've seen, it's more than possible that that bitch is setting that poor guy up! You didn't have to rush this through like that! They're trying to railroad that guy, for Christ's sake!\"\n\n\"Bullshit!\" Cindy roared back. \"He's not being railroaded!\"\n\n\"What if he's not guilty?\" Teresa shot back.\n\n\"I think he IS guilty!\" shouted Cindy. \"And I'm the Chief of Detectives here! I passed the information on to the D.A., and I have no qualms about it!\"\n\n\"Fine and good, that's your prerogative!\" shouted Teresa. \"But you didn't have to throw Commander Troy under the bus on TV like that!\"\n\n\"I didn't throw him under the bus!\" shouted Cindy, rising to her feet to stand off with Teresa. \"And they're right: he's investigating the victim, not the perp! He's wrong on this one!\"\n\n\"And so you go tell everyone on TV that?\" shouted Teresa. \"The only reason you're in that chair, and Chief of Detectives, is because of that man! And you repay him by doing that to him?\"\n\n\"What the hell?\" Cindy yelled. \"I'm supposed to not do the right thing and do my job because of that?\"\n\n\"That's not the fucking point, and you know it!\" Teresa yelled. \"You didn't have to say what you did about him on TV! You could have kept your god-damned mouth shut about that, about him! You just gave the Enemy ammunition! They're loving it that YOU of all people said that about him!\"\n\nIt was beginning to dawn on Cindy that what she'd done to her cousin and boss was wrong. But at the moment, that did not matter. The door to the office was opening again.\n\n\"Ladieeeeeees,\" growled Chief Moynahan, \"your voices can be hearrrrrrd all the way down to the other end of the builllllding.\"\n\n\"Sorry, Chief.\" said Teresa.\n\n\"Both of you, my office, if you please.\" said the Chief.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, is everyone ready for the new semester?\" asked University President Sidney P. Wellman. Everyone enthusiastically answered in the affirmative.\n\nThe Faculty Department Heads were meeting with the Dr. Wellman in the conference room next to his office on Campus, a standard meeting to wrap up the Summer semester and get ready for the Fall.\n\nDr. Laura Fredricson sat at her place a couple of seats down and to the left of Dr. Wellman, listening to his agenda items. She began having a sense of foreboding, a 'vibe', as her husband's cousin would call them. She glanced around, and found eyes surreptitiously studying her. None would meet her glance when she looked at them, though.\n\nSome minutes later, Dr. Wellman said \"Okay, are there any other concerns that need to come to the group's attention?\"\n\n\"Yes, Mr. President.\" said Dr. Jan Camp, head professor of Women's Studies. She was about Laura's age, and like Laura was tall for a woman. And like Laura, Jan Camp was not unattractive, especially for her age. But Dr. Camp's tall, slender figure and the way she walked was almost gawky compared to Laura's elegance.\n\n\"Yes, Dr. Camp?\" asked Wellman skeptically. He did not particularly like Dr. Jan Camp.\n\n\"I am hearing from a number of my students that they are very disturbed about what they are hearing regarding this rape case in Town.\" said Camp. \"They are concerned about what appears to be militant actions by the Police, as well as a callous disregard of the victim's rights and favorable treatment towards her attacker.\"\n\n\"And why does that concern us or this University in any way?\" asked Dr. Wellman.\n\n\"Some of these students want to take action.\" said Dr. Jan Camp. \"Some want to begin having demonstrations, on Campus as well as off. The question is... when these demonstrations begin, will this Faculty support our students and their right of free speech?\" She was looking straight at Laura as she spoke. Laura stared right back at her.\n\n\"Of course we will support them!\" said Dr. Lionel Carmela, who was short and heavily bearded. He was head of the Political Science Department, and a rabid Socialist. \"Their cause is very important!\" Many agreed.\n\n\"I'm wondering,\" said Dr. Juanita Rivera of the Romance Languages Department, \"if we should be having this conversation here and now. Can everyone in the room be trusted?\" She also pointedly looked at Laura.\n\n\"That's a good question.\" said Dr. Jan Camp. \"Dr. Fredricson is married to the Police Commander.\"\n\n\"And very proud to be his wife.\" said Laura, making sure her voice was loud enough to be clearly heard.\n\n\"You of all people, Dr. Fredricson,\" said Lionel Carmela, \"should support rape victims.\"\n\n\"Oh, I do.\" said Laura. \"I've also forgotten more about my studies of rape and its psychological effects than all of you put together will ever know. But I also know something else: the accused has his right to a trial to determine his guilt... a trial by a Jury, not by screaming mobs. My husband's nephew was once falsely accused of rape by the Campus Police. And my husband, who has solved more crimes and endured more pain in doing so than all of you put together, is conducting a fair and honest investigation of this crime, and he will not be dissuaded by intimidation tactics.\"\n\n\"Noooo, he'll just beat up the women with that crowbar he carries around---\" said Camp.\n\n\"That's enough!\" shouted Dr. Wellman as Laura stood up to confront Camp, her eyes blazing. \"Your comment is out of line, Dr. Camp.\" Wellman said. It became oppressively silent in the room. Some glared at Wellman and Fredricson with hatred; others looked daggers at Camp.\n\n\"What I do not want to see,\" said Wellman, \"is any property damage on this Campus, any persons hurt, nor anything on TV that has Boosters calling me asking what the hell is going on. I'm all for free speech and peaceful demonstrations, but all of you be very aware of how your words and actions are perceived by our generous benefactors, as well as the Public that elects the politicians that oversee us...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Ladies,\" said the Chief as he sat behind his desk, \"we are in a crisis, here. I won't say that this rape case is not important, as a young man's future is on the line. But the Bible says 'and it came to pass'... not to stay, but to pass... and this case will pass on, one way or another, while our Police Force has to remain strong for the next case and all future cases.\"\n\nThe Chief continued: \"I especially need you two Captains to get your shit together and act like a unified Team. Whatever quarrels you have, hash them out somewhere else, in private. Find a gym with a boxing ring and have at it. But not here, where the morale of my Police Force is put in danger. Is that clear?\"\n\n\"Yes sir.\" both women said. They were standing at attention in front of the Chief's desk, absorbing the verbal reprimand.\n\n\"Okay, good.\" said the Chief. \"I bee-lieeeeeve we are holding up progress, as the 'Crowbar Angels' meeting is scheduled for this hour. So, let's go to the Commander's office, shall we?\"\n\n* * * * * * * * * * * * * * * *\n\n\"I'm sorry about that confrontation.\" said Dr. Wellman to Laura Fredricson as he poured them some water in his office before sitting down in chairs. \"I'm sure you're aware that some of our Faculty are not happy about who you're married to. That obviously spilled over.\"\n\n\"Which is none of their God-damned business.\" Laura said quietly, letting her potty-mouth language emphasize her anger. Wellman did not fail to notice.\n\n\"That's why I wanted to talk to you now.\" said Wellman. \"Laura, you and I have known each other for years, and my wife and I consider both you and your husband to be close personal friends. I also know what your 'second job' was all about, and I supported your service to our Nation through our clandestine services. But not all of the Faculty know that about you, and they do not see your husband the same way Sally and I and many others do. We know just what depths of filth he cleaned up; some here do not... and some either don't care or hate him for doing it.\"\n\n\"There's a 'but' in there, somewhere.\" Laura replied, her voice somewhat severe.\n\n\"Yes, and it's about that rape case.\" said Wellman. \"What Camp did this morning was get Faculty support lined up. She's been working with her more 'militant' students, for lack of a better word, to gin up these demonstrations. She's also gotten signatures from 16 of our more strongly liberal professors to have you removed as Head of the Psychology Department, unless you openly and publicly denounce your husband.\"\n\n\"What did you say to that?\" Laura asked.\n\n\"I told them to get back to their own jobs.\" said Wellman. \"But what concerns me more is information I have learned from other sources, that your husband's enemies might try to get at him... through you.\n\n\"Come on, Dr. Wellman.\" Laura said acidly. \"I was a Deputy Director in the CIA for years, with bounties offered for killing me. I somehow survived. I can take care of myself.\"\n\n\"I know.\" said Wellman. \"And you need to be very careful now. Talk to your husband about it, and also tell him this: some of these bastards are out for blood... his blood. He may not realize exactly what he is up against.\"\n\n\"He knows, Doctor.\" said Laura. \"He knows. I just wonder if the bastards realize what they are up against...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Chief, with all due respect,\" I said as the Chief, Cindy, and Teresa came into my office, \"no matter what my mother and all the other ladies about Town say, you are simply not good looking enough to be a Crowbar Angel.\"\n\n\"Heh heh heh heh.\" barked the Chief. \"Your mother is a brilliantly astute woman, Commander. But I'm just here to ref-r-reeeeee.\"\n\n\"Didn't know we needed one.\" I said, somewhat under my breath. Out loud I said \"Sit down in the chairs, ladies, and the Chief can relax on the sofa.\" They took their seats.\n\nCindy looked downright fearful. I wish she would look as fearful when I mentioned 'Police Boxing Matches', but I digress. I looked at her and said \"So, Captain, you believe our investigation of the Gordon case is complete?\"\n\n\"No one said that, sir.\" replied Cindy.\n\n\"Yet you gave the D.A. the case.\" I said.\n\n\"They asked for what we had, and I gave it to them.\" Cindy said. \"Even if we had more, or had nothing at all, Krasney was going to go to the Grand Jury anyway.\"\n\n\"Yes, that's true.\" I said. \"You did your job. Okay, Laura checked on Dr. Milton at the Hospital this morning. He's doing much better. His vitals are getting stronger, his eyes are responding well to light, and Dr. Morgan is not trying to give me the doctor-speak that I hate hearing. But Mary is still sitting with him, and I have told her and Myron to take all the time they need, to help Dr. Milton. So Vice is one woman down. And the Data Branch is one Myron Milton down. How's the Operations Department, Captain Croyle?\"\n\n\"Good, sir.\" said Teresa. \"We've gotten in some good training. It looks like the slugs in the red shirts aren't stirring up trouble since the Statue Battle, and with School not back in session yet, it's all quiet.\"\n\n\"Calm before the storm.\" I said. \"Don't let the quietness fool you. Okay, either of you have anything for me?\"\n\n\"Sir, as you said,\" said Cindy, \"with Mary in Vice and Myron looking after his father for the moment, we're pretty depleted in the Data Division. Sonali and Lainie are holding serve for now, but if something big hits, we will be stretched. Do we need to make any new hires?\"\n\n\"Not until Myron is back, and can interview them with us.\" I said. \"Anyone we hire will be his. Anything else?\"\n\n\"I need a private word with you, sir.\" said Teresa. I nodded. The Chief and Cindy left the room. I took out and turned on the bug killer, Internal Affairs be damned by God.\n\n\"Sir, this may be out of line, but... how do you do it, sir?\" Teresa asked. \"I'd be... well, I did rip Cindy a new one, and the Chief ripped us both. How can you sit there like nothing happened?\"\n\nI gave a half smile, then reached for one of the framed photos on the edge of my desk, and turned it towards Teresa. It showed Carole and Buddy sitting side-by-side in the backyard of the Mountain Nest. Then I turned another photo around. It showed Teresa, Amy, and Buddy on Christmas Day... before Amy was put in the hospital.\n\n\"Buddy and Bowser are two awesome dogs.\" I started. \"Bowser has even been awarded two citations by this Police Force, and he saved a young girl's life. But sometimes, bless his little canine heart, Bowser makes a mistake. Sometimes he gets so excited to see Carole that he loses control, and wets the carpet. At times like those, I have to remember that Bowser meant well, but made a mistake, and that I have to continue to love him unconditionally. And so I clean up the wet spot, give Bowser lots of love, and we move on.\"\n\n\"And like good dogs,\" I continued, \"good people sometimes make mistakes. Sometimes people we love make mistakes. Peter denied Jesus three times, but Jesus still built His Church upon the rock that was Peter. This Police Force still needs Captain Ross to lead our Detectives... and I have to remember to love my cousin and friend unconditionally.\"\n\nTeresa nodded, and I noted that she was introspective, and almost emotional. I dismissed her to her duties. Time for sentiment was over; I had work to do.\n\nPart 12 - Ginning Up Trouble\n\nTuesday, August 15th. At 8:30pm, the Town & County Council ended the public meeting and retired to their private chamber to get some real work done... well, that was the intent, anyway.\n\n\"Can you believe what Troy did?\" asked Kelly Carnes as they sat down at their usual places around the table. \"He actually went into the Federal Building and beat the crap out of an FBI Agent!\"\n\n\"Word I have,\" said J.P. Goldman, a University Regent as well a Council Member, and a very powerful man in these here parts, \"is that it was directly related to Professor Milton's beating.\"\n\n\"Did Troy resign as FBI Consultant?\" asked Thomas P. Cook, his voice sounding hopeful. \"Because if he did, then his contract with us is ended... and we will not be reinstating it.\"\n\n\"Tough luck, Cook.\" said John Colby. \"The SBI part of that contract is still valid; ergo, the whole contract is valid. And Special Agent in Charge Muscone says that Troy and Ross are still listed on the FBI's books as Consultants, so the contract is fully valid.\"\n\n\"All right.\" said the Mayor. \"Let's get down to business. Old business?\"\n\n\"Where are we on the chain-of-command structures for the Police Force?\" asked Ian McGillie.\n\n\"Still in Committee.\" said Thomas P. Cook. \"And I'll be bluntly honest with you, Mr. McGhillie... it's going to stay there for at least another month or two.\"\n\n\"Why?\" asked McGhillie. \"It needs to be resolved, and the sooner the better.\"\n\n\"It can wait until October.\" said Kelly Carnes. \"We'll implement it when we do all the awards, promotions, and such for November 1st for the Public Safety Department.\"\n\n\"That is not acceptable.\" said McGhillie. \"The Police need for this to be clarified now. We are being neglectful of our duty to our Police Force by leaving this issue hanging, and unresolved.\"\n\n\"Okay then,\" said Thomas P. Cook. \"What's your answer, McGillie?\"\n\n\"Accept Commander Troy's recommendation and pass it forthwith.\" said McGhillie.\n\n\"No way in hell that happens.\" said Carnes. \"Either we say the Deputy Chief is Acting Commander in the Commander' absence, or nothing happens for two more months.\"\n\n\"Why is the two months so deadly important, Mrs. Carnes?\" asked Dagmar Schoen. \"Mr. McGhillie is correct: we should do our jobs on behalf of the Police Department and resolve this now.\"\n\n\"So you support the Deputy Chief being Acting Commander, with full authority over the Captains of Detectives and Operations, in the Police Commander's absence for any reason whatsoever?\" asked Thomas P. Cook.\n\n\"Considering that the current Deputy Chief cannot command her way out of a paper bag, much less lead others, of course not.\" said Dagmar.\n\n\"It's not your way or the highway, either, Cook.\" said John Colby, his baritone voice cold and menacing. \"We should be resolving this, and now, and with something acceptable to the majority of the Council as well as the Police Force, not just your way or no way at all. That's a false choice, and I'm calling you out on it.\"\n\n\"Mr. Mayor,\" said Cook, red-faced with fury, \"this is not a Committee meeting. As a point of order, I suggest we move on with proper Council business.\"\n\n\"Okay, any new business?\" asked the Mayor, eager to move on.\n\n\"Yes.\" said Malinda Adams. \"I move, and this is formal, that Commander Donald Troy be suspended without pay indefinitely, and the process to terminate him be implemented immediately.\"\n\n\"Sheesh.\" said Edward Steele.\n\n\"Why?\" asked the Mayor.\n\n\"Commander Troy is a misogynist.\" said Malinda Adams. \"He hates women and makes it obvious. He discriminates against women. A woman was raped in this County, and Commander Troy not only opposed charging the thug that raped her, but is trying to blame it all on the victim herself.\"\n\n\"Let's be accurate, here.\" said Ian McGhillie. \"Commander Troy is investigating all aspects of this case, which is appropriate for him to do.\"\n\n\"Why?\" thundered Malinda Adams, her voice malignant with hatred. \"A woman gets raped, then she's blamed for it. You men are so typical. You're all thugs.\"",
        "\"Watch your mouth, Adams!\" Edward Steele thundered, the ugliness of his voice matching Malinda's. \"I take your remark personally, and as defamation. Say that again, and I'll haul you into Court.\" The air was thick with tension as Steele and Adams stared each other down.\n\n\"Okay, okay,\" said the Mayor, wondering how all the Council's meetings dissolved into acrimony so quickly, \"a motion is on the table. Is there a second?\"\n\n\"I second the motion to suspend Commander Troy and begin the termination process.\" said Kelly Carnes.\n\n\"I move to lay it on the table.\" said Thomas P. Cook.\n\n\"By the rules of order, we must vote on that immediately.\" said the Mayor. \"All in favor?\" To the stunned consternation of some, the vote was 6-5... Carnes, Adams, Cook, Michaels, and Lewis voted for it, and the Mayor voted for it to break the tie.\n\n\"Okay, anyone who voted for the measure to lay it on the table can bring it back up at a later time.\" said the Mayor...\n\n* * * * * * * * * * * * * * * *\n\n\"I can tell you one thing.\" said Jack Muscone, who was in the meeting with the DepDirector and Martin Nash. \"Professor Marvin Milton, his son, and his daughter-in-law were not the ones that leaked that last batch of GOJ documents. He's in the hospital, and they are with him... and Myron has not touched a computer in a couple of days, now.\"\n\n\"I agree.\" said the DepDirector. \"The Miltons are pretty much off the list of suspects, now. And the latest GOJ dump named the other suspects in the area, and then went and named Commander Troy, too... even exposed what Casey B. Walker did to him. That's going to cause the the CIA problems. So... any ideas at all who is doing this? The Grassroots politicians, the TEA Party types, are really making hay of this. I'm not unsympathetic to the truth about some stuff coming out, but at the same time good people are getting mud splashed on them along with the bad apples.\"\n\n\"Last night's batch came out of State Tech as the primary point source.\" said Muscone. \"That suggests to me someone with access to all of this State's various Institutions of Higher Education. Or it could be a professor with sympathies towards Milton. What do you think, Martin?\"\n\nNash said \"W-W-I-C-D. What would the Iron Crowbar do? To solve this, I mean. I'm trying to think like he would, and I'm seeing two things: first, I don't think this is just one person. Someone is getting this information. Someone is putting out this information. They may not be the same person, but multiple people working as a group.\"\n\n\"That's a good thought. What is your second observation?\" said the DepDirector.\n\n\"Sir,\" said Nash, \"I've noticed a pattern in what is being released, which the Press is trying to suppress. At first, it was BigAgraFoods and Government plots to control food. The Iron Crowbar and we in the FBI were looking into that while interdicting Superior Bloodlines. Then came the gun-rights issue, which really gets people riled up, and therefore got people's attention... and maybe a distraction to other things. Then we had continuing releases that hint at the Wheeler murder and its cover-up. And after the Milton assault, another release suggesting the Government was or is targeting specific people. The leaks seem to follow storylines either happening with the Iron Crowbar, or things that will get people's attention and get them riled up.\"\n\n\"Keep that up, and someone is going to try to give you a crowbar... and not the way they gave Fox one.\" said Muscone.\n\n\"That is another issue. Dana Fox.\" said the DepDirector. \"The top brass in D.C. was okay with the way I handled that. But a lot of Agents did not like it at all, and want something done to the Iron Crowbar over it. They also are voicing objections to his continuation as an FBI Consultant, and want us to formally end the relationship.\"\n\n\"I've been telling people it was an Agent-on-Agent issue, and an internecine fight.\" said Muscone. \"That shuts them up a little bit. I ask those that still complain if the Iron Crowbar was right to take up for two of his Police Officers over an attack on their family. That usually shuts the rest of them up.\"\n\n\"You can't tell the whole nation that, though.\" said the DepDirector. \"And we also have the problem of what to do about Team Lazarus. You have no idea how close you are to being broken up and reassigned to the four corners of the Nation.\"\n\n\"Is it that bad?\" asked Nash.\n\n\"Yes.\" said the DepDirector. \"There's a push for it from the Dana Fox supporters.\"\n\n\"Damn.\" said Muscone. \"I also heard about a vicious yelling match between Captains Ross and Croyle this morning. This rape case is tearing all of them apart... and it's not doing much for the FBI, either. Someone has done a huge number on all of us.\"\n\n\"Who is that 'someone'?\" asked the DepDirector.\n\nMuscone replied \"A certain redheaded hand grenade with a crowbar thinks there is one common thread running through every bit of this... a certain U.S. Senator that got away with murder in Polk County by the hair of his chinny-chin-chin.\"\n\n* * * * * * * * * * * * * * * *\n\n\"It starts in the morning.\" said Jay Swenson.\n\nHe was in a hotel suite at the Hyatt City Center Hotel in the City. Also in the room were Ken Eidex, State Rep. Justin Madoff (D), State Senator Maxine Watts (D), State Rep. Wilson Hammonds (R), University booster Tom Riordan, trusted reporter John Hardwood... and Establishment Republican Elitist U.S. Senator Samuel Russell.\n\n\"Good.\" said Russell. \"These Guardians of Justice bastards are just killing us. A lot of my fellow Congressmen and Senators are starting to ask questions that are best not asked. And the Grassroots people are having a field day with the shit the cyber-terrorists are releasing.\"\n\n\"God, I hate the Grassroots!\" muttered Hammonds, but loudly. \"They're supposed to be fucking sheep, and then this GOJ shit starts up and gets them riled up.\"\n\n\"That's what they want, of course.\" said Tom Riordan. \"To gin up as much angst as possible. That's why the CIA murdered Jasmine Nix, too.\" He'd said that to gin up angst with Maxine Watts... and he succeeded.\n\n\"You damn right that's why they did it!\" exploded Maxine Watts. \"Now we got black gangs shooting at each other instead of the white supremacists supporting Val Jared! And speaking of that racist bastard, what are we doing about him?\"\n\n\"We're getting there, Maxine.\" said Hammonds. \"Tomorrow we begin our move against that filthy bastard Don Troy. Once he's neutralized, then we take out Jared and regain full control of the Houses of Government in this State.\"\n\n\"Why doesn't someone just shoot the bastard Troy, like the CIA shot Jasmine Nix in the head?\" asked Maxine Watts.\n\n\"People have tried, Maxine.\" said Tom Riordan. \"Feel free to try yourself. But be damn sure not to miss... he won't.\"\n\n\"We have to do to him what he did to Pastor Westboro.\" said John Hardwood. \"Publicly humiliate him. Publicly destroy him and his worthless reputation. Demoralize the Police, and those loyal to him. And then we can regain control of the Governor's Mansion, then the SBI. Kill him, and he becomes a martyr... and our enemies dig in for a fight. Besides...\" Hardwood became introspective as he finished: \"... I want him to feel pain.\"\n\nEveryone peered at Hardwood, and the abnormal intensity of his last words, though spoken quietly.\n\n\"All right.\" said Russell. \"Apparently Milton was not the one leaking the GOJ material. He's nearly dead in the Hospital. So we've got to find out who is doing that, and put them in the Hospital, or the morgue. My benefactors are very unhappy with this situation.\"\n\n\"Don't worry, Senator.\" Jay Swenson said. \"We're gonna twist the Iron Crowbar's cap around...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "iron crowbar",
        "mystery",
        "police drama",
        "drama",
        "crime drama",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/falsely-accused-ch-03"
}