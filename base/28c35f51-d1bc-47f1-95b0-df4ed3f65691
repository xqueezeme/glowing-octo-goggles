{
    "title": "Educating Hannah",
    "pages": [
        "Author's Note: This story marks a bit of a return to my roots as an author. As always I appreciate feedback. This could be a continuing story if readers like it. All Characters are 18+ \n\nHannah Klein sat in the coffee shop alternating between scrolling through the same Instagram pages she had already seen 100 times that morning and biting her nails. Her back was to the door so that when he arrived he could see the red ribbon that he had asked her to use to tie up her blonde hair, identifying her as the young woman he was supposed to meet.\n\nShe had always been sexually curious, but until recently her age and lack of freedom had kept her from exploring her burgeoning interest in submission and her long standing fantasies about older, more experienced men. \n\nSince turning 20, however, and ascending to her third year at university, Hannah finally felt she had enough space and freedom to reach out. Third years were allowed to live off campus, after all, and she had moved into a studio of her own, insisting to her still financially supportive parents that she did not need nor want the hassle of room-mates, and they had acquiesced.\n\nStill, it took her almost the entirety of the first semester to work up the nerve to join the various dating apps that hoped to match prospective partners based on mutual interests, and then it took her a few weeks to actually attempt to contact anyone whose profile she liked. \n\nFor a while, the thought alone of actually meeting an older man with an interest in guiding her through her submission was enough to let Hannah's hand wander, and her imagination that followed as she thought about what might happen was enough to get her off. \n\nEventually though, she did reach out to a profile she liked, and they chatted through email a few times. He seemed friendly and even concerned for her. Discouraging her from sending him a picture because she did not want her image in digital form tied to a profile that spoke so frankly about her sexual desires. He in turn explained that as a school teacher he didn't want to risk his image being too public either.\n\nThat suited Hannah just fine. She wasn't entirely sure she wanted to make herself known or easily identified. She had even lied to him about her age, claiming to be mid 20s in an attempt to both appear more serious and protect her anonymity. She would wear the red ribbon, and he would be wearing a light blue tie.\n\nThe two of them agreed to meet at a coffee shop. It was a public enough place and a busy mid morning time was chosen. Every time the door to the place opened, it was more than the chilled December air that caused her to shiver. It was only a matter of moments until...\n\n\"Hannah?\" a man's voice questioned as he moved around her table at sat across from her.\n\nHer eyes went wide as she recognized the man across from her. \"Professor Devers?\" the words almost stuck in her throat when she saw her literature professor sitting across from her, \"What are you...\" and then she saw that he was wearing the same light blue tie in the picture her blind date had sent her. \"Oh my god,\" she all but spat out as the realization set in.\n\nSmiling softly, he chuckled, \"Well this is not what I expected. You're supposed to be a 25 year old Office Assistant.\"\n\nHer eyes couldn't meet his, instead she looked in her lap and said barely audibly, \"You're supposed to be a school teacher.\"\n\nHe nodded, \"misleading, I know, but not exactly a lie.\" He was still smirking as he leaned forward and lower, trying to look her in the eye. \"hey, you have nothing to be ashamed of. It's smart to keep your identity a secret as you explore.\"\n\nShe raised her blue eyes a little to meet his, cheeks flaming red as a few strands of her dark blonde hair fell loose in her face. \"I just...\" her hands covered her face as she rested her elbows on the table. With her heart beating fast in her chest she took a few deep breaths and tried to steady herself.\n\nThe young professor, for his part was a bit relieved that the girl was reacting as such, it was a pretty strong barrier to her telling anyone that he had accidentally met a student through a mutual interest in BDSM. It wasn't exactly against school codes, but he knew it would bode ill for his upcoming tenure review to have a reputation as a predator of young female students, even if that wasn't what had happened here. \n\nStill, he felt badly for the young woman, and he reached out and patted her arm in a gesture of comfort. \"Look Hannah, this is all a big misunderstanding. I should just leave and we can pretend this never happened.\" He stood up and then asked, noting the distance from the school, \"Do you have a way back to campus?\" \n\nShe looked up at him and nodded, her eyes clearly wet with the tears she was holding back. Of course seeing her so despondent meant that he couldn't just leave her here like this. \n\n\"Tell you what,\" he said, \"how about I go get us both a coffee and when you're ready, you can leave first. And if anyone asks, we were meeting about an assignment.\"\n\n\"Okay,\" she managed to say, big round eyes looking up at him like a sad little puppy. Mark had never seen anyone so adorable, but he shook the thought out of his head as he went to the counter to order and collect their drinks, taking a deep breath of his own to steady his nerves.\n\nWhen he returned she was better. He handed her the latte he had ordered her and sat across from her again. They both sipped their drinks in the quiet of an awkward silence that Mark was determined not to break first for fear of upsetting her again.\n\n\"So,\" she said finally with a shaky voice, \"Your first name is Mark?\" \n\nHe gave a chuckle as he nodded. \"Yep, it's on the syllabus, but I'm happy if I can get people to remember my last name, which you did, so kudos to you.\"\n\nShe smiled and sipped her latte. \"Have you ever...\" she began and then paused. The words hung in the air and he nervously awaited the direction she would take the question. \"Have you ever met a student before... I mean... like this?\"\n\nA serious look overtook his face and he shook his head no. As he did, the wavy brown hair that, uncombed, just threatened to reach his eyes fell into them for a moment before he pushed it back and out of the way. \"No, and nor would I.\"\n\n\"Oh,\" Hannah replied. He wondered if there was note of disappointment in her voice, and maybe there was, but Hannah's own feelings were so jumbled at the moment she wouldn't have recognized it.\n\nThe silence descended again and as much as he wanted to know what led her to this place, to this meeting, to seeking out a lover in the way she had, he also knew that would not only cross many lines, but also put the poor girl under the spotlight. No, the entire point now was to make her comfortable enough that this just becomes a funny story she tells much later in life and not a traumatic experience she seeks therapy over.\n\n\"I think...\" She began looking at him confidently for the first time. He was attractive, there was no doubt about that, she had thought that the first time she saw him when she entered his classroom. Now, sitting across from him in the awkwardness of this situation, now that she had revealed herself to him in her desires, at least partly even if by accident, questions came to mind about what kind of lover he might make. \n\nQuickly, she put those thoughts out of her head and said, \"I think I should go now.\" He stood up with her and suddenly she was aware of how her eyes only came to his chin, and how perfectly her own slight frame fit within his fully formed and apparently well-toned physique.\n\n\"Well I guess I'll see you in class.\" and he reached out and put his hand on her shoulder as he walked toward her, guiding her to the door, letting his hand slide to the small of her back as they left the coffee shop. No doubt, it was a gesture far too intimate for Professor and student, but he couldn't help taking the young woman in his hands and guiding her, just as she couldn't help acquiescing to the guidance.\n\nReaching the door, she slipped on her coat and hurried to her car while he watched her leave. Shaking his head with a small chuckle, he let out a sigh of relief that this encounter was over, but he also had to admit that she was exactly his type. He had noticed the small curves of your her youthful body beneath the thin fabric of her dress, and how she had worn just the right amount of makeup on her lips and eyes, even if crying had altered the effectiveness of it. \n\nMark made his way to his car, thankful for both his self-control and the fact that the semester was almost over, and Hannah would soon move on from his life forever, and with her, the impact of this incredible coincidence.\n\nReturning to her small apartment, Hannah flopped down on her bed and let out a sigh steeped in relief and frustration. Why did her life have to be so complicated? What were the chances that not only would she connect with someone from the college, but her actual professor? \n\nJust as Mark had, Hannah gave thanks the semester was almost over. Her final paper for Professor Devers was due in a week's time and that was all she really had remaining. As there was no final, she didn't really even need to attend the next class, just the final one in order to hand in her assignment. She decided then and there to skip it.\n\nStill though, as she lay back on her bed thinking through the events of the day, she had to admit that she was proud of herself. She set up a meeting with a guy based on her own interest in exploring her submissive side and she went through with it. \n\n\"Too bad it was my professor,\" she thought to herself, and as she did the flush of embarrassment washed over her. She had felt so exposed in front of him, so naked. It was mortifying, but... Her hand rested on her thigh and she began to wonder if he only saw her as a student, or if he had looked at her as something more. \n\nBending her knees as she lay there, the free flowing material of her dress slid up her legs and bunched at her waist. Her fingers began lightly stroking the soft flesh of her inner thigh. \n\n\"Professor Devers,\" she said aloud and then followed with an almost playful, \"Mark.\" But as her fingers trailed higher on her thigh and her hand came to rest on her panty covered sex she whispered, \"Sir,\" and let out a soft sigh.\n\nAs her slipped inside her panties and covered the smooth flesh of her mound, the image of his smirking smile shot through her, and her body remembered how vulnerable and exposed she felt. When her slender finger dipped inside the folds of her flesh, she wasn't surprised to find herself already wet. She had known even in the coffee shop that she was responding to being so on display and for her professor! \n\nShe repeated the thought over and over as her finger ran circles over her swelling clit. Her professor knew she was submissive, sat across from her thinking about what he would do to her. What would he do to her? Would he strip her naked? Examine her like a piece of meat? Show her off in public? Spank her? Would he have her in his office? Demand her mouth in his classroom? \n\nHer hips bucked against her hand as she brought herself closer and closer. With her free hand she gave her small breast a squeeze while her fingers sought out her nipple and gave it a slight tug through the material of her dress. Then she did what she always did when she wanted more. She reached up and snaked her fingers into her own hair and grabbed it snugly, as if it were being pulled, as if she were being manhandled. \n\nThis time, however, as her fingers gripped her own blonde locks she felt the red ribbon in her hair. The red ribbon she had worn for him, at his instruction, in order to reveal herself to him. Professor Devers... Mark... Sir... And her body convulsed in orgasm as her moans echoed into the empty room.\n\nFor his part, Mark Devers alternated between imagining his young student in positions as his new submissive sex partner, and chastising himself for being so careless as to end up on a date with a student. In the future he would need to be more direct, and simply ask if potential partners were in any way, shape, or form a student. A simple, \"What do you do?\" would not suffice. \n\nThe afternoon slipped into evening, and evening into the next day. Mark threw himself into the work that accompanied the final few weeks of the semester in order to redirect his mind to something more productive than the litany of \"What if?\" scenarios that ended both in sexual bliss and unemployed pariah.\n\nEventually he couldn't help himself as he logged into his private email account and reread his exchanges that led up to his meeting with Hannah. She had contacted him first, in an email that was both shy and far too bold. The kind of bold that made him know that she was forcing herself to be as forthright about her desires as possible because it was the quickest way to get through announcing them. Her email read:\n\nDear Sir:\n\nI am a young woman of 25. I have some sexual experience but have recently decided that I need to explore my submissive side. I think I would like to be spanked and possibly tied up. Your profile said you are a man of some experience in these things. Would you be interested in helping me learn about myself? \n\nhanna \n\nIn rereading Mark noticed a couple of things. Of course there was the lie about her age, but that he already knew. No, he noticed that she signed her name in lower case, and left off the palindromic final h, in what he assumed was a misplaced attempt to keep her true identity from being easily discovered. \n\nHe had slowed her down in her eagerness, opting to get to know her through emailed questions a bit first, and offering her the caution of not being so eager to meet strange men on line just because they wrote decent profiles. Mark pegged her as na\u00efve right away, and a strong feeling of sympathy for the poor girl who was struggling with feelings of submission she wasn't quite comfortable with but could no longer keep inside. \n\nYes, he wanted to help her. To teach her. Everything about her appealed to his greater sense of self which was so bound to his role of educator. After all, that is what being a Sir meant to Mark, it meant taking on the responsibility for guiding and instructing a woman to reach her full potential as a woman, and that meant more than a quick spanking or a rough blow job. It meant teaching her who she could be and helping her get there. Introducing her to new experiences at a pace that she could handle. To push her boundaries without breaking her mind. Hannah was eager, and far too many so-called dominate men would use that as an excuse to abuse her. \n\nMark chuckled to himself as he thought this through. Was he really sincere in thinking what he was thinking? Was he really talking himself into pursuing her, despite being his student, for her benefit? He wasn't sure, and the fact that his cock grew hard while he thought about her mix of naivete and eagerness wasn't helping him get clarity. \n\n\"Control begins with self control,\" Mark sighed as he pushed himself away from the computer, closed the email files and poured himself a stiff drink even as he allowed his erection to recede. He would see her in class tomorrow, and his reaction to seeing her, as well as her reaction to him, would tell him everything he wanted to know. He would wait for satisfaction at least until then, when he decided whether or not to take on the young woman.\n\nOf course, when Thursday's class came around, Mark looked around the room and noticed her chair was empty. He wasn't entirely sure how to take that. Was she still upset about their chance meeting? Was she simply avoiding him? Or was she blowing off a class at the end of a difficult semester in order to give herself some room to breathe? \n\nHe went about his lecture without too much of a second thought for Hannah, though occasionally his eyes drifted over her empty desk and the sudden shock of adrenalin caused him to lose his thought mid sentence. \n\nReturning to his office, Mark opened his private email account and again reread some of the correspondence he had with his young student. He typed out a few different messages to her, but thought better of it. He needed to see her respond to know how far he could take things, to see how she was responding. Plus, it wouldn't do to have too much in writing. \n\nAgain he went home and tried to put her out of his thoughts. Again he found himself confronting his own arousal, and again he demonstrated to himself the trait that made him so good at controlling others, self-control. Whatever pleasure thoughts of Hannah offered would have to wait. \n\nAnd wait it did. Through the long weekend both had more or less put the encounter out of their minds, but as Tuesday would be the final class of the semester, they were bound to see each other one more time.\n\nHannah was cognizant of appearing before her professor when she dressed that morning, and instead of adopting the usual jeans and sweatshirt approach, she decided to show off a little of what Professor Devers would be missing out on now that they had decided to go their separate ways and forget about their chance encounter. \n\nShe opted for a pair of black tights under a knee length, strait plaid skirt, with a long sleeved, white top with peter pan collar. And while she often didn't bother wearing make up to class, she decided to give herself a light touch, doing her eyes and painting her lips a soft pink. \n\nAs she checked herself in the mirror, she couldn't help but smile. She knew this outfit made her look ridiculously cute and conjured up images of the innocent school girl without overtly being so. A previous boyfriend had told her every man walking by her would give her a second look in this outfit, and she knew he was right. \n\nFor a moment she debated whether it was right to tease her professor in this way, given how kind he had been at the obviously disastrous mix up, but then she shrugged off her doubts. It was the last time she was likely to see him, after all, at least in any meaningful way, and what better way to regain her confidence heading into the winter break?\n\nOf course when she walked into class and slipped off her coat, he noticed. She offered him a suddenly shy smile, feeling a bit weak kneed at how his eyes had settled on her in a way that was quite inappropriate for a professor to look at his student. \n\nWithout acknowledging him with more than a glance, Hannah took her seat, smoothing her skirt as she did. She didn't want to tip off to anyone that there was anything between them, even though there had been nothing between them, not really, just emails discussing desires and experiences. \n\nFor his part too, Mark didn't want to tip off his own attraction. Nor did he want to make clear to everyone that not only had she dressed to catch his eye, but that he knew she had, locking them in a game of escalating stakes.\n\nAs class began, Mark went about his work professionally without the slightest hint of the discomfort or excitement he felt at the move made by his student, and as he moved through the rows of desks, collecting final papers, he paused as he took hers. \n\n\"Miss Klein,\" he said almost absent mindedly taking her paper, \"I need to see you after class, if you are able.\" \n\nA lump formed in her throat as her heart beat sped up. \"Ok,\" she said haltingly, and then added, \"Sir.\"\n\nMark couldn't suppress a smirk as he moved on through the row, collecting other papers. Had she added the \"Sir\" intentionally as a signal of her desire to escalate, or was she just so readily submissive that such honorifics come naturally. Certainly the typical university student wouldn't bother addressing him or any professor with such respect. \n\nBeing the final day, Mark kept class short, engaging in casual conversations about what students would take away from the class, and what they thought might be improved for future classes. Hannah stayed mostly silent, lost in thought about what her professor would want to discuss with her. She thought they were putting everything behind them, behaving as if nothing had happened, and now he wanted to talk to her. ",
        "She wondered if she had pushed things too far by dressing up for the final class. More than that, she wondered why she was suddenly so aroused. \n\nShe watched him as he interacted with the students. He was handsome, she had to admit. Mid thirties, a flop of brown wavy hair that fell just below his ears and was always threatening his hazel eyes. His melodic, but confident voice to go with his obviously strong hands. \n\nShe was fading into fantasy when suddenly she realized that her classmates were packing up and leaving. Was that it? Her heart beat faster in her chest as she sat nervously waiting for the room to clear before approaching him. When she finally did, she held her bag guardedly with two hands in front of her, blocking his view of her skirt and legs.\n\n\"Sir,\" she said, head lowered but eyes on him, \"You said you wanted to see me.\"\n\nMark took a deep breath and steadied himself. He was about to cross the Rubicon with this young woman and he had a moment's debate about whether he wanted to go through with it. As he saw her standing meekly in front of him, her emailed desire flashed through his mind, and he committed to putting himself on the line.\n\nShe watched as he walked to the classroom door and closed it. Being on the third floor of the classroom building, at the end of the day on the final day of classes before break, no one would wander by, and if they did they wouldn't pay the closed door any mind whatsoever. The university was already a ghost town, and only becoming more so. \n\nAs he turn to her from the doorway, he said calmly, \"You skipped class on Thursday. Did you think I wouldn't notice?\"\n\nIt wasn't quite what Hannah expected, though honestly she didn't know what she expected. \"Yes, but it was the next to last class and there wasn't an exam, so...\"\n\n\"So you thought you'd disrespect me by simply deeming my class not worth your time.\" He finished her sentence.\n\n\"No,\" she said, suddenly defensive as he approached, \"No I love your class, I just didn't think...\" \n\n\"No,\" he interrupted her again, \"You didn't think, did you?\"\n\nHer eyes were moist and her pink painted mouth was parted in surprise at his sudden sternness, she hadn't imagined Professor Devers would respond to any student this way. \n\nMark continued, \"I see now what you meant when you told me that you felt yourself in need of discipline to become the best possible version of yourself.\"\n\nShe recognized the words she had sent to her anonymous coffee date and knew in that moment that her professor was testing whether she wanted to reconsider their relationship now that class was ending. At the realization every part of her tingled, and her mouth went dry. She knew she could walk out of that room, and he wouldn't stop her. She also knew if she stayed, then she would be his.\n\nHannah lowered her head and replied, \"Yes Sir, this is what I meant.\"\n\n\"Such behavior on the part of a promising young woman such as yourself is not to be tolerated,\" Mark walked toward her, reached out and lifted her chin with his forefinger so her eyes were on his., \"You need to be punished.\"\n\nShe swallowed hard and nodded. Although nervous at what he might possibly mean, she was also more aroused than she had ever been in her young life.\n\nSlowly he circled behind her as she tried to be remain still and keep her lowered eyes on him. When he moved behind her he placed his strong hands on her narrow shoulders, and Hannah felt his hot breath on her neck.\n\n\"Lean forward and grip the edge of the desk,\" Mark whispered into her ear, his hands easing her forward, encouraging her to bend at the waist.\n\nHannah hesitated, did he really mean to take her here, in the classroom? It was quiet but anyone could walk in. Her voice trembled as she tried to communicate her concerns. \"Sir?\"\n\nMark ignored her doubts as he guided her forward until gravity and balance forced her to reach out and grip the edge of the desk as instructed. He ran a hand down her back as he moved to her left, taking in the feel of her petite frame until his hand slid down over her skirt and gave her ass a squeeze.\n\n\"Did you wear this for me, today?\" He asked her as his hand lingered inappropriately. \"Did you hope I would notice?\"\n\nHannah let out a little moan. \"Yes Sir,\" she admitted, feeling more vulnerable and exposed than ever even though she was still fully clothed.\n\nLeaning in Mark whispered in her ear, \"Well, I noticed.\" and he let his hand slide lower to the hem of her skirt, onto her thigh and then up the inside of her leg, pushing the skirt up with it. The edge of his hand pushed against her tights with her panties and sex beneath and slid along along her and up over her ass. When the movement of his hand had finished, her skirt had been pushed up to her slender waist.\n\n\"Now,\" he added in a clear and commanding voice, \"Count.\" Before she had time to process what that meant, he brought his hand down on her upturned ass, still bound in tights, such that it made a muted smacking sound in the room. \n\nShe suddenly sucked in a breath and the feel of the sting of it and gave a little whimper, almost forgetting herself, but she quickly recovered enough to say, \"One, Sir.\"\n\nHe brought his hand down again, a bit harder this time and he watched her lurch forward, relying on her grip on the desk to keep her in position as she again gave the count, \"Two, Sir.\"\n\nHis hand lingered on her still covered ass, and he said, \"I'm sorry, Hannah, but this just isn't right.\"\n\nAt his words her heart sank in disappointment, had he changed his mind? Had she done something wrong? She felt more exposed than she ever had realizing suddenly how insane it was to receive a spanking from her professor in the classroom where he taught her. \n\nShe made a move to stand but before she could she felt him behind her, his hands on her hips under her skirt, fingers finding the waist of her leggings and panties and adeptly pulling them down to her knees, exposing her fully to the vacant room.\n\n\"Oh god,\" Hannah couldn't help the phrase escaping her lips as she felt the cool air on her bare skin. \n\nMark leaned over her and breathed into her ear, \"All spanking should be done directly on flesh.\" \n\nHannah shuddered, letting a little moan escape her lips just before Mark brought his hand up and back down on her bare flesh. A loud stinging slap echoed in the room as Hannah let out a yelp before counting the number.\n\nHe alternated cheeks, slap after slap against the soft flesh of her buttocks. Letting out yelps and squirming under him, Hannah never failed to count, even as the number grew higher and her professor's palm impacted more intensely. \n\nShe sucked in air through her teeth and held back any exaggerated wailing, but his hand stung and she knew she would be feeling this spanking for a few days. More than the pain, however, Hannah felt electric, aware of herself in ways she never had been before. \n\nShe was aware that her nipples had grown hard and erect and rubbed against the fabric of her bra each time she lurched forward from the impact. Aware of the way her leggings trapped her legs at her knees, making her feel vulnerable and keeping her constantly aware of how exposed she was. Aware of her own growing arousal which Mark seemed to ignore in favour of the discipline he offered for her missing class.\n\nHannah desperately wanted him to touch her, to take her, to claim her. She wanted and expected her professor to lose control and fuck her exposed and willing body right there in the classroom. With each slap, her anticipation grew.\n\nFinally Mark's hand came down on her reddened, enflamed ass, and she all but moaned, \"Twenty-five, Sir.\" while she panted and squirmed trying to provide herself the friction she desired to no avail.\n\n\"I think that's enough for today,\" Mark said, his hand lingering on her smooth backside, the alabaster flesh turned angry red by his touch. She whimpered at his words and moved her hips trying to bring his hand to where she wanted it.\n\nGiving a small chuckle, Mark asked, \"Oh, were you hoping for release?\"\n\nShe nodded and her blonde pony tail bounced as she did. \"Please, Sir,\" she begged meekly.\n\n\"You'll cum when you've earned it,\" Mark explained pulling his hand away. \"Now pick yourself up and pull up your tights.\"\n\nConfused by his control, Hannah whimpered in frustration but did as she was told. She kept her eyes on the floor as she tugged her tights and panties back into place under her skirt, more aware than ever as to how wet she was. \n\nEmbarrassed and not quite knowing what to do, she stood there, head bowed, hands folded in front her, cheeks burning a bright red with desire and mortification.\n\nMark reached out and brushed a stray lock of hair from her forehead that had escaped her pony tail. She lifted her eyes to his and saw the steely eyes of a man in control. \n\n\"If you want this to continue,\" he explained calmly, \"then the first rule is that your orgasms belong to me.\" He paused for a moment as confusion washed over her face. \n\n\"I know how aroused you are, and I know what you want,\" he continued, \"but you are not allowed until I give you permission. If you leave here and make yourself cum without it,\" he warned, \"then this will be the only moment for us.\"\n\nHannah's brow furrowed as his words sunk into her understanding. How could he expect her not to get herself off after that? She wanted to whine like the teen she so recently was about how unfair he was being. She squirmed where she stood and instead of giving into her desire to beg and plead she said simply, \"I understand, Sir.\"\n\nHe took her phone and used it to send himself a text. \"There, now you have my phone number,\" he explained, \"I want you to call me tonight at 9:00, and not a minute after. If you have disobeyed, then I'll know.\"\n\nShe nodded in a haze of need, not quite understanding. Mark, however, collected his things in his briefcase and slid on his overcoat. \n\n\"I think we can be good for each other, but you have much to learn,\" He smiled as he paused at the door, \"But then again, I am a teacher so you're in luck.\" And as he left he called out, \"Remember, nine o'clock.\"\n\nHannah was left standing alone in the classroom, cheeks still flushed red, still aware of her need. She glanced around and walked back to her desk, legs trembling, thoughts scattered. Hannah had always assumed that submission led to sex, that the Dom would be so aroused as to be unable to deny making use of her for his pleasure, which she would allow, but Mark was so... in control. It was herself that was coming undone, grateful for his firm hand. \n\nShe knew without his command to abstain she would have considered getting herself off right there in the empty classroom. Now she didn't want to disappoint him, and more than even her own release, she desperately wanted more of him.\n\nWith those thoughts she left the room and walked the empty halls and grounds back toward her apartment, aware of what was left undone with every step she took. She turned her eyes from the few people she passed, afraid they would see her desire in them and misinterpret it. The few college aged boys she encountered glanced at her pretty figure, short skirt and leggings still catching every eye. Would they have Professor Devers' restraint? No. Of course not. They were boys who only saw their own need. Professor Devers was a man. He saw her for what she wanted to be. What she needed. The thought made her shiver more than the December air. \n\nWhen Hannah returned to her apartment she tried to concentrate on anything other than what just happened. She wished she had a girlfriend she trusted enough to call and tell her all about it, but she couldn't imagine which of her friends would keep such a secret, let alone not judge her for letting her professor spank her bare bottom in a classroom.\n\nInstead she sat on her bed and tried to pay attention to the many different social media apps on her phone. As she did, she found her free hand lazily touching various aspects of her body. The exposed skin on her other arm, for a start, her neck, the slope of her breast. \n\nWhen she caught what she was doing, she suddenly stopped, wary of the increasing electricity flowing through her unsatisfied body. She thought of his command that she wasn't allowed to cum until he allowed her to. \n\nHis command. She suddenly had a Sir and he was giving her commands. The thought made her ache with need. Hannah wanted to be good, but she squirmed on her bed suddenly reliving the events of the morning in her mind.\n\nShe rolled over onto her stomach so she could reach behind her and rub her still stinging ass. Hannah had meant it to be a motion of comfort, but she suddenly couldn't resist lifting her hand and bringing it down on her own ass in a pantomime of Mark's discipline.\n\nBending her knees slightly she raised her ass up on her bed and slapped her own ass again, before rolling onto her back and reaching between her spread legs to rub herself through her tights. Her hips pushed up into her hand, while somewhere in the back of her mind a voice was pleading with her to stop, to be good. \n\n\"How will he know?\" the more desperate voice demanded. \"He'll never know...\" Hannah slipped past her own defenses, past her own desire to be a good girl and humped her hand with a desperation she had never known.\n\nJust then her phone pinged, and then pinged again. It was like an alarm clock waking Hannah from her lustful stupor. She forced her hand away even though her hips still thrust at the air and reached for her phone.\n\nTwo texts from the same number appeared. \n\n\"I know what you want.\" The first said.\n\nThe second simply read, \"Don't.\"\n\nReading the texts her heart was racing. How did he know? He did know! The realization made her both more aroused and more determined to follow his direction. She felt so exposed, as though there were cameras in her room, but the thought passed, replaced with the realization that Mark just knew her. And that thought alone threatened to send her over the edge.\n\nNeeding the distraction, Hannah quickly threw on her coat, grabbed her bag, and headed out. At least being in public would keep her hands from straying even if her mind kept replaying the feeling of being exposed in the classroom, or even if she kept reading those two texts over and over. \n\nExams were finished for Hannah, so she tried to fill her time with the idleness of the internet, Instagram and Twitter. All the while glancing at the time as she scrolled while sitting in the coffee shop. Why did he have to set the time so far in the evening? As she squirmed in her chair, she wasn't sure she would make it until 9:00.\n\nMark was having his own trouble concentrating. While some of his distraction was down to arousal at the replayed memory of exposing the young coed in his classroom and giving her the first taste of submission, the greater part was owed to his chastising himself for being so reckless as to handle the girl in his classroom. \n\nSure the hall was empty, but anyone could have seen. The doors in the classroom building didn't even have locks, and now he wasn't sure if he even bothered to shut the door. Maybe someone did walk by. Maybe a report was being filed right then. \n\nNo. That was his imagination, his anxiety. He took a deep breath as he tried to focus on grading the papers he had just collected. His mind was filled with the sounds of Hannah's whimpers at the smack of his hand on her bare ass. The way her smooth flesh had felt on his fingers. \n\nHe glanced at his watch, Hannah would be home by now. He wondered if she would obey him or if she would immediately give in to her need. Throughout his class she had presented as an overachiever, one of the eager to please students who live for the approval of the professor's they admire. Such a girl would surely want to obey. \n\nThen again, he could see her arousal from the spanking, and the almost painful expression of need in her eyes as the realization set in that he wasn't going to use her to completion. She might need some reinforcement, so he sent the text. \n\nOf course this too was dangerous as it created an electronic record of their relationship which wasn't exactly proper. But this, unlike the spanking he gave, was a calculated risk. She was worth it. He saw great potential in her and was going to see it through, no matter where it led.\n\nReturning to grading, he regretted that he had another commitment that got in the way of his explorations with Hannah, but he was loathe to call it off as it had become something of a tradition. The last day of classes, drinks with his colleague from the physics department, Dr. Caroline Moore, which often led back to her place.\n\nAt seven he met her at the University Club, a posh little establishment open only to faculty and distinguished alum. She was waiting for him at a small table near the fireplace, the warm wood interior of the club reminiscent of a hunting lodge without the taxidermy. \n\nAs Caroline stood to greet him, he took her hands in his and leaned in for the customary greeting of a kiss on the cheek. She was almost as tall as him, at least in the three inch heels she always seemed to be wearing, and the flicker of the fire from the fireplace glinted off of her glasses obscuring her deep brown eyes. Mark signalled to the waiter for a whiskey.\n\nSmoothing her pencil skirt before retaking her seat she smiled and asked, \"So, Mark, the semester end well for you?\"\n\nSliding into the chair opposite her, Mark shrugged, \"I suppose it did, I'm just glad to almost be done... still a pile of grading you know?\"\n\n\"My students' labs were done last week, so I have some minimal bookkeeping, but no stack of papers.\" She took a sip of her drink, wrapping her red lips around the straw that led to something fruity in a tall glass. Her eyes never left his and the flirtation of it all made him smile.\n\n\"Honestly Mark,\" she said leaning over the table, \"I'm not sure why you ever insist on drinks, you know you could just ask to meet at my place.\"\n\nHe gave a chuckle, \"Oh Caroline, you know this isn't only about that... fun as it is.\"\n\nShe gave him a queer look, \"You met someone, didn't you?\" When he gave a little, non-committal shake of his head she pressed, \"You did... don't worry, you can tell me. I'm not the jealous type.\"\n\n\"It's nothing, really,\" he half admitted, \"I mean, it might lead to something, but, I can't really talk too much about it, there's not much to say.\"\n\nCaroline's body language changed into a defeated shrug. \"Well I can't say I'm not disappointed,\" then leaning in so she could whisper, \"Sir.\"\n\nMark had met Caroline at the new faculty orientation when they were first hired seven years prior. They had immediately hit it off sharing a similar wicked sense of humor and a general disdain for the stupidity of University administration demands.\n\nOf course they had dated for a while, but they realized very quickly that despite a certain sexual chemistry, including compatible interests in domination and submission, Caroline lacked Mark's dedication to order and preferred to live in chaos. As a result, they drove each other crazy if they spent too much time together. They were able to remain friends, however, and occasionally enjoyed the benefits that come with such friendship.\n\n\"So who is she?\" Caroline asked, resigning herself to the idea that this was now a friendly drink and likely nothing more.\n\nMark shifted uncomfortably in his seat. \"Well, I...\"\n\n\"Oh my god,\" she whispered, \"It's a student, isn't it?\"\n\n\"Shh, Caroline!\" Mark's eyes went wide as he leaned in. \"We met on a dating site, I didn't know.\"\n\nCaroline shook her head, \"Mark, you have to be careful. You're both adults but these things go very wrong quickly.\"\n\nHe nodded in agreement as he sipped he whiskey. \"Why couldn't you just learn to use a hamper?\" he chuckled.",
        "\"You could have learned to accept the mess.\" She countered with a half smile. \"So,\" Caroline continued, \"Is she... I mean, does she...?\"\n\n\"She wants a Sir, yes.\" Mark answered the hanging question, \"But she's never had one. Do you remember how you learned you were submissive?\"\n\nCaroline let a small chuckle escape her lips as she thought back on her own experiences. \"Well I was always bookish, you know, and that came with a lot of self confidence issues. I had dated of course, but never anything serious, and then as an undergraduate, I was chosen to work on a professor's project, and one of the graduate assistants, he was just everything I wanted, smart, athletic, confident. He says to me, 'You and I should go on a date. I'll pick you up tonight at seven. Wear a dress.'\n\n\"I should have been terribly offended,\" She continued, \"He didn't even ask, he just told me what was going to happen and even what to wear. And instead of being offended, I was so turned on.\"\n\n\"So what happened?\" Mark asked.\n\n\"Well, we went out, he didn't even try to touch me and I would have let him,\" she explained, \"But he didn't, and that drove me more crazy.\n\n\"Instead he dropped me off at my dorm, kissed me very chastely on the lips, brushed a lock of hair out of my eyes and tucked it behind my ear. Then he said. 'I like your hair, you should wear a ribbon in it tomorrow, and I'll know it's for me.\"\n\nMark chuckled, \"I bet you did, too.\"\n\nNodding eagerly, Caroline drifted into memory, \"I swear, tying that ribbon in my hair the next day was more erotic than anything any boy had ever done to me at that point. And it just kept on like that, him giving me little tasks and me eagerly completing them until I was so worked up and ready that when he finally did touch me I near exploded. But that's when he spanked me for not having permission.\"\n\nCaroline paused for a moment, deep in her own thought, \"Sometimes I think my own interest in submission is just trying to recapture those early feelings of excitement, trying to relive this experience where everything is new, even my own arousal.\"\n\nLeaning over the table again and taking Mark's hands, Caroline looked into his eyes and almost pleaded, \"Whatever you do, be careful with her, Mark. What you do will etch into her soul and stay with her forever.\"\n\nFinishing her drink, Caroline stood and said with a smile, \"Well, it's still early, and if you're not going to take advantage of me, maybe I can find someone else who will.\"\n\n\"Thanks, Caroline, \" Mark offered as he stood and kissed her cheek. \"We'll talk soon.\" As she left he glanced at his watch, it was almost time to talk with Hannah.\n\nIt was 8:30, and Hannah couldn't stop fidgeting and pacing her small studio apartment. She was as nervous as she had ever remembered being for a date. If a simple phone call should be considered a date. She wondered if maybe they would have a video chat, so she fixed her makeup and her hair. In the morning she had worn it up in a pony tail, matching the pseudo school girl outfit she wore to her class, but now she tried it down, letting her blonde locks hang loosely on her shoulders. \n\nNo, she decided, so she tucked it behind her ears, but if anything that made her look younger than the pony tail had. She scrunched up her face, fretting over what to do when she noticed the red ribbon she had worn to their first meeting. \n\nPulling her hair half up, she tied the ribbon around it and smiled at herself in the mirror. Hannah thought of the ribbon as marking her as his, even if he never saw it, and the thought made her shiver.\n\nNow for her clothes. As she flipped through her wardrobe she half chided herself for being so fussy. Not even at prom had she been so nervous about making herself look good for a date. Her mother had fussed over her, sure, but she would have been happy with a basic pony tail and her every day make up. Something told her that wasn't good enough for Professor Devers. He was no high school boy after all. How many high school boys would have been able to control themselves when she so clearly offered herself up as she had earlier that day?\n\nShe thought maybe she should dress as she had earlier. The short plaid skirt had certainly caught his eye. She wished she had some decent lingerie beyond bras and panties. A silky negligee or baby doll would be perfect, but she had never bothered to spend her limited money on them before. No one had ever inspired her to do so.\n\nShe held up a couple of more formal dresses as she examined herself in the full length mirror before deciding that it was too much. The thought came to her that maybe it was best if she just stripped herself naked. He wasn't likely to see her anyway, and she knew from reading stories that a lot of Doms preferred their subs to be nude around the house. Deep down what she really wanted was unencumbered access to her own body, so she could cum as soon as he told her that she was allowed.\n\nSo she did just that. As she examined herself in the mirror she cupped her smaller B Cup breasts and ran her hand over her taught stomach, wondering if her professor preferred more petite girls like her, or if he would be disappointed. Hannah gave her own nipples a tug, noticing that they were hard and erect from the combination of her arousal and the slightly cool air in her apartment.\n\nShe noticed the small wisps of blonde hair on her mound and considered shaving her herself bare. But when she glanced at the clock she realized there wasn't time and instead climbed naked onto her bed and took up a kneeling position, thinking it's what a good submissive would do.\n\nHaving finished his drink at the university club, Mark held his phone in his hand as he walked the deserted streets around campus when his phone began to ring.\n\n\"Right on time,\" he thought, as the device vibrated in his hand. Taking a calming breath he answered.\n\n\"Hello, Sir,\" Hannah's voice shook through the speaker. \"It's nine o'clock.\"\n\n\"So it is,\" he responded calmly. \"You've obeyed one command, tell me, did you obey the other?\"\n\nThere was a moments hesitation as silence hung in the air. \"You mean,\" Hannah began, \"Did I...?\" her voice trailed off. \"No, Sir,\" she started again, \"I didn't let myself... cum.\"\n\n\"Good girl,\" he answered, smiling to himself, pleased Hannah had passed his first test. \"You must be positively electric with need.\"\n\n\"Yes Sir,\" she quivered through the phone. \"May I now?\"\n\nHe gave a chuckle at how quickly she had asked. \"No,\" he replied, \"Not yet. First I want to talk a little.\"\n\nSuddenly she felt foolish about being naked on her bed, ready to serve. Of course if he had wanted her sexually he wouldn't have commanded a phone call, and the realization of her own all too eager need combined with the chilled air on her bare skin embarrassed her. Still though, she didn't dress. Somehow Hannah believed he knew without asking that she had stripped for him, just as he knew she had been about to violate herself earlier in the day when his texts arrived. \n\nSo she stayed, kneeling on her bed, phone to her ear, as she answered his questions about her upbringing, whether she had siblings, her first sexual experiences, and the like.\n\nIt was her recounting the story of the first blow job she ever gave, and losing her virginity in the back seat of her prom date's car, that the conversation turned sexual again, and while his tone hadn't changed, her body began to respond to the memories his questions provoked.\n\n\"Sir,\" she said after a brief pause between stories, \"May I ask you a question?\"\n\n\"Of course, Hannah,\" her professor replied. She felt there was a power in his using her name, like he was the only one allowed to do so any more.\n\n\"Sir, why did you,\" she began and then hesitated. There were so many ways Hannah wanted to end that sentence, she tried to determine the one she wanted to know most. \"I mean, you said you wouldn't with a student.\" It wasn't a question, but it got the point across well enough.\n\n\"No, Hannah,\" he said simply, \"never. And the truth is, I hadn't intended to allow this to happen now.\"\n\n\"What changed, Sir?\" she asked with a small voice.\n\n\"When I saw that you had dressed to catch my eye today, that told me what I need to know about you.\"\n\n\"And what was that?\" she asked, forgetting to use the honorific.\n\nMark gave a bit of a sigh. Of course he noticed that she slipped when addressing her, but he would address that later. For now he wanted to be careful with his answer.\n\n\"How much you needed a little discipline in your life.\"\n\nHe voice revealed her struggle to understand, \"But you already knew what I wanted.\"\n\n\"Yes, and today I saw that you wanted it bad enough that you were willing to tease and tempt a professor to get it,\" he explained. \"That eagerness, that undisciplined desire, is going to get you in trouble if someone with a firm hand doesn't take control of you.\"\n\n\"Ohh,\" she breathed and her hand slipped between her spread thighs without her conscious mind realizing it. \"And so, you're going to,\" her breath caught as she spoke, \"take control of me?\"\n\n\"Are you touching yourself, Hannah?\" He ignored her question.\n\n\"Yes... sir,\" she admitted.\n\nGiving a disappointed sigh, Mark continued, \"This is exactly what I mean. You are so eager, you can't keep your hands off of yourself.\"\n\nEven with his chastising, Hannah didn't stop herself. If anything she rubbed herself faster while he spoke, letting out little moans as she did. \n\n\"Even when talking to one of your professors,\" he continued, \"do you think most girls would do such a thing?\"\n\nHer fingers moved so quickly inside the sloppy wet folds of her flesh that he could hear them between her words. \"No, Sir,\" Hannah forced herself to answer.\n\n\"Hannah,\" Mark said firmly into the phone, \"Stop.\"\n\nShe whimpered, and her hand slowed, but she couldn't bring herself to pull it away. She was getting so close again.\n\n\"Now!\" He almost growled. And the quiet fierceness of the command convinced her to obey as she reluctantly slid her wet fingers from between her thighs and trailed them up over her taut stomach. Hannah panted into the phone as she tried to regain her composure. When she had first begun to look at BDSM images and stories, she wondered if she could endure being bound or whipped even as she got off on the idea. Now, however, she wasn't sure she could endure the simple denial of her orgasm.\n\n\"I know what you want, Hannah,\" Mark said quietly, \"and I know what you need. But your submission is about so much more than getting off.\"\n\n\"It is?\" she asked quietly, still catching her breath.\n\n\"Yes, it is.\" he assured her. \"Why do you think I didn't fuck you this morning?\"\n\nShe thought for a moment, remembering her own confusing when he pulled away from her offered body, leaving her ass red with his spanking, but no other touching.\n\n\"I don't know.\" Hannah said honestly, \"I never imagined a man wouldn't,\" her words caught in her throat, \"wouldn't fuck me if given the chance.\"\n\n\"And is that the kind of man you want?\" Mark asked, \"One with no self control? The kind who would fuck a student in his classroom?\"\n\nShe kind of did want that, at least, a part of her did. She wanted to be the kind of sexy little minx that drove a man crazy until he broke and fucked her mercilessly whether she wanted it or not. At the same time, however, Mark's self control was intoxicating. Every time he told her to stop or left her wanting, she was again exposed as his wanton slut. He always was her master, always in control while she kept losing it. Every time he told her \"no\" she was very aware of her need to say \"yes.\".\n\n\"So you're never going to fuck me?\" She asked meekly, the thought combined with her arousal made her want to cry.\n\nHe laughed. \"Of course I'm going to fuck you, Hannah. I'm going take you in every way you can imagine. I'm going to mould you into the perfect little fuck toy.\"\n\nHis words made her shiver again as fresh arousal flooded her sensibilities. \n\n\"But here's the thing, Hannah,\" he continued, his words took on an almost biting quality, \"You need to understand that when and where I fuck you is up to me, not you.\" \n\nAt that precise moment there was a knock on her door, causing Hannah to gasp and glance around the room for something to throw on. She grabbed her thin nightgown and stumbled to the door. Glancing out the peep hole she saw Mark holding his phone to his ear.\n\nWithout thinking or putting on the nightgown, she opened the door and stood in front of him, completely bare before her well dressed professor. She let her hand holding her phone slowly fall from her ear and her nightgown slipped to the floor.\n\n\"Professor?\" she breathed, her heart pounding in her small chest. \n\nHe took a step into her apartment closing the door behind him and appraised her slender, naked frame.\n\n\"That time is now.\" He said matter of factly, locking his eyes on hers.\n\n\"Yes Sir,\" she panted, her sudden awareness of her relative lack of experience replacing the awareness of her naked flesh being on display.\n\nHe stepped to her and wrapped his arms around her, pulling her to him. His right hand slid up the exposed flesh of her back and against the back of her neck until his fingers snaked into her blonde hair and felt the ribbon. \n\nBrushing his lips against hers ever so lightly, he pulled the ribbon from her hair letting her dark blonde locks tumble to her shoulders. He ran the ribbon through his fingers with a satisfied smile, tugging at it, testing the strength of the silk.\n\nA slight gasp escaped her lips as he abruptly took hold of her by her slender shoulders and turned her away from him. Running is fingertips down the length of her arms, Mark grabbed her wrists and forced her hands behind her back. If she thought of struggling, it didn't show as he secured her hands behind her back with the red silk ribbon that he had pulled from her hair, the ribbon that marked her desire for him. \n\nNibbling at her ear from behind her, he whispered, \"I know you've dreamt of being bound. And now its time I shared something with you. I've wanted your mouth since the first day you walked into my class.\" He turned her back toward him and gently lowered her to her knees in front of him.\n\nSuddenly facing his still clothed crotch, Hannah licked her lips and for a moment struggled against her bonds in her need to touch and release him.\n\nHis strong hand petted her hair as she kneeled naked before him, staring at his crotch, but glancing up expectantly at him with her big blue eyes.\n\nHis trousers fell to the floor in a pool at his feet as he undid his belt and buttons, leaving just his boxer briefs in front of her. Hannah could see the outline of his semi hard cock through the material and her breath caught as she imagined its full size. \n\nShe unconsciously licked her lips in anticipation as he lowered his boxers and freed his cock in front of her. \n\nHannah knew what to do, at least in theory, but she hadn't done it often, and her last boyfriend had complained she wasn't very good. Filled with self doubt she lifted her eyes to Mark's which were fixed in a downward gaze.\n\n\"Go on,\" he said, \"earn your orgasm.\"\n\nEncouraged, she leaned forward and took his still somewhat flaccid cock into her mouth. She had never done that before and certainly not with her hands tied behind her back. The boys she had been with were all so eager and very hard before she had even touched them. The sensation was pleasant, almost playful inspiring her to run her tongue wildly around the flexible member. When she felt Mark twitch in her mouth she let out an involuntary moan. \n\nMark snaked his fingers into her hair and gripped a fistful of the blonde tresses at the back of her head before pulling pulled her forward and holding himself deep in her mouth. And the sudden forcefulness of the Mark's movement she gave off a muffled gasp, suddenly aware that she was now bound with her mouth full of her professor's cock growing rigid against her tongue. He held her firmly in place as he filled her mouth, his member slowly expanding, stretching her lips and threatening her throat, and consequently her breath.\n\nAs the growing flesh filled her mouth her eyes went wide. First with surprise at the sensation, and then with fear as she realized that despite Mark holding her in place there was no way she could manage the entire thing. It grew and threatened to keep on growing as the head pushed against the back of her throat and she fought the gag reflex to keep it there. \n\nHer hands fists behind her and she fought the urge to try and pull away. She wanted to take whatever her professor thought she was ready for, and if he wanted to fuck her mouth and throat, she was going to do everything she could to let him.\n\nKeeping his eyes firmly fixed on his young student, Mark watched her eyes grow wet with tears as she struggled to accommodate his cock in her mouth. His strong hand firmly holding her head in place, he felt her throat contracting as she tried to swallow him. It was perfect. \n\nIt became harder for Hannah to breath as her airway was blocked, and Mark understood this, evaluating her response as she struggled with a growing sense of light-headedness accompanied by an intensifying of her own desire. If there had still been coherent thoughts in her head, she would have been aware of how close she was to cumming despite not being touched. \n\nFinally he released her and let her fall back of her heels, gasping for hair, drool and precum leaking down her chin and onto her pert young breasts. He let his hand slide from the back of her head to her cheek, where she leaned into his caress the way a cat pushes itself against it's owners hand.\n\n\"You're doing very well, pet,\" Mark smiled causing her to sigh contentedly and turn her face to his caressing hand before kissing its palm.\n\nThis was exactly what she wanted, and she knew that Mark would take her where she wanted to go. Even though she hadn't cum, she felt transcendent, her body electrified and humming in a way she had never experienced with any of the clumsy boys she had been willing to satisfy before now. And as Mark raised her by her shoulders and laid her face down on her bed it felt to her more like she was floating. \n\nMark removed his remaining clothes before spreading her lithe legs and kneeling between them, gripping her hips and pulling her ass up toward him.\n\nUnable to help or prevent the man in her apartment as he positioned her as he wanted her, Hannah moaned her approval, her face still pressing into the soft sheets of her bed as her hands remained bound. She had had sex before, of course, but this was different. It wasn't sex exactly. Mark was a man who knew what he wanted, and he wanted her. He was particular, reserved, in control. Now he was in control of her. She consented, of course, but she wasn't allowing him to use her. No. He was using her, and she knew, for reasons too buried in her psyche to understand, that she had no choice in the matter. There was no \"allowing\" about it.\n\nWhen he plunged his cock into her, opening her as if for the first time, she shrieked out in pleasure and longing, her old self torn asunder by his claiming her for himself. \n\nHe held himself deep inside her and admired her petite form impaled on his cock. The way the roundness of her raised ass tapered in to her petite waist before expanding again so the width of her shoulders. The red ribbon laid against the pale flesh of her back as it bound her hands and kept her helpless. She turned her head slightly to look back at him with lidded eyes. Her breathing shallow; she had never felt so full, so complete.\n\nPulling back he thrust into her again, making her whimper as he watched her eyes roll back and lose focus. Her tight body, slippery with her desire was easy to open with each thrust as he began plunging into her again and again. ",
        "Even now, as he fucked his willing student, Mark kept his control and composure, watching her body react to each invasion of his cock as he gripping her hips and pulled her back onto him again and again. \n\n\"Oh, please,\" she moaned, trying and failing to push back against him, \"please fuck me.\"\n\nThe sudden movement pleased Mark, and he brought the flat of his palm down hard on her ass in time with his next thrust.\n\n\"Little fuck toys,\" he said through gritted teeth, \"don't tell their Sirs what to do.\" He smacked her ass again as she whined at the combination of pain and pleasure.\n\n\"And what are you?\" He demanded as he fucked and spanked her.\n\nShe panted in response, \"A little... fuck toy.\"\n\n\"What are you?\" he demanded again.\n\n\"A little fuck toy,\" she cried out, near tears from the overwhelming experience of pleasure and pain.\n\n\"That right,\" he affirmed, pulling out of her suddenly. \"And that means I'm going to use you I see fit.\"\n\nHer body shook at the sudden emptiness before he moved her onto her back, her head hanging slightly off the edge of her bed. He stood beside her, his hard cock wet with her desire almost brushing her upside down mouth.\n\n\"Open,\" he demanded, and she did, reluctantly, having never been taken like this by any previous lover.\n\nHe shoved his cock into her perfectly angled mouth and slid all the way into her throat, watching as it bulged from the invasion. In this position she was truly powerless as he began to fuck her mouth in earnest, the blood rushing to her head as her naked body laid out before him.\n\nHe reached forward and ran his hand over her mound covered by downy soft blonde hair before sliding a finger into her flesh.\n\nHannah moaned around his cock and the vibrations perfectly accented the pleasure of her warm wet mouth. He began to massage her in earnest, squeezing a breast and tweaking a nipple with one hand while his other manipulated her wet pussy. \n\nShe moaned and writhed as he fucked her mouth in this position, pushing her hips up against his hand seeking the release that she had so far been denied and could no longer keep under control. Mark wasn't done with her yet. And in a sudden motion he pulled his fingers from her and slapped her mound with a wet sting. Hannah had been so close and suddenly the pleasure was replaced by stinging pain, but with her mouth full of his cock her cries were nothing more than muffled whimpers that served to stimulate his cock.\n\nAgain he began rubbing her as he took her mouth and throat, and again, as she drew close, Mark pulled his hand back and slapped her too eager flesh. \n\nHannah all but cried as she twisted and turned with the sharp pain that shot through her body, but laying as she was she was helpless to move away. \n\nStill, the pleasure and need hadn't left her and when his fingers returned inside of her, she was almost instantly near orgasm again. \n\n\"Alright pet,\" he breathed as his own release approached, \"I want you to cum for me.\" And with a sudden doubling of his efforts on her swollen clit, her body began to shake in the long awaited release. Her mouth opened as wide as it could, trying to gulp air while releasing cries of agony and ecstasy around his invading cock.\n\nThen just as her orgasm peaked he slapped her little sex as hard as he could, and rather than interrupting her pleasure, the sudden added sensation sent a shock wave through her body that caused her to release her own wet all over her sheets and bed. \n\nAs her body trembled through an orgasm unlike any she had ever had, or even knew she was capable of, Mark released his own, pulling himself from her mouth and spraying her splayed out body with jet after jet of his thick, warm cum while she wailed underneath him, unaware of anything but the newly awakened sensation she had never even dreamt of.\n\nStepping back from her, Mark found her desk chair not far from her bed and fell back into it, catching his own breath. The tied red ribbon had come undone through her writhing and shaking, and Mark watched as Hannah brought her hands to her cum covered chest and belly and began rubbing his release over her own flesh as she continued to tremble on her bed, mewling and panting. \n\n\"Hannah,\" he said finally, and with her head still hanging upside down she opened her eyes and saw him watching her. \"Good little submissives don't waste the gifts that their Sirs give them.\"\n\nShe smiled, weak with spent energy as she kept her eyes on him and brought her fingers, now covered in his spunk to her mouth, and began to clean them of the salty gift. \n\n\"Good girl,\" Mark praised his eager young student. \"I have so much to teach you,\" he continued, \"Are you willing to learn?\"\n\nHer body spent but still vibrating in the afterglow of the most powerful orgasm of her young life, Hannah pulled her fingers from her mouth, smiled, and answered, \"Yes Sir.\""
    ],
    "authorname": "PhilosopherX",
    "tags": [
        "professor",
        "student",
        "spanking",
        "older man younger woman",
        "orgasm denial",
        "mature"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/educating-hannah"
}