{
    "title": "Velvet Heat Ch. 04",
    "pages": [
        "Comments, critiques and tips are welcome. \n\n***\n\nKayla opened the door to a dejected looking Cole. She stared at him for a while wishing she could wave a magic wand and see his carefree happy self again.\n\n\"Ready to talk now?\" She asked her boss with a slight smile.\n\nCole only gave a slight nod and stepped into Kayla's elegantly decorated living room. She closed the door and turned to Cole with her arms stretched wide.\n\n\"Come here.\"\n\nCole stepped into her warm embrace and hugged her tight for about two minutes. She had been watching him for the past two months and had seen the light die from his eyes. He had thrown himself so much into his work that she had a feeling he was avoiding her. But she knew at the right time he was going to open up. That day was finally here.\n\n\"Come on.\" Kayla said dragging Cole by the hand to the couch. \"What will it be?\"\n\n\"Cognac.\"\n\n\"Coming right up.\"\n\nKayla brought a bottle of Hennessey with two glasses, poured some into both glasses and handed one to Cole. He downed everything in one shot and poured another. Kayla sat on the couch and Cole lied down with his head on her lap.\n\n\"Now tell mummy everything.\" She said sipping at the own drink.\n\nCole told Kayla the whole story about Janice's pregnancy and Briana insisting on giving him space.\n\n\"Oh snap! You just had to knock the bitch up didn't you?\"\n\n\"Kay I'm so confused I don't know what to do.\"\n\n\"What do you mean you don't know what to do? She should give birth. And you should keep your relationship with Briana and be happy. What the fuck did you want to do?\" Kayla asked with so much anger in her voice.\n\n\"Kay it's not that simple. I've always known I wanted to be a father one day. But not like this. Janice is a demon with so much venom slithering beneath her polished veneer. Unfortunately I now have to face a future tied to her forever?\"\n\n\"No you don't Co...\"\n\n\"Yes I do Kay. As the mother of my child, she will be tied to me forever. It's not the child's fault it has jezebel herself for a mother. I would want to be part of my child's life and Janice knows me well enough to know this. She has me exactly where she wants me and she knows that. There is no way I could ever turn my back on my own child and deny him or her a chance at the type of childhood I had. My child's happiness has to come first. Janice can make my relationship with my kid hell if she wants to. Kay I'm scared.\" Cole finished in a whisper.\n\n\"Oh Cole\" Kayla breathed. \"It's been what...two months?\" \n\n\"Since the incident? Yes.\"\n\n\"And she said she was almost three months gone?\"\n\n\"Yes.\"\n\n\"And when was the last time you saw her?\"\n\n\"Well I did go to see her a day after she told me. She said she was going to London for a while to visit her sister.\" Cole replied omitting the part where Janice had tried very hard to have sex with him. She had angrily told him she was going to London after she realized Cole was serious about not succumbing to her advances.\n\n\"And Briana? When was the last time you saw her?\"\n\n\"Not since the incident. I've been calling her but she usually doesn't pick up and even if she does, she always tells me she's busy doing one thing or the other and so can't talk. So I've been texting.\"\n\n\"And does she reply to your texts?\"\n\n\"Sometimes.\" He said in a small voice.\n\nCole sounded so defeated Kayla didn't know what to say. She had never seen him like this before. And she didn't like it one bit. Kayla knew what to do. Her boss was just wasting away right in front of her. That was simply unacceptable. She had to fix this somehow. Starting with Briana. Then she was going to pay that bitch Janice a visit.\n\n***\n\n\"Bri?\" Briana heard Jessica screaming her name from the corridor moments before she burst into their room.\n\n\"What Jess?\" Briana asked jumping off her bed thinking something serious had happened.\n\n\"Tadaaa\" Jessica shouted waving two tickets in front of Briana. \"We are going to paaarrrrtyyyyy.\" She said shaking and twisting her hips in an erotic dance.\n\nBriana snatched the tickets out of Jessica's hands and looked closely at them. \"The annual Zonta Party?\" Briana exclaimed. \"How the hell did you get tickets to Zonta Zone? Who did you sleep with you slut?\"\n\nJessica stopped dancing long enough to shout, \"pure luck\" then resumed her dance across the room.\n\n\"What do you mean by pure luck? Zonta tickets don't just fly around by luck. How did you get them Jess?\" Briana followed her friend's movement across the room with shocked eyes. The Zonta annual party was the party of the year, usually attended by very important people who knew how to have fun. A college student getting an invite to such a party was a no-no. Just who had Jessica murdered to get those tickets, Briana wondered. She knew it had always been Jessica's dream to get an invite into Zonta Zone. Hell, who wouldn't wanna get in? But Briana really didn't want to end up in jail for goodness sake. She was too young.\n\n\"Jess.\" Briana screamed to get Jessica's attention.\n\n\"Okay okay. Here goes...but you're not going to believe this.\"\n\n\"Try me.\"\n\n\"Okay so I'm on my way here right? I get to the park behind the library. Then see these two hot guys looking at me like I was their wet dream come true. I mean I know I'm hot but you should have seen the way...\"\n\n\"Yeah yeah yeah Jess. We all know you're God's gift to men. Will you just go on?\" Briana interrupted rolling her eyes at her friend, making Jessica roar with laughter.\n\n\"Ok so I said hi. And we got to talking. Apparently they were looking for the new library so I gave them the direction. Then they wanted to know what I usually do for fun on weekends. Of course I told them I usually roll with my roommate who was no fun these days because she got her heart broke...\"\n\n\"Jess you didn't.\" Briana shouted.\n\n\"Ok ok I didn't add the last part but they asked what we would be doing on Friday. And I said nothing much since my roommate was no fun these days.\"\n\n\"You really did say that didn't you?\" Briana asked quietly.\n\n\"Yes I did Bri. And it's true. You are...like a zombie these days.\"\n\n\"I'm sorry.\" Briana said softly.\n\n\"Hey hey,\" Jessica quickly sat beside Briana and hugged her. \"You have nothing to be sorry about Bri. Just...try and have a little fun okay? For me?\" She added with a wink.\n\n\"I will try. Maybe I should accept Taylor's date request one of these days. What do you say?\"\n\n\"Taylor? Well...he doesn't come close to my Cole but...\"\n\n\"Jess.\"\n\n\"You have to start from somewhere I understand.\" Jessica said with a resigned sigh.\n\n\"Yes I do. You did say I should try and have fun.\"\n\n\"Not that kind of fun but I'm okay if you are.\"\n\nBriana knew Jessica's stand on the Cole business. She kept saying Cole hadn't cheated on her and was obviously in love with her so she should keep her man. But Briana felt it was wrong to come between Cole and Janice because of the baby. To say her life for the past two months had been shitty was an understatement. All she did was attend lectures, eat and sleep. She had come very close to going to Cole's just to see his face several times. But she always stopped herself. What even made it more difficult was hearing his voice. So she had stopped picking his calls. As for the text messages, they came every day. Cole always wanted to know how she was doing and never failed to remind her that he loved her every day. It was pure torture. \n\n\"So they gave me two invites for my 'no-fun' roommate and I. They said we should come and have the time of our lives.\"\n\n\"Just like that.\"\n\n\"Just like that. So...are we going?\"\n\n\"Hell yeah.\" Briana shouted with a laugh.\n\n\"That's what I'm talking about.\" Jessica screamed. \"Zonta, here we come!\"\n\n\"That's just in two days. What are we going to wear?\" Briana wondered aloud.\n\n\"Something sinfully HOT!\"\n\n\"You're nuts Jess.\"\n\n\"But you love me dontcha?\"\n\n\"I soooooo do.\"\n\n***\n\n\"This is awesome. Thanks for bringing me Briana.\" Taylor said looking around with utter amazement on his handsome face.\n\n\"Yeah sure.\" Briana replied looking around. She had almost told Taylor to reserve his thanks for Jess's sick mother. Jessica had to go home the day before the party because her mum had to undergo an emergency surgery. She had insisted Briana attend the party anyway with anyone she preferred. She had therefore invited Taylor to come along since they had become good friends these past two months. He made her laugh and she liked that. Of course Taylor wanted to date her but she had made him understand she wasn't ready for anything serious. He said he still had patience and hope. Funny guy! But she liked him. He was a really nice person. \n\n\"And you are the hottest and most beautiful girl here Bri.\" Taylor said with so much admiration and want in his eyes Briana gasped.\n\n\"Ty...\"\n\n\"I know I know. You're not ready. Remind me to give the guy who did whatever to you a dirty slap whenever I see him okay?\"\n\nThe look on his face made Briana laugh so hard she had to hold on to him so as not to fall down.\n\n\"Oh Ty. Ever thought of doing a comedy show? Your face...\"\n\n\"Glad I could make you laugh. You looked too serious. Lighten up Bri.\" Taylor said and leaned down to place a chaste kiss on Briana's cheeks.\n\n\"I will...and thanks.\" She said softly.\n\n\"For what?\"\n\n\"You did say I was beautiful didn't you? Unless of course it was a line.\" Briana said with a mock scowl.\n\n\"That can never be a line where you're concerned and you know it.\" Taylor said with a laugh.\n\n\"Thanks for coming with me Ty.\" Briana said sincerely.\n\n\"Are you kidding me? Who in their right minds would miss this?\" \n\nTaylor twirled Briana around, caught her around her waist and started dancing with her. She was laughing so hard the whole time.\n\nHowever, across the hall from them, someone wasn't so happy. Cole had watched Briana laughing happily with that boy. He had watched the boy kiss her. The fact that it was on her cheeks was not the point. A kiss was a kiss. And he was seeing red. Now they were dancing and the boy had his arms around Briana's bare back. \n\nWhen he had first spotted her across the room, his first thought had been that she looked superb. She was so delicate, so exquisite, so...damned naked. What the fuck was she wearing? That dress could give a man a heart attack. She was wearing an alluring all-black cowl necked mini-dress. The loose plunging V-neck design created an instant sauciness. The outfit was full of surprises with the revealing sides merging into a 180 degree back cutout. Meaning the dress didn't have anything at the back. The only thing being covered at the back was her arse as the dress stopped about two or three inches above her mid-thigh. From behind it looked like she was wearing a swimsuit. No wonder almost every man was looking in her direction. That provocative dress had to be covered. \n\nCole had bounded down the stairs on which he was standing at the time, toward Briana. He was already taking his jacket off with the sole aim of putting it on her. But he had been waylaid by one of the major partners of his firm. By the time he could excuse himself, the silly boy was all over his Briana. \n\nCole matched straight to where Briana and Taylor were dancing. Taylor saw Cole first and the deadly intent in his eyes caused his spine to stiffen. Briana looked up at Taylor when she felt the change in him. She turned to look at what had captured his attention and gasped when she saw Cole. God, he was handsome. In his crisp white shirt and red tie, he looked so damn fine. He had obviously come straight from the office.\n\nCole had his jacket off, but when he reached Briana, he couldn't remember what he was supposed to do with it.\n\n\"Briana?\"\n\n\"Yes, Cole?\"\n\nShe waited for him to say something more.\n\nHe however seemed content to stand there and stare at her. Her love was so apparent in her gaze. Her smile was tender. Dear God, he thought, he was unworthy of her, and yet she loved him. He broke out in a cold sweat. He started to reach for the handkerchief in his jacket pocket, but then realized he was holding the jacket in his hands.\n\nHe couldn't imagine why. He put it back on. He couldn't take his gaze off his beautiful Briana, and his arm got all caught up in the sleeve, but he finally righted the thing. Briana stepped forward and adjusted his colour, then moved back again.\n\nAnd still he couldn't speak to her. God, he had missed her.\n\n\"I love you, Bri.\" His voice sounded as if he wanted to cry. Her eyes filled with tears. \n\nBut before Briana could say anything, she heard Taylor clearing his throat loudly behind her. When she turned to look at him, she realized quiet a number of people were looking at them. \n\n\"Taylor, this is Cole. Cole this is Taylor, my course mate.\" Briana decided to add the last bit when she saw how Cole's eyes had narrowed into slits.\n\n\"Hello Taylor.\" Cole moved forward with his hand extended to greet Taylor. \"Could I please borrow your date for a while?\" And even before Taylor could speak, Cole was adding a tight \"Thanks\" and drawing Briana away.\n\n\"Cole.\" Briana admonished in a loud whisper, \"That was rude.\"\n\n\"Yeah? Well so is touching another man's girl. That boy was all over you Bri. And what the fuck are you wearing?\" Cole added shrugging out of his jacket again. Remembering why he had taken it off in the first place.\n\n\"What?\" Briana exclaimed incredulously. \"I need to use the ladies room Cole.\"\n\n\"Me too.\" Cole answered acidly, opening the ladies room and entering with Briana. Then he locked it behind them.\n\nBriana looked at him, surprised. \"You know this is the women's bathroom right?\" she asked with one hand leaning on the counter. She tried to look bored. She hoped it was working. She shouldn't allow this. \n\n\"Yeah,\" he answered. He continued to stare at her. It started making her heart pound rapidly. \n\nShe knew she had to get out of there. But she just couldn't move.\n\nCole came closer to her and bent down, leaned in, keeping her stare as he drew closer...closer. Finally, he closed his eyes, and then touched his lips to hers. Soft. For a long moment, he didn't move, didn't seek to deepen the kiss. Didn't do anything. Except begin to shake. \n\nShe felt the tremor against her lips first. Tentatively, Briana touched his shoulder. He shook there too. His abs rippled under her fingers, as well. Raising her hand from his shoulder to his back, she realized he was trembling all over.\n\n\"Cole?\"\n\n\"Bri.\" Cole whispered against her lips. \"Do you have any idea how much I love you?\"\n\nThen his hands were in her hair taking out the pins holding her hair up. His hands fisted inside her hair and his tongue plunged into her mouth for a smoldering kiss. For the first time, his kiss was full of desperation. \n\nIt shocked her from head to toe. She gripped him tighter and opened to him. Immediately, she tasted need. He needed her? At the moment, the reasons why they shouldn't be doing this didn't matter. She met his reckless onslaught. Cole grabbed her tighter in greedy acceptance, pulling her body against his. Though Briana hadn't thought it possible, he deepened the kiss. Fast, a whirl of taste and touch, he swept through her mouth. Desire, heavy and warm, flashed in her belly. Clutching him, Briana moaned.\n\nThen when he couldn't resist anymore, he moved down and released those soft heavy creamy globes from the dropping neckline of her dress. They were perfectly round and plump and topped with stiff nipples begging to be sucked.\n\nIt made Cole's mouth water. He eagerly took a nipple in his mouth and sucked while his other hand massaged her other breast.\n\nBriana couldn't think straight. She wouldn't have been able to stop him if her life had depended on it. He then lowered his hand and reached underneath her dress. \n\nHe growled against her nipple when he realized she wasn't wearing any panties. \n\n\"Really Bri?\" he growled looking at her whiles his long thick digit began invading her wet pussy. He made the little come-hither motion that curled her toes and ignited the familiar but always welcome liquid ache deep inside her belly.\n\nBriana couldn't help the moan that escaped the lips. \"The dress wouldn't allow panties Cole.\" \n\n\"I figured\" Cole said with a chuckle.\n\nHe went down on his knees and pushed up her dress. He glanced up at her face for a second before he stuck his tongue out and licked her throbbing pussy.\n\nOh dear God. \n\nCole's first pass through her wet, sensitive sex was an electric shock that caused her to gasp. The next was a pleasure bomb that detonated right where she needed it most and forced her to whimper. Her fingers ran through his short hair.\n\nShe was so, so close\u2014closer to orgasm than she'd ever dreamed she could be. \n\n\"Cole...\" His name on her lips was both a cry and a plea for help. Her legs buckled. Cole picked her up and placed her on the vanity.\n\nHe stepped between her knees, working his belt without taking his eyes from hers. Their panting breath mingled in the space between their lips.\n\n\"Do you know what it does to me to see you look the way you do tonight?\" he asked.\n\nThis, obviously. But she wanted to hear him say it. \"What?\"\n\n\"When you look like this, dressed up, all fuckin' provocative with every man wishing you were theirs... makes me just want to take you into my arms. And make you mine all over again.\"\n\n\"I will always be yours.\" She whispered. \"Always.\"\n\nHe tilted her back so that she was resting on her elbows. Then he was bending over her and fitting his mouth right over her sex, his tongue swiping across her clit, providing maximum devastation. \n\nHer cry filled the restroom as he swooped in for seconds, then thirds, then got really comfortable, as if he planned to stay for a while. \n\n\"God, you taste sweet,\" he whispered against her slick flesh. \"I've got you just where I need you.\"\n\nHe sucked, and she undulated against his mouth, feeling an impending orgasm looming over her. \n\n\"Oh God, oh God, Cole, please...!\" was all she could manage when she started coming. He wrapping his arm across her stomach and held her steady as she convulsed against him. The incredible tension she'd been carrying around for so long inside her broke in waves and waves of ecstasy. She didn't care if anyone outside heard her keening cry, or his answering groan that vibrated against her pussy. Her thigh muscles locked as she shuddered and writhed.\n\nCole pushed up and reached down between them and placed his cock at her soaking entrance. He pushed all the way inside her to the hilt in one thrust. They both moaned in unison.\n\nBriana felt beyond packed full. Her body stretched to accommodate him, but she felt his possession acutely, almost more than physically. It was like Cole was in every corner of her, he was so deep. \n\nBriana automatically placed her hands around his neck, drawing him down for a kiss. Then he took over and gave her a kiss that sent a hot shock through her body. Gentle but insistent, full of reassurance\u2014that's how Cole's kiss flowed through her. \n\nThey heard someone try to push the door open, but neither of them could stop. Eventually the pushing stopped and the person or people walked away.\n\nThen Cole started to move. Pound was more accurate. He drove inside her with shattering force. And she loved it. She made those delicious sounds he loved to hear. And when he changed his rhythm to more delicious and languorous strokes as he usually does, Briana lost her ability to form coherent words. Her fingers dug into his shoulders as pleasure tore through her body and her pussy throbbed. She screamed and clutched at Cole. \n\n\"Have you thought about this as much as I have?\" he murmured against her.\n\nHe reached down to find her clit, toying with it lightly and bent to capture a nipple in his mouth, letting his teeth gently scrape her flesh. She bucked and arched as sensation tore through her. ",
        "A burning ache broiled between her legs. A line of tingles zinged between her nipple and her clit. God, she didn't know how much she could take. She had to explode. \n\nHer breathless \"Yes\" in answer to his question got lost in a scream when everything inside her went kaboom! \n\n\"Oh. My. God\" Briana screamed.\n\nHer rhythm became erratic, lost to passion. Pleasure, hot and molten, pooled low in her belly. Brenna shook, jolted, spasmed with the force of the monster climax. Her intense orgasm turned her inside out. And still, Cole kept going, thrusting frenetically inside her. But not for long. A mind blowing orgasm shot down his spine, burned and churned between his legs...then burst all the sensation through his body. Blindly, he sought her mouth, sealed her lips with his, and shoved his tongue into her mouth to tangle with hers. He thrust one last time, pouring himself into her until he had nothing more to give.\n\n\"Oh. Holy. Fuck. God, Bri,\" he groaned against her lips. Slowly, the movements of his hips subsided. She missed that rhythm immediately, didn't want it to end. So when he made a move to pull away, she locked her ankles around him.\n\nHis laugh sounded breathless. \"I can't stay away from you Bri. I tried. Just love me, Briana.\" He whispered as he leaned down to claim her lips. \"Please.\" Briana tried to blink away the tears but they spilled and ran down the sides of her face. \n\nCole thumbed her tears away. \"Oh God, Baby don't cry. I would never want to hurt you. I'm so sorry to have put you through all this.\" He leaned down and placed a gossamer kiss across her trembling lips. \"Will you come home with me? Please?\"\n\n\"I'm on a date remember?\" Briana replied tremulously. \n\n\"How could I forget? Do you have any idea how close I came to sucker punching the idiot?\"\n\nBriana laughed softly and hit him on the arm. \"He's not an idiot smartass. I did invite him because Jess had to go home last night to be with her mum.\"\n\n\"What's wrong with her mum?\"\n\n\"I think it's appendicitis or something.\"\n\n\"Ow! Sorry to hear that.\"\n\nCole helped Briana clean up and adjust her dress.\n\n\"So Taylor.\" Cole said looking at Briana apply some lip gloss to her lips.\n\n\"What of him Cole.\" Briana asked sounding bored.\n\n\"You two are just course mates right?\"\n\n\"That's what I said right?\" Briana retorted.\n\n\"Yeah. Was just checking.\"\n\nBriana turned to look at Cole and was surprised to see a look of sheer vulnerability etched on his face.\n\n\"Hey.\" She said hugging him around his waist. \"He's just a friend. Okay?\"\n\n\"Okay.\"\n\n\"What happened to the confident Cole I know?\"\n\n\"He got scared.\" Cole whispered.\n\n\"Well I want him back.\" Briana went up on her toes and kissed Cole with all the love she felt for him. \"I love you. And nothing can change that.\" \n\n\"You didn't answer my question.\"\n\n\"Yes I will. But Taylor...\"\n\n\"I'll take care of that. Come on.\"\n\nWhen Cole and Briana came out of the bathroom, Briana had on Cole's jacket which he had insisted she wear. \n\n\"Sorry ladies\" Cole said to two ladies who were trying to get in and got a giggle out of them making Briana blush.\n\n\"Well it's about time.\" Said an amused female voice. \n\nThey both looked up to see a smiling Kayla, who looked like the cat who ate the canary. \n\n\"For fuck's sake didn't you think some ladies would wanna use their space Cole?\" Kayla threw Cole a dirty look whiles hugging Briana.\n\n\"So sue me.\" Cole drawled turning to say hello to a couple.\n\n\"Yeah wait for it.\" Kayla retorted.\n\n\"He doesn't need that space girlfriend. It's rather killing him. That guy is crazy about you. Please?\" Kayla whispered into Briana's ears.\n\n\"I know that now. No more space. Taking back what is rightfully mine.\" Briana whispered back.\n\n\"That's my girl. Thanks.\" \n\nThen Cole was taking Briana by the hand and dragging her to his side.\n\n\"Now where's Taylor?\"\n\n\"Oh Briana's friend? He found the love of his life. You two wanna bounce? Go right ahead.\" Then turning back to look at their stunned faces, she added, \"Trust me.\" Then with a sassy wink at the two of them, turned to walk away.\n\n\"You're one in a million Kay.\" Cole shouted to her departing back. Because he knew somehow, Kayla had been responsible for all this.\n\n\"Come on Bri.\"\n\n\"Cole I feel like I'm abandoning him. At least I need to say bye.\" Just then they saw Taylor in a tight embrace with a pretty blonde who looked like Taylor was the next best thing since sliced bread.\n\n\"Ok go say bye.\"\n\nBriana went to the dancing couple and tapped lightly on Taylor's shoulder.\n\n\"Hey Bri. Sup?\"\n\n\"I've gotta bounce Ty. Hope you're cool.\"\n\n\"Yeah I'm cool. Say hi to Trisha Bri.\"\n\n\"Hi there Trisha.\" Briana said with a smile at the blonde.\n\n\"Hello Briana. Thanks for bringing him. I owe you one.\" She said with a wink.\n\n\"Pleasure was mine. See you in school Ty.\"\n\n\"Sure Bri. And treat him well. He's crazy about you.\" \n\n\"Yeah I know. And I intend to treat him so well he's never gonna wanna let me go.\"\n\n\"Did you just quote 'Pretty Woman'?\" Taylor asked roaring with laughter.\n\n\"I did. Bye Ty.\" Briana turned still laughing and found herself in Cole's arms.\n\n\"Shall we?\"\n\n\"Yes Sir.\"\n\n***\n\nWhen Briana woke up on Saturday afternoon in Cole's bed, she was alone. She stretched and felt sore all over, deliciously sore. With the marathon sex they had had till dawn, she wasn't surprised. Slipping out of bed, she found his white shirt on the floor and shrugged it on. After a quick trip to the bathroom, she went searching for him.\n\nShe eventually followed laughter to his den or his 'boyz ghetto' as he called it. There was a loud chorus of laughter. A couple of bangs, like heavy fists hitting a table. It sounded like there were a lot of guys in there. It probably would've been smart to get dressed first, but she just wanted to see Cole. For some reason she was missing him. She needed to see him just to assure herself that this wasn't a dream. God knew just how many dreams she had had with similar settings only to wake up in her own bed. She couldn't count the number of times she had cried herself back to sleep. She just had to see him!\n\nThe instant she appeared in the doorway, all talk ceased. Heads turned; eyes stared. Hard-core rap expanded to fill the silence, bass thumping, lyrics chanting. Briana was sure she'd never been the attention of so many men at the same time before in her life.\n\nShe took a step backward just as Cole shot to his feet from where he had been sitting, playing a video came with one of the guys. Even in sweats and t-shirt, he looked delicious. He came at her, looking intense. No doubt she'd interrupted some kind of sacred guy time. She tried to think of something to say to him. He was probably going to want to play it cool in front of his buddies, do that whole I'm-a-tough-guy, this-broad-is-just-a\u2014\n\nCole wrapped his whole body around hers, putting his face in her hair and breathing in deeply.\n\n\"You smell fantastic. Did you sleep well,\" he whispered in her ear while running his hands up and down her back.\n\n\"Yes.\"\n\nHe pulled away and gave her a scorching kiss on the lips. Then Briana heard the whistles from the guys and blushed to the roots of her hair. But Cole only laughed delightedly and tenderly, smoothed back her disheveled hair.\n\nBriana grinned. Evidently, her man didn't have a problem with display of affection in front of his 'boyz'. Good to know. She tilted her head, looking around his shoulder. The guys were gaping. Positively gaping. She nearly laughed. Seeing a bunch of attractive looking guys who looked successful playing video games was incongruous enough. But having them stare so openly at her as if they had never seen a female before seemed downright absurd.\n\n\"You want to introduce me?\" she said, nodding at the group.\n\nCole put his arm around her shoulders, tucking her against him. He nodded to the handsome black one. \"Matt, you already know, unfortunately. That hulk look alike over there is Tyron. The one with the nasty goatee is Chris. The idiot over there is Kyle. And that is crazy Dean and his partner in crime, Michael. Damon is on his way.\"\n\n\"Gentlemen,\" Cole said. \"This is Briana, the love of my life.\"\n\nThere was a chorus of 'hi's and 'hello's around. Then Matt came over to give her a hug. \"Good to see you again Beautiful. How have you been?\"\n\n\"I've been good Matt. How's Jen?\"\n\n\"She's ok. Driving me up the wall. But I love her.\" He said with a scowl making Briana laugh.\n\n\"Good. Do say hi to her when you go home.\"\n\n\"I'll do that.\" Matt said giving her a kiss on the cheek.\n\n\"Do you need anything Bri?\" Cole asked. \"Are you hungry?\"\n\nShe put her hand on her stomach. \"You know, I am.\"\n\n\"I'll go get you something. Sit down.\" He indicated his chair and then headed off through a swinging door.\n\nThen the one called Tyron was coming over to her with a wide smile on his face. \"Now it's my turn to hug you Sweet Briana.\"\n\nWith a laugh she went into his arms. She realized there was actually a queue. Was everyone planning on hugging her? \n\n'Great.' Here she was, naked under Cole's shirt, being hugged by sexy hunks. 'Just great.' \n\nAfter hugging all of them, she headed for a seat around a mini dining table. But before she could sit, a new voice shouted.\n\n\"Yo, what did I miss?\"\n\nBriana turned to look in the direction the voice had come from and saw the most handsome man she had ever seen walking into the den. \n\nDean was the one who spoke up. \"This is the lovely Briana. Cole's 'last stop'.\" What did he mean by that, Briana wondered. No wonder Cole had called him crazy. Last stop? \"You're just in time for your hug.\"\n\n\"Hello Briana. Finally I get to meet you.\" The Adonis came towards her with a heart stopping smile. \"I'm Damon. And don't hesitate to look my way when you eventually dump that fool. Come here.\" He finished with his arms stretched wide waiting for his hug. \n\nBut Briana held Damon off by lightly pushing at his chest before he could draw her into his arms. Then she looked him straight in the eye with an intensity that would have frozen the devil himself.\n\n\"What makes you think I would ever dump him?\" She asked Damon in a steady voice. \"I love him too much to dump him Damon. I don't even want to think about that. Not even as a joke. For me, this is it. Now you have to accept that before I give you a hug. Oh and even if we do part ways, I'll probably remain a spinster for life because I don't think anyone can take his place in my heart. No one holds a candle to my Cole.\" Briana's voice caught on the last sentence. \"So me looking your way...not gonna happen!\" She finished with a slow shake of her head.\n\nBriana heard a collective gasp from the guys. She had actually forgotten they had an audience. Then the clapping started. And she didn't know what to do. Then Cole was there picking her up by the waist and twirling her around. The rap music continued to pound. She buried her face in the crook of Cole's neck and thanked God for the tight hold of his arms around her waist as she was getting light headed. Then she remembered...\n\n\"Cole,\" She whispered urgently into his ears, \"I'm not wearing any panties.\"\n\nBefore she guessed his intent, he drew her head down and his lips closed on hers as he kissed her with so much love tears sprung to her eyes. Then he walked out of the den with her in still his arms, their lips still attached. He didn't stop kissing her even as he walked and Briana could feel his erection rub against her with each step he took. The noise faded and suddenly Cole was pushing her against a wall. \n\n\"Put your legs around my waist.\" He said huskily.\n\nBriana lifted both of her legs and folded them around his hips.\n\nThen she felt his cock probing at her entrance, all thick and ready. Breath held, she clung to his shoulders, waiting. He eased the tip inside, and even that hard bit of him felt like heaven. \n\n\"Briana Scott\" he said, voice strained. \"I love you more than life itself.\"\n\nWith that, he pushed her hips down as he thrust up. Briana cried out in ecstasy. Cole kept pushing his way inside, probing past nerve endings with the wide head of his cock, awakening them, leaving tingles screaming in his wake. He made her need soar, and it seemed like forever until he was buried to the hilt. \n\nOh, God, she needed to come so bad.\n\nWithout warning, he withdrew nearly all the way, then eased back in, much gentler than before. She swore she could feel every inch, every vein, of his cock rasping across suddenly sensitive flesh inside her. She choked out his name. Cole brought agonizing pleasure with every slow stroke, every rub of the swollen head of his cock right over the flesh inside that had her gasping. Her breath caught, mouth falling open as her head fell back. The tip of his tongue traced the length of her throat.\n\n\"You feel so sweet.\" He murmured against her throat as he thrust inside her again.\n\nShe tried to hold on, hold out against the pleasure threatening to sweep away her sanity. But with the next hard stroke of his cock, a swift and strong orgasm engulfed her. Wave after wave of ecstasy swept through her, each contraction seeming to allow him deeper. So deep she didn't think she could take any more, but she did. \n\nShe couldn't control the cry that wrenched from her throat and prayed the guys wouldn't hear her in the den. Her nails bit into his shoulders and she squeezed him with her internal muscles making him groan loudly. At this rate, she knew they just might be heard but then realized she was beyond caring.\n\n\"Holy fuck,\" he breathed against her neck. \"Oh my God. Baby that feels so good.\"\n\nThen he began to move against her harder and faster. Each movement rubbed her clit, splintering her inside. Briana crushed their mouths together and her lips opened for his, her tongue battling his the moment they touched. Her legs wrapped tightly around his plunging hips and she trembled as the orgasmic aftershocks that pulsed within her began to turn into something else... She couldn't breathe. The intensity of the feeling rocked her emotions and she fought against it. She wasn't prepared for the onslaught of such bliss. It was too much to accept. \n\n\"Cole... I can't.\" She pushed against his shoulder, frightened of what she felt.\n\n\"Shh. Stop trying to control the sensations Bri. Just let go. I've got you.\"\n\nHer eyes were scrunched closed. She couldn't.\n\n\"Briana, open your eyes.\" Cole whispered.\n\nShe opened her eyes. The expression on Cole's face, full of hunger and need, open and loving, tore through Briana like a bullet. \n\n\"I love you, so much.\" Cole declared in a shaky voice. \"I can't breathe without you near.\" He pressed Briana's palm to his chest, over his heart. \"No one else will do. I know this like I know my name.\"\n\nThick emotion clogged Briana's throat. She couldn't talk. But she knew she didn't need to. He already knew how she felt about him.\n\nHe moved within her. In. Out. Each time bringing her closer to an explosion. She felt it surging within her. Ripples of agonizing pleasure flushed out from her pelvis and rocketed through her. Then she was coming again, arching against him, crying out as her pussy milked him in wave after wave of crashing climax. He held tight to her, letting her ride out the wild, insane orgasm, kissing the tears that fell down her cheek.\n\nThen Cole felt it. The most exquisite sensation. Pleasure driving through his cock and bursting out across his body. A wave of dizziness crashed over him. His toes tingled. A strangled male cry filled the air then. Briana cried out at the feel of his semen rushing through her, seeping into the very pores of her still spasming flesh, easing the flaming lust, soaking into her womb.\n\nHer voice was hoarse from screaming. Could anything feel better than this? God, it was good. Mind-bogglingly good. The next thing she knew, Cole was tapping her on the cheeks and saying something, his voice worried.\n\n\"Bri? Come on, love, talk to me.\"\n\n\"Hm?\" She was so limp she could barely move. \"Talk about what?\"\n\n\"Oh Baby are you ok?\" Cole asked looking worried.\n\n\"Yes. Why do you look so worried?\"\n\n\"You passed out.\" Cole told her looking relieved.\n\nStill struggling to catch his breath, he looked into her flushed face, her swollen lips, the relaxed set of her shoulders and knew in his heart that for him too, this was it.\n\n\"Marry me.\" Cole said breathlessly, his voice filled with so much emotion.\n\nBriana gasped!\n\n\"Cole?\" They heard Michael's voice just before he rounded the corner and seeing them, came to a halt.\n\nBriana, who could see Michael directly, quickly hid her face in the crook of Cole's neck with an embarrassed groan. \n\n\"Sorry.\" Michael said in an amused voice. And not taking his eyes off them, casually leaned against a wall. \"Dude we need to talk.\" He said looking at Cole's back.\n\n\"This is not a good time Doc. A little privacy please...?\"\n\n\"Yeah right. If you wanted privacy you would have exercised control till you got into your room.\" \n\n\"Dude!\" Michael growled.\n\n\"Ok ok but we really need to talk man.\" Then he turned and left.\n\nStill inside Briana, Cole started walking towards the stairs. She shuddered as his cock shifted with each movement.\n\n\"Sorry about that Baby.\" He whispered to the still hiding Briana.\n\nBy the time they got to his bedroom, he was fully hard again inside her and proceeded to make a rather sweet slow languid love to her. Her cries were music in his ears and when he looked down to watch himself disappear over and over inside her pink folds, so wet and pretty, the sight was almost his undoing. How many damn times would she undo him?\n\nWhen she came, he felt it. She gripped him so hard and drew him so deep when she climaxed he couldn't breathe. Her thigh muscles went rock hard around his hips. Her nipples pulled tight within the confines of his shirt. Color roared high in her cheeks. Right in front of him, she blossomed all over, and it was a thing of fucking beauty.\n\nHe followed her lead. How could he not? His chest constricted as his release shot through. For one moment, their gazes locked, and then their mouths melded furiously as he pumped his seed into her. She drank in his moans and stroked his back as she squeezed the last drop from him with her own aftershocks.\n\n\"Oh my God,\" she sighed, that soft coming-down sigh he already recognized and loved. She drew his head down to rest on her shoulder as he struggled to catch his breath.\n\n\"I will.\" She said so softly he almost didn't catch it.\n\nHe lifted his head and looked into her eyes. The glazed blue eyes staring at him contained so much love he gasped. Briana leaned forward and kissed him sweetly, stroking his tongue with hers.\n\nShe eased back and stroked his eyebrow with her thumb. \"I will marry you.\" She said.\n\nCole shook his head trying to concentrate on what Briana was saying. There was something so sexy about a well-fucked woman. Especially when she was as beautiful as Briana. \n\nShe cleared her throat and tried to get out of the bed.\n\n\"You didn't mean it.\" She said shakily.\n\n\"The hell I didn't.\" Cole said pushing Briana back down. \"And who said I was asking? There's no way I was going to take NO for an answer.\"\n\n\"Cocky ain't we?\"\n\nCole grinned and leaned down to drop a kiss on her lips.\n\n\"Thought you wanted your confident Cole back. Bri I called your Dad this morning. I'm going to see him tomorrow. To ask for your hand in marriage.\"\n\n\"What? Even before asking me?\" She screeched.\n\n\"I told you I wasn't going to take NO for an answer didn't I?\"\n\n\"Cole...\"\n\n\"Are you so ashamed of me you don't want your parents to know I can't get enough of their daughter?\" Cole asked bending to draw a nipple into his mouth through the shirt.\n\n\"Oh God...Cole stop that. It makes it difficult to think.\" Briana protested whiles at the same time holding Cole head to her nipple. For reasons she couldn't understand, Cole drawing on her nipples with his teeth through the fabric of the shirt was causing a zip of electric thrill to race through her spine. The feeling was pure bliss.",
        "\"I don't want you to think.\" Cole murmured against her nipple, moving to give the other equal attention.\n\nBriana laughed at that.\n\n\"Cole we need to talk about this.\"\n\n\"What is there to talk about Briana? I watched you lying in my bed this morning. Looking so beautiful and sweet and just knew I wanted to see you in my bed every morning for the rest of my life. You belong here Bri. Don't give me the satisfaction of having to tie you to this bed by refusing.\" He murmured the last part, moving down to trail kisses down her tummy. \n\n\"I've already accepted remember?\" Briana said laughing uncontrollably. Her stomach chose that moment to growl.\n\nCole howled with laughter. \n\n\"I'm so sorry baby. You need to eat. Come on.\" Cole said getting up and drawing Briana after him.\n\n\"Yeah what happened to you going to bring me food down at the den?\"\n\n\"Hmm I came back to tell you exactly what was available and ask what you would prefer. And what do I find? My wife to be, lightening into Mr. America. I really wish I had recorded that. That was...a-ma-zing! I've never felt so proud and loved.\" He dropped a kiss on her swollen lips. \"Now let's go get something into that tummy of yours.\"\n\n\"No Cole. I need to take a shower first. I'll be right down. Besides Michael did say he wanted to talk to you remember?\"\n\n\"Okay. But don't take too long otherwise I'm coming in there okay?\"\n\n\"Okay.\"\n\nThen giving her a quick kiss, Cole left the room.\n\n***\n\n\"Jesus, Mickey. You've gotta be shittin' me!\"\n\n\"I'm so sorry dude. But she said she was gonna tell Mary. And I just couldn't allow that Cole. She's pregnant. I just wanted to buy a little time till she at least gets past the first trimester or you found out the truth about Janice's fake pregnancy yourself. But then I saw you with Briana and saw how serious you were about her and knew how worried you must be over this fake pregnancy. This will kill Mary Cole.\" He finished in an anguished whisper.\n\n\"Yeah I know. But fuck dude, why the fuck did you have to do it. I thought you two were...tight.\"\n\nMichael squeezed the bridge of his nose tightly and groaned. \"It was just a moment of weakness. Come on you know how it is.\"\n\n\"Yeah but that's some shit bro. You know you've gotta tell her right? Better she hears it from you than that bitch dude.\"\n\nThe doorbell rang.\n\n\"I'll get it.\" Shouted Dean who was coming out of the kitchen, his mouth full of sandwich.\n\nKayla entered the living room where almost all the guys were relaxing.\n\n\"Hello there my love.\" Dean said attempting to kiss Kayla on the lip.\n\n\"Fuck off dude. Where the hell is Michael?\"\n\n\"He's fucking married Kay. You actually prefer him to me? Mary's gonna make minced meat out of you.\"\n\nKayla looked around ignoring the 'hi's and 'hello's from the guys. She spotted Michael standing with Cole and walk over to them with so much anger on her beautiful face. Then before anyone could understand her intent, she delivered a heavy punch right on the nose of Michael.\n\n\"What the fuc...\" But before Michael could even finish what he was saying, Kayla was giving him a solid kick in the groin.\n\n\"You son-of-a-bitch.\" She said through clenched teeth. Ignoring a kneeling Michael who was groaning as if his balls had detached from his body, Kayla looked up at Cole and said with all the anger she was feeling:\n\n\"He lied.\"\n\n\"I know.\" Cole said softly. \"He told me.\"\n\n\"When?\"\n\n\"Just now. Kay he was being blackmailed by Janice. She caught him with Vicky.\"\n\n\"I don't fucking care. You are his friend. He should have known better than to lie to you.\"\n\n\"I'm sorry.\" Michael whined still clutching his groin.\n\n\"Give me your hand Kay.\" Damon said from behind Kayla.\n\nShe turned and gave him a grateful smile, allowing him to wrap her hand in ice.\n\n\"That was some left hook.\" Tyron commented in an amused voice.\n\n\"Yeah, he taught me.\" She said tilting her heard towards Cole.\n\n\"And right now, I'm a proud teacher.\" Cole said with a grin. \"Hell I wanted to do that myself. But not for me...for Mary.\"\n\n\"Ok now will somebody tell me what the good doctor did?\" Matt asked.\n\n\"I cheated on Mary.\" Michael said quietly.\n\n\"The fuck, dude?\" Chris shouted incredulously. He did look shocked and pissed too. After all Mary was his favorite cousin.\n\n\"Well that's not all he did.\" Kayla started.\n\n\"Kay...\" Cole said in a warning tone.\n\nShe huffed and moved towards the kitchen with a scowl. \"Where's Briana by the way?\" She asked.\n\n\"Upstairs.\" Cole answered.\n\n\"Getting a well-deserved rest.\" Dean added with a smirk.\n\n\"Fuck off.\" Cole muttered with a laugh.\n\n\"Ok spill it Mickey. What did you do?\" Chris asked still sounding pissed.\n\nMichael got to his feet with a wince and didn't miss Cole's happy grin.\n\n\"Enjoying this are you?\" He asked Cole with a glare.\n\n\"You bet I am.\" Cole replied with a laugh. For some reason, he couldn't get angry at Michael. After all he had his Briana and he was relieved he didn't have anything to worry about where Janice was concerned.\n\nMichael narrated everything to the guys and they all seemed angry not with the fact that he had lied to Cole, after all he was only trying to protect a pregnant Mary, but for cheating on his adorable wife. They all liked her.\n\n\"Guys, it can happen to all of us. Give him a break.\" Cole told them.\n\n\"Yeah but this shouldn't happen again dude.\" Chris said in a very serious tone.\n\n\"It won't. Trust me.\" Michael said with so much feeling.\n\n\"And you've gotta tell her before that bitch...\" Matt started but Kayla cut him off with her vehement...\n\n\"She won't.\"\n\n\"You sure about that Kay?\"\n\n\"Damn straight. Not after what I did to her this morning. She ain't gonna spill nothing.\"\n\n\"Thanks Kay. But I still want to tell Mary. Enough of the lies.\"\n\n\"Err...dude, you sure about that? I wouldn't. What she doesn't know won't hurt her right?\" Damon drawled.\n\n\"I'll know.\" Michael said quietly.\n\n\"You'll be okay bro.\" Matt tapped him on the back. And just like that, all the guys were showing their support. \n\n\"How are the balls?\" Chris asked with a smirk.\n\n\"Fuck you.\" Michael muttered.\n\n\"In your dreams dude. Yo Kay, what would you want me to buy for you? Platform heels, bikini, thongs, you just name it.\" Chris shouted, going over to pick Kayla up and twirl her around. \n\nBriana came down to see a squealing Kayla in Chris's arms, with all the guys except Kyle looking on in amusement. Then she noticed some blood on Michael's nose.\n\n\"What happened to you Michael?\" she asked going closer to him.\n\n\"Kayla happened to him.\" Dean said roaring with laughter.\n\n\"It's a long story Hon. Michael is fine.\" Cole told her, drawing her towards the kitchen.\n\n\"You didn't hit him did you?\" She asked Cole with a loud whisper. \n\n\"No no. Why would I do that?\"\n\nHis answer seemed to satisfy her. \"Let me go say hello to Kayla. Will be right back. Where is Kyle?\"\n\n\"Asleep in the den.\" \n\n\"Okay.\"\n\nBriana went to Kayla and saw the swellings on her knuckles. Giving her a hug, she looked pointedly at her hand. Kayla noticed the direction of her eyes and gave her a huge grin.\n\n\"Long story.\" Kayla said her grin downright mischievous.\n\nBriana turned to look at Michael, remembering what Dean had said about Kayla happening to him.\n\n\"Is he going to be okay? He looks...sad.\" She asked Kayla softly.\n\n\"I'll handle it.\" Kayla said starting towards Michael.\n\nMichael saw Kayla approach and actually looked scared. What the fuck had she done to him to get him so wary of her Briana wondered. Then Kayla was stepping into Michael's arms and giving him a long tight hug. The doctor actually looked like he was going to cry.\n\nDue to her concentration on the two, still wondering what had happened, she failed to see Damon's approach. She only noticed he was standing beside her when he called her name softly.\n\n\"Hey.\" She said looking at his beautiful face. The guy really did look angelic.\n\n\"Listen Briana, I'm sorry for upsetting you earlier.\" He started.\n\n\"No no forget about it. I overreacted.\" She said turning pink when she remembered her reaction and what had followed.\n\n\"No you didn't overreact.\" Damon countered. \"I was out of line and I'm sorry.\"\n\nBriana simply opened her arms and gave Damon a squeeze hug.\n\n\"Treat him good. He loves you.\" Damon whispered into her ears.\n\n\"I know and I will. Promise.\" Briana whispered back.\n\nDamon gave Briana a kiss on the forehead and allowed her to go as her stomach grumbled again.\n\n\"He's starving you already. Girl, I'd never starve you.\" Damon gushed before quickly covering his mouth with his palm. The look on his face was so comical that Briana roared with laughter.\n\n\"You're nuts Damon.\" It was obvious he flirted with anything in skirt.\n\nAnd still laughing irrepressibly, she turned in the direction of the kitchen and Cole.\n\n***\n\nFor the first time in a long time, Cole actually had sweaty palms. The last time he had gotten this nervous was when he had been called into the Principal's office in second grade. He said a quick prayer and knocked on the door of Briana's house. Mr. Scott had said he was going to wait at home for him as he had traveled all the way from LA to see him. Cole was sure Elaine Scott, Briana's mother was out. And knowing Sean Scott, Briana's brother, home was the last place he would be on a Sunday afternoon.\n\nTheir butler, Frank, opened the door and gave a brilliant smile when he saw Cole.\n\n\"Hi Frank. Uncle Nick in?\"\n\n\"Good to see you Cole. He's waiting for you on the patio. What should I bring you to drink?\"\n\n\"Need you ask Frank? I've been dreaming of your lemonade for years now. I'd love to have that if you have it please.\"\n\n\"Of course we do. Chilled lemonade coming right up.\" Frank said with a laugh. He had always had a soft spot for Cole.\n\nCole walked out onto the patio and saw Nick Scott on his phone. He waved Cole into a chair, still talking into the phone.\n\n\"Look Dan, tell them to do the best they can. I'll fly out there next week and finalize everything. Talk to you tomorrow.\" He said, hanging up the phone.\n\n\"Hey Cole.\" Nick said coming over to give Cole a hug. \"How's LA?\"\n\n\"Good Uncle Nick.\"\n\n\"And how's Briana doing? Hope you're keeping an eye on her.\"\n\nCole's mouth went dry. He wondered what Nick Scott's reaction would be if he knew just what he had also been keeping IN her. Oh and what a blissfully orgasmic place that was.\n\n\"She's good Uncle Nick.\"\n\n\"Good to know.\"\n\nFrank brought a large pitcher of lemonade with two glasses and poured some for both of them.\n\n\"Thanks Frank.\" Nick Scott thanked the butler, who then excused himself.\n\n\"So, what's so important you had to come all the way to discuss with me?\"\n\nCole realized he had suddenly lost his nerve and hastily reached for the glass of lemonade. His mouth was so dry he needed to moisten it. When he placed the glass back down, he noticed Briana's dad looking at him intently. \n\n\"I want to ask for Briana's hand in marriage Sir.\" Cole blurted it out.\n\nNick Scott was quiet for a long time, staring at Cole. After a long while, he cleared his throat and asked in a gruff voice, \"Is she pregnant?\"\n\n\"No. Not at all Sir.\" Cole's surprise at the question was obvious to the older man.\n\nAnother long silence.\n\n\"How long have you two been s...dating?\" Had he almost said sleeping together? Cole wondered.\n\n\"For the past five months Sir.\"\n\n\"Oh you mean since you last came home to visit.\"\n\nIt wasn't a question.\n\n\"Yes Sir.\"\n\n\"Why do you want to marry her Cole?\"\n\nWhy else would he want to marry her? She fucking had him by the balls...in a good way.\n\n\"I'm nothing without her Uncle Nick. I'm so much in love with her that just the thought of not being with her gives me a physical pain here.\" Cole touched his chest. \"I...I just can't live without her. I won't!\" He finished in a shaky but grave voice. \n\nHe felt wetness on his cheeks and furiously wiped it off. What the fuck was wrong with him? He hadn't even known when those tears had escaped.\n\nNick Scott watched the determined young man in front of him with surprise. Did he even have a say in the matter? It looked like Cole was only there to inform him not to ask.\n\n\"Well you can still be together if you continue dating. You don't have to get married to be together.\" Nick countered in a hard voice.\n\n\"Not good enough Sir.\" Cole replied in an equally strong voice staring Nick straight in the eye.\n\nHe saw Briana's father reach for his phone, then saw him dial someone's number. Nick Scott had obviously put the phone on speaker because the next thing he heard was Briana's soft voice...\n\n\"Hi Daddy.\" And just like that, his heart started beating rapidly. Just her voice could do that to him? God he was so messed up. And he wanted to stay that way forever.\n\n\"You love him?\" Nick asked his daughter straight away.\n\n\"With all my heart Daddy.\" She replied with a catch in her voice. There was a short silence. Then with a sigh, Nick spoke calmly to his daughter. \n\n\"Ok pumpkin. Talk to you later. I love you.\"\n\n\"Love you too Daddy.\"\n\nThen Nick Scott cut the line.\n\n\"You've got my blessing.\"\n\n'Whoa! Just like that?' Cole thought.\n\n\"Thank you Sir.\" He said out loud with so much gratitude in his voice. \n\n\"And Cole,\" Nick Scott continued in a deceptively calm voice, \"You fuck her up, I'm gonna kill you.\"\n\n\"I'll do right by her I promise Uncle Nick.\"\n\n\"You had better son. She's my baby. Wait till you have yours. Then you'll understand how I feel. And please don't keep her away from me. Please!\"\n\nCole looked up and saw tears in Nick's eyes. Wow!\n\nHe couldn't talk past the lump in his throat so he simply nodded.\n\nThe older man cleared his throat and wiped his eyes.\n\n\"I say we drink something stronger don't you think?\" Nick Scott said in a hoarse voice. At Cole's nod, he called for Frank. The butler appeared immediately making Cole wonder whether he had been standing just inside the door eavesdropping? \n\n\"Bring us a bottle of Courvoisier Frank.\"\n\n\"Right away Mr. Scott.\" And when he turned to go, he gave Cole a wink. Yes, he had been listening.\n\nCole grinned. He was so happy he was feeling light headed.\n\nWhen they had both poured generous portions into their glasses, Nick raised his glass and toasted, \"To a happy life.\"\n\n\"To a happy life.\" Cole repeated and both drained their glasses.\n\n\"Seen your dad ye...\"\n\n\"Nick?\" Elaine Scott's sweet voice drifted out to them. \"There you are. Oh Cole. How are you doing my dear?\" She asked giving him a hug. \n\n\"I'm good Auntie E.\"\n\n\"You look good. What brings you here? Hope all's well.\"\n\n\"He's going to marry your daughter. He came to tell us. Of course he started by asking but...he actually only came to inform us. And I gave him my blessings.\"\n\nElaine Scott's mouth had been opened throughout her husband's narration.\n\nShe closed it and turned to look at Cole. \n\n\"Well what can I say Nick? You know us Scott women...you get just one taste and you've gotta have it for the rest of your life.\"\n\n\"Wha...what?\" Cole croaked staring at the woman who looked so much like her daughter.\n\n\"Ow come on Cole. You really think I didn't know? I didn't say anything because I knew you were stuck even if you didn't know it yourself. And did I tell you what I liked best about Cole Nick?\" She asked turning to look at her husband. At his smile, she turned back to Cole, ignoring the fact that he had turned red to the roots of his hair.\n\n\"He goes after whatever he wants and doesn't stop till he gets it. Now tell me Nick, who wouldn't want a son-in-law like that? Come here son.\"\n\nCole rose like a zombie and walked into Elaine's outstretched arms and got engulfed in a warm motherly embrace.\n\n\"Thanks.\" He whispered into her ears.\n\n\"Be happy.\" She whispered back.\n\nStepping back, she accepted the handkerchief her husband gave her and wiped the tears from her face. \n\n\"So...we've got a wedding to plan huh?\" Elaine said looking at Cole.\n\n\"Who's wedding?\" Sean asking waking out onto the patio. \"Oh hey Cole. Sup man?\" He went over to give Cole a one-armed hug. For a sixteen year old boy, Briana's kid brother sure did look all grown up.\n\n\"Your sister is getting married.\" Elaine answered his question.\n\n\"To Cole?\" Sean asked his mum.\n\n\"Yes.\"\n\n\"Now that's what I'm talking about. No need to welcome you into the family bro. You've always been part. I'm happy for you. She ever gives you grief, talk to me. I know how to handle her. For a fee of course.\"\n\n\"I'll remember that. Thanks Sean.\" Cole said with a laugh.\n\n\"What if he gives your sister grief Sean? Then what?\" Nick asked his son.\n\n\"Not gonna happen. She's got him whipped!\" Sean answered with a shrug.\n\nHis parents and Cole burst out laughing.\n\n\"Treat her well yeah?\" Sean told Cole solemnly. \n\n\"You can bet on that bro.\" Cole answered equally seriously.\n\nBoth guys did the one arm hug thing and sat. \n\n\"So, when is the wedding?\" Elaine asked.\n\n\"Why the rush Hon? They can stay engaged till Bri finishes school.\" Nick said.\n\n\"Hell no.\" Elaine exclaimed. \"No way am I going to allow my daughter to walk down the aisle in a maternity wedding gown.\"\n\n\"She's not pregnant Elaine.\" Nick muttered.\n\n\"And I am not going to wait till she is. Look at him Nick\" Elaine said pointing at Cole. \"You really think your daughter is going to be able to keep her hands off him?\"\n\n\"I'm so out of here.\" Sean said rushing to the door. \"Say hi to Bri Cole.\"\n\n\"Will do Sean.\" Cole answered in a strangled voice. God, he needed to get out of here.\n\n\"Auntie...\" He started but got shot down before he could go any further.\n\n\"That's mum to you young man.\" Elaine admonished.\n\nWith a happy smile, he went on...\n\n\"Mum, I need to discuss the date with Briana first but I also vote for as soon as possible.\"\n\n\"You sure you haven't knocked her up already son?\" Nick asked again looking Cole in the eye.\n\n\"I haven't Sir.\"\n\n\"Dad.\" Nick said in a stern voice. \"You've got two now.\" He added in a softer voice.\n\n\"I've always had two.\" Cole said shakily struggling to contain the emotion threatening to crack his voice. \"Thanks Dad. But the last time I saw her, Briana wasn't pregnant.\" And he sure was thankful for that because he didn't want to disappoint Nick Scott.\n\n\"Well I still don't want to take chances.\" Elaine argued, \"I want the wedding now. You talk to your fianc\u00e9e while I start with the planning.\" \n\nNick Scott rolled his eyes at his wife. \n\n\"This is how it's gonna be son; you kids must at least wait till she's done with her freshman year. And no kids till she's done with college. That's the only way I'm gonna accept this. So bear that in mind when you have that talk with my daughter.\" Nick Scott said looking like the hard business man that he was. And Cole knew he was dead serious. He thought his suggestion was perfect though.\n\n\"I like that suggestion actually Un...Dad. Works for me just fine. And I'm sure Briana will be ok with it too.\"\n\n\"Oh it's going to be grand.\" Elaine gushed with so much delight.\n\n\"I will call you immediately Briana and I have a talk. Thanks so much. I really appreciate your support and I promised to make her happy till we both leave this world. And if there is life after that, I'll continue loving and making her happy then.\" Cole said with a smile.\n\n\"Oh you can continue when you leave here. I hear it's possible.\" Elaine deadpanned. \n\n\"Honey leave the boy alone.\" Nick laughingly told his wife.\n\n\"Alright alright. I'm just so happy.\" She gushed drawing Cole into a smothering embrace.\n\nWhen Cole eventually left the Scott household, it was with a bounce in his step. He was walking on air. He had Briana's parents' full blessings to marry her. He was ecstatic. Everything was going so great. \n\nLittle did he know..."
    ],
    "authorname": "adjoaq",
    "tags": [
        "romance",
        "bathroom",
        "parents",
        "proposal",
        "cole",
        "briana",
        "love"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/velvet-heat-ch-04"
}