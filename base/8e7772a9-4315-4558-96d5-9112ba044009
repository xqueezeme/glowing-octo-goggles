{
    "title": "William Finds Love Pt. 02",
    "pages": [
        "\"Why are you putting the greeting cards there? They're supposed to be in Aisle 9 with the others,\" William said to his newest staff member at the pharmacy. \"You need to be doing a lot better, John.\" He stormed off, leaving the young clerk feeling dejected.\n\nThis was not his style. He was always kind and welcoming to all employees of the pharmacy he managed. The incident from days before was taking a severe toll on William. He went through a lifetime of being ignored by the opposite sex. He never had a single chance with a girl. Until the one female in his life that he truly cared for and longed to be with witnessed him cum himself in a moment of pure embarrassment and humiliation. He couldn't even hold it together for longer than a few minutes.\n\nDespite the situation, Amanda didn't stop being the sweetheart that she is. She felt awful for William and wanted to make sure he wasn't too down on himself. She was well aware of the anxieties that plagued William most of his life. She knew how he must have felt after the incident but wanted to ensure he didn't feel like he messed up in any way.\n\nShe frequently texted and called, trying to make things normal between them. After a couple weeks, she finally convinced him to let her come over and see him.\n\n\"Hey goofball,\" she said. It wasn't uncommon for them to greet each other with silly names.\n\n\"Hey,\" William said quietly as he opened the door and retreated to the couch. He didn't even hug her.\n\nAmanda sat down and waited for William to say something, but he stayed quiet, staring at the tv. She finally stood up, took the remote and shut it off.\n\n\"William. Come on,\" she said.\n\n\"What?\"\n\n\"Can we please stop with the whole attitude thing? I've been nothing but nice to you. I know why you're doing this.\"\n\nWilliam finally looked at her. \"Doing what?\"\n\nAmanda rolled her eyes. \"You've been a cloud of darkness the past couple weeks. One word texts. No call backs. Moping around.\"\n\nWilliam didn't protest. She was right.\n\n\"So you had a little accident,\" she continued. \"Big deal dude. Do you know how many times I've seen guys blow their nut too early?\"\n\nHer vulgar words cut through the tension like a sharp knife. William blushed. It was the first time they spoke about what happened.\n\n\"I didn't mean that,\" Amanda admitted. \"I'm sorry,\" she said softly. \"Can we just forget about it? I had a lot of fun the other day with our little experiment.\"\n\nWilliam nodded. He too had fun, but was too embarrassed to admit it yet.\n\n\"I brought you something,\" Amanda said as she rummaged through her bag. She produced a small gift bag and brought it over to William. She sat down next to him as he took it from her.\n\n\"What's this?\" he asked.\n\n\"Open it!\"\n\nHe dug into the bag, removing the carefully positioned wrap. He peered inside. \"Boxer briefs?\"\n\nAmanda giggled. \"I realized we neglected to include underwear in our makeover as soon as I saw your worn down tighty whities!\"\n\nWilliam cracked up laughing. \"Hey, those get the job done ya know.\"\n\n\"Apparently not though!\" Amanda joked. \"These ones are extra roomy,\" she whispered with a wink.\n\nWilliam suddenly felt awful. Here was this sweet beautiful girl he truly called a friend. She was being so kind yet he continued to be a complete asshole.\n\nHe abruptly hugged her and held her tight. \"I'm sorry,\" he said as they embraced. He let her go and faced her. \"I'm acting like an idiot.\"\n\n\"It's ok.\"\n\n\"No one's ever seen me down there,\" he said. \"I think I was just really overcome with the moment.\"\n\nAmanda smiled and held his hand. \"I told you I don't care. I understand.\"\n\n\"So... you're not creeped out by me?\" he asked.\n\nAmanda laughed. \"Oh please, William. Quite the opposite actually.\"\n\n\"Really?\"\n\nShe nodded. \"I actually thought it was kind of impressive. Like... you didn't even touch yourself. And there was so much shooting out. How was that even possible?\"\n\nWilliam blushed again. \"I don't know honestly. It's always like that. It can get pretty annoying if I'm being honest.\"\n\n\"You're just full of surprises huh?\"\n\nWilliam smiled. \"Just a few.\"\n\n\"So I have to know,\" Amanda started. \"Did you send the pics?\"\n\n\"Umm... I did,\" he said. \"I sent a couple to one girl.\"\n\nAmanda's eyes lit up. \"And?!\" She asked excitedly.\n\nWilliam unlocked his phone and handed it to Amanda. She quickly read what was on the screen. \"William!\" she shouted. \"This girl is really into you!\"\n\nHe shrugged off the compliment. \"Or she's into my thing.\"\n\n\"Still! This is racy!\"\n\nAmanda's eyes scanned the message thread. \"I want it inside me,\" she said as she began to read aloud some excerpts. \"How much do you cum? I wanna eat it,\" she laughed as she read. \"This is racy!\"\n\nWilliam smiled. \"Go to the end.\"\n\nAmanda urgently read the message before handing the phone back. \"Well? Are you gonna do it?\"\n\n\"No! Of course not! Plus, how would I even... I would totally mess it up.\"\n\nAmanda was skeptical. \"How hard could it be? One hand holds the phone the other hand... well... does the work.\"\n\nThey laughed. William shook his head. \"I'd find a way to mess it up. Or ruin my phone or something.\"\n\n\"She seems like she really wants to see you shoot,\" Amanda reminded him. \"Like, really really wants to see it.\"\n\n\"Well, that's just great but I signed up for this to find a girlfriend. Not send a masturbation video to some stranger who's probably a guy anyways.\"\n\n\"Oh knock it off. First of all, that's no guy. You can tell. Second, you'll find a connection eventually. But this is the fun part of online dating. I think you should do it. I think she'd be impressed!\"\n\n\"You think so?\" William considered the idea. \"I don't know. I still feel like I'd screw it up.\"\n\nAmanda thought of something. \"You know... I helped you with the photos. I could also help with the video if you want.\"\n\nWilliam's heart skipped a beat. \"Like, you'd be the one to video it?\"\n\n\"Mm hmm,\" she nodded excitedly. \"Why not?\"\n\nWilliam couldn't contain his excitement. Of course he wanted her to tape him cumming. But his anxiety tried to overshadow his instincts to go for it. Amanda patiently waited while watching his facial expression. \"William?\" she asked.\n\n\"Umm sure yeah why not,\" he said with a tremble in his voice. \"Here?\"\n\nAmanda looked around. \"I think we should go to your room. On account of your...ermm... abilities?\"\n\nThey both laughed as Amanda led William into his bedroom. It would be the first time any girl had been in there with him.\n\n\"Does anyone live here?\" she joked as she looked around his small yet impeccably clean bedroom.\n\n\"You know I'm a neat freak,\" said William as he awkwardly stood by his bedside waiting for instructions from Amanda.\n\n\"This is more than neat. This looks like the model apartment they use to sell units. William, you don't even have a nightstand!\" They each laughed as they examined William's comically empty bedroom. There was a bed, a desk and chair, and a TV.\n\nAmanda turned to see William standing shyly with his hands by his side. She looked him up and down. \"I think you should probably go in the buff for this one, right?\"\n\n\"Oh, umm, ok. You really think so?\" William was visibly nervous.\n\nShe nodded. \"If you want the maximum effect. Don't worry I won't get your face in it. Like you said, it might be some creepy guy.\"\n\nWilliam's eyes grew wide. \"Relax!\" Amanda said. \"I'm joking. Now, come on!\"\n\n\"Ok. Sure, yup. No problem. Ok here goes,\" he said as he took off his t-shirt first. His physique was considerably skinny and lacked any real muscle definition. He hated taking his shirt off and here he went about to take a whole lot more off.\n\nAmanda didn't criticize him. She remained expressionless and professional, committed to her task. William felt a bit more at ease now as he proceeded to unbuckle his jeans and lower them to the ground.\n\n\"You and those undies,\" Amanda joked. William looked down to see his tight white briefs, struggling to contain his hefty appendage.\n\nHe then took a deep breath and looked up. \"Ready?\"\n\nShe smiled widely and nodded.\n\nHe peeled his underwear off and closed his eyes. For some reason, he anticipated hearing her laugh at him. But the laughing never came. Instead, he opened his eyes to see Amanda staring hopelessly at his hanging cock and balls. \"Wow,\" she said. \"Just wow.\"\n\n\"What?\" William asked.\n\nAmanda rolled her eyes. \"You know what, dum-dum. Your penis is so beautiful. I'm jealous.\"\n\n\"Oh you're jealous?\" he laughed.\n\n\"I am!\" she said, smiling. \"It's super nice.\"\n\nWilliam continued removing his underwear and placed his hands behind his back. They each stared at his anatomy in silence.\n\n\"Ok, so... do I need to get an erection now?\"\n\nAmanda was the one to awkwardly laugh this time. \"Yes, William. Yes I believe you need to have an erection for this.\"\n\nBefore William made his next move, he paused and looked up. \"Are you gonna just watch?\"\n\n\"I kind of have to, don't I?\"\n\nShe was right. William hated himself for being so tentative and wished he could simply jerk off in front of the gorgeous young woman he loved so much. \"Ok. Let me just... ok... here we go.\"\n\nWilliam began playing with his cock with one hand. He had never masturbated in front of anyone of course. It was a private and intimate activity he often felt bad about even doing it so much. To make matters worse, the person he often thought about while doing so was now right in front of him. His heart beat so strongly he felt like he was having a heart attack.\n\nDespite being as nervous as he was, he was hard as a rock in record time. His cock stretched and bulged to over nine inches as his hand now raced up and down the thick shaft.\n\nAmanda was hypnotized as she watched him. She smiled widely while admiring the sheer mass of his cock. Seeing such a powerful and masculine part of William was both surprising and sexy all at the same time. She noticed his eyes were closed as he concentrated, allowing her to stare unabated at his cock. He stroked rapidly with one hand while his other clutched the side of his thigh. She noticed he spread his legs shoulder length apart.\n\n\"Let me know when you're getting close,\" she finally said, breaking their minutes-long silence.\n\n\"Ok,\" William responded, opening his eyes for the first time. He immediately saw Amanda staring at him without the phone even ready. She looked like she was under a spell.\n\n\"Your balls are pretty big too, huh?\" she asked. \"It's like everything about you down there is super sized!\"\n\nWilliam closed his eyes again and increased his intensity. He was beyond the point of being uncomfortable and had now embraced the moment. Suddenly the idea of Amanda watching him cum was bringing him limitless pleasure and anticipation. For several minutes, he stroked his cock with two hands, clenching his butt cheeks as his momentum increased.\n\n\"Jesus. You need two hands on it!\" Amanda said. \"I'm sorry, that's just so crazy!\"\n\nWilliam managed to make eye contact and smile. He was proud of the reaction he was getting out of her. He even noticed her face was flush. Perhaps he was actually arousing a real live woman.\n\n\"Does it feel good? Are you gonna... umm... finish?\" she asked as she steadied the phone.\n\n\"I think so. Soon,\" he said as he winced with pleasure.\n\n\"Ok, ok, hold on,\" Amanda said as she looked around the room. William paused jerking off as he held his cock tightly with both hands. \"What?\" he asked.\n\n\"Where do you want to shoot it? We shouldn't get any identifying things in the frame.\"\n\nWilliam looked around. Amanda was right. The last thing he needed was this video to end up on an online porn site or something. \"Umm... how about into a sock or something?\" he suggested.\n\nAmanda laughed. \"That's... that's not really exciting, William.\"\n\n\"Right,\" he said. He pumped his cock slowly so as not to lose any intensity in his erection.\n\n\"Here,\" Amanda said as she lifted his blanket up in the air and spread it out across his bed. \"We'll do like an over-the-shoulder shot,\" she said. \"This way we can really show how far it goes.\"\n\nShe guided William by his shoulders so that he was at the foot of the bed, facing towards it. She then slid his desk chair over and stood on it, next to him. \"Careful,\" William warned as he clutched his hard cock.\n\nNow that she was positioned higher than he was, she held the phone out and aimed. \"This is awesome,\" she said. \"Your dick still takes up the whole frickin frame!\"\n\n\"Ok, should I go now?\"\n\n\"Let it rip!\" Amanda encouraged as she hit record.\n\nWilliam went back to masturbating, this time with a clear mission. It was time to cum. He used both hands to feverishly jerk his cock. There was no need to lube as his precum had been gushing nearly since they started. Squishy, flopping sounds emanated from him.\n\nAmanda watched excitedly as she focused the shot, making sure not to show too much of anything other than William's cock. \"Holy shit,\" she said. \"You're so huge.\"\n\n\"Ohhh fuck,\" William said. \"Oh my God!\"\n\n\"Now?\"\n\nWilliam grunted. \"Ahhhhh, fuck. Oh fuck!\" he screamed as he jutted his waist out, holding his cock steady. \"I'm gonna cum!\" he whined.\n\nWilliam stomped his right foot on the ground as he shot a thick, white rope of cum across his bed. It landed on the bed spread with a loud splat. \"Fuck!\" he said quieter this time as two more thicker loads coated the bed.\n\nAmanda remained quiet by covering her mouth with her hand. Her other other hand held the phone steady. Her heart raced as she watched how much cum William was expelling from his massive cock.\n\n\"Nnnnnhhhhh!\" William grunted again as he thrusted into his own hand, spraying the sheets with an endless supply of fresh seed. Amanda continued to be amazed as she watched him orgasm. She had never seen so much cum in her life. The sounds and smell of his semen floated through the air as he unleashed massive globs.\n\nWilliam let out a huge sigh as the final deposit dripped out his cock onto the floor. Amanda, still in shock, managed to press STOP without making a sound. Once the video was over, she simply stood still, staring at the massive amount of cum in front of them both. William clutched his cock and panted. He couldn't remember the last time he came that much.\n\nThen Amanda burst out laughing. She laughed so hard, she felt like she would cry. She nearly fell off the chair as she carefully climbed down. William turned to her in horror. \"What?!\" he asked. \"Why are you laughing at me!\"\n\nAmanda shook her head as she tried to regain composure. \"I'm not laughing at you, honey. Far from it. I'm laughing at the sheer amount of jizz you just shot out. I have never... and I mean never seen anything like this in my life! You're incredible!\"\n\n\"Really?\" William asked, turning to the bed. Thick white streaks covered nearly every inch of the blanket.\n\nAmanda stood next to him as they admired the mess. \"Really,\" she nodded with conviction. \"That was un-freaking-believable.\"\n\nShe turned to him as they stood there. He was sweating and still panting. \"Have you always cum like that? Like since you were young?\"\n\n\"As long as I can remember. I just thought it was normal.\"\n\nAmanda giggled, turning back to the bed. \"This,\" she said pointing. \"This is far from normal!\"\n\n\"Gee, thanks,\" said William.\n\nAmanda clutched his arm. \"No, no, no. Not like in a bad way. I think it's incredibly hot!\"\n\n\"You do?\" William asked.\n\nShe nodded excitedly. \"I think it's really hot. I really do.\" She glanced at his cock. \"And you're still hard?\"\n\nWilliam blushed. \"Sometimes it doesn't really go away after the first time.\"\n\nAmanda smiled and shook her head while looking at his cock. \"So what do you do?\"\n\n\"What do I do?\" he asked as he picked up his cock and let it down. \"I usually just wait it out. Or do it again. I guess it depends.\"\n\nAmanda laughed. \"You're hilarious.\" She turned back to the bed. \"I'll go check our video clip. I guess you need to change the sheets, huh?\"\n\nWilliam blushed. \"Unfortunately, yes. I do. I'll meet you in the living room.\"\n\nAmanda headed for the door, but not before looking back at William. He was busy collecting the bed sheets. She watched his cock bounce around, still as hard as it was when they first started. She marveled at his ability to remain so erect so soon after orgasm.\n\nBack in the living room, she sat down on the couch and reviewed the footage. Despite her intense excitement, she managed to keep the phone still, capturing his entire orgasm without revealing anything in the background that may expose his identity. As William cleaned in the other room, she watched the sixty second clip several times. She couldn't peel her eyes off the screen as his cock erupted massive white loads across the bed sheets.\n\nAs she witnessed the mighty cock pulse and throb, she felt her vagina begin to heaten up. She was expectedly horny as hell while viewing the clip. She quickly placed a hand between her legs to gauge just how hot and wet she was becoming. If William wasn't there, there isn't a doubt in her mind she would have masturbated immediately. But for now, she would be forced to keep her arousal secret.\n\n\"Hey,\" William said as he emerged from the bedroom. He was back in his clothes, jeans and a t-shirt.\n\n\"Hey!\" Amanda said as she looked up. It was clear to see William was still hard. He awkwardly tried to hide his erection with his hands, but was having very little luck in doing so. He quickly sat down next to her in an effort to minimize his exposure. \"How'd it come out?\" he asked.\n\n\"Quickly and long distance,\" Amanda said as they both cracked up laughing. \"I'm sorry!\" she squealed. \"I couldn't help it.\"\n\n\"Yeah, that was kind of a lay-up,\" William conceded.\n\nThey both turned their attention to the clip. \"Can you turn the sound down?\" he said. \"It's really embarrassing.\"\n\n\"What is? Your little moans? I think it's cute,\" Amanda said. \"You can't help it.\"\n\n\"It's still really embarrassing,\" William said.\n\nShe did as he asked and they continued to watch the clip on loop. \"How on Earth do you shoot so much?\" she asked. \"It's really so crazy to watch.\"\n\n\"Like I said. I've always been like that. As long as I can remember.\"\n\n\"There's nothing in the background. We're good. It's just your nine inch cock nutting everywhere. Should we send it?\"\n\nWilliam smiled and shook his head. \"Whatever,\" he said. \"Fire away.\"\n\nWithin seconds, Amanda delivered the video. William marveled at how quickly she was able to navigate his phone and the dating App. He was always so confused with those sorts of things.\n\nShe put the phone down and crossed her legs. \"Now, what do you want to do?\"\n\nWilliam shifted uncomfortably on the couch. He was still desperately hard and really wanted to masturbate a second time. \"I think I'm getting kind of tired,\" he said. \"I may take a nap or something.\"\n\nAmanda cracked up laughing. \"What?\" William asked.\n\nShe narrowed her eyes. \"William... my dearest William. I don't think you'll be napping anytime soon.\"\n\n\"Why?\" he protested. He needed to find a way to get her to leave so he could cum again.\n\nShe pointed to his crotch which was covered with his hands. \"Because you're still hard as a rock,\" she whispered.\n\nWilliam felt exposed. He hadn't realized he was being so obvious. \"Fuck,\" he said. \"I know.\"\n\n\"It's ok. You can take it out. I've seen it a bunch and I'm not gonna bite it.\" Amanda crossed her arms, showing no signs of leaving.\n\n\"But you don't think that'd be a little weird?\" William asked.\n\n\"After today? And the other day?\" she giggled. \"William, I think it'd be normal if anything at this point.\"\n\n\"Fine. But no laughing. I am only doing this because I feel like it's gonna burst if I don't free it.\"\n\n\"Deal,\" she said looking down at his crotch.\n\nHe carefully shimmied out of his jeans for the second time that day, lowering them to his ankles and kicking them aside. He was wearing the new underwear she got him as a gift. His towering penis pressed hard against them, creating a massive tent.",
        "\"They're a good look on you,\" she said.\n\n\"Thanks,\" William said as he slid them off next, freeing his aching cock as it slapped against his skinny belly.\n\n\"Oh my gosh,\" Amanda said. She started to laugh, but was met with a glare from William. \"I'm sorry, I'm sorry. I won't laugh.\"\n\n\"There,\" said William as he rested his hands by his side. His cock stuck straight up, just as hard, if not harder, than before.\n\n\"It's amazing. It truly is such a cool thing you have,\" Amanda said as she stared at it. \"It's so long and fat. I think the thickness is really what intrigues me the most.\"\n\n\"Well, thanks?,\" William said. He didn't know how else to react.\n\n\"Look, it's crying! Is it sad?\" she said pointing to the precum dripping from his bloated head.\n\n\"Tears of joy,\" William responded.\n\nAmanda leaned in to get a better look at him. \"Do you remember my boyfriend Christian? From a couple years ago?\"\n\n\"Yes.\" William didn't need any more reminders of her past boyfriends.\n\n\"Well, he was kind of a jerk, I found out eventually. As you know. But let me tell you. He had a huge dick. That was the one thing he really had going for him. But, William. I'm not even kidding you when I say...\" Amanda pointed to his cock, several inches below the head. \"This is where his dick was. You're easily two or three inches longer than him I think.\"\n\nWilliam stared at her manicured finger, a mere inch away from touching his cock. He pictured her boyfriend's penis not being close to his size. He fantasized about the feeling of insecurity on another man's face when he sees he is no match for William.\n\nHis pleasure increased rapidly in that tiny moment.\n\n\"Ohhh,\" William moaned very softly.\n\nAmanda's eyes widened and mouth dropped. She looked up at William who looked like he was trying to hold back from passing wind. She looked back down at his cock where a tiny bead of white cum dripped out the tip and down the long shaft. They each watched the small drop make its long journey down his veiny, throbbing cock until it landed in his dark brown bush.\n\n\"Did you cum?\" she asked, stunned.\n\nWilliam shook his head. \"It was just a little. I should have told you... sometimes that happens.\"\n\n\"Sometimes? Like when?\" she asked, stunned.\n\nWilliam didn't answer. He still had a very strained and uncomfortable look on his face.\n\n\"When?\" Amanda repeated. \"Like when you're really turned on?\"\n\nSensing this as being his chance, William nodded so subtly it could have been easily missed. But not by Amanda. She smiled pleasantly when she saw he was indeed aroused by her. \"Was it me coming close to you like this?\" she said as she waved her hand over his penis, nearly touching it again.\n\nWilliam responded with another look of discomfort. She was driving him crazy.\n\n\"Do you want me to touch it really quick?\"\n\nThey made eye contact. After a brief deliberation, William nodded. He definitely wanted her to touch it. Amanda smiled and reached for his cock, quickly grabbing it by its thickest part with one hand. She squeezed with all four fingers. Due to his impressive girth, her fingers just fell short of connecting on the other side.\n\n\"Holy shit,\" she said. \"You're so hard right now.\"\n\n\"Thanks,\" William said. He mentally scolded himself immediately after uttering the weird response a second time.\n\n\"How are you so thick? This is incredible. This is... this is a COCK,\" she said as she chuckled. \"This is a legit cock right here.\"\n\n\"Oh fuck,\" William said as he closed his eyes and put his hands on his head. \"This feels so fucking good!\" he yelled.\n\nAmanda loved the effect she was having on him. \"I'm gonna make you feel a whole lot better too,\" she teased. \"Come on, let's get this thing singing again.\"\n\nShe quickly spit in her hands for lube and in no time, she was giving him a handjob. Her little hand stroked his cock masterfully, ensuring to cover its entire length. She bit her lower lip as she concentrated on bringing the young man to orgasm. She smiled eagerly the entire time. As if she was taking a test where she already knew all the answers.\n\n\"Does this feel good?\" she asked. William opened his eyes and nodded with conviction.\n\n\"Good,\" she said. \"Can I squeeze your balls too?\"\n\nHe didn't even have to answer. She knew she could. With her other hand she squeezed his balls. \"These are so big!\" she complimented him in a whisper.\n\n\"Oh fuck, Amanda!\" William moaned. \"Don't stop! Oh my God!\"\n\n\"Yeah? Are you gonna shoot?\"\n\n\"If you keep doing that, I am!\"\n\nAmanda slowed her pace down, sensing she had brought him too close to the edge. \"I just love how big you feel. It's really incredible.\"\n\n\"How are you so good at this?\" he asked as they each stared at her hands working his cock and balls.\n\n\"Ohh, ya know... experience.\" She winked at him before slowly gliding her fingertips up and down his cock. She meticulously gauged his hardness and girth, pausing every now and then to stroke him before stopping again.\n\n\"I can't believe all this time, you've had this glorious thing under your pants,\" she said, smiling up at him. William beamed with delight.\n\nHer hands were driving him crazy. He tried desperately to sit perfectly still with his eyes painfully glued to her fingers. He knew he would cum any minute. \"Oh my God,\" he said for seemingly the thousandth time. \"I'm gonna cum again.\"\n\n\"Ok!\" Amanda said with glee as she switched to a full on handjob with both hands racing up and down his cock. \"Just let it all out. You'll feel so good.\"\n\nWilliam gritted his teeth, raised his butt up off the couch, and fucked Amanda's hands as she stroked. \"Ohhhhh God!\" he said. \"Cumming!\"\n\n\"Don't shoot me!\" Amanda pleaded as she pointed William's cock to the right of him just in time for the first load to spray the end table and lamp nearby.\n\n\"Ahhh!\" William moaned as Amanda began to laugh. She aimed his cock away from them both. He shot more thick blasts onto the table and couch, soaking anything in its path.\n\n\"Look at it!\" Amanda screamed. \"I can't believe it!\" She continued to stroke his exploding cock as he shot rope after rope of creamy jizz.\n\n\"Shit!\" William said. \"It's going everywhere!\"\n\nAmanda mercifully repositioned his cock upward so that the last few blasts landed on William's belly. \"Theeeere we go,\" she said as she slowly squeezed out the remaining seed. Her nostrils were filled with the familiar scent of cum she had been accustomed to over the years.\n\nWhen it was over, they each laughed aggressively. Much like they had done many times whether it be to a funny movie or television show. Or a good joke. This time it was William's prolific ejaculatory skills.\n\n\"I'm speechless,\" she said, shaking her head. \"How do you cum that much after just having done it a few minutes ago?!\"\n\nWilliam was as red as a tomato. He was suddenly overcome with embarrassment as his post-nut clarity consumed him. He frantically tried to clean up cum and get dressed, but Amanda steadied him with her hand. \"William,\" she said. \"It's ok! Calm down!\"\n\n\"I... I... that was... I'm sorry.\"\n\nAmanda shrugged him off. \"Don't be silly,\" she said as she wagged his finally softening cock in her hand. \"I loved every second of that and you should too. Oh and look! Your boner is finally going down!\"\n\nThey each watched his plump cock deflate as it hung lazily over her enclosed fist at the base. \"Still huge,\" she commented.\n\n\"It's everywhere, huh?\" William asked, noticing the streaks of cum on the side table and lamp. \"I'm such a fucking moron.\"\n\n\"That?\" Amanda pointed. \"That was me, my friend. Full responsibility. I just didn't wanna get doused by it!\"\n\nShe stood up, leaving William naked and exposed. He quickly pulled his underwear up and stuffed his semi-hard cock back in. \"What are you doing?\"\n\nAmanda headed for the kitchen, fetching cleaning supplies just as she did the other day. \"Cleaning up your mess before it stains this nice couch you have.\"\n\n\"Seriously?\" William asked.\n\n\"Well no. It's a nasty couch if I'm being honest. But I'll still clean it.\"\n\nAs she wiped down the couch, table, and lamp, William watched. Her boobs swayed off her body perfectly as she bent over. He hated himself for not even noticing them when she jerked him off. He was too caught up in the moment. He prayed he would get another chance and maybe see them for real one day.\n\n\"All good!\" she said happily as she admired her work. \"That... that was a lot of fuckin cum, my friend. Good God. You need to jerk off like every day with that kind of libido.\"\n\n\"Uhhh... Amanda? Look,\" said William, handing her his phone.\n\nShe tucked her hair behind her ear as she read what was on the screen. He watched her reaction carefully. Her eyes lit up. \"William! This is awesome!\"\n\nThe girl he sent the video to was not only pleased, but admitted that she masturbated and came while watching it. She was eager to meet in person and gave him her real number to text her.\n\n\"You think this is good?\" William asked.\n\n\"Umm... no. No, William, this is terrible. Just really really awful.\" She laughed. \"You have got a real hottie on your tail now!\"\n\nWilliam's facial expression did not exhibit happiness or excitement. Instead he was serious, somewhat worried. \"What is it?\" she asked, concerned.\n\nHe shook his head. \"No, nothing. It's nothing. I'm excited.\"\n\nShe frowned, skeptically. \"Do you know how long I've known you? I know that face. Tell me what's wrong.\"\n\nWilliam sighed as he stood up and paced around. \"It's embarrassing, Amanda.\"\n\n\"After what we just did... I think we're on another level, wouldn't you say?\" she asked as she watched him walk around. \"Tell me what it is.\"\n\nWilliam stopped and leaned against the doorway separating the kitchen area from the living room. \"Amanda... I've kissed one girl in my life. And I've never... touched anyone. Until the other day with you, no one's ever even seen me naked.\"\n\n\"William...\" Amanda said softly. She was taken aback a bit by his comments. She admitted even she didn't really know how to respond. \"I had no idea.\"\n\n\"Girls don't like me. They think I'm shy and weird and ugly. These girls online though... The one who wants to meet... They're out of my league. She's gonna actually meet me and run for the other direction.\"\n\nAmanda shook her head. \"No. Not possible. You're a sweetheart... And you've got something they all want.\"\n\nWilliam scoffed. \"Great. So it's just my penis.\"\n\n\"No, no, no, you know what I mean!\" Amanda exclaimed. \"Yes they are attracted to your dick, but my point is there's so much more they will find out.\"\n\n\"I don't even know what I'm doing with it,\" he protested. \"I'll embarrass myself.\"\n\n\"You didn't with me,\" Amanda said as she smiled warmly.\n\n\"All you did was jerk me off. What if she wants to have sex? How would I even get it inside?\"\n\nAmanda laughed. \"Well, yeah. I can see what you mean. That may pose an issue.\"\n\n\"See!\" William shouted, trying to make a point.\n\n\"Only at first! Believe me, William. I've been with big guys.\"\n\n\"As big as me?\" he asked.\n\n\"Well, no,\" she shook her head. \"No one's as big as you. You may be the biggest in the world.\"\n\nThey each laughed before Amanda stood up to join him by the kitchen. She placed her hands on his shoulders. \"William, look at me.\" He looked up.\n\n\"You need to be confident. You have a lot to offer.\" She looked down and smiled. \"A whole lot.\" They both laughed again as the mood lightened. They made eye contact again. \"I'll help you ok? We'll get you ready. I won't let you go into it without preparing.\"\n\n\"Preparing?\"\n\n\"Well, sure. Maybe we can... umm... I dunno. Practice or something.\" Amanda's imagination ran wild as even she was unsure what she meant.\n\n\"Practice?\" William asked. \"You mean... sex?\"\n\nAmanda shrugged. \"I think I have an idea. I'll text you tonight, ok?\"\n\nThey hugged once more before Amanda left. William sat back down on the couch and thought about everything that happened that day. He fondled his cock while thinking about Amanda jerking him off. He had already determined it was the greatest moment of his life and he hated himself for not having more confidence to do more with it.\n\nAmanda had always been his crush for as long as he could remember. He fantasized endlessly about what he would do with her if ever given the chance. And that day, his dream finally came true.\n\nHe couldn't wait to see what would come next."
    ],
    "authorname": "BrazenHorse",
    "tags": [
        "cfnm",
        "cumshot",
        "big cock",
        "big dick",
        "masturbation",
        "handjob",
        "big tits",
        "best friends",
        "sexting",
        "blonde"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/william-finds-love-pt-02"
}