{
    "title": "An Almost Normal Life Ch. 02",
    "pages": [
        "He was awoken by the sound of the door swinging shut, the quiet thud enough to disrupt his gentle slumber. Yawning silently, Will cracked open a bleary eye.\n\nTheir studio apartment was bright, with sunlight arcing between the half-drawn curtains by the balcony. The morning air was fresh, and he could hear the distant churn of the sea over the hum of their air conditioning.\n\nRolling onto his side, Will turned his attention to the one who had ended his nights rest.\n\nNatasha was stood in the kitchenette with two bags on the work top. One by one, she was taking out bottles of beer and putting them on the side, each one clinking as she did so. \n\nShe was wearing a lovely white sundress she had bought especially for their holiday. Leaving her arms bare and ending just above the knees, it gave her an almost angelic look. To Will's mind Natasha could wear rags and still look good, but some things really made her beauty shine. She wore her wide brimmed white sun hat and flip-flops, clearly well into holiday mode already.\n\n\"Morning beautiful.\" He said, propping himself up on one elbow, \"You're up early.\"\n\nPutting down another bottle she turned around, leaning back against the counter. Her brilliant smile melted his heart, as it never failed to do.\n\n\"Early bird gets the fresh bread and cheese,\" she said cheerfully.\n\n\"And a load of beer too?\"\n\n\"Right, the early bird is also an alcoholic.\" Turning away, she opened the fridge and started transferring her spoils.\n\n\"You should have woken me, I could have helped,\" he said.\n\n\"You were fast asleep, and I know you like a lie in,\" she replied, \"I just wanted to take a walk around the village. Anyway, I wasn't gone long. Just down to the harbour and back.\"\n\n\"Mhmm. What time is it?\" \n\n\"Just gone eight.\" \n\n\"Still on office time?\" he said, chuckling softly. Natasha was certainly more of a morning person than he was, but they were on holiday, and two hours ahead on the clock to boot.\n\n\"Just excited.\" She flashed him another smile over her shoulder, \"It's lovely and fresh out.\"\n\nWith a groan Will swung his legs over the side of the bed and yawned, scratching lazily at his side. Once he had gathered his wits, he stood and went to help Natasha with the rest of her shopping.\n\nAmongst Natasha's early morning provisions was a loaf of fresh bread and some cheese, and they ate breakfast out on the balcony, looking out towards the Aegean, glittering in the morning sunlight. Natasha had spent a long time searching through the listings for somewhere with a view of the sea, and the small self-catered apartment she had eventually plumped for really hit the mark. On the outskirts of the small village, they were set back only a few hundred yards from the wide, sweeping beach that stretched for miles along the coast. The unimpeded view from their balcony was, he knew, just what Natasha had been hoping for.\n\n\"So, how was the village?\" he asked amiably, putting his feet up on a spare plastic chair as he ate.\n\n\"Lovely. After the last few weeks a quiet place like this just peels away the stress.\" Natasha said brightly, \"we need to walk along the sea front later. There were some nice-looking restaurants around the harbour, but I want to see what else there is.\"\n\n\"Of course,\" he said, \"I want to explore too.\"\n\nOnce they had finished eating Will cleaned the plates and dressed, before sitting down on the bed, looking over to where his girlfriend was getting ready.\n\nTutting critically, Natasha put her hands on her hips, looking herself over in mirror. From where he sat, Will had a clear view too.\n\nHe hadn't seen her in her new bikini before the holiday, but she had come home particularly cheerful the day she had chosen it. The dark green fabric matched her eyes, and the top sculpted her large breasts magnificently, showing acres of pale, tantalising cleavage. If he was beside her, Will could go to the beach naked and no one would even notice.\n\nHowever, it was not just her top that was well filled out. Eyes drifting downwards, Will appraised his girlfriend's current source of annoyance.\n\nThe average bikini was not designed to accommodate a cock, and certainly not one as large as Natasha's. The bottoms had a relatively wide band, and he could see from the substantial bulge that she had drawn her dick along the line of her waist up towards her hip. The dark fabric muted the effect slightly, but there was no hiding it.\n\n\"Having trouble?\" he asked amiably.\n\nShe looked over to him with a wan smile.\n\n\"It didn't look this obvious in the shop.\" \n\n\"Probably the lighting,\" he said with a shrug, \"You know, a lot of guys would kill for a problem like that.\"\n\n\"Oh sure, you put a bikini on and see how much your cock stands out.\"\n\n\"Well, maybe, but I wouldn't look like I was smuggling a bottle of Sprite down there,\" he chuckled, \"Anyway, I thought you were gonna wear shorts too?\"\n\nShe sighed.\n\n\"I know, I am. It would just be nice to show off a cute bikini sometimes, you know?\"\n\nHe stood up and walked over, wrapping his arms around her and resting his chin on her shoulder.\n\n\"You look beautiful Nat,\" he said quietly, \"You'll rock the shorts and no one of the beach will be able to take their eyes off you.\"\n\nShe blushed, making a contented hum, and leaned into him.\n\n\"I don't care about that,\" she said, \"I just wanted to look cute for you.\"\n\nFeeling his own cheeks colour a little, Will took a moment before swinging her around and giving her a kiss.\n\n\"Then consider me satisfied,\" he said, \"some special sights are for my eyes only.\" He kissed her again, \"Now, how about we get going?\"\n\nAfter helping each-other with sun cream, they headed out for the morning.\n\nThe beach was only a few hundred yards from their apartment. As they wound down the path through the dunes, the broad seascape opened up before them.\n\nIt had looked big on the photos, but Will couldn't help but be impressed. A line of large trees were set just off the main path running parallel to the coast, and beyond that expansive white sand sloped down to the deep blue water. A little further along he could see where the village came down to the beach, with what looked like restaurants opening out onto the sand. In the other direction, the scene stretched on and on, sunbeds giving way to open sand. Across the deep blue of the Mediterranean he could see the sister island of the one they were staying on, with a white ferry bobbing across the water between the two. \n\n\"Wow!\" Natasha exclaimed, \"There's so much space!\"\n\nIt was still early in the season, and Will could only see a handful of other people out enjoying the sun, and they were further down towards the village. Breaking off the path, they quickly settled on a pair of sunbeds sat underneath a small tree. Natasha immediately plonked herself down on a bed squarely under the shade, whilst Will dragged his own bed over to the edge to catch some sun. \n\n\"This is perfect.\" Natasha said happily, stretching her arms overhead and letting out a deep, contented sigh.\n\n\"Sun, sea and peace.\" Will replied, \"Just what the doctor ordered.\"\n\nBefore long they were both nose deep in a book, quietly keeping each other company and whiling away the morning. It was a comfortable silence between them, both happy to enjoy a chance to truly relax.\n\nAt some point as the morning wore on Will slipped into a doze, lulled by the soft chop of the waves on the shore. He was awoken by the sound of scraping.\n\nGlancing over towards Natasha, he was met with an orange wall - some sort of fabric in a metal frame. A short distance away, Natasha was approaching, dragging another identical wall behind her.\n\n\"Er...\" he said, \"Are you making a fort?\"\n\n\"They're windbreaks,\" she explained, \"I'm cold.\"\n\n\"Why don't...\"\n\n\"I don't want to sit in the sun,\" she said before he could even finish.\n\n\"Well, I know, but if you're cold...\"\n\n\"Then I make a windbreak fort.\"\n\nRolling his eyes fondly, Will hopped to his feet and helped her setting up, before dragging his own bed back a little so that he could still see her through a gap.\n\nHe read for a while longer, dozed some more, before being woken once again by Natasha, who was chatting to the old man who had come to collect their fee for renting the sunbeds. He half listened as she asked him about the island, about the village, even about life looking after his small patch of beach. The wiry little fellow seemed happy enough to chat - not that Will had met many men who'd pass up the chance to spend time around Natasha in a bikini.\n\nAfter the old boy moved on towards the next group - giving Will a nod of respect as he went - he sat up and swung his legs over the side of his bed.\n\n\"I'm going in the sea; want to come?\"\n\nNatasha looked over with a smile, nodding enthusiastically.\n\nThe water was relatively calm, the small swells barely breaking as they reached the beach. Stepping in, Will realised that early season Med wasn't quite tropical warmth, and he let out a yelp of surprise. Natasha sniggered, before laughing in surprise herself as the sea sloshed around her knees.\n\n\"This'll cool me down,\" Will grumbled, wading out a little deeper, wincing as the water reached his shorts and started its chilling climb.\n\n\"You need to get it over with,\" Natasha said critically, \"watch!\"\n\nShe took a few staggering steps further in, before pitching herself forward into the water, completely submerging. A few moments later, her head bobbed up again.\n\n\"Wooo!\" she exclaimed, letting out a few heavy breaths, \"crap, that's cold!\"\n\n\"Shocking,\" he replied, inching forward a few more steps. The cold was reaching his shorts, always the worst part.\n\nNatasha paddled over to him, crouching down to keep her shoulders in the water. \n\n\"Don't you dare,\" he said, noticing the glint in her eye.\n\n\"Whatever do you mean?\" she said innocently.\n\n\"You know exactly what I mean, you devil,\" he started wading away from her, and she bobbed along behind him. Then, he felt the first flick of cold down his back.\n\n\"Nat!\"\n\n\"Wasn't me!\" she said gleefully, as another splash took him.\n\nHe half turned, just as another, larger splash flew his way, catching him down the side and drawing a gasp.\n\n\"Villain!\" he yelled, and she laughed again.\n\n\"Come on, dive in. Don't be a baby.\"\n\n\"I'm the baby?\" he gestured as she swept her arm for another splash, catching him full in the front, \"Oh, you've done it now.\"\n\nNatasha squealed as he dove for her, skipping backwards out of his grasp, and he went under. Her splashing had partially prepared him, but he still surfaced blowing hard. She avoided a second lunge, giggling.\n\n\"See, it's not so bad!\" she said from a few metres away when he surfaced once more, water dripping from his face.\n\n\"You'll pay for this, demon,\" he said fondly, giving her a resigned smile. \n\nShe relaxed and Will drifted a closer, now submerged to his shoulders and bobbing with the gentle swell of the water. \n\n\"Oh, the windsurfs are out,\" he said, looking past her.\n\n\"Really?\" Natasha turned to look and he took his chance, wrapping his arms around her from behind.\n\n\"You must have missed them,\" he said, smirking.\n\n\"Hey!\" she wriggled playfully, \"what now?\"\n\n\"This is the end, my lady,\" he said sombrely, \"now we both go down together.\"\n\nBouncing to give himself momentum, Will tucked his knees in and sank into the water, dragging his girlfriend with him. Natasha let out a surprised squawk as she was dunked.\n\nAfter a second, he stood again, and Natasha bobbed to the surface next to him.\n\n\"You git!\" she exclaimed, craning her neck to give him a threatening look as she swiped the water from her face.\n\n\"Truce now?\" he asked sweetly.\n\nShe glared determinedly at him for a few seconds, then her expression softened.\n\n\"Fine,\" she said, settling back against him, \"I guess I earned that.\"\n\nHe was quiet for a few moments, letting them drift backward into deeper water.\n\n\"You're going to do it again tomorrow, aren't you?\"\n\n\"Totally.\"\n\nThe floated together in the water for a time, his arms comfortably wrapped around her waist. Before long a windsurfer did come out from the shop a short distance down the beach, and they watched him struggle for a time with the low wind.\n\nEventually Will steered them back towards the beach, Natasha happy to be dragged along while her feet drifted in the water. Once they got close, however, she tugged him back.\n\n\"What's up?\" he asked, \"we'll burn if we stay in too long.\"\n\n\"I know,\" she said, looking contrite.\n\n\"Then come on, let's go,\" he tugged at her to stand, but she didn't budge, \"Nat?\"\n\n\"I need to wait,\" she grumbled, \"you kept feeling me up. I've got a hard-on.\"\n\nWill laughed, drawing her into his arms. His hands drifted downwards and, sure enough, her meaty cock was making itself known in her shorts. He wrapped a hand around it through the fabric, giving her a playful squeeze.\n\n\"Hey, not helping,\" she grumbled, biting her lip.\n\n\"Come on, I'll give you a piggy back,\" he said cheerfully, \"we need to get into the shade for a bit.\"\n\nAfter brief consideration, Natasha nodded, and Will offered his back to her, still crouched in the water. She swung her arms over his shoulders, wrapping her legs around his hips. He could feel her hard length squeezed between them, pressing firmly against his lower back.\n\n\"Someone's pleased to see me,\" he quipped, earning an exasperated groan.\n\nHe stood up in the shallow water easily and started wading ashore. Natasha was a light woman and easy enough to carry. They got a few funny looks as he padded out and started weaving through the sunbeds back towards their spot, but then Natasha always attracted attention anyway. At least this way the attention was because she was pretty and he was weird, rather than because she was pitching a massive tent.\n\nOnce they were safely back within the confines of Natasha's wind-break fort she slid down. With her back to him, she reached into her shorts and started adjusting herself.\n\n\"Need a hand?\" he asked amiably.\n\n\"What, you gonna suck me off?\" she joked in a grumpy tone.\n\n\"Well, we've got ourselves a fortress of solitude here...\"\n\nShe shot him a sour look. He knew she was by no means an exhibitionist, and he wasn't either.\n\n\"Never mind,\" he said mildly.\n\nThey spent another couple of hours relaxing on the beds, and Natasha was long since settled by the time lunch rolled around. They walked down into the village together, perusing the lunch time menus of the various waterfront restaurants, circling around to the harbourfront. The whitewashed buildings were just as Will had always imagined, and the small fishing boats moored up in the harbour were a picturesque sight.\n\nVarious proprietors greeted them as they wandered through the narrow streets, welcoming them to the village and explaining some of the different menu items. Thankfully, none were pushy in trying to get them to sit down, and each time they moved on with a cheerful word.\n\nThey eventually settled for a place overlooking the harbour and had a small meal, Natasha going for the Greek salad whilst Will had a pork pita. Most importantly, the beers were ice cold.\n\nOnce they had eaten they continued to explore, popping in and out shops replete with various bits of tourist tat and checking more restaurant menus. They also stopped at a local car rental office, Will leafing through the catalogue of cars whilst Natasha perused the large display outside showing various excursions they could take. \n\nFor the rest of the afternoon they relaxed on the beach, Will basking in the sun and the breeze whilst Natasha devoured her book in the shade. It was everything he had hoped it would be - pure relaxation, and he could feel his aches and pains ebbing away by the hour.\n\nThey eventually shuffled back to the apartment in the late afternoon, Natasha bemoaning the gentle incline leading up off the beach as they went. Will just chuckled, wrapping his arm around her waist and encouraging her along.\n\nThey shared a beer on the balcony, enjoying the glittering sea and the gentle breeze still stirring the early evening air, before getting ready to go out. Natasha was first in the shower, and Will was then treated to the maddeningly tempting sight of his girlfriend flitting around the apartment with just a towel around her middle. It was a wonder she managed to squeeze in at all, her boobs threatening to spill out at any moment, and her cock swaying free below the hem.\n\nBy the time he had showered she was dressed in a loose green blouse, skinny jeans and sandals, charmingly casual but lovely nonetheless. Will, not a man with an expansive wardrobe, stuck with his trusted grey linen shirt and jeans.\n\nFor their evening meal they stopped at one of the restaurants they had passed earlier in the day. A slightly rustic looking place promising local cooking, Will was particularly drawn by its position facing out onto the beach and towards the western horizon where the sun was making a creeping descent.\n\nThe choice turned out to be marvellous. The restaurant owner, a middle-aged man named Stellios, was friendly, but with a slightly mischievous sense of sarcasm Will took to immediately. The food was delicious, so much so that Will was even tempted into trying some of Natasha's grilled octopus. The mixed salad platter to start could almost have been enough for both of them, such was the variety and sheer volume.\n\nThey were just finishing their first carafe of wine when the sunset came. Reddish gold light bathed the seafront and painted the water crimson, with a handful of trees on the beach standing as darkened silhouettes. For a time, Will just sat, mesmerised by the sight of the huge, vivid red orb sinking over the horizon. He shared an appreciative glance with Natasha, who seemed just as enraptured as he was.\n\n\"Good, yes?\" Stellios said from nearby. The restaurant owner raised his eyebrows at them as though surprised by something, \"we have this every day. Can you believe it?\"\n\nNatasha giggled.\n\n\"Not every day, surely?\"\n\n\"It is true. Unheard of in England, I think, but here - every day.\"\n\n\"They should put that on the brochure. The sun falls into the sea around this island every night.\"\n\n\"Right outside Konstantinos,\" he said, indicating the now rapidly fading red glow, before extending the gesture to encompass some of the neighbouring establishments, \"and a few others, I guess.\"\n\nThey had another small carafe of house red and relaxed, watching to world go by, talking over everything and nothing. As the patrons slowly drifted away, they chatted more with the owner, and he introduced his sister Katerina, who ran the kitchen. By the time they finally stood up and said their farewells they both knew they had found a warm little place that could be theirs.\n\nThey walked back along the beach, the lamp lined path a bright white line through the night. Above the stars stood stark against the sky in a way Will rarely saw at home. Between the village and the open sea there was not a lot of light pollution. Across the water the lights of the neighbouring island twinkled in the dark, like more stars, brought to earth. It was a calming way to end the night, and Natasha chattered happily as they went.\n\nOnce they reached the apartment his girlfriend wasted no time in pulling him into a kiss, swinging into his arms before the door had even swung fully closed. Will was hardly going to complain.\n\nNatasha broke the kiss first, bringing her head alongside his to whisper in his ear.\n\n\"You still owe me from earlier,\" she murmured softly.\n\n\"Hmm?\"\n\n\"The beach,\" she continued, \"I want my blowjob.\"\n\n\"Wasn't that your idea?\"\n\n\"You offered, buddy,\" he could hear amusement in her voice.\n\n\"Right, right,\"\n\nShe moved back a half step, raising her hands to his shoulders and applying a gentle downward pressure. Even with so little force behind it, he still felt a wicked thrill at the idea of his girlfriend urging him to his knees.",
        "After leaning forward for another quick peck, he allowed himself to be pushed down. Slowly, he ran his hands up from her calves to her thighs, savouring the feeling of her firm legs beneath her jeans. Even with his face level with her hips, he could see no hint of her special gift.\n\n\"Don't tease,\" she murmured.\n\nGlancing up, he gave her a smile and winked. Natasha looked a little flushed, biting her bottom lip as she watched him.\n\nTurning his attention downwards once again, he reached for her waistband, quickly undoing the button and tugging down the fly. Now he could see the swell of her cock, enclosed in surprisingly delicate looking white panties. She had once shown him how she could tuck herself to minimise bulging, but it still seemed like witchcraft to him. \n\nCarefully, he pulled down the white cotton of her underwear, and Natasha shifted her stance slightly. As if released from a cage, her cock flopped free, heavy and thick despite its softness.\n\n\"Aaah,\" Natasha breathed, as though a weight had been lifted from her shoulders. Given how much girl dick she was cramming into her panties, it probably wasn't far off.\n\nTaking her in his hand, Will began to gently stroke back and forth, and Natasha gave a little yelp as he did so. Her flaccid cock was soft and pliant, and warm to the touch after its evening's confinement.\n\n\"Mhmm, that's nice,\" she said, looking down at him with dreamy smile. He could feel her coming to life with each pump of his hand, her manhood swelling and hardening in his grasp. He had learnt that it never took long to bring Natasha to attention; she was a potent woman, after all.\n\nWith his free hand he reached below her shaft, gently cupping her large, smooth balls, before moving beyond to her female sex. Natasha let out a squeak as he ran a finger along her wet slit, her cock twitching in his hand.\n\n\"H-hey...\" she said breathily, \"what are you doing?\"\n\n\"I was thinking your pussy might be feeling neglected.\"\n\n\"It's... ah... fine,\" she gasped as he slid a finger inside her, \"you're meant to... meant to be sucking my cock.\"\n\n\"Mhmm, you're right,\" he conceded. She was fully hard now, her warm flesh steely in his grip, a bead of precum forming at her bulbous tip. \n\nIt wasn't that she didn't get pleasure from her pussy, or that she had some sort of complex about it. When they had first started dating he had made love to her fairly regularly, if not as often as the reverse. But she had a distinct preference, and over time it had naturally asserted itself.\n\nGiving her one last stroke, he took his hand away, already slick with her warmth, and instead squeezed her thigh.\n\n\"Stop teasing,\" she said, wriggling her hips. \n\nWith an indulgent smile, he leaned forward and took her head in his mouth.\n\n\"Yesssss,\" she hissed as he rolled his tongue around her, scooping up the salty precum as he did so. Almost immediately, her hands went to his head, fingers running through his hair and urging him onto her shaft. Taking a breath, he allowed himself to be drawn forward, keeping his teeth clear of her girthy member as he did so.\n\nHer flesh was warm in his mouth, and she tasted clean and fresh despite the warm evening's confinement. With an awkward effort, he swirled his tongue around her thickness, bobbing his head in a shallow motion as he did so.\n\nNatasha let out another appreciative sigh, messaging his head as he worked. It was a nice feeling, a show of affection for his earnest but inexperienced efforts. \n\nHe continued working her cock for a few minutes, alternating between sucking hard and bobbing and massaging her with his tongue. It still wasn't something he was really used to, but the small noises Natasha made as he did so made Will feel warm in turn.\n\nBefore long, his jaw began to ache with the effort of sucking her. Pulling back, he let out a long breath.\n\n\"Tired already?\" she asked as he massaged one cheek, the other hand still idly pumping her length.\n\nHe looked up at her, her face now a little flush.\n\n\"You're a lot to take in,\" he said in mock stern tones.\n\nStill relaxing, he pressed his lips to the side of her shaft, licking along the length until her balls were against his cheek. Natasha giggled as he did so.\n\n\"You look cute with me draped all over your face,\" she said when he looked up at her.\n\nWill rolled his eyes, and returned his attention to pleasuring her.\n\nReaching up, he took her sack in hand and guided it to his mouth, kissing at the warm, smooth flesh and feeling the large balls within. \n\nWithout warning, Natasha took a harder grip of his head and pulled him closer, mashing his face firmly into her crotch. Her balls pressed against his mouth, while her cock jutted upwards as it was trapped between her body and his face. Will didn't resist, and allowed her to grind against him for a few moments.\n\nWhen he was allowed to lean back, he grinned up at her.\n\n\"Is someone getting a little hot and bothered?\"\n\n\"You're such a tease, Will!\" she huffed, \"say, let me take over? I'm close.\"\n\nHe acquiesced with a slightly nervous nod, and she stroked his cheek fondly, before taking a firm grip.\n\n\"Open wide,\" she murmured.\n\nThis time she didn't wait for him to control the pace as she held him in place. He held his mouth wide as she pushed into him, his lips wrapped around her firmness.\n\nHe choked a little as she pushed a beyond his comfort zone, and Natasha took that as her cue to draw back. Knowing what was to come, Will gripped her thighs and stared up at her. She watched him back, lower lip caught between her teeth, a heated desire in her eyes.\n\nShe rocked her hips back, and into him again, once more reaching that bit deeper than was comfortable before withdrawing. Then again, and again she thrust into him.\n\nBefore long, she had built up a steady pace, feeding him a heady serving of cock with each thrust. Her eyes had fluttered closed, and it was all Will could do to hold on and avoid gagging as she plundered him.\n\nHalf the enjoyment of sucking cock - more than half, really, Will found - was in the mental side. The dirty delight of getting on his knees before her, the willingness to serve her desires and put aside his own. The cute little gasps and pants she made as she drew close to her peak. The relinquishment on control, as he let her have her way with him. Will wasn't a particularly submissive person by nature, but for Natasha's pleasure there wasn't a whole lot he wouldn't try.\n\nHe could feel her twitching in his mouth as she approached her peak, her pants coming quicker as her hips started bucking more erratically. Tightening his lips, he did his best to help her along, tasting her with his tongue with every frenzied thrust.\n\n\"I'm... oh, Will, I'm...\"\n\nChoosing his moment, Will returned his hand to her dripping pussy, pressing inside firmly with two fingers. Natasha let out a stunned gasp and bucked forward, pressing her manhood deep to the back of his throat, holding his head in place as she did so.\n\n\"Aaaah-ah-ah,\" she cried, and her cock twitched violently, and she clenched her thighs tightly around his hand. A moment later he felt the first eruption, and swallowed reflexively as shot into his throat. He could barely taste it, but he could certainly feel the cloying thickness as poured into him.\n\nHe tapped her thigh urgently with his free hand, and after a moment she opened one bleary eye, before relaxing her death grip. He drew back quickly, still sucking, until her thick head lay upon his tongue. Now he could taste her warm, musky flavour, as a her spasming cock unloaded spurt after spurt of thick cum. \n\nWhen he had first tasted her many months ago it had been so unlike anything he had known in both texture and taste that he had almost puked, and her rushed to the bathroom. Now, it was almost something to savour, a visceral representation of the pleasure he had brought to his girlfriend.\n\n\"Wiiiiill,\" she breathed desperately, wiggling her thighs where his hand still reached, \"too - aaah - too much. That's pl - aaah-hah - playing di-irty.\"\n\nHe winked up at her, still lapping up her viscous love. For such a small woman, Natasha sure could cum a lot.\n\nAfter a few more spurts she finally died down, and Will made a show of cleaning her up, circling her thickness with his tongue and sucking at her tip. Natasha gently stroked his hair as he did so, staring at him as if in wonder. \n\n\"Damn Will,\" she said, \"when did you become so good at this?\"\n\nRocking back onto his haunches, he finally let her slightly softening cock fall free.\n\n\"If you want a job doing, best do it right,\" he said, \"but I think you did most of the work there.\"\n\nShe shook her head in bemused wonder.\n\n\"And what about you?\" she said archly, raising one foot to poke at his crotch. He was painfully hard; servicing Natasha did tend to have that effect on him.\n\n\"Going to help me with that?\"\n\n\"Mhmm,\" Natasha smirked and pressed more firmly, making him groan, \"I think that can be arranged. Just give me a second to catch my breath?\"\n\nStill a little light headed, Will staggered to the bathroom to wash his face. For a moment he stared at himself in the mirror, still flushed, his hair mussed up from Natasha's attentions. \n\nDefinitely the face of a cocksucker, and he couldn't be happier about it.\n\n\"What are you up to?\" Natasha called from the other room a couple of minutes later.\n\n\"Just a sec,\" he replied, \"you overheated me.\"\n\n\"Imagine how I feel!\"\n\nWhen he returned to the bedroom, he was greeted by the most amazing sight any man could hope to witness. While he had been in the bathroom Natasha had stripped, and now her naked form was spread out upon the bed to welcome him. His lust hazed eyes drank in her pale flesh, her full, proud breasts so succulent and tempting, the smooth lines of her waist and hips, and her long, slender legs. She was grinning wickedly at him, one hand wrapped around her thick cock, brought back to life already and standing proud.\n\n\"Hey Will,\" she said.\n\n\"Hey Natasha,\" he managed, swallowing hard, \n\n\"Why don't you come over,\" she said huskily, \"and take a seat.\"\n\nWill made a show of undressing as he sauntered over to the bed, tossing his shirt aside and undoing his belt buckle. Natasha stared at him the whole way, her eyes glinting with desire.\n\n\"What to you have in mind?\" he said after he had peeled off his jeans, looking down at her.\n\n\"Like I said,\" with a provocative smirk, she jerked her cock in her hand, \"take a seat.\"\n\n\"You really want spoiling tonight, eh?\"\n\n\"Maybe,\" she made a mock pleading expression, \"just for tonight? I worked really hard this week.\"\n\nWill rolled his eyes, and leant down to kiss her on the cheek.\n\n\"Whatever my lady desires.\"\n\nHopping onto the bed, he swung a leg over so that he was straddling her waist. Natasha's hands went to his hips immediately, squeezing gently. With one hand he cupped her breast, still perky despite the size, yet yielding to his attentions. She let out a mewling sound as he flicked his thumb over her nipple.\n\nEnjoying seeing her squirm, he leaned forward and began planting soft kisses along her breastbone and up to the crook of her neck. Sighing happily, Natasha laced her arms around him and guides his face towards hers.\n\nFor the longest time, they simply held on another, kissing in the cool bedroom, with moonlight flooding in through the sliding door that led to the balcony. Will curled one hand in her luscious brown hair, whilst the other continued to paw at her sinful body. Natasha, for her part, was happy for a little pawing herself.\n\nFinally, her roaming hands found their way to his cock, and Will moaned into the kiss as she stroked him gently. With a shift of her weight, her own lube slick shaft butted up against his, and then she took them both together in a two-handed grip.\n\n\"Nat,\" he murmured, breaking this kiss for a moment. She grinned at him, and pumped both their cocks together. It was an intimidating but oh so sexy feeling to feel her hard, hot length flush against his own, her hands massaging and squeezing the two together.\n\n\"You like that?\" she replied softly.\n\nInstead of replying, Will kissed her fiercely again, then pulled back again. \n\n\"I need more, Nat,\" he said, \"I need you now.\"\n\n\"Yeah?\" her eyes flashed hotly, \"you're ready for me now?\"\n\nGiving his cock one more spine-tingling squeeze, Natasha released him and pushed herself up onto her elbows. Smiling, he straightened, looking down at her. Laying below him, flushed and excited, her long hair splayed out across the bed, she looked magnificent.\n\n\"Well, here I am,\" she said quietly, \"why don't you show me how much you want it?\"\n\nReaching down below, Will took hold of Natasha's dick, giving the unyielding meat a squeeze. It was times like this that he could only wonder at how impossibly hard she could become, and so soon after cumming. \n\n\"You want it too?\" he said, squeezing her again.\n\n\"You know I do,\" she said with a sweet smile, \"come on baby. Sit on my dick.\"\n\nLifting himself up on his knees, Will scooted backwards slightly until she was fully aligned below him. Natasha stared up at him hungrily, but made no moves over her own as he prepared. He knew she liked it when he did it himself, and showed how he wanted it just as much as she did.\n\nLowering himself gently, he guided her to his puckered hole, then continued. Natasha gasped as she entered him, and Will let out an involuntary groan.\n\nThe feeling of fullness overtook him immediately, and he felt his legs shiver with a weakness that wasn't anything to do with being tired. There was some small pain, of course, but it was nothing next to the tingling ecstasy of having his love inside him, and seeing her happiness writ large as her eyes devoured him.\n\nIn a few moments, breathing deeply, he sank down, swallowing her full length until he was sat flush against her crotch. The fullness deepened, and his prostate chimed at the sudden attention.\n\n\"Fuuuuuck,\" he breathed deeply.\n\n\"Holy shit, Will,\" Natasha said huskily, \"you look so fucking hot like that.\"\n\n\"Yeah?\"\n\n\"Yeah,\" she reached forward, rubbing his thighs, \"like you're impaling yourself on me. So damn sexy.\"\n\n\"You ain't seen nothing yet,\" he managed, with a crooked smile.\n\nWhile he waited for his body to fully acclimatise to its titanic visitor, Will collapsed forward, and Natasha met him in another kiss, wrapping her arms around his sweat sheened back. As if to tease him, she rolled her hips as they kissed, sending sparks of pleasure through him as she churned him up inside. Will's own cock twitched in response, and he wondered just how long he'd be able to last.\n\n\"Hold on,\" he whispered, \"this is my show tonight.\"\n\n\"Yeah?\" she replied softly, \"then show me what you've got, cowboy.\"\n\nPlacing his hands against her smooth stomach, Will sat up, slowly grinding his ass as he did so. Natasha let out a hissed breath, holding his gaze.\n\nWith care, he started lifting himself up, her thick pole tugging as it eased out of him, inch by agonising inch. Then, when he was probably around half way up her shaft, he let himself drop.\n\nIt was like a lighting bolt running up his spine as a giddy buzz shot through him. Just by laying still, she touched the very deepest parts of him, overwhelming his body with her presence.\n\nQuickly, he raised himself again, and once more impaled himself on his girlfriend's length. Natasha let out a soft moan, her eyes fluttering in bliss even as she watched him. Her hands groped futilely towards him, sweeping across his thighs before knotting in the bed sheets.\n\nAgain up bounced upon her, and again. The bed creaked with the motion, and each time the fire raced through him. His cock flopped against her belly with a dull thud each time, already tingling dangerously. His legs felt weak with the pleasure, but he wasn't about to stop. \n\nIt felt so dangerously dirty to be riding her, to be fucking himself silly on her big dick whilst she just lay back and enjoyed the show. He started groaning, each time he buried her inside him, unable to hold back even if he wanted to. Natasha's excited pants had turned to moans, and she was struggling to focus on him.\n\nBefore long he was both weary and close to his limit. His legs ached, and his cock throbbed with pent up pleasure, bouncing and twitching with every movement. Natasha's hands had found him again, and she was looking up at him as though pleading.\n\n\"More, Will,\" she managed, squeezing his thighs as he raised himself up again. How could he manage more?\n\nWill focused on maintaining his rhythm, unable to respond verbally. The small room echoed with their panting moans, creaks, and the slap of his sweat slick body against hers. With one clumsy hand, he reached out and took hers, squeezing it tightly.\n\nIt was too much. He was too pent up, his body craving every bit of what only Natasha could give him. He wanted more and more, but he could only take so much. Pleasure coursed through him, an unstoppable train he could only stoke further each time he bounced on her dick and ground is ass against her.\n\n\"I'm...close...\" he gasped, \"I'm...ah...Natasha.\"\n\n\"Just a little more baby.\"\n\n\"I...\" he plunged onto her again, his cock twitching urgently as her thickness filled him.\n\n\"I'm nearly there, just a little more,\" she squeezed his hand, almost pleading, but it was like trying to hold back an avalanche. Will had no more control over it.\n\n\"Aaaaa-aaah,\" with one more ride, he felt his control collapse. The rolling wave of pleasure seemed to focus for one infinite second at the base of his cock and he twitched, then twitched again, \"aaaaaaaah!\"\n\nThe release was explosive, and he arched his back as the warmth flooded him once again. His own cock bounced, then spurted, a thick load the shot up and between Natasha's heaving tits, then another. His own legs were reduced to trembling mush, and though he tried to rise again even in the midst of his orgasm, it just wasn't possible.\n\n\"Will...\" Natasha whined, releasing his hand, \"I'm so close...\"\n\nHe met her eye, unable to voice his thoughts through the haze, but able to answer her unasked question nonetheless. \n\nHer hands went to his hips, and she jerked her hips upward sharply, sending a shudder through his overstimulated body. As though driven by the force of her thrust, and the throbbing flash it sent through him, his cock spurted again. \n\nFor could only have been less than a minute, Natasha ravished his aching body from below, slamming into him with as much force as their positions would allow even as his orgasm peaked and started to slip away. The tingling hum within him became almost unbearable, his hands balled into fists and his toes curled as he took her hammering. Sex was a two-way street, after all; he had used her to get himself off, and now she deserved reciprocation.\n\n\"Ah... I'm...\" with a groan, she pulled him down hard onto her shaft, burying herself to the very hilt in his ass. He could feel her hard length start to spasm inside him.\n\nSeeing that she had reached her tipping point, Will collapsed forward, throwing his arms around her and kissing her hard. Just as his lips latched on to hers, he felt the first hot spurt deep within him. Natasha's thick, warm love. Tonight, he was destined to be filled at both ends.\n\nThey held each other tight for the longest time, whilst Natasha came inside him and then after. Their kiss was mostly static, both gasping for breath after their exertions. Will couldn't move even if he wanted to; his body squealed with overstimulation at even the tiniest twitch of Natasha's cock, and he didn't dare see what moving would do to it. \n\nAfter a time, as his hammering heart began to slow, Will allowed himself to raise his head slightly. Natasha was flushed and sweaty, and damn beautiful with it.\n\n\"I'm gonna need a lie down tomorrow,\" he croaked.",
        "She giggled.\n\n\"Will, you were amazing tonight.\"\n\n\"A special treat, for the first night,\" he said with a smirk, \"Carter Entertainment's special guarantee.\"\n\n\"That sounds like a name I can trust,\" Natasha said sagely, \"at least in the tight butt industry.\"\n\n\"Only the best butts for discerning ladies.\"\n\n\"Mhmm, I'll order a lifetime supply right away.\"\n\nEven in jest, the thought made Will swallow hard. A lifetime supply. A lifetime. And wouldn't that just be perfection?\n\nWhen his body had finally cooled off Will slid off his girlfriend and dragged his tired body to the bathroom to clean himself up, feeling like an old man on unsteady legs. By the time he returned Natasha's eyelids were drooping sleepily, but she still smiled and opened her arms for him. Kissing her softly on the cheek, he settled down in bed beside her.\n\n\"Good night, love,\" he said quietly.\n\n\"'night,\" she mumbled, burrowing in against him.\n\nThat night, Will slept like a baby.\n\n*\n\nFor most of their time on the island they were content to remain in the village, enjoying the freedom to spend their time as quietly and as lazily as the chose. Long days were spent on the beach, soaking up the warmth, savouring the clean air and cooling breeze. Evenings trickled by on the waterfront enjoying good food and wine, then cocktails in one of the local bars, or quiet nights on the apartment balcony. \n\nOne day halfway through the trip they did venture out, renting a small car to take a mini tour.\n\nNatasha had spent a bit of time looking up places to visit, and it was good to take in a bit of culture beyond the laid-back Mediterranean village. Natasha particularly enjoyed poking around a well-preserved Crusader castle, and Will found himself losing her down every little cranny as she went off exploring like an excitable puppy.\n\nIn the evening, they ate on the rooftop veranda of a restaurant in the mountainous central part of the island. The place had a different air, a different kind of freshness to the beach front. Vine covered trellises made a partial, patchy roof to the dining area, and the smell of pine drifted in from the surrounding woodland, mixing with the heady smells from the kitchen.\n\nIt was a different kind of romantic, but as the sun fell and the villages below started to wink into light, Will and Natasha both were enchanted.\n\nOn the fifth night of their trip they returned to Stellios's place and the beachfront. It had been another long day on the beach, and Natasha was supremely relaxed, as though all the accumulated tension had drained away from her over the days of idle nothingness. Will on the other hand had been feeling a nervous energy building inside himself all day, from the moment his eyes had first fluttered open that morning. She had been the first thing he'd seen, already awake, watching him with sleepy eyes.\n\nThey stayed late at the restaurant that evening, listening to the band Stellios had in playing traditional music, and then enjoying the wine long after the sun had sunk below the waves. At some point, in the few minutes it took Will to visit the bathroom, Natasha got speaking to an older German couple in that effortless way she had, and she pulled him along with her. The couple were regulars to the island, and seemed as supremely chilled out as the locals, and full of little stories that went nowhere, but made you smile in getting there. \n\nThey were almost the last ones to leave, waving their farewells. A number of the neighbouring restaurants were already dark, although Will could still hear lively sounds coming from the bars down towards the harbour. \n\nThey walked back towards the apartment along the beach again, savouring the cool night air. Natasha burrowed into his side, and he wrapped an arm comfortable around her as they went.\n\nOnce they were a distance from the village, still a warm glow at their backs, Will gently directed his girlfriend off the path and towards the sound of the sea. She accepted without a word, and they walked out from beneath the glow of the lamps illuminating the path out into the dark expanse of beach.\n\nThey walked with staggering gaits across the sand, coming to a stop around twenty feet from where the water. Turning back towards the village, Natasha raised her phone and took a picture back the way they have come. \n\nSeemingly satisfied, she faced the sea again, spreading her arms wide and taking a long breath.\n\n\"It's so quiet here,\" she said softly, still staring up at the sky. The only sound was the gentle lap of waves against the sand.\n\nAbove, the stars twinkled brighter than they ever seemed to at home, and the moon hung so clear and silvery cold in the warm night. Across the water, the town on the neighbouring island glittered too; a small, concentrated mirror of the heavens in the darkness.\n\n\"It is. It's like we're the only people in the world.\"\n\nNatasha snuggled up against him, and he wrapped his arm around her slender shoulders as she did so. They stood in companionable silence for some minutes, just staring at the stars and the sea.\n\nSomething swell up within Will then, something that had always been with him, ever since he had first met Natasha. That sense a rightness, of fit. He was where he was meant to be, with the woman who could stand with him on a beach on a warm summer's night without a word. Someone different to him in so many ways, but so similar in the ways that really mattered.\n\nHis Natasha. His only Natasha.\n\nHe glanced down her, seeing how her eyes sparkled with distance, reflected lights. Just as the sea was a mirror of the stars, Natasha's eyes were a miniature cosmos, a window onto the enormity around them, and the depths within her too. She looked so content in his arms, her face light with soft smile, and his love for her filled his whole being.\n\nAfter a minute or two, she appeared to notice him looking at her, and she glanced up, eyes curious.\n\n\"Will?\"\n\nTurning to face her, Will took both her hands in his. Natasha let him, still looking happy, if a little bemused.\n\n\"Do you remember when we first met?\" he said, rubbing the back of her hands with his thumb.\n\n\"Of course,\" she said brightly, \"the party at that old club in town,\" for a moment, she looked wistful, and added quietly, \"It's a very important memory for me.\"\n\n\"Did I ever tell you what I thought, when I first met you?\"\n\nNatasha's eyes searched his, uncertain. Silently, she shook her head.\n\n\"I thought you were so beautiful, standing at that bar alone, watching people dancing. And I thought, people must tell you that all the time.\"\n\n\"They don't,\" she protested quietly, but she smiled.\n\n\"And then when I talked to you, I thought you weren't just beautiful on the outside, you were beautiful on the inside too. I thought you were going to make some lucky guy very happy one day. Some billionaire businessman or rock star who would give it all up for you, like one of those cheesy romantic comedies. \n\n\"I didn't think it could ever be me. I thought the world of you, and I thought you deserved the world. More than I could ever offer.\"\n\n\"Will...\" \n\n\"But I fell I love with you anyway, even if I knew I could never be what you deserved. And somehow, you agreed to go out with me. This last year has been the happiest time of my life.\"\n\n\"Will, it has been for me too,\" she said earnestly, \"you've always been enough for me, Will.\"\n\nHe smiled at her, a weak smile, a mask covering up for the nervous hammering of his heart beat.\n\n\"I love you, Natasha,\" he said, \"I love you more than anything.\"\n\nSlowly, he dropped to his knees in the sand, and Natasha raised her hands to her mouth, her eyes widening with shock. Reaching into his pocket, Will pulled out the small jewellery box and opened it.\n\n\"Natasha, will you marry me?\" he held the ring out to her, the small diamond glittering in the moonlight.\n\nShe tried to answer, but all she could manage was a garbled gasp. Unable to speak, she started nodding furiously, and reached down to pull him to his feet. With a wail, she threw her arms around him and buried her face in his chest.\n\nCarefully, Will wrapped his own arms around her, drawing her close to his hammering heart. It felt like he'd been accepted, but it sure would help his frayed nerves if she could actually articulate a response.\n\nAfter taking a few seconds to compose herself, clinging to him tightly, Natasha raised her face to look up at him. There were tears in her large green eyes, but there was happiness there too.\n\n\"Yes,\" she managed, her voice cracking slightly, \"oh yes, Will, yes. I love you Will, I can't... I just can't...\"\n\nShe let out a gasping laugh, and briefly pressed her face into his chest once again. Will squeezed her gently, a warm joy bubbling up within him as he registered her words.\n\nShe said yes. Natasha had said yes. He was engaged, to the love of his life, to the most wonderful woman he had ever known.\n\nShe said yes. It ran through his head like torrent, drowning out all other thoughts in a renewed burst of love for her. She said yes. She said yes.\n\nWhen Natasha looked up again, she was smiling so brilliantly Will almost had to shield his eyes. Her cheek was still damp with tears, but his heart soared to see her so happy, knowing her had been the cause of it. For whatever crazy reason, this woman loved him.\n\n\"I can't believe it,\" she said, as though speaking to the night around them, \"I... I never thought it would ever happen for me. I dreamed... but...\"\n\nThe tears started spilling out again, and she looked at a loss. Will's heart ached for her, for the years of insecurity she had felt over her condition, for the sadness she must have felt in believing she would never have someone of her own. If Will was to be that man, he would be the best man for her he could ever be.\n\nHe leaned in and kissed her gently, and Natasha responded immediately, clutching him tightly to her. Will savoured the moment, enjoying the softness of her lips moving slowly against his, and the rightness of her body in his arms.\n\nWhen they stepped back, Will proffered the ring again. Natasha let out a squeal of delight, as though seeing it for the first time, and this time offered out her left hand. \n\nCarefully, he took her hand in his and slipped the ring on, before briefly interlacing their fingers. Natasha stared at the ring as though transfixed for a moment, then looked back to him.\n\n\"It's beautiful,\" she said quietly.\n\n\"I hoped you'd like it,\" he said.\n\n\"I love it. Oh Will, I love it,\" with another happy cry, she threw her arms around his shoulders once more. \n\nWith a laugh, he lifted her up and swung her around, once, twice, three times, until they almost fell over in the sand. By the end, Natasha was laughing too; a rich, free expression of happiness that flowed straight to his heart. \n\nThey stood on the beach for a while longer, just revelling in each other's company, before finally making the short stroll back to the apartment. Along the way Natasha kept staring at the ring, grinning like kid on Christmas morning. It was charming and infectious, and Will couldn't keep the smile off his own face even if he wanted to.\n\nThat night, they undressed as though in a trance, each item discarded accompanied by a flurry of kisses, touches and quiet, warm words. Will could hardly bare to be parted from her for a moment, and Natasha seemed to feel the same way. It was as though he was discovering her all over again; not just his girlfriend, but his wife to be. \n\nNaked, they lay down side by side on the bed, merest inches apart, her eyes glowing jewels in the low light. Will fancied he could see himself reflected in those eyes, and Natasha would forever be in his.\n\n\"Am I going to wake up soon?\" Natasha asked softly.\n\n\"If you do, I'll still be right there with you,\" Will replied, his own tones hushed.\n\n\"Promise?\"\n\n\"Promise,\" Will lifted her hand to his lips and kissed her knuckles. The ring glinted.\n\nWith another happy squeal, Natasha pulled herself closer to him and they kissed once more. It was a long and languid, her so soft lips moving gently against his whilst her hand feather brushed along his back and neck. Melting into the moment, Will drew her in and her tightly, wanting to savour every piece of her. He couldn't imagine ever being happier.\n\nWith Natasha in his arms, Will rolled over onto his back, not parting from her for a second. Her body melded into his, each perfect curve hot against his flesh. \n\n\"I want you,\" she breathed, breaking their kiss, \"I want to have you, as my fianc\u00e9.\"\n\n\"I'm all yours,\" he kissed her again, briefly, \"and I want you too. So badly.\"\n\nIt was so natural, after all their time together. He eased his legs apart, pulling back a little to open himself to her, and in moments she had guided herself into place without ever breaking their closeness. She was slick already; he hadn't even noticed her preparing.\n\n\"My love,\" he murmured.\n\nShe leant into him, and he felt his body briefly resist, before accepting her. Accepted her, mind, body, and everything else.\n\nIn one long, slow motion she sheathed herself fully inside him, his ass throbbing with fullness as her hips pressed up against his. The pain that came with her thickness was barely an afterthought as she trailed tantalisingly across his prostate. In some ways, it was like a first time all over again. She was his fianc\u00e9e now, inside him, like she would be so many times more in the future they had promised each-other. Husband and wife, a whole life laid out ahead of them, and be damned if Will was the wife in this small way. With Natasha, he wouldn't want it any other way.\n\n\"So warm,\" Natasha's face hovered above his, her full breasts squished against his chest, \"this is home.\"\n\n\"Yeah?\"\n\n\"Mhmm,\" she nodded, smiling, \"no take backs.\"\n\n\"Wouldn't dream of it.\"\n\nSlowly, she drew back a few inches, setting Will's body tingling, then humped back into him. His eyelids fluttered briefly with the distinct twang of pleasure she elicited with such a simple motion.\n\nShe kept her eyes fixed on his as she fucked him, her steady, shallow thrusts holding just the right rhythm to stoke the rising heat inside him. Will had always known Natasha was an incredible lover, from that very first night when she had made something so alien feel so good, and it wasn't all just natures gift of beauty, and a massive cock. She watched him, absorbing his reactions as greedily as she absorbed the pleasure she was no doubt feeling. Learning what made him feel good, reacting to his expressions, his moans, his twitches, to take him in the way he needed.\n\nWill let out a long, drawn out moan as she pumped into him, and she smiled through her own soft pants. She was flushed and little dishevelled, but in that moment, her face inches from his, was the most beautiful he had ever seen. A pure, natural warmth shone in those big eyes as she made love to him, and Will hoped she could see the same in his.\n\n\"So good, Nat,\" he managed.\n\n\"Yeah? You like that?\" she said huskily, \"am I making you feel nice?\"\n\n\"The best, the best,\" he breathed, \"you're so fucking good.\"\n\nWanting more of her, wanting to show how much he needed her, Will raised his legs and wrapped the around her slim waist, holding her to him. Natasha looked briefly surprised, the a little mischievous. As she drew back he went with her, then used his legs to urge her into him as she thrust into him again.\n\n\"You want my dick that much?\" \n\n\"I want it, I want your big dick inside me, Natasha,\" he moaned, hands clenching at the bed sheets as the mounting shoots of pleasure threatened to overwhelm him, \"I love you, Natasha, and I never want to be without you. Every night, forever, I want you.\" \n\nNatasha looked a little taken aback by his semi delirious moaning, her eyes widening. Forever, he had said, and he meant it. The ring on her finger was proof enough for that.\n\nWith her left hand, Natasha reached out and took Will's right, interlacing their fingers and then resting on the bed beside his head. She then took his other hand, and squeezed them both at the same time. Will was pinned, but he knew it wasn't a domination thing; her eyes had become a little teary with emotion, even as she continued to fuck him. He squeezed back, encouragingly.\n\n\"Let's cum together,\" he said up at her, and she nodded furiously, blinking away her tears.\n\nLowering herself slightly, she captured his lips in hers, and Will craned his neck forward to meet her. He was enveloped in her now, her hands clasped tightly to his on the bed, her body flush against his, and her cock filling his ass the way on Natasha could while he held her to him with his legs. And her lips, their sweet softness sending shivers down his spine just as easily as her dick could. \n\nHer thrusts became a little more forceful, still shallow but harder, and faster. She ground into him like she wanted to merge their very beings, twisting tantalisingly with her hips flush against him, her smooth balls squished against his butt. He kissed her fiercely, trying to encourage her onwards, to give him more and more and take from him what she desired. The bed rocked and creaked with their rhythmic motion, two bodies as one.\n\nHe could feel the wave build within him, and he knew he wouldn't last. His body was no longer his to control; a trembling wreck under her thrall. But Natasha wasn't much better, as she kissed him and screwed him with a feverish need. He knew her, and he could tell she was as close as he was.\n\n\"Will,\" she mumbled, her voice almost soundless, talking into their kiss.\n\n\"I'm ready,\" he managed.\n\n\"Will, oh Will,\" she slammed her cock into him with ever greater force, and he felt the hair trigger go, \"I love you Will.\"\n\n\"I... aaaaah,\" he tried to reply, but could only gasp as his cock jerked violently against the firmness of her belly. As if they were two sides of the same coin, he felt her massive cock twitch inside him, once, twice, and again, straining against the tight confines of his ass. Warmth bloomed inside him as her cum started flooding out.\n\nThe aching elation of orgasm rippled through him, and he strained to keep his eyes open, to keep looking at the face before him. Natasha brought their lips back together, neither of them able to talk. She rocked against him even as they both came, and Will's legs kept her flush to him in a death grip.\n\nEven if there was a heaven beyond life, it was a moment that would take some beating.\n\nFor a few minutes they lay together, enraptured in one another as the dizzy highs of mutual orgasm and mutual love were slow to recede. But all things had to come to an end, and as the lust driven adrenaline drained from him, Will suddenly felt the aching tenderness in his ass, and a cramp like strain in his legs.\n\nUnhooking himself from around his fianc\u00e9e, Will allowed his legs to lower to the bed, still splayed around her slender body. Taking his movement as a queue, Natasha lifted herself slightly to look at him.\n\n\"Hey,\" he said.\n\n\"Hey,\" she replied, \"that was amazing.\"\n\n\"Well done you,\" he said with a grin, \"you're too damn good at this.\"\n\n\"Well, I do have a natural advantage,\" she blushed, but her smile was mischievous.\n\n\"More than one,\" he said, lifting her left hand and kissing the knuckle just by her ring, \"the main one being that I love you.\"\n\nHer teasing expression melted away into warmth, and she squeezed his hand hard. Will kissed her knuckle again and she laughed softly.\n\nWill took his time cleaning up, and Natasha joined him in the shower. Despite their mutual exhaustion, she was still infectiously excited, planning how she was going to let her family and friends know. Will smiled fondly, offering some small input while she oscillated wildly between phoning up everyone she knew right away, even in the middle of the night, to throwing some crazy party once they were home.",
        "\"We're only here for one more night, love,\" he said mildly, in the face of her enthusiasm, \"don't you want to show you mum the ring in person?\"\n\n\"I do! I do!\" she exclaimed, \"but I don't want to waaaaaaait!\"\n\nBy the time they returned to bed, she had calmed, the emotional weight of the day finally taking its toll. Will slipped under the sheets, rolling onto his side to watch her. Natasha had her hands clasped by her nose, staring at the ring glinting in the moonlight.\n\n\"It looks good on you.\"\n\nShe blinked, then looked at him. Her sleepy smile was radiant.\n\n\"It's perfect,\" she said, then reached out to take him in her arms. Will pulled her to his chest, taking a deep breath through her warm hair, \"this week has been perfect.\"\n\n\"It has,\" Will said.\n\nAnd it was true. But, in a certain light, every week was a variation on perfect. Every week since the miracle that was Natasha had come into his life, and shown him how bright the world could truly be.\n\n\"I can't wait,\" she said sleepily, yawning, \"for our wedding. I want,\" - yawn - \"to be Mrs Carter.\"\n\n\"Soon,\" he said, \"if anyone can make it happen soon it's my precious project manager.\"\n\n\"Nooo,\" she mumbled, \"you gotta... gotta help. And mum... and... mhmmm,\" she yawned again.\n\nWill was so comfortable and drowsy he couldn't formulate a reply to that, so he just squeezed her gently and nuzzled his head against hers.\n\n\"'Night,\" he said.\n\nBut she was already gone, drifted off into comfortably exhausted sleep. And, moments later, arm in arm, Will followed her."
    ],
    "authorname": "PenguinEmperor",
    "tags": [
        "futa on male",
        "huge cock",
        "oral",
        "reversal",
        "romance",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/an-almost-normal-life-ch-02"
}