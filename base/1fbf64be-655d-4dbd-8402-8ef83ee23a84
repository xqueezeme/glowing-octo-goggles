{
    "title": "A Broken Woman Can Still Heal",
    "pages": [
        " This is a much longer single story than most of mine. It is very much a story of pain and love so it takes a long time to get to the sex. I hope you enjoy it.\n\nI need to give special thanks to Terry, my editor! I really appreciate the effort to help me improve the story! \n\nIt hurt so much. Shae lay against the headboard of her bed and tried to handle the pain. It was hard to breath. Her nose felt wrong and was all plugged up with blood. Her arm ached when she had fallen and landed on it. It had only finished healing from the break a couple of months ago. And her whole head rang from the successive slaps to her face. But most of all it was her belly.\n\nBarely able to move and with the fogginess that comes from a concussion, Shae held her hands against her belly where her husband kicked her. Five weeks pregnant, the painful spasms in her womb and the blood slowly staining the bed clothes between her legs told her that she wasn't any more. She was too numb to even feel sorrow for that loss. That would come later. Right now Shae felt a merciful unconsciousness begin to take her.\n\nA sound make her head jerk up. It took her a few moments to recognize it. Then Shae realized it was sirens. It reminded her that the phone was still off the hook making a busy signal since it fell over after calling 911. Shae looked down alongside her. The shotgun was lying there, cold barrel against her leg. The room still had the faint smell from when she pulled the trigger. Breathing in, Shae looked over by the broken door hanging from one hinge. Bob was there on the ground, chest a deep red from where the shotgun blast hit him. The baseball bat he was carrying when he finally kicked down the door was still clenched in his fist. Even with the confusion from the concussion, she remembered what happened. She would never be able to wipe this day from her memory. But for now the noise of the siren as the police car pulled up outside couldn't keep the blackness away.\n\n********\n\nSeven years before\n\nSummer vacation was just around the corner. Shae was excited because her parents had a big trip planned to Europe as soon as school was out. For a change the June weather was nice and it made it all the harder to be inside waiting out the last few days of school. Shae was a slender 15 year old who was just starting to grow into her body. She had an almost elven face with almond shaped sky blue eyes and blonde hair that was the envy of all her friends. It was just curly enough to have wonderful body and shape without being difficult to manage. The attention her looks brought was still something that tended to embarrass her. She didn't really know what to do with it and she didn't feel quite ready for dating. But still she thought it was nicer to be noticed than feel invisible.\n\nEvery head turned as the door opened. Seeing the principal coming in was a surprise to all and the very serious look on his face made everyone nervous as they remembered every little rule violation they may have ever committed. He quickly walked to over to Mr. Bradford, the English teacher, and spoke to him in a very low voice. Involuntarily Mr. Bradford's head swiveled and he looked at Shae as the principal continued to talk. Then he nodded and turned to the class.\n\n\"Shae, Mr. Wilson needs to see you now. Would you please go with him?\" As he spoke, Mr. Bradford's voice was unexpectedly hoarse compared with how he had been talking moments ago. \"Take all your things, please Shae,\" he added.\n\nAs the principal followed Shae out the door, he turned his head back to look at Mr. Bradford.\n\n\"I know. I will talk to them,\" Mr. Bradford nodded at him.\n\nMr. Wilson put off all of Shae's questions, saying that he would explain once they were in his office. Shae couldn't imagine what was wrong. The infractions that came to her mind were mostly imaginary and wouldn't have merited any real notice, but naturally she grew more nervous. It wasn't until she walked into the principal's office and saw her school counselor there as well as her mother's best friend that she became scared.\n\n\"Ms. Martha? What are you doing here? What's going ...\" Shae trailed off when she saw the tears rolling down Martha's face. \"Oh my God, what's wrong?\"\n\nMoving across the room, Martha took Shae in her arms. She had known Shae since she was born. Her own son was the same age and going through pregnancy together had forged a tight bond between the two mothers. Shae felt almost like her own daughter.\n\nAfter hugging her Martha said softly, \"Shae sweetie, let's sit down. There was a couch and the two of them sat together. Mrs. Xu pulled a chair close while Mr. Wilson leaned against his desk.\n\n\"Sweetie, there isn't a good way to tell you this.\" Martha started, trying to push keep down the sobs that threated to burst out. \"Your Mom and Dad, they were out doing some errands this morning and there was an accident. A truck ran a red light and hit the car.\" She paused for a second and took in a ragged breath. \"Shae, I'm sorry but they were both killed instantly.\"\n\n\"No, that's not possible. No, how could ...\" Shae just looked confused. She couldn't grasp that this morning her Dad was teasing her and now he was gone? She hadn't even eaten the lunch her Mom made. The thermos full of tomato soup would still be hot from when she heated it up. But as Martha broke down into sobbing, Shae knew it had to be true. And feeling Martha's body shaking with the grief, Shae began to cry herself. The two other adults in the room just looked on in helplessness.\n\nThe next few weeks were a blur to her. Shae stayed with Martha's family while her aunt flew across the country from North Carolina to make all the arrangements. Her father's sister, she was the only sibling of either parent. In fact, she was one of the few relatives that Shae had. Her mother's parents had both passed away a few years ago. Her father had moved away from North Carolina when he became the first one in the family to go to college and never went back. He had lived on the West Coast ever since. Shae's aunt and grandparents still lived in the same rural town in North Carolina, content with the slower pace there.\n\nThere was a brief argument about what to do about Shae. Before they read the will, Martha expected that there be instructions that she was to raise her if anything happened. That was certainly what she had talked about with Shae's parents and how her own will read. But apparently they had forgotten to actually make the change to their own will. Martha tried convincing Aunt Billie to still let Shae stay where she was familiar. But Billie was firm. Family belonged with family. Her brother had been 8 years older and played a significant role in raising her. It was her obligation to take care of her big brother's child and there was no room for debate. Martha and her husband considered for a moment taking it to court, but in the end decided that wouldn't be best for Shae. It was bad enough dealing with the loss of her parents. A fight over custody wouldn't do anyone good.\n\nBefore leaving, Martha talked with Billie about coming back for part of the summers to stay with them. She didn't want to lose her connection with the one thing left of her best friend. Plus as she said to Billie, \"With all of the heartache Shae has experienced, and probably will continue to feel, staying in touch with all her friends her would be very good for her. Martha felt like Billie agreed with her when she promised to try and make it work. Martha had no idea at that time she wouldn't see Shae again until Martha flew out for Shae's wedding five years later\n\nThe depression that Shae felt grew as she felt the airplane take off to start their trip to her new home. It reminded her of how she was supposed to have already flown to Europe with her parents. Glancing over at her aunt, she thought about how the three weeks that it had taken to get ready to move was about twice as much time as she had ever spent with her aunt during the rest of her life. It wasn't just that they were on different sides of the country. Her aunt was as different from her father as she could imagine.\n\nShae knew that her father wasn't always happy but he was a generally cheerful person who looked on the bright side of life. She could always count on him to cheer her up after a particularly tough day. He teased her without mercy, but always in a loving way and never mean. Over the last few months, she had started to open up to him about some of the things confusing her about growing up. She loved her mother dearly too but there were times when she was too direct. As a biomedical researcher, her mother hadn't always seen the emotional side to things. Shae sighed as she thought about how her father always \"got\" her.\n\nIt had particularly been clear that he understood her when she started to talk to him about her feelings about boys. Before all this happened, Shae always thought that maybe it wouldn't have been so easy if she wanted to talk about liking boys. Maybe her father would have struggled more if she wanted his advice on how to get the attention of a particular boy. Instead she wanted his help in understanding why it was other girls that seemed to attract her attention. And she was so clearly confused; her father didn't really have to worry about her acting on her attraction. It allowed him to listen more than would otherwise have been the case. And then when he did offer advice it was helpful in untangling the confusing mess.\n\nAbove all, he was unfailingly supportive. \"Sweetie, I know you are still figuring things out. But if you decide you're gay, it doesn't change who you are and that your mother and I will love you,\" he told her at the end of their last talk.\n\nTaking another peek at her Aunt, Shae already knew that couldn't be said about her aunt. It was clear that there was a right way and a wrong way with most things in her Aunt's mind. Shae tried to be charitable and accept her aunt with the same type of acceptance as her father. Aunt Billie had found a fundamentalist Christian church that was close enough to the brand she attended at home and made it clear that Shae would attend. Her parents had never made religion a significant part of her life but Shae had nothing left in her with which to resist. She hoped that maybe it would help her find a little bit of peace and reassurance. Instead she found it full of anger and fear of people who were different. After three weeks of that, Shae knew that she could never talk with her aunt about her feelings. She felt tears well up again as she thought again about how much there was to miss about her parents. She never even got a chance to talk to her mom about it.\n\nBillie was by no means unkind. She heard sniffles and looked over to see tears running down Shae's cheeks. She put her arm around Shae and hugged her. \"I know you miss them, Shae. I don't know how much I will be able to help but I will do everything I can to help. You will be a daughter to me, just like my two little boys. And with God's help, you will find happiness.\" She stroked Shae's head to try and comfort her. As Shae continue to silently weep, Billie leaned her head over and rested it against Shae's. \"It's okay, darlin'. Nothing wrong with crying.\"\n\nIt took a while but at last Shae got her weeping under control. It felt comforting to have her aunt hold her like that. It wasn't the same as her mother, or even Martha, but she still felt the support and love that Billie was offering her. With the loss of everything else, she needed it. She reached her own arm around Billie and hugged her back.\n\n\"Thank, Aunt Billie. Sometimes it gets harder, you know?\" Shae whispered.\n\n\"I understand. And that's what I'm here for and why I wanted you to come home with me. I hope that you will find comfort in a place with a slower pace; where you can get to know people.\" Billie smiled as she spoke. She had never lived anywhere else and she couldn't imagine anything else. It seemed like paradise for her. Nor could she imagine why a small, backwater town in the rural south wouldn't seem that way to anyone else.\n\nBeing reminded of where they were going brought back the worries that Shae had been trying to suppress. Without conscious thought, she slowly withdrew from Billie. She lifted the window shade to look out. They were passing over the Rockies. Looking down on the jagged peaks, Shae thought about how different it was going to be. She had spent her whole life on the southern edges of San Francisco where it was more suburban than urban. Still given all the high tech in the area, it was extremely ethnically diverse. Her school had students from 18 different countries and there were just barely a majority of kids who were white. Nor had that been much of a problem.\n\nAnd while Shae was still figuring out her identity, she knew a number of people who were out. It wasn't always easy for them, but it seemed to Shae that there was a support system there for them. Shae remembered being worried still. Even her accepting father suggested that while she was still unsure that she be a little careful who she talked to about it. \"Shae, things are better for gay people now. While a majority of people support gay equality, there are still a lot who don't. And kids can be cruel,\" he had said. It just echoed what her own mind said. Always a bit shy, she liked anonymity. She had a circle of friends and was liked by almost everyone, but she was never someone to standout. Her growing beauty had started to change that. It wasn't bad to be noticed, but not always. And to be different in her sexual orientation, that would just increase the attention. Shae thought that back home if she really decided she was lesbian, she wouldn't have a problem coming out. But until she knew, she would rather blend in with everyone else. Shae even kept it a secret from her best friend. She just wasn't sure how it would affect their friendship.\n\nLuckily there were a couple of friends with whom she could share her thoughts. Both of them were gay and were friends since kindergarten. They weren't as close as they used to be but still when she needed someone, both of them were there for her. Shae found it harder to say goodbye to them than anyone else. They were the only confidants she had left and she feared that she wouldn't find anyone like them in her new home.\n\nA few more tears escaped out of her eyes as Shae felt a wave of self-pity wash over her. She tried not to sniffle. Somehow she didn't want her aunt to know that she was crying again. It was okay when it was about her parents. She welcomed Billie's sympathy then. But she knew what Billie thought about homosexuality. It was clear at the church service. Billie cried out in affirmation every time the pastor talked about the corruption of society reflected in its acceptance of gays. Shae felt like it would be hypocritical of her to find comfort from Billie when that was what was bothering her.\n\nOf course kids are more accepting everywhere, Shae thought. Even in a rural town in the South, surely she would find someone that could be close enough to talk about it. She clung to that thought and it helped her feel better.\n\nWhen they first got on the flight, Billie had talked to one of the main cabin flight attendants. She wanted at least one other person to know about Shae's loss just in case. If she was in the restroom and Shae was distressed, Billie felt like it was important that someone who understood could step in. Cheryl was an attractive woman in her mid to late thirties with a friendly face. She made sure to pay extra attention to Shae, stopping by often to see how she was doing.\n\nThe attention flustered Shae a little. Her aunt couldn't have known but Shae found Cheryl quite intriguing. Her uniform was one of those dresses that showed a little more cleavage and was just above her knees. Part of what started Shae thinking about her orientation had been her habit of getting a crush on her cute teachers. Cheryl fit that same mold of an attractive older woman with a lot of self-confidence that drew Shae's attention. When Cheryl stopped and leaned over to talk with her, Shae found it hard to not look down her dress.\n\nShae was looking out the window while her aunt read her bible when Cheryl stopped by and asked Shae if she would like to be shown around the galley. \"I know it's kind of lame but still it will help fill the time before we get to Atlanta.\"\n\n\"Is it okay, Aunt Billie?\" she asked.\n\n\"Of course, but don't be any bother to Cheryl,\" Billie replied.\n\nAs slender as Shae was, she just slipped past her aunt and followed Cheryl to the back of the plane. She admired the view of Cheryl from behind. Once back there, Cheryl started to explain how things were organized and what the various doors contained. Shae tried not to get too distracted by Cheryl and to pay attention. She was doing a relatively good job so that it caught Shae by surprise when Cheryl asked her a question.\n\n\"Is this your first time flying,\" Cheryl innocently asked.\n\nIt wasn't but thinking back to flying with her parents again reminded her of the trip to Europe and the gaping hole left by the loss of her parents. Shaking her head, Shae's eyes filled with tears. She tried to explain.\n\n\"I'm sorry. It's just that I'm supposed to be in Europe with my parents. I'm supposed to .... \u2033 Shae broke down and just cried.\n\n\"Oh sweetie!\" Cheryl knew that she really shouldn't hug a passenger but a crying girl who just lost her parents seemed like a valid exception to the rule. She put her arms around Shae and gently squeezed her. After a few moments, she lightly patted Shae's back.\n\nAt first, Shae only felt the overwhelming sadness. Then she became aware that she was being held by the beautiful woman whom she had been admiring. Still sniffling, she reached her own arms around Cheryl and hugged her back. As she felt their bodies touch, Shae realized that her nipples were hardening. She blushed but didn't let go. It felt too good.\n\nIt didn't escape Cheryl's notice. The life of a flight attendant wasn't everything people thought, but she had her own wild moments with both men and women. She was married now and those days were behind her. But she could still tell the signs. Even in her wild days, she would never take advantage of someone Shae's age let alone a grief stricken one. Without acknowledging anything she loosened her arms and stepped back. She felt Shae's own embrace somewhat reluctantly end too.\n\nIgnoring Shae's hard nipples jutting from under her t-shirt, Cheryl just asked, \"Are you feeling better, sweetie?\"\n\nShae nodded, not trusting her voice at that particular moment.\n\nCheryl reached out and touched Shae on the shoulder, hand squeezing it for a moment. She nodded with understanding but then let go and turned away to start getting things together for the next run of refreshments. It gave Shae a little break to get herself back together. Once she felt a little calmer, Shae started helping Cheryl, following her directions to refill the cart. By avoiding looking Cheryl in the eyes, Shae found that she could avoid thinking about the effect Cheryl's hug had on her.\n\nAs Cheryl and another flight attendant maneuvered the cart to start down the aisle, Cheryl looked over at Shae. The sympathy in her eyes let Shae know that she understood. \"Thanks sweetie for your help. Enjoy the rest of the flight. I probably will be busy the rest of the flight.\" There was something of finality in her voice that doused any fantasies that Shae might be entertaining.\n\n\"Thanks for showing me around. I enjoyed it,\" Shae said as she slipped past Cheryl to head back to her seat before they blocked the aisle. After sitting down, Billie wanted to know what they had been doing and what she had seen. Shae felt embarrassed both about crying and her reaction to Cheryl. She thought to herself that she certainly couldn't tell her aunt about that so she just limited herself to a few vague generalities. After that Shae lapsed into a somewhat brooding silence. Not really knowing what to say, Billie just left her alone.",
        "It wasn't too much longer before the plane landed. They had to make a tight connection for their flight to Charlotte. Shae barely had time to thank Cheryl one more time and wave goodbye as she rushed past her, trying to keep up with Billie. Shae sighed a little just before she caught up with her.\n\n\"It won't be long now before we are at your new home!\" Billie said, smiling at Shae. Not wanting to disappoint her aunt, Shae smiled back and nodded. It didn't feel like she was going home to Shae, but it was what she had. At least it was summer and she wouldn't have to adjust to a new school right away too. Shae hoped the extra time would help. She pulled up the shoulder strap of her backpack and trudged alongside Billie towards the gate, trying to keep that little bit of hope alive.\n\n********\n\nWhen school started that fall, Shae didn't feel like she had made much progress in adjusting. She hadn't really understood how isolated they were. The town was only about a thousand people and about 70 minutes outside of Charlotte. But even then, her aunt's home was a few miles out of town. That meant that she only usually went into town when her aunt or uncle drove. Unless it was for church, Shae rarely accompanied them for any reason other than errands. More often, Shae stayed home to watch her two nephews so that Billie could do her errands without having to drag them along.\n\nNo matter what, there was always a trip into town on Sundays. Aunt Billie and Uncle Jim were deeply devout, like most of the town. Going to church was an event beyond just the service. They always dressed up in nice clothes. Billie was very particular about what Shae wore. Since Shae was unused to going to church, especially one as conservative as this one with distinct ideas about the role of women, Billie wanted to make sure that Shae dressed in an appropriately virtuous manner. To Shae it just felt plain, but she didn't mind too much. She already felt like the odd outsider. Blending in was a way to avoid standing out.\n\nThey always arrived a little early as Jim and Billie helped with setting things up for the service. Then the pastor would give a fire and brimstone sermon, talking about the evils of the world and how corruption was taking over America. Even after the entire summer of going, the zeal with which the congregation agreed with him scared Shae a little. And not showing sufficient enthusiasm herself usually resulted in a discussion with her aunt and uncle that evening about her devotion. Shae learned that just going along made life easier.\n\nAfter the sermon, there was a potluck luncheon. This was one of the few times that Shae got much of a chance to meet other kids. The tables were all segregated by age with the teenagers having one of their own. It was right by the adults so that they could keep an eye on them. Shae felt like she didn't really get to see what the other teenagers were like because of the proximity to their parents. Everyone was always on their best behaviors. And since the boys were on one end with the girls on the other end, she didn't even get to really see how teenagers really interacted. As an outsider to a town where almost everyone had grown up together, she was naturally an object of attention but in that environment it wasn't possible for them to indulge in their curiosity.\n\nAfter lunch, the adults would gather to read the bible together while the young people went to Sunday school. This was the worst part of the day for Shae. She could just be quiet and try to blend in during the rest. During the classes, her lack of knowledge about the Bible was apparent. She stood out from her inability to answer even the most basic questions about Bible stories. An older widow ran the class and seemed to take pleasure in putting Shae on the spot and then ridiculing her when Shae didn't know the answer. And it was clear that she gave reports to Billie after each class because the worse Shae did, the longer Billie expected her to study her Bible during the afternoon. It didn't take long for Shae to learn that the better she learned her Bible, the less trouble she got in. By the end of summer, Billie was complementing her on how well she was doing.\n\nWhen school started, Shae hoped that things would get a little better. At least there she would be around other kids her own age. But it didn't turn out that way. Over the course of the summer, she spent a fair amount of time working outside which gave her a deep tan while lightening her hair. Even without trying to do much, Shae was even more beautiful than before she arrived. The guys immediately noticed and were all interested in her while the local girls were instantly jealous of her. She found herself still isolated. Even though the boys were more than willing to provide company, she felt even less comfortable than back home. Her lack of interest was combined with the knowledge that any moves she made towards them would just increase the issues with the girls.\n\nAnother factor made things difficult for her. Shae was extremely bright. At her old high school, she had been a close to A student even with taking advanced level courses. Much of what she had learned in 9th grade was beyond what they were now teaching her in 10th. Being seen as a brain, especially in a small town where education wasn't highly prized, was a quick way to become a social outcast. As a girl, it just was worse. Even the attitudes of the faculty surprised Shae. She went in to talk to the science teacher about moving to a more advanced chemistry course. His response was that he found that girls did poorly in the course and that she should probably stick with the one that she was in. Afraid of making waves, she just nodded and said that she understood.\n\nSlowly over time, the ice broke with the girls once they realized that Shae wasn't trying to steal their guys. Shae found that adopting the role of a quiet religious girl helped make everything easier. The other religious girls were the ones most likely to give her a chance. It was nice to have some friends again which made Shae more likely to reinforce that image. It also helped that the guys tended to leave that group alone more than the others.\n\nShae was still conflicted about her real feelings. The boys in the school, even the best looking ones, didn't draw her attention. But most of them were redneck jerks so she wasn't sure if that was it. The way they treated their girlfriends would never have been tolerated back home but here it seemed the norm. She saw almost no relationships where the boy treated the girlfriend like an equal. They were all expected to wait on their boyfriends and do whatever the guys wanted. Even if she had found one cute, Shae didn't like the idea of being treated that way.\n\nAnd she still found her eye being caught by the cute girls around. She tried to hide it as much as possible because she feared the reaction if she was ever noticed. Certainly her new circle of friends wouldn't understand. Amongst themselves they talked with disgust about homosexuals and how God would punish them. Not wanting to be a hypocrite, Shae tried to avoid joining in and just stayed quiet when they got that way.\n\nThen mid-year something happened that changed everything for Shae. Over time, Shae had noticed one other girl who seemed different. She played sports with a passion that stood out and was generally the best person on every team. She was dark haired with an athletic build. Her face was pleasant but not really cute. But there was something about her that drew Shae's attention. She knew that the girl's name was Penny but that was all she knew. Penny and her family never attended church and of course she wasn't part of the religious girls group. But from seeing her around, there was just something about the way that she carried herself that made Shae wonder if she was gay. But despite Shae's curiosity, she couldn't see any way to talk to her without it seeming odd. Shae was afraid that it would draw attention to herself and the type of attention that could ruin the little bit of social life she had built. So she just pretended to ignore Penny. Maybe someday there would be a chance to talk in safety but not yet.\n\nIt never happened though. Penny was spending time with one of the girls from the basketball team and they seemed to be getting close. And then the basketball coach walked in and found Penny leaning over to kiss the other girl. Even before the coach could say anything, the other girl noticed her. She pushed Penny away and yelled. \"Stop trying to kiss me, you dyke!\"\n\nPenny stood upright in shock, looking at her girlfriend with hurt in her eyes. As she tried to form the words to ask what was going on, she felt the coach grab her arm.\n\n\"Come with me,\" she yelled and pulled Penny away. Looking back, Penny could see the unhappy face of her girlfriend but at the same time, she could tell. \"She is going to throw me to the wolves,\" Penny realized.\n\nAnd she did. Penny was suspended for two days for \"attempting to assault\" another student. While she was gone, her girlfriend made up a story about how she was trying to be nice to the friendless Penny and Penny instead tried to seduce her. By the time Penny was back in school, the story was everywhere. Shae watched as Penny was systematically harassed and ostracized. It went to every part of her life. Even though she was the best player, her teammates stopped passing to her and her productivity dropped. The word must have spread because all of a sudden, the other teams were fouling her harder and the referees let them get away with it. Her grades dropped too as teachers became harder and harder on her.\n\nAll of a sudden Penny's bright future that seemed to be leading to a sports scholarship and college was disappearing. The worst was when a gang of girls caught her alone walking home from school after a late practice. Among the girls was the one that Penny had considered her girlfriend. Whatever she had felt for Penny was clearly gone, or at least suppressed. Trapping her in a circle, they started pushing Penny from side to side. Each shove was harder than the next. Eventually Penny stumbled and went face first into the ground. Just before the first kick, she looked up at her former friend. As each girl took a turn, she kept her eyes on her until she moved to take her own turn. Penny closed her eyes as tears flowed. The girls thought it was from the pain but it was from the betrayal.\n\nNo one even got punished for the attack on Penny. Shortly after that, Penny's family moved away. But the lesson of Penny stayed with Shae. Even thinking along those lines were not safe. Any feelings towards girls needed to be suppressed. Shae worried that she needed to go beyond that and start showing at least a passing interest in boys. She found it easy to start to talk to her friends about which of the religious boys were nice. As long as she kept it low level, there was little chance that she would seem improper. And letting them guide her meant that they all steered her away from the ones they liked. Shae was in no hurry to start dating but at least she seemed normal. Normalcy was her watch word. It didn't bring her happiness, but it brought safety. With everything that had happened to her, it seemed like a fair trade.\n\n********\n\nA year after Bob's death\n\nShutting the door, Shae looked around her new apartment. It was pretty small but it was hers. After spending the three months since moving to Seattle in the shelter, it was really nice to have a place where she was alone. She didn't mind the size. It wasn't like she had anyone else which was just how she wanted it.\n\nMuch of the last year had been a nightmare. Even before she was out of the hospital, she was arraigned for murdering her husband. The local sheriff was a cousin of Bob's so there was little sympathy there. It took a week before she left the hospital. The miscarriage had been the worst of it. Between the internal damage and the blood loss, it took a while to recover. Luckily her broken nose set well and didn't need any surgery. She still had a slight scar on her cheek where Bob had split her skin when he slapped her across the face. It didn't look too bad. Worse were the scars from where he had burned her with his cigarettes but those were older. Shae just felt fortunate that he had done that on her shoulder and back, places where she could hide them.\n\nShe spent the first couple of weeks in jail while her public defender tried to get her release. Her lawyer was surprised at how hard it was but Bob was connected by family to most people in the area. But in the end, the prosecutor couldn't bring a case. The evidence was too clear that Shae had been defending herself. Her injuries were gruesome and graphic. Even trying to prosecute would have resulted in a storm of negative publicity he didn't want. In the end, he agreed to release her on the grounds of justifiable self-defense.\n\nWhile that was the decision of the authorities, it wasn't the attitude of Bob's family. They had never been fond of the outsider that Bob had courted and married, but now they hated her with a passion. And it seemed to Shae that no one was willing to stand up to them. Despite the abuse she had taken, she found little support. Even her own family seemed to blame her for the situation, although not Bob's actual death. But her Aunt Billie kept saying if only she had worked harder at making Bob happy, maybe none of this would have happened. And when Bob's family sued her for wrongful death, Billie said something about God's will.\n\nIn the end, Shae lost everything. Because the suit was tried in the town, she didn't have a prayer. Despite the evidence, the jury ruled that Shae should lose all rights to her house and their other assets. Although her lawyer told her that they would have a much better chance of winning on appeal, Shae just couldn't take the fighting any more. She packed a couple of suitcases and left town. One of her few girl friends who was still talking to her gave her a ride into Charlotte where she caught a bus to Seattle.\n\nNow that she was out of it Shae missed the shelter a little bit. While the women moved in and out, they all had something in common. She felt the support of a sisterhood that understood her and what she went through, at least up to the point of killing her husband. Shae couldn't share that part with them. She tried to keep it out of her own mind. Talking about it with anyone else was out of the question. Even when she woke up screaming in the middle of night, she only told the women who came to comfort her that she dreamed about her husband hurting her. But the dreams were always about that night.\n\nStill Shae knew it was time to be on her own. Before she married Bob, Shae had a job in town as the assistant to the bank president. She had been good at it. The shelter had helped her get a series of temporary secretarial jobs. Each one had been successful and her temp agency found it easy to keep her employed. She had been able to save enough to put down first and last months' rent. And soon she was hopeful that she would be able to land a permanent job. She had applied for a position as a personal assistant at a marketing agency and she had a final interview in the morning. It seemed promising but she didn't want to get her hope up. So much in her life had been difficult that she tended to expect disappointment.\n\nShae shook her head trying to dispel the sudden gloomy thoughts. \"Hey, someday things have to go my way. Tomorrow would be a good day to start.\" She grabbed her bags to go and unpack. It wouldn't take long and then she would go out and get some groceries to make some dinner. It was time to get started with living this new life.\n\nIn the morning Shae got ready for work. As she always did now, she dressed conservatively. She put on a blouse with long sleeves that she buttoned almost all the way up and a long skirt. While she put on some makeup, it was very subdued. She hoped that she looked professional enough. She checked the clock, wanting to make sure that she had enough time. Without a car, she relied on the buses. It worked but it wasn't always convenient. Checking to make sure her resume and recent job references were in her case, she headed out the door.\n\nHer first interview was with Julia Tate, the HR manager of the marketing firm. She was a pleasant somewhat overweight woman and Shae enjoyed talking with her. Shae knew that the question about what she was doing before three months ago was going to come up. There was a large gap in her employment between the bank job and moving to Seattle. She thought about it a lot and felt like she needed to be honest. It wouldn't do any good to start a new job with a lie. So she was ready when Julia asked.\n\n\"Julia, I need to tell you something about me. I will leave it to you to decide what to do about it. If you think it is relevant to the others, then do what you need to do.\" Shae's voice was calm but a little bit of emotion bled through. Unable to guess what Shae was going to say, Julia just nodded.\n\n\"I left my last job because I got married. My husband wanted me to stay home and keep house. Since that was also the expectation of my family, his family and my friends, I did it. I thought I could be happy. Unfortunately it wasn't enough for him. He wasn't who I thought he was. He was cruel and violent. He hurt me, a lot. He broke my arm. He burnt me. And one night he hit and kicked me so hard that he did this.\" She touched her cheek. \"He broke my nose and my arm again. I lost my baby. But even then he didn't stop. I thought he was going to kill me. When he broke down the door and came at me with a bat, I shot him. I killed him. That was a year ago. They said it was self-defense, but still it happened. \" Shae wiped a single tear that rolled down her face. \"Ms. Tate .... Julia, I have to live with it. It's ruined the life I had. I just hope that doesn't ruin the rest.\"\n\n\"Oh my God, Shae, you poor girl. I can't imagine what you've gone through. Let me think for a moment,\" Julia said. She swiveled her chair back and forth as she looked up at the ceiling. \"Shae, I appreciate your honesty in telling me but I think that it isn't relevant to the job. You stopped working because you got married and now that you aren't, you are working again. And you were in a bad marriage. The other thing, no one needs to know about it unless you want to tell them.\" She reached out and patted Shae's hand. \"And what is important is that you are qualified for the job. None of that changes it.\"\n\nAlthough they were done, Julia gave Shae a few more moments to completely get her emotions under control. Then she walked Shae downstairs to meet with her prospective new boss. Greer Dunham was one of the partners in the firm. Her last assistant had been young and flighty. Her lack of responsibility proved to be a continual problem. In the end, Greer had no choice but to let her go. She was hoping that the next one would be reliable.\n\nWhen Julia introduced Shae, there was something about her that impressed Greer despite her obvious youth. She seemed more serious than was typical, even though her resume was a little light. And she could tell that the interview with Julia had gone well. Julia had known Greer for years and what she wanted in an assistant. Greer couldn't blame her for the last one. It had been a very hectic time and Greer made the expeditious choice, over Julia's recommendation, just so that she had someone.\n\nOnce they were alone, Greer started going through Shae's resume, asking about the different things she had done. Shae impressed her with her quick answers that got to the heart of what she wanted to know. When she asked why Shae moved to Seattle, Shae explained that her marriage had been abusive and she wanted a fresh start.\n\n\"I would rather not talk about it, Ms. Dunham unless you really need me to,\" Shae said, hoping that Greer would let it go at that.",
        "Greer looked at her for a few moments and then nodded. \"No, that's fine. For what it's worth, I'm sorry. No one should have to endure being hurt by someone who is supposed to love them.\" Then she turned the conversation to other matters, asking about the work she had done at the bank. It didn't take much longer for Greer to know that Shae was the right one. But she would have to go through the process and talk with Julia and then have Shae's references checked. She hoped that it would go quickly and would support hiring Shae.\n\nAlthough Greer hated herself for thinking it, she also realized that Shae's background meant that she probably was unlikely to find a relationship in the near future that interfered with work. She didn't seem the type who habitually moved from bad relationship to bad relationship. Having had a revolving door of assistants, Greer wanted someone reliable and Shae seemed to fit the bill.\n\nHaving become familiar with interviews since moving to Seattle, Shae knew that it was hard to tell how well an interview was going. Still it felt good. While it hadn't been easy to be open with Julia, Shae didn't want that secret coming out and ruining her chances. Now she found that while Greer was probably a demanding boss, Shae liked her. She could see herself working hard and giving extra effort to satisfy Greer.\n\nAnd it would be nice to have a female boss. Most of her temporary positions were supervised by men and Shae found it a little difficult at times. Only one had behaved inappropriately and she quit that position the day he propositioned her. But even when they were completely professional, she got nervous whenever she was in close proximity with them. She could do it, but Shae thought that it would be easier with a woman.\n\nAs Greer finished writing some notes, Shae took the opportunity to look at her. She guessed that Greer was in her late forties, but only because she had a little grey in her otherwise dark hair and a few smile wrinkles around her eyes and mouth. She obviously exercised because her arms and legs had nice muscle definition from what Shae had seen. She was dressed with impeccable taste and Shae envied the grace with which she held herself. While not big breasted, they seemed perfect for her tall and lean body. While she had a lovely face, it was her eyes that Shae found most striking. They were grey and felt piercing when she fixed Shae with her gaze. Fortunately they were not so intimidating when she smiled and she did that a lot.\n\n\"Well Shae, I think that is almost it. Oh, wait one more thing. It is unusual, but occasionally it is necessary for this position to travel. Is there anything that would make that a problem?\" Greer asked in her low and husky voice. Shae wished she had a voice like that.\n\n\"Not at all. I don't have anything that makes that difficult, even at short notice,\" Shae replied.\n\n\"Good. As I said, it is unusual. I don't think I have needed someone to do that in a couple of years, but it never hurts to check. Well I have enjoyed talking with you. I need to talk with Julia. We will be making a decision in the next couple of days, so you should hear back from us one way or another in the near future,\" Greer said to wrap up the conversation. \"Let me walk you back to her office and then she can escort you out.\"\n\nComing out from behind her desk, Greer led the way. Once again, Shae found herself admiring the older woman. As she walked, Greer's body was almost fluid and Shae noticed that her ass was quite attractive. She blushed a little bit and averted her eyes to continue to present a professional image. When Greer reached the HR Manager's office, she turned and put out her hand to shake Shae's. Greer had a very firm grip as she took Shae's dainty hand in hers. Greer didn't put much force into it but still it conveyed strength. Shae admired that strength but didn't try to echo it.\n\n\"Thank you again for your time, Shae,\" Greer said, turning away to head back towards her office. Just before she went around the corner, she glanced back at Shae who was still standing at Julia's door. She admired the willowy figure for just a second. Then she continued on shaking her head and laughing at herself.\n\nShae and Julia chatted as they headed out past the front desk. As Shae waited to the elevator to come, she looked over at Julia. \"You have my references. They are all from here in Seattle. I wish I could get one from the bank back in North Carolina, but my boss there was another one of my husband's relations.\" She bit her lip for a second. \"If you want the contact information for my lawyer or even the prosecutor, I can give you those. If you have any questions; you know about what happened.\"\n\nJulia thought Shae had almost a haunted look as she made the offer. It was as if the ghost of what she had done was there before her. For a moment, Julia hesitated. She wanted to turn down the offer, but would she be doing her job if she did? Finally, she nodded. \"I'm sorry, Shae. I really wish I didn't need to but it's my responsibility to check out applicants.\"\n\nNodding her understanding, Shae pulled a folded piece of paper out of her case. She wanted to be prepared once she made the decision to bring it up. As the elevator dinged and opened, she handed it to Julia. She put her hand out to stop the elevator from closing. \"Thank you for your consideration, Julia. I appreciate it and hope that you will be able to wholeheartedly recommend hiring me. I know I would do a great job.\" She stepped into the elevator. The door was closed before she even finished turning around. Shae took a deep breath and pushed the ground floor door. \"Well Bob, now we will see if you can still really screw up my life,\" she thought as the elevator descended.\n\nIt wasn't quite her normal lunch time, but Shae decided to stop and get something to eat before catching the bus home. She found a little hole in the wall Asian restaurant that served noodles. She was still watching her pennies but it wasn't very expensive. She took out a book she was reading and tried to do that instead of dwelling on the interview and job.\n\nShe had a couple of errands to run in the neighborhood before finally stopping at the local grocery store to pick up something for dinner. She was in the produce section when her phone went off. She recognized the number as Julia and hurriedly answered it. After a few seconds, her face went from apprehensive to a beautiful beaming smile. They spoke for a few minutes as Julia explained their offer and asked when Shae thought she could start.\n\n\"Tomorrow would be fine!\" Shae said in an excited voice. \"I don't have anything else going on but I understand if you need a few days to handle paperwork.\"\n\n\"Normally I would suggest waiting until next Monday, but I know that Greer has a lot to get done and could use the help. Sure, if you want to start in the morning that will work for us. How about you show up at 8:30? That will give me enough time to get everything done,\" Julia was smiling as she talked. Shae's enthusiasm was infectious.\n\n\"Great! I will see you then, Julia. Goodbye!\" Shae waited until Julia had hung up before she let out a little whoop. Her cheeks blushed as a few other customers looked over at her but she didn't mind the attention for once. \"I got it!\" she kept thinking. She kept that smile the whole evening.\n\n********\n\nHearing a light tap at her door, Greer smiled and looked up. She could always tell Shae's tap from anyone else's. Beyond just hearing it more, it was always very light so that Shae would not disturb her thought process. If Greer was deep in thought, Shae would just stand there waiting until Greer finished what she was doing. It was just one of the ways she had QAadapted to fit Greer's style. Although she appreciated many things about Shae, it was one of the top reasons Greer was thankful that she had hired Shae.\n\n\"It's Matthews. He's on the phone and wants to know when the drafts will be ready for him to review,\" Shae said. Even though it was summer and a warm day, she was wearing her usual long skirt with a conservative blouse. The only concession to the heat was the half sleeve. Her hair framed her lovely face as she waited for Greer's response.\n\nIt was at times like that Greer found Shae the most distracting. Even though she never dressed in a way that could be described as sexy, her intrinsic beauty was always there. And Greer wasn't blind to it. When they were working together or Shae was busy with something, Greer didn't notice it as much. But when she was still for a rare moment, she could be stunning. And as hard as Greer tried not to notice, sometimes she couldn't help it. After giving Shae the information that she needed, Greer watched Shae as she turned around and returned to her desk. Her perfect ass was swaying in the most delightful way as she walked.\n\n\"Stop it, Greer!\" she said to herself. It wasn't like her to ogle a co-worker. Greer always tried to behave in the most professional way. And while it wasn't a secret that she was a lesbian, it rarely ever came up. She kept her private life out of the office so there was relatively little for others to gossip about her. She was also very aware that as a senior member of the firm, there were rules about proper behavior especially with subordinates. The last thing that she wanted was for anyone to accuse her of harassment. It was something that was in the back of her mind, that another woman might think that Greer was coming on to her and complain. Since homophobia was very much frowned on now, it was harder to tell those who really found it offensive. It was much easier to just try and never give anyone the opportunity.\n\nWith Shae, Greer found it harder than she could remember before. And for some of the same reasons that she felt it was inappropriate. Beyond Shae's beauty, she had a vulnerability that made Greer's heart want to open up to her. In the few months that Shae had worked for her, Greer had figured out that Shae's marriage had probably been worse than Greer had guessed. Sometimes when someone shut a file cabinet hard or surprised her, Greer noticed that Shae flinched like she was always expecting a blow to land. Shae also didn't interact with the rest of the staff on a personal level, even with those who had similar jobs. She brought her lunch and would eat it at her desk while continuing to work. When one of them would ask her to join them for drinks after work, Shae was unfailingly polite but always turned down the offer for one reason or another. She seemed lonely to Greer but unable to do anything about it. When Greer thought about it, wistful was the word that most applied to Shae.\n\nBut Shae's vulnerability was exactly why Greer would chastise herself when her thoughts turned to how desirable Shae was. \"She is a sweet woman who was taken advantage of and hurt. The last thing that she needs is her boss, twice her age, lusting after her. I'm her supervisor, damn it! Even if she had the slightest interest, it would be taking advantage of her. Not to mention, she isn't interested! She is straight!\" Greer would think at those moments.\n\nWhat made it worse was Shae's obvious admiration for Greer. It was clear from early on that Shae thought that the world of Greer. Shae was not used to someone who treated her as an intelligent and capable person. The respect that Greer gave her just fed Shae dedication to her boss. Shae was determined to never let Greer down. She worked long hours and weekends to make sure that she accomplished whatever Greer needed done. And she came back for more; always asking \"Is there anything else you would like me to do?\" Burying the inappropriate thoughts that would often spring to mind, Greer would take a look at what she was working on and parcel out something of value for Shae to do.\n\nNow that it had been a few months though, it was becoming easier. Shae had made few friends in the office. Greer also rarely acted as someone superior to Shae, even when she was giving her direction. All that combined with the time they were spending together led them to develop a good friendship. It was mostly limited to the office, as Greer thought it would be best. But late in the day or when working on the weekends and they were taking a break, they would sometimes talk. It concerned Greer that Shae seemed to have little going on in her life outside work. She understood why Shae might not want to date, but she wasn't doing much exploring in her new city or the surrounding areas.\n\nGreer took it on as a project to try and suggest that Shae do something new each week. She would tell her about a museum or a park, help make sure that Shae knew how to get there and back, and then they would talk about it afterwards. At first reticent, Shae was soon eagerly waiting to tell Greer about her latest adventure on each Monday morning. Every once in a while, Greer would pick her up and take her somewhere that was a little more difficult to take public transit. During the summer, these were often hikes. Greer enjoyed introducing Shae to the wild areas that were still so close to a large city.\n\nIt was on one of these hikes that Shae let her past slip out. Although it had been cool when they started, it got warm before long. Greer shed her light coat and put it into her daypack, but Shae continue on without taking hers off. Even though the trail was through the forest, it was humid from the soil and it became warmer and warmer. Looking back at Shae, Greer could see the sweat dripping down her face. Just below Shae's daypack, Greer could see a dark patch where her sweat had soaked through.\n\n\"Hey Shae, I think you need to take that coat off. You are going to get overheated if you don't,\" Greer said. She got out the water and handed it to Shae.\n\nShae tried to say that she was fine but under the stern eye of Greer realized how ridiculous that sounded. She took a long drink first then after handing it back to Greer, she pulled it off. When she dressed that morning, she hadn't been thinking about the weather and had put on a tank top. Although it had a wide strap, it still exposed her arms up by the shoulder. In all the months she had been around Greer, she had never done that. She couldn't hide the scars from Bob's cigarettes any more. Shae felt a flush of embarrassment.\n\nGreer couldn't help notice the three scars on Shae's upper arms. They were little brownish puckered marks on her otherwise smooth pale skin. Her eyes were drawn to them but moved away after a moment. Greer's lips pursed and she looked grim. Unconsciously she glanced at the little mark on Shae's cheek. On its own, it wasn't very noticeable and would probably be thought by most as a remnant of a childhood injury. But Greer could put two and two together. The fact that it had faded a little more in the time since Shae joined the firm meant it was recent.\n\nShae grew more embarrassed and unexpectedly felt her eyes tear up a little. Although Greer avoided touching co-workers, outside work she was a warm person who was often in physical contact with her friends. She couldn't help herself as she reached out and ran her hand up and down Shae's arm. She could feel the marks of the two scars on that arm as her hand went over them.\n\n\"No one should ever treat another the way you were treated, Shae,\" Greer said in a low tone. Her outrage and sympathy for what Shae had been through was obvious in her voice. \"But he was to blame, not you. You shouldn't ever feel like you need to hide those or feel embarrassed about them. You didn't ask for them. You are an amazing woman, Shae. I admire you, going through that and still being who you are.\" Greer voice gained enthusiasm and she smiled at Shae. Patting her on the shoulder, Greer moved away and put the water away.\n\n\"You know Shae, if you ever need to talk, I will always be willing to lend an ear,\" Greer looked over at the young woman. Shae didn't seem embarrassed now but had a thoughtful look. After a moment, she returned Greer's look.\n\n\"I know you will, Greer,\" Shae said hesitantly. \"It's hard to talk about though. I don't like to think about it.\"\n\n\"I can see that, but sometimes talking about helps a person to get over it,\" Greer replied. \"But Shae of course it is only if and when you are ready.\" Pulling on her pack, she started walking up the path again. After a moment, Shae continued as well.\n\nAfter another 30 minutes, they broke out of the closed in forest and found themselves walking through meadows in the sun. The heavy feeling of the humid woods disappeared. The path widened a bit and Shae caught up with Greer. For a while they walked along side one another in silence. The sun felt good on their shoulders, especially when it was joined by a cooling breeze.\n\n\"I never thought it would be like that,\" Shae broke the silence. \"We started dating after I graduated from high school. He was a couple years older than me but we met at a church function. He seemed like a good sort and when he asked me out, I thought why not. I hadn't really dated before. I wanted to go to college but I needed to earn some money first. With my job at the bank, I wasn't going anywhere. And it seemed like everyone expected me to date someone, especially my aunt. It was easy to go out with Bob.\"\n\nShae went quiet again. As they came up to a little stream running across the meadow, Greer took the lead and went across the planks laid over it. Rather than moving on, Greer waited for Shae to cross and then continued side by side. After a little while, Shae continued talking.\n\n\"I don't know how I never saw his violent side the whole time we dated. Later I heard some stories about his getting into fights, but he never showed it with me. When I was twenty, he asked me to marry him. I don't know why I said yes. I liked him, but I don't think I loved him. But I tried to be as good a wife as possible,\" Shae trailed off as her thoughts returned to those days. Some things she was not ready to share.\n\nThe trail started to get steep as the highest point of the hike approached. They had to go one after another and soon found the pace a little too hard for talking. Shae was thinking anyhow and welcomed the pause. When they crested, she looked down at the small alpine lake and smiled at Greer. It was very lovely and she was glad that Greer had talked her into it. They made their way down to the shore and sat down as Greer pulled out the sandwiches she had prepared.\n\nAfter finishing eating, Shae sat looking out over the lake. It was quiet, just a little lapping of water and the occasional cry of an animal. She was very still.\n\n\"It started when he lost his job. And while money was tight, it always seemed to be enough for him to drink. And I think that hurting me made him feel better about himself,\" Shae's voice was cold. \"And no one cared. No one did anything. When he broke my arm, nothing happened. No one said anything; other than my aunt who told me to try not to anger him and be a better wife.\"\n\nTurning to look at Greer, Shae's face was calm. \"One night he came home stinking drunk and angry. He started to hit me, hard across the face. After he knocked me to the ground, he kicked me repeatedly in the belly. I guess he forgot I was pregnant. Then he said he was really going to show me and went and grabbed his baseball bat. I ran to the bedroom and locked the door. I thought maybe he would calm down but he just got wilder.\n\nShae closed her eyes, remembering that night. \"I thought he was going to kill me. I was so scared. I went to the closet, where he had his shotgun. I yelled at him to leave me alone. I told him I had it. And when he knocked open the door and came at me, I pulled the trigger.\" She fell silent.\n\nGreer stayed quiet too but she reached to take Shae's hand in hers and squeezed it. Shae just sat for a while, eyes closed, with her hand in Greer's not even returning the pressure.",
        "\"Such a terrible thing to have happened to such a lovely and sweet girl,\" Greer thought. Her urge was to move close and hug her tight, but she resisted it.\n\nAfter a little bit, Shae opened her eyes and pulled her hand away to wipe a few tears away. She smiled a sad smile at Greer. \"Anyhow even after everything, I didn't get much support. The nightmare didn't end that night. Jail; Bob's family hating me; no one wanting to stand with me. In the end, it was actually lucky that he had hurt me so bad that night because it was so obvious that I was defending myself. So when all the legal stuff was done, I just left\"\n\n\"I'm sorry, Shae. I'm sorry that you had to go through that. I'm even sorrier that you went through it alone,\" Greer said after a moment. \"I wish there had been someone there in your camp. Let me know if there is something I can do to help now, Shae.\"\n\n\"Greer, you have been wonderful. I'm so glad that I came to work for you. I'm learning so much,\" Shae's voice took on an enthusiastic tone. \"And being able to go to places like this helps me to think about the present, not the past. Thank you for being more than just my boss. It is so great to work with someone who I really feel I can trust.\"\n\nGreer returned Shae's smile. At the same time, it just confirmed for Greer that the limits she put on herself were absolutely the right ones. Just like Shae said, she needed someone she could trust. \"Okay,\" she said to herself, \"I can be that.\"\n\n********\n\nTossing down the report, Greer sighed in frustration. With one of the other partners in the hospital after a heart attack, she now had an extra client to manage. Of course she wanted to help; he was a good friend of hers. It was just that she was already swamped. She needed to get through this report on the new account and she didn't have the time to really go through and pull out the relevant information. It was dense and was really going to be a chore.\n\n\"That wasn't a good sigh,\" Shae said as she leaned against her door. Greer looked over at her and her frown disappeared. In the year and a half Shae had been working there her fashion sense had changed. While she still didn't wear skirts much shorter, they tended to hug her body a little more and her blouses were just a bit more revealing. She kept her scars hidden, but more of her arms and her cleavage were revealed. And Greer no longer felt guilty about appreciating Shae's beauty even though she no longer felt the same attraction. It was just another part of Shae that was always there.\n\nStill all that Greer could say in reply was \"No.\"\n\n\"Is there anything I could do to help, Greer? I've worked with your notes on these reports for a while now. I know what you look for and what you want to see pulled out. Maybe I could do a first pass for you so that you can get to the other stuff?\" Shae offered.\n\nGreer thought for a few moments and nodded. \"Okay, thank you Shae. That would be great.\" She held out the report and Shae took it with a smile and turned to go back to her desk. For a moment, Greer's eyes stayed on Shae's ass and then she picked up the next stack of papers she needed to wade through.\n\nIt was common that when Greer worked late, Shae did too. So when Greer shut off her lights and closed her door, she wasn't surprised to see Shae there. She glanced over at the clock and saw it was 7:30. \"Hey, time to go home!\" she said with a laugh.\n\nShae smiled her little embarrassed smile. Despite the long day, her eyes were still bright. \"I'm almost done. I just need to put another half hour or so into it.\" Her smile got a little bigger as she saw the look of concern on Greer's eyes. \"Honest, Greer! Plus I'm having fun doing this. And since I got my car, you don't need to worry about me getting home.\"\n\n\"I've said it before and I'm sure I will say it many times again, you are an amazing woman! Okay, see you in the morning.\" She waved as she headed home.\n\nLater that night, she was getting ready for bed when her cell phone beeped. She looked over and saw that it was an email from Shae. It was her report. Greer frowned for a moment as she realized that Shae must still be at work even though it was almost 11. She unlocked her phone and hit reply.\n\n\"Liar! :-)\" Greer hit send.\n\nIn the morning as she ate, Greer went through Shae's report. \"This is good,\" she thought as she read it. The more she read, the more impressed she was. Shae was following her format and process, but she was finding things that Greer might have missed. Doing this type of analysis was an area where Greer was pretty competent but it wasn't where she shone. Shae was drawing conclusions backed up by specific data and then presenting it in an easily understandable way. Greer was impressed.\n\nFor once she beat Shae into the office, but only barely. Shae started to get settled at her desk when Greer called. \"Shae, come in here. I want to talk with you.\"\n\nShae immediately got nervous. In her life, the words \"I want to talk with you\" were rarely followed by nice conversations. She wasn't sure what she could have done, although she immediate thought that maybe she screwed up the analysis. \"I should have read through it one more time before sending it,\" she thought.\n\nWhen she came into the office, Greer was sitting at the small table she had for meetings rather than behind her desk. Shae's nervousness dissipated somewhat when she saw Greer's smile. She joined Shae at the table.\n\nPicking up the report, Greer looked from it to Shae. \"Shae, I just want you to know how good your analysis was. You took a detailed look, pulled out the relevant facts, drew insightful conclusions and then wrote it in a way that makes it easy to understand. Not a lot of people can do that. Well done!\" Greer's smile grew a little more as she saw Shae's cheeks blush in the usual way when she was praised.\n\n\"Thank you, Greer. I just wanted to do a good job.\" Shae said. She always had a hard time receiving praise. Ever since her parents' deaths, there had been little of it up until the time she came to work for Greer. Even outside her work, she didn't get it that much. She still found it hard to break outside of her shell and so had a fairly small circle of friends with only a couple being close. And despite the attempts of many different men, including a fair number at work, she didn't date. So there were relatively few who she even gave the chance to complement her.\n\n\"But no good deed goes unpunished,\" continued Greer. She could see that the edges of worry were still hovering from the look on Shae's face. Greer pushed a stack of reports on the table over to Shae. \"So your punishment for doing such a great job on that report is that you can do the same thing on this stack. I want to see how well you can do with these. You have two weeks to get them done, so I don't want you killing yourself. Focus on one at a time and send the analysis to me when you're done. And I will try to limit the normal stuff I need from you but I'll still need you to do some of it.\"\n\n\"Of course Greer; whatever you need,\" Shae replied as she touched the stack.\n\n\"Shae, have you thought much about your career? Because if you can do as well on these, I think you really need to think about the next step on your career. You could be an analyst which is a higher position with higher pay. And in the long run it would set you up for other opportunities,\" Greer said.\n\n\"I like working for you, Greer. I'm happy and haven't really thought about what was next,\" Shae replied. She spoke quietly but her loyalty to Greer was very clear.\n\nGreer smiled at her and patted her hand in a friendly way. \"That is why a boss sometimes has to push, especially when someone is young. You are a great assistant Shea, and I would not be eager to try and find someone else. But I also have a responsibility to make sure that you get growth in your career. I'm not doing my job otherwise.\n\n\"In any case, maybe this first one was a fluke!\" Greer had a twinkle in her eyes as she said that, making it clear she didn't believe it. \"But that does remind me, I have some notes on your first analysis. Overall it is great but there are some things that would strengthen it. Take a look at them and decide how you want to use them, and keep them in mind with the next ones. There is no such thing as perfection, so always try to find opportunities to improve.\"\n\nShae thanked Greer and took the stack back to her desk and got to work. Shae didn't mind the extra hours it took. It wasn't like she had a lot in her life. Immersing herself in work also helped her keep focus on the present and stop the past from intruding. But even if she wanted to work at the same pace as the first one, Greer stepped in to make sure that didn't happen. When Greer shut down her computer and came out of her office to go home, she stood over Shae until she did the same thing.\n\nAfter each report was completed, Shae would send it to Greer. By the time the next day started, Greer had a set of note that gave Shae feedback on not just the areas that could be strengthened but what was exceptional. With each report, the list of good things grew and the weak ones shrank.\n\nHalfway through the second week, Shae was surprised when the senior partner stopped by to see her rather than Greer. She had of course talked to him in the past while he waited for Greer to finish up a telephone call. He was nice and had always put Shae at ease. But this was a new experience.\n\n\"Shae, I just wanted to stop by and let you know that the analysis you did on the Zeta customer demographics was first rate. Greer passed it on to me and made sure that I knew you wrote it. Very well done! Greer may kill me for saying this, but you're wasted in this position,\" he told her.\n\nOn the morning after she turned in the final analysis, Shae saw that Greer had once again beaten her into the office. She walked over to the door to say good morning. Greer was at her table again and waved Shae in. \"Would you shut the door and sit down, Shae,\" she said. She waited for Shae to do it.\n\n\"Shae, I hope you know that you are more than just an employee to me. I think of you as a friend and I care about you. So as a friend, I am going to tell you some harsh realities and I hope that you take them in the spirit they are met,\" Greer spoke with a very serious look on her face.\n\n\"You are selling yourself and your life short. I know that you had some horrible things happen to you. But you are letting those things continue to have their hold over you. I look at you and I see someone who is not living life to its fullest. You have a nice safe life. You aren't unhappy, but Shae are you really happy? After losing your parents and what happened with Bob, I can see that just not being unhappy would have been enough to start. But now Shae, I think it is time for you to start finding happiness.\n\n\"I'm your friend and I'm your boss, and I am telling you that the first step is for you to get out of this comfortable bubble you have working for me. You have a real talent for analysis and we just had a position open up in the analysis group. Rachel just wasn't working out and she was let go yesterday. You would have to apply, but you have really impressed me Shae. I think you would impress them too.\" Greer stopped and looked at Shae. She had tried to speak with a combination of warmth and firmness.\n\nShae sat there, looking at the tabletop. Greer brought up things that she preferred to ignore. She was content just drifting along in life. She glanced up at Greer. She was very quiet when she spoke. \"You don't know how much better it is to just not be unhappy, Greer. You can't know that.\" As she spoke, Shae didn't realize that she reached up and touched her shoulder but it drove her point through to Greer.\n\n\"You're right, Shae. I have never known that type of unhappiness. I've never had someone ... many someones actually ... let me down the way that you were. But Shae, that doesn't mean you don't deserve happiness. If anything, you deserve it more than anyone else,\" Greer was impassioned as she spoke. \"And because I care what happens to you, I am asking you to take this first step.\"\n\nAfter a few moments of thinking, Shae spoke again. \"But I like working for you. You're nice. I mean you are demanding but that's fine. You are still always nice even when you are asking for the impossible.\" They both smiled. \"But not every partner is like you. Some of them yell. Some are just, well, assholes. I don't know if I can take that.\"\n\nReaching out, Greer took Shae's hand again. \"I know some are. And I know that being in a more confrontational setting is scary for you. But it's part of life and learning to deal with it is an important skill. And the truth is that Julia is riding herd on the worst of them. It is getting better. Still it would be different than our dynamic. And if you are going to get more out of life, you have to be able to get past this fear. Plus you have your own competence to protect you from being yelled at. You will be great at this.\"\n\nShae squeezed Greer's hand. It seemed hard for her to speak but finally she did. \"I'll miss you, Greer. I know that it only confirms what you said about my life, but you are my best friend.\" She trailed off for a moment. \"I mean, I know I'm not your best friend but you are the closest one I've got.\" A few tears started to run down her face. \"You say I'm not happy, but being around you feels like happiness.\"\n\nGreer felt her own eyes moisten. She squeezed Shae's hand back. \"You see Shae that is why you need to change your job. You need find a place where work isn't the center of your life. As long as you work for me, it makes it hard to do that. We are friends, very good friends outside work but it limits the circle you encounter. And not being my subordinate doesn't mean we will stop being friends. If anything, it removes some of the limits that places on our friendship.\"\n\n\"I hope not, Greer. I hate the way this sounds, but I need our friendship. I would be lost without it,\" Shae said very quietly.\n\n\"We won't let it, okay?\" Greer replied. And Shae nodded.\n\n\"Good. Now when you go back to your desk, I suspect that you will see a meeting invite from Julia. And I think you will need this,\" Greer said as she handed Shae a piece of paper. It was an updated resume for her. It had all of the facts but it had been completely reorganized. Greer smiled. \"You need one that emphasizes you as the professional you are.\"\n\nShae thanked Greer. As they both got up, Shae couldn't help herself and she hugged Greer tight. Greer felt awkward but returned the hug. Shae's lithe body against hers brought some old thoughts back up but Greer pushed them back and ended the hug as soon as possible. As Shae left, Greer detected a small excited smile on Shae as she obviously was thinking about the new job. Greer chuckled and sat back at her desk to work.\n\nJust as Greer expected, Shae had no real competition for the position. Greer's own recommendation along with the samples of her analytical skills gave her an advantage but then Shae closed the deal with her interviews. In the end, they offered her the position and more than a 50% increase in salary. Even Shae found that she really wanted the job. The idea of a new challenge was pulling her. Plus she guessed that if she said no, Greer would be disappointed and that was something she didn't want.\n\nIt was hard for Shae on the day she switched offices. Julia already had a temporary assistant ready for Greer. Shae spent a day with her to make the transition but she worried that it wasn't enough and that she was leaving Greer in the lurch. The transition meant Greer had more work, at least for a while, so she was distracted. It felt a little anticlimactic when Shae picked up her last box to take to her new cube. Greer was on the phone when Shae popped her head in to say goodbye. Greer put the call on hold and came over to hug Shae and wish her luck. But she had to get right back on the phone and was immediately into the conversation. Shae stood for a moment and then turned to walk to the elevator. At least they had a nice dinner the night before. Greer had insisted on taking her out to an expensive sushi restaurant. It had been a wonderful time and Greer had made sure that Shae knew how she too would miss not working together.\n\nWhen Shae got back to her apartment, she found sleep hard to find. Her thoughts were a jumble of the new job, her worries about being in a new situation, and Greer. Eventually her mind started to calm down and she felt sleep slowly approaching. As consciousness left her, only thoughts of Greer were left in her mind.\n\n********\n\nThree months later Greer was stuck in an office in Charlotte surrounded by boxes full of paper. She leaned back in her chair as she waded through another document. Outside the office she could hear the bustle of the busy people working for the firm's newest client. The large energy company fired their marketing firm just as they were working on rolling out a major new program. Greer's firm was being brought in to get the program back on track but the deadlines were not going to slide out. When Bill, the senior partner, called Greer in to his office, he delivered a message that was both gratifying and alarming.\n\n\"Greer, I'm giving you the responsibility for fixing this mess. We didn't know what we were getting into when we pursued this. It's a lot worse than I expected. So I need our best person on it. Greer, that's you. If you can't fix it, no one will be able to. And Greer, not getting this fixed isn't an option. We staked our reputation on being able to do this and it will really hurt us if we fail,\" he had told her.\n\nShe decided to go out on her own and get a feel for how to approach it. Then she could ask for the resources she might need. As she finished the document, she picked up her note pad and made a few comments. Then she sat and organized her thoughts, occasionally jotting something down. She swiveled around in her chair and surveyed the boxes.\n\n\"First things, first. I need a little help,\" she thought. Bill wanted her to work through him so that he could get her anything she needed. Greer typed up a very brief email to him. \"I need an analyst as soon as possible. If you can get someone on the red eye tonight, that wouldn't be too soon. Just have him come straight to the office in the morning.\" She hit send and then checked that off her list; dismissing it from her thoughts.\n\nWhen Greer got back to her hotel just after 11, she checked her emails one last time. She had an email back from Bill and could see the first three lines in the preview. \"Greer, I understand. Sorry for not getting back earlier but needed to have the details. We managed to get a ticket for tonight and by 9 AM, you should have ...\" Greer didn't bother opening up the email to read the rest of it. She was exhausted and put her phone down so that she could get ready for bed.\n\nThe next morning she was back at the office by 7 AM to get back to work. It was Thursday, and she needed to wrap up all her recommendations by Monday morning. It didn't leave a lot of time. Shortly before 9, there was a knock on her office door.\n\n\"Come in,\" Greer said loudly without bothering to turn around. She was in the middle of finishing getting a thought down on paper. She heard the door open and someone walk in to the room. \"Just a second. I don't want to lose this thought,\" Greer said. The person seemed to understand and just quietly stood there.\n\n\"Okay,\" Greer said with satisfaction before turning around. She was very surprised to see that it was Shae. She still had her suitcase in her hand. \"Shae, I didn't expect it to be you. I mean it is nice to see you and know that I have the best analyst, but somehow I just didn't think it would be you.\"\n\nGreer paused as a thought passed through her mind. When she spoke, her voice had an edge of emotion in it. \"Bill doesn't know about where you grew up, does he?\" Greer said. Shae shook her head. \"And when he asked you to go to Charlotte, you didn't say anything?\" Shae shook her head again. \"Why the hell not, Shae? Oh my God, Shae this has to be hard to be here.\"",
        "\"He said you needed me. Greer, that was all that mattered. Yes, it's hard and flying here brought back a lot of memories, but bottom line is you need me. So I came,\" Shae answered with a little quiver. She looked around the office and saw a second desk. \"Should I set up here?\" she asked in a matter of fact voice that had already shed the emotion that was in her voice a second ago.\n\nGreer reached out her hand and squeezed Shae's. \"Thank you for coming, Shae. It means a lot to me. And yes, that is your desk. I had them bring it in yesterday.\" As Shae got settled, Greer explained her plan for getting through the material and getting their recommendation. Shae quickly picked up on what her priorities were. She shed her overcoat. She looked like the consummate professional woman. She had on a woman's suit with a pair of trousers. The outfit complemented her slender body very well. When she took off her suit jacket, she revealed a top that surprised Greer. Although it was high necked, it bared both her shoulders and her upper back down to just above her bra strap. The scars on her arms were clearly visible.\n\nLooking a little self-conscious, Shae acknowledged Greer's look. \"It's a habit for me not to show them, but I'm not ashamed of them anymore. They aren't my fault. You helped me see that, Greer. And I won't lie and say that showing them isn't a little bit of a fuck you to the people who let them happen to me.\" She blushed when she swore but her eyes still showed a steely glint. Then she picked up the first report and started to go through it.\n\nGreer didn't often swear either but this time it seemed appropriate. \"Fucking right!\" she said in agreement. And she went back to where she was.\n\nIt was strange for both of them working like this. Beyond the fact that their way of working together was not like teammates, they were not used to actually working together side by side. While it wasn't distracting, it heightened their awareness of each other. Over the course of the day, they repeatedly had to share information. When it was Shae, she would get up and come over to show Greer some piece of information that she had found. She would stand right next to Greer, bending over. Her long soft hair brushed against Greer's shoulder. For a moment, Greer would enjoy the feeling and but then she would clear her head and focus on what Shae was saying. It was a different dynamic and it took a little getting used to it.\n\nFor her part when Greer went over to Shae, Greer was a little more circumspect and careful not to touch her. Shae wasn't even aware of the feelings that she was raising in Greer. The last thing that Greer wanted to do was throw a kink in their working relationship by making Shae uncomfortable. Even then, sometimes Shae would lean forward as Greer explained something and her hair or shoulder would brush Greer's arm. Letting the innocent contact continue without reaction so as not to offend, Greer didn't find it hard to just focus on work. As the day went on, it settled into a workable pattern and they made significant progress. They didn't bother to stop for lunch or dinner, preferring to have something brought in. With lunch, they just kept working while eating their sandwiches but Greer insisted on pausing to actually have a little dinner together.\n\nIt was quite enjoyable. Even though Shae still worked in the same office, it was on a different floor and they didn't have a lot of chance to chat at work. One of them usually stopped by to see the other every day but sometimes it was to just wave and say hi. Even before Greer had flown out to Raleigh, it had been a couple of weeks since they really had a chance to talk.\n\nOverall how they interacted had evolved over the last few months. At the start, Shae still acted like Greer's subordinate when they would get together. Greer tried to set the tone by treating her like an equal. And gradually Shae began to do the same. It gave their conversations a bit more of an informal feeling that continued here.\n\nAfter dinner they continued to work for another few hours. Greer was starting to feel tired as she tried to figure out how to deal with a particularly thorny issue. She stood up and stretched, arching her back and feeling the vertebrae crackle a little. It felt good and she held the pose for a few moments. When she stood upright, Greer turned to ask Shae a question and found Shae watching her. After a second, Shae blushed and went back to typing on her laptop. Greer didn't think much of it as she went over to Shae.\n\n\"Have you gone through the per site daily oil production reports yet?\" Greer asked Shae. Her back still ached a little and she reached behind her with both hands and pressed the balls of her hand into her lower back.\n\nShae kept her head down, not looking at Greer, as she answered. \"Not yet. It was the next thing on my list to do after this. I can switch now, but I would rather finish this first while I am in the flow.\"\n\nGreer smiled at her. It was the first time that she could remember when Shae really told her how she would like to tackle a problem. She loved Shae coming into her own with confidence in herself. \"However you want to do it, Shae,\" she replied. Greer stopped herself from going on. \"I'll just embarrass her,\" she thought to herself. She went back over to her desk. Before sitting down, she bent over and stretched one more way. She could feel the stiffness in her back leave a little more. She sighed a contented smile. Then she sat back down and went back to work.\n\nAt 9:30, Greer called it a night. \"We have a lot to do tomorrow, so we need to get some rest. Plus I need a little bit of wind down time, even if you don't.\" Shae smiled at her and agreed. Once again, Greer was the last person to leave the building.\n\nWhen they got to the hotel lobby, Greer paused for a moment. \"I think I am going to stop in the bar and have a glass of wine. I've been in that small office too long and before I go to a little hotel room, I would like to relax just a bit. I know how you feel about bars Shae, so I will see you in the morning.\"\n\n\"Actually Greer, would you mind if I join you? I'm trying to be a little less uptight,\" Shae hesitantly asked. \"Let me check in and put my stuff in my room, and then I will come down.\n\nA little surprised, Greer nevertheless smiled and said of course. In the couple of years she had known Shae, she had never known Shae to willingly go into a bar. She associated them with her husband and drunks, even though Shae didn't have a problem with having a glass of wine now and again. Plus a lovely woman like Shae was almost certain to attract the attention of men; attention that Shae didn't find welcome. As far as Greer knew, Shae had not dated anyone since she moved to Seattle. It could be that it was just something that Shae kept private, even from Greer. Occasionally Greer wondered about it but she respected Shae's privacy too much to ask.\n\nEntering the bar, Greer sighed with relief to see that it was empty except for the bartender. She picked a table that was somewhat close to the bar but still would give them a bit of privacy. Looking at the wine list, Greer picked out a nice cabernet sauvignon blend. Not knowing her wines as well, Shae had told Greer to just order her whatever Greer got. It was only ten minutes until Shae came down. She had taken a few minutes to brush her hair and put on a little make up. Greer thought that both helped Shae to look a little less haggard from a long day after taking an all-night flight.\n\nFor a little while, they both just sat there in silence. Greer appreciated the opportunity to just relax. But after a bit, they started talking. At first Shae seemed to want to talk about work, but Greer put her foot down and forbade any work discussion. \"We are here to forget about work for a few minutes!\" she emphasized.\n\nThat led to another short moment of quiet before Shae spoke again. \"We haven't talked that much about your life recently. Are you still seeing Sharon?\"\n\nWhile Greer had never hidden her orientation from Shae, they didn't often talk about it either. Still it wasn't possible for Shae not to know what was going on in Greer's personal life. At a minimum, Shae knew who the woman was in Greer's life because she would call the office when she couldn't reach Greer on her cell phone. Sometimes it was various women as Greer hadn't really met someone with whom she really clicked. Sharon had been the woman Greer was seeing when Shae changed jobs.\n\nGreer laughed a little bitterly. \"Sharon? God no. I got tired of her jealousy. I mean I never gave her the slightest cause. But every time I even talked to another woman, she got pissed off. It was always me trying to calm her down and I just got tired of it. I haven't seen her in, let's see, two months.\"\n\nShae's eyes were lowered for a few moments. Then she looked at Greer. \"Good,\" she said. Her cheeks blushed in that cute manner of hers. \"I mean, I'm glad because that is how it looked to me too. If you weren't available, she always wanted to know who you were with. I don't think she could trust anyone.\" Shae paused for a moment, and then she continued. \"Even someone who is the most trustworthy person I know.\"\n\nNow it was Greer's turn to blush. She wasn't used to Shae being quite so direct. Suddenly Greer became aware that Shae's leg was stretched out and against her own. The contact reminded her of the moments when Shae had accidentally touched her back at the office. It felt good and if it had been someone else, Greer might have pressed her leg back and seen where it led. But this was Shae, and Greer had already made up her mind that she would never try anything with Shae.\n\nGreer realized that she still hadn't said anything to respond to Shae's complement. She smiled at Shae. \"You are very sweet to say so. And I really appreciate your loyalty to me, Shae. You are everything that a good friend should be.\" She loved the big smile that brought to Shae's face.\n\nThey continued to talk for a few minutes more when Greer caught Shae stifling a yawn. \"Okay, that's it. We need to get you up to bed. I know you didn't sleep well on that flight and you need to recharge those batteries for tomorrow!\" Greer left enough money on the table to cover both their drinks and still be a nice tip. As the two of them got up, Shae was a little unsteady on her feet. While she only had one drink, the combination of exhaustion and not being use to drinking were affecting Shae much more than Greer. \n\nMoving around to stand beside her, Greer slipped her arm around Shae. \"Just lean on me, Shae. Let's go up and get you to bed.\" Shae nodded okay and willingly leaned against Greer as they left the bar. When they got on the elevator, Shae rested her head against Greer's shoulder. Shae had also reached her arm around Greer and it was resting on Greer's hip. Ruefully Greer tried not to think about how nice it felt to have a beautiful woman half her age basically cuddling up to her. She reached over and pressed the button for their floor. When the doors opened, Greer steered the two of them over to Shae's door.\n\nShae pulled her room card out of her coat pocket and handed it to Greer. Once she had the door open, Greer helped Shae into her room. Greer lowered her down to sit on the bed; but as soon as Shae's rear hit the bed, Shae fell back onto the bed. Her feet were still on the floor. Laughing, Greer stood over Shae.\n\n\"What do I need to do to help you get ready for bed?\" Greer asked, mostly joking.\n\n\"Yes please,\" came Shae's surprising answer. \"Otherwise I think that I am just going to sleep like this.\"\n\nTo say that Greer had mixed feelings was an understatement. On one hand, it was clear that Shae had reached the end of her reserve and she was really about to crash. On the other hand, Greer felt uncomfortable about undressing Shae when Greer was struggling with her own attraction for Shae. But in the end, what else could Greer do?\n\n\"Okay, but I need some cooperation. I'm not undressing a corpse,\" Greer said sternly. Shae nodded her agreement. Greer went and looked in Shae's luggage to find her nightclothes. She was a bit surprised to find it was a shorty nightgown. She sighed and rolled her eyes. \"Who has it in for me? This keeps getting harder and harder,\" she thought to herself.\n\nShe came back to the bed and placed the nightgown on the bed. Coaxing Shae to sit up, she slid Shae's jacket off her. Greer tried to ignore how lovely Shae looked and just focus on the tasks at hand. Shae's blouse zipped up on the back so Greer sat down on the bed and leaned over to first unhook and then unzip the back. As it fell away, Greer saw a few more burn scars. She bit her lip as she felt anger flare up that someone had done this to a person about whom she cared. She also noticed a long scar across her lower back. It looked as if Shae had been cut buy something, maybe a whip. \"Jesus Christ,\" Greer thought. \"She doesn't really want me to see these. The wine must have hit her more than I thought.\" So Greer tried to ignore them and just help Shae. She pulled off Shae's blouse. Greer's hands were trembling as she undid Shae's bra. She slid that off Shae as well. Shae's breasts were larger than Greer's own and still very firm. Greer tried to avert her eyes but they lingered for a few moments.\n\nShae looked up at Greer with a curious look on her face. Greer expected her to cover herself up or pull on her nightgown. Instead she lifted up her arms so that Greer could put it on her. Greer couldn't help but get close to Shae as she did so. She felt Shae's firm body touch her own as she pulled it down. \"I hope Shae doesn't figure out how hard this is for me,\" Greer thought.\n\nShae had already kicked off her shoes. She fell back again so that Greer could help her get out of her pants. Greer unbuttoned them and then zipped them down. Moving to the foot of the bed, Greer straddled Shae's legs and grasped the waist band of Shae's pants. As she started to pull, Shae pressed her feet down and raised her hips up. It was a very utilitarian move that was equally erotic. As Greer pulled her pants down, Shae's lifted crotch was exposed. Her pants were a little tight so her panties were pulled down a little; enough that the top of her pussy hair was exposed. Again, Greer tried to avoid looking at Shae and just focus on what needed to be done. Once they were down around Shae's thighs, Greer got off the bed and pulled them the rest of the way off. She pulled down the covers on the other side of the bed so that Shae could just roll over.\n\nWhen Greer returned from hanging up Shae's clothes, she was happy to see that Shae was in bed with the covers pulled up. At least they were pulled up most of the way. Unfortunately for Greer, or was it fortunately, Shae had left them just below her breasts so that they were even more obvious. \"You're killing me, Shae,\" she thought to herself. It seemed like the same thought she had had repeatedly since entering the room. She sat down on the bed next to Shae.\n\n\"Okay, Shae. You are all ready for bed. Do you need anything else?\" Greer smiled at the sleepy and slightly tipsy woman.\n\n\"What about my bedtime kiss?\" Shae asked. Her voice was very soft and almost dreamy. \"I need that to keep the bad dreams away.\"\n\nGreer kept the smile plastered on her face as she tried to avoid showing shock. \"The things I do for friendship,\" she thought. \"I deserve a medal.\" Out loud she only said, \"Well we can't have those.\" She leaned over to give Shae a kiss on the cheek. At the last moment, Shae turned her head and Greer found herself kissing Shae's lips. The kiss itself was brief but it sent a jolt through Greer. She pulled back and looked down.\n\nShae had a little smile on her lips. \"That was nice,\" she said. \"Thank you for the goodnight kiss, Greer.\" For a few moments, she looked up at Greer. Then her blue eyes flickered a few times before shutting. Within moments, the rhythmic sound of Shae's breath told Greer that she had fallen asleep. Greer sat there for a little while looking at Shae. Finally she got up and went to the door. Before turning out the lights, she looked back one more time at Shae. Then she left.\n\nAs she got ready for bed herself, Greer's thoughts didn't wander far from Shae. Some of it was the erotic encounter that night, but it went beyond that. Shae had been much touchier than ever before. And some of what she said had a definite possible double-entendre meaning. Never anything particularly overt but still it made Greer think. Despite her attraction to Shae, Greer never really considered making a move on her. It just seemed so wrong on so many levels.\n\nNow that Greer thought about it, she had never considered Shae's sexuality. She knew that Shae had been married. But other than that, she had never once talked about any other men in her life, either before Bob or after. Of course, the same could be said about any women. Shae had never talked about it either way.\n\nThe more she thought about it, the more Greer started to come to wonder if maybe those innocent touches weren't so accidental. Shae had done it again and again, yet in their year and a half of working together Greer couldn't remember it having happened. Then there was the moment when Greer had been stretching and she caught Shae looking at her breasts. And there was also a point when late in the evening and Greer was a little tired, that she rested her hand on Shae's shoulder. At the time, Greer had dismissed it but for a moment she thought she felt Shae trembling.\n\n\"Am I reading it wrong,\" Greer wondered. Yet on top of those things, there were the events in the bar and after. Shae had freshened up before coming back down. It wasn't completely out of character for her to have brushed her hair, but touching up her make up? Shae had never really been someone who worried too much about make up. Greer also thought about how Shae's leg had brushed against hers and stayed there. And of course what happened in the room.\n\nThat triggered a thought. What if this hadn't been Shae? What if this had been some other woman? What would Greer have thought if this was happening with someone she didn't have the same history as Shae and she did?\n\n\"Oh my God,\" Greer said out loud. She realized that she would have interpreted it as flirting and making her interest in Greer known. And Greer knew she would have responded, especially with a woman as beautiful as Shae. \"I've been pretty blind,\" she thought. \"I still don't know really how to respond but at least I think I am on the right page!\"\n\nAs she thought about it, Greer started to get undressed. She caught a glimpse of herself in the mirror. She moved closer to it. Continuing to undress, she watched herself. Soon she was completely naked. She turned around, keeping her eyes on the mirror. She sighed. Greer knew that for her age, she was still very attractive. \"I hate that phrase though. For her age sounds like an apology,\" she thought. But it was her reality. She was 50 now and her body would just continue to get older. Staying in shape would help but still she would never again look like she did when she was Shae's age. \"Hell I won't look like I did when I was twenty years older than Shae,\" came an unwelcome thought.\n\nGreer was never one for self-pity and she pushed those thoughts away. She was still attractive. She laughed as she thought, \"I'd do me.\" Her long legs were athletic and let up to her ass. Never having had children, her hips were a little narrower than a typical woman her age. She admitted it was really a pretty great ass. It was very firm from all her exercise. She knew that was one of the things that attracted attention.\n\nAs she looked at her breasts with a critical eye, she was glad that she wasn't big breasted. They sagged some, but nothing like what they would if they were larger like Shae's. \"Mmmm,\" she thought. Shae's breasts may be candidates for sagging when she was 50, but right now they were still nice and firm. As she thought of them, her hand strayed up and began to lightly stroke the edges of her own breasts. It felt very nice. It had been a while since she had made love and she recognized the signs that she was horny.",
        "Just as she had foreclosed the idea of making a move on Shae, Greer had also avoided fantasizing about her. It would have been too hard to make her an object of desire in her fantasies while at the same time avoiding doing so in real life. But tonight, the feeling of forbidden fruit was arousing her. The memory of Shae in her hotel room was too fresh. The innocent way she had acted made her more enticing than if she had tried to act sexy. Greer's hand curled and she brushed the back of her fingers along her nipple as she pictured Shae's areola and nipples. They were small and a rosy pink. Greer closed her eyes as her nipple felt the bumpy back of her fingers lightly pass over it. Her lips smiled as the memory suddenly made her realize that Shae's nipples had been very erect. \"Oh, that little tease,\" she thought as she ran her hand over her other nipple. She could feel her excitement growing. She began to brush her first two fingers back and forth over her nipples. The feeling grew, exciting her until it was almost irritating and then she would switch to the other one to do the same thing.\n\nAs the brushing started to get to be too much, Greer switched and started lightly pulling on her nipples. Each time she pulled, she thought of how Shae had looked up at her. The offer had been there in her eyes, if Greer had realized it at the time. But she hadn't been looking for it, and even if she had Greer wasn't sure what she would have done. Now however she was safe indulging in a long suppressed fantasy. Greer recalled the feeling of her body touching Shae's as she pulled down Shae's nightgown. Her fingers sought out those places to caress them and remind them of how it felt to touch Shae.\n\nOpening her eyes again, Greer looked at her body in the mirror. She recalled how Shae's body felt and looked, comparing with her own. She wasn't as slender as Shae, and her skin was darker from wearing a bikini when she was at the swimming. She rarely laid out in the sun but still being out made a difference. In addition Greer was pleased to see that she was actually a little firmer from all of her sports. Shae might have been thinner but it was softer. Of course it was the softness that Greer remembered as she stroked her belly and sides. She loved touching a woman like that when they were making love, long, soft strokes that moved from place to place. Just like her partners, Greer's touch helped to grow her excitement.\n\nHer hand slipped lower and lower as Greer's memory continued to recall what happened. She still couldn't believe how when she went to pull off Shae's pants, Shae had lifted herself up. In the light of her new understanding, Greer thought about how blatant that had been. It was really the one time when Shae was truly offering herself to Greer. Her mound covered barely by her panties, especially how they slipped down to expose Shae even more. Greer still had on her own panties. Her fingers slipped under the waistband and brushed over her mound. It felt so nice with her hair being bent from side to side. She felt her wetness coating her fingers. Each time she moved them over her pussy, they got a little wetter. Pulling them out from her panties, she lifted her fingers to her open mouth. As she sucked on each one, she wondered how Shae might taste different. Would she be saltier, fresher, or sweeter? Once her little finger popped out of her mouth with her juices removed, Greer reached down under her panties again.\n\nNow Greer felt her excitement beginning to peak. She slid one finger down between her pussy lips, coating it and making it slick. She began to run it up and down her pussy. Greer's hips moved back and forth and she closed her eyes again to picture Shae. Now it wasn't just the image of Shae but it was the feeling of their lips touching. It was so brief but burned into Greer's memory. \"My God, her lips were so soft,\" she thought. As she played back the kiss over and over, her finger started to concentrate on her clitty. Sliding up and down over it, she could feel her orgasm approaching.\n\n\"Oh fuck,\" she softly said out loud. Then again, \"Oh fuck!\" Her lips pulled back as she felt it start. \"Oh, Shae. Shae! Yes, Shae!\" she gasped out before she let out a long moaning scream. Her body was wracked by spasms as she felt herself letting go and cumming. She thrust her hips against her finger, prolonging it. Her other hand was pulling on a nipple, stretching it out. She was rocking back and forth, almost losing her balance. As she felt it peak, her body bent over and she had to reach out to grab the dresser to avoid falling. Her pussy gushed with her juices and her panties were soaking wet to the point of it running down her legs.\n\nSlowly it faded away leaving Greer still bent over supporting herself with one hand. She was panting hard. She pulled out her hand from her panties and used it to help hold herself up. After she had caught her breath, she looked up at herself in the mirror. Her hair was messy from tossing her head around.\n\nDespite how good it had been, Greer couldn't help feeling a wave of guilt come over her. Shae was still a vulnerable woman. Even if Shae wanted Greer, it didn't make it right. \"I'm too old for her,\" Greer thought. \"I'm old enough to be her mother. And I'm like her mentor. I can't take advantage of that. She has been hurt so much by people who should have done right by her.\" Greer knew that she was her own worst critic. No boss had ever been able to beat her up like she did herself. It was part of what drove her to be the best. But now it was unwelcome.\n\n\"Plus there is the whole work thing. I'm a superior in the firm,\" Greer continued berate herself. At the same time, she felt a little internal disagreement on that point. She was no longer Shae's boss. She might be senior, but there were no rules that specifically forbade a relationship between two people in different departments. They were realistic enough to know that it was pointless to pretend relationships didn't happen. \"But you know it is frowned upon for a partner to date with a junior employee,\" her internal argument continued. It was just too easy for someone to abuse that situation.\n\nIn the end, it seemed fairly clear to Greer. \"I care too much for her to hurt Shae.\" She would put the genie back in the bottle and just keep acting like she didn't see Shae's interest. I will be as good a friend as possible so she won't feel rejected but I need to leave it there.\" Greer finished getting ready for bed. Sleep didn't come easy. Thoughts of Shae refused to go away, but eventually she found a restless sleep that got her through the night.\n\nIn the morning, things seemed mostly back to normal. They met at the restaurant for breakfast and neither one of them brought up the previous night. Greer had been nervous but found it easy to slip back into a normal conversation. They planned out the day and then headed over to the office.\n\nGreer was glad to be able to immerse herself in the work. There were times when she even forgot that Shae was there. But there were also moments like the day before when Shae would come close. Greer was more aware today of how Shae was subtly touching her. And she was wearing just a little bit of Channel, so that when she came close the scent of her was everywhere. But having so much to do helped Greer to just focus on work. Once Shae's question was answered, she would go back to work without delay. When they did talk, it was always about work. Even when they ate dinner in the office that night, the conversation covered how they were going to get everything done in the two days they had left.\n\nAlthough it was Friday, it was a later night for them. They were both so busy that they didn't notice the clock. When Greer looked up and saw it was a quarter to eleven, she swore. \"Damn, I didn't realize it was so late. Okay, let's just leave everything here and we can start up in the morning right where we are.\" They had agreed to come in early again Saturday morning and get as much done as they could. It would save them a little time if they just left their laptops ready to go.\n\nOn the drive back to hotel, Greer thought back over the day. She felt bad, like she had been a little cold to Shae all day. Maybe it was a bit of an overreaction. Plus she realized that despite how good of a job Shae was doing, she had neglected to tell her. In her need to cool things down, she wasn't treating Shae the way she should.\n\nGreer reached over and squeezed Shae's forearm. \"Hey Shae, I was pretty preoccupied today. I forgot to tell you what a good job you are doing. Honestly I don't think that anyone could have helped me get as far as we are in this amount of time. Thanks for doing what you've been doing.\" Greer was rewarded with a huge smile from Shae. Although she couldn't tell in the dark, Greer was sure it was accompanied by her little blush.\n\nShae put her hand on top of Greer's and squeezed it back. She left it there after the little squeeze. \"You're welcome, Greer. I'm glad I can help you,\" she said with enthusiasm. Shae didn't do anything other than let her hand rest on Greer's, so Greer let it go.\n\nWhen they got back to the hotel, Shae looked over at Greer. \"Did you want to get another glass of wine?\" Shae asked. She didn't add that she would join Greer but the implication was clear.\n\nGreer had already thought of this and had her answer ready. \"No, I don't think so. It has been a very long day and I just want to crash. If you want to, you certainly earned it.\"\n\nShae looked over at the bar as if she was considering it, then she too shook her head. \"No, I'm tired too. Plus it is Friday night.\"\n\nTurning her head to look into the bar, Greer saw what Shae meant. It was busy tonight, and in particular with a fair number of men. They looked like sales guys, and therefore by definition pushy. For a moment she considered telling Shae she would have one glass with her, but then she rejected the idea. She turned back to Shae, \"I understand. You know if you really want a glass of wine, just order room service. I'm signing off on your expense report so it's fine.\"\n\n\"Maybe,\" Shae replied. \"Like I said, I'm tired too and we still are planning to get going early.\" They walked together to the elevator. While waiting for it, Shae leaned against the wall in the same way she used to do at Greer's door. Her tired face looked a little melancholy. Greer felt her heart strings tug. With realizing she was doing it, Greer reached out and brushed Shae's hair away from her face. Shae looked at her and gave her a shy smile. Just then the door opened and they both went in. Neither said anything on the way up but Shae didn't seem to know what to do with her hands, fidgeting with them the whole way up.\n\nShae's room was in the same direction as Greer's. When they got there, they stopped and Greer turned to Shae and said goodnight. Without warning, Shae moved forward and gave Greer a hug. It was light and she didn't prolong it. As Shae broke it, her face was hard to read. \"Thanks, Greer,\" she said a little enigmatically and then \"Good night.\" She quickly went into her room and the door clicked shut. Greer stood there for a moment then she sighed and went on to her room.\n\nThe next day went by quickly but Greer found that they were making tremendous progress. She could see the light at the end of the tunnel. She was starting to narrow down on her recommendations and Shae found that she had less analysis to do. Greer began to have her review the overall report. This was familiar work for both of them. Shae was always able to help in polishing the report.\n\nIt was late afternoon when Greer sat back. She realized that she was starting to make some mistakes; forgetting a few things that she really wanted in it. The pace they had been working was starting to show. She thought about what remained to be done. It was still a fair amount, but it should be easy to get done tomorrow. She wasn't sure that continuing to try and work today would actually net them much.\n\n\"I'm about out of gas, Shae. What about you?\" Greer looked over at Shae.\n\nShae continued working on the section that she was reviewing for a few moments before she realized that Greer had spoken. \"I can keep going if you need me to, Greer,\" she said with a smile. From her face, Greer thought that Shae would be willing to fall over before she gave up. She smiled back.\n\n\"No, we are doing great. I think we need a break and a little true down time. It isn't going to do us any good if we are brain dead,\" Greer replied. \"Let's clean up and get everything ready to finish off tomorrow. And then we can head back to the hotel and change into something a little nicer.\" They were both wearing sweats and t-shirts. No one else was around and it felt good to just be comfortable but they still wouldn't be caught dead going out like that.\n\nAs they drove back, they settled on going for Italian food. Greer heard about a really good one from one of the managers she had met here. They both agreed that it would be a pleasant place to eat and relax a little. Once they were at the hotel, they decided to meet back down in the lobby shortly before seven. That would give them more than enough time to be ready.\n\nAs soon as Greer was in her room she started a bath. A good soak would be the perfect way to get all the kinks out from working on a computer for so many hours that week. It didn't take too long to get full and Greer sighed deeply as she slid into it. It was hot and she relaxed in it, leaning back and closing her eyes. For once her brain was quiet and she wasn't troubled by either concerns about the report or moral quandaries. Greer didn't quite go to sleep but it was peaceful and when she roused herself, she felt extremely refreshed. Before getting out she carefully shaved her legs, not having had much of a chance to do it in the last week. She ran her fingers down her legs once she was done. She loved the feel of shaven legs. Unshaven legs weren't bad. Certainly she had more than a few girlfriends over the years for whom not shaving was a statement, but there was something about how smooth a freshly shaven leg felt against her own.\n\nWhen she finished with the bath, she pulled on a hotel robe and went to look through her clothes to see what she had to wear. She hadn't really planned on doing anything but she did bring one dress. It was a cobalt cascade wrap. It was just on the proper side of being able to wear it to work if she had run out of other things. But she had thrown it in to her bag, just in case she had some reason to wear it out. She went through her lingerie and found that she had indeed packed her black lace bra and the panties to go with it. The last thing was her shoes. There she was disappointed. She had only brought one pair of high heels, and they were only 2 inch heels and black. It was what she had and she wasn't going to worry too much about it.\n\nOnce she was dressed, Greer went back into the bathroom. She put on a little make up. She suspected that Shae was going to look stunning and she didn't want to look too drab by comparison. She got out her own perfume and put a little of that on as well. She went to the room safe and got out her jewelry bag. Almost everything in it was silver or at least silver colored. She fished out a set of lapis pieces; earrings, necklace and a bracelet. It went well with the dress and she had worn them together before. She picked up her brush and ran it through her hair. She still had nice hair that was very full and soft, even if there were a few more grey hairs in it that only a couple of years ago. She looked at the clock and realized that she needed to go. She quickly put everything away and grabbed her coat and purse.\n\nLooking around once she was in the lobby, Greer could see that she was the first one down. She went over to the window to look out. It was just dark and the faint echoes of the sunset were off in the west. The sky was clear and the weather had been nice that day. Greer sighed at missing out on a lovely day. Well it would be worth it when they got done.\n\nHearing the elevator ring, Greer turned around to see if it was Shae. It was. For a moment, Greer's breath caught in her throat. She had guessed right. Shae was stunning. She had on a red sheath dress with all the right matching accessories. Clearly she had saved room for a nice pair of shoes, unlike Greer. Her red high heels were three inches high. As she walked it was clear that while she didn't wear them that tall often, Shae knew how to walk in them. There was nothing awkward in her stride as she came near to Greer. She had also curled her hair and it hung in soft ringlets that framed her face. It only heightened the slightly exotic feel her face had. Her eyes were bright as she met Greer's gaze. Shae smiled a little smile. She didn't need to ask to know that Greer thought she looked great.\n\n\"Oh fine,\" Greer said throwing up her hands in mock exasperation. \"I'm going back up to the room and eating in ... with a bag over my head. No one will even notice I'm in the room once you walk in.\"\n\nBatting at Greer's arm, Shae frowned at her. \"You look lovely, Greer. You will do no such thing. Anyhow I could care less whether or not anyone else looks at me.\" There was a slight emphasis on \"anyone else\" that Greer missed.\n\nGreer was still a little breathless at how Shae looked. \"Well, I certainly will be looking at you,\" she said in a distracted tone. She blushed when she realized that she had said it out loud.\n\nShae let out soft laugh. \"Good!\" she said with a smile.\n\n\"Oh, I'm in trouble,\" Greer thought as they started to walk to the car. It wasn't a long drive but the whole way, Greer was quite aware of how Shae's dress rode up when she sat down. Standing it was just above her knees; seated it was more than half way up her thighs.\n\nTheir table was ready for them when they got there and they were seated in a booth by a window. Shae wanted to have a little wine with dinner, just as did Greer. And again, she asked Greer to pick something out. This time Greer just went with the house Chianti. It was a good restaurant and she found that was generally a satisfying choice. It also meant that they got served without any delay.\n\n\"What shall we drink to?\" asked Greer.\n\n\"How about being here with the loveliest, nicest person I know?\" said Shae.\n\nGreer laughed and said \"Okay, to being here with the loveliest and the nicest person that I know. That is definitely true about you, Shae!\" She sipped at her drink and grinned at Shae.\n\n\"I meant you, and you know it. To the loveliest person and the nicest person that I have ever known,\" Shae raised her glass to Greer and then took a deep sip of it.\n\nAs they talked, Greer found that there was a friendly sort of flirtation going on between them. Shae wasn't pushing it too far, and she often accompanied her words with her bell like laugh. It was hard for Greer not to fall into it as well. It had been a long time since she had done it and it felt good. Beyond that it was good to see Shae so full of life. It was something that Greer had worried about for her. Could she find a way to have fun again in life? As long as it stayed innocent, the flirtation did them both good.\n\nShae was very vivacious as she chatted. Greer enjoyed watching the way that her laughter would show in her eyes. Her dress was lower cut than Greer had ever seen Shae wear. When she would lean over, it showed off her cleavage. Despite Greer's best efforts, she couldn't stop her eyes from flicking down to look. One time Shae caught her and laughed.\n\n\"What?\" Greer tried to sound innocent.\n\n\"You're a breast woman, aren't you Greer?\" Shae continue to laugh.\n\nGreer felt her cheeks blush. When Shae kept looking at her expectantly, finally she nodded and said, \"Yes.\"\n\nShae smiled and leaned forward, looking up at Greer. \"And these, how do they rate?\" Shae said, doing a much better job at sounding innocent than Greer did.",
        "\"You are terrible, Shae. They get the highest marks, as you well know since I seem to have a hard time not glancing at them,\" Greer said shaking her head and rolling her eyes.\n\n\"I don't normally like them to attract notice, but I don't mind if it's you,\" Shae said in a more serious tone. But she couldn't hold it when she added, \"Actually I like it when it's you!\"\n\nAs the waiter was approaching with their meals, Shae let Greer off the hook. The restaurant's reputation was well deserved and they both enjoyed their meal. Shae asked to try a little of Greer's angel hair with shrimp and then insisted on Greer feeding it to her on Greer's fork. That gave Shae another great excuse to lean forward. Greer couldn't help but laugh.\n\nThey had finished their dinner and were looking over the dessert menu when Shae looked across the restaurant. She stopped in the middle of what she was saying and just stared. Greer looked up and saw how pale Shae's face had become. She looked over but couldn't figure out what had disturbed Shae.\n\n\"Shae, what is it?\" she asked as she reached over to touch Shae's arm.\n\nShae started when Greer touched her. She ripped her attention away from where she had been staring. She was trembling, strongly enough that Greer could see it as well as feel it where her fingers still touched Shae's arm. \"Over there, against the wall, it's my sister and brother-in-law. I guess ex-sister and brother-in-law. She is Bob's sister. She never liked me, and after, well you can guess how she was after.\"\n\nLooking over again, Greer only saw one younger couple. That must be them. They looked like the country bumpkins Greer would have guessed. But they were engaged in their own conversation and weren't paying any attention to the rest of the room. It wasn't likely to end up in a scene as far as Greer could tell. Glancing at Shae, Greer revised her impression. It wasn't likely to end up in a scene unless Shae came unglued. Greer slid her hand down Shae's arm and took her hand. Shae looked at her and linked her fingers tightly in Greer's.\n\n\"Thank you,\" Shae whispered.\n\n\"Of course, Shae. You know that I would do anything for you. This is easy,\" Greer's voice was very serious.\n\nGreer looked around and found their waiter and motioned for him to come over. She smiled at him. \"I think both of us have had too much of your wonderful food to eat any dessert. Why don't I just give you my card now?\" Greer's voice was calm and conveyed none of the anxiety that was going through them. He took her card and promised to return in just a minute. She looked back at Shae. \"Shae, Sweetie, we will be gone in just a few minutes. It will be okay. I'm here with you, alright?\"\n\n\"You're my knight in shining armor, Greer. I'll be okay with you here,\" Shae said. She tightened her fingers just a little more.\n\nEven when the waiter returned, Shae didn't let go. Thankfully she was holding Greer's left hand and Greer could still sign the credit card receipt.\n\n\"Shae, wait her for just a moment. Let me go get our coats. I'll be right back, but I think it will be better that way,\" Greer said. With as stunning as Shae looked, Greer was a little worried that if she walked to the coat rack she might draw the attention that so far hadn't come. Shae looked over at her and understood. She nodded and let go. She turned to look out the window while Greer was gone. When she got back, Greer carefully positioned herself so that she mostly blocked the view of Shae's former in-laws. As they left, she did the same thing on the way out.\n\nWhen they were outside, Shae reached over and took Greer's hand and held it tight. Greer squeezed it in reassurance. They walked in silence to the car. Greer opened the door for Shae and held her hand as Shae stepped in. Greer had a much better view of Shae's legs getting in this time, but she didn't even notice. She was just looking at Shae's frozen face.\n\nShe hurried around the car and got in next to Shae. Greer offered her hand again and Shae immediately took it. Her breath was rapid and she closed her eyes.\n\n\"It's okay. We're gone. And Shae, no one is going to treat you like that again. You don't live in this backward hick area any more. You live across the country and no one, I mean no one, is ever going to be allowed to treat you like that again. Do you understand, Sweetie?' Greer's voice was like iron.\n\nShae nodded. She had both hands in Greer's one now. But her breath was starting to slow back to a normal pace. Finally she was calm enough to talk. \"It was just a bad moment, Greer. I haven't had one in a while. Usually I don't even know what triggers them. Tonight was a little more obvious. Thank you for being with me.\" Shae brought their hands up to her mouth and kissed Greer hand.\n\n\"I'm glad I was here too, Shae,\" Greer smiled at her. \"Do you want to go back to the hotel and crash? I understand if you do.\"\n\n\"No, I don't think I could sleep for a while. Did you have another idea?\" Shae replied.\n\n\"I had a couple but the one that I think would be best would be to go to this club that I read about that plays jazz and swing music. It is supposed to be pretty mellow which might be nice right now.\" Greer hesitated and then said, \"Plus I think it is probably the least likely place that they would go after their dinner.\" She didn't need to say who they were.\n\nShae smiled. She liked both kinds of music. Not surprisingly, she didn't have much interest in going to popular clubs. \"That sounds great, Greer.\" Even though she was feeling better, she didn't release her grip on Greer's hand. And Greer didn't try to pull away; if it was making Shae feel better, it was fine.\n\nWhen they got to the club, they found that there was not much of a wait to be seated. They packed in as many seats as they could, and the two of them were seated in a small booth that pressed them up against each other. Greer could feel Shae's body against her. It felt better than Greer wanted to admit, especially because Shae was somewhat leaning against her. They sat and listened to the music. The mood from earlier was gone. Neither one of them felt lighthearted enough to return to the playful banter. But while the mood felt more serious, neither was it depressed. Every once in a while, they would comment about a song they liked or how a particular musician played. To avoid disturbing anyone, usually it was a whisper into the other's ear. Slowly an intimate feeling grew.\n\nPart of what Greer liked was watching couples get up to dance to the swing music. Some of them were clearly with the loves of their lives; the joy of being together shone through. Greer's head began to sway back and forth in time with the music.\n\nWhen Shae spoke, it was with a very shy and tentative voice. \"It's been a long time since I danced, and even that wasn't a great memory.\" Shae tried to push the thoughts of her wedding day out of her mind. \"Would you dance with me, Greer?\"\n\nGreer looked at Shae. Her sky blue eyes were wide and she looked a little bit scared. She looked so vulnerable to Greer that she couldn't say no. Instead Greer nodded and the two of them walked out onto the dance floor. Greer was relieved to see that they weren't the only same sex couple on the dance floor. There were a couple of others, one male and one female. The last thing she wanted was to piss off some homophobe and cause a scene.\n\nAs Greer held her arms out away from her body, Shae moved into them. They began to dance together. It was clear from how well Shae danced that at some point in her life she had taken lessons. Greer appreciated how Shae's natural grace came to life. For her part, Greer was good but not great. A lifetime of experience rather than lessons was how she had learned.\n\nWhen they started, Greer held Shae in a formal, almost rigid way. She kept her arms out so that Shae wasn't too close. As they danced, Shae looked like she wanted Greer to bring her closer, but Greer ignored it. Greer was still nervous, not wanting to take advantage of Shae when she was this vulnerable.\n\nFinally Shae made the move herself. Sliding her arms up around Greer's neck, Shae stepped forward. In order to keep the dance going, Greer had to readjust her hands. They went to Shae's waist. As they continued to dance, Greer felt very uncomfortable. She no longer had the rhythm of the dance in her head, guiding her movements. She was too aware of the feeling of Shae being close. Shae's body felt soft and inviting. Like the other night, Shae's scent seemed everywhere. It was becoming hard for Greer to even remember why she was resisting.\n\nIf Shae felt uncomfortable, she didn't show it. As Greer lost the rhythm, Shae picked it up and helped guide their dance. Her legs brushed against Greer's as they moved around the room. Slowly she started to feel Greer's stiffness disappearing. As the song started to reach its end, Greer gave in and just enjoyed the dance. Shae willingly gave back the lead to Greer and just flowed with wherever Greer took them.\n\nThe song ended and Greer started to disengage but Shae kept her arms where they were. Her hands were hooked together and unwilling to let Greer go. Her eyes were raised and she gazed into Greer's. It was clear that she wanted to have another dance. After a moment's hesitation, Greer put her hands back around Shae. This time one hand was more on Shae's back and one a little lower, just where Shae's round ass began. As the music began again, it was softer and slower. They started to move to it but this time was different. Shae again moved closer and their bodies were moving against each other.\n\nGreer didn't resist this time. When Shae put her head on Greer's shoulder, she cocked head so that it rested against Shae's. Their hips swayed back and forth together. For that dance, Greer ignored the rest of the world and her worries. She just enjoyed the moment. She felt Shae's fingers softly rubbing her neck and running through the hair at the nape. Greer felt a little shiver and pressed her own hands on Shae's back so that Shae was pulled closer against her. Their bodies felt molded to one another. It felt so right that when that song ended and the next began, neither one of them stopped. The pace of that dance was a little faster but it didn't matter to either of them. They continued to dance slowly against each other. They no longer moved around the floor but instead stayed close to one wall, away from others.\n\nWhen the next song ended, the band announced that they were taking a break. Hearing the band leader speak seemed to wake Greer up. She looked back down at Shae and again remembered the promise to herself not to take advantage of Shae, no matter how much she might want to. Shae felt the dance end but she was still in the moment. She turned her face to Greer and looked up at her. Then Shae closed her eyes, she raised her pursed lips. The offered kiss was clear. Greer was torn for a moment. Shae was so desirable but Greer's conscience was too strong. With a long sad sigh, Greer moved back and turned away from the kiss.\n\nThe abrupt break of their connection made Shae open her eyes. As Greer moved away, her eyes grew hurt and confused. A feeling of rejection and being unworthy swept over her. Her breath started to quicken again. It was so hard for her to open up, and Greer didn't want her.\n\nGreer kept ahold of Shae's hand and pulled on it to lead her back to their table. Shae followed without any energy. Once they were seated, Greer took a sip of water to collect her thoughts. \"Thank you, Shae,\" Greer said as she faced Shae. \"You don't know how hard it is for me not to kiss you, but it wouldn't be fair to you. I can't take advantage of you when you are so vulnerable. I care for you too much to do that to our friendship. It just isn't right. I know you think you want it right now, but I think that is just needing someone. I know I could be that someone, but you deserve better.\"\n\nShae's voice was very soft but at the same time there was a strong will in it. \"What are you talking about Greer? There is no one better than you! I've known you for almost two years now. You've never treated me with anything but respect and caring. You don't know how rare that has been for me.\"\n\n\"That's what I'm talking about, Shae. You have had a difficult life and since your parents died, no one has really treated you like you deserve. So when I do that, it feels like more than it is for you. I can't use that feeling. It would be wrong. You're not even gay, Shae,\" Greer replied. How much she was conflicted was clear in her voice but Greer was strong willed and determined.\n\nReaching out, Shae took Greer's hand again. \"How do you know, Greer? In all our time together, have we ever talked about my sexuality?\" Shae laughed in a bitter little manner until she cut it off in almost a sob. \"God, I haven't talked to anyone about it since my ... my Dad died.\" She raised her chin, and looked up to blink away an unshed tear. \"I talked to him about it though; about how confused I was and uncertain. I was fifteen and I wasn't sure what I wanted or who I liked. And he listened and that helped me at least not to be afraid of what the answers were. And then he died. And I wasn't ready.\" She squeezed Greer's hand. \"I wasn't ready for either of them to leave me alone but I also wasn't ready to have no one to talk to about it.\"\n\nGreer could see the tears starting to come and her heart felt like it was breaking. She reached her arm around Shae and pulled her closer. \"Come here, Sweetie,\" she said softly. Shae moved into the circle of Greer's arm and laid her head against Greer's shoulder. Their hands linked fingers.\n\n\"We never talked about how you figured things out, Greer. We've never talked about things like this. But while I am sure that you had difficulties, I'm not sure you could have gone through what I did. While I was still reeling from my parents and leaving everyone I knew, I was also trying to figure out who I was. And they brought me here.\" The bitterness in her voice was powerful.\n\n\"No one to talk to, except for bigoted small minded religious fanatics. If you had a problem, you were supposed to talk to our pastor. I could never talk to him about my feelings. And then if that wasn't clear enough, then there was Penny,\" Shae paused and looked at Greer. \"She was another girl, a little older than me. And she at least was honest enough to be who she was. But they made her pay for it.\" She told Greer how Penny had been treated and attacked.\n\n\"What I learned was to hide any confusion and just suppress it. I didn't want to go through what Penny did. I already lost too much. I was so alone, Greer. I don't think my aunt wanted me to be alone, but I was too different. Eventually it was easier to be like them and at least not be alone.\" Shae's voice was broken by soft sobs as she spoke. Greer hugged her tight as she felt her own eyes start to fill with tears.\n\nShae turned so that she could look at Greer before she continued. \"So Greer, don't tell me I'm not gay. I don't know. I never had a chance to work that out. But I know that I've always responded to women. When I was married, I went through the motions but it didn't feel like me.\"\n\n\"Sweetie, I'm sorry. I made an assumption without grounds. I should have known better.\" Greer's sincerity came through and Shae nodded.\n\n\"So you aren't seducing some confirmed straight woman. Greer, you aren't seducing me at all. I feel like I have been hitting you over the head. I mean, really how much harder could I have tried?\" Shae said with a hint of a smile.\n\n\"Oh Shae Sweetie, you don't know how hard you have been making it for me. Okay, most of Thursday I confess to being clueless,\" Greer said and then laughed. \"But once I figured out you were flirting with me, it was hard not to just succumb. But to start with, it isn't right. I may not be your boss but I'm senior to you at the firm. It's not right for me to ...\"\n\nShae cut her off. \"It's not right? According to what, Greer? I read the employee manual. I've read that particular section a number of times.\" Shae felt her cheeks blush and hoped that it wasn't noticeable in the dim light. Still she plunged on. \"As long as I worked directly for you, it was against the rules. But I haven't worked for you for months now, and this is the first time we have worked together since I switched jobs. There is nothing against it. And I can count at least two other partners who had relationships with someone in the firm. So don't give me, that it isn't allowed.\n\n\"And I've waited, Greer. It didn't take me long to fall for you, but I knew you would never while I worked for you,\" Shae said in her quiet little voice. \"So I didn't let you know. Even when you were going out with someone like Sharon, I accepted how things were. At least I had our friendship. It was something.\"\n\nGreer felt stunned. She had never guessed that Shae felt that way. Shae had always been the perfect employee, never stepping beyond the accepted boundaries. Despite the revelation, Greer still didn't give up her resistance, though it was beginning to weaken. \"Sweetie, that is so flattering. But how can it work between us? I'm more than twice your age. It just isn't right. You should be with someone who is your own age, not an old woman.\"\n\n\"Greer, you're not an old woman,\" Shae put her hand up to stop Greer from saying anything more. \"I know you are older than me. But you are still the loveliest woman I know.\" Shae paused and moistened her lips. She was exposing herself more than she had ever done. \"Do you know how special you are to me? For the last ten years, I haven't been able to let anyone get close to me. You are the only one. And a large part of it is how honorable you are. You have resisted these last two years, treated me as if I was just another person despite your attraction. You honored me too much to take advantage when if you had tried, you could have. You are an amazing special woman! But the more you showed your honorable side, the more I knew it was you.\" Shae caressed Greer's cheek softly as she spoke.\n\nIt was becoming harder for Greer to remember why she was resisting, but still she tried. \"Oh Sweetie, thank you but think about it. I'm twenty-five years older than you. When you are my age, I'm going to be seventy-five. Then I will be an old woman and you will still be young and beautiful. What type of future is that?\"\n\n\"Greer, I am still figuring things out. I'm not worrying about twenty-five years from now. That seems like a lifetime, which it is for me. I can't foresee what the future will bring but I know that I can be happy with you today, tomorrow and for the tomorrows that I can foresee,\" Shae leaned forward and brushed her lips against Greer's. Then she smiled a more mischievous smile than Greer had seen before. \"And if after twenty-five wonderful years I was to lose you, I guess I would have to do what you've done and win the heart of a twenty-five year old!\"\n\nEven though Greer blushed to hear the last, she could not resist Shae anymore. \"Alright Sweetie, we can live for today.\" She brushed her own lips against Shae's. \"And tomorrow.\" She pressed her lips harder against Shae. \"And the tomorrows that we can see.\" And then they shared their first real kiss. Shae's lips parted slightly and Greer's own lips caressed and overlapped them as both their eyes closed. Her hand reached behind Shae's head and gently held her there. It was soft and drew out for seconds, but they held back. Neither one wanted to really show their passion for each other in public. As they broke the kiss, their eyes opened and stared at each other.\n\nThen Greer looked around a little nervously. Their display didn't seem to have been noticed. \"Umm, I'll get the check,\" she said.\n\nShae giggled. \"Yes, please do that!\"\n\nIt didn't take long for Greer to attract the attention of their waitress and take care of their tab. As they left, Shae was once again holding Greer's hand but this time it felt completely different. For Greer especially when they got there, she felt like she was just comforting Shae from the unexpected encounter at the restaurant. Now there was a connection between the two of them that felt like electricity. Even the way they walked was different. Before there had been space; now Greer could feel Shae's body brushing up against her with each step. In the dim light of the club and with everyone's attention on the music, only the hostess noticed and she didn't care.",
        "As they stepped out of the club and the door closed, it became very quiet with the music lingering softly in the background. Greer and Shae slowly walked back to her car. The night sky was still clear and the stars had come out despite the light from the city. At the car, Shae leaned with her back against the passenger door with Greer close. There was no one around. In the relative privacy of the moment, Greer moved close to Shae. Putting her arms around Shae, Greer kissed her again. This time they allowed more passion. It had been a long time coming and both now freely admitted how much they wanted each other. All it took was one little flick of Greer's tongue for Shae to open her mouth. She felt it quickly filled as Greer's tongue plunged in. The two tongues swirled against each other as they both experienced the thrill of their first deep kiss.\n\nGreer could have kept on kissing Shae like that forever but the lights of a car approaching the club interrupted them. She pulled back and said, \"Let's go to the hotel, Sweetie.\" Shae nodded, obviously eager to get to where they had privacy. Greer held the door open for Shae. This time she didn't hide her admiration of Shae's legs as she got into the car. Leaning in, Greer gave her a light kiss before closing the door and getting in the driver's side.\n\nThe streets were relatively busy so Greer had to keep her attention on driving. Shae held her hand and leaned over to rest her body against Greer's. For a few moments they were quiet then Shae spoke. Her voice was a little shy again. \"When you called me Sweetie for the first time, you don't know how my heart jumped. All this time, you always said Shae. And then tonight you seemed to say it without knowing it, like you were saying what you really thought. At a moment that was so horrible, it threw me a lifeline.\" She raised Greer's hand to her lips and kissed it. Unlike the time earlier that night, this time it was a soft sensual kiss. Shae's lips wandered over the back of Greer's hand. She placed a little kiss on each knuckle. Greer made a little moan.\n\n\"Sweetie, you are very good at distracting me! I love it but I can't have you doing that while we drive!\" Greer pleaded.\n\nShae looked over at Greer with an impish smile and then lowered her hand. She snuggled back up against Greer and rested her head on Greer's shoulder. Her lips were close to Greer's ear. \"I hope that this is okay, Greer,\" she whispered.\n\nGreer laughed in response. \"As long as you just don't do any more, I can focus. But I don't think you know how hard it can be to drive when the sexiest, sweetest woman I know is that close.\"\n\nSmiling more broadly, Shae took mercy on Greer and just cuddled her. Shae sighed. She had dreamed of a moment like this, sometimes despairing that it would ever happen. \"It took me a while to pick up that you are a lesbian. I lived so long in such an isolated place and tried not to think about things like that. And for a long time, I couldn't even get past the pain of Bob and the horror of what happened. And then you said something about the Gay Pride parade and the way you said it, I realized that you were gay, not just a supporter. And that got me thinking about myself again.\" She turned and kissed Greer on the shoulder.\n\n\"It wasn't about you, Greer. I didn't get a crush. Somehow knowing about you just made it okay for me to start figuring myself out. But as I did that, then I started to notice you and how much more you were than just my boss. I am just glad that finally I get to show you how much more,\" Shae tightened her grip on Greer's arm.\n\nAfter Greer had parked at the hotel, Shae looked over and said, \"I know how people talk, Greer. If you want, we can walk through the lobby without holding hands.\"\n\n\"Sweetie, why would I be embarrassed about this? I've been out for a long time and I am fine with who I am. And anyone would be proud to be with a woman as special as you. But if you're not ready, I understand that too,\" Greer replied.\n\n\"I don't care about anyone else but you,\" Shae said. And then they got out and walked in together.\n\nOnce they were back at the hotel, they didn't waste any time heading upstairs. They passed Shae's room and went to Greer's. As the door shut, Greer put her arms around Shae and backed her into the wall. Shae's own arms went up around Greer's neck like when they were dancing. The kiss now unleashed the full degree of their passion for each other. Shae's mouth opened wide and her own tongue was exploring Greer's mouth as Greer's did the same. Shae could feel the strength in Greer's body as Greer pressed into her. Shae knew her nipples were hard and poking out through her clothes so that Greer could tell how excited she was. When Greer's lips left her own so that Greer could kiss down Shae's neck, she didn't complain as that felt so exciting. It seemed like every spot Greer touched discovered a new erogenous zone. Her own hand reached up behind Greer's head and pulled her closer with a growing urgency. As Greer's lips touched Shae's collar bone, Shae let out a long moan.\n\nGreer smiled as she heard the sound. This was a long time coming. Beyond her own long standing and never acted upon attraction, Shae's flirting over the last few days had its effect on Greer. Her desire was now deep but still she had enough control to want to keep building Shae's need. When they started to make love, Greer was determined that Shae's desire would be at a peak. She wanted it to be everything that Shae had imagined. It had been years now since Shae had sex, and Greer thought that she probably had never made love.\n\nSlowly kissing her way back up Shae's neck, Greer took a different path. Her lips made a trail up Shae's cheek and then to her ear. Bearing her teeth, Greer nibbled on Shae's earlobe. It was light and gentle, but it made Shae gasp and arch her back. Greer could feel Shae's hips starting to move, pressing against her. She smiled, thinking that Shae probably wasn't even aware of it. As she released it, Greer flicked her tongue very lightly into Shae's ear, just once. Her hand was tenderly stroking Shae's neck and face. It was the lightest of caresses.\n\n\"Turn around,\" breathed Greer right into Shae's ear as her hand slid down to Shae's shoulder. She applied just a little pressure to emphasize her words. Shae obeyed even though it meant that she had to take her own hands away from Greer.\n\nPressing Shae into the wall with her hips, Greer lifted up Shae's soft blonde hair and kissed the back of her neck. The little hairs there stood up as Greer's lips moved from one spot to another. Greer felt a shiver run through Shae's body. She touched the top of Shae's dress with her fingers, running them along the neckline. Back and forth they went in a soft caress until they stopped at the hook. With a quick flick, it was undone. Where Shae's dress parted slightly, Greer filled the void with a kiss to Shae's spine. As she slowly unzipped the dress, Greer followed with kisses. They were all soft but sometimes they were the lightest of butterfly kisses. Other times Greer sucked slightly at the conclusion. Shae particularly liked it when Greer's tongue flicked against her.\n\nThe zipper went down all the way to Shae's ass, just barely revealing the beginnings of it. Greer was fully bent over when she finished unzipping it, still trailing her kisses all along Shae's spine. Her last kiss before standing up was right on the top of the valley between Shae's ass cheeks. The touch of her lips there forced a little \"Oh my God\" out of Shae. That close to Shae's pussy, it was impossible for Greer not to smell how wet she was. Greer smiled but she was in no hurry.\n\nOn her way up, Greer explored Shae's back. Her lips traveled from left to right. As she passed over the scar from the whipping, Greer didn't hesitate. She kissed her whole way along it. Greer spoke when she finished. \"No one will ever mark your body again, Shae. And you are no less lovely for the way you've been treated. I don't want you to ever feel like you have to hide the marks from me. They are just part of the whole wonderful Shae package.\"\n\nNo matter how good it all felt, Shae couldn't help but turn around. She reached down and pulled Greer up into her arms. As they kissed, their bodies fitted against each other perfectly. It was a deep kiss that went on and on. Their arms wrapped around each other, holding on tight. As the kiss ended, Shae looked deep into Greer's eyes. \"Thank you, Love,\" she said.\n\nA little bit of Shae was scared when the final word popped out, but Greer just smiled and said, \"You're welcome, Sweetie.\" Greer didn't know if what they had was love, but she wasn't frightened by the possibility. That was a question that would be answered over the next days, weeks and months. Tonight was about discovering each other.\n\nAs she kissed Shae again, Greer reached up and started to pull Shae's dress down. That forced Shae to let go of her grip around Greer's back as the sleeves pulled her arms down. But Shae quickly just slipped out first one arm and then the other, allowing them to go back to hugging Greer tight. Working it past Shae's hips, Greer pushed it down until the dress just slipped the rest of the way to the ground.\n\nWhile Greer loved the embrace and the kisses, she was eager to see Shae's body. The time a few nights ago, she avoided really looking at it because of her guilt. Now she wanted to take it in. \"Show yourself to me, Sweetie,\" she asked. Greer waited for a moment and then spoke again. \"I want to see your sexy body, Shae.\"\n\nHer mind clouded with arousal, it took a few moments for Shae to understand what Greer wanted. When she did, she blushed in her pretty way. It was so strange to feel Greer's desire out in the open. At the same time, the ability to excite Greer by exposing herself was a long held secret fantasy come true. She nodded and let go of Greer.\n\nStepping to the side, Shae walked towards the main part of the room. She was thankful that housekeep had drawn the blinds earlier. She walked with a sexy sway to her hips that she didn't even know she had. But Greer certainly was aware of it. Shae's body was in perfect proportions, long legs, a wonderfully rounded ass, beautiful breasts and a long fit torso. Greer's breath caught in her throat at how stunning she was. She could see the marks Bob had left on Shae and thought how they didn't mar her beauty but she was still aware of them. Somewhere deep in her a little fire of anger burned that this wonderful sweet woman had been treated this way. But Greer wasn't conscious of that right then. All she could see was the sexiest woman that she had seen. And she was again amazed by the idea that Shae wanted her.\n\nWhen Shae slowly turned around in the center of the room, that desire was shown clearly on her face. More than desire, there was lust in her eyes; lust for Greer. If Greer had any doubts on that point, they were wiped away. Shae's panties were dark from how wet she was. Shae reached behind herself and undid her bra. She tossed it to the side and brought her hands up to cup her breasts. She squeezed them together and then lifted them, as if offering them to Greer. Bending her head down, she stuck out her tongue and flicked the very top of them. Letting them go, Shae slowly turned around to face away from Greer. In a very smooth motion, she bent over and pushed her ass back at Greer. Shae was so flexible that it was easy for her to almost bend in half and look back at Greer form between her legs. Her wet panties stretched tight across her firm round ass.\n\n\"Does my body meet your approval, Greer?\" Shae asked in a husky voice. Her hair was hanging down and almost brushing the ground.\n\nFor a second, Greer couldn't talk. Then she cleared her throat and said, \"My God, Shae, you are amazing.\"\n\nStanding back up, Shae walked back to Greer. She still had on her heels so her legs looked longer than usual. She walked around Greer, hands brushing Greer's body. \"You're still dressed, Love. Can I help with that?\"\n\nGreer nodded and Shae reached down to undo the hooks that held her wrap dress on. Then she undid the buckle on Greer's belt. That freed up Greer's dress so that it started to hang loose. Moving around in front, Shae took it and peeled it off Greer. After she slipped it off, Shae walked over and laid it over a chair. She turned and took her own turn in admiring Greer. Her athletic build went perfectly with her height. Just like Greer, she wasn't blind. Shae could see how growing older had changed Greer but in Shae's mind it hadn't taken away from her beauty. She smiled at Greer and then licked her lips. Greer's black panties didn't show her wetness as much as Shae's did, but Shae could still tell.\n\n\"You are gorgeous, Greer. Your body is exactly like I fantasized it would be,\" Shae said as she walked back over to Greer. They kissed again. As it started to deepen, Shae pulled back and reached behind Greer. \"I want to feel your breasts against mine, Greer,\" Shae explained. She focused for a second as she grabbed Greer's bra and pulled it together to release it. Once that was gone, Shae put her arms around Greer's neck and they kissed again. This time she let the kiss deepen. It was slow and passionate. Shae loved the feeling of Greer's tongue sliding along hers, going in and out of her mouth.\n\nGreer's hands were on Shae's ass. At first they were just holding her there. As she felt the excitement growing, Greer began to caress Shae there. Her fingers were moving around in small circles. Finally she pushed her fingers under Shae's panties so that Greer could touch the soft skin. When she did that, Shae moaned into the kiss. Her hips were now pressing hard against Greer's as Shae was getting hornier and hornier.\n\n\"Let's get on the bed, Sweetie,\" Greer said as she came up for air. She was just as eager as Shae. She followed Shae over to the bed and when Shae lay down, Greer straddled her. Bending over Greer kissed Shae again. Her hips were just above Shae's and as Shae lifted up, Greer pressed down. The kiss didn't last long this time. Greer wanted more. She again kissed down Shae's neck. As before, she alternated between soft light kisses and ones that tugged on the skin. But this time she kept going past the collar bone.\n\nSliding her body down, Greer started to pay attention to Shae's breasts. At first it was just the light kisses along the edges of her breasts. Slowly she moved in a circle, closing on the nipple. Shae was now gasping with almost every kiss. When Greer flicked her tongue against Shae's nipple, it sent a little shudder down Shae's body. It was almost a mini orgasm, like a shock of electricity.\n\n\"Yes,\" Shae hissed as she tangled her fingers in Greer's hair. She wanted more. She needed more after waiting so long. \"Please, Greer!\"\n\nHearing Shae's plea, Greer smiled and then she surrounded Shae's nipple with her lips and sucked it in to her mouth. She swirled her tongue around the hard little nub. She felt Shae's body arch up against her. She loved how much Shae responded to her touch. It had been a long time since she was this excited. Greer moved over to the other nipple and did the same thing. Moving back again, this time she brushed her teeth along Shae's nipple. She let out a long groan. Greer did it again and got the same reaction out of Shae. Gently she closed her teeth and pulled on Shae's nipple.\n\n\"Oh, oh!\" Shae cried out. She felt the same jolts of electricity shooting through her body. Lifting her hips, she started to grind herself against Greer. Her excitement built. Every time that Greer flicked her nipple as it was held, she came closer. Her thrusts upward became more urgent. Greer could feel her need. She moved her knee back and planted it between Shae's legs and leaned forward so that it pressed down on her. Shae squealed as she pressed her pussy against Greer's leg. It was quickly wet from her pussy which just made it easier for Shae to slide her pussy up and down. Greer could feel the growing urgency in Shae. It wasn't going to take much more before Shae would cum. Moving her leg in a slow circular motion, Greer pressed it hard against Shae. When she heard Shae make a low guttural noise, she knew it was starting. She released Shae's nipple from her mouth and stretched her body high so that she could kiss Shae. She was also careful not to reduce any of the pressure that was driving Shae crazy.\n\nAs Greer kissed her, Shae felt her whole body exploding. She wrapped her arms around Greer and embraced her hard as she frantically thrusted her pussy against Greer's slippery leg. She returned the kiss with a hungry passion, tongue probing deep into Greer's mouth. The spasms were now wracking her body as she felt herself come completely unleashed. She had never felt like this. Even though she need more air than she could get through her nose, she continued to French kiss Greer until she almost passed out from the need for air. It was only as the orgasm started to fade that she ended the kiss, but not the embrace. Now she hugged Greer even tighter, resting her chin on Greer's shoulder. Her ragged breath was loud in Greer's ear.\n\n\"Good, Sweetie?\" Greer asked.\n\nBefore answering, Shae kissed her again, this time lightly with only a few flicks of her tongue. \"So very good, Love! Thank you,\" Shae sighed.\n\nDespite her inherent caution Greer couldn't help saying, \"It's always best when you love the person, Sweetie.\"\n\nShae felt her eyes tearing up. \"I was too scared to say that, Greer. Is it so obvious?\"\n\n\"You don't have to be scared anymore. And yes, once my eyes were open it wasn't hard to figure out,\" Greer said with a smile that lit up her face. \"And I will take a page from your book and just think about today and tomorrow.\" They kissed again. Before they went to much farther, Greer reached down and pulled off her own panties. She dropped them onto the ground. Lifting her body up, she grabbed Shae's panties and peeled those down as well. It was a little harder as they were absolutely soaking wet. When they were finally off, she dropped them on top of her own to make a little wet pile.\n\nGreer lowered her body back down and she reached out both hands and took Shae's hands with their palms touching. Their bodies molded together. It was wonderful, feeling their bodies together with one on top of the other. As their fingers tightened, Greer began to slowly press her hips down. As she felt the pressure, Shae's eyes fluttered open. She saw Greer's lovely grey eyes staring back at her. Shae tilted her pelvis and lifted her mound up to meet Greer's.\n\nWithout letting the kiss end, Greer arched her back so that she could feel Shae's mound against hers. As her pussy touched Shae's, Greer made a deep sound like a growl. Her hips started to circle and as she hoped Shae followed her example. Soon they were rubbing against each other in a way that felt incredible. Finally Greer ended the kiss so that she could arch higher. The friction between their pussies intensified. Her hands were still in Shae's, pressing them into the bed. Greer moved her legs just a little and felt her clit slide from between her pussy lips so that it was now pressing direct against Shae. She loved how it felt. Her hips started rocking back and forth, lifting and then falling against Shae. The motion was getting harder and harder.\n\nShae was rocking her hips back and forth, trying to give Greer what she needed. This time her pleasure was coming in the giving, rather than the receiving. She could feel Greer's little clit pressing against her and tried to focus where she was pressing to maximize Greer's excitement. Shae's legs opened a little more so that Greer had more access. Shae smiled as Greer gasped in a few breaths as her clit slipped between Shae's pussy lips. It felt good to her but obviously it felt better to Greer. With her face contorting, Greer began to thrust her own pussy against Shae's.",
        "\"Oh fuck, Shae,\" Greer moaned. Her hips were going faster as her excitement grew. Looking down on Shae, she was amazed once again at how stunning Shae was; beautiful and sexy. Right now she had a very erotic look on her face as she lifted her own hips to meet each of Greer's thrusts. Greer could tell that the grinding of their pussies was beginning to excite Shae as well. Her head rocked back and forth and she was moaning for Greer to fuck her. The more she talked dirty, the harder Greer wanted to fuck her. She ground her hips against Shae's as she bent backwards even further.\n\n\"Oh God, Greer. Right there. It feels so fucking good. Fuck me, Greer. Fuck me hard,\" Shae said as her voice grew louder. Shae could tell that Greer was close. There was a trembling in her body that hadn't been there before. Greer's fingers were curling tighter so that her nails were digging in a little to the backs of Shae's hands. Shae thrust upward with urgency, wanting to come with Greer. Her eyes were open, not wanting to miss any opportunity to see Greer. She was everything that Shae could have wanted.\n\nSuddenly Shae felt her clitty rub right against Greer's a couple of times as they ground against each other. It was enough for Greer. She started a long scream. The sound combined with the feeling of Greer's body shuddering was enough to bring Shae off with her. It was slightly less intense than the last one so that Shae stayed aware of Greer as she felt her body let go. Shae watch Greer as her body shuddered with each wave of her orgasm. Shae's pussy felt her own spasms matching Greer's as they continued to grind their wet pussies together even as they came.\n\nShae's orgasm faded before Greer's but Shae kept in time with Greer. Softly whispering Shae told Greer, \"That's it, Love. Let go! Just keep fucking me! I love how we feel together.\" Greer kept going but with less intensity. Rather than feeling frantic, it felt more like a caress. Shae blushed when she thought, \"It feels like lovers!\" It was a happy feeling but a little scary too. She had broken down the barriers behind which she had hid for so long.\n\nSlowly Greer became aware of the moment again and she looked at Shae. Lowering herself down, she smiled tenderly at her. Greer stroked Shae's face. \"I needed that, my beautiful little tease! You had me on edge for too long! Shae tried to put on her most innocent face, blinking her eyes slowly.\n\n\"Nope, not going to work Sweetie! You are way too sexy right now to pull off innocent!\" Greer laughed even though Shae was actually doing a good job. It made her even sexier to Greer. Drawing Shae's head to her, Greer gave her a hard kiss. Her senses were full of Shae; touch, scent, and taste. Despite her caution, Greer knew that she was falling hard. At least she wasn't alone, she thought.\n\nThe two of them lay there slowly exploring each other while kissing. Greer ran her fingers over Shae's soft skin. Every once in a while, Greer touched a blemish where Bob had hurt Shae. Each time it sparked a little protective flame to spark up again and she would hug Shae tight.\n\nGreer's attention to those spots didn't bother Shae, especially because of the reaction. In fact, Shae felt safer than she could remember. She basked in the protective cloak that Greer cast over her. For her part, she enjoyed seeing where she could provoke a reaction. Her hand drifted down Greer's back and she found that when she ran all four fingers across the small of the back, Greer would make little gasps even when kissing her. Shae was still slightly shy about initiating anything but she pushed herself. The farther down that her fingers went, the longer the gasps lasted. \n\nWhen her fingers touched the rounded firm globes of Greer's ass, the gasps became little mews of passion. The kisses grew more passionate. Shae couldn't reach down any further so she continued to caress Greer's ass until her fingers ran along the crack. That caused more than a gasp; a shiver went visibly down Greer's spine. Shae loved that she could evoke such a response from Greer. Her hand moved down further between Greer's legs. They opened to give her more access. She felt the wet mess left from Greer's cum and ran her fingers along the edge of it. It didn't take long for them to become coated.\n\nGiving Greer one last kiss, Shae twisted her body so that she wasn't stretching to reach. Greer sighed a little sadly as Shae moved away but then she felt Shae's fingers begin to play at her entrance. Her head fell forward against the pillow and she sighed again in an entirely different way. Greer raised up her hips so that it was clear to Shae what she wanted.\n\n\"Do you want to be fucked?\" Shae asked in a voice that had lost all its shy qualities. She rarely swore so the way she asked surprised and excited Greer. The raw sexuality that Shae was showing was making Greer very hot.\n\n\"God yes! Fuck me, Shae! Fuck my pussy!\" Greer pushed back with her hips as she cried out. She could feel the tips of Shae's fingers just barely enter into her. When they didn't push in further, she continued. \"Fuck me; don't tease me, Shae! You got me so goddamn hot! I need to be fucked!\" She moaned as Shae did what Greer wanted and started to push two fingers into her. Greer thrust her hips backward to meet them and help get them in as far as possible.\n\nThe wanton display of Greer's desire thrilled Shae. She loved pleasing Greer and it was clear that she was now. Greer's pussy was gripping her fingers as she slid them in and out. With each thrust of her hand, Greer pushed back hard against her. Shae could feel her arm being forced back by Greer so she matched the force to ram her fingers in deep. Her hand was extremely wet and Shae loved the squishy sound Greer's pussy was making. With each thrust, she tried to get her fingers in just a little deeper. Greer made her appreciation known with her mounting moans and squeals. She was picking up speed with her thrusts backward. Her hips were brushing against Shae's body with each thrust going back and forth.\n\n\"Uhhhhhhh, oh fuck yes Shae!\" Greer screamed. She was almost there. \"I love how you hard you are fucking me!\" It felt like Shae was grinding her fist into her at the deepest point. It touched her clit and sent a wave of pleasure each time it happened. And it seemed higher with each thrust. Finally Greer's body tensed and she felt Shae's hand thrust hard against her just at that moment. Her orgasm started and she was screaming out loud without even being aware of it. Her body bucked and spasmed.\n\nWith her fingers deep inside Greer, Shae could feel the pussy walls gripping and releasing her fingers while Greer's body thrashed. It was hard to even keep her fingers inside Greer, let alone continue to pump them in and out. Instead Shae just pressed them in as hard as she could and let Greer's hips take control. For Greer it felt like Shae was still fucking her and as one wave ended, another would begin.\n\nRemember how her dirty talk had excited Greer, Shae did it again. \"That's it, Love! Keep fucking my hand. Slide your pussy up and down on my fingers and fuck them! Do you like it? Do you like how I am fucking you, Love?\" It was clear from the way that Greer bucked harder that the words were having their desired impact.\n\nFinally Greer let out one long \"Oh myyyyyyyyyyy Godddddddd!\" and collapsed. Shae felt Greer's whole body go limp even though her hips were still raised up with Shae's fingers embedded in them. If it wasn't for the heavy panting breath, Shae might have worried. Still Greer seemed to have passed out. Even her pussy had stopped its violent spasms, although Shae could feel little tremors running up and down the soft membranes. With just a little regret, Shae slipped her fingers out from Greer's moist hole.\n\nEven with the sound of Greer's breaths, Shae was a little worried and turned so that she could lie down beside her. She put her arms around Greer and snuggled up to her where she could look at Greer's face. Shae was delighted to see that Greer had a smile on her face. She hugged Greer a little tighter and was rewarded with a little flicker of her eyelids.\n\n\"Oh God, Shae,\" Greer spoke with a voice that seemed drained of energy. \"You made me cum more than I think I have ever cum.\" Her hips were slowly sinking down so that she could lay flat. She didn't have the strength to turn over and hug Shae back. \"Thank you so much, Sweetie!\"\n\nSeeing how well she had satisfied Greer put a huge grin on Shae's face. She leaned over and kissed Greer and tried to snuggle in closer. Finally she just pushed on one shoulder so that Greer could at least roll over on her side. After a little effort, Greer put her own hand over Shae's waist. Their faces were right next to each other now.\n\n\"I'm glad, Love. I have never done this before and I wanted to do it well for you!\" Shae's voice had a note of pride in it.\n\n\"Mmmm! You did!\" Greer let out a very contented sigh. They kissed again. This time the kiss was very soft and tender. The feelings that they had so long suppressed were shown. Slowly Greer regained a little of her strength. She reached up and stroked Shae's face. It felt so loving to Shae. After all this time, she was with the one person that she wanted. She couldn't imagine being any happier. Even though it embarrassed her a little, she felt a few tears of happiness roll down her face.\n\nGreer smiled as she saw them. With the joy shining in Shae's face, there was no mistaking them for anything but what they were. She felt almost the same way. Even if she was perhaps wiser from experience than Shae, she would take a chance. Now she completely accepted that. She wasn't going to worry about what might happen down the road. They were both happy and it was more than enough.\n\n\"I love you too, Shae,\" Greer said softly. The way Shae hugged her right then was almost the best part of the night. The feelings just came through as their bodies pressed together. But despite how much she wanted to prolong the moment, Shae had taken a lot out of her. Greer could feel the edges of sleep intruding. \"I don't want to sleep, Sweetie but I don't know if I can stop it,\" Greer said as she struggled to rouse herself.\n\n\"It is okay, Greer. We made wonderful love today. We can make love tomorrow, and the day after, and the days that follow. We are together. We can sleep now.\" Shae helped Greer get under the covers and then joined her. They cuddled together facing each other.\n\nShae couldn't remember being this content. She watched as Greer's eyelids began to blink. For a while, Greer tried to avoid the inevitable but eventually they closed and didn't open. Shae continued watching Greer's face. The sound of her even breaths was the most peaceful and reassuring thing that Shae could imagine. Soon the rhythm was lulling Shae to sleep as well. She leaned forward one last time and brushed her lips against Greer's. Greer made a little happy sound. Shae smiled and lay her head down. The last thought that she had before sleep completely found her was what a wonderful feeling it would be to wake up with Greer like that."
    ],
    "authorname": "-Ripley-",
    "tags": [
        "romance novella",
        "lesbian romance",
        "lesbian novella",
        "age difference",
        "lesbian age difference",
        "coming out",
        "lesbian first time",
        "first time",
        "lesbian love",
        "coworkers"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-broken-woman-can-still-heal"
}