{
    "title": "Mind Writing Pt. 08: Emerald",
    "pages": [
        "TW: questionable consent; brainwashing; forced orgasms; incest reference\n\nThere was no moment of awkwardness - I didn't allow there to be. If I was doing what I thought I was doing - sharing a fantasy with people who were, at least once I was done with them, happy to participate, then I didn't want a single moment of shadow in there. Not a moment of doubt, or dark reflection, or questioning.\n\nNot that I wanted to take away their agency or anything - they were still the people they were. I would never do to anyone again what I'd done to Holly and Erin. No, what I was doing here was... allowing them to experience something typical societal rules wouldn't allow.\n\nI was sharing this with them.\n\nSo, as Sam slipped out of Shona's bed for a quick shower, leaving Ali and me to recover, breathless and sweaty and sticky, in a short moment of privacy we saw each other and laughed.\n\nLike, really laughed.\n\n'What the fuck,' Ali eventually whined, like it was some atrocious act she had participated in. She rolled, burying her face in the pillows, the mess of bedsheets around us a testament to the unbelievable thing we'd just done.\n\n'I know,' I laughed, as Ali turned towards me. She didn't cover herself, and the view of her glistening chest, with a trail of slickened hair drawing a line across her left tit drew my eye. Apparently it didn't matter that she'd just been fucked senseless moments ago - I was still ready to see her cum again.\n\n'What is it you do,' she asked, her voice cracking slightly as she wiped her brow, peering up at me with those innocent, doe-like eyes. 'It was the same when you were together... you bring out this wildness in me.'\n\nI shrugged. 'I don't know.'\n\nHer eyes narrowed. 'Bullshit. Sam's amazing - and I mean, amazing - but no matter what he does, or what I do, I don't cum like that with anyone else.'\n\nIt was an admission I hadn't expected, but the idea that Ali had gone off fucking guys and not being able to reach the heights she did with me was... hot.\n\nIt was also a confirmation of something I'd been worried about. Not worried-worried, but a little.\n\n'Thanks?' I tried, but Ali shook her head.\n\n'Nah - you do something, Jamie. I don't know what it is - maybe you have some aphrodisiac you've snuck into our drinks or something, but... Sam has never been that-way-inclined, if you know what I mean.'\n\nI thought to the way he'd quite happily fed me his length, and the moans of pleasure he'd let out as I slickened him with my inexperienced tongue.\n\n'He seemed to like it,' I said simply, but she frowned.\n\nAnd, to stop any further questions, I tuned in, and pulled down her doubt. For good measure, I tugged up her contentment and acceptance, letting her soften against me. Her form went a little slack as she leaned into me, our naked bodies a testament to the relationship we'd once had. We fit together quite well, it seemed.\n\nAnd, just as I was about to do something stupid, I felt another presence coming up the stairs. For a moment, my heart dropped at the idea of it being Shona, and the question I'd have of managing to resist having Ali and Shona, so well-fucked and horny and at my mercy, nude and presenting themselves for me - would I be able to resist that? Hold myself back?\n\nBut, the question was allayed as not Shona, but Hannah stumbled in, wearing nought but black lingerie that made her already sultry form downright porn-star-like, and a pair of white socks.\n\nI frowned - had she been wearing socks before?\n\nBut, as her eyes locked onto mine, I dispelled the thought. Her intention was clear, and as she closed the door behind us, it became clear. The sound of Sam's shower dimmed, and the threat of Shona's intrusion vanished as the lock clicked shut.\n\nThen, she turned to face us both. Ali perked up, sitting to see the seductress who had just joined us.\n\n'I just fucked your mum,' she said, with a smirk on her lips that made my well-fucked length throb, hardening against all odds. 'Your choice - who's next, you or your boyfriend?'\n\nI looked at Ali, and tuned in. I could already feel her hesitation, trepidation, even a hint of fear setting in. But, beneath I could feel her arousal, curiosity. All the good things, being held back by fear, by the unknown.\n\nSo, I did what any sensible, kind-hearted psychic would do, and waved away the fears she held like cobwebs off a dresser. Then, for good measure, I pulled up her bravery.\n\n'Me,' she said, sitting up. Then, she looked up at me. 'Us.'\n\nHannah looked surprised - impressed, even. 'Oh?'\n\nI laughed, too, as Ali leant over me, pushing the duvet off me with ease - not that I tried to stop her in any way.\n\nHer hand glided across my chest, taking her mother's bedspread with it, and as the cool of the air met me I sighed. Ali moved in, kissing me as her hand wrapped around my shaft, stroking me softly to hardness again - which, in all honesty, was a bit of a challenge. It had been a hell of a day.\n\nSo, in took her hand off me, and beckoned Hannah over, who crawled onto the bed like something out of a wet dream - pale, draped in black lace and sex, her lips red and her face flushed.\n\nAli, by comparison, looked positively innocent - her hair, messy and unkempt, matched her unsure manner. She was an insect caught in a web of sex, cast by me; Hannah was another spider altogether. A predator, assured of her power and her alluring ways - and she knew it.\n\nThat's what drove me mad about her.\n\nShe came up on my left, as Ali hovered on my right, both of them gorgeous and soft and flushed. In their heads, I could feel the tension - the wanting to do more. Ali hesitated out of her inexperience. Hannah was waiting for my permission.\n\nInstead of waiting, I flushed them both with a wave of daring, danger, and arousal, letting their instincts wash over them. Then, I sat back and watched as the first two women I'd ever fucked leaned over me, their lips meeting in lust-fuelled, lazy kisses, tongues slick and hair mingling. Hannah's hand stroked Ali's chin, asserting herself as the dominant. The one who does the fucking.\n\nThe fucker.\n\nWhich, of course, made Ali the fucked. Submissive, accepting. As I tuned in, I pushed those roles a little, allowing Ali to relax and feel trusting, while Hannah I gave pushes of power, of eagerness.\n\nOver me, they made-out, until Hannah's hand wrapped around my length, stroking me again. This time, I was already hard - watching two of your sexual conquests enjoying each other the way they were doing had a good chance of doing that - and her pleased purr rolled through both me and Ali.\n\n'Down,' Hannah said through Ali's lips, and in Ali's submissive state she obeyed unquestioningly. Together, limbs trailing and lips meeting, they slipped down me, until the shared hot breath that fell from their heaving chests was warming the head of my cock.\n\nI was red, and sore, and I knew I wouldn't last another hard fucking - hell, I might not even have another orgasm in me. I was spent. Well and truly spent.\n\nBut, as Ali's lips kissed one side of my cock's head, and Hannah kissed the other, I couldn't help but moan into the air, leaning back into Shona's pillows. My eyes closed as I let the sensations wash over me, the soft smacking of two sets of lips sending shivers through me I'd never felt before.\n\nIt was so... calm.\n\nMaybe that was an odd word to use - but a lot of the sex I'd had, I'd induced a level of aggression to it. I'd led the action, pushing for a hard fuck that ended with breathless, heaving chests. But, this time, we were starting there.\n\nWhich meant we were going somewhere else. Somewhere I didn't know.\n\nIt was... lovely. Loving.\n\nMy fingers slid into their hair, one hand each, as I held them there. Softly, I just let them each taste me, kissing each other or licking my shaft, or a little of both. It was... worship, in a way.\n\nThey were worshipping the cock that had given them something no one else could, just like Ali had said. Hell, Hannah had said it too, that without me she'd nearly gone insane. And, yes, it was a dangerous line to tread - but the reality was that I was always going to use this gift during sex. I just was.\n\nIt was too good not to.\n\nSo, why not spend this time, my late-teens, in a village I was so nearly leaving, to experiment with what that could do? With what I was capable of doing with people, especially when I leaned into what they wanted already?\n\nHannah was a slut - the fact that she was sucking my balls into her mouth while wearing lingerie that would have made the Jamie from a month ago bust in his underwear proved that. Ali was my first, and she was still trying to fight the fact that she was a slut. Funnily enough, fighting that simply meant worshipping Hannah's neck while she sucked my balls - one step down the food chain.\n\nI didn't tune in - I didn't need to anymore. I just let them loose. Slow and sensual, they pleasured me, without a thought to themselves.\n\nI couldn't help it. I loved it.\n\nLoved it.\n\n'Fuck, you're good at this,' I moaned as their tongues dragged, soft and slick, against the underside of my cock, as Hannah's lips popped off my balls with a lewd schpop.\n\n'I could do this all day,' Ali moaned, before taking the head into her mouth - the first to actually take me inside them. I groaned, the slow, sensual actions and the gentle caresses of their hands across my thighs, hips, stomach - all of it was near-spiritual in how it made me feel.\n\nThe door rattled, and I realised that we'd locked out Sam. He didn't know about Hannah in here - to his mind, I was taking back the girlfriend I saw as mine. And, frankly, from the way she took me to the hilt, her chin pressing into my groin, it was tempting.\n\nFuck, it was tempting to use my gift, claim them both as my own. Slaves to my cock, happy and willing to serve, to pleasure, to fuck.\n\nI even tuned in - listening, if nothing else, to the way their minds drifted and melded and slipped between arousal and motivation. Both of them had a certain determination I hadn't really expected, even though it never reached intense levels that I had felt before, it was... deeper than that.\n\nThis was worth more.\n\nI felt Sam outside, the flash of anger, and concern, and confusion. And, in a moment of mercy that was, I had to admit, a rarer thing than usual for me, I relented. I pulled Hannah back by the hair, and looked into her expectant eyes.\n\n'Let him in,' I told her. Hannah nodded, and slipped off me, as Ali continued to choke myself on my cock. As Hannah opened the bedroom door, Sam's eyes immediately fell upon Ali's backside, soft and pert - before sliding up to her view of her mouth, open and stuffed, as she worshipped me.\n\nHannah's hand, as she felt my intentions - or, had her own intentions that simply happened to align with my own - slid across Sam's chest as he held the towel around his waist. He looked at Hannah, who peeked over his shoulder in a way that was undoubtedly adorable, before looking back to Ali.\n\nHannah's hand travelled down, slipping under the towel, and he sighed as she made it drop around his ankles. The lust coursing through him was... evident, as Hannah's hand closed around his length, stroking him to hardness as he watched his girlfriend choke on her ex's cock.\n\nI stroked Ali's cheek, before urging her off. Reluctantly, she pulled herself up, and I searched her mind to find that hint of disappointment, and replaced it with arousal - excitement - lust.\n\nShe gasped, shifting her hips a little as she lay on the bed next to me, that pert butt upturned wonderfully. I leaned down a little, and she stretched to meet me, looking for a kiss - but I stopped short.\n\n'I'm tired,' I told her. 'Whatever you were about to do to me, do it to him.'\n\nAli's eyes, glossy and wide, flashed with disappointment, before she turned to face Sam - his cock in Hannah's hand as she stroked him, still dressed in that black lingerie.\n\nThen, as a little gift to myself, I placed a block on Sam so that he wouldn't be able to cum until he had given both Ali and Hannah orgasms. Maybe it was less of a gift to me than to them, but equally, I knew it would help me sleep better thinking that he was going to get the night of a lifetime.\n\nPlus, for him, it really was just one night. For me, this was forever. Or, at least, as much as I wanted it.\n\nSo, as I stood and moved out of the way for Sam to be led cock-first by Hannah to the bed, replacing me in their luxurious grasp of tongues and lips and moans, I pulled on my underwear, plus Sam's shirt - as it was the best thing I could find, and closed the door behind me.\n\nI tuned out, happy to let them enjoy themselves for the time being, and to let myself recover for a little while. However, as I started to make my way downstairs, I remembered the last member of our little tryst group - Shona.\n\nWho, presumably, was only a few minutes off the back of being fucked by Hannah.\n\nI wondered if she had moved, or if she'd stayed downstairs to cook dinner after Hannah had turned her over. Or, of course, if she had fucked Hannah silly, keeping her wits about her - after all, I had given her a good time in the woods only a few hours ago. It was understandable if she wanted some time off. Hell, I knew I did, and I had basically been fucking non-stop since I made her cum that night.\n\nFuck, that was still such a good memory.\n\nDownstairs, I found Shona, cooking on shaky legs. Her top was a little askew, and she was now barefoot - in fact, she was only wearing a tee and some underwear. When she turned, it was very clear there was no bra on underneath, and that she was a little... spaced out.\n\n'Hey, Shona,' I said with a wary note as I came down. Shona spun to face me, a little bit of surprise on her face.\n\n'Oh!' she chirped, before focusing on me, for a second slipping back into the motherly tone she used to take with me.\n\nOnly, right now I could see her nipples poking through the fabric of her shirt, and that soft fuzz beneath her panties.\n\nI tuned in, and felt the doubt in her mind, and while my first instinct was to suppress it, instead I decided to indulge my own curiosity. So, I left that as it was, and simply brought up her honesty, comfort, and forthcoming.\n\n'Do you think this is all a little... strange?'\n\nI approached, going up to the kitchen island as she faced sway from me, the smell of dinner filling the warm room. 'Strange?'\n\nShe turned, and caught me with a cut the bullshit look that I wasn't expecting.\n\nBetween that and the way she bit her lip, thinking as she considered her words, I wondered if she was, you know, figuring things out. But that was ridiculous.\n\nWas it? After tonight, Ali had straight-away started to wonder what the fuck I'd done to her to make her do what she had. Which, of course, was silly. I hadn't made her do anything. I'd just made her feel able to do what she wanted. The same I'd done to all of them.\n\nOr, maybe she was talking about the fact that I made her cum like nothing else she'd felt. Which was fair, in a way, because that was definitely a manipulation I couldn't deny - it was just too fun to watch her orgasm like her life was ending.\n\n'You and Hannah,' Shona said, pivoting the conversation slightly. 'What's the story there?'\n\nI considered lying, or bending the truth, but it seemed pointless. Shona had already shown she would see straight through the 'bullshit'.\n\n'It's a relationship,' I said vaguely. 'Mostly sexual, to be honest, but we like each other. Why?'\n\n'Because she ate my pussy like it was the only thing keeping her alive,' Shona told me, a slight hitch in her voice telling me it wasn't entirely unwanted. 'Then, she announced she was going upstairs to fuck my daughter, too. And I liked it.'\n\nWhile tuned in to her, I could feel Shona's reduced inhibition wavering, struggling under the maternal level of guilt that was fighting with her loose morals. I could also, however, feel how even talking about this stuff was causing her arousal to tick upwards. Naughty thing.\n\n'You liked it,' I said. 'What's the problem?'\n\n'I know you fucked her,' she shot at me, a sudden venom in her words. 'And - and I know I can't be angry about that. I'm not jealous, Jamie.'\n\nI smirked. 'Sounds like you are.'\n\nHer frown hardened, disapproving. It was remarkable, the way she managed to be sexy and terrifying.\n\n'I'm protecting my daughter. You... what me and you have done, more than once, I've enjoyed it. But I won't tolerate this, Jamie. She's happy with Sam - he's a good boy. Don't ruin it for the sake of having a good time.'\n\nAt this point, I was hurt. 'You say that like I made them do anything!'\n\nShe scowled again, and while she didn't say it, I could feel the word on her lips. Bullshit. 'I've seen what you do, Jamie. You're good at influencing people. Silver tongue, you. If anyone could fuck their own girlfriend, their ex-girlfriend, and her ex's mother in one day, it's you.'\n\n'And his ex's new boyfriend,' I added. 'Sam fancied some experimenting.'\n\nShe laughed. 'Jesus! You're proud?! Proud of what you're doing.'\n\n'Right now, there are three people upstairs having the time of their lives. And you - how many times have you cum today? To me, or Hannah.'\n\nShona didn't answer.\n\n'Yeah, I thought so. You wanted it, Shona.'\n\n'Careful,' she warned.\n\n'You liked it,' I told her. 'Begged for it. So did Ali, and Hannah.'\n\nShe bowed her head, surrendering some of that... power she usually held. 'And now I'm asking you to stop,' she said.\n\n'You wanted this! You said you wanted to keep me as, like, a boy-toy retainer, Shona.' I squinted at her. 'What's happened? What changed?'\n\nFor good measure, I pulled up her honesty further, almost to 80.\n\n'Nothing,' she said. I didn't believe her - 90.\n\n'What. Changed.'\n\n'Nothing!' she said again, and I felt a flash of anger. 'I just... it's gone too far! I mean... we were a normal family. And then... and then you started doing this, and I don't know how you do it, or what exactly you're doing. But it's... too much, Jamie.'\n\n'You didn't say that earlier today,' I said, a little venom in my own voice, now. 'You were in the woods, desperate to get what only I can give you.'\n\nShe nodded. 'And that's the problem. Fuck, you're like heroin, Jamie! Pure pleasure, the rush - but you're an addiction. And you're destructive. You got me. I don't want you to get Ali, too.'\n\n'It's not up to you,' I said. 'It's up to me. Because - and I know you know this - if I asked her to come with me to Uni, and live with me, as my personal fuck-toy, she would. She would live in my bed, full of cum and free of thought.'\n\nI caught myself - Shona looked like she might cry. Or smack me. Or both.\n\n'Is that... is that what you want, Jamie? You want to be that person. Keeping her prisoner?'\n\nI laughed. 'She wouldn't be a prisoner, Shona. She'd be a volunteer. Just like Hannah. Like you. Because, if I asked you, right now, if you wanted to be my personal fuck-toy, you would say...'\n\nI pulled her honesty to 100.\n\n'No!' she yelled. 'Jamie, no! No one wants that! It's a... a fantasy. A sexy idea. But it's not what people do. And, I don't know who you are these days, but you're not who I thought you were. You're not the boy Ali loved. And I want you out. Hannah too. I don't care if I have to go upstairs and drag her off Sam's cock myself, you're out.'",
        "I stood for a moment, slightly shell-shocked, as Shona's decision took root. She stormed past me, apparently happy to ignore the stove as she ran upstairs, a look of determination like nothing else upon her features, and out of sight.\n\nI waited in the kitchen, the certainty of Shona's honest-and-true repulsion of that stupid, stupid comment of being a live-in fuck-toy reverberating around my mind. There was no way to take that back. No way to undo it. Not really.\n\nAlthough, I could wipe her memory of the whole thing - but then I would only be left with the complications I have with Erin and Holly; they might not remember, but I did.\n\nSo, I waited, and listened. I listened as Shona stormed in upstairs, the screams and shock as Ali and Sam and Hannah were interrupted, Shona telling Hannah to get the fuck out. The sounds of confusion, as I allowed the arousal and lack of doubt to fade away - what was the point?\n\nAnd, as Hannah was led down the stairs in nothing but her lingerie - still on her, apparently - she caught my eye, a question in her gaze.\n\nWhy don't you fix this? She was asking. But I knew the answer was a mess of things.\n\nI don't know if I can.\n\nI don't see what fixing it would entail.\n\nI'm ashamed of myself.\n\nI just want to go home.\n\nI'm so tired.\n\nHannah went to the corner of the room, where on a stool sat a pile of discarded clothes I hadn't noticed before. She pulled the jeans on quickly, and half-dressed enough. My trousers were upstairs, still, but I didn't think Shona was going to let me go back up.\n\nLuckily for me, Sam seemed to have predicted this, and from the top of the stairs threw down my pile of clothes. I dressed quickly, quietly, as Shona ushered us out into the evening air.\n\nIt was dark, by now, though that kind-of summer half-dark, where the sky never really stopped being purple. The time had slipped away, wasted away in our den of mortal pleasures. I looked back, and caught Shona's eye before she slammed the door, no doubt ready to argue with Ali and Sam about what had happened - about what they'd all done.\n\nOr, maybe, as my mental manipulations fell away, they would all fall quiet in mutual understanding that it wasn't really them. It might not make sense to say it out loud, but they might recognise it between them. That I had done something to them.\n\n'What the fuck was that?' Hannah half-laughed as we stumbled together up their drive. 'God, it was just getting good.'\n\n'Shona knows,' I said. 'Not everything. But enough. Enough for me not to bother stopping that from happening.'\n\nHannah paused, thinking about it. 'Right.'\n\n'Yeah.'\n\n'Why didn't you, y'know, wipe her?'\n\n'Because I don't want to,' I told her. 'Let go to my place - I need to sleep. I'm exhausted.'\n\nHannah smiled. 'I don't think I've spent a night at yours,' she said.\n\nI looked at her as we walked through the village, glowing orange in streetlamp light. 'Really?'\n\nHannah nodded, and looped her arm around mine. 'It'll be nice.'\n\n<p align=\"center\">* * *</p>\n\nThe morning began with a slow, steady wave of pleasure wafting through me - I was so relaxed, having slept like a log after the previous day's activities, that it took me a while to realise what was happening.\n\nHannah's lips were soft around the shaft, her fingers linked with mine, as she woke me with the nicest slow blowjob of my life.\n\nI groaned, and she popped off me.\n\n'Morning, handsome,' she purred, sliding up me enough for me to realise she was naked, now - that lingerie somewhere on my bedroom floor in a pile of black lace. She pulled up, the covers keeping out the light so I wouldn't see the way her body slid against mine, but I could feel it.\n\nHer leg slipped across me as her face found mine, kissing me as wakefulness tried to find me, until she was astride me, her slick sex dragging against my cock as my hands wrapped around her.\n\n'Morning,' I moaned into her lips as her pussy aligned with the head of my cock, and she slowly pushed back, sliding down my length. We both let out soft gasps as I filled her, hips rolling and lips meeting, the slow morning sex bringing us out of sleep and into the day in the best way imaginable.\n\nAs she rode me, Hannah sat up, the cover bundling around her hips, her glorious chest displayed to me in proud celebration as slips of sunlight crossed her, trickling in through the pulled curtains.\n\nI knew my mother, and maybe her new life-partner were in the house, and I had no intention of them being disturbed by this, so as I reached up and took one of Hannah's tits in my hand, I tuned in.\n\n'Do you want to be a slut?' I asked her.\n\nShe nodded. 'Yes, daddy...' she whispered, as my hand drifted up to her throat, squeezing softly as she rode me.\n\n'Then I'm going to give you some instructions, okay?'\n\nShe nodded, eager. The difference between Shona and Hannah's attitude towards all of this was... striking. But, I didn't need to worry about that. Instead, I planted the instructions inside her head.\n\n'You will not be able to cum today - at all. You will spend all day feeling close to cumming, wanting to fuck, to be fucked, but nothing will let you. You will feel especially gay, and attracted to only me and women, until told otherwise.' I paused. 'Understood?'\n\nShe nodded. 'Fuck, yes daddy - don't let me cum... you want me to pick up girls for you?'\n\nShe had read the subtext, which made me smile. 'Well, you wanted proof of my powers, didn't you? So far, it's only been people I know - I think you should bring me someone... new. Someone for you. A reward, for being such a good slut.'\n\nAll the while, she rode me, our pace quickening as her excitement grew and grew, despite the knowledge that she wouldn't, couldn't, finish. It made her all the more excited, to be honest.\n\nSo, as she rode me with renewed enthusiasm, I felt myself getting closer and closer, my morning orgasm building within me, the most wonderful pressure there was.\n\n'Fuck - daddy, fuck, I can feel it - I want to cum, but I can't... GOD, I'm close,' she moaned, leaning on my shoulder as the soft paff-paff-paff of her hips slamming down onto mine with each thrust pushed me closer and closer.\n\n'Get off,' I told her, and she obeyed without hesitation - without me having to make her. She dropped to the floor, on her knees, and I sat on the edge of the bed. In a mirror of that first time she'd been covered in my cum, she waited between my knees as I stroked myself to orgasm, cum splattering her features and chest, white and thick.\n\nIt was a fantastic way to start the day.\n\n'Good girl,' I said, and Hannah grinned, some of my cum dripping off her nose as she moved.\n\n'I don't get it, you know,' she said. 'Why Shona kicked us out - what you can do is amazing, daddy. And I would be honoured to show another girl how amazing it can be to... experience you.'\n\nI smiled, before lying back, my legs hanging off the bed. 'Clean me up,' I ordered, and Hannah went to work licking and slurping and sucking - almost managing to make me hard again. It was almost a shame that she was so quick at it, as before long I was just about licked clean, and Hannah was awaiting the next instruction.\n\n'Go shower,' I told her. 'Then, dress in something slutty. I want you to get attention. Then, you're going on the prowl to bring some pretty thing home to me, okay?'\n\nOut of sight, I heard her give a contented sigh, before remembering I wasn't looking at her. 'Of course, daddy,' she said, before standing and - still naked and coated in my cum - left the room. She would cross the landing to get to the bathroom, but even a quick tune-in told me that Hannah was in no way bashful about how she looked - she was proud of her body, and even more proud of the glazing it had received this morning.\n\nStill, the thought of my mother seeing her like that made me squirm. I had done enough to upset my own family's dynamic - I had no intention of dragging them into this any more than I already had.\n\nWhile Hannah washed herself down, I sat up, and looked about the room. It was, unfortunately, very much the bedroom of any other eighteen year-old who was desperate to move out of home. Lots of nick-nacks and old things that, really, should have been thrown out years ago. A pile of books I read when I was ten, turning brown on a table top; the laptop I'd gotten a year ago closed and still charging on the desk, next to a pile of school work I never had to look at again; clothes in a bundle that mum would sort through and wash; toys from being a kid to which I was too attached to throw away, but I would never dare bring with me to University.\n\nRemnants of another person.\n\nIt was strange, really, how long I'd had this power, and how long I'd been afraid to really use it. Even now, I was still erring on the side of caution - all I'd done was unlock a few carnal fantasies, both of my own and of others. Sure, I'd crossed the line once or twice, but it was all within one specific flavour of power. Sexual.\n\nI looked at that pile of work, and wondered how easy it would have been to tell my German teacher 'Do it for me.' Or, if not, to simply tell her not to give out homework at all.\n\nGod, I hated that woman - she was half-German herself, and refused to speak in English during lessons, so if you couldn't keep up you were well and truly left behind. I'd managed to scrape through the A-Levels because, in all honesty, I found it easy to speak the language - it was writing I struggled with.\n\nI wished, now, that I had used my power more. I could have made my life so much easier, rather than letting some half-German witch watch me struggle through.\n\nIn that moment, I made a resolution - never again would I do work I could get someone else to do. Hell, I was even getting Hannah to pick me up some new fuck toy, seeing as the old ones had decided against the pleasure I could offer them.\n\nMaybe, then, I thought, it would be smart to screen my new playthings - make sure they were submissive, and enjoyed handing power over. And I should ensure not to hold on to any new plaything for too long.\n\nExcept for Hannah.\n\nShe was something... special.\n\nWhen she returned from her shower, wearing one of my mother's favourite towels around her chest in a way that threatened to burst out of it any second, I stood to meet her.\n\n'Daddy,' she said, her hands going around my neck. I groaned, letting her pull me close.\n\n'Yes?'\n\n'If I can't cum today,' she said, her hips rolling slightly, 'but I will still feel like... this, all day, will I go mad?'\n\nI laughed, and kissed her in a way that was much less... sexual than usual. It was softer, and we sank into each other. My hand went around her back, pulling the towel into her, making her chest press into me.\n\n'Maybe,' I said eventually, after we managed to pull away. 'If I get worried, I'll take you off the edge. But you're not cumming today,' I told her.\n\nShe nodded. Then, looking up at me with dark, sultry eyes, she bit her lip.\n\n'I'm all wet,' she purred.\n\n'Yes, you are.'\n\n'And you made me desperate to be fucked...'\n\n'Yes, I did,' I smiled, before pulling away. 'Oh - no masturbating,' I told her. Hannah frowned, clearly annoyed. Then, I went to the door. 'My turn to shower.'\n\n'Will you fuck me when you get back?'\n\nI shrugged, trying to downplay how insane it was having a sex-hungry thing in my bedroom, wet and naked and dripping, and knowing she'd be there when I got back.\n\nThen, I enjoyed the nicest, hottest shower I'd had in a long while.\n\nWhen I finally emerged, well-steamed and scrubbed and all the rest, with a white towel wrapped around my waist, I opened the bathroom door to see my mother looking at me, an eyebrow raised.\n\n'Hey,' I said, resisting the urge to tune in, figure out what she was thinking, and skipping a lot of this conversation. But, as I'd found, sometimes it was best just to let things play out.\n\n'Your... friend is still here, Jamie,' she said, with a note of concern in her voice. 'I don't mind you having someone over - you're old enough now - but... can she get dressed?'\n\nI hid a smile. 'What do you mean?'\n\nMy mum sighed. 'I went in to get your laundry and she was... on your bed. Naked as the day she was born. And, don't get me wrong, she's a beautiful young thing-'\n\n'Oh, gross-'\n\n'-but I really don't need to be seeing that, Jamie.' She held out a pile of clothes, and I took them with a frown. 'Some of my older things, in case she needs a change.'\n\n'Oh,' I said, resisting the urge to say gross again.\n\nShe turned, and made her way towards the top of the stairs, before stopping to look at me, an inquisitive look on her face.\n\n'You're being safe, right?'\n\n'Oh my GOD, mum!'\n\n'Sorry!' she said, hands up and heading downstairs. 'Sorry I want my son to be smart!'\n\nAnd, as I watched her leave, I slipped across the landing back into my room, clothes under-arm - and found Hannah on my bed, atop the covers, the towel unwrapped and splayed out beneath her, as she watched me enter and close the door behind me.\n\n'Your mum popped in,' she said.\n\n'Yeah, she told me to give you these,' I said, chucking the clothes at her. Only as they landed in a lump did I realise it was basically just a large jumper and a pair of jeggings - those jean-looking leggings that hadn't been worn by anyone our age in a few years by now. Even out here in the middle of nowhere, we still had fashion trends, unfortunately.\n\n'Kinky,' Hannah said, picking up the jumper. 'Wanna fuck me in your mum's clothes?'\n\nI frowned at her. 'That's... not really on my list of 'things that do it for me', I'm afraid.'\n\nShe shrugged. 'Your loss,' she said, before pulling over the jumper. It slipped over her still-damp hair, and came down almost to her knees, the tight neck not giving even a hint of her spectacular cleavage. I assumed that was intentional - but it wasn't going to do anything to halt Hannah's innate sluttiness.\n\nWhich she quickly confirmed, by completely ignoring the jegging, and grabbing a pair of my white socks and pulling them on.\n\nAnd nothing else.\n\nThe jumper covered anything risky, but it didn't take a pervert to look at her and know she was a little cock-tease. Or, as had been prescribed today, a cunt-tease. The socks came half-way up her calves, and there was a gap where her knees and lower thighs were visible, still invitingly damp from her own shower, before it vanished into teasing shadow.\n\nThe jumper itself was plain black, and managed to cover her significant bust quite conservatively. Unfortunately, the knowledge that there was nothing beneath it kind of undid any sense of propriety intended.\n\nShe gave herself a once-over, and nodded. 'I look good in anything black, don't I.'\n\nIt wasn't a question, but I still nodded, which got a smile of satisfaction from her. Then, she sat on the bed, and motioned for me to do something.\n\n'Go on,' she prompted.\n\n'What?'\n\n'Get dressed,' she said. 'I'm dripping into your mother's jumper here, and I'm killing time that could be spent finding you a cock-puppet.'\n\nI felt my cock throb, and dropped the towel. For the sake of consistency, I tuned in and pushed through a throb of arousal into her, too, and I watched Hannah's eyes dilate slightly as she took me in.\n\nThen, she leant forwards, her face only a few inches from me, and looked up into my eyes.\n\n'May I?' she asked.\n\nI considered it.\n\n'Nah - you're right. We're wasting time, Hannah. You need to get to work.'\n\nShe glared, and stood, looking me up and down. 'Yessir.'\n\nI smirked, and pulled her in for a quick kiss - which, again, felt a lot more intimate than the usual sex-fuelled passion we usually shared.\n\nShe left the room, leaving me to dress while she made her way either downstairs for breakfast, or back to her place to change, or somewhere else to pick up a 'cock-puppet', but all I was able to think about was those kisses. The way things had shifted, and how quickly it had moved.\n\nI knew that telling her the truth would change things. It fixed the gap that was between us, and using my gift on Rebecca and Matt showed her that I was on her side. Or, that we were a side unto ourselves.\n\nLast night, we had split up and had an evening of passion, only for it to fall apart. While that could have made things awkward, or upsetting, instead we turned to each other. We laughed and joked, and walked away from a strange situation where they'd made me feel like shit, and spent the night together.\n\nAnd, well, then there was the way she woke me up.\n\nOnce I was dressed, in a simple pair of light-blue jeans and a white tee, I went downstairs and found my mother at the kitchen island.\n\n'Dan nowhere to be found?' I asked, and she looked up from her phone.\n\n'He's with Erin today - trying to mend bridges. She didn't take the changes too well.'\n\nI nodded. 'Yeah, I get that.'\n\n'You've come around, though?' she asked, hopeful. 'I mean - you're okay? This girl, she's not your way of lashing out, is she?'\n\nI thought about the way I had actually lashed out - what I'd done to Holly and Erin, before erasing it from their minds.\n\n'Nah, mum. Hannah's from work, and we have a good thing.'\n\nShe smiled, soft, and sat back. 'Hmm. Okay. If you say so.'\n\n'I wish you'd had the chance to meet properly,' I said. 'Instead of, you know.'\n\nMum nodded. 'I'm sure she's lovely, when she's wearing clothes. Or, at least her own clothes.'\n\n'She liked your jumper, by the way,' I told her. 'But she's head out - maybe home, to get changed.'\n\nMum clicked her phone shut, and grabbed a banana from the fruit bowl, chucking it to me. 'My boy's all grown up, huh,' she said. 'Girls staying over. Off to Uni in a week or two. You're a man, now, Jamie.'\n\nI masked my smirk into a smile, trying not to come off as... patronising. Because the truth was she had no idea who I was, or what I'd done. It was almost sad. She had this idea of who I was, and what her little boy was becoming, and it was totally off.\n\nI was something else altogether.\n\nStill, I ate the banana and kissed her on the cheek before I pulled on a pair of shoes, sent Hannah a text to keep me informed, and made my way out.\n\n<p align=\"center\">* * *</p>\n\nInstead of going deeper into the village today, I thought I would enjoy the budding sunlight and head out into the woods. Not anywhere too wild, of course - but, along the dog-walking routes. Equally, I didn't fancy going out the way I'd met Shona yesterday - that was an interaction I figured I would delay as long as I was able.\n\nNot that it would go any way I didn't want it to, really. I could just... give her a little nudge, one way or the other. There wasn't any guilt in avoiding an argument, after all.\n\nThe pavement was thin, and more than once I had to hop into the road to make way for a dog-walker, the sun filtering through the trees in that perfect way it only could before nine in the morning, making everyone squint and smile as we passed.\n\nI waltzed past the road sign that marked the start of the 'village', and the graffiti that marked the back of it, and turned right, down a little beaten path. There was a hill that travelled down to the lake side, and the stairs that had been, over God-knows how many years, beaten into the dirt led down to another path that followed the water. But, now that I was here, on the crest of the hill that looked over the water from a bit of height, I decided it was nicer up here.",
        "So, I sat on the mound of grass, looking across at the hills over the lake. To my right was the village, nestled into the valley, and to my right was a wall of trees and hills, with the road briefly visible at intervals, until it was too far to make anything out.\n\nI opened my phone, opening the bank of saved images and videos I had from Hannah - all of those early-days morning masturbations and edging, all of her moans and pleads and 'daddy's. Part of me thought I should delete them - that it was a remnant from a time when what we were doing was more... detached. Just about sex.\n\nAnd that was the moment that I realised that whatever me and Hannah had now, it was about more than sex.\n\nIt was more than me and Ali, too - Hannah knew. She knew, and she liked it. That sort of intimacy, someone knowing your darkest desires, the things you're most ashamed to admit, and still having them accept you... it was something else. Something deeper.\n\nI flicked over to my texts, intending to tell Hannah to stop - to call it all off. Maybe I would meet with her, drop those instructions I'd given her.\n\nBecause I had something I needed to ask her.\n\nBut, as I was thinking up what exactly I was going to say, a message popped up. A photo, sent by Hannah - selfie, of her with another woman. A redhead I didn't recognise, and yet there was something about her that was... interesting. I could only see her face, next to Hannah's, and she seemed fair. Like she might burn if she was out in this sun too long. Her eyes were bright blue, and shimmered, and the glimpse of cleavage at the bottom of the photograph refused to tell me anything about her. All I had was her face.\n\nJust her pretty face.\n\nI texted back.\n\nAlready?\n\nI looked out over the water, seeing one of the morning boats chugging across the quiet, calm surface. The breeze was soft, and the simple enjoyment of the morning was something I hadn't had in some time. Even with the... mess of the night before, this morning had made everything feel fine.\n\nMy phone buzzed.\n\nShe's liked me for a while - a friend from college\n\nI sighed, amused at Hannah's tenacity.\n\nI said a stranger, I texted back.\n\nHer response, this time, was quicker.\n\nBut don't you want to fuck her?\n\nI looked again at the picture - in all honesty, she looked sweet. Cute. Plus, if she was into Hannah, that meant she was likely gay, and into her more than she'd be into me.\n\nSo, I texted back.\n\nI want YOU to fuck her, while you can't cum\n\nShe got back to me straight away - yes, daddy - meet us at mine?\n\nI smiled, and looked out at the water.\n\nSee you both soon.\n\nI sighed, feeling a little... tired.\n\nI didn't just want sex. Not really. Shona had taught me that - the sex wasn't worth manipulating people. Hannah had shown me that it was far more satisfying when people were more than just... vessels for pleasure.\n\nAnd, while I still had zero qualms about going Hannah's home and fucking a red-headed lesbian until she came so hard I made her question her sexuality, I knew that cuddling up to Hannah afterwards was going to be the reward for the day.\n\nIt was all fun and games, but there was more to it.\n\nI stood, and my phone buzzed again - another picture, this time of Hannah and the nameless redhead.\n\nKissing.\n\nTheir tongues sparkled in the sun, their lips pink and their eyes closed.\n\nAnd - frankly - fuck what I'd just said. I wanted to go and fuck them both stupid; that would be it's own reward. The soft afterwards would be a cherry on the cake.\n\nNo - no - don't get pulled into that again, Jamie. Don't muddy the waters. Don't get lost in some dumb sex-fuelled fantasy-made-real. There's more to it. There's more to all of this, Jamie.\n\nBut - if there's more to it, doesn't that mean that includes the sex fantasy stuff?\n\nAs soon as that thought found its way into my head, I couldn't shake it. This relationship, whatever it was, I had with Hannah had built from the sex outwards; from lurid, lustful behaviour we had made a bond. A trust.\n\nBut the sex was still a central aspect. And why shouldn't it be? Most couples are in happily sexual relationships - that was normal! It was just apparent that our sex included some... unusual parameters.\n\nLike, for example, the fact that Hannah wasn't going to cum today. No matter how good it might be, she wasn't going to be given that. And she liked that I was doing that to her! It was too good to be true.\n\nAnd yet, down the walking path and back in the village, past the garage and the stuffy little BnB nobody's been to in years, there was a pale goth slut with perfect tits getting it on with a redhead, waiting for my arrival. And, when I got there, I was going to give myself permission to ruin this stranger in the name of pleasure, before making a decision on whether I would let her remember it or not.\n\nAll the while, Hannah would be on the edge, unable to cum, and I would have free reign of her desperate, stunning body.\n\nAnd that was only considering what I'd already used my gift to do today.\n\nSo, I stood up from that hill, as the warmth just started to bake me under the clearing sky, and made my way casually towards Hannah's house.\n\nI knew it wasn't her house - she shared it with her sister. A nasty, inappropriate thought wandered into my head, then, about what her sister might look like.\n\nHow she'd gasp when she came.\n\nIf her pussy tasted like Hannah's.\n\nWhether she'd be just as uneasy giving up her anal virginity - or if, unlike Hannah, she was an eager buttslut.\n\nI waved them away, telling myself not to get greedy.\n\nBut why not? I thought. There are plenty of greedy people in the world. I could be one of them. The ones online who has everything despite not being smart, or funny, or talented.\n\nMy gift would offer me that world by the buttload, if I had the stomach to take it.\n\nBut, again, I dispelled those thoughts. I wasn't interested in warping the world to my will - nor of gloating about the things that I did. Shona had shown me, quite simply, that all it took was a crack in the facade for the whole thing to fall down.\n\nNo - what had happened with Hannah was the best way to continue. To find people who were both accepting of change, if not happy to be a part of it. Maybe I could find some weirdo online with a shit-ton of money who would fund my lifestyle - whatever that lifestyle may be - in exchange for 'lifestyle changes' I could make to him.\n\nWait.\n\nHoly shit.\n\nAs I was walking down the main street of the village, the idea struck me that, stupidly, I'd never thought of before. I'd been looking at this all as though I might have to secretly use my ability to sneak money out of people - or, at the most obvious, become a psychologist in order to understand people better, which would allow me to use my gift more effectively.\n\nIt had, hilariously, never occurred to me to use my gift as my livelihood. I could become an actual 'hypnotist', and charge people money to, say, pull down their addiction and cure them of smoking. Or, I could 'hypnotise' people into wanting to exercise more. Hell, I could even do what I'd done with Hannah and Rebbeca and Matt - manipulate their erogenous zones so they felt pleasure in new ways.\n\nHell, that was an easy way for me to make money - high-cost, high-reward; pay me a thousand pounds, I'll rewire your brain so that orgasms feel better, or that a specific trigger word will get you hot-and-ready in an instant.\n\nFuck, I could even get people to pay me to change other people - thought that was a bit more... illegitimate. And would cost more.\n\nTen thousand, and I'll make your wife grow horny every time she sees your cock - no more sexless nights!\n\nA hundred thousand, and I'll implant an orgasm-trigger word in your bitch boss's head - oh, your name? Sure. Make it 150,000.\n\nHalf a million and I'll turn your daughter's 18-year-old best friend into your sex slave, and a happy one at that.\n\nThat last one was a little on the darker side, and I felt a sick sort of feeling settle in my stomach after I cast the idea aside. I couldn't, however, deny that it wasn't hot.\n\nWhen I arrived outside Hannah's house, the front door was conveniently open, just off the latch. I went to push it open, but stopped myself. Instead, I tuned in, 'scanning' for who I could feel around me.\n\nAt first, there was that wall of information, but I quickly pulled it back, zoning in on the house before me.\n\nI felt two presences - which told me that Hannah's sister wasn't home. So, I tuned in, feeling them out.\n\nHannah, I could recognise anywhere now. She had a particular... flavour. Not quite an aura, but a certain shape that just felt like her. It was hot, wound tight but unable to snap, with all of that sexual promise building within her.\n\nAnd then, there was the redhead.\n\nA stranger, sure, but not without those familiar things I was well-accustomed to, now. The building arousal, the excitement. Beneath it, though, I enjoyed the fact that I had had nothing to do with this - I was just... listening.\n\nIt was almost like porn, but I knew it was real, happening just upstairs. I was directly inside their heads, feeling the spikes of pleasure and the throb of lust, all of those apparent long-simmered attractions for Hannah finally being let out.\n\nI could almost taste it.\n\nI pushed the door open, and as I was tuned into the stranger's head, I pulled down her cognition just a little - meaning she hopefully wouldn't make much of the sound of movement downstairs.\n\nIt was interesting, as I stayed at the bottom of the stairs, feeling how Hannah and this woman made each other feel. There was, on the stranger's side, a real emotional catharsis - all of those years pining after Hannah finally being acted upon.\n\nThere was, in there, a dash of disbelief which I almost pulled down - before deciding that it would be... more fun if she was aware how unlikely all of this was. To know how lucky she was to be chosen by Hannah, and then by me.\n\nI climbed the steps quietly, keeping my footsteps light to avoid unneeded creaking; as such, by the time I got to the top of the stairs, the uninterrupted moans and gasps that filtered out of Hannah's room easily met my ears.\n\n'You have-'\n\nA wet kiss interrupted her.\n\n'-no idea-'\n\nAnother kiss, and a gasp.\n\n'-how long I've wanted-'\n\nA kiss, and a giggle.\n\n'-to fuck you, Hannah.'\n\nI came up outside the room, the light low inside, and the curve of the room meaning I couldn't see them - nor them me. I tuned into the redhead's mind, all of the sex and want swimming through her.\n\nNot fancying shocking her in any way, I put a limit on her shock, and pulled up her acceptance and open-mindedness in preparation. Then, I walked in.\n\nThe sight before me was, in a way, a little... tame.\n\nHannah was still fully dressed - although, what that meant was she was wearing the jumper, shoes and socks, and nothing else - and the redhead currently kissing her neck, with her hand slipping up Hannah's thigh, was also fully dressed. I thought about the level of pleasure I'd felt from them, and in nothing but a frown seemed to get that question across to Hannah.\n\nThen, Hannah's eyes slipped from mine, to her hand - which was currently beneath the redhead's belt. Hannah pulled her hand out, and the redhead whined a little, her disappointment loud enough to be palpable even if I wasn't tuned in.\n\n'Meet Jamie,' Hannah said, pulling the redhead's attention away from her own neck. She turned, her button-up shirt slightly open at the top, and her shorts slightly skewed from Hannah's... playing.\n\nShe looked at me, an eye of uncertainty betraying what was likely a lack of knowledge that this, or anything like this, was going to happen.\n\n'H-hi,' she said.\n\n'She's called Emerald,' Hannah said. 'Emerald here has wanted to be my little slave for years - but she was never able to pluck up the courage.' Hannah observed her. 'Shame, really. Had I known, I think I would have fucked you years ago.'\n\nI smirked, and found the table in the corner, perching on it and watching with the kind of casual gaze that was only possible when you held all the power. Which, I guessed, I did now. All of the time.\n\n'You want to be a slave?' I asked her. Emerald. Before she answered, I brought up her honesty, giving her the room to admit it to herself.\n\n'I... not to you,' she said, before her eyes widened, realising that she might have insulted me. I was surprised - but not by that. Mostly by how... meek she seemed.\n\nThen, a better word came to mind.\n\nSubmissive.\n\n'For her,' I said, pointing to Hannah. 'You want to be owned by Hannah?' I felt her arousal tick upwards, and pressed a little myself, adding some fire to the fuel. 'To be her slut, the way she is for me?'\n\nI pushed a wave of arousal into her, and for good measure pulled up her climax, too. Emerald sighed, the warmth of it going through her.\n\n'Do you know who I am?' I asked her, and she shook her head, as Hannah petted her softly. 'I am... hypnotic. And, if you wanted, I could make your feel pleasure beyond your wildest dreams - at Hannah's hand.'\n\nTime to test out my new - ahem - business model.\n\nHannah, however, squinted at me. She wondered what I was up to.\n\n'Really?' Emerald asked, looking at Hannah. Hannah's hand quickly gripped her face, and turned her to face me again.\n\n'Really,' I said. 'Hannah belongs to me - but I think she needs someone to take out her... frustrations on. If you want to, Emerald, I can turn you into Hannah's plaything. She will tease you, taste you, and fuck you until you pass out.'\n\nEmerald's wide eyes had glassed over a little, partially from my words, and partially because of the slow pressure I was applying to her pleasure centers as I spoke. Hannah, being the intuitive slut she was, and seeing what I was doing, began to stroke Emerald's thigh with one hand, the other still on Emerald's face - keeping her facing me, but with less intensity as time passed by.\n\nAs Emerald proved she could take orders.\n\n'What... what do I do?' she asked.\n\nI shrugged. 'I need to know you want it,' I said.\n\nShe straightened a little, as Hannah's fingers made their way northward, her legs twitching more with each inch.\n\n'I do,' she said, finally. At that, I leant off her honesty - I had what I needed from her. I hadn't pressured that from her - I'd only made her able to admit it. It's what she wanted, beneath everything else.\n\n'Good,' I said, putting a little pleasure through her as I rewarded her. After all, if I was making Hannah a pet, I didn't want that to mean I was cut out of the picture altogether. 'Hannah - what would you have your pet do?'\n\nIn Emerald, I pulled up her obedience, and her excitement, letting this first interaction with us both go as smoothly as possible. I remembered back to what had happened with Hannah - with sex so quickly turning into me effectively training her - and the fact that it had been effective due to how naturally submissive she was. I hoped this was a repeat of that.\n\n'Emerald,' Hannah said, her voice that low purr that came from her when she was horny. She pulled Emerald's chin towards her with her fingertip, until their mouths were less than an inch from each other. 'If you do this, can you commit?'\n\n'Commit?' Emerald asked.\n\n'Give yourself to me. Totally. Promise to obey your mistress, and her master, without question?'\n\n'Yes-'\n\n'Yes, mistress,' Hannah quickly corrected.\n\nEmerald swallowed. 'Yes, mistress.'\n\n'Good girl,' she purred, pecking a kiss on her lips that made Emerald's eyes flutter. 'Now - to prove your... commitment, you're going to be used,' she said. 'By me - and my master. You will address him as 'Daddy', understood?'\n\nEmerald nodded as Hannah pushed her back, onto her bed, until she was flat on her back. I watched as Emerald's legs fell open, knees up, and Hannah crawled between them, the electricity in the air undeniable.\n\nHannah positioned herself so her hips were above Emerald's face, before looking over her shoulder at me.\n\n'Beg for daddy to fuck you,' she said, as Emerald's hands slid up Hannah's bare legs, so close from the holy land of Hannah's slit sex.\n\nAll she had to do was submit.\n\n'Please,' I heard, her shame hidden from me, beneath Hannah and, I'd imagine, unwilling to move away. 'Please - daddy - fuck me. Make me into a slave for you, please.'\n\nI gave a laugh. 'That was easy,' I said, standing, and undoing my jeans as I approached. 'I barely had to do anything.'\n\nHannah looked at me. 'Really?'\n\nI nodded. 'Really - I think you just have this effect on people, Hannah.' I stood at the edge of the bed, Emerald's open legs inviting me in, and stroked her thighs. She was warm, her skin soft and supple.\n\nHannah considered my words, looking proud of herself, as I pulled out my cock, not bothering to undress any further than that. It was a hot day, and the heat on the room was building quickly, and yet it seemed right to, at least for now, treat this like some quickie.\n\nMy hands found Emerald's hips, tugging at her shorts, and I watched as her legs rose around me, closing and standing straight-up in a pike.\n\n'She's a bit of an athlete,' Hannah said. 'Aren't you, slut?'\n\nAnd, before Emerald had the chance to answer, Hannah lowered herself onto the redhead's face, my mother's jumper hiding the action from my view. Despite that, I was able to hear the wetness of her needy sex atop Emerald's hungry tongue, and I could feel both of their arousal climbing as I stayed tuned in.\n\nI pulled the shorts off, leaving on Emerald's underwear - thin, plain white panties that were adorably lewd considering the damp patch across her wet slit. I tugged the shorts off her feet, and Emerald's legs fell around me, open and wanton.\n\nAs my length dragged across the slick of her sex, I felt her arousal as it slathered me. Her smothered gasps and moans, buried beneath Hannah's rump, whimpered as the head of my cock pressed against her, wet and ready enough that it felt like she was begging for me to be inside her.\n\nOnly, I knew she wasn't. Not really.\n\nIt was true, wasn't it, that while Hannah had gone out and found a slut, someone she knew would be a willing slave to her, Emerald wasn't here for me. The cock pressing against her sex was inconsequential. She was living her sex dream right now, buried beneath Hannah's delicious cunt.\n\nI thought back to the night I'd spent with Shona -- how I had taken the opportunity to live that dream to it's fullest, fucking her in Ali's bed, until all thought left her except the need to cum on my cock. So thoroughly I had fucked her, that nothing since then had come close.\n\nRight now, Emerald was living that night. Seduced by the object of her crush, she was serving Hannah's pleasure. The only difference is that, while I had fucked Shona stupid, Emerald wanted to be fucked. To be taken by Hannah, whatever way was possible.\n\nWhich gave me an idea.\n\nFor the moment, I pulled Emerald's cognition, suspicion, and awareness down to 10. Beneath Hannah, she went just about limp.\n\n'Don't worry,' I said as Hannah turned to look at me. 'I just wanted to talk to you. Suggest something.'\n\n'What?' she asked, obviously annoyed I had interrupted her rhythm -- not that she would be able climax anyway.\n\n'She's here for you -- not me,' I said. 'So, I wanted to know how much power you want over her.'",
        "Hannah, dragging her pussy lips against Emerald's drooling tongue, considered this for a moment. 'Power...'\n\n'I could make her unable to cum without your permission,' I said. 'Or, your presence. I did that to you, remember -- only able to cum under certain conditions. I could make her unable to deny your orders. Make her wet at the mention of your name, or sight of your face. She would be...'\n\n'Mine,' Hannah said, before looking over her shoulder at me. 'How much of that have you done to me?'\n\nI shrugged. 'Right now? Just the orgasm control. Why? Do you want to be wet at the sight of me? A desperate, dripping slut in my presence?'\n\nHer humping picked up pace. 'Hmm... maybe...'\n\n'I'm going to wake her up,' I said. 'Let me know what you want.'\n\n'All of it,' she said as I tuned into Emerald, letting go of those barriers. Within seconds, she was moving again, her hands going from the bedsheets to Hannah's butt, gripping and slipping beneath the jumper, nails dragging and legs stretching around her. My cock, still stationed at her entrance, slid against her as she bucked, and while I was tuned into her I felt her climax roll over her.\n\nHoly shit.\n\nShe just came from being made unable to think.\n\nI pulled her honesty up, and reached forwards, grabbing Hannah's arm. In a quick motion, she got the intention and slid downward, then off Emerald's side, leaving her face-up on the bed, panting and wet in the face, looking a little... spaced out.\n\n'Did you just cum?' I asked.\n\nEmerald nodded. 'Holy shit...' her voice was soft, breathless.\n\n'What caused it?' I asked, pushing a little on her mind, looking for answers.\n\n'I don't... I don't know -- it was like, all of a sudden, there was nothing -- like I wasn't a person any more, you know? I dunno, maybe that sounds strange but... it was just sex. I was sex. Something for you to ride,' she slurred, looking at Hannah. 'It was like being high and getting railed, only I could barely think -- and I wasn't even being fucked yet.'\n\nShe looked down at me. 'Did you... hypnotise me?'\n\nI thought about it, and figured it was best to let her think that was the case. 'Yes. I'm glad you liked it.'\n\n'I loved it,' she said, flopping back. Then, sitting up again, 'Can you do it again? Maybe... maybe while you...'\n\nHer eyes flitted to my cock, red and rock-hard, the length pressed against her slit. I got the message. She didn't just want to be fucked stupid -- she wanted to be braindead first. This was... new to me.\n\nI looked to Hannah, who raised an eye.\n\n'Sounds like subspace,' she said. 'But, like, fucked.'\n\nEmerald looked up at us. 'I've had it before, but never like that -- when everything just melts away while you're used. I can't... please?'\n\n'First,' I said, turning back to Emerald as Hannah came to my side, looming over Emerald with me. 'Some instructions. Look at me,' I said, and Emerald peered down at me, catching her breath. I tuned in, pressing these instructions into her mind, like I had so many times before, now. 'You may only cum from permission from me, or your mistress Hannah. When you see Hannah, or at the mention of her name, you will be desperate for sex and you will become wet and horny. You will obey orders from Hannah, and myself, in any circumstances that will not result in the unreasonable harm of anyone, including yourself. Do you accept this, Emerald?'\n\nShe nodded. 'I do, sir.'\n\n'Good girl,' Hannah said, her hand sliding down my back, and into the elastic of my half-out boxers, seemingly happy to just cup my butt cheek as we stood together, over our new conquest.\n\n'In private,' I said, 'you will respond to 'Slave', and 'Slut', and will not react to your own name. Understood, slave?'\n\nThe slave nodded. 'Yes, sir.'\n\nI looked at Hannah. 'Anything to add?'\n\n'Make her cum when I tell her to -- without exception.'\n\nI smiled. 'Slave -- you will cum on instruction from your mistress. Understood?'\n\n'Understood,' she gasped.\n\nHannah, grinning like a Cheshire cat, gave me a quick kiss, removed her hand from my tush, and crawled onto the bed, hanging over Emerald like a predator. I listened, as Hannah moved in close, rounding the end of the bed a little so I could see the redhead's face, tense with anticipation, as Hannah loomed over her naked prey, her legs straddling her hips, hands taking Emerald's wrists and pinning them over her head.\n\nThen, in the softest voice, Hannah whispered into her ear, 'Cum.'\n\nIt was instant.\n\nThe redhead seized up, her hands gripping the bed as her eyes rolled back, mouth open in a croak that caught in her throat, her body shuddering under Hannah's untouching form. She shook, writhing in pleasure, until the wave broke - she let out a sharp, high moan that rolled through her as she came, the power shattering her.\n\n'Fuck! Fuck - God!' she yelled, as Hannah sat up, watching her new slave as her mind broke to the pleasure of the forced, psychologically-pressured orgasm.\n\nEmerald relaxed, panting as she shifted, that radiating energy pulsing through her, making it impossible for her to stay still. Her legs, bare and long, dragged against the bedsheets, before falling flat, open beneath Hannah's hips.\n\nHannah looked at me, and I recognised the look in her eye - that rush, the sudden realisation of power... it was what had happened to me, not too long ago. It was infectious, and it was strong, and I knew Hannah would succumb to it. I knew the redhead was going to like it, too.\n\n'Cum,' Hannah ordered, and I watched as the redhead wailed, her body betraying her instantly, her climax ripping through her, a storm trapped inside her nerves.\n\n'Ffffuuuuuuck!!' she screamed, her eyes open but glassy, unfocused in her head as her arms came up at Hannah, slapping at her, grabbing that jumper, unable to decide between wanting more, or wanting it to stop.\n\n'That's it, baby,' Hannah cooed, the energy of the room starting to bleed into me, too. After all, Emerald might belong to Hannah, but Hannah was still mine.\n\nSo, I pulled away from the thrashing redhead, and line up behind Hannah's back, my legs joining hers in pinning the redhead in place.\n\nBeneath us, she squirmed in the aftershocks of her orgasm, and Hannah looked over her shoulder at me as I settled into place.\n\n'Hey,' I smiled as I pulled up the edge of the thick jumper, feeling her soft flesh beneath, hot and waiting for attention.\n\n'Hi, daddy,' she mewled as my cock slapped against her cheek, my lips pecking her neck as I held my length, lining myself up against her arse. I slid from her cheek, the head of my cock finding the wet of her sex, and slid between her lips.\n\n'Cum,' Hannah ordered again, sending the redhead into a third frenzy of merciless pleasure - just as I slid into her slick cunt, filling her in one movement.\n\nHannah, in her inability to climax, moaned in painful pleasure as I fucked her over her new slave, slow and deep; I pushed her forwards, until she was nose-to-nose with the whimpering redhead, their lips inevitably meeting in indulgent, moan-filled kisses.\n\nHannah's pussy, well-moulded by my cock by now, was perfect - warm and wet and inviting. I tugged up the jumper just enough to appreciate the shape of her upturned arse, spanking her as I fucked her.\n\n'Ah!' Hannah yelped in appreciation, looking over her shoulder, her eyes alight.\n\n'Having fun?' I asked.\n\nShe nodded, hair falling over her features as I fucked her.\n\n'Wanna cum?'\n\nShe nodded, eyes rolling back.\n\n'Too bad,' I smiled, speeding up my thrusts into. I spanked her again, and she hissed.\n\n'FUCK!' she wailed, the redhead beneath her coming back to her senses. Her hands tugged clumsily at Hannah's jumper, pulling it up as Hannah was fucked in a steady rhythm over her.\n\nHannah lifted herself up a little, and I watched with rapt attention from behind as she pulled off her only real piece of clothing. The revelation of those perfect tits, even from behind, was something to behold, their bouncing shape visible from behind. And, that's not even to mention how the redhead's eyes visibly dilated at the sight of her long-time crush's impossible tits, firm and bouncing and capped by pert pink nipples.\n\nThe redhead saw them, too, and sat up, taking a nipple into her mouth. Beneath me, I felt the redhead shift, her fingers slipping against my cock as she played with Hannah's clit.\n\n'Oh God,' Hannah moaned, unable to complain about the perfect fucking she was getting - and yet unable to cum.\n\nI tuned in, feeling that glorious frustration within her - the way her arousal climbed and crested, unable to go anywhere, just building and building and building.\n\n'Can't - can't - can't think,' she mumbled into the redhead's hair as her tits were sucked, her pussy stretched, her clit teased, her arse spanked - it was a blurry mix of sensations that swam around inside her head, frustrating beyond belief.\n\nAnd, I knew, I would never live it down if I gave in - instead, when I wanted so much to see how she would crack in an orgasm from this, I would keep her on the edge, hanging by a thread so thin but impossibly strong.\n\nI gripped her hair in my hand, fucking her the way she loved it - rough and deep, faster with each stroke, the wet slaps of my balls against her sex, interupted only by Emerald's visiting fingers, pounding a rhythm of lust into us all.\n\nSlap-slap-slap-slap.\n\nHannah moaned and pleaded with each thrust, as Emerald's lips peppered her tits with kisses, travelling from one perfect breast to the other, one rock-hard nipple to the other, before licking and nibbling and sucking like her life depended on it.\n\nI tuned into Hannah, and was amused to realise she was right - her cognition, naturally, was slipping; it was like, as the pleasure built inside her head, any room for thinking was being squeezed out.\n\nWe were literally fucking her stupid.\n\n'Please - please!' she gasped, but I just pulled her hair up, lifting her against me. The angle pressed the soft of her arse into my hips, and her poor nipple slipped from between Emerald's teeth on the way up, making Hannah yelp.\n\nInto her ear, moaning as her slick cunt gripped me in desperate attempts to find more pleasure somewhere, I whispered words to assert my dominance over her.\n\n'You do not cum until I say so,' I said. Hannah, whimpering, on the verge of tears, nodded. I let go of her hair, and she dropped onto Emerald, who wrapped her arms around Hannah's back.\n\n'Cum,' Hannah ordered, apparently showing off that the only thoughts she was able to form in that moment were around pleasure. I watched as, beneath Hannah's writhing form, desperate to cum by any means, Emerald's eyes rolled back, a fourth orgasm slamming into her.\n\n'Cum,' I heard again, as Hannah growled it into Emerald's ear.\n\nThe redhead moaned, mouth open in wordless screams, trapped beneath her mistress's perfect body, those firm tits pinning her to the bed.\n\n'Cum,' Hannah ordered again, and Emerald shrieked, hands flexing and clenching, legs shaking around us both as orgasm after orgasm forced its way through her poor body, pleasure-centers overloading in blissful fireworks.\n\nI pressed my thumb into Hannah's upturned arsehole as I watched, feeling her cunt tighten with the new entry, her own enjoyment of being in such cruel, unchallenged control of Emerald's pleasure overtaking her.\n\n'Cum! Cum! CUM!'\n\nWhen Emerald went limp, it became too much - too similar to fucking Ali and Shona, when I had just about turned their brains off, turning them into mindless fuck dolls - those fluttering eyes, lips wide open, fingers twitching as her body was unable to process thought any more. There was nothing in there but sex.\n\nAnd, of course, that's when I came.\n\nI slammed myself deep into Hannah, and filled her, feeling the multiple strong surges course through me, relief and pleasure and shuddering power shaking through me as I poured cum into her wet, unsatisfied pussy.\n\n'No!' Hannah yelped, turning to look at me, desperation in her eyes as she realised what had happened - Emerald was out, I was finished.\n\nIt was over.\n\nAnd she was still so close.\n\nIt was... almost pitiable.\n\nI couldn't wait to recover, and watch her try to pry an orgasm from herself, using me, again.\n\nI slid off the bed, stepping out from behind her, and came up next to Emerald. Tuning in, I checked that she was okay - her body was coming back to regular levels, but there was a certain kind of exhaustion that had come over her that had likely shorted her out.\n\n'Maybe that's enough for her, yeah?' I said, as Hannah finger-fucked herself to no end.\n\n'What? But... but if I can't cum, she should. She's my pet.'\n\nI frowned. 'Yes, but you don't want to hurt her.'\n\nHannah smiled. 'She's not hurt,' she said. 'Emerald - cum.'\n\nEmerald's body, despite being out cold, shuddered, her legs shifting, muscles clenching and tensing, her back arching as an orgasm ripped through her unconscious form.\n\n'Hannah - no more speaking,' I said, her obedience up to 100%. 'Not until I tell you otherwise.'\n\nShe opened her mouth to argue, but nothing came out. She looked at me, gaping and gasping.\n\nThen, I saw that familiar flare of arousal - I had displayed a new form of dominance over her.\n\n'Remember - you're my pet. What I say goes.'\n\nShe nodded, as I started to dress.\n\n'Clean her up - make sure she's comfortable. Then, make us all lunch,' I said. 'Soon, that'll be Emerald's job - but because of you, we can't have that. This is your punishment, understand?'\n\nShe nodded, and I pulled my underwear on. I watched as Hannah desperately started to make the bed around Emerald, getting her comfortable and cozied up. It was... oddly intimate. Naked, slick with sweat, Hannah made sure her orgasm-exhausted fuck pet was comfortable, before going to get her own clothes.\n\n'What are you doing?' I asked, and she froze. 'I said make lunch - I didn't say get dressed.'\n\nShe looked at me, a glimmer in her eyes, and for a moment I thought she might fight. Get angry. Argue, in some way.\n\nThen, she nodded, and left the room, wearing nothing but my socks.\n\n* * * * *\n\nA huge thank-you to:\n\nObi\n\nMannie_RSF\n\nPeer Henze\n\nSindre Bj\u00f8rnhjell\n\nSimon Haynes\n\nYour support can never be overstated, and will never go under appreciated &lt;3"
    ],
    "authorname": "Danni_Iridescent",
    "tags": [
        "group sex",
        "psychic",
        "mind writing",
        "sex slave",
        "teenager",
        "orgasm control",
        "ffm",
        "braindead",
        "redhead"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/mind-writing-pt-08-emerald"
}