{
    "title": "Seven Days of Service - Day 07",
    "pages": [
        "I awoke to the subtle smell of sex, and a hint of the soft perfume that Cathy had worn wafting around me. Then I remembered our adventures of yesterday, and acknowledged my satisfaction by sprouting a very intense erection. As I reached down to relieve some of this sexual pressure, two things happened. \n\nSuddenly, in addition to the soft scent of Cathy about me, I could smell something else; the combined smells of coffee and bacon\u2014quite strong-now surrounding me. The second thing was that I suddenly remembered that Cathy had not left for her apartment last night\u2014she'd stayed here with me. \n\nI quickly glanced to the other side of my bed, but it was empty. Just then, I heard the sound of bare feet padding their way towards my bedroom. I looked at the doorway in anticipation and shortly I saw Cathy plodding inside with a tray containing what appeared to be a wonderful breakfast spread. \n\nDespite the wonderful smells coming from that tray, I knew what I wanted\u2014no, needed\u2014right now. \n\nAs she stopped at the head of the bed, she placed the tray on the bed stand and straightened in front of me, hands behind her back, and her feet apart. She was completely naked, except for the collar around her neck and her eyes were watching my face, very intently. I thought I saw a little uncertainty, but it might just have been a reflection of mine. \n\nI rolled over and sat up on the side of the bed. Reaching out to her pussy once more, I again scratched my way through her pubes, listening to her begin to moan. Using this moment to get a little further into her head, I asked, \"Cathy, before me, when was the last time you actually had sex with anyone? I expect the truth from you at all times during your service period-just tell me when, spare me the details.\" \n\nI had to find out why she'd only offered token resistance to my intrusions on her body these past few days. I'd endured a couple of years of venomous sniping and verbal attacks from her, which she led me to believe was calculated to bring me to bay, which now didn't make sense. \n\nEven though I'd won the marketing contest, she'd had numerous opportunities to screw up my little bondage scenario, but aside from token gestures, she hadn't. I sure as hell knew I wasn't as clever about my little scheme as I'd needed to be to actually pull it off. As I looked at her now, I could see her trying to think of an answer that wouldn't expose her too much. To distract her, I continued to fondle her sex, working my fingers through her vaginal lips, collecting more of her wonderful juices. \n\nFinally, she shook her head and began, \"About a year before I joined the company, I ran into my old boyfriend from HR, and we . . . uhm . . . had a farewell . . . tryst.\" She had a wonderfully red face as she finished that brief explanation. Following up she continued, \"It only reminded me why we'd broken up.\" \n\nFour years, I thought. Shit! That was about the same length of time I'd had since my last real piece of ass. Boy, weren't we a pair, I thought. \n\n\"Why the long dry spell, Cathy?\" I asked. \"You are an absolutely beautiful woman. A little change in attitude and you could have had the pick of the corporate 'litter', actually, the pick of any litter.\" \n\nI stopped running my fingers through her sex and absent-mindedly brought my hand to my mouth, cleaning her savory juices from my fingers with my tongue. Glancing up, I saw her staring at me, lips trembling and an odd look in her eyes. \n\n\"Well?\" I pressed. \n\nI watched her face as tears began running down her cheeks. Very complex girl indeed, I decided. \n\nI stood, leaned over her and kissed her forehead once more, and shame on me, I gave in to my baser instincts. Reaching up to her chest, I began to massage her tits deeply with my hands and it seemed to have a calming effect on her. With the exception of my cock, it had a calming effect on me as well, I noted. \n\nShe began, \"My father had found out about my relationship with him and accused me of whoring myself to get ahead in this business.\" She continued sobbing, but added, \"I never wanted him to ever believe that I'd do that, ever!\" \n\nI thought about that for a few moments, and then asked her, \"Why now...why me?\" \n\nCollecting herself, she replied, almost logically, \"'A deal is a deal,' and my father taught me the importance of honoring a business deal. Without that commitment, my word wouldn't be worth anything in the business world. My word has to be my bond.\" \n\nShe was now intently watching the movement of my hands on her breasts as I took her nipples between my thumb and forefingers and pinched them very lightly. Her explanation had been cut off by the deep moans now coming from her throat, moans that got louder as I increased the pressure of my fingers on her nipples. \n\nCatch-22, I thought. Her father had inadvertently set her up for this whole thing, unintentionally. She couldn't engage in any kind of serious social activity without being accused of whoring herself for her career, and she couldn't renege on any business deal that she'd committed to without getting flack as someone who couldn't keep her word. I was simply reaping the benefits of her conflict. \n\nI know I should have felt badly about taking advantage of this situation, but I didn't. However, I was saddened to realize that it was her commitment to the Deal that was keeping her under my control. Seeing that, I became more determined than ever to extract as much pleasure out of this relationship as I could before it ended this evening. \n\nThe breakfast could wait for now as my cock had hardened to an incredibly hard, angry staff, demanding relief. That and the sense that what I now had was going to disappear at night's end made me decide to take a radical course of action. \n\nLetting go of her breasts, I instructed her to return to the living room and bring back the instruments that I'd been using throughout the week for her torment. I sat on the bedside once more, my cock poking a hole in the space before me. In a couple of minutes she returned and placed the items on the bed next to me. Once she'd done that, she stepped back once more, put her arms behind her and spread her legs before me. \n\nShe had my attention, that's for sure. Looking down at the tools next to me, I told her, \"Cathy, pick one of those items for me to use on you. 'None' is not one of the options.\" \n\nAs she shivered briefly, I saw many things flashing through her eyes, probably one of them whether she should allow me to continue with this torture. She looked at the collection for a few moments and, predictably, she pointed to the one that involved no real sensory stress and allowed her to see what I was up to. \n\nPicking up the handcuffs, I got up and moved around to her back, and firmly secured her arms behind her. This would certainly be a test of her sense of judgment, I thought. Evading one form of torment by selecting another only exposes the chooser to a different type of torment. \n\n\"Tell me now, which item do you choose for me to use on you next?\" I asked her. Looking about her, she now realized that I had her cornered in an escalating trap of sexual torment. I could see thoughts rushing through her eyes again as she sought to figure a way out of her dilemma. As she was thinking, I snapped the silver chain into her collar, establishing my authority over her again. \n\nI had applied those instruments incrementally, in an order that I'd found would produce the maximum affect on her senses. Now she was able to control the sequence of her torment, but was she able to make the choices best able to bring her the most pleasure? \n\nPulling the chain downwards, I brought her to her knees in front of me. My cock was still stabbing an imaginary adversary in mid-air in front of her face and since the blindfold wasn't around her face, she couldn't help but notice my arousal. As a matter of fact, it seemed that she couldn't take her eyes off it at all. \n\nShe had been quiet for a little while, obviously trying to figure a way out of her dilemma, so I said to her, \"I have an itch that needs attending to Cathy, while you are making up your mind.\" Whether she thought she could distract me from her torment or not, she moved in closer to my lap and looked up at me for further direction. \n\nGlancing back and forth between my cock and my face, she finally lowered her head and placed her lips on the tender, fiery head, and kissed it gently. Involuntarily it twitched against her face and she opened her lips very slowly, taking just the tip of my cock into her mouth. This was fucking maddening, I thought, but I waited to see where she was going with her 'service' efforts right now. \n\nAs her lovely lips surrounded more and more of my cock, I could feel her tongue exploring the shaft tenderly, almost lovingly. The soft suction and the wet warmth of her mouth began to cause my balls to ache with arousal. Every now and then she'd take her mouth off my cock altogether, allowing the cool air in the room to heighten the sensual contrast of her oral warmth on it. She'd then move lower to apply her oral massage to my balls, pulling little folds of my skin into her mouth, sucking on them and moving on. \n\nWatching her eyes as she ministered to my cock was probably a mistake I thought, as the tightening in my groin began to increase. I really wanted this to last as long as possible and it looked like she was rushing me to the finish. She was studying every inch of my cock and balls with her beautiful eyes and for just a moment, it appeared that she was treating my groin as a shrine of sorts. \n\nI know, weird thoughts, but it was the impression I was getting as she worked over my cock and balls. Maybe the fact that she continuously rubbed her face against my groin between the sucking efforts, while groaning over and over had something to do with that feeling, but my appreciation for her efforts was about to become evident. \n\nJust as I was about to reach out to pull her head off my cock, still worrying that she might not appreciate another surprise deposit in her mouth, she began that little head bobble that had ambushed me the first time she sucked me off and pushed her face into my pubic hair, choking a bit on the way. Sucking even harder, she took everything that I had and probably a bit more into her mouth. \n\nThis time however, she pulled back, looked up at my face and opened her mouth. As I was trying to catch my breath, looking into her face, I saw that she'd kept my discharge in her mouth\u2014sitting on her tongue\u2014and once she'd noticed that I saw it, she closed her mouth and swallowed. Dropping her head back onto my lap, she took my now reawakening cock into her mouth, cleaned the last few drops off the head, and then laid her head on my lap. \n\nI couldn't tell you right then if I had the energy to take this to the next level or not, but her finish on my cock had set me up for the recovery I needed to continue. This woman was bringing out things that I never knew I was capable of and I didn't know if I could ever put this genie back into the bottle! \n\nAll I could do for a few minutes was to gently caress the side of her face as she softly nuzzled it into my crotch. I was already captivated by my pet, and I had a hard time separating her pleasure from mine. \n\nFinally, I raised her face up to mine and asked her if she'd made up her mind on the next object for my use. Her eyes were still a bit glazed over, but she was wired now. I could tell by the swollen lips and the red blush that started at her tits and rose into her cheeks. I was almost ready to rock and roll again, too. \n\nShe whispered quietly, \"The whip, Sir.\" \n\nI could see that she'd figured out the logical distribution of the instruments that I'd used on her, so far. I reached across the bed to the flogger and picked it up, hefting the weight of it in my hand. Her eyes followed me closely and suddenly I could smell the musky aroma of her arousal drifting up from between her thighs. \n\n\"You belong to me, Cathy,\" I told her. \"All of you. You know that, don't you?\" I watched her face as a couple of tears ran down her cheeks. \n\nBlinking at me a couple of times, she replied softly, \"Yes Sir.\" No hesitation, no resistance. \n\n\"Stand up, my pet,\" I told her. \n\nShe did as I'd told her, parting her legs in front of me, by reflex I supposed. And by reflex I reacted. Before I knew it, my hand was already running through her vaginal lips, automatically collecting the nectar that helped to keep my head on straight. Her pussy was absolutely soaked, her eyes closed, lips still swollen, and the red blush still evident across her chest and into her face. \n\nI couldn't remember any other time in my life where I was more drawn to a woman\u2014an enemy at that\u2014but I could probably attribute that feeling to four years of living in an emotional cave. The personal tidbits that I'd managed to tease out of Cathy during this whole service period seemed to indicate that she was reacting the way she was because of her own emotional interpretation of her father's expectation of her. \n\nAs I snapped the flogger across her left nipple, she snapped her eyes open with a yelp of surprise. She could watch me torture her now, and her level of anticipation was going to take her to another plateau as I snapped it across her right nipple. Flinching with each blow, she alternately watched my face, and the end of the flogger as it skipped across her skin. I wasn't doing this for her punishment any more\u2014it was for her ultimate pleasure, and mine. \n\nAgain, I worked the flogger across all of the exposed skin on her body that I could reach under her neck, and by the time I finished, a subtle red glow seemed to emanate from her entire body. I had snapped the flogger into her open pussy a few times, just to get the blood pumping to the surface. Whenever her cries got a little too intense, I moved in to chew on her lips with my mouth, shooting my tongue as far as I could towards the back of her throat. \n\nShe gave as much as she got, I'll give her that. Surprising me, she didn't pull away from my harsh treatment of her body, but instead pressed against me. Sucking my tongue whenever I invaded her mouth, she groaned into mine, causing an instant reaction in my cock. \n\nI stopped\u2014casting my gaze over the effect that I'd had on her\u2014and feeling the heat coming off her tormented skin. She was reacting to the horse hair as I knew she would, twitching and rubbing those parts of her body together that she could reach, trying to appease the itching and prickly sensations that would soon consume her. It wouldn't be long now, I thought, when I'd hear her say those words that would nudge me further down to the dark side of this game. \n\nObviously she didn't need the blindfold, because her eyes were clenched tightly closed and I could see a slight sheen of sweat beginning to appear on her face, even as she was trembling. Either she was trying to extend the extreme sensations running through her sensory system right now, or she was trying to defy the torment that I'd inflicted on her. It didn't really matter which, I knew she would give in to the demands of her body sooner, rather than later. \n\nMy own body was beginning to reach a point of demanding more relief for myself, so I instructed Cathy to kneel on the bed. Assisting her, I took the liberty of massaging her tits a bit, since I knew she was feeling the supersensitive effects of the flogger by now. Once she was in place, kneeling upright, I picked up the nipple clamps and brought them up in front of her face. \n\n\"Are you ready for these, Cathy?\" I asked her. \n\nAfter a moment's hesitation, she answered, \"Yes, Sir.\" \n\nAs she closed her eyes once more, I fondled her left breast then applied the clamp to her nipple, just a bit tighter than before. She sucked in her breath quickly and frowned, but allowed herself to relax soon afterwards. I repeated the same to her right breast, receiving the same response. The chain between her breasts swung slowly, drawing her nipples down slightly. \n\nWithout the blindfold, she could see clearly the effect she was having on me, but the terms of the contest still allowed me to be in charge of the conditions of service. The breakfast was completely forgotten by now and the challenge to complete our \"exercise\" and survive it, was in full swing. Despite the opposite roles we were filling, we were still competing with each other to bring our adversary to bay. \n\nMy goal was to bring her to a more professional level of attitude\u2014hers to simply get to the end of the service period with her dignity intact. Or so we both thought. What neither of us realized was that the game was taking on a life of its own. \n\nI joined her on the bed now and lay back against the headboard next to her kneeling figure, looking into her face. This would be something a little bit different from what we'd done before and I wanted to make sure that I was able to take full advantage of the terms of our service agreement right now. My cock was more than ready for this challenge and I reached over and pulled her over onto myself, her knees straddling my hips. \n\nLooking into her face, I told her that I now wanted her to fuck me\u2014but I wanted her to do it while looking directly into my eyes, without the aid of her hands. It couldn't get much more personal than this, I thought. \n\nShe still hadn't had an opportunity to rub the intense sensations out of her screaming skin, so she didn't take too long to comply. Shifting her hips trying to find my cock, she brushed the head of it a few times, until I reached between our legs and aimed it into her body. Once she felt the pressure, Cathy captured the tip of it with her pussy, and looking directly into my eyes, slowly lowered herself onto it until she bottomed out at her cervix. \n\nStill keeping her eyes glued to mine, she began to move her hips in a slow, rotating motion, causing my cock to touch not only the bottom of her pussy, but rub tightly against the sides of her sheath as well. The sight of her breasts, captured with the nipple clamps, swaying in front of my eyes compelled me to touch the objects of my desire, even as an adjunct to her already aroused condition. \n\nReaching up, I grasped her breasts by the base in my hands and began to massage them under the chain connecting them. I loved to feel her breasts I realized, an addiction that was almost as compelling as tasting her body. A mental image of the La Brea Tar Pits slipped into my mind as I continued to fondle her. Me, the predator, taking full advantage of Cathy's 'helpless' situation, then being sucked into a hedonistic trap from which neither of us could return. \n\nSliding my hands around to her back, I pulled her into my chest, allowing her head to fall onto my shoulder. I knew that the rest of her body was crying for relief as well as those areas I'd already touched, so I massaged her arms and rubbed the parts of her back that I could reach. As I did so, her moaning increased, and the effect that it had on my cock caused me to pull her torso harder onto my groin. \n\nAs she nuzzled into my neck, I lowered my hands onto her ass cheeks, massaging them as she moved around on my cock. Slipping my hand into the crack of her ass, I found her little anus and using some of our combined juices, slipped my finger deep into her body. She shuddered and almost as though electrified, clamped her cunt tightly around my cock, and her rectum around my finger. \n\nI could feel my moving cock through the tissue separating her ass from her vagina and I can't tell you the intensity of the sexual rush that ran through my body just then. Reaching up with my other hand, I pulled her head off my shoulder and brought her lips to mine, chewing on them with my mouth, then spearing my tongue into the back of her throat. She responded in kind, and we battled over control of our kiss\u2014a battle in which there could be no loser. ",
        "Removing my finger from her ass, I received a growl against my lips from my pet, which I interpreted as either relief or arousal, but it had a familiar effect on my cock. Breaking the kiss, I gently pushed her back away from my chest a bit, tugged on the chain that imprisoned her nipples, and watched as her eyes closed in what could only be described as arousal to the extreme. She had never stopped groaning; nor did she ever stop moving onto my cock. \n\nI watched as my cock slowly split her pussy lips, pushing them into her when she dropped onto my cock, and pulling them apart as she rose up. I continued to watch for a few strokes then looked up into Cathy's face once more. She too was staring at that point where we were joined, and she'd apparently forgotten my instructions about looking into my eyes as she fucked me. \n\nRaising my hand, I brought it down sharply on her ass, shocking her into looking back into my face. Once our eyes locked, I smacked her again on her ass, hard. Jerking her body down onto my cock sharply, I began to sense the flutter of her orgasm working its way across her abdomen and hips in that now familiar sign that she was preparing to join me on another erotic rendezvous. \n\nI was nearing the edge of my own limits of sensual endurance, so I decided to perform the finishing touch to our little tryst\u2014I reached up and removed the nipple clips from her breasts. As expected, she reacted to the sudden restoration of blood flow to her nipples with a very loud squeal of relief, and her abdomen began the jerking that warned me to prepare for her impending explosion. \n\nAs I began my own approach to the summit, I grasped a breast in each hand and squeezed firmly\u2014massaging her throughout our journey to sexual bliss. I'd never reached this level of pleasure with anyone before in my entire life and I emptied myself into her body in deep throbbing spasms, matching hers, grinding onto my groin in steady jerks. \n\nThe blush of completion gradually seeped into our bodies\u2014nearly at the same time\u2014and I pulled her into my body tightly. Her face was damp with the sweat of sexual exertion and she rested her head on my shoulder, face turned into my neck. She licked the side of my neck softly, taking little nips of my skin as she groaned in relief. \n\nI didn't want to let her go at that moment, reminding myself that this evening would be the end of our delicious game. Finally we broke apart, equally shaken by the intense pleasures that we'd just shared. Reaching behind her as she sat on my lap, I unsnapped the cuffs, allowing her to bring her hands around to the front of her body. \n\nSliding them up my chest she reached behind my neck and pulled me closer. I felt her shoulders begin to shake and soon realized that she'd begun crying, her tears running down my chest. I rubbed one hand up and down her back and with the other I smoothed her hair. \n\n\"It's all right Cathy,\" I whispered in her ear. \"It'll be over this evening.\" I was finally feeling some guilt for putting her through all this, but I suspected my humiliation at her hands would probably have been as bad, if not worse. \n\nMy cock had finally slipped from her body, so I helped her off my waist and moved both of us to stand by the side of the bed. Reaching down for a couple of the towels I'd left on the stand the night before, just for this purpose, I helped her clean the evidence of our recent joust from her body and mine, and reached up to remove her collar. \n\nSuddenly she became re-energized and blocked my access to the collar, a frightened look in her eyes. \n\n\"Cathy, don't worry about our deal,\" I told her. \"The deal's on until the stroke of midnight tonight, but I need to take the collar off temporarily for our trip to the pool.\" \n\nShe just stood in front of me with a completely confused look on her face, breathing heavily. As I reached for the collar this time, she allowed me to remove it, but kept her eyes on it as I placed it on the nightstand. Then, smiling at her, I said, \"Ten laps in the pool\u2014loser buys the drinks at the Harbor Bar tonight.\" \n\nThe frown on her face disappeared in a flash and she bolted out the bedroom door before I could gather my thoughts. Apparently this game hadn't dampened her competitive spirit a whole lot. \n\nBy the time I reached my patio, I heard the sound of her diving into the pool, and the subsequent splashing that told me that she was already into her first lap. Leaping in behind her, I began my own strong crawling strokes, striving to catch up. For the first couple of laps, I passed her going the other way, catching just a glimpse of her breast as her arm rose out of the water, before plunging it in again to pull herself forward. She didn't seem to be holding back a bit, I noted. \n\nBy the eighth lap, it became apparent that although I was slowly closing the gap on her, she would win unless I went into a sprint. Pulling all my remaining energy together\u2014which wasn't much after our bedroom acrobatics\u2014I let out a loud grunt and began to pull with all my might. \n\nI thought that I'd heard an echo of my grunt when I plowed in and glancing up I saw that Cathy had gone into her own sprint just after mine. All I could glimpse between strokes were the cheeks of her beautiful ass alternately clenching and relaxing as she torpedoed through the water. A fatal distraction, I discovered. As I reached the end of the pool on the last lap, Cathy was already backing into the side of the pool, her legs apart, with her hands behind her back. \n\nAlthough I didn't see any sign of a smile or smirk on her face when I stood up in front of her, I knew it was there, just beneath the skin. We simply stood there for a few moments, naked, breathing hard into each other's face. I leaned over and kissed her once more on the forehead, telling her that it was time to get out and get dried off. \n\nOnce dried off, I asked her to retrieve the breakfast that she'd prepared for me and do what she could to recover it for our meal. While she wandered off to do that, I returned to the bedroom and dressed once more in a t-shirt and shorts. \n\nReturning to the living room, I retrieved the project package that Cathy had brought yesterday and sat down at the table to examine the contents. She had made copious notes regarding the various aspects of the project details and had created a loose outline of how she and her crew might facilitate the management of the work. Curiously enough, she'd also created a table consisting of names of her project leaders and space beneath to accommodate any comments or input they might provide to the process. A week ago, she wouldn't have given them the opportunity of contributing ideas or suggestions to the work at hand. I was encouraged. \n\nAs she walked back into the dining room, she laid out the recovered breakfast for us and stood before me, her hands at her neck. A strange posture I thought, but then I realized that I had left her collar in the bedroom. Getting up from the table I went to the bedroom and retrieved the collar. Returning to the dining room, I again attached the collar around her neck, assuring her that I'd give her the opportunity to complete the terms of service for the contest. \n\nWe finished the meal and then directed our attention to the project details that she'd be discussing with Robert later that afternoon and with her project team tomorrow. She was sharp, very sharp, and the fact that I'd noted her including her project leadership in her potential assessment of the work process made me a bit more confident that she'd learned something this past week. \n\nIt was nearing noon by the time we'd finished hashing out more details and time that we thought about getting ready for the meeting later that afternoon. Cathy informed me that she'd not brought suitable clothes over yesterday, thinking that she'd be returning to her own apartment last night. Instead, of course, she'd remained with me, so she'd have to return to pick up something to wear for the meeting. \n\nNot knowing how long her meeting with Robert would be, and in hopes of taking her out later on to celebrate her survival of the contest's service period, I suggested that I follow her back to her apartment, where she could get dressed for the occasion, and then take her in my car to the bar. She agreed. I returned to my bedroom and dressed. \n\nOnce at her apartment, she invited me in and gave me a quick tour of her little world. It was neat, very neat, but in a confined way, as if she didn't want to make herself too comfortable off the job. Why she picked such a Spartan setup was beyond me, but I suspect it had something to do with her beloved father. Oh well. \n\nI mentioned that the apartment seemed a bit cramped for her and she replied, \"I know. My lease is up in a few weeks, and I'm looking for something a bit bigger.\" I just nodded my head and continued my observation of the surroundings. \n\nAs she was changing clothes in her bedroom, I looked around the living area a bit. Decorations were sparse, but tasteful. Wandering over to the credenza set up against the wall leading into the kitchen, I noticed several picture frames containing what had to be typical representatives of her family tree. Looking closer, I saw her as a young girl, flanked by a couple who had to be her mother and father. Her mother was a lovely, gentle looking woman gazing down at her only child, a cheerful, sparkling teenager. The father looked as she had described, a stern rigid individual, who faced the camera with a bit of a scowl. \n\nThe rest of the pictures revealed a variety of faces that faintly resembled hers in one way or another, and spanned the age range between infant to doddering. Then, in the back towards the right side of the credenza, I saw a picture that seemed rather familiar. The picture itself appeared to be carefully trimmed, and contained the likenesses of two people. \n\nI remembered when the photograph had been taken\u2014just about two years ago\u2014after the awards ceremony for our division. Cathy and I had been awarded recognition for high sales for the quarter, just before the economy went to hell. The picture clearly showed a smiling Cathy with her award in her hands, and standing behind her, me with my award in one hand, my other on her shoulder. \n\nThere were others in the original picture, as the photographer had 'scrunched' everyone together to get us all in one shot. I ended up behind Cathy, holding onto her shoulder for support. Apparently, everyone else had been trimmed out of the picture now, except me, who was probably too close to her to remove. Curious, I thought. \n\nThe sound of someone clearing their throat came from behind me, and as I turned around to look, I caught my breath. She was absolutely gorgeous! \n\nShe was wearing a black pencil skirt that ended at her knees, and a scarlet, button down the front blouse, exposing just enough of her cleavage to draw attention, but not enough to be considered improper. The black velvet collar, supporting the chrome ring, provided a wonderful contrast to the whole outfit. Looking further down, I noted that she'd changed into a pair of black sling-back heels, probably three inches or so, bringing her face up closer to mine. I'd definitely have no problem wearing this woman on my arm tonight. \n\nAs I drove us towards the bar, I filled her in on some personal information regarding Robert, mentioning that he was still single, and that he had a penchant for beautiful women. I also repeated that he was still single, which should give her an idea of his social reliability. I wasn't quite sure why I was mentioning all this to her, given her known resistance to customer fraternization, but I could feel myself getting a bit nervous visualizing Cathy with an eligible bachelor, in any capacity. \n\nGlancing over at her while I was saying all this, I noticed that she was frowning at me, as though I were insulting her sense of propriety. Seeing that, I quickly changed the subject to the project at hand reminding her that she shouldn't hesitate in asking Robert the hard questions regarding the project process and goals. The more information she could extract from him this afternoon, the more complete and trouble-free her proposal would be for his committee. \n\nFinally, we arrived at the Harbor Bar and as we entered, all eyes seemed to swing towards Cathy, and I suddenly felt proud that she was my companion for the rest of the day. Stepping up to the bar where Hattie stood polishing glasses, our drinks were already waiting for us, as usual. \n\nHattie immediately complimented Cathy on her appearance by letting out a long, low whistle. Then turning to me, she winked and mentioned that Robert had already arrived and was waiting for us in one of the far booths. After hugging Cathy briefly in greeting, Hattie escorted us to the booth containing the anxious Robert. \n\nI re-introduced Cathy to Robert and quickly explained to him that she was being reassigned from my project to his, and that she was prepared to go over all the details of his new project with him this afternoon. Then, excusing myself, I returned to the bar and Hattie. I wanted this to be hers, completely hers, without any interference from myself. \n\nHattie soon disappeared into the back for a few moments and then returned with two cases in her hand. One was rectangular, roughly the dimensions of a very flat book. The other appeared to be the size of a ring case. Sliding the larger one in front of me, she urged me to open it. As I did so, I saw a beautiful necklace, composed of sparkling flat silver links, connected by a stud. Hanging from the stud were seven silver chain links, ending in a large silver ring. \n\nAs I admired the elegance of the piece, Hattie explained to me the significance of the different parts of the necklace. The necklace itself represented the collar of the submissive, the seven chain links represented the seven days of the service week, and the large ring was a reminder that the wearer belonged to another. I'll have to admit that I was impressed with her choice of a memento for the event. \n\n\"This one you owe me for, Scotty, but this one,\" she continued, \"is on the Captain.\" \n\nAs she slid the small case in front of me, she flipped the lid back, displaying a simple gold band, a bit wider than those that I'd normally associate with wedding or engagement bands. Not too unusual, except from it dangled a small silver ring, which she quickly informed me, was platinum. \n\nI must have had an expression of puzzlement on my face, because Hattie began to explain. \"This ring is called the 'Ring of O,' Scottie, and is worn in place of the collar in situations where the collar might be a bit controversial. Not everyone understands or approves of the lifestyle you know.\" \n\nThinking about what she'd just explained to me, it began to make a sort of sense now. There seemed to be so much about the game I was playing that I didn't know. I was just beginning to wonder however, how Hattie seemed to know so much about the game in which Cathy and I were now involved. Besides, our lives would be reset to zero tonight, when the game ends. \n\nHattie must have seen the faraway look in my eyes, because she reached over, patted me on the shoulder, and said, \"Yogi Berra once said, 'It ain't over till it's over,' Scottie. The Captain says to hang on to the ring\u2014you'll know when to give it to her. In the meantime, I think that a presentation of the necklace this evening would be appropriate, whenever her business is completed.\" I looked down at the bar and noticed two empty glasses in front of me and a full one waiting for my attention. Time was flying, that was certain. \n\nI had kept a watch on the couple in the booth from the corner of my eye, noting every movement, nuance, chuckle, and gesture. For some reason or another I was taking a much more serious interest in this woman than I should and my protective instincts were on a razor's edge. Why? \n\nHattie continued. \"Scottie, what did you have for a social life before this contest?\" Seeing no response from me she went on, \"What did Cathy have before this contest?\" I shook my head, trying to concentrate on what was going on in the booth and what Hattie was asking me at the same time. Finally I answered her, \"Nothing, I guess.\" \n\nSlapping her hand on the bar, Hattie exclaimed, \"That's right! This contest managed to get both of you back into the groove! Scottie, you've been given a reprieve on life. Whatever else happens to you two from this point on, you've both had an opportunity to experience life once again.\" \n\nI'd turned my attention fully on Hattie once I heard her hand slap down on the bar. Suddenly, I began to understand what she was talking about. She was right of course, both Cathy and I had nothing before the conditions of this contest and whether she'd have won or me, the results quite likely would have come out with similar results. It brought me to thinking about Wade in an entirely different way, the little shit. \n\nLooking at Hattie, I just had to ask the question that had been floating around in my head for the last few days. \"Hattie, just how do you know so much about the little game that we've been playing this past week?\" \n\nLooking me in the eye, she said, \"I read a lot, Scottie. I read a lot. And I'm a big girl, in case you hadn't noticed.\" Reaching her left hand over to me, she slowly turned it over, palm up. \"Ya'know, Scottie, for a really sharp guy, you don't really pay much attention to details, eh?\" Looking down at her hand I noticed that the worn gold band on her ring finger was a bit more. There was a small platinum ring attached to her wedding ring, well worn and loose. \n\nShe gave me a few moments to put things together, but since I was already in sensory overload, she said, \"Forty seven years, Scottie.\" \n\n\"The Captain?\" I asked. She just nodded her head and smiled. \n\nThings were running through my head way too fast right now, but Hattie reached over and grabbed the hair on the side of my head and shook me gently. \"Scottie,\" she said. \"Think about it. Your marriage to Ashley went to hell because of her family's old money and there was no way for you to control her. Cathy's life went to hell because of her father's absolute control over her future. You've both found a way to re-enter the world of the living, you in control, her out of control.\" \n\n\"Hattie,\" I said. \"It all ends tonight. I don't know what I'm going to do when this is all over.\" \n\nPatting the side of my head she said, \"Scottie, if she goes away after tonight, you haven't really lost anything. It just means that you never really had her to lose. I will share with you however, that anytime that we had a chance to talk by ourselves, she turned into an interrogator\u2014peppering me with questions about you, your past, your life, your likes-dislikes and everything in between. I think you might be in for a surprise.\" \n\nI was only half paying attention to what she was saying, most of the time trying to pick up on what was happening back in the booth containing Robert and Cathy. It was apparent that they'd concluded the business portion of the meeting, because the paperwork had already been exchanged and set to the side. Robert now had his hand on Cathy's wrist and he was joking with her in a more familiar way. I saw her glance towards the bar from time to time, obviously checking up on me and Hattie, and for some reason, that bothered me. \n\nFinally, I got up, excused myself, and left for the bathroom. Once there, I splashed a little water on my face and tried to pull myself together. I had to remind myself that after tonight, I had no hold or claim on Cathy, and what she did with her life from this point on, was her business and hers alone. \n\nDamn! I felt so alone once more and I only had myself to blame. However, I felt it necessary to join the twosome about now, to see what had been decided as far as the project was concerned. I argued in my own mind that since the resources for the work would most likely be taken from my project, I had a right to know what decisions had already been agreed to. ",
        "Slipping up quietly towards the booth, I suddenly stopped, wondering what it was I expected to discover going on between the two. It was then that I heard the words that would cause me even more confusion during this week of service. \n\nRobert had just finished saying something to Cathy and I watched her remove his hand from hers, and lean back into the booth. Looking over at him she said, \"I'm flattered by the invitation, Mr. Swanson, but I have to tell you that I belong to Mr. Bentley.\" Robert said something more to Cathy, something I was unable to hear, and she responded, \"I don't think that you understand Mr. Swanson\u2014I belong completely to Mr. Bentley.\" As she said that, I saw her absent-mindedly raise her hand to brush her fingertips against the collar. \n\nMy heart skipped a beat or two, but it was countered by the knowledge that tonight would be the end of any power I had over her, according to the terms of the 'service' agreement. Nonetheless, I stepped into their view, and sat down next to Cathy. \n\n\"Meeting go well?\" I asked. \n\nI saw Cathy take in a deep breath, as though she were relieved that I'd finally showed up, and Robert fell back against the booth, nodding his head. A few minutes of conversation confirmed that all details had been related to Cathy and that a solid tentative plan had been formed for the completion of her proposal for his project. \n\nCathy excused herself to the ladies room and Robert and I had a few minutes to discuss the professional background of Cathy's credentials. After I'd assured him that she was very much an equal to me in project management, he switched the subject a bit and asked me if she were attached or available. \n\n\"For what?\" I asked. \n\n\"You know, for dating or such.\" He replied. \n\nLooking him straight in the eye, I said, \"Robert, Cathy belongs to me, period.\" As I finished saying that, I looked up and saw Cathy standing beside us, having returned from her trip down the hall. I also saw a faint smile on her lips as she reminded me of my promise to take her out after her meeting with Robert. \n\nRobert rose, thanked both of us for the support for his projects and undaunted, picked up Cathy's hand and kissed the back of it, bidding us a good night. As he left, Cathy turned to look at me as I looked at her. Suddenly, we both broke out into laughter! The dark mood was broken and I was grateful for it. \n\nAs we moved back to the bar, Hattie informed Cathy that I had a present to offer her for her endurance of the past week of service. Surprised, Cathy turned to face me with a question on her face. \n\nI felt her eyes on me as I opened the case for the necklace. Turning, I reached for the clasp holding her collar onto her neck and as I'd expected, she tried to stop me from removing it. Looking directly into her eyes, I reached once more for the clasp on her collar, and this time she allowed me to release the clasp, although she frowned disapprovingly while I did it. \n\nSetting down the velvet collar, I picked up the silver necklace and held it in front of her face. Explaining the significance of the various features to her, I then attached it around her neck, and leaned in to kiss her on the forehead. Looking over her shoulder, I saw the Captain in the doorway to the back of the bar, smiling his approval. \n\nAs tears ran down her face, Cathy brought her right hand up to the side of my face and trembling slightly, ran her fingertips softly down my cheek to my chin. Positioning her fingers under my chin she raised her face to mine and briefly kissed my lips. \n\nTaking our leave for the rest of the evening, we left the Harbor Bar to continue our last evening together at AJ's, the city's finest, at which I'd made reservations and the home of the area's only 4-star chef. The only concern I had was the musical theme of this establishment, which was anything from ballroom to contemporary. \n\nI needn't have worried however, as the food, atmosphere and the dancing turned out to be nearly perfect. My ex had insisted that I learn to dance to fit in with her snobbish crowd, and until tonight, I never really enjoyed it. Cathy turned out to be an exceptionally energetic and talented dancer, and we, as the old saying goes, \"Danced the night away.\" \n\nFinally though, it was time to call it a night and reluctantly we made our way back to Cathy's apartment. It was just past midnight, and the limit of the time of service had officially expired. Reaching her doorway, I stopped and turned her around to face me. \n\n\"Cathy,\" I started. \"I have to tell you that I've admired the way you've held up under the conditions I've imposed on you during this week of service. I really thought I could get you to give up early and get us back to focusing on our work. I hope you don't hold any of this against me going forward and I hope we can continue to work together after this week.\" \n\nAs I leaned in to kiss her, her eyes began to tear, and she suddenly broke loose from me, opened her door and quickly slipped inside, locking it behind her. I stood there for a few moments, surprised at her sudden reaction to my good night gesture. Dammit, I thought, now that really went well. \n\nReturning to my house, I began to feel the beginnings of my own personal torment. Cathy's scent permeating throughout the rooms, along with the more obvious evidence of her visits-the instruments I'd used for her torment-still lined up on the bed stand where we'd left them at noon, all conspired to taunt me over my sudden loss. This upcoming week was not going to be one of my best. \n\n(Conclusion to follow)"
    ],
    "authorname": "Hatsuda",
    "tags": [
        "submission",
        "cuffs",
        "flogger",
        "whip",
        "blindfold",
        "clamps",
        "pussy",
        "cock",
        "anal",
        "tits"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/seven-days-of-service-day-07"
}