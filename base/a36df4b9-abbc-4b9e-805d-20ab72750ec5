{
    "title": "Birthday Girl Ch. 02",
    "pages": [
        "When I awoke the next day, at first I thought it had all been a dream. When I realized what had actually transpired however, my mind became a conflicting mix of emotions. On one hand, I felt extremely guilty for messing around with my friend's girlfriend. On the other hand...it had probably been the most erotic, mind-blowing experience of my life. \n\nAfter months of secretly fantasizing about Krista behind closed doors, the real experience had far outshone my expectations. As I lay in bed, somewhere in between a state of sleep and wakefulness, my mind drifted back to events of the previous night as my hand slowly drifted under my sheets. A couple more minutes of \"reminiscing\" and I was forced to grab a sock from the floor beside my bed to avoid an unwanted mess. \n\nProvided with a brief respite from my wandering mind, I hauled my tired body out of bed to begin my Saturday. As I stood in the shower less than twenty minutes later however, I found the erotic image of Krista on her hands and knees before me, creeping back into my thoughts as the warm water streamed down my body. It was going to be a long day. \n\nAfter cleaning myself up for the second time that morning, I took a quick trip to the gym. I usually enjoyed working out on Saturday mornings, as the gym was relatively empty. I was having a hard time concentrating however, and decided to make it a short session. For the rest of the day, I contemplated whether or not I should attend Craig's party. On one hand, I couldn't get Krista out of my head. On the other hand, I wasn't sure if it would be wise to spend any more time around her. Especially, since she was most likely to be accompanied by her boyfriend. Not only was Sam a good friend of mine, but we shared the same circle of acquaintances. If our dirty little secret was to get out, things had the prospect of getting very, very ugly. I actually would have felt worse if not for the fact that Sam was perhaps the worst boyfriend in the world. \n\nIn the end, I decided to go to the party. I tried to convince myself that my decision was based on the fact that I had no other plans for the night, but deep down I knew the real reason. I had to see her again. \n\nMy friend Craig rented a fairly large house in my neighbourhood, and was known for throwing parties. With a revolving door of numerous different roommates, it had become a frat-house type environment complete with pool table, fooze ball, and the unmistakable odour of beer stained carpets and furniture. I would never choose to live there, but as far as party locales go, you couldn't ask for better house. \n\nAfter making a quick trip to the liquor store, I headed to Craig's place. From the sound of things, I could tell the party was in full swing when I arrived. I was both relieved and disappointed when I saw neither Sam's nor Krista's car on the street outside. I walked in and made myself a drink before making the usual rounds to say 'hi' to my friends. As other guests continue to filter in, I found myself continually glancing to the door in secret expectation of her arrival. When the main floor started to become crowded, I headed down to the basement to play Craig in a game of darts. After losing badly, I was about to challenge for a rematch, when I turned to see Sam walking down the stairs. \n\n\"There you are!\" he called out, walking towards me with a beer bottle in his hand. \n\nAt first my heart skipped a beat as he walked up, but the pleasant expression on his face soon put me at ease. \n\n\"Hey man,\" he greeted with a friendly slap on the shoulder. \"Thanks for helping out last night. I was fucked up!\" \n\n\"No problem,\" I said with half a smile. \"I'm actually surprised to see you drinking tonight. I wouldn't think...\"\n\n\"Yeah,\" he piped in, cutting me off. \"I still feel pretty shitty. I think I'm going to be taking it easy tonight.\" \n\n\"Good plan,\" I agreed, watching the doorway for any sign of Sam's girlfriend. \"Where's Krista?\"\n\nI tried not to sound too interested when I asked the question. \n\n\"Oh she's here,\" Sam answered casually. \"She just went to put her vodka in the freezer.\" \n\nI nodded as I struggled to withhold my smile of relief. \n\nCraig, Sam and I stood around conversing for the next few minutes as I began to take larger drinks from the plastic cup in my hand. A moment later, Krista walked down the stairs and headed over towards us. \n\nShe was wearing a pair of black tights that seem to be the trend these days, with a tight fitting blue top coming down just over her hips. I usually found most fashion trends ridiculous, but this was one that I found irresistible. The length of the top gave the appearance of an extremely short mini-dress that most girls would never feel comfortable wearing. The presence of the tights however, gave them the self assurance of being fully clothed while still maintaining the visual qualities of a much more provocative outfit. \n\nKrista's dirty blonde hair was tied back in a playful pony tail, allowing an unfettered view of her rounded face and beaming smile. She was wearing the same silver hoop earrings as the night before, swinging to and fro as she sauntered towards us. Her crystal blue eyes seemed brighter than usual, emphasised by the liberal application of dark eyeliner, which I also found irresistible. She cast me a deliberate smile as she approached, before turning to great Craig with a friendly hug. \n\n\"Hi Damon,\" she said casually, joining our small circle with a plastic cup in her hand. \"Thanks so much for last night.\"\n\nI froze for a brief instant before she spoke again. \n\n\"For helping with Sam,\" she clarified, relieving my brief moment of terror as the corner of her lip curled up into a restrained but teasing smile. \n\n\"My pleasure,\" I said, maintaining an emotionless expression as raised her glass to her lips to hide her emerging smile. \n\nI could see her eyes locked on mine as she drank. It seemed that Krista was having much more fun with the situation than I was. \n\nThe four of us stood around talking and drinking as party grew around us. While Krista was acting completely normal, I had to stop myself from staring continuously at her throughout the conversation. As I stole repeated glances of her beautiful visage while she talked, all I could think about were those soft, pink lips kissing every inch of my body. \n\n\"Well, I think I need another drink,\" I proclaimed after downing the last of my vodka tonic. \"I'll see you guys in a bit.\" \n\n\"Just a sec,\" Krista blurted out before guzzling down the rest of her drink as well. \"I need another as well.\" \n\n\"Grab me one too, would ya,\" Sam suggested to his girlfriend as we headed to the kitchen. \n\nKrista nodded and hurried off behind me. \n\n\"You okay?\" she asked, catching up to me at the top of the stairs. \"You seem kind of...quiet tonight.\" \n\n\"Yeah, I'm fine,\" I answered softly, glancing around to make sure nobody we knew was within hearing distance. \"It's just a little...awkward, trying to act like nothing happened.\"\n\n\"Oh?\" she said with interest as her face took on an expression of mock confusion. \"And what happened? I don't remember?\" \n\n\"Shut up,\" I replied, laughing at her light hearted manner as I waved off her obviously jestful question. \n\n\"Oh wait,\" she continued, standing behind me as I opened the freezer door to retrieve my vodka. \"I remember...\"\n\nI pretended to ignore her as I stood at the counter, fixing myself a drink. Suddenly I felt her warm breath in my ear as she moved closer and whispered. \n\n\"I remember...sliding my tongue into that cute little ass of yours...\"\n\nI swallowed hard as my dick jumped in my pants at the tantalizing sound of her soft voice. I tried to remain unaffected as I poured my drink with shaking hands. Krista let out a giggle and spun around to lean back against the counter as she smiled at my apparent discomfort. \n\n\"So am I going to get another birthday present tonight?\" she asked, blatantly as I tried to avoid eye contact with her enticing blue orbs. \n\n\"I don't see how that can happen,\" I answered back with a sceptical tone, squeezing a bit of lime juice into my drink. \n\n\"Oh don't be so sure,\" she countered, gradually inching closer along the counter. \"Where there's a will...there's a way.\" \n\nAs she moved into my line of sight, I became drawn to her sexy smile as she studied my face with amorous interest. \n\n\"Is that a vodka tonic?\" she asked suddenly, glancing down at the drink I had just prepared. \n\n\"Uh...,\" I stammered, taken aback by her sudden shift. \"Yeah, it is.\"\n\n\"Hmm,\" she hummed, grabbing the plastic cup and taking a drink. \"Thanks.\" \n\nWith that, she flashed me a smile and took off out of the kitchen with my drink in hand. I just smiled and shook my head as I began to make myself another. \n\nI wandered around the main floor for a while before stepping out onto the patio where a large number of party-goers had congregated. I made conversation with a few people but soon found myself drawn back downstairs. Entering the spacious basement once again, I called the next game of pool before joining Craig and Sam in a conversation about the upcoming Olympics. As we talked, I noticed Krista across the room engaged in her own discussion with Craig's girlfriend Amy. I could tell by her mannerisms, that she was starting to become slightly intoxicated. Over the next few minutes we exchanged several glances that only increased my growing desire. As out stares became longer and more involved I found myself forced to turn my back to her to avoid detection. I wasn't worried about Sam and Craig, as they tended to be quite clueless, but Amy was another matter. Girls tended to be more adept at picking up on the subtle communication between people and the last thing I wanted was to bring a third party in on our little secret. \n\n\"Hey baby, can you hold this for me,\" Krista asked in a cute babyish voice, handing her drink to her boyfriend as she walked past. \"I have to go pee.\" \n\nSam seemed annoyed his girlfriend's request, but complied nonetheless. Krista gave me a strange look before skipping off towards the bathroom. \n\n\"Jesus,\" Sam exclaimed with a shake of his head. \"She's been acting so weird all day.\" \n\n\"Oh yeah?\" I asked with restrained interest. \"How so?\"\n\n\"I don't know...She just been really...happy.\" \n\n\"And...,\" I coughed as I pulled the cup from my sputtering mouth. \"...you find that weird?\"\n\n\"Well, yeah. Kind of...,\" he continued, taking sips from his beer. \"I thought she'd be pissed after I ruined her birthday yesterday...but she's been ridiculously happy all day.\" \n\nI took a drink to hide my smile. \n\nA little while later I felt my pocket vibrating, and reached in to retrieve my cell phone. I didn't recognize the number displayed so I flipped it open and stepped away from the others to check the message. 'Thanks for last night' the message read, with an attached image file. My heart skipped a beat as I realized that Krista was texting me from the bathroom. I took a deep breath and opened the attached picture. \n\nAlthough I couldn't see myself at that moment, I'm sure my eyes went wide with surprise when I first laid eyes on the image, which consisted of a lewd close-up of what I could only assume was Krista's ass. One of her cheeks was pulled wide, displaying a perfect view of her tiny pink hole as well as the top of her perfectly shaved pussy. I immediately felt my dick swell with arousal as I stared dumfounded at the small screen. \n\n\"Whoa! Is that what I think it is?\"\n\nStartled by the sound of Sam's excited voice, I snapped the phone shut as he reached for it over my shoulder.\n\n\"Let me see,\" he ordered, grasping frantically as I scrambled to keep it just out of reach. \"Who sent you that?\" \n\n\"Uhhh...some girl just sent it to me,\" I stuttered, pushing his eager hands away. \n\n\"What is it?\" Craig asked, interested by Sam's excited behaviour. \n\n\"N...nothing,\" I muttered, trying to avoid any unwanted attention. \"It's...just a picture.\"\n\n\"A picture of some chick's pussy!\" Sam howled, as the commotion began to attract the attention of others in the room. \"And ass. It's like...porno style!\"\n\n\"Some girl sent you a picture of her ass?\" Amy asked with obvious disgust? \n\n\"Y...yeah, I guess,\" I answered, stuffing the phone into my pocket. \"It's...it's from some girl I met a while ago. It's nothing.\"\n\n\"Didn't look like nothing,\" Sam replied with a smile and a shake of his head. \"What kind of slut sends a pic like that?\"\n\n\"What's going on?\" Krista asked, walking back into the room with a naive expression on her face. \n\n\"Some slutty girl just sent Damon a picture of her pussy!\" Sam exclaimed, still excited by the whole thing. \n\n\"Really?\" she asked, staring right into my eyes. \"What a whore.\"\n\nI took a deep breath and then took a long drink, silently hoping for the situation to die down. I noticed Krista smiling subtly with amusement. \n\n\"Geez, man,\" Sam continued. \"If she sent you a pic like that, then she must be crazy in bed! You should hold onto that one for as long as you can. Sounds like she's right up your alley.\" \n\nI raised my eyebrows in acknowledgement as I continued to drink in order to hide my growing embarrassment. \n\n\"Yeah Damon,\" Krista agreed, raising her cup in the air as she walked by. \"Hold onto that one. She seems like a real dirty slut.\"\n\nAs the group dispersed throughout the party, I found myself amazed at Krista's behaviour. I couldn't believe she was being so cavalier with a situation that I was growing increasingly uncomfortable with. However, her blatant sexual advances were also stoking the fires of my arousal to a level that I was finding almost unbearable. In addition, the constant flow of vodka was doing little to blunt my growing lust. \n\nOver the next hour, I made the rounds through the party, purposely avoiding Krista and Sam, although I found it impossible to get her out of my mind. I even took a few trips to the bathroom in order to grab a private viewing of the text message she had sent me before deleting it in order to rid myself of the evidence. I played a game of pool before heading back up to the main level and taking a seat in the living room. I was lounging back on the sofa chatting with a girl I had just met, when I noticed Krista strolling into the room. I kept my sight averted, but out of the corner of my eye I noticed her take a seat on a sofa that had been pushed up against the wall on the opposite side of the room. There were numerous people standing in the middle of the room, obstructing my view, but every once in a while I could catch a glimpse of her smiling face through the crowd. A few times I even caught her flashing me a sexy smile as I attempted to hold my conversation with the girl beside me. \n\nWhen I felt my phone vibrating in my pocket once again, I immediately knew it was Krista. Flipping the phone open, I braced myself for another filthy image, but found only a simple text message. \n\n'I want to taste your ass.'\n\nI felt my dick twitch as I read the simple sentence with an emotionless expression. Slowly I raised my head to see her smiling back at me with contentment from across the room. Krista then raised her hand, making a small circle with her thumb and index finger before flicking her tongue out in an explicitly obscene gesture. I smiled back and shook my head as she giggled in response. I didn't know how much more I could take. \n\nAs the room grew more crowded and several people began a boisterous game of Guitar Hero, I took my leave, feeling the pressing need to go to the bathroom. I went to one bathroom, then another, finding a lengthy lineup at each one. Unable to wait, and cursing my diminutive bladder, I was considering going outside to relieve myself when I remembered that there was another small bathroom upstairs. Craig didn't like people using his personal bathroom, but I figured it would be okay for the time being. Scampering up the stairs with growing urgency, I made my way to the third floor and into Craig's room. I was relieved to find his room unlocked, so I opened the door and slipped inside before rushing into the adjoining bathroom and closing the door behind me. \n\nAfter relieving myself, I flushed the toilet and washed my hands. For a brief moment, I considered answering Krista's dirty text message with one of my own, but soon thought better of the idea. I checked myself out in the mirror one more time before unlocking the door and pushing it open. \n\n\"Hi there.\"\n\nI almost jumped from surprise when I stepped out into the room to find Krista standing before me with an irresistibly sexy look in her sparkling azure eyes. Before I could say a word, she grabbed me by the arm and pulled me back into the tiny bathroom, shutting the door behind us. \n\n\"Did you like the picture I sent you?\" she asked with a smile as she stepped closer. \n\n\"I definitely liked it,\" I answered, feeling my heart begin to race as I stared into her enamouring, blue eyes. \"Don't you think we should cool it though? I mean at least when Sam's...\"\n\n\"Turn around,\" she ordered, cutting off my rambling suggestions with a firm statement and a look of unrestrained lust. \n\nI hesitated for a moment as her soft, playful features seemed to melt away in the wake of a sexual intense stare that seemed to freeze me in place. \n\n\"I said...\" Krista reiterated, reaching up with both hands and placing them on my shoulders before forcefully spinning me around. \"...turn around.\" \n\nHer forcefulness both intimidated and aroused me as she pressed her body into mine from behind and gently bit my ear lobe. \n\n\"You know...\" she began, speaking in a raspy, sordid whisper. \"I've been thinking about you all...day...long.\"\n\nAs I felt her warm breath on my neck, her hand reached down graze over the front of my pants, making my dick tingle with anticipation of her evasive touch. \n\n\"Oh yeah?\" I asked as my heart beat increased, becoming almost audible in the silence of the tiny room. \"And just what have you been thinking about?\" \n\n\"Mmmm,\" she purred, pressing her soft lips into my neck as her slender fingers popped open the top button on my jeans. \"Licking every part of you...\"\n\nAs she spoke, I felt the slight sticky sensation from her shimmering lip gloss on the naked skin of my neck as I heard my zipper unfasten and my flye fall open. \n\n\"Tasting you,\" she continued in a quiet, sensual tone. \"Your dick...your balls...your cum...your asssss,\"\n\nAs Krista hissed that last word into my ear, I moaned with delight as she dropped to her knees behind me and yanked my pants and underwear down to the floor with one pull. I braced myself with both hands on the sink and stared into the mirror in front of me as I felt her delicate hands pushing my cheeks apart and her hot breath washing over the sensitive skin of my exposed backside. \n\n\"This is so fucking bad,\" I gasped as I felt Krista's lips pressing right into my asshole as she forced her face into me. \n\n\"Mmmhmm,\" she moaned in agreement, sending pleasurable vibrations through my body as her little wet tongue slipped out to lap at my ass with hungry, enthusiastic licks. \n\nI could feel my cock throbbing as she stabbed my hole with her talented tongue, piercing the tight little opening as my hands clutched the edge of the counter in an adamantine grip. I even pushed my ass back into her face, eliciting a warm moan of approval as she welcomed the feeling of her thrusting tongue being forced into my body. \n\n\"Oh my god!\" I gasped, struggling to keep quiet as my friend's girlfriend pushed her tongue deep into my asshole as the tight opening clenched around her, massaging the wriggling, wet appendage with unbridled contractions. \n\nKrista's hand soon found my swollen shaft and she wrapped her hand around it while she prodded my ass with lust-driven, desperate stabs. Her talented tongue flicked at the back of my balls before gliding up the entire length of my perineum, painting my asshole with warm lines of sexy spittle. As she moaned into my ass, I could hear the clamour of the party continuing nearby, taking my excitement to new heights and I threw my head back in ecstasy. ",
        "\"Mmmm, I feel so dirty!\" Krista exclaimed, pumping my cock with consistent movements of her smalls hand as she lapped at my asshole with frantic, wet licks. \"I fucking love it!\"\n\nI moaned in agreement as she planted a deep, sensual kiss on my hole and brought her other hand up grasp at my tightened balls. \n\n\"Do you like this?\" she asked, her hand stroking my dick with rapid pumps of her fist. \"You like having a dirty little slut on her knees licking your ass?\" \n\n\"Yes,\" I panted as she jammed her tongue back into my asshole, fucking me with short, quick thrusts as her head bobbed back and forth. \n\n\"Call me that,\" she gasped, in between forceful, wet strokes. \"I want to hear you call me your dirty little whore while I tongue-fuck your ass...just like Sam said, when he saw my picture on your phone.\" \n\nMy breaths were coming quick and shallow as the sensation began to overtake me. \n\n\"You're my dirty little slut!\" I groaned as my ass clenched around her tongue. \"You're a filthy little asslicking whore! That's it...lick it...lick my asssssssssss...ugh...fuckkkkkkk.\"\n\nIt wasn't my words that sent me over the edge, but Krista's response to my words, as she seemed to grow more enthused with each syllable I spoke. My balls tightened and my hips bucked as she found her little wet tongue forced out by my clenching ass. Her tongue wriggled with desperation against my tightly closed hole as her pumping hand sent several thick, gooey strands of hot white cum lashing out against the front of the sink. As I remained standing there, braced on shaking arms, I glanced down to see the creamy fluid, slowly running down the glass door in thin, translucent lines. Pushing me out of the way, Krista crawled forward and extended her tongue to catch one of the descending streams of cum as I stumbled back in amazement. She then lifted her head, as her outstretched tongue glided easily up the smooth surface to collect as much of my fluid as possible before swallowing it down her hungry throat. As she licked her lips, a satisfied smile crossed her face and she looked up me from her knees as I just stared with obscene admiration.\n\nBefore I could say a word however, a startling knock came from the bathroom door. \n\n\"Hey, who's in there?\" Craig's voice called out from behind the door. \n\nKrista's eyes went wide with fright as we both froze for a moment. \n\n\"Uhhh...hey man, it's just me,\" I called back, turning the faucet on to cover any other noise. \"Sorry. I thought I was going to be sick so I came in here. The other bathrooms were taken.\"\n\n\"Are you okay?\"\n\n\"Yeah, I think so,\" I answered. \"I just need a minute or two.\" \n\n\"Alright. No problem. If you throw up all over the place though, you're cleaning it up.\"\n\nWe both breathed a sigh of relief as I shuffled over to the door with my pants still around my ankles to listen as Craig walked away. \n\n\"That was close,\" I said, wiping my brow as Krista smiled and stood up to her feet. \"We'd better get out of here before someone else comes in.\" \n\n\"Okay,\" she said reluctantly, casting me a pouty expression. \"But I'm not finished with you yet...\"\n\nShe leaned and kissed me, pushing her tongue into my mouth before I could respond. As she pulled back smiling, she reached for the doorknob as I frantically pulled my pants back up. \n\n\"See you later,\" Krista said with a naughty smile as she opened the door and slipped out, leaving me with my pants around my knees and the taste of my own cum in my mouth. \n\nI shook my head in amazement as I closed the door and began to straighten myself up. I could hardly believe what had just transpired. It was as if my filthiest fantasy had just come true...and the night was still young. \n\nI would have thought that my recent energy draining orgasm would have dampened my libido, but as I slipped out of the bathroom and rejoined the party, I found myself more aroused than before. Walking into the kitchen to fix myself another drink, I noticed Sam in the living room. He was seated on the couch with Krista perched on the end beside him, her arm resting easily on his shoulder. We exchanged a brief, knowing glance before I proceeded on my way. After getting a new drink, I wandered back towards the living room but Krista was nowhere to be seen. I did however, catch a glimpse of Sam standing out on the patio. He was by himself, appearing to be texting someone with his phone with a large grin on his face. \n\nI made my way back down to the basement where I found Krista playing a game of pool with Amy. I struck up a conversation with a couple guys I knew, positioning myself so I had a clear view of the pool table as I chatted half-heartedly. Krista soon noticed me standing there, and flashed me an enticing smile before turning back to her game. This little routine continued every time Amy took her turn, with Krista gradually growing bolder, even going so far as to lick her lips while staring directly at me.  \n\nI leaned against the wall with a smug expression on my face, barely contributing to the conversation I was supposed to be taking part in. As Amy became transfixed on her next shot, Krista stood behind her, looking right at me as held the pool cue upright with butt end resting on the floor. She then smiled and flicked her tongue out, running it up the thin wooden shaft in a provocative manner as I shifted uneasily where I stood. \n\nWhen it came time for Krista's next shot, she moved around to the end of the table with her back facing my direction. My eyes immediately locked on her sexy form, admiring her tantalizing curves, exemplified by her tight fitting outfit. As she stood viewing the table, one of her hands discretely slipped to her lower back and she casually pulled her thin blue top up to expose the entirety of her luscious, round ass. Her black tights clung to every inch of her backside like a second skin, outlining the perfectly round shape of her ass with agonizing accuracy. With obviously deliberate slowness, she then arched her back and bent over the table to take her shot as my heart skipped a beat. As she took her sweet time lining up her shot, I was treated to an arousing visual as she remained in the provocative position long enough for the blood to begin rushing back into my cock. Through the thin material, I could even make out the outline of her pussy between her legs as she took her shot. After she had finished, Krista remained in the suggestive position for a few more seconds, as I imprinted the sexy sight firmly on my mind. \n\nKeen to return the favour that she had imparted upon me earlier that evening, I began to search for an isolated locale that could adequately serve the purpose. With the house full of people however, that task was proving to be a difficult one. \n\nThen I found one. \n\nFlipping open my cell phone, I sent Krista a short text message before slipping discretely out the basement door. \n\nCraig's house had an indoor garage, although he rarely used it for anything besides storage space. At the current time however, it was home to an old minivan that he had purchased in preparation for an upcoming road trip we had had planned. Navigating my way through the stacks of boxes and old sports equipment that scattered the cluttered garage, I worked my way around to the far side of the minivan where I waited impatiently as my heart raced with anticipation. A few minutes later the basement door opened and I saw Krista stepping cautiously into the large room. \n\n\"Damon?\" she whispered as she stepped carefully over an inconveniently placed box. \"Are you in here?\"\n\nI smiled to myself but remained silent, watching her through the windows of the minivan. My eyes had adjusted to the dim light, but Krista was struggling to see anything as she gradually made her way around the perimeter of the garage. I stepped back behind a dusty old set of shelves to put myself out of sight as she came closer. \n\n\"Daaaamon,\" she called out softly, her voice taking on a whimsically playful tone. \"Eeeeeayaa!\"\n\nKrista let out a started shriek as I stepped out from behind the shelves and grabbed her from behind, pressing her up against the side of the minivan. My dick was hard and throbbing with anticipation as it pressed firmly into her soft, round ass and I reached up to grab hold of her bouncing ponytail as I hissed into her ear. \n\n\"Hello there.\"\n\nAs her initial startled reaction wore off, Krista let out a pleasurable moan as she pushed back into my firmly pressing hips. \n\n\"Did you like my little show?\" she asked as my lips touched the smooth, bare skin of her neck. \n\n\"You were driving me crazy,\" I replied, holding one of her arms pinned against the van as my other hand roamed her body, groping like a horny teenager. \n\n\"Mmmm, that was the point.\"\n\n\"To tease me until I couldn't take any more?\" I asked, pawing at her heated pussy through the thin black leggings. \n\n\"Oh, I wasn't teasing,\" she countered, closing her eyes with pleasure. \"You know you can do whatever you want to me.\"\n\nI smiled at the prospect and immediately dropped to my knees, pushing her top up over her hips and pulled her tights down with unrestrained desperation. Krista moaned quietly as the thin black material slipped down over the smooth flesh of her ass and I pushed it down her legs. She spread her legs as best she could, stretching the fabric between her knees as she arched her back and lewdly presented her ass to my ravenous tongue. I reached up and slid two fingers into her moist pussy which was already dripping with wetness, as I nestled my eager face in between lusciously, soft cheeks. I felt the moisture of her hot little hole increase around my fingers as her aroused juices dripped down my hand. Locating her tiny asshole with my mouth, I attacked it with my tongue, eager to return the favour she had bestowed on me earlier that night. \n\nKrista purred blissfully as she pushed her ass back into my face, eager to sheath my probing tongue with her hungry asshole as I wriggled my fingers deeper into her dripping wet pussy. Sliding my fingers from her hot hole, I sucked them clean before forcefully thrusting them back inside her as my tongue relentlessly lavished her tiny ring with a series of lust-driven wet licks. \n\n\"Fuck yes,\" she gasped, clawing at my hair with her grasping hand as my nimble wet tongue slipped deep into the confines of her clenching asshole. \"You're going to make me fucking cum!\" \n\nI added another finger, forcing all three up into her wet slit as my knuckles pushed aggressively into her convulsing pussy walls. Her fist tightened around a handful of my hair, clutching painfully as her body began to shudder and shake. I tongue-fucked her ass with relentless vigour until she let out a violent moan through tightly closed lips and her hips bucked with ecstatic pleasure against my face. \n\n\"I want your fucking cock inside me,\" Krista panted lustfully as she stood weak on trembling knees above me. \n\nI rose to my feet and she immediately spun around to face me, grabbing my wet fingers and pulling them to her mouth. I smiled as her gorgeous lips sucked her juices from my hand before pulling me to her and kissing my tired mouth with her pussy flavoured tongue. I reached over and tested the door handle on the van, pleased to find it unlocked. \n\n\"In here,\" I urged, sliding the door open as Krista turned and scrambled into the back seat. \n\nI quickly followed, closing the door behind me before struggling to remove my clothes in the confined space. \n\n\"I want you in my pussy first,\" she whispered, kicking her tights aside and leaning back on the bench-like seat as she spread her legs. \n\nI smiled in response and moved into position, lying down atop her waiting body as I eased my throbbing cock into her impossibly wet hole. \n\n\"Oooh, yeah,\" she purred, pulling into her and drawing my dick deep into her dripping pussy by pulling forcefully on my ass. \"That's it. Fuck my wet little cunt. Get your cock nice and wet so you can shove it right up my asshole.\"\n\n\"I love hearing you talk like that,\" I moaned truthfully, gyrating my hips into hers as my dick filled her eager hole. \n\n\"Oh yeah?\" she said with playful smirk as she licked her finger and reached down my back. \"Then you'll love to hear me tell you how wet my pussy was when I was on my knees, eating your ass.\"\n\n\"You really like doing that don't you?\" \n\n\"Yessss,\" she hissed emphatically as she slipped her wet finger down between my ass cheeks. \"I was thinking about it all day.\" \n\nI began grinding my pelvis into hers as I felt her little wet finger stroking over my asshole. I moaned in encouragement and pressed my heaving torso against hers, feeling her supple breasts squishing up against my chest as I nibbled at her neck. \n\n\"It makes me feel so...,\" Krista continued as she pushed her fingertip into my ass. \"...dirty.\"\n\nI could feel my tight little hole stretching around her slender finger as she wiggled her way inside me. My slow deliberate grinding turned to short, rapid thrusts as the heavenly wetness of her pussy enveloped my sinking cock. Her eyes closed in ecstatic concentration as I took a moment to stare into her face. It was a face that could have been at home on the cover of some teen magazine, but less than an hour earlier, it had been pressed obscenely into my ass. \n\n\"Mmmm, you are dirty,\" I whispered into her ear as my hips rose and fell with rhythmic certainty. \n\n\"Do you like dirty girls?\" she asked, her beautiful visage taking on child-like innocence as she pursed her lips together into a playful pout. \n\n\"Yes,\" I answered bluntly as I drove into her with lustful conviction, causing her writhing body to slide along the seat. \n\n\"And do you know what this dirty little girl wants now?\" she asked, her middle finger pumping in and out of my ass. \n\n\"What?\" I asked with a smile, although I knew what her response would be. \n\n\"I want you to bend me over and fuck my ass.\" \n\nRising up to my knees, I pulled my dick from Krista's wet hole as she flipped over onto her hands and knees. Her ass was glistening wet from her dripping pussy, as was my throbbing shaft. The positioning was somewhat awkward and I was forced to place one foot on the floor of the van for stability as she backed her ass up against me. I gave one more nervous glance around before turning my attention back to Krista's enticing backside, gripping my wet shaft with anticipation. \n\n\"Come on,\" she pleaded urgently, reaching back to pull one of her cheeks aside as she granted me access to her tiny hole. \n\nShe moaned as soon as my swollen head touched her exposed asshole, slipping down her crack before I managed to work it past her tight muscular ring. As my mushroom-shaped head disappeared inside her clutching grasp, I removed my guiding hand let her luscious ass sink back on my glistening wet shaft. Krista purred with contentment as her hungry little butt swallowed up every inch of my pole, stretching around my throbbing girth until my balls came to rest against her dewy pussy lips. \n\n\"Mmmm,\" she sighed as she wiggled her ass back as far as she could down my dick. \"That's what I like.\"\n\nI placed a hand lightly on her lower back as began to draw my cock back out of her grasping asshole, before pushing back in to the hilt. She hissed an order for me to go harder and I was happy to comply with a few short, hard thrusts. Krista moaned with each one as the force of my strokes drove her hips downwards into the seat. She tried to push back but as I sank down into the delicious depths of her wanton asshole, I pinned her to the seat as I wrapped my fingers tightly around her little blonde ponytail. \n\n\"Yessss,\" she growled in appreciation of my increased aggression. \n\nI felt every inch of her body writhing in ecstasy as I pressed my body against hers, my cock buried deeply in her impossibly tight hole. As the volume of her moaning grew to alarming levels, I clamped a hand around her mouth before grinding my hips into her supple ass as my dick pumped up and down in her tempting hole. After one particularly hard thrust, Krista howled into my palm, her voice muffled by my hand. \n\n\"Where do you want me to cum?\" I asked, feeling my dick pulsing within her hot little orifice. \n\n\"Mmmm, in my ass please,\" she panted in desperation. \"I want it inside me.\" \n\nHer asshole clutched my shaft as I pumped my hips with unrestrained fury, using her tight ring to jerk myself off as I pinned her body beneath me. \n\n\"I want it deep in my asshole,\" Krista continued as I increased my speed to a staggeringly ferocious level. \"I want to feel it inside me all night.\" \n\nI closed my eyes and continued fucking her ass with savage strokes as her filthy verbalizations provoked me unsurpassed levels of carnal desire. \n\n\"I want to feel your cum in my asshole when I'm lying in bed with my boyfriend later tonight.\"\n\n\"Oh fuck,\" I gasped, feeling the welcomed sensation of an impending orgasm. \n\n\"Fuck it! Fuck that slutty little ass! I want you to take it. Own my ass. It's yours. \"\n\nI gritted my teeth and with one final thrust, pushed deep into Krista's hungry hole. I felt my dick swell and pulse as it unloaded a copious amount of hot cum inside her, finally soothing her impassioned desires with a flood of creamy white fluid. I panted with exhaustion as I remained laying atop her satiated body, my dick still firmly sheathed in her gripping tunnel. \n\n\"We should get back to the party,\" I suggested, post-orgasmic bliss slowly giving way to anxious worry. \n\n\"In a minute,\" she pleaded, wiggling her ass around my rapidly wilting cock, basking in the lurid pleasure of a freshly fucked, cum laden asshole. \"Let's just lay here for a while.\" \n\nI tried to accommodate her reasonable request, but my nerves soon got the best of me as I began to feel extremely exposed. My slippery, flaccid dick easily slid free from her clenching hole as I pushed myself off her prone body. \n\n\"You know what?\" I said, glancing at my watch. \"It's past twelve. It's no longer your birthday.\"\n\nKrista rolled onto her side and smiled up at me. \n\n\"And when's your birthday?\"\n\nTo be continued...."
    ],
    "authorname": "damonX",
    "tags": [
        "cheating",
        "ass licking",
        "public"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/birthday-girl-ch-02-2"
}