{
    "title": "Aunt Sandi Ch. 14",
    "pages": [
        "<center>Aunt Sandi - PART 14</center>\n\nTuesday morning was the second day in a row that I drove Sandi to work. When I pulled into the circle driveway at Sandi's building, she looked over at me and said, \"I really had fun last night. We should do that again sometime.\"\n\nI nodded and said, \"I've heard that hotel sex is awesome, and now I know it is firsthand. Although my butt's still a little sore from the pounding you gave it.\" She giggled and said, \"You loved it.\" I grinned and nodded.\n\nBefore getting out, she looked at me and said, \"I didn't know how things were going to go with Amy last night, so I packed something just in the off chance that things might get interesting. That didn't work out, but maybe there's still a chance today.\"\n\nShe reached into the back seat and unzipped a bag and rummaged around and pulled out a strip of six condoms.\n\nShe said, \"Here we are. I know you just planned on going out to lunch, but I was thinking maybe today would be an ideal opportunity for you to use a sick day. You'll just sit at your desk being all nervous and fidgeting until it's time to go anyway. Heck, I'm nervous and it's not even my date. Not that I, as a people leader, would ever condone such a thing, but if it were me, I probably would. You'll be able to spend all day with her instead of just an hour. Her roommates won't be home, will they?\"\n\n\"No, they work in the daytime. But if I show up with condoms, don't you think she'll think I'm being really presumptuous?\"\n\n\"Don't worry, she won't know you have them, but if something happens she'll be glad you were prepared and thinking responsibly, so you're definitely taking them. Do you need some cash?\" Without even waiting for me to respond, she dug into her purse and said, \"Here. This should be enough for a really nice lunch.\" She handed me about $80.\n\n\"Wow, yeah, that's way more than enough, thanks! You are being so awesome. I love you.\"\n\nShe smiled and leaned over to kiss me. As she got out, she said, \"Have fun, sweetie. And please don't forget that I still need to be picked up later. Love you.\" She smiled as she saw me nod, and then closed the car door and walked away. I looked after her in pure awe, shaking my head. Why couldn't I have thought of all that myself?\n\nAs I watched Sandi disappear inside the building, I was on the phone calling work to let them know that I couldn't make it in today. The always bright and sunny Kayla, my Director's administrative assistant, answered and said, \"Oh, I hope it's nothing too serious. Get a lot of rest and feel better, OK?\"\n\n\"Thanks, I will,\" I lied. I felt guilty for calling in sick and lying.\n\nI sent a text to Amy telling her of the new plan and after about a minute my phone began ringing. I answered and Amy chided, \"You bad boy. You're blowing off work?\"\n\n\"Yeah, Sandi thought that would be better than just a rushed lunch hour.\"\n\nShe immediately said, \"Ah ah ah, no talk of 'the others' today. Today has just been officially declared my day. All mine. Understand?\"\n\n\"Sure, today is Amy Day. You hungry? We could have breakfast.\"\n\n\"Actually, no, we just ate breakfast, but I can feed you. The girls are about to head out in the next ten minutes or so. Just wait until I text you and then come to the door. I haven't had any time to get ready though, so I hope you won't be disappointed in how I look right now.\"\n\n\"I'm sure I won't be. I just want to see you. See you in a few.\"\n\nWe said our goodbyes and I texted Sandi to let her know I was heading over to Amy's now and she replied simply with \"Ok xoxoxo\"\n\n<center>* * *</center> As I pulled into the apartment complex's parking lot, another car was leaving. It was Jill and Amy's other roommate Sammi. Jill saw me and stopped short before going into the street, put her window down and waved frantically to get my attention.\n\nI put my window down too and she leaned out and said, \"Well, well, well, what do we have here? I thought the big date was later.\"\n\nAt that same moment, my phone's text message sound went off in my pocket and I knew that it must have been Amy's all-clear signal. Little did she know that I was already busted.\n\nI must have blushed a bit but I said, \"Hey Jill. Good morning. I, uh...\" I couldn't think of anything witty to say and the truth seemed too embarrassing so I faltered.\n\nJill immediately noticed my discomfort so she graciously saved me and said, \"Danny, this is Sammi, by the way.\"\n\nSammi leaned over toward Jill's open window and half-shouted, \"Hi there Danny. Nice to finally meet you. I've heard good things.\"\n\nI waved and said, \"Hi Sammi.\" Looking back at Jill, I decided on something at least near to the truth and said, \"I decided to call in sick and called Amy to see if she wanted to get some breakfast.\"\n\nJill snickered and said, \"Oh, breakfast, huh? You're a little late for that since I made us breakfast this morning. But if you're hungry, I'm sure Amy can whip you up something to eat.\"\n\nIn the passenger seat, Sammi burst into giggles at Jill's not-so-subtle innuendo and hid her face in her hands. Still looking directly at me, Jill reached over and smacked Sammi on the arm. Sammi immediately silenced herself and turned to look out of her window to hide her face.\n\nNearly dying of embarrassment now, I said, \"Uh, OK, sounds good. I guess I'll see you ladies later.\"\n\nJill locked eyes with me and said seriously, \"Hey, I know I barely know you, but treat her right, OK? She's been through a lot. I don't want to see her hurt again, so just know that if you do, I swear to God I will kick your ass.\" It was clear that she wasn't joking around.\n\nI considered my response for a moment and finally said, \"Jill, I promise I won't hurt her. You have my word.\"\n\nJill visibly relaxed her posture and smiled. She reached out of the window to offer her hand. \"Good answer.\"\n\nI reached out as well but couldn't quite make the distance. I opened the door and grasped Jill's hand and squeezed it. She laughed and said, \"You seem like a good guy. Much better than the last one. See ya.\"\n\nShe began pulling away and Sammi yelled, \"Bye!\" I waved and closed my door.\n\n<center>* * *</center> I walked to the door and knocked lightly. She opened it a moment later smiling widely and said, \"Hi!\" Amy was wearing a pair of ratty-looking jean shorts and a black t-shirt. Her hair was tied up in a ponytail and she had no makeup on. It was obvious that she hadn't showered yet.\n\n\"I hope you don't mind au naturel. You sort of messed up the plans and I didn't have time to get ready,\" she said with a hurt look.\n\n\"Sorry, yeah, I'm pretty good at ruining plans. But don't worry, you look... perfect. The real you. There's nothing you can do to hide how gorgeous you are.\"\n\nShe grinned and leaned her head to the side and said, \"Aw, you're sweet.\" She put her arms out and we hugged for a moment.\n\n\"I ran into Jill and Sammi on the way in. I hope that's not a problem for you. I guess I got here a little too quick.\"\n\nShe seemed chagrined. \"Oh, well... crap. I was kind of wanting to avoid some drama if they found out we were spending the whole day together. But that's fine I guess. I'll deal with it later.\" She smiled and added, \"Hungry? There's leftover bacon, and I can offer you some Cheerios. I'm not much of a cook. We have Jill for that. She's the culinary arts major and aspiring chef after all. Don't get her started talking about food or you'll get sucked into the Jill foodie vortex.\"\n\nI laughed and said, \"I'll try to remember that.\" I actually was feeling hungry, so I said, \"I can never turn down bacon. And who doesn't like Cheerios?\" Amy smiled and I followed her into the kitchen.\n\nWe sat down at the table and talked while I ate. One bite into the bacon and my eyes flew wide. Amy laughed and asked, \"Uh huh. Is that bacon to die for or what?\"\n\n\"This is the best bacon I have ever tasted. How did she make it turn out like this?\"\n\n\"All I know is she gets it from a butcher and bakes it in the oven. She's like, a baking wizard.\"\n\nAfter silently hoping to get to try more of Jill's cooking in the future, we talked about work like we usually did when she came in early, but soon enough the conversation diverged into decidedly more personal topics. She told me about when she was a child and I found out she had gone to the elementary school that was just a few miles away from mine. We talked about the authors we liked and what kind of music and movies we liked and found that we had quite a bit in common. I felt like I could talk to her forever, something that had never happened with anyone else, not even Sandi.\n\nAfter talking for about an hour, she finally said with more than a hint of nervousness, \"I hate to do this to you, but I'd really like to go take a shower. Do you mind just hanging out for a bit while I make myself presentable?\"\n\n\"Of course not. But it would be a lot more fun if I joined you.\" I grinned slightly and put my hand over hers and squeezed it.\n\nAmy blushed deeply but then just laughed and said, \"Oh, so that's how it's going to be, huh? You think you can talk to me for a little while and then you can just go straight to showering with me? Hah! Some nerve!\"\n\n\"I've found lately that a direct approach works more often than not. It cuts through all the clutter.\"\n\nShe looked at me with a dazed expression and shook her head. \"Oh, is that right? Clutter? Unbelievable. I would say at least kiss me first but I haven't even brushed my teeth yet. I'm gross!\"\n\n\"I don't care, and I'm sure you're not gross at all. You're beautiful.\" I quickly took advantage of the opening she gave me and got up and came around the table and she started to stand to meet me. I pulled her up the rest of the way and put my arms around her and began kissing her. She immediately moaned into my mouth and it was then that I felt that she was trembling. I opened my eyes and said, \"Are you OK? You're shaking.\"\n\nShe said nothing but immediately resumed kissing me, and with much more passion. I slipped a hand under her shirt and began caressing the soft skin of her back. I found that her skin was burning hot to the touch. I lifted my hand and her shirt with it until I came into contact with her bra strap. In a quick motion, I squeezed the clasp together and unhooked all the hooks, causing her to gasp into my mouth, and continued softly massaging her back up to her neck. With my other hand, I rubbed her side and then moved up and pushed the thin material of her bra up and out of the way and very gently squeezed her breast in my hand for the first time. I found her nipple and teased it with my fingertips and felt it harden even further. Amy pushed her tongue roughly into my mouth and I sucked on it. I increased the pressure on her nipple and then began pushing my other hand down into her shorts so I could squeeze her ass cheek. Once my hand had passed the waistband of her panties, she broke the kiss and stepped back, breathless.\n\nShe looked into my eyes and took me by the hand and led me to her bedroom. In stark contrast with Sandi's house, Amy's room was a disaster area. Clothes were on the floor, her desk was partially buried under books, papers and various makeup items and a couple magazines were on her bed. She brushed them off onto the floor and meekly said, \"Sorry. I didn't have a chance to do any cleaning. I'm so embarrassed, I didn't think you'd be coming in my room today.\"\n\n\"Sorry about that.\" To myself, though, I thought lecherously, Well, I hope I'll be cumming a lot in your room today.\n\nAmy closed her door and locked it. She noticed me watching and said, \"Just in case anyone comes home unexpectedly. Sometimes Jill comes home and has lunch with me, even though I expect she won't today.\"\n\nShe sat down on her bed and patted the open spot next to her. I sat down and she said in a near-whisper, \"Well, here you are in my bed, Mr. Direct Approach. Now what?\"\n\nI looked directly into her eyes and in my best authoritative voice said, \"Strip for me.\"\n\nAmy inhaled sharply through her mouth and exclaimed, \"What?! Oh my God, where did that voice come from?\"\n\n\"It's something I've been practicing. Did you like the way I said that?\"\n\n\"Yes! I love it! I had no idea you could sound like that. All bossy and commanding. Wow, do you really want me to strip? Like a real striptease? I've never done that, so I'm sure I'll be terrible. Now I'm twice as nervous!\"\n\nUsing the voice again, I said, \"Yes, dance for me.\" Then, in my normal voice I laughed and said, \"Whatever you do will be awesome and I know I'll love it.\"\n\nShe jumped up as she was saying, \"Holy shit, this is going to be fun. We need some music.\"\n\nThe truth was that I most decidedly was not \"bossy and commanding.\" Just a few months before, I wouldn't have even been able to work up the courage to talk to a girl. Sandi had coached me extensively on how to be more dominant in and out of bed. She explained that many women loved it when a man took charge and directed what happened, so she had given me plenty of opportunities to develop that skill, guiding me every step of the way. The real key was to not be an asshole about it.\n\nAmy dug into her closet and pulled out a Bluetooth speaker and turned it on. She put some music on and said, \"Ready?\" She reached behind her back and re-hooked her bra since it was still loosely hanging under her shirt.\n\nShe began slowly dancing to the music. She took a deep breath and started to slowly pull her t-shirt over her head, making constant eye contact. She teased a little by just barely exposing the bottom of the plain black bra she wore and then pulling her shirt back down and turning around. Finally, she completely pulled her shirt off and twirled it around as she threw it to the floor.\n\nNext, she faced away from me and unsnapped her shorts. She leaned forward and wiggled her butt suggestively to the beat as she very slowly unzipped and pushed her shorts down, revealing matching black panties with pink polka dots underneath. Once the shorts were down around her hips, she turned to face me, and with a sultry look pushed her shorts down until they fell to the floor. I noticed that her panties had a cute little pink bow on the front waistband.\n\nI could feel my breathing quicken as I took the sight of her in. She saw my hungry expression and smiled. She turned around to face away from me again and continued to slowly dance in time with the music. She reached up and with a quick motion unclasped her bra.\n\nShe turned back around and swayed and shimmied until her bra straps fell away from her shoulders. She very slowly lowered her arms and pushed her bra down until her breasts came into full view. I just sat there with my mouth open as she spun her bra around like a pinwheel and tossed it onto the floor.\n\nHer perky breasts were smallish but exquisite. They were probably about a B-cup with perfectly round pink areolas. Amy cupped her breasts and squeezed them suggestively and slightly moaned. In my pants, my cock was now straining to get out and I had to adjust it to stop the discomfort. Amy saw this and smiled and turned away again.\n\nShe reached behind her and hooked her fingers into the waistband of her panties and very slowly began pushing them down, still shaking her hips to the beat. Before long, most of her ass was in view. It was stunning, just like the rest of her.\n\nSuddenly she pulled her panties back up and turned to face me. She provocatively started very slowly pushing down the front of her panties, revealing a little bit of the nicely-trimmed reddish-blonde pubic hair hiding beneath the thin fabric. Then, she put her hand into her panties and began to salaciously rub her hand against herself and, with her eyes locked with mine, moaned loudly.\n\nShe sashayed over to where I was sitting and put her hand up to my face. I breathed in her scent and a shiver ran through my body. I whispered, \"Oh God.\" Then, she stuck her fingers into my mouth and it was my turn to moan loudly as I tasted her pussy for the very first time.\n\nI reached forward and tried to pull her panties off but she quickly grabbed my hands away and retreated back to where she had been dancing. She looked stern and wagged her finger to chastise me.\n\nShe began the process all over again, this time working her panties all the way off. Finally, she stood before me completely naked. She reached up again and squeezed her breasts and moaned. She motioned with her finger for me to come to her and reached back to turn the music off.\n\nI stood before her and she began unbuttoning my shirt. She pushed it off and it fell to the floor. She continued with my belt and unbuttoned my pants. She very slowly unzipped them, all the while never breaking eye contact. She knelt and pulled my pants and underwear down in a single motion and I stepped out of them, completely naked. My cock jutted out in front of me in anticipation of what was to come.\n\nAmy looked up at me and smiled. She softly slid her hands up my legs and over my ass cheeks and then around the front until they reached my cock. She took it into her hands and then moved in close and lightly licked the precum leaking from the tip while softly moaning and then began sucking it.\n\nI looked down and noticed that she was squeezing her breast and nipple with one hand as her other hand moved up and down my cock in time with her mouth. She repeatedly pressed her tongue against me and made little circles around the shaft and head.\n\nThen, she slowly ran her tongue along the underside of my cock and moved down and started licking my balls. She moved back up and engulfed my cock with her mouth once more and began aggressively sucking it. She increased the speed of her slick hand and I felt myself starting to get close. I touched her head and said, \"Gonna cum...\"\n\nHer only response was to moan loudly again and take me even deeper until she had to have been nearly gagging. Each time her mouth swallowed me, her tongue would lick all around the head, causing little chills to course through my body. Soon I moaned loudly and felt my cum shoot out of me and into her waiting mouth. As more and more semen squirted out of me, she moaned and continued sucking. She moaned loudly again and it felt like she was almost growling as she tensed up and appeared to have an orgasm. I didn't know that was even possible.\n\nAs my erection subsided, she never let go. She continued softly sucking my cock until all traces of cum were gone. I looked down at her and she looked back up at me and smiled widely. I started to say something but she put her finger to her lips to stop me. She took my hand and started to stand. Instead, I leaned down and picked her up off the floor and lay her on the bed. She moaned again. \"I love it when you pick me up like that. I loved it last night too. Can you carry me everywhere?\"\n\nI laughed and said, \"Of course I will.\" For a while, we lay there holding each other on her bed. Finally, my curiosity won out. \"That was amazing. But I was wondering, did you cum or was that my wishful thinking?\"\n\nAmy giggled. \"Wow, there goes that direct approach again. Yes, I can do it just by squeezing my pelvic muscles rhythmically when I'm really turned on. And...\"\n\nShe closed her eyes and breathed in deeply. She whispered, \"I kind of have a thing with cum. I love it. Everything about it. The taste, the texture, the way it feels sliding down my throat. God, this is so embarrassing. I can't believe I'm telling you this.\" She hid her face in her hands to hide her intense blushing. She even shivered and broke out in goose bumps.\n\n\"That's not something to be embarrassed about. That is without a doubt the hottest fucking thing I've ever heard in my life. Lots of women have a much harder time of having an orgasm than you just did, and do you know how many guys would kill to have a woman that actually likes their cum instead of being grossed out by it? You are blessed!\"",
        "\"Blessed?! More like cursed! It's shameful!\"\n\n\"Uh, no, blessed. Whoever told you that it's shameful was flat out wrong. Embrace it!\"\n\nI pulled her hands away and said, \"Tell me right now. You love it, don't you? Don't hold back with me.\"\n\nShe said with a raised voice, \"YES! OK, I love it! Are you happy now?\"\n\n\"Yes, thank you. I want you to tell me all of your deep dark secrets. I want to know everything about you, even the things you're too ashamed to admit to your closest friends or say out loud. Tell me what you fantasize about.\"\n\nShe gasped and said, \"No, I can't. At least, I don't know if I can yet. I need to know you better first. Jesus, we just barely saw each other naked for the first time and you already found out something about me that I was too ashamed to admit to anyone else. I was trying your direct approach, but this is all going too fast for me. Give me a chance to catch my breath.\"\n\nI sighed. \"OK. You're right. I'm sorry if I pushed you too hard. You want to go take that shower now?\" I ran my hand down her back and squeezed her ass.\n\nShe laughed and slapped my stomach. \"Now you're talking. I'd like to be clean before you're all down in my business.\"\n\n\"Oh? This business?\" I reached down between her legs from behind and ran my finger through her hot wet slit. She moaned loudly while arching her back and said, \"Oh yes!\" She raised her leg and I got to the top of her pussy and began softly rubbing her clit. \"Oooh mmmmm!\" She spread her legs all the way apart and let me continue rubbing as she shifted onto her back. She hoarsely whispered, \"Don't stop...\"\n\n\"What about that shower?\"\n\n\"Later,\" she gasped.\n\nI squeezed the skin surrounding her clit together and moved it up and down, causing her to moan loudly. Not wanting her to cum too quickly, I moved my hand down and pushed a finger inside her. I whispered, \"You are so wet. Do you love the way I'm fingering your tight little pussy?\"\n\nThe only sound she made in response was, \"Mmmmm...\"\n\n\"Tell me you love it.\"\n\nShe gasped, \"Mmmm yes! Love it! Need... you... inside.\" She looked at me pleadingly.\n\nI leaned over and sucked on her nipple, licking it gingerly. It was already hard, but now it grew even harder. I said, \"Do you need my cock inside you baby?\"\n\nShe nodded emphatically and whispered, \"I want you.\" She began trying to pull me up. I had just cum a few minutes before, but the enthusiastic way she was acting now was just so exciting that my cock began stiffening again.\n\nI tried to breathe and think. I took my fingers out but continued pressing my hand firmly against her vulva. I asked, \"Do you want me to use a condom?\"\n\nAmy gave no response except to continue moaning with her eyes shut tightly, so I took my hand away and said, \"Amy?\"\n\nShe blinked her eyes open and looked at me and sighed loudly. She said, \"I have an implant, but I'd feel better if you did.\"\n\nFinally, I was going to see what it felt like to have sex with a condom. I had experimented with just trying to put one on when I had first got them, but now the real thing was about to happen. I jumped off the bed and found my pants and pulled the condoms out and tore one off.\n\nJust as I was about to tear open the package, Amy sat up on her elbows and said, \"Danny, I changed my mind. I don't want you to use it. I just have this irrational fear that it might fail, even though implants are the most effective.\"\n\n\"Are you sure? I don't want you to be worried and anxious until your period comes.\"\n\n\"Actually, with this I don't have periods. Once in a while I'll get a tiny bit of spotting... but that's it.\"\n\n\"No periods, huh? Pretty cool. I guess I should also ask you... and please don't be mad... you don't have any sexual diseases do you?\"\n\nAmy laughed and said, \"Nope. Do you? And I'm not mad. We should have talked about this earlier before it got all out of control.\"\n\nI nodded and said, \"No, I'm clean.\" I jumped back on the bed and said, \"I'm glad you're not upset. Do you think you ever want kids?\"\n\nAmy said, \"Maybe someday. But, enough talking. We can talk all you want after.\" She saw that my penis was flaccid again, so she came down and began sucking me, and in a minute I was back to full hardness. She broke away and said, \"Me on top.\"\n\nI scooted over into the middle of the bed and Amy straddled me. She reached between her legs and positioned me at her opening, then she smiled down at me and lowered herself slowly until I was completely buried inside her for the very first time. She felt exquisite. She moaned, \"Mmmmm\" as I melted into her hot wetness and we became one.\n\nI pulled her downward and began sucking on her nipples as she rocked her body up and down on me. She leaned down even further and we began kissing very passionately. She said with a gasp, \"I dreamed of this moment for so long!\" I kissed and licked her neck and shoulders and even her ears and finally back down to her nipples.\n\nAfter a few minutes, she raised herself up and began pounding me hard. All at once, I felt her vagina tighten around me in a vice-like grip and she screamed into an intense orgasm. I felt a gush of hot wetness surround the base of my cock as she continued moving.\n\nAnother minute went by and the same thing happened again and then yet again. Finally, she collapsed forward onto me but never stopped grinding against me. She was lying directly against my body when what felt like a tidal wave of cum erupted from my cock and filled her pussy. I nearly screamed and pumped into her for all I was worth. I held her tightly against me until the spasms finally subsided.\n\nWhen it was over, I felt like a squishy puddle of jelly. We lay there and just panted until we calmed down.\n\nAmy smiled down at me and said, \"That was so amazing. I can't tell you how long I've been wanting you. I'm so glad we didn't wait for weeks or however long we're supposed to.\"\n\nI didn't have the energy to respond so I just nodded and closed my eyes. Before I knew it, I was asleep.\n\nA few minutes later when I awoke, Amy was still lying on top of me, and my penis was still inside her, even if just barely. She smiled and whispered, \"Hi baby. You drifted off for a few minutes. I was enjoying watching you sleep. You're so peaceful.\"\n\nI smiled and tried to gather my thoughts. \"Can we have a serious talk now?\"\n\n\"Sure.\" She smiled and rolled off to the side and pulled the sheet over us.\n\n\"So tell me about this implant. What is that? Is it an IUD?\"\n\n\"Oh, that. No, it's in my arm. Right here.\" She pointed to a spot in her upper arm. \"It's called Nexplanon. Have you heard of it? My OB recommended it to me. It lasts for three years and then I have to get it replaced. It's the most effective birth control there is. Well, except for abstinence, of course. And let me tell you, I've been doing a lot of that and it sucks.\" We both laughed.\n\n\"I've never heard of it. That sounds way easier than having to remember to take a pill every day. But I just really don't want kids right now. I'd like to at least graduate college and get a good job first before doing something life-changing like that. And even then, I don't know.\"\n\n\"I feel the same way. I'd like to be married and have enough money to pay for a baby before I get pregnant. Plus, I would hate being so fat and gross!\"\n\n\"Aw now, don't think like that. I'm sure you would be a beautiful pregnant mommy.\"\n\nAmy gasped. \"Yeah right! The only good thing about being pregnant is getting bigger boobs.\"\n\nI caressed her breasts under the sheets and said, \"I think yours are perfect already.\" She smiled, but I could tell that she was a little self-conscious discussing them.\n\nIt was obvious from her expression that she wanted to change the subject, so I said, \"I don't know how to ask this, so I'm just going to ask. Just how many times did you cum?\" I smiled and looked into Amy's eyes. She blushed and covered her face with her hands. She giggled and said through her hands, \"A few. God, you're embarrassing me again. I orgasm really easy, OK? Can't we just leave it at that? Why do you need a number?\"\n\n\"Well, I thought it was the most awesome thing ever. It's, ahem, not what I'm used to, let's just say that.\"\n\nShe uncovered her eyes. \"Oh?\"\n\nI looked at her quizzically. \"I'm not sure what I'm allowed to say since it's Amy Day.\"\n\n\"Go ahead and tell me. I said that before, but now I'm OK with talking about the others.\"\n\n\"Well, they don't have multiple orgasms, and I've never felt squeezing so hard the way you can. How did you learn to do that?\"\n\n\"Another embarrassing question,\" she complained. \"On the squeezing, I had a urinary tract infection once when I was about 10. My doctor told me I should practice doing pelvic floor exercises. They're called Kegel exercises. Have you heard of that?\"\n\n\"Sure, I do them all the time. Sa... someone told me about those. I even use a Kegel Trainer app.\"\n\n\"Someone Sandi was right. They're good for men too. And I use that app too! It makes it so easy. I've been doing them for years now. I never had another UTI and I have great muscle control.\"\n\n\"You sure do. I bet you could hold me inside you or push me out and I wouldn't be able to stop you.\" We both laughed and she said, \"Oh, I definitely could.\"\n\n\"But I really do want to know the number. And are they all the same strength?\"\n\n\"No, they're not all equal for sure. Some are just little ones and then others make me want to scream. But, for how many... Let's see, just one on the floor and three little ones and a big one on the bed. Oh, and do you also want to know about the two I had this morning before I knew you were coming over and the six I had last night before I could finally go to sleep thinking about today? And what about...\"\n\n\"Wow, OK, sorry. I just... What I'm trying to say is, you are amazing. Something so special I can't even begin to put it into words. Just, wow.\"\n\nShe giggled. \"Flattery will get you everywhere.\" She nuzzled in close and kissed me softly. She continued in a soft low voice just barely above a whisper. \"But I was going to say that I want you to know the other night I couldn't sleep after I found out your secret that I just about rubbed myself raw I came so many times. I lost count.\"\n\n\"What? I thought you were upset.\"\n\n\"I wasn't going to tell you this, but it may help explain why I went through with this. I was upset, but at the same time, the idea of incest is exciting because it's just so taboo and forbidden.\" I just stared at her in stunned silence.\n\nShe paused and then added, \"I have a question for you now. What is it like to be with your own mother? How's that for direct?\"\n\nHer revelation and question struck me like a hard slap in the face and I was caught off guard. I had thought that Amy was turned off by incest, but now here she was telling me that she thought it was exciting. That really did help explain her sudden change and wanting to tell me her true feelings about me.\n\n\"Wow, OK, I need a minute to wrap my head around what you just said. You think incest is exciting?\"\n\n\"See how that feels? I hadn't planned on telling you that, but like you said I also don't want any secrets between us. At least, not eventually,\" she hedged. \"Now tell me what I want to know. What is it like to be with your mother?\"\n\nI decided to just tell her everything as honestly as I could. \"OK, you asked for it. It's like nothing else. It's like taking the love I had for her before and multiplying it times a thousand. Before, I hid a lot of my most personal self away from her. But now, I share every single thing with her. Nothing is off-limits. When we make love, it's like I imagine Heaven to be. Angels singing. Floating on clouds. Like that. Just thinking that I'm inside the very place where my existence began is thrilling beyond belief. And giving her intense, mind-blowing orgasms seems like the ultimate way to express to her how much I love her and will always love her, until the end of time.\"\n\nI looked over at Amy and noticed that she had her eyes closed and then she moaned slightly. I guessed that she was probably touching herself under the sheet. She said, \"That was so beautiful. Now tell me how it feels when you cum deep inside her. Mmmm.\"\n\nI reached under the sheet and rubbed one of her nipples between my fingers and felt it instantly harden. \"It feels like every ounce of pleasure that my body can create flows out of me and into her. It's like we become a single entity made of nothing but pure love. A love that can never be transcended.\" I found her hand exactly where I had guessed and pulled it away and gently asked, \"Why don't you let me take care of that?\" She opened her lust-filled eyes and nodded.\n\nI quickly moved down, pulled the sheet away and began licking her clit, which was clearly poking out from under its hood. Hers was by far the largest clitoris I had encountered. Amy moaned loudly and arched her back. I moved down and stuck my tongue inside her pussy. I could feel Amy flexing her vaginal muscles rhythmically.\n\nI decided to test the waters and moved a little lower, gently teasing her anus with the tip of my tongue. Amy gasped and sharply squeezed as I brought my finger up to her clit and gently rubbed it. She continued moaning so I started licking her asshole more firmly. Suddenly, Amy pulled her knees up to her chest, causing her butt cheeks to open widely.\n\nI stuck my tongue into her asshole as far as it would go. Amy gasped and said, \"Ohhh!\" Once again she squeezed her muscles, trapping my tongue inside her. Suddenly she gasped, \"Suck my clit!\"\n\nI captured the entire area surrounding her clit and sucked it into my mouth and licked it firmly for several seconds. Amy immediately put a finger into her asshole as I moved up, and in just a few seconds she convulsed into the loudest orgasm yet.\n\nAfter her body stopped shaking, I said, \"Holy shit,\"\n\nFrom above, Amy just laughed. She said, \"Holy shit is right. You actually licked my ass, you big freak! No one has ever done that. Oh my God it felt amazing! I could've cum from just that. Are you ready again?\"\n\nI nodded and she rolled over and got on her hands and knees.\n\nI moved up behind her and easily pushed into her pussy again. As I got started moving, I reached down and rubbed her asshole with my thumb. It didn't take very long before I emptied another load deep inside her. Panting and gasping for air, I flopped down on the bed beside her.\n\nA few minutes went by and Amy said, \"I need to get up for a second to go to the bathroom and get cleaned up. I'm dripping everywhere.\" She giggled.\n\n\"OK. I need to go too when you're done.\"\n\n\"Just a sec and I'll be right back. Don't go anywhere.\"\n\n\"I'll be here. I doubt I could walk very far right now.\" She kissed me quickly and went to the bathroom across the hall, returning just a few moments later.\n\nAfter I had used the restroom, I came back and said, \"Well, we could still shower and actually go to lunch if you feel up for it. I'm a little hungry after that workout.\"\n\n\"That sounds like a plan. Let me get you a towel. Go ahead and jump in and I'll be right there.\"\n\nIn the shower, I gently used body wash to clean Amy, all the while kissing and touching and exploring her body. Since we were pretty wiped out, nothing overtly sexual happened other than soft sensual caressing and kissing. That alone made the shower last until the hot water was starting to run out, so we finally had to finish up.\n\nAs we got out and began drying off, she said, \"Do you think I could hire you full-time to just be my personal bather? That was an incredible shower.\" Amy stood at the mirror and applied lotion and brushed her hair.\n\nI bent at the waist and said, \"At your service, madam.\"\n\nShe giggled and clapped quickly. \"Yay! Just what I've always wanted!\" In a British accent she said, \"From this day forward, you shall be my personal bath servant.\" She giggled.\n\nAs we dressed, Amy said, \"Do you like Thai food? There's a place just down the street that delivers. We could eat here and talk because I still have so many things I want to talk to you about that I can't imagine saying at a restaurant.\"\n\n\"Sure, that would be great.\"\n\nWe went and sat back down at the kitchen table again, and after Amy called in our order I noticed a large pile of dishes in the sink. I said, \"Wow, do you need some help with those?\"\n\nAmy turned and looked at the dishes and then rolled her eyes. \"Hah, I know! My roommates are total slobs. There's always dishes piled up like that. I mean, I'm a slob too, but they are even bigger slobs than me. You should see the piles after Jill goes into full-on chef mode in here. This is nothing.\" She giggled.\n\n\"Well heck, I bet we could have those done by the time the food gets here. We'll be a team.\"\n\n\"Are you being serious with me right now? You actually want to help me wash our dishes? Uh, did you turn in your Man Card?\" She giggled.\n\nI laughed and said, \"Man Card? Come on now, that hurts. I wash dishes all the time. It'll be fun. Now get your butt up and let's do this! They wouldn't pile up so bad if you guys did them while the cooking was going on.\" I got up and slapped the side of Amy's butt in her seat, causing her to squeal like a little girl. She jumped up and said, \"Yes, Daddy! I'll be a good girl and help!\"\n\nI squinted my eyes at her last remark and she just smiled sweetly. \"Come on, Daddy, let's wash the dishes.\"\n\nI decided to go with it. I said in my best authoritative voice, \"And no cutting corners this time. If those glasses aren't sparkling when we're done, Daddy's going to whip your naked behind.\"\n\nAmy hung her head and said regretfully, \"I'm sorry about last time.\"\n\nI helped \"my daughter\" put away the dishes that were already stacked precariously in the drainer and then we pulled all the dishes out of the sink and put them on the counter so we could fill it with hot soapy water. Amy also went and gathered up glasses from the other girls' rooms.\n\nWorking as a team, it only took about 20 minutes to get most of the dishes done. Amy washed and I rinsed and organized everything into the drainer. When it was time to wash the glasses, she turned and asked, \"Can you show me how to make the glasses all sparkly Daddy?\"\n\n\"Sure, honey bun, it's really not that hard. Here, you face the sink and I'll put my arms around you to guide you.\"\n\nI stood behind her and gave directions. \"First, you need to drain out that dirty water and run a new sink full of clean, hot soapy water.\" Amy reached into the water and pulled the plug and we watched as it drained away. She made cute little blub-blub sounds as the water went down the drain.\n\nI said, \"Now, rinse all the leftover soap away and get the hot water going.\" I moved up right behind her until my body was touching hers. I even wrapped my arms around her and pulled her close to me and squeezed her. In response, she tilted her head back and looked at me and said, \"This really is fun, Daddy.\"\n\nI moved her hair to the side and kissed the back of her neck. \"I knew you'd come around, baby girl.\"\n\nWhen I said \"baby girl,\" Amy firmly pushed her ass into my groin and rubbed it against me.\n\n\"Alright, make sure the brush is good and rinsed out. Now, let me show you...\"\n\nI had Amy hold the brush with one hand and the glass with the other. \"OK, push the brush all the way in and when you get to the bottom, push hard and rotate it back and forth, like this.\" I turned her hand for her. \"And then, turn the glass around and move the brush up and down the sides. Like this.\"\n\nAmy said, \"Ooh, it looks like the brush and glass are doing it Daddy!\" She giggled innocently.\n\nI pretended to be shocked and gasped loudly. \"What did you just say? Naughty girl!\" I moved back and slapped Amy hard on the ass.\n\nAmy yelped. \"OW! Oh Daddy, I'm so sorry! I don't know why I said that. I won't do it again.\" I moved back behind her and she squirmed against me again, obviously feeling my stiff erection pressing into her ass.",
        "\"It's OK sweetie. Daddy's sorry for spanking you. I'll make it up to you.\" I leaned forward and kissed her neck again. I put my hands on her sides and slowly moved them up and around until my hands covered her breasts. I gently rubbed and squeezed them through her shirt, feeling her nipples harden under her bra.\n\n\"Mmmm, that makes my boobies feel so nice Daddy.\"\n\n\"Keep washing. Sparkling, remember?\"\n\n\"Yes, Daddy.\"\n\nIt seemed like the glasses went on forever. I had to stop what I was doing to dry the dishes in the drainer and put them away twice to make room for them.\n\nJust before we were done, the doorbell rang. I said, \"I'll get it. Keep washing, girl.\"\n\n\"Yes sir.\"\n\nI went to the door and paid for the food with some of the money Sandi had given to me earlier. The delivery guy thanked me profusely when I told him to keep the change and he figured out that he had just made a $15 tip. I just smiled and closed the door.\n\nI came back to the kitchen and sat the bag down on the table and went back to the sink to reassume my position right behind Amy, rubbing myself between her butt cheeks again. I reached around her again and squeezed her soft tits.\n\n\"Oh Daddy, that feels so good. It makes my boobies all tingly. Mmmm...\"\n\nAmy put the final glass into the drainer and pulled the plug. She said brightly, \"All done!\" She turned around quickly and jumped up and down excitedly. \"Yay!\"\n\n\"You did a fantastic job on those glasses, sweetie pie. So sparkly! You deserve a reward.\"\n\n\"Oh goodie! What do I get? Candy?\" She smiled and her blue eyes sparkled like stars.\n\n\"Well, what would you like other than candy?\"\n\nAmy pretended to think it over and finally looked down in embarrassment and asked, \"Could I get a big hug and kisses?\"\n\nI laughed and put my hand under her chin. \"Is that all? That's too easy. Come here, pumpkin.\"\n\nAmy rushed into my arms and hugged me as if her life depended on it. She looked up into my eyes and said, \"Oh Daddy, I love you so much.\" I said back to her softly, \"Daddy loves you too, my sweet baby girl.\"\n\nInstead of kissing me on the cheek, however, she kissed me hard on the lips, pushing her tongue into my mouth.\n\nI pulled back and gasped. \"Amy! You're not supposed to kiss Daddy like that! I'm your father!\"\n\n\"Didn't you like it?\"\n\nI gasped again and said, \"Did I like it? No! I, uh... Well... OK, maybe I did like it a little. But we're not supposed to kiss that way. Only Mommy should kiss Daddy like that.\"\n\nAmy said in a childish tone, \"Why does Mommy get to kiss you the good way and not me? I love you just as much as she does and I'm just as pretty. Don't you think I'm pretty, Daddy?\"\n\n\"Of course you are. But that doesn't mean...\"\n\nAmy cut me off and kissed me again. She also reached down and rubbed my cock through my pants. My resistance was fading and I brought my hands to her breasts and squeezed them again.\n\nA few minutes went by until finally she broke the kiss and looked down and smiled. \"We'd better stop this little game or we'll never eat.\" She giggled. \"If only washing dishes was that much fun all the time! This is the one time I'm glad this stupid apartment doesn't have a dishwasher.\"\n\nAs we ate, we talked about what all had happened. Amy said, \"The others have really taught you to be a good lover. You're not like other guys.\"\n\n\"They have been great teachers. But, I have to say, I'm really worried that I won't be able to keep up with you. You're kind of a wild woman.\"\n\nAmy giggled. \"I'll take that as a compliment. You're doing just fine so far keeping up. Three times is amazing for a lot of guys.\"\n\nI paused and looked directly into her eyes. \"And it seems like maybe just maybe you're into the fantasy of incest even more than you led me to believe before. First you tell me you think it's exciting and then you start a Daddy/Daughter role-play. Are you attracted to your dad?\"\n\nShe nearly choked on the food in her mouth and blushed deeply. \"Damn you. You just slice right into the heart, don't you?\"\n\n\"Direct approach.\"\n\n\"Fuck your direct approach. I have my limits you know, and that's one.\" She groaned and put her head into her hands.\n\nShe breathed deeply and let out a huge sigh. To try to get her talking, I said, \"I'm sorry. You already know my secret, and you know you can trust me no matter what. At least I hope you know that, because it's true. If you don't feel comfortable talking about your fantasies, I won't pressure you. But if you want to talk about this, you have to know that I may be one of the few people you could tell who won't judge you or be critical in any way.\"\n\nShe lifted her head and looked at me directly in the eyes. \"I trust you. Really, I do. This day has been so special, and I'll never forget it for as long as I live. I hope we can have many more days just like this. You just need to slow down a little on the questions.\"\n\nAs she spoke, her voice began to crack and tears streamed down her cheeks.\n\nI stood up and said, \"I'm really sorry. Come with me.\" I took her by the hand and led her to the sofa in the living room.\n\n\"Come here and hold onto me.\"\n\nShe sobbed into my shoulder and whispered, \"I do want to be honest with you. I'm just not used to anyone asking things the way you do. It's brutal. You just strip away all the bullshit formalities and just straight out ask the real question and it completely catches me off guard. I have all these walls built up and you can't just ram a wrecking ball through them without it hurting. So just understand that the subject of my father is not something I can easily talk about. I've never told anyone how I feel about him. I am not just attracted to him. I have real feelings for him and fantasize about being with him. I... I masturbate thinking about him and feel ashamed after. Other times I imagine him being the father of my babies and being married to me. So now you can see that when I discovered your secret I knew I was like you. The only difference is you actually did something about it and I'll never have the guts to even open my mouth. Maybe I need to try your direct approach.\" She sighed very deeply and closed her eyes, wiping tears away as new ones streamed from her eyes.\n\nIt was clear that it took a great deal of strength for her to let me into that deep, hidden aspect of her life, and it made me feel all the more closer to her.\n\n\"Thank you so much for opening up to me like that. I know that had to be really hard. But what you just told me is nothing to be ashamed of. I have a feeling that way more people than you might think have these kinds of feelings. I know I did, and just like you I denied them and pushed them out of my mind as just a fantasy and something that would never happen. But then, somehow, it did happen. Now there is something I haven't told you that I need to get permission to share, but you should know that if that hadn't happened, all of this would have never happened to me either. I'm almost sure of it.\"\n\n\"You have even more secrets?\" she asked incredulously.\n\n\"Yes, but it's not my secret to share. Just saying that will probably tell you more than I should have.\" I sighed but never let go of her.\n\nShe correctly guessed, \"So Sandi has a secret. An incest secret other than you and her. I hope you'll be able to tell me in time because now I'm dying to know.\"\n\n\"I'm sure you'll find out soon enough.\"\n\n\"I have a couple theories already.\" Amy squeezed me super-tightly and I squeezed her back, deciding to not go any further with that line of conversation.\n\n\"So would you say we've had a successful real first date?\" I asked.\n\nShe sat up and burst out laughing and almost yelled, \"NO! We didn't even get to go out! This wasn't a date. This was, this was... I don't even know what this was. Sex and washing dishes? Are you fucking kidding me? We sort of skipped a lot of steps here, dude. You still owe me a real date!\"\n\n\"But the Thai food was pretty good though, right? At least I thought so.\"\n\n\"Yeah, I guess. But we get food from there sometimes when Jill doesn't feel like cooking, so it wasn't anything special to me.\" She scrunched her face into a fake frown and stuck her lower lip out like a little child, which made me laugh.\n\nI reminded her, \"The shower was nice.\"\n\n\"Hmm, OK well you have me there, my faithful bath servant. That was the nicest shower ever. And then the whole roleplaying thing was a lot of fun. And I do appreciate your help with the dishes. Jill and Sammi will be ecstatic that they don't have to hear me bitching about that tonight.\" She giggled.\n\nI added, \"And hey, the conversation has been almost like a free therapy session. We could never have done that if we went out somewhere. I know I feel like we're much closer now. To me, this was better than any normal date could have ever been. We did skip some steps, but aren't those steps all just leading up to what we did today?\"\n\nAmy leaned in and softly kissed me. She said, \"Yeah, I suppose you're right. I can't thank you enough for getting me to tell you about my dad. I actually feel a little better about myself now. Maybe I won't feel so ashamed anymore. I never thought I'd be able to share that secret with anyone and I'm so glad I was able to with you. We share a special bond now, you and me.\"\n\n\"We do. I guess now we're both in each other's Circle of Trust, like in Meet the Parents.\"\n\nAmy laughed. \"Exactly. And if you think about it, all those times we talked at work were kind of like little mini-dates where we got to know each other. But still, I'd like you to treat me like a lady and take me out on a real date!\" She giggled.\n\nI smiled and said, \"You are a special lady.\" I raised my hand and caressed her hair. Amy closed her eyes and held my hand against her head.\n\nFinally, she whispered, \"Why do I have to share you? You are my dream come true. I want you all to myself. I'm going to steal you away from the others if it's the last thing I do.\" When she said the last part, she tried to say it in a non-serious way, but to me it was clear that she really meant it.\n\nTo myself, I guiltily thought, I might just let you. I already feel like we are kindred spirits meant to be together forever. What if this is Sandi's ultimate plan? But what about our commitment? I love Sandi, but I could see myself marrying Amy in time. Could I go from having sex with multiple women to only one? Maybe if that one woman is the one I'm holding in my arms right now, I could.\n\nAmy leaned forward and rested her head on my shoulder again. We sat on the couch for many minutes, just holding each other, listening to each other breathe.\n\nFinally, she sighed and said softly, \"OK, this really was the best date ever. I couldn't ask for more.\"\n\nAmy moved to kiss me, and we kissed and touched and sighed and looked into each other's eyes until we were tired, and then just held one another in an unending embrace. There were still about two hours left until I needed to leave, so I asked, \"I know this will sound strange, but would you like to lie down on your bed and take a nap for a little while? I'm pretty worn out.\"\n\n\"That doesn't sound strange at all. It sounds perfect. Come on.\" She held my hand and led me back to her bed. This time, we just plunked down with all our clothes on and nestled in together. Even with the blinds closed, it was still pretty bright, but that didn't matter. We were asleep within minutes.\n\n<center>* * *</center> When the alarm I had set on my phone went off, for a moment I thought it was morning. Slowly, I realized where I was and that I was lying next to Amy in her bed. I sat up and started to wake up.\n\nAmy grumbled hoarsely, \"Your phone is so loud! It scared the shit out of me.\"\n\n\"Sorry about that. But it's about time for me to go.\"\n\nAmy made a loud, disappointed sound and buried her head in her pillow. She turned her head and asked, \"When is the next Amy Day?\"\n\nI sensed her great disappointment and couldn't think of an easy solution that would work for everyone involved. I sighed and said, \"I know, I'm sorry. I don't know when I can do a whole day again yet. I know I shouldn't call in sick again. We can still meet during my lunch hours until school starts. And maybe Sandi would be OK with me sleeping over here sometimes. Or maybe you could come sleep over at our house in the guest room. I have no idea what people do in an open relationship. This is all new to me.\"\n\nAmy perked up. \"A sleepover at her house? Do you really think she would let me be there with us having sex in another room? I don't know how she would be OK with that. But that would be so much better than here with these paper-thin walls. I can hear Jill snoring sometimes or when Sammi uses her Hitachi. Wow, if you can pull that off, I will be a happy girl.\"\n\nI wanted to know what she meant by \"Hitachi\" but I let it go. Instead, I said, \"Well, if I've learned any lessons in all this it is that you can only get what you ask for. You mainly just have to be brave enough to ask.\"\n\nAmy smiled. \"That's so true. How can you only be 19? You seem so much older sometimes.\" She reached up and ran her fingers through my hair and looked longingly into my eyes, and I took her hand and kissed it.\n\nI smiled and stood up. \"I'm sure you'll soon discover that I'm mostly still just a stupid kid who lucked into something truly amazing and special. Walk me out to the car?\"\n\nWe walked out to the car together and hugged one last time. Amy said, \"Call me. So will you ask her about sleeping over?\"\n\n\"Yep. Do you want me to wait until you're home to call?\"\n\n\"That would be best. I know they don't like me taking personal calls at work.\"\n\n\"How about if you put your phone on vibrate and I send you a text, then you call me from somewhere safe so we can talk.\"\n\n\"That works. And that way I won't have to wait as long.\"\n\nI got into the car and put the window down. \"I'll never forget today.\" Amy leaned down and kissed me through the window and then watched as I pulled away.\n\n<center>* * *</center> When I pulled into the driveway at Sandi's building, she was sitting on a bench waiting. She walked to the car and got in, looking like she did every other day, and we headed home.\n\n\"Well?\" she asked. Before I had the chance to respond, she quickly said, \"Never mind. I know that look. You definitely did it. Didn't you?\"\n\nI said, \"We never left her apartment all day.\"\n\nShe giggled and said, \"I knew she had decided. I could see it in her eyes.\" She patted my leg a couple times and then asked, \"Was it good?\"\n\nNot knowing what to say that wouldn't hurt her feelings, I just managed, \"Yes.\"\n\nShe laughed, but in a peevish way and asked, \"Yes? That's it? C'mon, I need details. I have to admit that I couldn't stop thinking about you with her all day. I had to masturbate in the bathroom three times. When I get you home, I need you in a bad way. Fuck, I can't even wait. Tell me everything, right now!\"\n\nI began recounting the day's events, not leaving out a single detail. As I spoke, she took off her seatbelt, pulled up her blouse, unbuttoned her pants and stuck her hands down the front of her panties. Seeing my concerned look, she breathlessly said, \"I'll be fine. Just keep your eyes on the road.\" Once in a while, she brought her fingers and put them to my mouth to lick clean as Amy had done. She kept doing this over and over and moaned each time I sucked her fingers clean.\n\nShe breathlessly said, \"God, I'm feeling especially nasty.\" She moaned a little and quickly brought her hand to my mouth, and it was dripping wet. This time, the liquid I was tasting was her pee. I laughed and said, \"You're so crazy. Oh man, it's dripping down my neck onto my shirt now.\"\n\nI glanced over at her and saw that she was completely flushed down to her neck with her eyes closed and decided to just go with the moment and said in my best authoritative voice, \"Give me more of your hot piss, you little bitch in heat!\"\n\nShe growled loudly and said, \"Yes, I'm your bitch! Take all my nasty piss and swallow it!\" She kept squirting tiny dribbles of pee onto her hand and feeding her wet fingers to me. She was so turned on that she was trembling, and a few stray drops of pee were starting to drip down onto the car seats as her hand shook on its way to my mouth. By the time we turned the corner to our street, the top part of my shirt was getting wet. Right before we turned into the driveway, she leaned over and frantically unbuckled my belt and undid my pants. I raised up and let her roughly rip my pants and underwear down around my ankles. She engulfed my precum-soaked cock and continued to frig her clit. Once we were in the garage, she urgently kicked her shoes off and pushed her pants and panties down and off. I pressed the button to close the garage door and moved the seat all the way back and reclined it.\n\nSandi tore off her blouse and I reached behind her and nearly ripped her bra trying to get it unhooked. She climbed over the center console and impaled herself onto me. Finally I got her bra off and pulled her to me and started sucking her nipples and squeezing her tits very roughly. She growled, \"Take me! Oh FUCKING MOTHERFUCKER your cock feels so good in my nasty cunt!\"\n\nWe frantically fucked there in the garage for several minutes. Sandi kept flailing around and knocking into the horn, causing it to blow randomly. She didn't seem to care, completely lost in the moment. She was rubbing her clit as she slammed her drenched pussy repeatedly down on my cock. Lost to her overwhelming lust and not caring about the consequences she leaned back as far as she could and screamed, \"YES!\" and squirted out even more piss between us. Just after that, she closed her eyes and became silent. Ten seconds later, with her fingers rubbing her clit at what seemed like light speed, she let out a blood-curdling scream and came. I let go and unleashed my cum in her pussy.\n\nFor a moment, we just panted. Sandi collapsed forward onto me and was totally covered in sweat, pussy juice, and dripping piss. I opened my eyes and all of the windows in the car were completely fogged over. I reached over and opened the door to let the outside air in. I breathed deeply and said, \"Honey...\"\n\nShe remorsefully said, \"I know... Fuck.\" We slowly scooted out of the seat and out of the car, trying our best not to allow any urine to leak down between us to the leather seat below, and were mostly successful. I held onto Sandi as she slowly stood up. Once she was up, she turned and ran to the door and tried to open it, but it was locked. She said, \"Fuck! Help.\" I got there and fished my keys out of my pocket and opened the door for her. She ran in to get towels and Nature's Miracle to clean the seat. Sandi blotted the seat dry and used the spray and let it sit. She left the car door open and we went inside to shower and of course had to run an unexpected load of laundry.\n\nAs we stood in the shower, we held each other as the warm spray of water rinsed our bodies. I said, \"I've never seen you quite like that. It was like you turned into a beast.\" She ran her fingernails down my chest and growled loudly, and we kissed passionately in the shower until the water almost ran cold. Finally, we got out and Sandi dressed in her comfortable purple nightshirt and I just put on underwear.\n\nAs we ate dinner a while later, she was going over again how I had helped Amy wash their dishes and she smiled widely. \"You're a natural, kiddo. Just wait. When those roommates of hers find out what you did, you're in like Flynn.\"\n\nI looked at her questioningly. \"You really think so? Flynn?\"\n\nShe smiled and waved. \"Sorry, it's before your time. But yes, I'll bet you a million dollars that her last boyfriend never did anything like that.\"\n\n\"So the next time I'm there maybe we can do her laundry. You know, to seal the deal. I can just picture me sitting there on the floor with her folding up her cute little polka dotted panties.\" I laughed.",
        "\"That's the spirit. You really should try it. I'm sure not much folding would be going on though. The way to a woman's heart is helping her with the housework. Speaking of which, we have a few dishes right over there with your name on them. That dishwasher's not going to empty itself either, you know.\"\n\nI groaned. \"I walked right into that. Alright, alright. I am your willing slave, after all.\" I paused for a moment and then said, \"But I've been trying to go over in my mind how to ask you this.\"\n\nShe took one look at me to size me up. \"Sandi, when can I see Amy again? See now, wasn't that easy? I keep telling you that the direct approach is almost always the most effective.\"\n\nI laughed and said, \"Yes, I know, I know you can see right through me like glass, blah, blah, blah. But let me please ask in a nicer way than that.\" I paused and breathed deeply. \"Sandi, would you be willing to allow Amy to spend the night in the guest room? At night seems like the only time we'll be able to see each other for more than an hour since she works in the evening. She said her apartment wouldn't work well because it's so easy for her roommates to hear her.\"\n\nSandi giggled. \"I bet they'd be in their beds furiously rubbing their clits listening to you two go at it. Wouldn't it be exciting to think about them getting off like that?\" I couldn't lie. I grinned and nodded. With a devilish grin, she asked, \"Are they cute?\"\n\nI laughed and said, \"Oh stop it! But yes, they are.\"\n\nShe let it go and said, \"But, of course you may bring her home. This is your house now too. I'm sure I'll be a little jealous at first, but I've been getting better about that, especially after Bethany's birthday. If I can make it through that, I can make it through anything. I am a little concerned about how I'll feel being left all alone though. Who knows, maybe we can all have some fun together...\" She winked.\n\nIgnoring that last comment for now, I decided to push my luck and said, \"But I do need to ask a serious question. Amy and I were talking about some things today and the subject of how this all came about was asked, and I had to give a partial answer. Is it OK with you if I tell her about you and Mom and the rest of what we've done?\"\n\n\"Well that was quick.\" She sighed and added, \"I guess it's OK with me, but I'll need to talk with Dee and Mom to make sure. Please don't say anything about my, uh, more nasty proclivities though because I'm sure she wouldn't understand that at all. Perhaps in time we'll see how she feels about that kind of thing. She's really getting into our business quickly, isn't she?\"\n\n\"Yeah, she's very curious about everything. And just like you, she's smart and nothing gets past her.\"\n\n\"Alright, I'll call after dinner.\"\n\n<center>* * *</center> After dinner, Sandi spent almost an hour on a three-way call with Mom and Tina. Finally, she caught my attention and motioned for me to join the call.\n\nI went and grabbed one of the other cordless phones from the bedroom and came back and sat down across from Sandi and said, \"I'm here.\"\n\nBoth Mom and Tina said, \"Hi!\" at the same time.\n\nMom said, \"So, Sandi has been telling us all about your Amy adventure today. It sounds like you had an eventful day. We're all feeling sufficiently jealous now. Are you sure we can trust her with this information?\"\n\n\"Absolutely, yes.\"\n\nTina said, \"This really isn't something I wanted to be broadcast to the outside world, you know. But if you're sure we can trust her, that's good enough for me. Remember, Daniel, your family and our safety come first. Always.\"\n\n\"Yes, ma'am, I understand.\"\n\nMom said, \"OK then. Hey San, should we invite her for Saturday morning? I'd sure like to see her in person to tell her this.\"\n\nTina said, \"Oh, you and your weekend visits. No fair! When do I get a visit?\"\n\nSandi said, \"Mom, you and Dad are welcome here anytime.\"\n\n\"Yes, I know... It's hard for your old mother to travel that much,\" Tina said dejectedly and sighed loudly into the phone.\n\nSandi went on, \"I know. But Dee, that sounds fine by me. But one more thing. We're forgetting Bethany. Can she get on the line too? Or can you at least ask her if she's OK with all this? You know how she gets if she's left out.\"\n\nMom giggled and said, \"Oh, I do. Hold on, gotta run upstairs.\" There was an audible click as Mom muted her line.\n\nSandi laughed and said, \"Well, isn't this fun? Maybe we should have a phone orgy while we all here.\"\n\nEveryone laughed and there was another click and Mom said, pretending disapproval, \"I heard that, slut!\" And just as quickly, another click came and we laughed even harder.\n\nPretending to be snide, Sandi said, \"Ha! I'll do whatever I want, cunt!\"\n\nThrough the laughter, Tina huffed, \"You two be nice to each other or the next time I see you, you'll both be properly spanked!\"\n\nSandi faked a sigh and said, \"Do you promise, mommy? I've been such a bad girl and I need your firm hand to learn my lesson.\"\n\nTina said in a low voice, \"I love it when you call me mommy, sweet love.\"\n\nSandi said, \"I wish you were here, mommy. I'd show you just how much I miss you by licking every inch of your body and then sucking your delicious clit until you came so hard that you pass out.\"\n\nI had never heard Sandi talk so sexually to her mother like this before, and it was very exciting to be allowed to hear.\n\nOn the other end, we heard, \"Mmmm...\" It was clear that Tina had started touching herself quietly, and I could see that Sandi had her fingers between her legs too.\n\nMom came back on speaker and said, \"Here she is. She said OK on inviting her.\"\n\nBethany said, \"Did I miss much?\"\n\n\"Not much, sweetness. Where are you and your mom right now?\" Sandi asked.\n\nBethany said, \"We're sitting on my bed.\" We heard some rustling around and a moment later she added, \"And now we're both wearing our birthday suits. I've been missing you and Danny so much, Sandi.\"\n\nFrom across the room, Sandi pulled her nightshirt off and motioned for me to come to her with her finger. I hung up my phone and she put hers on speaker and put it down. \n\nSandi said, \"We miss you too and I can't wait to see you. I'm going to wear you out this weekend, you know that? I sure hope you're ready.\"\n\nBethany said, \"Oh God, yes! Since you've been gone, Mom, or I should say, Mommy and I have been getting a lot closer.\"\n\nWe could just barely make out the sound of Mom kissing Bethany when she wasn't talking.\n\nSandi said, \"Oh good, I'm glad she's been getting close to her baby girl. Tells us about some things you do with your mommy.\"\n\nBethany said, \"Just yesterday while Daddy was gone, Mommy came up to my room to play. She knocked on my door and when she came in, she was completely naked and had a huge black dildo strapped onto a leather harness.\"\n\nWe heard Tina gasp and she asked, \"I'm here too, munchkin. I hope that's OK.\"\n\nBethany said, \"Oh, hi Grandma. It's fine.\"\n\nMom said, \"Are you touching yourself right now, mommy? Right now I'm teasing and pinching Bethany's nipples.\"\n\nTina's low reply came, \"Yes, my darling.\"\n\nBethany's voice was a bit breathless as she continued, \"Mommy came in and asked if I needed her big, hard cock in my pussy. Well, of course I got on my knees and sucked on Mommy's cock and got it nice and wet. While I did that, I fingered my pussy and rubbed my clit.\"\n\nWe heard Mom whisper, \"Lie down.\"\n\nBethany said, \"Mmmm, Mommy's licking my pussy right now.\"\n\nSandi looked at me and I immediately dropped to the floor and began running my tongue up and down her hot slit.\n\nSandi said, \"Danny is licking my pussy too. Tell us what your mommy did to you next.\"\n\nBethany moaned and said, \"Ohh, then she... pulled me onto my bed and ordered me to get on my hands and knees and get ready to let her fuck me... mmmm doggy style. Mommy pushed that monster black cock deep into my cunt. It... mmmm felt so wonderful. My pussy was so wet it dripped down to my knees. Mommy fingered my tight ass as she pounded that giant baseball bat cock into me until I couldn't take it anymore and begged her to stop.\"\n\nOn the speaker, I heard what must have been Tina gasping. Above me, Sandi moaned and looked down at me suggestively.\n\nI got my finger wet and slid it slowly into Sandi's tight asshole. Sandi said, \"Danny's got his finger in my asshole right now!\"\n\nBethany breathily said, \"Mommy's fingering my ass again too, and it feels so good! Mmmmmm!\"\n\nTina said loudly, \"Oh God! I'm cumming! Mmmmmmm!\"\n\nSandi said, \"Oh Mommy, I'm cumming too!\" Sandi moaned loudly as she came under my tongue.\n\nBethany said in a muffled voice, \"Mommy's going to 69 with me now!\"\n\nWhile it was all thrilling, I was far too wiped out to have one more orgasm myself, but it was a lot of fun and extremely mentally arousing to bring Sandi off with my tongue and to hear everyone else experience so much pleasure. She looked down at me and smiled widely and pulled me back up. I snuggled in next to her on the couch and kissed her as Bethany and Mom got close to their orgasm.\n\nWe waited for a couple minutes until we heard both of them moaning loudly and it was clear that both of them were cumming, only seconds apart.\n\nAfter a couple minutes, Sandi asked tentatively, \"Is everyone alive?\"\n\nBethany wanted to know, \"Did Danny cum?\"\n\nSandi said, \"No, your dear brother is pretty tuckered after spending the day with Amy and after I attacked him in the car.\"\n\nDisappointed, Bethany said, \"Aw, no fun. I'll make you cum this weekend, OK Danny?\"\n\nI said, \"I look forward to it, Beautiful. I wish I could have done what Mom... Mommy just did to you.\"\n\nMom said, \"And I wish you could have done to me what Bethy just did, except with that yummy cock of yours.\" Everyone laughed.\n\nTina said, \"I wish Dave had been here so I wouldn't have needed to do that myself.\"\n\nSandi said, \"Aw, sorry about that. I hope it felt good at least...\"\n\nTina said, \"It was spectacular, honey. You had a perfect idea there and it was really fun. Bethany, that story was... very arousing, to say the least. I wish I could have been there to see that. Now and yesterday.\" She giggled.\n\nBethany said, \"Well, next time you're here, I'd be glad to let you join in if you want.\" Her tone sounded like she meant it.\n\nI looked at Sandi and she grinned widely and gave me an ecstatic double thumbs up. She silently mouthed the word \"Yes!\"\n\nSlightly surprised, Tina said, \"Well, I very much look forward to that, honey. Well, ladies and Danny, I'd love to keep playing, but I should probably say goodnight.\"\n\nAfter we said our goodbyes and Tina had hung up, Bethany asked, \"So Danny, have you found out if she likes girls yet?\" Mom also chimed in, \"I wanted to ask that too.\" I looked at Sandi and she was nodding and smiling as well.\n\nI laughed and said, \"You guys are terrible. But, um... you know, that topic never came up and I didn't think to ask her. I'll try to find out without ruffling her feathers too much because she's already a little overwhelmed about some of the stuff I asked her today.\"\n\nMom said, \"OK sweetie, thank you. If she does, maybe she'll want to stay for the entire time, and she would be most welcome. Wouldn't that be fun? Before you hang up, I just want you to know that I love you both so much.\"\n\n\"Love you too. I'll see you on Saturday,\" I said.\n\nBethany said loudly, \"Love you guys lots!\"\n\nSandi said, \"Love you too!\"\n\n<center>* * *</center> After we hung up, I sent a text to Amy that simply read, \"She said yes!\"\n\nFive minutes went by without a response and then my phone finally rang.\n\n\"Sorry about that. I needed to finish up a spreadsheet I was doing so I could send it to first shift. But now I'm all yours. So the answer was yes? How in the hell did you manage that?\"\n\n\"Well, actually, she was totally cool about it. We'll need to discuss the nitty-gritty details though. She is concerned about being left alone.\"\n\n\"Oh, I can see that. Did she have any ideas?\"\n\n\"Nothing really specific. I think the only way to make everyone happy is if she was with us.\" I laughed nervously to try to disguise my true intentions for saying that, failing miserably as usual.\n\nAmy did not laugh. She said seriously, \"I could probably be persuaded into letting that happen if you asked me very nicely. I already knew that was a possibility anyway. I'm not stupid over here, you know.\"\n\nI decided to use the direct approach again and cast aside the fear of how she might react and just asked, \"Oh? Are you bisexual?\" I held my breath and waited.\n\nAmy gasped but then giggled and said, \"There he is again. That direct guy that I can't decide to love or hate. But yes, I would say that I fit that label pretty well. I think we talked about everything else except that, but right now is not a good time to get into it. I'd much rather talk in person. Are you going to visit me for lunch tomorrow?\"\n\n\"I wouldn't miss it. Oh, you've been invited to Sandi's for a Saturday morning get-together. Would you be up for that? There'll be breakfast and we can all talk about what's been going on with us and how the sleepovers will work. I know Sandi really wants to see you.\"\n\n\"Wow, really? That would be great because it'll give me a chance to thank her in person for letting us do this. But I should get back. So I'll see you tomorrow then.\"\n\n\"Yep, I should be there just after 11:30. And Amy...\"\n\n\"Yes?\"\n\n\"Just... thanks for being so awesome about everything. I know it has to be hard dealing with all my probing personal questions and my unusual situation.\"\n\n\"You're welcome. And, don't worry about the questions. Keep 'em coming. It just takes some time for me to trust someone. Like you said, it's like free therapy. I can't tell you how calm and relaxed and... unburdened I feel right now. So, thank you for letting me share that stuff with you and for being caring and understanding. I know we're going to be the very bestest of friends.\"\n\n\"I love talking with you too. So much... See you tomorrow.\"\n\n<center>* * *</center> The next morning, Kayla stopped by my desk all smiles and said, \"Welcome back! Are you feeling better today?\"\n\nI had mentally prepared a speech for possible moments like this and said, \"Hey Kayla, yeah, I'm feeling much more alive today. Thanks for stopping by. I appreciate it.\" Not wanting to prolong the conversation, I decided to stop there.\n\nShe said cheerily, \"Not a problem. Have a wonderful Hump Day.\" Ever smiling, she walked away briskly. I stared at her cute little ass until she turned the corner and was out of sight. I was grateful that I didn't have to say any of the rest of my little speech about why I was out.\n\nI snickered to myself about her use of the phrase \"Hump Day\" instead of Wednesday. If she only knew.\n\nThe minutes passed excruciatingly slowly until 11:25 arrived, but finally it was time to go. I sprinted down the stairs and drove a little too fast on the way to Amy's apartment. I made it there in record time.\n\nI ran up to Amy's door and lightly tapped on it. She opened it and as my eyes adjusted I saw that she was wearing a bathrobe. When I got inside and closed the door, she let the robe open, revealing that she was wearing only panties underneath.\n\nShe rushed into my arms and said nothing.\n\nI leaned down and put my arms under her butt and lifted her up and carried her to her room, with her squealing and giggling all the way.\n\nToday, her room was completely spotless and organized, but it didn't matter. I flopped her down on the bed and within about five seconds I had stripped my clothes off, pulled down her panties and climbed on top of her. She lay back and spread her legs open.\n\nShe must have been getting herself ready before I got there because when my cock pressed against her opening, it slipped right into her copious wetness and went all the way inside. She pulled me to her tightly, wrapping her legs around me and gasped, \"Oh, I missed you!\"\n\nWe frantically fucked for the first couple of minutes before Amy had her first orgasm. I was so turned on by her enthusiasm that it only took another few seconds before I emptied my cum deep inside her pussy. After it was over, I stayed inside her and just panted and gasped for air.\n\nBelow me, Amy opened her eyes and said, \"Hello.\"\n\nWe both burst into giggles and I said, \"Well, hi.\"\n\nWhen we both calmed down a little, she said, \"I got all ready for you because I really didn't want to go slow today. Do you want to know my number since you left yesterday?\"\n\nI smiled and nodded and she said, \"Seven. And that one makes eight.\"\n\n\"Wow. How can you do that? It seems impossible.\"\n\n\"Oh, it's easy with the right mental stimulation. I can't seem to get you out of my mind. And now you even have me thinking about Sandi after what you said on the phone last night.\"\n\nAmy closed her robe as I moved to her side and pulled the sheet over us. I asked, \"So you would really be OK with that?\"\n\n\"Yep. I told you last night that we'd talk all about that today, so are you ready?\"\n\nI nodded, and she rolled on her back, looking straight up at the ceiling and began talking. \"Well, you see, I thought I was gay until high school. I did some experimenting with a girl that lived down the street from us. I think it started when I was about twelve. She had a pool at her house and was an only child like me. Our parents were friends and we were over there quite a bit. They would play cards while Jenny and I swam and played out back and up in her room. We spent a lot of time alone together, and I started to think of games to play where we would kiss and rub each other's boobs, things like that.\"\n\nI turned to lie on my back too and suddenly noticed that Amy had little shiny pink stars glued to her ceiling. I made a mental note to ask her about it another time.\n\nShe went on, \"Well, during one summer when we were twelve or thirteen, her Mom went to the grocery store and said she'd only be gone a half hour and asked if we'd be OK alone, and of course we said yes. I talked her into getting completely naked and we touched and kissed each other and finally played with ourselves in front of each other for the first time. This kind of thing progressed quickly and we used every opportunity we could to have sex. That was when I learned how orgasmic I was and that I wasn't like Jenny. Jenny would be able to go one time and then have to wait for a while. But when she came, it was like a nuclear bomb going off. I was very deeply in love with her.\"\n\nShe went on, \"But, in my sophomore year of high school, there was a boy that was a senior that I became friends with. I started to fantasize about him and questioned whether I really was gay. I knew that I still loved Jenny, but now I had all this doubt in my mind. To make a long story short, he ended up taking my virginity when I was 16. I won't bore you with the painful details, but that was also around the time I started having feelings for my dad. The hormones were really raging then. Now that I look back on it, I think that caused some problems between me and my mom, but that's another conversation altogether.\"\n\nShe paused and sighed and looked over at me for a second.\n\nI continued listening as she went on. \"Well, ever since then, I figured out that I liked both men and women. I would ask if you're shocked by that, but I know how guys are when it comes to girl on girl love. Double the fun, right?\" She giggled and I laughed too.\n\nShe let out a huge breath and said, \"So, there it is.\"\n\nI asked, \"I have to ask then. Is there anything going on with you and your roommates?\"\n\nAmy blushed slightly and said, \"I had a feeling you might ask me that. But, no, I hate to ruin your fantasy, but there isn't anything going on with us. We're just friends. The most we've done sexually together is to hear each other masturbating from the next room. These walls are thin.\" She giggled.",
        "I laughed and said, \"Aw man. I was hoping to have a four-way with all of you. Jill could make some kind of dessert and I could eat it off your bodies.\"\n\nAmy giggled and said loudly, \"Ha! You wish!\"\n\nShe thought about it a moment and then admitted, \"Hmm, that does sound like fun. Maybe I should ask them if they're up for that sometime.\"\n\nI shouted, \"Yes! Now you're talking!\" and pumped my fists in the air.\n\nAmy said in an erotic, low tone, \"I have seen them naked. They both have nice bodies. I bet you'd just love to shove your hard cock into their wet pussies as you lick whipped cream off their tits.\" Amy's expression was dead serious.\n\nI looked at her and said seriously, \"I was only messing around. I didn't mean that.\"\n\nShe giggled and said, \"I know, silly. I was just fucking with you.\" She laughed very hard and pointed at me and said, \"You should see your face right now! Priceless!\"\n\nI groaned and said, \"You're so mean!\"\n\nAmy asked, \"So, how much longer do we have? Can you go again?\" She raised herself up and pulled off her robe and threw it on the floor.\n\n\"I think I can, I think I can.\"\n\nAmy giggled. \"Let me see if I can get your little engine going again.\"\n\nShe crouched beside me, taking my cock into her mouth. As it started to grow, I scooted my way over and pulled on the side of her leg to get her to let me crawl under her into a 69 position.\n\nShe figured out what I was doing and quickly shifted on top of me. She scooted back and her pussy came down onto my face. A good amount of semen was leaking from her vagina, and as I had become used to doing, I simply licked her clean without even thinking about it.\n\nAs I did this, Amy stopped and looked back at me and asked, \"I have to know. Did you just do what I think you did?\"\n\nI said, \"I, uh... I guess I did. It's something Sandi likes me to do. Does it gross you out?\"\n\n\"Are you kidding? It's hot! I noticed you doing that yesterday too but I was too scared to say anything. There's more where that came from. Watch...\" She clenched her vaginal muscles tightly and pushed out all the rest. Her muscle control and conditioning was nothing short of amazing.\n\nShe resumed sucking on my cock, which was now completely hard again.\n\nI stretched up a bit so I could lick her asshole, causing her to reposition herself slightly so I could more easily get to it. Soon, I was sticking my tongue inside her ass as far as it would go. She pushed back against me and moaned each time it went in, and before long had a small orgasm. Her anus squeezed my tongue over and over as she came. I switched to sucking on her clit and she came again, really powerfully. This was so arousing to me that I came as well. I was really starting to love the ease in which Amy was able to climax.\n\nPanting, Amy collapsed on top of me. After a minute or so, she climbed off and lay beside me. She whispered, \"That was intense. I love it when you lick me back there. It feels a lot different than my clit, but still amazing.\"\n\n\"Maybe next time you'd like something bigger in there then,\" I said and winked.\n\nSheepishly, she said, \"That's something I've never done before. Well, other than with a finger when I do it myself. The boyfriends I've had must have thought that liking anything to do with an asshole must mean they're gay or something, so it's just never happened.\"\n\n\"I'd be happy to do it with you if you'd like to try.\"\n\n\"I would. If it's better than the way your tongue feels, I'm on board.\"\n\n\"Cool. Maybe we can do that tomorrow. Just prepare at least an hour before.\"\n\n\"Prepare how, exactly?\" she asked.\n\nI was a little embarrassed, but I managed to say, \"You know, be sure to poop and wash well with soap and water.\"\n\nShe smiled and said, \"Oh, OK. I thought you were going to tell me I had to do an enema or something, which didn't sound like much fun. I can totally handle pooping and a shower.\" She giggled.\n\nI laughed and said, \"Great.\" I looked over at Amy's clock and said, \"It looks like I need to get going. I'm just going to jump in the shower for a minute.\"\n\n\"Are you going to have any lunch at all? I wouldn't feel good if you're going hungry all day just to be here with me.\"\n\n\"I didn't really think that far ahead. The only thing on my mind was you. But, I do feel a little hungry. I'll just grab some drive-thru on the way back.\"\n\n\"That may be OK for one day, but tomorrow I'll get Jill to make up something for you.\"\n\n\"Wow, thank you, and thank Jill for me.\" I kissed her gently and went into the bathroom to take a quick shower. Amy thoughtfully had a towel ready for me to use sitting on the bathroom's countertop.\n\nAmy followed right behind me and sat down to pee just as I started to pull the shower curtain closed. She said sheepishly, \"I hope you don't mind. I really need to go. Before you got here, I was, um, getting myself ready for you and I forgot all about peeing.\"\n\nI smiled and said, \"Go right ahead. It makes me happy that you're comfortable enough to do that in front of me.\" She smiled.\n\nI quickly finished the shower and got dressed. Amy put her panties and robe back on and walked to the door with me. She said, \"So, tomorrow?\"\n\n\"You bet. I wish I didn't have to go. One hour isn't enough. I could definitely go again.\" I smiled.\n\n\"I know. But, I had a wonderful time. I'll be thinking of you.\"\n\nWe shared one final kiss before I left to head back to work.\n\n<center>* * *</center> That afternoon, Amy and I did our best to talk as we usually did. We somehow managed to keep our hands off of each other for the most part and didn't mention anything related to our new relationship.\n\nWhen it was time to leave, Amy was saying goodbye, but she scooted up next to me and grabbed a pen and wrote, \"Wait in stairwell\" on a piece of scrap paper. Once she made sure I read it, she crumpled the paper up, threw it in the trash and walked away.\n\nI headed to the stairs and waited. Amy came in a minute later and sighed and said, \"I just wanted a proper goodbye kiss.\"\n\nAmy's \"proper goodbye kiss\" went on for five minutes straight. We finally broke apart when we heard a door a few floors above us loudly open and someone coming down quickly.\n\nAmy sighed loudly and softly said, \"Damn.\" She quickly kissed me one last time and whispered, \"See you tomorrow.\"\n\nI touched her cheek and smiled into her eyes for one last second and quickly headed home.\n\n<center>* * *</center> On Thursday morning, Sandi shook me awake and whispered in my ear, \"Honey, do you think you could do me real quick? I can't get the idea of playing with you and Amy together out of my mind, especially now that we know she's up for that.\"\n\nWithout words, I moved beneath the covers and found that Sandi's pussy was already wet. When I touched my tongue to her clit, it was already standing up at attention, and it only took about a minute before she tensed up and came.\n\nShe said breathlessly, \"That was just what I needed.\" I laughed and popped out from under the covers and said, \"My turn.\"\n\nI pushed my penis all the way inside her and was about to start thrusting when Sandi stopped me and said, \"Shouldn't you save yourself for taking Amy's anal virginity?\" She grinned.\n\nI wasn't so sure I wanted to stop, and it occurred to me that this might be one of her tests to see how my dominance training was going. I took a chance and said confidently, \"Let me worry about that. Right now, I'm going to fuck you hard.\"\n\nShe didn't respond with words, but her face formed an expression of shock and surprise. The faintest hint of a smile hiding in her eyes told me that this definitely was a test.\n\nThat hint of a smile irked me a bit, so I grabbed her wrists and pinned her arms above her head.\n\nI got down to fucking her, steadily increasing my rhythm. She closed her eyes and her expression morphed into one of complete pleasure. She moaned and arched her back and let herself go.\n\nI said, \"You love my cock in your pussy, don't you?\" She nodded furiously.\n\nWhen I started to feel myself getting close, I decided to take it a step further and directed, \"Sit up and take my cum all over your face.\" I let her wrists go and got into position.\n\nInstantly, she partially sat up, closed her eyes tightly, opened her mouth and got ready. I positioned myself a few inches from her face and unleased. The jets of cum sprayed her cheeks, into her mouth, on her chin and dripped down to her tits and stomach.\n\nI grunted, \"Suck the rest out. You love my cum, don't you?\" She opened her eyes, and while moaning loudly, she took my cock into her mouth as far as she could take it and sucked it for another minute until nothing was left.\n\nI looked down at her and said, \"Now clean yourself.\" She smiled and dutifully scooped all of the little pools of cum from herself and swallowed them all down.\n\nWhen she was done, she sighed deeply and collapsed down on the bed with a thud and smiled the happiest smile possible. She simply said, \"A fucking plus!\"\n\nFor a while now, she had been giving me grades on how well she thought I did during her tests, and lately I had been getting better grades and less and less constructive criticism.\n\nI laughed and asked, \"What do I get if I get all A's on my report card, teacher?\"\n\nShe sighed and said tenderly, \"You get... fuck, I don't know. I'll give you anything you want.\" She looked right into my eyes and with tears welling in her eyes said, \"Daniel... I love you more than life itself.\"\n\nI was taken completely off-guard. Before this very moment, Sandi had only said that to Mom, and maybe to Uncle Kurt when he was alive, I didn't know and would never ask. It came from a place of utter and complete devotion, and I honestly never thought she would say it to me.\n\nI got over the initial shock and said back, \"I love you more than life itself.\" I bent down and kissed her tears away, and we held each other there in the stillness until we were both almost late for work.\n\nAs we were rushing to leave, Sandi asked, \"Do you know if she has lube? Maybe you should bring some of ours just in case. And if she's anything like me, she won't like what happens later if you cum inside her.\"\n\n\"Not sure but I'll bring it just in case.\" I ran back to the bedroom and grabbed a small bottle out of Sandi's nightstand.\n\n\"I just remember back to my first time. It did not go well at all and it hurt for days. But I know I've taught you how to be gentle, so she's in excellent hands.\"\n\n<center>* * *</center> When I got to Amy's apartment, she opened the door and had a very concerned look on her face.\n\nI became concerned immediately and asked, \"What's wrong? Did something happen?\"\n\n\"I'm... I'm worried. I don't know if I can go through with it. I've never had anything close to that big in there. I read a lot of things online where women got tears and anal fissures and bleeding when they tried it. What if that happens to me? I'm so scared! Can we maybe just not have sex today? I'm really not in the mood. I'm so sorry.\" She seemed to be on the verge of sobbing.\n\n\"Oh my... Of course we don't have to. I would never make you do something you're not totally comfortable with. Let's just talk about it.\" I held her until she calmed down.\n\nAmy's expression visibly softened. She said, \"Oh, thank God. Thank you for understanding. I do have lunch for you. At least let me feed you some of Jill's home cooking.\"\n\n\"Oh, cool.\" We sat down at the kitchen table and ate lunch, which consisted of very flavorful pork tenderloin and some of the best homemade mashed potatoes I'd ever had.\n\n\"Jesus, what does she put in these potatoes?\"\n\nAmy giggled and said, \"She uses full-fat heavy cream, Kerrygold Blarney Castle cheese, Kerrygold butter, and some secret spice blend that she grinds herself in them. They're awesome, huh? And the barbecue sauce on the meat is her own recipe.\" I didn't open my mouth long enough to respond and just kept scarfing down the delicious food. I thought to myself that whoever ended up marrying Jill was going to die a very fat, very happy man.\n\nFinally, I said, \"Please give my compliments to the chef. Tell her if she ever opens her own restaurant, I want an invite. And once I get in, I may never leave.\"\n\nAmy smiled and said, \"I'll be sure to let her know that. I told her how much you liked her bacon and she got the cutest little smile on her face.\"\n\nOnce we got done, I insisted on helping to wash the dishes again, and while we stood at the sink we talked about anal sex.\n\nI told her, \"I can't see how you'd ever have any damage as long as we prepare properly. The main things are to have patience and use a lot of lube, and I brought some good stuff with me. You need to work up to being able to take a penis inside you. The easiest way is to start off slowly with just one finger and then put more in as your muscles relax. I have a feeling that the women that were hurt had guys that jammed themselves in dry or something stupid like that.\"\n\nAmy sighed and said, \"I should have known that you would know the best way to do it. Sometimes I go a little crazy with reading all the terrible things that can happen online. Have a persistent cough? Oh, you must have stage 12 brain cancer.\"\n\n\"Right. WebMD and the like used the wrong way can be really scary.\" I laughed.\n\nAs we finished with the last of the dishes, she asked, \"Well, do you think we could at least try the finger part today? We don't have time to do much else.\"\n\n\"Are you sure? You're not upset anymore?\"\n\n\"I'm sure. Actually, when you described the process, it made me all tingly.\" She giggled.\n\n\"I don't know... If we get started, it's going to be really hard to stop,\" I said worriedly.\n\n\"Please?\" she begged with a face that would give Puss in Boots a run for his money.\n\n\"Did you get clean for me?\". She smiled and nodded.\n\nWe moved to her bed and got naked. I said, \"The main thing to remember is to relax, relax, relax. OK, lay on your back for me. It goes a lot easier if you're fully aroused.\"\n\nAmy got into position and I moved down and began licking her clit and pussy. In a few minutes, she was moaning and arching her back.\n\nI popped open the lube and said, \"OK, this is going to feel wet and cold in 3, 2, 1...\"\n\nI pressed my lubed fingertip against her anus and very gently inserted it.\n\nShe giggled and said, \"What is this, Anal Mythbusters?\" I laughed too, not realizing that it sounded like that. She immediately added in her best TV announcer voice, \"Coming up next on an all new ButtBusters...\"\n\nAs her giggles subsided, I said, \"Clever girl,\" and licked her clit directly a couple times, causing her to miss my Jurassic Park movie reference. She gasped and immediately became quiet and said softly, \"It feels good so far.\"\n\nI pushed my finger in until it was completely inside. Amy said, \"It feels... strange. Not bad. Like I need to poop.\" I flicked my tongue across her clit and she grunted and squeezed her muscles tight and moaned \"Ohhh!\"\n\n\"What about those feelings together?\" I asked.\n\n\"Really good!\"\n\n\"Here comes the second finger. Ready?\" I looked up and saw that she was nodding.\n\nI pulled out the first finger most of the way and got a second one covered in lube and slowly pushed it in. I very lightly licked near her clit to provide as minimal stimulation as I could. I didn't want her to cum yet.\n\n\"You're doing fantastic. Ready for more?\"\n\nShe groaned, \"Yes...\"\n\nI lubed and began inserting the third finger and was met with a lot of resistance. \"Ouch, it's hurting! Stop!\"\n\nI pulled back the third finger and left the other two in just barely to give her time to recover and said, \"Sorry, I went a little too fast there. Just give it a minute and try as best as you can to relax. It's going to be alright. Nothing is damaged.\"\n\n\"OK,\" she said uncertainly.\n\n\"Breathe for me. Breathe in the deepest possible breath you can, hold it for a couple seconds and let it out slowly. Do that for me three times.\"\n\nShe followed my instructions to the letter and I increased the pressure my tongue was making around her clit until she started to moan again. Finally, I could feel her sphincter relax, so I put the third finger back in and very slowly pushed it in.\n\nIt took some time, but now all three fingers were fully inside her. I said, \"Amy, my dear sweet Amy, you did it. I have three fingers all the way in.\"\n\nShe gasped, \"Oh God! I can't believe it! It feels incredible.\" She looked down at me and, with an expression filled with desire said, \"Fuck my ass! I want it so bad!\"\n\n\"But you said...\"\n\n\"I know! But we're so close. Please don't leave me on the brink...\"\n\nI knew instantly that if I left, it would fill both of us with a huge amount of regret. I slowly pulled my fingers out and said, \"I won't leave you.\"\n\nAmy sighed and whispered, \"Thank you.\"\n\nI moved into position between Amy's widely spread legs and said, \"Pull your legs up to your chest and hold them there.\"\n\nShe did and I placed the tip of my cock at her opening and applied a lot of lube. I said, \"OK... Remember, relax.\"\n\nI pushed and the tip quickly disappeared inside. Amy moaned and asked, \"Is that it? That was easy.\"\n\nI smiled and said, \"Not quite there yet; that was just the tip. Here comes more. Keep breathing.\"\n\nI very slowly pushed more inside her. I could feel Amy squeezing her muscles rhythmically, so to intensify her pleasure further, I inserted two clean fingers into her vagina and massaged her G-spot in time with her squeezes, causing her to moan loudly. I continued pushing in until I was all the way inside.\n\nI gasped, \"It's... in...\" I pulled nearly all the way out and started slowly thrusting until I felt she was ready, then began moving faster. Amy was just gasping in air and groaning loudly as she exhaled. Her muscles clenched and unclenched around me incredibly powerfully and created sensations I had never felt before.\n\nIt was too much for me. Before I could gather my thoughts enough to pull out, cum started squirting from my cock like a fire hose. I partially lost my balance and crashed down onto Amy's upheld legs, pressing them hard down against her tits, all the while still squirting my load deep inside her.\n\nAmy's eyes flew open wide and she screamed loudly and came. She yelled, \"No!\" All of a sudden, I felt a stream of hot liquid spray my stomach and groin area. Given my experiences with Sandi, this exact feeling wasn't unfamiliar so I remained calm. I pushed myself back up and started to slowly withdraw myself.\n\nI looked down and I was wet on my stomach, groin, and thighs, and there was a small dark wet spot on the bed as well.\n\nAmy was gasping for air. She brought her hands up and covered her face. She finally said, \"Oh God, I peed! I'm so sorry!\" She began sobbing.\n\nI didn't really smell anything, so I said, \"It doesn't smell like pee.\" I leaned down and sniffed the bed and her pussy and said, \"It's not pee.\" I licked some of the fluid from her pussy and said, \"Amy, you squirted. Has that ever happened before?\"\n\nAmy shook her head vigorously \"no\" and still had her face covered. She finally stopped sobbing and I asked, \"Are you OK?\"\n\nAgain, she shook \"no\". I leaned forward and grabbed her wrists and pulled her hands away. I softly said, \"I need you to open your eyes for me. Try to breathe and calm down.\"\n\nShe forced her eyes open and I said, \"You didn't pee. And even if you had, it's completely fine. Here, taste it and you'll see.\"\n\nI slid my finger through the pool of wetness between her legs and brought it to her lips. She tentatively sniffed it and then opened her mouth. She tasted the juice and immediately sighed and visibly relaxed, and that made me relax as well.\n\nI asked, \"Did it all feel as wonderful as it sounded?\"\n\nAmy breathed in deeply and said, \"Wonderful doesn't even begin to describe what it felt like. We have to do it again, and soon.\"",
        "She got a worried look on her face and asked, \"There isn't any blood, is there? Did I get any poop on you?\"\n\n\"No, everything is fine. Is anything hurting?\" She shook her head \"no,\" and said, \"It just feels kind of weird. And really wet.\" She smiled.\n\n\"The only thing coming out is cum. And I have to apologize in advance. I shouldn't have cum inside you like that, but your squeezing just felt so good I lost my concentration.\"\n\n\"Why is it bad if you cum in there?\"\n\n\"You may have some bathroom problems later. I'm really sorry.\"\n\nShe waved her hand and said, \"I'm sure I'll be fine. It's just a little cum in my butt. I just showered you with a gallon of... girl cum or whatever and probably ruined my mattress and you're worried about that?\"\n\n\"It wasn't a gallon, but yeah, we should get the bedding off right now before it soaks into the mattress. Come on, we need to get up.\"\n\nI helped Amy get up from the bed and held onto her until she was steady. We pulled the sheets and the mattress cover off and felt the spot. It was just barely damp, but we still needed to do something to get it dry.\n\n\"Do you have a fan that you can blow on it? Or I guess you could use a blow dryer. But blot it with a towel first. \"\n\nAmy had recovered a little and said, \"Shit, it's almost one. Let me take care of this and you jump in the shower and get back to work. I'm so sorry. Everything is a mess!\"\n\nI grabbed her hand and said, \"It's going to be fine. You can wash all this stuff and the spot on the mattress will dry. I'm sure it won't leave a smell.\"\n\nAmy sighed and said, \"OK, alright. Go.\" She pointed to the bathroom.\n\nI raced through a two-minute shower and found Amy naked and sitting on the toilet when I got out.\n\nShe smiled awkwardly and said, \"Is it always like this? There's so much goop coming out of my butt right now. I'll need to shower again for sure. T.P. isn't helping much.\" Just as she said that, she farted loudly and said, \"Fuck, what next!\" and blushed a crimson color and hid her face with her hands. She said softly, \"I am so sorry.\"\n\nI laughed and said, \"That happens.\" I leaned down and kissed the top of her head and said, \"It's totally normal. The worst part of anal is the goopy mess and a little extra air sometimes.\"\n\nShe nodded but immediately farted again, this time twice as loud and long as the first, and began giggling. Soon, we were laughing uproariously.\n\nWhen we calmed down, I said, \"Something that works a lot better than toilet paper if you can't shower right away is to use flushable wet wipes. We use those all the time.\"\n\nShe said, \"I'll be sure to add that to our grocery list. Now you have to go. I hope you don't get in trouble.\"\n\nI nodded and got dressed as fast as I could. When we got to the door, we hugged and I asked her, \"Other than the drama with the squirting, did you like it?\"\n\nShe sighed and said, \"I loved it. I definitely want to do it again. And I guess we can put some towels down next time just in case it happens again. You're not freaked out by me, are you?\"\n\n\"Not even a little. I loved it. All of it.\" I hugged her tightly and whispered conspiratorially directly in her ear, \"I want you to cum in my mouth. I would definitely swallow every last drop.\"\n\nShe gasped and covered her mouth and laughed. She said, \"I can't believe you! You're so... naughty! I love it!\"\n\nI kissed her softly one last time and said, \"See you later.\"\n\nShe said goodbye and I ran to the car at a full sprint.\n\nWhen I got back to work, I ran from the parking lot, through the lobby, and up the stairs three at a time. I sat down at my desk with sweat dripping down my forehead and... nothing. No one had even noticed as far as I knew. I went to the bathroom and dried off and eventually began to feel normal again about two hours later. Running the events back through my mind got me excited and aroused all over again, and I had great difficulty in concentrating at all on work.\n\nAmy arrived at her normal early time and but didn't come over until about fifteen minutes later. She said, \"Hi.\" But instead of sitting down, she leaned over and handed me a small yellow sticky note and walked away.\n\nThe note read \"Room 619: 4-6-5-8-7\". I stared at the note for a minute and tried to think of where Room 619 might be. I got up and found 602 and kept walking down the hallway. All the way at the very end was 619. The door had an electronic keypad and a plaque on the wall that read \"Authorized Personnel Only\". I looked behind me to see if anyone was there and saw no one. With my heart zipping along, I got to the keypad and pressed the numbers. \"Beep beep beep beep,\" came the response telling me that I had put in the wrong code. I breathed in deeply and stared at the numbers and slowly pressed 4-6-5-8-7. The door lock made a whirring sound and the little green LED flashed as the handle engaged, and I opened the door and walked in. I turned and looked behind me again as the door closed, and still didn't see anyone watching.\n\nI had never been in this room before. It was a room filled with several rows of servers on a raised floor. The room was cool but quite loud due to all of the whirring fans. Sitting on one of the office chairs near the back of the lab was Amy. She motioned with her finger to come to her. Once I got close enough, she pounced. She rushed into my arms and began kissing me. Her kissing was insistent and passionate. I pulled back and said, \"Amy, this is crazy! What's gotten into you?\"\n\n\"You!\" she growled and continued her assault. She kissed all around my face and my neck. Finally, she said breathlessly, \"You're the most wonderful man I've ever met. You're so confident when we're together, and you always stay calm no matter what goes wrong. You make me laugh and make me feel safe. You accept all my flaws and still seem to respect me. You... you get me. The real me that I've never shown to anyone, ever. You're not like any other 19-year old I know. You seem so mature and I know that Sandi is responsible for that and it's... it's just so awesome. I'm so happy that I finally had the courage to tell you how I felt because now, I'm happier than I've ever been in my whole life.\"\n\nI put my arms around her back and lifted her off the ground. She moaned and melted into me as I held her tightly against my body. I said, \"I'm happy too. All the things you said make me feel so... humble. I'm so grateful to be sharing these experiences with you.\"\n\nSuddenly she pulled her legs up and put them around my hips, holding onto me tightly.\n\nShe looked into my eyes and said with molten lust, \"Make love to me right now. Right here.\"\n\nI looked into her eyes and whispered, \"You're such a bad girl.\" My cock was almost instantly hard and straining to escape.\n\nShe giggled and said, \"I know I am. And I'm not wearing panties. I need you so bad!\"\n\n\"What if someone comes in?!\"\n\n\"No one comes in here during second shift. Don't worry.\"\n\nI shook my head and looked around. There was nowhere I could see except the floor to use, and that didn't seem very appealing. But Amy had other ideas. She whispered, \"Let me down.\" She quickly undressed and I undid my pants and pulled them and my underwear down and took my shirt off. Amy knelt down and got my cock wet with saliva and then smiled and asked, \"Can you do me standing? I've never done it like that.\"\n\nI nodded and lifted her into position, with her legs around me and my hands under her ass to support her. As I lifted her slightly and slid into her, she groaned loudly. For a moment, we remained motionless with my cock fully inside her. She powerfully squeezed her vaginal muscles rhythmically and moaned. Once we began moving, Amy started continuously moaning. She was so wet that soon I could feel her pussy juices dripping down my thighs. I looked at her face and her eyes were closed, but she somehow sensed me looking and opened her eyes and smiled. She stuck her tongue out and licked my lips, and I licked her tongue in return.\n\nShe leaned forward and whispered lustily, \"I want you to suck your cum out of my pussy and give back it to me.\"\n\nWhen I heard that, it made me moan loudly and I nearly lost it right that second. I strained to make this magical moment last another few minutes.\n\nI shifted her a little and rubbed my finger on the outside of her asshole as I continued to thrust into her pussy wildly.\n\nA sweat broke out on my forehead and I increased my thrusting even faster. Amy squeezed her muscles and started to cum. Her entire body tensed up and she made a high-pitched groaning sound for the next 30 seconds. That sent me tumbling over the edge and I blasted a torrent of hot cum into her pussy. I moaned loudly several times and finally stopped thrusting.\n\nAmy whispered again, \"I want it. Give it to me.\"\n\nI gently put her down and knelt in front of her. She pulled the chair over and put one foot up on it and used her fingers to spread her outer labia apart. I put my mouth over her vagina and licked her. All at once, Amy flexed her powerful muscles and all my cum came flowing into my mouth. From above, Amy moaned and pulled me up by the hand. I stood and began kissing her, letting the cum flow into her mouth. She greedily swallowed it all down and then looked at me salaciously and made a loud, \"Ahhhhhh\" sound and smacked her lips.\n\nI directed, \"My cock needs cleaning.\" I motioned with my head for her to kneel. Her eyes widened but she immediately knelt and for the next five minutes, she meticulously sucked and licked every inch of me until every trace of cum was gone. It felt incredible.\n\nI just stared down at her and said, \"You are amazing.\"\n\nStanding back up, she giggled and said, \"God, I feel so slutty right now. I've never done anything like this. I've never let go and just did something completely crazy and not been afraid of how I might be judged. I feel like I just want to go completely wild!\"\n\nShe jumped into my arms and hugged me tightly. I was starting to come back to Earth and said, \"But this was a little too wild. We're at work! This can never happen again. We'll get caught for sure.\"\n\nSuddenly another thought jumped into my mind and I nearly felt sick. \"Oh shit! I think it's past time for me to leave. I need to go!\" I fished out my phone from my pocket and confirmed that I was already twenty minutes late.\n\nAmy sighed deeply and said, \"I'm so sorry. I thought this would be fun and go a little quicker than it did. I didn't mean to get quite so carried away. After you fucked my ass so well, my pussy was feeling left out.\" She giggled.\n\n\"It was fun. Really, really fun. But it's too dangerous. Even though we're in a locked room that I hope has no cameras, this is way too exposed.\"\n\nAmy hung her head and admitted, \"You're right. I... It won't happen again.\"\n\nI smiled and said, \"OK, good. Now let's get dressed and get out of wherever this is. I don't even want to know how you managed to get us in here.\"\n\nShe opened her purse and pulled out the wadded-up panties she had put inside and within a couple minutes, we were both dressed again.\n\nShe said, \"OK, you go out first and I'll leave a minute after you. I had so much fun!\"\n\nWe hugged for a moment and I slipped out into the hallway. I walked toward my desk slowly, trying to see if anyone was looking at me strangely and trying my best to appear normal. One or two people looked my way and waved or smiled as I walked by their cubicles, but no one pointed and said, \"We know what you did! Guilty!\"\n\nI gathered up my things and got the hell out of there. As I was speeding down the freeway, Amy texted me, \"Made it to my desk alive. You?\" I quickly sent back, \"Made it out okay. See you tomorrow,\" using my phone's speech-to-text function.\n\n<center>* * *</center> When I got home, Sandi was already there. She met me at the garage door and looked concerned. She asked, \"Where have you been? I was starting to get a little worried. Why didn't you call?\"\n\nI looked down and said, \"Wow, you're right, I forgot all about calling. I was trying to get home as fast as I could and I messed up. Something unexpected came up at work.\"\n\nSandi got a small smile on her face and asked, \"Unexpected? Was the something that came up your cock?\" She sniffed me and gasped, \"I knew it! You're even fucking her at work now!\"\n\nI said, \"She got us into a locked room and we did it standing up.\"\n\nShe moaned and asked, \"Oh really? Can Sandi have a taste?\"\n\nMy eyes flew open wide and I said, \"Mom is right! You are a slut. And I love it! You can have anything you want, anytime you want it.\"\n\nSandi simply said, \"Strip. Now.\"\n\nWithin seconds, I was naked and Sandi licked every trace of Amy's juices from my cock and upper legs. She even licked my asshole a bit. There couldn't have been very much left after Amy's thorough cleaning, but just the idea was turning Sandi on insanely.\n\nOnce she was done, she looked up at me and said, \"Take me to bed.\" She closed her eyes and didn't move.\n\nI reached down and picked her up and slowly carried her to our bed where I stripped her and made love to her in the special way that gives her an orgasm while I'm inside her. When we had both cum, I whispered, \"I love you.\"\n\nShe said, \"I love you too.\" She opened her eyes and asked, \"Do you think she could come over tomorrow night instead? I want a night with just the three of us before Dee and Bethy get here. Can you ask her for me?\"\n\n\"I'll do anything for you.\" She smiled and we kissed until we finally got hungry and went out and had dinner.\n\n<center>* * *</center> The Friday in the almost-magical week with Amy had finally arrived, and once again I was looking forward to lunchtime. A thought occurred to me and I ducked out of the office about fifteen minutes early.\n\nI rushed to a grocery store and picked up a nice vase of a dozen red roses. I arrived at Amy's door just a couple minutes late and knocked. When Amy opened the door and saw the flowers, she gasped and said, \"You shouldn't have! Oh I love them! Thank you!\"\n\n\"I just wanted to get you these to let you know how much I love spending time with you, how much I love talking with you, and how much I love being your friend.\"\n\nAmy smiled deeply and wiped a few tears away from her eyes. \"You are simply wonderful. This week has been the most amazing, unforgettable week of my life. I don't think anything will ever be able to top it. Come here.\"\n\nWe embraced for several minutes. Finally, I said, \"There's something I want to ask you.\"\n\nShe said hesitantly, \"What is it?\"\n\n\"Sandi would like you to come spend the night with us tonight.\"\n\nShe thought about it for a minute and said, \"I would love that!\" She smiled widely.\n\nI said, \"I told her about the stunt you pulled yesterday and it made her very excited, and I'm using the most PG-13 words I can here.\"\n\nShe said, \"I want the XXX-rated uncensored version.\" She looked at me with lust and fire in her eyes.\n\n\"Now hold on, before I do that, I wanted to suggest that maybe we actually go out to lunch today and not have sex. You know, to save ourselves for tonight.\"\n\nShe looked disappointed, but she thought it over for a minute and said, \"OK, I think that's a good idea. But we don't have to go out. Jill said that as long as you keep washing dishes, she will keep feeding you for the rest of time. She loves making messes, not cleaning them up.\"\n\nI laughed and said, \"That doesn't sound like a fair trade. Anybody can wash a dish, but very few people are artists with food like she is. What did she create this time?\"\n\n\"She made some blackened sea bass and steamed veggies. And be warned, it's a little spicy.\"\n\n\"I love spicy! Lemme at it.\" I laughed.\n\nI tried very hard to savor each bite, fighting off the urge to inhale it like a vacuum cleaner. The heat was tricky. At first, it didn't really seem very spicy. But, by the end, my whole mouth was on fire.\n\n\"That was so freaking delicious. But now... I'm on fire!\" I laughed. I added, \"Need... water.\"\n\nAmy said, \"Silly, water won't help. But, Jill knew you'd be in distress and had made up some homemade vanilla ice cream the other day and said it would be the perfect antidote for this.\" She got up and opened the freezer and reached in and pulled out a dish of ice cream she had gotten ready before I got there. \"Here we are. Let me grab you a spoon.\"\n\nShe said, \"Prepare your mouth for awesomeness.\"\n\nI took my first bite and had to close my eyes and moan because it was so delicious. I spoke with my mouth full, \"Oh my God. I've died and gone to Ice Cream Heaven.\"\n\nJill was true to her word. The ice cream took care of the spicy pain almost right away. I shared the ice cream with Amy, feeding her every other bite until it was gone.\n\nWhen I was done, I clinked the spoon down hard in the bowl and sat back in my chair and moaned loudly.\n\nAmy laughed at me and said, \"I can't wait to tell Jill how you reacted. You're so funny!\"\n\nI said breathlessly, \"I... LOVED... that ice cream. I loved it all. The fish, the veggies, all of it. I just keep thinking if it's this good reheated, what does it taste like when it's freshly made? It boggles the mind!\" I put my hands by my head and made an explosion sound and gesture.\n\n\"Well, I'm only at home for dinner on the weekends, but let me tell you, it really is even better when she first makes it. During the week, I usually only get leftovers too unless she comes home and makes us lunch. I get to play guinea pig for her new creations.\"\n\n\"Well, I'll have to figure out a way to get myself invited here on the weekend.\" I winked.\n\n\"Consider yourself invited anytime you want.\"\n\nI smiled widely and said, \"Cool. Well, I guess if I want this gravy train to keep chuggin', we'd better get to those dishes.\"\n\nWe worked on the dishes and got them done in about fifteen minutes. In the rest of the time we had left, we sat on the couch talking and laughing and kissing. We behaved and never let the touching get too sexual, and soon it was time for me to leave.\n\nAt the door, she said, \"I love the flowers. You're so sweet and thoughtful.\" We held each other for a moment and I said, \"I'll be by to pick you up around 9:45. Is that OK? Oh, and you should probably bring a couple changes of clothes, just in case.\"\n\nShe said, \"Yes, sir, will do. Do I need to bring anything special?\"\n\n\"Just bring you. That's plenty special.\" She smiled sweetly and said, \"Go on, get out of here before I throw you down on the floor and rape you.\"\n\nI looked at her in mock-horror and asked, \"Is that another one of your dark secrets? You're a rapist?\" I opened the door and started backing away quickly, and she ran after me and slapped my ass. She yelled, \"I'll get you!\"\n\nI laughed and looked back at her as I walked away, \"I'll let you. Bye for now.\" She waved as she walked back and closed the door.\n\n<center>* * *</center> Friday afternoon at work was pretty dead. Many people only worked half-days or telecommuted so the office was dead quiet. When Amy got there, she leaned down and whispered, \"Wanna go somewhere and have some fun?\"\n\nI looked up at her and wagged my finger at her and she giggled. \"I'm just messing with you. How's it going?\"\n\nI said, \"I'm just glad the day is almost over. I just wish your day was almost over too.\"\n\nShe sighed and said \"I know. Since no one's around though, I can at least do this.\" She scooted her chair up next to me and kissed my cheek quickly. This brought another round of finger wagging and giggling. I whispered, \"Behave, young lady.\"\n\nWhen it was time for me to go, I said, \"Well, have a good weekend. I'll see you on Monday.\" But I gestured with my head to meet up in the stairwell once again.\n\nAmy met me there about two minutes later, and today we were able to kiss for about ten minutes. Once we finally broke the kiss, I had a raging erection that wasn't going away. Amy said, \"I wish I could take care of that for you.\"",
        "I leaned up against the wall and breathed deeply and flexed my leg muscles. I said, \"Me too.\" Finally, it went down enough for me to walk comfortably. I sighed and said, \"OK, I'm good now. You're a terrible influence, you bad girl you.\"\n\nShe giggle and said, \"You bring out the worst in me. I'm dripping wet right now.\"\n\nI asked, \"Oh, you are? Do you mind if I take a sample to go?\" I grabbed her and twirled her around and roughly forced my hand down her pants and ran my fingers into her pussy, which felt like it was about the temperature of the sun. Feeling especially naughty, I brought my finger to her clit and tweaked it several times in quick succession. Amy immediately buckled and shuddered into an orgasm. I had to hold onto her to prevent her from falling. Luckily, she remained silent the entire time other than panting and gulping in air through her mouth.\n\nWhen she recovered and turned back around, she wagged her finger at me and said, \"Now who's acting dangerously? You're so bad!\"\n\nI smiled and brought my fingers to my mouth and licked them clean, savoring her pussy juices. She had to close her eyes and stop herself from doing anything else.\n\nShe said in a whisper, \"Please go. If you stay here one more minute, I won't be able to control myself.\"\n\nI finally calmed down enough to think clearly and said, \"You're right. I'm sorry for doing that. I shouldn't have. But it was fun making you cum.\"\n\nShe nodded but kept her eyes closed. I tried to hug her, but she held her hand out and repeated herself. \"Go. Don't touch me or I will attack you.\" She stood there and continued to breathe heavily.\n\nI knew better than to push my luck, so I said, \"OK. I'll see you at 9:45.\" She said nothing and just nodded. Reluctantly, I headed down the stairs and drove home.\n\n<center>* * *</center> When I pulled into the garage, I sent Amy a text asking, \"U OK?\"\n\nAlmost immediately, she replied, \"Fine now. 3.\" Three? It took me a few seconds to figure out that she meant that she had three orgasms to get back to being \"fine now.\"\n\nI smiled and as I got out, I felt the wet spot in my underwear where the precum had been leaking out of me.\n\nI went inside and hugged Sandi. She said, \"You smell like Amy. Were you good today?\"\n\nI said proudly, \"I was.\" Then I laughed and said, \"But just barely. We almost had a situation in the stairwell as I was leaving. But we somehow made it. I did get this...\"\n\nI stuck my fingers that had been in Amy's pussy under Sandi's nose and she grabbed my hand and inhaled deeply. She said, \"Mmmmm... I can't wait until you get her here. I've decided that you should pick her up alone. I don't trust myself. We wouldn't want another car incident.\"\n\nI nodded and told her all about my day. She was very impressed by my over-the-top descriptions of the food Jill had prepared for lunch and said that I should definitely go on a weekend to experience it fresh.\n\nWe had a very light dinner that night, not wanting to be too full for when Amy arrived.\n\nI basically watched the clock and counted the minutes until it was time to leave. I paced. Sandi told me not to pace. I sat down. I paced again. Sandi told me to find something to do. I tried watching TV. I have no recollection of anything that was on.\n\nFinally, the time came. Sandi told me, \"Drive safely. Seriously. Pay attention. And no hanky-panky until you get back. And hurry. But not too much.\" She sighed and said, \"You know what I mean. I'm nervous too. Obviously. Do I look OK?\"\n\n\"You look great. You smell great. Don't worry.\"\n\nShe smiled and said, \"OK. Well, off you go.\" She shooed me out the door and I was on my way. Once I was driving, I calmed down somewhat and just listened to one of my Spotify playlists and zoned out. Before I knew it, I pulled into Amy's apartment complex and parked.\n\nI rang the doorbell and Jill answered. She said, \"Hey there, Dishwasher Man! Come on in! She's taking a shower, so it'll be a few minutes. I'd like to talk to you.\"\n\nDishwasher Man? Maybe Sandi was right. Once Jill closed the door, she said, \"Is it OK if I hug you?\"\n\nI smiled and said, \"Sure...\" Almost instantly, Jill hugged me and held on for quite a long time. Before she let go, she squeezed me extra-tightly and half-moaned and half-groaned as she let me go.\n\nI said, \"Wow, what was that for? I'll have to visit more often if I get hugs like that.\"\n\nJill giggled and said, \"Well, I just wanted to thank you for a lot of things. First, the obvious one. The dishes. You don't know how much I hate washing stupid dirty dishes, and you came in here and got the job done, day after day. And, you dried and put them away too. Who fucking does that? Apparently you do!\"\n\nShe went on, \"Then, Aims told me all about how much you liked the dishes I prepared, and you just have no idea how big you made my head. It's like... BIG!\" She put her hands up around her head to show me just how big and laughed.\n\nI said, \"Jill, you are a master chef. Even though the things I had were reheated, it was like eating a slice of Nirvana.\"\n\nJill clapped her hands and nearly jumped up and down. She said excitedly, \"The compliments are even better in person!\" And then she hugged me again and even kissed me on the cheek.\n\nShe went on, \"But probably the most important thing you did that I want to thank you for is... you've made my dear sweet Aims the happiest I've ever seen her. I've known her for almost a year, and she seems like a changed woman since you've been in the picture. I don't know what you're doing to her... Well, let me rephrase that. I know what you're doing to her... Well, at least I have some ideas. Sorry, I'm not saying this very well.\"\n\nIt was my turn to save Jill from flailing and not knowing what to say. \"Jill. You're welcome. This week has been magical to me. It makes me so grateful to hear that Amy is so much happier now. Her happiness is very, very important to me, and just like I told you before, I won't hurt her.\"\n\nJill sighed and hugged me yet again. This time, she even put her head on my shoulder and softly said, \"I wish I could find someone like you. Who are you and where did you come from?\"\n\nI asked, \"Don't you have a boyfriend? You have to, as beautiful as you are.\"\n\nShe giggled and said, \"Aw, thank you. Well yeah, I do, but he's just a normal 20-year-old guy. How old are you anyway?\"\n\n\"19.\" Jill continued to hold onto me.\n\n\"19?! Are you kidding? I wish my boyfriend would bring me red roses and help out the way you do. When I'm with him, he only has one thing on his little mind. After a while, it gets old and boring.\"\n\nAs we stood there together, Amy came out of the bathroom in her bathrobe and stopped in her tracks. She looked at us for several seconds and saw that Jill wasn't letting go and snapped, \"Jillian! Mine! You have your own!\" She locked eyes with me and saw my discomfort. I raised my hands as if to say, \"I have no idea what she's doing.\" Amy sighed loudly, shook her head and walked into her room.\n\nJill sighed but immediately pulled herself away and sat down on the couch. I breathed deeply and asked, \"So where's Miss Sammi?\"\n\nJill waved her hand and said, \"She's at a party at a friend's of ours. That's where I'll be after you guys leave. After I heard you were coming to pick up Aims, I had to be here to thank you in person. Oh, and Sammi said thanks too, by the way.\"\n\nI said, \"OK, cool. Well, thank you for all the awesome food and all the effort you put in. You really saved me from starving this week.\"\n\nShe beamed and said very sincerely, \"You are so welcome. I look forward to making you some other tasty treats in the weeks to come. And, you are welcome to come and get it hot off the presses any weekend. Just let me know beforehand so I can make something really special just for you. Heck, maybe I'll come home and cook a special lunch for you guys sometime. Aims loves trying out my new ideas.\"\n\n\"Awesome. Wow, I am truly honored. I will absolutely take you up on your offer.\" I paused and added quickly, \"Repeatedly.\" Jill giggled and said, \"I'm good with repeatedly.\" Just like before, Jill held out her hand and I took it. This time, she smiled and squeezed it for almost a minute, almost to the point of being awkward.\n\nFinally, I said, \"I should go see if I can help Amy get ready.\"\n\nJill said, \"Oh no you don't. You're staying right here with me, mister. She'll be out for the big reveal soon. Have a seat and tell me all about yourself.\"\n\nJill and I had a nice conversation and got to know each other a little. The whole time, she was still acting very flirty. Several times, she smiled and leaned forward, and I figured out pretty soon that she wasn't wearing a bra and was giving me quite the show. Also, she touched my leg and hand over and over, each time giggling sweetly, as if nothing was wrong. Finally, it was too much and I had to say something.\n\n\"Jill, I don't mean to be rude, but I'm getting a pretty strange vibe from you. I wouldn't want to do anything that might hurt Amy or your friendship with her. If I'm misinterpreting you, I'm sorry, but you're acting really flirty with me, being all touchy-feely, and yes you have beautiful breasts. All I'm saying is it's a little uncomfortable and I'm wondering why you're acting this way.\" I laughed good-naturedly to try to diffuse any negative reaction she might have.\n\nJill's mouth dropped open. She said quietly, \"I can't b..., uh, can you excuse me for just a minute?\"\n\nJill got up and knocked on Amy's door and went in. She was in there a couple minutes and then came out and disappeared down the hall. When she finally came back, I immediately noticed that she now had a bra on and her entire demeanor had changed. She smiled, sat back down on the couch and said, \"You passed.\"\n\nI passed? Fuck. I looked at her questioningly and she said, \"I was kind of testing you. I'm really sorry; I couldn't resist. You know that Amy's last boyfriend cheated on her, don't you?\" I nodded and she went on, \"I wanted to see if you could be...\"\n\nI interrupted her. \"You wanted to see if I would cheat on her with you. That's cool. Got it.\" I was not happy to be tested like this.\n\nJill said in a very quiet voice, \"Danny... Please don't be upset. This was all my idea, and Aims had nothing to do with it. Just know that you impressed the shit out of me with that little speech. Most guys would have been over here groping my tits by this time, but you not only held up to the pressure, you actually told me to quit it and stayed totally calm. Are you for real? And, I really did mean all the things I said. Really. I just had to know if you would crack, and you didn't even come close. Aims is pretty much my best friend in the world and I love her dearly and it would kill me to see her hurt all over again. Are we cool? I won't do that again, I promise.\"\n\nShe tentatively held out her hand again, and I just laughed and said, \"Yeah, fine... I know you're just trying to protect her. We're cool.\" I took her hand and shook it. She blushed slightly and asked, \"So... you really think my breasts are beautiful?\" She looked questioningly down at her chest.\n\n\"Is this another test?\"\n\n\"No. It just shocked me when you said that. Guys don't talk the way you do,\" she said hesitantly.\n\n\"Well, I guess I've been trying to live by the philosophy of cutting through the bullshit and just saying what I mean instead of being passive and easygoing about things that most people are too afraid to talk about openly. So yes, I meant what I said. They are very nice. Thanks for letting me see so much of them.\"\n\nJill blushed deeply, bit her lower lip and quietly said, \"Now I see why she likes you so much. Wow.\" Jill breathed deeply, shook her head and leaned back against the sofa back, finally appearing to let her guard down and relax.\n\nAmy emerged from her room soon after and said, \"Ready or not, here I come! How do I look?\"\n\nJill leaned forward and said, \"Stunning,\" and I said \"Gorgeous,\" at exactly the same time, causing everyone to laugh.\n\nAmy was wearing a light-colored dress that had undertones of brown. Somehow, this really made her light skin and reddish-blonde hair stand out, and her blue eyes seemed to be bursting with color. Her hair was down out of its usual ponytail and reached down just below her shoulder blades.\n\nI took my phone out of my pocket and asked, \"Do you mind?\" She smiled widely and posed for me as I took her picture. I thought for a second and said to Jill, \"Why don't I get one of you and Amy together. It's too bad Sammi isn't here.\"\n\nJill smiled widely and went to stand next to Amy and I took one of them together. Jill said, \"You won't post those online, will you? I'm anti-Facebook.\"\n\nI said, \"Oh, OK, no problem. I can send them to Amy and then she can send them to you directly.\" Jill said, \"I had a Facebook stalker a while back. Long story. Actually, here's my number, so you can send them to me right now. Sammi will want to see them too.\" Jill said her number and I put it into my phone and sent her the pictures.\n\nI let it go and asked Amy, \"You ready to head out?\" She nodded and Jill said to Amy, \"Just call if you need me for anything, OK? Anytime, night or day, it doesn't matter.\"\n\nAmy smiled and said, \"Thanks, JJ. What would I do without my protector?\" She hugged Jill tightly and said to me, \"Can you grab my bag? It's on my bed.\"\n\nI headed into Amy's bedroom, picked up her bag and headed back out. Amy and Jill were still hugging, whispering back and forth until they saw me. They broke apart and Jill said, \"You take good care of my girl, OK?\"\n\nAmy whined, \"Stop being such a mom...\" Then she smiled and said, \"I'll be fine.\" I added, \"I'll get her back to you safe and sound.\"\n\nJill smiled and nodded and hugged me quickly. \"You better. I'm really starting to like you, Dishwasher Man. You can call me JJ. All my friends do.\"\n\n\"Wow, thanks... JJ.\"\n\nWe said our final goodbyes and headed out.\n\n<center>* * *</center> As we walked to the car, I said, \"JJ?\"\n\nAmy smiled and said, \"Yeah, she's been JJ since she was little. Her little brother called her that because he couldn't say \"Jill\" or \"Jillian\" when he was learning to speak. After a while, everyone started calling her that. Samantha's Sammi, of course, and I let Jill call me Aims because she insisted but no one else does. My mom always insisted that everyone had to call me Amy and corrected anybody trying to shorten it. I have no idea why.\"\n\nOnce we got to the car, I called Sandi to let her know we were just leaving.\n\nWe headed out on the freeway and Amy offered me her hand. I took it and she said, \"I'm really sorry about Jill testing you. I had no idea she was going to try some stunt like that or I would have stopped it. I hope you're not too mad at her. She looks out for me.\"\n\n\"It's all good. I know she meant well, even if her tactics were a bit over-the-top. At least now we seem to have an understanding.\"\n\nWe pulled into the garage and got out. Before we went inside, Amy said, \"I'm so nervous right now.\"\n\nI smiled and said, \"Don't be. Sandi doesn't bite. Well, she does, but it feels incredible when she does.\" Amy giggled.\n\nSandi opened the door leading into the house and said, \"Hi! Come on in, you two.\"\n\nWe went through the door and Sandi said to Amy, \"Welcome to our home.\" She held her arms out and she and Amy hugged.\n\nAmy said, \"Thank you for having me.\"\n\nWhen Amy got into some better lighting, Sandi said, \"My goodness, you really look fantastic in that dress. The browns perfectly highlight your complexion. You obviously have an eye for color. And you're wearing my favorite scent again. Euphoria, right?\"\n\nAmy blushed and said, \"You remembered. Yes, thank you. You look great too. I've been meaning to ask you...\"\n\nSandi said, \"Well, hold on... Let's go sit down and then we can talk. Can I get you a drink? I made a pitcher of margaritas.\"\n\nAmy laughed and said, \"Wow, with actual tequila?\" Sandi nodded and Amy said, \"I would love one. I should probably just have one though. I haven't really had many alcoholic drinks. My mom is pretty strict on that, but I think it would help calm my nerves a bit.\" She smiled.\n\nSandi looked at me and I nodded and she said, \"OK, three margaritas, coming up.\"\n\nWe sat down in the living room and got comfortable while Sandi poured the drinks. She brought them on a tray and Amy tentatively took a sip. She said, \"Oh wow, that is really good.\"\n\nSandi warned, \"Just take it slow on that. If you're not used to it, we don't want you getting drunk or passing out.\" She giggled. Just to be safe, Sandi also brought out a big pitcher of plain ice water.\n\nSandi said, \"OK, you wanted to ask me something.\"\n\nAmy said, \"I just wondered how much you work out. You have such good muscle tone. I'm a little jealous.\"\n\nSandi laughed heartily and said, \"Ha, you're jealous of me?! But, to answer your question, quite a bit. Even more since Danny moved in. Let's see, I have an elliptical, we ride bikes, we do laps in the pool out back when it's warm, and now he's got me into lifting weights. That has been a godsend for my lower back strength. He's the big runner in the family; I choose not to partake in that though. I can show you the exercise room if you'd like. Actually, let's just do the full tour.\"\n\nAmy said, \"Cool, that would be great.\"\n\nSandi took Amy through the whole house, including the backyard. She turned on the outside lights so she could see the pool.\n\nAmy said, \"You have a beautiful home. It makes our apartment look pretty low-rent.\" She giggled.\n\nSandi said, \"Oh, well you should have seen the tiny little studio apartment I lived in when I was first married. I bet your place is like a castle compared to that dump.\" Everyone laughed.\n\nWe headed back to the living room and continued talking. We discussed Amy's childhood as well as what her ambitions were for the future. Sandi told her all about herself as well.\n\nAt one point, Sandi asked, \"So, have you told your roommates about me or that Danny is in an open relationship?\"\n\nAmy sighed and said, \"Not yet. I'm not exactly sure how they'll take it, or if they'll judge me or... I don't know. Since it's unconventional and all, it's a little embarrassing I guess. I'm sorry.\"\n\nSandi waved and said, \"There's no need to be sorry. I get it. I've never done anything like this before either. So, where do they think you are right now?\"\n\nAmy said, \"I just told them that his aunt is well-off and helped him buy a house. I hope I'll eventually have the courage to tell them the truth.\"\n\nSandi nodded and asked, \"Can you tell me why you decided to go forward with this? I've been very curious to hear your side of it.\"\n\nAmy had finished her margarita and was feeling very relaxed by now. She thought about it and finally said, \"I felt a connection with him ever since we met. Have you ever met someone that you were instantly attracted to?\" As she spoke, Sandi nodded. \"Well, it was like that. When I found out he had a girlfriend, I was pretty disappointed, but in the back of my mind I had this irrational thought that maybe I still had a chance, so I kept up our daily talks and kept sending out signals that he totally missed.\"\n\nShe paused and both she and Sandi laughed. I just sat and listened. \"I started to get curious about you when he didn't have any pictures of you and would only say that you were older than him but not how much. And then the whole restaurant business happened and I found out who you really were.\"\n\nAmy paused, looked at me and asked, \"How much have you told her?\"\n\nI leaned forward and said quietly, \"I told her everything. I hope that's OK.\" Amy nodded.\n\nAmy looked back at Sandi and said, \"When I found out that you were his aunt, it really affected me as you know. And when I found out that you had given your permission for us to be together, it was enough to push me over the edge and say yes. I thought I would give it a try and see if I could accept the fact that you come first. So far, I like how it's going. I'm just not sure what the future might hold in store for us.\"",
        "Sandi said, \"I know. I'm not sure either, but we'll work together every step of the way for as long as you'd like to continue this.\"\n\nFinally, at just before midnight, Sandi asked the question to really break the ice. \"Have you been in a threesome before?\"\n\n\"I haven't, but it's all I've been thinking about.\" She smiled and leaned forward toward Sandi and said, \"I'm really glad that it's going to be with someone as nice as you and Danny.\"\n\nSandi said, \"That's so sweet of you to say. I think it would be good if we talked over some ground rules, the most important one being that if you want to stop at any time for any reason, don't hesitate to say something. This is a safe place and we're not going to do anything to intentionally make you uncomfortable or hurt you.\"\n\nFor the next ten minutes, we discussed what the expectations were and Sandi finally said, \"Alright then. Shall we head to bed and get this party started? It's getting really late.\"\n\nNo one said anything but we all stood up and walked to Sandi's bedroom.\n\nWe stood together looking nervously at each other. Sandi said, \"Why don't you two kiss and try to relax. Once you get comfortable, I'll join in.\"\n\nAmy and I stood next to Sandi and got close to each other. I whispered, \"You ready?\" She nodded and raised her head to kiss me. She was slightly trembling as our lips touched, but in a couple minutes I could feel her relaxing. Sandi caressed my back as we stood there, and I noticed that she was doing the same thing to Amy.\n\nAfter a couple minutes passed, Sandi said, \"OK, now how about I kiss him for a minute.\"\n\nSandi and I kissed and Amy stood close enough that we could feel her breathing as she exhaled.\n\nSandi broke the kiss and took Amy's hand. Sandi looked into Amy's eyes and moved to kiss her. I held Amy's other hand as she and Sandi tentatively touched their lips together for the first time. It lasted for only a second when Sandi pulled back just slightly and whispered, \"You are so beautiful.\"\n\nAmy was done with being tentative and just went for it. She melted into Sandi's arms and they began kissing passionately. As they kissed, I worked on undressing them. Finally, all three of us stood together completely naked.\n\nWithout words, we climbed onto the bed and Amy and Sandi continued with their exploration of each other's bodies. Sandi moved down between Amy's legs and began gently licking her pussy. I kissed Amy and licked her ears, neck, and upper chest area, and then moved down and began sucking on her nipples.\n\nAmy said to me, \"I want you in my mouth.\"\n\nI crawled up and straddled Amy as Sandi continued between her legs. Facing her, Amy took my cock inside her mouth and moaned loudly as she began sucking me. I looked back and made eye contact with Sandi. Sandi motioned with her finger for me to turn around, and I realized that she wanted me to get into a 69.\n\nAmy sensed my intent as I shifted and moved. We got into our new positions with Amy lying down on the bottom with both my and Sandi's faces in Amy's crotch. We took turns licking her clit, causing her to orgasm repeatedly. When I got close, I started moaning loudly. Sandi moved up beside Amy and waited until I erupted into her mouth and then tapped me to tell me to move. Sandi moved down and kissed Amy to share in the cum that was inside her mouth.\n\nI got underneath Sandi as she knelt next to Amy and quickly brought her to orgasm as they continued kissing.\n\nFinally, we calmed down and separated. We lay there in bed together and held one another, occasionally kissing.\n\nSandi was next to Amy and said, \"You are an amazing woman. That was wonderful. Simply wonderful.\" Amy nodded and said, \"I'll never forget this night. You have been so caring and understanding and... just so perfect. I can't thank you enough for allowing me to come into your lives.\"\n\nSandi said, \"You are most welcome. Thank you for coming and for having the courage to give this kind of relationship a try.\"\n\nSometime after 2am, we drifted off to sleep, though we never turned the lights out. Several times during the night, I was awoken to Sandi and Amy making love in various positions, including scissoring, which was really hot to witness. I eventually lost count of the number of orgasms I thought Amy experienced, but I think that Sandi came at least six times and I came three more times.\n\nEventually, morning came and we could start to see light coming through the windows. We groggily got up and used the bathroom, only to come back and have very loud and passionate sex one more time. After that, we fell asleep until 8:30 when Sandi's phone reminder sounded from the nightstand and everyone groaned.\n\nSandi sat up and said, \"Amy?\"\n\nAmy had her head partially under a pillow and the only response that came was a groggy \"Hmmm?\"\n\nSandi shook Amy and said, \"Honey, I'm really sorry to wake you but I need to talk to you about something important. Can you turn over and sit up for a few minutes?\"\n\nAmy forced herself to sit up and Sandi held her face and looked into her tired eyes and asked, \"Can you hear me?\" Amy nodded but her eyes were still very droopy.\n\nSandi said, \"In just a little while, my sister and her daughter will be here. They're visiting for the weekend. You remember meeting them, right?\"\n\nAmy's eyes widened and said a bit panicky, \"They're coming here? Now? Am I supposed to leave before they get here?\"\n\nSandi held Amy close and in a near-whisper said, \"No, no, of course not. I've been putting off telling you this because I didn't know how you might react. But I can't delay it any longer. I need to tell you why they're coming.\"\n\nAmy was waking up even more now and sighed to calm herself down. In an even tone, she simply said, \"I already know why.\" She looked over at me and back to Sandi.\n\nSandi said, \"You do? Did Danny tell you?\" Sandi looked at me and I shook my head no.\n\nAmy said, \"Not in so many words. He told me that all this happened because of something he couldn't share and I guessed it was your secret. He didn't deny that, so I assumed it was you and your father. But then you invited me here to spend the night with you, which told me you liked women, which I had suspected, by the way, and now your sister is coming here, today of all days, so I...\"\n\nSandi's laugh interrupted Amy's detective work. \"So much for keeping a secret from you. It looks like you put it all together quite nicely with just a few clues. Yes, it's me and my sister. That's what started this whole thing, years and years ago.\"\n\nSandi reached out and held Amy's hands. She said, \"We were apart for many years, but since Danny and I got together, she and I are back together too. Does that shock you?\"\n\nAmy immediately said, \"No, not at all. It actually makes all of this make a lot more sense. It explains a lot better how he came to be with her in the first place. That part confused me the most.\"\n\nSandi said, \"That is such a relief. I've been putting off telling you until the last minute because I was so afraid you would not take the news well. I'm really sorry to spring it on you right at the last second. And if you want to go home this morning, it's your choice completely. But if you think you would like to stay with us, Danny will take you home on Monday morning before he goes to work. You can take a few minutes to think it over.\"\n\nAmy looked directly into Sandi's eyes and said, \"Sandi, I'm staying. I don't need a few minutes. I don't need to think about it even one more second. Last night was the most amazing night of my life and I don't want it to ever end. I've never felt so happy in my life.\"\n\nAmy leaned forward and hugged Sandi tightly. They moaned softly as they held each other. I moved over and joined the hug for a moment, but Amy needed to talk more so I moved back next to them where I had been.\n\nAmy asked softly, \"How did this happen with your sister?\"\n\nSandi said, \"Deanna and I would like to tell you everything together. We are expecting you to keep our secret completely confidential. Will you agree to do that?\"\n\nAmy said, \"I do. No one would believe me anyway. What else don't I know? I feel like if I find out one more incredible secret my head is going to explode.\"\n\nSandi said, \"There are a few more things, but it's all part of one story and once we're finished telling it, you will know everything.\" Amy smiled and nodded.\n\nWe sat in silence for several minutes. Everyone was completely exhausted. Sandi finally said, \"Guys, I'm going to call Deanna to let her know we need to sleep a while before they get here. I don't think we'd be any good to anyone as tired as we are now.\"\n\nAmy said, \"Oh, thank you. I am so tired.\" I said, \"Me three.\"\n\nSandi said, \"OK. Lie down and go back to sleep, my darlings. Adventure lies ahead.\" She called and talked to Mom for a few minutes and then turned the lights off and closed the thick drapes so the room was completely dark.\n\nWe slept like the dead. Just as Sandi had said, adventure was sure to lie ahead.\n\n<center>To be continued...</center>"
    ],
    "authorname": "dan_kildall",
    "tags": [
        "aunt nephew incest",
        "aunt nephew sex",
        "facial",
        "pissing",
        "shower",
        "phone sex",
        "blow job",
        "blonde",
        "19-year-old",
        "anal sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/aunt-sandi-ch-14"
}