{
    "title": "Gender Issues",
    "pages": [
        "By the time the cab got to the Farley mansion it was already well past midnight, and I could tell the party was already going rapidly going downhill into that depressing post-New Year's Eve degeneracy and drunkenness. I usually don't do New Year's Eve for just that reason, but since I already had to be downtown for my publisher's publicity bash, I figured I'd might as well stop in at the Farley's and pay my respects. Ilene Farley's my sister-in-law\u2014my ex-sister-in-law, actually\u2014and used to handle my legal stuff, but since Monica and I split up that got a bit awkward, and her husband Bruce takes care of it now. \n\nThe Farleys are good people as far as lawyers go, and their firm represents a lot of artistic types, so I thought their party might at least be interesting. I knew that Ilene felt responsible for the way her sister had dumped me, running off with the publicist from one of the theater groups she represented, and though it had been almost five months, I wasn't above basking in a little sympathy. It's a poor excuse for a holiday and always disappointing, but still, no one wants to be alone on New Year's Eve.\n\nThere was no one to meet me at the door, so I just walked in and braved the music blasting from the living room, stood in the doorway waiting for my eyes to adjust. The living room was enormous and it was dark in there, and the similarity to a ballroom was enhanced by the mirrored disco ball spinning from the chandelier, suitably tacky and disorienting, sending a confetti of light across the furniture and faces and piles of streamers and paper hats. It was mostly theater people in there, some in costumes, some not. You can tell theater people because they always seem to be having a better time than it's really possible to have. That's one of the things Monica had liked about them.\n\nNew Year's Eve is supposed to be a time of new beginnings and doors opening, but I don't know anyone over the age of sixteen who believes that. More often it seems like a time of regret and sadness, another year of missed opportunities and lost hopes gone. The sight of so many people in costume was encouraging though. It made me think that maybe there were some surprises waiting to happen. Maybe it wasn't all the same old faces. \n\nThere were men dancing with women and women dancing with women\u2014no men dancing with men\u2014the usual theater crowd. I tried not to stare at anyone as I looked around for someone I knew. I didn't recognize anyone.\n\nThere was a girl on the far side of the room who immediately caught my eye. It wasn't just that she was wearing a man's suit and hat; it was that she was flirting too, quite ostentatiously in life-of-the-party mode, and with both women and men. She was standing with a group of about five people, obviously the center of attention, making the others laugh. It struck me that she was dressed in the same clothes as I was. \n\nThere was no doubt she was a woman, though. She was about my height, but very slim, even willowy\u2014a model's body. She had blonde hair pinned up under one of those floppy poet hats that no real man ever wears, and a white shirt and a tight black suit and skinny tie. She wore a glittery black mask, and it was hard to tell with the lights shooting over her face, but it looked like she had a moustache penciled on as well, a thin one, the kind that Frank wore.\n\nAnd though her clothes were male, she obviously wasn't trying to pass as a man. There was no mistaking that neck, those hands, and the exaggeratedly female way she moved: from the hips rather than from the shoulders. She was just what she appeared to be, a girl dressed up as a boy. She was enjoying herself immensely.\n\nThat moustache bothered me. Was someone pimping me? Trying to remind me of Frank and the way he'd run away with Monica?\n\nShe left that group and either felt my eyes on her or knew other people were looking because she moved through the crowd obviously aware of being watched. She found a couple of girls standing against the wall, leaned towards them in a predatory, seductive manner, and whispered something to them. From their laughs I knew it was something dirty. She glanced up at me as if to include me in the joke and I found myself staring right into her eyes. I might have been more self-conscious had I not been so captivated.\n\nI wasn't the only one watching her either, because as I stood in the doorway, some guy walked over to her and tried to talk her up. She gave him her ear for a moment and then said something\u2014tossed off some comment\u2014and it must have been something nasty, because the guy drew back as if he'd been stung, and I could see him muttering \"bitch\" as he walked way. The blonde smiled after him, and I could almost see her adding another notch to her rapier.\n\nI might have just taken her for a gay girl having some fun had she not looked across the room at that moment and found me again. I was too interested to do anything but stare, but despite her harlequin mask, there was no mistaking the look in her eye\u2014half challenge, half invitation, asking me whether I wanted to try my luck. I was tempted\u2014something almost masochistic in me stirred\u2014but first I really had to find Bruce and Ilene. \n\nAcross the front hall was their sitting room, which seemed to be filled with gay men, and behind that was the dining room and the sun porch. I walked back there but they weren't around. When I got back to the living room, she was gone.\n\nI'd stopped on the way back from the poetry party and bought a bottle of the Irish whisky that Farley liked and a few cigars\u2014rum-soaked coronas. I put a cigar in my mouth and was trying to find a path back into the kitchen when a girl standing against the wall glared at me.\n\n\"I hope to God you're not going to light that fucking thing in here.\"\n\nThe venom in her voice took me by surprise, and all I could do was stare. Her girlfriend next to her seemed to be waiting for me to respond, but I was determined to keep out of this New Year's Eve bitterness so I just gave them a sickly smile and said nothing. \n\nI put the cigar in my pocket and pushed my way back to the kitchen, and halfway down the hallway, here came the blonde in the man's suit walking out with two other girls, one dressed as a princess, the other just in jeans and sweater.\n\nThe people standing around made it even more crowded and awkward, and I caught the soft billowy tits of the girl in the princess gown on my chest as she squeezed past, and then here was blondie with her little French moustache and black mask, sidling past me, close enough to bite. She glanced up and I saw the flicker of deep eyes, a glimmer of a smile, and then felt something hard in her pants drag across my thighs and cock\u2014something like a man's erection, but different too: too hard, and obviously artificial, a dildo of some kind, made of plastic or rubber. It slapped across my thighs and cock like a stick across a picket fence, and then it was gone and blondie with it. \n\nI stood there with my mouth open in astonishment as the girl in jeans snuck past. Blondie threw me a look over her shoulder as if asking me whether I'd enjoyed it, then all three of them laughed and were gone.\n\nI felt as if I'd been groped. Or worse\u2014groped by a man. But no, she obviously wasn't a man, though she almost felt like one. I'm not sure what I felt, except that as I walked away my own cock was hardening inexplicably in my shorts.\n\nIlene was in the kitchen cutting limes amid the general party devastation. There were empties everywhere, and plastic cups with beer going flat. The big sushi platter was empty, nothing left but some wasabi and pickled ginger, and even the cold cut platter and spinach dip seemed pretty well picked over. Nothing left but the crudities and cheese cubes on toothpicks.\n\nApparently the kitchen was lesbian territory, and they didn't seem especially glad to see me. It wasn't a good place to take an incipient erection, so I covered myself with the bottle of Irish and smiled. They sat at the table and on the counter, drinking wine mostly, and kibitzing with Ilene as she worked.\n\n\"David!\" she exclaimed when she saw me. \"So glad you could make it! How are you, darling? And all dressed up!\"\n\nShe put one arm around my neck\u2014the one that wasn't holding the knife\u2014and pressed her cheek to mine. \"What can I get you, Davey? Nothing to eat, I hope. We've been cleaned out!\" She gestured around, but didn't introduce me to her friends.\n\n\"Just a glass and some ice,\" I said. \"I brought a bottle. Where's Bruce?\"\n\n\"Around, around. Maybe upstairs. So what have you been up to? Why are you all dressed up?\"\n\nI told her about the poetry party, and Ilene translated to her friends as if they might not understand man-speech. She told them I was a writer and poet and a client of her firm, but they seemed more interested in the limes she was cutting. I'd obviously barged into the middle of something and didn't want to stay.\n\nThankfully, Ilene didn't mention Monica. She poured some of my whisky into a plastic cup and threw in some ice, then pulled me aside into the pantry.\n\nI didn't want to come out and ask, but Ilene's a good sort and she said, \"You haven't heard anything? Monica called me day before yesterday. They're going up to Bangkok and needed money. Seems Frankie met someone and they're all excited about it.\"\n\nI frowned. \"A girl?\"\n\n\"A boy. I'm not too sure of the details. She said that ,they'd met someone, but you know Monica. She doesn't work that fast, so it has to be Frank. All I know is that it's a boy with one of those Thai names that sounds like a teapot falling down the stairs\u2014 Ramalamadingdong or something.\"\n\nI was confused. \"Since when is Frank gay?\"\n\nIlene gave me a sympathetic, motherly look. \"Labels, Davey, labels. No one thinks like that anymore. Everyone's everything. You should know that. Don't you write about these things?\"\n\nI made a face. I couldn't keep up with this world. I didn't have the patience.\n\nIlene cocked her head and asked, \"You heard about Bruce and me?\"\n\n\"No. Don't tell me.\"\n\nShe smiled. \"I'm moving in with Joyce. Just a trial basis. Bruce understands completely and is totally supportive, and we're not talking divorce or anything, but I'm terribly happy about it. She's around here somewhere. You just have to meet her.\"\n\n\"I think I already did. She was at your Fourth of July party.\" I remembered Joyce\u2014haunted, intense, a sleeveless white tee with a tribal tattoo on her upper arm. She'd looked very angry to me and I'd stayed away from her.\n\nIlene was disappointed with my reaction. \"She was nervous then. She didn't know anyone. She's really come out of her shell now.\"\n\nI smiled. \"Well that's great, Ilene. I'm really happy for you. Just super.\"\n\nI wasn't fooling Ilene, so I changed the subject. \"Hey, Leney, Did you see that girl who was just in here? Dressed in a man's suit? Mask and moustache?\"\n\n\"Moustache? Oh yes!\" she laughed, glad to change the subject. \"Cute, wasn't she? Kind of young for you though, Davey, and maybe a bit wild? You could be her father.\"\n\n\"You know her?\"\n\n\"No. Never saw her before. She was with a bunch of theater people from East Light Rep though, so I suppose she has something to do with them, something behind the curtain.\"\n\n\"Well what's she doing dressed as a man?\" \n\nIlene shrugged. \"Having a good time, I guess. Just fooling around and being silly. You know these people. They love to shock us squares.\"\n\nI was about to tell her about the phony cock, but I thought better of it. \n\nI said I was going to go look for Bruce and excused myself. As I left, I felt the mood in the kitchen close behind me like a door.\n\nI found the girl in the living room, back to her game of flirtation. I stood near the wall where I could keep an eye on her, and even though I didn't know why she was interested in me, I was pretty sure she knew I was there. I could see her turn up her charm a few notches, flirting with her two girls, making them laugh. \n\nBy this time the party had gone through its initial lift-off excitement, passed its period of party maturity, and reached that point of degeneracy where people were getting seriously drunk and even surly. No one bothered the girl, though. Her sexual ambiguity seemed to create a space around her, like an aura of inviolability. \n\nHer friends drifted off or were dismissed, and she stood there, quiet at last, waiting. She was quite clearly making herself available.\n\nSome drunks had taken over the music and were playing old, romantic, cry-in-your-beer stuff\u2014Tony Bennett, Sinatra, Sarah Vaughn. I put my cigar back in my mouth and took another one from my pocket. I walked over.\n\nShe watched me as I approached but then looked away when I got close, fixing her eyes on the floor, as if it were suddenly fascinating. I handed the cigar to her.\n\nIt was supposed to be a joke, but she didn't treat it like one. She looked at the cigar and then her eyes swept over me, darker than I'd expected and shining like the sequins in her mask. Her lashes were gorgeous.\n\n\"Thanks,\" she said, taking the corona between two graceful fingers. \"Got a light?\"\n\nI fished out my lighter while she expertly bit the tip of the cigar off with even, white teeth, politely picked the scrap of tobacco off her tongue and dropped it on the floor. She knew exactly what she was doing as she put the cigar in her mouth and twirled it slowly between her lips, pushing it in and out to wet the wrapper.\n\n\"They're strong,\" I said.\n\n\"Good. I like strong.\"\n\nShe put her hand out to steady mine as I held the flame under the end of the cigar. Her hands were exquisite, the nails cut close but shaped and coated with clear polish. She wore a man's watch on her wrist. It looked the size of a wall clock against those delicate bones.\n\n\"What happened to your friends?\" I asked. \"Those two girls you were with.\"\n\n\"Jean and the princess? I suppose they're off somewhere. Getting high upstairs, maybe. Maybe making out.\"\n\n\"They with you?\"\n\nShe sucked on the cigar, her cheeks hollowing, and blew out a plume of milky white smoke. Some people looked over, but no one said anything about her smoking. \"I'm here alone.\"\n\nI'd expected to be cut down like all the other men, but she seemed in no hurry. I put my cigar back in my pocket. I couldn't compete with the beautiful way she smoked.\n\n\"That's a nice costume,\" I said. \"Who're you supposed to be?\"\n\n\"No one special. Just some guy. A man. Who are you supposed to be?\"\n\nI laughed. \"The same, I guess. Just a man. And that's all? Just a guy?\"\n\n\"That's enough, isn't it? It's part of my New Year's resolutions. I'm going to spend this year as a man. I want to see how the other half lives.\"\n\n\"And how's it going so far?\"\n\nA smile lifted one corner of her mouth. \"It's easier than I thought. You just have to be nasty with the girls and rude to the other men, and everything seems to work out fine.\"\n\nI laughed again. She was doing things with that cigar that made thinking difficult, and she knew it.\n\n\"Sounds like you've learned our secrets,\" I said.\" But wait till you try and get someone to go home with you. That's the hard part.\"\n\nShe put her head back and blew another stream of smoke at the ceiling. She had a dancer's neck, and the grace to go with it, and I wondered if Ilene had been right about her working behind the curtain. She obviously loved the spotlight. \"That shouldn't be a problem. The girls are crazy for me.\"\n\n\"And is that what you want?\"\n\n\"It's a possibility.\" She tilted her head and looked at me as the lights from the disco ball streamed over her mask. \"Unless something better comes along.\" \n\nShe was playing with me but I didn't mind it from her. Not a bit. \n\n\"Pardon me for prying,\" I said. \"But are you gay? I mean, it would be good to know before I really get involved.\"\n\n\"Oh? Are you planning on getting involved?\" Another smile, another slow, plume of smoke swirling in the air like cream in black coffee. \"A gentleman never tells,\" she said, closing those long lashes in false modesty.\n\nI laughed again. She was exquisite. \"My name's David McFedder.\"\n\n\"Sam,\" she said. She didn't put out her hand.\n\n\"Short for...?\"\n\nShe looked at me as if she had no idea what I was talking about, so I didn't press her.\n\nThere was an angry shout from the other room and the sound of a chair falling over. A scuffle, and a girl's voice raised in alarm, a man's threat. Some man came out, pushed his way angrily through the crowd and left, not looking back. All the gays were quiet enough; it was always the hetero's that fought.\n\nThe disturbance drew two of the wall-leaners into the other room, though, and Sam took advantage to move into their spot, leaning her back against the wall.\n\n\"So you're just supposed to be some man?\" I asked. \"That's a pretty generic costume, isn't it?\"\n\n\"Actually, I think it's quite radical. I'm tired of coming to these parties and getting hit on. I wanted to see what it was like to do some hitting of my own. Does it bother you?\"\n\n\"No,\" I said. \"Not at all. Rather the opposite, really. I find it pretty sexy.\"\n\n\"Sexy?\" she asked. \"That's cute. I haven't heard that word in ages.\" She took another puff, but she didn't appear to be enjoying the smoke as much as she enjoyed just playing with it.\n\n\"And so who are you?\" she asked. \"Someone said you were a poet. I've never met a poet in a suit before.\"\n\nSo she'd been asking. And she wanted me to know she'd been asking. \n\n\"On the side,\" I said. \"I'm a writer mostly.\"\n\n\"Oh? Are you going to write about this party tonight? Are you going to put me in it?\"\n\n\"Maybe,\" I said. \"Maybe I'll write a story. What would you like me to say?\"\n\n\"Whatever you like. Just so it's interesting.\"\n\nWe were standing fairly close now, and I couldn't get the feel of that artificial cock out of my mind. Her shoulders were against the wall, her hips thrust out a bit so that I could just barely see the bulge in her pants without actually staring at it. She stood as if she knew I was dying to look at it, and it amused her.\n\nJust then the girl in the princess outfit called her from the dance floor. Sam pushed away from the wall and stood up.\n\n\"Excuse me,\" she said. \"I think my babies need me. Thanks for the cigar. Come see me if you need help spelling my name for your story.\" \n\nShe dropped the cigar into an abandoned beer and slid past me towards the princess, who was by now pretty drunk and listing rather heavily to port. She had that messed and blowsy look of someone who'd just been making out heavily in some awkward position. \n\nI didn't mind the abrupt exit. I'm funny that way, a bit of a masochist maybe. I think beautiful woman have a right to be cruel, maybe even a duty. It separates the men from the boys and makes you work to get what you want, so it didn't bother me. Besides, I could tell Sam knew I was still looking at her. She pinched the Princess's bottom and kissed the back of her neck with a bit too much gaiety. I knew it was for my benefit. I was supposed to be scandalized.\n\nI turned away. Sinatra was playing. \"Bewitched, Bothered, and Bewildered,\" I think, but before I could catch the opening bars there was a whoop of laughter behind me and I turned to see the Princess standing there amidst the dancers, almost doubled up in embarrassed laughter, her hands pressed together over her nose and mouth the way girls do when they really cut loose. Her eyes were wide and fixed on Sam, who must have said something especially wicked to get that kind of response. \n\nSam stepped forward and took the princess's hand to dance, put her other hand around her waist and the princess laughed again.\n\nIt was the cock, I realized. She must have felt that artificial cock poking her. That's why she'd laughed.\n\nSure enough, Sam held her close and really seemed to be working it into her, making the princess explode with bawdy laughter again and cover her face with her hand as best she could. The other dancers were mostly drunk or just confused. They smiled too but had no idea what was going on.",
        "I lit my cigar at last and nursed it, but it was stale and didn't taste good at all and I was sorry I'd given her one. I dropped it in the same beer Sam had used and watched the two coronas bobbing in there, then turned to watch them dance. Sam had her right hand on the princess's ass and was really pushing it into her as she swiveled her thin hips around.\n\nI don't know what it was that got me so hot about a girl dressed like a man and wearing a phony dick, but it just set me on fire. Maybe it was just that I was having such a hell of a time being a man myself these days, feeling like an endangered species beset by hunters on all sides, or maybe I'd already had enough and was ready to throw in the towel and let myself be pegged by a skinny blonde in a strap-on. Who needed masculinity anyhow? What had it ever done for me?\n\nMore likely I resented her. I resented the way she was playing at being male, as if all you had to do was put on men's clothes and buckle on a little stiffy and that was it. I knew she wasn't serious, but I also knew that she had no idea what she was doing. Sometimes she looked like Frank and sometimes she looked like Monica, and the result was a mixture of fascination and repulsion in me: anger and desire.\n\nI made my way through the crowd and tapped Sam on the shoulder. These were theater people, romantics all, and they knew the gesture for cutting in. Sam stood back and the princess looked at me, shrugged with resignation, and put up her hands for me to dance with her, but I smiled and shook my head. \"It's your buddy I want to dance with.\"\n\nThe princess looked confused. Sam did too for a moment until she understood what I meant, then the princess shrugged again and started to back away. \n\n\"Have fun you two,\" she said. \"You make a lovely couple.\" She broke into laughter.\n\nI looked at Sam. \"You want to lead, or should I?\"\n\nShe thought about it for a moment, but I'd automatically put my arms up to lead, and so she shrugged and took my hand.\n\n\"You sure you want to do this?\" she asked. \"You know what you're getting yourself into?\"\n\n\"Yes I want to do this, and no, I have no idea. That's what I want to find out.\"\n\nI really didn't want to dance. I just wanted to hold her and feel her against me, but Sam held herself at a distance as if the little cock wasn't so funny anymore and she didn't want me to feel it. I pulled her in tight, though, till I felt that hard little prick jab into my hip and I kept her like that so that she knew that I felt it.\n\n\"Wow.\" I smiled down at her. \"You must really like me, huh?\"\n\nShe laughed now and drew her head back so she could look at my face. She was like a doll in my arms, not much shorter than me, but I was much more massive. \n\n\"I don't believe in doing things half-way. Does it gross you out?\"\n\n\"It should, shouldn't it? But no. In fact, just the opposite.\"\n\n\"Are you gay?\" she asked.\n\n\"Unh-uh. Not that I know of.\"\n\n\"Bi?\"\n\n\"No.\"\n\nShe looked at me. \"You must be the only one in here who isn't.\"\n\nI covered my smile by swirling her around in a dramatic dip. She followed beautifully. \"Oh? And you?\"\n\nShe smiled slyly. \"You already tried that. I told you, a gentleman never tells.\"\n\nIt was my turn to laugh, and now that her secret was out, she seemed to relax. She pressed herself close. My hand slid around to the small of her back, just above the thrust of her buttocks, that terribly feminine curve where her bottom begins.\n\nWe were the only pair of men dancing, but no one seemed to care. People smiled at us, the people who noticed, I mean, and I smiled back, but the truth was, I was getting wildly excited. I didn't know if it was the feel of her body in my arms or that silly little dong pressing against my own, but I was getting very hard, and my cock started catching on hers as we moved against each other. Every time it happened, her body would stiffen, and I'd feel her fingers dig into my shoulder.\n\n\"Tell me about it,\" I said. \"Is it just a strap on?\"\n\nShe leaned back so she could look at me, and her eyes were hot now, and not so sharply focused. She was looking to see if she could trust me. I rolled my hips, catching her cock with mine and plucking it like a harpsichord string. She repressed a gasp.\n\n\"It's more than that,\" she said. \n\nI don't know how, but I knew what she meant. I held her closer and plucked her again, and now she groaned and held me tighter.\n\n\"It goes inside you too, doesn't it? One end's inside you.\"\n\nShe didn't answer, just closed her eyes and breathed deeply through her nose. \n\nI stopped moving. I slid my hand down to her tight little ass and pulled her against me so that she could feel my big cock pressing against her lower belly. Her phony cock touched me and bent upwards, and I slid my thigh between hers, pressing up. I could feel some hard little cable or wire running beneath her mound, curving up inside her like a reaching finger.\n\n\"God, you're fucking hot!\" I whispered.\n\nI pulled her mask up so I could see her face, those dark eyes and long lashes. Even by the streaking lights of the disco ball she was gorgeous. Her lips were full and soft, made even more feminine by that ridiculous little pencil-thin moustache.\n\nHer hand tightened behind my neck and she ground her hips against my cock. \"I guess you like me too, huh?\" She laughed unsteadily. \"And you're sure you're not gay?\"\n\n\"Does it even matter?\"\n\nShe laughed again. \"I have no idea. I haven't been with a straight guy in so long I can't even remember what they're like. For me, straight is kinky.\" \n\nWithout conscious thought, I reached down and took her buttock in my hand and held her like that. I could feel the muscle flex as she swayed, and feel the broad strap from the dildo harness where it cut into the bottom of her cheek. She put her head against my chest, and that sweet, feminine gesture of trust and surrender sent the blood surging through my veins.\n\n\"God,\" she murmured. \"I can hear your heartbeat!\"\n\nShe looked up at me in astonishment, and I wondered what they teach these kids these days. This little beauty, all tricked out like some gender-swapping sophisticate and she never even heard a man's heart beating for her?\n\nI tilted her face up to me and she didn't resist. For a moment our eyes met and we looked at each other as man and woman, and then I closed my eyes and touched my lips to hers\u2014just touched, a soft brush. I just had to see what she felt like. She wore no lipstick\u2014she didn't need any\u2014and her lips seemed to stick gently to mine as if reluctant to let go, as if stuck by magnetism. I felt this subtle change in her muscle tone, a sudden softening or languidness that was so devastatingly feminine that I groaned to feel it. Her body seemed to be glowing with sudden heat, and then she just melted against me, that silly little dick poking me like a finger.\n\nShe whispered something inaudible into my mouth and I felt her ass flex in my hand again as she instinctively pushed her hips against me. The dildo slid up against my shaft and then flopped out of the way as if it had lost a game of chicken with my cock. The thought that she could feel every vibration inside her pussy made me hold her tighter, as if I could feel it too. \n\nShe put her head against my shoulder again and hung on, and I slid my hand down lower, my fingers curling automatically around her buttock to press against her anus through the seam of her pants. It was an instinctive gesture, one I wouldn't have done if I'd stopped to think about it. I wasn't expecting her response. She closed her eyes and raised her face, opened her mouth like a baby bird waiting to be fed and pulled my lips down within range of her teeth, biting me and moaning in a way that left no doubt about her primary erotic zone. I pressed against her rectum and she turned into liquid flame.\n\n\"You want to be my punk, Mister?\" I whispered into her hair. \"You want to be my boy? I'll show you how a man makes love to a man.\"\n\nShe laughed unsteadily and murmured something against my chest as my finger continued to press up between her buttocks. It might have been \"Oh, God!\"\n\nThat's what it felt like: like I was some butch lover and she was my little boy, my nancy, my femme. The image thrilled me. It thrilled her too, I could tell. . I lifted her hand to my face, that beautiful, womanly hand. I turned it over so the palm was towards me and pressed it to my mouth. I stuck out my tongue and licked her palm, tasted the salt of her sweat and the sweet traces of her perfume, then opened my mouth and bit her, right at the fleshy pad at the base of her thumb, the part they call the Mount of Venus. I took it in my teeth and bit.\n\nShe clenched her teeth and wailed, and I could all but feel her nipples harden beneath her costume. She arched her back, pressing the lean muscles of her thighs against me, her cock rolling to the side as my own stabbed at her stomach. I felt her hand tremble in my teeth.\n\nNow she said it out loud: \"Oh God!\"\n\nI licked her palm again, sucked the base of her fingers, and then slid her middle finger into my mouth, sucking it like it was a little cock. I figured that if she were playing a man, her strength would be in her hands, and I knew what having my hands bitten does to me. She played the part. She whined, closed her eyes, let her head fall forward and tried to bite my chest. I could feel her hot breath through my shirt. Her ass was clenched tight under my hand, pumping her hips slowly against my cock. \n\n\"You want it, mister?\" I whispered into her ear. \"You want me to put my cock up your ass? Come on, buddy. I'll make you my punk. I'll suck you off and then make you take it up the ass. I'll show you what it's like to be a real man. You interested?\"\n\nShe shuddered and looked at me, honestly confused. \n\nI smiled at her. \"Come on. Your first night as a man and I'm offering you gay sex. You're not going to pass that up.\"\n\nI bit her hand again, reached behind her and pressed my finger up against her little rosebud and she flattened herself against me like she was pushed from behind. She didn't resist as I led her from the dance floor.\n\nThere were couples making out against the walls and sitting on the stairs, and I led her past them, up past the second floor and up to the third, where the bedrooms were. \n\nThere were two bedrooms up here, an office, a master bath and an upstairs laundry. There were people smoking dope in Farley's bedroom, probably Bruce himself with some friends. I could hear them giggling. The other bedroom was locked, and someone growled drunkenly when I tried the handle. I pulled Sam into the dark laundry room, the only light coming from a fluorescent over the sink. I slammed the door, and pushed her up against it, pulled her hat off and threw it aside. I grabbed hold of her black jacket and stripped it down her arms and dropped that too. My hands went around her and grabbed onto her ass and crushed her against me, almost lifting her off the floor.\n\nGod, could she kiss! All hunger now and wild, biting teeth, on fire with excitement. She tried to get hold of herself and calm us down by putting her shaking hands against my face, but I just bit her hands and that set her off again. I pushed my leg between hers and lifted up, pushing that little thing into her as her hands fumbled frantically trying to get her tie off.\n\n\"Hurry up, punk!\" I whispered. \"Get it off!\"\n\nShe tried, but she was too excited and she couldn't untie the knot. I did it for her and pulled it through her collar and threw it aside. Her fingers went to the buttons of her shirt but she didn't seem to have much more success there than she did with the tie. She was torn between getting her clothes off and giving me her hands to kiss and bite. She seemed to feed off my own excitement, and when my kisses started to flag she left the buttons and grabbed my hair and bit and sucked my lips till I was on fire again and bit her back. I knocked her hands away from the shirt and started opening it myself, but lost patience and pulled it out of her pants and ripped it open, sending the buttons flying like buckshot.\n\n\"Please!\" she breathed. \"Be careful. I've got to return this. It's from Les Miz.\"\n\n\"Fuck Les Miz,\" I growled.\n\nI yanked her shirt partway down her shoulders, those beautiful, soft, feminine shoulders. \n\nShe'd really dressed the part. Beneath her shirt she wore a white cotton two-strapper tee-shirt with cheap religious medals festooned around her neck, just like the boys in the hood when I was a kid. She might have been one of those skinny Italian kids I played stickball with back then, but she was smoother and pinker and maddeningly feminine.\n\nHer tits were small, almost invisible. Only the nipples stuck out through the tee, and they seemed to be quivering with excitement. Her breasts just made her seem more of a boy and made me even hotter, my lust all mixed up with these weird, shadowy homosexual feelings\u2014anger and desire, lust and contempt. Was she man, woman, boy, girl? I was almost enraged. \n\nI reached down and found her phony cock through her pants and squeezed it. I began to beat her off right through her trousers, grabbing that little stalk and pumping it.\n\n\"Oh!\" she cried, her fingers digging into my shoulders. \"Easy!\"\n\nI'd forgotten for a moment that her cock wasn't real, or that it wasn't attached. I wasn't really thinking clearly at all anymore. The feel of that little boner in my hand did something to me, and I turned my hand around so I held her piece like the handle of a tennis racket and began to pump her, pulling her hips this way and that.\n\n\"Oh God!\" she moaned. \"Easy! Easy!\" \n\nHer shoulders were leaning against the wall, her hips thrust forward to ease the force of my masturbation. That little piece must have been rocking back and forth inside her, almost as if I was fucking her with it.\n\nI was frantic. I pulled her away from the hollow-core door and pushed her back up against the blank wall to keep her from making a racket. I'd never thought about cocks, never thought about being gay, but this little minx with the phony prick was driving me insane, touching me in places I'd never even looked before, making me want to do things I could hardly even imagine.\n\nI let go of her cock and started working on her pants, trying to get them open.\n\n\"You ever been sucked, buddy?\" I hissed against her face. \"Not by a woman, but by a man, someone who knows how to do it? You ever have someone go down on you, punk?\"\n\nShe was breathing hard, her eyes closed, putting up no resistance as I got her pants open and yanked them roughly down her smooth thighs. The little tease had gone all out, all right. She was wearing boxer shorts\u2014brown silk boxer shorts with a fly, and there was her little black cock standing straight out, about four inches long.\n\nShe looked down at it in astonishment, as if she'd never seen it before, as if she were shocked. The sight inflamed me. \n\n\"Looks like he's trying to get out, doesn't it?\" I asked her. \"Little nancy-boy can't even keep his dick in his pants!\"\n\nI turned her around by the wall and slapped her ass\u2014once, twice\u2014startling her and making her cry out and cover her little tits protectively with her arms.\n\nShe looked so fragile, so frail and girlish, and that little prick was just so wickedly perverse.\n\nI spun her back, pushed her back against the wall and tore my jacket off. I got down on my knees, yanked her pants down as she stood there like a helpless child, then her boxers. I could see the harness now, the black plastic straps around her boyish hips and going beneath her buttocks like a man's athletic supporter. Her thighs were long and smooth, and the little dick stood out from a black plastic base that was pressed against her hairless mound. It was gloriously obscene.\n\nI pulled her boxers down lower till they were around her ankles. I could see the little plastic tongue that extended back beneath the dildo and plugged up into her pussy, like a black snake burrowing into a rose garden. She smelled exquisite\u2014perfume and powder and female heat, and something else: the little punk had even dabbed some aftershave on her pussy. I wanted to eat her alive. With a surge of overpowering hunger I opened my mouth and sucked her cock inside.\n\nThe cock was rubber. I could taste its tarry bitterness on my tongue, but I sucked it like a slave anyhow. The feel of that bumpy thickness sliding between my lips was strangely familiar, like something I must have imagined in a dream\u2014what a cock would feel like in my mouth. It felt right, and kneeling before this skinny little girl in the laundry room, I felt powerful and degraded at the same time, victor and vanquished. It was infuriating and sexy as hell.\n\nI spread my knees and opened my pants and clumsily fished out my own aching prick\u2014the real thing this time. I'd always wanted to be King Dick in some pissing contest, and hearing Sam's sudden gasp as she compared my tool to hers made me shamefully proud. I felt a big drop of lube run down the tip and over my knuckles as I took hold of it and started to beat off.\n\nShe was leaning her shoulders back against the wall, her hips thrust out for me. She ran one hand through my hair and said, \"I don't believe this! Oh fuck, is that hot! You're insane!\"\n\nI sucked her like I was a cock-crazed whore, moaning and growling and letting that phony dick squoosh and squish in my mouth, wanting the saliva to drip over my lips. I wanted it. I wanted her to shove that thing down my throat and make me take it. I wanted her to fuck my mouth with a man's violence and need.\n\n\"Suck it!\" she cried. \"Suck my big dick!\"\n\nIn the midst of my sucking I almost smiled. Everyone's dick is big when it's aroused and being sucked, even this little slip of a girl's. Even on my knees I overshadowed her. I was bigger than her and broader, and I could have thrown her down with one hand and fucked her just like that, but she was in charge now, and I smiled again as I felt her get into and start thrusting those tight hips into my face, gently at first, but I could tell the feelings of power and mannish lust were getting to her.\n\nI pulled my mouth off her and licked the underside of her cock as I continued to stroke my meat. \"Come on, Sam, fuck my mouth. Make me take it! It's payback time for all the guys who've done it to you, so show me what a stud you are, Sam! Make me take it! Give it to me!\"\n\nShe got into it now. She buried both hands in my hair and bent her knees and began to fuck my mouth with hard little jabs, trying to force it down my throat as I knelt there and reveled in sheer masochistic cocksucking joy. Her mouth was open and she wore a look of contained fury as she worked that little piece around inside her and rammed her black rubber dick into my willing mouth.\n\nI backed off and fisted her cock. I licked and bit her smooth thighs, got my face right up under her shaft and reached for her pink cunt with my tongue. I could see where that plastic stalk reached inside her and it made me crazy.\n\n\"Do you like it?\" I asked. \"Do you like me sucking your big cock, stud? Does it make you feel like a man?\"\n\n\"I can feel it inside. I can feel it when you suck me.\"\n\n\"What am I?\" I asked her, slapping her ass. \"Tell me what I am, what I'm doing.\"\n\n\"You're a cock-sucker. You're sucking my dick. You're my punk now. My trick.\"\n\nHer words inflamed me, humiliated me with a rush of heat so intense that I thought I might lose it right there. I bit down on that cock and shook my head like a terrier with a rat, making her twist her hips and shaking that little bulb that was inside her so that she had to gasp and grab onto my hair to keep from falling.\n\n\"Oh fuck!\" she whimpered. \"I think I'm going to come! You're crazy! You're going to make me come!\"\n\nI wasn't going to allow that. I let go of her prick and stood up, took her in my arms and kissed her. She melted against me like one flame into another. Both of us were pure fire, insane with lust, eating each other's mouths, not even understanding the things we were feeling. Her hand went to my cock and I pushed it away. Then she reached for the snaps on her harness but I stopped that as well. She looked up at me in confusion.",
        "\"Leave it on,\" I said. \"I want to do you like I said, the way a man does a man.\"\n\nOur eyes met and we saw each other then, saw the truth of who we were. I looked in her eye and saw a girl who'd been playing at sex all her life, playing at being a boy, a girl, a bisexual, trans-gendered, crosswired, one thing or another. Putting on and taking off sexual identities like she put on and took off her mask and little moustache. I saw that she didn't even know what the real thing was anymore, that she had no idea what it was all about, and that now, finally, she was ready to learn.\n\nShe looked at me and I imagine she must have seen the thing she was looking for right there on my face: the raw desire, the furious need. She must have seen it because I saw all the masks and disguises fall from her. I saw the genuine fear and excitement shining from her eyes, the desire that's impossible to fake, that thing you feel when you know the water's over your head but you want to go in anyhow. You have to go in.\n\nHer hair was starting to spill off her head. Her lips were all red and swollen, and her little moustache was smeared over her face, making her look like a waif. \n\nShe looked into my eyes again to see if I was serious. I was. She put her fingers to my lips in a sign of truce and said, \"I don't know if I can.\"\n\n\"You came up here with me, punk. You knew what we were going to do. Now are you going to be a man about it or not? You want to know what it's like, don't you? Or are you just as phony as that little dick?\"\n\nShe stared at me, reading my eyes. Her little nipples were poking through her tee-shirt like live coals.\n\n\"There's condoms and cream in my jacket,\" she said. \"Go slow? Please, please, go slow.\"\n\n\"Like molasses,\" I said. \"You just have to tell me to stop and I will.\"\n\nI found her jacket and reached in the pocket, and found her stuff: a little tube of KY and a packet of Trojans. She'd come to this party fully intending to bang some girls with her little cock, and I had an image of her in her two-strapper and St. Christopher medals, slipping a rubber over her dick and greasing it up as the Princess lay back with her legs spread, her eyes glowing with excitement. The vision inflamed me; I was wild to fuck her.\n\nSam watched me nervously. She seemed to know what was on my mind, and quickly put one hand against the wall and stepped out of the tangle of her pants and shorts. She stepped out of her shoes too. She was wearing little black socks that matched her dildo. They almost broke my heart. \n\nIt had been a long time since I'd worn a condom, a long time since I'd done what I was about to do. The thought struck me that this wasn't something you did with a girl you just met, but some madness had taken hold of both of us and none of the normal rules applied. She was a boy, she was a girl; I was gay, I was straight; it was the beginning of the new year, the end of the old, and somewhere the shadow of midnight was sweeping over the face of the earth, headed westward like a scythe.\n\nI got the rubber on and greased it up.\n\n\"Where do you want me?\" she asked.\n\n\"Right there,\" I said. \"Right against the wall. Like two studs in the alley behind some bar. Just put your hands against the wall and hang on. Push your ass out.\"\n\nShe did as I said and my eyes fixed on that beautiful innocent curve of her back. Her shirt still hung on her, the medals swayed around her neck.\n\n\"Pigeon-toe your feet together,\" I said. \"It'll help open you up.\"\n\nShe pointed her little toes at one another and dipped her head, afraid to look. I squeezed out a big dollop of lube onto my fingers and smeared it around her asshole. I couldn't resist reached under her legs and running my greasy hand over her cock too, which made her groan. I put more lube on my finger.\n\n\"Get ready,\" I said.\n\nI slid my finger easily into her rectum and the feel of her wild and secret heat made me groan as if I were the one getting fucked. Sam's head jerked up but she didn't make a sound. I twisted my finger around inside her and my cock throbbed like I was gong to shoot right then and there. I began to slide my finger in and out of her, letting her get used to it. I was trying to go slow, but I already knew I wasn't going to last.\n\n\"Okay?\" I asked.\n\n\"Yeah. Okay.\"\n\nI reached around her and took hold of her cock and began to pump it, pulling it hard enough to set that piece moving inside of her. I wanted to take her mind off it.\n\nThe second finger made her squeal and rise up on her toes. She pressed her cheek against the wall.\n\n\"Breathe!\" I told her.\n\n\"I am! I am!\"\n\n\"You've never done this before?\" I twisted both fingers around inside her, felt her anus slowly relax, those reflexive spasms starting to fade and grow less urgent. The blood was pounding in my ears like a kettle drum. \n\n\"Oh, I forgot,\" I smiled as I whispered against her cheek \"A gentleman never tells.\"\n\nShe was beyond the point of joking, and so was I. She was ready. I stepped up close to her so my cock slid beneath her crack and I felt the searing heat of her ready sex right through the condom. I was seething with emotion\u2014lust and love and anger and humiliation and God knows what. \n\nI pushed my hands inside her two-strapper and caressed her little breasts with my greasy hands. I pinched her nipples. I felt huge, like a bear with a little white gazelle. I pulled my hips back so that my cock slid up the crack of her ass and she shuddered and squeezed me with her buttocks. She was hotter than hell back there.\n\nI bit her neck gently below the ear. \"Get ready, punk!\" I whispered, then leaned back.\n\nI had to bend my knees to fit the head of my cock against her asshole, but I got it in place and quickly grabbed her hips to hold her as I pushed. Sam wailed. She grunted and scratched at the wall, clawing against the sudden invasive outrage. The head popped into her rectum and I just about lost it. I put one hand on the back of her neck and held her pressed against the wall. Her ass was exquisitely tight but already she was pushing back at me, wanting it, wanting to take it. It was if her lower body wanted it, even as her mind told her no. I groaned and hung on.\n\n\"Oh God! Oh God! Enough, enough!\" she cried \n\nJust the head was inside her but that was enough for now. I could look down and see my thick stalk disappearing into her little stretched rosebud and see my own stomach quivering with thrills of illicit pleasure, my nerves on fire.\n\nI reached around and grabbed her cock. I had this terrible need to feel her little prick in my hand, to close my fingers on that hardness. I began to beat her off again, and this time I could feel that little piece moving in her pussy, pressing against the head of my cock. I almost saw stars.\n\n\"Oh my God!\" she gasped. \"Oh my God!\"\n\n\"Oh fuck!\" \n\nMy whole body was on fire, everything\u2014centering on this maddening throbbing of her ass on my cock, but it went far beyond the physical, into the weird realm of homosexual love, of gender confusion, of melting identities. As I fisted her artificial dick, the little piece bobbed inside her and pressed against me, so it was like stroking myself. Sex and masturbation all blurred together till I didn't know where I stopped and she began. \n\n\"If you're going to come,\" I gasped, \"You'd better do it now, because I'm not going to last!\"\n\n\"Oh my God! Oh my God! Faster! Do it faster! My dick! Do it faster!\" \n\nShe covered my hand on her phallus with hers, and showed me how to move it, fast and hard. Her touch was frantic. Her fingers trembled against mine like spiders.\n\nThe base of the rubber prick had slipped and now was nearly over her clit, and she guided my hand so that I was hammering the plastic against her, banging her clit as the stalk moved inside her, and all the time my prick was sliding higher into her ass, into her incredible heat and tightness. I was beating her off and pushing my prick into her and Sam began to tremble. She went limp, dropping her head between her shoulders as the sensations overwhelmed her.\n\n\"Fuck me!\" she breathed \"Fuck my ass!\"\n\nHot little bitch! Hot little boy! I didn't know what she was anymore. I stepped up, fed her more cock, easing it into her greasy rectum. I started to pump, then stopped. I was too close, too close. I slapped the base of the dildo against her cunt in a fast, steady rhythm causing her ass to twitch back and forth on me, like beating off using her body instead of my fist. Weird things were going through my head, not even thoughts, just impressions, confused, hot pictures\u2014the feel of her tight ass around me, that hard cock in my hand, the smooth submissive curve of her back. We both still had our shirts and vests on. We might have been twins, two men fucking in an alley.\n\n\"Oh fuck!\" I yelled. \"Oh fuck!\"\n\nSam was clawing at the wall, pressing her ass back at me now. In my frenzy I pulled too hard on the dildo and felt the snaps give. Enraged, I tore it off her, making her ass rock and throwing her off balance. My prick in her ass held her up.\n\nI pushed her up against the wall and shoved all the way into her, making her take it all. I turned the useless dildo around in my hand and pushed it into her pussy. \n\n\"Oh no! What are you doing!\"\n\nI pushed the dildo into her, fucking her with her own cock, and I felt the pressure on my cock as that big plastic knob slid into her. I began to pump it into her, not even knowing what I was doing. My legs were bent so that I was almost squatting behind her, fucking up into her ass like an ape and she hung from me like a rag doll with her cheek pressed against the wall, her ass out, biting her knuckles to keep from screaming. Her face was red and hot with suffused blood, her hair stuck to her sweaty skin. \n\nMy cock was jerking, dry-coming inside of her, my emotions out of control. I fucked her because she was a woman. I fucked her because she was a man. I fucked her because she was Frank, or Monica, or me, or sex itself. I felt like I had my cock sunk into the very core of life itself and I fucked it for all I was worth. There was nothing between us anymore, no skin to separate us. We melted together, fused in the fire of that furious sex and obscene pleasure\n\n\"Come, you bitch!\" I hissed. \"Come for me!\"\n\nI was almost there, already riding that electric escalator, going up, up, losing control. I wasn't going there alone though. She was going to come with me if I had to drag her by the fucking hair. \n\nI pushed deep into her, straightened my legs so my prick almost lifted her feet off the floor and leaned forward, bit the back of her neck like a crazed tomcat. I felt her goosebumps against my tongue\n\n\"Oh God I'm going to come!\" she gasped. \"You're going to make me come! Oh fuck! Oh my God!\"\n\nThat did it for me. That was all I needed. I felt her let go, felt her slide into helpless ecstasy. I let go of the dildo and it slid from her pussy and fell on the rug with a dull thud. I gasped\u2014choking on my own orgasmic fury. I wanted to tell her, wanted to warn her that I was coming too, but my voice wouldn't work. My jaws were locked, my eyes wide, everything tensed and quivering, then it just ripped out of me, a sensation of having my very insides torn out, boiling up from the soles of my feet and the very hairs on my head.\n\nI exploded into the slick confines of the rubber, jet after jet of thundering release, bathing myself in my own flooding heat, one hand buried in her spasming pussy as I crushed her against me and felt her quiver like a bow after the arrow's released. Her head was back and she was gasping, her body jerking in time to each explosive burst of semen. I knew she couldn't feel it, but she must have felt me contract, must have felt the frantic lurching of my cock, the reflexive way it seemed to reach up into her, trying instinctively to plant my seed deep, where it would stay forever.\n\nSlowly the spasms stopped, the tension drained from my body. I felt flayed, skinned, as if I was nothing but exposed nerve. Every sensation was suddenly exquisitely clear and almost painful. \n\nMy thighs were quivering and I couldn't stand up any more, and Sam was shaking like she was palsied. I was afraid to let go of her so I wrapped my arms around her and held her tight. My deflating prick slid lewdly from her ass and I shakily got down on my knees before I collapsed, pulling her down with me. \n\nWe ended up in a heap on the floor of the laundry room, tangled together in a frenzy of arms and legs. I was holding her tight, both of us unable to speak, and she had her open mouth pressed against my face as she gasped for air. Her breath was scalding hot, as if someone had cracked a furnace door: the heat of her desires. I loved it. It was if I'd opened the gates of hell for her, and now I had to face the heat myself.\n\nI held her because I needed her, because I was astonished and afraid to let her go. And I held her because I was afraid to look at her face and see what I might see, that this all might have been in vain, that it hadn't meant anything to her at all, just another sexual game.\n\nBut then I felt her hands on my back, the way they squeezed me\u2014frantic and possessive, using all the strength in those fragile arms to keep herself against me and keep me close, and I knew she felt it too. She felt the same way I did, and when I at last looked at her, I saw the same thing in her eyes that I knew was in mine: the shining astonishment, the sense of connection, the overwhelming joy.\n\n\"We've got to get out of here.\"\n\n\"Yes,\" she said.\n\n\"We're lying on the floor of the laundry room.\"\n\n\"Yes,\" she said again, and she laughed nervously.\n\n\"I've just fucked a girl with an artificial cock, dressed as a man.\"\n\n\"Yes,\" she said again, and now we both started to laugh, and we laughed and we couldn't stop. \n\nThe laughter veered into tears for both of us, and though I can't tell you the last time I cried, these tears came quickly and easily and didn't surprise me at all, or Sam. They stopped just as quickly and left me feeling purified and relieved, and strangely at peace. I realized I was done with Monica and done with Frank, and that, just as is supposed to happen on New Year's Eve, one door had closed and another had opened.\n\nThe Sam who came downstairs with me wasn't the same girl I'd gone up there with, nor was I the same man. Her clothes were messed, her shirt was missing buttons and her little moustache was gone. Her artificial cock was in her pocket as we stepped over the people on the stairs and the occasional body passed out on the floor and made our way back to my place, where we had some serious gender issues to discuss."
    ],
    "authorname": "dr_mabeuse",
    "tags": [
        "strap-on",
        "anal",
        "new year's"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/gender-issues"
}