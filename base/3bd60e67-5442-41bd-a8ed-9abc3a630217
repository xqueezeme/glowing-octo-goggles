{
    "title": "Blizzard Ch. 29",
    "pages": [
        "\"You made it!\" I opened the front door of my house to find my brother on the step. A handsome big guy stood at Doug's side and lifted a bottle of whiskey with a ribbon on it.\n\n\"Gene, this is Hank,\" Doug said. \"And of course I made it. You bought a fucking house.\"\n\n\"Well, I had to do something with that bonus Peter gave me.\"\n\n\"Still, surprised you took the job,\" Doug said. \"I didn't think you wanted to owe everything to Alex's dad.\"\n\n\"He owes me,\" I said. \"When Steve fucked everything up at the old place, I did take three of their most profitable clients and the best members of my team with me.\"\n\n\"Yeah, but I doubt Alex's dad thinks you've paid off that deficit.\" Doug kicked off his sneakers. Hank looked around the porch. I had a moment of clarity.\n\n\"Right! Shit. Come in, come in. I'll give you the tour.\"\n\nI stepped back and let my brother and his new beau enter my home. Saying, thinking, knowing, 'my home' wasn't getting old, and I hoped it never would.\n\n\"Where're the girls?\"\n\n\"Your girlfriends are here? Together? They know about each other?\" Hank shook his head. \n\n\"I told you about my brother and his girlfriends,\" Doug laughed. \"Also, take me somewhere with liquor glasses.\"\n\n\"He told me you were dating three girls, that they were hot, and that one of them plays Mercutio in Shakespeare in The Park, or whatever it's called,\" Hank explained. \"He didn't say they knew about each other. Brave boy you are.\"\n\n\"Or lucky,\" I said. \"If you believe in luck.\"\n\n\"Bravery is just hoping for good luck even when you should know better,\" Doug said. \"Besides, watch them, you'll see they're not here just for Gene.\"\n\n\"Oh, well, that's more believable,\" Hank said to Doug. \"You meant hot for lesbians, then.\"\n\n\"No, no I didn't,\" Doug smiled. He pushed my shoulder. \"We brought liquor.\"\n\n\"I heard you,\" I said. \"C'mere. I'll show you the front room first.\"\n\n\"Living room?\" Doug corrected.\n\n\"We always had the TV and stuff in the living room back home,\" I countered. \"Max's putting that together in the basement.\"\n\n\"That's called the rec room,\" Doug said.\n\n\"Fine. Welcome to the living room.\" The living room was the only left out of the porch. It was a long room that ran near the length of the house, from the picture window in front, to the kitchen pantry in back. Boxes were stacked. Shelves remained unbuilt. Furniture was in the process of delivery. \n\nA new and shiny coffee table was in the back corner. I had lost the old battered beauty in the collapse. It was weird, the things I missed.\n\n\"That is a nice collection,\" Doug nodded.\n\nA small cabinet sat on the coffee table; it was full of bottles. Once we had things organized, I planned to have it as the headpiece of an elegant shelving unit Sam had bought. For now, I had my private liquor stash at knee level.\n\n\"It's from Wayne and Ronni,\" I said.\n\n\"Max's parents,\" Doug translated for Hank.\n\n\"Dude, do your family stuff and I'll keep up as best I can,\" Hank squeezed my brother's hand. I smiled.\n\n\"Jesus! It seems almost insulting to put our bottle next to those.\" Doug put down what I expected was expensive akvavit. I unadventurously favored rye and rum. There was an adventure to be had in any of the 15 unfamiliar bottles.\n\n\" 'Almost', the operative word,\" I agreed. \"What should we open?\"\n\nHank, Doug, and I clinked our glasses. Do you shoot akvavit? I guess so. I liked it. Smooth. I had the feeling the quality was wasted on Doug and me. Hank really appreciated it.\n\n\"C'mon, no one wants to see a bunch of unpacked boxes,\" I gestured.\n\n\"Doug!\" Max wasn't in the basement; she was in the kitchen. I was looping the ground floor of the home. My redheaded girlfriend eagerly hugged my brother. \"And you're Na-\"\n\n\"Hank,\" I interrupted.\n\n\"It's OK,\" Hank shook his head at me as he accepted the hug from Max. \"I know the kind of man Doug is.\"\n\n\"Whew...\" I pantomimed wiping my brow. Doug lightly smacked me on the back of the head.\n\n\"Ah, you look incredible, girl,\" Doug grabbed Max's hands and lifted them apart to see her. She was wearing a light summer dress and workboots. Her hair was tied back in a tight bun. \"I have to say, I still can't believe Gene has this good of taste.\"\n\n\"Well, we kinda had to chase after him until he learned good taste,\" Max smiled.\n\n\"What are you doing?\" I asked Max.\n\n\"Making sure you're fit and healthy,\" she said. She gestured to the bags and bags of Richardson's health food she was unloading into the fridge and pantry. We all looked at each other. We were helping.\n\n\"I got it,\" Max said. \"Show your brother around.\"\n\n\"Yeah, not how the whole damsel-in-distress thing works,\" I said. I kissed her. \"So I called for workhorses.\"\n\n\"I suppose,\" Max relented.\n\n\"Where's our sweetheart?\" I asked Max.\n\n\"Up in the bedrooms, and before you ask, our nymph's in the backyard,\" she chuckled.\n\n\"They're not helping you in here?\" I asked.\n\n\"It's just snacks,\" she said. \"We're not doing the big housewarming thing until Sam's brothers fly in. And your parents drive in from Wolfville. And-\"\n\n\"So today we're here for muscle,\" Doug nodded.\n\n\"He did warn you in advance, right Hank?\" I asked.\n\n\"Yeah, absolutely,\" he nodded. \"Though I expect pizza.\"\n\n\"Oh my god! I left my phone downstairs! I'll go order-\"\n\n\"In a few hours,\" Hank waved down Max. He put a box on the kitchen counter and started pulling out cookware. \"Where do you want these?\"\n\n\"Well, I've been putting the dishes here and-\"\n\nAnd I had no say in where anything went. Max and Sam had stocked the fridge, the cupboards, and the cookie jars. Cookie jars were not things I had ever expected to own. They were three different-sized piggies and one pot-bellied wolf. Alex had insisted the moment she had seen them. I tried not to agree or disagree when Alex said she was the cute one and Max was the big one. Doug pulled out a pair of cinnamon roll cookies and put pig-Sam's head back on. I led them out to the backyard.\n\n\"You must hate this,\" Doug said as the three of us men looked out the back.\n\n\"Why? They're beautiful grounds.\" Hank washed down his cookies with a beer.\n\nWe were looking at a small fenced-in backyard. They weren't our fences, all three of my neighbors walled off their lots. A new baby-barn shed, painted red, had been delivered and sat in the corner. Stakes and pink string cordoned off a good fourth of the yard.\n\n\"There's a lawn to mow,\" Doug gestured. It was a small flat yard, not like the acre and a half of hills back at Mom and Dad's place. \"You wanted to see a fight between Dad and Gene? It was when Dad wanted the lawn mowed every week.\"\n\n\"Yeah, and you didn't mind,\" I shook my head. \"And he still made me do it.\"\n\n\"He made you do it because it needed to be done and you refused to do it,\" Doug said.\n\n\"Seems like a bad solution,\" Hank said. \"Hey there!\"\n\n\"Hi! Hi Doug! And you must be Nathan! Hi!\" Alex came out of the little barn. She was wearing overall shorts and a light pink t-shirt. She had tied her hair in pigtails and her sneakers were old and beat-up.\n\n\"It's Hank, actually,\" Hank said as he accepted the hug. Alex frowned, but let herself be passed around for hello squeezes.\n\n\"Oh, sorry about that. Must be awkward,\" Alex worried as she stepped backwards.\n\n\"No, Doug hasn't hid the fact that you might've thought his last boyfriend was his plus one today,\" Hank shook his head. \"You need any help out here?\"\n\n\"Well, I got to dig up the corner over there to plant the garden,\" Alex beamed and hopped and gestured.\n\n\"It's late August, Alex,\" Doug pointed out. \"Not really planting season.\"\n\n\"Yeah, maybe not, but with all of the toys and tools Sam's daddy sent us,\" Alex pointed at the shed, \"I wanted to play.\"\n\n\"How about we get the rest done first?\" I asked.\n\n\"Oh, yeah. Yeah! It's Friday! Yeah!\" She lit up, grabbed me, kissed my cheek, and bolted inside.\n\n\"OK, she and the redhead are together and with you?\" Hank asked. \"And there's still a Sam?\"\n\n\"Yeah,\" I bragged.\n\n\"Oh, shove the smile,\" Hank laughed. \"Whatever you did - brainwashing, magic genie, MK-Ultra? It's working for you.\"\n\n\"I think I was a pawn in a secret fairy war,\" I smiled.\n\n\"That'll explain it,\" Hank nodded. His beer was empty. He looked over the yard a last time. \"But seriously, turning over the sod and dumping down that topsoil? That's not what I signed up for.\"\n\n\"Good point,\" I agreed. \"Basement, and then I'll show you upstairs.\"\n\nWe didn't move in a hurry. Max took our empty beer bottles. We replaced those before we opened the door off the kitchen and headed down into the mostly finished basement.\n\nI found the ceiling a little low. Hank could headbutt it by lifting his heels.\n\n\"Holy shit,\" I said. The whole room was set up. The basement was basically one big open room. There were four pillars holding up the rest of the house and the staircase, but otherwise it was wide open.\n\nThe washer and dryer in the back sat next to the furnace and pump. The floor was concrete over there. Carpet, the only carpet in the house, covered the rest of the floor. A poker table sat in the middle; on the west side, three bookshelves were cluttered with board games. Alex's guitars, drumkit, and keyboard decorated the north wall. To the east, a big TV, on its stand, faced a couch and loveseat set that still smelled like the warehouse they were delivered from.\n\n\"Why are you surprised? It's your house,\" Doug said.\n\n\"Holy crap. Max must've done the whole basement...\" I said, looking around. She assembled the shelves, unboxed all the games, and set up the entertainment system? She had to have done it today. Most of this furniture hadn't been delivered before I left for work, and I had a phone full of selfies from Sam and Alex all over town. Max had done all of this, by herself.\n\n\"And you didn't help,\" Hank said. \"You feel like shit?\"\n\n\"A little. If I point it out to Max, I'll bet she'll be confused by that,\" I admitted. I found her phone on the game table. \"I should say nothing other than thank you.\"\n\n\"I've seen Max. And then there's Alex! Even if your third girl is a horribly disfigured swamp monster, you should only ever be saying thank you,\" Hank suggested.\n\n\"Dude, Sam's the hottest.\" Doug sipped his beer with a smug expression.\n\n\"What?\" I frowned at that. I shouldn't be questioning Sam's looks. \"I'll let that go, you're gay.\"\n\n\"So am I,\" Hank shrugged. \"I know your girls are hot.\"\n\n\"Also, you're now hosting board game night,\" Doug said as he walked over. \"I thought you lost these?\"\n\n\"Look again: some of those still have the plastic on,\" I said.\n\n\"Shit!\" Doug frowned, \"All new? Oh right, the old ones got wrecked with your apartment. Of course they're all new. Shit! Is that Heroscape? I haven't played that since junior high... When'd you buy these?\"\n\n\"Those are from Peter, though I think Alex played personal shopper by how often she was bugging me to list up all of my favorites.\"\n\n\"Shit, you didn't have Rise of Vigil before!\"\n\n\"She also tracked down all of the promos,\" I said. \"Full Ascension collection.\"\n\n\"Shit, I'm going to be coming over every day,\" Doug said.\n\n\"Do you have anything that isn't just for nerds?\" Hank asked, with a bemused smile.\n\n\"Cards Against Humanity and those kinds are on the third shelf,\" I pointed with a grin. \"Doug, put the box back. I'll take you upstairs.\"\n\nI gave Max back her phone in the kitchen. I waved to Alex who was playing with hers and pacing the length of the living room. I climbed the stairs.\n\nThe house had four bedrooms and two and a half baths.\n\n\"Only the master bedroom has a bed,\" Doug said. \"Forcing mom and dad to get a hotel when they get into town. Smart. Hey beautiful!\"\n\n\"Hey Doug!\" Sam put down Tickly's tentacles and set the stuffed squid between an orca and a camel. She then hopped off the bed. She was wearing a bikini top, workgloves, and cutoff jean shorts. Her brown hair rested on her shoulder in a thick French braid. Her bare feet hit the hardwood and she rushed over and gave him a hug. Her braid slipped off her shoulder in the run. \"You must be Hank.\"\n\n\"Hank,\" I corrected.\n\n\"No, she got it,\" Hank laughed at me. He leaned over and stage-whispered at Sam, \"You're way too hot for him.\"\n\n\"But I'm hot enough for Max, so I get to stay,\" Sam stuck out her tongue. \"You guys're here to help unload? Thank you so much.\"\n\n\"You're very welcome,\" Hank said. \"So what's the plan? Three girls sharing one closet?\"\n\nSam laughed in Hank's face. Hank laughed back just as hard. Doug frowned at me and I shrugged. I hadn't even considered this territory. Max was a little bit bustier, but I was under the impression they could share clothes as easily as they shared me. Sam shook her head. \"No, I'm taking the south bedroom closet. Max is taking the east and Alex the west. This one's more for odds, ends, the toybox and, if need be, Gene's clothes.\"\n\n\"Nice,\" Hank agreed.\n\n\"Toybox?\" Doug inquired, obviously thinking of the games he had seen in the basement.\n\n\"Yeah,\" I said with a proud smirk. \"The girls bought an entire arsenal of-\"\n\n\"Toybox? You must be hearing things, Doug. Come along, boys, there's work to do. Loose lips are the devil's playground.\"\n\n\"That's loose lips sink ships. Idle hands are the-\"\n\n\"She was telling you to shut up and get to work,\" Hank explained to me.\n\n\"Oh, muscles and brains!\" Sam smiled. \"Keep this one,\" she mouthed at Doug.\n\nThe work was pretty easy. All of our stuff had been in individual boxes, it was mostly just slipping things on hangers or Sam scolding us for delving too deep into things that were for my male eyes only. Does it count as scolding if she's chuckling the whole time?\n\n\"You've really stepped up your wardrobe, man,\" Doug said as we hung up the last of my shirts. \"Besides that Hawaiian shirt you've got on.\"\n\n\"Alex bought it for me,\" I said.\n\n\"It's beautiful,\" he backpedaled.\n\n\"Most of these clothes are their idea,\" Hank assessed.\n\n\"Well, besides this breezy thing,\" I pulled the shirt away from my body, \"I did manage to keep most things solid-colored and crisp-looking.\"\n\n\"Very straight,\" Hank agreed. \"You wear it well.\"\n\n\"Very gay,\" I smirked. \"Thank you.\"\n\n\"You did lose what? 40 pounds in the last six months?\" Doug nodded.\n\n\"Closer to fifteen,\" Max said as she knocked on the doorjamb. \"He's more muscly now.\"\n\n\"Good for you!\" Hank grabbed my shoulder. \"Now that I know what it takes to get a McArthur boy in shape, I'll settle for you just the way you are, Doug.\"\n\n\"What's that supposed to mean?\" Doug frowned.\n\n\"That you're mine and no one else's,\" Hank said. To me, it sounded almost like a threat, but Doug beamed.\n\n\"Pizza's here. Stop working.\" Max smiled. \"C'mon.\"\n\n\"Where did Sam go?\" I asked.\n\n\"She left it to us when we cut open the last box,\" Doug wrapped an arm around Hank. \"Seriously, pizza.\"\n\n\"Yeah, great idea.\" I grabbed Max the same way. She leaned her head on my shoulder and we walked downstairs. We took a left at the front door. Or a left off the stairs, rather. Across from the living room was a mostly empty room. A table and unmatched chairs sat in the middle of an undecorated dining room.\n\n\"We got meat for Gene and Doug, a works for Sam and me, and vegetarian for Max.\" Alex gestured with her half-eaten slice. \"Lots of beer, wine, and liquor too.\"\n\nShe lifted a thin wineglass and sipped her Riesling. \"This is the life.\"\n\n\"Wine and pizza?\" Hank said. \"I like your style, Alex.\"\n\n\"I like you, Hank.\" Alex chomped her pizza. Sam and Max came in from the kitchen, carrying drinks.\n\n\"She always shows everyone up like that?\" Hank asked. \"Thank you, Max.\"\n\nMax handed Hank a beer. I took one as well.\n\n\"Alex can't help it,\" I answered Hank. \"She's always been the star of the show.\"\n\n\"Says the guy who got the girl. Three times,\" Sam said.\n\n\"Pfft!\" Alex rolled her eyes. \"Do you know how many times I got this girl?\"\n\n\"Do you want a real answer to that question?\" Max said, grinning. I could almost see her doing the math in her head. There was no way. No way...\n\n\"It's a big number. I'm really not that hard to get,\" Sam said to Alex.\n\n\"The trick is to get close,\" Alex said. \"And then BOO-OOM! You pounce.\"\n\n\"You take Doug's course on dating?\" Hank laughed.\n\n\"He took mine.\" Alex rubbed her fingernails on her shirt and blew on them with confidence.\n\n\"Oh, going to give an example?\" Sam asked.\n\n\"Gotta get closer.\" Alex sipped her wine.\n\n\"This close?\" Sam hopped her chair nearer to Alex.\n\n\"Cold.\" Alex took another bite of her pizza.\n\n\"This close?\" Sam hopped her chair until she could bump Alex's hip.\n\n\"Warmer.\" Alex chewed, swallowed, and laid her half-eaten slice on the table.\n\n\"This close?\" Sam straddled Alex.\n\n\"Hotter.\"\n\n\"This close?\" Sam ground her hips in tight. She shoved her index fingers into Alex's mouth and pulled her lips into a broad Joker grin.\n\n\"Zagly thaa globthe...\" Alex nodded. Max and I were laughing. Alex stared into Sam's eyes with unflappable professionalism. Sam broke down into giggles and then retreated a little. She leaned back on Alex's lap and wiped saliva and residual pizza sauce off on Alex's nipples.\n\n\"Sam!\" Alex's eyes went wide and her cheeks burned red. She snatched a fistful of napkins from the table. \"We have guests.\"\n\n\"What did we just witness?\" Hank asked Doug.\n\n\"They have never told me,\" he said.\n\n\"And we never will,\" I said and put my empty beer on the table. Sam ran to replace it. Hank watched her go. He shook his head.\n\n\"You know, I didn't think I could imagine this working,\" Hank said. \"But you guys have love and momentum.\"\n\n\"And the hard work and the commitment,\" Alex said. We all agreed. The doorbell rang. Alex's crust skidded across the table. Doug caught it from flying off and onto the floor. \"That's gotta be the delivery guys! It's here!\"\n\n\"Tonight?\" Sam popped up.\n\n\"What's here?\" Doug asked. I shook my head.\n\n\"Thank you guys for helping so much,\" Max walked over and hugged Doug from behind. \"You'll be here for the housewarming party?\"\n\n\"Of course we will,\" said Doug.\n\n\"There's still a bit to do,\" I said. \"The living room and-\"\n\n\"No,\" Hank shook his head. He grabbed Doug's hand. \"But we are taking the rest of the pizza.\"\n\n\"Carry it right in here! Thank you so much!\" Alex was jubilant at the door. She held it open as delivery men carried their package into the living room. Max pushed me down by the shoulder so I couldn't see what it was.\n\n\"Thank you both for coming out and helping,\" Sam said, as she hugged Doug and Hank both.\n\n\"Thank you, Sam,\" Doug smiled as he let go. \"He's made himself something you girls will be proud of.\"\n\n\"You're always welcome,\" Max said. Her cheeks flushed red. \"But not for the next few hours.\"\n\n\"Thank you boys so much!\" Alex waved to the delivery men as they left. She ducked into the room and yelled. \"It's here!\" She noticed Hank and Doug. She lost a megawatt off of her gigawatt smile. \"Oh, we have to say goodbye.\"\n\n\"Yeah, it has come to our attention,\" Doug said. He grabbed Alex and hugged her. \"Love you, girl.\"\n\n\"Love you too, boy,\" Alex kissed his cheek. \"It was nice meeting you, Hank.\"\n\n\"I'm starting to believe Gene wasn't joking about his secret fairy war,\" Hank said as he hugged Alex. \"We'll see you at the big party. You're not the only ones who want their McArthur to themselves.\" He frowned at his own possessive grammar. \"Good luck. We're all rooting for you.\"\n\n\"Thanks again, It was nice to meet you,\" I said. I punched Doug in the shoulder as Hank was putting on his shoes. He raised an eyebrow at me. \"Nice work.\"\n\n\"It was all luck,\" he smirked. \"If you believe in luck. Try not to get eaten alive... in the bad way.\"\n\n\"Get out,\" I smiled, then waved, and shut the front door. I turned. My girls were all brightly smiling at me, and right in my face.",
        "\"What?\"\n\n\"It's here!\" Alex grabbed my hand and dragged me as Max and Sam grabbed my shoulders; together, the three of them steered me into the living room. Sitting in the middle of the room was a beautiful fluffy black armchair.\n\n\"I didn't order that,\" I frowned.\n\n\"It's our gift to you,\" Max said.\n\n\"Somewhere for our king to sit in his castle.\" Alex shoved me down into the cushion.\n\n\"Now,\" Sam beamed as she settled down to her knees, \"let us fulfill your every desire.\"\n\n\"I-\" I didn't finish the thought, let alone have the tools to verbalize it. Alex and Max knelt down next to Sam. Was this another magic thing? I flicked my eyes to the windows. Was there a rainbow? Thunderstorm? How did things work in the summer? \"Ow!\"\n\nAlex was smiling sweetly as she pulled her fist back from my punched knee. She tilted her head to the left where Sam and Max were hungrily making out and stripping off each other's clothes.\n\n\"Focus on us, Gene,\" Alex said, and opened her arms wide to reach for Sam and Max. They each put a hand in hers, smiling. \"Them\"?\" Alex said, and gestured dismissively to the window, dragging Max's hand with her; Max rolled her eyes and smiled. \"We can ignore them. No one out there is a part of us.\"\n\n\"Maybe we should get the curtains put up.\" Someone was going to see my girls.\n\n\"No,\" Alex said. \"I'm not wasting that much time.\" Alex hopped up and grabbed my chair's headrest. Sam grabbed the left armrest. Max grabbed the right. Together, my girls turned the whole chair - with me in it - until they were protected from view by the recliner's tall back.\n\n\"OK, that's a little better,\" I agreed.\n\n\"A little better? No, that's not what you should be saying.\" Alex sank down close to my knees and undid the fly of my jeans. \"How's the chair? Comfy?\"\n\n\"It will be when my ass is imprinted into it,\" I said.\n\n\"Just so long as my knees are imprinted on both sides of your ass,\" she smirked as my cock was freed. I lifted my hips and she pulled away my jeans and boxers. \"Now, my King. What do you say?\"\n\nSam and Max inched in on either side of Alex. Six beautiful eyes looked up at me.\n\n\"Hail to the king, baby.\" I grinned. Alex dove her mouth down onto my cock. I leaned back. \"I love all of you girls.\"\n\n\"We love you too,\" Max had stood up over me. She put her knee over the armrest and squeezed in.\n\n\"We love you so much!\" Sam whispered into my ear as Max kissed my lips. Sam's palm circled on my chest as I was squeezed between the girls.\n\n\"Whe lugh ya fawlaber,\" Alex vibrated down my cock.\n\n\"Don't talk with your mouth full,\" I teased. Her mouth came off my cock.\n\n\"Then I want my pussy full.\" She rushed up and her shorts were long gone. Max twisted to let in Alex's knee alongside my hip. The blonde's hips came down and she engulfed me. She smiled and said: \"We love you forever.\""
    ],
    "authorname": "redsliver",
    "tags": [
        "college girls",
        "epilogue",
        "ff",
        "harem",
        "magic",
        "mf",
        "mff",
        "mfff",
        "romance",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/blizzard-ch-29"
}