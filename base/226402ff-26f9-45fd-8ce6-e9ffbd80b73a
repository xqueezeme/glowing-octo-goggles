{
    "title": "Lost Empire Ch. 41",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner\n\n0097 - Ace\n\n0098 - Lucy\n\n0101 - Shelby (mother ship)\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco\n\n0778 - Jan\n\n0798 - Celeste\n\n0908 - Tara\n\n0999 - Zan\n\n1000 - Sherry\n\n__________________________________\n\nTrianas had landed as far away from the Earl's palace as she dared. She'd spent the better part of the day working on her systems trying to restore what she could. Smiling her work had restored almost all her weapons almost all of her hyper drive. Shaking her head she saw that her trans-warp was at half, not great but at least now it wouldn't take a month to get anywhere.\n\nShe'd just finished for the day when she got an alert, then nine more! Looking at what she saw she had to do a double take! Those had to be the biggest damn war ships she'd ever seen! No wonder the invaders lost! Ok this was going to take a hell of a lot more planning on her part before she made another attempt at the bastard emperor.\n\nAlexander was pushing his techs almost to the breaking point. He had to find that bitch before she had another chance to damage the ship. He knew she had no trans-warp; problem was they didn't have that much themselves. Cuffing a tech who'd fell asleep the man flew across the room into the wall with a smack. \"I didn't tell you that you could sleep you ass! Get back to work you can sleep when she is dead!\"\n\n________________________________\n\nGreeson had practiced the first two advanced moves 'til he could do them with his eyes closed. Then the now Colonel had come back in pinning those bars on him. Placing a blind fold on Greeson, Dempsy then started to train the man harder. \"This will allow you to actually use your senses. Remember the eyes can lie to you as they almost always do. Do not let the lies of your eyes get you killed.\" Dempsy said as he started to get faster and faster.\n\nGreeson knew something was different the Colonel was pushing him harder than he'd done before. He was actually grateful for this training. As he remembered, his teacher before had mentioned almost the same thing that the Colonel had. Reaching out he could almost 'see' the blows that were coming at him.\n\nHartwell, Derrick and Lucie were looking at the planet when there was signal from below. \"Thank you for honoring us with you presence Emperor O'Toma!\" Came the voice of a young sounding male.\n\n\"I take it I am speaking to Earl Tauntoff?\" Derrick replied a moment later.\n\n\"Yes Sire, we have been awaiting your arrival. I apologize for not having much to offer you when you come down. We aren't as rich or fortunate as those you visited before. We will make you as comfortable as possible sire.\" Came the voice.\n\nLooking over the report he had in front of him Derrick nodded. \"What you offer will be more than enough. The simple fact that you care for your people as well as you do says more to me about you than anything. I am actually looking forward to seeing your territory.\"\n\n\"Why thank you Sire! We will be expecting you whenever you are ready, Sire,\" The young voice replied.\n\nDerrick turned toward Hartwell who was nodding, \"This one appears to be the real deal sir.\"\n\nDerrick was also nodding then he looked at Lucie. She still had a distraught look on her face. \"Are you still worried about that voice Lucie?\"\n\nLooking up a moment she turned toward Derrick. \"Yes sir, the voice is so alone! It has been getting weaker and weaker every hour. Is there no way we can go and get it?\" Lucie said almost begging.\n\nDerrick could only shake his head. They needed all the ships that were here right now. With Zan and Sherry watching the rest of Lucy's growth, along with Tara's repair growth and Tempro also hanging in orbit. Derrick just wasn't that sure that he could spare either of the wing mates to search for the box. He sat to discuss it with Shelby.\n\nShelby after only a few minutes suggested that he ask the ships in question. Nodding he contacted both Zan and Sherry. Both appeared a moment later bowing to both of them. \"Yes sire you called for us?\"\n\nStill a little unsure he asked, \"I have a possible location to one of your sister ships. I can't really afford to send one of the ships with me. Nor can the two you are watching go. I was wondering if either of you could step in, retrieve them?\"\n\n\"Sire, it would please us to no end to serve you in this capacity. May I suggest Sherry? She is far better suited for the mission than I am.\" Zan spoke up.\n\nSighing Sherry added, \"I am afraid that he is correct Sire. He has a better targeting system than I have. When may I go Sire?\" Sherry's suddenly excited voice stated.\n\n\"As soon as possible, though you are going to have to stop by here where we are and pick up a passenger.\" Derrick told Sherry.\n\n\"Yes Sire, I can be there in a few moments if you wish. To help another of my brothers and sister fills me with pride.\" Sherry told Derrick.\n\n\"Good I'll see you soon then.\" Derrick said as he broke communication.\n\nA few moments later a disturbance in space appeared near the others then a rift opened as Sherry came through. Pulling within a few thousand meters Sherry called. \"I am ready for your passenger sire, whenever you are.\"\n\n\"Very good,\" Derrick answered. \"Shelby IMT Lucie to Sherry please.\"\n\n\"Yes Derrick,\" A smiling Shelby told him. Then with a flash Lucie was gone.\n\nLucie appeared on a command bridge not unlike the one she'd just been on. The only difference with this one was the fact that there was no one here. A slender brown haired teen female appeared a moment later. \"Hello, I am EIG - 1000 I was the last of the EIGs built. My name is Sherry, may I know yours?\"\n\n\"Uh...\" Lucie started as she was looking around in wonder.\n\n\"Yes?\" The slender teen asked smiling sweetly as she awaited Lucie's answer.\n\n\"Oh! I'm sorry I am Lucie Hartwell.\" Lucie said suddenly.\n\n\"Hartwell? Are you related to the emperor's second? Admiral Hartwell?\" Sherry asked in a cheery manner.\n\nLucie could only stare at Sherry a moment. It was going to take some getting used to the computer or A.I. or whatever she was. \"Uh ... yeah. He's my brother. One I thought was long dead.\"\n\n\"That is so sad, I know that pain as so many of my brothers and sisters are still missing. The news of our father Gregor ceasing to function has weighed heavy on all of us. It's still so hard to believe that he is gone. \" Sherry told Lucie who was staring in amazement as tears started to fall from the holograms eyes.\n\n\"I'm so sorry Sherry, I forget that you are a living A.I. I didn't mean to upset you! The last thing I want you to do is hate me!\" This time it was Lucie's turn as she also started to cry. Lucie had spent so long alone and afraid now she felt she had alienated the A.I. from her.\n\nSherry's visage stopped suddenly as she stared at Lucie crying also. \"I could never hate you! You are one of the dearest humans to all of us right now. I too am sorry that I upset you! It wasn't my intention to make you feel unwelcome. Can we start again?\" Sherry asked her cheery smile once again in place. \"Hello I am Sherry. I am the A.I. of this ship. May I have your name that I may record it in my memory?\"\n\nLucie's mouth dropped open, they really were like this!\n\n__________________________________\n\nKimison was still a little leery after Rayburn's declaration recently. The man was tired of fighting? When the hell had this happened? Hell the best part of the day was fighting with the man. Sighing, he once again tried to get past all the safe guards that were put in place to keep programs and hackers out. Then he had to get past the processors that seemed to be equipped with dangerous shock nodes.\n\nThen he thought once I am past both of those, there was an anti-program to reject any personalities that weren't entered correctly. Mary had helped greatly guiding him past the first two safe guards; though he had been slightly shocked at the last of the processors.\n\nLooking around he could really use Rayburn's help, the man had not been seen in quite a few hours. Scratching his chin Kimison was beginning to think that the man had left the ship somehow. \"Tempro?\" Kimison asked.\n\nTempro appeared a moment later, \"Yes prime?\"\n\n\"I thought I told you to stop calling me that! Where is Rayburn? I haven't seen him in all day. Is he still on the ship or has he gone planet side?\" Kimison asked.\n\n\"I have no idea.\" Tempro replied.\n\n\"Uh huh. I swear you are lying to me. Perhaps I should take a look at your logic circuits as they appear to be faulty! Open ALL your circuits NOW!\" Kimison growled out.\n\n\"Sir I can do a diagnostic, it shouldn't take more than...\" Tempro started.\n\n\"NO! Open them now! You are lying to me I can tell! Now either tell me what in the hell is going on or I start going through your logic circuits one at a time!\" Kimison was practically screaming at the hologram.\n\nWith a huge sigh Tempro knew he could no longer stall Kimison. \"Sergeant Rayburn requested...\" Tempro started when Mary appeared.\n\n\"It is fine my son I will explain.\" Mary said.\n\n\"Thank you mother,\" Tempro said then disappeared.\n\n\"You and Sergeant Rayburn are going to cause my son to no longer function.\" Mary stated a frown on her usually happy face.\n\n\"Uh huh. I just want Rayburn back here helping. I cannot do these experiments alone. I need his extra set of hands.\" Kimison told Mary.\n\nSighing Mary nodded, \"I am sorry to inform you that Sergeant Rayburn requested to be moved to planet side. I am afraid that he will remain there 'til such time as another position is open for him.\"\n\n\"WHAT!? Why in the hell did he do that?\" Kimison asked a look of worry on his face.\n\nSighing again Mary went on, \"Apparently he was afraid that to remain would put a strain on him and you that he didn't want to be the cause of. As I remember he said that you were the only true friend he ever had. He was tired and wasn't going to do it anymore.\"\n\n\"Oh my god! That son of a bitch was serious!\" Sitting with a thud Kimison could only shake his head. Without Rayburn life would revert back to what it had been in that hellish, horrible place. Alone, deserted and unwanted!\n\nMary watched as Kimison's whole body began to shake then he broke down and wept. She hated what these two brilliant humans were putting each other through. She still wished she could shock some sense into them both. That wouldn't have the desired effect. She'd spoken to the emperor telling him all that had gone on. Though concerned, Derrick told her to let them break apart. They were far too good of friends to stand being alone for long.\n\nLooking at Kimison as his body was wracked with sobs she really felt for the human. She'd felt much the same upon losing her children. She just wished there was something she could do!\n\nOn the Imperial planet Rayburn was fairing no better as the work he was performing seemed so meaningless. It had been a harrowing few days with Kimison. Finally realizing that Kimison wasn't going to change or accept that Rayburn was tired of the fighting. \n\nFinally he'd spoken to Mary asking her to talk to Derrick about him transferring to the palace.\n\nA few days later Mary gave him an answer. Packing up as quickly as he could, he moved his few measly possessions to a secluded area. Then he was in the palace, alone. With a sigh he went to the assigned room unpacked and went to work. Even as far away as they were Rayburn could still feel when Kimison received the news. He could also feel the soul deep grief that the man was feeling.\n\nRayburn suddenly fell to the floor rolling into a ball as he felt Kimison release more and more grief. The pain was beyond anything he'd ever felt in combat, almost as if a member of the crew had died in front of them. Shaking his head he tried to stand, tried to block it out nothing seemed to work as a sudden feeling of aloneness and desperation hit him.\n\nMary was watching both of them afraid that they might take a turn for the worse. As brilliant as they were it would be a crime she felt, if they stopped functioning because of this. She had to push somehow, but how? Nothing in her records had prepared her for this. A lot of what she'd learned of human nature and behavior had actually been in the last few months. Though she was by far no expert she felt that this wasn't going to get better only worse if she didn't do a thing.\n\nAfter a few hours both men were asleep, Mary thought she had a plan not sure if it would help. Appearing in both of the rooms the men were in she started a low recording that told both of the men that they were friends. She also said that they needed each other for support or they might not survive. It wasn't much but she hoped that the subliminal messages she was trying to get through to them helped.\n\nThe next day they both awoke feeling no better unable to work or think of anything but their friend. Sighing Mary thought she'd just have to keep it up 'til they finally changed their minds.\n\n______________________________________\n\nTrianas was on her way to the palace; well she guessed it was a palace. It wasn't that big, not really offering her much room to hide and plot an ambush. Smiling she thought that her ass of an ex-husband would be there also. Maybe she'd get the chance to decrease the amount of her ex's men. That would leave him all alone for her, aw! Now that was a delicious idea!\n\nFinally ensconced in a perfect place a few hours later all she had to do was wait. An hour later she felt a presence as a sect member was approaching her position. Waiting 'til the last second she struck breaking the man's neck in record time. Ha she thought. What a waste of her killing skills. These useless sect members were no challenge at all.\n\nAlexander contacted all his men as they had moved into position, well all but one. That one was dead, so no need to check. Now that he knew where she was they had plenty of time. After all, that bastard Emperor was in orbit so they'd have their chance soon. Wringing his hands Alexander thought today my family will be avenged! The death of his son and the death of the boy's bitch mother.\n\nDerrick had the entire palace scanned seeing at least a dozen places that would be perfect for an ambush. He also knew that there was probably an assassin in every one of them. Looking at Greeson, Dempsy, Shelby his empress, Mary two, plus the rest of the Rangers, that had been practicing for over a month. Derrick just hoped they were ready this was probably going to be the most dangerous time they had ever faced.\n\nNodding to holo-Shelby all of them winked out appearing a good distance from the main entrance. Stopping all of them Derrick told them, \"All of you have been trained further than any other Ranger. I want half with Colonel Dempsy, the other half with Warrant officer Greeson. Remember your training you should be fine.\"\n\nAll of them nodded their assent as they all started to move forward. The nearer they got to the palace the more tense Derrick and the others got. Suddenly to their left several men emerged as if from nowhere and attacked. Then just as suddenly on the right even more men attacked. Alexander had to admit as he watched the trained men with the bastard were well trained. Finally moving forward the leader approached a man who seemed to have far more skill than the others. Moving in Alexander attacked only to find that the man was using several types of attack techniques! Was this man a traitor from the sect? Changing up Alexander tried again to get past the man's defenses to no avail.\n\nTrianas was watching with great interest, so her old teacher had taught this young cub the techniques. This day was getting better and better! Moving in as quickly as she could she clipped her ex knocking him out of the way. Smirking, when the man roared in outrage and attacked her; she knocked him back again she was glad he had improved, some. It was still going to be far too easy to kill this one.\n\nGreeson felt her before she even appeared before him. Then there was the man who attacked him also. The man wasn't bad but compared to the Colonel? The man was moving in slow motion. Then he watched as the man got mad and attacked the woman! What in the hell was going on? Finally he watched as the woman caught the man between the shoulder blades knocking the wind out of him.\n\nMoving back toward him Greeson signaled everyone to move back. Trianas was really impressed at the speed of this young pup. It appeared that he was now in the bigger leagues not only with his speed but his moves also. Sliding in she went as fast as she could, surprised when the man twirled away from her attack. Ah! This was going to make things interesting after all!\n\nAs the battle raged around them the Rangers were starting to get the upper hand as the attackers were starting to fall faster. It was only thirty minutes later that there were only a few left. Dempsy had just dispatched his last when he saw the fight between Trianas and Greeson. Moving closer he sat nearby in meditation as the two continued. A moment later a tall man dressed like the attackers got off the ground approaching the two combatants.\n\nDempsy was off the ground in a moment blocking the man's way and everything the man threw at him. \"Get out of my way you piece of Ranger shit!\" Alexander snarled at the man in front of him, then stopped a moment why did this man look familiar?\n\n\"I see that you don't remember me, a pity really. As much a traitor as that son of yours was!\" Dempsy said as the man's eyes grew wide in recognition.\n\n\"So you are that dishonored master of the arts. You aren't even worth the time to fight! Step aside I have to end my bitch wife's life!\" Alexander snarled at Dempsy. Dempsy struck far faster than the man had ever seen. Cuffing the man upside his head, effectively knocking him unconscious. Now he thought to see if Greeson knew enough to survive.\n\nTrianas and Greeson stopped a moment after Alexander went down. Trianas bowed to Dempsy, \"It appears I owe you a favor. I'll finish this quick so I can destroy you. That is if you can fight after you watch this one die!\"\n\nWhirling she went high and low, Greeson recognized the triple, triple though as the Colonel had warned him he was expecting more. Blocking all of the first six then the second six, Greeson actually got past her defenses a moment hitting her in the stomach. She was folded over coughing up blood when Greeson went for the killing blow momentarily open for a second.\n\nSpringing as if from a spring, too late, Greeson reacted as he was pulling back. Landing a killing blow with only half the power on her left neck side only served to piss Trianas off more. Catching Greeson near his shoulder he heard the sickening crack as he knew his collar bone snapped. Smiling Trianas tried to move forward then found that her left arm was numb! The little bastard has sacrificed his collar bone to hit a bundle of nerves in her neck!\n\nReaching to her neck she tried to press a button on her necklace, only to find it was snatched away. \"You bastard!\" She screamed at Dempsy holding her necklace. You never taught that move to me!\"\n\nCharging Dempsy she positioned her right arm to strike his neck. Turning it aside he cuffed her. Swinging back she actually caught Dempsy in his arm. Grimacing when he felt the bone crack Dempsy bowed to Trianas. \"It is time, I say good bye to my student!\" \n\nScreaming at him Trianas again came in for a killing blow. This time Dempsy seemed to disappear then reappear behind her as he struck the back of her neck.\n\nGreeson grimaced at the sickening crack of her neck snapping. Turning blood starting to flow from her mouth she tried one more time to strike Dempsy in the throat. Side stepping Dempsy watched as her eyes went wide then she fell.\n\n\"NO! She was mine to kill you son of a bitch!\" The same man Dempsy had knocked out shouted as he too tried to attack Dempsy. Shaking his head Dempsy waited 'til the last second then hit the man in both arm joints. Dempsy nodded when he heard both snap and the man dropped to the ground in deep consternation. So the man was trained some though, as Dempsy could see, not that well.",
        "Walking around surveying everything Derrick could see that many were injured. Of the thirty that they had started with five had been killed. Another ten had severe injuries, another ten had broken bones. The last five were scratched scraped though no where as bad as the others. Dempsy and Greeson were walking around pressing pressure points to help aleviate as much pain as they could. Most were already being transported to the ships for medical treatment.\n\nA few moment later the Earl and a small contingent of soldiers approached. \"I am sorry Sire.\" The young Earl said tears falling from his eyes at the dead that were there. \"I am sorry I wasn't able to offer help. I am ashamed to say my first thought was for my people, not you. I accept whatever punishment you wish to put upon this worthless one.\"\n\nDerrick was nodding as the 'Derrick the Earl was bowing to shimmered as Mary two was standing there. A young Ranger walked up to the astounded Earl. \"You did as I would expect a true leader would do.\" Pressing a button on his badge the young Ranger shimmered leaving Derrick standing before him.\n\nHis mouth hanging open the Earl nodded as Derrick smiled and lifted the man off the ground. \"You honor me with your words Sire. I only do what I think is right, really Sire nothing special at all.\"\n\n\"You do far more than that my dear friend Earl far more. The people here have hope, a powerful thing. You may not have the riches that the others do but this is a rich territory indeed!\" Derrick told the now blushing man.\n\n\"Again thank you sire. Will you stay or do you have a lot of work to complete after this terrible attack?\" The Earl asked.\n\nTurning to look at Shelby who only nodded, Derrick turned back, \"I think that the Empress and I have a little time. Though I am afraid it will have to be a little later. We have to take care of the injured and dead.\"\n\nThe Earl's eyes went wide then he nodded his agreement, \"When you are ready Sire, as I said we will be also.\"\n\nDerrick shook his head as he watched the last of the injured as they flashed out. Walking to Dempsy and Greeson he grimaced seeing the odd angles that the both of them were holding their arms. \"Why aren't you both in the med bay!?\"\n\nGreeson stepped forward, \"We had to make sure that all of our men were taken care of first.\" Shaking his head Greeson whispered, \"I should have moved them back sooner, they would still be alive damn it!\"\n\n\"I know your pain Greeson, think of this though. Had you not moved them back when you did, just how many would be dead now? I think it's safe to say all of them. That bastard knows nothing of mercy. Besides I know for a fact that everyone of them was proud to serve under you. Now, get both of your asses to med bay!\"\n\nBoth men tried to salute then thought better, and then they too were flashed out. \"Are the injured going to make it?\" Shelby asked.\n\n\"I hope so, I need all of them still. We still have that traitor who ordered my death that started all of this. I want that asshole so bad I can taste it.\" Derrick growled out.\n\nShelby could only agree as she had lost no love for the traitor either."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-41"
}