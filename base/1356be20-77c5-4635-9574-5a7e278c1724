{
    "title": "For Whom the Bell Tolls",
    "pages": [
        "Several streams feed into this. Let me explain. \n\nFirst, a reader asked me to give Marigold Wilson her own story. She has appeared in three of my other stories. But I have never written one especially for her. She is the reason why I ultimately chose to put this in LW - instead of the Romance category where it probably belongs. \n\nAlso - For some insane reason \u2013 lack of originality no doubt - I have been updating the Hemingway canon. The only remaining novel is, \"For Whom the Bell Tolls.\" But that piece presents a number of problems to a modern writer. \n\nFirst and foremost, For Whom the Bell Tolls is set in the Spanish Civil war. And that tactical environment is hard to duplicate. \n\nThen \u2013 there is the problem of convincing the reader that the hero could meet and fall in love with Ingrid Bergman in four days while living in a cave? Seriously!!?? Even back then that required considerable suspension of disbelief... \n\nFinally, on a totally unrelated note. I have read a couple of well-written stories that purport to be about the intelligence business. I actually work in that field. And like the lawyers who cringe at narratives written by non-lawyers, I wanted to write something that was closer to the world that I know - where bureaucrats and nerds outnumber the actual agents about 10 to 1.\n\nPeople who didn't sleep through American Lit will recognize that Hemingway's tale ends at the epilog. If you like your stories dark and disaffected, then please stop reading there. Me? - I'm a hopeless romantic and indisputably NOT Hemingway. So I gave Jordan and Marigold their happy ending. I'm interested which one you preferred.\n\nOh!! And by the way!! The Tybee Island bomb is real - and it is still out there \u2013 so sleep well. DT\n\nOverture\n\nThe Colonel was tired. He didn't mind training flights. But this one was a simulated combat mission. And those were a lot more stressful. \n\nHe and his other two crewmates had flown their B-47E 600 miles from Homestead Air Force Base on a course to mimic a low altitude run into the Soviet Union over the Barents Sea. The mission had been successful as 02:00 approached. \n\nThe Colonel's Stratojet was carrying a single transportation configured Mk15 Mod 0 hydrogen bomb capable of 3.8 Megatons. It was dangerous to fly an armed weapon over the continental United States. But the men of the Strategic Air Command had to train with transportation configured bombs to get the \"feel\" for the real doomsday situation. \n\nThe bomb was twelve feet long and weighed 7,600 pounds. That was close to the Stratojet's maximum lift capacity of 10,000 pounds. The bomb itself contained 400 pounds of conventional high explosives and it had a highly enriched uranium core with a plutonium trigger. \n\nUpon detonation, the heat it would generate would turn five square miles of landscape into spun glass. And the shock wave would flatten anything within a twenty mile radius. \n\nThe Colonel was one of the Air Force's best, an Instructor Pilot. He had flown so many combat missions over Korea in A-26 Invaders that he couldn't count them. But the Stratojet was a totally different bird entirely. \n\nHis B-47 was powered by six General Electric J-47 turbojets. That brought its top speed to almost supersonic. The only problem was that the thin wings, which gave the Stratojet its high-speed aerodynamic advantages, also made it a bitch to land. \n\nBut at this point landing was the least of the Colonel's worries. His main concern was staying awake. \n\nFor the millionth time he looked outside the bubble canopy and February's night sky was lit up with stars. It was unearthly beautiful even though the instrument reading indicated that it was minus 70 degrees outside. \n\nHis copilot/flight engineer was behind him in the sleek bomber's narrow cockpit. He was going through the standard checklist for arming the device. He was just not actually flipping the switches to do it. \n\nThe Colonel was thinking about the Valentine's Day surprise that he had planned for his wife. \n\nThe 14th was only a little over a week away. And the Colonel planned to hop on the overnight boat to Havana. Where he was going to spend a romantic weekend drinking, and dancing with the woman he had loved since the third grade. \n\nHe was just glancing over his right shoulder, when a black apparition slammed into the Stratojet's starboard wing. The impact threw the bomber into a steep right bank and all hell broke loose in the cockpit. \n\nThe navigator/bombardier, who was enclosed in the nose of the aircraft, screeched over the intercom, \"WHAT THE FUCK WAS THAT!!??\" \n\nThe Colonel, who at that point was dealing with a severely damaged aircraft could only shout, \"I HAVE NO FUCKING IDEA.\" \n\nThe co-pilot/flight engineer behind him said in strained tones, \"It was an F-86. It slammed into the wing, bounced off and exploded. I think that whoever was driving it ejected!!\" \n\nThe Colonel wrestled with the aircraft for an excruciating few minutes before he got it back to level flight. Then he and the co-pilot/flight engineer began to assess the damage. \n\nThe Stratojet was a tough bird and it was continuing to fly. But all of the avionics in the starboard wing were off-line and the number four and five inboard engines were about to fall off their pylon. \n\nThe Colonel squawked a Mayday to Hunter AFB. The fact that the Colonel's aircraft was carrying a potential \"broken arrow\" got the phone lines open all the way up to Omaha and General Lemay himself. \n\nThe Colonel told the boss that there was no way he could land the aircraft without jettisoning the bomb. \n\nNormal landings require the B-47 to come in \"hot\". So at the best of times there was no room for error. With two of its engines shut down and God-knows-what damage to the flaps, they were likely to either overshoot, or hit the front of the runway. \n\nIf that happened, the bomb would fly out of the front of the aircraft like a spit ball out of a straw. And Savannah might experience its own version of nuclear holocaust. \n\nSo the people in charge were faced with two very unpalatable options. \n\nIf they ordered the Colonel to land without dropping the bomb and the plane crashed it would kill the crew and in the process might create an atomic disaster. \n\nIf they ordered the four ton weight of the bomb to be jettisoned they would have a classic Broken Arrow scenario. \n\nThere was considerable discussion up the chain of command but even the remote possibility of a hydrogen bomb going off in downtown Savannah made the ultimate decision. The Colonel was given orders to drop the device offshore. \n\nThe Stratojet circled out over Tybee Island and the bomb was jettisoned at 7,000 feet into Wassaw Sound. \n\nThere was no explosion so it was assumed that the bomb had just splashed into the shallow water of the sound. The Colonel then landed the Stratojet at Hunter and he and his wife celebrated a romantic Valentine's Day 1958, in Havana. \n\n~\n\nThe phone blasted Jordan awake. It was 3 AM. He felt around on the night table and mumbled, \"What\". \n\nA parade of brontosauruses was marching through his head and his mouth tasted like they'd left their droppings. \n\nIt had been another drunken night in DC. \n\nJordan had never been a drinker - until recently. But the crushing sense of alienation and world-weariness that had come over him since leaving the Army was killing him. \n\nHe had no direction in life. It all just seemed so utterly pointless. \n\nHe had been a hero once. Early in the Afghan War, Joint Special Operations Command had recruited soldiers with Jordan's particular set of skills. \n\nHe had been a talented 29-Echo \u2013 definitely not a Ranger type. But he was the best Bluesniper in the Army. So the people at Fort Sill gave him his E9 stripes. And then shipped him to Fort Belvoir. \n\nThere, he got acquainted with the nerd branch of the Joint Special Operations Command. \n\nJordan was probably the lamest Gray Fox in the history of JSOC. But the Taliban's leadership was addicted to Bluetooth headsets. And Jordan could Bluesnarf those gadgets from two miles away - not the 300 feet that everybody assumed. \n\nThus, his rare talent brought a few hundred tons of JDAMS down on the Evil Doers before they wised up. \n\nJordan was no physical specimen \u2013 extremely tall and skinny with the shock of unkempt brown hair, lean face, high cheekbones and profound eyes of the classic intellectual. \n\nHe had barely made it through the physical part of the training. In fact, he had scraped by on sheer guts and determination. He was a nerd. But he was a very tough and gritty one. And he very badly wanted to be a Grey Fox.\n\nSo he was with DEVGRU in the Shahi-Kot. And he did the whole show with 45-Commando in Jacana. Then he chased Saddam all over the Saladin Governate until they caught him. \n\nAfter that he decided that he had no long-term future as a fully weaponized geek. So he separated out. \n\nThe Army gave him a few medals as remembrance of his glory days. And he signed on with a private intelligence firm. \n\nIt was ironic really. He did the same thing that the basement monkeys at the alphabet agencies did. But, because he was in the private sector he got paid three times more. \n\nThe problem was that he was a total loner. And he had nobody to share it with - especially a woman.\n\nIn fact, Jordan was not a bad looking guy. His scholarly features combined with those bottomless brown eyes made him look thoughtful and even a little dangerous. He was much taller than average. And the exceptional width of his shoulders on his slender frame sometimes made him look like he had forgotten to take the hanger out, before putting on his coat. \n\nHis time in the Army had built some power in his upper chest and he had a long muscular neck and arms. But the overall impression was sinewy, not brawny, much like the Grey Fox that was his professional namesake. \n\nPlus he was a genuine decorated war hero, even if his arena of engagement was 2.4 Gigahertz ISM exchanges. \n\nBut in the matter of human relations he was and always had been a complete nowhere man. He was utterly closed up and conflicted - too shy and awkward to have any success with the beautiful women. And he had no interest in the ugly ones.\n\nHe just couldn't get outside his own head long enough to make lasting friendships. He must have been the only soldier to serve two full combat tours in the Sandbox and never have a battle-buddie. He was a legend in JSOC for his isolation from the teams he served on. And his only regular sexual experience had been with Rosie and her five sisters. \n\nHis only friend was canine. Buster was a big muscular brown-dog. But he was loyal, loving and a fabulous listener. Jordan got him from the pound. He was so scary looking that nobody else wanted him.\n\nBuster's origins were unknown. But Jordan guessed that he had been bred as a fighting dog. Certain elements in DC still do that. \n\nBut he was like Ferdinand the Bull. He wouldn't fight. Instead he chose being beaten to death over hurting another creature. Jordan decided that he and Buster had a lot in common.\n\nJordan worked at a business in Roslyn. Why Roslyn? Because a little \"Company\" is located right next door in Langley, the NCTC is just up 66. And the Pentagon is two stops down on the blue line. That was the customer base.\n\nWhich brings us back to the 3:00 AM phone call and explains why Robert Jordan had made it a regular habit of over-medicating. \n\nThe call was from the boss. He wanted Jordan at the Ballston I-Hop \u2013 NOW!! \n\nI hear you ask - why the I-Hop? \n\nDoes anybody really think that important stuff goes on at an I-Hop? Plus, it's located next to a Metro stop and it's open 24 hours a day. \n\nSo in actuality - that particular place hosts more clandestine shit than the Hoover building.\n\nBut seriously???!! \u2013 Three AM???!!\n\nBernie Golz was a generation older than Jordan. He had played the spy-versus-spy game in the 70s and 80s in the alleys of East Berlin. And Jordan had tons of respect for him. \n\nThe fact that Golz was sort of a father figure was a bonus. \n\nJordan's actual father never came close to \"getting\" him. But of course his dad rarely ventured off his little dairy farm outside of Madison, Wisconsin \u2013 so why the fuck should he understand any single thing about his son's life? \n\nGolz was disgustingly alert and energetic as Jordan slid into the booth across from him. The old man never seemed to sleep.\n\nJordan must have looked like he felt - because Golz said kindly, \"You are really going to have to stop doing this to yourself Bobby Lee.\" \n\nGolz ordered coffee and eggs with bacon for both of them. It was obvious that he was trying to sober Jordan up. They ate in silence for a while.\n\nThen Golz said casually, \"Did you know that the Air Force lost an intact hydrogen bomb offshore near Savannah Georgia back in 1958.\" \n\nJordan thought, \"Okay \u2013 that's a bizarre opening gambit.\" \n\nBut he said, \"Was it hard to recover? It must have been a real engineering feat to pull a big bomb out of the muck.\"\n\nGolz arched his eyebrow. It was like he was disappointed that Jordan wasn't getting it. \n\nTHEN Jordan GOT it. He said with horror, \"They never found it!?\" \n\nGolz said, \"No they didn't. Oh, they launched a nine week search right after the incident. But the bomb likely sank into the silt at the bottom of the Sound and the technology of the time just wasn't good enough to find it.\" \n\nJordan said without much conviction, \"it's a good thing that it's buried somewhere.\"\n\nGolz said ominously, \"Until now.\" \n\nJordan looked appalled, \"What!!? Are you telling me that the bomb has been recovered?\"\n\nGolz said, \"That is EXACTLY what I am telling you. And that is the reason why I am meeting you at 03:00.\"\n\nJordan said, \"Do you have any idea who has it?\" \n\nGolz said, \"All we have is deepweb background chatter that indicates that an individual, or individuals have obtained a Cold War hydrogen bomb and are planning to use it.\"\n\nJordan asked the obvious question, \"Why are we involved? This sounds like something that the FBI, or CIA ought to be handling?\"\n\nGolz said, \"The U.S. has fully mobilized all of its intelligence assets but our little firm was contacted by an independent party for a couple of good reasons.\" \n\nGolz raised on finger, \"First, if somebody has a fully functional nuclear device the world has to scramble every agent available to prevent it from being used.\" \n\nThen he raised another, \"Second, our people are the best of the best. And our customer wants to keep his involvement off the record.\"\n\nThat last bit of information told Jordan that the customer was POTUS. \n\nNo wonder, this was a political nightmare of epic proportions. POTUS knew who the press would blame If the bomb went off. Even if it was Eisenhower who lost the damn thing in the first place. \n\nThe alphabet agencies were too mired in their own political shit to be totally trustworthy so the President was calling in his own operators. \n\nAt least he could work them without fear of major backstabbing.\n\nGolz said, \"The only information we have is from the deepweb. You are our best asset when it comes to tracking things down in that labyrinth. Here are some rabbit holes you can dive down. We hope you can pick up the trail.\" \n\nGolz handed a nondescript file to Jordan. There was nothing in it but some deepweb references that he might be able to wave a dead chicken at. \n\nJordan said, still skeptically, \"Is everybody sure that there is even a problem, because if this is the source of the information it is pretty tenuous? Nobody but an experienced darkweb trawler would even know how to access these places, let alone do anything through them.\"\n\nGolz said with conviction in his voice, \"Oh, we know that somebody has the bomb.\" \n\nHe steepled his fingers and said, \"A body was found in a hotel room in Savannah. The authorities were investigating it as a simple prostitute-client homicide until a bunch of the victim's redneck friends came forward.\" \n\nGolz looked intently at Jordan and added, \"They ALL said that the deceased had bragged about discovering a huge bomb underwater in Wassaw Sound.\"\n\nJordan looked shocked.\n\nBernie added, \"Given that piece of information, the Savannah police called the FBI. And one of their analysts connected the dots. We know that the guy found the 1958 H-bomb.\"\n\nNow Jordan looked horrified.\n\nGolz said, \"We might still be none the wiser except the same day the police found four dead men in an old house near Port Charlotte. Those four men were all crewmembers of a dredge that was known to be working an area offshore from there.\" \n\nGolz continued with, \"Since they knew where the dredge had been anchored, it didn't take the Navy long to confirm that something big had indeed been dug up.\" \n\nHe added, \"The FBI questioned the local fishermen and one of them said that he had seen something big being loaded on a moving van just before sunrise that day. So YES we know that someone has dug up and transported the Tybee Island Bomb.\"\n\nGolz said wearily, \"Hopefully you can find a starting place in the stuff that I gave you.\" \n\nThen the two men rose and shook hands. And Jordan trudged up Fairfax to his war room. It was Jordan's special place. It was full of the most advanced technology on the market. And it was stocked with all the things that a nerd needs to get his work done - a refrigerator full of Mountain Dew, endless bags of Skittles \u2013 plus a ratty old couch.\n\nIt was 0430 and Jordan was soaring over the world that he felt most comfortable in \u2013 the virtuality of cyberspace. \n\nThe first thing he did was configure and launch a very large network telescope. The telescope let Jordan monitor millions of sites at once. \n\nThe only hints he had were a couple of darkweb addresses. So he set the telescope to record any activity at \u2013 or around - each of those sites. \n\nIt was like setting up physical surveillance on an abandoned block of houses. Since any traffic to them was by definition suspicious, a lot of things could be learned by just sitting and watching. \n\nBut like physical surveillance, it was always \"hurry up and wait.\" No matter how urgent the business something had to happen. So patience was the essence in deepweb monitoring.\n\nAnd Jordan was an everlastingly patient man. He sent out for a pizza and dozed on his couch.\n\nJordan finally got a hit 22 hours after he started. There was a message posted on an abandoned MilNet site. It was one word, \"Success.\"\n\nThe sheer dereliction of the site was what made the message stand out. Somebody had just used an address that was last visited when Ronald Reagan was President. More importantly, the posting was from a conventional TCP/IP connection. \n\nJordan was guessing that it had originated from a mobile phone. Perhaps it was sent when the bomb reached its destination. The person who posted it must have been in a hurry. Or, maybe he thought that the location was so obscure that nobody would notice.  \n\nEither way they had made a BIG mistake. Jordan now had the packet information. \n\nTraceroute told him that the endpoint was an IPv4 address belonging to a company named \"Eleven Rivers\". \n\nJordan did a fast deepweb lookup of that organization and discovered that it was one of a series of shell corporations owned by an outfit headquartered in San Antonio. \n\nJordan now had a solid name and place to start. \n\nHe picked up the encrypted landline. He didn't care that it was 02:30. This was exciting. \n\nHe dialed the special number that Golz had given him. Golz answered on the second ring. His voice reflected the steel trap that was his mind. He said, \"Bobby Lee?\" \n\nJordan said, \"Sorry to wake you Bernie but I have to talk to you.\"\n\nGolz said with a laugh in his voice, \"Nonsense, Old spies don't sleep\".\n\nJordan said, \"There was action on one of the deepweb sites and I have a target. The owner of the device that made the contact is a shell corporation in San Antonio. I am going to dig some more and I'll let you know what I find out.\"",
        "What Jordan found, was a little disconcerting. It took him almost three hours to beat down the multiple firewalls protecting that site. Jordan could breach any defense in depth. But he had never encountered one this robust before.\n\nTo his horror, he found that he had just hacked what could best be described as the U.S. data center for the Sinaloa cartel. \n\nThat might have gotten somebody less capable killed. But Jordan had hopped his spoofs through enough encrypted sites that the people he had cracked would never be able to trace back to him. \n\nJordan was pretty sure that the NIDS at the cracked site would be blaring alerts. And even though it was 05:30 he estimated that he had about 10 clear minutes. So he had to move fast. \n\nHe started a compressed search of their filesystem on every keyword he could think of involving bombs. \n\nIt didn't take him long to find the right file. A man known simply as \"Captain\" Morro was running an operation code named \"Decapitar\" from the very top of the Cartel. And the bomb was mixed up in that.\n\nJordan did an instant copy and then dumped out of the site. On the way out he dropped bread crumbs that led to the Chinese. That ought to give their security people something to chase for the next millennium. \n\nIt took another day to do the analytics. But what Jordan discovered was beyond belief. \n\nMexico City is perhaps the single most crucial city in the world. It is Mexico's largest as well as that country's political, cultural, educational and financial center. It is also the world's sixth largest. And as a single city, it boasts the fifth-largest economy in Latin America. So it has a disproportionate influence on the Mexican economic system.\n\nWorse, Mexico City is located in a wide geographic bowl surrounded by mountains. So, besides wrecking the financial markets and cutting the head off the Mexican government the effect of a nuclear blast inside that bowl would instantly incinerate twenty-two million people.\n\nOf course the Cartels would benefit from the resulting chaos \u2013 maybe even take over the entire Country. At least that was the plan. \n\nJordan whipped out his cell. And he dialed Golz with shaking fingers. He said, \"We need a meeting Bernie. I've discovered something you won't believe.\"\n\nExactly two hours later he was sitting at the long conference table with Golz and three other people. Each face reflected a mixture of interest and concern. \n\nThere was Kharkov, an older Russian who had been one of Golz's main adversaries throughout the Great Game. His presence at the table was an homage to the triumph of capitalism over socialist idealism. He was now Bernie's partner.\n\nThe other two were the Company's primary field operatives - at least for all things Latino. \n\nPablo El Hefe, was some sort of former L.A. gang leader. \n\nIt wasn't clear how he came to be employed by the Organization. But if it involved Latinos he had deep connections. And he could get the job done. Plus, he had a reputation for being a stone cold killer. \n\nHe was big, fat and morose, with a moon face, shaved head, little piggy eyes and a four-day stubble on his cruel and stupid face. \n\nIf he had been an animal, he would have been a wild boar.\n\nJordan was six inches taller than Pablo. But the gangster was at least 50 pounds heavier. And Jordan had no illusions about what Pablo would do to him if the situation ever got around to ass kicking.\n\nPablo had some kind of booty relationship with the occupant of the other chair. \n\nPilar was more guapo than guapa. She was medium height. Her body was thick and her tits were huge. She had the tattoos, swarthy skin, abundant raven hair, slab face and high cheekbones of a classic barrio chola. \n\nBut she had kind dark eyes. Her role seemed to be to keep Pablo from self-destructing. And everybody knew that without her Pablo would have just been another 18th Street banger.\n\nGolz said, \"Tell us what you know for sure Bobby Lee.\"\n\nJordan outlined everything he had learned. He said, \"An offshoot of the Sinaloa Cartel has acquired a Cold War hydrogen bomb. Sometime in the past week they transported it through Laredo, to Mexico City.\n\nThen he looked intently at each of them and said, \"They are planning on setting it off in the Alameda Central as soon as they can get it rigged. Their aim is to behead the Mexican government and then make hay out of the chaos.\"\n\nPablo said admiringly, \"Gangsta!!\" \n\nPilar said with more emotion than Jordan had ever heard from her, \"Shut up cabron. My family lives there.\"\n\nGolz actually blanched and said, \"We need to get this information out to every Agency.\"\n\nKharkov looked shrewdly at the group. He was the deep thinker\u2013 a planner and schemer in the old Soviet model. \n\nHe said, \"If we broadcast this to the intelligence community we are going to lose control of it. Worse it will get leaked for sure. Remember this is Mexico and a lot of their officials are in the pockets of the Cartels.\"\n\nThen he looked shrewdly at the group and said, \"More importantly, none of those agencies except DEA has any penetration. They won't know where to start and if they begin turning over rocks it might encourage them to detonate the bomb before we can do something about it.\"\n\nHe turned to Pablo and said, \"How hard would it be for you to get in contact with those people?\"\n\nPablo sneered and said, \"Ain't no thang. We ran a lot of shit for those vatos back in the day.\"\n\nKharkov looked measuredly at him and said, \"So you can get in touch with the right people if we send you down there?\"\n\nPablo looked bored and said, \"Like I said, ain'go.\"\n\nKharkov turned to Jordan and said, \"If you are with him can you get the information we need? We can send in a Delta unit but we have to know the precise location and situation.\"\n\nJordan felt something he hadn't experienced since his days with Red Dawn. He couldn't believe how much he had missed being part of the action. \n\nHe said as calmly as he could, \"That kind of exploit is really easy. I just need to know where to do the eavesdropping. If Pablo and Pilar can get me a target, I can get the information.\"\n\nKharkov nodded and said, \"So we have a plan.\"\n\n\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013-\n\nFour days later, the three of them met in Mexico City. Pablo and Pilar had flown in the day after the meeting. While Jordan had driven in from the border crossing at Brownsville. \n\nPablo and Pilar were basically portraying what they were \u2013 LA barrio trash touching base with the local supplier community. That was an easy legend to document.\n\nJordan was playing a roving troubleshooter for Globecomm. Technical service calls were his normal legend. \n\nHe was purportedly there to do special maintenance on the Televisa satellite uplink hubs. That gave him the freedom to move around the area with a truck full of electronic gear - and not raise any suspicion. \n\nJordan was driving the classic big white Econoline van. It had the markings of a Globecomm Systems service truck and it had all of the gear that you would expect with a mobile satellite support operation. \n\nOf course none of that technology had any purpose other than surveillance. And there was a whole lot of tactical shit buried in special containers under the floorboards. \n\nNormally you would have to be insane to park a van loaded with high-tech gear in a hotel parking lot in Mexico City. \n\nBut 160 pounds of muscle, fangs and unconditional devotion was sleeping inside. So if a thief got in - Buster would make sure that they never got out. \n\nThe three of them had agreed to meet in the caf\u00e9 of the Hotel Hist\u00f3rico Central, which is where they were all staying. \n\nThe plan was to have Jordan introduce himself. Anybody watching would think that Pablo was pimping his woman to some horny Anglo. \n\nThey all did tequila shots. Pablo was downing his. Jordan and Pilar were surreptitiously pouring theirs into their water glasses. \n\nJordan said, \"How did it go so far? Did you make contact?\"\n\nPilar said, \"We spent our time renewing old acquaintances in Iztapalapa.\"\n\nJordan knew that place. It was a rat's nest of cheap housing outside the City center to the northeast. It was also a well-known supermarket for the drug trade.\n\nHe said, \"Did you learn anything useful?\"\n\nPilar said, \"We got a lead on a big hacienda just east of Coatlinchan. It's at the base of Mt Tlaloc. The Cartels use it as a neutral meeting place. All the old grudges get left at the door.\"\n\nShe added, \"We are planning on going out there. If they are going to pull any kind of shit one of the Cartel soldiers will brag about it. Particularly if it's while I am fucking him\"\n\nJordan looked at Pilar's sturdy body and huge rack and thought to himself, \"I bet he'll be singing like a little chickadee once that woman gets him between her legs.\" \n\nPablo looked bored. Apparently the two of them used that ploy all the time.\n\nPilar said, \"There's a wall all the way around the place. But it backs up to the mountain and you can get line of sight from up there. It's only a kilometer away from the buildings.\" \n\nJordan could visualize it. The place was nestled in a valley at the foot of the mountains next to Coatlinchan. And of course the whole thing was on Google maps. There was a rough road up Mt. Tlaloc that would put him in a perfect position to infiltrate down through the scrub trees to the area right above the compound. \n\nSo the following night found Jordan sitting in a black ghillie suit. He probably didn't need that much concealment. But there were totally ruthless people down there. And he didn't want to take the slightest chance.\n\nHe had his Bluesniper rifle with him. And it's attached Gumstix board was loaded with malware. Gumstix works in conjunction with the rifle to give the sniper all of the computer functionality required to Bluebug any Bluetooth device within a two kilometer radius. \n\nHe had been using it since the early days in Kandahar. \n\nJordan was scanning the 2.4 Gigahertz spectrum looking for something interesting. He was a good 100 vertical yards from the wall and almost a quarter mile from the main house. But the Hyperlink 14.9 dBi Randome directional antenna that comprised the barrel of the rifle lit up his Gumstix with perhaps twenty open ports.\n\nHe aimed the barrel from one place to another until he had gotten a picture of the distribution of the devices. \n\nMost of the phones were dispersed around the area surrounding the house. Those were guards. But there was a concentration of four high-end Android devices on the patio of the hacienda. \n\nJordan guessed that those were bosses - maybe in a meeting. \n\nHe had something really nasty mounted on the Gumstix. It was essentially a passive listening device that collected everything that was said near the phone it was embedded in. \n\nThen it would surreptitiously \"call home\" at an appointed time using the smart-phone's internet connection. \n\nIt would transfer what it had recorded and then go back to passive listening. \n\nThe transfer was so cloaked in anonymizing measures that it was not possible to trace back to the recipient. And the only time the malware could be detected was during the short time it was burst transmitting. \n\nThus it was \u2013in effect - invulnerable to any electronic countermeasures.\n\nJordan aimed and electronically dropped the bug on each of the four phones in the house. None of them had the security turned on so it was an easy exploit. He was just packing up his gear when all hell broke loose behind him at the van. \n\nBuster's deep bark boomed across the desert landscape and there was some screaming. It was far enough away that nobody in the compound could hear it but it freaked Jordan out. \n\nHe grabbed his gear and scampered the 200 yards back to his van. The moon was out but the ghillie suit made him look like a black shadow moving across the desert terrain. \n\nJordan was in panic mode. Buster never did ANYTHING aggressive unless there was a threat. \n\nThere was a barely discernable path leading from the back of the compound and up the hill to the road that they were on. Maybe one of the guards had stumbled on them in the dark? \n\nJordan had a K-bar and a Glock strapped to his tac-gear. But he had never used either in anger. And Buster could threaten but he would never hurt anybody. Jordan had a thrill of anguish, What if they had to hurt somebody now?\n\nWhen he got to the van Jordan discovered to his relief and puzzlement that the person Buster had cornered was no threat. \n\nA female figure was cowering against a rock face next to the road. She was wailing pitifully hunched in a fetal position with her hands covering her face. \n\nShe was wearing a badly ripped and filthy dress that might have been white at some time. And she was dirty and covered in blood. She was absolutely terrified.\n\nBuster was standing over her in a posture that said, \"Don't move.\" The hair on his broad back was up and he looked like the hound from hell. As Jordan approached Buster turned his head and said conversationally, \"She tried to break in Boss.\" That explained it.\n\nJordan said, \"It's okay now buddy. You can stand-down. Good job.\" And he gave Buster a little pat between his battle-scarred ears. Buster relaxed and sat \u2013 pant-pant-slobber-slobber.\n\nJordan turned his attention to the woman. Her unearthly wailing was heart rending. Jordan still didn't know whether she was a threat, or not. He had learned in the sandbox that helpless women sometimes had bombs strapped to them.\n\nHe knelt down next to her and said as gently as possible, \"it's okay. You're safe. I'm sorry about the dog but he thought you were breaking into our van. My name is Robert. What's yours?\" \n\nThe woman continued to sob but at least she took her hands away from her face long enough to look questioningly at Jordan. \n\nThat look rocked him back on his heels. She had the face of an angel \u2013 faultless features aligned so symmetrically that even with the dirt and terror her transcendent beauty was hard to miss. \n\nHer eyes, which were filled with wretchedness and pain, were huge, amber and almost feline. Her mouth was wide and sensual even though it was turned down in a caricature of the mask of misery. \n\nJordan spread his arms wide and said in his gentlest voice, \"Please \u2013 we are not going to hurt you. We are here to help you.\" \n\nThen he remembered he was wearing the ghillie suit which probably made the terrified woman think that she was about to be raped by Bigfoot.\n\nHe stood and shucked it off. Underneath he was wearing black tac-pants and a black t-shirt. He looked like his typical nerd self now. \n\nHe knelt down next to the woman - who had gone back to her original fetal position - and said, \"Are you thirsty? Can I get you some water?\" \n\nThe woman actually focused on him for a second and said in a pitiful voice, \"Yes please. I'm dying of thirst.\" \n\nThe fact that she had said that in English surprised Jordan. He had just assumed that she was a local campasino Mexicana who had stumbled on his van by accident. \n\nHe rose and got a bottle of water out of the van. \n\nBuster followed him back to the van, tail wagging, slobber-slobber-pant-pant. He climbed back up into his dog-bed. Then he cocked one leg and began grooming his unmentionables \u2013 his watch was completed. \n\nJordan got a liter bottle of agua potable and returned to the girl. She had stopped wailing and was solemnly contemplating him. He handed it to her and she grabbed it with both hands and began gulping it. \n\nJordan reached out and touched her arm saying, \"Slow down \u2013 you'll make yourself sick.\" \n\nThe woman dropped the bottle, shrieked and scrambled backwards up the rock face. Jordan was so startled by the reaction that he fell back on the road. \n\nShe cowered there contemplating him with terror. \n\nHe stood and brushed his butt off. Then he spread his arms in a friendly entreaty and said, \"Please don't be afraid. I would never hurt you. But there are some very bad men just down the mountain and I think we should get out of here before they find us.\" \n\nAt that, a look of sheer panic came into the woman's haunted eyes and she whimpered. Jordan guessed that she had originally come from down there and it wasn't pretty.\n\nHe said continuing his gentlest tone, \"Please get in the van. I won't hurt you and I will drive you wherever you want to go. It's just that I am going to have to leave now. I promise that I will not touch you again \u2013 and I'm sorry\" \n\nThe last part was said with actual remorse.\n\nThe woman hesitated for a couple of seconds. Then she rose tentatively and walked toward the van, making a wide circle around Jordan as she did it. \n\nShe opened the passenger side door and got in, shoving as far over toward the door as she could get.\n\nJordan picked up his Ghillie suit and bluesniping gear and put it in the back with Buster. Then he got into the driver's seat and started the van. \n\nHe had carefully planned the exfiltration on a path away from the compound. And in the dark, as he bounced over the practically non-existent road with no headlights, he was wondering what was sitting next to him and how she had gotten there.\n\nHe said as gently and conversationally as he could, \"What's your name? Mine's Robert but everybody calls me Bobby Lee.\" \n\nShe gave him an almost normal look and said in a very soft voice, \"Mary - My name is Mary.\" It was like she was affirming something to herself. \n\nThey drove along the path until they got to an actual paved road. It was two-lane blacktop but after what they had been on it felt like the Autobahn. \n\nJordan turned on the lights and proceeded at normal highway speeds. Then he looked over at his passenger. \n\nShe was crammed in the space between the seat and the door, with her arms around her drawn up knees. She was staring at him silently terrified.\n\nJordan remembered that look. \n\nBack in 2003. He had been assigned to 2-70 Armor's RCT. He was SIGINT for the spearhead that was seizing the crossings over the Euphrates at Al Hillah. Up to that point the ride had been uneventful \u2013 if you didn't count the three day sandstorm. \n\nBut it was at that river crossing that they had run into the Medina Division of the Republican Guard. Those were elite troops and they were dug in. \n\nWhat followed was more like a bar-room brawl after somebody shot out the lights. RPGs and Iraqi artillery seemed to come from everywhere. The noise was indescribable and for about three hours Jordan thought he was going to get his ticket punched \u2013 even though he and his gear were traveling at the rear of the column in an M3.\n\nThe urban fighting was so fierce that the 3rd ID tanks and infantry pulled back to let the air cover do their thing. \n\nThe F16s and A10s pretty-much fucked up whatever was left after the Apaches had finished. And the column started to roll up highway 8 again. \n\nThat night the 2-70s Headquarters Battalion was bivouacked in the area northeast of town. They were waiting to turn the place over to the Jarheads. Who were going to finish mopping up what was left of the defenders. \n\nJordan was sitting outside his Bradley enjoying the evening breeze when a 10th Mountain detail came by herding some Iraqi prisoners. \n\nThose guys were regular Army. Not Republican Guard. They had been manning one of the batteries that had given the leading Abrams so much trouble. And as a result, they had been on the receiving end of an absolute firestorm of incoming ordinance. \n\nEven from four miles away, Jordan could feel the continuous concussion and noise of the detonations. Being at ground zero of that shit-storm would be enough to shell-shock the walking dead. \n\nOne of the prisoners was perhaps 18. He drew Jordan's attention because he looked like he was totally empty inside. \n\nWhatever he had been like the prior day, that afternoon had taught him that he was nothing. And that his life was nothing. That knowledge had blown away his immortal soul. ",
        "That was the exact same look that Jordan saw in the eyes of his passenger. Somebody had reached inside of her and pulled out her humanity. \n\nThey had reduced her to a victim without any vestige of will. She was unable to reason, only react. And her present state was nothing but abiding fear. \n\nJordan had led his life centered on a credo of detachment. And he was definitely no Good Samaritan. But his passenger's vulnerability \u2013 her fear and defenselessness spoke to him in ways that he had never felt before. \n\nHe wanted to protect her. \n\nYet, in her present state she created a major problem. He was driving through the Mexican countryside with an unknown woman who had obviously been abused in unimaginable ways. \n\nJordan didn't need to be psychic to figure out that she had reached his location by coming up the path from the compound. So he probably had the additional complication of helping somebody who had just escaped the Cartel. \n\nThat raised a number of other disturbing issues, some of which impacted his mission. \n\nHe looked at her huddled in the corner of the van. And he made a decision. \n\nWhat he said next was so uncharacteristic of Bobby Lee Jordan that he almost couldn't believe that it was his voice. \n\nHe said, \"Look \u2013 I want to help you but you are going to have to trust me. I want to get you to a safe place where you can rest and recover. But I can't do that if you don't start acting a little bit normal.\" \n\nHer eyes changed. It was like the owner had come back after a trip and turned on a light. \n\nJordan added, \"I am going to take you back to my hotel where you can clean up and get some sleep. You will be safe there. I will not hurt you, or even touch you. But you are going to have to act like you are with me when we walk through the lobby.\"\n\nShe looked frightened, but there was also something else there. It was like she had finally gained some hope. \n\nJordan glanced at her dress, which looked like she had been butchering cattle in it. \n\nThere was no way that the police WOULDN'T be called if anybody saw her in that. He said, \"We have to get rid of that dress. I have some things in the back of the van that you can change into. It is just sweat pants and a sweatshirt. You can get out of your dress and put them on back there.\" \n\nShe nodded acknowledgement. Her huge amber eyes were wide with anxiety. There was also something else. \n\nJordan pulled over to the side of the road, engine still running \u2013 got out and went around the van to open the doors in the back. Buster was standing at the door with a concerned look on his face, \"Why'd we stop Boss? \n\nJordan said, \"You need to get out for a second old buddy. The lady has to change.\" \n\nBuster obediently stepped down and stood next to Jordan - pant-pant-slobber-slobber. Jordan closed the door and said. \"It's okay. You can change now.\" \n\nHe heard the sound of banging around in the van and then a meek knock on the door. He said, \"I'll meet you up front.\" Then he opened the back doors and Buster hopped back in \u2013 drool-drool-pant-pant. \n\nShe was crammed in her corner again but at least she looked less like a refugee from a serious train wreck. Her absolutely gorgeous eyes had gotten some life back in them and she was looking at Jordan inquisitively. \n\nJordan was surprised by how well his sweatshirt fit her. He expected it to be baggy but it was apparent that things of monstrous proportions were moving around inside it. With her dirty dress off and clad in sweats she looked like the sexiest soccer mom on the block.\n\nThey drove into the city and Jordan parked the van in the reserved space he had rented. He got Buster some water and they walked around for a minute while the dog did his business. \n\nThen Jordan said, \"Back inside old buddy - you're in charge now.\" \n\nAnd Buster hopped back in the van to continue his lonely vigil. That was always the way it was on these assignments.\n\nThey walked out of the parking lot and into the light and for the first time Jordan actually saw the outline of her body. \n\nShe was tall for a woman, perhaps five-ten. He was six four so his sweats were still bunched around her ankles. \n\nBut the rest fit snuggly up to her waist and he saw with wonder that she had absolutely the most incredible legs and ass he had ever seen on a woman. Big, full and round hips. But at the same time it was obvious that there wasn't an ounce of fat on them. Her legs were exceptionally long which accounted for her height. Still they were supple and well-muscled. \n\nBut it was the size of her tits that made him almost stop and gawk. She was obviously not wearing a bra because her unbound breasts were swaying back and forth as she walked. It made the front of her sweatshirt look like two pigs were wrestling under a blanket. \n\nHe had already noticed that her face was perfectly proportioned and fashion model beautiful but he had no idea that she had such an unbelievable body. \n\nShe turned and looked back at him questioningly. She was clearly wondering what to do next. But there was also something in her eyes that told him that she understood why he had been lagging behind. \n\nHe said, \"I am going to take your arm and we are going to walk through the lobby like you and I are just going up to my room. I'm sorry that I have to touch you but we have to seem familiar. We cannot draw attention.\" \n\nShe nodded with understanding and allowed Jordan to take her arm. And they strolled slowly through the lobby to the elevators broadcasting the message that they didn't have a care in the world. \n\nJordan was impressed by the fact that the woman was beginning to recover some sense of self. Even though he could feel her quivering with fright as she held his arm. He thought, \"She must be one tough cookie.\"\n\nHe opened the door to his room and they stepped inside. He knew that this was going to be a delicate moment. She had obviously escaped from a Mexican Cartel. And it was likely that they had not been playing Scrabble with her while she was in captivity. \n\nSo he had to make their transition to the intimacy of the room as comforting as possible \u2013 without any sexual overtones.\n\nJordan thought that he would address that elephant in the room directly. He said, \"I know that whatever happened to you must have been awful but I want to help you, not hurt you.\"\n\nThen he paused, looked at her with meaning and said, \"Nevertheless, whoever you just escaped from is probably looking for you right now. So you need to stay hidden until you recover enough that we can decide what to do next.\"\n\nShe nodded in acknowledgement. It looked like her reasoning was coming back on line fast. It gave the impression that there was a very strong minded individual in there somewhere.\n\nJordan said, \"Let me suggest that you take a nice long bath and then try to get a good night's rest. I am going to sleep in the van tonight so you will have all the privacy you need.\"\n\nHe added, \"You'll be safe here. So please try to rest and recover. I will be back in the morning and we can get some clothes for you. Then we can try to figure out our next step. Are you hungry?\"\n\nShe said \"Yes\" - in a voice that was beginning to sound normal.\n\nRoom service was knocking on the door fifteen minutes later with a big steaming bowl of chicken soup, some bread and a selection of cheeses. His newfound responsibility was hiding in the bathroom while he signed the bill. \n\nThere were two big bottles of cold water and a beer. The beer was for Jordan. He had been through a lot of tight places in his military life but this felt like the most difficult one yet. And he wanted a drink.\n\nThe last thing he needed was a damsel in distress, given the reason why he was there in the first place. His life-long policy had been to avoid that kind of complication. \n\nBut you would have to be one hard-hearted son-of-a-bitch to stumble on this woman's situation and not offer help. \n\nShe fell on the food like she hadn't eaten in days. Perhaps she hadn't? Jordan drank his beer. \n\nHe said, \"You're American right? So we have to get you out of here and back to the States as fast as we can. We can talk about that in the morning. I am going to leave you alone now. But I will be back at 8:00.\" \n\nShe looked like she was going to beg him to stay. She was still very frightened. But Jordan could see her thinking through what he had suggested and arriving at the conclusion that it was the best course of action. \n\nHer smoky amber eyes had a glimmer of rationality and resolve back in them.\n\nShe said, \"Yes \u2013 and thank you \u2013 I know I am safe here and I will be much more coherent once I get a night's sleep. I'm stronger than this.\" \n\nJordan sensed the inner courage of the woman.\n\nJordan took the elevator back down to the lobby bar. He had NOT lost sight of the fact that he was in Mexico City to prevent nuclear holocaust. \n\nThe woman was an extreme complication in the execution of that strategy. But he was going to stay on task.\n\nJordan needed to talk to Pablo and Pilar, just to get back on-plan. He dialed Pilar \u2013 she was the brains of the operation \u2013 and said, \"Are you back yet?\" There was a raucous party going on in the background. \n\nShe said, \"No \u2013 we are going to stay here tonight. We are really getting down with the bloods and I want to do a little something special with whoever's interested. We'll call you when we get back tomorrow morning.\" \n\nPilar was telling Jordan that she was still following the script. \n\nJordan finished his beer and walked out to the truck. He banged lightly on the door and said, \"It's me old buddy.\"\n\nHe opened the door and Buster was standing there looking puzzled. Jordan said, \"I'm bunking with you tonight.\" \n\nBuster just turned around, walked back to his bed and plopped back down \u2013 pant-pant-pant. \n\nJordan unrolled his sleeping bag between Buster and the truck's monitoring console. Thanks to his years in the Army he was probably more comfortable sleeping that way anyhow. \n\nAs he drifted off to sleep he thought to himself, \"I really need to give this guy a bath.\"\n\nHe awoke at 06:30. Buster was still snoring. Jordan wanted to see how his little Bluebugs were doing. He had activated them when he dropped them on the target phones so they had been recording all night. \n\nThere were four files sitting on his computer. One phone hadn't been used but one in particular had been very active. All but the dead phone's files were full of intercepts. The problem was that they were in colloquial Spanish and he didn't understand a word. \n\nHe encrypted what he had. And then he sent them to Golz on a VPN tunnel. He attached a sit-rep and requested translation ASAP. \n\nHe didn't expect anything that early but you can never tell. He had a sense that he had been on target with his Bluesniping. That was just an instinct that he had gained from long experience. \n\nHe took Buster out for his morning constitutional and then locked him back in the van. Then he walked back to the elevators and proceeded up to his room. He knocked lightly. There was no answer so he entered the room. \n\nShe was sleeping on her back like she was dead. She was lying naked under a light sheet. \n\nHe was really trying to be noble. But no man could withstand the opportunity to leer at that incredible body. The outlines of her voluptuous figure were impossible to miss. Her beautiful face with its wealth of auburn hair was peaceful and relaxed \u2013 even though her nipples were standing out like two little watchtowers on the massive hills of her breasts.\n\nHe withdrew silently and went back down to the lobby. As he did so her eyes opened for a second and a smile of satisfaction and contentment appeared. She stretched luxuriously and went back to sleep.\n\nThe shops were open and Jordan needed something for his new charge to wear. He figured she would want to pick out her own things. But if she was dressed in his baggy sweat suit she would draw unwanted attention. \n\nThere was a trendy looking boutique down the street and he stopped in there. The friendly sales lady advised him about sizes as he bought a simple skirt and sweater along with a couple of different sandals in her approximate size. \n\nIt had only been the baggy effect of his sweatpants that prevented anybody from noticing she was barefooted as she crossed the lobby. \n\nHe also bought yoga pants that the woman said would fit anybody in her ballpark size and a chic looking t-shirt. He made sure it was big enough to accommodate the monsters she was carrying on her chest. \n\nHe also bought some panties and tried to get a couple of bras that might fit her. He had no idea how to communicate the requisite size. But by holding his two cupped hands in front of him in that age-old gesture the sales girl got the idea. \n\nHe took his bags full of new clothes down to the hotel caf\u00e9 and got two coffees and a box of croissants and breakfast rolls and headed back to the room.\n\nShe was awake and sitting in the room chair wrapped in a hotel robe. \n\nHe came in the door very gingerly. He didn't want to appear too forceful or upsetting. The last thing he needed to have happen was for her to go into hysterics in a quasi-public place.\n\nShe smiled at him instead and said in a smoky contralto voice, \"Don't worry. I'm back to acting semi-normal.\" \n\nThen she frowned ruefully and added, \"As normal as I'll ever be now.\" \n\nShe had obviously just come from the shower and she looked much calmer than she had last night. \n\nHer auburn hair was wrapped in another towel and those incredible amber cat eyes of hers were regarding him like she was assessing him.\n\nJordan said, \"I brought some coffee and rolls. I didn't know when you would be up and if you would be able to eat something. I also bought you a few things to wear. I buried your dress at the bottom of a dumpster. It looks like you were committing bloody murder in it.\"\n\nHer eyes instantly clouded. Jordan thought, \"Oh shit!! She was!!\" \n\nThe woman took the proffered coffee and selected a roll. Then she examined the bags. She picked them up, disappeared in the bathroom and emerged 15 minutes later with her hair dry and wearing the t-shirt over the yoga pants. Her feet were in the sandals with a little heel. There was no makeup. She was absolutely stunning.\n\nJordan almost spilled his coffee as she emerged from the bathroom. She did a model's spin and said, \"You like?\" \n\nThat was the dumbest inquiry ever made by a woman. This amazing creature was a goddess. \n\nJordan just stared in wonder.\n\nAt that point there was a rap on the door and a rough male voice said, \"Open up pendejo!!\" The woman shrieked and ran back in the bathroom, locking the door. \n\nThere was the sound of raucous laughter outside. A teasing voice said, \"Gringo has a puta.\" \n\nJordan opened the door and Pablo and Pilar pushed past him. They took one look at the rolls and grabbed all of them. \n\nPablo said with a lecherous grin, where's the coffee and the hooker?\"\n\nJordan gazed at him levelly and said, \"She is in the bathroom and probably won't come out. So listen to me when I say this. When she does come out you will treat her with respect. She is with me and you should consider her to be my woman. If you can't do that I will make a call to Golz and you are going to learn what the words \"rendition\" and \"torture\" really mean. Do you understand me??\"\n\nPilar hit Pablo on the chest and said, \"Be respectful panocha or you are going to have to deal with me too!!\" \n\nPablo made a conciliatory gesture and sat back in the chair. \n\nJordan knocked on the door. He said, \"Let me in Mary.\" This was the first time he had used her name.\n\nIn the bathroom, the woman had been listening to the conversation. What she heard was a strong man quietly establishing dominance over a weak one. \n\nThis man was different than the rest. And in that respect, she felt something she had never felt before. She was starting to think about him in oddly connected ways. \n\nShe unlocked the door and Jordan carefully eased it open - far enough so that she could just see him. He said, \"I know that you are frightened and this is a lot to ask. But can you come out please. These people work with me and they can help you get to wherever you need to go.\"\n\nShe came cautiously into the bedroom and stood in front of Jordan - with him hovering directly behind her like he was her guardian angel. She looked frightened and uncertain. \n\nBoth Pablo and Pilar reacted with total astonishment. They had expected a barrio skank. What they saw was a woman who was perfectly stunning \u2013 tall, beautiful and with an absolutely outrageous body. \n\nShe walked over and sat silently at the end of the unmade bed \u2013 knees together - hands on legs. She didn't look at either of them. \n\nPablo was gazing at her gorgeous legs and huge tits. The look on his face was not something that Jordan liked. Jordan said, \"Remember that phone call Pablo. You would really hate what would happen next.\" \n\nPilar looked flabbergasted. She said, \"Where did you find this Angelico Robert? She is not a puta.\" \n\nJordan said, \"I found her up on the mountain behind the compound. I think she came from there. She needs our help and I plan to give it to her.\"\n\nPilar was a very hard woman indeed. The cruelty of her short life had made her that way. She had done or seen every vicious, and immoral thing imaginable. But there was an innate kindness at her core. It made her instantly sympatico and protective of their new guest. \n\nShe rose, walked to the woman's side, sat next to her and took her hand. The woman looked terrified. But beyond that she did not react. \n\nJordan's gentle and calm yet powerful presence comforted her. Pilar said, \"Don't worry querido. We will protect you.\" \n\nThe woman turned and acknowledged that statement with her eyes. \n\nPablo said with some bluster, \"This woman came from the compound last night?\" Jordan nodded in confirmation.\n\nPablo said, \"She must be the puta who killed El Sordo. We will make a fortune if we give her back to the Jaliscos.\" \n\nBefore Jordan could even react Pilar had darted across the space between the bed and Pablo. \n\nThe open handed slap literally sounded like a pistol shot. And Pablo's head rocked back like he had been shot. \n\nThe threat in Pilar's voice was unmistakable as she said, \"You know what they would do to her Cabron. You keep your mouth shut unless you want a knife between your ribs.\"\n\n\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013-\n\nThe woman had recoiled in horror at Pablo's statement. \n\nShe had been her normal self a mere 100 hours earlier. She was sitting comfortably in the hotel bar sipping a latte and reading the Wall Street Journal when she began to feel woozy. \n\nThen she felt the arms of a foul smelling person grab her. \n\nWhen she came back to consciousness she was lying on a filthy bed in a small room with a weak unshaded bulb the only source of light. \n\nThere were no windows. She couldn't tell whether it was night, or day.\n\nShe knew that kidnapping American tourists wasn't unheard of south of the border. But it never occurred to her that something so dreadful would happen to her. \n\nShe was an important and powerful woman - a Senior Partner in a big American accounting firm \u2013 rich, admired and an object of lust for any man she met. With all of those gifts it was hard to believe that anything bad could EVER happen to her. She shivered with fright.\n\nThen a door opened and an evil looking man entered. He was a classic gangster type with the slicked back hair, hard face and thick Indio body of a central casting drug lord. \n\nHe stood over her and leered. He said in heavily accented English, \"It's time to have some fun my little flor\"\n\nShe suddenly felt very self-conscious. She started to scramble backward on the bed. But the man's arm lashed out like a striking snake and grabbed the scooped front of her dress. \n\nShe fought back with swings and kicks. But all that commotion did was rip her dress and bra off as she tried to twist away. ",
        "He made a sound of appreciation - pushed her backward - down on the bed - and said in a teasing tone, \"Save your energy puta. You're going to need it.\" \n\nThen he scrabbled around in his pants and brought out the thickest, longest weapon she had ever seen. \n\nIt was gross, perhaps eleven inches long and as wide around as her wrist. He shoved it in her face and said, \"Suck it.\" \n\nIt stank. She turned her head aside in disgust. But he grabbed her hair and pulled her face into his crotch. She opened her mouth to scream, which was a mistake because that allowed him to cram that huge piece of meat in her mouth to the back of her throat. \n\nThen using her hair for leverage he began bobbing her head back and forth on it. \n\nShe started to bite him and he slapped her face hard which at least shot the gross thing out of her mouth. \n\nHe said, \"Oh the little puta is a fighter. We'll see how much you want to fight after I have given you this!!\" \n\nThen in one motion he violently spread her legs and forced that brutal instrument past her pussy lips and deep inside her. \n\nShe screamed in pain as it battered its way all the way up to the top. He grunted with sheer sensation as he began the age old motion. \n\nShe writhed underneath him as she tried to escape the pounding. But he had her legs at the knees spreading her wide. \n\nThen to her horror she could feel herself begin to produce lubrication. This was rape \u2013 not sex \u2013 but her body didn't know the difference. And she was beginning to respond to the exquisite sensations of being fucked by a huge cock. \n\nShe was proud of the fact that she didn't moan as he took her, or thrust back at him. But she was turned on nonetheless. \n\nHe noticed the wet squishing sound and the little Oh-Oh-Ohs she was making as he fucked her. He said with triumph in his voice, \"Ah-ha!! The puta likes it.\" \n\nHe pumped into her for what seemed like forever but was probably only fifteen minutes. \n\nThen he came with a roar. To her eternal shame she quivered with a small orgasm as he filled her up. It was just a little clutching by her passage. But he noticed that too.\n\nAs he climbed off her he said cheerfully, \"That was divertido. I'll be back again and next time I want a little more enthusiasm.\" \n\nHe came back so many times she lost count. She passed out rather than slept. And to her eternal disgust she began to give him the enthusiasm he desired.\n\nIt was a combination of the dependency of being his captive \u2013 knowing that he held her life in his hands. And the sheer sense of degradation he had reduced her to. \n\nShe had always been the person in charge. And now she was a helpless fuck-toy for a totally despicable man. \n\nHer trip into submission had let loose a side of her that she had never even been aware of. She had been wild with him the last few times \u2013 not just giving him her body but also her passion. \n\nAnd for his part, he was now treating her like a lover \u2013 not her captor. \n\nShe had no way of knowing it but he had actually protected her from his men by claiming her as his own. Her incandescent beauty was impossible to miss. So rather than being kept with the rest of the Cartel's sex slaves she had her own small room. And he had the only key.\n\nNonetheless, in everything she had gone through she never lost a sense of herself. She had been humiliated and used but her spirit wasn't broken. And her inner core still had the courage to fight back in the only way a woman could in that situation.\n\nShe was beginning to get a sense of the routine. She knew that she was being kept in the inner part of a house \u2013 perhaps a storeroom. And by listening to the noises outside her room she could tell the difference between day and night. \n\nThere was some kind of loud party going on when he visited her next. It was the middle of the night and she hoped that the chaos would provide some cover for what she planned to do. \n\nShe had spent the entire day fashioning a makeshift shiv from the toothbrush that they had given her - honing the end of it to a fine point by rubbing it on the stone floor. \n\nThe next time he entered the room she was seductive. She lay back with a welcoming smile \u2013 eyes apparently stoned with her desire for him. She gently spread her legs and raised her knees to offer herself to him. \n\nHe snickered with delight. He knew that he had finally broken this magnificent filly. He made a growl of pure lust and threw himself on her. \n\nBy now it was easy to insert that battering ram into her. He slid all of the way to the top and she made a groan of pure sensation. And then the wet slapping sounds began. She was shrieking with pleasure as he drove himself harder and deeper into her. \n\nHe was pounding her so hard that she was gripping the mattress with her hands moaning and crying out, \"Fuck ME!\" \n\nHer legs were spread in an exaggerated \"V\" and he was lost in the throes of fucking this beautiful woman. Then suddenly he felt a sharp pain in the area of his larynx and his life ended in an instant.\n\nThe woman could feel him die inside her in mid stroke. The blood from the vile man's carotid artery gushed over her. It was hot and sticky and it was so copious that it almost blinded her.\n\nShe had hidden her little shiv between the mattress and the bedframe waiting for him to work himself to a point where he wasn't thinking. \n\nAnd then she had struck a killing blow with all of the anger, pain and humiliation of the previous four days behind it. \n\nShe had actually practiced the death stroke to get it right. And now he was lying limp between her legs \u2013 still rock hard and deep inside her. \n\nShe frantically rolled him off her \u2013 his exit making a squishy pop \u2013 and searched his pants for the key. She felt no remorse whatsoever- only a sense of horror at the smell of the blood and his shitting himself as he died.\n\nShe tried to clean her face and hair with the parts of his shirt that were not soaked in blood. \n\nThen she straightened her dress and unlocked the door. She peeked out at the throng of people. \n\nIt was dim out there. The music was loud. And most of them were drunk. She was in a short hallway leading out of the building. It was very dark up that hall and she easily slipped down it and out the back door. \n\nShe was in the tatters of her beautiful white linen dress with no underwear and bare feet. She knew that she had to escape now - or face unimaginable abuse. \n\nThere was a landscaped path that led from the door to an ornate hacienda style gate. She could hear the loud voices of men off to her left. \n\nThose were probably guards. She very silently made her way down the path sensing every noise and movement around her. \n\nThe gate was unlocked and she slipped out of the compound. There was a path leading up a steep hill - or maybe mountain \u2013 and she took it. \n\nIt was silent, with the sounds of the party fading behind her as she made her way up the path. \n\nThen \u2013 right in front of her she saw a white commercial van. It was the exact same type of big van that she saw everywhere in Chicago - doing the mundane things in the world that she now longed to rejoin. \n\nThe markings said that it did something with satellites. There was nobody in the van and it was unlocked. She was going to hide there and then beg the driver to take her to safety when he returned.\n\nWhen she opened the back door to slip inside she was confronted by a creature so terrifying that she thought she would pass out. It made a loud threatening noise and she shrieked, scrambled backward and fell against the rock outcropping that the van was parked next to. \n\nThe creature approached her \u2013 it was a big dog \u2013 and stood over her growling like it was going to kill her on the spot. \n\nThen she heard a voice talking to the dog. It relaxed and wandered amiably off \u2013 like nothing had even occurred. \n\nThe voice belonged to another creature. That apparition was even more fearsome. It was huge and black and it seemed to have odd fur. It was the most menacing sight she had ever seen. \n\nShe was shrieking and crying with sheer misery when a voice said gently, \"Please \u2013 we are not going to hurt you. We are here to help you.\" \n\nThen the creature stood up and seemed to shed its skin. \n\nWhat appeared in front of her was the Warrior Archangel Michael himself. He was beautiful beyond reckoning \u2013 huge, mighty and yet radiating peace and wellbeing. She wondered if she had died and was entering heaven. \n\nShe felt worship at first - more than love. But it was through his subsequent actions that the man bound her to him in unbreakable ties of adoration.\n\nMarigold Wilson was always the beautiful one. Her older sister Maddie was almost as beautiful. But Maddie was the worldly sister, the hot one. And Milly was the baby. \n\nMilly was also strikingly beautiful, much taller than Maddy, almost Marigold's height. But she was lithe and supple with freshness, grace and athletic beauty \u2013 Millie was the unattainable girl next door. \n\nOf the three sisters - Maddie was the first born, the natural leader, the smart one. And Millie was the helper, the care giver, the doctor. \n\nThey had both married in their 20s and they led happy family lives. Marigold was the free spirit and connoisseur of men. \n\nMen did what Marigold wanted them to do. And she really believed that they had been put on earth strictly for her entertainment and pleasure. \n\nShe liked variety and she had never met a man who measured up to her. They all wanted her. But they could not begin to meet Marigold's exacting personal standards for a proper life partner. So none could ever have her.\n\nThat's why the tall man standing next to her was so different. He was strong and self-possessed. He was accomplished and modest. He was clearly intelligent but humble. \n\nShe had looked into those kind and caring eyes. And for the first time in her life Marigold Wilson fell deeply in love. And she made a pledge to herself that wherever this man went, Marigold would follow.\n\n\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013-\n\nJordan sent a guarded look at his two guests. He said, \"As you both know, we have much more important things to take care of. So we should go to your room and sort it out right now.\"\n\nJordan turned to Marigold and said in a gentle tone, \"I am going to have to leave you for a while. You must have somebody you want to contact. I am going to leave my personal phone so you can do that. And I have friends who can get you out of here if need-be. But what I am doing right now is vitally important to everybody's safety so that takes precedence.\"\n\nHe added, \"Obviously - you are welcome to go If you have people who can take care of you. But I would not suggest going out unless you are sure of a quick and surreptitious escape. If you really killed El Sordo, there are going to be a lot of people looking for you.\" \n\nMarigold gazed at him with intensity and said, \"I will wait here. I am not ready to leave yet.\" \n\nJordan was astounded by her recovery. This was a very strong and intelligent woman who was as tough and resilient as the Special Forces soldiers he had served so proudly with. And that spirit was beginning to show. \n\nAll the way to their room Pablo and Pilar tried to tell Jordan about his new friend. She had been the talk of the compound when they had arrived. \n\nOne of El Sordo's guys had spotted her in the Grand Hotel Ciudad De Mexico. She was apparently there on a business trip because she was dressed like an executive and sitting by herself. \n\nSo it was easy to drug her and drive her back to the hacienda. Nobody on the hotel staff noticed what happened. Since none of them wanted to get on El Sordo' s bad side. \n\nShe caused quite a stir among the Cartel's soldatos when they delivered her unconscious. One hombre tried to paw her incredible tits. El Sordo cut the payaso's hand off with a machete. This prize was his \u2013 and his alone. \n\nThe inhabitants of the hacienda had not seen the mystery woman after that - except for the occasional bathroom break and when they fed her. \n\nBut they definitely heard her. The moans, cries and shrieks of passion coming from that room caused many a horny campasino to mimic what was happening in there. \n\nPablo and Pilar had witnessed one of those incidents. Pablo said, \"Man!! It sounded like El Sordo was torturing a coyote. She howled for hours. El Sordo said that Perra Caliente was the hottest fuck he had ever had.\" \n\nAnd he grabbed his crotch to illustrate his approval.\n\nPilar hit him hard on his beefy arm and said, \"it was rape you asqueroso idiota!! She wasn't enjoying it. She was enduring it!! Believe me I know.\" \n\nAnd she looked at Jordan sympathetically.\n\nJordan said with some concern, \"What happened to El Sordo?\"\n\nPilar said, \"She stabbed him with a shiv. She had made it out of a toothbrush. He must have been in the saddle at the time. It killed him so fast we didn't hear a sound. We didn't even discover the body until somebody noticed that the door to her room was open.\"\n\nJordan said, \"Are they looking for her now?\"\n\nPablo said, \"Big-time amigo. And they would set us up for life if we gave her up.\"\n\nJordan said with threat in his voice, \"Have you ever seen what they do at black sites? There is a particularly nice one in Rumania. They put you in sensory isolation until you beg to be killed. That's your future if you don't forget that you ever saw her,\"\n\nPablo made a conciliatory gesture and said, \"Calma Amigo. I wouldn't think of it.\" But his eyes told Jordan otherwise.\n\nAs soon as they got to their room Jordan pulled out his laptop and set up a secure VPN conference link to Golz's desktop. Both Bernie and Kharkov were sitting at the table. \n\nGolz said a little too brusquely, \"Sit-rep.\" He looked stressed.\n\nPilar said, \"We just got back from there. They definitely have the package. I don't know where it is but the vato I was with last night was very talkative. He told me to clear out before the weekend.\" \n\nToday was Tuesday. \n\nGolz looked even more concerned. Jordan marveled at how Pilar's English lost its Latino accent when she was talking to any other group than the bangers. \n\nGolz said, \"Bobby Lee, we have your intercepts and we are doing the translation as fast as we can. But there is a lot to go through. We will get it to you as soon as possible. \n\nIn the meantime, we are sending a team of operators \u2013 from JSOC. I want to get them in place now. They will move on the package once we get the location confirmed. They'll contact you when they get in position. It's your operation now.\"\n\nJordan said, \"Roger that\" and ended the transmission.\n\nPablo said teasingly, \"You didn't mention your new friend Amigo.\"\n\nJordan looked irritated and said, \"She's my problem. I'll get her out of the Country myself.\"\n\nThen he had a thought... \n\nHe said, \"In the meantime, I want you two to listen to the intercepts. You know the people who are on them better than anybody else. And maybe you can cut to the chase without listening to everything.\"\n\nPilar said, \"Leave them here. We can do that. You go take care of our new friend.\" \n\nJordan noted the use of \"our\" rather than \"your\". He was beginning to really like and respect Pilar. \n\nAs he walked back to his room Jordan thought to himself, \"Pilar is a very strong and caring woman. I can trust her. But I can't say the same for her mate\" and he grabbed his \"special\" phone. \n\nIt was an encrypted sat-phone that he kept clipped to his belt. He rang Golz's private number. \n\nHe said, \"Bernie, I have the two of them listening to the intercepts. They were gathering HUMINT there last night and they know all of the players. But we might have a problem.\" \n\nAnd he went on to explain the presence of the woman named Mary.\n\nGolz let him talk. Then there was a long silence on the other end of the line. Jordan got the impression that Bernie had muted it and was talking to Kharkov. \n\nHe finally came back with, \"The woman is an extreme complication Bobby Lee. So keep her invisible until this is over. We can't take the chance that she will bring any attention to the op. We can ex-fil her with the rest of you when this is done. But whatever you do don't let her distract you.\"\n\nJordan knew that wasn't going to happen. Whoever she was this woman was way out of his league. \n\nBut he said, \"No problem Bernie. I'll keep you posted.\" And as he said that he opened the door to his room.\n\nShe was sitting where he had left her reading one of the hotel magazines. Her lovely long legs were drawn up under her and her beautiful face was disturbed. \n\nShe looked up as Jordan entered and said, \"I don't want to get in your way if you have business to conduct.\" \n\nShe had been puzzled to find that Jordan was mixed up in an enterprise involving such a disreputable pair of people. She could see that Pilar was a decent person underneath her barrio tattoos. Pablo - on the other hand - gave her the creeps.\n\nJordan looked at her with real interest. She was rapidly evolving from the feral creature that he had met on that hillside. He could sense the steadfast spirit that resided inside that incredible body. And he marveled at the power that now lurked behind those amber eyes. \n\nAstonishingly, he felt a stirring when he saw her. It would be hard to call it love. But it was a sensation that a nowhere man like Jordan shouldn't logically have and couldn't really recognize. He actually felt a moment of emotional attachment to another human being. \n\nHe said, \"Did you get ahold of somebody?\" \n\nThat question played directly into what he had been talking to Golz about. But he also wanted to deflect the subliminal undercurrent of sexual attraction that he felt.\n\nShe said, \"I could have but I wanted to talk to you first.\"\n\nJordan didn't like that statement. He was mixed-up enough by the unfamiliar feelings that he was having. And of course there was the small matter of the nuclear annihilation that he was about to face. \n\nSo, the fact that this woman wanted to sit down and talk about things pissed him off. It just seemed so irritatingly female. \n\nHe sat down huffily in the other chair and said, \"I am in Mexico City on very serious business that I can't discuss with you. And I know that you don't know me very well. But you are going to have to trust me when I tell you - If there is any way you can get out of here you are going to have to take it NOW!!\"\n\nShe looked amused and said, \"What could be so important to generate such a melodramatic response?\"\n\nHe thought, \"WOMEN!!\"\n\nBut he said, \"I can't tell you that. But suffice it to say that - for a reason that I can't really understand I have developed an overwhelming desire to keep you safe. I have never felt this way about another person, let alone a woman. But it is very important to me that you are out of harm's way and right now you are in grave danger.\"\n\nJordan planned to stay in Mexico City until the bitter end. It just seemed to be the right and honorable thing to do. But it was also imperative to get this woman out of the blast zone. \n\nJordan's reaction was indeed good news to Marigold. Her huge amber cat eyes bored into him with flaming intensity. She said idly, \"Why would you care what happens to me?\"\n\nHe said, \"Because I have never met a woman like you. You are a goddess and yet you are a tough and strong minded person. You've been through hell. And yet you are sitting here one day later as serene as Cleopatra on her barge.\"\n\nHe grimaced and added, \"My mission is vitally important to the well-being of 22 million souls but I can't stop thinking about you. It is very disconcerting and confusing and I don't like how I feel.\"\n\nShe smiled mysteriously. That was exactly what she was waiting to hear. For a woman as sexually experienced as Marigold, the term \u2013 \"love at first sight\" - just seemed so dreadfully absurdly, pathetically corny. \n\nBut she had already come to the conclusion that she loved this man. And that she planned to make him a part of her life from now on. ",
        "She knew that she could have a helicopter on the roof within the hour and be sipping margaritas on her corporate jet two hours after that. \n\nBut instead - she was going to stay with him. And when she was done he was going to be the happiest and most well-fucked husband in the history of the species. \n\nFurthermore, she knew that they were going to live the rest of their lives together. And their bond would be forever. Marigold would make certain of that.\n\nMarigold had always been a force of nature. She was not as sensual as Maddie and not as smart as Millie \u2013 but she was the one who always got the job done. \n\nShe might be headstrong. But she was almost always right. And she had built a career on her decisiveness and her exceptional strength of character. \n\nJordan was looking at her puzzled. So she retreated back into her typical neutral expression. Perhaps she had allowed too much of her actual self to show in her face. \n\nShe could excuse that slip because she was also feeling something she had never felt before. It was a simple sense of loving the man in front of her - a desire to be his mate. \n\nShe could sense his masculine power and his tenderness - and his steadfast dedication to his mission. And that knowledge washed away all of her past conceit. It was an instant cleansing of her psyche. \n\nUp to this point guys had been disposable items. They came and went. They gave her great pleasure. But one man was never enough for Marigold Wilson. \n\nIt wasn't the sex. Many of her partners could satisfy her that way. There was just something missing in all of them. \n\nShe was looking for a stalwart comrade in arms. A man she could truly respect. Somebody as tough and strong and smart and independent as she was. That was the place where none of the others came close to measuring up. \n\nNow that she had that one indispensable man she would never lose him. Admittedly his initial role as her knight in shining armor had influenced her perception of him. But it was his kindness, gentleness and the aura of calm noble strength that had cemented her love. \n\nNonetheless, there was something she had to clear up first. Marigold looked Jordan squarely in the eye and said, \"What are you doing here? Is this some sort of drug operation? Are you like those people back in the compound?\" \n\nThe look of horror that came over Jordan's face answered the question. But he spluttered, \"God NO!! I swear!! I am a private contractor for a security firm. I'm here on a mission that involves Pablo and Pilar. That's all I can tell you.\"\n\nNevertheless, the idea that she might think he was a drug smuggler upset him so much that he couldn't stop himself. He was not socially adept. And this incredible woman had worked her way through his defenses. \n\nIt all came rushing out in a single burst. The story of the Tybee Island Bomb and how it was going to be used just poured out of him. \n\nJordan was horrified. Golz would have him killed if he knew \u2013 literally!! In his entire life he had never been so foolish. But this woman caused him to do unprecedented things.\n\nShe looked at him quizzically, like she thought he was telling her a story. \n\nShe said, \"Seriously?? You expect me to believe that you are here to save the world?\" \n\nHe said, \"Frankly I don't care what you do, or do not believe. I have a mission to accomplish and time has just about run out for me.\"\n\nAt that point the room phone buzzed. He picked it up and it was Pilar. She said five words, \"We know where it is!!\"\n\nJordan said with command authority in his voice, \"Get down here fast and explain it to me.\"\n\nHe turned to the woman and said, \"We found it. You can't be included in this conversation from now on so please leave.\"\n\nMarigold looked at him like he had lost his mind. \n\nShe said, \"I felt the earth move when we met and there is nothing that will stop me from being your companion in this. I am not a helpless victim. I am a strong and intelligent woman.\" \n\nShe looked resolute and said, \"My belief in my ability to overcome any obstacle might have been shaken when you met me. But I had just killed my tormentor and escaped from a house full of Cartel soldiers. So no matter what you might think I can take care of myself in a fight.\" \n\nShe looked intently at him \u2013 like she wanted to reinforce her point. Her amber eyes flamed like the face of the sun. She said, pronouncing the words very slowly and distinctly, \"I killed the man who raped me with my bare hands and I don't regret doing it for a second.\"\n\nThe she looked even more serious and said, \"More importantly, I do not trust the man you are working with. He is the same person as the man I killed. So I am going to watch your back while you do whatever you have to do.\"\n\nThen she paused and looked thoughtful, like she was coming to the same kind of momentous decision that Jordan had just made. \n\nShe said, \"But the one thing that you will just have to get used to is the fact that I am yours and you are mine. We are yoked together for life and there is nothing that you can say or do that will change my mind about that.\"\n\nJordan was flabbergasted. He was a lone wolf. He had been on his own so long that he couldn't even conceive of living his life in company with another person. Least of all an earthbound angel like Marigold Wilson. \n\nHe said totally flummoxed, \"What are you talking about?\" \n\nAt that point somebody pounded on the door and a loud voice said jocularly, \"You'll have to climb off the Puta Gringo. We've got news.\" \n\nJordan rose and gave Marigold a look that said, \"We'll talk about this later.\" And he opened the door.\n\nPilar bustled past him with Pablo slouching along behind her. She said excitedly, \"That was an excellent idea Roberto. You bugged the four Capo's who were at the hacienda. One of them was El Sordo's phone. Your woman had already eliminated him. But Capitan Moro was there too.\"\n\nShe laughed delightedly and said, \"I was with one of Moro's soldatos last night and he was bragging that Moro's crew had something really big planned. He wouldn't tell me what it was but he told me to be sure to be out of the City by Saturday. So I knew Moro was the hombre to listen to.\"\n\nJordan marveled at how clever this uneducated woman was. \n\nHe said, \"Brilliant, Pilar.\"\n\nThen the two Latinos noticed that Marigold was following every word they said. Pablo laughed evilly and said, \"Golz isn't going to like this Gringo.\" \n\nJordan gave him a hard stare. But before Robert could answer Marigold said, \"Shut up you fool!! I know all about why you are here. Robert told me. And as far as I can gather he needs all the help he can get.\" \n\nThen she added with steel in her voice, \"And maybe when we get out of here Golz is going to have to worry about me.\"\n\nShe hung that little statement in the air without further explanation. The threat was evident in her tone of voice. \n\nMarigold was already thinking about asking her friends at the DEA to wipe out that compound and everybody in it \u2013 just as a personal favor. So she wasn't bluffing.\n\nFor the first time the two Latinos understood that maybe Marigold wasn't the helpless damsel in distress they thought she was. The command in her voice also changed Pablo's mind about sampling that delectable little puta \u2013 at least until he could find out what she represented in terms of a threat. \n\nPilar just gazed at Marigold with newfound respect. \n\nPilar continued with, \"El Sordo's killing spooked them. They couldn't believe that a woman was able to do something like that. They thought it was a rival Cartel, or maybe even the government. So, Moro called his Lieutenant Paco Berrendo and told him to move the bomb. It is all on the intercept.\"\n\nShe paused and a triumphant look came over her face. She said, \"We know exactly where he's sending it. It's an address in an industrial park out in Xalostoc!\" \n\nJordan knew the place. It was a collection of warehouses and abandoned factories built around a rail yard. \n\nHe said to Pilar, \"What's the address.\" \n\nPilar gave it to him. Jordan entered it into the KH11 overflights that he had on his special laptop \u2013 the one with everything encrypted and shielded \u2013 and thanks to the NRO's geospatial imaging there was the location in three dimensions.\n\nJordan could see that it was an abandoned factory surrounded by a series of low hills. That would be an advantage in that it would hide anybody approaching. But it also meant that the only way to surprise anybody at that site was via vertical envelopment. \n\nThat was all the information Jordan needed. He picked up the encrypted satellite phone and called Bernie. \n\nGolz answered after the second ring. Jordan said, \"We have the location Bernie. But we have to act tonight.\" \n\nBernie said with deep relief, \"That's wonderful Robert. We have already dispatched a couple of teams of operators. They can extract you after the op is over.\n\nJordan pondered for a second then then he said, \"When is your team due? They are in the process of moving the bomb so the best time to hit them would be just as it arrives at its new location.\"\n\nGolz said, \"They're launching from the Boxer. It's off of Vera Cruz. We can get them there in a couple of hours. \n\nThey're on two Night Stalkers taxis. One's a HH-60 Pave Hawk with a team of Deltas and the other's a MH-53 Pave Low. It's there to do the heavy lifting. There has also been a Reaper continuously on station. \n\nThe Mexicans know we are running an op but they don't know what it is. They gave their authorization on POTUS's personal assurance. So tread lightly. We'll read them in after it's over. And of course if we fail they'll never know. Since there won't be anybody left to read-in.\"\n\nJordan said, \"The sun sets at around 21:00. They should fly directly to the location I am sending to you now. And I will BTID them directly onto the target. \n\nThe Cartel folks outnumber us but they don't know we're coming. So this is going to have to be a fast in-and-out operation.\"\n\nJordan added, \"There could be some very serious shit happening once we make our move so tell them to bring the good stuff.\"\n\nBernie said, \"The Reaper is carrying seven Hellfire Romeos. That ought to be all of the good stuff you need. And the Deltas know their business. They'll secure the package. All you have to do is sit back and watch. Good job by the way.\" The praise was fatherly.\n\nJordan terminated the call and turned to the three other people in the room and said, \"We have five hours before we have to move. So spend your time wisely. We will meet at the truck at 20:00 hours. If we all show up together it is going to be suspicious. So when it's time to gather time it as surreptitiously as possible. We don't want to attract attention\"\n\nThen he thought for a second and added, \"Mary and I will stay holed up here and I suggest you do the same in your room. We can change into our tac-gear in the truck.\"\n\nHe looked at Marigold and marveled at her toughness and resilience. There wasn't an ounce of fear or anxiety in her face. She was standing at his right hand looking both calm and dangerous like a lioness ready to hunt. \n\nJordan checked out her tall frame and said, \"I have gear that will probably fit you. But you need to stay in the truck while this is going down. This might get a little intense.\" \n\nJordan was thinking about his time with four-five Commando in the caves during Operation Condor. \n\nEven sitting up on a ledge with his SIGINT gear he could sense the intensity as the Royal Marines went from cave to cave rooting out the Taliban. \n\nThe AK47 rounds and RPGs did not discriminate combatants from noncombatants. That was what he expected to happen tonight. \n\nPablo and Pilar exited and there was just the two of them now. \n\nMarigold was staring at him intently - like she expected something to happen. Instead, Jordan sat down in the chair nearest the window. He crossed his legs and said puzzled, \"What did you mean yoked together?\" \n\nShe looked at him like she was talking to a moron and said, \"Don't you realize that we are meant to go through life together. Didn't the earth move for you when we first met?\"\n\nJordan knew exactly what she was talking about. He was surprised at the flash of emotions that had flared up in him when he had first looked into that dirty terrified face. \n\nIt was not a sensation he could describe, let alone express. But he instinctively knew that this woman was some kind of gift. Somebody valuable who he needed to keep and protect. \n\nBut Jordan was way too disconnected from his own feelings and too repressed to acknowledge that thought. So instead he said, \"If you mean do I think that you are the most incredible woman I have ever laid eyes on \u2013 absolutely!! But I don't understand what you mean when you say the earth moved.\"\n\nHe looked into her smoky amber eyes and the fire was back. She said with amusement on her lips and total womanly assurance in her voice, \"You will... Here... Let me show you.\"\n\nShe, glided assertively over to him, stopped and stood in front of him. At five ten she towered over him as he sat. And with her formidable body she was like an Earth Goddess. \n\nShe gestured toward the bed and said, \"Let's go over there.\"\n\nThen she reached down and grabbed both of his hands, jerking him roughly to his feet. Jordan had the passing thought that she was also physically stronger than any woman he had ever known. \n\nAs soon as she had him standing she reached up, grabbed the back of his head and aggressively yanked his lips down for the hottest open mouthed kiss that any woman had ever given him. \n\nHer mouth was red hot. She was totally open to him. It was eerie, like there was nobody else in the world but her and him.\n\nShe felt it again. It was a lurching sensation, like time and space had temporarily suspended. There was no temporal reality for her while the two of them melded together. All she could sense was their tongues languidly moving back and forth on each other and the rising tidal wave of her arousal. \n\nShe growled a low animal Unhhhh!! And then the realization hit her. She had experienced three days of the worst kind of sexual violation. And yet she absolutely had to fuck this man right here -and right now!! \n\nAnd that act would burn the pain and humiliation out of her soul. \n\nMarigold could feel herself getting very wet. The beautiful man holding her was kind and generous, brave and stalwart and he was arousing feelings in her that she had never experienced before. \n\nShe wanted to give herself to him - totally!! Not take FROM him like she did with every other man. That was a new concept for her, since up to that moment her sexual partners had simply never registered. \n\nMarigold thought that all men were alike. They were a source of pleasure. But like big hunting dogs, you wouldn't want to have one lying around the house all of the time. And Marigold was particularly NOT interested in being somebody's woman. She had worked too long and too hard for her success. \n\nBut this gentle self-effacing man was not like any of the other men she had ever known. For one thing he was an exceptionally deep and sensitive person. But he was totally unassuming. He was a warrior. Nonetheless, UNLIKE all of the men that Marigold had known, he had no desire to force his will on her. \n\nJordan's world was totally rational, not overwhelmingly instinctual like hers. Marigold arrived at her life conclusions without thought. And they were almost always correct. \n\nMarigold simply knew what was right and acted on it without question. Jordan reasoned things out. And in that respect she was a perfect yin to his yang.\n\nMarigold broke the clinch and walked over and sat inquiringly on the bed. She crossed her legs sexily at the knee and gave him the hottest glance she could muster. \n\nHe stood there looking at her like he didn't know what to do next. \n\nMarigold thought to herself, \"OH MY GOD! He is actually SHY!\" It was endearing.\n\nMarigold was used to sex in every offbeat place on the planet. And the males got right down to the task. Of course they tended to be very direct and perhaps a little brutal. And they were only interested in her conquest and their satisfaction. \n\nBut she couldn't recall experiencing sex with a man who actually treated her - and the act itself - like something special. \n\nOf course she also had to ruefully admit that in the past she had never sought out those kind of men either. \n\nShe felt a wave of passion overwhelm her. But she was also experiencing something else. It was a sense of connection, a tenderness toward somebody who she was about to fuck. Sex with love would be a new experience for her. It also occurred to her, \"So THIS is what making love feels like??\"\n\nShe was ashamed to admit that she could not recall having ever made love. It was a devastating revelation. Almost as disturbing as the realization that she really, truly loved and trusted this man. \n\nShe said patting the bed, \"Come over here and sit next to me.\"\n\nHe came over and sat next to her looking uncomfortable. She turned toward him and without further ado threw both of her arms around his neck, put her right hand behind his head and dragged him down for another scorching kiss. \n\nHer wide sensual lips opened and she could feel her tongue probing his mouth. The sensation made her moan loudly. \n\nHe threw his arms around her and hugged her to his chest. Her huge boobs pillowed out between them. He was breathing rapidly now, caught up in the feeling. \n\nShe freed herself momentarily, stood up, threw her t-shirt over her head and stripped off the yoga pants. She was wearing nothing underneath.\n\nJordan was transfixed by two of the most beautiful breasts in creation. They were magnificent, full, meaty, high and proud, with two huge dark nipples sticking out like something in a pornographic cartoon. He had an overwhelming desire to suck on them. \n\nShe walked back toward him, spread his knees and stepped between them. She was so tall that his mouth was aimed directly at one of her big brown nipples. \n\nHe grabbed her huge round muscular ass and dragged her hips to his chest. Then he latched his lips on her left nipple. Her breasts jutted so far off her chest that it fell into his mouth naturally. \n\nAs he teased the nipple he hefted the pendulous weight of the breast. The boob was so big that the bulk of it still hung out past the edge of his hand. \n\nShe uttered a loud groan and threw her head back overwhelmed by sheer lust. He was pushing his pants off as he worked the nipple with his lips. She was making rhythmic ugh-ugh-ugh noises as he nursed that swelling red-hot nub.\n\nMarigold was on fire. In her entire and very extensive sexual history she had never been so turned on. Jordan had shed everything but his shirt and she looked down to see the largest and most delicious cock she had ever beheld. It was sticking straight up in the air and it was waiting just for her. She thought happily to herself, \"What a wonderful bonus!!\"\n\nShe needed him inside her so badly that it was painful. That was another new experience for Marigold. She was always in control when it came to deciding when things would happen \u2013 not the cock crazed slut that he had turned her into. \n\nShe was standing between his spread legs, with her hips plastered against his chest, while she humped him like a demented terrier. He was sitting on the bed. She hastily hopped up on the bed, straddled him and inserted that delicious cock directly into her white hot passage. \n\nShe was totally, inarticulate by the first four inches, making odd gasping noises and hugging him to her chest so tightly that it was like she was cemented to the front of him. The next four inches nearly killed her. And THEN there was the final inch and a half. That put her into an absolutely brave new world of wild cries, frantic bucking and hyperventilating. ",
        "She must have cum twice while he was moving up into her and he hadn't actually started fucking her yet. Then he hit bottom, which opened up places inside her womb that had rarely been visited. She shrieked in reaction to that outrageous sensation.\n\nThen she leaned back and put her hands on his knees as she ground her clit into him. That set off more moaning and hyperventilating on both of their parts.\n\nJordan was watching those huge tits shaking in a dozen different directions as she ground on him. She was making savage groans and cries, like he was killing her. Her eyes were screwed shut and the expression on her face was intense passion. She was so wet that he could feel her juices dripping on his leg. \n\nThen time stopped. She opened her eyes. She focused intently on him. And everything seemed to freeze. Jordan could see the incredible strength, courage and essential wisdom in those eyes; as well as a more important thing. \n\nFor the first time in her life Marigold showed a man something that she had always kept locked away in her secret soul. \n\nIt was only for ONE special man. And she shared it with Jordan. \n\nIt was the true vision of her steadfast loyalty and her absolute commitment to the person she loved. That commitment drove her incredible life-force and it was something that would make her the most devoted and finest companion that a man could ever have. \n\nHis deep-set brown eyes were wide open to her and she was reading him with her special intelligence. It let her see the man underneath. \n\nJordan was kind and gentle to the core of his soul. Yet he was fearless, tough and steadfastly brave. \n\nAnd Marigold knew in that instant that she was Jordan's woman and he would be her man. It was astonishing really. Marigold had no interest in marriage and hitherto no interest in coupling up with one man. \n\nYet with absolutely no planning or forethought it had all dropped into place. And the earth unmistakably moved for her.\n\nJordan couldn't believe what was happening to him. The most beautiful woman in the world was straddling him, writhing her huge red hot boobs across his chest and moaning like a wild animal. Her face was screwed up in a frown of effort and she was whipping her hair back and forth in a frenzy.\n\nHer moaning and cries were frantic with her need. Then she started with, \"Ahhh I'm cumming \u2013 don't stop \u2013 don't stop fucking me... Almost there, YES!! MY GAWD YEEESSSSSS!!\" \n\nThere was a sudden violent shudder that sent her huge tits flying in different directions. Her eyes rolled totally up in her head and she threw herself against him knocking him flat on his back on the bed. \n\nShe lay on top of him shuddering. While her passage was in such a state of agitation that it would have made the whirlpool monster Charybdis jealous. \n\nThe sheer sensation set Jordan off in an ecstasy of cumming. And he indeed felt like the earth moved.\n\nThey lay there for a long while getting their wits back. Then she rolled off him and lay back on the bed. \n\nHe turned toward her, still gasping for breath. She had one arm over her eyes and her huge tits were rising and falling like Atlantic waves during a hurricane. Her big brown nipples were still rigid.\n\nFinally, she moved her arm uncovering her eyes. She looked at him with sheer adoration. She said with a little smile, \"Did you feel it this time? Do you understand it now???\"\n\nHe said, \"Yes my love I felt it. And I understand.\" \n\nAnd Robert E. Lee Jordan, nowhere man extraordinaire, finally knew what yoked together for life meant. And he knew that there would never be any other woman but Marigold. \n\nThey talked about their future for a long time afterward. That was a miracle in-and-of itself since Jordan sincerely believed that expressing feminine things such as feelings was a sign of weakness. But this woman was like an extension of himself. \n\nDuring that discussion Marigold was holding a lot of her story back. It wasn't that she wanted to be deceitful. But she simply didn't want to reveal the extent of her wealth and power. \n\nShe didn't want to lose him. So she was waiting to ensure that they were totally bonded to each other. THEN she would navigate those potentially troubled waters. \n\nAnd after all \u2013 they DID have to save twenty-two million souls before breakfast tomorrow. So the details of their wedding could wait.\n\nThey walked through the lobby to the van at exactly 19:45. Marigold had changed into the short white skirt and blue scoop necked sweater he had bought her. She looked like a hot preppie wife going out for an evening of sight-seeing. \n\nThat was a sea change from the dirty, bedraggled, mutt that had limped through the same lobby a mere 19 hours earlier.\n\nWhen they got to the van, Jordan unlocked it and took Buster for his evening constitutional. He filled Buster's dog bowl with food and the water dish with bottled water from the room. \n\nJordan had given Marigold her tac-gear to change into, while Buster finished his evening meal. It wasn't the same situation as last night but Jordan still thought she would want some privacy as she tried on her new unfamiliar clothes.\n\nBut of course \u2013 Marigold Wilson was an eternal source of surprises. \n\nThe woman who emerged from the van was a Viking Shieldmaiden. She was wearing the all-black mesh light absorbing gear with a tac-belt and a K-Bar stuck in a sheath under her left armpit. She was wearing black assault boots with the pants bloused into them like an airborne trooper. She looked so at ease and lethal that Jordan wondered whether she had done something like that before. \n\nJordan changed as well and then they sat in the truck and waited. All they could hear was Buster's loud panting in the back. \n\nFifteen minutes passed and Jordan was starting to get worried. He picked up his phone and dialed Pilar. There was no answer. Now he was very concerned.\n\nHe waited fifteen more minutes. He couldn't delay any longer. The birds were inbound and he had to be at the location to manage the op. \n\nHe called Bernie. When Bernie answered he said trying to disguise his worry, \"We have a problem. Pablo and Pilar have dropped off the face of the earth.\" \n\nFor the first time since Jordan had known him Golz lost it. He said, \"I knew it!! They're going to blow this to the Cartel. Can we move this instant? It's our only chance.\"\n\nJordan looked at Marigold. She nodded a simple and very determined, \"Yes.\" \n\nJordan laughed and said, \"It's just Mary and me and the dog. The evil doers don't stand a chance!!\" \n\nHe added, \"I'll call you when we get on site.\"\n\nA half hour later Jordan was lying on a little dirt hill looking down at the abandoned factory that housed the bomb. Marigold was lying beside him with a pair of night binoculars trained on the building. \n\nIt was deep twilight. And in their light absorbing outfits with the balaclavas on they were almost invisible against the ground. \n\nShe whispered, \"There are three men guarding the door. They are all holding some kind of rifle.\" Abandoned factories don't have armed guards. This was definitely the place. \n\nJordan was spliced into a satellite communications link with the two incoming helicopters. The Pave Hawk with the Deltas would conduct the strike. The Pave Low would do the heavy lifting. He was vectoring them in to the place where he wanted them to land using the BTID to triangulate the exact spot. \n\nThe plan was simple enough. But it would have to be choreographed to the second. The Reaper would eliminate the people standing at the door and the eight-man Delta team would be inside before the shock and awe of the Hellfire strike had subsided. \n\nThen they would secure the bomb. And the MH-53 would fly it out. Done right this would all take less than five minutes.\n\nJordan muttered, \"Alpha\" into his headset. He heard a terse \"Zulu\" and the front of the building erupted in a maelstrom of fire. The three men standing there just vaporized. And the Pave Hawk appeared out of nowhere. \n\nWith all of its stealth gear on-board that bird is as close to the legendary \"Black Helicopter\" as any conspiracy theorist's wildest dream. It had been lurking a few hundred feet above the building and Jordan hadn't even known it was there.\n\nThe Deltas bailed out before the Pave Hawk landed and there was the sound of a short firefight inside the building. The MH-53 appeared as that was happening. It hovered 20 feet above the ground. \n\nThe Deltas exited the building wheeling a long cylindrical object on a self-propelled dolly. There was a short period while the object was hooked to a cradle that had been lowered from the MH-53. It was drawn up to rest underneath that helicopter and just as quickly as it appeared the Pave Low disappeared. \n\nMexico City was officially safe from nuclear annihilation.\n\nAs that was happening Jordan said, \"This is it!! Run for the helicopter!!\" And he and Marigold and the dog sprinted down the hill. \n\nBuster, who really hated loud noises beat them by a full fifteen yards. \n\nThe Crew Chief pulled Marigold and Buster up and then he reached for Jordan.\n\nJordan was always a cautious man. So he looked back. He was glad he did. Because there were perhaps 20 men headed in their direction. \n\nPablo had earned his thirty pieces of silver. The Cartel was coming.\n\nThat really didn't bother Jordan. He was one step away from being airlifted out of harm's way. \n\nThen he saw it. And it horrified him. \n\nOne of the men was just taking a Russian SA-14 Gremlin out of its transportation case. The Pave Hawk would be a sitting duck for that shoulder filed missile. \n\nAnd that meant that in the next several seconds the woman he loved was going to die. \n\nJordan didn't really think about it. He just did what he had to do. He stepped off the landing skid and said in a determined voice, \"Toss me a rifle.\" \n\nOne of the Deltas tossed him his Sig CQB. Jordan banged the side of the helicopter and yelled, \"Get her out of here.\" \n\nThe Pave Hawk lifted off like a skyrocket. As it did Jordan turned and marched determinedly back up the hill. \n\nThe last thing Jordan heard was an agonized shriek of \"NO!!\"\n\nJordan had serious business to attend to. He ran several yards away from the rapidly ascending helicopter. As he did he emptied the Sig's clip on full auto. \n\nThe man with the SA-14 must have fired. But as he did, a firestorm of 7.62 caliber rounds ripped into him and he crumpled forward. The rocket left the tube and traveled approximately four feet directly into the ground where it exploded, killing everybody around him including Pablo. \n\nJordan was lying flat on his back at that point. He had been hit by a number of rounds fired by the Cartel's people. And he knew that he was going to die. \n\nBut he DID see the Pave Hawk disappear into the night above him. And he knew that she was safe. \n\nThen a feeling of absolute peace and serenity descended on him. And for the first time in his life he was perfectly calm and at ease. Marigold was safe and his life finally had meaning. \n\nEpilogue \n\nPilar had finally worked her way out of the duct tape. She was free now. And she knew what she had to do. \n\nIt was her fault - really. The cabron had gotten behind her as they entered the room and knocked her out with the sap that he always carried. \n\nShe had awakened to discover that she was bound naked to a chair with duct tape and had a ball-gag in her mouth. \n\nThe fat fucker was sitting in front of her with a triumphant leer on his face. \n\nHe said teasingly, \"So you were going to stick a knife in my ribs my little puta?\" \n\nAnd he reached out with one hand and gently rolled one of her huge brown nipples. Then he pinched it with all of his strength. If she had not had the gag in her mouth the shriek would have been heard all over the hotel.\n\nHe said with glee, \"I just talked to Berrendo and they are going to pay me a whole lot of gringo dollars to give up that perra perejil. I also mentioned that they might want to bring along a few of the Bandello's to fuck up Jordan and his plans.\"\n\nThen he stood like he was late for an appointment. He said merrily but with a sneer, \"Got to go now.\" \n\nThe look of hatred that flashed across his piggy features told Pilar everything she needed to know about the real Pablo. \n\nShe had been on the streets when he had taken her under his wing. And she felt like he must have some feelings for her. His beatings were nowhere near as brutal as those of her father and his friends. \n\nBut underneath she knew that he was just using her. \n\nOn the other hand, Jordan had always treated her like she was a person, not a barrio mujerzuela. And she loved him in her own way. She was going to warn him. Even if she had to lose every inch of skin underneath that tape.\n\nPilar was very strong. Heredity and a life of hardship had ensured that. And it took destroying the chair by jerking on the frame to get the tape lose enough so that she could get herself free. \n\nShe was bleeding at her wrists and across her chest and legs but it was nothing serious. She was used to pain.\n\nShe dressed quickly. She knew that she wouldn't have a car. Pablo would have taken THAT. \n\nBut one of her many cousins lived nearby. And she called her. That was how poor people got around.\n\nThe panicky trip to the site was in the darkness of a Mexico City twilight. It was in her cousin's broken-down, ratty old Ford. And it was nerve wracking. Especially, when Pilar knew what was going to happen there. \n\nIt sounded like World War III broke out as they approached. First there was a loud explosion. Then the rattle of automatic weapons. \n\nPilar jumped out of the car and ran toward the sound. She had no fear of bumping into Cartel soldatos. She had probably fucked half of them. \n\nBut she was concerned about Jordan and Marigold.\n\nAs she crested the hill she could see a helicopter just lifting off. Then she saw Jordan running away from the safety of the machine. \n\nHe had a rifle with him which he emptied into a man who had just placed an odd looking tube on his shoulder. \n\nPilar recognized the man. He was Paco Berrendo, Moro's lieutenant. Berrendo fell forward as Jordan's bullets ripped into him and something exploded. \n\nPablo and several others disappeared in the flash and fireball. Pilar felt both grief and satisfaction at that sight. \n\nJordan was now standing alone holding an empty rifle. And he was facing twenty or so gang members. \n\nA hail of bullets cut him down. \n\nPilar shrieked in agony. But her cry wasn't heard. That was because, at that instant the very earth opened around the men shooting at Jordan. And it seemed like hellfire itself rained down from the heavens. \n\nThe impact and heat of the thunderous concussions knocked Pilar to the ground. And the overwhelming noise curled her into a fetal ball. The utter silence that followed was deafening. \n\nShe raised her head to look at where the Cartel soldiers had been standing. All she could see were craters and smoking ruin. \n\nAnd the distant wailing of sirens was all she could hear. \n\nPilar was a tough Barrio Chola. Nevertheless, she ran sobbing down the hill toward the recumbent body of Robert Jordan. \n\nHe was bleeding and he looked dead. She didn't know. What she DID know, was that she had to get him out of there before the police arrived. \n\n\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013 \n\nMarigold's Lear touched down at MEX exactly 12 hours later. The Marigold who emerged was the original irresistible force. She had a younger woman in tow.\n\nThey hurriedly got into a waiting Humvee, while another man emerged from the Lear. He looked and carried himself like a high priced lawyer. He went about handling the entrance paperwork. Meanwhile, the Humvee had motored off without pausing.\n\nThe first sight that Jordan got of heaven was an angelic face beaming down at him. He hurt everywhere, which didn't make sense. Unless he had ended up in that OTHER place. \n\nBut that had been the face of a celestial being. So he was pretty sure he had landed in the right spot.\n\nThen he drifted off. When he awoke again he was feeling a little less fragile. He became aware of the chirping going on around him. \n\nHe looked to one side. He saw \"American British Cowdray Hospital\" on a monitor next to his bed. \n\nHe thought, \"Wait? Is this a hospital??!! I'm not dead???!!\" \n\nThe monitors began to chatter and a nurse rushed in. She saw that he was awake. She walked over to the bed and said reassuringly, \"I'll get your doctor.\" And she exited quickly.\n\nThen a tall lissome woman sauntered in. She was dressed in the classic doctor scrubs. She walked unhurriedly up to Jordan studying him in that detached clinical fashion that doctors use. \n\nShe was young and absolutely gorgeous. But that was not what Jordan noticed about her. It was the sense of calm, self-contained confidence, and capability that she just radiated. \n\nHer name tag said that she was Millicent Butler MD ABS. But in fact, she was better known as Marigold's little sister, Millie. \n\nShe had all of Mary's beauty. But she had none of her worldly air. In fact, Millie seemed almost girlishly innocent.\n\nMillie smiled kindly at him. She said, \"You were wounded in five different places. Three of them were relatively superficial but one went through your upper lung and another nicked your femoral artery.\"\n\nShe said with supreme confidence, \"You are going to make it but it was touch and go for a while. I had to open you up a couple of different times to seal off new bleeding.\" \n\nShe added \"If it were not for the woman who got the tourniquet on your leg and rushed you to the emergency room, you would have bled out. You owe her your life.\"\n\nJordan knew how much the entire nation of Mexico owed Pilar. And he was going to make sure that she lived the rest of her life as a very rich and well honored woman.\n\nThen SHE appeared. The look of adoration was worth all of the pain. \n\nShe said, \"I'm sorry I wasn't here when you woke up. But I had to handle the details of your transfer. I want to take you to my villa in St. Lucia to recover. Millie will handle your care there. She is an internationally known trauma surgeon.\" \n\nThen she walked to the bed and took Jordan's hand. She brought it to her mouth and kissed it. \n\nShe added with a sly wink, \"I want you to make a quick recovery. Because we have a wedding to plan.\" \n\nAnd Robert Jordan - former lone wolf and dyed-in-the-wool nowhere man - just smiled back at her. Two of the most unlikely people on earth had found each other."
    ],
    "authorname": "dtiverson",
    "tags": [
        "hot woman",
        "nerd",
        "kidnapping",
        "espionage",
        "technology",
        "warfare",
        "big tits"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/for-whom-the-bell-tolls-1"
}