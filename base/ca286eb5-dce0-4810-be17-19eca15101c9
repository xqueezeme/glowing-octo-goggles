{
    "title": "Video Chat Slut-in-Law",
    "pages": [
        "The sound of my wife, Jane, talking in a soft whisper woke me from a deep sleep. I stirred and looked at my phone to check the time \u2013 7:12 \u2013 way too early to be up on a Sunday morning. Though I initially thought she might be talking to me, listening for a moment she was actually on a phone call. I couldn't help worrying that something might be wrong, because I couldn't for the life of me understand any other reason for a call at such an obnoxious hour.\n\n\"Who the hell are you talking to? Is everything OK?\" My back was to her, and the shaded room was still just dark enough for me to see the glow of her phone screen.\n\n\"I'm sorry, babe. It's Stephanie. She really needed to talk.\"\n\nI rolled over to keep from talking back over my shoulder. \"Your sister doesn't get up before noon on Sunday. What's different about today?\"\n\n\"Love you, too, Steve!\" I heard from the tinny speaker on the phone. \"And for your information, I'm not getting up. I'm just getting in. Unlike you old married people, some of us out there can still hang.\"\n\n\"Dear Lord,\" I muttered as I slid from under the sheet. I'd suddenly realized how bad I had to pee, and being semi-rigid was the only thing keeping urination at bay. Unfortunately, there was no way to hide my partial erection forming a tent pole in the loose cotton shorts I wore. \"I'm going to run to the bathroom.\"\n\n\"Aw, Steph, you're missing the march of the morning wood,\" Jane giggled to her sister. \"Too bad it'll be gone when he gets back.\"\n\nThere was a moment of silence as I closed the door, during which I figured her sister made some smartass response. \"You're terrible!\" I heard Jane squeal. \n\nIt had been a long week for both of us, and this was our only real day off together, so after finishing up at the toilet and washing my hands, I made sure to swish a little mouthwash around to get rid of lingering morning breath in case things moved along in a better fashion. Being awaked by my wife and her sister chatting about my sister-in-law's night out wasn't exactly what I'd had in mind, but I was willing to improvise.\n\nThey were still talking as I climbed back into bed, but I was trying not to pay any attention.\n\n\"Oh, look who's back!\" Stephanie said as I slid under the sheet next to my wife. It was only then that I peeked over Jane's shoulder to see that they'd switched from a voice conversation to video chat. Dear god.\n\n\"I see you took care of that morning wood. Did peeing do the trick or did you take a minute to rub one out while you were in the bathroom?\"\n\n\"Shut up, Stephanie,\" I said as pleasantly as I could. I closed my eyes and figured that at this point I might at least snooze through their conversation and convince Jane to join me in some fun when she was finished.\n\nThat didn't look like it was going to happen anytime soon, though.\n\n\"So, anyway, we were kissing like crazy just outside the restroom of this bar, and, I swear to god, he latches onto my neck like a vampire, just sucking like crazy. And then I home this morning and I see this.\"\n\nOK, so I was curious. Who wouldn't be with a lead up like that? So under the cover of adjusting my position, I eased up on one arm so I could just see Jane's phone screen. On it, Stephanie was on her bed, leaning in and pulling her shoulder-length black hair away from her neck to reveal an inch-wide hickey.\n\n\"Oh, my god. What is he, 15? Who does that?\"\n\n\"I know, right?\"\n\nI couldn't help but notice that Steph was still obviously wearing the tiny black cocktail dress she'd probably worn all night, and the way she leaned into the phone to show off the love bite, combined with the low cut of the dress, inadvertently gave me a great view of her abundant cleavage. As she pulled the phone away, I also caught a glimpse of the lace tops of thigh-high stockings where the hem of her dress rode up. I raised my eyebrows in appreciation. That was certainly more than I'd expected from her early morning debriefing.\n\nI settled back in and tried to sleep, but the quick glimpse and the talk of her exploits the night before got me thinking about what a flirt Steph had always been. When Jane and I were dating and Steph was still in college, she was always finding reason to poke fun at me or us, and after a few drinks would frequently find excuses to casually touch me here and there. The most blatant example was at the rehearsal party for our wedding, when Steph, about three drinks in by that point, stepped up behind me, cupped her hand over my ass and asked, \"Are you going to mind if I do this after you're married, or is this my last chance?\"\n\n\"Well, I mind right now, but I'm not going to make a scene,\" I'd told her, smiling and taking a long pull at my beer bottle. \"Let's just say you don't worry me too much.\" I was trying to play it cool without encouraging her. She'd kept her hand there until one of their uncles approached to wish me congratulations and tell Steph how good she looked. And pain in the ass or not, she had looked stunning. The dress was just long enough to be appropriate, but still short enough to be daring, and the neckline plunged to reveal a stunning view of her ample cleavage, emphasized by what I suspected was an expensive and elaborate push-up bra. The funny part was I'd known exactly what her motivation for getting the dress was. While her sister would be the center of attention on the wedding day, Steph was determined to have as many eyes as possible on her at the rehearsal dinner.\n\nLater, when I'd had a chance to process what had happened, I realized how truly forward she'd been \u2013 drunk or not. But there was no way I was going to follow through, so I just wrote it off as tipsy flirting from the maid of honor. And honestly, she was such a spoiled pain in the ass most of the time that the incidents didn't even add fuel to my fantasy life.\n\nIt wasn't until Jane's laughter woke me that I realized I'd dozed off.\n\n\"Seriously? In the stall? When did you get to be such a slut?\"\n\n\"Swear to god, this was the first time I'd ever done that. Not sure if it's going to be the last, though. That was pretty hot.\"\n\nBoth of them laughed again, but I wasn't going to ask for clarification about why. I'd heard enough to get the gist. I shifted again, draping my arm over Jane's waist and snuggling in closer. It was only with the pressure against her body that I realized I was now fully erect, with no impending trip to the bathroom to use as an excuse. \n\nNow, what the hell am I supposed to do with this? Jane's on the phone \u2013 with her sister, no less \u2013 and I'm rock hard next to my wife in bed. It was too late to cover by rolling over, so without any other viable options I figured I'd just go with it and see what happened.\n\nI shifted again, pressing my shaft against Jane's cotton panties as I moved my arm to lightly graze her full breast and then let it settle, gently cupping her over her t-shirt. She made a startled noise that might have indicated frustration but didn't seem designed to dissuade me.\n\nSteph paused in the middle of her lurid story. \"What's the matter?\"\n\n\"Nothing. Just got a chill is all. Keep going. This is pretty hot.\"\n\n\"Is Steve still sleeping? I could hear him snoring a minute ago.\"\n\n\"Back out like a light,\" Jane lied. \"He just shifted into one of the few positions where the snoring doesn't make him sound like a wood chipper.\"\n\nIn retaliation, I thrust my cock gently toward her and grazed its length over the backside of her panties. She responded by clenching her thighs and shoving backward with her ass. That move was definitely designed to tell me to cut it out. Fortunately for me, I had her in a bit of a corner. She was lying on her right arm and using her left to hold the phone, so there was no functional way she could shove me off without giving away what was going on.\n\n\"Swear to god, I don't get why you don't just smother him with a pillow sometimes. That snoring would be a deal breaker for sure.\"\n\n\"Hey, it's not so bad. Plus, I'm used to it. And he manages to make up for it with the other stuff he does in bed.\"\n\nThat's more like it, babe. For that she earned a light stroke over her nipple. She didn't seem to mind. I continued and felt it harden at my touch. She snuggled a little closer.\n\n\"Ew, TMI. The last think I need to know about is old married people sex. So, anyway, it all happened so fast. He's sucking on my neck and his hands are all over me. At first I was worried that there were people around, but everyone going in and out of the restrooms just ignored us. But it was super-hot feeling like we were being watched. I think that's what got me so horny. Who knew I was like, this secret exhibitionist?\"\n\n\"Please. It was never a secret. Remember when you wore that tiny little bikini to the River Festival and started demanding people throw you Mardi Gras beads to see your tits?\"\n\nI remembered. Jane and I hadn't been there, but the story had become legend. She never did strip, of course, but the image of her doing so was planted in lots of minds \u2013 and on quite a few phones \u2013 that day. I took that moment to grind my hips against Jane's crotch again, then decided to take things a step further. Being careful not to get myself in the video chat shot, I lay on my back, shimmied out of my shorts and deposited them off the side of the bed. I resumed my position, this time boldly sliding my warm hand up Jane's nightshirt to directly cup her breast and rub the palm over her still erect nipple.\n\n\"Yeah, yeah. That doesn't really count, though. I was just teasing. This was full-on making out and getting felt up in front of a bunch of strangers. So, while our mouths are locked together, I feel his hand going up my dress. On one hand, I'm like, 'What the hell?' But on the other hand, there's this little voice in my head saying, 'Just go with it!' I was pretty wet by that time anyway, and all of a sudden I really wanted to get off.\"\n\n\"Is that when you pulled him into the ladies' room?\"\n\n\"Hell, yes! I had to have something \u2013 his fingers or his mouth or cock. I really didn't care at that point.\"\n\nI'd been stroking her breast and grinding my cock against her crotch during this whole time, and I was enjoying the enthusiastic \u2013 if silent \u2013 response I was getting. Jane ground her ass back into me with a delicious gyrating motion, obviously giving in and enjoying this game.\n\n\"Hold on a sec, Steph. I need to switch position. My arm's falling asleep.\"\n\nI closed my eyes and pretended to be out as Jane moved onto her back, simultaneously kicking the covers off and spreading her legs. With her free hand, she pointed to her panties, then hooked a thumb toward the side of the bed as if to say, \"These need to come off.\"\n\nI was happy to oblige. Jane had the phone held on her chest so only her face and her pillow were visible, so I was no longer worried that I'd give myself away by being in the shot. Up on my knees now, I caught the waistband of her panties and pulled as she lifted her ass off the bed to ease their removal. Her bush was neatly manicured for bathing suit season, leaving just a narrow strip and completely smooth around her labia, and her bikini tan lines were still visible from our Memorial Day beach vacation a few weeks earlier.\n\nUnlike her sister, Jane wore her dark hair in an almost boyishly short cut that for some reason drove me crazy. She started to drive me even more crazy as she ran her middle finger down over her now pouting, moist pussy lips, slipped it just inside, then pulled it out to offer to me.\n\nI leaned forward and licked her fingertip, then pulled it all the way into my mouth to savor her taste. Seeing her laying there inviting me to please her was almost hotter than I could handle. I breathed in the scent of her arousal, then lowered myself over her pussy.\n\n\"You good now?\"\n\nJane sighed contentedly. \"Much better. Keep going.\"\n\n\"So, the handicapped stall was empty, thank god, and as he slid the latch I was already stepping out of my panties just to make sure he could get direct contact, like, right then.\"\n\nI took that as the perfect moment to give my wife a long, slow lick from her asshole all the way up to her clit. She shuddered and clenched my head with her thighs.\n\n\"Oh, my god,\" Jane moaned, more in response to me than what her sister was saying, I guessed.\n\n\"I know, right? So, he turns around and sees me with my skirt up and my pussy out and immediately gets on his knees and goes down on me, which was a total shocker but I wasn't complaining. I throw one leg over his shoulder and grabbing his hair and pushing him in deeper, and he's just going to town on me.\" \n\nI took that as my cue to do the same. Jane was already wet and open for me just from the combination of her sister's story and my attentions. All I had to do was take advantage of it. She draped her legs over my shoulders and let her ankles rest on my back. I leaned in and teased her at first, flicking my tongue lightly over her parted lips, then plunging inside her to thrust like a tiny cock. Her hips squirmed and bucked and she gasped audibly. \"Was he good?\"\n\n\"He was awesome, but I think I was a little loud. People started banging on the stall door and yelling from across the restroom. But at that point I really didn't care, I just had to get off. So, I let him up and turned around with my ass toward him. Without a word, he unbuckled and whipped it out.\" \n\n\"Was ... he ... big?\" Jane's words were catching in her throat now as her own orgasm approached. Steph was going to be onto us soon. I needed to finish. I licked faster, then moved up to her swollen clit, circling it with the tip of my tongue. \n\n\"Big enough. And I was so ready it probably wouldn't have mattered. He grabbed my hips and slid right in all the way to the balls ...\"\n\n\"Oh ... yeah!\" Jane interrupted. She was losing the ability to cover now. I kept going, teasing her clit, then sliding a finger inside her. \n\n\"Jane, you OK?\" \n\n\"Oh ... Jesus! I'm fine.\" Her hips were bucking in my face now as she struggled to hang onto the phone with one hand and claw at my hair with the other. I gripped her hips tightly to keep my mouth on her pussy as she thrashed. \n\n\"Wait? Are you getting off over there? What the hell?\" The woman who was just giving us an explicit account of her dirty restroom fuck was suddenly getting offended. Nice. \"Please tell me you're not touching yourself right now.\" \n\n\"Not ... me. Ah, GOD!\" \n\nI looked up and saw Jane press something on the phone. It wasn't until I heard Steph scream that I realized Jane had changed the camera from facing herself to facing outward, revealing me with my face between my wife's legs to her little sister. \n\n\"STEVE! Is he going down on you? Oh, my fucking god, you two! This is so nasty!\" \n\nI looked right in the camera, pulled my glistening middle finger out of her sister, then used it to flip her the bird. As she watched, I took the same finger and slipped it back inside Jane's pussy, finally pushing her over the edge. With her free hand, she grabbed a handful of hair to keep me in position. \n\n\"Don't stop ... right there. Yes, baby. Lick that pussy. Make me cum!\" \n\n\"Holy shit, guys. This isn't funny.\" Steph seemed less upset suddenly. Just then, Jane's whole body tensed up as she thrust her pussy into my face and moaned like she was being tortured. I love that sound. A high-pitched gasp and pleading whine followed, her pussy thrusting up against me. After a few seconds, she relaxed and ran her free hand up her body, cupping a breast over her t-shirt and tweaking the nipple. This sent tiny little shock waves through her as I continued to slowly tongue her labia. \n\n\"Jane, did you just cum? Fuck, that was fast...\"\n\nJane was out of breath, her chest heaving as she lay there with her eyes closed. \"Oh, my god ... He always does it to me that fast.\" She laughed. \"How's that for old married people sex, bitch?\" \n\n\"That was totally unnecessary, Jane. I had no idea you guys were so gross.\" \n\nI took the phone and switched the camera around again. Steph was flushed and touching her neck with her fingertips. \"Gross? What's the matter, Steph? You can give it out but you can't take it?\" \n\n\"No, I ... I just... Steve, what the fuck?\" She seemed less upset and more confused, like there was no way this could ever be happening. \n\n\"Fucking is exactly what's going on. I figured since you were disturbing my morning and getting in the way of my plans to fuck my wife, I'd move ahead regardless. Want to see what your little story caused?\" \n\nI switched the camera direction again and aimed the phone down at my fully erect cock, giving it a few strokes to keep it nice and hard for her. \n\n\"Jesus, Steve. That is totally uncalled for.\" Her expression was a mixture of horror and excitement. I figured she'd always pegged me as a wet blanket or Jane's doormat and was shocked by the person she was seeing now. \n\n\"It's absolutely called for. You call us up with a hot story like that first thing on a Sunday, then tease me about my morning wood, what do you expect? Now you get the full wood.\" Then I shifted position, placing myself between Jane's legs with my cock hovering just over her pussy. \"So, what were you saying about this guy fucking you?\" \n\nWith that, I pushed my hard member into my wife's moist opening, holding the camera so Steph could see everything. Jane moaned. \"Oh, yes, baby. That's what I needed. Give me that thick cock. Fuck me ...\"\n\nSteph gasped. \"No. No, I can't do this,\" she said as she watched my cock thrusting in and out of her sister. But that's the thing \u2013 she was still watching. \n\n\"If you really couldn't do this, you would've hung up by now. So, tell us, what happened after he slid his cock inside you from behind.\" \n\n\"I can't now. Jesus, you guys. Cut this out. This isn't funny.\" \n\nI aimed the camera back at Jane's face. She was watching me with a lascivious grin. \"Tell us, Steph,\" she said between gasps. \"I like hearing about it. Tell me about him fucking you.\" \n\nShe bit her lip and paused. \"Well, um, he pushed my dress up almost all the way, so he could reach my tits over my bra.\" \n\n\"I bet you liked that,\" I said. \"Did he pinch your nipples?\" With that I reached up with one hand and gave Jane's nipple a light pinch through her t-shirt, holding the camera so Steph could see. Jane closed her eyes and arched her back as I continued to fuck her in long, slow strokes. \n\n\"Yes, baby. Fuck that pussy,\" Jane moaned. \n\n\"Yeah,\" Steph said, her eyes fixed on the screen of her phone. \"I liked it a lot. I like when a guy's a little rough, pinching them and biting them.\" \n\n\"Oh, naughty girl. I bet you're wet right now just thinking about it, aren't you?\" \n\n\"Shut up, Steve. God, you're such a perv. I had no idea.\" \n\n\"Well, you know now. So? Tell me.\" \n\n\"A little wet, yeah.\" \n\n\"Liar. You're soaked, thinking about your nightclub bathroom fuck and watching me lick and fuck your sister's pussy. I bet you never even got your panties back, dirty girl. You so want to touch yourself right now.\" \n\n\"Stop, Steve.\" She tried to sound serious and all business, but she still hadn't looked away. \n\n\"Touch it. Do it now. I'm going to fuck your sister until she cums, and I want you to cum for me, too. Jane, sweetie, pull your shirt up so your sister can see your tits.\" \n\n\"Damn it, Steph, do it!\" Jane cried out as she yanked her shirt over her head. \"Oh, my god, this is so hot. Keep fucking me, Steve. Make her cum for us!\" \n\nJane was now fully naked, her hands running over her nipples, tweaking and stroking them as I slowly slid my cock in and out. Steph leaned forward and placed the phone against the foot of her bed, giving me a full view of her morning-after dishevelment. She got on her knees and pulled the dress over her head, and just as I suspected she wore no panties. She reached around her back, unfastened her black lace bra and threw it to the side. Her figure was similar to her sisters, except where Jane's tits sat upright and perky, Steph's breasts were a bit fuller and softer looking. Her dark nipples were taut with her arousal. ",
        "\"There. Is that what you wanted?\" She sounded put out, like I was somehow forcing her. She knew better, though. \n\n\"Yeah. Now lay back.\" She followed my instructions, reclining on the pile of pillows behind her. As she did I switched the camera view back to where we could see her on the screen and leaned over to prop the phone up on Jane's bedside table, giving Steph a full view of the action, us a view of her and freeing both my hands. \n\nIt was the first time I ever thought of Steph looking completely ravishing and sexy. Up until then she'd always been my wife's annoying little sister who happened to look good. Her straight black hair fell just over her tan shoulders, and where Jane was shaved to a narrow strip, Steph was completely smooth. Her mouth parted in an ecstatic \"O\" as she stroked her nipple with one hand and let the other trail down to between her legs, on which she still wore the lace-top thigh-highs. \n\n\"Touch yourself for us, Steph. Rub that pussy till you cum,\" I said. \n\nAs I fucked her, Jane turned her head to watch while stroking her tits. \"Oh, my god, that's so fucking hot. You look so damn good, Steph.\" \n\n\"You guys look pretty hot, too,\" my sister-in-law said. She stroked small circles around her clit as she watched. \"Is this how you always do it?\" \n\nI eased back a moment so Jane could answer. \"Normally I would have already sucked his cock, or maybe we would have done a 69 by now. I love having his mouth on my pussy while I suck is cock. \n\n\"Mmmmm.\" Steph rubbed faster and bit her lip. She was getting close, too. \n\nI could tell Jane was primed for another orgasm, so leaned in and pushed her knees back, opening her pussy to me even more, then leaned down to push her hands out of the way so I could suck a nipple while I ground against her clit, my cock deep inside her. \n\n\"Oh, my god, Steph. He's in so fucking deep. He's grinding my clit with the base of his cock. Jesus, I love that. Fuck!\" \n\nSteph had yet to break eye contact with the screen and was rubbing herself more vigorously now. \"Do it, Steve,\" she commanded. \"Fuck her. Make her cum!\" \n\nI could feel Jane's pussy clenching as she neared her climax. \n\n\"Are you going to cum for me, baby?\" \n\n\"Oh, yes ... so close!\" \n\n\"Yeah, baby. Let your little sister see you cum. You know you want to.\" \n\nShe was totally lost for words at this point, only urging me forward with a familiar series of whining pleas. I turned my eyes to the phone to watch Steph, who had spread her legs even father and was now fucking herself with two fingers of one hand while rubbing her clit with the other, her eyes still locked on the screen showing Jane and me. \n\n\"Do it, Jane. Fuck him. Cum ... Ah, fuck!\" She was cumming, too. \n\nJane froze, her entire body locked in an uncontrollable shudder as she came on my cock, her pussy muscles tightening around me. On the screen, Steph had clenched her knees together, her hand still over her pussy, as she, too, shuddered. Seeing her mouth forming a wordless circle and her eyes fluttering almost had me ready to cum, too, but I held out. \n\nJane slowly relaxed, her hands running up and down my arms as I propped myself over her, my cock still easing in and out. \"Oh, my god, baby! That was incredible! Did you cum?\" \n\n\"Nope,\" I said with a wicked grin. \n\n\"Holy shit. Here, lay down.\" I pulled out and complied. She sat up and continued talking to her sister while she casually stroked my length. \"Steph, remember that toy you bought for yourself when we went to shop for your friend's bridal shower \u2013 the big pink one? I want you to get that out.\" \n\nStephanie was operating almost as if she were in a trance by this point, her chest and neck flushed with her arousal and her eyes glazed over. I watched Steph reach into her bedside table drawer and pull out a lifelike dildo that must've been at least eight inches long. It had fake balls at the base and what looked like a suction cup at the bottom end. \n\n\"OK,\" she said, holding it delicately in one hand. \"Now what?\" \n\n\"I'm going to sixty-nine Steve, and I want to watch you suck that big cock while you touch yourself. I want you to imagine your mouth on his cock and his tongue on your pussy.\" \n\nSuddenly I was a little wigged out by how specific Jane was being with her sister. Had this come up before? Or had something been shared along the way that I was unaware of? \n\n\"Babe, are you sure...?\" I stammered. \n\n\"Oh, I'm sure. You're going to do exactly what I say, aren't you Steph?\" \n\nStephanie seemed to be regressing into a submissive little sister state that I'd never witnessed before. At this point I was guessing Jane could tell her to do almost anything and she'd agree to it. Steph just bit her lip and nodded her head in the affirmative. \n\nJane now had a leg draped over mine, the better to stroke my cock with her right hand while fingering her pussy with her right. \"Good girl. Now bend over for me.\" Steph complied, leaning forward on her knees. Her ass was visible behind her and presented a lurid image. She held her mouth just centimeters away from the tip of the artificial cock. \"Yes. Now, you remember how I showed you?\" \n\n\"Yes,\" Steph said, sounding even more girlish by the moment. \n\nThen I caught myself. Showed you? Jane had given her little sister cock sucking demonstrations? When the hell did this happen, and why had I never heard about it? \n\n\"That's right, sweetie. Don't touch it, yet. Just hold your mouth there until I tell you. Now, when I tell you I want you to touch yourself, OK?\" \n\n\"Uh huh. Can I suck it now, please?\" \n\n\"Suck what?\" \n\n\"This cock. Please?\" \n\n\"Who's cock, Stephanie?\" \n\nSteph closed her eyes and bit her lower lip. \"Steve's cock.\" \n\n\"Yes, you can. I'm going to suck it, too. I can't wait to taste my pussy off him. I want you to follow what I do. Here I go.\" \n\nJane gently kissed the head with just the slightest bit of suction, causing me to visibly twitch. She was going to tease me to the brink, I could already tell. Steph followed along, gradually working her way down the dildo with soft kisses as Jane did the same to my real cock. \n\n\"Mmmm, Steph, we're getting him very excited. I can feel his cock throbbing for me. Can you imagine that?\" \n\n\"Yeah,\" her sister sighed. \"It looks really nice.\" \n\n\"It is nice. It tastes nice, too. Do you want a lick?\" \n\n\"Yes, please.\" \n\n\"OK, just a tiny one at first.\" With that, Jen extended the tip of her tongue to just barely flick at the ridge at the underside of my cock head. I gasped as the delicate touch overtook me, then looked to the screen on the phone and watched Steph mimic Jane. \n\n\"Mmm, he loves that, don't you honey?\" \n\nI grunted in agreement, unsure of who I should be watching and still feeling a little odd about my role in this back-and-forth between my wife and her sister. \"Do you like watching your little sister-in-law pretend to suck on your cock?\" \n\nI gave her a look that clearly said, Is this a trap? She just grinned and nodded her head for me to answer. \"Hell, yes,\" I said. \"You're looking pretty hot, Steph. Keep it up. I bet you're really wanting to touch yourself again, aren't you?\" \n\nShe just groaned and rolled her eyes back. \"Yes! So bad. God, I'm wetter than before.\" \n\n\"Not yet, sweetie,\" Jane said. \"We're going to tease him a little more. Are you ready to suck?\" \n\nSteph nodded her head. Jane parted her lips and pushed them over the head of my cock, maintaining constant contact with the shaft as she went all the way down, stopping just an inch short of the base. Then, with a slow, twisting motion, she withdrew, maintaining gentle suction the entire time. I watched my wife for several strokes, then turned my head to see her mirror image in Stephanie. \n\nHer mouth still on me, Jane turned and lifted a leg over my face, her pussy in full view above me. Her mouth on my shaft felt delicious, and she rocked back on her knees to offer herself to my waiting tongue. The she released me with a slurp. \n\n\"Steph, I'm going to let Steve lick my pussy now, so I want you to reach back and touch yourself and imagine it's his tongue, OK?\" \n\nMy view of the phone was now blocked by Jane's legs, but I didn't care. I took this opportunity to grab her hips and plunge my tongue into her folds to taste her musky wetness. She responded by engulfing me again, moaning deeply on my cock, then letting me slowly slip out. \n\n\"Steph, his tongue is so deep in my pussy right now. You can start touching yourself if you want. But I want you to keep watching me suck Steve's cock and do what I do, OK?\" \n\nI didn't hear a reply, only a sharp intake of breath from the phone and a long whine. Jane engulfed my cock again, stroking the base while sliding her mouth up and down over the head. In the background I could hear what I assumed was Steph slurping on her dildo while she plumbed the depths of her pussy. \n\n\"Oh, my god ... his tongue feels so good. Are you imagining it licking you, Steph?\" \n\n\"Uh huh,\" she whined. \n\nI probed Jane's pussy deeper, sliding a hand off her hip so I could use the thumb to stroke her clit while I licked her. Her approval was signaled by a long moan on my cock and her pulling my entire length into her mouth, then sliding it back out with the slightest bit of suction. I groaned into her pussy as her lips pulled over the head. \n\n\"Tell me what she's doing,\" I moaned into my wife's pussy. \n\nJane released my cock from her mouth, then stroked what felt like a healthy amount of saliva along its shaft. \"She's bent over on one elbow, holding the dildo with that hand while she goes down on it, and using the other hand to stroke herself.\" \n\nI gave Jane's slit a long, purposeful lick, stopping to quickly thrust my tongue into her. She gasped and I spoke again. \n\n\"I bet that looks incredibly hot. Are you enjoying watching her?\" I caressed her ass with both hands and teased her again with my tongue. \n\n\"Mmm hmm,\" she sighed, still stroking me. \n\n\"Are you close?\" \n\nShe laughed low. \"I could be if you'd stop being such a fucking tease.\" \n\nI chuckled in response. \"I don't hear you asking nicely.\" I continued stroking her magnificent ass, working my fingers closer and closer to her pussy. \"Is Steph watching us?\" \n\n\"I don't think she's taken her eyes off of us. You should see her. She's rocking back and forth with her mouth on that cock. I think she's pretty close, too.\" \n\n\"I want you two to cum together, OK?\" \n\n\"Steph, honey, did you hear Steve? Think we can cum at the same time?\" \n\nI heard her whine with pleasure. \"Yeah, but he'd better get his ass in gear. I'm almost there.\" \n\n\"You heard her, sweetie. Best get busy.\" \n\nMy only response was to plunge my tongue back into Jane's slick opening as I moved my right hand just up against her lips, slowly alternating the pressure on each finger like I was gently playing a piano. I could feel her back arch in response. I then moved the focus of my tongue along her slit to her swollen clit, which I teased with just the tip. Meanwhile, I took the opportunity to slowly press my index and middle fingers into her. \n\nJane gasped and stroked me faster. \"Jesus ... he just slid two fingers inside me, Steph. Your turn.\" \n\nI heard Stephanie moan as she mimicked Jane and knew what I needed to do next to get my wife all the way there. Still slowly circling her clit with the tip of my tongue, I slid my middle finger out of her pussy. Using the ample lubrication that remained, I gently pressed it to her clenching asshole. \n\n\"Oh, god, baby! Yes ...\" Jane hissed. \"I'm so fucking close. Don't stop.\" \n\nShe leaned her ass back, encouraging me to press deeper, and I happily complied, sliding my middle finger in up to the first knuckle while still fingering her pussy. As Jane's moans increased in volume, so did the speed of my tongue flicking across her swollen clit. \n\n\"Steph, his finger is in my ass and it feels so good! I want you to do it, too,\" she said between her whining. \n\n\"Okay,\" Steph muttered. \"I'm going to have to move around though.\" \n\n\"Steve, Steph's laying on her belly now with one hand on her clit, and the other reaching around behind her to finger her ass,\" Jane said between gasps. \"How does that sound?\" \n\nI answered by clamping my lips of her clit and gently sucking on it was like was one of her nipples. \n\n\"Aaaahhh, god! Yes, baby. Suck that clit. YES!\" \n\nFrom off to the side I could hear Steph reaching her climax as well. The best way I can describe it was having really hot sex with a real partner while a porn movie was playing in the background, but knowing that it was my sister-in-law and she was using us as inspiration took the erotic value up a hundred times. The sounds of their moans together combined with Jane's vigorous stroking nearly drove me to the brink, but the girls got there first. \n\nUp until that point, I don't think I'd ever heard anything hotter than the two of them cumming together. Jane's moans morphed into high-pitched squeals as she pushed her pussy against my face, while Steph was narrating her own pleasure with what sounded like clenched teeth and almost maniacal urgency. \n\n\"You lick that pussy,\" she growled. \"Make me cum! Lick it!\" \n\nThen Jane was silent, her increasing grip on my cock and the twitching of her legs letting me know she'd tipped over the edge. Stephanie, meanwhile, was more vocal, gasping and pleading until she heard Jane go silent. \n\n\"There it is! Yesss,\" she whined. \"Oh, my god, yes!\" \n\nJane collapsed on top of me, still lightly stroking my cock now and giving it a few delicate licks as her sister came down from her orgasm. \n\n\"Holy shit, you guys. That was intense,\" Stephanie was finally able to say. \n\n\"Oh, we're not done with you yet, sweetie. I still need that cock in me again. How about you?\" \n\n\"Absolutely,\" Steph purred. I'd never heard her sound so content. \"What's next?\" \n\nI was still giving Jane's pussy tiny flicks with my tongue, enjoying the way she still twitched and sighed with the aftershocks of her orgasm. \n\n\"I'm going to ride him, so I want you to take that dildo and sit on it just like I do with Steve's cock. Understand? It'll be just like both of us are riding him at the same time. Would you like that?\" \n\n\"Yeah,\" Steph said. It was barely a whisper, and again I felt like I was doing something unethical while my wife, the one who would be calling me on my lack of ethics, was the one leading way down this path. \n\nJane gave my cock another long suck, leaving it wet and slippery as she shifted along my body and positioned herself just over my throbbing shaft. With my view of the phone's screen now unobstructed, I could finally get a look at my sister-in-law in all her disheveled, post-orgasmic glory. Her skin was radiant from the light sheen of sweat she'd worked up, and her eyes were hooded and seductive. As I watched, she followed Jane's lead and shifted, raising up on her knees and placing the dildo under her. \n\nI relished the view, Jane's magnificent ass from behind and her tawdry sister from the front, each one getting ready to mount a cock of their own. \n\nJane took my cock in her hand and rubbed the head along her pussy. \"Are you ready, Steph?\" \n\nHere sister was doing the same, using her free hand to rub and pinch her nipple. \"Uh huh.\" \n\n\"OK, now,\" Jane commanded. Both women eased down on their respective cocks, Jane's pussy slowly taking my length into her delicious depths, gripping me as she slid lower. My hands on her hips, I eased her down until she bottomed out on the base of my shaft. The ecstasy was only enhanced by watching my sister-in-law doing the same thing with her dildo, her back arched and her breasts looking full and delicious on her slim frame. For a moment, it was easy to go back and forth imagining both Jane and her sister fucking me. \n\nAs if she was reading my mind, Jane said over her shoulder, \"Baby, I want you to pretend Steph is riding your cock. I want you to treat me like my slutty sister, OK? Fuck me like you're that guy fucking her in the bathroom stall.\" \n\n\"Oh, my god,\" was all I could muster. As an otherwise faithful and devoted husband, what the hell do you say to that? However, Steph was apparently already into the fantasy before I could even collect my thoughts. \n\nShe whined as she took the dildo's full length, then looked directly into her phone's camera, meeting my gaze. \"Does my pussy feel good on your cock, Steve? I've been thinking about this for a long time, you know. Thinking about riding you while my sister watches us, taking your nice, hard shaft inside me.\" \n\nShe eased herself up, letting an inch or two of the dildo slip out. Jane imitated her perfectly, replicating the motion there on our bed, easing me out of her. All I could do just then was moan. The situation was leaving me speechless as I struggled to wrap my brain around it all. \n\nOn the phone's screen, there was suddenly commotion as I realized Steph had picked up her device and was moving it. After some more adjustments, the image stabilized again, revealing Steph now kneeling on the hardwood floor of her bedroom in front of the fully mirrored closet doors I remember we'd joked about when we moved her in. The dildo was in her hand, which prompted Jane to slip off me. \n\n\"Where are you going?\" I growled. \n\nShe looked over her shoulder and winked. \"Got to keep up the illusion, hon. The toy's not inside of her, so you don't get to be inside of me.\" \n\nI threw my head back on the bed in frustration. This was perhaps the hottest and simultaneously most frustrating sexual experience I'd ever had, and for the moment I was stuck in limbo, my wife's wetness cooling on my agonizingly stiff cock. \n\nSteph was apparently now situated, and put the dildo to her mouth, where she slowly and seductively licked the suction cup base, then rose up on her knees to attach it with a wet slurping noise to the smooth floor. \n\n\"You ready, Jane? I think I want him back now that I can better control things.\" \n\nSteph reached below her to guide the artificial cock inside her, while her sister did the same with my genuine model. I relished the feeling of being back inside her, watching her pussy lips part as she once again engulfed my full length. \n\nSteph gasped as she reached the fake balls at the dildo's base. \"Oh, my god, Steve! You're in me so deep! Do you know how long I've dreamed about this?\" \n\nI didn't, but from the look of things it has been some time, and over that period had been a matter of discussion between the two sisters. \n\n\"I want you to fuck me, Steve. Grab my ass and shove that cock into me!\" my sister-in-law commanded. \n\nI complied, gripping my wife's hips and pulling her down onto me as she leaned forward, listening to the delicious, wet slapping noises our bodies made as they came into contact again and again. \n\n\"You like that, Steph? You like that cock fucking your tight little pussy?\" \n\nShe was riding her fake cock in perfect rhythm with her sister riding mine, squirming on it as she arched her back and pulled hard on both nipples. I reached around and did the same to Jane, eliciting a positive response. \n\n\"Oh, yeah, Steve ... I'm your little slut-in-law, you know that? Mmm, yes. Pinch them harder for me!\" \n\nI followed her instructions, pulling again at her taut nipples and prompting Jane to both exclaim \"ouch!\" and ride me harder. \n\nSteph squealed at Jane's response, now trailing her right hand down to her clit, where she began vigorously massaging. Jane followed suit as I saw her right hand pull in front of her, then felt the pressure of her had on her pussy. \n\n\"Yeah, Steve, I'm going to rub my clit while you fuck me so I can cum nice and fast, OK?\" \n\n\"You rub that clit, you little slut,\" I growled. \"I'm gonna make that little pussy cum so hard...\"\n\nMy dirty talk was apparently putting the both over the edge, as they moaned and gasped in unison, Jane increasing the intensity of her hip gyrations as I again grabbed her hips and rammed my cock up into her. ",
        "\"Oh, fuck!\" Steph moaned. \"I'm so close ...\"\n\n\"Yes, baby! Fuck me!\" Jane shouted, giving up on the illusion. That was OK for me. I was still into it in the best possible way. \n\nAnother few seconds of thrusting, moaning and pleading and they both climaxed at precisely the same time, Jane clamping her pussy down on me and leaning forward to grip my knees for support. For her part, Steph was face down on the floor, the dildo still inside her, her hips trembling as she worked the last few shudders out of her orgasm. \n\nI lay there reveling in the sensation of having so thoroughly pleasured these two women, but I was in no way finished. Through some feat of timing or testosterone level or pure luck, I'd surprised myself by holding out on my own orgasm, and now felt harder and stronger than ever before. I also couldn't help the spike to my libido from the utter surprise of the morning. \n\nWithout a word, I sat up, Jane still impaled on my cock, wrapped my arms around her and lifted her petite frame up, then flipped her over on her stomach so we could both see the smartphone screen. \n\n\"You're going to need to readjust, Steph. Time for me to fuck you like I really mean it,\" I said, still inside Jane and pulling her up on her knees so her ass stuck high in the air. \n\nJane just gasped and moaned, \"oh my god,\" again and again, while Steph roused herself and saw what was going on. She said nothing, but looked into the camera with a wicked grin and pulled the dildo from the floor, attaching it again to the mirrored closet door. She then bent forward on her knees, easing the dildo back against her pussy. Her position, along with the reflection of her ass in the glass, managed to make the scene even hotter. \n\n\"I'm going to ask you some questions, Steph, and every time you answer I want you to slide that cock inside you a little bit more, understand? But not until you answer me. And you'd better be telling the truth.\" \n\nShe bit her lip in anticipation. \"OK.\" \n\n\"Have you wanted me to fuck you as long as Jane and I have been together, Steph? \n\n\"\n\n\"Uh huh,\" she said, low and husky, looking me dead in the eye through the camera lens. \n\nShe rocked her hips back slightly, taking the head. \n\n\"Did you get yourself off thinking about it?\" \n\n\"Yes. Oh, my god, all the time!\" \n\nAnother inch. \n\n\"Did you get off with Jane thinking about it?\" \n\nI heard Jane chuckle between the contented noises I was eliciting just by keeping my hard shaft inside her. \n\n\"Yeah, a lot.\" \n\nAnother inch. \n\n\"Have you wanted me to fill you up and cum all over your ass?\" \n\nAll she could do in response was whine in agreement as she finally slid down to the hilt. \n\nI finally resumed fucking my wife, prompting Steph to rock back and forth on her dildo, keeping time with us. Jane clawed at the sheets and squealed into the pillow as I drew myself all the way out, save for the head of my cock, the plunged my full length back in. \n\n\"Who's my little bitch, Steph?\" \n\n\"I am!\" she moaned. \n\n\"Say it again!\" Jane blurted out. \"Say it, Steph!\" \n\n\"I'm your little bitch, Steve! Fuck me!\" \n\n\"That's right, Steph. Fuck that cock, take it all the way while I slam into your sister so nice and deep. I'm going to get her ass all nice and wet now so I can slip a finger inside her. I want you to finger your ass, too, OK?\" \n\n\"Yes, Steve. Oh, god ... So close to cumming.\" \n\n\"Good girl. You cum for us when Jane does, and if you're a good girl I'll let you watch my shoot my load all over her little ass, and you'll get to pretend it's you.\" \n\n\"Yes. Yes, please!\" \n\nI sucked my thumb into my mouth, coating it with saliva, the pressed it against Jane's puckered ass, easing it in a little further with each stroke of my cock. \n\n\"Oh, god ...\" Jane moaned through the sheets she was now biting into. \"That feels so fucking good...\"\n\n\"Are you doing it, Steph,\" I panted. I was getting close now, too.\" \n\nI could see her right hand extended back to her ass. \"Yes. Oh, god. I'm almost there.\" \n\nJane's whines were reaching a fever pitch and I could feel myself losing control. The view of my wife's boyish hair, narrow waist and magnificent ass filled my vision up close, while the tiny image of Stephanie getting off and now thrashing against the artificial cock glowed on the cellphone screen. \n\n\"Don't stop, Steve. So close ...\" Jane cried. \n\nFinally, I felt her pussy muscles clench. I kept fucking her in long, powerful strokes as she thrust her ass back against me, feeling her orgasm overtake her. She was balling the sheet up in her fist even more, her mouth open in a silent climactic scream. On the screen, Steph's ass quivered on the dildo as she collapsed her head to the floor, her hard breaths catching in her throat. Her whole body trembled with the aftershocks of her orgasm as she pushed herself back up on her arms and gazed back into the camera. \n\n\"Did you cum?\" \n\nJane laughed in that wonderful way that told me she was exhausted, but also utterly satisfied. \"I don't think he did. I don't know what's gotten into him this morning, but I'm impressed.\" \n\n\"I want you to make him cum, Jane. Please make him cum for me. I want to see it!\" \n\nBecause we weren't teenagers worried about getting pregnant or porn stars, we rarely got into the whole external cum shot thing. But things had been so different up to this point I couldn't see why they wouldn't continue that way. Jane looked over her shoulder at me for a silent confirmation, and I nodded my head in agreement. Leaning forward, she pulled off me and flipped around and got up on her knees, placing her breasts at the same level as my rigid cock. \n\n\"How do you want it? In my mouth? On my tits?\" Jane asked. \n\nSteph pulled the dildo off the mirror and sat back against the wall, her legs spread, then with a gasp and a long moan, pressed the head of the artificial cock back inside her. \n\n\"Mmmm, I don't care. I just want to see his hot cum spurting. And I think I might have one more in me, too.\" \n\nThat was all it took for Jane to lean forward and press my cock between her tits, pushing at each from the side to cradle my cock as I began to ease it up and down. Hoping to give Steph a better view of my own climax, I reached for the phone and held it at arm's length, hoping that Jane's face and my cock remained in the frame. \n\n\"Oh, my god. That's incredibly hot, you guys. Please don't stop!\" \n\nJane looked up at me and smiled, then tilted her head and extended her tongue just enough for the tip to graze my cock on the upstroke, which was what finally did me in. \n\n\"You ready, Steph?\" \n\nShe was slamming the dildo in and out and rubbing her clit with her other hand. \"Yeah, do it,\" she said breathlessly. \n\nA few more stroke-and-lick combinations and I felt the orgasm building in my toes, then work its way up through my thighs. \n\n\"Yeah, here it comes!\" \n\nJane leaned back just enough to grab my cock and continue flicking at the head with her tongue, sending me completely over the edge. The slight pressure Jane applied as she held me was just enough to back up the long overdue ejaculation and result in a tremendous release of cum that was totally unlike me. Jane's eyes grew wide in amazement as my cock spurted in creamy white jets three times over her fantastic breasts, while I watched Steph's back arch in yet another powerful orgasm. \n\n\"Yeah, that's it!\" she shouted as she came again, her hips and legs trembling as she bit her lip and tried not to slide all the way down the wall onto the floor. \n\n\"Holy shit,\" Jane said, still marveling at what I'd done. \"Where the hell did that come from? I'm impressed.\" She still held my cock, and was now using its softening length like a wand to spread the streams of spunk on her nipples. \n\n\"Well, I strive to be impressive,\" I managed to say as the tremors of my orgasm subsided and Jane's continued manipulations sent tiny aftershocks across my nervous system. \n\n\"Fuck, you guys,\" Steph sighed, sitting up and pulling the dildo from inside her. \"That was unbelievable.\" \n\nI leaned down and kissed my wife deeply. Looking into her eyes afterward, I asked, \"So, this has been a thing, huh?\" \n\nShe actually blushed and pulled me down beside her on the bed. \"Are you mad?\" \n\nI held the phone up so we could still see Steph, who had suddenly grown a little more modest, pulling her legs together and her knees up as she reached for the phone. Her face now filled the frame. \"Steph, do I look mad?\" \n\n\"You look pretty fucking happy to me,\" she said, also a lot more bashfully than circumstances would suggest. \n\n\"Mind if I ask ...?\"\n\nJane just put her fingers to my lips and smiled. \"You'll get the whole story eventually. Let's just enjoy this for the moment, OK?\" \n\nI silently agreed, content to take in the beautiful scene of my wife and her sister so completely satisfied. \n\n\"Hey, Steph,\" she asked. \"You still on to join us up at the lake for the Fourth of July?\" \n\n\"Hell yeah,\" she said. \"Wouldn't miss it for the world, especially now. Something tells me it will be a lot more exciting than normal.\" \n\n\"That goes without saying,\" Jane replied. \"Just do me a favor and don't bring a date. Something tells me we'll be able to keep you busy enough.\""
    ],
    "authorname": "SexyWriterCouple",
    "tags": [
        "sister-in-law",
        "taboo",
        "threesome",
        "video chat",
        "couple",
        "morning",
        "family"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/video-chat-slut-in-law"
}