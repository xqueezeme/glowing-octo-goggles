{
    "title": "Steel Hearts: Amazing Grace",
    "pages": [
        "Authors Note: This story is for the . I hope you enjoy it. Thank you to MsSensualT who tried to proofread for me and got through about half before we ran out of time. My apologies for the last-minute rush. It is a particularly long story so my appreciation of her is great. If you make it to the end and enjoy this story please vote and comment. ~ellie \n\nAmazing Grace\n\nPart 1.\n\nGrace stepped out of the car and stretched. She loved the restored Kombi her brother had given her for this trip, and it was a pretty smooth ride for its age. Not that she would have expected anything less from her brother and his mates, the car-obsessed asshats. They ensured her ride was fully serviced every three months. Admittedly, it was not just cars, anything with a motor got their attention, and if they could make it go faster, that was even better. \n\nShe walked into the mechanic's workshop looking for a face she knew and frowned when a stranger with a grim expression noticed her and came toward her. She backed away, cursing her brother Teddy, who assured her only his club brothers would be there. She kept walking backwards through the wide roller door she had entered through as the stranger continued to close the distance, raising his voice and slowing his speech as if talking to an idiot.\n\n\"This is private property. You can't just stroll in here. Accidents happen when people come into our workshop uninvited. What! Do! You! Want?\" He shouted in single words until she turned and fled back toward the van.\n\nShe climbed into the van, locking herself in and staring the man down as he continued to shout at her. She had just started the engine, intent on calling her brother and telling him that his friends could come to find her for the parts when the shouting stopped. A guy she knew stepped into her line of sight, waving his arms and smiling widely.\n\n\"Grace, wait!\" Beau yelled, trying to get her attention. \"Sax didn't know it was you. It's all good, don't leave. You came all this way to leave the gear here, so we didn't blame Teddy for his fuck up. At least let us unload it before you go.\"\n\n\"Beau, you tell that guy to fuck off, or I am gone,\" Grace said, her eyes stinging with the residual panic coursing through her. Coming to the Pack House was such a bad idea. She had no idea how she let Teddy talk her into doing it by herself.\n\n\"He's gone. You're good,\" Beau said, walking to her door and opening it. \"I need the keys to open the back. You can stay there if you want. It'll just take a minute, but I need those parts today, Gracie.\"\n\n\"Whatever,\" Grace mumbled and turned off the engine, handing over the keys. \"Just get your shit so I can go.\"\n\n\"You're not driving back tonight, are you?\" Eli asked as he came into view. \n\n\"No,\" she shook her head but didn't elaborate.\n\n\"Where are you staying?\" he asked, frowning at her and wondering why the guys hadn't said she would be staying with them tonight.\n\n\"Not with you idiots, that's for sure,\" Grace rolled her eyes. Then seeing Beau start back towards her as well, she added. \"The band's playing in Eversley. I'll be perfectly safe without the big brother detail, thank you very much.\"\n\n\"You got a room with the band?\" Beau narrowed his eyes at her.\n\n\"No, I'm staying with a girlfriend, geez! Get your shit and let me go, or I will never help you dickheads out again,\" she threatened, but it was ruined by the half-laugh she gave at their unimpressed expressions.\n\n\"At least, get out of the car and give me a hug,\" Eli demanded. \"You can stay five minutes and be social at least. It's your first time at the Pack House. Take a minute to look around.\"\n\n\"Yeah, tried that and didn't feel welcome, so I'll just be heading off as soon as Beau gets your shit out of the van,\" she grimaced and looked toward the open roller door where the same guy was leaning back on the bonnet of a muscle car. Grace shivered involuntarily. Men like him, aggressive and intimidating, still freaked her out even so long after the attack.\n\nShe'd been sassy when she was younger, buoyed by the constant companionship of her foster brother and his friends. She had learned the hard way that on her own, her sassiness was not deemed cute or funny by everyone, and not all men appreciated a strong young woman who wouldn't put up with their shit. She had learned her lesson well and had the scars to prove it, both physical and mental, but she had moved on. Mostly. Except from assholes like the one still staring at her now.\n\n\"You met Saxon?\" Eli asked, following her gaze.\n\n\"Not exactly,\" she said truthfully. \"Look, Eli, I need to get going. I never planned to stay here longer than I needed to unload. I need to make it to Eversley by mid-afternoon, and I'll be cutting it tight in this van,\" she gave a half-laugh, but the truth was she loved it. \n\n\"Okay, Okay. Hug me, and I will help Beau with the last boxes,\" he agreed.\n\n\"Hey! Not fair,\" Grace complained as she stepped down from the van and found herself wrapped up in the arms of both of her brothers' best friends, who squished her like a sandwich between them. A bike roared into the lot, skidding to a stop, and Grace found herself pulled out of Eli and Beau's arms and into the big broad chest of Mitch, who swamped her with his sheer size as he pulled her from her feet. \"Mitch! We talked about this! Put me down!\" She drummed her fists on his broad chest.\n\n\"We also talked about eloping, but I don't see that happening anytime soon either,\" he rumbled from deep in his belly, his body shaking with mirth. \"Alright, let's go,\" he said, placing Grace on her feet again and trying to guide her toward the packhouse.\n\n\"No. No. No. No. No!\" Grace wriggled from his arms. \"I need to be on the road again. I'm staying in Eversley for the weekend. Call me, and we'll grab a drink or something, but I have people waiting for me who will worry if I am late.\"\n\n\"You finally make it to the packhouse, and you're not going to stay?\" Mitch looked crestfallen.\n\n\"I can't. I'm sorry,\" Grace said and, finding herself back on the ground, went to get back in the van. \"I will just wait here while you grab the last few boxes.\"\n\n\"You're good, to go,\" Beau said a minute later as he purposely blocked the staring contest between Saxon and Grace. He leaned into her window and kissed her cheek. \"Saxon's a good guy,\" Beau said reassuringly. \"He just wasn't expecting you. Women are a rarity here because we keep our partying down at the Fox Trap. So, he wouldn't have hurt you,\" he murmured. \"Go, we'll catch up with you tonight. We'll come into Eversley for a drink like you said.\"\n\n\"Thanks, Beau,\" she smiled. \"I'll be better next time if there is one.\" Then she put the car in drive and pulled out of the big spare parts junkyard and its attached mechanical and crash repair workshop. She knew it was their dream job. Each of the guys that dwelt there was a grease monkey and street racer from the age of fifteen or younger. She waved to the other two guys and accelerated onto the western highway headed for Eversley.\n\n*****\n\nSaxon watched Grace from a distance. It had been a long time since any woman had gotten his attention, but this was different. She'd caught him off guard at the workshop earlier, and he had reacted as he would with any intruder, demanding to know who they were and what the hell they were doing in his shop. How was he supposed to know she was Teddy's sister? He didn't even know Teddy had a sister. He thought the guy was a lost boy like the rest of them, no family, no ties. The guys had each other, and their brotherhood was family enough for all of them. So, when he'd found out she had been a foster sister in one of the worst placements Teddy had endured, the phenomenon made more sense. \n\nIt irked him that the three guys who were there to meet her knew her well, yet he had never known of her existence. As he continued to watch from his dark corner near the bar, every touch and smile she gave those fuckers she was sitting with made him want to punch something, preferably them. But, instead, he growled low in his chest as Mitch pulled her onto his lap for the second time that night making her laugh as she fought her way free. Wasn't there a Bro code where you couldn't date your mate's sister? He would need to talk to Teddy about that.\n\nSignalling to the barman for another drink, he took the now vacant stool at the end of the bar allowing the dim light to show his features rather than remaining a shadow. The bar was crowded now, and the chances of his being noticed by his brotherhood were slim, but he kept his line of vision on the girl he had met earlier today. The memory of her fear and quick retreat had kept him in a state of semi arousal that he had needed more than one shower for relief in the last few hours.\n\nHe'd never been to this place before, and he found it surprising that he liked the atmosphere of the bar and its country band that kept the place thumping with boot-stomping noise. He focused on the singer who was speaking now and motioning to the table where Grace sat, causing woofs and catcalls to come from the crowd. He wished he had paid better attention to what the singer was saying because suddenly, Grace stood and approached the stage. Paying particular attention now, he moved away from the bar again to his spot in the shadows close to a small rear speaker so he could hear exactly what was being said. If this guy was her boyfriend, then he would walk away. Or at least he would try to walk away.\n\nSure, it had been a long time since a girl had interested him on any level. He barely acknowledged the women who came to party at the Fox Trap, even if he was fucking them. He didn't need to see faces or know names; they had their purpose and fulfilled their role. However, this girl was different. He could tell from their first moments together when she had run from him. She was delicious, and he wanted to know her more than anyone would believe possible.\n\n\"When I met this young lady, courtesy of her older brother, Teddy, we immediately got into an argument over music,\" the lead singer of the band was saying. \"While Mellencamp's 'Hurt So Good' will always rank highly in our playlist, the band and I learned to play a different song with the same name because the Amazing Grace promised that every time she came to see us play, she would sing it with us and we have been holding her to that promise ever since,\" he explained smugly as Grace lowered her head blushing and turned back towards the drummer. \"So here is, Hurt So Good the Luminites version of an old Millie Jackson song.\"\n\n\"Let's do this. Play me in, please, Mike,\" she smirked. Then the music surrounded her, and she let herself get lost in the halo of light that shone on her at that moment.\n\n\"First, you take my heart; In the palm of your hands; And you squeeze it tight. Then you take my mind; And play with it all night. You take my pride, and you; throw it up against the wall. You take me in your arms, baby; And bounce me like a rubber ball,\" Grace sang in a sweet voice that seemed to reach into Saxon and wrap around his stomach, tying it in a knot. It was as if she was singing directly to his soul as if she knew the darkness there, and he stood mesmerised by her performance. \"I'm not complaining. What you're doing, you see; Cause this hurting feeling; Is, ooh, so good to me. Don't you know that it; Hurts so good! Don't you know that it; Hurts so good!\"\n\nHe knew the other band members were singing background vocals, and the music surrounded her voice, but his focus was such that she was the only thing he took in. That was until a stupid fucker stepped into his line of sight and started to talk.\n\n\"Sax, I don't see you out much. The Fox Trap not doing it for you anymore? Looking for fresh young pussy to add to your stable?\" Joey asked with a leer surveying the bar crowd, primarily young women out for a good time, preferably with the band. \n\n\"Fuck, Joey. What do you want?\" Saxon growled. This girl had him so entranced he had let his guard down and allowed a known worm to get close. His interest in her was not healthy for him or his Pack. He had to end this shit now before it went any further. His eyes strayed back to the stage and wondered what lies he would have to tell himself to follow through on that.\n\n\"Nothing, nothing. Just saw you skulking in the corner and thought I'd say hello. You know, pay my respects to the king of Hearts,\" he said in such an obsequious way that Saxon felt dirty even standing this close to the weaselly man. Saxon would have knocked his lights out already if they were anywhere else. Now he would have to come up with a feasible excuse for being here rather than have this guy spreading rumours that might hit too close to home to people he would rather know as little as possible about his business.\n\n\"I got a girl to ride home. Be seeing you, Joey,\" he stepped toward a girl who had been moving closer and closer to him all night and making sure he knew she was available. \"Let's go,\" he said once within her earshot, and she immediately stepped to his side and followed him from the bar. The only thing the girl had going for her was a similar colour and length of hair as Grace. The rest he could block out. \n\n\"My name's Emma,\" the girl said once they were outside the building. The fresh air hit her hard, and she staggered a little as she tried to keep up with his long-legged gait. She hadn't realised how warm it was in the club, and the cool air made her head spin. She looked to her left, catching sight of Saxon as he turned into the alleyway. She followed him, slipping into the darkness.\n\nSaxon leaned against a doorway, halfway down the dark laneway between buildings. There were no lights on, no chance of anyone seeing them. Saxon scrutinised Emma as she approached him. He could see her breasts heaving as she breathed deeply, her nerves getting the better of her now that they were alone. He had a reputation mostly unexaggerated, and he made no apologies for it. He was who he was, and it was apparent this girl knew who she had tried to seduce tonight.\n\n\"You know who I am?\" he asked in a growl. Grateful that Emma only nodded, and he didn't have to hear the voice that was all wrong. It was bad enough that she had forced her name onto him. \"You want to be a fox, is that it? Hoping for an audition and invitation to the Trap?\"\n\nHe leaned forward as if to kiss her, but when his lips were barely a centimetre away, he wrapped his hand tightly around her throat, and it was like a jolt of electricity running through her. She smiled and pushed against his hand, pressing her lips to his, showing that she knew exactly what she was asking from him. But, instead of returning the kiss, he remained rigid, letting her do all the work. Then she felt him slide his hands up under the edge of her top onto her bare skin and up further to her breast. She gasped and bit his lip lightly, pushing the kiss by opening her mouth to whimper into his when he pinched her nipple hard. Finally, Emma reached down to cup and squeeze the now noticeable bulge in Saxon's jeans, making him groan. This bitch was a freak, and he would show her what it meant to be a fox at the Trap.\n\nEmma pulled the zip of his jeans down, slipping her hand in to release his throbbing cock. She knelt in front of him, grasping the base of his cock in her hand. She held him firmly, running her hand up and down his shaft. Then, spurred on by the mix of alcohol and her excitement, she touched her tongue to the tip of his cock. Emma slid the round head of his cock into her mouth, savouring the taste of him.\n\nSaxon groaned, reaching back to the wall behind him to steady himself. If he put his hands on her now, he could choke the little masochistic bitch without even realising it. There was no fear or fight in her, and he felt his ardour waning while she sucked him with a half-assed attitude.\n\nEmma loved giving head. She loved the sensation of a thick, warm cock pushing into her cheek. She slid Saxon's cock deep into her mouth until he was brushing against the back of her throat, hoping he would push for more and force her to take all of him.\n\nSaxon groaned again, and unable to help himself put his hand on the back of Emma's head to encourage her to deep throat him. Emma moaned, vibrating his cock slightly, bringing him closer to the edge. Emma felt him swell as he came closer to shooting his load. Rubbing the base of his wet shaft with one hand, Emma continued to deep throat him.\n\n\"Fuck!\" Saxon growled on a long exhale. Emma kept up her pace as she felt his balls contract, shooting his load into the back of her throat. Emma moaned, swallowing his thick, salty cum as if she were starving. Then she licked his cock clean before Saxon pulled her to her feet, biting her neck roughly as he grabbed at her breasts through her top. \n\n\"Now we fuck,\" Saxon growled, making Emma's pulse race. He quickly unbuttoned her jeans, pulling them down roughly with her damp panties. He could smell the musky aroma of her arousal.\n\nSaxon spun Emma around, so her back was facing him. Better with the hair and slim curves, he could fool himself into believing it was the girl who had haunted his mind all afternoon and night. He tugged her hips towards him, using one hand to bend her over the pile of crates stacked against the wall. He watched as she put her hands on the boxes to steady herself, parting her legs slightly to give him better access. Saxon paused a second to run his hands over her firm ass and slap it firmly several times, hoping to hear her cry out, but she only moaned deeply. Then he reached between her legs to part her moist lips with his fingers. Then, with one hand on her hip for balance, he used his other to guide his cock inside her. \n\nEmma groaned as he entered her from behind. She loved rough sex. She pushed her hips back, coaxing him to go deeper and moaned in painful pleasure as he took her without any concern for her satisfaction as he searched for his own.\n\nHe held her hips with his fingers bruising her flesh, and buried himself as deep as he could go with each initially thrust. Then, he started riding her from behind, slowly building up momentum. Saxon completely lost himself in her wetness, sliding in and out so easily and imagining it was the girl he couldn't stop thinking about but couldn't have. He closed his eyes, imagining her cries of painful pleasure. But they would be loud and satisfying, unlike the stupid cunt in front of him.\n\n\"Fuck me!\" Emma commanded, startling him. \"Fuck me hard!\" Saxon quickened his pace and used force to enter her. Emma groaned, \"Harder!\"\n\nSaxon dug his fingers deeper into her hips, knowing he would leave bruises for tomorrow. Then he ploughed into her harder and faster! He reached around to touch her clitoris, only to find Emma's hand already there, working it furiously. The bitch was made to be a club whore. He doubted any single man could satisfy her alone. He added his fingers to Emma's wet ones, circling her clit rapidly while still fucking her from behind. Finally, he slid his fingers from her clit up to her mouth. Emma started sucking her juices from his fingers greedily. Saxon slid his hand down to maul her breasts.\n\n\"I want you to cum inside me!\" Emma groaned.\n\n\"No fucking way!\" he sneered as he withdrew from her and, grabbing her hair, turned her pushing her to her knees so he could cum all over her face. Stupid bitch was far too eager, and he wasn't stupid enough to become her baby daddy like this. Emma began to clean his cock off once more. \n\n\"You're not going to find me or any of my brothers stupid enough to take the blame for whoever knocked you up, and a quick paternity test would sort it out in the long run,\" he shook his head. \"Stay away from my boys, and if you find a man stupid enough to come inside you unprotected, don't give yourself away by being so eager to have him come in that greedy little snatch of yours.\"",
        "Saxon zipped up his pants and walked away. The whole fuck was beyond disappointing. Especially when he could have been inside the pub watching the girl. Grace. Amazing Grace, as the singer called her. No matter how dangerously distracted, she made him. It was where he wanted to be. \n\n*****\n\nThree months later.\n\n\"What do you mean, someone's been stalking you?\" Teddy demanded. His tone was angry, and he stood over Grace, making her shrink under the force of his emotions. \n\n\"And this is why she doesn't tell us shit anymore,\" Mitch grumbled, pushing Teddy a few steps back and pulling Grace into a gentle hug. \"You did the right thing, Gracie. He needs a minute to process. Then you can explain what's going on to both of us, okay?\" He moved to deposit her on the couch and sat beside her. She wasn't just Teddy's little sister. They all knew her well and treated her like a sister to the brotherhood. Especially now that Saxon had met her and asked about her.\n\n\"You ever get that feeling that someone's watching you? You know when the hair on the back of your neck stand up, and even though there's nothing there, you can't help but peer into the shadows to make sure?\" she asked in a small voice. \"I've started sleeping with a nightlight again,\" she admitted.\n\n\"That doesn't mean you have a stalker,\" Teddy said soothingly, coming to sit on her other side.\n\n\"I'm not that neurotic. I'm telling you how it started about three months ago after I drove out to deliver those parts for you and sing with the band, remember? You gave me the Kombi to drive. When I got home, it felt like someone had been in my apartment, but nothing seemed missing, well, nothing important, so I told myself I was being an idiot and moved on. But then things started to move around the apartment or go missing entirely. Little things like a book I was reading would move, and the bookmark would be on an entirely different page. And though I hate to admit it, if any more of my underwear goes missing, I will be going commando,\" she blushed deeply and looked down at her hands folded in her lap.\n\n\"Fuck, three months, and you're only telling me now?\" Teddy asked. \n\n\"I thought I was just being forgetful at first. It was just little things, you know, but then they started to add up, and my friend Jenna from work swears that someone was following us to the last gig the band did over at The Kellys. Also, even though I know you won't be concerned, it seems like I have guy repellent on suddenly. Like no one will come near me, or if anyone does, suddenly they disappear without a word,\" she complained.\n\n\"Okay, so what happened this time? Why call Teddy now?\" Mitch asked.\n\n\"This is going to sound stupid, but there is a message on my bathroom mirror that you can only see when it fogs up from the shower,\" she grimaced. \"I know how dumb that sounds, but I swear, it's true.\"\n\nBefore she could finish talking, both men walked to her tiny bathroom. Teddy turned the shower on while Mitch stood at the door, his large frame not forcing its way into the tiny space and keeping most of the steam from escaping. The apartment was small enough that she didn't have to move from the couch to see what they were doing or their reactions the moment when they could read the message. \"You'll be my Valentine\" was innocuous enough, but it was just too much with everything else going on. \n\n\"Alright, get your shit. You can come to stay in the packhouse with us. Let's see this fucker get to you there,\" Teddy ground out between gritted teeth.\n\n\"No! I'm not going anywhere or letting this guy win. Just help me with some added security. Change my locks and maybe one of those doorbells with a camera thing. Help me, not boss me around and take over my life,\" she grumbled. \"Besides, I have commitments here I can't just walk away from. I need to work. It's coming up to the busiest time of year.\"\n\n\"Fuck,\" Teddy cursed and ran his fingers through his hair. \"Call Sax and let him know we're staying in town tonight,\" he said to Mitch, \"Unless you want to go and just let me deal with this shit. It shouldn't take long tomorrow to get a locksmith out and see about some added security.\"\n\n\"Maybe it would be cheaper to move you to a better neighbourhood,\" Mitch suggested hopefully and looked at Grace.\n\n\"I can't afford to move,\" she gave a sad smile. \"I understand why it might be better to do that, though.\"\n\n\"So, if I could find a place with similar rent and Teddy paid the bond for you until you could pay him back, you'd move?\" Mitch asked, being specific as if he already knew of an available place she could live.\n\n\"I'm not stupid enough to turn down an offer like that when I've just told you that I'm scared, but I can't go to the packhouse. It's too far away. I can't drive two hours to and from work every day like you guys.\" she admitted. \"Besides, I don't want to run away like a scared little girl and let him win.\"\n\n\"You are a scared little girl,\" Mitch said bluntly. \"Why the hell else did we rush here tonight?\"\n\n\"It's not two hours to the packhouse,\" Teddy grumbled.\n\n\"Not the way you drive,\" she teased and nudged him. \"I'm talking about regular law-abiding people here!\"\n\n\"Is that all you need to show us here?\" Mitch asked. \"I'm starving. Let's go eat while we make a plan,\" he suggested after Grace nodded to confirm she had told them everything of importance. It was the fact that she now had proof someone had been in her apartment that bothered her so much.\n\n\"Pack a bag. You can stay with me tonight. We will have the locks changed before you come back again,\" Teddy said.\n\n\"Yeah, okay,\" Grace agreed without arguing, which only confirmed for Teddy just how scared she was despite her bravado about not wanting this guy to chase her away.\n\n*****\n\nSaxon raced through the streets of the rundown suburb, intent on getting to his brothers and the woman he had been fighting to put out of his mind for months. It was one thing for him to have checked in on her from a distance from time to time, glean information from his brothers, and even encouraged Teddy to talk to her about her life choices. But, unfortunately, she lived and worked in unsafe neighbourhoods, and something like this was inevitable. \n\nHe shouldn't have walked away. He shouldn't have assumed Grace was safe in her dull everyday life. He shouldn't have suppressed the first attraction he felt for someone in years. Instead, he growled and spun the wheel of his motorcycle. As he reefed up the handbrake, he slid into the curb in a parking manoeuvre worthy of the fast and furious crew. He grabbed his phone and the envelope satchel from the passenger's seat and stepped from the car.\n\nIt had taken Saxon less than thirty minutes to make all the arrangements Mitch had asked for, and now he was about to drop what he was sure would be a bomb on his brothers and Grace. Taking a deep breath, he stepped into the kitschy restaurant with its shelves of bric-a-brac and old-world vibes. He climbed the rickety stairs and headed for the large antique wardrobe. Only regulars here knew of the second bar through the wardrobe in a homage to Narnia. It was the wrong neighbourhood for a place like this with its inflated prices and sense of the whimsical. Still, he and his brothers enjoyed the privacy they received there and made it their regular hangout, which made them seem just as bizarrely whimsical within its confines as the d\u00e9cor.\n\nStepping into the Narnia bar, he found his brothers and her, the woman he had become obsessed with in the last few months. Grace. She was every bit as alluring as ever despite her casual clothes and the worry etched on her face. His eyes travelled over her to ensure no harm had come to her. His eyes met hers, and he read the anxiety and concern there as she took him in, in equal measure. Her eyes widened, and a tiny spark of recognition flared in those hazel pools making the corner of his lip tilt-up before he could control it.\n\n\"Sax! You were fast,\" Mitch said, signalling to the bartender for service.\n\n\"Because I'm good at what I do,\" he said in a quiet gruff voice before taking a seat at the table. \"The rooms above The Doss House are done. She can stay with me there until we find her a new place of her own.\"\n\n\"Wait, that's not what I agreed to,\" Grace looked directly at Teddy. \"I don't even know this guy, and the last time I saw him, he threatened me!\" she exclaimed.\n\n\"You threatened my sister?\" Teddy asked incredulously.\n\n\"A hot woman wanders into the workshop without a brother or an invitation. What do you think I did? Offer milk and cookies?\" Saxon said dryly. \"It wasn't a threat, just a warning. It's not like I knew you had an actual sister at the time.\"\n\n\"Shit, when was this?\" Teddy looked between Saxon and Grace with a frown.\n\n\"It was when you had that concussion and convinced her to drop off the parts Beau needed at the Packhouse on her way to Eversley,\" Mitch explained, remembering the meeting and how Saxon had looked at Grace that day from the workshop.\n\n\"Why didn't you tell me you'd met Sax?\" Teddy asked, frowning in confusion.\n\n\"I didn't. Not really. I walked in, he chased me out without letting me explain, and Beau came to the rescue. So it's all good. I went to Eversley and forgot about it until now when you expect me to live with the psycho,\" Grace said. \"Look, I'll be fine at my place. Just help me change the locks as I asked.\"\n\n\"Bad first impression, I get it, but your brother trusts me, and you can't do anything about the locks on your apartment tonight, so you may as well come and see what I am offering you,\" Saxon said unperturbed by her accusations.\n\n\"He's right, and that bad first impression is my fault. I didn't tell him you'd be dropping the stuff off for Beau. You have no idea how many girls show up at the packhouse wanting an audition for the role of his old lady,\" Teddy shrugged. \"I would have been surprised if he didn't tell you to fuck off.\"\n\n\"I didn't tell her to fuck off. Instead, I asked what the hell she was doing there and told her trespassers weren't tolerated,\" Saxon admitted. \"She never said a word to explain, just ran back to that funky van you gave her and locked herself in. She was about to drive away when Beau stopped her.\"\n\n\"Well, if you hadn't been so angry and shouting at me like I was a criminal while trying to intimidate me with your sheer size,\" she argued back. \"Forget it. I'll stay the night with Jenna and get the locks changed tomorrow. I don't even know why I bothered to call you.\" She sagged deflated. She'd wanted Teddy to help her, to chase away the monsters and bad feelings like he had when they were younger. Since joining the Brotherhood, he was never alone or the same big brother she had adopted while in foster care. Finally, she stood and walked away from the table, pulling out her phone to send Jemma a text to get her.\n\n\"Grace, you aren't staying with Jenna. This is serious,\" Teddy said, snatching her phone from her hand and guiding her back toward the table she had been sitting at with him and his brothers. Once she was settled, he took her hand. \"Gracie, someone was in your apartment, was there multiple times, possibly while you were there in the shower or asleep. That's not okay. Do you understand? Not okay. You could be putting Jenna and Drew in danger by staying with them. Have you thought of that?\"\n\n\"There's safety in numbers!\" she answered, frowning and peaking at Saxon, sitting passively with his arms folded over his chest.\n\n\"There will be numbers at the Doss House, and it will be much harder to get in with the security we have, both electronic and physical,\" Saxon stated. \"Mitch said the message stated Valentines, stay with us until then, it's only ten days away, and if nothing else happens, we'll find you an apartment in a better neighbourhood, and you can be on your merry way again.\"\n\n\"Two weeks to go apartment shopping and be sure whoever this guy is, he's dealt with once and for all,\" Teddy said deceptively mildly. \"Please, Gracie, for me? I need to know the only person outside of the brotherhood that I care for, like family is safe. I need you to be safe. Please.\"\n\n\"Okay, fine,\" she sighed. \"But I will have to go back for my uniform, I forgot to pack it, and I have to work in the morning.\" \n\n\"I'll get it. You go with Mitch and Saxon to check out the Doss House,\" he kissed the top of her head and whispered, \"Thank you.\"\n\n\"Ride with us to the Doss House, and then you and Mitch can go together,\" Saxon said. \"If that clown is still hanging around and thinks another man is taking what he believes is his, given the message he left, well, there's safety in numbers,\" he said as if deep in thought. \"I know you can hold your own, Ted, but we don't know what we're up against here.\"\n\n\"Yeah, alright,\" Teddy looked at Grace. \"We got you, Gracie. You'll be safe with Sax, I promise.\"\n\n\"I want to come back to pick up my stuff. I'm sure there are more things I forgot. You told me just to pack for one night now you are talking about weeks. I need to go and grab some stuff. If I made a list for you, I would forget the things I need. Please Teddy, then I will go and stay with Saxon, no more arguments after this, I promise,\" Grace negotiated.\n\n\"Alright, let's go then. The sooner we do this, the sooner you will be somewhere safe,\" Teddy agreed, and they drove back to her tiny apartment in convoy, both Saxon and Teddy driving their cars and Mitch on his bike.\n\nFrom the exterior, everything looked the same as it had when they had left an hour or two earlier, except that the garage door assigned to her apartment was swinging up and down slightly in the breeze as if it hadn't been closed properly. Mitch and Teddy approached either side before suddenly swinging it up to see inside.\n\n\"Ladybird!\" Grace gasped. Tears welled in her eyes as the men around her swore loudly and profusely. Someone had beaten the shit out of her beautiful car, and she had no idea why someone would do that.\n\n\"Get a tow truck here and have Ladybird taken to the packhouse. Beau can make it good as new. He and Eli can fix anything, even a classic like that. It probably needed a good safety overhaul anyway,\" Saxon said unemotionally. He had said the word classic as if he was giving the benefit of the doubt to some crappy early model Camry instead of her beautiful 240Z.\n\n\"On it,\" Mitch said. \"Ted, take her upstairs to grab her things so we can get her someplace safe.\"\n\n\"Come on, Gracie, let's go,\" Ted encouraged and turned her toward the stairs leading up to her apartment.\n\n\"What about the police? Shouldn't we report the damage to the police?\" she asked. \"I only have fire and theft insurance, but still, shouldn't a report be made?\"\n\n\"Is that what you want? Police to come and impound a car built for if not used in street racing with possibly five or more illegal modifications to the chassis and suspension?\" Saxon asked.\n\n\"What the fuck?\" she hissed. She'd told Teddy she'd give up racing and had been so careful about the last few races she'd done there was no way he could know. \n\n\"She doesn't race anymore,\" Teddy came to her defence before she could say anything. \"He's right though better to let Beau and Eli take care of it for now while we take care of you.\"\n\n\"Okay, let's go get my stuff then,\" she said, resigned to just doing what the guys wanted for tonight. It wasn't as if anything else could go wrong. She'd spoken too soon, though, and when she opened her door, she screamed in horror at the destruction within her tiny apartment.\n\nGrace felt like she was barely a passenger in her own body as she was bundled up against a hard chest and rushed out of the apartment. She caught snatches of conversation and nodded when told that they would be calling the police. Her stalker did not like that she had another man come and visit, let alone two men escort her out after he had left his Valentine's Day message for her. This time the messages of whore and slut spoke for themselves alongside accusations of cheating on him when he did nothing but love her.\n\nThe thought made her sick, and she stayed buried in Mitch's big arms as Saxon and Teddy made calls to have people out there helping to deal with the mess before calling the police. The one thing she knew for sure was, the Brotherhood considered Grace one of their own now, and this fucking psycho, whether they knew it or not, had just declared war on one of the newest but fastest growing underground clubs in the region.\n\n*****\n\nSaxon busied himself with the calls, and the organisation needed to track this motherfucker down. His eyes kept drifting to the girl he had been obsessing over for the last three months. He had been prepared to watch from a distance and not get her involved in Brotherhood business. She had been a sweet, delicate fantasy to be admired but never touched or tasted. That was until this psycho had forced them together. Now he would claim what he wanted for his own.\n\nHe could admit to himself that he was jealous of how she turned to Mitch as easily as her brother, and he wanted to be that person in her life now that the wall he had built between them had come down. He would keep her close and keep her safe, and he would do it in such a way that his brothers and hers would not suspect his motives until it was too late. \n\nHe may not be as bad as this asshole who was scaring her and destroying her belongings in an attempt to force her into a position where she would accept him. Still, he had his own agenda when it came to the amazing Grace, and while his methods might be more subtle, he wanted the same outcome as her stalker; to be able to claim her as his and his alone.\n\nWhen they had done all they could at her apartment, they left two brothers they trusted to sort through what could be salvaged from the mess. Beau had arrived in record time with Eli to pick up the car and for a few minutes argue about what was best for Grace, wanting to take her with them back to the packhouse. Then, finally, he drove her and Mitch to what would be her new home if he had anything to do with it while Teddy rode Mitch's bike back, leaving his car to transport the belongings that could be saved.\n\nGrace sat quietly on the drive home. She had stopped crying, but her eyes were puffy and red-ringed. She fidgeted and squirmed in her seat as if she wasn't sure what she was doing in the car with the man who both scared her and made her feel safe at the same time. She was beyond confused and upset. Now she was trying not to fly to pieces again and break down completely. The life she had worked so hard to create for herself seemed to be crumbling around her.\n\n\"You are safe with me and the brotherhood. We won't let anything happen to you from this point on,\" Saxon reassured her when he caught her watching him. When she tried to focus her glassy eyes on him, however; he realised he could have been speaking another language for all the impact his words had on her. It didn't matter. She was his to protect now, even if she didn't know it. He did, and he would find the fucker screwing with her and make him pay.\n\n*****\n\n\"Oh shit!\" Grace exclaimed, waking with a start as Teddy leaned over her.\n\n\"Police are here to interview you. So put something decent on and come out to the common room,\" he said. \"What time do you have to be at work today? Because you might be late already,\" he admitted making her swear again as she checked her phone.\n\n\"Shit! Can you call Jenna for me and let her know what happened and ask if she or one of the girls can cover me today? I can't even right now,\" she shook her head, grabbed the overnight bag which someone had brought to where she had slept and raced into the bathroom to shower quickly. \"The police are here?\" She asked double-checking what he had said before closing the door.\n\n\"Yes, about the apartment. Beau came and got your car last night,\" Teddy confirmed.",
        "\"Right, she slammed the door and hurried through the quickest shower of her life. Then she went out to meet with the police and told them the same story she told her brother and Mitch last night before her place had been destroyed. She had no clue who had been stalking her or why they would have destroyed her apartment.\n\n\"Thank you for your help, Miss Freeman. Will we be able to contact you here if we have further questions?\" the officer enquired.\n\n\"Until I can find an apartment I can afford,\" she sighed. \"I'm guessing I lost my bond on the last apartment,\" she gave a sad, crooked smile. \"Is it okay if I go back and pick up some stuff so I can get to work tonight or tomorrow?\"\n\n\"We'll let you know as soon as the forensic team have collected evidence, but I wouldn't recommend staying there. Are you able to stay here or with your brother until you find somewhere else to live?\" the officer asked. \"Here's my card if you have any more questions of your own or if this person harasses you in any other way.\"\n\n\"Thank you, and you will let me know when I can return to get what I can from the apartment?\" she asked. \n\n\"We will. Thank you for your time, Miss Freeman,\" he said and moved toward the door with his silent partner, who only nodded in her direction.\n\n\"Okay, can you look through what we managed to save last night and tell me what do you need urgently that I can replace for you? Your uniform? That's just a white shirt black skirt, right?\" Teddy asked once the officers were gone, and Grace sagged deflated into the couch.\n\n\"Was it smashed?\" she asked, not moving to get up and look through the garbage bags he indicated.\n\n\"I'm sorry,\" Teddy answered, knowing she was asking about her guitar. It had been given to her by the elderly case worker who had placed her in the group home with Teddy before retiring. It was a horrible place that they both bore scares from in their own ways, but it was also there she had learned to play the music she loved.\n\n\"I should have grabbed it when you had me pack a bag. It's my bad,\" Grace sighed and got up to look through what could be saved from the devastation of her apartment last night.\n\n\"What?\" Saxon asked, stepping from the wall where he had been observing since the police arrived. \"What was smashed?\"\n\n\"Nothing important. An old guitar that always needed tuning,\" she smiled sadly. \"The better bit of a bad time in my life that I should have let go of years ago.\" She continued to rifle through the bags. I don't suppose there is a laundromat nearby. I don't like the idea that he did something nasty to the clothes the guys were allowed to salvage once the police team had finished,\" she pulled a face.\n\n\"There's a laundry room here,\" Saxon answered and grabbed a bag, leading the way to the washers and dryers. \"This place was built as a second packhouse for when the brothers are in town,\" he explained. \"You'll be safe here.\"\n\n\"Thanks, Saxon. I'll be out of your way as soon as I can get my shit together,\" she said sadly.\n\n\"There is no hurry. It's just you and me here plus your brother and the guys for as long as they want to stay and make sure you are safe,\" Saxon reassured her. \"Any of the new brothers who are in town will stay upstairs. \n\n*****\n\nA few days later, aside from where she was living, life had returned to normal for Grace. Thanks to the generosity of her brother and his friends, her wardrobe had been updated with the essentials. She was back at work surrounded by her friends again, and she'd started looking for a new apartment herself because her brother didn't seem to be in any hurry for her to leave the Doss House.\n\nOn her second day back at work, she bussed a table and found a disturbing picture. It showed her on the night she had discovered her apartment destroyed. Mitch was holding her cradled against his chest as she sobbed. A large red X covered Mitch's face, and on the back, the message read: \"You got this man killed. Remember who you belong to slut before anyone else gets hurt.\" Grace didn't scream. It was as if the photo had paralysed her, and she just stood there staring at it and shaking.\n\n\"Grace, what's wrong?\" Alana asked and touched the hand holding the photo to see it better before gasping. \"Go, go call your brother or whoever. I'll cover your tables.\"\n\n\"Grace?\" A male voice called from the door. Saxon had been watching her and the caf\u00e9 from across the street. He had seen the moment something went wrong for Grace. He took the photo she held out to him and swore. Mitch was knocked off his bike that morning by a reckless driver, but he wasn't dead or even injured that badly. \"Mitch is okay. He's back at the Doss. I can take you to him. Where's your boss?\" he asked.\n\n\"I'm right here,\" A woman in a sleek black pencil skirt and silk blouse approached. \n\n\"Good, Grace needs a leave of absence until her stalker can be caught unless you want this place filled with her personal security every time she works a shift,\" Saxon said in a hard unemotional voice. \"Considering he is threatening her friends to get at her now, it may happen regardless.\"\n\n\"I don't think that will be necessary,\" Carol said dismissively. \"I don't need the drama, so she can have all the leave she needs. Probably best if we make it permanent don't you think? Make sure you clean out your locker before you go.\" \n\n\"I'm sorry, Carol,\" Grace said. She knew she was being fired and resigned herself to the fact. She didn't want her shit coming down on her friends who also worked there. If her stalker was going to disrupt her work life, she couldn't stay here. Carol would never tolerate the disruptions. So now she not only needed to find a place to live but another job, all because of one asshole who wouldn't leave her alone.\n\n\"You have no reason to be sorry. I was doing her a favour not calling the police to investigate the threat and confession left as a tip for you,\" Saxon said. He usually enjoyed watching those extreme emotions play over another face, but he wasn't in hunter mode right now. So instead, for the first time since he was a young teen, he went into protector mode, and it wasn't until Grace nodded and the fear in her eyes started to turn to trust that he got that rush he enjoyed. Strange that this girl made him feel that way, this girl who was practically off-limits to him.\n\n\"You'll take me to see Mitch?\" she asked quietly. \n\n\"After you clean out your locker,\" Saxon agreed, guiding her toward the back of the caf\u00e9.\n\n\"You can't go back there,\" Carol said.\n\n\"If you think I am leaving her alone for more than a second right now, you can think again,\" Saxon growled in return. \"She and her friends have another job to go to if they want, so be careful about your next words,\" he warned.\n\nCarol narrowed her eyes but stayed silent as Grace led Saxon back toward the lockers. He halted her when the lockers came into sight in a nook just around the corner near the kitchen entrance they had taken. \n\n\"I'm guessing you didn't put that there?\" he indicated the pink envelope sticking out of the joint between the metal lockers. \n\n\"It wasn't here when I started my shift, but maybe it's one of the other girls.\" She said, doubt colouring her voice.\n\n\"Give me a sec,\" he said and disappeared, returning with latex kitchen gloves for her. She understood and picked it up, showing Saxon her name in script across the front. Then, she opened her locker, retrieving her bag and jacket before following him back into the cafe. \n\n\"Carol, either you or one of your staff let an evil man back here, or one of them is an evil person, so I'm afraid the police will need to be involved now,\" Saxon said urbanely, using his best manners in the face of Carol's building rage. He put his phone to his ear and called the same officer that had taken on the case after her apartment had been destroyed.\n\n\"Alana, can you bring us a couple of iced waters, and I'll tell you about the job opportunity? Unfortunately, this is no longer a safe place to work,\" he murmured to Grace's friend as he went to a booth to wait for the officer.\n\nOfficer Ensler was there by the time Grace had taken a sip of water and opened the pink envelope with shaking hands to reveal a Valentine's Day card. The card held a guitar on the front decorated with a world map and the simple message of \"You rock my world.\" The message inside was handwritten with block print and said, \"I'm going to be your Valentine.\" At the top and \"Your welcome\" at the bottom.\n\nThroughout the interview at the caf\u00e9 and again when the officers followed them home to interview Mitch for a second time after his accident, that morning Saxon stayed by Grace's side. For a man that had scared her so thoroughly at their first meeting, the only other person she felt so protected by was Teddy, and even he didn't seem as intense. It should bother her that he was shadowing her and crowding her personal space, but strangely she found comfort in his presence. \n\n\"Mitch,\" Grace murmured his name as she knocked on the door to his room. \n\n\"Come in, Gracie,\" he chuckled. She opened the door slowly and stepped inside but didn't go any closer, making him frown. \"What's wrong, gorgeous?\"\n\n\"Did they show you the photo that was left for me at the Caf\u00e9?\" she asked, keeping her eyes trained on the floor.\n\n\"Fuck! This isn't your fault, Grace! Do not let that guy get into your head,\" he said gruffly, making her jump in fright at the sound.\n\n\"I'm so sorry, Mitch. I didn't know, or I wouldn't have put you in that position,\" Grace stumbled over her apology. \"This is all my fault, and I'm sorry I should never have involved you or Teddy.\" Tears formed in her eyes at the thought of Teddy or anyone else being hurt, and she lifted her eyes to the bruised and battered man lying on the bed.\n\n\"Aww honey, come here,\" he held out an arm to her, and she took a tentative step closer. \"This is not your fault, you hear me? If it wasn't me here, it could very well have been you, and Teddy would be in jail for killing the mother fucker,\" he said seriously, \"And nobody wants that scenario, so you stay here with us where it's safe. Trust Saxon. He's the best at what he does for a reason.\"\n\n\"I don't want you or anyone else hurt because of me,\" she shook her head. \"I think I should just go. It was dumb to call Teddy. He's not even my real brother. He doesn't need to be putting his brothers in danger this way. He will hate me if anyone else gets hurt because I am staying here. I should have gone to stay with Jenna or Alana, maybe.\"\n\n\"They wouldn't have survived his attack, Grace,\" Mitch said gently, still trying to beckon her closer, but she gasped and stepped back out of his reach.\n\n\"Whoever this is wants you for himself,\" Saxon came into the room behind her. \"He wants you isolated and alone, so it's easier for him to take you. He wants you to react just like you are and leave us if he tried to follow through on his threat. Of course, if you went to your girlfriends, he would do the same thing.\"\n\nGrace turned and backed away from Saxon, not realising she was moving closer to the bed until Mitch's hand curled around hers and tugged her back to sit on the edge of the bed where he could wrap his big arms around her. \n\n\"There, that's better,\" he sighed. \"Teddy isn't the only one here who cares about what happens to you. We all do, and you will probably find Beau and Eli will be here to check on you once they have fixed your car.\"\n\n\"Or before,\" Beau said from the doorway to the room. \"We have to wait on a few parts, so we came to see Mitch prove just how bad of a rider he was, yet again,\" he teased. \"Hand over the girl before you hurt her too.\"\n\nSaxon backed into a corner of the room, watching as the three friends bantered and passed Grace between them, hugging her and checking for injuries themselves as if they couldn't trust their friends or her assurances that she was okay. He wanted to be that familiar and easy with her. These men loved her, that much was evident, and jealousy sparked deep within him. He didn't think he was capable of such an extreme emotion himself, but it was there and made him feel queasy. He had always sought out the intense feelings of others and fed on them, believing himself incapable of producing them himself until now with this girl. \n\nThe reality of what he felt for her shocked him. He knew he was drawn to her, and that was odd on its own, but the jealousy and the genuine need to rush in and protect her today, to fix things for her to make life better for her, that was all new, and he wasn't sure what to do with that. He only knew he couldn't stop. He didn't want to stop.\n\nSince their first meeting, Saxon had become obsessed with her when she sang and touched his heart in one of those Disney moments, thawing his cold heart out a little. He had checked on her, knew where she lived and worked, who her friends were and what she did for fun. Still, he had not seen her stalker or the danger that was coming her way, and he hated that. He felt guilty for not seeing it even though he had been watching her from the shadows himself, if not precisely stalking her in the same crazed way this man had. \n\nHe needed to fix this, and understanding how the stalker might be operating, he was pretty sure he was the one person who could stop this guy. The psycho had crossed the line of sanity when he had lashed out at Mitch and admitted to it. There wasn't much for the police to go on, but this guy didn't know who he was messing with now, and Saxon would make him pay for ever thinking he could lay a finger on what was his. Grace may not know she was his yet, but it was inevitable now, and she would realise it soon enough. Then let that fucker come for him.\n\nA plan started to form in his mind as he stood there watching three of his best friends and Grace laughing and teasing each other. He would need these three men and Teddy on board for his plan to work before he talked to Grace. So he picked up his phone to text Teddy and organise choir practise later that night. The question was would he let Grace in on his plan first or after he had the support of her brother and his friends.\n\n*****\n\nPart 2.\n\nThe smell of something sweet toasting drew Grace to the kitchen. Despite hearing the murmur of male voices, she walked around the corner from the short hallway to her room, making herself visible to whoever it was. She stopped in her tracks to find them all there. Teddy, Beau, Eli and even Mitch had propped himself in a chair around the table with the rest of the guys. It took her a moment to notice Saxon was the one in the kitchen toasting what now smelled like slices of banana and walnut bread.\n\n\"Alright, Mitch. We've let this go on long enough, but we can't subject Grace to your stench. Let's get you cleaned up,\" Eli chuckled and stood with Beau to help Mitch to his feet as they walked him from the room. \n\n\"That's not necessary,\" Grace said with wide eyes. \n\n\"Believe me. It is,\" Teddy laughed. \"Come grab some toast while Sax is still in the mood to make it.\"\n\n\"Yeah, that mood just died,\" Saxon murmured and came to the table bearing a warming plate with a variety of toasted fruit bread and offered it to her before placing it in the middle of the table. \"Would you like some juice?\" he offered.\n\n\"I'll get it,\" she started to get up.\n\n\"I'm already up,\" he stopped her and turned back into the kitchen.\n\n\"Gracie, we talked last night about what happened to Mitch and that your stalker took credit even though he wasn't the one who hit Mitch,\" Teddy said with a frown. \"It could mean he has friends helping him and that it would be better for you to leave town and stay in a safe house with us until we can deal with him.\"\n\n\"The problem with that is, if we can't find him now and we put you into hiding, he might never resurface again,\" Saxon said as if it was not the preferred outcome. \"To catch this guy, you need to be accessible, but in a safe way where we can control the interaction. At least until Valentine's Day, which seems to be his timeline for revealing himself to you.\"\n\n\"Okay, I'm in favour of not having to give up my life and friends here to go into hiding. What would staying accessible entail?\" She asked, and seeing disappointment flutter over Teddy's face. She reached out a hand to reassure him. \"I'm just finding out what's involved. I haven't said I would be the bait in Saxon's trap yet.\"\n\n\"It's okay. I agree with him, as do the guys, but I can't bear the thought of you being broken again if anything goes wrong,\" he sighed, and she widened her eyes.\n\n\"You told them that?\" she whispered, her voice choked up. \n\n\"Not the details, just that it happened, and I can't let you go through that again,\" he said without an apology. \"This is serious, Grace; this guy is happy that Mitch was hurt, and he thinks you will still want him after doing that to Mitch, and what he did to your apartment and car because he saw you with us.\"\n\n\"Depending on how long he has been stalking you, he has probably seen you with Teddy and the guys before, so I would think he is not so much jealous that Mitch was your lover but more so that you would turn to him for comfort,\" Saxon said reasonably. \"How long have you had the feeling someone was watching you and that things have been going missing?\"\n\n\"I don't know exactly,it got worse over the holidays, but it was happening before that. I was creeped out by weird noises and knocking in the apartment around Halloween,\" she offered but couldn't be more specific. \"I didn't notice my things going missing or stuff moving in my apartment until the holidays, though.\"\n\n\"So, it's been this way since you last went out to Eversley to sing with your friend's band?\" Saxon pressed.\n\n\"Yeah, I guess so. Were you there?\" Grace asked. \n\n\"For a little while,\" he admitted. Then he turned to Teddy again. \"Hypothetically, what if someone out there saw her sing and decided she was the girl for him except that she was surrounded by your friends that night and sat on Mitch's lap for a good portion of the night.\" \n\n\"But I have only seen the guys a couple of times since then,\" Grace said. \"So, he'd know we love each other like siblings. They're my brothers' friends none of them thinks of me as girlfriend material.\"\n\n\"Pretty sure they've all thought about it. It's only natural. You're hot even by little sister standards,\" Teddy shrugged. \n\n\"Seriously? You could say that with a straight face, Teddy?\" she laughed and brushed off his words.\n\n\"Back to the topic at hand,\" Saxon grumbled, making Grace furrow her brow. \"I was trying to say that maybe he is trying to scare her out of the city and back to her friends in Eversley. If that is where this all started,\" Saxon finished his earlier thought.\n\n\"Well Fuck,\" Beau said, coming back into the kitchen after leaving Eli to keep an eye on Mitch,\n\n\"You're right. The stalker would have seen you interact with Teddy and his friends and not deem them as much of a threat despite what happened to Mitch, which I feel was more of an accident that he used to his advantage. That's why I am now your boyfriend, and you will be working and singing in my new club a couple of times a week.\"\n\n\"You? You don't even like me, and you are going to pretend to be my boyfriend?\" Grace exclaimed as she blinked at him in confusion.\n\n\"Who said I didn't like you?\" he demanded. \"Nothing could be further from the truth. I didn't know who you were when you strolled into the workshop the first time we met, but I have been nothing but friendly since then.\"\n\n\"First impressions matter because they are hard to shake,\" she shrugged. \n\n\"Gracie, I need to know your safe, so until Valentine's Day, you live, work and remain in this building unless you are with Saxon or the guys, understand?\" Teddy commanded. \"I couldn't bear it if you broke again. So you need to do this for me if you won't do it for yourself.\" He knew it was emotional blackmail, but he wasn't above fighting dirty to keep her safe.",
        "\"Seriously? You're going to put that on me?\" she asked her brother incredulously. \n\n\"I will kill any bastard that hurts you, and you can visit me in jail because this guy is not fucking around Gracie, and now neither are we,\" he looked to his friends for support. \n\n\"And the safe house option?\" she asked. \n\n\"We take you to the packhouse, and you live, eat and breathe there, which would be safer all around. If you took that option, you wouldn't have to date me, but you wouldn't see your friends or work and sing in the club downstairs,\" Saxon explained. \"Also, there is less of a chance of us catching the arsehole if he can't find you to torment you the way he has been. That means the cycle could just start all over again once you come out of hiding.\"\n\n\"And if I just pack my shit into my car and just run away?\" she asked, making Teddy growl at her.\n\n\"Your stalker would track your bank accounts, phone, rego. You would be playing right into his hands,\" Saxon explained.\n\n\"I assume you have all talked through every other option I might have?\" she looked directly at Teddy, and he nodded. \"And the best option is dating Saxon and acting as bait so the stalker will come to us?\" Grace's voice was clipped as she considered the no-win situation. She looked at Saxon as she took a bite of toasted cinnamon bread. He'd been her shadow recently, and she hadn't hated it. The truth was she felt comfort in knowing he was close by with his dark, broody persona.\n\n\"They hit you with a lot this morning,\" Beau said. \"Maybe you'd like some time to think about what you want to do?\"\n\n\"No,\" she sighed. \"I'll stay here and face it for Teddy,\" she gave him a crooked smile and then turned back to Saxon. \"You aren't going to like being my boyfriend, pretend or not,\" she let her smile widen as he stared at her and narrowed his eyes.\n\n\"Why is that?\" he challenged back.\n\n\"I'm one of those needy, clingy girlfriends who enjoys PDA and romantic gestures. But, of course, that goes both ways, so expect me to be a little handsy. There will be no cutesy nicknames, but I could go with something weird. But, of course, the weirder, the better, so you have to make up a back story for it. I'll let you know yours after my shower,\" with that, she stood and left them staring after her as she went to shower. She stopped at the door and turned back. \"Oh, and if my boyfriend plans to take me out anywhere, like on a date, we need to go shopping this morning.\"\n\n\"She's not even joking,\" Teddy leaned back and roared with laughter at the look of chagrin on Saxon's face.\n\n\"Fuck, I love that girl,\" Beau choked out around his laughter. \"Good luck with that, buddy.\"\n\n\"You think either of you is going to enjoy watching the PDA she just asked for?\" Saxon smirked at them, and their laughter died off. \"I'm going to shower too, and then the Amazing Grace and I are going public.\"\n\n*****\n\nGrace emerged from her room in a dress she hadn't worn in over two years. She was surprised to find it amongst the saved ruins of her clothing. Most of what was saved was old and threadbare or damaged, and this dress was the most decent thing she had to wear aside from the work uniform Teddy had brought for her and a few other essentials to start back at work. It was tight across the bodice, but the full skirt was delicate and rested just above her knees. \n\nThe dress had been white once but was now a slightly greyish off-white with flamingos placed randomly all over it, giving the greyish background a weird pinkish tinge. With the choice of her work shoes or joggers, she chose the back kitten-heeled pumps and felt immediately like some retro wannabe. She put her hair in a loose plait that curled around her head and hung over her left shoulder.\n\nStraightening her shoulders as she approached the guys who still sat around the table, although it had been cleared and the kitchen cleaned. She smiled. She loved the guys as much as she loved Teddy. She knew any one of them would come to her rescue if she needed. On the other hand, Saxon didn't know nor did she know the mysterious sixth member of their little posse.\n\n\"So, where's my Chewbacca? You know, the tall hairy guy I'm dating now?\" she asked with a grin.\n\n\"Why Chewbacca, he's not that hairy?\" Beau said with a frown. He always seemed much closer to Saxon than the others, and Grace felt like she might be walking a fine line between insulting his friend and making them laugh.\n\n\"Well, I always imagined big guys like Saxon make the Chewbacca noise when they cum,\" she shrugged and tried to hide her smile. \"Don't you wish you had stopped with tall and hairy?\" she tilted her head at Beau. \"You can't get that sound and image out of your head now, can you?\"\n\n\"Cinnamon seems a bit tame by comparison at this point, but it's a name we can explore together,\" he chuckled, enjoying the small jump she made as he startled her. \"You ready to go?\" he asked.\n\n\"Where are we going?\" she asked. \n\n\"Downstairs to start with, we need to discuss your new job and the security required for your safety while working and living here. Then, when you leave this place, it will always be with one of the guys at a bare minimum and me or Beau. This stalker you have isn't fucking around Grace, and now neither are we,\" Saxon said, taking her hand and walking her to the elevator rather than the stairs.\n\nThey travelled down to a basement where the elevator opened out onto a speak easy style whiskey bar, to her surprise. Saxon didn't let go of her hand as he walked through to stand before the group of men and women gathered there on lounges set around low tables.\n\n\"Thank you all for coming in so early this morning, except the kitchen crew, because you're already on the clock,\" Saxon chuckled. \"I'd like to introduce my girlfriend, Grace Freeman, who will be joining the team here at the Doss House both in the club upstairs and here in the whiskey bar. So the kitchen and floor staff can go. Security teams, stay, please.\"\n\n\"Well, that was embarrassing,\" Grace said, moving closer and standing on her tiptoes so she could speak close to his ear as some of the people left the room.\n\n\"How was that embarrassing?\" he asked, looking stunned. \n\n\"You drag me up here like some first-grade show and tell exhibit for everyone to gawk at and announce I'm your girlfriend. Do you know how many of those women gave me death glares? The stalker is the least of my problems right now,\" Grace said in exasperation.\n\n\"I don't date anyone that works for me,\" Saxon shrugged. \n\n\"Hello, you just told them I will be working here,\" she argued.\n\n\"We were dating first, and the job you have will be different to theirs, so it's no big deal,\" he said as if that made all the difference.\n\n\"And what exactly am I supposed to be doing here if it's different to the rest of the wait-staff?\" she demanded. Her brain conjured some unappealing possible jobs, and she quickly looked around to make sure there were no poles on the small raised platform she assumed would be a stage.\n\n\"Hold that thought,\" he lifted a finger and turned to address the security team that gathered closer to where they stood with the guys now standing behind them. \"Gentlemen, there have been threats not only to Grace, but to members of the Sovereign Six of the Steel Brotherhood. Mitch was targeted yesterday in retaliation for helping Grace when her stalker destroyed her apartment and belongings. The stalker has also left threatening messages at her former place of employment. I trust this team will not allow that to happen here.\"\n\nGrace felt like she was under a microscope. She wasn't sure whether to say something in her own defence or not. She hated being the focus of attention in this room. She tried to pull her hand from his so she could make her getaway, but he only clutched it tighter as he continued to speak for another minute to hand over the meeting to Mitch and then suddenly, they were moving again with Beau flanking her other side. They went through a series of doors and wound up in a garage where Beau unlocked a classic car that Grace couldn't identify as Saxon guided her to the backseat and then slid in beside her. \n\n\"This morning we shop, and this afternoon we discuss your job in the club,\" Saxon stated. \"You've had a few days to go through what could be saved, so you have a good idea of what you need?\"\n\n\"I guess so,\" she frowned, thinking of her dwindling bank balance. \n\n\"Your brother and I have worked out a budget, so stop frowning. I like my girlfriend to look and act a certain way so pretend I am just providing you with the costume to play your part,\" he said when her frown deepened at the news of a budget.\n\n\"It's your money to waste,\" she shrugged then turned to look out the window. The last few days had been so surreal. Her life had never been perfect but how she wound up in the back of a car chauffeured around by Teddy's brotherhood seemed to elude her. Possibly because it was so hard to believe she had lost everything she owned and her job in less than a week because of some guy who tried to make her homeless and hopeless for what? So, he could swoop in and save the day and have her love him in return? \n\n\"I can almost hear you thinking. Do you want to share the worries?\" Saxon asked gently.\n\n\"So, this guy took away my home and my job, and I'm assuming he's now targeting my friends that he thinks are a threat. Mitch is always picking me up like a doll to hug and carry around, but the others are pretty friendly too. If he is trying to destroy my life, so I have no option but to turn to him, aren't Teddy and the guys in more danger than me? I mean, that's assuming he wants me alive when he reveals himself on Valentine's Day.\"\n\n\"That's why I'm now your boyfriend,\" Saxon smiled, \"And why there will be a lot of PDA while we are out in public today. So it's probably best to get that first awkward moment out of the way here in the relative privacy of the car,\" he said softly. Then he turned her face to his, cupping her cheek and jaw with one hand. He smiled softly and pressed his lips to hers, running his tongue along the seam of her lips and being happily surprised when they parted for him.\n\nThere was nothing rushed or hurried about the kiss. It wasn't hard or aggressive. It was one of those perfect first kisses that Grace read about in the trashy erotic stories she enjoyed. But, no matter how good this moment felt, she had to remind herself this was just pretend. They were hunting her stalker. Her hands brushed over his chest, and she knew she had to stop this before she got carried away with the scary hot guy that was her pretend boyfriend. Pulling back, she looked up at him and smiled.\n\n\"Well, that wasn't awkward,\" she gave a nervous laugh and sat back in her seat, unsure of what to do now. \n\n\"Not one little bit,\" Saxon agreed and turned his head at a snort from Beau, who continued to drive.\n\n\"Where are we going?\" Grace asked as she looked out of the window seeing the large houses on big blocks, the yards perfectly manicured. They were in a suburb she could never dream of living in, and suddenly she felt drab and out of place in her old dress and loose messy braid. \n\n\"Harbour Cove,\" he responded. \"I like shopping there, and I have a few things in mind for you.\" \n\n\"Resort wear?\" she laughed, making him roll his eyes at her.\n\nMinutes later, they parked and walked into the small shopping precinct built around a harbour full of million-dollar yachts and boats. Saxon guided Grace to Wild Secrets and left her in the capable hands of the owner while he spoke with Beau at the front of the store. Nothing had price tags on them, and she worried about the amount of lingerie this woman was suggesting. So, she agreed to none even though she allowed the woman to measure her and tried on several brands for fit. She preferred the lighter flesh or pink tones, even some pastels and subtle prints, but she outright refused the bright reds and stark blacks that seemed prevalent in the sexier brands. \n\n\"Saxon, there are no price tags on anything, which tells me I can't afford to be in a place like this,\" Grace hissed at him when he approached to check on her.\n\n\"I told you your brother and I put together a budget, and you don't have to worry about it. Besides, you can pay us back when you get the insurance from your apartment if it means that much to you,\" he shrugged. \"Get dressed and tell me which things you liked, and I'll choose for you if you like.\"\n\n\"Whatever,\" she huffed. Then, when she was dressed, she found Saxon talking to the saleswoman who was busy boxing up a few of the sets she had particularly liked without her having to point them out. \n\n\"If you could courier those things to this address today, we would appreciate that. Thank you so much for your help, Rachael,\" Saxon said with a half-smile that showed a shallow dimple in one cheek, and Grace swore the woman almost swooned at her name coming from his lips. Her eyes travelled down to where their hands met as Rachael handed him the receipt, his hand covering hers for a moment. \n\nYoga and fitness wear came next, then more casual clothes for everyday wear though the clothes in this place deemed everyday wear would have been a dressy casual at the very least where she came from. They worked their way through her wardrobe to the cocktail dresses and gowns that she baulked at because she never had any need to wear gowns since she never went anywhere fancy. \n\n\"I'm not going to argue with you, Grace,\" Saxon said when she finally blew up and refused even to try on a dress in the last shop. \"Besides, we almost skipped lunch entirely. Beau will take you to Paragon's while I return a few urgent calls. Order a platter, and I will join you as soon as I can,\" he smiled and pulled his phone from his pocket, walking slightly away from the two of them.\n\n\"I thought he'd never leave,\" Beau joked, rolling his eyes. \"He can be a bit intense at times, and I know this wasn't easy for you, but you have to understand that this is his life, and he wants to share it with you.\"\n\n\"And every other girl in this place. You know it's pretty bad form to have your arm around your pretend girlfriend's waist while flirting with every saleswoman we met,\" she grumbled.\n\n\"That wasn't flirting.\" Beau chuckled. \n\n\"You weren't close enough. That first woman almost swooned when he held her hand and thanked her for putting up with me,\" she continued to complain, making him laugh again, but before he could make excuses for his friend, they arrived at the restaurant.\n\n\"Table for three,\" Beau said as the hostess approached them. \"Saxon will be joining us.\"\n\n\"Of course,\" she said with a sweet smile and led them through to a table near the glass wall looking over the cove. \n\n\"Thank you,\" Grace said politely as she was seated and a napkin spread on her lap. Then she watched the woman walk away and closed her eyes, taking a deep breath. \n\n\"Beau, I can't take any more of this today. I need you to take me home, and if you won't, I'll catch a cab,\" she said, standing up and grabbing her purse and phone. \n\n\"Wait, what?\" Beau looked stricken. \"Take anymore of what?\" he asked, confused.\n\n\"I told you already. It's humiliating to have Saxon flirt with everything in a skirt as if I am just supposed to put up with that shit. Not that anyone knows I'm his girlfriend. You know, if my stalker followed us today, he wouldn't believe the boyfriend thing for one minute and for all I know, Saxon went back to that last salesgirl who was all over him and is fucking her brains out right now. Even this bimbo's eyes lit up at his name. I wouldn't put up with that shit from a real boyfriend, and I am sure as shit not putting up with it from a pretend one. It's humiliating,\" she ranted. \n\n\"Stay for lunch, please. I will watch how he is with the hostess and servers, and if you are right, I will take you home straight after we eat and back your decision not to be his girlfriend, deal?\" Beau said, trying to think quickly. \"I wouldn't mind taking a turn at the role,\" he grinned and took her hand in his. He didn't doubt that Saxon probably looked like he was flirting. Women threw themselves at him often enough. He was intelligent, wealthy and had a bad boy persona that drew women like moths to a flame. Unfortunately, he often used that to get what he wanted, and Beau was sure that was the case today. He didn't know why Saxon had sent them to lunch ahead of him, but he knew it had been the wrong move after hearing what Grace thought.\n\nGrace sat back down but wasn't happy as the time marched on. Each time Beau tried to make conversation, she shut him down with one-word answers or pleas to take her home. When she finally saw Saxon walking towards them with the hostess glued to his side and both hands wrapped around his bicep, she muttered \"see\" under her breath and shook her head.\n\n\"Don't you two look like a happy couple,\" Beau said, completely straight-faced and looked meaningfully to where the hostesses' hands wrapped around his bicep.\n\n\"Oh, we're just friends,\" she said with a smile. \"With benefits,\" she waggled her eyebrows and laughed a pretty little trill as Grace wished the floor would open up and swallow her. \"I'm joking, just joking,\" she hurried to say as Saxon pulled his arm from her grip and stepped away from her.\n\n\"What the hell?\" he asked, shock giving way to anger as Grace refused to look at him, keeping her eyes down.\n\n\"Seems like your girlfriend feels like these little humiliations have been happening to her all morning, so unless you have some magic apology, I think you can consider yourself dumped,\" Beau said without any emotion. \"We can go now if you want Grace, I'm sorry I didn't believe you.\"\n\n\"Oh my God, I'm sorry! I didn't know,\" the hostess apologised and then fled from the anger evident in Saxon's expression.\n\nGrace gathered her purse and phone and stood to walk from the restaurant with as much dignity as she could muster without lifting her head to look at Saxon. But, unfortunately, the day was just going from bad to worse. She'd barely taken two steps before Saxon stood before her and pulled her into his arms. \n\n\"I'm sorry. I didn't realise,\" Saxon said softly. \"This is going to take some adjustment on both our parts. I've never had a girlfriend before. You have to tell me what I'm doing wrong. I would never purposely hurt you, not ever.\"\n\n\"I've never dated a player before, but it sucks right off the bat, and I don't think I can do it,\" she said. \"I know you are only trying to help, but I can't take it knowing you were just off screwing some bimbo while your buddy babysat me,\" she sighed.\n\n\"I wasn't off fucking anyone,\" he laughed and guided her back to her seat, pulling his closer to hers. \"I went and ordered your uniform for work and picked up a dress I liked that you tried on a few stores ago,\" he lifted the bag. Despite sending most of the purchases home by courier, he kept a complete outfit for her, including shoes. \"I wasn't even flirting with anyone today. You can't blame me for that.\"\n\n\"Beau, hand me your napkin,\" Grace asked sweetly. \n\n\"Okay,\" Beau said slowly, showing his confusion. As he held it out toward her, she placed one hand under his and one over the top to capture the piece of material. Then she looked up into his eyes.\n\n\"Thank you so much, you've been wonderful, and I appreciate all the time you have given me this morning when I know you're so busy,\" she purred and watched a slow smile form on his face as he fell under the same spell Saxon had used on so many women. \"Ignore my humiliated boyfriend over there because what matters right now is you and me,\" she added, and Beau snapped out of his daze.\n\n\"You gotta hand it to her. She does a great impression of you,\" Beau shrugged.\n\n\"Fuck! Grace, I had no idea, but I do now, and I will be a much better boyfriend. It's the first day. There were bound to be issues to overcome. Let's eat something, and we will work out some ground rules. This is about keeping you safe,\" he said, anger still colouring his voice even though he was doing his best to push down the jealousy she had just made him feel. That little scene with Beau had made him see red, not that he would admit it, and if that was how she had felt today, he understood why she was so upset. After that, he would be more careful in his interactions around women with her and without her.",
        "\"Fine,\" she sighed. Then looked over his shoulder at the approaching waitress. Seeing her look over his shoulder Saxon knew one of the staff was approaching, but he didn't care. He had to try to make everything right with her. Cupping her face between his hands, he smiled and gave her a soft, sweet kiss. \n\n\"Do you know what you want to eat?\" he asked in a hushed voice when he broke the kiss. \n\n\"Not really. I wasn't looking at the menu,\" Grace admitted. \n\n\"We could get a platter. Then you could eat what you like and leave the rest. Maybe one to share for the three of us?\" Saxon suggested as he leaned back to encompass Beau in the question.\n\n\"Suits me,\" Beau said. \"I love the platters here.\"\n\nThe atmosphere relaxed during their lunch and the two men's friendship with the easy and mostly funny banter helped to keep her relaxed. After lunch, Saxon excused himself and left her with Beau while he went to get some work done that couldn't wait.\n\n\"God, I think that's worse,\" Grace complained as Beau introduced her as Saxon's girlfriend when entering the spa after lunch. There was an unquestionable comfort in being invisible, she sighed. She was taken through for a massage and facial before being placed in a chair beside Beau, who claimed to love pedicures more than his manhood could stand if that got out, and she swore to keep his secret.\n\n\"I don't think I can take anymore primping or poking,\" Grace held up her hands as Beau tried to guide her to the salon chairs in the all-encompassing spa.\n\n\"Come on, just a wash and a trim you don't even have to get the highlights Sax suggested,\" Beau said.\n\n\"Highlights!\" What colour highlights? What's wrong with the colour it is?\" she asked in anxious rapid fire.\n\n\"Blonde just to enhance your natural highlights. Nothing is wrong with your hair. It's beautiful just the way it is,\" he reassured her.\n\n\"Then why am I here?\" she huffed. She'd never had to put up with this much attention in her whole life. \"It's all too much for one day with the shopping and the women all looking at me like I'm some sort of home wrecker and everyone touching me and poking me. I can't do this, please, Beau, don't make me do this. I'll come back tomorrow, I promise.\"\n\n\"Okay, how about this,\" he negotiated with her. \"I will sit with you the whole time and show you some awesome custom paintwork and detailing I can do on ladybird when the parts and panels we need come in.\"\n\n\"Really?\" she asked. \"Anything I want?\"\n\n\"Well, within mine and Eli's artistic talents, mainly Eli's talent,\" he chuckled. \"But I haven't seen him turn down a challenge yet.\"\n\n\"Will you talk to Teddy about letting me race again?\" she asked.\n\n\"You're a dumbass if you think we don't know you've been racing her now and then,\" Beau shook his head. \"People talk when they see a car like the ladybird being driven by a girl.\"\n\n\"Fine,\" she huffed again. \"But this is the last thing, right?\"\n\n\"You won't have to leave this chair until you're ready to go home,\" he promised. \n\n\"Okay, let's get this over with then, and I will book out tomorrow as a rest day,\" she gave an exhausted sigh.\n\n\"I know you both agreed to this relationship thing, but, pretend or not, I had never seen Saxon treat a girl the way he treats you and never have I heard him apologise before today,\" Beau pointed out. \"He's been with women, none of us is a monk, but he hasn't ever had a girlfriend or at least not since I've known him, which is longer than I've known any of the other guys. So he probably doesn't realise how overwhelming this is for you and is just trying to do something nice.\"\n\n\"It is nice, and he is being very generous, but I feel like I'm'not good enough to be his girlfriend, and he is trying to make me good enough, so I don't embarrass him at his club or in front of his friends who don't know that I'm Teddy's sister,\" she tried to explain. \"If I let him change the way I look and dress, then what does that say about me?\"\n\n\"Trust me, that's not his or my intention. We all love you just the way you are, Gracie. You're our Amazing Grace, and we are just trying to protect you and replace all of the things this stalker took from you, including a safe space with people who love you,\" Beau explained while guiding her to the chair. \"You know any one of us would have volunteered to be your boyfriend and been happy about it. It just made sense for Saxon to be the one because if your stalker has been watching for a while, he wouldn't have seen you with him as just friends like us.\"\n\n\"Thanks, Beau. I would have felt pretty lucky to be your girl too,\" she smiled and kissed his cheek, then she let the stylist put a cape over her shoulders.\n\nTwo hours later, with her hair cut, highlighted and styled and her make up done professionally, she went to the locker room to change out of the robe she had been wearing. She found that instead of the clothes she had worn into the spa, there were only the boxes and bags Saxon had purchased throughout the day for her to change into now. Her clothes were not good enough for Saxon's girlfriend, she got it, but she couldn't wait for this to be over and get her own life back again. They would catch this guy by Valentine's Day. They had to, Teddy had promised her.\n\n*****\n\n\"She thinks you didn't like anything about the way she looked and changed her to be an acceptable version of your girlfriend because she wasn't good enough the way she was,\" Beau warned Saxon as they waited for her to appear.\n\n\"Fuck. That's not why I did this,\" Saxon growled. He thought Grace was perfect the way she was, and he had thought he had made that obvious to anyone who cared to look. \n\n\"I know that. You know that, and the guys know that, but she doesn't know that. What she knows is she had seen you giving attention to all the beautiful women who are flirting with you, and she thinks you need her to compete with them,\" he explained. \"She doesn't know you, Sax, not like the rest of us do. So you can't expect her to understand that this is not something you do regularly for women. She's going along with it because we promised to catch this guy by Valentines Day, but she's not happy about it. Don't push her anymore today, or she might just break. She's not as tough as she looks,\" Beau tried to explain. \n\n\"I'll... Fuck!\" anything else he was about to say went out of his head as he saw her emerge from the locker room.\n\n\"Wow,\" Beau said and stepped forward to hug her. \"You look amazing.\"\n\n\"I look like someone completely different,\" she laughed, \"But I guess that was the aim of the game today.\" Then, she turned to Saxon, \"Do I pass the girlfriend test now?\"\n\n\"You always did,\" Saxon murmured and moved toward her. \"You would look beautiful no matter what you were wearing. This was something you chose, not me, but I like it,\" He cupped her face with both hands and kissed her. He had no reason to keep his hands to himself. She'd asked for PDA, and he wasn't about to hold back. \"You chose everything we bought today. Would you like to see what I would choose for you?\" he asked, tilting his head before kissing her softly again. He had plans for tonight, but after being faced with her reaction to the shopping and spa day and Beau's warning, he changed those plans.\n\nGrace let out a breath as his word and kisses did a number on her brain. He was right. He hadn't even suggested an outfit or style after the lingerie shop, and she could see now that he did that to make her fight him and pick out the things she needed rather than crotchless panties and peekaboo bras he'd picked up when faced with her refusal. He'd been too busy on his phone or flirting with the shop assistants to pay any attention to her as they'd shopped.\n\n\"I think I know how you would prefer me to dress, so I will pass,\" she rolled her eyes.\n\n\"Fair enough, but I think you would be surprised,\" he chuckled.\n\n\"Surprise me then,\" she challenged. \n\n\"Alright, let's go,\" Saxon agreed.\n\n\"Huh! No adult-only stores here?\" she asked sweetly. He just chuckled and took her hand, leading her from Harbour Cove and all of its designer boutiques. \"This new place of yours didn't have the same feel as the Fox Trap, but you can never judge a book by its cover.\"\n\n\"When have you been to the Fox Trap?\" Saxon stopped suddenly and turned to face her, pulling her close and holding her by her biceps.\n\nGrace looked up into hard dark eyes and blanched. He was angry at her, or at least mad about what she said. The truth was she hadn't been there, but her brother had told her enough about what happened there to ensure she was never curious enough to go in and check it out.\n\n\"Do you honestly think Teddy or the guys would let me anywhere near a place that wild?\" she rolled her eyes. \"They told me all the nasty stories to make sure I never went there,\" she sighed. \"Now back off before I scream and have that lovely security guard over there come to my rescue.\" She said in a quiet threat and smiled.\n\n\"Try it. He's on my payroll,\" Saxon grinned and lowered his head to kiss her. This girl was perfect, she challenged him as no other had for years, and despite her bravado, she melted a little in his arms when he kissed her like this. Then, keeping an arm around her as he broke the kiss, they continued to the car. \"Don't push me, Cinnamon,\" he paused. \"Cinnamon bun? No, that's not right either, Cin?\"\n\n\"Don't worry, Chewy. Something will come to you,\" Grace grinned as he huffed and helped her into the car.\n\n\"Call ahead and let Boyd know we're coming,\" Saxon told Beau and sent a quick text to Eli and Teddy before sliding into the back seat beside Grace again. \"I realise you don't know and probably don't care, but I own this centre, all of those owners and managers pay rent to me, and I hire the centre management and security. So I have to be nice to them and vice versa. I was not and will not flirt with any of them. When I am flirting, it will be with you, and you will know it,\" he had leaned close and spoke in hushed tones close to her ear, his free hand running from her cheek down over her shoulder, ribs and settled on her hip in a gentle caress. \n\n\"Thank you for clearing that up, not that it makes any difference now,\" she said, turning her head to look at him. The rational part of her brain wanted to push him away and maintain her own space, but something about this guy drew her to him when he was around, and she couldn't have said why. When he wasn't around like this afternoon, and she could think clearly, she still wondered what he was doing and when he would return. It was stupid, she knew. He wasn't the type of guy she dated, not that she dated much. Beau's words from earlier about him not having a girlfriend before ran through her mind, and she furrowed her brow.\n\n\"What's going through that pretty head of yours, Grace?\" he asked, taking a deep breath as the car rumbled to a start and Beau pulled out of the parking lot. He watched as she looked up at Beau and then back at him. \n\n\"Teddy and the guys, and I'm assuming you don't do the girlfriend thing,\" she shrugged. \"I came to the Doss House and would have stayed there without all of this. So why all this pretend boyfriend shit?\"\n\n\"You saw how your stalker reacted to Mitch comforting you. This gives him a target who knows he's coming and can look after himself,\" Saxon explained, regurgitating what he had said this morning. \"We explained the plan this morning.\"\n\n\"You did, but Teddy was putting a lot of emotional blackmail behind this idea. I was already doing what he asked. This all seems so unlike you guys, especially what I know about you,\" she challenged him again, holding his gaze.\n\n\"Teddy is the only one with family ties outside the brotherhood. You're different and deserve better. We want you safe and protected,\" he said without actually answering her question.\n\n\"Okay, fine. Where are we going?\" She asked, resigned to the fact that he would continue talking in circles rather than answering her properly.\n\n\"We are going to a place where I can get my girlfriend some decent clothes,\" Saxon grinned.\n\n\"You don't like to give me straight answers, do you?\" she asked.\n\n\"We're heading to a warehouse that a friend of mine runs. It has a small factory outlet attached where we can get everything we need,\" he explained further.\n\n\"Thank you. Who says you can't teach an old dog new tricks?\" Grace teased and patted Saxon's thigh.\n\n\"The boys are behind us,\" Beau said. \"Eli and Teddy both.\"\n\n\"Good,\" Saxon said, \"just in time.\"\n\nBeau pulled up outside a warehouse, and Saxon was helping Grace from the car when Teddy and Eli showed up. Dismounting their bikes, they each hugged Grace as if checking to make sure she was okay.\n\n\"What are we doing here?\" Eli said, stepping back from Grace.\n\n\"Delivering the bikes like I asked you to,\" Saxon said without missing a beat. \"We,\" he indicated Grace and himself, \"Are here because she wants to know what I'd prefer my girlfriend to wear,\" Saxon shrugged.\n\n\"One bubble wrap gown coming up, Princess,\" Eli laughed.\n\n\"Give us a little time to look around. Keep an eye out in case you were followed by the dickhead who claims he got Mitch yesterday,\" Saxon commanded and, without waiting for a response, took Grace's hand and shepherded her inside the building. \n\nThe room smelled of leather and polish, and Grace was surprised to find herself facing a counter in front of rows upon rows of motorcycle helmets.\n\n\"Well, well, well. So what's a pretty young thing like you doing in a disreputable place like this?\" the man behind the counter chuckled, smiling at her.\n\n\"I dunno, Mister. My big strong man here said I should come, and well, here I am,\" she gave her best impression of a brainless bimbo while clinging to Saxon's arm. \"Do you have anything in bubble-gum pink because that's like, my absolute favourite colour!\"\n\n\"Boyd was trying to be nice. There was no need to be a sassy bitch,\" Saxon scolded her for the first time that day. \"You can challenge the guys and me as much as you like. I enjoy it. But you will treat my friends with respect, do you understand?\" he placed a hand under her chin and tilted her face up to his. \"Now, we'll try this again. Grace, this is Boyd and Boyd, this is my girlfriend, Grace. She's still learning the rules.\" \n\n\"I can see that,\" Boyd smirked. \"You walk in here dressed like a sweet little girl that's how you get treated, Missy. Let's get you into some clothes to match that attitude.\"\n\n\"I think we just found the winner for your new nickname, Missy,\" Saxon smiled widely as Grace scowled at him.\n\n\"You want the good stuff?\" Boyd asked, shoving hangers along rails as if looking for something particular.\n\n\"What's the good stuff?\" Grace asked as Saxon answered with a nod. \n\n\"It's got extra protection woven into the fabric,\" Boyd said. \"Turn for me,\" he pointed one finger down and rotated it.\n\nRaising an eyebrow at Saxon, who nodded, Grace turned in a full circle and held her hands out the side as if asking what next. Boyd put a pair of pants in her hand and pointed to a curtained-off dressing room. The pants fit like a second skin, and despite the thickness and feel of the material, they were probably the most comfortable pants she could remember owning. The curtain opened slightly, and Saxon looked in, holding out a bubble-gum pink top that seemed to be made of strangely sewn together triangles that took her more than a minute to work out how to put on while Saxon watched her enjoying her confusion.\n\nStrangely, she didn't feel shy as he watched her clad in the skin-tight pants and only a bra as she wrestled with the top.\n\n\"Okay, come out and let me see properly,\" Saxon instructed. He watched as she padded out on bare feet. \"Boots,\" he said to Boyd, who was already retrieving her shoes and clothes from the changing room.\n\nGrace watched curiously as the two men interacted with a familiarity she hadn't expected when arriving here. The fact that he had scolded her for her attitude should have been enough of a hint that there was mutual respect between these men, but the more she watched, the more she saw that comradery that Saxon also shared with the guys. By the time she paid attention to the clothes she had tried on and exchanged for others, she was standing in a pair of skin-tight shiny black pants that Boyd told her were made of Kevlar, a soft, pink V-neck T-shirt and a vest made of the same material as the pants that laced up the front to just below her breasts. \n\n\"What are you thinking for the jacket detail?\" Boyd asked Saxon. \n\n\"Can I have a look at the options, please?\" Grace spoke for the first time in what felt like forever.\n\n\"You asked to see what I would like. This is what I would like my girlfriend to wear,\" Saxon said, moving closer to her and running his fingers down her vest to the lacing. \"I want a particular jacket. Boyd knows which one. He was just asking if you wanted a badge on the shoulder or the back, and unless you are joining us permanently, badges will damage the leather when you try to remove them. Are you ready for that level of commitment?\"\n\n\"Oh, I see,\" she said in a tight voice. At the same time, one hand continued to play with the laces on her vest, Saxon's other hand wrapped around her waist, holding her close.\n\n\"So, put on this jacket, then I can let the guys in. They've been bugging me for the last fifteen minutes,\" he chuckled. He took the jacket Boyd was holding and stepped back as she put it on and did up the zip that sat on a slight diagonal line behind a flap that buttoned over it to the opposite side of her collar.\n\n\"Like everything else, it fits perfectly,\" Grace said, turning in a complete circle for him. \n\n\"Boyd has a good eye for fit,\" Saxon agreed and stepped forward, pulling her tight against his body this time so that she could feel how she affected him as he said. \"You look so fucking hot, even I don't believe that you would be my girlfriend,\" he breathed and kissed her, deepening the kiss and leaving her breathless when he finally pulled away from her. \n\nIt took Grace a moment to realise she could hear other voices, and she blinked, turning towards the doorway. Teddy looked surprised, and Beau appeared frozen with one hand on the door as he shut it behind him. On the other hand, Eli shrugged off his surprise and walked quickly toward her. \n\n\"Fuck me! Let me be your boyfriend. It will be worth every second of putting up with that psycho stalking us,\" Eli announced. \"I promise I will treat you like the princess you are,\" he smiled widely as Saxon growled from beside her.\n\n\"That's my little sister you're talking about,\" Teddy groaned.\n\n\"Foster sister and don't try to tell me you don't think she looks hot,\" Eli accused.\n\n\"You brought my bike?\" Saxon asked Eli and held out his hand, expecting his keys. \"Teddy, you gave Beau his gear?\"\n\n\"Yeah, we're good to grab her stuff and head back,\" Teddy agreed\n\n\"Be careful. The stalker could be watching you to find her. We're going for a ride,\" he held out his hand to Boyd, who placed a helmet in his hand. \"Thank you for everything, my friend. You have my order?\" he asked and, getting a head nod from Boyd, turned to Grace. \"Let's go,\" he took Grace's hand, and they left the building.\n\nIt was the first time Grace had heard Saxon be the leader she knew him to be. It surprised and, in some ways, reassured her that the guys followed his lead without question. The fact that Teddy handed over his bike without argument amazed her. There was history between these four men, five including Mitch. She knew it because Teddy had lived it, and in small ways, so had she. \n\n*****\n\nGrace loved that Saxon didn't coddle her as he drove his bike up into the surrounding hills. She loved the feel of the vibrations and speed as she held onto the man and wished as ever that she had a bike of her own, but Teddy had warned her that he would dismantle any bike she bought. Nevertheless, she revelled in it so much that she was disappointed when they finally pulled off the road into a small hotel.",
        "\"Where are we?\" Grace asked, pulling off her helmet.\n\n\"Stopping to meet some friends of mine,\" Saxon said and took her helmet, placing it in the saddlebags along with his own. \n\n\"Okay,\" she said uncertainly and unzipped her jacket seeking more fresh air after the long ride on such a warm night. Then, letting him take her hand as they walked inside, she turned her head to look over her shoulder at Beau, who followed them as he had all day.\n\nWalking inside, she was surprised to find only four other guys there, and an older man was standing behind the bar. Saxon and Beau seemed to relax despite the fact every eye was on their entrance.\n\n\"Gentlemen, thanks for meeting us here. Sorry, we're late. We had to stop for a few things on the way,\" Saxon said. \"This is Grace, and you know Beau,\" he said. \"This is Kieran. He runs this place for me on the weekends. He opened tonight for us as a favour to me,\" he indicated the older man behind the bar. \"The other men here are musicians who have auditioned to be part of the house band and the Doss House. You can all introduce yourselves,\" he said. \n\n\"Taylor, keys and guitar, rhythm or lead depending on what's needed,\" the man closest to them started. \n\n\"Red, bass, any sort if it's got a beat, I'm there. Drums, but that's secondary,\" the next man introduced himself. \n\n\"That's me, drums and percussion, you can call me Happy,\" a guy with big teeth and a broad smile stepped forward and stuck out his hand to Grace. \"Nice to meet you.\"\n\n\"I'm Parker. I can play most things, Sax is my preference, but I can do keys or guitar depending on how this group washes together,\" he said casually as if it was no big deal to him if the gig worked out or not. \"We all can sing, it seems though some of us better than others. I hear that's your thing, though?\"\n\n\"Oh, I'm not a professional. I sing with a friend's band now and then, but that is the extent of my experience,\" she waved away the question.\n\n\"Drink?\" Saxon asked her. \"Then we'll talk about why we're all here over pizza.\"\n\n\"Sure, just a coke would be great,\" she said, not sure why these guys thought she was a singer.\n\n\"Happy, did you bring it?\" Saxon asked.\n\n\"Sure, thing, boss,\" Happy smiled and turned to one of the comfortable looking chairs around a low table, plucking a guitar that had a redwood fa\u00e7ade that faded to black on the edges. A small detail of a string of small leaves curled around one side of the soundhole with tiny white flowers. It was a reasonable replica of the guitar that had been smashed when Grace's apartment had been destroyed.\n\n\"This is for you to audition with,\" Happy grinned, handing it to Grace.\n\n\"I'm here to audition?\" she asked with wide eyes.\n\n\"You can sing. We've all heard you heaps of times. So, while we are hunting, you will sing at the club, and when the psycho does something stupid, security will confine him until the police arrive,\" Beau said as if it made perfect sense.\n\n\"Whoa! What are we signing up for here?\" Parker asked. \"I didn't....\"\n\n\"I wouldn't finish that sentence if you. Think about it before you can't take the words back,\" Beau cut him off. \"Of course, you can leave now if you prefer.\"\n\n\"Let's grab a table, and I'll explain,\" Saxon said, indicating a low table that had already been prepared with napkins and plates. He spent the next hour discussing what had happened and the plan to keep Grace safe while they ate pizza and discussed the plans for her to sing with the band several times a week.\n\n\"The gigs are great, and the pay's not bad for the hours, but can she actually sing or are you just being a good boyfriend helping her to live the dream?\" Parker asked, eyeing Grace suspiciously. \"I mean, the boys and I are good, but looks can't make up for lack of talent.\"\n\n\"Careful, Parker, this is your second warning. Singing with you guys is Saxon's preference, not hers,\" Beau spoke in a gruff voice. The arrogant arsehole had pushed his buttons since they arrived, and he was about to escort him out. \"So how about you shut up and listen instead of running your mouth like usual.\"\n\n\"It's fine, Beau, I get it,\" Grace smiled and reached out to hold his hand. \"They don't know me. All they know is that the boss is telling them that his girlfriend is going to front their band and possibly hurt their reputations because she's got him by the balls,\" she laughed. \"And I'm going to add to their horror by auditioning with a One Direction song.\"\n\n\"Fuck!\" Parker threw up his hands dramatically, making her laugh all the more as Beau growled.\n\nGrace picked up the guitar, plucking at the strings and finding it tuned, started picking out the melody before adding any words.\n\n\"Goin' out tonight, changes into something red; Her mother doesn't like that kind of dress; Everything she never had she's showin' off; Drivin' too fast, moon is breakin' through her hair;\n\nShe's headin' for somethin' that she won't forget; Havin' no regrets is all that she really wants,\" she sang softly but clearly leading into the chorus and found Taylor joined her, adding harmony to her voice.\n\nSaxon could admit that he had cringed at the idea of a boy band song being sung by the object of his obsession, but the way she slowed it down and sang in a soft, almost whisper made the words and his response to her even sexier.\n\n\"We're only gettin' older, baby; And I've been thinkin' about it lately; Does it ever drive you crazy; Just how fast the night changes? Everything that you've ever dreamed of; Disappearing when you wake up; But there's nothing to be afraid of; Even when the night changes; It will never change me and you.\" Taylor's voice died off as she went into the second verse.\n\nParker could admit he was impressed. The other guys seemed to think so as well. He could see her in a sexy dress crooning to the business crowd in the speakeasy, but he wasn't so sure she could sing in the club and keep the younger patrons happy.\n\n\"Chasing it tonight, doubts are runnin' 'round her head; He's waitin', hides behind a cigarette; Heart is beatin' loud and she doesn't want it to stop; Movin' too fast, moon is lightin' up her skin; She's fallin', doesn't even know it yet; Havin' no regrets is all that she really wants,\" she sang and let her voice trail off feeling self-conscious now as the words as always resounded in her head.\n\n\"Oh yeah! I would never have guessed that was a One Direction hit,\" Happy enthused. \n\n\"Yeah, it was pretty sweet, and there's no arguing that you're hot. Who wouldn't want you fronting their band? I mean, your look and vibe is great for downstairs but can you mix it with the groovers in the club?\" Red asked, mirroring what was on Parker's mind.\n\n\"I guess, but I am happy to do back up and let whoever rocks the hardest take the lead,\" she shrugged. \"What you need to remember here is that this was his idea, not mine. So I don't have to prove anything to you. Honestly, I'd rather join the service staff in the restaurant than put up with a bunch of big dick egos. You're not doing me any favours here, gentlemen, so you can stop acting like I need to suck your dicks to get the gig. He'd be better off with a DJ upstairs and a piano singer combo downstairs, maybe a jazz or soul group on the weekend, than catering to you arseholes.\"\n\nLeaving them speechless, Grace stood and walked toward where she could see the sign for the bathroom. There were possibly five more heartbeats of silence before Beau roared with laughter and pronounced his love for her. Finally, she shook her head and entered the bathroom.\n\n\"What?\" Beau continued to laugh. \"She's got a point. She played your game, did a little audition for you even though she already had the gig. Then, instead of saying good job or you like her sound, you told Saxon's girlfriend she was hot enough to front your band, but she couldn't sing strong enough for the club. Or did I misunderstand?\" he chuckled even louder. \"Fuck, even if she would sing with you after that, I doubt Sax would let you near her again, Red, is it?\" Beau shook his head, and the four young men looked at Saxon, who was sitting calmly, his expression flat and showing nothing of what he was thinking.\n\n\"This was your audition, not hers,\" Saxon said sadly. \"I was building this band around her because, as you said, she is my girlfriend, not some whore from the Fox Trap I got a taste for,\" he growled. \"I'm doing this because she is talented and deserves a break from arseholes thinking they can push her around. She is talented and deserves people who will acknowledge her talent and help her shine, as she would do for each of you. Taylor and Happy, be at the club, about three tomorrow. Parker and Red, thank you for your time, but Grace only has enough room for one big dick in her life.\"\n\nBeau let out another roar of laughter and had to sit forward to catch his breath as Grace came out of the bathroom. Saxon stoically took the glares of hostility from the two dismissed men as they stood and put on their jackets. She noticed that they wore Steel Brothers jackets like her brother and the guys, and she frowned. These were club brothers? Oh shit, and she had been mouthy. Again!\n\n\"Look, I'm sorry. If I had known they were brothers, I wouldn't have been so,\" she waved a hand nervously, looking for the right word. \"Sassy,\" she sighed.\n\n\"Wasn't anything they didn't deserve, Sweetheart,\" Happy grinned. \"I'll be seeing you tomorrow.\"\n\n\"It was good meeting you Grace, I look forward to singing together again soon,\" Taylor smiled and nodded to Saxon before following the others out of the small boutique hotel.\n\n\"You going to be okay for the ride home?\" Saxon asked Grace, moving close to her and tilting her face up to his.\n\n\"Yeah, I'll be fine. It's not quite my bedtime yet,\" she rolled her eyes.\n\n\"Beau will keep an eye on you, but just tap my chest, and I will pull over at any time,\" he said and lowered his head to kiss her softly, brushing his lips against hers. He helped her into her jacket before leading her back to the bikes, where they farewelled Kieran.\n\nAbout halfway into the ride, Grace realised that she had grossly underestimated how exhausted she was after a rollercoaster of a day. By the time they made it into the garage, she had her arms locked around Saxon's torso for fear she would fall asleep and fall from his bike. However, she knew that Beau had stayed close, checking on her often, and she tried her best not to let her head loll and worry him.\n\nBeau smiled when Grace didn't complain when he removed her helmet and picked her up from the back of the bike so Saxon could dismount. Saxon nodded, and they went up to the suites occupied by the Sovereign Six with Beau still cradling her in his arms.\n\nGrace was of little to no help as the guys removed the tight clothes and pulled one of Saxons oversized shirt's over her head. She mumbled and complained that she just needed to close her eyes for a minute, and then she would change and brush her teeth, but as soon as she lay down, she fell into a deep sleep.\n\n*****\n\nPart 3\n\nSaxon sent Beau to get some rest and then dozed beside Grace for a few hours before getting up to formulate a plan to keep her safe and catch her stalker so he could keep her as his own. Not that he was sure he was capable of being the man she needed. He couldn't believe how many things he seemed to fuck up in one day. He had been fortunate Beau was there to help him navigate the rollercoaster of her emotional ups and downs throughout the day. He was lucky she had agreed to the current situation because of Teddy. But he knew that to keep her, he couldn't rely on them to mediate his fuck-ups. He needed to do better himself.\n\nHe texted the guys he had watching her place, her friend's houses both here and out at Eversley, and Kelly's Bar, where she and her friends usually hung out. Each team reported nothing unusual. He could only think that this guy wasn't trying to find her at the places she could usually be seen because he knew who had her and where. It was time to step up the game and start advertising his new lounge act. \n\nParker may have been an arrogant arsehole, but he was right. His sexy little siren suited the speakeasy vibe perfectly with her sweet voice and the rasp she had on the lower end of her register. Next, he considered who to replace Parker and Red with because that needed to happen sooner rather than later if he wanted a Valentine's show in place to catch this clown.\n\nA soft tap at the door preceded Beau appearing in the slightly opened door before he nodded to Saxon and opened the door wider, inviting him out into the short hallway before the common rooms. Beau didn't say anything else. Instead, he just led Saxon out to the kitchen, where the three other guys had gathered in the early morning gloom.\n\n\"What's going on?\" Saxon asked.\n\n\"Hutchinson came by last night,\" Mitch said. \"He left a package for Teddy. I assumed it was the report on the forensics from Grace's apartment. You were all out, so I threw it on the table and forgot about it 'til this morning when he woke me up and asked where it came from.\"\n\n\"Two days after the break-in, someone claiming to be Grace's fianc\u00e9 tried to file a missing person report and was told she was staying with her brother. They gave a false name or at least an incorrect contact number so Hutchinson couldn't follow up after he found out and thought it seemed suspicious that her fianc\u00e9 wouldn't know she was staying with her brother. He managed to get a few images from the security footage,\" Teddy took up the story.\n\n\"Okay, what am I not going to like?\" Saxon said, eyeing them all. He could tell they were padding out the information to delay telling him who it was. Teddy didn't say anything else. He just slid the images across the table to Saxon. Obviously, whoever was waiting for the fake fianc\u00e9 paid him to make the false report. As with most budget security, the photos were grainy, but he could make out enough to see the Worm, Joey, handing over the payment.\n\n\"Joey was there that night in Eversley, but unless he's stopped his love for taking cock, he's on someone else's payroll. Did anyone see anyone else there that night that seemed out of place?\" Saxon asked.\n\n\"Honestly, we didn't even know you were there with us, let alone Joey,\" Mitch frowned. \"Should have known if Beau was there, I guess.\"\n\n\"He didn't tell me,\" Beau admitted with a frown. \"Though he should have.\"\n\n\"Let the men know that if they see Joey, he needs to be detained,\" Saxon ordered. \"Give me a few minutes to shower and consider what this means. After that, we may need to get word to Steve, but I don't want to compromise him unless we have to at this point.\" He stood to go and shower and swore under his breath, \"Fucking Joey the worm.\"\n\n*****\n\nGrace couldn't work out what was going on. The guys, especially Saxon, seemed preoccupied and temperamental that morning. So, after breakfast, she asked if she could go through the shopping bags from yesterday and put away the clothes in the closet.\n\n\"Give us a minute,\" Saxon said to his friends and took Grace's hand, leading her back to the room where she had slept the last few nights. \"Beau fill Teddy in on today and then join us,\" he added as if it was an afterthought.\n\n\"This floor is made up of seven suites,\" he began, \"Suite is probably the wrong word, but each room has a bedroom, bathroom, a small office area, including a sitting area near one of the windows. They're large and comfortable and meant for the Sovereign Six and me. That includes the four guys out there and two others who are precariously placed with one of our rivals right now.\"\n\n\"Okay,\" she said, not understanding the relevance of this information. \n\n\"You and your belongings are here in this room,\" he continued waiting for the Penny to drop, \"As are your boyfriend's things,\" he finally spelled it out for her. \"Whose stuff did you think was in here?\"\n\n\"Wait! This is your suite?\" she asked wide-eyed. \n\n\"It is,\" he nodded.\n\n\"And you sleep?\" she prompted.\n\n\"Not very much, but usually here beside you for an hour or two each night,\" he admitted. \"I've showered in Steve's suite so as not to wake you, but that won't continue now that you know.\" \n\n\"So, we've been living together, and I didn't realise it?\" she asked incredulously. \"And Teddy knew?\"\n\n\"Teddy knows I respect you and him more than any cheap thrill I would get by taking advantage of you,\" he said to reassure her, but as her face fell, he knew he had said the wrong thing once again. \"Full disclosure, Grace. I want this, not just while we catch this stalker but after that too. The more time I spend with you, the more I want this, want you, but I have never been in this position before, wanting something that I can't just take. So you have to be patient and understand that I am going to fuck up, but if you don't tell me when I do, I can't fix the problem for next time,\" he spoke earnestly to her. \"The reason I wouldn't take advantage of you is that I want you to want me as much as I want you.\"\n\n\"Yeah, I'm going to need a time out,\" she sighed. \"You're a lot, you know. Before this week, I didn't even think you liked me. Then yesterday with all the kissing and touching and flirting with all those other women.\" She shook her head and stood to move further away from him.\n\n\"I wasn't flirting with anyone but you,\" he stood and went after her reaching out to take her hand so she couldn't move too far away. \"Did I manipulate the situation to get closer to you, so you and I could get to know each other better? Yes, I did, and I don't regret it, but the world I live in, that the guys and Teddy live in, can be dark and dangerous beyond the stalkers. If you agree to enter this world with me, I will explain it all to you. I promise. If not, then you return to your life before this stalker once we have dealt with him, but you also put distance between yourself and the guys because you are not just Teddy's weakness, but a weakness to all of us now. Do you understand?\" \n\n\"It's a lot. You're a lot,\" she said again. She was overwhelmed by the revelations, and she wasn't sure what to say or do. \"I can't make a decision like that. Teddy's all I've got!\"\n\n\"You must know that's not true, but I will give you some space to consider what I said. I have a lot to get done this morning, I will be back for lunch, and we can talk more then,\" he tilted her head up and kissed her. \"Think about what I said, and I will explain as much as I can depending on your decision.\" \n\n\"We're not in public now. So you don't have to do that,\" Grace said almost without thinking.\n\n\"I'm a big fan of private displays of affection. Or at least semi-private. You need to stay with Beau today. No running off. We have a lead on the stalker, and he is closer than we thought to our club and our friends. Promise me you will stay by his side until I return,\" Saxon pushed.\n\n\"I will stay with Beau while you are gone,\" she parroted back at him.\n\n\"Good girl,\" he bent his head to kiss her, deepening the kiss and holding her close. \"Trust no one except the six,\" he warned in a husky voice as he finally let her go.\n\n\"Got it,\" she nodded. \n\n\"Teddy and Eli will be with me today. Mitch and Beau will keep you safe.\" He said as if reassuring himself, and then he left abruptly without looking back.\n\n\"Do I want to know what that was all about?\" Grace asked Beau with a look of utter confusion on her face.\n\n\"Probably,\" he nodded. \"I'm just not sure I'm the one who should be explaining it.\"\n\n\"Why not?\" she asked.\n\n\"Because he will only confuse you more. Come with me, Gracie, and I will tell you what you need to know about our fearless leader,\" Mitch offered from the doorway.\n\nGrace looked from Mitch to Beau, who shook his head slightly and back to Mitch again before moving toward Mitch and letting him guide her to the common room, where he pulled her onto his lap as he sat in one of the comfortable chairs there.",
        "\"Okay, you need a little background information first. Once upon a time, there was an evil man. He sold drugs, sex and even murder for the right price. He ruled the underbelly of the capital and most of the surrounding areas. Now this man married the daughter of a man similar to himself for the express reason of building an empire. She was the one thing in his life he treated with respect and kindness, and in time she bore him a son and heir and then a spare heir, so to speak,\" Mitch said with a smile. \n\n\"So, two sons,\" Grace nodded. \"Do you mind if we continue this while I grab a drink?\"\n\n\"I do, so Beau will get us both a drink,\" he chuckled. \n\n\"Okay, as evil men do, he went back to his drugs and whores, doting on his boys, particularly the oldest, drawing him into that dark world from a very early age. The second boy, having more freedom, stayed close to his mother. He went to school to make the most of his genius IQ. He also helped his mother set up an elaborate system of dummy corporations and overseas bank accounts so when the time came that the evil man either lost his mind or was taken down, she would be able to get out and be safe, somewhere far away from the place of her nightmares. Only that isn't the way it went down,\" he sighed.\n\n\"Gosh, it's like a best seller. Let me guess, a rival infiltrated the organisation, and there was a change of leadership in the underbelly. Or better yet, patricide. The older brother got sick of waiting his turn,\" Grace asked, getting into the story now.\n\n\"In a manner of speaking. The older brother had started doing deals behind his father's back, and one of those backfired badly, and he died in a gruesome way. After that, the evil man lost his mind and started laying waste to every rival before his paranoia started turning him on his own. When he finally came for his wife and younger son, that boy who was a man by this stage killed his father while protecting his mother, except she didn't make it out alive either,\" Mitch said sadly. \n\n\"You knew the brothers?\" she asked, curious about the sadness in his voice.\n\n\"Yeah, Beau and I both,\" he nodded. \"It took almost ten years for a tentative peace to take hold in the region again. The younger brother survived by giving up all of the illegal trade his father had built to his rivals and keeping only the legitimate businesses as his legacy. However, he gave up a good portion of those to end the conflict. There was only one illegal avenue he kept a piece of, street racing. Yet, throughout all of the conflicts and shuffling of power, the younger brother drew a tight crew around him and many more loyal friends and business associates. So, when he decided to incorporate his custom motorcycle modification business, he made it a club with a club structure. That's how Steel Heart Inc. and the Steel Brotherhood was born.\"\n\n\"Wait! Saxon was that younger brother?\" she gasped. Why was she always the last to catch onto things like this? She wasn't stupid, but everything about this guy seemed to elude her unless someone spelled it out. He seemed too aloof to engender the loyalty and friendships Mitch talked about, and she wasn't sure whether he seemed smart enough to have a genius IQ.\n\n\"It's no secret. Teddy was there, not through all of it. Of course, he's a bit younger than us, like Eli, but he knows the deal. So now you are being brought into the inner circle, working and living with us, and it's going to fall to me to explain why that's a big deal because Beau won't, and it wouldn't occur to Saxon. His social skills aren't what they should be at the best of times, but as you can see, he grew up a little differently from most people, not that we didn't, but it was different if that makes sense,\" Mitch explained.\n\n\"Thank you,\" Grace said as Beau handed her a glass of juice. He placed a cup of coffee down on the table for Mitch and then sat in a nearby chair with his own cup.\n\n\"You know he won't like that you are telling her all of this,\" Beau warned. He told her he would tell her after she had decided to stay for herself.\"\n\n\"He doesn't like a lot of what I say and do, but that's my role here,\" Mitch shrugged. \"Besides, she's staying whether she admits it yet or not. We all know she's staying.\"\n\n\"How can you know that?\" Grace asked. \"It was interesting to know how and why the club formed, but it doesn't have anything to do with me or whether I want a relationship with Saxon.\"\n\n\"Ah, but that's where your wrong,\" Mitch said. \"You had to know all of that to get what's happening now.\"\n\n\"Okay, enlighten me,\" she sighed.\n\n\"As I was explaining, none of us have any ties outside the brotherhood. Call us orphans or loners or whatever. The six have each other, and Saxon and he has us. We're a tight unit of love and trust, our rivals or enemies if you will have no way to get to us, no blackmail, no tested loyalties, nothing. Trust me, the gangs of the underbelly and police alike have tried to get to us, but nothing had ever worked until a worm of a man named Joey saw us with you at Eversley. Now that could be totally unrelated to this stalker of yours, but Joey paid a man to file a missing person report for you two days ago. So now we have to wonder if your stalker is targeting not just you but Teddy and maybe even us as well. You are the weak link in Teddy's armour which is why he kept you secret and separate from us for so long,\" Mitch said with as much care as he could.\n\n\"So, some arsehole is using me to get to Teddy and you guys?\" she asked Beau, who sat silently watching her.\n\n\"We don't know that for sure, but with Joey being involved, it's likely,\" Beau admitted.\n\n\"Now you're just scaring me,\" she said.\n\n\"Good, you should be scared,\" Mitch said and finally released her. \"Go freshen up so Beau can make us work this morning as the boss wants.\"\n\n\"Saxon is a powerhouse who works hard to look after and provide for everyone he cares about,\" Beau said as they walked back to the room, which she shared with Saxon. \"He's been carving out huge chunks of time to spend with you and focus on you. That's no small thing for him. He wants this relationship with you, for real, and I want you to stay close too. So now that Mitch has opened the information superhighway where Sax is concerned, you can ask if you have questions. He's the best man I know, and even Teddy likes the idea.\"\n\n\"You guys have talked about it?\" she gasped, feeling so overwhelmed with everything.\n\n\"Like I told you yesterday. We have never seen Saxon react this way to any woman,\" he said. \n\n\"What about Teddy's rule that I can't date his friends?\" she asked. \"He warned me off when he realised I had a crush on you,\" she admitted. She'd gotten over it and realised they all loved her like a little sister and Grace returned the sentiment, but there had been a time when she had seriously flirted with Beau or at least she thought she had in her teenage way. \n\n\"You did?\" he blinked at her in shock.\n\n\"Yeah, but I was young, and my teenage version of flirting probably looked like I was having a seizure of some kind with lots of hip cocking and blinking,\" she laughed.\n\n\"Is that what that was?\" he laughed with her, but he was fucking melting on the inside. He'd thought about dating her, hell they all had, even Teddy, he guessed although he had taken on the role of big brother. Despite everything that happened to her, she maintained an air of sweetness that affected them. The only time you saw her hard edges was with the harsh sassiness that came out when she had reached her limit of being treated like an idiot or a bimbo. He found it amusing more than anything, but it was rarely pointed at him, though Mitch and Eli often copped a good dose of her sassy mouth. He had a feeling that, like himself, that was a side of her that Saxon liked and found challenging in equal measure.\n\n\"Alright, let's go to work,\" Beau said and guided her out of the room down to the speakeasy. Mitch followed behind them, his sheer size intimidating and making people give them a wide birth. They found a seat close to the stage, and Beau stood to address the surprisingly big group there.\n\n\"Gentlemen, and ladies,\" he nodded his head to one side, and Grace craned her neck to see a woman there. \"We are looking for two people, Bass, sax, guitar or a combination of those. If you are here for drums, keys, or to sing, those positions have already been filled. Is there a sign-in sheet?\" he held out his hand, and one of the barmen put a few sheets of paper in it. \"Great, make yourselves comfortable, and we'll get through this as quickly as possible. Questions?\"\n\n\"Yeah, the word is that the band is to back the boss's,\" he paused to consider his words, \"Girlfriend. What happens when they break up? I don't want to give up my current gig if it's not a solid contract,\" one guy asked boldly. \n\n\"The contracts being offered for house band members are solid through to the end of the year with a few contingencies. We will discuss those with the final candidates but would include plans for things like guest performers on special occasions. Standard stuff,\" Beau waved his hand, dismissing the conversation.\n\n\"Is she any good, or is he doing this to find out how good she can be?\" One guy joked, making a few men laugh before Mitch got to his feet and narrowed his eyes. \n\n\"I think the last guy who tried to tell her he thought she wasn't good enough to play with the big boys was told that she didn't want to be in a band with their big dick egos and little dick performance, but by all means stay and let her tell you that herself,\" Beau smirked. \"This is your audition, not hers, don't make the same mistake as the men you are now replacing.\"\n\n\"We are going to take a moment to order some coffee so those of you who don't fit the requirements of this gig can leave,\" Mitch grumbled, still looking at the guy who had asked if she could sing or if she was an indulgence for their boss before sitting down. It was only then that Happy and Taylor approached the trio.\n\n\"Hey,\" Happy said with his broad smile. \"We heard what was going down, so we thought we would come and help out. We know most of these brothers and can help with backups for the auditions if you want.\"\n\n\"It's your gig, Gracie,\" Mitch shrugged, and as usual, Beau just sat back to watch, not interfering in her decisions except to support.\n\n\"Sure, I guess,\" she said. \"A little inside knowledge can't hurt, and the whole band has to get along. If there's going to be friction between you and whoever, better that we know now,\" she said.\n\n*****\n\nIt was close to one when Teddy reappeared along with Eli and another man who looked like he had walked out of some woman's fantasy. Men were not that good looking outside of Hollywood or the pages of glossy magazines. The other guys, including Saxon, were all good-looking and on their own had women losing their minds to get their attention, but this new guy exuded sex like an incubus from the fantasy stories she read. He was intimidating in a whole new way, and she was glad that she was invisible to guys like that. Nevertheless, she had to roll her eyes when even the waitress became tongue-tied.\n\n\"Look, it's nice to meet you, Ian, is it? But you have to tone down all of that,\" she waved a hand in front of her, encompassing his body, or that chick's ovaries are going to explode while we watch,\" she said derisively. \"Could you not get a shirt in your size or something?\" she asked, making Beau once again roar with laughter as the other guys all looked at her and snickered.\n\n\"Fuck I love you, Gracie,\" Beau said, still chuckling as he stood. \"I'll go get Ian one of Mitch's shirts so you can concentrate on lunch without having to worry about the welfare of our waitress,\" he laughed loudly as he walked away and met with Saxon part way to the elevator.\n\n\"Hey,\" Saxon said, sliding into a seat beside hers and kissing her softly. \"I hear you met Ian?\" he smirked.\n\n\"You need to pay him more if he can't afford to shop at the big boy stores,\" she rolled her eyes. \"Not that I can't appreciate all that, but as I said, I worry for the waitress whose ovaries exploded when he smiled at her.\"\n\n\"I see,\" Saxon said and looked over at Ian, who raised his hands at his sides palm out as if he had no idea what she was talking about. \"Beau told me something like that,\" he nodded. \"How was your morning, otherwise?\"\n\n\"Busy, I guess, Taylor and Happy came to help. It's no good having guys in the band they can't work with, so, in the end, it wasn't hard to whittle the contenders down to half a dozen that you can choose from this afternoon,\" she said.\n\n\"You have preferences?\" he asked and watched as she chewed her lip and looked around at the men who sat with them and the musicians who sat close enough to hear them. \"Did you order lunch already?\" he asked into the silent pause.\n\n\"No, we were waiting for you, just ordered drinks,\" she explained.\n\n\"Okay, come with me,\" he stood and held out her hand and drew her to her feet. Then, wrapping an arm around her waist, he guided her to a well-hidden door to an office. He stopped a waitress to order burgers and fries for them both. Once they were settled in comfortable chairs at a small conference table, he spoke. \"Tell me what's going on. You know I will find out anyway,\" he said.\n\n\"I'm sorry I got all snarky with Ian. He's one of the six, isn't he?\" she asked after realising too late why he was with Eli and Teddy. \"It's just been a long morning of being judged and found wanting and knowing I was letting you and the guys down because, well, you're you and I'm one of those invisible girls no one tends to notice unless I fuck up royally.\"\n\n\"You are noticed every time you enter a room,\" Saxon said quietly, turning his chair to face her directly before turning hers while she sat on it to meet him. \"That's better, now tell me exactly what's going on in that pretty head of yours?\" It wasn't a question. It was a command, and she looked up into his green eyes.\n\n\"You say that you want this relationship, but I'm not even close to living in the same world as the women you know. I like rock music, fast cars, junk food and cheap spirits. I don't drink sparkling wine while eating seafood from an amazing platter. I don't shop all day. I know you can afford it, but I can't, and I am standing here in designer jeans I could only dream of owning before yesterday and wonder what the hell is happening to me.\"\n\n\"I don't know about you, but I will tell you about me, and maybe that will clear up some of your confusion,\" Saxon started. \"I first saw you when you came to the workshop. Teddy and the boys never told me about you, or if they did, I wasn't paying attention. That happens sometimes. One of the rules for us is no attachments. Having no one that could be used as a weapon against us was another layer of protection. Of course, we had the women of the Fox Trap to entertain us because none of us were monks, but we never got close to anyone who could be taken and hurt because of us. Do you understand?\"\n\n\"Yeah, Teddy told me the only reason he could keep in touch is that nothing bound us together. We knew each other once a long time ago, but we weren't related, and there was no paper trail to connect us anymore,\" she nodded. \"It was important to him that I denied knowing him if anyone asked in the beginning.\"\n\n\"Club rules,\" Saxon nodded. \"Then you came to the workshop all wide-eyed and innocent with big hazel eyes, in your tiny shorts showing your cute ass. I was mesmerised as soon as I realised you weren't one of the bimbos from the fox trap looking for a little extra,\" he said. \"I went to hear you sing that night. I even have the song on my playlist, though you sang it much better. But, unfortunately, there was another guy there that night, a worm or rat, as some might say. He knows all the major players and has dirt on each of them to stay safe. He also sells most of his information to those who need it to bring down another. So, I tried, unsuccessfully, to forget you, your sweet voice and even sweeter body, except I couldn't and spent more time at the refurbishment of the Doss house as an excuse to be in the city where I could check on you now and then,\" he admitted. \"I'm not your stalker, but I had been making sure you were safe.\"\n\n\"There is so much wrong with what you just said I can't even,\" she held up a hand and shook her head. \"I wasn't safe, and you think this Joey guy has something to do with it, but you stalked me and didn't?\"\n\n\"I didn't check on you often. I knew I couldn't have you no matter how much I wanted and craved you. I never saw anyone stalking you or anything amiss when I did check on you,\" Saxon said. \"When Mitch called the night you found the message on your mirror, I knew I was fighting a losing battle, so here we are. I've been falling for you little by little for months now, and I want this, I want you. I know you haven't had the same time, and you don't know me, but Teddy does. Teddy loves and trusts me as his friend and mentor. He has no problem with me pursuing this relationship with you. I spoke to him about it this morning. I'm breaking the rules, but you would never be safer than with me, with us,\" he had a slightly pleading tone in his voice as he tried to express how much he wanted her to accept him.\n\n\"Fuck,\" she swore and closed her eyes. \"It's a lot. You're a lot. Fuck! How am I supposed to take it all in and spit out an answer? Did you ever stop to think that I might have my own issues being here with a bunch of hot guys, one that I've had a crush on for years and now I have to pretend that it's fine to just hang out with him because you want me? It's not so easy to say sure, let's date and see where it goes. You just admitted to stalking me yourself!\"\n\n\"Who?!\" Saxon demanded just before a knock at the door saved her from answering. \"Come in,\" Saxon growled, his eyes never leaving Grace's face.\n\n\"Him,\" Grace said after seeing Beau holding the door open for a waitress who had full arms. \"He knows I had a crush on him as a teenager and that I made myself realise it was impossible,\" she shrugged, not looking at Beau.\n\n\"Beau, you got lunch, man?\" Saxon asked as the man began to shut the door again once the waitress was leaving. \n\n\"Yeah. I'm good,\" Beau nodded.\n\n\"Grab it and come join us instead of lurking around the door. The guys all know not to disturb us,\" he commanded. \"Tell the guys we'll do the final auditions after lunch.\"\n\n\"Yeah, alright, give me a few minutes,\" he nodded.\n\n\"Beau is my oldest friend. Did you know that?\" Saxon asked.\n\nMitch told me a little of your history. You've known both Beau and Mitch since you were kids,\" she said. \"He told me about your family and how they all died.\"\n\n\"Yeah, Mitch could always see what was coming way before anyone else,\" Saxon smiled. \"It's a dangerous world I live in, but I already explained that. He's the conscience of our brotherhood, pushing us to do what's right. You should know our history and what you're getting into as much as the guys deserved to know when they joined the brotherhood,\" he drew a deep breath. \"If it had been anyone else, this conversation would be going very differently, but I'm open to it. I'm a busy man and knowing you were with the best man I know when I couldn't be with you is surprisingly comforting to me,\" Saxon said as if still thinking it through.\n\n\"Wait! What are you talking about?\" Grace blinked up at him.\n\n\"You dating us both, I'm not about to fuck him or have him fuck me, but it might be hot to let him watch me fuck you or watch you with him. I hadn't considered a menage before, but the more I think about it, the more I like the idea,\" he leaned forward to kiss her, and she pulled back.\n\n\"You're a dick. You know that, right? This is one of those times where you need some help with the whole relationship thing,\" she shook her head incredulously."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "mc",
        "stalker",
        "scars",
        "singer",
        "band",
        "brotherhood",
        "valentines day"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/steel-hearts-amazing-grace"
}