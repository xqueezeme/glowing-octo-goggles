{
    "title": "Nellie and the Dodgeball Game",
    "pages": [
        "Author's Note:\n\nThis is a stand-alone story that is part of a larger series about the titular character, Nellie. Each story that follows can be read on its own or together, in any particular order, though they will be posted in chronological order. The stories may fall under different categories, but all will tell tales of Nellie's various adventures.\n\nIn this adventure, Nellie plays dodgeball against Jake, but things get complicated when team captain Veronica gets a little jealous of Nellie and Jake's relationship. This story follows the events of Nellie & The Unicorn Onesie. \n\nSpecial thank you to OneAuthor and norafares for editing.\n\n**\n\n\"Please, Nellie? It's exactly like volleyball.\"\n\n\"It is nothing like volleyball!\"\n\n\"Okay, it's much cooler than volleyball. Come on. Please?\"\n\nWearily, I sighed and closed my textbook. \"You know how competitive I get. I just don't think it's a good idea.\"\n\nKara folded her arms on the table in front of her. \"Jake will be there. We're playing his team tonight.\"\n\n\"That's even worse.\"\n\n\"Uh oh. Trouble in paradise?\"\n\n\"There is no paradise.\" I rolled my eyes. \"We've hooked up a few times, that's it.\" \n\n\"Mm-hmm.\"\n\n\"Don't start with me on this. Neither of us wants something serious.\"\n\n\"Mm-hmm.\" \n\n\"I especially do not want a boyfriend.\"\n\n\"Mm-hmm.\"\n\n\"Really, Kara?\"\n\nShe burst out laughing. \"I'm just teasing, Nell. I've heard your 'commitment is for suckers' thing a million times.\"\n\nI couldn't help but laugh with her. \"Yes, you have, and it's still true. Things are fine. Jake's a great friend.\"\n\n\"And a great fuck.\"\n\n\"And a great fuck. What I meant was that I don't really want to have to play against him. I told you, I get way too competitive.\"\n\n\"It's so much fun, though.\" Kara pouted. \"Come on. I'll keep you from getting too competitive. And I'll buy your beers after the game.\"\n\n\"That's a tempting offer.\"\n\n\"The whole point of intramural dodgeball is to get drunk afterward. The only reason it's part of the intramural program is so we can use the gym and get a discount at Lou's Pub after the games.\" \n\n\"You really can't think of anyone else who could sub?\"\n\nKara shook her head. \"The game is in an hour. If we don't have enough players, we forfeit. If we forfeit, we lose our chance at playoffs.\"\n\n\"I thought you just said it wasn't that competitive.\"\n\n\"Yeah, but if we win playoffs, our team gets an open tab at Lou's at the end-of-season celebration. And a cool T-shirt that says we're the winners. And bragging rights.\" \n\n\"Well, if there's a cool T-shirt involved...\"\n\n\"And you'd certainly be considered part of the team...\"\n\nForty-five minutes later, Kara and I were walking into the gym. She led me to a group of people wearing the same uniform as her: a horrendous orange T-shirt that served as a jersey. \n\n\"I found a sub!\" she exclaimed as we approached. \"This is my friend Nellie.\"\n\nThe group cheered.\n\n\"I'm Veronica,\" said a girl with intense eyes and a \"C\" ironed on the front of her shirt. \"I grabbed an extra jersey for you.\"\n\nI was taller than average, and Veronica was even taller than me. My first impression of her was that she looked like a goddess or a princess warrior or something. She had thick, dark hair pulled back into a long ponytail, and even managed to make that orange T-shirt look irresistible. \n\nThat was saying something, as the orange T-shirt was truly awful. The piece of fabric she handed me was about three sizes larger than I was. I tried not to grimace as I pulled it on over my tank top, the hem trailing the edge of my shorts.\n\n\"Sorry,\" Veronica said, clearly not sorry. \"It's the only spare I could find.\" \n\n\"I can fix it.\" Kara reached forward and tied a knot in the shirt just above my hips. I rolled the T-shirt sleeves into the armhole, tucking it into my tank top. \"That's a bit better.\"\n\n\"It's fine.\" I grinned and did a few stretches to ensure my alterations would hold.\n\n\"You know the rules?\" Veronica asked.\n\n\"Umm... dodge the ball?\"\n\nVeronica looked at Kara, exasperated. \"Really?\" Kara started to respond, but Veronica waved a hand at her. \"I don't have time to explain all the rules to you. If you have time before we start, you can read them on the website.\"\n\n\"The website?\"\n\n\"Official international rules are posted on the team website.\" Veronica looked at Kara again. \"Did you explain anything to her?\"\n\n\"I heard there's beer after,\" I interrupted. \n\nI'd never seen someone's face turn the shade of red that Veronica's did. \"Right,\" she said icily. \"Okay. The basics. Each team has six players. There's six balls in the centre of the court.\" She pointed out the boundaries. \"Don't cross any of those lines. If a ball crosses any of those lines, someone else will retrieve it. At the start of the game, the referee will call '3, 2, 1, Dodgeball!'\"\n\n\"And we all run to the centre to get the balls,\" I said.\n\n\"That's called the opening rush, and no.\" Veronica's jaw clenched. \"You don't run. Just wait on the court. No one can throw until the balls have touched the back wall of the court. So just stay out of the way of the runners.\"\n\n\"Runners get the balls, balls to the walls. Got it.\"\n\n\"People holding a ball have ten seconds to throw it. You eliminate other players by hitting them with balls or by catching a ball thrown at you. And if you catch a ball, someone whose already been eliminated can come back to your team. You can deflect a ball thrown at you using a ball that you're holding, but that's it. You can't just slap it away.\"\n\n\"No ball slapping. Got it.\"\n\n\"You can pass the ball to other people on your team by rolling it towards them. We don't do that much, but you might need to. It doesn't start a new ten-second count though.\"\n\n\"I know how to handle balls. I played volleyball for six years.\" \n\n\"Sure.\" Veronica looked unconvinced. \"When you get hit\u2014\"\n\n\"You mean if I get hit.\"\n\nShe paused, incredulous. \"When you get hit, raise your arms and leave the court immediately. Don't touch any of the balls that might roll out of bounds.\" Veronica shot another look at Kara. \"That's all I have time for. Just try not to fuck it up.\"\n\nAs Veronica stormed away, I looked at Kara. \"I thought you said the whole point of this was getting drunk afterward.\" \n\nKara looked stunned. \"I mean, most of us are just here for that. Veronica can be intense, but I've never seen her like that.\"\n\n\"So I'm just lucky, then.\"\n\n\"Sorry, Nell.\" Kara tried to smile, but her embarrassment was obvious. \"Just try to have fun, I guess.\" \n\n\"She didn't laugh at any of my ball jokes, Kara. How am I supposed to have fun?\"\n\n\"Nellie? Since when do you play dodgeball?\"\n\nI turned as a deep, familiar voice interrupted us. Jake was there, wearing a green jersey with his last name on it and a bewildered look on his face. \n\n\"Oh, just here as a favour to my good friend Kara and her teammates since they were short a person,\" I replied loudly.\n\nOut of the corner of my eye, I saw Veronica turn back towards us.\n\n\"Hey Hunter,\" she called.\n\nThe tone of voice was lighter, friendlier than anything I'd heard from her. She said his last name like it was some kind of inside joke. I'm no genius, but the sudden change in demeanour as she looked at Jake led to a very obvious conclusion. \n\nHe smiled in response. At least, he tried to. I knew Jake's face and I knew what he looked like in all sorts of compromising positions, and that smile was definitely forced.\n\n\"Hi,\" he said politely before turning back to me. \"That's cool of you. I didn't know you played.\"\n\n\"Oh, all the time. I'm a dodgeball champ back home.\"\n\nJake snorted. \"Is that so?\"\n\n\"Don't underestimate me.\" I grinned, partially because I enjoyed joking around with Jake and mostly because Veronica's face was getting colder and angrier each second I talked to him. \"Now shoo, Hunter. I have super-secret dodgeball stuff to discuss with my team.\"\n\n\"Good thinking. I don't want to be caught fraternising with the enemy.\"\n\n\"I'll fraternise with you later, if you want,\" I teased. \n\nHe laughed again and jogged across the gym to join his teammates. Veronica watched him as well.\n\n\"That's why she doesn't like me,\" I whispered to Kara.\n\n\"What?\" \n\n\"Veronica has a thing for Jake. I'm fucking Jake. That's why she doesn't like me.\" \n\nKara's eyes lit up at the scandal. \"How do you figure that?\"\n\n\"How do you not?\" I jerked my head towards her. \"She can't take her eyes off him.\"\n\n\"Are you two done your little chat yet? You need to warm up.\"\n\nVeronica had a hand on her hip as she waited for us on the court. Despite being a world-class bitch, the haughty look she was giving us was incredibly attractive. Kara and I joined her begrudgingly and did some stretching while she went to speak with the referee. \n\nI was introduced to the other three players while we stretched. Sydney, Tyler, and Brandon were all much more welcoming than Veronica was. \n\n\"So Veronica gave you the basic rules, right?\" Brandon asked me.\n\nHe was a burly guy with a thick beard, slightly shorter than me. Height aside, his broadness and booming voice made him seem larger than life. He was like a giant teddy bear, and I liked him immediately.\n\n\"Well, sort of. I'm supposed to try not to get hit and just stay out of everyone's way.\" I tried to bury my cynicism underneath a perky voice as we all settled on the floor, stretching our legs.\n\nBrandon chuckled. \"It's pretty simple. And the ref over there talking to Veronica, that's my friend Calvin. He's cool. He'll explain anything you might need, but no one really worries about the more obscure rules.\"\n\n\"There's obscure dodgeball rules?\"\n\n\"Oh yeah,\" Sydney said.\n\nShe was insanely flexible, her torso practically pressed to the floor beside her legs as she stretched her hamstrings. \"Like showdown. Kinda like the dodgeball version of a hockey shoot-out.\" \n\n\"Yeah, and high throws,\" added Tyler.\n\n\"Basically, try not to hit anyone in the head is all with that one,\" Brandon continued. \"But it's just dodgeball. We're mainly here for the beer afterward.\"\n\nI wanted to hug Brandon, but as we were sitting on the floor, I settled for wrapping an arm over his wide shoulders. \"I have found my people,\" I declared. \n\n\"Okay, let's get ready to play.\" Veronica ushered us towards the starting line, and as we got into position, she turned to me. \"So can you actually handle this, Nellie?\"\n\nI tried not to let her attitude get to me, but a small pit of anger seethed in my chest. \"I told you, I'm great at handling balls.\" I glanced across the court, where Jake's team was mirroring our line-up. \"Just ask 'Hunter' if you don't believe me.\" \n\nWas the comment necessary? Definitely not. \n\nDid I get a surge of vindictive joy at the expression of stunned hurt on Veronica's pretty face? Absolutely.\n\nShe marched away without comment to line up in the centre of the court, opposite the other team's captain. I caught Jake's eye from across the court and grinned at him. His eyebrow arched at me, a silent challenge marked by a coy smirk. \n\n\"It's on,\" I mouthed at him. \n\n\"Okie dokie, everyone,\" Calvin said. \"Here we go! Three, two, one, DODGEBALL!\"\n\nAs directed, I didn't rush for the balls in the centre. Veronica, Sydney, and Tyler made the run as Kara, Brandon, and myself held back. Veronica was the first to reach the back wall and touch her ball to it, and she rushed forward and immediately hurled the red object at the other team. \n\nIn the meantime, Sydney and Tyler tossed their balls at the same player. Sydney's missed, but Tyler hit him on the arm. I cheered as the first player of the game raised his arms and dashed to the sidelines. \n\nA blur of red rubber was suddenly rushing at my head. Instinctively, I reached forward, the ball clapping against my skin loudly as I caught it. \n\n\"Fuck yeah, that's how you do it!\" Brandon pumped a fist in the air. \n\nThey had two players out now, and I waited for the perfect moment to throw the ball in my hands. I almost hit the other player, but the ball zipped past her as she contorted out of the way like something out of The Matrix. No one caught it, but just a few seconds later, Tyler was the first person on our team to get hit. \n\n\"Don't waste a throw like that!\" Veronica hissed at me.\n\nI ducked out of the way as a ball flew towards me. \"Oh, fuck off,\" I spat back. \n\nOur side of the court was a blur of red balls and orange shirts. I managed a few more throws before finally hitting someone. By then, Tyler had come back onto the court after a catch, but Kara and Sydney were both out. With just four people on our side, it should have been fairly easy to avoid getting in each other's way. Unfortunately for me, Veronica was just as much of a vindictive bitch as I was.\n\nI had just dove out of the way of a ball whistling past me, my feet hitting the gym floor with a squeal as I tried to change directions and avoid a ball flying at me from the other direction. Suddenly, I was crushed against Veronica and went flying back in the other direction. The ball hit me square in the chest as I stumbled.\n\n\"God fucking damn it.\" I threw my arms in the air and whirled around.\n\nIf metaphors ever became real, I'm sure actual daggers would have shot from my eyes at Veronica.\n\n\"Oops. Sorry,\" she said in a sing-song voice.\n\nI stormed off the court as she threw again.\n\nI was still angry as I joined Kara and Sydney, wiping sweat from my forehead. \"Did you see her push me?\" I whispered, furious. \n\n\"I don't know if that was on purpose,\" Sydney said.\n\n\"Let it go,\" Kara urged as I opened my mouth to respond. \n\nI seethed as I watched the game progress. The teams were evenly matched and I had to begrudgingly admit that Veronica was quite good. Her long ponytail whipped through the air as she jumped around the court. Despite her height, Veronica's movements were catlike: graceful, quick, and always with purpose. Just a few moments later, she caught a throw from the other team and Sydney rushed back on the court. She picked up a ball almost immediately and catapulted it at the other team. \n\n\"Good throw!\" Veronica cheered.\n\nUnfortunately, the ball was caught just before it hit the ground and Sydney was back on the sidelines again.\n\nTyler deflected a ball and knocked one of the other players out, leaving them with two players. It didn't last long, though, as just a few seconds later Brandon threw a ball that was caught. I hadn't even noticed Jake wasn't on the court, but he ran out and started dodging balls from Veronica almost immediately.\n\nAnd on it went. The throws came faster and harder as the teams dwindled down, and Tyler made a catch at one point that allowed Kara back on the court. Jake was on his side with just one other player.\n\nVeronica let a ball fly towards Jake. I inhaled sharply as it propelled towards him, directly in line with his head. Jake's teammate shouted, and Jake turned just in time to get his hands up and catch the ball before it smashed into his face.\n\n\"Watch the high throws, Veronica!\" Calvin shouted from the sidelines as she threw her hands up and stomped off the court.\n\nI tried not to look at Veronica as she joined us. I tried not to notice the glowing sheen of sweat on her forehead and I tried not to think of how gorgeous she was. Reminding myself that she was a complete bitch, I refused to even look in her direction. Instead, I watched the game intently, desperately wishing Kara or Tyler would catch the ball so I could go back on. Something heard my prayers because just moments later Kara made a catch. She hooted in celebration and I rushed back on the court, picking up a ball just as she got hit by Jake.\n\nVeronica was swearing on the sidelines and screaming instructions at me. I steadfastly ignored her as I lobbed a ball across the court, managing to hit one of Jake's teammates. Down to two people per side, things started moving a bit more slowly and with certain calculation.\n\nTyler was an excellent person to be on the court with. We communicated easily, nailing balls across the court in unison to try to maximise our impact. He managed to knock the other teammate out, so it was just Jake versus the two of us. I cheered and ducked as Jake nailed a ball at me.\n\nMy dodgeball skills were certainly nowhere near as strong as Tyler's. For that reason, when he made the mistake of turning to grab a ball just as Jake let one fly, I leapt in front of Tyler. My knees bent to balance my weight as I landed, meaning I was crouched at just the right moment for the ball to smash against my face. \n\nThere was a collective inhale by everyone in the gym at the slapping sound of my face meeting the ball. For what it's worth, it stung a bit, but certainly sounded a lot worse than it felt. There was no blood, nothing was broken, and I doubted it would even bruise. Throwing my hands up as the ball bounced away, I started towards the sidelines.\n\n\"Holy shit, Nellie, I'm so sorry!\" Jake cried.\n\n\"It's okay, I'm okay!\" I replied, but it was drowned out by the sound of a ball thudding against Jake's chest.\n\nTyler grinned, having taken advantage of his distraction. \n\n\"That's set done, I guess.\" Calvin blew his whistle and I burst out laughing as our team cheered.\n\nJake rushed towards me. \"Seriously, Nellie, I'm so sorry. Are you sure you're okay?\" \n\n\"I promise.\" I touched my face gingerly. My skin felt warm, but there was no pain. \"Need to work on your throw, Hunter, I barely noticed it!\"\n\nHe chuckled awkwardly. \"Oh no, are you going to start calling me Hunter too?\" \n\n\"Why, don't like it?\"\n\n\"It's fine, just...\" His voice trailed off as he glanced behind me, and I knew Veronica was approaching. \n\n\"Good game, Hunter,\" she said brightly. Turning to me, the brightness dropped. \"Are you hurt, Nellie?\"\n\n\"Nope.\" I smiled, baring my teeth more than was necessary. \n\n\"Makes sense.\" That fake, sing-song voice returned. \"I heard you were used to having balls on your face.\"\n\n\"Well, it wouldn't be the first time Jake's hit me in the face with his balls,\" I replied, my voice sickeningly sweet.\n\n\"I... what?!\" Jake's eyes widened as he processed what I said.\n\n\"You're disgusting.\" Veronica flung her ponytail over her shoulder as she turned to walk away. \n\n\"What was that about?\" Jake finally managed to ask. \n\n\"She's been a bitch to me all night.\"\n\n\"That doesn't explain anything.\"\n\nI shrugged. \"She knows you and I have hooked up, and she doesn't like me because of that.\"\n\n\"Why would that cause her to dislike you?\"\n\nI stared for a moment. \"Jake, man. She has a crush on you. I pegged it the second you walked in the room.\"\n\nJake was not stupid. He was a graduate student, who had done most of his high school work himself while being home-schooled and had maintained a high GPA all through his undergrad. He was one of the smartest people I knew, in fact. \n\nHowever, sometimes Jake was a naive, unobservant idiot. \n\n\"No she doesn't,\" he finally responded, though the gears were still turning in his head. \"Wait, but... oh.\" \n\n\"There it is.\"\n\n\"How could you even tell?\"\n\n\"The flirting, the high-pitched voice, the hair toss, the way she calls you 'Hunter' like it's some kind of cutesy nickname. Shall I go on?\"\n\nI would have, but Calvin called for us to switch ends to start the second set of the night. \n\nWhen all was said and done, Jake's team only beat us twice, and our team took every other set. I didn't get a chance to talk to him again during the game, but I did spend a good portion of time admiring him as he played. Jake was obviously very athletic, and he had amazing reflexes. Watching his body twist and muscles flex as he threw, I understood why Veronica was smitten. I'd always had a thing for watching men play sports. There was just something incredibly erotic about watching the power, the strategy, the way people got so intense. It might have just been dodgeball, but it still had all those elements.",
        "Veronica was another matter. While Jake held most of my attention, I couldn't help but watch Veronica with a mix of jealousy and attraction. Each time she yelled or made a comment to someone on the team, I felt a curdling annoyance rising up in my throat. But each time she tossed the ponytail over her shoulder or twisted her torso to avoid being hit, a tiny shock of desire pinched through my stomach. That just served to annoy me even more, and I found myself getting angrier and angrier at Veronica. \n\nBetween the adrenaline, anger, and lust for the man on the other side of the court, I was a mess. I wanted to fuck Jake right then and there, to just give in to that animalistic instinct. \n\nIt was only at the end, when I was dripping in sweat and the knot in my oversized orange garbage bag of a T-shirt was coming undone that Jake and I spoke again.\n\n\"You coming to Lou's?\" he asked as I squirted water in my mouth.\n\n\"Uh, yeah.\" I shook the knot out of the shirt and brought the hem to my forehead, wiping sweat off. \"I'm going to hit the locker rooms and shower first, though.\" \n\n\"Awesome. I'll wait for you and we can walk over together, if that's okay.\"\n\n\"Oh, so it's okay to fraternise with the enemy now?\" \n\n\"I thought the fraternising was happening later. Were we going to your place or mine?\"\n\nI raised my eyebrows. \"You're so forward tonight.\" \n\n\"You looked hot on the court. Is that a problem?\"\n\nSmirking, I shook my head and collected my things, heading to the locker rooms across the hall.\n\nThe two girls from the other team were in the ladies locker room, and Kara and Sydney arrived just after I did. There were only three stalls available, so Kara and I settled on the wide bench in the middle of the room and chatted amicably. \n\n\"So are you still mad I made you come play with us?\" she asked me.\n\n\"Nah. It ended up being mostly fun. And there's that beer you promised me.\" \n\n\"Always in it for the beer.\" She shook her head mockingly. \n\nSydney and the other girls were considerately quick with their showers, so it wasn't long before Kara went in one stall and I got the other. Even though Kara had waited until the last minute to ask me, I'd still had time to grab a change of clothes from my dorm room. The shower stall was small, though, so I just grabbed my towel to bring with me. I undressed quickly, peeling the sweaty tank top off my body and hanging it from the hook before shimmying out of my shorts and panties. My sports bra was soaked with sweat, and I sighed in relief as I let my breasts bounce, free from its constriction. \n\nFor a locker room, the showers were pretty good. The water was hot and the pressure was reasonably strong, and I revelled for a moment under the stream. Water ran down my face, plastering my hair to my neck. Between the water and the sound of hairdryers blowing in the main locker room area, I couldn't hear anything, and I found my thoughts drifting to Jake again.\n\nWe had been hooking up for a couple of months at that point. After meeting at Kara's party and fucking in her backyard, we'd made a point of getting together almost every week. At first, I think Jake had expected us to start dating, but I don't think either of us actually wanted that. Jake was a busy grad student and I didn't want that kind of commitment. I had made it quite clear to him that I wasn't expecting to be exclusive, either, though I hadn't hooked up with anyone else since meeting him. There seemed to be little point, when Jake was more than enough to satisfy every desire I had. \n\nI wished for a moment that Jake was there. Standing under the spray of the shower, I ran my hands along my body, trying to quell some of the arousal I was feeling. I didn't want to masturbate. I wanted to be fucked, to have the weight and heat of another body against me. But I couldn't help but slip my hand between my legs and touch myself, hoping it would be enough to subdue myself for a while. \n\nI heard the hairdryers switch off and Kara's voice floated over the door, jolting me back from my thoughts.\n\n\"Hey Nellie, I'm going to head out to Lou's with Syd. Jake's waiting out in the hallway for you.\"\n\n\"Sure, sorry! Tell him I'll be out in a few.\" \n\nFiguring I could handle how turned on I was for a little bit longer, I soaped up and rinsed off. As soon as I was done, I hurried out of the shower stall, drying off quickly before wrapping the towel around me. \n\nThe locker room was quiet, and I assumed I was alone. My clothes were sitting on the bench and I dropped the towel unceremoniously, grabbing the fresh pair of panties I'd brought and stepping into them. \n\n\"Seriously, do you ever even bother trying to act decently?\" Veronica's voice echoed through the locker room.\n\nI closed my eyes briefly, inhaling deeply and willing myself to calm down. \"I met you for the very first time earlier tonight,\" I said, working to keep my voice steady. \"You've been an absolute bitch to me the entire time, and the only thing I can think of is that you've got a thing for the guy I'm fucking.\" Without bothering to put any additional clothing on, I turned towards Veronica.\n\nShe had clearly showered as well, but was already fully dressed. My nudity seemed to embarrass her more than it did me, and she looked pointedly away as I crossed my arms in front of me.\n\n\"Maybe I just don't like the fact that you're leading him on,\" she replied.\n\n\"One, Jake is a big boy. He can make his own decisions.\" I turned back to my clothing and put my bra on while I continued. \"Two, he and I have discussed what we're doing. I don't need to justify that to you. Three, how in the hell did you even know about us? It's not exactly public knowledge.\"\n\n\"People talk,\" she said simply.\n\nI rolled my eyes. \"Veronica, he didn't even know you had a crush on him. You can't fault him for not knowing when you didn't tell him anything.\"\n\nShe sputtered for a moment. \"What do you mean, didn't know? He knows now?\"\n\n\"Well, yeah. I told him.\"\n\nHer face went red. \"What the fuck would you do that for?\"\n\n\"Why wouldn't I?\" I spat back. \"You've had it out for me all night.\"\n\n\"Because I'm jealous, okay?\" she yelled. \"I haven't gotten laid in ages and when I see girls like you around, I know why.\"\n\n\"Are you calling me a slut again?\"\n\n\"I mean the pretty girls. Guys like hot girls. I'm not hot.\" \n\n\"Well, I'm sorry, but that's absolute bullshit,\" I said bluntly. \"You're this tall Amazonian goddess who kicks ass at dodgeball. You don't get to say you're not hot, because you are.\"\n\n\"Then why do guys go for you and not me?\" Her voice wavered. \n\n\"I don't play games or beat around the bush. I tell them I want to fuck them. I mean, aside from you being a bitch to me all night, I'd fuck you. Just so you know.\"\n\nShe laughed. \"Sure you would.\"\n\n\"I would,\" I insisted. \"You're mean but you're still hot.\" \n\n\"I'm graduating this year and I still never got any of those crazy college stories,\" Veronica ranted. \"I had a boyfriend for most of it and now that I'm single, I can't even get picked up at a party. I never got to experiment or do anything reckless. And then I see you and you're just living all these things that I wanted to experience and it pisses me off. You piss me off, and it's not your fault, but you do.\" She shook her head, stepping forward to push past me. \"I'm going home.\"\n\n\"Wait one fucking second.\" I grabbed her arm before she could walk by. My heart was hammering, and I could feel heat rising in my chest as I looked at her. \"You don't get crazy college stories by just going home. So you stop right there and we're going to do something crazy, okay?\"\n\nI had to look up to meet Veronica's eyes. The tension between us was almost tangible as she looked back at me, lips slightly parted.\n\n\"What are you going to do?\" she asked.\n\n\"I'm going to kiss you now, unless you don't want me to.\" \n\nHer mouth opened and closed, shock flashing across her face. Aside from our breathing, the room was quiet, and the tension seemed thick around us. Finally, she nodded just slightly.\n\n\"I want you to,\" she whispered.\n\nI pulled her forward by the arm and crushed my lips against hers. The adrenaline, the tension, and the anger of the evening came to a head as we kissed. Veronica's shock dissipated immediately and she fought to control the kiss. Her hands moved up to my face, roughly cupping the sides of my head as she kissed me back. I wasn't about to let her be in charge, though. I nipped at her lip, drawing a gasp from her, and stepped closer, pushing my body against hers. \n\nVeronica shoved her tongue in my mouth, and I let her explore my lips thoroughly before mirroring her actions. Letting go of her wrist, I brought my hands up to her face. Our kissing was hard, urgent, anything but tender, and my body was loving it. Heat rose through my chest and burrowed in the pit of my stomach, and the fresh panties I'd just put on were already starting to dampen. Our breasts were pressed together and I was certain Veronica could feel the hardness of my nipples through my bra and hers. \n\nWe finally parted, each of us gasping for air. Veronica's face was red and I'm sure mine matched.\n\n\"Do you want me to stop?\" I asked breathlessly. \n\n\"This is crazy,\" she whispered. \"I can't believe I'm doing this.\"\n\n\"Do you want me to stop?\"\n\n\"No. I want more.\" \n\nI reached for her again, then stopped. \"Do you want me to make it even crazier?\" \n\nI wasn't sure if she would. Veronica didn't seem to have a ton of experience, and I had a suspicion that I might be the first girl she'd ever been with. I expected the shock and uncertainty to flash across her face again, but I was underestimating her.\n\n\"Why not? What are you thinking?\"\n\nLicking my lips, I glanced towards the locker room door. \"Jake's in the hallway waiting for me.\" \n\nHer eyes followed mine and then were back on me. \"Do you think he'll...?\" She trailed off, a mix of excitement and lust in her intense eyes.\n\n\"One way to find out.\" I started to move, then stopped. \"Take off your clothes.\"\n\nShe started undressing as I went to the door, still in my bra and panties. Opening it just slightly, I poked my head out and looked around. The hallway was deserted, aside from Jake leaning against the wall. He was freshly showered, wearing jeans and a grey long-sleeved T-shirt. \n\n\"Jesus, Nellie, did you fall in or something? You're taking your sweet-ass time.\" \n\n\"Feel like doing something crazy?\" I asked, ignoring his question.\n\nJake's eyes moved down the crack in the door, taking in the fact that I was only half-dressed. \"Not afraid of getting caught?\" He grinned as he stepped forward.\n\n\"Oh, that's not even the craziest part.\" I opened the door wider to let him in.\n\nHe looked both directions down the hallway before entering the locker room. \"What's the craziest part?\" he asked as I turned the deadbolt in the door. \n\n\"Hey, Hunter.\" Veronica's voice was soft as it floated through the locker room.\n\nJake's head whirled back to me comically before snapping back to Veronica, who stood by the bench wearing just a sports bra and thong.\n\n\"What's going on?\" He glanced back at me. \"I thought you two weren't getting along. Did I miss something?\"\n\n\"Well, yeah, you obviously missed something,\" I said. \"But that's not important. If you're not into this, go now. Otherwise...\" \n\n\"Veronica, are you sure about this?\" he asked softly.\n\nShe didn't respond immediately, and I watched as her chest moved up and down as she inhaled through parted lips. Redness flushed on her collarbone, up her neck and onto her cheeks as she looked first at me, then at Jake.\n\n\"I want this,\" she said.\n\n\"Join in or not, Jake. Up to you. But I'm going to fuck Veronica.\" I marched across the locker room and grabbed her, pulling her face to mine as our lips joined again.\n\nAny hesitation Veronica had been feeling was gone, and she grasped at me enthusiastically. I had no love for Veronica, but the lust I felt for her was demanding. Desire ran rampant between us, urgent and desperate. I knew Jake's eyes were on us as we kissed, but I ignored him for the moment.\n\nVeronica's fingers prodded at my body, groping along my hips and waist before moving up to my breasts. She touched them for a short moment before reaching behind me and unhooking my bra in a single swift movement. I wriggled out of the bra as she tore it away from my chest, her hands returning to fondle me greedily. Her touch was firm, probing, and I groaned against her mouth as she pinched my nipple.\n\nI explored her body thoroughly as she focused on my tits. Her thong sat low on her hips and I traced along the waistband before squeezing her ass. She gasped and grazed my lips with her teeth as I ran my fingers along her crack, following the thin string of fabric that nestled there. \n\nAs she played with my tits, I pulled back from our kiss and turned back to look at Jake. His eyes were wide, glued to the scene in front of him. I grinned as he looked at me.\n\n\"Join in whenever,\" I said, then turned my attention back to Veronica. \n\nWith a light shove, I pushed her back towards the bench and directed her to sit down. She obeyed, and I straddled her lap.\n\n\"Suck on my tits,\" I ordered, thrusting my chest into her face.\n\n\"Don't tell me what to do,\" she countered, but the darkness in her eyes gleamed with desire as she took one of my breasts in her mouth.\n\nI moaned as she sucked on my nipple, then squealed as her teeth came down on it. She wrapped one arm around me and held me in place, the other joining her mouth to ravish my tits. Her lips moved from one breast to the other, kissing a spot on my skin before sucking on it. I knew there would be a trail of reddish marks there the next day.\n\nI kept pushing my tits against Veronica's face, but brought my hands to the slick ponytail and worked her hair tie out. Thick, dark hair spilled down past her shoulders, and I ran my fingers through it. As I played with her hair, she gripped my breast and took my nipple back in her mouth, sucking hard. A sharp noise came from my throat as I involuntarily bucked my hips towards her, my fingers tightening in her dark hair. \n\nWith a hum of disappointment, I pulled my breasts away from Veronica's face as I sat back on her lap. My ass balanced on her thighs, a small gap between our torsos.\n\n\"Fuck you for being so good at this,\" I hissed at her.\n\n\"Fuck you for making me want it.\" \n\nI didn't reply, just grabbed at her sports bra and wrenched it up over her tits. From behind us, I heard a sharp inhale as Veronica's breasts bounced out of the fabric. My own gasp matched it as I took in the view.\n\nThat sports bra must have been working overtime, because I would have never guessed Veronica was hiding the set I had just revealed. I thought my tits were good, but hers were phenomenal. Heavy and swollen, her breasts had no right to be as perky as they were. Her nipples were perfectly round, almost begging for me to suck them. She lifted her arms to help me remove the sports bra completely, and before she could put them back down, I had buried my face there.\n\nI licked her cleavage teasingly before bringing my hands up to the firm mounds in front of me. My tongue circled her nipple, taking the hard nub into my mouth and raking my teeth against it. Veronica's breasts seemed to be as sensitive as mine were, because she tossed her head back and cried out as I savoured her tits. \n\nThe metallic sound of a buckle clanked from Jake's general direction and I grinned as I kept licking Veronica's breasts. Her hands explored my body, fingernails scratching along my back as she ran her fingers up and down. \n\n\"Nellie, I'm so wet,\" she mumbled. \n\nJake swore softly from behind us, and I pulled away from Veronica's tits to look at him. We both giggled as we saw Jake's hand in his pants.\n\n\"Jake, you had an open invitation to come join us and you're still standing there jacking it yourself?\" I teased.\n\nHe stuttered for a moment. I sighed in mock frustration and slid off Veronica's lap.\n\n\"Come here, Hunter,\" I ordered. \"Veronica, stand up.\" \n\nHe started across the locker room as Veronica stood. Once Jake reached us, I put my hands on my hips.\n\n\"Do you want to fuck Veronica, Hunter?\" \n\nHe nodded, swallowing hard as he looked at Veronica's almost-naked body. She flushed.\n\n\"Do you want to fuck me?\"\n\nHe nodded again.\n\n\"Veronica, take off his shirt.\"\n\nShe looked at him nervously before stepping forward. I could see her fingers shaking as she reached for the hem of his shirt. It wasn't until that moment, with them standing in front of each other, that I noticed Veronica was nearly as tall as Jake was. She could barely look him in the eye, however, and focused her attention on removing his shirt. Jake watched as she did, lifting his arms to help her undress him. It was only then that she met his eyes, and when she did, he smiled encouragingly. \n\n\"Now take off his pants,\" I said, my voice softer than before. \n\nVeronica moved her hands to the waistband of Jake's jeans. His belt hung loosely, already unbuckled, and his pants were already undone. She pushed them down his hips, working them past the bulge of his cock. Jake kicked off his shoes as his jeans came down, stepping out of them and shoving them to the side with his foot.\n\nI was watching the two of them with rapt attention. Jake exuded his usual confidence but being respectful of Veronica's nerves, he held back and let her follow my instructions as she slowly stripped him. It was intensely erotic, and for the moment, I was happy just to watch.\n\n\"Now kneel down and suck his cock, Veronica.\" She looked at me, and I met her gaze steadily. \"Is that a problem?\"\n\n\"No.\"\n\nJake and I both watched as she dropped to her knees in front of him. She removed his boxers, her actions slow but not timid, and revealed Jake's cock. He was fully erect, the thick appendage jutting out proudly. Veronica wrapped her hand around him and Jake's relieved sigh turned into a groan as she took him into her mouth. I licked my lips as she began bobbing her head, Jake's cock disappearing into her mouth a little more with each motion. \n\nWet sounds came from Veronica's lips as she worked Jake's cock. His hands ended up on her head, resting on top of that thick, dark hair while she sucked him off. I enjoyed the show for a bit before approaching Jake. Reaching up, I turned his head towards me and kissed him. \n\n\"How did this even happen?\" he murmured against my mouth.\n\nOne of his hands left Veronica's head and cradled my breast, his thumb brushing across my nipple. \n\n\"Doesn't matter,\" I whispered back.\n\nA muffled groan left Jake's mouth as Veronica made an attempt at swallowing him completely. His hand tightened on my breast, and I'm sure the one he had on Veronica's head did too. \n\n\"Hold on one sec, Veronica,\" I said.\n\nMy hand joined Jake's on her head, but with the intent to hold her still. She paused, Jake's cock still in her mouth as she looked up at me. I dropped onto my knees beside her.\n\n\"What?\" she asked, looking mildly annoyed at having to remove Jake's cock from her throat. \n\nI raised my eyebrows. \"You have to share, bitch.\" I wrapped my fingers around Jake's cock and brought him to my mouth, dragging my lips along his swollen tip. \n\n\"Fuck you.\" She glowered at me for a moment before pushing forward, her hands cradling Jake's balls as she licked his shaft.\n\nJake seemed to have no complaints as we battled over his cock. I kissed along his length, stroking him gently as Veronica played with his balls. When I went to wrap my lips around him, though, she brought her mouth to mine, and the tip of his cock dipped between us for a moment. Jake seemed to enjoy that, and I looked up to meet his eyes as we shared him like an ice cream cone. I stroked him firmly, working my hand up and down his shaft while our tongues flicked around his cock head.",
        "His panting urged us on. Veronica pulled back from his tip and I took Jake in my mouth, sucking gently as I continued to jack him off. Her mouth ended up on his balls, and Jake's knees nearly buckled as she licked before taking them in her mouth. Not to be outdone, I opened my throat and shoved Jake's cock as deep in my mouth as I could take it. \n\n\"Oh, God yes,\" he groaned.\n\nHis hand pushed on the back of my head, driving himself even deeper in my mouth. Veronica sucked on his balls for another moment before releasing and pushing on my arm.\n\n\"Let me,\" she begged. \"Nellie, I want to taste him.\" \n\nI knew Jake was getting close. His breathing was ragged and small grunts were escaping his throat. As soon as I moved my mouth off his cock, Veronica took him in hers. She mimicked my actions, her nose pressed against Jake's pubic bone by the time she had him all the way in. \n\nWhen she pulled back, I gripped Jake's cock again and started stroking harder. She resumed her fondling of his balls and we each took turns licking and sucking his tip. Somewhere in the mix, we also started kissing, our lips meeting on Jake's cock, our tongues dancing against each other while licking him. \n\nSoon, our mouths weren't on him at all, as we resumed kissing each other with a starving passion while working Jake's dick. Veronica's other hand returned to my tits and she brushed her palm against my nipple. My hand started on her breasts, but I slowly worked my way down her stomach until I could slide my fingers between her legs. She gasped and adjusted her stance, spreading her knees open just slightly. I rubbed her pussy lightly through the soaked thong before pushing it aside and darting my finger into her dripping slit.\n\n\"Yes,\" she urged against my mouth. \"That feels so good, Nellie.\"\n\n\"I'm going to come,\" Jake suddenly panted. \"Fuck, I'm going to... Nellie...\"\n\nI closed my eyes as I felt Jake's cock twitch under my hand, and a moment later he was spurting hot cum on the side of our faces. Both Veronica and I ended up with cum dripping down our cheeks, and when I was sure I'd stroked every drop out of Jake, I let go of his cock and opened my eyes. \n\nVeronica's mouth moved from my lips to my cheek, and I moaned as she licked Jake's cum off my face. When she was done, I returned the favour, tasting the saltiness mixed with her sweat. Jake took a step back, sitting down on the bench with a sigh as he watched us clean each other up. \n\n\"You two look so hot,\" he murmured. \n\n\"We know,\" I said.\n\nI turned my attention back to Veronica. My pussy was dripping wet and begging to be touched, but I wanted to taste hers first.\n\n\"Lie down.\"\n\n\"Here?\" She looked at the floor uncertainly. \n\n\"Good point.\" I looked up at the bench where Jake was sitting. \"Jake, spread my towel out. Veronica, lie down on the bench.\" \n\nIt took some adjusting, but eventually Veronica was lying on her back on the bench. Jake insisted she rest her head on his lap while he recovered. Having fucked Jake numerous times before, I knew he had stamina, and my guess was that by the time I made Veronica come he'd be ready to go again. \n\nOnce she was comfortable, I crawled onto the bench and straddled her hips. I meant to start by kissing her lightly, but as I leaned down to kiss her, she grabbed me and pulled my face to hers in a bruising embrace.\n\n\"Don't fucking tease me,\" she mumbled against me.\n\n\"I'll tease you all I fucking want.\" I jerked my head away.\n\nWith a renewed sense of defiance, I began licking and sucking down her body, grazing my teeth anywhere I thought might be sensitive. Veronica squirmed beneath me as I ran my tongue along the undersides of her breasts, her hands clawing at my shoulders. I moved further down her body, hands tracing down her ribs as I kissed her stomach. \n\n\"God damn it, Nellie.\" She gasped as her hips thrust forward underneath me. \"I can't take it anymore.\"\n\n\"Too bad.\" My lips tickled her stomach as I tortured her, moving tantalisingly slow towards her core. \"You'll just have to wait.\"\n\nShe growled in frustration. \"Please, I need it. Please, Nellie.\"\n\nI glanced upwards as my lips landed just below her belly button. Veronica was looking down at me, her eyes desperate. Grinning, I kissed her stomach again, slightly lower, though I did speed up my movements a bit. Once I reached the waistband of her thong, I hooked my fingers in it and slid it down her legs. Once it was off completely, I nestled myself back between her legs and lowered my face to her pussy.\n\nShe was drenched, and instead of continuing my teasing, I stuck my tongue into her glistening folds and licked firmly. Veronica groaned in relief, her hips rising off the bench to bring her pussy closer to my mouth. Her juices covered my face almost instantly, a tangy sweetness that coated my lips and chin as I set to work eating her out. \n\nI traced my tongue along her inner lips, sucking lightly before circling my tongue around the swollen bud between her legs. I tested a few different techniques as I licked her: flicking her clit with my tongue, licking her up and down and side to side. The reaction I was waiting for happened when I flattened my tongue and pressed against her. Veronica cried out and arched her back, pushing herself harder against my mouth. \n\nTaking this as my cue, I alternated between licking her like that and sucking her clit. Her breathing quickened and legs pressed against the sides of my head. I finally brought my fingers up to her entrance and pushed two inside of her at once. \n\n\"Yes!\" she hollered, and she pressed her hands to the back of my head, grinding against my face as I lapped at her cunt. I curled the fingers inside her, finding her G-spot and increasing the pressure from my tongue. Veronica urged me on, and I was so focused on the delectable pussy in my face that I didn't realise Jake had moved until I felt hands on my hips.\n\nI kept licking Veronica's cunt as Jake worked my panties down my thighs. As he bared my ass, I tore my face away from Veronica's pussy for a moment, pressing her clit with my thumb while I turned.\n\n\"You have a condom on?\" I panted.\n\n\"Of course,\" he said. \n\n\"Good.\" I turned back to Veronica's cunt and resumed eating her out. \n\nMy own pussy was dripping wet, and Jake grabbed my hips as his cock pushed at my entrance. With practised ease, he plunged inside of me. I moaned against Veronica's pussy as he started fucking me, the sensations familiar yet far more intense than usual. Veronica's own cries were muffled by the thighs pressed against either side of my head. \n\nI was turned on beyond belief, and I knew it wouldn't take long for me to come. The hand inside Veronica's pussy was resting on the bench, and I balanced precariously as I reached between my own legs to finger my clit. \n\nThe cock fucking me relentlessly was distracting me from focusing on Veronica, but I made sure to maintain the licking of her cunt. If it weren't for Veronica's thighs pressing on my ears, I probably would have realised she was about to come, but between my distraction and her unintentional earmuffs, it surprised me when she did. Suddenly, her pussy walls were clenching on my fingers and she was shoving my face hard against her cunt, her hips bucking wildly as she came. I kept licking dutifully as she rode out her orgasm, stopping only when I felt her relax back against the bench. Her knees fell open, her thighs coming away from my ears.\n\nSeconds later, waves of pleasure rolled through my body and I pushed back hard against Jake. My pussy tightened around him as my body seized, electricity spiking from my fingertips to my toes as I cried out. Panting, I fell forward between Veronica's legs, Jake still pushing inside me powerfully. \n\nAs much as I wanted to have him continue fucking me, I knew my pussy would be raw before he finished again. \n\n\"Jake,\" I gasped. \"Jake, stop.\"\n\nHe let out a disappointed murmur but pulled out. \"Are you okay?\" \n\n\"Yes. But Veronica needs to be fucked now.\" \n\nShe had been sitting up on her elbows, watching as Jake pounded me. At my statement, she met my eyes again.\n\n\"Yes, please,\" she said, her voice dripping with desire.\n\nI scooted back on the bench, standing on wobbly legs and sliding my panties the rest of the way off as Veronica sat up. \"How do you want it?\" Jake asked, grinning at Veronica.\n\n\"I want to ride your cock,\" she said simply. \"Lie down.\" \n\nAs soon as he was on the bench, Veronica was straddling him. I watched as she sank down on his cock, sighing as he filled her. She rocked against him, letting him slide out completely before impaling herself on his rigid dick again and again.\n\nI wasn't sure where I fit in at first, until Veronica looked at me. \"Sit on his face,\" she ordered. \n\nSo I did. Jake's hands cradled my hips as I settled on his face, the scruff on his chin rough against my thighs. Jake had eaten me out multiple times before\u2014though never from this angle\u2014and he knew what I liked. Facing Veronica, I watched as her tits bounced while she continued riding his cock. Her pussy was stretched around him, and watching him disappear inside her sent shivers of arousal through my body. \n\nShe reached forward and pulled me towards her, kissing me as she fucked Jake. I kissed her back, and soon we were both panting and moaning against each other's mouths. Jake's tongue pushed against my cunt as he sucked my clit, and Veronica kneaded my breasts as she continued riding him. I mirrored her actions, tweaking her nipples and feeling the weight of her tits as they bounced.\n\nA sharp gasp left my lips as I felt Jake's hands exploring my ass. We had talked about him fucking me in the ass some time, but hadn't yet tried it out. Since that conversation, though, Jake had been obsessed with touching my ass. A few times, he'd fingered my ass hole, though I was still getting used to it. Sitting on his face gave him the perfect opportunity to explore even more. With his tongue still working hard against my clit, he lifted me away from his face just enough to slide a finger along my slit. Once he had collected some of my juices, the finger trailed up to my tight ass hole. \n\nI tensed a bit as the tip of his finger pressed against it, then forced myself to relax as he pulled back a bit. I ground my hips against his mouth when I was ready for him to try again. Getting the message, Jake added more pressure, and this time his fingertip slid inside it. Almost instinctively, my anus tightened around him, but as he massaged the inside of my ass, it loosened up. Jake pressed his finger even further inside me, and I had to grab Veronica's shoulders to keep from losing my balance and falling forward.\n\n\"Tell me what he's doing to you,\" she mumbled, her lips brushing mine.\n\n\"He's sucking on my clit, then pressing his tongue against it,\" I gasped. \"And he just put his finger in my ass.\" I could feel Jake smile between my legs as I told her.\n\n\"Do you like it?\" Veronica asked.\n\n\"Yes.\" The word came out almost hissed, and as I confirmed my enjoyment, Jake started slowly thrusting his finger in and out. \n\n\"What's he doing now?\" she asked as a small squeal fell out of my throat.\n\n\"Fingering... fucking... finger fucking?\" I could barely form the words. \"Fuck, it feels so good.\"\n\nThe sensations were too much, and I knew I was going to come again. As Veronica kissed me and pinched my nipples, my hips bucked against Jake's mouth. I came again, hard, and cried out against Veronica's lips. Jake kept sucking my clit as I came, the finger in my ass stilling inside of me. Fire seemed to burn through my body as I submitted to my orgasm, and the world seemed to go hazy as whiteness filled the edges of my vision. \n\nIt took a long moment before I regained any semblance of control. Once I could feel my limbs again, I worked my way off Jake's face. Veronica was still riding him, and almost as soon as I was standing, came as well. Watching her come was an event in itself. She tossed her head back, her long, dark hair almost feathering across the top of her ass. Her breasts were thrust in the air, gloriously huge and almost begging to be sucked. And the noise, almost musical as she cried out. Jake reached down and gripped her hips as she came, thrusting up into her as she bucked wildly. \n\n\"Veronica, I want you to lie on your back so I can fuck you,\" Jake told her as she recovered.\n\nI grinned, knowing he wanted to unleash himself. Veronica was about to have the fucking of a lifetime.\n\nShe nodded and dismounted Jake. His face was still shiny with my juices as he stood up and, for what I think was the first time, kissed her hard. He guided her back onto the bench and plunged his cock inside of her.\n\nAs he fucked her, I crouched beside the bench and grabbed Veronica's tits. I took one nipple into my mouth as I played with her other breast, and her hands ended up in my hair as I licked and sucked her tits. Jake's cock pumped in and out of her, making her tits bounce as he drove inside her. The wet, slapping sound from between them harmonised with Veronica's moans - little cries and grunts with each thrust that Jake made.\n\nI kept sucking and licking Veronica's nipple as I moved my other hand down to her clit. As Jake fucked her, I started rubbing her sensitive little nub. Unintelligible words came from her mouth, and I assumed she was close again.\n\n\"Come for me, Veronica,\" Jake directed. \"I want to feel you come on my cock.\" \n\nShe did, almost instantly, and it was like watching a star explode. Her body writhed, back arching as she screamed. My hand was still between her and Jake, and a sudden warm wetness drenched my fingers as she squirted. \n\nI knew Jake loved the feeling of a pussy bearing down on him, and I knew he was about to come as well. As he grunted, still fucking Veronica madly, I brought my hand up to his mouth.\n\n\"You made her squirt, Jake.\"\n\nHis eyes met mine and a wicked gleam flashed through them as he took my fingers in his mouth and tasted Veronica's juices. With that, Jake was coming again, stilling with his cock buried deep inside Veronica's cunt. \n\nIn the moments that followed, the silence seemed palpable. Aside from the sound of our breathing, the locker room was quiet until Jake slid out of Veronica. At that point, she groaned, her knees coming together as she shifted on the bench. Her eyes opened and she sat up, looking from me to Jake and back again. Jake also looked at me, as though I was the one who should break the awkwardness. I didn't know why they thought I was the person to do that, but I chalked it up to everyone being a little drunk off their orgasms. \n\n\"So, do we all shower again now, or do we just go to Lou's smelling like sex and hoping no one will notice, or...?\"\n\nVeronica's mouth dropped open in disbelief. Jake burst out laughing. \n\n\"What are we going to tell everyone when we all walk in late together?\" He started cleaning up as I reached for my panties and bra.\n\n\"I'm going to tell them that we had a crazy threesome in the locker room. Then, when they don't believe me because that's fucking insane, you make some shit up about Veronica and I having a mature conversation about why we didn't like each other and coming to a mutual understanding and respect for one another.\"\n\nVeronica still looked shocked, and I worried for a moment that she was having second thoughts about what we had just done. However, a smile broke out on her face and she started laughing as she reached for her own clothes.\n\n\"That's even less believable than a locker room threesome,\" she said.\n\nBy the time we were all dressed and cleaned up, we were chatting like old friends. Once we were ready, I unlocked the locker room door and peered out. No one was in the hallway, and somehow, we'd managed to have an entire threesome without anyone even trying to get into the room. \n\nAs we walked to Lou's, I hooked my arm through Veronica's. \"So, tell me. Do you always squirt like that?\"\n\nInstead of her face turning red, Veronica laughed. \"Sometimes. Why? Do you not?\" \n\nI shook my head. \"You need to teach me. I'm jealous.\" \n\nShe agreed to it, surprisingly, on the condition that Jake be there. Jake agreed to it, of course, on the condition that we use a bed instead of a locker room bench next time. \n\nI guess getting fucked like that loosened Veronica up, both literally and metaphorically. I grinned as we walked into Lou's, still arm in arm. I couldn't wait for my lesson with Veronica.\n\n \n"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "bisexual female",
        "blowjob",
        "college",
        "cunnilingus",
        "dodgeball",
        "ffm",
        "locker room",
        "threesome",
        "threeway",
        "two women one man"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/nellie-and-the-dodgeball-game"
}