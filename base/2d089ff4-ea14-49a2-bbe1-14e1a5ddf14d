{
    "title": "Surefoot 01: Ch. 02",
    "pages": [
        "Deep Space, Today:\n\nFor something that was nicknamed by its pilot as 'The School Bus', it certainly had style: a civilian vessel temporarily leased by Starfleet, it was designed for short-term tourism, with a large central area dominated by a series of tables and chairs and overlooked by large observation windows, now currently filled with streaked starscape as the engines dilated normal space into a warped version of itself. The third-year cadets it currently carried sat around, availing themselves of food and drink from the nearby dispensers, or read or chatted anxiously about their unknown final destination.\n\nOr in the case of those at the table at the extreme rear, played a game of Kal-toh, a surprisingly addictive Vulcan game where opponents moved a chaotic stack of holographic rods in order to create ordered patterns - or destroyed the efforts made by one's opponents. Vulcans protested that outsiders had turned what was meant to be a meditative game reflecting the quest for finding logic within illogic into a competition, and released versions of the game where such tactics cost a player points instead of earning them. But most just sought out the original versions. They were more fun.\n\nAssuming one was paying attention. \"This is not gonna end well,\" Sasha Hrelle announced to no one in particular, drawing back strands of blonde from her forehead. She had finished her iced mocha some time ago, but didn't want to rise and get another and risk being seen, and was waiting for someone else at the table to go for something themselves so she could ask. But no one was rising.\n\n\"Then concede. There is nothing dishonourable in that course of action,\" her friend beside her suggested, studying the board in front of her. Eydiir Daughter-of-Kaas of the Ten Tribes of Capella was tall and lithe like most of her race, with skin the colour of polished mahogany, sable hair cropped down to the scalp and a dour attitude, at least to those who didn't know her.\n\nShe wasn't the first Capellan to join Starfleet, but she was the first with a Medical major, her combat-oriented race only recently accepting the notion that the sick and injured did not have to be left to die, that a fight to save their lives was every bit as honourable as a duel. \"And you can get me another sandwich while you're at it.\"\n\nOn Sasha's other side, Jonas Ostrow looked up from his seat, his brow furrowing. \"Are you going for something? I could do with another coffee, extra cream, extra sugars please.\" He was a skinny, swarthy figure, with wide eyes and shimmering, silver-tinted hair indicative of a lineage spent mostly in space collecting mutations along the way, and an easy-going accent usually heard in colonies near the Outer Rim.\n\nOn Jonas' other side, Neraxis Nemm snorted. \"Extra cream, extra sugars.\" She was a heavy-set Bolian, like all of her people blue-skinned, bald with dark-blue bands along the scalp, a prominent vertical ridge bisecting her body, and dark eyes that narrowed as she studied the board. \"Why don't I just pop out a teat and let you suckle on that?\"\n\n\"I wouldn't do that,\" Eydiir advised. \"Bolian bodily fluids are corrosive to other species. I read a case study during the summer about a human who had unprotected sexual relations with a Bolian, and-\"\n\n\"-And we don't need to hear the details,\" Jonas assured her, blushing and ignoring the chuckles from Neraxis.\n\n\"I don't know how all of you can just sit there calmly,\" Sasha asked, her eyes fixed on something other than the game. \"He's almost here.\"\n\nNo one looked up. No one needed to, knowing who she meant: one of the last cadets to be picked up, from the Starfleet Academy Annex at Beta Aquilae II. Since his arrival, he had been moving from table to table, obviously introducing himself and allowing the other cadets time to properly appreciate the honour bestowed upon them. He would grin or laugh, sometimes not even only at his own jokes, slap backs in a manly fashion with the male cadets and flirt with the female ones.\n\n\"He needs kicking,\" Sasha decided.\n\n\"He doesn't seem so bad,\" Jonas noted. \"You might even end up liking each other.\"\n\n\"But if not,\" Eydiir assured Sasha, \"I have weapons in my bag behind you.\"\n\n\"Hi there.\" He drew up a chair from an adjacent table and set it between Sasha and Eydiir, sitting on it backwards and resting his arms on the top of the back of it. He had bronzed, chiselled features and perfect teeth and chestnut-brown hair, and looked like he was physically incapable of not smiling. \"I'm sorry we didn't get a chance to meet and greet sooner. My name's Giles. Giles...\" He paused for dramatic effect.\n\nAnd Sasha stole his thunder, pretending to be engrossed in the game despite currently scoring last. \"Arrington?\"\n\nHe beamed at her. \"I see my reputation precedes me.\"\n\n\"No, your voice does; we've heard you talking to everyone else before us, and were all sitting here wondering what we'd done to miss out on the honour of meeting you sooner.\"\n\nHe held up a reassuring hand. \"Hey, I promise you it wasn't intentional, I had to start somewhere.\" He glanced at her side of the board, reached down and worked the controls, forming a pattern on her behalf and earning her points. \"You should pay more attention, that was an obvious move.\"\n\nHe missed the looks Sasha exchanged with Eydiir to continue, \"I'm majoring in Command, as you can imagine, although of course I also had to choose a minor in Flight Control and Astrogation, but that's okay because I'm a decent pilot, I even have my own solar yacht back at Beta Aquilae. I got it for my twelfth birthday; if you find yourselves in that area, I'll give you a spin around the local sun in it. How about the rest of you?\"\n\n\"No, I don't have a yacht,\" Sasha admitted, deadpan.\n\nHe chuckled politely. \"No, I mean, what are your names, your majors, some interesting facts about you?\"\n\nWhen Sasha didn't respond, the answers started from her right. \"I'm Jonas Ostrow, majoring in Engineering. I'm from Hyralan, my family runs a salvage business.\"\n\n\"Hi, Jonas! I love the accent, very rustic, it's good to know the Academy hasn't forgotten those out in the provinces. And who's your charming-looking friend there?\"\n\n\"Oh, this is Neraxis Nemm, she's majoring in Security.\" He paused, when he realised the Bolian girl wasn't going to follow up on it herself. \"Interesting fact about her? Well, uh, her favourite food is Terran Kippers Vindaloo.\"\n\n\"With extra chillies,\" she finally added.\n\nGiles beamed to her. \"Pleasure to meet you, Neraxis! I really like Bolians. My nanny was Bolian, and so was one of our cooks; your people make marvellous contributions to the service industry.\"\n\nNeraxis looked up at him now. \"Gee, thanks for the compliment. Would you like to have unprotected sexual relations with me?\"\n\n\"I am Eydiir Daughter-of-Kaas, of the Ten Tribes,\" the Capellan announced, never looking up at Giles. \"I am a Medical major.\"\n\n\"Excellent! Anything interesting to note about you?\"\n\nShe seemed to consider the question before replying. \"I killed my sister in a duel over a boy when I was fourteen.\"\n\nHis jaw dropped. \"What?\"\n\nShe frowned. \"Father wasn't pleased.\"\n\nGiles froze, drinking in the silence among the group, as if perhaps waiting for someone to tell him it was a joke. Then he looked to Sasha, the last of them, expectantly.\n\nShe pretended to only just notice him doing that. \"I'm Mazel Tov. My Major's Applied Chutzpah.\"\n\n\"Chutzpah? Is that a science, Mazel?\"\n\n\"People have said I make it one.\"\n\nHe frowned, and then chuckled politely. \"You're kidding me, aren't you? I can tell. So, who are you, really?\"\n\n\"You got a reason for asking? Apart from the chance to hear yourself speak?\"\n\nGiles eyed her, looking ready to challenge her attitude, before looking to the others. \"It's useful to learn something about people who might be serving under you.\"\n\nShe arched an eyebrow. \"'Under you'?\"\n\nHe nodded. \"Of course. When we get to our assigned ship, the eighteen of us will be divided into three squads, each with its own leader. So...\" He left it at that, as if the rest was obvious.\n\nNow Sasha folded her arms across her chest as she regarded him. \"I hate to burst your bubble, Giles, but maybe you won't get the job? There's a few folk here who could foot the bill.\"\n\n\"True,\" he admitted, smiling with derision at the very notion. \"But another consideration is where we're being posted.\" He leaned in more closely to the table. \"I caught a glimpse of the coordinates for our destination when we left Beta Aquilae: that sector has the USS Impala. Commanded by one Captain Lucille Arrington.\" His eyes twinkled. \"My aunt. So, it stands to reason that I'll-\"\n\nEydiir glared angrily at him. \"You believe Starfleet would allow for nepotism? That is dishonourable. I do not accept this.\" She started to rise. \"I will speak with the Commander-\"\n\n\"Wait-\" He put a hand on her shoulder to stop her, before withdrawing it quickly at her expression. \"Nepotism is too strong a word. But you have to understand, the Arrington family has been influential within Starfleet for eight generations. You'll find us in Starfleet Headquarters, Utopia Planitia, Alpha III, Starbase 12... we're unavoidable.\"\n\n\"Like a night on the toilet after a Klingon banquet,\" Sasha offered.\n\nNow Giles focused on her again, unable to ignore her any longer. \"Has my family done something to offend you in a past life?\"\n\nShe twisted in place to face him. \"Not a past life, Bubulah, this one.\"\n\n\"Umm, Sash-\" Jonas begun, before deciding to shut up when Neraxis put a hand on his arm.\n\n\"Oh?\" Giles replied, still facing her. \"And who was it then? Which member of my family are we talking about?\"\n\n\"Commander Matthew Arrington.\"\n\nThe answer made him start. \"My brother? He's an important figure within Starfleet Intelligence! Under what circumstances would he see a cadet like you?\"\n\nSasha grunted. Like she said at the start of this, this was not going to end well... \"My first week at the Academy, your brother made the mistake of taking it upon himself to enter the grounds and visit me in class. He then made the mistake of publicly informing everyone not only who I was, but giving his utterly unsolicited opinion that I had no business being there, and that I should just resign.\n\nHe then made the biggest mistake of all: he gave me permission to speak freely.\n\nBy the time I was finished with him, he looked ready to crawl into a corner and die.\" She breathed out. \"Hope that counts as an interesting fact about me.\"\n\nAs Sasha told her story, she could see his face grow paler, his breath quicken and beads of sweat appear on his forehead, as he finally recognised who she was. Finally, he rose back to his feet, stumbling slightly, unable to take his appalled eyes off of her. \"You're her... Sasha Hrelle!\" He glanced in angry disbelief at the others, as if in disbelief that they could be so calm about it. \"The daughter of that traitor!\"\n\nShe knew he was going to say it - other cadets had said as much, or similar, and lived to regret it - and she was already leaping to her feet and kicking aside her chair with a loud crash. Her fists balled at her sides, and her teeth were clenched, and her eyes were fixed mercilessly on him. \"You wanna step outside and say that again?\"\n\n\"That would be inadvisable, Cadet,\" came an older, cooler woman's voice. \"Given that 'outside' is currently warp space. The expected fisticuffs would be extremely short-lived.\"\n\nAll cadets stood at attention, though Sasha and Giles continued to glare at each other, as a tall, gaunt Vulcan with Commander's pips on her collar approached. She was young, for a member of her race, but carried herself with authority and an expectation to receive all the privileges that this authority carried. With a practised eye honed from a career serving as an Academy instructor, Commander T'Varik overlooked the scene and focused on Giles. \"Cadet Arrington, why are you away from your assigned seat?\"\n\nHe shifted in place, face reddening further. \"Commander, I was just getting to know my fellow shipmates.\"\n\n\"You appear to be doing far more than that, based on my observations and the gossip left in the wake of your passing. In addition to numerous failed sexual overtures, you have boasted both that you will be appointed to the role of Squad Leader, and that our next assignment would be the USS Impala.\" She paused and added, \"The former is not guaranteed. The latter will not happen.\"\n\nSasha and the others remained quiet, knowing better than to draw attention to themselves, let alone argue. But Giles, perhaps because of his unfamiliarity with her, or just plain stubbornness, didn't seem able to resist himself. \"But- But the Impala is in this sector-\"\n\n\"Indeed, as are more than a few other Starfleet vessels. But the Impala is a military escort; vessels engaged in combat or exploratory missions are considered unsuitable for cadets in the Accelerated Work and Education program. You should expect to serve on a supply or personnel ship, a tender, tug or possibly a buoy maintenance rig.\"\n\nGiles' disappointment was visible, though Sasha knew that it had been clearly explained when they all applied for a place in the AWE Program: a golden opportunity to continue their Academy training while performing actual work in their chosen fields, earning credits and service time. And it probably wouldn't do for the Academy's best and brightest to be killed fighting the Tholians or disappearing into an unknown spatial anomaly.\n\nAnd it seemed to sink into Giles' head, because he moved onto his next tactic, \"Commander, I need to send a message to my father, Admiral Jason Arrington at Starfleet Headquarters-\"\n\n\"I am well aware of the name and location of your father, Cadet,\" T'Varik informed him archly. \"You may submit a formal request once we have berthed and billeted on our assigned ship, as per regulations.\"\n\nAnyone who knew her knew that her tone now confirmed the matter was at an end. Giles obviously didn't know her. \"But I really need to speak to him urgently.\"\n\nThe Vulcan seemed to grow centimetres in height before their very eyes. \"You really need to return to your seat at the front of the ship, Cadet. Or you can remain onboard and return to Beta Aquilae II, where you can explain at your leisure to your father how you managed to get yourself removed from the Program before it even began.\"\n\nHe stiffened, nodded curtly, and offered Sasha a final dirty look before departing.\n\nT'Varik then turned to Sasha. \"Cadet Hrelle - or have you changed it to Cadet Mazel Tov? - whatever your personal circumstances, I will not tolerate aggression towards your fellow cadets or shipmates. Is that understood?\"\n\nShe nodded, feeling self-conscious and embarrassed. \"Yes, Commander.\"\n\nNow T'Varik's attention focused on the Kal-toh board, gaze narrowing for an instant, before reaching out and working Sasha's board controls. The Kal-toh rods reassembled and formed a perfect icosidodecahedron.\n\n\"You would benefit more from playing the non-competitive version of the game,\" she informed them, before turning to depart.\n\nBut then stopped when Jonas asked, \"Commander, I know that our assigned ship is meant to be a secret until we arrive, but we can't be that far away from it now, can we? I mean, you could come out and tell us at this point, couldn't you?\"\n\nThe Vulcan regarded him. \"Yes, Cadet Ostrow. I could.\"\n\nThen she left.\n\nThe cadets returned to their seats, Eydiir noting, \"She is very droll. I did not expect that in a Vulcan.\"\n\n\"Yeah,\" Jonas muttered glumly. \"I'm splitting my sides here from laughing.\"\n\nSasha stayed silent, staring at the remains of her drink, feeling ashamed of herself. The first year at the Academy had been difficult, given what had been said about her stepfather by some circles: that his vanishing, quickly followed by the attack on Salem Four, had not been coincidental, and that in fact Starfleet Intelligence court-martialled him in absentia for treason. She was fortunate in that Captain Hrelle had just as many supporters as he had detractors - and that her verbal assault on Commander Arrington became the stuff of Academy legend. She shouldn't have risen to the bait with Giles, as much as he had provoked her.\n\n\"Stay calm. Don't lose your head. Accept your fears, and move on.\"\n\nDad's words rang in her head, and remained as relevant now as on the day when she first heard them. And as on the day when she first really needed them.\n\n*\n\nStation Salem Four, Six Years Ago:\n\n\"Sasha? What did I say before about leaving your tricorder in your locker?\"\n\nThe ten-year-old girl looked up at her teacher, flipping the lid closed to conserve power. \"I was checking the content of my lunch for toxins.\"\n\n\"I see.\" Mr Oruh was a Betazoid, his solid-coal black eyes narrowing. He was a short man, bald, with large ears and nostrils and a warm smile, but Sasha and the other children were always wary of him, because of his telepathy. Oh, he always said that he would never read any of his students' minds without permission, but somehow he always knew when one of the children was daydreaming or hiding snacks in their pockets. \"Do you suspect we might be poisoning you?\"\n\n\"Not intentionally,\" she admitted. \"But Mom said the diagnostics on the station replicators in this sector were overdue thanks to the schmucks in Administration and-\"\n\n\"Your concern is appreciated,\" her teacher cut in, \"But perhaps in future you can leave your tricorder at home? I know it was a birthday present, but that was last week. What do you think?\"\n\nShe sighed. \"Yes, Mr Oruh.\" She tried to use those mental techniques Dad had told her about, to keep her thoughts shielded, but of course didn't know if it was working or not.\n\nDad. She hoped he was okay. He went off during her birthday party on an emergency, Mom said, and based on her silence in the last couple of days, he hadn't responded. But that was okay, Sasha would reassure her. Space was big, even at warp speed, and Dad was always busy because he was very good at his job-\n\nWithout warning, an explosion rocked the classroom, with debris and dust raining down. Sasha had immediately dived under her desk, as per her Emergency Drill Training. Children screamed, quickly drowned out by the station's Red Alert klaxon. Another explosion, and she shrieked as she felt debris strike her desktop, and she wrapped her hands around her head. What was happening? An asteroid strike, perhaps? No, the station had deflectors for that sort of thing.\n\nShe twisted in place to peer out from under the desk, towards the large observation windows in the rear of the classroom. The view was typically dominated by the fuchsia and aquamarine swirls of the nearby Banaris Nebula. It was still there - but now angry-looking vessels of unknown configuration swarmed about, firing white bolts of disruptor energy.\n\nSasha withdrew back under the desk as a third explosion rattled them. She called out, \"Stay calm! Stay under your desks!\" But she couldn't tell if anyone was listening to her, they all seemed to be in a panic. Where was Mr Oruh? He should be calming them down!\n\nShe peered out again and down the row of desks, seeing a large black duranium girder jutting down from the ceiling... with Mr Oruh under it! Quickly she crawled out towards him, concern for him overriding her terror. He was a good man, always said nice things about her to Mom and Dad, he had to be okay, he had to be-\n\nHe was! Well, he wasn't okay: he was pinned down by the girder, and there was blood oozing from him, and he was struggling to speak, but all he could do was open his mouth and his eyes, attempting to communicate with her, managing only a weak telepathic plea: Pain- shelters- go to shelters- Sasha nodded. The Shelters! Every section of the station had secured, self-contained areas that would provide oxygen, medical supplies and other useful items! They had to get to them! She rose and raced for the door- only to find more debris blocking it. ",
        "She coughed and waved away the smoke in the air... only to stop as the smoke seemed to move of its own accord, like scarves drawn through the air by invisible hands. Numbly she watched the path they took, a path that led them... to cracks in the windows, letting them escape into the vacuum of space. But the windows were laminated clearsteel! The force required to breach them was- was-\n\nShe looked around. The other children were crying, crying for their parents, for Mr Oruh, for anyone to come help them. Sasha wanted to cry, too. She hadn't been this afraid since Dad and she went camping planetside, and she wanted to try rock climbing. Twenty metres up, and she had begun deeply regretting it. It was so high, and there were no more hand- or footholds! She knew she had antigrav harnesses on, and that Dad was climbing beside her and would never, ever let her be hurt. But still, it was crazy! Crazy to be up here! She was gonna die!\n\n\"Stay calm,\" he told her softly, \"Don't lose your head. Accept your fears, and move on.\"\n\nSasha tried. She swallowed, and tried to slow down her breathing. And then she looked up... and there were indeed places to grip, somehow appearing when they surely couldn't have been there before! She resumed her ascent, ignoring how far she'd come and focusing on how far she had to go, making her way upward, upward, upward...\n\nShe cheered at the top of her lungs when they'd reached the top, Dad hugging her so tightly she thought she'd pop, almost as proud of her as she was of herself.\n\nShe couldn't count on help arriving before Mr Oruh died, or before the air all leaked out of the classroom. She had to do something.\n\nAnd she knew what to do. Retrieving her tricorder, she went to a corner of the classroom where, according to her Mom, a maintenance hatch was hidden. She removed a floor panel and found it; it was locked, but dad had taught her a trick with her tricorder that- yes! It worked!\n\nShe pulled the hatch off and set it aside with a grunt; it was heavier than it looked. Now she called to the others, \"Come on! We have to get out this way!\"\n\nNo one was moving. The station rocked again, making them squeal.\n\nThey were scared, too. But they had to accept their fears and move on. Adopting the tone her Mom always used when the woman had had enough, she barked, \"Everyone line up on this spot RIGHT NOW!\"\n\nChildren moved automatically, still looking terrified but somehow also glad that someone was there to take charge. She wondered if this was what it was like to be Dad.\n\nWhen it looked as if everyone had followed her orders, she nodded and said loudly, \"We're going to crawl through the maintenance tunnels to get to the corridor outside, and then the Shelter. Stay close together, watch out for each other, don't touch any cables or junction boxes.\"\n\n\"We can't go in there!\" Aneela, one of the newer girls, complained in distress. \"It's against regulations!\"\n\n\"This is an emergency,\" Sasha declared, puffing up her chest. \"I accept full responsibility.\"\n\n\"We'll get lost!\" Peter cried.\n\n\"No,\" she determined, holding up her tricorder. \"Not with this.\"\n\nAnd she was right; she was able to create a sonic map of the tunnels, avoiding ones that had been blocked by debris, and lead them to another hatch, this one leading to a station corridor. There was no one around, but there were distant explosions and what could have been weapons fire. But at least there was an unoccupied Shelter here, and she guided the other children inside, almost ready to join them and close the door.\n\nUntil she remembered Mr Oruh, his injuries, and the escaping air. He couldn't be left alone to die! She had to do something! She tried the communications panel on the Shelter, but either couldn't get it working, or the whole system was down.\n\nShe only took a moment, before retrieving an emergency medical kit from under one of the Shelter seats, telling the others, \"Stay here until grown-ups come.\"\n\nNo one said anything as she closed the door on them, and returned to the tunnels, pushing the kit ahead of her. Mom and Dad would probably kill her for doing this. But she had to do what was right.\n\nShe returned to the classroom, relieved to find her teacher still alive, but unconscious. Remembering the first aid training she received, and a peek at the medical kits her mother used to inspect, she opened the kit and withdrew a hypospray, recognising the vial for inaprovaline, inserting it and pressing it against Mr Oruh's neck, hoping she remembered the right dosage, before moving onto his injuries. Again, she knew Mom would probably kill her for doing this.\n\nMore blood had leaked out from him, and he was much paler than before, but she used the dermal sealant foam to temporarily patch up his wounds and prevent further loss of blood. She amazed herself by how calm she was, especially about all the blood; she always thought she was a lot more squeamish about that.\n\nHer head, and she almost fell over. Maybe she was squeamish- no, it was the air, it was getting thinner. Some was coming in via the hatch she had opened, and by one of the remaining working filters in the classroom ceiling. But the rest was escaping from the hairline cracks in the windows. She should have brought a repair kit, too! Why didn't she-\n\nSasha stopped, looking at the dermal foam dispenser. Yes!\n\nShe moved a table closer to the windows, climbed up on it and began running the dispenser over the cracks, the pink foam instantly hardening as it did around Mr Oruh's injuries. It was working! There were some cracks that were too high for her to reach, but she thought she had sealed enough to keep too much air from leaking out.\n\nWeakly she returned to Mr Oruh's side, exhaustion and shock quickly catching up with her. As a final afterthought, she set the distress beacon on her tricorder. And that was it. She was shaking. She was crying. She wanted her Mom and Dad. She just wanted them here, and nothing more.\n\nThey were rescued hours later; people were saying that the attack had been from the Bel-Zon, a criminal gang that had been looking to steal valuable trilithium resin being stored on the station. Everyone was praising her, checking her for injuries, questioning her on how she managed to do all she did.\n\nNo one was telling her where her Mom and Dad was...\n\n*\n\nStarfleet Transport, Today:\n\n\"Sash?\"\n\nShe looked up. \"Eydiir?\"\n\nThe Capellan was eyeing her curiously. \"I asked if you wished for another one of those noxious Terran beverages you prefer?\"\n\nShe shook her head. \"I wish to not be serving onboard a starship for the next year with that smug jerk.\"\n\n\"Oh, I'm sure once he calls Daddy he'll be whisked away,\" Neraxis assured her. \"It'll save me having to kick his aft into the warp core.\" Then she did a poor but funny imitation of him, sticking her nose up in the air. \"Look at me, I'm Giles Arrington of the Arrington Dynasty! My family have been dunsels for nine generations! We're so inbred our family crest is a Moebius Strip!\"\n\nDespite herself, Sasha smiled, and then giggled. She didn't know what she would have done this past year without her friends.\n\n\"Have you heard from your father lately?\" Jonas asked.\n\nSasha nodded. \"He finally got a ship, a supply ship called the Surefoot. Don't know where he's posted.\"\n\nSuddenly, the streaked starscape outside the observation windows slowed and returned to their normal look, as their ship dropped out of warp space. Some of the cadets left their seats to peer more closely out the windows.\n\n\"A supply ship?\" Jonas enquired. \"Seems like a downgrade for him after commanding a frigate. Was it his choice?\"\n\n\"I...\" Sasha wanted to answer, but to be honest, Dad's last few letters had been... perfunctory. General talk about how well he had been doing since his return to Starfleet, hopes that she was doing well. But little more. It had been an... eventful year for him, to say the least. \"I don't know. I don't even know what class the Surefoot is.\"\n\n\"It's Oberth-class.\"\n\nThe others looked to Neraxis, whose face was pressed against the nearest window, looking out.\n\n\"How do you know that?\" Jonas asked, curious.\n\n\"Because I can read, Scrappy.\"\n\nSuddenly, the warp nacelles of another vessel came into view, as their own ship slowed to a crawl on its approach. Sasha and the others joined Neraxis, Sasha pushing up front to see.\n\nTheir friend was correct, they were indeed approaching an Oberth-class ship: the split-hull design was distinctive enough, with the small saucer, the engineering section and impulse drive mounted onto the rear and the warp drive nacelles extended from either side, and the oblong pod slung underneath and connected to the primary hull at the nacelles by reinforced pylons. The class of vessel had been in service since Kirk's day, working as planetary surveyors, general science ships and scouts.\n\nAll Starfleet ships had their names emblazoned in various parts of the hull, including over the aft shuttlebay doors:\n\nNCC-650 USS SUREFOOT\n\nNo way.\n\nNO WAY.\n\nSasha thought her grin would break her face...\n\nTO BE CONTINUED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet",
        "fanfic",
        "fan fiction",
        "sci-fi"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-ch-02-school-days"
}