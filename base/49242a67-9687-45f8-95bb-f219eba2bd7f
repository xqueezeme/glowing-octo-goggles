{
    "title": "Interest",
    "pages": [
        "It was the perfect day for it to happen. I'm surrounded by friends and family enjoying the happy occasion. Outside the vortex of gaiety are curious onlookers, either sneaking peeks at the celebrating crowd or staring with envious eyes wishing they merited being included in the guest list.\n\nMy father, Harrison Williams sat near the head of the long table presiding over the affair. A large smile was on his face as he finished a story that brought peals of laughter from everyone. Multiple waiters and waitresses scurried to comply with the various orders of the assembled guests.\n\nA waiter deftly placed a rare third glass of Chardonnay in front of my mother, Tracey Williams. She idly ran her fingers around the stem of the wineglass as she smiled at her husband and then turned her attention to me. \n\nThe look of pride and love coming from my mother was just another wonderful bonus for me. I thought of all the love and sacrifices my family underwent just to put me in this position. I was on the verge of becoming part of a world that I had dreamed about since childhood.\n\nIt hadn't been easy. I had to carefully craft my college course schedule to coincide with my part time job at the bank and manage to spend what time I could with my girlfriend. For four long years I would rush from school to my job. Then after work, it was home to study and discuss the theoretical applications espoused by my professors against the real world experience of my father.\n\nI had to walk a delicate tightrope not to agitate my father as we debated radical changes to the business. Harrison Williams business philosophy could be summed up in the adage, \"If it ain't broke, don't fix it.\" Even so, I would occasionally convince my father to try out a new idea and he would allow a trial run to see if any advantages would come from the new practice.\n\nSometimes the proposed idea would utterly fail and we would spend countless hours debriefing trying to come to a consensus why it failed. Sometimes, the idea would succeed, but not to the extent anticipated, so we would carefully tweak the idea to maximize profit. Then, there was the one time the new idea was a raving success and I had to resist the urge to tell my father, I told you so.\n\nAlternately, I was fearless in letting my professors know what ideas passed muster and what ideas they should delete from espousing from the ivory towers. Many professors resented the public exposure of the failure of their business models and my grades reflected that bias to some degree, but I felt duty bound to tell my fellow students my experiences so they would keep from making a misstep when they were out making a living.\n\nWhile my ethical stand precluded me from graduating with honors, I did earn my degree which was one of the reasons for the festivities. Now armed with my degree in business I would join my father in running the family bank that had provided a livelihood for our family for six generations.\n\nI had already cast my eyes on the girl that I expected to help make it become the seventh generation. Staci Buckman was seated next to me talking to her mother seated opposite across the table from Staci. \n\nStaci and I had known each other our entire lives. We had been classmates throughout school. We started dating our senior year in high school. She followed me to the local college and while our time together was limited due to school and work, she and I continued our relationship. Weekends dates were few and far between, but still we managed to make a go of it. I was hellbent on consummating the relationship. In that respect I was your basic American male. Staci had been able to hold me off with comments about wanting to enter marriage as a virgin and diverted my lust with an occasional hand job.\n\nNow five years into the relationship, the countdown would finally begin. I checked my pants pocket for the hundredth time to assure myself that the jewelry box containing the diamond engagement ring was still there. After she agreed to my proposal, then Staci and her friends and family can begin planning the wedding.\n\nI decided to take the opportunity to appreciate Staci's looks. Staci was petite, with dirty-blonde hair, and endowed with tits that stood out on her thin frame. Sort of like Jennifer Love Hewitt. She had hazel eyes that could draw your attention. Enticing thin lips created a smile on her angular face that would beguile any man.\n\nShe was smart, charming, and engaging. Practically the entire town was ready to adopt her into their family. Of course, some of the potential adopters reasons were baser than others. She was the subject of many wet dreams and the fantasy woman many men held in thought as they made love to their girlfriends or wives.\n\nI continued to watch as Staci erupted in laughter to a comment made by her mother. She unconsciously brushed aside a strand of hair that fell across her face. I thought of how I intended to reward her now that I would start working for my father and begin earning a decent wage while he groomed me to take over.\n\nI expected trips to Hawaii and Christmas vacations in London and three day weekends beach getaways for us. And we would plan our family. I wanted a son and a daughter, but as long as the babies were healthy that was all that really mattered. \n\nI nudged Staci for a quick comment and she smiled at me and gave my shoulder a fraternal pat as she entered into a conversation on the other side of her. I was slightly disturbed by her nonchalance attitude, but deemed it as a result of the entire table celebrating the good fortune of mine and Staci's graduation.\n\nI was soon engaged into a conversation with Staci's father. Mr. Buckman wanted to know if I was going to go with the group of men scheduled for an Alaskan hunting trip. The group consisted of the elite power structure of the town. All the movers and shakers; albeit, doctors, or lawyers, or businessmen migrated in this collegial clique. By inviting me, a message was sent that I was expected to join their ranks.\n\nMany of that power elite were present tonight at the dinner table. They came not only from a sense of commercial fealty, but because of the high esteem the Williams and the Buckmans had in the community.\n\nMy father had helped so many during his career as the president of the Camden Bank & Trust. My mother worked tirelessly over many community projects to help and benefit the less fortunate members of society. The Buckmans had done so as well, donating proficiently to charitable organizations. As the proprietor of the family owned manufacturing plant, Charles Buckman was the richest man in Camden and he did all his personal and business banking needs with my father.\n\nNow with the pending engagement of me and Staci, the two families would be joined in a local dynasty. It would be Camden's equivalent of Prince William marrying Kate Middleton. And we would live happily ever after, I thought as I looked adoringly at my bride to be.\n\nCharles Buckman rose from the table with his wineglass raised and waited as the various conversations died down and everyone gave their attention to him.\n\n\"I want to thank each of you for coming out tonight to help us celebrate this occasion. It seems like it was just yesterday that Staci and Troy and their classmates started school together. For all the crayon drawings that graced our refrigerator, for all the countless hours of helping you with your homework, for all the times we attended your school activities and supported you, Staci. For making your mother and me, the happiest and proudest set of parents possible as you've grown to be an adult, I wish I could properly express the love and feelings I have for you, my child.\" He said misty-eyed. \n\nStaci spontaneously got up and ran to her father for a hug as the audience burst in applause.\n\n\"I love you and Mom so much, Daddy,\" she cried.\n\nThat brought another round of applause.\n\n\"Well Baby, now to the good part. For a graduation present, we are giving you a couple of tickets to an all expense-paid tour of Europe for the entire summer.\"\n\nStaci squealed in delight and kissed her Dad and Mom as they handed her a thick envelope. I started trying to calculate if I could take off that much time from work. No matter, if I couldn't, I was sure Staci and a lucky girlfriend would enjoy the trip of a lifetime. It would set back our marriage date but that would allow me to build up our nestegg while Staci had fun.\n\nI decided it was now or never and I got up and walked over toward Staci. I dug into my pocket and palmed the jewelry box in my hand. I went to Staci's side and Mr. and Mrs. Buckman stepped back graciously allowing me and Staci to be center stage.\n\nStaci looked at me quizzically as I stood beside her. I started, \"I just want to take a moment to thank everyone for coming out here tonight to help celebrate our graduation from college. And while to Mr. Buckman it may have seen like yesterday, to me, it seemed like Chinese Water Torture.\"\n\nThe droll remark got laughter from the room.\n\n\"But, the one thing that made it all bearable is the remarkable woman standing beside me. We shared milk from the same carton in the first grade, got sent together to the principal's office for passing notes in the sixth grade,\" I said with a raised eyebrow that brought another round of laughter.\n\n\"I finally wised up,\" I continued, \"and asked her out for a date for Homecoming my senior year in high school. From there, we both went to college here and even though school and my job kept me from seeing her as much as I liked. It made me appreciate her all that much more.\"\n\nI turned to Staci and stared into her face.\n\n\"And I do appreciate you, Staci. I've known for a long time what you meant to me. I have loved you since the first grade. I know what you will mean to me the rest of my life, because I intend to tell you, 'I love you' for the rest of my life. \"\n\nI began sinking to one knee and presented the box into view and began to open it. I noticed Staci's eyes opening wide and she brought her hand to her open mouth. She began showing the sign of hyperventilating.\n\n\"Staci Ellen Buckman, will you marry me?\"\n\nBy now, the entire restaurant was dead silent and focused on the dramatic tableau presented to them. They had drawn a collective breath waiting to be expelled in cheers for Staci's assent.\n\nI continued to gaze lovingly at Staci's face as the wide-eyed shock of the proposal was so evident on her face. Staci's eyes glanced wildly down the table, back to me, down the table, back to me.\n\nAn unsettling nag began in my brain as the pregnant pause continued. What I originally saw as unbelieving shock now morphed into panic. Again, she looked down the table; ignoring me kneeling with the flawless two carat diamond ring stretched outward to her.\n\n\"David...\" she begged imploringly and bolted for the front door. There was the sound of a scrape of a chair being hastily removed from the table. An unbelieving and shocked audience caught a glimpse of someone chasing after Staci. The person turned only briefly to look at me as he ran past to chase after Staci.\n\nIt was David Porter, my best friend and the guy I intended to ask to be my best man.\n\nThe implications of Staci and David's actions sunk into the collective thought of the audience and everyone embarrassed attention was fixated upon me, the kneeling figure reeling from the event.\n\nI slowly got up off my knee and fumbled to put the jewelry box back into my pocket. I began walking zombie-like toward the rear entrance away from Staci's direction. I didn't look at anyone as I blindly negotiated the steps leading away from the building. My eyes full of unshed tears accompanied me as I walked past my car and began the long arduous trek home.\n\n**************************************\n\nI sat behind my desk as the rays from the morning sun flooded my office. I swivelled my chair and looked morosely at the empty buildings decaying on the city square.\n\nOne of those blighted buildings was the site of my proposal fiasco. Six years had passed since the humiliation before the entire town. Six long years of being the butt of jokes throughout Washington County. Six long years of being laughed at behind my back.\n\nThe restaurant has moved on. Staci has moved on. David has moved on. The city moved on. The whole damn world has moved on. The only one who hasn't moved on was me chained by heritage and necessity to the Camden Bank & Trust.\n\nThe intercom buzzed.\n\n\"Troy, Mrs. Fuller is here to see you.\"\n\nI felt a slight irritation before I said, \"Send her in.\"\n\nBefore the door began to open, I was out from behind the desk walking to the door as it opened.\n\n\"Let me get that, Mrs. Fuller,\" I said with some alarm at the big box the woman was toting. \n\nDamn it, Janet, you should have carried this in for her, I thought. I looked at the thin attractive brunette escorting the frail old lady. I took the box and quickly put it on my desk and then assisted Mrs. Fuller to her chair.\n\n\"How are you today, Mrs. Fuller? Is there something I can help you with?\"\n\n\"Why no, child! I just wanted to bring you a lug of heirloom tomatoes from my garden. I still remember how much you love them!\"\n\nDespite all the worries I felt, my spirit lightened as I recalled all the trips in Mrs. Fuller's garden as a child. Planting and digging up potatoes, onions, and peanuts. Setting stakes for tomatoes. Stakes for peas and bean crawlers to cling upon. Endlessly watering cantaloupes, honeydew melons and watermelons. Picking and shucking corn. Climbing apple, peach, and plum trees to gather their bounty.\n\nIt was amazing that what now I perceived as drudgery was once a joy as a child. Maybe civilization has it backwards, I speculated.\n\n\"Mrs. Fuller, can I get you something to drink?\"\n\n\"Well, I wouldn't say no to a glass of lemonade or sweet tea, if it isn't too much trouble.\"\n\n\"Of course not! Miss Temple, if you wouldn't mind.\"\n\nUnseen by Mrs. Fuller, Janet Temple winked at me and said, \"of course, Troy.\" She left to complete the errand ignoring the subtle look of irritation on my face.\n\nI sat in the chair next to Mrs. Fuller as befit her status of Very Favored Customer. \"Are you sure I can't help you with something today, Mrs. Fuller?\"\n\nI saw the hesitation. The kind old lady was struggling on how to approach the dilemma.\n\n\"Mr. Williams\u2014\" \n\n\"Troy, Mrs. Fuller, I'll always be Troy to you,\" I interrupted her softly. The lady smiled her gratification at my deferring to her status transcending mine.\n\n\"Thank you, Troy. I have a situation. I need a personal loan of $20,000.\"\n\nAt that point, Janet Temple entered the office with a tray with two glasses filled with ice cubes and a pitcher of lemonade. She poured the drinks and then excused herself.\n\n\"...I need the loan, but I don't have anything to secure the loan,\" said Mrs. Fuller shamefacedly.\n\nDon't do it, don't do it, don't do it, don't do it, my brain commanded.\n\n\"Can I ask you why you need the money, Mrs. Fuller?\"\n\n\"It's my grandson, he's finishing his last year in college but something happened to his paperwork for his student loan. I told him I would try to pay his tuition for him until the paperwork snafu is resolved.\"\n\n\"How long would you need the money for?\"\n\nI mentally sighed as I realized that I was going to do it.\n\n\"I can pay it back in a year's time, Troy. He will have the paperwork cleared up on his other loan and that will be applied against your loan. In addition, he will be getting money from a grant and he will reimburse me. Also, he should have a good job after he graduates, so payments will not be a problem.\"\n\n\"This is for Paul? Your daughter's eldest boy? They still live out in Seattle?\" I enquired, trying to remember Donna's son and the few times I met him when they came to visit Mrs. Fuller. Then, I remembered being in lust with Donna Fuller so many years ago. But, that was just a wayward adolescent fantasy. I smiled ruefully as I put the past to rest.\n\nI mentally worked out the payments as we continued to talk and asked her if the monthly payments were in her range. She paused and asked what they would be for a year and a half. Not trusting myself 100%, I took out a calculator and told her the result. She agreed that was suitable and I dialed Tom Jenkins, in the Loan Department and told him the terms and to prepare the loan documents for Mrs. Fuller to sign.\n\nWe spent the next thirty minutes recalling past events and enjoying lemonade. Then I escorted Mrs. Fuller to the Loan Department and directed the very capable Tom Jenkins to take care of Mrs. Fuller.\n\nMrs. Fuller insisted on giving me a kiss on the cheek and said, \"Thank you, Troy. You remind me of your father. Not too many bankers would give anyone an unsecured loan these days.\"\n\n\"Mrs. Fuller, your family has always banked with us. I know your word is good enough,\" I assured the old family friend. \"You just keep sending me tomatoes...and maybe an apple pie?\" I begged and Mrs. Fuller laughed and said I would have one tomorrow.\n\nI walked back to my office only to find Janet Temple sorting through the tomatoes and separating the ripe reds from the greens.\n\n\"What are you doing with my tomatoes?\" I asked.\n\n\"Troy, we're going to have BLT sandwiches for supper tonight.\"\n\n\"Who is this 'we' you're talking about, Miss Temple?\"\n\nI walked up behind her and nudged myself against her. She smiled as I folded against her. I knew her mischievous brown eyes were twinkling as I gripped her hips and felt her push her derriere against me.\n\n\"By the way, it wouldn't hurt to be a little more professional here at the office, Miss Temple.\"\n\nMy penis was already stiffening and seeking to probe her ass when she dreamily sighed, \"Yes, Mr. Williams.\"\n\nShe turned around and faced me and brought her arms around my broad shoulders. \"You've gave her an unsecured loan, didn't you?\" She gave me a soft kiss, \"And you lowered the interest rate so we won't actually make any money on the transaction.\"\n\n\"Yes, I did, Janet.\"\n\n\"That's Ms. Temple to you, Troy,\" she corrected her errant boss and gave me another kiss. \"If you keep being a sucker for every hard luck story that comes along, you won't be in business much longer.\" She moved to nibble on my ear.\n\n\"If that happens, I'll just take my tomatoes and find a job somewhere.\" I kissed her cheek and neck and reached and gripped her tits.\n\n\"Our tomatoes,\" Janet corrected as she put her hands over mine.\n\n\"My tomatoes,\" I replied as I gently caressed her tits.\n\n\"Ours\"\n\n\"Mine\"\n\n\"Ours\"\n\n\"Mine\"\n\nA soft giggle was heard coming from my office.\n\n**********************************\n\nIt turned out that Bacon, Lettuce, and Tomato sandwiches were the fare du jour at my apartment that night. And Janet Temple was a much welcomed dessert.\n\nAs dawn was beginning to break, I woke up and bumped around getting ready for my morning jog. Once dressed in my running attire, I kissed Janet on the top of her head which brought a smile from her as she stretched herself awake. \"Why don't you come back to bed and get your exercise here?\"\n\n\"Don't tempt me. Are you going to shower here or back at your place?\"\n\n\"Why are you asking?\"\n\n\"Because I don't want to start taking a shower and get hit with ice cold water because you used it all up,\" I explained.\n\n\"I could wait on you and we could share a shower,\" Janet suggested. I paused. \"No?\" She pouted sadly. \"Well, I guess I better go home and get dressed for work,\" she sighed and collected her bra and panties off the floor.\n\n\"When are you just going to start leaving some clothes here, Janet?\" I asked.\n\n\"It would simplify things.\"\n\n\"Oh Troy, let's not get that started again. You go have a great run, I'll take a quick shower and I'll see you at work.\" She kissed me and pushed me on my way to go jog as she prepared to clean up.",
        "I prepared to run by doing my warmup and stretching exercises. I looked up at my residence. Not too many people could say they lived in the same structure they worked at. Fewer still, would those be that lived in a three-story bank building covering a city block. As I had so many mornings, I admired the Greco-Roman architectural style of the matched granite stone and the Doric columns rising majestically at the front entrance of the building.\n\nMy ancestor had built the first permanent building of the fledgling town. He had studied well the effect he wanted to project. Prosperity and permanence were the assurances that encouraged others to build. They closely copied the bank's architectural theme and the entire city square represented wealth, employment, and industry. \n\nOr it had, I sourly thought as I looked at the ghost buildings of the dilapidated city square. Now, my bank remained the last bastion. The final reminder of the past that brought so much regret. \n\nAs I ran, the regulated tempo caused only the sound of my footsteps and breathing to break the silence. I used this as my quiet time. A time to reflect and focus.\n\nForemost in my mind was the business; the Camden Bank & Trust. It was being besieged from enemies; from within and without. I had to remain vigilant every day since I had taken over as President of the bank. All it would take was to commit one wrong move and all my hard work and the lifework of my father and generations before would be taken from me.\n\nSo many decisions to make and no one to help guide me. Not for the first time I felt all alone as I finished this run and staggered up the stairs to my third floor apartment. How I wished, I could forget all the troubles. A shower and a quick rest would have to suffice. People were depending on me.\n\nI stripped and gingerly stepped into the shower. Within seconds, the hot water dissipated into a cold spray of water. Another grievance I would have to take up with Janet, I thought as I rushed to bathe myself.\n\nNine a.m. found me seated at my desk working as the official banking hours began. In reality, I had been working since seven a.m. shoring up deals for the bank's benefit. If all went well, it would continue to be this busy all day.\n\nAt 9:25 a.m. the intercom buzzed.\n\n\"Mr. Williams...you have some visitors.\" \n\nThe oddness in Janet's voice alerted my defenses. Why hadn't she announced the identity of these visitors? A small voice mentally told me to refuse the callers, plead a heavy work schedule prohibited seeing any visitors today. Delegate another employee to resolve any problem arising.\n\nRealizing I had let an undue pause hang from responding to Janet's call, and I hesitantly told her to see the visitors to my office. The door opened and Carla Robbins, Susan Moix, and Staci Ellen Porter nee Buckman walked into the office.\n\nFor the first time in six years, I was seeing Staci up close. The passage of years had been good to her. Her features had morphed from her previous angular beauty into more rounded features. She matured from being a girl into a young woman in the prime of her life.\n\n\"Hello Troy,\" she sought desperately to catch my eyes. I knew she was trying to initiate a dialogue before any barricades could go up. In response, I waved my arm to the chairs on their side of the desk. Carla tried to initiate a hug with me but was made aware of my reluctance with any body contact with the three. If I refused Carla's hug, Staci could not be offended being refused. The three ladies promptly sat down in the chairs. I sat behind my desk. \n\n\"How are you, Carla, Susan, Mrs. Porter? What can I do for you ladies today?\"\n\nStaci winced at the cold civility present in my response. There was no warmness in the greeting, no sign that the passage of time had brought a desire to forgive the past wrong. She noticed that my gaze was fixed onto the high school classmates that accompanied her.\n\n\"Please Troy, I'm still Staci. I would appreciate it if you'd call me by my name.\"\n\n\"I'll keep that in mind Mrs. Porter. Once again, I'll ask y'all how may I be of assistance today?\" \n\n\"It's been ten years since we've graduated high school, Troy. We are on the reunion committee. We are trying to drum up recruits for the committee and support for the reunion,\" Susan took the lead in explaining the purpose of their visit.\n\nI remained silent. I had discovered in the course of my career that silence was a necessary and effective negotiating tool. Granted this didn't shape up to be the normal business deal I was used to, but the same principles applied.\n\n\"Well, Troy?\" Susan asked with exasperation.\n\n\"I'm sorry, Susan. I didn't hear anything that requires a comment from me.\"\n\nSusan sighed, \"Would you help out and lead the committee, Troy?\"\n\nA minute passed before I replied.\n\n\"Susan, isn't it traditional for the Senior Class President to head up the reunion committee?\"\n\nSusan hesitated, knowing where the conversation was leading.\n\n\"Yes, Troy, but\u2014\"\n\n\"Refresh my memory, Carla.\" I turned to the woman I interrupted, \"Who was the person that was our Class President?\"\n\n\"...David Porter.\"\n\n\"That is correct, Carla. It seems to me that you are talking to the wrong person.\"\n\n\"David has already said that he wasn't going to serve on the committee, Troy,\" Staci explained.\n\nI gave no indication that I heard Staci's comment or intended to respond to it.\n\n\"We could really use your help, Troy,\" Carla suggested.\n\n\"I understand, Carla, but since I will not be attending the reunion I don't see the need to be on your committee.\"\n\nI pressed the intercom button, \"Ms. Temple, would you please come in.\"\n\nI could tell that the uneasy trio was searching for a new avenue of attack as all three insisted I had to attend. Before I made any comment, Janet Temple walked into the office.\n\n\"Ms Temple, please escort our guests out of my office. I regret to tell y'all that I have a pressing engagement, so y'all will have to excuse me.\"\n\n\"Come on Troy, you owe it to your classmates to attend our reunion,\" Carla valiantly insisted on one last effort.\n\nI whirled my attention back to my three classmates.\n\n\"Oh, before y'all leave, I'd like to tell y'all a little story about owing people,\" I acidly began the tale. \n\n\"A beautiful woman walks into a bar. No sooner than she sits down, a man appears before her. 'Madam,' he says, 'for your information I am one of the richest men in the world. I am so awed by your beauty that I am willing to pay you the sum of $10,000,000 to spend one hour making love to you.'\n\nAt first, the woman is appalled at the suggestion. Then she starts thinking of all the things she can buy with $10,000,000. 'Okay, I will make love with you for $10,000,000,' she replies.\n\nThen the man asked, 'Will you sleep with me for $5.00?'\n\nNow the woman is quite upset at the insult.\n\n'$5.00! What kind of girl do you think I am?' She screams at the man.\n\n'We've already established that. Now, we are just discussing price.' \n\nDo y'all understand the significance of 'owing' in that story?\" I asked of my three classmates. \n\n\"Perhaps, I can give you a better example. Imagine some poor dumb bastard thinking he found the perfect woman for him only to be humiliated when she runs off with his best friend. What the hell do you think is owed to him? The opportunity to jump and do her a favor the first time he sees her in years?\"\n\nThere was dead silence and icy glares for the insults bestowed. I was walking out of my office's back entrance which precluded me from the awkward situation of shaking their hands. I heard Staci's voice asking me to stop. Again, I chose to ignore my betrayer. I bounded up the steps and paced through my apartment.\n\nI continued to stalk around my apartment. I was systematically checking the views from the windows hoping to spot the departure of the trio of classmates that ambushed in to see me. I heard the door open and Janet's footsteps echoing toward me.\n\nI wheeled and hissed, \"NEVER! NEVER! NEVER, do that to me again if you want to keep your job! Do you understand me?\"\n\nShe recoiled in shock from the venomous tone in my stressed voice.\n\n\"...I'm sorry, Troy. I had no idea how to handle that.\" She replied in an abject apology.\n\n\"Well, you damn well better figure another way if that...that...woman, EVER comes back to see me!\"\n\n\"They didn't tell me who they were! They only said they were your high school classmates,\" she protested.\n\nI paused a minute to calm down, but things were still awkward between the two of us.\n\n\"Are they gone yet?\" I asked staring out one of the windows. In my peripheral view I spotted Janet's nod to my question.\n\nI could tell that she was nearly in tears from my chewing out as she nodded yes, not trusting her voice to break out into a sob.\n\n\"Then its time to go back to work,\" I brusquely walked out of the apartment to head downstairs to my office. Janet remained in my apartment to compose herself and fix her makeup before she made her appearance at her desk.\n\nWhen closing time came, I was left alone in my apartment for the entire night. That trend continued for two weeks as Janet focused solely on her job and I focused on mine.\n\nThen on a Thursday afternoon, right before closing Janet came into my office. With tears welling in her eyes she trembling asked me, \"Are you ever going to forgive me?\"\n\nI went to her and held her in my arms as she started crying. We went upstairs to my apartment and I did my best to make up for all the pain I doled out to her. By Friday morning things were back to normal. Saturday morning, we spent relaxing in my bed. \n\nWe were engaging in pillow talk when she broached the subject. \n\n\"Why do you hate her so much Troy? Why can't you get past her?\" She asked as she drew lazy circles on my chest with her fingernail.\n\nI knew who she was referring to. I debated telling her that it was none of her damn business.\n\nI sighed, \"You've moved here four years ago, Janet so you don't know the complete story. I'm going to tell you this one time, and one time only and I will never discuss this with you again. Is that a deal?\"\n\nShe looked at me with her big brown eyes and gravely nodded.\n\n\"You know about me and her and how I made a complete ass out of myself at my graduation party by proposing to her. I know you must have heard that story a thousand times around this town.\"\n\nHer look told me the truth of my statement. Even after the passage of six years, I was still held in ridicule by the entire town. By now, my action was planted firmly in the town's lore and it was debated endlessly.\n\n\"You have to understand we all grew up around each other, played with each other, went to school with each other...\"\n\nI paused and then exorcized my reluctance of articulating their names. \n\n\"David...and Staci were my closest friends since kindergarten. Staci would insist that we play house with her and we attended countless meals of imaginary pies and cokes and cakes and ice cream and candy. One day I would be the father and David would be our child. The next day David would be the father and I would be their child. Staci, of course was always the mother who dictated our actions.\"\n\n\"As we got older, David and I grew into that period of childhood where we thought all girls had cooties and avoided Staci like the plague. Staci took it hard at first, but then she migrated to hanging out with all her girlfriends.\"\n\n\"David and I were as close as brothers. We were at each other's house every day, playing Little League baseball, or in the Boy Scouts, or playing football. There was always something going on with us.\"\n\nI realized that as I began reminiscing that I couldn't help but have a faint smile from the memories. Well, that wouldn't last as I continued the tale.\n\n\"We would still all see each other. All our parents socialized at the country club and parties and benefits. And of course, being in the same grade, we all had the same classes and teachers.\"\n\n\"Then came junior high school and something magical happened to all the girls. Puberty started changing the girls into fantastic creatures. Boobs started appearing and asses filled out skirts and pants.\"\n\n\"And like every adolescent male...well at least every heterosexual adolescent male, we started lusting over these girls we had spent years ignoring. But they weren't going to make it easy for any of us guys. So we were required to jump through hoops, like carrying books for them, or buying them a cheap bracelet or ring, or letting us know of another boy's attention.\"\n\n\"That is what happened to me and David. We began seeing Staci in a new light and surprise...we both wanted her. And bigger surprise...we didn't want the other to succeed. And biggest surprise...Staci decided she wanted David.\"\n\n\"You know even at that early an age to be rejected was quite a blow, but I recovered. I started dating and still maintained being friends with David and Staci.\"\n\n\"Somewhere down the line, Staci and David derailed. He started cheating on her and he was open about dating others. It was messing Staci up and the week before Homecoming she came to me and asked me to take her out for Homecoming. I went to David and told him.\"\n\n\"He said he was okay with it. He didn't intend to ever date her again. So we started dating and feelings grew between us. I started doing things outside of dating like helping her with her homework, washing her car, you know, things like that.\"\n\n\"I even started spending time getting to know her parents better. I would go over there and get corralled into playing a game of chess and losing to Mr. Buckman, constantly listening to him lectures on whatever caught his interest. That was usually business, particularly concerning Buckman's Enterprises.\"\n\n\"He kept throwing out these hominems, like 'In business, the big eat the small' or 'Do unto others, before they do unto you.' I would just sit there listening to the world according to Charles Buckman, hoping to impress him.\" \n\n\"College came and Staci knew I was intent on preparing for our future. We had talked about getting engaged and marriage for a long time. She knew that I would be ready as soon as we graduated college. So this wasn't a bolt of lightning out of the blue.\"\n\n\"She knew... We talked about kids and everything...\" She should've expected...\" \n\nI frustratingly groped for the words to make verbal sense of a situation that I still could not explain, much less comprehend. \"She even picked out the damn ring.\" I commented while looking at Janet hoping this was making sense.\n\nJanet nodded and patted my arm to let me know she understood.\n\nGathering my wits I continued, \"I don't know when David came back on the scene. I never had any inkling that she and David were seeing one another. If she had told me...maybe I wouldn't be here today. Maybe, none of this would've happened. But I continued to see her every day at school and date her every weekend and I didn't have a clue anything was wrong.\"\n\n\"So I get sucker punched in front of the whole world and everybody is laughing at me and talking about Staci and David's little Romeo and Juliet's romance. I never considered how Staci felt but it was enough for me that Staci decided to take him with her to Europe with her parents' graduation present.\"\n\n\"She runs off with him and they go to London, to Paris, to Rome, to Athens and I'm stuck in Camden with my heart ripped from my body.\"\n\n\"Every fucking day, I have to man up and go to my job and pretend that nobody knows what happened to me. Staci and David came home to a whirlwind wedding to alleviate all the rumors flying from their European romp. Afterwards, they were shuttled off out of state until the clamor died down. Staci and David were hired to work at one of Charles Buckman's subsidiaries in California until all the fuss died down. Meanwhile, Charles Buckman is pissed beyond belief for me putting his daughter and his family in this situation of public ridicule.\"\n\n\"My little performance had consequences that were far reaching. The town was split apart on who was to blame for the fiasco. Unfortunately, Charles Buckman wasn't going to stand around and have people besmirch his little girl.\"\n\n\"He came to visit me and Dad at the bank and laid the blame totally on me. Then he told us that he had been studying the matter and decided that our town needed another bank to break what he called our stranglehold on the town.\"\n\n\"He was there to close out his accounts. They would be invested in a new bank opening across town, Buckman's Savings and Loans.\"\n\n\"My dad tried to persuade him not to do that. It would cause a major rupture in the bank's finances. But Charles Buckman was not going to be denied. So he took out his money and my father had to scramble to find alternate financing to meet his obligations.\"\n\n\"Word got out that he was in a bind, so he was negotiating at a disadvantage. Commercial lenders were charging him outrageous rates and he had to accept to keep the bank afloat. It was an hour to hour, day to day battle to keep the doors open.\"\n\n\"But Charles Buckman wasn't finished. All of Buckman's Industry employees paychecks were drawn on Buckman's Savings and Loans and all the employees were pressured to open accounts in Buckman's for direct deposits, and debit cards, and credit cards. Then car loans and house loans were given at a rate my father couldn't match due to the problems we were having.\"\n\n\"Customers were leaving by the droves. Buckman's ATM machines flooded the area as small businesses were persuaded to exchange our machines for theirs. Essentially, he had us in a stranglehold and he wasn't inclined to give up. He told all the local businesses that they would be well advised to move out to his location across town. They did, which caused the urban blight here on the city square.\"\n\n\"That translated to less foot traffic into the bank. Which meant we continued to bleed away money. I was fighting right alongside dad every day tying to atone for my mistake that caused all this trouble. I persuaded my dad to give me access to some of the dwindling funds to trade in the stock markets and arbitrage transactions to staunch the bleeding. Luckily, I was able to be successful doing that. But, we continued to take hits.\"\n\n\"My father was the president of the bank, but because of all the generations that passed there were relatives he was accountable to and they started raising hell that my father's stewardship was causing them to lose money.\"\n\n\"Lawsuits were beginning to be filed by second and third cousins seeking to take advantage and wrest control of the bank from my father. He continued to get up and fight every single day. I was right there beside him.\"\n\n\"But the stress was too much for my mother. Charles Buckman made sure that we lost our membership at the country club. Mom lost her positions on all the charity organizations. She was ostracized by the entire town...My mother, who never hurt anybody in the world was being ripped to pieces by every bitch in this town.\"\n\n\"Her blood pressure skyrocketed and the day came when my Dad was called to the hospital. My mother had suffered a stroke.\"\n\n\"He was never the same after that. He handed over to me the day to day operation of the bank while he tended to my mom. I would go home and watch him fuss over my mother. When he had spare time, then and only then he would discuss the bank.\"\n\n\"She lasted two months before she passed away. My father was the embodiment of a dead man walking after that. Three weeks after she passed, he suffered a widow maker heart attack.\"\n\n\"I lost everything I cared for in less than a year and now I was saddled with the responsibility with running the bank. I was inadequately prepared for that responsibility but now it was thrust upon me.\"\n\n\"I scrambled for every penny I could find. And there were a lot of people that wanted to see me fail other than Charles Buckman to pick up the bank's assets. I was under immense pressure. Things were so desperate that I had to sell my parents' house and my house to tide me over at one point.\"",
        "\"That was when I moved into the bank building. All our business tenants had moved over into the Buckman's building so I had my pick of space. I converted an area for a kitchen and a bathroom but the rest is just open space. I had to shutdown the building's boiler to conserve energy costs. That's why I have trouble taking a hot shower. The entire building's hot water source is from an ordinary residential water heater.\"\n\n\"So now you know why I'm living here in an empty oversized marble tiled cavern with inadequate hot water.\" \n\n\"As far as the everyday struggle with the bank you have some idea of what I've been going through. From the first days that I took over, I've been scrambling to keep the bank afloat. I've had to resort to speculating in risky currency arbitrage and betting on minute to minute fluctuations in the market. Knowing all the while if anyone caught wind of the bank's exposed position they could cut us off at the knees.\"\n\n\"I've had to offer loans to risky business ventures that no other banking institution would touch. And you know about the books... How I'm presenting a false set of numbers to show that the bank is secure. But, in reality, the real books shows how much trouble I'm in. If the examiners ever gets hold of them, I'll be finished and in prison.\"\n\n\"That's why the Sorrant Oil field venture is so major for me. As you know, I've been working on this deal every day for the past two years. If I can pull this off, I'll be solvent once again. I can reimburse the bank and the creditors and stop robbing Peter to pay Paul. I can carry a legitimate set of books and not worry about having my head on the chopping block.\"\n\n\"Information is knowledge, Janet. That is why I have all those files in my desk drawers. I have to stay ahead of everything Charles Buckman tries to do to finish me off. Do you think I like to keep confidential files on him, and Staci, and David? I have to just to make sure I cover all the bases.\"\n\n\"Think about that. I have to keep tabs on the woman that broke my heart. I have to keep tabs on my once best friend... And I hate it... I fucking hate it, but I got to do it.\"\n\nI finally paused, amazed at myself that I finally broached the subject with someone and the psychological release I felt at the confession. Janet stared at me appreciatively at me for opening up to her and trusting her.\n\n\"But Troy,\" she said, \"are you certain that you can swing this Sorrant Oil deal? I mean , aren't you concerned about dealing with a Siberian oil deposit?\"\n\n\"Janet, as I explained it to you, my French contacts have done the heavy lifting to make this a reality. Once the oil wells strike the deposit, the oil will be refined at a plant that will be built on the coast of the Bering Sea. From there tankers will transport to the west coast ports of the United State and unload.\"\n\n\"Just from the difference of time and distance from Middle East supplies will make it immensely profitable. This will be as close as a sure thing as there ever was.\"\n\n\"The only drawback is there's a number of players that are getting interested in it. That is inevitable. You can never achieve total secrecy. The stock price for Sorrant Oil shares has been skyrocketing lately so somebody knows what it has under wraps. But, I'm close to getting a majority of the stock and after that I can dictate terms and the success will be assured. I just have to keep in the game regardless how high the stock shares goes up,\" I explained.\n\n\"Then I can be free from the Buckmans. I can buy out the rest of my pissant relatives and stop all the lawsuits, have the bank on solid ground... And I can finally let go of David and Staci and start living my life again.\"\n\n\"I'm ready, Janet. I'm ready to commit to someone and live out the rest of my days.\"\n\nAs I stared directly at her, it dawned on her what exactly I was inferring. Her eyes widen and she caught her breath as I moved in for a kiss. Kiss after kiss, I moved to her delicate neck and stroked my face against her.\n\nHer arms moved across my chest as I adjusted my position. My hands moved against her familiar body. I moved lower to her chest. Kissing various positions of her tit. Lower to her ribcage. Kissing and nibbling.\n\nHer hands now on my shoulders urging me to continue to go lower. I paused to pay homage to her stomach and abdomen. The taut flesh reacted by jolts by my attention. I caught her scent.\n\nShe moaned as I converged at her junction. Slowly, I moved my face nodding against her. She reacted to my scratchy unshaven cheeks moving roughly against the insides of her thighs. The discomfort she felt was being weighed against the portending pleasure I was about to endow upon her. \n\nHer hands blindly groped for mine and we interlocked fingers which limited me solely to using my lips, teeth and tongue. I tilted my head so I could gaze at her. Her face showed a desperate anticipation for me to begin as she stared back at me.\n\nThen slowly I opened my mouth and slid my tongue to taste her. Her body immediately arced in reaction as her legs lifted her off the mattress. It wasn't enough to throw me off however. I continued to lap, lick, nibble, probe and stroke her delightful little honeypot as she moaned and thrashed when I hit a particular apex for her.\n\nShe disengaged my hands and I greedily brought them to help me pleasure her. I lightly caressed her labia as I continued to probe her with my tongue. Then deftly, I slid my middle finger in her.\n\nShe yelped her approval and I felt her muscles gripping my invading digit. I began to slowly stroke it in and out of her. She reacted by shifting her body around and I felt her hands reaching into my boxer briefs to gain access to my stiffening cock.\n\nI sensed it becoming freed and immediately I felt her warm lips moving across the tip of the crown enticing me to full erectness. I felt the flicking of her tongue teasing the sensitive head and I moved forward to encourage contact.\n\nSlowly, I sensed the warmth of her lips sliding across my cock as she devoured my girth in the warmth of her mouth. I groaned my approval as her tongue swirled around my member. \n\nI enjoyed the vacuum of her suction as she encouraged me to climax by her suckling my cock. I had other ideas for my gratification. I finally eased away from her and my erect member sprung out of her mouth, throbbing for an alternate source of pleasure. \n\nI lined my dick against her pussy and slowly the bulb disappeared from view and I relished the warm moist haven it found. So much so, that I pushed gently in more and more of my penis. \n\nI moaned as her pussy tightened against me. She answered back with a moan of her own and begged me for a kiss. I moved into her clinch as we slowly rocked back and forth.\n\nThe concept of time disappeared. The concept of worry was put on hold. All that mattered was the primal need to connect to another being. It was only for these fleeting minutes that I could forget the world. So, I made sure I treasured them.\n\nJanet began to shudder from a minor climax. Then another. And another. It worked wonders for my ego that I could provide for my woman. Her sighs and moans gave evidence that my efforts were appreciated until she finally begged me to bring her to the mountaintop.\n\n\"I owe you one,\" she said dreamily. \"God, I owe you a thousand!\" She grabbed little Troy and swallowed him.\n\nIn response, I engaged with more attention the task at hand and pursed my lips and sucked in her clitoris. The tremors erupting from her proved it was an effort well worth it. I rode out the storm and then reaped the reward of her frantic efforts to reciprocate by attempting to deep throat me.\n\nIt was scant minutes later when I warned her of the pending climax I was trying to forestall. She moved away from my mouth and watched as I shot stream after stream of jizz on the bed sheets. She was adamant that she would never swallow my cum.\n\nSo be it. There was no similar ban on depositing it in her pussy so I engaged in post coital play to keep her interested as I recovered for another erection. Moving against her exquisite body as she wrapped arms and legs around me as I gently fucked her and brought her to her second climax.\n\nFrom there, I repositioned her to her hands and knees doggie style and I held her hips firmly as I stroked her. I watched her buttocks reverberate from my pelvic contacts. She moaned and began to counter thrust against me. I moved my hand into her hair and tugged her head backward as I forcibly kissed her.\n\nShe begged me to allow her to ride me cowgirl. I got in position and soon she was squatting over me, positioning my dick to the right angle to enter her. There she used her pelvis to squirm against me as I watched this beautiful vision approach her third orgasm. \n\nJust as she shuddered and convulsed, I erupted into her and she soon collapsed on top of me as I continued to kiss her in appreciation.\n\nIt was noon before we finally got out of bed, showered, and got into our clothes. She told me she had to leave to visit her mother for an overnight stay. We made plans for Sunday evening.\n\nI spent some time corresponding with some oversea interests through the Internet and then decided to go for an afternoon run. As soon as I stepped outside to prepare stretching and warming up, I saw her leaning against my beat up pickup truck.\n\nAs much as I wanted to avoid the confrontation I decided it was better to go ahead and get it over with. As I approached, she raised herself off my truck. \"I didn't think you were ever going to come out today, Troy,\" she remarked.\n\n\"What would you have done if I hadn't?\" I asked.\n\n\"I would have come back tomorrow and waited.\"\n\n\"And, if I didn't show tomorrow?\"\n\n\"Then, I would have come to your office tomorrow and waited all day while you refused to see me and the whole town would have another laugh at our expense,\" she explained matter of fact.\n\n\"Well, then it is a good thing I'm here so you won't be embarrassed before the whole town, isn't it,\" I replied with venom.\n\nThe anger of the retort rocked her, but still she continued.\n\n\"Troy, I just want to tell you I made a mistake, I made a huge mistake and I hurt you. That was never my intention!\" She looked at me with pleading eyes.\n\n\"For Christ Sakes, Troy, you surprised me and I panicked. You have no idea the pressure that a proposal puts on a girl. I was on display before the world and I was expected to give you an answer in front of the whole town?\"\n\nI interrupted, \"No Staci, you don't get off that easy! We had all those discussions! You even showed me what ring you wanted! So don't stand there and tell me how I surprised and embarrassed you! I wasn't the one who went running out the door with David Porter chasing after me!\" I roared in response.\n\n\"Yes, Troy, I ran and David ran after me and we were cowards and ran off together to Europe. But, I was coming back to my senses when I finally realized how I fucked up. I went to my dad and I told him that I was coming back to you because I loved you.\" \n\n\"He went ballistic and told me that I had already made him a laughingstock and that I would not be allowed to repeat that error by getting back with you. He told me how he had publicly ended all personal and business relationships with your family and he wouldn't allow me to make him look like a fool again. Next thing I know I'm married to David and banished across the country until my dad saw fit for us to return.\"\n\n\"My marriage has been a mistake, Troy. David, never loved me, he just loved the idea of being Charles Buckman's son-in-law. He just thought it was some colossal joke of sneaking behind your back and making a play for me. Then he felt pressured to help me after that night. But, he never loved me, Troy.\"\n\n\"Otherwise, he wouldn't be chasing after other women, night after night. That is, if he can tear himself away from my father. David has filled some huge psychological role in Dad's life for having a son. And my Dad eats it up and nothing is too good for his son, David,\" she fumed sarcastically.\n\nStaci closed her eyes and said, \"If there was some way I could take that pain away from you, I would. My actions cost me the best friend I ever had and I'll never get him back. It cost me the man I loved more than anything in the world.\"\n\nEven though I had steeled myself to remain cold and aloof, I reacted internally. I'd known this woman most of my life. Of course, she knew what buttons to push. So to defend myself I had to respond hard and push her back out of my life.\n\n\"Yeah, Staci, you can take away the pain. Just tell me how I get over losing you? Tell me, how I get over losing both my parents in the same month? Tell me, how I survive day by day despite your father and your husband's attempts to ruin me? Tell me, how do I get over being a social pariah, being banished from the Country Club and every community organization? Tell me, how I can ever get a good night sleep without waking up from the nightmares you've caused me?\"\n\nThe bitter rapid fire interrogatories rocked Staci back and I saw tears well in her eyes. I knew I had to make my escape or be forever damned in my desire for her.\n\n\"Now, if you'll excuse me, I'm going to go on my run and forget about you all over again.\"\n\nBarely holding it together, she nodded and I turned away from her and began to prepare taking my first stride.\n\nI almost tripped as she sobbed, \"Okay, Troy, I made the effort and now I'll live with the consequences. One last thing, I wish you would reconsider your decision of not going to the reunion tonight. You still have a lot of friends among our classmates that would love to see you. And for those that don't, your presence would prove you aren't a coward.\"\n\nI pretended not to hear her last observation as I began my run. The last untainted thing in my life, the Zen of running was missing now as I barely stumbled a mile before I stopped at a city park bench and out of view from prying eyes began crying.\n\nI began to realize that if I lived to be a hundred that Staci would still haunt me. I remained there for the rest of the afternoon trying to decide what to do.\n\n************************\n\nI looked at the imposing building of the country club. Nothing was more a symbol of exclusivity in the entire town. Only the rich and powerful were welcomed; none others need apply. But, for certain special occasions, such as a high school reunion; the minorities, the downtrodden, the never haves, were afforded a brief rare glimpse into a lifestyle they would never know.\n\nI walked past some classmates gawking at the splendor of the surroundings and nodded hello to them. Even though I had been banished from the view six years ago, it no longer held my interest. Down the immaculate hallway with its plush carpet, decorative vases, landscape paintings...all the trappings of grandeur leading to the banquet room.\n\nThere at the doorway was the obligatory table festooned with the Camden High Tigers logo. It was manned by my classmate, Susan Moix, who I had last seen at my office trying to badger me to work on the reunion. Her eyes widened at my approach.\n\n\"Troy Williams,\" I announced to her as though I had to remind her who I was. \"I didn't register so I guess I'll have to pay the late fee, won't I Susan.\"\n\nShe flustered as she took my money and she said, \"It will take just a minute, Troy.\"\n\nShe began typing quickly on a laptop. I stood aside as Susan tended to other classmates who preregistered. They were given their name badges, complete with their senior picture and past accomplishments. Then they were given gift bags and were allowed to enter the banquet hall.\n\nSome of my classmates said hello to me, some ignored me, but it continued to be an uncomfortable atmosphere in the hallway. The laptop printer finally spat out my makeshift generic badge and Susan worked into a flimsy plastic holder, much different than the prepared laminated badges waiting on the table to be claimed.\n\nI managed to pin the badge to my shirt and took the proffered gift bag from Susan and I idly peered into it looking at the various cheap knickknacks inside. Not seeing anything I couldn't live without I deposited my bag atop a cluster of bags similarly abandoned at a trash can as I entered the banquet room.\n\nMaybe it was due to my heightened paranoia, but I sensed a drop in the volume of conversation as I entered the room. Not wishing to confirm my fear, I made a beeline to the bar. I hastily paid ten dollars for an overpriced gin and tonic cocktail.\n\nAfter sampling the drink, I was almost tempted to return the drink due to the cheap gin used. Instead, I walked away holding my drink as a shield not to engage with anyone.\n\nIt only served to ward off most of my fellow classmates. Some persisted on conversing with me and despite the awkward initial comments, I began to enjoy talking to a crowd of old friends when David and Staci entered the room.\n\nDavid was attired in a business suit to differentiate himself from the rest of us. The event for the night was specifically casual dress. He sought to show his superiority from the onset as he looked down his nose to everyone. His aloof manner was befitting of a prot\u00e9g\u00e9e of Charles Buckman.\n\nStaci on the other hand wore a simple black dress and was immediately flooded by female classmates that insisted she join them on the dance floor to participate in the Electric Slide. \n\nI watched as David tried to object and she ignored him to take center stage on the floor. The simple joy of doing the dance steps enticed a number of other classmates out on the floor to join her in enjoying the music.\n\nOnce the song was over, she returned to David and I saw him make a comment that she apparently didn't like. Another song started up and Staci tried to drag David onto the dance floor. He resisted until she finally gave up. She remained by his side just watching the dancing until once again her girlfriends dragged her to the floor.\n\nFor the remainder of the night there was the strange dichotomy of a cowered passive Staci by David's side and an animated relaxed Staci dancing on the dance floor. \n\nNever with a guy however. Whenever anyone approached Staci, they would ask David for permission to dance with his wife. He would always strenuously object until the guy left. Staci was continuing to be embarrassed by his behavior as the dance went on.\n\nThe argument was getting more pronounced and strident with each rejection from David. Luckily for Staci, her girlfriends would continue to pop over to allow her to unwind on the floor.\n\nHer gyrations on the floor were much appreciated by every man in the room and I suspect there were a number of females that would have been willing to come out of the closet if only Staci beckoned at them.\n\nStill, loyally, she returned to David after every dance with his growing displeasure evident on his face. She would beg him to dance with her, but apparently titans of industry aren't allowed to have fun. Their agitations became more pronounced and there were fewer requests from people wanting to dance with Staci for fear of exacerbating the argument.\n\nThat was when Staci looked across the floor and caught my eye. Without seeking permission, she left David and walked across the floor to me. Every pair of eyes were on us as she reached her hand out and said, \"Dance with me.\"\n\nDavid's countenance could have caused serious injury from his glare. Hell, I had nothing to lose. I found myself trailing behind Staci as she continued to hold my hand leading me to the floor.\n\n\"I thought you said you weren't coming to the reunion?\"\n\nI replied, \"I wasn't, until I was told how big a pussy I would be if I didn't show up.\"\n\nStaci giggled at my response as the intro to a slow dance number started. Her eyes widened as she feared I would reject the idea of body contact with her. Instead I shrugged and opened my arms into a close representation of a dancing pose. ",
        "She stepped toward me and I took her in my arms and we started swaying to the slow ballad that had gained popularity ten years ago when we were seniors in high school. I felt her hand shift up my arm. Then she stepped closer to me as we continued to slowly pivot around among our classmates on the crowded darkened dance floor.\n\nI could smell her shampoo and her soap and her perfume. It overloaded my olfactory sense. All those intoxicating desirable scents pushing me closer and closer to a point of no return.\n\nI closed my eyes and relished the fantasy in my head as we continued our dance. I was lost within my singular world of fulfillment. These few minutes made it bearable. Made me believe--\n\nSuddenly, I realized that the music had stopped and the lights were brightly primed for a fast dance and still I had taken dance steps with Staci while lost in reverie. In full view of everyone, including David. Out of place, once again, in public.\n\nI heard a large peal of laughter to the side. Fred Carter was down on one knee pantomiming a proposal, his arm outstretched holding an imaginary ring as the people around him guffawed. I broke quickly from Staci and rushed toward him.\n\nHe got up quickly from the defenseless position and looked concerned as I walked to him. The laughter quieted as I got closer. The DJ must have wanted to see what was going to happen because no song took up after the slow song.\n\nFred Carter, now in business with his father owning the Ford dealership in town, my classmate, a guy I played with on the high school football team now paled as he anticipated me beating the shit out of him in front of his wife and our friends and classmates. He actually flinched as I stopped short of him.\n\nI looked at the pudgy balding man and compared him to ten years ago. The future did not bode well for Fred Carter. I spoke loud enough for everyone to hear.\n\n\"During our sophomore year, Fred, do you remember the night you and your mother and your older sister came by my house?\"\n\nFred's eyes widened and I could tell that he wanted to beg me to keep quiet.\n\n\"Your mother was bawling her eyes out, and you and your sister were doing so as well. You remember what she told my father, Fred? You remember how she told him about your father's drinking problem? You remember how she told my father how he pissed away every penny your family had getting drunk? You remember how she begged my father to help y'all?\"\n\n\"Do you remember what my father did? Do you remember how he went to your house and collected your drunk father and drove him to a rehab facility 150 miles away that night? Do you remember how my mother insisted that your family stay with us that week? Do you remember crying yourself to sleep in my room that night, Fred?\"\n\n\"Do you remember my father establishing a line of credit for your mother so your family could survive while your father was drying out? Do you remember my parents coming over to your house with groceries so you would have something to eat? That is after he got the utilities turned back on for y'all.\" \n\n\" Do you remember how my father restructured your father's business loan so he wouldn't go into default and have my father repossess the business? Do you remember how my father made sure your father attended AA once he was released from the program?\"\n\n\"Do you remember how you and your father came back one night and swore that y'all would do anything for us in everlasting gratitude? Do you remember the day, your gutless father sent you over to withdraw your accounts over to the Buckmans? Do you remember how embarrassed you were at the treachery? Do you remember how my father treated you with dignity and respect?\"\n\n\"Well, remember that the next time you decide to insult me, you son of a bitch!\" I said bitterly.\n\nI looked over the crowd.\n\n\"I see at least eight more here tonight that I could relate a similar story. But, I'll let y'all off the hook because frankly there's not a damn one of you worth the trouble.\" I dared them, with eyes blazing.\n\nNo one would catch my gaze. I turned and started walking toward the exit. At least no one would ever forget our 10th reunion.\n\nAs I walked quickly through the parking lot, I heard the tempo of high heels sounding three times to each of my stride in an effort to catch up. I didn't need to be told who was chasing me.\n\nI swerved into a circle recognizing the futility of trying to escape. I ran my hands through my hair. And kept them on my head as she approached. All I could do was watch her come closer.\n\nI could only stare at her, helpless, miserable in my pain.\n\n\"What?\" she asked me to explain my silence.\n\n\"I was just wondering if you have any idea of how beautiful you are,\" I said sadly, \"and I was just wondering how in the hell I'm ever going to get over you.\"\n\n\"...You don't have to,\" she quietly responded.\n\n\"Yeah, I really do,\" I said. \"And it's going to take some time, Staci, but I'll be fine in the end.\"\n\n\"Please don't do this!\" she begged, \"I've lived that scene over and over every day as well, Troy. I don't know why I did what I did. I panicked and I ran away. For God's sakes, Troy, I was only twenty-one and I felt trapped!\" She gripped my arms to prevent me from walking away. \n\n\"When I went out with you on that first date you knew my history with David,\" she said. \"You knew it and you still came after me. How does that make you any different than David?\"\n\n\"I didn't ever lie to you. I always told you I cared for him. Every God damned time that you asked me why I was with him when he treated me like he did. Don't you remember that Troy? I told you that I was with him because I loved him. I told you that every God damned time.\"\n\n\"But you kept coming back to me anyway. And every time you looked at me...The way your eyes lit up when I was around, Troy... Do you have any idea how that made me feel?\n\n\"And you treated me like I was a queen and I realized that I was falling in love with you. I hated the way David treated me, but I was conflicted. You would spend every second with me that you could. You'd come over and help me do my homework, or wash my car, or just hang around.\" \n\nYou'd go spend time with my dad to get on his good side. I wish I had a dollar for every chess game I watched you lose to him, or listen to him talk about his business. \n\n\"David kept cheating on me and the next thing I knew, I felt I was cheating on him with you. You kept asking me out and I began to accept that we were a couple and David was history. But, it still pissed me off seeing him date other girls.\n\nOne of the reasons, David and I had trouble was he kept wanting my cherry. When I kept resisting he threw me away for girls that would drop their panties. I was livid about that!\n\nYou never gave me an ultimatum and I was able to relax knowing I could go at my pace and I fell in love with you. Sure we didn't have sex, we just kissed a lot. But if you had ever pushed me, just a little bit, we would have and you knew it. But you also knew that I wanted it to mean something when I wore white at my wedding.\"\n\n\"But always in the back of my mind I couldn't understand why David let me go. Why didn't he fight for me? How could he let me go to you?\"\n\n\"Then you and I were in college and we had our lives all mapped out. How we were going to get married and have kids. But while you continued to focus, I was still caught by my questions. And unknown to you, David came around to me and asked me to take him back. And I was trapped between the two of you.\"\n\n\"On one hand, I had Mr. Serious; hardworking, dependable, and devoted to me. On the other I had Mr. Fun; dangerous, carefree, and unreliable. I know it sounds like a cliche, but the two of you made me feel complete.\"\n\n\"When we had that train wreck of an evening, I panicked and I ran and I hurt you like I shouldn't have. I was so embarrassed by what I did that I kept running. I ran to Europe, I ran to California after I got married because my father banished me. It made no difference, Troy. Wherever I ran, you were still there in my mind.\"\n\n\"So I decided to come home and face you. I owe you that. My life isn't going the way I wanted. I hate my life with David. I hate that he never stopped cheating on me, Troy. But it's not like high school when he cheated on me, like he always did, I had you to make me feel better back then. Now he cheats on me and I'm all alone, Troy.\"\n\n\"The reality is that I belong with you. I made a bad mistake and I'm going to take care of that, Troy.\"\n\n\"Yeah, but there's one big fucking difference, Staci, between our realities. The next day after you ruined me, you were still with David...and the next day...and the next. You didn't come back to me. I'm still locked into a hell not of my choosing. I wake up every day knowing the woman I love is with another man. Don't you see Staci? You've made your choice... and the circumstances afterwards will never allow us to be together, so please let me go.\"\n\nThe heartbreaking pitiful begging I was reduced to caused her eyes to well up in unshed tears. I was breaking her hold she had on my arms. \"I'm just going to walk away, Staci. Tonight was a mistake, just another big mistake\"\n\nWhere she got the strength, I have no idea. But, she grabbed my wrist and forced the palm of my hand against her tit. She looked up at me and said, \"Now try to walk away!\"\n\nShe continued to hold my hand against her and God help me I started softly squeezing her and then I moved against her and began kissing her. She moved into my arms in acceptance.\n\nAt once I was holding her familiar body, yet so different after six years of change. I tried to trace out her new form garbed in her dress. She moved her leg against mine to prolong contact. I immediately harden to the point of discomfort in my trousers. \n\n\"Please, Staci, stop this now!\" I gasped between kisses.\n\nShe continued to throw herself at me and I continued to do battle with myself. Most telling was that I didn't fight her off. I wasn't rejecting her. I was meeting every moment of her passion with one of my own.\n\nShe perched one leg off the ground and rubbed against me. I countered by grabbing her tight ass with both hands and lifting her off the ground. She responded by straddling me as I held her aloft. Slowly, she grounded her pelvis dryhumping into me.\n\n\"Staci, I can't...If I do this, I'm no better than David. I don't have much left to me, but my conscience won't let me do this. If your marriage is so horrible, then leave him. Go divorce him and find someone to make you happy. There's too much history between us to overcome. Too much animosity and bad blood for us to ever get over. Your dad is going to destroy me or I'll destroy him. There is no other way.\"\n\n\"I'm tired of you hurting me Staci. You have to understand I'll always love you. All this time, all this pain, all my pretense of hating you. It's killing me, Staci. I won't ever forget you, but I need closure between us. I need to be able to think of you as my friend, despite what is about to happen. If we continue tonight, I promise you that you'll hate me, or I'll hate you for the rest of our lives.\"\n\nMy explanation was the catalyst for her crying jag as we continued to hold each other.\n\nRight in front of David Porter.\n\nHe launched a haymaker as soon as I moved away from Staci and it caught me flush on the jaw. I dropped on the seat of my pants, disoriented from the blow. In a daze, I watched Staci prevent David from finishing me off with kicks as I sat vulnerable trying to clear my head.\n\nLucky for me, David was followed outside with some of his minions; including Fred Carter who watched me with a sneer. The remaining group joined Staci in physically holding him back from maiming or killing me.\n\nDavid continued screaming at me, threatening me with death as they finally managed to haul him away. I continued sitting on the ground as the nausea and vertigo slowly abated. \n\nI groaned as I was finally able to get up. Again, I had the incongruous thought; Nobody would forget this 10th reunion.\n\nI limped home literally and figuratively all the while fighting to keep the contents of my stomach from rebelling on me. I staggered up the stairs and limped to the fridge. I collect ice in a dishrag and kept applying it to the most immediate hurt.\n\nPhysical hurt that is\u2014nothing was going to help with the newly ripped heartstrings I was suffering. \n\nSomething strange was going on with my body. I started having trouble making my body perform the commands my brain were making. I felt something wet and oozy trickling down my neck. I finally managed to get my hand up there and with a slightly out of focus vision I could see blood on my fingers.\n\nAfter what seemed an eternity, I was able to punch up 911 on the speed dial on my phone and groggily told them my predicament. Fearing I was suffering from a concussion from David's beating, I was resolved to try to stay awake for the ambulance.\n\nWhich transpired to being passed out when they arrived and took me to the emergency room. There was hustle and bustle as the medical staff had me jump through the hoops of my symptoms and how I had got in that condition. I simply told them someone had a disagreement with me and I left it at that.\n\nThe consensus was that I was suffering from a concussion exacerbated from some inner ear damage that should heal without any complications. The upshot was I would stay overnight to be monitored in the event of my condition changing.\n\nEarly next morning I had a couple of visitors. The Camden Police Chief along with the Captain of Detectives came into my room. When I saw them I assumed they were going to question me to ascertain who had beat me up. So I was mentally prepared for that scenario when they started throwing curves.\n\nIt wasn't a matter of who I had an altercation with that warranted their concerns, but how I could account for my whereabouts after the fracas. In particular, when did I call 911 and whether anyone was with me prior to the arrival of the ambulance. I referred them to contact the ambulance service and the hospital to satisfy their curiosity of my timeline. If they had any other questions they could refer them to my attorney, I informed them. Both men left with a frown on their face.\n\nNormally, I would have been willing to oblige the police, but the hostile attitudes got my radar alerted. Within the hour I found out why. The hospital was abuzz with the news that Staci Porter was being tended to in the Emergency Room and was assigned a bed in the Intensive Care Unit.\n\nAn unknown party had beat the holy hell out of her and she was comatose from the injuries and the medications used to treat her. My efforts to see her were easily defused by the medical staff and I felt a sense of frustration in not understanding what had happened. No doubt, my attempts to see her would add grist to the rumor mills.\n\nMy hospital stay was extended another couple of days as the tending physician wanted to be doubly sure there was no extenuating circumstances from my concussion. There were only two circumstances that I was aware of.\n\nFirst, throughout the weekend, I had not heard word one from Janet, my would be fiancee. I could only assume she had heard of the spectacle at the country club and was pissed to the gills at me.\n\nSecond, I had the misfortunate of having David Porter as a visitor. I turned to see him standing in the doorway of my room. The gloating grin was testament what he thought of my predicament. I continued to look at him as he relished the results of his sneak attack.\n\n\"David, I can understand why you felt compelled to pick a fight with me, but why did you have to do that to Staci? \" I asked.\n\nThe sneer got bigger as he replied, \"Do what? I have no idea what you are talking about!\"\n\n\"The only one with a motive to hurt Staci is you, David. What are you going to do when Charles Buckman decides to get involved?\"\n\n\"Don't worry about that, Troy. He and I have an understanding and the police have already been given their marching orders. Some 'unknown person' is the culprit to Staci's attack. When Staci gets better she'll be shipped back out to California to stay with her sister. Charles Buckman and I will continue business as usual of running you out of town like a beaten dog.\"\n\nI sadly shook my head. \"Charles Buckman hates me that much? He would allow you to beat up his daughter and try to blame it on me?\"\n\n\"He can't stand the ground you walk on. You are an ongoing source of humiliation to his family. What you and Staci did at the school reunion was icing on the cake. He approved wholeheartedly of my measures to discipline Staci.\"\n\n\"David, I can almost understand why he hates me. But, what did I ever do to you that caused you to hate me to the extent that you do?\"\n\nMy question startled David. For a brief second the malice in his eyes were replaced with a sense of doubt as he searched for an answer.\n\n\"Mr. Holier Than Thou. Mr. I Think I'm Better Than Everyone Else,\" he harshly responded, \"You thought I was going to let you get away with stealing Staci from me?\"\n\n\"You didn't let anything,\" I quickly interjected, \"You dumped her and I went up to you and told you that I intended to ask her out. You didn't have a problem with that.\"\n\n\"Well guess what, asshole? I changed my mind and decided I did want her and I snuck around every chance I could to get in her pants. And she still wouldn't give it up saying that she was saving it for you. Hell, even when we went to Europe after she ran away from you, all she did was mope and cry over you. She still wouldn't sleep with me. I was so pissed off.\"\n\n\"Then we fly back into town and her father read her the riot act and told her that she would marry me, because he wouldn't tolerate any more scandals from her. So we had our shotgun wedding and she bawled like a baby when I finally fucked her on our honeymoon!\"\n\n\"So, now, I go out and have my fun and she gets to sit at home wishing that she never left her poor Troy and that is alright by me. Because when you are finally out on the street, she can have you as far as I'm concerned. I'll be running Buckman's Enterprises and you'll be dumpster diving if I can help it.\"\n\n\"David, I'm just going to tell you once, you got a long way to go to get rid of me,\" I replied, \"And don't think you'll be able to kick my ass. Even after you sucker punched me and kicked me, you never kept me down. I was getting up to fight back when Staci stopped the fight. I would've killed you.\" I said matter of fact.\n\nThe implication that David lacked the ability to keep me down weighed in on him as he walked away. I wanted him to dwell on that fact.\n\nSomehow the days passed at the hospital. Janet was still Missing In Action. I was staying in touch with Tom Jenkins, who was running things on my behalf. I was contemplating weighing revealing aspects of the bank's affairs that he wasn't privy to when I was informed Staci wanted to see me.\n\nWhen I walked in her room I winced seeing the extent of her injuries and my animosity went to a whole new level. How could anyone do that to somebody they were suppose to love.\n\nShe beckoned me to sit by her bedside and I held her frail hand.\n\n\"I guess you've heard I'm being banished again,\" she said weakly.\n\n\"I heard.\"\n\n\"I'm sorry, Troy. I didn't mean to get you hurt. It seems like that's all I'm good for.\"\n\nShe started to cry.\n\n\"Hush, Staci. This isn't your fault. You need to leave. Get away from this, because however it ends, you are going to be hurt. Go out to California. Start over. Find someone you can love and put me and David and your dad behind you. Don't look back,\" I ordered.\n\n\"I have someone here that I love,\" she insisted as she gripped my hand tightly.\n\nI removed my hand.\n\n\"Will you love me if I ruin your father, Staci? Because, I intend to do that if I can. Can you stand the thought of being known in this town as the woman that betrayed her own father? I can't put you through that, Staci.\"",
        "\"Do you remember the joke I told in my office?\"\n\n\"You mean the one where you intimated that I was a whore?\" She asked.\n\n\"You aren't the whore, Staci. I am. You represented the millions of dollars offer. And I'm so willing to chase after you that I'd settle for your reputation being worth five dollars in the end. I can't hurt you like that. You are too dangerous to me, Staci. Leave and have a good life.\"\n\nI left hearing the sobs echoing in the room.\n\nThe day that I was released I went to the bank and thanked Tom Jenkins for his stewardship in my absence. Janet's desk had been cleaned out and her copy of the secret bank books were missing as well.\n\nThat evening as I was in my apartment loft, I heard the familiar footsteps echoing towards me. \n\n\"Hello, Janet,\" I said without bothering to verify it was her.\n\n\"I just dropped by to give you your key back,\" she responded.\n\n\"Okay,\" I said neutrally.\n\nI waited.\n\n\"Mr. Buckman wants to see you at the Country Club tomorrow evening to discuss business with you,\" she informed me.\n\n\"Okay,\" I replied again.\n\nShe waited for me to ask questions that I should be asking. Like, how did she know Charles Buckman and why did he chose her as an envoy. I wasn't inclined to oblige her. Finally, she left.\n\n***************************************\n\nI entered the parking lot of the country club and turned off the ignition to my car and just sat there. I ignored the few passerbys that neared my vehicle as they entered or left the building. Summing up the focus and energy I would need to see me through this meeting; I began a series of deep breaths.\n\nFinally, I left my beat up old Chevy amongst the immaculate Cadillacs, Lexus, and Mercedes and approached the entrance. The receptionist commandeering the entryway was preparing for me to jump through all the hoops of announcing my name and the purpose of my visit. Then wait for an escort since I wasn't trustworthy to walk the hallway alone.\n\nI strolled by her as though she was invisible and ignored her shocked countenance and protests as they faded away while I continued down the hallway. Civility was not necessarily a priority of my current mindset. I would waste no energy on underlings tonight.\n\nOut of thin air, the country club manager, Thomas Clark appeared besides me matching my pace, stride for stride. \"Good evening, Mr. Harrison, what a pleasure it is to see you here again,\" he said cordially.\n\nI glanced at him. Thomas Clark had been one of the few protesters that argued against my family ousting from the country club. It was a testament to his talents for overseeing the country club that kept him from losing his job in the general upheaval when Charles Buckman waged war on my family.\n\n\"Good evening to you, Mr. Clark, it is nice to see you as well.\"\n\nDespite my overall intention, I felt duty bound to acknowledge my appreciation for his efforts. He nodded at me and with as little as was said and what was left unsaid, my companion and I continued down the hallway.\n\n\"Mr. Buckman has reserved the study for your meeting tonight,\" he reminded me. We neared the study and he appeared on the verge of wanting to say something else to me. I slowed down to give him the opportunity.\n\nWith a concerned look on his face, he began, \"Mr. Harri...Troy...if I can be of any help to you after tonight...\"\n\nI was touched by his generosity.\n\n\"Thank you, Thomas, that means a lot to me,\" I assured him and we entered the study.\n\nIf ever there was a memorial for old school male dominance it was reflected in the atmosphere of the country club's study. It wasn't as though women were banned from the room. It was just a matter of history and heritage that they were subtly discouraged from occupying it.\n\nThe large room was resplendent with hunting trophies of various game animals mounted on the walls. Pictures of various and sundry expeditions festooned for viewing.\n\nI had a fleeting desire to see if any of the pictures were of any of the trips that my father had gone on. Or had in some imitation of Stalinist Russia was he pronounced a nonperson and the offending photographs removed.\n\nThe faint aroma of expensive cigars competed with the hickory and oak logs blazing in the oversized stone fireplace. Lights and shadows danced on the plush leather chairs and sofas. The sheen of the polished mahogany furniture, several of which were crowned with Waterford's crystal decanters filled with various Scotch or liqueurs awaiting consumption. Shelves filled with rare first editions of literary masterpieces, many of which bore the autographs of the authors. A large globe sat in the corner which showed its antiquity with unchartered portions of the world and the names of forgotten countries and shifting boundaries.\n\nAnd in the exact center of the room; secure in his dominance of his universe stood my nemesis, Charles Buckman. His son-in-law, my former friend, David Porter hovered close by serving as a satellite. Glaring at me, just one command away from attacking me. He looked at his father-in-law desperate for the signal to destroy me.\n\nI watched the hulking form of Charles Buckman, remembering how intimidated I had been years ago when I courted Staci. All those little demeaning quips and jokes I endured as I studied the chessboard during one of the games he insisted on playing as I waited for Staci to prepare for a date. The inevitable gloating as he captured my King and crooned, \"Checkmate,\" signifying yet another one of my losses.\n\n\"Troy Evans Williams,\" he pronounced it as though levying my death sentence. \"It has been a long time since I've seen you.\"\n\n\"Not long enough, Mr. Buckman,\" I replied. \"You wanted to meet with me, Mr. Buckman. So tell me why I am here, so I can get out of here and go home.\"\n\n\"Why don't we have a drink, Troy?\"\n\nHe called over to the country club manager and asked him to go to the vault and bring him the decanter of Remy Martin Louis XIII Rare Cask, the manager stored for him.\n\n\"I'm impressed, Mr. Buckman. What does a bottle go for nowadays?\"\n\n\"Last time, I bought one, Troy, it set me back about $25,000.\"\n\n\"If I recall correctly, Mr. Buckman, the only time you toast with this is when you close a business deal.\"\n\n\"That's right, Troy. I've closed a very major business deal and I feel like celebrating.\"\n\n\"You mind if I ask what you purchased?\"\n\n\"Not at all, Troy,\" he commented as he took the decanter from the manager. Thomas Clark excused himself from the room as Charles Buckman poured healthy portions in the three brandy snifters and handed me one. \"I just bought out the Camden Bank & Trust.\" He looked at me with his soulless eyes waiting for my reaction.\n\n\"Strange, I don't recall agreeing to sell it,\" I said calmly.\n\nDavid had trailed and picked up the third brandy snifter and gave me a look of pure gloating.\n\n\"You'll have to sell, Troy. Monday, the State's Banking Auditor is going to perform an audit on your bank. A copy of the real books you've been hiding from everyone will be presented for their review. After they compare them against the cooked books you have been fooling everybody with, an investigation will be launched. Then it is the simple matter of following the paper trail, Troy,\" he gleefully explained.\n\n\"How did you find out about the books?\" I asked.\n\n\"Troy, I've always been two steps ahead of you,\" he chortled as he swished his brandy snifter to warm the beverage. \"I know everything you've been doing. I hate to see that you never paid attention to any of the business lessons I taught you so long ago. I know about those ridiculous files you keep on me and my daughter, Staci and my son-in-law, David in your desk drawer. I know about all your business deals, Troy.\"\n\nHe paused to light a contraband Cuban Cohiba cigar. I continued to wait patiently.\n\n\"ALL your business deals,\" he emphasized as he puffed a smoke ring. \"That includes the Sorrant Oil deal you've been working on. And, as I mentioned before, I have access to a copy of your books, Troy. That will make interesting reading across the country once that story gets out.\" \n\n\"However...There is an alternative solution,\" Charles Buckman suggested. \"If you cede over the bank to me. The real books will never be reported. There will be no investigation and you will get to walk away, rather than spend the rest of your life in the state pen on embezzlement charges.\"\n\n\"Why would you want to take over a failing bank, Mr. Buckman? You buy it and you'll have to service the accrued debt,\" I asked puzzled for the reason.\n\n\"Just call me sentimental, Troy. I'm remembering how you grew up with Staci. How you used to come over and play with her. Even when I thought you were going to be my son-in-law instead of David. I'm doing it for old times sakes. Think of it as not smearing the name of your mother and father. They wouldn't approve of their only child being a criminal.\"\n\n\"As far as I'm concerned, you killed my parents, Mr. Buckman,\" I angrily interjected. \"You've tried to destroy me and my bank. So after everything you've done to me and my family, you are going to blackmail me into giving you the bank. What happens to my customers when they can't make their car payments or house notes?\"\n\nAn irritated Charles Buckman replied, \"What will happen is exactly what will happen to any of my customers that can't keep up. I will foreclose on them. I am in the business of making money, boy. If I told you once, I've told you a thousand times; in nature, the big eats the small. That was a lesson neither you or your father ever understood!\"\n\n\"I can still make this okay without you, Mr. Buckman. I have a pending deal involving the Sorrant oil reserves. Once that deal is signed, all my financial worries will be over. The money will be put back into the bank and no one will be the wiser. Even if you report me, there will be no way for you to prove it.\"\n\nCharles Buckman and David Porter laughed in my face. \"You aren't going to be able to count on the Sorrant oil reserves, Troy. Unbeknownst to you, I have been buying up every share that comes available on the open market. I now own 63% of the stock and that number is climbing! I'll be richer than Bill Gates and Warren Buffett combined before its over and you'll be left in the dust, Troy. Checkmate, Troy!\"\n\nI remained silent as he and David relished my obvious torment. He studied my discomfort as I began searching the room for an escape. Any escape. I glanced over at the table where an ornate chess set sat ready for a game. I thought of all the games I played against Charles Buckman and lost. I continued to stare fixated on the chessboard. The ebony Stanton pieces and their counterparts carved from ivory by a master craftsman many years ago. Now silently they were waiting for a game. Charles Buckman followed my gaze and a glimpse of a smile spread on his face. \n\n\"You know Troy, it has been quite some time since we've played a game of chess. Why don't we make a little wager? If I win, David will take over as the President of Camden Bank & Trust and you go to the penitentiary.\"\n\n\"And if I win?\" I postulated as I took a sip of the very expensive cognac. \n\nThe very idea seemed to have been a slap in Charles Buckman's face. I saw him redden and fight for control at the ludicrous idea. He narrowed his eyes and said, \"If you win, you get to remain as President of Camden Bank & Trust and work for me for the rest of your life instead of going to prison.\"\n\n\"If it wasn't for the fact that you've never beaten me in a game of chess, I might have been tempted to lose on purpose to keep you under my thumb. But I think it would be better all around for you to leave this town with your tail between your legs!\" He malevolently hissed at me.\n\nHe turned away and snatched a couple of chess pieces while he was shielded from my view. He turned back to me and stuck out both his fists at arms' length. In his hands were pawns concealed. All I had to do was guess right and I would start as white and have the advantage of the opening move.\n\nHe continued to wait on my decision of which hand I wished to see open. I waited a half a minute before I brought the palm of my right hand underneath Charles Buckman's left fist. A knowing victorious gleam appeared in his eyes as he transferred the pawn to my hand. I clenched my hand in a fist, the pawn remained unrevealed to everyone.\n\n\"Since I know I have the black pawn in my hand, I chose your remaining hand. I will start as white.\" I opened my hand to reveal the black pawn in my grasp. I saw a look of anger and frustration on Buckman's face as he hadn't calculated on my ploy.\n\nEver since the first time I've ever played him, I was allowed the option of choosing pawns. Against the law of averages I always lost. It was only after I had fallen from grace that I dared to think how he accomplished that achievement. \n\nThrough sleight of hand he always produced two black pawns for me to chose from. Even for something as trivial as a chess game he sought an advantage.\n\nWe took our seats at the table. Gladiators removed from bloodshed by culture and civilization only. David moved and stood besides his father-in-law, serving as the loyal vassal he was.\n\nI made my opening move with a pawn. He instantly countered with a Knight's move. That assured me of his tendency to rely heavily on his Knights during the opening game had continued despite not playing him for six years. I made a move with Queen's Bishop. He brought out his other Knight. That confirmed he was committed to overplaying his Knights.\n\nThree moves later, my knight landed on his Queen's Bishop pawn.\n\n\"Check,\" I quietly announced.\n\nHe looked in disbelief at his predicament. My Knight was poised to take either his King or his Queen's Rook with my next move. Usually, the countermove is to have the Queen take the threatening Knight. That would not help him in the current game. My Bishop was poised to take his Queen in response if she attacked.\n\nThe other usual countermove was to move the King and sacrifice the Queen's Rook. That could not happen here. Buckman had played his usual rigid game of protecting the King and denied him any maneuverability. He was trapped to take my Knight's sacrifice.\n\nStill, he searched for a way out. His eyes were darting to every piece on the board. I had leaned back in my chair to relish another taste of the brandy. \"You're going to have to take my Knight, Charles. It is your only play.\"\n\nAgain, he glared at me. Not just for having the temerity of capturing his Queen, but the audacity of addressing him as an equal rather than my superior. I continued to wait for the inevitable.\n\nFinally, in disgust he moved his Queen and took my Knight. I didn't hesitate as I moved my Bishop and captured his Queen. I held the Queen piece before him. I just looked at the piece, rubbing against the ebony princess.\n\n\"Funny thing about in the other game we are playing, you had another queen and it still didn't help you,\" I commented.\n\n\"What are you talking about Troy?\"\n\n\"Your queen, the spy you put in my office, Janet Temple. Your secret agent I was forced to contend with.\"\n\nI watched as he belatedly tried to bring his King's Bishop into action. I began setting up the next sequence of events.\n\n\"It took awhile to realize who your queen was,\" I continued. \"But, once I did she was easy to neutralize. All I had to do was feed her false information and I knew it would get back to you.\"\n\nI brought my Queen out to start doing battle as we continued to play.\n\n\"You see, Chuck, there are two sets of books. But the false cooked books are the ones showing the bank is in trouble. The public books are real and show correctly that the bank is thriving.\"\n\n\"I baited you into thinking that my bank was in trouble because I knew what your natural reaction was going to be. 'The big always eats the small,' isn't that what you always say, Chuck?\"\n\nHe had a stunned look on his face from my use of the patronizing nickname and my sliding my Queen diagonally across the board to capture his King's Rook.\n\nAgain, I was able to quietly say, \"Check.\"\n\n\"I've known for close to two years that Janet was passing information to you Chuck. I knew you had her get intimate with me to get me to lower my defenses. I set up a couple of situations where I passed correct information to you via Janet. After you were able to stymie my efforts by her information you trusted her 100 %. Then occasionally I would provide her a legitimate nugget for you to feast on. That kept you hooked.\"\n\nBuckman moved his King out of harm's way into the next row. I then slid my Queen horizontally across the board and now his Queen's Rook was likewise a victim of the game as I removed it.\n\n\"Queen and both Rooks gone, you aren't doing too good, Chuck,\" I observed. \"But back to Janet. You relied totally on her reports and she relied totally on the information I provided her. You see, I constantly upgraded the false cooked books to indicate the gradual demise of the bank's assets.\" \n\n\"Janet would verify the information on her computer and double check on my computer and then relay the information to you. Janet was never in a capacity to conduct a legitimate audit, so I continued to feed you false information.\"\n\n\"That allowed me some breathing space to repair the initial damage you caused. What was scary was the steps I had to take over and over to build up the war chest I needed. I would commit every dollar I could to ride a half a point on a stock and cash back out of the market and consolidate the gains. Janet was always informed just a little too late to contact you in time for you to crush me like a bug. It had to be frustrating to see me dancing out of your grasp, day after day. \"\n\n\"Of course, for every gain I made, you were erroneously told I lost on four or five other transactions daily. You could and did verify the daily trading of the stocks in question and the reported trading activity would seem to corroborate Janet's information.\"\n\nWoodenly, he took my Queen's Bishop and I returned the favor and took one of his Knights. He made a move with his remaining Knight trying to pressure my King. I began ravaging his pawns with my Queen.\n\n\"So you see Chuck, it won't amount to anything when the State Auditor comes in Monday. The real books will be presented, your information will be noted and an investigation will be conducted. The only evidence you have is a computer printout from Janet, yours and David's secondhand account of the information, and Janet herself.\"\n\n\"There will be no corroborating evidence. The computer from Janet's office and my personal computer are already missing in action and replaced with new computers with only the correct numbers showing. You will never find the hard drives with the erroneous information you relied upon. The audit will take about a week and the final report will exonerate me and my bank.\"\n\nNow my Rooks were free as the end game approached. I took his King's Bishop.\n\n\"So you see Chuck, your plan is going just about as well as your chess game. You underestimated me and now you are paying the price.\"\n\nHis remaining Knight fell, Buckman's last major piece besides his King was his Queen's Bishop. I moved my King to a dark square, now his Queen's Bishop would remain impotent against my King. With my Queen and my Rooks, I began forcing his King to retreat. One torturous move after another and still Buckman would not concede. But I didn't want him to. I wanted his King trapped like a rat and finally we were there. My next move would have him in checkmate and he knew it. His face was burning in anger at the humiliating defeats I had presented him this evening. But there was oh so much more that was coming his way.\n\n\"So, Chuck it looks like I've beaten you for the first time in chess. The moral of this story is never underestimate what lengths your daughter's horny boyfriend will go to score brownie points with her father, including tanking chess games.\"",
        "\"I guess I can count myself lucky that I didn't windup going with you and your drunken buddies on that Alaskan Hunting Safari. The thought of having to hang around you and suck up to you for an entire week makes me still want to vomit to this day. Thank God, David had no qualms to kiss your ass every day.\n\nDavid automatically lurched towards me eager to physically confront me until he saw the eager anticipation in my eyes. I think he realized that if we got in a fight that I would not stop until one of us was either seriously injured or dead. He wasn't ready to commit to that level. I stared at him for awhile and then gave the insult of dismissing him as a viable threat and continued my dissertation. \n\n\"I know fostering Janet on me was your idea, Chuck. But which one of you came up with the idea of sending her to my bed, you or David?\"\n\nNeither one owned up to it.\n\n\"I guess I'll never find out how that came about. Maybe one of you is to blame; maybe both of you independent of each other hinted to Janet to try to kindle a friendship; or maybe, Janet did that of her own initiative.\"\n\n\"What I do know is how it tore me apart again to remind me of a girl I cared about betraying me. What a brilliant idea to keep me off balance as you plotted to steal my bank from me. Not only would I have to relive the anguish, but I would also suffer the humiliation all over again every day.\"\n\n\"So does it piss you off Chuck? The fact that I get to live to fight another day? That my very existence reminds you of the sins you've committed against my father?\" \n\n\"Now, normally, pissing you off would be a cause for concern, because even though I've thwarted your plan and kept my bank, I could look to see you regroup and launch another attack. But here is where the genius of having a queen like Janet comes into play,\" I continued to lecture Buckman as though he was unable to stop hearing about the trainwreck I've engineered for him.\n\n\"I know she also told you about the Sorrant Oil Reserves that my bank has relied so heavily on to pull it back into the black. Just imagine, an estimated multi-million barrels oilfield that has yet to be tapped into. Sounds too good to be true, doesn't it Chuck?\"\n\n\"And, it is too good to be true, Chuck. Once again, I fed you false information through Janet. I created the Sorrant Oil Reserves out of thin air, Chuck. You were so intent in believing everything that Janet told you that you failed to do your due diligence. Why should you? I certainly wasn't devious enough to outwit you. It wasn't like I had exhibited any guile before. And you knew I could not dare take a misstep. So anything I invested in had to be bona fide.\"\n\n\"Because of me you saw the vision of a mythical El Dorado. By investing the seed money of $100,000,000 you would realize profits in the billions. That you would destroy me was only the cherry on top.\"\n\n\"You pored over all the reports submitted on the test fields and engineering reports that promised a sure success. All those reports from my desk that Janet purloined for your benefit. All those reports from strawmen that I created. They only existed in my mind and by my hands. But with enough paperwork created, I kept pushing you closer and closer to the edge until you jumped off the cliff voluntarily.\"\n\n\"In the course of all the international business dealings I've had to engage in I've had ample opportunities to discover enough slightly unethical businessmen that would help me run a scam on you for a percentage. I created a series of off shore dummy corporations with their help. Each time you purchased Sorrant stock, your money was funneled right back to me.\"\n\n\"I created a false bidding war which continued to drive the stock up and made you lose your money that much quicker. All the debt you were incurring was driving the price of Buckman Incorporated stock down. And I bought it up cheap with your own money. Through a syndicate of holding companies and mutual funds I now own a majority of your company, Chuck.\"\n\nCharles Buckman's complexion had undergone an amazing transition. Instead of the reddened anger he had exhibited, he now had the shocked look of a ghostly pallor as I continued to hammer him.\n\n\"Within a month, there will be a new slate of the board of directors of Buckman Incorporated. All of which will be handpicked by me. The first order of business will be to oust you, Chuck on a vote of no confidence. The second will be to vote me in as chairman of the board. The third will be to change the name of the company to Harrison Williams Incorporated in honor of my father.\"\n\n\"I realize that you will still be rich from your holdings, Chuck, but your legacy is gone. And that is what is important to you. The days of you being the benevolent despot of this community are over. That elaborate estate of yours, the Rolls Royces you and your wife drives, the condos you own, the private jet. All of it is in the name of the company for tax purposes will belong to me...I'll let you keep your mistress however.\"\n\nCharles visibly winched from my revelation that I knew of his secret life. David looked on stunned as his indomitable father-in-law developed feets of clay. \n\n\"You will spend the rest of your life complaining about me to the FBI, the Security Exchange Commission, and every other law enforcement agency you can think of and it will not bring your money back to you. I covered myself with countless layers of defenses and I'm still adding layers.\"\n\n\"You will grow old and bitter at your impotency to unravel my dealings. The political influence you once enjoyed will fade away and you will be left all alone shouting into an empty room for your revenge.\"\n\nI finished the last dregs of the cognac. I leaned forward to Charles Buckman, now gulping air as though he was a fish out of the water. I moved my Queen into the final row.\n\n\"You see Chuck, you've been wrong all along about your business/nature analogy; It isn't the big that eats the small. It's the quick that eats the slow.\"\n\nI reached with one finger and slowly toppled his King.\n\n\"Shah Mat,\" I hissed the etymological Persian term that over centuries had morphed to the term, \"checkmate.\" The King is captured. I walked out of the room without bothering to look at the inhabitants.\n\nThe ensuing fallout was dramatic and kept the town busy in gossip for months. I did indeed oust Charles Buckman and David Porter. Once, out of their comfort zone, they turned on each other blaming one another for their downfall. Mrs. Buckman divorced her husband at the public revelation of his latest mistress and proceeded to wrestle millions away from him in the divorce settlement.\n\nAs I suspected, Charles tried to get the authorities to investigate me to no avail. With the loss of his wealth so came the loss of his political power since no one truly admired him without his money backing him up.\n\nHis mistress left him for greener pastures and he engaged in a series of relationships that continued to create his downward financial spiral. It was pathetic to see him continue to assume the air of a VIP when he was the town's laughingstock.\n\nThe town was shocked to wake one morning to hear of his suicide by shooting himself. The funeral was closed for family only. Staci and her sister flew in to attend and flew back out immediately after it was over. She didn't try to contact me. I knew she blamed me for her father's death.\n\nStill, David Porter tried to crash the funeral to convince Staci to stop the divorce proceeding she initiated when she was in California. After his failure, he came out in public with his relationship with Janet Temple. Yeah, my Janet Temple. They left for whereabouts unknown.\n\n*******************\n\n\"Power is an aphrodisiac,\" Henry Kissinger once surmised. I tend to agree with him. Twenty three months after my successful campaign against Charles Buckman I was still the lucky recipient of the attention of many lovely ladies. I harbored no false illusions that somehow I had grown more handsome or became more virile or that my personality had completed a much needed makeover.\n\nNo, all I represented was the potential to an unending source of money, security, and prestige. Was I upset about it? Not in the least, I knew what the game was and so did the ladies. We satisfied desires for physical connections and I made damn sure that none of them made any emotional connection. I made sure that any financial obligations by my lovelys pressed upon me were minimal and transitory.\n\nIn my shallow world that was enough to allow me to cope. Still sometimes, in the dead of the night, I would leave my slumbering bed partner for the night and spend time just watching out from my third story window on the quiet courtyard of the city. \n\nStill, looking for someone to believe in. \n\nStanding as a sentinel over my moonlit city that was going through a rebirth. With me leading the newly named Harrison Williams Enterprises, I sought out a number of manufacturing companies to relocate to Camden to end its history of being known as a one company town. By offering commercial loans at a very low rate, and persuading state officials to offer various tax breaks; a large number of companies decided to take advantage of the offers. The result was a boom time for the city of Camden.\n\nI initially anticipated that the Buckman's Financial Plaza would soon become reminiscent of what the downtown area once looked like; a deserted concrete ghost town synonymous with the failure of Charles Buckman. \n\nBut, I commissioned a study and found that it made viable sense to allow the Buckman Financial Plaza to continue in business and to prosper. People psychologically wanted (and needed) the option of a choice. People like Fred Carter, my classmate running the Ford dealership. Fred would have resented and chafed at having to kowtow to doing his banking business with me at Camden Bank & Trust. But, give him the fiction of doing business with Buckman's Savings and Loans and he was like a duck in water. What did I care what entity got the money as long as it all channeled back to me.\n\nOh, I still indulged in some ego stroking moments. The Camden Country Club did a never before reversal of a member's ouster and extended a membership to me. I suppose, after word got out that Harrison Williams Enterprises was contemplating placing a landfill adjacent to the golf course that it was felt that my opinion might sway the board of directors at Harrison Williams.\n\nI thought I spotted quite a few looks of hostility and irritations each time I came \n\nback to the country club, but as long as they left me alone, I left them alone. \n\nStill, for the sheer bedevilment of it I made it a point to promote minority membership and convert the study to a daycare facility once it was remodeled. I also took supper each night at the club as a show of my power.\n\nI took advantage of the situation and saw to it that Thomas Clark, the manager of the country club got full autonomy in running the club. He listened to my suggestion that the restaurant be improved to a five star facility. Now, I had somewhere I could take business luncheon partners to have a great meal or a game of golf, or both.\n\nOne of my fondest memories was playing a round of golf with the female Chief Operating Officer of a corporation that I wanted to do business with. She sliced her second shot at the par five dogleg at the 13th hole. Somehow, we found ourselves together in the thicket of woods and found a new source of entertainment for the golf course. \n\nAt least, I finally got some pleasure out of the game of golf. I could finally understand a little bit of the Zen of golf, albeit, in a different form than what was expected. Hey, you enjoy your type of hole in one and I'll enjoy mine.\n\nIn fact, the same COO came back for another visit and lo and behold, sliced her shot right back into the same thicket which required us to disappear into the woods again. We were having a leisurely supper at the club enjoying the risque double entendres about the round of golf when Staci arrived.\n\nTo say I was discombobulated would be putting it mildly. I realized the morsel of food poised on my fork had fallen off as I kept the utensil suspended in the air. My companion frowned at the break of conversation and turned to watch as the bewitching woman approached our table as I placed the fork down.\n\nShe wasn't the only one. The entire dining area hushed as everyone focused on Staci. Christ, I hadn't seen or heard from her since she left two years ago. And now I had the weight of the fallout of what happened to her father and David to contend with. I mentally prepared for the showdown confrontation. I would try to manage this with what grace I could. I at least owed her that.\n\nHer focus was directed solely at me as she walked toward me. I don't know if her inattention to my dinner companion was intentional or not, but it apparently held no interest in Staci that I was not alone, or that we were in the crowded dining room of the country club.\n\nNow she stood by my chair, towering over me as I prepared for the humiliation that was sure to come.\n\nThen she knelt down by my chair, down on her knee and said, \"I made a terrible mistake years ago. I'm here to make up for it, if you'll have me. Troy Williams, will you marry me?\"\n\nThere was no mistaking the sincerity in her voice, or in her face. Somehow, she was willing to look past how I destroyed her father, her family's fortune, her husband. All that concerned her was that she loved me and she was willing to put it out on the line for me.\n\nIn a microsecond, I was pondering, should I...could I be just as forgiving? Could I let go the pain and be with the one woman that I so desperately wanted to be with? Would my ego allow the betrayal of my vengeance to be countered by her public ploy? Did the ghosts of my parents look over my shoulder begging me to let go of my past and join the only woman I could truly love?\n\nI was cognizant of the expectations of the unintended audience. Sitting across me, my dinner companion was waging a gamut of expressions on her face. There was the shocked stunned look as she reacted to Staci's proposal to me. There was an apparent look of jealous hostility of this breach of etiquette that can only be fostered by two beautiful women in direct competition. And there was something hidden in a clinical detachment as she watched the events unfold.\n\nNow, I found myself with the table turned. Now, I caught a glimpse of the pressure that every woman experience by a proposal. This was what it must have felt to Staci when I put her on the spot years ago. How could I experience all the reasons to say yes and no at the same time flood in my brain? I so desperately wanted my heart to say yes and my fears wanted me to say no. And I was being pressured to respond in public. Just as I subjected Staci on that fateful evening so long ago.\n\n\"No.\"\n\nI wasn't sure I actually said it until I saw the calm composure of Staci's face crumble and tears welled in her eyes as she staggered up, maintaining the last vestige of her dignity as she walked out of the dining area with her head held high, ignoring all the gawkers.\n\nI don't think I ever loathed myself more than during that moment.\n\nExcited murmurs erupted throughout the room as I quietly signaled for the manager, Thomas Clark to approach my table. \n\n\"Yes, Mr. Williams,\" he enquired.\n\n\"Thomas, I know how impossible it is to keep things quiet during this age of social media. That said, I need you to let everyone know how unhappy I will be if I hear one word of this on Twitter, Facebook, Youtube, or any other site that will embarrass Ms. Buckman,\" I quietly instructed him.\n\n\"I understand, Mr. Williams and I will take care of it.\"\n\nHe left the table and went directly toward Fred Carter's table. After less than a minute of conversation, I saw Fred blanch and began furiously deleting something off his smartphone. When he was finished, Fred looked over at me with a worried look on his face. Thomas Clark had already left to go to the next table.\n\nWithin minutes, Thomas Clark had gotten the word out that should anyone be so foolish as to publicly discuss the event ran the risk of incurring my wrath. After what I had done to Charles Buckman and David Porter, no one wanted to test me.\n\nI turned my attention back to my dinner companion. She had a strange look of bemusement on her face.\n\n\"Well, I never had that happen on a dinner date before,\" she looked me in the eyes.\n\n\"Really?\" I finished the last of my wine, \"It happens to me all the time,\" I drily explained hoping the tongue in cheek response would mask the raging emotional boiler inside me as I looked back at her.\n\nShe attacked me before we even got to my car. By the time I was in the driver seat, she had me unzipped and was sucking my cock for all it was worth as I started the vehicle. How I arrived back at my place without having a wreck is something I will never understand. \n\nShe jumped onto me straddling my body and I carried her up all those steps as she furiously kissed me. When we got to my bed, she ripped off my clothes and began giving me the Fuck Of The Ages. How she managed to keep me erect the entire night was an inspired mix of enthusiasm, experience, and downright debauchery.\n\nAs dawn broke, we sat at the kitchen table, bleary eyed and exhausted as we shared cups of coffee.\n\n\"I think I'll call a cab to take me back to the airport so I can fly out early to my office.\"\n\n\"What is your rush?\" I asked.\n\n\"No rush, I just know when it is time to leave. Last night, I was pissed at that woman for disrespecting me and proposing to you in front of me. That is why I took you home and fucked the everloving shit out of you. \"\n\n\"But three things let me know we could never have that much of a future. One, that woman truly loves you to force herself to do something that publicly. Two, I could never do that for any man so whatever we are it isn't to the point that I would be willing to go that far for you.\"\n\nI could only nod to her comments as I found agreement with her. She was fun, but we both knew we weren't eternally matched for each other.\n\n\"You mentioned three things. What is the third?\" I asked.\n\n\"Last night everybody in that room could look at her and tell that she was in love with you. I was looking at you the entire time and could tell that you are in love with her. In love or business, you don't set out in something you can't succeed at. I've already lost this fight.\" \n\nI watched as the taxi drove off carrying her to the airport as I weighed her words and contemplated my next move. I only had to wait less than twenty-four hours. Staci showed up again at the country club as I was dining alone and went to her knee again and publicly proposed to me again.\n\nOnce again, I suffered through the turmoil of conflicting emotions as I was being put on the spot once again. Somehow, once again I managed to say no and once again my negative response caused Staci the pain of rejection and she slowly walked away trying to keep her composure as tears streaked down her face.\n\nThe room erupted again in a buzz of excitement and I called Thomas Clark over and requested he repeat his service of the night before. I knew it was impossible to keep people from a whisper campaign of the event, but I could still attempt to limit the damage to being only local gossip.\n\nThe third night the dining room was jam-packed by people anticipating Staci's arrival. They weren't disappointed as she did show up and propose to me again. Unlike the audience, Staci was disappointed as I once again refused to accept her proposal of marriage. This time it was unnecessary to instruct Thomas Clark to inform the people not to air any of the event they witnessed. He automatically went into damage control mode.\n\nStaci showed the next evening and left disappointed. And again the next night. And the next. And the next.",
        "The event continued each evening. A week passed. Then a month. And Staci continued to appear to propose to me each evening. I couldn't understand how she managed to endure that much pain and rejection. But every night she appeared, hoping I would say yes and leaving each night with her heart ripped apart by my refusal.\n\nHer friends begged her to stop and to salvage what little pride she had and start over away from our hometown. She continued to ignore them. Then a few brave souls approached me and suggested that I stop dining at the country club so to put an end to the farce. I ignored them.\n\nNight after night it continued. One change was that I never took another date to dinner at the club. I could at least manage to keep the conflict just on the two of us and not subject anyone else to the spectacle.\n\nIt was on a Friday evening and I was waiting. By now the initial clamor from mine and Staci's little drama tableau had settled into a lethargic acceptance by the crowd. Many began to not notice Staci's hopeful arrivals and sad departures.\n\nThere she was right on time, still taking care to dress up for the occasion and still hoping against hope that she could persuade me to change my mind. She walked over and began her well-practiced kneeling when I raised my hand to stop her from lowering herself.\n\n\"Staci, this marks a year since you've been back and proposing to me to marry you. Every night I say no and yet you keep coming back. How long are you going to keep doing this?\"\n\nIt was evident that she was flustered from the change of the ritual. But, she recovered and said, \"Troy, I'm going to keep coming here every night and propose to you in hope that you finally accept that we belong together. And it doesn't matter if it happens tonight, or tomorrow or whether it happens years from now. I will do everything I can to make up for the mistake of not accepting your proposal.\"\n\nThe heartfelt response resonated with her sincerity. \n\n\"You know your batting average really sucks at this.\"\n\nShe ignored my futile attempt to interject levity into the situation.\n\n\"All I have to do is be right one time and then both you and I can spend the rest of our lives batting 1,000.\"\n\n\"Look, Staci, I haven't had as much practice at this as you have, but perhaps I can do better.\"\n\nBefore it registered with her, I had slid out of my chair and I was kneeling before her. My hand went into my pocket and gripped the object.\n\nNow as it sunk in Staci cried, \"Oh my God! OH MY GOD, TROY!!\"\n\nTears of joy sprung from her eyes and her hands went unbelieving to her mouth as I opened the jewelry box and presented the ring for her view.\n\n\"Staci Ellen Buckman\"\n\n\"Yes!\" She screamed.\n\n\"Will you-\"\n\n\"Yes!!\"\n\n\"marry-\"\n\n\"Yes!! Yes!! Yes!!\"\n\n\"me?\"\n\n\"Yes! Yes! Yes! Oh my God, yes, I'll marry you!\"\n\nShe pulled me to my feet in a display of adrenalin rush and held me close and kissing me as the room erupted into wild applause. She was sobbing in my ear, \"Thank you, Troy! Thank you for making me so happy!\"\n\nSomehow, despite holding on to me fiercely, I managed to get the ring on her finger, which brought on another round of smouldering kisses.\n\nI didn't think it was possible to persuade her to unclench from me, but eventually her girlfriends who were present had got her away from me as they ohhed and awwed over the ring. And, of course, began promptly planning for the wedding.\n\nI took Thomas Clark aside and told him to put everybody's bill on my tab. Yeah, even for that bastard, Fred Carter. I also told him to break out that rare bottle of cognac I had inherited when I took over all of Charles Buckman's assets. It was time I polished off the bottle with a toast shared with my bride to be.\n\nIt was time to start letting go of the past.\n\n***************************\n\nI watched her as she zeroed in on me like an unsteady kamikaze. She clutched in her hands a large yellow-reddish object. I tried to prepare myself in the event she chose to hurl the object at me at close range trying to anticipate the trajectory of where it would hit my body.\n\nInstead she reached out to have me take the item from her. \n\n\"Peace!\" she proudly announced.\n\n\"Peach!\" I corrected her. I emphasized the \"ch\" to distinguish to her how to pronounce the fruit.\n\nShe nodded with the assurance of a three year old and repeated, \"peace!\" With that chore completed she turned around and waddled back toward the waiting bushel baskets full of the ripe, succulent fruit. If history repeated itself, I would soon be the recipient of another peach in a few short moments.\n\nI felt and softly squeezed the peach in my hand and sniffed it. It was ripe, ready to be devoured. I doused the fuzzy fruit in the pail of watery ice which had been utilized to hold the few longneck bottles of beer I rewarded myself with for completing the harvest.\n\nThen, using a pocketknife I began to half, then quarter the fruit, and removed the peach pit. Then I cut it into smaller sections so Karen, my child would be able to enjoy the tasty treat. True to form, Karen returned with another peach and held it out to me, \"Peace, Daddy!\" She demanded.\n\nNext to me, the love of my life started laughing at us. I looked over at Staci and smiled at her before returning my attention back to Karen. \n\n\"Peach!\" I repeated to correct her as I handed her a small wedge of the fruit. Her eyes gleamed as she tasted the fruit and pulp and juice smeared her face. Somehow, she always managed to leave the skin uneaten which would be deposited on my shirt.\n\n\"Don't feed her too much, it is too close to suppertime,\" Staci reminded me.\n\n\"I won't, Honey,\" I said as I took the opportunity to swig down another gulp of the Nectar Of The Gods and the cold amber liquid slid down my throat.\n\n\"And no more beers or you'll be totally useless while I r-a-v-i-s-h you tonight.\"\n\n\"Honey. She's three years old. She has no idea what that word means.\" I reminded Staci.\n\n\"It never is too early to get in the habit. I don't want her to blurt out a word. She has no business repeating in public!\"\n\n\"Okay, I see your point. But as long as I get to keep eating your peach, you can have one of mine.\" I handed her a peach slice as a mischievous grin appeared on her face.\n\n\"I intend to let you eat my peach all night long,\" she smiled tantalizingly.\n\n\"Just remember. I got to unload these baskets at the Farmer's Market early in the morning.\"\n\n\"Troy, that means we need to get an early start tonight so you can be ready to go in the morning!\"\n\nThe leering look on her face told me she had plans for me in the morning as well.\n\n\"But, to help you out, call up one of those kids you hired as helping hands and delegate him to do that chore for you tomorrow, I think something is going to crop up and will need our undivided attention.\"\n\nI smiled back and then looked back at the acreage that consisted of our residence. When we married, I was content to remain at the bank building, but Staci was adamant that she wasn't going to raise a family in a bank building. \n\nI called my old family friend, Mrs. Fuller. She had gotten to the age where it was difficult to tend to her farm. Add the fact that her daughter was insisting that she move out west to live with her. End result; I purchased the Fuller's farm and a couple of other tracts of land that would allow me to be fully occupied as a gentleman farmer, but not overwhelmed by the task.\n\nFor all my commercial enterprises, I had good managers overlooking my assets and I continued to supervise to make sure the engine ran efficiently. That no longer took every waking second of the day.\n\nI soon settled into learning about crop rotations, irrigation, and pest control. Staci, was hard at work renovating our new homestead and it wasn't long when she informed me of the need to remake one of the rooms a nursery.\n\nKaren came into our lives and any lingering doubts either of us had about our marriage was instantly swept away. Ironically, our happiness was the source of a lot of irritation of the locals that had observed our trials and tribulations up close. They couldn't understand why I was willing to marry a girl that had rejected me. And they couldn't understand why Staci would marry me after I rejected her. \n\nI could write an entire encyclopedia trying to get people to understand our reasoning and feelings or I can simply sum it up that I love her and she loves me and we finally caught ourselves at the right time. \n\nI sleep well. I am not haunted by the ghosts of my parents. Why should they haunt me? They only wanted the best for me and that finally happened. I am not haunted by the specter of Charles Buckman. He can not hurt me or Staci anymore so it is of no consequence. Likewise, with David Porter and Janet.\n\nThe only person that can hurt me is Staci and in my heart I know that isn't going to happen again. The lessons we learned were painful and at a frightful cost and dearly bought and dearly cherished.\n\nThe sudden epiphany I got as I watched Karen bring yet another peach for me struck home in its simplicity.\n\nKaren crawled into my lap and with all the God given innocence in her eyes looked into mine as she handed the fruit to me.\n\n\"Peace, Daddy!\"\n\nI gave her a kiss, \"Peace.\" I agreed."
    ],
    "authorname": "oshaw",
    "tags": [
        "proposal",
        "jilted",
        "bank",
        "chess",
        "reunion",
        "country club"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/interest"
}