{
    "title": "Chords that Bind Ch. 17",
    "pages": [
        "Dear Readers,\n\nYou are a patient bunch and I'm ever so happy to be able to deliver this Christmas special to you... just in time for the New Year. Please continue to be your forgiving selves and remember that there are twelve days of Christmas. It's also a rather long chapter. Due to my desire to have this submitted before the end of the year, I haven't had the chance to put it through my usual editing process, so in addition to suspending your disbelief, I'll ask you to suspend your inner English teacher. I hope you enjoy this next installment. I tried to deliver a sufficient amount of story, romance, and steamy bits, but I'm sure you'll let me know if I bit off more than I can chew. As always, I appreciate your comments, votes, and feedback. \n\nHere's to 2018!\n\nXoxo\n\nPoeticLicense91\n\n***\n\nChapter 17: Carol\n\n***\n\nIt was a cozy winter's morning. Cecilia was still fast asleep when James rolled quietly out of bed. He was somewhat reluctant to get up. With the comfort of his bed warmed by Cecilia, it was tempting to lie in all day, but he couldn't. It was the first week of December, and he wanted to get the house ready for Christmas.\n\nHe pulled on a dressing gown and ventured downstairs. As he cracked eggs and fried bacon, he planned out the day in his head. Clara came down, surprised to see James up and about so early.\n\n\"Everything okay, James?\"\n\n\"Oh yes, I just thought we'd do some of the Christmas decorating today, get a tree and all that. You don't have rehearsal today, right?\"\n\n\"No, I'm free.\" She smiled. \"We've been getting the Nutcracker ready for awhile now, and I'll be performing every weekend straight through 'til Christmas. If we don't do it today, I might not be able to help. And I don't think Abe has anything pressing . . . \"\n\n\"That settles it then.\" He tipped the scrambled eggs onto some plates. \"I'll wake up Cecilia, if you get Abe.\"\n\n***\n\n\"Clara, would you pull out some of the Christmas records?\" James asked as he climbed down from the storage loft carrying a large box.\n\n\"Yes, James!\" she ran to grab the music, excited that James was entering into the Christmas spirit. He'd been dour in years past and hadn't really joined in any decorating or festive activities. Abe took the box from James and started down the stairs. James returned up to the crawl space and came back with a smaller box and handed it to Cecilia.\n\n\"I think you can manage this, but mind, it's rather delicate.\"\n\n\"Yes Sir,\" Cecilia replied solemnly, taking the box. \"What is it?\"\n\n\"A set of crystal icicles. We'll use them on the tree later.\"\n\n\"We're getting a tree?\"\n\nJames looked at her with a confused smile. \"Yes. Why wouldn't we?\"\n\n\"I-I-I don't know, I just didn't realize...\" When James said over breakfast that he was thinking of breaking out some Christmas decorations it caught Cecilia off guard. Without Thanksgiving to usher in the season, December took her by surprise.\n\nJames sighed. \"I know. We didn't do much celebrating last year.\"\n\nThat was an understatement. James tried to ignore Christmas entirely last year. He hadn't felt festive in the aftermath of rescuing Cecilia, and for her part, Cecilia spent a great deal of time recovering and healing. \"I'm rather excited for you to see how well we do Christmas. Don't think me silly, but I love getting ready for it.\"\n\n\"It's been awhile since we did it properly.\" Abe walked in and joined their conversation. \"It's good to brush the dust off these things. Are you planning on decorating the foyer this year James?\"\n\n\"I thought so. Any reason why not?\"\n\n\"None that I can tell. I think we still need to bring those boxes back down then.\"<br ><br >\"Right, let me check. Cecilia, will you take that to the den? I think the rest of these boxes might be a bit unwieldy. See if Clara's got anything she wants to tackle. I thought we could see about a tree after lunch.\"\n\n\"Yes Sir.\"\n\nCecilia carried the glass ornaments to the den and when she entered the kitchen she saw Clara pouring over cookbooks and marking them with sticky notes.\n\n\"Is there anything we can tackle together before lunchtime? James said he wanted to get a tree after.\"\n\n<br >\"Hmmm... If that's the case, the biscuits will have to wait. I found some of the CDs. Why don't you pop one in and then we can just take a look at which recipes we want to make. I'm certain we'll need to pick up more butter and probably some of the more unique items.\"\n\nCecilia didn't recognize the CDs Clara handed her, so she chose one at random. The sound of trumpets and brass instruments blared out of the system. She turned it down to an appropriate volume and turned to the task of flagging some recipes she thought would be fun to try. Soon though, it was time to prepare for lunch, and she and Clara set to work making some bacon sandwiches.\n\n\"Mmm! That smells good, if not very Christmas-y,\" Abe said walking into the kitchen.\n\n<br >\"It'll smell Christmas-y when we have a ten-foot Christmas tree in the house,\" Clara replied. \"And Cecilia and I were going to bake some biscuits too.\"\n\n\"Oh, brill!\" James said entering the room and helping himself to a sandwich. Cecilia marveled at how casual and comfortable they had all become. It eased her ever-present anxiety to see such warm friendship. \"I'm looking forward to that. It'll give us time to untangle all the lights.\"\n\nAfter eating their lunch and clearing up a bit, Clara and Cecilia went to pull on some warm clothes. In the foyer, Cecilia stopped short. There were so many boxes stacked around the staircase it was hard to pick her way through. \"Are all of these Christmas decorations?\"<br >\n\n\"Oh yes. But we haven't used this many in some time.\" Clara looked delighted. \"It's so good that you're here. You don't know how much happier James is now. This is a great sign.\"\n\n\"He makes me happy too.\"\n\n\"Come on, we're going to Pines and Needles. It's outdoors, so you'll want boots as well.\"\n\n\"I'm coming.\" Cecilia followed behind eagerly, feeling as if Christmas were coming early.\n\n***\n\nA few hours later, Abe and James had a ten-foot Nordmann fir standing proudly in the living room. The four of them spent an inordinate amount of time choosing an acceptable tree. James kept insisting the twelve-foot trees were ten-foot, and Clara kept reminding him that the ceilings weren't going to accommodate such a specimen. Cecilia kept finding gaps in the foliage, and Abe didn't like weak branches. It was comical really, how much thought they put into it, but in the end they all agreed on a gorgeous tree.\n\nClara also chose some evergreen garlands and a fresh boxwood wreath. Cecilia had a list of ingredients to supplement the pantry for their baking, and as James and Abe completed the tree installation, Clara and Cecilia had the first biscuits baking in the oven.\n\nAbe and James smiled as Cecilia walked in, taking in the size of the tree and unable to keep a look of joy off her face. \"We're still untangling these lights,\" Abe said.\n\n\"Can I help?\"\n\n\"Sure. Just don't get tangled yourself. I swear these lights have a mind of their own,\" Abe grumbled.\n\n\"I wouldn't mind if she got tied up in them,\" James countered Abe, watching his submissive turn bright red.\n\nCecilia shivered. \"I don't want to be in the way.\" She didn't know how they 'usually' did Christmas things and didn't want to step on toes.\n\n\"You won't be. Start on that end. We'll see if there are two or three strands knotted up.\"\n\nIt turned out there were four different strands in the holiday-themed Gordian knot, but eventually all the lights were neatly coiled and ready to be strung.\n\nHaving the whole day for the four of them to literally deck the halls was a treat. The aroma of shortbread cookies wafted towards them, heralding Clara's arrival with the buttery treats. \"Go on then, you know you want some.\"\n\n***\n\nIt wasn't until after dinner that they finished trimming the tree. Cecilia's past experiences with decorating Christmas trees usually involved tense, passive-aggressive comments from family members while they hung tacky ornaments higgledy-piggledy. That left her ill-prepared for what could only be described as an art project.\n\nThere was a whole box that held silk flowers: glittery roses, shimmering orchids, velveteen poinsettias, gleaming berries in all sorts of colors, and a few stray pheasant feathers were crammed together. \"What are these for Clara?\"\n\n\"Oh! James, are we doing these this year?\" Clara asked. It looked as if James was pulling out all the stops.\n\nJames looked over. \"I thought we could, unless you don't like them. What do you think Cecilia?\"\n\n\"Where do they go?<br >\n\n\"In the tree! We used to use these to fill in the branches.\"\n\nCecilia picked up some stems. \"Like this?\"\n\nClara handed her one more piece, and the arrangement popped with color, taking on a life of its own. \"Exactly. Then use these twisty-ties to fix it to the branch.\"\n\nIt turned out Cecilia had quite a knack for making the arrangements. She and Clara made several bouquets as Abe and James wrapped the tree in red and white lights.\n\nEveryone seemed to be anticipating the next phase and Cecilia couldn't believe how much attention to detail was going into this. Her family would have finished this annual exercise long ago, and they'd yet to hang a single ornament. True, her family wouldn't be enjoying cranberry champagne cocktails or Clara's homemade cookies while they did this. And they certainly wouldn't break into two or even three part harmony singing along with the music.\n\n\"What is this music?\" Cecilia asked, \"It's beautiful.\"\n\nIt could only be described as angelic. Voices rang clearly, singing carols Cecilia had never heard before.\n\n\"That's King's. And it is beautiful.\" James agreed.\n\n\"What's Kings?\" Cecilia asked.\n\n\"A college at Cambridge. Has the best choir in the world, if you ask me.\"\n\n\"And that's saying something, coming from an Oxford bloke,\" Abe rejoined.\n\n\"I wasn't going to school for music. I was going for law,\" came James's dry retort.\n\n\"Don't mind me then. After all, only one of us bothered finishing. What do I know?\"\n\n\"Quite a bit if you ask me. Not everyone serves in her majesty's marines.\" Clara chided.\n\n\"Clara, you've got to be the only Irish girl in the country to be proud of that,\" James teased.\n\n\"I know.\" She said it with a saucy smile. \"That's why I have to dance for England too. Can't go back now that I've been fraternizing with the enemy!\"\n\nThe two men erupted in uproarious laughter at that.\n\nJames opened another plastic tub and started pulling out bright red boxes. \"Everyone, go on and pick one.\" Cecilia didn't know what they were choosing.\n\nJames saw her hanging back, and selected a box with a smile. \"Are you alright?\"\n\n\"Oh yes. It's just . . . this is so different.\"\n\n\"Did we forget something? Are you homesick?\" James worried that the holidays would make her change her mind about being with him and living with them in London.\n\n\"No. Not at all,\" she said quickly. \"I like this so much better. But I didn't know it could be like this.\"\n\n\"Like what?\"\n\n\"Just so lovely and calm. No one's fighting, and you three all take such care. Thanks for including me.\"\n\n\"Cecilia, I haven't been able to do this in a long time. You've inspired me. Here,\" he pressed one of the heavy boxes into her hands, \"this is one of my favorites.\" Cecilia looked down at the red box trimmed in embossed gold. Through the window of the lid, she could see cut crystal. She could tell with the reverence everyone had that these were special. Opening it carefully, she saw the white ribbon and faceted crystal of an angel cut into glass: a Christmas ornament.\n\n\"Oh, it's beautiful. Don't you want to hang it up?\"\n\nHe shook his head. \"I might lend you a hand if you decide she needs a high perch.\"\n\nShe looked puzzled for a second and James took advantage of her hesitation to bend and wrap his arms just below her knees.\n\nCecilia clutched the crystal angel in her fingers, afraid to drop it. Somewhere below her James suggested, \"Pick a strong branch.\"\n\nCecilia laughed and picked the highest branch she could reach, nearly at the top of the tree thanks to James's lift. He set her down on her feet after finding a home for the angel. He didn't let her go though. He gave her a deep kiss, enjoying her laughter and the feel of her in his arms.\n\n\"I'm so excited to share this Christmas with you,\" he whispered in her ear.\n\n\"Me too,\" she said quietly.\n\nEven after the training session they'd had, and learning about James's expectations, Cecilia often harbored doubts.\n\nHe seems to want me to be familiar and relaxed with him, but I'm still unsure. \n\nThat was when her mother's voice decided to be helpful:\n\nAfter all you two have done together, you think you get to have a normal relationship? It won't ever be normal. Not when you're such a slut. Isn't that what he wanted from you? That's why he likes you, you know. He's not a real gentleman at all. He's a bigoted opportunist. He'll get bored with you, now that you've given him everything of value.\n\nStop!\u2014Cecilia cut that voice off, but the seeds of doubt were there. Her thoughts swirled around, trying to rebuff her mother's voice.\n\nWhen he touches me, I know. I know he wants me. It's in his whole being. He doesn't hold back anything. When we're intimate, he shows no compunction about claiming me. If he doesn't do that in our day-to-day, doesn't stand on ceremony, or make demands, it's because he doesn't want to. Sure, I once thought he wanted more than what we have now . . . but, maybe he's waiting until after he's done retraining me. He said I had lots of things to 'unlearn' . . . Maybe . . .\n\n\"Cecilia. Cecilia?\" James caught her daydreaming, \"Go on and pick another one.\"\n\nJames pulled away to choose another box, giving careful examination to where Clara and Abe had hung their ornaments. That was when Cecilia understood that all the red boxes were crystal.\n\n\"These are special, aren't they?\" she said raising her voice slightly.\n\n\"My Uncle Clive started this collection. I've been adding to it since he passed.\"\n\nSlowly, stars and snowflakes, more angels, emblems, and musical symbols all cut from lead crystal appeared to drip off the tree. Cecilia understood that there was a method to this project. Sure enough, Clara said, \"Now the ribbons and baubles.\"\n\nAfter that came a spangled array of icicles. Throughout the evening, the Choir of King's College, Cambridge continued to sing Christmas carols. As that album finished, the first strains of Tchaikovsky's Nutcracker played. \"No, James! We can't play that.\"\n\n\"What's wrong, Clara?\" Cecilia asked.\n\n\"Because that's all I'm hearing at work! Please, we have to change it. I can't listen to that right now.\"\n\nAbe raised an eyebrow at his wife's outburst.\n\n\"I'm sorry. But I've practically got the whole suite memorized.\"\n\n\"I'll change it Clara. I forgot about that.\" James walked to the sound system to change the music. His mobile rang from inside his pocket. He checked the ID and quickly excused himself.\n\n\"What part are you dancing Clara?\" Cecilia asked. The Nutcracker was the one ballet with which she was vaguely familiar.\n\n\"Coffee. I imagine Abe will enjoy this one quite a bit, especially once he sees my costume.\"\n\n\"Oh, will I?\" Abe asked, approaching Clara, stalking her as he avoided all the boxes of decorations.\n\n\"I think so, Sir. But you can be the judge and give me your verdict.\" Clara darted quickly out of his reach.\n\nAbe folded his arms. \"I'll hold you to that then, my little ballerina.\" He laughed, and found he was looking forward to seeing Clara's costume.\n\n***\n\nSomehow, Cecilia managed to make a turtleneck sweater seem like one of the sexiest items of clothing possible. At least, that's what James thought as Cecilia ran down the stairs. The cream merino sweater was a perfect contrast to the pleated red-tartan skirt that ended a few inches above her knees, leading down to smart leather riding boots. She wore a red beret to match; the Anglo-Scottish look was spoiled only by the fact that her curls were chestnut instead of ginger.\n\n\"Looking properly Christmas-y, Cecilia,\" Abe said.\n\n\"Is it not formal enough?\" she worried.\n\n\"It's perfect,\" James assured her. \"Besides, there's not time to change. The show starts soon, and it's a family-friendly showing anyway.\"\n\nThe three were taking the weekend before Christmas to see an afternoon showing of the Nutcracker to show their support to Clara, who had been dancing nonstop all month.\n\nAbe always worried about Clara's health during Nutcracker season. The entire company took the shows in turns and there were understudies and second castings of all the demanding roles because the Nutcracker was the most popular show of the year. But, that still meant they were performing four times more than usual, and at that rate, even the healthiest of dancers were apt to injure themselves.\n\nClara put a brave face on it, but Abe could tell the production was taking it out of his wife. He knew it was her passion, but sometimes when he looked at her feet, he wondered how it could be worth it. Clara had been lucky with relatively few injuries, but he'd heard enough horror stories about stress fractures and torn ligaments. It was one of the reasons he was so careful with her in their scenes together. He'd be happy when Nutcracker season was over, and Clara could take some much-needed rest.\n\nCecilia was starting to feel more comfortable at these grand venues. Today, she was helped by the fact that the Royal Opera House was swarming with children and families.\n\n\"I understand that the Nutcracker practically finances the ballet, but I always wish that it would spur more interest in the arts,\" James lamented as they waited for Abe to retrieve their tickets from Will-Call.\n\n\"What do you mean?\" Cecilia asked.\n\n\"Well, all these families from the suburbs will come into London for the day, do a bit of shopping and then come see the Nutcracker, right?\"\n\n\"Sure.\"<br >\n\n\"And they'll see the best dancers in the world and hear Tchaikovsky\u2014maybe for the first time or maybe for the tenth time\u2014because it's a family tradition.\"\n\n\"Okay. That's good isn't it?\"\n\n\"And most will never hear anything else by Tchaikovsky, or know who Balanchine is, and they'll forget all of this is here until next year when they come to do their family Christmas outing in London.\"\n\n\"Oh.\"\n\n\"Don't mind Scrooge over here Cecilia, he's just jealous that there isn't a Christmas piano concerto for him to play that's enormously popular,\" Abe cut in.\n\n\"No, I'm not. I see Clara dancing herself ragged. I'm glad I'm not in demand for Christmas.\"\n\n<br >\"You could be if you wanted to. Do a re-harmonization of some obscure Christmas fugue?\"<br ><br >Cecilia laughed. James looked vexed. Abe was just throwing musical terms together now. \"Or maybe major and minor counterpuntal variations on carols?\"\n\nAbe was being so ridiculous that James couldn't even pretend to be annoyed and laughed heartily.\n\nThe three had fairly unremarkable seats. Even with Clara's comp tickets, the crush of families attending the matinee meant that they had to settle for tiered seats.\n\n\"I know you've said it's the most popular ballet, but I've never seen it before,\" Cecilia said to James as they angled themselves to slip past people already seated in their row.\n\n\"I won't make a secret of the fact that music comes first for me. Tchaikovsky, Prokofiev, and Stravinsky wrote my favorite ballets. Abe was right to ignore my grousing. I think you'll like it.\"\n\nThey reached their seats finally, and Cecilia ventured to ask, \"So, if there was only one thing for you to find under our beautiful Christmas tree this year, what would it be?\"",
        "\"For me?\"\n\n\"Yes Sir. For you.\"<br ><br >\"I don't need anything.\"\n\n\"That's not what I asked.\"<br ><br >James smiled as Cecilia probed him for present ideas. \"I have everything I want, too. I think I'm the happiest man in Britain.\"\n\n\"Oh come on. Please tell me something! Please? Sir?\"\n\nJames's mobile buzzed, interrupting her playful begging. A frown crossed his face as he read a message.\n\n\"An answer,\" he said as he set his phone to airplane mode.\n\n\"What do you mean?\"\n\n\"For Christmas. I want an answer for Christmas.\"\n\nCecilia sighed, exasperated with James's enigmatic evasions of her question.\n\n\"What's the question then?\"\n\n\"Forty-two!\" Abe barked. Cecilia looked at him and James groaned.\n\n\"No. That's the answer,\" James shook his head.\n\nThen Cecilia got it. \"Really, Abe? Hitchhiker's Guide to the Galaxy?\"\n\n\"That's the one.\" Abe had a feeling he knew what James was getting at. He hoped he was right. Just then, the lights dimmed.\n\n\"Less space-age philosophy Abe! Honestly, the curtain's going up!\" Cecilia whispered. Abe shook his head and stifled a chuckle. Yes, Cecilia and James worked miracles on each other.\n\n***\n\nAll the fun and verbal sparring aside, the three did quiet down and enjoy the ballet. The first act was dedicated to children. But the second act was a parade of technical artistry embodied in a delegation of sweets.\n\nWhen the woody tones of the double reeds ushered in the Arabian Dance, Abe had to smile. He rather did like Clara's costume. In spangled harem pants and a midriff-baring top, she sashayed onstage.\n\nIt seemed a bit indecent. Clara's dance solo demanded an erotic display of flexibility, supported only by the sparkling sound of tiny bells. That was, until a retinue of men\u2014also looking like they stepped out of the One Thousand and One Arabian Nights\u2014joined her dance. Then, Clara hardly seemed to touch the ground as she was spun and lifted back and forth across the stage. Her toe shoes elongated her slim legs, highlighting the lines her body made as she contorted herself.\n\nYes, this dance was definitely too sexy for children, Abe thought. She finished with a geometrically perfect heel-stretch that collapsed and twisted into a full split on the floor and spinning her body quickly to arch her back and catch her foot over and behind her head.\n\nCecilia smiled. She knew from exercising with Clara and her other friends in the company just how much time, stretching, and strength training went into pulling off the steps Clara just performed. But to make it look so effortless as well: that was superhuman.\n\n***\n\nIt had become something of a routine that after attending one of James's or Clara's performances that they would go out together. Abe, in particular, insisted on this practice. He joked that they needed to go to wash off the pomp and snobbery with a draught or two of proper English ale. After the show ended, Cecilia asked him if they were still on to have supper.\n\n\"I think I may break with tradition today. You two don't mind do you?\" Clara had been working so hard for the last four weeks, that he thought they were overdue for some alone time. Maybe a lazy and sensual afternoon followed by a quiet dinner...<br >\n\nCecilia shook her head. James asked, \"Do you want to take the car? Cecilia and I might take a walk and grab something.\"\n\n\"I think I will. Thanks mate.\"\n\n\"We'll congratulate Clara before we set off. That was a remarkable display.\"\n\nAbe knew he was right to get Clara home when she emerged from backstage. She looked a bit worn. When she caught sight of her husband and friends though, she brightened into a smile. A few of the other girls saw Cecilia and gave her warm greetings, not having heard she was back in London.\n\nJames glowed with pride to see Cecilia's friendships renewing and blossoming. After hearing about her mother, he was determined that she should have all the experiences she'd missed out on, including close friendships. Cecilia congratulated the storm of snowflakes (for that was the role most of the corps members danced in the show) and then turned to her best friend, hugging her and complimenting her on her solo.\n\nAbe remained quiet and solid, slipping an arm around Clara's waist. He felt her slight weight rest against him, and knew that the last thing Clara needed was a night out. When the dancers turned their attention to James, realizing that Cecilia had thrown over Sebastian Echevarria for the stoic pianist, Abe saw their chance to escape.\n\n\"Come on sweetness. Watching you dance gave me a caffeine buzz. I'm taking you home.\"\n\n\"Yes Sir,\" Clara said, secretly relieved to be done.\n\n***\n\nWhen they arrived home, Abe kissed Clara nearly out of the blue. She responded immediately, but looked surprised when he broke the kiss. \"Look up,\" his deep voice rumbled.\n\nClara smiled weakly. She'd been the one to hang the mistletoe that dangled over the doorway in the hall.\n\nAbe turned serious then. \"Upstairs. Strip. You need a hot shower.\"\n\nClara looked inquiringly, but her husband pressed a finger to her lips. \"Hush. Do as I say.\"\n\nShe nodded and climbed the stairs. Abe noticed her slow ascent and how she favored one leg. Poor thing. It wasn't possible to work that hard and not be run down.\n\nHe went to the medicine cupboard to find some painkillers and filled a tall glass with water. When he entered their bedroom, Clara was already in the bathroom, waiting for the hot water to come on.\n\n\"Here, Sweetness,\" he handed Clara the glass and ibuprofen tablets, \"drink the whole glass.\"\n\nClara accepted the pills and drained the glass. Abe knew what she needed. \"Good girl, in you get.\"\n\nHe pulled off his clothing and joined her in the steaming shower. Clara stood under the hot water with her head tilted back, the spray soaking her blonde hair. She groaned.\n\n\"On a scale from one to ten, ten being complete agony, how are you feeling right now Clara?\"\n\nClara looked up and saw the seriousness written across his face. She sighed. \"Well, most of me is at a five or a six, Sir.\"\n\n\"And your feet?\" Abe nudged.\n\nClara nodded. \"They hurt.\"\n\nAbe didn't press her for a number, but knew what it took for her to admit that. \"I thought so. Come here.\" Abe hugged her under the spray, letting the warm water wash down her back and help to relax her overwrought muscles. Clara was exhausted and as Abe let go of her and started to massage a fresh bar of soap over her body, she whispered, \"Thank you, Sir.\" She let him move her almost as if she were a doll. His hands felt so good. He washed her and adored her until they ran out of hot water and Clara was kissing him fervently. He shut the water off and Clara groaned as she started shivering.\n\nAbe picked her up and she curled her legs up, eager to take the weight off her aching feet, seeking out his warmth so that Abe carried her in a tight bundle out of the bathroom. He set her down on the ottoman of his armchair, leaving her for a moment and returning with a fluffy terry-cloth robe. He held it out for her and she slipped it on, wrapping it around herself.\n\nNot nearly as cold as Clara, Abe wrapped a towel around his waist. Then he sat behind her in his armchair and used yet another towel to wring the excess water out of her hair. When she felt him untangling her knotted hair, she made to stop him. \"Oh, I can\u2014\"\n\n\"Shhh.\" Abe hushed her again. \"Let me take care of you.\" His voice was firm behind her, but his hands were gentle as he brushed the knots out of her hair.\n\nWhen he was finished she turned around and smiled. It seemed he wanted to work in silence, so she tilted her head urging him to say something.\n\n\"Do you feel any better?\"\n\nShe nodded. His attention felt heavenly. Abe stroked her cheek, pleased that she instinctively picked up on his desire for quiet.\n\n\"Up on the bed. Don't speak.\"\n\nThat was when Clara felt anxious. She made her way over to the bed.\n\nAbe suspected that Clara needed extra encouragement to look after herself. He was going to make sure she used all her recovery time today and tomorrow to the best effect. But first, he was going to reconnect with his wife. He missed her during this month of constant performances and rehearsals.\n\nHe opened one of the trundle drawers under their bed and pulled out two sets of soft leather cuffs. Clara offered her wrists to him without a word. The ease with which she gave her body over to him blew him away. He hadn't yet told her of his plans for the evening. Even though she was being very good, he could tell her curiosity was burning. So was his.\n\n\"Tell me Clara, have you been taking good care of yourself?\" Abe intended to take very good care of her tonight.\n\n\"I think so, Sir.\"\n\nAn interesting hedge. He clipped her wrists together in front of her, and pushed gently on her shoulders, guiding her to lean back against the pillows. Then he ran his hand slowly over her leg, amazed that her slight body was capable of all her dancing feats. He worried that she was too thin as he traced the contour of her calf. When he came to her feet, to wrap a cuff around her ankle his heart broke.\n\nAbe knew that all dancers' feet were covered in blisters, bruises, and other disfigurements. But Clara was his dancer. And her feet were a sickening palate of purple and yellow, blue and black. Her right foot was noticeably swollen. \"Clara!\"\n\nShe looked up at her husband, certain she was in trouble, tears welling already.\n\nAbe set the cuffs aside without a word. His jaw set tight as he gave Clara a hard stare. Anger boiled over his plans for the evening.\n\nClara thought she'd been careful. She wondered if Abe knew. So much of her body hurt.\n\nShe bit her bottom lip while Abe collected extra pillows from the linen closet.\n\nWith the look his wife gave him, Abe was certain something was wrong. He stacked the pillows under her calves, elevating her legs and feet so that they rested comfortably on the pillows.\n\nElevating her feet would help with the swelling. Clara tensed at the methodical way Abe was taking care of her. The cuffs and rope lay forgotten. He hadn't actually known how much pain she'd been in, until he saw her feet. It made him angry that she hadn't said anything. If there hadn't been visible evidence of her pain, would she have continued hiding it from him?\n\nAbe released the cuffs on Clara's wrists and left the room. She wished he'd say something, anything. There were silent tears running down her cheeks when her husband returned with an ice pack. With a grimace, he laid a dry hand towel over her right foot. Clara braced herself from the shock of the cold, but still gasped as Abraham wrapped the coldpack around her foot.\n\n\"Clara,\" she jumped when he finally spoke. She could tell he struggled to keep his voice from shaking or rising. Now that he said something, she wasn't sure she wanted him to talk. He was going to ask her.\n\n\"Clara.\" Abe needed her attention. \"I'm not convinced you've been taking very good care of yourself.\"\n\n\"S-sir, I-I-I\u2014it only just happened,\" she wasn't trying to blubber, but already she knew that her husband was disappointed.\n\n\"What only just happened, Clara?\" Abe kept his voice even.\n\n\"My foot.\" A week's worth of suffering in silence and smiling through pain broke through the dam. Clara was sobbing.\n\nAbe was stunned. He didn't know the extent yet, but Clara had been letting her body take abuse for her art. It was something he'd lectured her on when they first got together. He thought that he'd impressed on her how important it was to be careful with her body. But looking at her break down before he could even respond, he could tell there was more.\n\n\"Tell me. Now.\" The tone of his voice was hard and gravelly.\n\nClara just buried her face in her hands, inconsolable. Abe ignored his confused feelings to comfort his wife. The bed dipped where Abraham sat next to her. He didn't speak, but leaned in to hug her into his big chest.\n\n\"I'm afraid. I'm so, so, so, afraid. So afraid,\" she sobbed.\n\nThat tugged all of his heartstrings. \"Clara?\" his voice gentled, \"What are you afraid of?\"\n\nClara gasped for breath, her small chest rising and falling rapidly. \"That I won't dance again,\" came out in a rush. The rest of the sentence was drowned by more tears.\n\n\"Clara. Breathe. Listen to me and be good. Be a good girl for me. Can you do that?\"\n\nShe nodded her head and Abe moved in closer, cradling the back of her head with his huge hand. \"Breathe with me. Slow. Breathe in. Breathe out. No. That's too fast. Slower. Slow it down. In... Out...\"\n\nIt took several minutes of coaxing before Abe got her breathing to calm down. He handed her a bottle of water. There was no way they were going to have the evening he'd planned in his head. Abe's plans for the evening had involved rope and cuffs\u2014that was out of the question with Clara in this condition. Abe still didn't know what to say so he started to put away the aforementioned items.\n\nWhen Clara saw what he was doing, she started crying again. She'd spoiled their evening together. Her body had failed them both.\n\nAbe didn't understand what set her off again. \"Clara, what is it?\"\n\nHis submissive started begging. \"No please. Please! Please Sir! I need you to tie me up. I'm sorry for disappointing you. I didn't mean to. I've failed. I've failed. Please tie me up. Please. I need it. I need you to punish me.\"\n\nAbe stopped and stepped back. \"Clara! Stop it. I'm not punishing you. You're hurt.\"\n\n\"No. No! I need you to. You have to.\"\n\n\"Clara, I'll determine that. You need rest and medical attention.\"\n\n\"But I failed you. I did. You need to punish me.\"\n\nAbe still didn't know the full extent of what was wrong. \"Why do I need to punish you, Clara?\"\n\nShe dissolved into pleas again. \"Clara, talk to me. I'm not going to punish you for being hurt.\"\n\nIt took several minutes for Clara to calm enough to explain.\n\n\"I didn't want to risk loosing my place. It was going so well.\" Clara paused to take a gasping breath. \"I think I hurt it during Streetcar . . .\"\n\nAbe had to school his face to neutrality.\n\n\"It wasn't terrible at first, but then it was a shooting pain. I had to finish the run of the show. You know what a big deal that was. If I keep it up like this, they'll make me principal . . . \"\n\nAbe thought it was best to say nothing, now that Clara was coherent.\n\n\"We had a break after Steetcar and the pain went down. A lot. I thought it would be fine. But, with all the work and shows for Nutcracker . . . Oh Abe! I'm sorry. I'm sorry. I didn't- I didn't want to tell you until we were done the run of this show.\"\n\n\"Clara, how bad is it?\" Abe had a feeling it was bad.\n\nShe dissolved into tears again. Her litany of 'so so afraid, so afraid' was all that came out.\n\nAbe had enough and picked up his phone. \"Yes, hello. Doctor Kessler? Yes, it's me. Fine. It's my wife, actually. I think she broke her foot.\"\n\nAt that, Clara's sobs grew louder.\n\nAbe stepped back a bit, so he could hear the doctor. \"Yes. Very swollen. She's a dancer, you remember.\" A pause. \"Alright. We'll see you first thing in the morning then.\"\n\nHe hung up and sat back next to Clara. \"Clara, I need you to listen to me. We're doing everything right for your foot. You need to keep it elevated and iced. If it hurts, you can have another ibuprofen. The doctor will see you first thing in the morning and we'll see how bad it is. Okay? Clara?\"\n\n\"Y-y-y-yes S-s-s-sir.\" Clara feared she'd never dance again.\n\n\"Have a drink of water, Clara.\" With shaking hands, she obeyed.\n\nNow that Abe had her attention, he wanted more answers. \"Be brave for me. Is there anything else hurting?\"\n\n\"It was just that foot. I thought I felt something give yesterday. It hurt so, so, much. But then it went numb.\"\n\nAbe didn't know how she'd had the stomach to dance today. \"Clara, what about today? Didn't it hurt today?\"\n\n\"I wrapped it up and compensated with my other foot. Everyone's a little worse for wear right now. No one noticed. Or if they did, no one said anything.\"\n\nThis was bad. Abraham was outraged. \"You know if you kept that up you could damage your left foot too. You're smarter than that, Clara.\"\n\n\"I thought if I could get through the last performances that I'd have enough time to rest it before we returned for the rest of the season. I thought it was just a sprain.\"\n\nAbe didn't respond to that flimsy excuse. He cast a careful eye over her and voiced his other nagging worry. \"Clara, are you eating?\"\n\nHe remembered when Clara tried to go off meat early in their relationship. That had been the first time he realized what Clara and other girls were willing to endure for the sake of their dancing careers.\n\nClara sniffled. He knew. \"I am. Honestly, Sir.\"\n\n\"And are you eating complete meals?\" He controlled his voice, but on the inside, Abe wasn't sure what to do, or if he wanted to know.\n\nAbe noticed the paleness that Clara had been hiding behind cosmetics and blush. She had lost weight. When she didn't answer him, Abe fumed.\n\nClara ran out of tears and now her mouth was dry. She took another pull of water. \"All the other girls who eat a vegetarian diet\u2014\"\n\nAbe got up and stalked the room. This was very bad.\n\n\"All the other girls who don't eat properly are idiots Clara! Maybe they have a nutritionist, but you've done that before. You lose weight too easily. You can't treat yourself like this Clara. You can't punish your body day in and day out at class, and rehearsal, and cross training, and then not eat properly! How long did you think you could keep that up!? You've been rehearsing and dancing so much that I haven't seen your diet change. How long has this been going on?\"\n\n\"Since I got the lead in Streetcar,\" Clara whispered.\n\nAbe was reeling. He'd seen her eat meat in that time. \"Are you lying to me? I've seen you eat meat. You ate dinners with meat with us.\"\n\n\"I ate meat when I couldn't avoid it.\"\n\nDid his wife have an eating disorder?\n\n\"And when you could?\"\n\n\"When I could, I just ate veggies.\" Clara hung her head.\n\n\"Clara,\" he took a steadying breath for himself, \"were you skipping meals?\"\n\nThat question hammered home the severity of her foolishness.\n\n\"No. No, Sir. I promise. I swear it.\" She reached out for her husband's hand begging him to believe her.\n\n\"Are you certain, Clara?\"\n\n\"I promise. I never have.\"\n\nAbe wanted to believe her. He didn't want to her to have such a serious condition, but after the subterfuge about her foot, he was worried her dancing ambition would take her from him.\n\n\"Have you eaten today?\"\n\n\"I have. I had some yoghurt and fruit just before the show.\"\n\n\"Yoghurt and fruit?\" he asked incredulously.\n\n\"I can't dance on a full stomach. You don't go to gym right after you eat a heavy meal.\"\n\nAbe ignored the smug look Clara wore after scoring the small point. \"Before we do or say any more, you're eating.\"\n\nShe knew better than to fight him. She was in deep. \"Yes Sir.\"\n\nAbe set off down stairs.\n\nClara. His Clara. He could stand to watch her dance in front of countless people. Her performance tonight was overtly sexual. He wasn't an idiot; any red-blooded man would watch Clara dance and desire her, but he didn't let that bother him. He didn't care about her dancing with other attractive dancers. Even when he didn't appreciate the violence or eroticism inherent in some of the company's repertoire, he was able to support Clara.\n\nShe promised him long ago that she'd never let the competitiveness of her world take a hold in such a way as to do damage to herself. It was the only thing that gave him reservations when he started falling in love with Clara.",
        "His hands shook as he pulled a leftover curry out of the fridge and heated it up. If she'd been eating poorly, her body wouldn't be able to recover from all the work she did. The pain ballerinas endured . . . but her feet always looked pretty bad.\n\nAbe carried the food on a tray upstairs. He set it down in front of Clara. When she started to feed herself, Abe sat in his armchair, observing his wife and worrying about her looming recovery. A broken foot was a bad diagnosis for a ballerina.\n\n\"Clara, tell me why. Why wouldn't you get your foot looked at?\"\n\nNow that she had to say it aloud, Clara felt the folly and futility. \"I got my chance, my big break with Alice, because another dancer got hurt. Then they cast me in a lead role for Streetcar. I was afraid if I had to sit out, the directors would replace me too, and I'd never get another chance again. They didn't give me the part I wanted in the Nutcracker. I was worried they'd already grown tired of me. Coffee isn't especially difficult.\"\n\nAbe couldn't wrap his head around ballet company politics. Clara's part seemed plenty difficult enough to him. It was incredible what his wife, his willing submissive, achieved with her body. \"Clara, what part did you want?\" He was curious in spite of his anger.\n\n\"Dew Drop, in the Waltz of the Flowers.\"\n\nThat meant nothing to Abe. Maybe he'd ask James later.\n\n\"You're very mad at me.\" Clara whispered.\n\n\"I am.\" His answer made her cower. \"You made an injury worse because the part they gave you wasn't hard enough?\"\n\n\"What are you going to do?\" Clara wanted him to punish her. If he punished her, then she could be forgiven and they could move on.\n\nAbe didn't have the patience for this right now. He never expected Clara's masochistic streak to show itself like this. She was in no condition to play games. A spanking wasn't going to solve this problem anyway. His voice came out hard. \"You're going to the doctor tomorrow. And whatever he says, you're going to listen.\"\n\nClara opened her mouth to plead her case, but Abe would not be deterred. \"I mean it Clara. If Dr. Kessler says you aren't to dance for a year, you're going to heed his advice.\"\n\nClara hung her head and picked at the remainders of her food. She didn't have anything further to say. She watched helplessly as her husband cleared the tray and left her in bed. \"Get some rest, Clara.\"\n\n***\n\nAbraham was sitting in the den not paying attention to the football game on the telly, when she heard the front door open. Cecilia's bell-like laughter carried through the house, heralding her and James's return. Good. He needed James right now.\n\nCecilia walked in with James behind her. \"Where's Clara?\"\n\n\"She's resting.\"\n\nJames glanced at his friend and knew something was off. \"Cecilia, I need to speak with Abe. Go upstairs and wait for me.\"\n\nCecilia nodded and obeyed. James turned to Abe.\n\n\"You look like someone stole your puppy, mate.\"\n\nSilence.\n\n\"What's wrong?\"\n\nAbe didn't know where to start, and James fell into cross-examination mode to try and understand. He thought that Abe and Clara would be ensconced in their room for the night or out for a quiet dinner. It wasn't that late.\n\n\"Abe, did you and Clara have an argument?\"\n\n\"Not as such.\"\n\n\"I didn't think we'd see you two until tomorrow.\"\n\n\"She's not well.\"\n\n\"I'm not surprised she came down with something. Flu?\"\n\nAbe didn't like being peppered with questions when it came down to it. \"I have to take her to Dr. Kessler's surgery in the morning. I think she broke her foot.\"\n\n\"What? What happened?\" Clara had been fine just a couple hours ago. James fished the decanter out from behind a copy of L'Morte D'Artur and poured a finger of brandy into two glasses.\n\n\"The promotion at the company happened! The ruddy ballet happened! She's been dancing on broken feet!\"\n\nJames frowned. He couldn't imagine such agony. Abe continued: \"She injured her foot . . . and then she tried to cover it up. She wouldn't have told me if I hadn't seen when I was . . . well, anyway.\"\n\nJames gave him a half grimace. \"Are you sure they're broken? Not to trivialize, but Clara's feet always take a beating. They usually look a bit . . . colorful.\"\n\n\"At least the one is definitely broken, so far as I can tell. When I asked her about it she broke down and started crying about how she's afraid she won't dance again.\"\n\n\"Surely, it's not that bad?<br >\n\n\"I wouldn't know. But right now, I want to tell her she's to quit the company.\"\n\n\"You can't do that, Abe.\" James worried Abe would do something he'd regret.\n\n\"Damn it, James! I know! But I want to. While Clara's worried about dancing, I'm concerned she'll hurt herself beyond repair. They don't encourage dancers to rest or take care of themselves. They push them and run them ragged and then if someone gets hurt, it's just an opportunity for someone else. Clara's up there in tears and pain because of a bunch of petty girls and flamboyant snobs. It's getting into her head. She stopped eating meat and she's lost weight. She got it into her head that they didn't like her dancing anymore. I love her, but she doesn't look healthy . . . James . . .\" Abe didn't dare ask the question most on his mind.\n\nJames sighed. Whatever he thought was wrong with his best mate, he hadn't been prepared for this. \"Abe I'm sorry. I don't know. You're sure about her skipping meals?\"\n\n\"She says she hasn't. I don't believe her though. And I hate that. I hate that I don't believe my wife because of what that world is like. I thought I could anchor her and she could withstand all of the pressure.\" Abe felt like a failure.\n\n\"Is there anything I can do?\" James was at a loss and worried for his friends. What was going on with Clara was beyond him. His mobile buzzed, distracting him.\n\nAbe shook his head. \"I guess we'll know more tomorrow.\"\n\nJames glanced up from his phone looking troubled. \"Let me know if there is something I can do.\"\n\n\"Right then. 'Night James.\"\n\n***\n\nAbe woke early in the morning on the sofa in the den. He slept there last night because he hoped Clara was sleeping and he didn't want to disturb her. But that was only part of it. His anger hadn't yet subsided. He'd told the doctor they'd be in first thing, but it was so early it was still dark out.\n\nHe made himself a fortifying cup of tea and scrambled some eggs. He would watch Clara eat before they set out for the surgery.\n\nWhen he went up for a shower, he was glad to hear Clara's breathing was deep and even. At least she'd gotten some sleep. He showered and changed. Clara was awake when he emerged.\n\n\"I made you some breakfast. Eat and then we can get ready to go.\"\n\nClara could feel his anger, even though he looked calm. \"Yes Sir.\"\n\nShe pulled on some yoga pants and a company sweatshirt. When it came time to put on some shoes though, Abe intervened. \"I'll carry you down. Your right foot is so swollen I don't know how you were wearing shoes.\"\n\nHe scooped her up and carried her down to the car. The drive was quiet and Clara was too miserable and anxious to try to break the heavy silence.\n\nAbe carried her into the doctor's surgery. After the paperwork was settled, they were ushered into an examination room. Abe set her down. \"Be honest with the doctor. Tell him everything.\"\n\nClara was saved from answering when Dr. Kessler walked in.\n\n***\n\nSeveral hours and an x-ray later, it was confirmed. Clara had a nasty fracture in her right foot and was developing stress fractures in her left. That was bad enough, but there was more. Abe pushed her to mention her eating habits, which meant the doctor wanted to do blood work.\n\nThe results showed a vitamin deficiency and iron deficiency. Abe's face remained stoic. The doctor proceeded to lecture her about eating properly. He didn't recommend a vegetarian diet for someone as physically active as Clara, but insisted if she was going to try it, that she see a nutritionist. Leaving out meat and eating too lightly could have weakened her body and slowed its ability to repair itself.\n\nThen the doctor said what she was most afraid of hearing: \"You should stay off your feet entirely for at least two weeks and wait another two months before you even consider dancing. You'll need to brace your foot and walk in a boot with crutches.\" Clara started crying again, and so Dr. Kessler relayed the rest of her recovery schedule to her husband. He also referred Clara to a nutritionist who specialized in professional athletes.\n\nEight to twelve weeks. Over two months with no dancing. She had to do physical therapy, too. They'd kick her out of the company. Clara cried while Abe drove them home through the drizzly fog.\n\nJames told Cecilia about Clara's injuries. Cecilia was appalled that her friend was in so much pain. She applied herself to trying to return her friend's kindness. After all, Clara had worked a miracle by helping Cecilia to recover. Chicken and mushroom soup wafted through the townhouse.\n\nThe front door opened, and Abe inhaled appreciatively. Soup was exactly what today called for. Clara still hadn't said anything since the doctor told her she wouldn't be able to dance for over a month. She was numb as Abe carried her into the kitchen.\n\n\"How was it?\" James asked kindly as Abe deposited his wife in a chair at the table.\n\nClara's voice was raw from crying. She tried to play it off. \"Not great. Both my feet are aren't in great shape.\"\n\nAbe cut in sharply, \"The doctor said if she continued to dance, she would've broken the other one too.\"\n\n\"Broken?! How long until it's better, Clara?\" Cecilia immediately regretted her question. Abe scowled and Clara looked ready to burst into fresh tears.\n\n\"It looks like it'll be six to eight weeks before she can walk on her own.\" Abraham answered for her with a sigh. \"Cecilia, that smells great. Is it ready yet?\"\n\n\"We were just waiting for you. I'll get you a bowl.\"\n\nJames didn't like to see his friends so strained. He didn't know them to fight, and he couldn't remember the last time Abe was this moody. He could tell that the gulf between the two was deep. It could take longer to heal the rift between them, than it took Clara's feet to mend.\n\n***\n\nAfter supper and watching a movie, James and Cecilia went upstairs, leaving Abraham and Clara alone.\n\n\"Why is Abe so upset?\" Cecilia asked, relieved to get away from the tension.\n\nJames wondered if she would notice. \"Because he's worried that Clara will do permanent damage to herself. Dancers are notoriously bad at paying attention to aches and pains. You've seen dancers' feet, haven't you? Abe doesn't want Clara to be another ballerina with crippled feet and an eating disorder.\"\n\n\"What? I've seen Clara eat. She doesn't have an eating disorder!\" Cecilia rushed to defend her friend.\n\n\"We don't know that right now.\" James said sadly. \"These things can be insidious. Let's pray Abe is overreacting.\"\n\nCecilia nodded and climbed into bed. \"I've seen movies and heard stories, but I guess I never thought it all applied to Clara. Is there something I should have noticed?\"\n\nJames loved how Cecilia considered others. \"I don't think we were meant to notice. She was hiding it very well. Clara's world is filled with this sort of thing. That's what makes it so difficult to detect. With so many talented girls injured, and so many dancers eating poorly . . . sometimes it seems as if the healthy ones are the anomaly.\"\n\n\"Is there anything I can do?\"\n\n\"There may be. We'll see. Cecilia?\"\n\n\"Yes Sir?\" she answered, alert and ready for whatever he might ask.\n\n\"I expect you to take care of yourself. I know you don't push your body like Clara does, but if ever you're hurt, then I want to know. It's important to me.\"\n\n\"Yes Sir.\"\n\n\"Good girl.\"\n\nMaybe it made James paranoid, but as he put his mobile on 'do not disturb' his imagination supplied him with visions of an emaciated and physically broken Cecilia. He felt as though an iron fist seized his stomach at the thought and didn't envy what his best friend was going through.\n\n\"I have a surprise for you tomorrow.\" James said, changing the subject.\n\n\"Oh?! What is it?\"\n\n\"You don't honestly expect me to tell you, do you?\"\n\n\"Well Sir, I had to try.\"\n\n\"Well, good try. You'll see tomorrow. Until then, come here. I know you've got to be cold.\"\n\nCecilia smiled and snuggled closer to James as he turned out the lights.\n\n***<br >\n\nCecilia woke with James's arm draped over her waist. It wasn't often she rose before him, and she enjoyed his unguarded countenance and peaceful repose. The sheet pulled down in the night, and he was bare-chested. She enjoyed the play of skin against skin, but wondered: What can I possibly give you for Christmas when you have made all my dreams and desires real?\n\nHis answer about a present the other day hadn't been remotely helpful. With only a few days left, Cecilia was desperate, but no closer to puzzling out an acceptable gift.\n\nJames woke to Cecilia stroking his thick, straw-colored hair. Her nails massaged his scalp and he wondered if he should feign sleep so as to prolong the pleasure. He smiled and stretched. \"What are you thinking about, little fox?\"\n\nHis question broke her out of a daze. \"Nothing much, Sir.\"\n\n\"Wondering about that surprise I mentioned?\" he teased.\n\n\"Are you going to tell me?\" she asked hopefully.\n\n\"Not yet.\"\n\nCecilia hopped out of bed. \"I suppose I'll go make some tea then.\"\n\n\"I'll be down in a bit,\" said James, chagrined by the loss of her presence in his bed.\n\n***\n\nClara had been up for hours. She begged Abe to let her sleep down here, insisting that he get rest in their bed. In fact, the couch was better for keeping her feet elevated. She just hadn't been prepared for him to leave for work without saying goodbye. She still felt numb. He hadn't said much of anything to her and his silence was haunting. Dinner last night had been tense. She was the one who was hurt. So why was he the one who was so angry?\n\nCecilia started making some tea, and was startled when Clara called out, \"Is that you Cecilia?\"\n\n\"Clara! Sorry. What are you doing down here?\"<br ><br >\"It was easier then getting up the stairs.\"\n\n\"Let me get you a cup of tea and some breakfast.\"\n\n\"You don't have to bother on my account.\"\n\n\"Don't worry. I was already making some for myself. Besides, you were so good to me when I was recovering.\" Cecilia silently wondered if James was right about Clara's eating habits. Cecilia made tea and toasted some bread, bringing a tray over to Clara.\n\n\"Thank you.\"\n\n\"So have you told everyone about your feet?\"<br >\n\nClara took a sip and nodded. \"I called the company yesterday.\"\n\n\"What did they say?\"\n\n\"Just to take the time to recover. Leah\u2014that's the dance mistress\u2014told me that when I was able to, to come and take physical therapy. We have a physical therapist who works just for the company . . . Meanwhile, they brought an understudy up from the corps to take over the remaining shows, and are letting one of the students fill in as a snowflake for her . . . so at least the show will go on.\" Clara sounded bitter.\n\n\"At least now you'll get to have Christmas Eve and Christmas day with us.\"\n\n\"I suppose so. Now that I've ruined everything . . .\"\n\n\"That's not true. You can't help that you got hurt.\"\n\n\"Maybe not. But my husband's acting like it's my fault. You should have seen him.\"\n\nCecilia just leaned over and gave her hug. \"He's just worried about you. We all are. But I see you're eating. So that's good.\" Maybe James and Abe were wrong about this eating disorder business.\n\n\"Is everyone monitoring my eating?\" Clara's question was tinged with outrage.\n\n\"Clara, I-I don't\u2014\" Cecilia had never seen Clara upset before.\n\n\"'At least you're eating!' Why did you say that?\"\n\n\"James told me that Abe said\u2014\"\n\n\"I'm fine. Everyone is overreacting!\"\n\n\"I didn't mean to make you upset.\" Cecilia apologized.\n\n\"Morning Clara. I thought you'd be resting still.\" James came in and poured himself some tea.\n\n\"I fell asleep early last night.\"\n\nJames nodded, detecting that he'd interrupted a heated conversation. \"I'm going to take my toast up to the studio and then I have a few errands to run. Cecilia, can you be ready to go out around two?\"\n\n\"Is this the surprise you mentioned?\" Cecilia asked eagerly.\n\n\"It might be.\" James said enigmatically. \"Just be ready. Nothing too formal, but definitely smart.\" Without saying anything more, he took his leave.\n\n\"That's mysterious,\" Clara said, relieved to change the subject.\n\n\"I have no idea what he's on about. But it makes me nervous. I still haven't found anything right to give him. You're sure you don't have any ideas?\"\n\nThe awkward conversation about Clara's health behind, them they fell into easy conversation again. \"No. But maybe if you go to the shops you'll see something that strikes your fancy.\"\n\n\"I don't suppose you're well enough to come with me?\" Cecilia still wasn't sure about venturing out by herself.\n\n\"If anyone catches me on my feet I'll be in even more trouble.\"\n\n\"Right. Maybe today's the day I try it myself.\"\n\nClara sighed. \"Sorry I got mad. I'm not feeling very festive. I just wish I could make Abraham relax about everything. That's all I want this year.\"\n\nCecilia gave her a hug. \"I'm sure it'll work out. He loves you.\"\n\n\"I know. Go and find something for James. Don't let my gloominess get in the way.\"\n\n\"Thanks Clara. Will you be okay?\"\n\n\"I'll be fine for a few hours. Just a bit bored. I guess I'm about to see what's new on Netflix.\"\n\n***\n\nCecilia was lost in thought about her friend, but as she walked through the posh streets with Christmas decorations, she felt her spirits lift.\n\nShe didn't like to think about the strain between Abe and Clara. They were so stable that Cecilia couldn't help but feel uncertain about her own relationship.\n\nCecilia kept wondering at James's light touch when it came to rules and protocol. It was so different from what she thought he wanted. He gave her so much freedom. Even as she walked down the London street unaccompanied, she shivered.\n\nSo many shops were selling things that didn't make sense for James. He had fine clothes already. Unlike Abe, James didn't go for the newest gadgets. Also, she didn't have very much money.\n\nJames gave her a debit card to his bank account, but she couldn't very well buy him a present with his own money. Her own bank account, from her old life, hadn't been replenished in over a year. True, she didn't have to pay for rent or food, because James took care of her, but after all he'd done for her, she wanted to give him something.\n\nShe wandered into a stationary shop, admiring the pens and inkwells arrayed in neat rows. She didn't see shops like these in Philadelphia. Americans didn't much care for this sort of thing. Perhaps one of those pens... she'd seen James use a fountain pen before...\n\nA shop attendant came over and asked if there was anything she wanted to see. He was older with greying hair and distinguished.\n\n\"That hunter green one there?\" Cecilia pointed to a gleaming fountain pen.\n\n\"Ah, the Pelikan! You must be real calligraphy enthusiast,\" the shopkeeper complimented her.\n\n\"Oh, well...\" Cecilia didn't know what to say. She didn't know the first thing about this. The man handed her the pen. It was heavy. He pushed a piece of blank paper towards her. \"Go on and get a feel for it. Is this a gift?\"\n\n\"It is.\" She wrote her signature on the rich paper. Oh... she liked the way it felt. Very old-world. It reminded her of James.\n\nThe man nodded, happy to see such a young woman appreciate his wares. \"I like this.\"\n\n\"Wonderful. Shall I wrap it for you while you browse?\"\n\nCecilia wasn't used to this sort of service. \"Um, well, how much is it?\"\n\n\"770\u00a3, miss. But for you, since it's a Christmas present, 650\u00a3.\"",
        "Cecilia tried to hide her surprise. She couldn't justify that. She had no idea that a pen could be so expensive. She was embarrassed that she couldn't afford it.\n\nWithout skipping a beat, the older gentleman narrowed his eyes and moved to a different display case. He gave Cecilia a small smile. \"This is the same maker. You might find it a bit more practical.\"\n\nHe handed her a blue and black pen trimmed in silver. It was still quite heavy. She unscrewed the cap and tried it out, this time writing James's name on the test paper. Before she could say anything, the man nodded. \"Yes. That one is 250\u00a3. But for someone with your taste, I can give it to you for 200\u00a3.\"\n\nCecilia was relieved. The man hadn't made her feel small or humiliated. \"Yes, I think that's very nice.\" She had no idea what made one pen so much more expensive than the other, but this one felt just fine to her. It was still very expensive, but after all James had done for her . . . she couldn't begin to explain it all . . .\n\n\"Would you care to see anything else, miss?\"\n\nShe perused the shop with mild trepidation. The shelves lined with blank notebooks seemed to prickle with energy. Blank notebooks held so much potential after all. She thought ruefully of the last blank notebook she tried to fill... the one she was supposed to write for Dr. Shirz. It ended up being half-filled with confessions of her unfulfilled feelings for James. Part of her wanted a new notebook for herself, but she reminded herself that this shopping excursion wasn't about her.\n\nHer hand traced a scarlet leather-bound notebook. The smell reminded her faintly of James and a faint wave of arousal swept over her. The shopkeeper was back, and Cecilia blushed as she gathered her thoughts.\n\n\"We can personalize most of the notebooks here with initials, miss.\"\n\nCecilia kept thinking that this was more of a gift for her than for James. She wanted to be a writer, but James wasn't . . . or was he?\n\n\"You wouldn't happen to have a book of blank music paper? Would you?\"\n\n\"Oh, do you mean staff paper?\"\n\n\"I-I-I'm not sure.\"\n\n\"We don't have a lot of variety. But what about this?\"\n\nHe handed her a leather-bound book that looked like a small version of an old ledger. She unwound the leather thong that kept the book closed, and when the book opened, she saw the lines of blank sheet music just waiting to be filled. It was just right. She checked the back cover, bracing herself for another exorbitant price tag. To her pleasant surprise, it was reasonable, all things considered.\n\n\"This is perfect. Thank you.\"\n\n\"What initials shall we use?\"\n\n\"I'm sorry, I don't understand.\"\n\n\"Is it a gift as well? We can emboss the leather with his initials.\"\n\n\"Oh! 'J.M.A.' are his initials.\" He knew she was buying this for a man, and she wondered if she looked obviously smitten.\n\n\"Very good. We can have it done while you wait, or you can come back and pick it up. It won't be longer than twenty minutes.\"\n\nCecilia chose a bold, masculine font and waited for her purchase.\n\nCecilia walked into the townhouse clutching a few shopping bags. In addition to finding her gifts for James at the stationary shop, she'd also found him a few other things. She also picked up a novel for Clara that she mentioned she's wanted to read, as well as a new warm-up jacket for her to use in chilly rehearsal spaces. Abe had been almost as tricky as James, but Cecilia settled on scarf embroidered with his favorite football team's emblem.\n\nShe didn't have much time to hide her presents and get ready, but at least she beat James home. She stashed the unwrapped presents in the guest room and hurried to change.\n\nWhen James came in, Cecilia was running a brush through her long hair. He smiled. It was unspeakably lovely for this to be his new normal. \"I always thought you looked rather fetching in that.\"\n\n\"Thank you, Sir.\" Cecilia tossed her hair back and grinned. She was wearing the grey merino wool dress she'd worn in James's studio all those months ago. \"That was the idea. I'm glad I wasn't wrong.\"\n\nJames changed into a white button-down shirt and put on a handsome tweed jacket. \"You were right about everything that day.\" James said, referring to her seduction in his studio before he'd reconciled himself to his feelings. \"Are you nearly ready? We have a train to catch.\"\n\n\"Oh! Where are we going?\"\n\n\"Never mind that, we need to get to the station first.\"\n\n\"Is this okay?\" Cecilia asked, indicating her dress.\n\n\"You look lovely.\"\n\n\"Won't you give me a hint?\" Cecilia pleaded as they made their way downstairs.\n\nJames just smiled and hummed, enjoying her playful enthusiasm. He offered her his arm as they walked to the car.\n\nCecilia wished she knew where they were going, but her preoccupation with their destination was momentarily forgotten after they parked and navigated their way through King's Cross Station.\n\nJames stopped at a ticket window to purchase tickets. \"Yes, two round trip tickets to Cambridge Station please.\" He glanced at Cecilia, who didn't register the significance of their destination.\n\nThey wove through crowds of tourists and commuters, James oddly quiet. He hoped she would like his surprise. He'd planned their journey well; they didn't have a long wait.\n\nAfter they boarded, Cecilia was practically bursting with curiosity. \"Please, please tell me?\"\n\nThis game was too much fun now. \"We're headed to Cambridge Station.\"\n\n\"Yes, but then what?\" The train pulled away from the platform and soon buildings streaked past the windows.\n\n\"You'll have to see. But it's a very beautiful city. I think you'll like it. London is old but it's got such a modern and international streak running through it. Cambridge is English through and through.\"\n\nJames put an arm around her and deflected guesses and questioning for the train ride. He'd always wanted to do this.\n\n***\n\nAn hour later they were in Cambridge. Cecilia had just about given up, impressed, and yet not surprised, by James's resolve to keep his secret.\n\n\"We're almost there now. Just a quick walk.\"\n\nJames was right. This did feel old. Some areas of the street still had exposed cobblestone, and even though the buildings weren't overly tall, the stone made them feel heavy. It was pretty enough, but Cecilia still didn't understand why they were here.\n\nJames led the way from the station and Cecilia took his proffered arm as they walked. Lots of other pedestrians were walking in the same direction. More than a few well-dressed couples were also arm-in-arm. Clusters of families, all apparently dressed in their Sunday best also walked, the parents urging the children to be on their best behavior. Cecilia wondered where they all were all headed.\n\n\"Cecilia, it shouldn't come up, but if anyone asks, don't mention I went to Oxford.\"\n\n\"Sorry, what? I don't understand.\"\n\n\"We're headed towards Cambridge.\"\n\n\"Aren't we already in Cambridge?\"\n\n\"The university.\"\n\n\"Oh! But why--? Oh! Oxford and Cambridge are rivals?\"\n\n\"You might say that.\"\n\n<br >\"Why aren't we visiting your college? Oh!\" They rounded a corner and got a full view of the King's College Chapel. Cecilia stopped in her tracks.\n\n\"Beautiful, isn't it?\"\n\nThe Chapel's lawns were wide and covered in a thin blanket of snow. The recent snowfall accentuated the rows of spires, steeples, and buttresses. Naked trees and a cloudless winter sky gave the whole scene an austere beauty that absorbed all of Cecilia's attention. There was nothing even remotely similar to this in America.\n\nJames watched her take in the sight, seeing this old place through fresh eyes. \"That is King's College Chapel. That's where we're going.\"\n\nMore and more people flocked to the building. \"You call that a 'chapel?' It's bigger than my church growing up.\"\n\n\"I suppose it's a bit of an understatement. Have you figured out your surprise yet?\"\n\nCecilia shook her head. \"I haven't.\"\n\n\"We're at King's College Chapel to hear the King's College Choir. I got us tickets to hear the carols.\"\n\nCecilia raised her eyebrows. \"Like on the CD's at home?\"\n\n\"The very same. But they aren't forgiving about latecomers. We should get in and take our seats.\"\n\nThe walked the rest of the way to the chapel. The mystery of their destination finally solved, Cecilia was presented with another puzzle. Sure, the music they listened to at home while decorating the Christmas tree was lovely, but the way James told her about it, made it seem like she was missing something.\n\nThey approached the door and James handed their tickets to an usher. Cecilia didn't have to wonder long about James's excitement. She thought she understood more as they entered the chapel.\n\nThe vaulted ceiling's elaborate carvings that had a kaleidoscopic feel. The tall stained glass windows added to the effect. The sounds of ladies' shoes echoed off the black and white marble floors. The chapel was cavernous, but seating appeared extremely limited.\n\nThey found their seats and Cecilia continued to take in the ancient building. Further down the center aisle the gilt pipe organ towered over the choir. Everyone was speaking in hushed tones, the acoustics of the room made the chatter seem holy.\n\nJames had never been able to take anyone here. He'd made a pilgrimage to Cambridge to hear this choir a few times on his own, but to be able to bring someone with him was its own joy. Maybe this was actually more of a gift to himself than to Cecilia, but he didn't want to waste the opportunity. He tapped her elbow, and she tore her eyes away from the ceiling.\n\nJames handed her a program. \"They'll be starting soon.\"\n\nThe program listed several carols Cecilia recognized and a few she wasn't familiar with. A hush fell on the Chapel and the lights dimmed. A single voice rang out singing \"Once in Royal David's City.\"\n\nCecilia looked at the choir, trying to determine who was singing the solo. It was a high and clear voice and Cecilia scanned the 30 odd choir members. She gasped when she realized it wasn't a female soprano but a boy around 10. His young voice filled the giant space with an ethereal calm and reverence.\n\nChristmas songs that Cecilia had known\u2014or thought she'd known\u2014her whole life, were transformed. It was voices as she'd never imagined they could be. The depth of the men and the airiness of the boys wanted to shake the foundations of the ancient building. One boy's hair was definitely sticking up in the back, another boy was tugging at his tie impatiently, but these youthful boys were producing an otherworldly sound.\n\nThen the organ came in. Cecilia never particularly cared for organ when she was growing up, but the imposing size and sheer strength of its tones gave the instrument new context.\n\nJames, too, was swept away in the lush textures the choir created. His godfather introduced him to the choir when he was young. Everyone he'd ever dated had tolerated his musical obsessions. No one had yet shared them.\n\nThe Rutter tune, \"What sweeter music?\" was what did it though. Cecilia closed her eyes and squeezed James's hand in her own. This wasn't a trained physical reaction resulting from a certain stimulus. Cecilia smiled and felt the music almost as if it were part of her breathing. She couldn't recall hearing something that made her heart feel this happy. Pure. Lots of music had touched Cecilia, but this was the first time music had bypassed her body and gone directly to her soul.\n\nJames noticed the tear tracks on her cheeks. He reached an arm around her and pulled her close. He hoped she wasn't too upset. Since bringing her back to England, James carried the worry of triggering anxiety or stress in Cecilia.\n\nWhen the song ended, Cecilia gracefully brushed away her tears, sad only that it was over. She looked to James and could tell he was concerned. He frequently looked at her like that. She hoped her smile was reassuring. She paid special attention to her program she wanted to make sure she remembered the name of the song.\n\nThe choir sang a few more carols that Cecilia knew, but the arrangements were unfathomable to her. How had they turned a Christmas song that she'd known her whole life into something transcendent and powerful?\n\nThe concert finished. Unlike other performances Cecilia had attended, the audience left as quietly as possible, reverence hung in the air of the chapel.\n\nIt was dark already outside. Cecilia gasped with unhidden glee. It was snowing. The glowing lamplights gave the impression of small snow globes. The snowflakes already clung to her hair and James, no long able to contain his happiness, swept Cecilia in his arms and spun her around, enjoying the different music of her surprised laughter. He set her down to kiss her.\n\nCecilia expected James to say something after he kissed her. He closed his eyes and took a deep breath. \"What's wrong?\"\n\nHe opened his eyes and smiled. \"Literally, nothing. This is perfect and I just want to make sure I remember everything about it.\"\n\nShe hugged him then, giving him a tight embrace through their layers of sweaters and topcoats. \"Me too.\"\n\nThey must have made an overly-sentimental picture there, a couple so obviously infatuated and publically displaying it in Cambridge, of all places. James didn't care. He wanted to wander the ancient city. He was formulating a plan in his head when he noticed Cecilia shivering.\n\n\"What time is it?\" she asked.\n\n\"It's only half-past seven. It feels much later. Want to have dinner here? Or should we head back to London for a late supper?\"\n\n\"I don't know. Do you have a favorite place?\"\n\n\"I know there are a few decent eateries down on Guidehall Street. Are you warm enough for a walk to see what we can find?\"\n\nIt was very chilly out. But the snow and the evening were so romantic that Cecilia didn't want it to end. She put her hands in her coat pockets, determined. \"I think I can manage. It's so pretty out anyway.\"\n\n\"Mmm,\" James agreed. He took off his scarf and draped it over Cecilia's shoulders. \"I think you need this more than I do. Shall we?\"\n\n\"You're probably right. Thank you,\" she said, accepting his scarf and wrapping it tighter. \"Yes, let's go.\"\n\nArm in arm they followed the pathway down the chapel's sloping lawn, following the wrought iron fence along the small waterway and over the most picturesque footbridge. They didn't say much until their path led them away from the age-old campus and onto the modern high street.\n\nJames was happy to see the street lined with eateries. \"What do you fancy? It looks as though we have good choice available.\" James shouldn't have been surprised by Cecilia's answer, but he was:\n\n\"What will go with the music we just heard?\"\n\nHe stopped walking and considered. \"I'm not sure.\" He started walking again. They passed a pub that looked to be serving old-school English pub-fare. \"Probably not Yorkshire pudding, though.\"\n\nCecilia laughed.\n\n\"Did you have any ideas?\"\n\n\"No, I was just wondering. You seem to be taking the idea very seriously.\"\n\n\"I never thought of it before. You've piqued my interest. Pairing a meal with music... that's a fantastic idea.\"\n\nThey past an underwhelming-looking Italian place, a curry house, and a sushi bar\u2014a possibility, James thought\u2014before they came to a small French brasserie.\n\n\"I think this might be the place to find your pairing.\" He opened the door and usher Cecilia inside.\n\nIt wasn't very crowded. The hostess sat them next to a crackling fireplace. James knew he chose well when he looked at the menu. Cecilia scanned the menu and smiled. She was becoming more familiar with different styles of cuisine. \"Know what you'd like?\"\n\nShe nodded as the server came to take their order. \"The rabbit please.\" James raised an eyebrow. His Cecilia was becoming a daring gastronome. \"The lady will also have escargot to start. For me, the terrine followed by the duck confit salad. May we also have a bottle of the 2009 Neuf du Pape?\"\n\nWhen the server withdrew Cecilia looked at him curiously. \"Sir . . .\" She started slowly. \"Did you just order me snails?\"<br >\n\n\"I think you'll like them.\" He watched amused as the desire to object to his choice of appetizer warred with her desire to please him. \"You've liked everything else I've shared with you so far.\"\n\nThis was true. \"But, snails?\"\n\nJames laughed. \"If you don't like them, I'll switch with you.\"\n\n\"What's in the terrine?\"\n\n\"Chicken liver, pork, bacon. A bit of everything really.\"\n\n\"How does this pair with the music?\"\n\nJames laughed out loud as the waiter poured him a taste of the wine. He sipped it and nodded his approval. When Cecilia's glass was filled, James raised his. \"First, to getting to spend this season together. I didn't think I'd ever get to do this with someone. Cheers!\"\n\nThey clinked glasses and savored the rich, complex wine. \"Well, I'm not sure it's a perfect pairing, but I thought there was an interesting counterpoint to the way old Christmas music is elevated by excellent arranging and talent. French fare like this has a lot of homely ingredients elevated by the application of love and time.\"\n\nCecilia didn't have a snappy response to that. \"What was your thought behind the rabbit?\"\n\n\"Oh, well, I thought the dish had light and bright elements to go with heavier and richer elements, much like the contrast between the men and the boys singing...\"\n\n\"I like that. I'll be honest... I just couldn't pass up duck confit, so I don't have good pairing logic.\" He smiled. This was so easy and pleasant.\n\nThe starters arrived and Cecilia looked at the plate of snail shells with suspicion. \"I'm not sure about this. But it smells good.\"\n\nShe used the tiny fork the server provided. It didn't much look like a snail now that it had been cooked with butter and shallots. \"Okay. But remember, this was your idea.\"\n\nCecilia took a deep breath and tasted the little morsel. Her face brightened and she smiled. \"Alright, that's absolutely delicious.\"\n\n\"See?\" James asked as he took a bite of his terrine. \"Mmm. This is quite good too. Want to try mine?\"\n\n\"Only if you'll let me share one of these little guys with you.\"\n\n\"Deal.\"\n\nAfter appetizers and entrees, they had a desert of pungent cheeses. The scrumptious food combined with the wine had them pleasantly drowsy but, the chilly winter air reenergized James and Cecilia as they walked hand-in-hand back to the train station.\n\n\"Was this a good surprise?\" James asked.\n\n\"This was a lovely surprise. I loved it.\"\n\n\"Good. I'm glad. Thank you for enjoying it in the spirit I intended.\"\n\n<br >\"What do you mean?\"\n\n\"Well, I realize that this evening was a lot of me sharing my interests with you. I hope you didn't feel like it was selfish.\"\n\nCecilia was confused. \"Why would I think that?\"\n\nJames shrugged. \"Many other women would have been annoyed at me. They'd think I was pushing things on them.\"\n\n\"I like the things you show me.\"\n\n\"I'm glad. It's so fun to watch you try everything.\"\n\nCecilia leaned against him as they walked. It was a perfect evening.\n\n***\n\nClara spent the day on the couch, too drained by everything to bother getting up. She didn't know how long James and Cecilia would be. She didn't bother trying to fix something for lunch. Some of the girls from the company texted her, but she couldn't bring herself to respond.\n\nBy now, the whole company would know about her injury. It was close to curtain time. Gabrielle and Sophie would be texting her from backstage. She was alternating napping with binging the Great British Bake Off. If she couldn't eat the fattening confections, at least she could watch people make them. This seemed like the way a failed dancer should spend her day.\n\nShe hadn't heard from Abe all day. Was he on an overnight consult? Clara wasn't sure if it was better to be alone or not right now. The days were so short; daylight waned, and twilight fell. Still, Clara didn't turn on any lights, letting the television cast the only light in the room.",
        "She started when she heard the door open. She wanted to pretend to be asleep when she realized it was Abe.\n\n\"Sweetness?\" he called out to her.\n\n\"I'm in the den.\" She felt heavy and lightheaded all at once.\n\n\"I brought some pizza home. James told me not to expect them for dinner.\"\n\n\"Oh. Okay.\"\n\n\"Why are you alone in the dark?\" he asked as he flipped the lights on. Then he shook himself. \"Right, you shouldn't be on your feet,\" he said mostly to himself.\n\nThe pizza smelled good. Abe got Clara's favorite: a white pie with Parma ham. \"I'll get us some plates and we can watch a movie. The air between them was still strained and Clara could tell her husband was making an effort at normalcy.\n\nAbe came back with plates and napkins and took a good look at Clara. He loved her no matter what, but she looked terrible at the moment. Noticing her clothes were the same as what she wore yesterday, he asked, \"What did you get up to today?\"\n\n\"Not much. I'm not allowed on my feet.\"\n\n\"I'm sorry, Sweetness. Here, start with two slices.\"\n\nClara's stomach rumbled as she looked at the pizza. \"I'm not very hungry, but thanks for picking it up. Do you have a new client? You're home late.\" Clara didn't want to talk about herself. She picked at the pizza as Abe flipped though movies on Netflix.\n\n\"Just trying to wrap up some business so I can relax over the holiday. He settled on a rerun of one of their favorite comedies, more for background noise than anything else.\n\nNeither of them knew what to say. The awkward silence stretched on. \"It's nice to have you home,\" Abe said. \"You've been getting in so late from the performances.\"\n\n\"Yes. That's true.\"\n\n\"Aren't you going to eat? You've hardly touched your food.\"\n\nClara had been afraid of this, of people watching her like a hawk every time they sat down for a meal.\n\nDutifully she took another bite. Abe wasn't appeased. \"Did you manage okay on your own today?\"\n\n\"I didn't do much to be honest.\"\n\n\"Did you eat?\"\n\nClara gave an audible sigh. \"Yes.\"\n\n\"Sweetness, what did you have?\"\n\n\"I had some toast and a cup of tea.\"\n\nAbe's brows knitted together. \"What about lunch?\"\n\n\"I wasn't hungry,\" Clara responded waspishly.\n\nAbe stood up then, growling in exasperation. \"So you had nothing except toast today? And you've barely touched your dinner!\"\n\nClara glared up at him. \"Stop acting like I have a problem! I wasn't hungry and getting up would have been more trouble than it was worth.\"\n\nAbe buried his bald head in his hands trying to keep his temper. His emotional exhaustion and worry kept him from voicing his underlying concerns yesterday, but it looked like they were about to address them now.\n\n\"You have no room to argue with me on this, Clara!\" Abe raised his voice. He didn't do that often.\n\n\"You promised you'd never interfere with what I had to do for my career!\"\n\n\"Only because you swore you'd take care of yourself better than those china dolls you dance with!\"\n\n\"You don't dance. You don't know! I'm fine and you're overreacting!\"\n\nThat's when Abe lost it.\n\n\"You're FINE?! If you haven't noticed, you broke your own foot! Look at it Clara!\" Abe pulled the blanket off Clara's legs in a single motion, revealing her braced and bruised feet. \"Look! You look like you've been tortured!\"\n\n\"Stop it.\" Clara refused to look at her swollen feet, instead challenging Abe's gaze.\n\n\"Look Clara! We're not resolving anything until you admit this is a problem.\"\n\n\"No. That's not fair.\"\n\n\"You're hurt Clara!\"\n\n\"Just like so many other dancers. This isn't out of the ordinary. It's normal.\"\n\n\"What is normal about this Clara? Answer me!\"\n\nClara clenched her teeth and remained silent.\n\nAbe's rage turned to incredulity. How could she not see that there was something seriously wrong? He tried a different approach.\n\n\"Don't defy me little girl. You know better than that.\"\n\n\"RED!\" Clara screamed, squeezing her eyes shut.\n\nAbe felt as if he'd been slapped in the face. She was trying to use her safeword to get out of the conversation. He looked around the room, anywhere but at his wife. Then he stared at his empty hands. This wasn't about power dynamics. This was Clara's health and she was acting like it was some game. He found the anger again.\n\n\"I'm not letting you escape this conversation Clara! That's not how this is going to work.\"\n\n\"Oh really? You're ignoring my safeword now?\"\n\n\"Don't twist this on me! You're the one completely disregarding your wellbeing! I never should have\u2014\" Abe stopped himself.\n\n\"Never should have what, Abe? Go on. Are you going to forbid me from dancing?\"\n\n\"Yes! If that's what it takes! Yes! You have no idea how much I hate seeing you like this.\"\n\n\"I'd like to see you try to stop me! I'm not a slave. You can't control me like that!\"\n\nHer threat was kind of laughable. \"I don't have to stop you Clara. You've stopped yourself! You can't walk on your own, let alone dance! Stop being thick about this!\"\n\n\"So I'm thick now! Is there anything else I should know?\"\n\n\"STOP Clara! Stop it. You're in denial. This,\" he motioned at her condition, \"is a problem. What part of 'in sickness and in health' don't you remember? I love you; I want to help you!\"\n\n\"I'm not a child. Stop talking down to me.\" Clara wasn't even looking at him anymore.\n\nAbe became afraid that it was already too late. Exasperated, he lowered his voice.\n\n\"I don't know how to get through to you Clara. You're being unreasonable. You heard the doctor. It's not just me,\" he said hopelessly.\n\nClara maintained her petulance. \"I'm fine. I'm already off the rest of the run of Nutcracker. You're blowing this out of proportion.\"<br ><br >Abe wanted to beg her to see reason. \"It's not about one show, Clara. It's all of it. And you aren't fine. Don't you trust me to care for you?\"\n\n\"You don't know about dancers' bodies. Stop acting like you're a doctor. I'll eat when I'm hungry.\"\n\nThey were arguing in circles now.\n\n\"No, Clara. You'll eat on a schedule. You'll eat full meals. I don't care if you hate me for it.\"\n\n\"So now you don't trust me?\"\n\n\"No. I don't. Why should I? You lied about your 'diet' and your injuries.\"\n\n\"Because I knew you'd react like this.\" She finally looked at him with fiery eyes.\n\n\"Because I don't want you to hurt yourself. Don't you see how foolish this is? You're weak Clara. You're body is trying to tell you something.\"\n\n\"Stop lecturing me.\"\n\n\"We're going to see that nutritionist.\"\n\n\"You can't make me.\"\n\n\"The hell I can't!\"\n\n\"What are you going to do? Spank me until I agree? I'm not going!\"\n\n\"This discussion is over. Finish your dinner. I'll be right back.\"\n\nAbe stepped out of the room to grab a beer and take a breath. He half expected to hear Clara shout something else back at him. But the abrupt end to the conversation seemed to silence her endless retorts.\n\nHe dialed the number Dr. Kessler gave him. Of course, it was too late and the office was closed, but Abe was going to call first thing in the morning. Whatever it took, he would do it. He couldn't lose her.\n\nClara didn't usually stay angry for long. But something about Abe's paternalistic insistence made her feel stifled and irritated. Her stomach growled. The tiny bites of pizza she tasted to appease Abe woke up her hunger. The last thing she wanted to do was listen to him. She sat in indecision until he came back into the room.\n\n\"We can stay here all night. You have nowhere else to go.\"\n\nHe really would treat her like a child who hadn't finished her dinner. To prove his point, he sat back in his armchair, and put his feet up on the ottoman.\n\n\"Fine.\" Clara took a bite of pizza, secretly relishing the flavor and hating every second of it.\n\nAbe saw the pained look on Clara's face as she chewed and swallowed her pizza. He raised an eyebrow when she looked at him pitifully.\n\nIt was a torturous meal for Clara. Abe wouldn't relent until she ate two full slices of pizza. She felt so full she wanted to be ill, but there was no way she could get up to go to the loo without Abe noticing.\n\nShe glared at him silently as he took her empty plate away. She wasn't sure if she was trying to provoke him into punishing her or drive him away altogether, but whatever her goal, Abraham didn't take the bait.\n\nThere wasn't anything else to say, so they sat in silence, pretending to watch television until they heard the door open, heralding James and Cecilia's return. The couple didn't bother to stop in the den, rushing straight upstairs with hushed giggles and whispers, followed by the distinct sound of James slapping Cecilia's ass.\n\nClara found herself annoyed. She didn't want to be alone with her husband anymore, but she couldn't get up and he wasn't leaving her side.\n\nIt seemed that overnight Clara had been transformed into someone Abe didn't know. He found himself jealous of James and Cecilia for the first time. Was this how James felt for all those years? It left him sad and adrift. He waited until Clara fell asleep and then carried her upstairs to bed. Looking at her tiny frame, Abe felt his anger dissipate as worry ate at him. He hoped he was wrong.\n\n***\n\nWhen Dr. Kessler sent Mrs. Clara Finnegan Kendrick's file to him, certified nutrionist and sports doctor Alan Griswold raised an eyebrow. The woman's blood work was troubling, but her x-ray's showed the true extent of her condition. Griswold was used to seeing footballers and rugby players. Not dancers. Mr. Kendrick looked more the sort that he was used to treating.\n\n\"Mrs. Kendrick, please make yourself comfortable. Can I find something to put your feet up?\"\n\nShe was about to demure, but the brawny man answered for her. \"Thank you. Yes. I'm Abraham Kendrick,\" he said offering his hand to the doctor.\n\nGriswold shook his hand. He didn't consider himself particularly intuitive, but there was obvious tension between husband and wife.\n\n\"Tell me what brings you here today,\" he started after settling in his newest patient.\n\n\"Well, Dr. Kessler referred me. He thinks I should see you,\" Clara answered.\n\n\"But you don't.\" Griswold narrowed his eyes.\n\n\"I think everyone is over-reacting because I got hurt.\" She glanced at her husband, who clenched his jaws at her answer.\n\n\"I assume this was a dance-related injury?\" Ballerinas were a bit new to him.\n\nShe nodded. \"It happens to everyone at the company. It's just my turn.\" It was a weak attempt at humour.\n\nAbraham's hands flexed and clenched. He looked around the office at the pictures of famous footballers with Dr. Griswold, trying to let go of his emotions long enough to pay attention to what he said.\n\n\"Well, maybe we can come up with a plan to help you mend that much faster then.\" Dancers must be like other professional athletes, they always wanted to get back onto the field\u2014or stage as the case may be.\n\nClara's face softened, but she still looked suspicious. \"Alright.\"\n\n\"I see your most recent blood work shows some anemia and vitamin deficiencies. Let's start by telling me what your diet looks like now.\"\n\nAbe tilted his head, silently daring Clara to lie. She eyed Abe warily. \"Well, I was on a vegetarian diet until recently.\"\n\n\"And what were you eating for protein?\" He looked up from taking notes.\n\n\"Some yoghurt. A bit of tofu. But mostly, I was eating vegetables.\"\n\n\"How often were you taking meals? Six times a day?\" Some of Dr. Griswold's patients ate smaller meals more frequently to stay fueled.\n\n\"More like two. Sometimes three.\"\n\nAbe shook his head almost imperceptibly. Griswold flipped through her file. \"Were you taking any supplements?\"\n\n\"No.\"\n\n\"Well, first thing I'll tell you is that athletes have to be very careful if they're going to switch up diets. How long were you eating like this?\"\n\nClara bit her lip. \"Oh, erm. I'm not sure. Maybe...\"\n\n\"Be honest Clara,\" her husband tried to hide the growl in his voice. Dr. Griswold detected anger, but ignored Abe for the time being.\n\n\"Three, maybe four months.\"\n\n\"And what were you eating for an average meal or snack before a workout?\"\n\n\"Some fruit. A little low-fat cottage cheese for a treat.\"\n\nGriswold frowned. \"What else?\"\n\n\"Sometimes some kale chips.\"\n\n\"What about for dinner? Weren't you hungry after an intense workout?\"\n\n\"Well every now and then I'd have something like a Shepard's pie or a pot roast.\"\n\nAbe snorted derisively, which lead Griswold to ask a follow-up question.\n\n\"What about the rest of the time?\"\n\n\"Soups and salads. But nothing with cream or fattening dressing.\"\n\nIt was like pulling teeth to get this woman to talk. He flipped through to some older records. \"I see that you've lost some weight since last year. Nearly six kilos. Tell me, what does your week look like in terms of exercise and physical activity?\"\n\nThis was an easy one to answer. \"Well, I have class everyday for an hour. Then I have rehearsal for 4 or 5 hours. After that there's evening class, a performance or cross-training.\"\n\nGriswold was impressed. That was just as vigorous a training schedule as his rugby players. \"What do you do for cross-training?\"\n\n\"Yoga, pilates, and weight training.\"\n\n\"When did you start doing weight training?\" Abe interrupted the interview.\n\n\"A couple of months ago,\" Clara mumbled. \"But since we've been doing Nutcracker I've had evening performances instead of cross-training.\" She made it sound like an excuse.\n\n\"So you've been weight training at the same time you've been cutting out protein?\" Griswold raised an eyebrow at Abraham, who voiced\u2014somewhat less delicately\u2014the same question he had for the dancer.\n\n\"You're not an expert, Abe,\" Clara hissed.\n\n\"Actually, would you mind answering that question Mrs. Kendrick?\" Griswold asked.\n\nHer cheeks flamed. Abe seemed to forget the doctor was in the room with them. \"Clara, I used to play rugby and I was in the Marines. Give me some credit. I used to lift.\"\n\nDr. Griswold was uncomfortable with the whole situation. Abraham was absolutely right, but he seemed to have entered a minefield. \"Mrs. Kendrick? Is that true?\"\n\n\"I would drink some green juice before and after circuit training.\"\n\n\"Did it have some sort of dairy or protein powder? Maybe soymilk?\" Griswold asked, trying to be helpful.\n\n\"Not really.\"\n\n\"Well, Mrs. Kendrick, I think your husband is right. It's unadvisable for anyone to do weight training without eating protein. It would have the opposite of the intended effect. You'd break down your muscles without replenishing or rebuilding them. I also think you've lost more weight than is healthy for an athlete of your size.\"\n\nClara didn't say anything.\n\n\"You're a bit below where you should be in terms of BMI,\" he added.\n\n\"But that's for regular people, I'm a dancer.\" Clara stared intently at the floor.\n\n\"Mrs. Kendrick, my chart is for athletes, which you most certainly are. It's calibrated to take your profession into account. Dr. Kessler's charts show you've had a constant weight for the past three years. I assume you've been dancing that whole time?\"\n\n\"Yes,\" she said grudgingly.\n\nThis was uncharted territory for Dr. Griswold. He was used to his athletes putting on weight in unhealthy ways. His practice specialized in rugged athletes who were always trying to bulk up. He had an occasional patient who tried steroids and ended up weakening tendons and ligaments. But he suspected the opposite was true here.\n\n\"Have you ever purged after a large meal? Mrs. Kendrick?\"\n\nAbe was about to say something, but Griswold silenced him with a look. He needed Clara to answer.\n\n\"What kind of question is that?\" She sounded offended.\n\n\"Answer the man Clara!\" Abe scolded.\n\n\"Please, Mr. Kendrick.\" Griswold knew he was right then, but the woman's husband wasn't helping. \"I don't want to ask you to leave.\"\n\nAbe was about to object, when Clara cut him off. \"No, you should.\"\n\n\"Clara?\"\n\n\"You heard me.\"\n\nGriswold didn't like this, but had no choice. \"Mrs. Kendrick, it is of course your right to consult with me privately. But it would appear your husband is concerned for your health...\"\n\n\"No. If he stays in here, I'm leaving.\"\n\nAbe sized up the doctor. He looked like a former athlete himself. Abe made a judgment in that instant, deciding to trust the man. He raised his hands, as if in surrender. \"Alright. I'll wait for you outside.\"\n\nSecretly, Abe liked that the man's office was decorated in rugby jumpers and football paraphilia. He didn't think this doctor would put much store in the Balanchine aesthetic.\n\nGriswold nodded as Abe showed himself out. Clara crossed her arms and looked at the doctor defensively. \"Clara, you need to tell me if you've been purging. It's just the two of us, here. I need to know.\"\n\n\"Only when I couldn't avoid eating... sometimes we have big family dinners and if I have to eat with everyone, then later... I'll...\" she trailed off.\n\nDr. Griswold schooled his features. He knew that this sort of thing happened in some circles, but he hadn't been confronted with it in his practice before. \"How long has this been going on?\"\n\n\"Only a few months.\" Clara's eyes started to well with tears. She didn't want Abe to know. He'd be so mad at her.<br ><br >\"When you started cutting out meat?\"\n\n\"Yes, well no. I started limiting meat a little before that.\"\n\n\"Did your eating habits change because you felt you needed to lose weight?\"\n\n\"Erm... I dunno. I just wanted to make sure I stood out to the higher ups in the company. It was just a health choice. So many other girls are vegetarian... I just wanted to try it out and see. It wasn't about that at first. But then some of the principals noticed. And that made it all worth it...\"\n\nGriswold looked at her chart one last time. \"Mrs. Kendrick\u2014Clara, if I may?\"\n\nClara sniffed and nodded. \"You haven't lost enough weight to call this what it is... But these are all signs of an eating disorder.\"\n\n\"I'm not anorexic!\" she was shrill.\n\n\"No. You're not, but this behavior certainly falls under the OSFED.\"\n\nClara looked at him confused.\n\n\"Other specified feeding or eating disorder. What you've described is not healthy or normal for you to be doing, but it doesn't meet the criteria for any of the more commonly-known eating disorders. And you haven't yet lost enough weight to qualify for exercise bulimia, for example.\"\n\nClara shook her head. The doctor continued. \"Clara, your feet won't heal if you don't eat properly. You won't dance again professionally if you don't sort out your diet.\"\n\nGriswold watched as the gravity of the situation hit her. \"Everything you're doing to try and advance your career is hurting it.\"\n\nTears began to fall in earnest. The doctor wondered if he should bring her husband back in. He was uncomfortable with this whole visit, even though he knew what it called for. He just didn't feel equipped with the proper bedside manner for this. He was used to banter with his patients. Not tears. \"Clara? Clara?\"\n\n\"I'm so, so, afraid.\" Clara was back to chanting her greatest fear over and over again in her head. \"I won't dance again. I won't. I won't.\"\n\nThe doctor decided to draw up an eating plan and writing up prescriptions for nutritional supplements. Then he flipped through a few business cards until he found the right contact.\n\n\"Clara, you're young and you're clearly a stellar athlete. You'll dance again. But you need to take care of your body if you want it to perform. You need to decide how important dance is. If it's important enough, you'll listen to me, and your husband, and the therapist I'm referring you to.\"\n\nDr. Griswold gave Clara an awkward pat on the shoulder. \"Dry the tears. I've written you a script for some vitamins and want you to start with this eating plan. Call the number on this card. I haven't worked with her much, but she comes highly recommended.\"",
        "Clara nodded her head and left the consulting offices.\n\nAbe fumed in the waiting area as Clara spoke with the doctor. The cheery Christmas music playing in the background irritated him. Clara hobbled out, visibly distressed. She couldn't get the words out she was sobbing so hard. Despite his anger, Abe wrapped her in a hug. Griswold stood in the doorway of his office, quietly indicating that he wanted a word.\n\n\"I won't be a moment, Sweetness. Stay right here.\"\n\n\"No. Please don't.\"\n\n\"Sshhh. Sit. I'll be right back.\"\n\nGriswold ushered Abe back into his office. \"Mr. Kendrick\u2014\"\n\n\"Abe, is fine Doctor.\"\n\n\"In that case, I'm Alan. At the risk of violating doctor/patient confidentiality, I'm going to tell you what your wife is coping with.\" He took a pause. \"Mrs. Kendrick appears to be in the early to mid-stages of an eating disorder.\"\n\nAbe feared this, but it still felt like a punch to the gut. \"How bad is it?\"\n\n\"It could be worse. She's lost weight, but not enough to classify it officially as exercise bulimia. It's taking a toll on her because of the stress she puts on her body. It's natural it would manifest itself first in her feet, since she's a ballerina.\"\n\n\"So what do I do? How do I help her?\"\n\n\"I gave her some information. She needs to eat, obviously. She needs to let her body recover and heal herself. I'm putting her on a diet that I give footballers. She needs to rebuild her muscles and put some weight back on, otherwise she's going to do damage her joints. I also gave her a card for a therapist who specializes in eating disorders. It's not my area. I can help her with the physical things, diet, supplements, and physical therapy\u2014that is, if you want. You could find someone who specializes in dancers. There are a few I could refer her to\u2014\"\n\n\"No. I don't want her with a dance specialist. They probably deal with this all the time and think this is normal.\" Abe sounded bitter.\n\nGriswold sighed. \"Abe, you need to be supportive. Your anger won't help her.\"\n\nAbe exhaled in a rush. \"I know. I just don't know what else to do.\"\n\n\"It will take the full support of a team of people to help her. Like I said, medically I know what she needs, but her psychological health is another matter. How long is she sitting out of practice?\"\n\n\"About two months.\"\n\n\"Well, that should help. She should be able to put weight on easily if she's not exercising. Here's a copy of the meal plan,\" he said handing Abe the sheets of paper. \"I'll talk with Kessler and see when I can start some light physical therapy.\"\n\n\"She said the ballet company has a physical therapist.\"\n\n\"Hmm. Well, maybe I can speak to their person and see what makes the most sense. Most professional football clubs have their own medical staff too. It can be helpful to have more eyes on an athlete's recovery. Especially with Clara.\"\n\n\"Thanks, Alan.\"\n\n\"Not at all. I was surprised Kessler referred her to me, but I'm sure we can get her on the road to recovery.\"\n\n\"One more question... You don't treat any of the players from Arsenal, do you?\"\n\nAlan laughed. \"Not right now. But I have in the past. You're a fan I take it?\"\n\n\"You could say that. I'd best be off.\"\n\n***\n\nJames was wrapping up a final few parcels for Cecilia when Abe stepped into his office. He looked grave.\n\n\"D'you have a second?\"\n\nJames set the package aside. \"Have a seat, mate. What's troubling you?\"\n\n\"It's Clara. We've been to see the specialist.\"\n\n\"And?\"\n\n\"It's everything I was afraid of. She's been skipping meals. She's been purging.\"\n\n\"Abe. I'm so sorry. What happens now?\"\n\n\"The doctor gave her a diet regimen. She's going to see a therapist tomorrow. We managed to get the last appointment before Christmas Eve.\"\n\n\"How's she taking it?\"\n\n\"Clara is not currently speaking to me.\"\n\n\"Is there anything I can do to help?\" James felt for his friends. This was always a nightmare of a possibility. \"How are you taking it?\"\n\n\"I just don't understand it. How did I miss it? She lost weight. I should have seen it sooner. James, I failed her. Why did she think she needed to do this?\"\n\n\"I don't think it works like that Abe. You've always been enormously supportive. Some things are outside your control.\"\n\n\"I'm so mad at her. It's like I don't know her anymore.\"\n\n<br >James didn't know how to reply.\n\n\"Well, we know what the problem is. She's getting the help she needs. Right?\"\n\n\"I suppose. But if she doesn't eat properly, there's nothing anyone else can do to help her.\"\n\n\"Where is she?\"\n\n\"Upstairs I think. I wouldn't be surprised if she cried herself to sleep.\"\n\n***\n\nUpstairs, Clara was crying silently as she stared at her reflection in the mirror. She leaned on her crutches for support. Why was her body sabotaging her now? For years it did just about everything she'd asked of it. But now her feet decided to go on strike. She looked down at her thin legs, then at her arms, which were struggling to support her weight with the aid of crutches. She should really sit down, but she couldn't take her eyes from the way her joints protruded ever so slightly.\n\nHillary Strand, one of the senior principle dancers was the first to notice the changes and compliment her. Her partners also commented on how easy she was to lift and handle. Then she got passed over for the part she wanted.\n\nShe wanted her body's transformation to be complete by the time the directors were considering casting for The Four Temperaments. Now, it seemed she'd be unlikely to dance in that production at all.\n\nClara heard a knock on the door, but didn't move to answer. She kept staring at her ribcage and hipbones, wearing nothing but her underarmour sports bra and matching boyshorts. Just as she'd hit her target weight, her feet had to quit on her.\n\nThe knocks came louder. \"Clara? It's me. Won't you let me in?\"\n\nCecilia opened the door anyway, peeking inside.\n\n\"Go away,\" Clara whispered. She was shivering in front of the mirror.\n\n\"Clara?\" When confronted by Clara's gaunt appearance, Cecilia swallowed a gasp. She hadn't been spending as much time at the ballet or with Clara since returning to London with James. Her friend looked thinner than she remembered. There were obvious bruises on her hips from being lifted over and over.\n\nInstead of commenting, Cecilia found a long-sleeved shirt and some comfy sweats, offering them to her friend. \"Here, you must be cold. Let me help.\"\n\nClara started crying again as Cecilia helped her get dressed. She was grateful Cecilia didn't ask more questions as her friend wrapped an arm under her shoulders and helped her to limp over to the bed. Clara cried and cried, letting Cecilia hold her as her mind recited the list of foods Dr. Griswold wanted her to eat.\n\nHow was she supposed to eat bacon and eggs? Did he really think she'd be able to dance if she ate rice, pasta, and meat? At some point Abe took the list of foods from her, but it was all Clara could think about now. She knew someone was going to make her eat, and she was too tired to fight. Maybe she could get away with just eating a spinach salad?\n\n\"Clara, what can I do? Do you need Abe?\"\n\n\"NO!\"\n\nThe forceful response startled Cecilia. \"Okay, okay. I won't get him. Do you need me to go?\"\n\nClara felt bad. \"No. You can stay. I just can't face Abe right now.\"\n\n\"Okay. Well, I'm here.\"\n\nClara was so tired. \"He just doesn't understand.\"\n\n\"Doesn't understand what?\"\n\n\"You do. You've been to rehearsals and worked out with the other girls.\"\n\n\"I don't get it. What do you mean?\"<br ><br >\"You see them. How they looked at me. They all thought I wasn't right for a soloist. I'm not tall enough. But at least I could be thin enough.\"\n\n\"Clara?\"\n\n\"Oh, come on Cecilia. Abe didn't tell you yet? You were asking me about food the other day!\"\n\nCecilia didn't say anything, but pulled back, trying to take in Clara's words and anger.\n\n\"The doctors think I have some sort of eating disorder! They fucking talk to each other behind my back with Abe. I'm sure you already knew!\"\n\nClara hated the way Cecilia was looking at her. \"I nearly fucking got to my target weight and now everyone's going to be pushing food on me. I can already tell.\"\n\n\"Clara, you're beautiful, you don't have to worry about that. Everyone at the company loves you.\"\n\n\"You're so sure, aren't you?! Then why is Alicia taking over my part right now? Everyone's just waiting to get me out of the way!\"\n\n\"Clara, no one wants to get rid of you. Alicia was your understudy. That's just how it works. You know this.\"\n\nCecilia tried to hug Clara, but the dancer weakly pushed her away. \"Stop it. You all sound the same. You and Abe and the fucking doctors.\"\n\n\"Abe is worried. So am I. They just want you to get better.\"\n\n\"The only thing wrong with me is my feet! I'm fine.\"\n\n<br >\"Okay, okay.\" Cecilia wasn't sure what she was supposed to say. \"Can I get you anything?\" She wanted to leave this venomous version of Clara.\n\n\"NO.\"\n\n\"Alright. I'm going.\"\n\nCecilia left and saw Abe travelling up the stairs with a tray of food. \"Abe,\" she whispered. \"Is it true?\"\n\nHe nodded. \"Did she tell you?\"\n\n\"Kind of. She said everyone else thinks she's got a problem. How can I help?\"\n\nAbe steeled himself. \"I'm not sure right now. I'll let you know. I have to take this in to her,\" he said indicating the tray.\n\nCecilia nodded and continued downstairs.\n\nAbe let himself into their bedroom. Before he set the tray down, Clara said, \"I don't have a problem. You don't need to keep fattening me up like a pig for slaughter.\"\n\n\"If you don't have a problem, then you'll have no problem eating the bangers and mash.\"\n\nBangers and mash. Clara wasn't sure if she could think of something less healthy. She wanted to object. Maybe she could only eat a little and get Abe off her back.\n\nClara lifted the fork with monumental effort. It smelled like weight gain. There was grease dripping off her fork. There was likely cream and butter in the mash. And white potatoes. Carbs and fat. Just what she needed. Her stomach felt like a gaping maw, but her brain told her that her discomfort was worth it.\n\nAbe said nothing as he watched Clara eye the tiny bite of food on her fork. All he knew is that she had to eat. Beyond that, he wasn't sure what to say or do.\n\nClara took a bite. She swallowed. She looked at Abe as if to say, \"See? I told you.\"\n\n\"I'm glad you have your appetite back,\" Abe said, ignoring her attitude and hoping to encourage her to eat more.\n\nClara rolled her eyes. Abe resisted the urge to correct her. As long as she was eating, he could deal with her attitude.\n\nThe food was so heavy. Clara thought she could feel herself being weighed down. Another bite. Then another. Four bites was all she felt she could manage. She already wanted to be ill. She hadn't been able to dance or work out for two days. She felt antsy. If only her husband would leave her alone long enough for her to toss the food without him noticing.\n\nClara fantasized about getting a lead part and being part of the promotional campaigns for the next production. She wanted to be thin enough that the photographers wouldn't have to retouch the photos. She'd be gorgeous. She just needed to keep everyone from watching her eat.\n\nAbe saw Clara staring off into space. She was so far away from him. For now, all Abe could do was be a constant presence.\n\n***\n\n\"So Clara, can you tell me what brings you and your husband here today?\" This therapist, Inez Olsen, was in the same building as the doctor Cecilia had visited, but she was a specialist in eating disorders.\n\n\"I was referred here by Dr. Kessler and Dr. Griswold,\" Clara felt like she was trapped in a broken record.\n\n\"I see you've had a recent injury.\"\n\n\"Yes. But I should be able to return to class soon after the New Year.\"\n\nAbe snorted next to her. \"Not that soon.\"\n\nThe doctor chided Abe. \"You'd be surprised how quickly a dancer can will herself to recover.\"\n\nClara liked that Dr. Inez defended her. She cast a triumphant look at her husband.\n\n\"But it'll take the right combination of things to get there.\"\n\nAbe nodded and said nothing.\n\n\"So you opted to come as a couple. Is that right?\"\n\nClara set her jaw and looked away.\n\n\"Yes. I thought it would be good for me to be here and support Clara,\" Abe answered for them both.\n\n\"But what does Clara think?\" the doctor quietly challenged.\n\n\"I don't want him here,\" Clara said none-too-kindly.\n\nDr. Olsen looked to Abe. \"Perhaps today will be a solo session and we can explore a couple's session another time Mr. Kendrick?\"\n\nAbe wasn't pleased at being dismissed. Clara had all but kicked him out. Again.\n\n\"Please, Mr. Kendrick, will you wait outside?\"\n\nWordlessly, Abe left the room.\n\nWhen they were alone, the doctor turned to Clara. \"Now then. Do you feel better able to talk about why your other doctors sent you here?\"\n\n\"Not really. I don't want to be here either.\"\n\n\"Now Mrs. Kendrick, you must know that you have people worried. What better way to allay their fears than by embracing the process? If you really don't need it, then it won't hurt you.\"\n\n\"Fine. What do you want to know so that we can be done?\"\n\n\"Dr. Griswold diagnosed you with an unspecified eating disorder. Can you tell me when and how you started trying to manage your diet by yourself?\"\n\nSomething, perhaps it was appreciation for making Abe give her some space, let Clara feel like it was okay to tell the doctor. She was certain Dr. Olsen wouldn't tell on her.\n\n\"I got promoted at the ballet and it was all going really well...\"\n\n***\n\nAn hour later, Dr. Olsen opened the door to her consulting rooms and helped Clara out to see Abe. He'd been stewing since the doctor asked him to leave. How was he supposed to help his wife if he didn't know what was going on in her head and she wouldn't tell him?\n\nThey'd never kept secrets from each other before. Abe always knew what Clara was thinking. It was a shot to his ego that he'd missed something this crucial. What did it say about his fitness as her husband and dominant?\n\n\"A word, Mr. Kendrick?\"\n\nAh. Maybe the doctor would just tell him now. Clara turned white. Abe made to follow the therapist into her consulting rooms, but she didn't invite him in.\n\n\"Mr. Kendrick, I think it's best if Clara sees me one-on-one for awhile. I think in time, it may be a good idea to see you both together, but for now, Clara will see me alone.\"\n\n\"Alright, but can you tell me what's going on with her?\"\n\n\"I cannot Mr. Kendrick. That would violate doctor-patient confidentiality, as I'm sure you must be aware.\"\n\nAbe ground his teeth at the lecture.\n\n\"If you'll forgive me, I might also recommend giving your wife some space.\"\n\nAbe wanted to punch something. Instead he nodded as the doctor continued giving him clinical advice.\n\nThe doctor continued. \"However, maybe it may be helpful if you came to see me one-on-one as well.\"\n\nAbe raised his eyebrows.\n\n\"Come see me the day after Boxing Day.\"\n\nAbe nodded, saddened that it had come to this so quickly. Separate therapy sessions? Was his marriage doomed?\n\n***\n\nPulling into the drive in front of the townhouse, Abe was struck by how cheery and festive their home looked. Tomorrow was Christmas Eve. It seemed so promising when Cecilia and James returned from the States. He never would have imagined this turn of events.\n\nClara hobbled out of the car without saying a word. She and Abe hadn't spoken since the doctor asked Abe to leave her consulting rooms. Abe wasn't sure how long he sat in the driver's seat of the car. Eventually he got out and went inside.\n\nCecilia was entering the den with a brightly wrapped gift in hand. She blushed and hid it behind her back when she saw Abe. \"Oh! I wondered where you were. Clara's upstairs.\" Cecilia scurried over to the Christmas tree and slipped the present underneath its boughs.\n\n\"You weren't supposed to see that...\"\n\n\"It's alright, there wasn't much for me to see.\"\n\n\"There's some leftover dinner. Did you eat yet?\"<br >\n\n\"No. Did Clara?\"\n\n\"I think James brought up a tray for her.\"\n\nAbe relaxed just a hair. \"Thanks, that sounds great.\"\n\nIn the kitchen, Abe reheated the evening's leftovers while Cecilia poured two pints of Old Speckled Hen. She really was settling into the rhythms of their family. Abe took a sip and sighed.\n\n\"I know this is probably a dumb question, but are you alright Abe?\"<br >\n\nHe gave her a faint smile. Not too long ago it had been Cecilia who needed someone to confide in, and it had been Clara that she turned to. \"No. But it's not a dumb question.\"\n\n\"Is there anything we can do to help?\"\n\n\"Clara's therapist doesn't seem to think so. She kicked me out of the session.\"\n\n\"Oh. Wow.\"\n\n\"Yeah. I can't even be there for my wife.\"\n\n\"I'm sure that's not true.\"\n\n\"Well, her doctor told me to give her space. But then how will I know if she's eating or if\u2014\"\n\n\"Clara mentioned that everyone was giving her the third degree about eating. Maybe that only makes it worse?\"\n\n\"I don't know.\" Abe hung his head. The beer wasn't as comforting as it was meant to be.\n\n\"Clara isn't in imminent danger. If she's seeing the doctors and resting her feet, that's a good step, right?\"\n\n\"I suppose so. Cecilia, I can't protect her from herself. What if she doesn't get better?\"\n\n\"She will. But it won't happen overnight. Remember when I was hurt?\"\n\n\"Yes, but you didn't do that to yourself.\"\n\n\"No, but it was really tempting to be self-destructive. Those first few days I wanted to die. It took time for me to come 'round. And the whole time you and Clara just stayed constant and patient.\"\n\nAbe was surprised at her admission. But then, maybe he shouldn't have been.\n\n\"Well, yes... I see your point.\"\n\n\"Clara is just starting to get help. You can't rush it.\"\n\n\"It's so hard, Cecilia.\"\n\nCecilia gave Abe a hug. \"Well, James and I are here for you, too.\"\n\n\"Thanks Cecilia. I feel bad putting this on you. It seems like you've just turned another corner in your own recovery...\"\n\n\"I know. But I'm happy to be able to be here for Clara and you. It tells me I'm getting better and that I'm moving on. Should we consider making different plans for Christmas?\"\n\n\"No. That was the only helpful thing Clara's doctor said to me: 'Don't act as if everything's different. Celebrate like you normally would and let Clara participate as much or as little as she feels comfortable.'\"\n\n\"Well, I think that's how you should approach this, then. I'm no expert, but it seems reasonable.\"\n\n\"I suppose so.\"\n\nCecilia gave Abraham a hug and left him to his thoughts.\n\n***\n\nChristmas Eve dawned bright and cold. James rolled over to hug Cecilia close, but was greeted by a lump of sheets and pillows. Somewhat dismayed, but nonetheless, unwilling to get out of bed, James sat up and thought about the coming holiday. There was only one thing he wanted this Christmas. He hoped it wasn't asking for too much.\n\nAs he was contemplating this, Cecilia came in, with a tray of coffee and croissants. \"Merry Christmas Eve!\" she said cheerfully. James waited long enough for her to set the tray down before grabbing her wrist and pulling her back into bed with him.\n\n\"Omph!\" Cecilia laughed and squealed as James tickled her. He was prepared for the violent reaction of her flailing limbs as he she struggled to wiggle out of his grasp. James shamelessly used his superior strength and weight to hold her down as she shouted and laughed.\n\n\"Stop! NO! Let. Me. Go!\" she gasped between breaths.\n\nCecilia twisted to no avail, struggling to avoid James's wicked fingers.\n\n\"Alright! I surrender! Stop!\"\n\nJames stopped but didn't let her go. A mischievous smile crossed his boyish face. \"And what will you give me if I decide to let you go?\"\n\nCecilia had an answer at the ready: \"Your breakfast. Your tea is getting cold.\"",
        "\"Hmmm... Not sure that's your best negotiating tactic.\"\n\n\"And a kiss?\" Cecilia added helpfully.\n\n\"Go on then.\" James let her arms go just long enough to wrap her in a hug and claim his kiss. Cecilia hugged him back and smiled when he pulled away.\n\n\"Thank you for fetching breakfast.\"\n\n\"I thought it might be nice to do breakfast in bed. Besides, it feels a bit tense downstairs with Abe as worried as he is, and Clara being so withdrawn. We can join them later, but I thought we could just start the day you and me.\"\n\nJames agreed. He wanted to be there for Clara and Abe\u2014Lord knows they were there for him. But until Abe and Clara smoothed over some of their tension, it was a bit awkward for him and Cecilia. He climbed out of bed, gloriously naked, and started fiddling with the seldom-used bedroom stereo. Cecilia wondered what he would play.\n\nThe iconic vamp played and Cecilia had to smile. Betty Carter crooned the iconic words, \"I really can't stay...\"\n\n\"You like this song?\" Cecilia sounded surprised.\n\n\"Of course!\" James handed her the coffee and small plate as he kissed her forehead. \"Why wouldn't I? It's a classic.\"\n\n\"I don't know. It's just so\u2014American.\"\n\n\"Say more.\"\n\n\"Well, it's not like the things you play. Not sophisticated.\"\n\n\"Maybe on the surface. But I love jazz and the blues. America made its musical contributions.\"\n\n\"Oh. I never would have thought that.\"\n\n\"I'll hold your hands, they're just like ice.\" James sang Ray Charles' part to Cecilia, and kissed her knuckles.\n\nIt was too much for her and she laughed out loud.\n\n\"What is it?\" James asked amused.\n\n\"You sing too?\"\n\n\"Why wouldn't I?\"\n\n\"I don't know. I guess I just have a hard time picturing you singing.\"\n\n\"Well I don't give concerts singing...\"\n\n\"You keep surprising me. Any other hidden talents I don't know about?\"\n\n\"You'll have to stick around to find out.\"\n\nThey finished breakfast in bed listening to Ray Charles and sipping their respective coffee and tea. James hoped this was the start of a new Christmas tradition.\n\n\"Is there anything else you need to do before tomorrow?\" James asked, finishing his tea. He'd finished all of his preparations.\n\n\"Just prepare dinner.\" Cecilia snuck out to do her last minute shopping yesterday. Abe had caught her placing her last present under the tree. Everything else was all set.\n\n\"Should we pick up some different groceries for Clara?\" James asked.\n\n\"I gather not. Abe said Clara's doctor said not to treat her with kid cloves.\"\n\n\"Alright. Good thinking.\"\n\nThe rest of the day was oddly tranquil after all the bustle leading up to Christmas. James revealed another of his talents in short order: cooking. It became apparent that Clara wouldn't be participating in preparing the dishes for the evening or for tomorrow's luncheon. No one was surprised, but it left Cecilia a bit overwhelmed.\n\nShe and Clara planned the menu weeks ago, before everyone realized Clara was unwell. James calmly stepped in, helping Cecilia prepare a crown roast with kitchen twine and switching off chopping onions and rolling out dough. By the time they needed to get washed and changed for vespers, Cecilia and James had dinner in the oven. Clara had yet to partake of anyone's company, so Abe would stay behind and keep an eye on the oven.\n\n***\n\n\"You have a lovely singing voice too, you know.\" James said to Cecilia as they left the church.\n\n\"Oh, no, you heard me?\"\n\n\"I was standing right next to you.\"\n\n\"Sorry. Can't help it, I like Christmas carols.\"<br ><br >\"I hope so. Otherwise you were just being kind the other night in Cambridge.\"<br >\n\n\"Well, now that I know what it's supposed to sound like, I'm afraid I can't really measure up to that.\"<br ><br >\"Stop. I'm just glad you enjoyed it.\"\n\nCecilia smiled and started humming \"Once in Royal David's City,\" embarrassment forgotten in her happiness.\n\nThe townhouse was flooded with delicious smells when they returned. The presents under the tree seemed to have multiplied in their absence, and most welcome of all, Clara was downstairs, dressed in a red jumper and black leggings. Cecilia squeezed James's hand when she caught sight of her friend. She was still on crutches and appeared bashful, but this had to be progress.\n\n\"It smells wonderful in here,\" James said. \"Thanks for keeping an eye of dinner.\"\n\nIt was Abe who responded. \"No problem. Glad I didn't burn the house down.\"\n\n\"Can I do anything to help you?\" Cecilia asked, shrugging off her topcoat and showing off her velvet cranberry dress to full effect.\n\n\"Clara, is the table set?\" Abe asked.\n\n\"Nearly, I just need napkins, a pitcher of water, and the wine glasses.\"\n\n\"I'll get the napkins,\" Cecilia responded. <br >\n\nAll was well in hand. So James went to grab the finishing touch. It wasn't often that he decanted wine, but tonight felt like a fine evening to break out a show-stopping bottle: Before he died, his father laid down a case of 1999 Burgundy. James had only opened one a few years ago, and it promised to improve still with more time. He was glad he thought ahead and stood the bottle upright. He blew the dust off the label, inspected the cork, and gingerly began to open it.\n\nEveryone else filed into the dining room, but James refused to rush decanting the wine. His patience was rewarded when most the sediment was left at the bottom of the bottle and the ruby liquid safely decanted into the crystal container. James would leave it to sit and breathe through the first two courses. In the dining room, the champagne was already merrily glittering in flutes.\n\n\"Ready for the first course then James?\" Abe asked, pretending to be annoyed.\n\n\"Only if you're ready for a life-changing glass of wine later, Abraham.\"\n\nFor Christmas dinner, Cecilia and Clara held nothing back. Smoked salmon tartlets, leek and mushroom soup, a crown roast with all the trimmings and even a traditional pudding. Without James's help, (especially on the pudding) Cecilia wouldn't have been able to pull it off.\n\nThey said grace quickly and James started passing the miniature salmon tarts around the table. Clara politely took a tart, surreptitiously eyeing everyone else's plate as they tucked in. Appreciative murmurs filled the room. It seemed Abe, James, and Cecilia had come to a silent understanding that they wouldn't say anything about Clara's appetite\u2014or lack thereof.\n\nThe soup smelled heavenly. The earthy mushroom aroma carried across the table, boasting of a sherry and cream enriched broth. Though Clara wanted to wave the ladle away, she allowed James to give her a bowl.\n\n\"Cecilia, outstanding job on dinner. This truly is a feat,\" Abe complimented her.\n\n\"I had help,\" Cecilia said mildly.\n\n\"I was just an extra set of hands,\" James said. \"You were in charge of the kitchen.\"\n\nClara felt bad that she'd left Cecilia to tackle such a challenging menu. She'd looked forward to spending the day cooking together when they choose the dishes. Clara hadn't planned on eating most of it at the time . . .\n\nClara took a small spoonful of soup. \"Well, I couldn't have done it better myself,\" she chimed in.\n\nShe appreciated that the other masked their surprise. \"It really is lovely and silky smooth.\"\n\nCecilia gave a wide smile. \"It was worth using the sieve then?\"\n\nClara nodded and even managed a bite of the salmon tart. She was happy everyone was together. This was the Christmas they didn't have last year. Why was this so hard? And why was there so much food? They hadn't even gotten to the main course yet.\n\nAbe tried to school himself to be calm and neutral. It seemed Dr. Olsen had been right about giving Clara space. Throughout dinner she only gave herself small portions, but at least no one had to coax her. She even let Abe put a chop on her plate with no objections, although she refused the mint sauce. He didn't understand her logic, but wasn't about to object to this welcome change.\n\nConversation was light, with a somewhat inauthentic air of breeziness, but it was because everyone was avoiding the elephant in the room. They applied themselves to the task of being grateful instead of wishing it were otherwise.\n\nClara ate food off her plate in an odd rotation. First a bite of lamb, then the buttered parsnips, then two bites of sprouts. She tried to tell herself that the sprouts were still healthy, even though Cecilia had obviously braised them with bacon. Dr. Olsen told her to come up with whatever rules she needed to in order to eat through the holiday. Maybe this 1:1:2 ratio would help fill her up before she ate something really fattening.\n\nJames deftly poured the French red as they tucked into the perfect medium-rare lamb. \"Let's see how France tasted in 1999, shall we?\" He made to skip Clara, as she hadn't touched her bubbly, but Clara spoke up.\n\n\"Would it be okay if I had a splash James? I-I-I bet it will pair lovely with the lamb.\"\n\n\"Of course Clara. It's not every day you get to taste the past like this.\" He gave her a conservative pour.\n\nDr. Olsen also said the only rule she shouldn't break was that she should enjoy the holiday as much as possible. Alcohol was all sugar, but James had turned the dinner into an even greater occasion when he opened this bottle. It was a struggle to be polite, but Clara saw the effort everyone else was making on her behalf.\n\n\"So where were we all in 1999?\" she asked, trying to sound nonchalant. \"Abe, you first.\"\n\n\"Hmmm. Eighteen years ago... I was in the Marines then. I'd been in the service for a few years then. We spent Christmas somewhere in the Persian Gulf.\"\n\n\"Must have been lonely,\" Cecilia mused.\n\n\"It was a bit. But we were all lonely together aboard that ship. Some of the lads with family were given special leave. But I didn't have a wife, kids, or even a girlfriend then. It was better to stay behind and give the other fathers a chance to be home for Christmas.\"\n\n\"What about you Clara?\"\n\n\"Mine was so different. I was still in school. I was dancing even back then.\" Clara struggled to sound normal as she mentioned ballet. \"We did a local production of The Nutcracker. Our teachers and the upper-level girls did the solo parts. We didn't even have enough boys to fill the cast. One of the older girls had to play the mouse king! I must have been 12 or 13 then, so I was probably a snowflake. I was glad to be done playing a mouse.\" Clara realized she could practically track her life based on which role she played in the Christmas ballet. Strange, it had always been such a fixture in her life.\n\nAbe redirected quickly. Clara had been difficult to read, but he knew they didn't need to dwell on dance castings at the moment. \"What about you Cecilia? How were you celebrating Christmas in 1999?\"\n\n\"You'll all laugh.\"\n\nJames narrowed his eyes and sipped his wine, impressed at the rich bouquet and beautiful color. He swirled it, waiting. Still Cecilia was reluctant to share her memories from Christmases past. \"Go on. It's not fair if you don't tell us.\"<br ><br >\"You first,\" Cecilia countered.\n\n\"Alright. That's easy. I was here. On break from law school and trying to keep my parents from arguing. Clive was here too. In fact, I think he inadvertently started that argument. He got on me about my piano studies again. Mum and Dad didn't appreciate it.\"\n\n\"I'm glad you listened to him. It would have been a shame to let that talent go to waste,\" Cecilia said quietly.\n\nJames took a sip of wine, silently toasting his uncle. \"But now it's your turn, Cecilia.\"\n\n\"We'll I would've been in middle school. We would have done an evening mass at church. My choir sang the music for that one. And that year I had a solo for 'What Child is This?' After we'd pick up Chinese food and have dinner at home.\"\n\n\"Chinese food?\" Abraham asked.\n\n\"Yeah, my mom worked retail and she could never get off on Christmas Eve, so she couldn't make a big meal like this.\"\n\n\"Must have been kind of fun, though,\" Clara offered.\n\n\"I guess.\" Cecilia sighed. \"I always felt like I was missing out, though.\"\n\n\"On what?\"\n\n\"On this. A lovely meal with people who really care.\"\n\n\"Well, let's drink to that then. Happy Christmas everybody!\" James raised his glass and the others did the same, clinking glasses and smiling.\n\nIt wasn't a Christmas miracle. Nothing, not even love, could work that fast, but there was a glimmer of hope that charged the air as they finished their meal. Even if it was only for tonight, Abraham felt some relief at seeing his wife resemble the woman he knew and loved.\n\n***\n\n\"I wonder, as I wander, out under the sky...\"\n\nJames and Clara were singing some of the more obscure carols that Cecilia wasn't familiar with. James, in his rich tenor sang a harmony against Clara's melody. Admittedly, Clara's talents lay elsewhere, but it was Christmas and James was in such a good mood as to ignore her thin vibrato and frequent flat tones.\n\nAll four of them were gathered in the attic, circled around the piano. Abe and Cecilia brought a thermos of spiked hot chocolate and a tray of sweet nibbles up, and all four of them were making rather merry indeed.\n\nCecilia had heard some of the songs before, and once Clara passed her a booklet with the words printed inside, she joined in. Even Abe, after his second mug sang the bass parts in his booming voice.\n\nJames knew these old carols by heart. He closed his eyes and listened to the rather imperfect choir assembled in his studio and didn't know if he'd ever had a better Christmas. Clara stopped singing for a moment and left Cecilia with an impromptu solo on \"In the Bleak Midwinter.\" She may have missed a rest and didn't hold the notes where they were indicated, but James caught her mistakes, following her so that it was imperceptible. He wouldn't have done that for anyone else . . .\n\nYears ago, as he was building up his music career in his off-time from law, he'd been asked to play for a community choir. He'd lasted all of 3 weeks before quitting in a huff; the 'conductor', as she called herself couldn't count music and wouldn't pick any real choral repertoire. James hated it and the amateurs who pretended to be so knowledgeable. Thank God, Cecilia didn't seem to take this so seriously. It was another thing about her that made her so perfect for him.\n\nEventually their energy faded and even another mug of hot chocolate wasn't enough to revive them. They said their \"goodnights\" and all settled in for a long winter's nap.\n\n***\n\nWhat time is it? Cecilia thought as she blinked her eyes open. She felt incredibly well-rested. They'd made merry until the early hours of morning. The sun was sparkling off a fine dusting of snow. She rolled over and found James leaning on his elbow, looking at her.\n\n\"Happy Christmas, Cecilia,\" James said in a low voice.\n\n\"Happy Christmas, Sir.\" Cecilia said with a wide smile.\n\nCecilia gave him a kiss on the cheek. \"What time is it?\"\n\n\"A little after eleven.\"\n\n\"Well, that explains why I'm so well rested. How long were you waiting on me?\"\n\n\"Not very long. I only got up right before you did. There's no rush today anyway.\"\n\nHe kissed her, starting gentle but letting a faint edge emerge. After the frenetic activity of preparing for Christmas and especially cooking yesterday's dinner, it was glorious to have nothing to do.\n\nCecilia melted into James' kiss, holding nothing back. It let him take his time, drawing out a simple token of affection into a nearly torturous overture. Cecilia pressed herself closer to James, wrapping her legs around his and sinking into the comfort of their bed.\n\nIn no real hurry, James shifted until he was on top of Cecilia. He felt her complete surrender. It took just the slightest of cues for Cecilia to go right where James wanted her. That, more than the soft way she responded to his kiss now, or the way she relinquished control, was what had James strangely at her mercy. He'd do anything to have her sweet submission every day for the rest of his life.\n\nJames broke the kiss, smirking somewhat as Cecilia floated back down to earth. It was the only way to maintain some control of the situation. She reached up for him, and predictably, he caught her wrists and pinned them down on either side of her head. Cecilia felt her pulse quicken. \"Sir...I...\" she whispered.\n\n\"Shhh.\" James sat up. \"It's Christmas morning.\" He sounded almost businesslike. \"We can't stay in bed all day.\"\n\n\"But\u2014\"\n\nJames didn't even bother responding. He let her go in a rush and opened his wardrobe. He pulled on a dressing down and loose track pants. For someone who said he wasn't in a hurry, he dressed with gusto.\n\nHe turned to Cecilia with a brightly wrapped green box. \"Happy Christmas!\" he said grinning and depositing the box in her lap.\n\n\"Oh! Wait, I have yours downstairs.\"\n\n\"No. Open this one now.\" Cecilia had a feeling she knew what it was. She peeled back the wrapping paper and opened the box to find her suspicions confirmed.\n\n\"Should I wear this now?\" she asked.\n\n\"I'd rather hoped you'd find an occasion to wear it soon,\" was all that James said.\n\nCecilia peeled away the blankets and happily pulled on the super soft evergreen tartan nightshirt and thick cream colored cable-knit socks that reached up over her knees.\n\n\"Warm enough?\" James had searched high and low for something that would be warm and soft, but not frumpy. Looking at her, he though he'd struck the perfect balance. She looked adorable.\n\n\"Yes! Thank you!\" Cecilia luxuriated in the feeling of her comfy loungewear for a moment before she looked up.\n\n\"Can I give you your presents now?\"<br >\n\nJames stalled. \"How about we do breakfast and tea first?\" He was nervous about the gift he was most excited to give her.\n\n\"Okay. I think we have leftover tarts from last night's dinner. I'll make the tea and coffee if you want to warm those up. And then I'm giving you your presents.\"\n\nThey went downstairs to find they were the first ones up. They set themselves to setting out an array of cheese and charcuterie, refiring some of the previous evening's leftovers, and brewing coffee and tea.\n\nThis was the better part of Cecilia and Clara's Christmas Eve menu: there was no need to lift a finger to eat today!\n\n\"What's that for?\" James asked as Cecilia poured orange juice into a carafe.\n\nShe looked a bit guilty and bit her lip. \"Well, after coffee and tea, I thought, since we don't have to do anything except enjoy ourselves today... we could have some mimosas?\"\n\n\"And you thought I'd be disappointed in you or upset?\"\n\n\"Well, it is early to start drinking...\"\n\nJames laughed so hard he had to lean on the counter to keep himself standing upright. When he finally caught his breath, he gave a deep exhale. \"Go on and get that ready.\"\n\n\"So you won't judge me?\"\n\nShe was too precious like this. \"As long as you won't judge me for the numerous times I've had harder alcohol earlier than this.\"\n\nShe kissed him on the cheek. \"Can't judge you for something I don't know about,\" she teased.\n\nJames bit his lip. Best to be honest in any case. \"Well, there was awhile there... As a matter of fact, that was the chapter in my life when...\"\n\n\"...You were searching?\" Cecilia finished the sentence for him, exonerating him of his past drinking habits and the poor judgment that had upended her life.\n\n\"You've managed to make that period of my life sound so innocuous. 'Searching' is rather an understatement.\"\n\n\"It's over, Sir. There's no way we can change it...\" she sounded so pragmatic. It made James worry again at his profound selfishness.\n\n\"I suppose not.\" He swallowed and changed the subject. \"Shall we enjoy breakfast in the den?\"\n\n\"As long as you bring the champagne and orange juice too.\" Cecilia welcomed the diversion. She didn't like when James aired his regrets about how she came to be with him.",
        "***\n\nIt wasn't long after James and Cecilia were curled up in the den, nibbling on breakfast and listening to music that Abraham appeared with Clara in his arms.\n\n\"HAPPY CHRISTMAS!\" Cecilia and James called out.\n\n\"And to you!\" Abe boomed. He set Clara down on the sofa. \"Who thought of mimosas?\"\n\nCecilia blushed and raised her hand.\n\n\"Brill. Shall I make you one Clara?\"\n\n\"No, I'll stick with tea thanks. No sugar,\" his wife said in a quiet voice. The other three exchanged a glance and Abe shook his head. It was unlike Clara to pass up anything with bubbles.\n\n\"Well, those parcels aren't going to unwrap themselves.\" James said. \"Cecilia, why don't you start with Abe and Clara's gifts?\"\n\nIt wasn't ideal that they were tip-toeing around Clara's condition, but everyone was trying and today, that was what mattered. Cecilia took the cue and jumped up to get Abe and Clara's presents from under the tree. Abe did the same. Cecilia settled next to Clara as she presented her with her gift, first wrapping her in a hug. They didn't say anything, and they didn't have to: they loved each other like sisters. Cecilia only hoped that her prayers for Clara's health were heard.\n\nPaper rustled and tore. Mild exclamations broke out as each took in the thoughtfulness of each other's gifts. Clara had needed a new set of warm-ups for rehearsal and Cecilia had found a very flattering one in soft grey and butter-yellow. She probably would have ample chances to wear it since she'd have to sit rehearsals for a while. The novel, too, was a welcome gift and distraction for her recovery. James gave Clara the same gift every year, and every year it was perfect: a foot therapy cream. But this year, he threw in a lovely high-end lavender body butter. \"I thought the two of you might find a use for it,\" he said slyly.\n\nCecilia raised her eyebrows at the somewhat intimate present. Clara caught her face and laughed. \"Don't worry Cecilia, James will thank me later for helping him pick out your new pajamas! Didn't I say they would be perfect James?\"\n\n\"You did, and I never doubted you,\" he agreed. Cecilia turned crimson.\n\nAbe had something of a very Arsenal Christmas as James gifted his best mate with VIP tickets to see Arsenal play Tottenham; Cecilia's scarf was the perfect accompaniment to James's gift.\n\nJames opened his customary gift from Clara: a bottle of Ardbeg and a pair of rather vibrant polka-dot socks. \"Perfect every year Clara. You know me well.\"\n\n\"Yes, she knows what a bore you are James,\" Abe added reaching for some orange juice to refill his glass.\n\n\"I shudder to think of you being creative, Abe.\" James muttered, opening a rather large box.\n\n\"Actually, James, I think I rather nailed this one.\"\n\nAs the paper gave way, James had to agree. \"Abe, this is perfect.\"\n\n\"It's for both of you actually, from me and Clara.\"\n\n\"What is it?\" Cecilia asked.\n\n\"A picnic for two!\" Clara said happily. James showed it to Cecilia: a whole picnic hamper, complete with silverware, wine chiller, and glasses all neatly organized in their special compartments, with a few boxes of biscuits and jars of marmalade.\n\n\"Oh!!! Can we take it to the park when the weather gets nicer?\"\n\n\"That's the idea. Or James, you could take a drive up to the Cotswolds...\" Abe suggested.\n\n\"That's a splendid idea for the spring. Thank you!\"\n\n\"Cecilia, open yours!\"\n\nCecilia wasted no time with the paper. Her gift revealed a blanket that matched the pattern of the plates in the hamper. It was quite soft too. \"This is lovely!\"\n\n\"It's almost as if you're saying we should take this on a romantic getaway,\" James said sarcastically. \"Trying to get rid of us?\"\n\n\"Maybe,\" Abe joked back. \"Or we just really need Cecilia to stick around. You're much better company when she's here.\"\n\n\"In all seriousness, we're so happy to see you two together.\" Clara added.\n\nThey all shared hugs and Cecilia started to pour mimosas for her and James. \"Another Abe?\"\n\n\"I would, but we were planning to go see mum today. Still feel up to it Clara? I can go on my own if you don't want to bother with the crutches.\"\n\n\"No, I'll come.\" The chill that had emerged between her and Abe was thawing somewhat and she didn't want be lose the easier report they were re-developing after the past few stressful days. \"Just give me some extra time to get ready.\"\n\n\"I didn't realize your mom was so close, Abe. Do you see her a lot?\"\n\n\"Not all the time, but she lives in West London. She likes her independence, though, so she likes it that way, and I'm close enough to be here if she needs anything.\"\n\n<br >\"Where's Clara's family?\"\n\n\"Ireland, still. We alternate taking trips up every few months. But, for obvious reasons we thought it best to keep things quiet...\"\n\n\"How long will you be gone Abe?\" James inquired.<br >\n\n\"Thought we'd stay for luncheon and a mug or two of mum's smoking bishop.\"\n\n\"Sent her my regards and regrets, will you?\"\n\n\"I filled her in on Cecilia. She knows your regrets are cursory, mate. We'll see if she thinks your regards are worth more.\"\n\n\"Fair enough,\" James grinned.\n\n\"Am I interfering with a tradition?\" Cecilia asked.\n\n\"Not at all. If it makes you feel better, Mum specifically didn't invite James when we told her he'd found someone. I believe her words were, 'It's about time. Now he can stop coming over and eating me out of house and home.'\" Abe affected a high-pitched feminine voice, meant to mimic his mother.\n\n\"Mrs. Kendrick has hosted me graciously during some of my lonelier holidays. Especially after my uncle passed.\"\n\n\"That's very nice,\" Cecilia said, listening.\n\n\"Nice had nothing to do with it. She felt sorry for the poor sod.\"\n\nCecilia looked a bit aghast. \"Does she really dislike you so much?\"\n\n\"No. She's like a second mother, or better aunt or some sort of relation. But I'm excited to be starting another tradition and not having to be the third wheel every Christmas and New Year.\"\n\n\"I best get ready and see if Clara needs any help.\"\n\nAfter Clara and Abe got ready, James helped them pack Abe's mum's presents in the car, and they set off.\n\n\"I'm going to confess. I'm excited we have the house to ourselves for a bit,\" James said once they were alone.\n\n\"Can I please give you your presents now?\" Cecilia had the distinct feeling James was putting her off on purpose. She noticed the much larger array of gifts that seemed to be for her. She refused to be self-conscious though. She was too excited to give James his presents.\n\n\"In a moment. We have all day. What's the rush?\"\n\n\"Sir!\" Cecilia could tell he was messing with her.\n\n\"Okay, okay.\"\n\nCecilia started by giving him the new plum shawl-collar jumper she found at Harrods's.\n\n\"Is it the right size?\"\n\n\"It's just right, and I don't have anything like it. Thank you Cecilia. I may wear it later if we decide to change for dinner.\"\n\n\"Oh good. I wasn't quite sure...\"\n\n\"It's perfect,\" he reassured her. But now it's my turn.\"\n\nAs it turned out, it was his turn three times over; he presented Cecilia with a stack of boxes tied together with ribbon. Inside she found a new set of brown suede boots. The second box had a matching suede coat, perfectly tailored. The last box had a wide-brimmed matching felt hat with classy brass accents. <br ><br >\"I know how you like those complete outwear looks.\"\n\n\"This is too much! And how did you know?\"\n\n\"Every time you and Clara mention the latest photos of the Duchess of Cambridge, you always pick out the same details.\"\n\n\"You noticed that?\"\n\n\"When it comes to you Cecilia, there's not much I don't notice. Do you like it?\"\n\nCecilia ran her hand over the exquisite suede. \"Yes, Sir. But...\"\n\n\"No 'buts', Cecilia. Let me enjoy having you here with me on Christmas.\"\n\nCecilia found she couldn't object to his simple request.\n\n\"I nearly gave it to you before we went up to Cambridge, but I managed to wait.\"\n\nJames kept pulling boxes from under the tree, over Cecilia's objections. Next she unwrapped a bespoke scarlet corset, which was stunning and somehow elegant enough to wear out. It made Cecilia wonder if she'd ever be brave enough to wear the piece in public. She wanted to. \"Oh thank you! I love it!\"\n\n\"Do you? I'll admit that's more a gift for me than for you...\"\n\n\"No, I really do like it. Does it lace up like a real one?\"\n\n\"It does. I had it made to your measurements, so it's probably the only thing I know for certain fits you. You are so tiny,\" James quipped.\n\nJames plied her with a few more boxes, flooring Cecilia with a new mini tote from Fendi, an enamel and gold bangle, and a new eReader. Each gift was more perfect then the last. It wasn't until he foisted a new Burberry merino poncho on her that he let Cecilia give him another gift.\n\n\"I thought this might be fun...\" she said as a preamble. He unwrapped a thick cocktail recipe book with gorgeous colored photographs.\n\n\"This will be fun!\"\n\n\"Good, then maybe you should open one more!\"\n\nJames relented and found a smart stainless steel set of tools for making craft cocktails. \"I take it you aren't worried about my alcohol consumption then?\"\n\n\"No, I am not Sir.\"\n\n\"I think you're secretly a lush, Cecilia.\" He teased her for the sheer enjoyment of watching her turn pink.\n\nJames considered that he may have gone overboard after Cecilia unwrapped a silvery lilac and lace Elle Saab dress and a set of luxurious botanical-based lotions, but he hadn't been able to do this in such a long time. There was a practical element though; Cecilia had discarded or given away much of her wardrobe before leaving Philadelphia and he fully encouraged her decision to rebuild without the emotional baggage of her old life.\n\n\"Sir, you know this is really too much...\"\n\n\"I know you think so. But I had such fun.\"\n\n\"Can I give you a small one?\"\n\n\"Go on then.\"\n\nCecilia gave him a narrow box.\n\n\"Can I guess?\"\n\n\"You can, Sir.\"\n\n\"A pen.\"\n\n\"You'll have to open it to find out.\"\n\nJames laughed as he opened the box. \"Do I get points for it being a writing instrument?\"\n\nCecilia shook her head. \"I don't think it works like that.\"\n\nThe mechanical pencil in the box wasn't something one could pick up at the local office supply store. It took a thicker gauge of graphite. \"Not sure if you knew, but these sort of pencils are perfect for writing notations on sheet music. Thank you!\"\n\nCecilia tried to hide her enigmatic smile. \"I'm glad it works for you.\"\n\nJames hugged Cecilia next to him. Before he gave her her last present he just wanted to capture the moment. All things considered, this was a lovely Christmas, one of the loveliest ones he'd had in some time. He wanted to hold on to the memory, just in case he didn't get what he wanted this year.\n\nCecilia saw that the collection of presents had significantly shrunk, somewhat to her relief. \"Wait. There's one more for you.\"\n\n\"Okay. Have at it.\"\n\nThe box was large and flat. \"Happy Christmas, Sir.\" Cecilia handed him the box, which seemed to have been wrapped with extra care. James took his time opening it.\n\nThere were two compartments inside, with two smaller boxes. The one looked just like the box the pencil had arrived in... he opened that first. \"Oh, Cecilia. This is very nice.\" James unscrewed the cap on the fountain pen, testing its weight in his hand before writing his name on the reverse of a scrap of wrapping paper.\n\n\"You don't already have one like that?\"\n\n\"Not like this. Thank you!\"\n\n\"You're not done yet!\" <br ><br >\"Quite right, but truly, this is a wonderful surprise. Let's see what's in this box...\"\n\nJames unwrapped the tissue paper from the leather-bound journal. \"And you got it with my initials!\"\n\n\"I think you should open it.\"\n\nJames unbound the leather thong that held the book closed, wondering if Cecilia had written him a note inside. Instead, crisp bars trailed over the luxe paper. \"Is this staff paper?\"\n\n\"I think that's what the man called it. For writing music, right?\"\n\n\"Yes... where did you find this? I've never had anything like it.\"\n\n\"A shop not too far from here. You like it then?\"\n\n\"Cecilia!\" James didn't have the words to express how happy he was that Cecilia didn't hold his musical career against him. It had been such a problem with Josephine. Then he tried another relationship with Natasha, half hoping that their shared career would be a source of strength in their relationship. But Cecilia supported his love of music without being jealous of it. He loved that about her.\n\nJames gave her a fierce hug. \"This is one of the most thoughtful presents anyone has ever given me. I mean it.\"\n\nCecilia gave him a squeeze and an earnest grin.\n\nThe sincerity behind Cecilia's gift gave James the extra courage to proceed as he had planned.\n\n\"Do you remember when you asked me what I wanted for Christmas, Cecilia?\"\n\n\"I do. And you were no help at all. You're sure you like your presents?\"\n\nJames smiled and gently took hold of Cecilia's upper arms, guiding her to sit. \"I do. I quite like them. And I was no help on purpose. Do you remember what I said?\"\n\n\"'An answer.'\"\n\n\"That's right. Maybe it will make more sense after you open this.\"\n\nJames held out a similarly large, flat, box wrapped in red paper with a white ribbon.\n\nCecilia could tell this was important to James. But she was more puzzled than ever. She looked up at James through her eyelashes.\n\n\"I don't understand.\"\n\n\"Open it first.\"\n\nCecilia took equal care unwrapping the paper, giving the box a shake. It wasn't particularly heavy. She lifted the lid. There was a leather document folder. In a separate compartment was a tiny black box with the word 'yes' embossed in gold script. Cecilia reached for it.\n\n\"Wait. Open that last,\" James bit out, clearly waiting on tenterhooks.\n\nCecilia was more curious than ever. She reached for the leather pouch. Opening it, she pulled out a set of official-looking documents and a smaller velvet envelope. James tried to be patient as Cecilia read:\n\n\"Application for Duel Citizenship. Didn't you have me sign this already?\" She asked looking up at him.\n\n\"No. You signed an application for permanent resident status. That made you a legal alien,\" James said quietly. \"Why don't you see what's in the pouch?\"\n\nCecilia turned her attention to the black velvet. This looked like jewelry.\n\n\"Oh!\" She exclaimed. A silver-coloured band poured out of the pouch. It was stiff, but had an odd liquid-like quality. It was too wide to be a bracelet...\n\n\"James\u2014Sir, sorry! Is\u2014is this what I think it is?\"\n\n\"That rather depends on what you think it is, little one.\"\n\n\"Is this a collar?\"\n\nJames tried to keep his expression neutral. Cecilia looked dumbfounded. Then she looked at the tiny box and James smiled as she put the pieces together. She shook the box, and finally lifted the lid, pulling out a silvery little tool.\n\n\"This is the key?\" she asked smiling.\n\nJames nodded. He relinquished control the minute he gave her the box. He had to wait on Cecilia now. How odd to feel so vulnerable at a time when he thought he'd be asserting his dominance. Cecilia had all the power here. He wondered if she knew.\n\nCecilia sat in the chair looking at the bureaucratic documents. \"Sir, how does this application change my immigration status?\"\n\n\"You have to remain a full-time resident for five years. You wouldn't be able to travel out of the country for long periods of time without jeopardizing your application. Right now, you can come and go as you please while your visa and passport are in good standing. This is a longer-term commitment.\" James could practically see the cogs turning in her head as he answered her question. He'd filled in all of Cecilia's information already. All she had to do was sign.\n\nCecilia felt tears welling behind her eyes. He wanted her. She examined the fine band of metal in her hands. The clasp was nearly invisible, but near it, she could see her initials and James's.\n\n\"I'd prefer if it not be easily removed.\" Cecilia heard James's voice in her memory, clear as the day he'd said them while they shared afternoon tea at the Plaza Hotel.\n\n...The lid of the box, said 'yes'.\n\n\"Yes!\" Cecilia jumped up and wrapped her arms around James's neck, too euphoric to notice the immigration papers fluttering to the ground. \"Yes! Yes!\" Cecilia repeated.\n\nJames couldn't believe his ears when Cecilia finally spoke. Yes.\n\nHe held her tighter and kissed her without reserve. Cecilia raised herself on her tiptoes and pulled away only when James lifted her, spinning in his exuberance. \"Do you mean it?\" he asked.\n\n\"Do you mean it?\" Cecilia returned his question. James set her down on her feet, still holding her close.\n\n\"Yes, Cecilia.\"\n\nShe handed James the fiddly-looking key. He kissed her hand as she offered it to him.\n\n\"This was the answer I wanted. I just wasn't sure it was fair to ask you.\"\n\nCecilia touched the velvet chocker she still wore. \"You already did.\"\n\n\"No. I asked you when you didn't know what it meant. I'm asking you now, now that you have clarity into what I want and what this means to me.\"\n\n\"My answer is still the same.\"\n\n\"Yes, but it comes with a few changes. Duel citizenship for one. And you've had time to see if this is what you want. You've been able to recover without the stresses of returning back to a life filled with uncertainty. I owed you the chance to change your mind.\"\n\n\"Thank you. But I don't want to change my mind.\"\n\nJames closed his eyes, not believing his good fortune, struggling to accept the words he most wanted to hear.\n\n\"May I?\" he asked after a moment.\n\nCecilia spun around and lifted her hair, exposing her neck so James could replace the necklace he gave her in New York with the permanent collar. \"How does the clasp work?\"\n\nJames answered in a low, wicked voice. \"You don't need to worry about that.\"\n\nHis response was filled with dark promises, and it was all Cecilia could do to remain still as James fastened the intricate clasp. \"Want to see how it looks?\"\n\nCecilia nodded and scurried to the hall mirror. The collar was a radiant silver that captured the light, about two centimetres thick, and just hugged her throat. It was comfortable, but Cecilia wouldn't be able to forget its presence.\n\n\"It's platinum and white gold. I think it suits you.\"\n\nCecilia beamed, looking at James in the reflection. \"I love it.\"\n\nHe spun Cecilia around, kissing her again. She said yes, and this time, he trusted her answer. \"I'm so happy that you're mine, Cecilia,\" he whispered in her ear. \"I've never had a better Christmas.\"\n\nA few tears escaped, and Cecilia nodded, laughing through them. \"Neither have I.\" Her voice caught. \"This is easily the best Christmas I've ever had. So you want to keep me?\"\n\n\"Cecilia, I love you. Of course, I want to keep you.\"\n\nHe'd finally said it. And far from sounding awkward or clich\u00e9, it felt so right.\n\n\"I love you too, Sir.\"\n\nJames felt lighter than air. If Cecilia wasn't there with her arms around his neck, he thought he might float away.\n\nHe took a step back. She was really there, wearing the delectable new pajamas and woolen socks, with his collar gleaming around her neck. This was all he ever wanted.\n\nCecilia, for her part was still smiling through happy tears. She did love him. She'd been so afraid that she hadn't even admitted it to herself before she said the words out loud to James. She didn't know how to express or contain the joy.\n\nJames rescued her from her emotional paralysis. She couldn't remember feeling so overwhelmed by such wonderful feelings. James had her wrapped in his arms again, his mouth claiming hers, sending small electric pulses down her spine. \"You're coming with me.\"",
        "He tugged on her arm and she followed him up the stairs, taking them two at a time. James's energy was fiery and infectious. It made Cecilia realize that underneath her shock and happiness that there was a steady pulse of arousal. Once they were upstairs, she didn't wait for instructions or orders as James lit a few candles. She peeled away her nightshirt.\n\nJames turned to see Cecilia, dressed only in her lacy pink knickers and matching bra with her thigh-high socks and bright collar. \"Wait,\" James said, stilling her reach for the tie on his dressing gown. He loved her eagerness, but he was struck by her provocative appearance. Her curls were tumbling down her back. She wasn't wearing a lick of makeup. The natural look suit her, making her appear even younger than usual without the kohl cat-eye she usually favored when they went out.\n\nHer body was supple and her socks had the affect of making her legs appear longer, even as his eye was drawn to her shapely rear...\n\nSMACK!\n\n\"Oww! What was that for?\"<br >\n\n\"No reason. I thought you were looking a bit pale.\"\n\n\"But I thought I've been good this year.\"\n\nWas that a pout? Was his shy little submissive trying to play with him?\n\n\"Indeed? Are you appealing to my forgiving nature?\"\n\nCecilia surprised him with her witty response: \"I am appealing to you sense of justice, Sir Ashton QCMP.\"\n\nHe raised an eyebrow. \"In that case, I'll allow you to make your appeal.\"\n\nThis sort of banter was new to Cecilia. She looked uncertain. It helped that James did not appear stoic or uncompromising, as was his wont. His smile and the playful glint in his eyes made him look younger, too.\n\nCecilia gathered herself up, tossed back her brown locks, and proceeded look him directly in the eye as she pulled the tie loose on James's dressing gown. She trailed her nails down the planes of his torso, starting at his shoulders and working down only to trace her fingers up on either side of his spine and pulling him close for an embrace. She felt his cock already pressing into her. The confirmation that he wanted her as much as she wanted him was gratifying and increased her sense of urgency. She pushed the rich fabric off his shoulders.\n\nJames enjoyed the way Cecilia made herself comfortable with his body slowly. There was nothing demanding or privileged about the sensual way she lightly touched him, eliciting a desire separate from the one that usually drove him to take and own. Now there was a simultaneous desire to worship, adore, and exalt. It was as she started leaving nearly microscopic kisses down his chest that, that James remembered himself. He stepped away from Cecilia. \"An interesting appeal, but my dear, you have yet to address the charges against you.\"\n\nHow different it was to be writing the rules of the game as they went. Cecilia considered what James said, only to feel him scoop her up and toss her on the bed. \"Oh!\" She landed with a soft thump. \"And what are the charges, Sir?\"\n\n\"Indecent exposure.\"\n\nCecilia wasn't sure what she expected. She laughed, but after a lightning-quick assessment of the situation, she wasn't sure how to refute the 'charges.'\n\nJames raised his head a fraction as he paced towards her on the bed, failing to hide his smile. \"How do you plead?\"\n\n\"Not guilty, Sir!\" Cecilia tried to look contrite and innocent, a difficult feat that she nearly managed, dressed only in her knickers. She gathered her limbs, sitting with her chin on her knees with her arms wrapped around her legs.\n\n\"You know, it will only go harder for you if you are found to be lying about your guilt. Are you sure you wish to plead 'not guilty?'\" he challenged.\n\n\"Sir, I'm sure.\" Cecilia knew she was setting herself up, but it was too much fun to play along.\n\n\"Hmmm. I'll have to review the evidence.\" James sat on the bed in front of Cecilia. \"How did you come to be so clothed, Cecilia?\"\n\nHe took hold of her wrists, kissing her knuckles again, but the simple gesture promised something more.\n\nCecilia bowed her head, trying to think of some sort of defense. James noticed the instinctual attempt to hide, and lifted her chin. Now was when she felt exposed. Cecilia was fixed by James' stare and the way he never wavered in his almost single-minded assertion that she would not hide from him.\n\n\"Umm... Sir...\"\n\n\"I'm listening. Do not waste my time with weak excuses Miss Lavigne.\" James smirked as Cecilia struggled to find a suitable defense. It wouldn't matter what she came up with though, as James used the time she spent pondering to unhook her bra.\n\n\"Sir! Surely this is not how depositions are conducted!\"\n\n\"Well, if you don't give me an answer, I may have to treat you as a hostile witness... I'm still waiting for your explanation.\"\n\nCecilia sometimes forgot that James had a past career as a barrister. This was a sure reminder. \"Sir . . .\" she paused trying to buy time as James pulled some heavy handcuffs out of the drawer of his nightstand. \". . . Surely there are extenuating circumstances . . .\" She pulled away as she saw the intent written on his face.\n\nJames relentlessly followed the movements of her body. \"I see that there are numerous reports on your file of resisting arrest as well, Miss Lavigne. Do you believe you are above the law?\"\n\nCecilia's sly evasions were no match for James's precise movements. She felt a shiver down her spine as she heard the cuffs click into place, heavy and cold around her wrists.\n\n\"No, Sir!\"\n\n\"You're wasting my time Miss Lavigne. I've heard enough. I find you very guilty of indecent exposure.\"\n\nCecilia bit her lip, but didn't hide her smile. \"No, Sir, please!\"\n\n\"It now falls to me to pass sentencing.\"\n\n\"Please, I'm innocent!\"\n\nJames palmed Cecilia's breasts, cutting her protest short and eliciting an erotic moan.\n\n\"I've never heard anything less innocent in my life. You've perjured yourself, Miss Lavigne.\"\n\n\"What will you do to me, Sir?\"\n\n\"We'll see. You've thrown yourself on my mercy. I'm still deciding...\" James enjoyed the tiny sparkle of uncertainty in Cecilia's eyes. \"This is not your first offense, I'm afraid. But it seems the usually methods have failed to make the appropriate impact.\"\n\nHe moved away, enjoying the juxtaposition of a nearly naked Cecilia, cuffed and blushing on his bed. He was sure she was wet. James stood and paced, letting the playful tension build. James returned to the bed, curious to see how this different side of their play had affected Cecilia.\n\n\"I think we must work on your honesty. Don't you?\"\n\nCecilia saw how he laid the trap. Such a predicament: either way he'd catch her in a lie. She thought it might be best to remain silent.\n\n\"I see you've chosen to keep your silence. Tell me. Are you aroused, Cecilia?\"\n\nShe closed her eyes and breathed, \"Yes Sir.\" She was achy with it now. As fun as this little game was, Cecilia would give anything to have his hands on her.\n\n\"How am I to know you're telling me the truth? You must see that your record is against you.\"\n\n\"Sir. I am. Please?\"\n\nJames knew what she wanted. He inched closer, drawing a dainty ankle into his lap and deftly removing the warm stocking. He did the same with her other leg. \"Lie back, I must see for myself.\"\n\nCecilia pretended to moan in protest, yet she obeyed his direction, wiggling her hips as James pushed her shoulders backwards.\n\n\"I'm sorry. You've left me no choice.\"\n\nCecilia's cuffed hands reached for his chest again and James let her try to distract him. She arched up for a kiss, and for once he let her direct it. This sort of soft play wasn't usually in his repertoire, but he was certain enough about the stability of their relationship in this moment, that he didn't need to demonstrate the full extent of his alpha tendencies to bring out her submission. She'd become such a passionate kisser, melting the dark desires in his heart as she explored his mouth with her tongue, eliciting a tenderness he'd rarely felt in moments like this.\n\nHis hands circled her waist as he knee parted her thighs. She hadn't lied. Her panties were soaked with her wetness. He pulled away the last offending garment as she struggled to loop her cuffed hands around the back of his neck.\n\nGods! He contemplated the newfound tension tugging at his desires as he examined Cecilia again. She was flawless beneath him, trying and failing to bring him closer. When that failed she arched her back and thrust her hips up, begging for him without uttering a word.\n\nJames's hands grazed her tummy and paused at her breasts, kneading them firmly, before pulling her arms back up and over her head, aided by the heavy handcuffs.\n\n\"No. Please?\" She was pouting. It was delicious, and James didn't know if he wanted to give in to her or make it continue. Cecilia's foot traveled up his calf, massaging the muscle until she hooked it behind his knee, finding the leverage she wanted to bring him closer.\n\nIt wasn't vanilla, but it wasn't the same strict power exchange that lay under all of James' encounters. He wanted her right now; he didn't feel the need to have terms and conditions as long as he could have her. His submissive moved underneath him, wearing only the collar that silently declared his ownership and the cuffs that only hinted at the true depths of James's darker tastes. Right now, even they seemed too much. James straightened, straddling Cecilia as he reached for the key in his nightstand.\n\nCecilia couldn't believe when James unlocked the cuffs and tossed them aside with a dull thud. As soon as they were off, she pulled him to her, reveling in the contrast his hard body made against her curves. She buried her face in his neck again, and begged one last time. \"Please Sir.\"\n\nJames removed his pants and boxers with one hand, giving Cecilia's bottom a squeeze with the other. \"Please what?\"\n\n\"Make love to me, Sir.\"\n\nIf he wasn't sure before, James was certain now: he'd never felt like this before. Cecilia's pussy was so wet. He could feel her heat as she ground herself into him. He parted her lips, spreading her moisture even more. Cecilia moaned at the targeted contact. \"That feels . . . so good.\"\n\n\"Good girl.\"\n\n\"I want all of you. Please?\"\n\nJames wanted to tell her she didn't have to beg anymore, but the sound was so sweet. Instead, he lined himself up and slowly pressed into her. He slid easily in, back and forth, rocking his hips gently, exhaling with a grunt as she stretched around his hard length.\n\n\"Yes. Mmmm. Don't leave me.\" Cecilia wrapped her legs around his back, squeezing his shaft internally.\n\nJames wound his arms under her back, lifting her partially by the shoulders, bringing her hips to meet him. He closed his eyes to hear the sound of her breathing. He lost himself inside her, feeling her pulse around his hard length.\n\nCecilia felt as if the rest of the world had ended without them, as if existence itself had shrunk down to just their mingled bodies. That was, until James shifted his hips, adding fiction and heat to the satisfying fullness. Cecilia's head shook back and forth, she was overcome with pleasure so easily, but James wouldn't be satisfied until she reached bliss and beyond.\n\nThe faster he moved the more Cecilia lost her sense of gravity. James was everywhere, in and around her; he was in full control of her senses. Her hips followed his, until at last, he pinned them down with his strong hands, grinding into her slick heat, making her feel every brush and twitch as he led her towards her orgasm.\n\nCecilia dug her nails into his back, pricking James just enough to drive him harder. \"More, please Sir! Please let me cum?\"\n\nJames groaned. Her pleas did something to him. He thrust into her powerfully, making her bite back a scream. Then he stilled. \"I want you to fall apart for me Cecilia.\"\n\n\"Yes Sir.\" In this state, she couldn't be anything but obedient and pliant. She raised her hips again, struggling for more friction, arching for that extra touch\u2014the one, which activates every nerve and wipes out all consciousness.\n\nJames pulled away completely and rolled to his back, his cock standing proudly at attention, shiny with Cecilia's wetness. He didn't have to say anything. Cecilia fisted his cock as she threw her leg over his hips, straddling him as she prepared to pierce her core on his staff. It was so deep this way, and she took an agonizingly slow descent, until he was buried in her again.\n\n\"May I ride you, Sir?\"\n\nJames wanted to lose control then and there at her request. \"You may,\" he groaned.\n\nCecilia leaned over him, her cleavage plump and ripe for tasting. He didn't bite, but licked and sucked until she had to stop her movements to adjust to the insistent pleasure assaulting her system. She moved up and back, struggling to reconcile the sensory response, crying as with every flex of muscle and deep breath pleasure coursed up and down her spine. To catch her breath, she came all the way down, taking him all and rocking her hips in tiny circles, struggling to hold back an orgasm.\n\nJames felt her squeeze him again, and detecting her fatigue, held her waist as he drove up into her, watching her face as Cecilia phased from this plane to the next, driven by the pleasure he gave her. When he wasn't sure he could go on himself, her thighs tightened like a vice, and she gave a throaty cry.\n\nWith the last surge of primal energy, James rolled them over, determined to fall over the edge with his gorgeous, trusting, submissive. Cecilia's body grew slack, she was slick with sweat and arousal. His skin slid against hers, every part of their bodies meant to be fit together.\n\nHe loved her. Every curly strand of hair and thick eyelash, every healed wound and invisible scar, from her delicate limbs and bright eyes to the way the collar around her throat accentuated her sharp features, he loved her, and incredibly, she loved him. Cecilia whined, the pleasure finally pushing her into overdrive. Her eyes fluttered closed as James gave a final thrust, marveling at the trust she put in him when she gave him her body.\n\nCecilia's pussy fluttered with involuntary movements, milking him again, sending him over with a triumphant shout. Truly, she came apart underneath him, and he held her tight, rolling to his side so as not to crush her with his superior weight. Her legs wound around his, subconsciously refusing to let him leave her.\n\n\"I love you, Sir.\" Cecilia whispered. Her head was tucked beneath his, her voice low enough that James wondered if he felt her declaration more than heard it. He gave her a brief squeeze, reluctant to break the spell surrounding the both of them in the sudden stillness. \"I love you too, Cecilia.\"\n\nShe was loved.\n\nWhat a profound sense of being she had, cradled in the knowledge that she meant something to someone. It had been years since she heard those words. But never in her life had anyone meant them. Cecilia could tell the difference now. Her parents slathered the words on all their manipulative actions as if it could make up for the fact that they had stopped loving her when she emerged as an independent individual.\n\nJames loved her. \n\nJust the thought made her smile. She touched the gleaming collar at her throat. It was real."
    ],
    "authorname": "poeticlicense91",
    "tags": [
        "christmas",
        "bdsm",
        "mdom",
        "fsub",
        "handcuffs",
        "music",
        "romance",
        "food",
        "collar"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/chords-that-bind-ch-17"
}