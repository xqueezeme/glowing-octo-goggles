{
    "title": "Trivial Pursuits Ch. 14",
    "pages": [
        "Dear Readers,\n\nWelcome back to another chapter. I hope you enjoy the long-awaited 'development' and hope you find the result was worth the pace. Please keep the feedback coming, I always appreciate hearing your thoughts. And as always, thank you to AlreadyTaken for catching all my many typos ;)\n\nEnjoy,\n\nTitania\n\n******\n\nCHAPTER FOURTEEN\n\n<p align=\"center\">\"Talk is cheap, my darling\nWhen you're feeling right at home\nI wanna make you move with confidence\nI wanna be with you alone\n\nSaid help me help you start it\nYou're too comfortable to know\nThrowing out those words\nOh, you gotta feel it on your own\"\n\"Talk is Cheap\" Chet Faker</p>\n\n*******\n\nDenny's condo stood near the top of Russian Hill and had a spectacular view of Coit Tower and the northeastern corner of the Bay. Alessa feigned her cool manner as best she could, but struggled to dampen both the impressiveness of the place he called home and the anxiety of spending the weekend with him. As he had suggested she stay until Sunday, she brought work with her in hopes of not only staying ahead of her caseload but as a plausible distraction for a few hours. He took her leather duffel and her work bag from her, setting them on the gray modern couch, before guiding her through his home.\n\n\"Hm, your place is a little nicer than mine,\" she observed as he showed her the layout and then eventually led her to the balcony.\n\n\"More expensive, not nicer. Your place may be small and humble, but it's clean, functional, and reflects you.\"\n\n\"Cheap,\" she said drily.\n\n\"Perfunctory,\" he corrected. \"And cute.\"\n\nShe raised a considering eyebrow and nodded in possibility. \"So, Denny,\" she said slowly, scanning their surroundings instead of looking at him, \"what's the plan?\" When he remained silent, she turned to find him grinning at her. \"What?\" she questioned curiously.\n\n\"I know it may sound silly, but I thought we could have a sleep-over.\"\n\n\"Well, obviously,\" she answered with a sour turn of her mouth, not knowing how she was going to survive tonight if it involved sex, but not knowing how to get out of it. \"That's why I'm here.\"\n\n\"No, I mean a sleep-over, like things we did when we were kids. I have the whole night planned.\"\n\nHer face was skeptical when she followed him inside. \"And as you are the guest, I'll let you choose. I have pizza coming in about five or ten minutes,\" he guessed glancing at his watch, \"and we can make root beer floats. We can watch a few movies; I even thought about letting you show me your favorite Korean films if you'd like, or play a few games I've set up.\"\n\n\"Games, huh?\" she asked surprised.\n\n\"Well,\" his grin turned cocky, \"adult games.\" He watched her breathe deeply as if she were shoring herself up from the inside. But she didn't argue but simply moved about his living space. And then his cell chimed; the front desk notified him that the pizza had been delivered.\n\n\"You can change in my room if you wish.\"\n\n\"Change?\"\n\n\"Yeah, out of your clothes and into your PJs. That is, unless you wanted to go around in your underwear, 'cause I'd be fine with that.\"\n\nShe chuckled breathlessly at his shameless flirting. \"Yes, well I'm sure I'd get a little cold. I think I'll just put on my jams.\"\n\n\"Jams?\"\n\n\"Yeah, my sister calls them her jams, so I guess I do, too,\" she explained with a thoughtful smile. She picked up her bag and went to change while he went down for the pizza. She washed her face, clearing away what little makeup was left after her nightly run, and ran a cool rag behind her neck to wipe any residual sweat, feeling a little refreshed and at ease. When she returned she could smell the pizza wafting through the air, making her stomach grumble in response. He had flopped the box on the glass cube coffee table and was in the kitchen. She could hear hissing of opening bottles followed by clanging of metal caps hitting the quartz countertops.\n\n\"Beer?\" he asked as he came in, holding one for her as he eyed her gray tank top and thin-cotton white pajama pants that hung loose on her hips. Alessa took the bottle, looking about her, uncertain where to sit. Denny sat near the middle of the couch, making wherever she sat unavoidably close to him. \"Here, sit,\" he instructed as he opened the box. A large, delicious looking sausage-and-mushroom pizza sat steaming and again her stomach growled. \"Hungry?\" he asked chuckling, pulling a slice out so that the cheese stretched away in long strings.\n\n\"Yeah,\" she answered, sitting next to him. \n\nDenny noted that it was close enough to not be far, but not close enough to touch him. He handed her the slice before taking one for himself. \"It's good, huh?\"\n\nShe nodded, but said nothing. They settled into comfortable silence until Denny had finished off his first slice. \"I'm gonna change. Be right back. Help yourself to anything.\" And then he was up and down the hall. He hadn't shut the door and she could hear the opening of drawers and the rustling of fabric and was impressed by the intimacy that was engendered through sound alone. He reemerged wearing black and white flannel pants and a black t-shirt.\n\nHe settled again next to her and picked up another slice. \"Oh, and I almost forgot, I got you something.\"\n\nHer brow furrowed. \"Denny, I don't know how I feel about gifts,\" she began, uncertain if she wanted to receive anything from him.\n\n\"Will you stop being so contradictory and difficult?\" he chastised with a playful smile.\n\n\"I'm not being difficult just because I voice my opinion.\"\n\n\"You're being difficult when you don't keep an open mind for the opportunity of something new. Will you at least reserve your objections until you've heard me out fully?\" When she begrudgingly nodded, he smiled and stood. Looking down at her he instructed her to close her eyes. There was a question in them a moment before she complied, again unenthusiastically. \n\nShe heard a noise coming from in front of her, she assumed somewhere near the wall where his large flat screen TV had been mounted. Hard plastic clacking and snapping and then she felt him settle next to her again.\n\n\"Your hands,\" he instructed, and she held them out. She felt something cold placed in them and opened her eyes. It was an original Nintendo controller.\n\nDenny turned on the TV and she felt a smile creep over her lips as she saw the very first Mario Brothers game menu on the screen and then the very familiar theme music. \"You still have the original?\" she asked bemused.\n\n\"No, but after the other night, in thinking about something fun to do tonight, I went online and ordered one. It even came with the little orange gun for the duck hunt.\"\n\nShe laughed at that. \"I cheated so badly at that game!\"\n\n\"Went right up to the screen to shoot them,\" he finished for her and together they shared a reminiscing laugh that all kids who had ever played the game shared.\n\nHe set them up with a game, and together they played an hour laughing and drinking beer and killing mushrooms and flying turtle-ducks.\n\n\"You're pretty good at this,\" he commented.\n\n\"Yeah, well, one of my friends had one and we played a lot when we were little. Those were good times,\" she smiled nostalgically. He was silent, allowing her to share as she willed. \"I was in college, I think my senior year, maybe, and having a rotten time. I was online, taking a break from my funk, when I just randomly thought about my friend and how we used to play her game system to death. And so I looked it up and found websites that had the games to play. And it instantly made me feel better,\" she beamed. \"It was as if I'd found a time capsule and all the happiness and perfection of youth came pouring out of that screen. I was finally motivated to keep going with my schoolwork, so I set myself a forty-five minute work session and then a ten or fifteen minute game break.\" She nodded. \"It really helped get me through some of those quagmire times.\"\n\n\"My friends and I were a little like that. We'd usually do something like paper football or hackie sack. So I guess it stuck with you, huh?\"\n\n\"I guess. I mean, not really, only when things are a little too stressful and I need to separate my mind from everything that's going on,\" she explained quietly.\n\nDenny realized she must have been speaking of the afternoon they had gone to the clinic, and wondered just how much strain he had put her under by insisting they get tested. But it was necessary, even if unpleasant, and though it might have been taxing on her, she bore up well enough.\n\nHe reached over and turned her face to him, giving her a kiss of praise. She was startled, but quickly relaxed, submitting with pleasure to his mouth. He had only meant for a quick peck, but when she so swiftly responded, even a subtle parting of her lips, he delved a little deeper, pushed for a little more. It had been such a long-held desire that when he finally had the opportunity he took it fully. \n\nOne of his hands cupped her face while the other one reached around her to turn her toward him. Much to his excitement, one of her hands slid up his arm to grasp his shoulder, using him as an anchor to pull herself closer to him. It was all the acquiescence he needed, and though his natural instinct was to push her back and crush himself upon her, he recognized she would need greater control to feel most comfortable in order to advance. It would be agony, but it would be worth it. He pulled her into him until their bodies were pressed as tightly as possible at the slightly awkward angle. When her thigh slid over the top of his, his grip on her tightened and he pulled her to rub her groin on his leg. \n\nAlessa realized a little dazedly that it was becoming more than she could handle, that the sensations were too intense and she was losing her control over her actions, fast. She attempted to pull away, but his grip on her only tightened. She teetered between allowing whatever might happen to flow naturally and stopping it altogether.\n\n\"Denny,\" she murmured, a little more of her rational mind returning to her. \n\nKnowing he couldn't push her too fast, he pulled back so they could gasp against each other's lips. \"Too much?\" he guessed knowingly.\n\nShe swallowed and then nodded, her eyes opening to his. She had been so certain he would push her until she gave in, but the gentle understanding she saw in his eyes caused a dam of relief to flood through her. \"Maybe a little,\" she managed.\n\nHe cupped her cheek. \"Come here,\" he said softly, guiding her while changing his position until they were laying on the couch with him on an elbow above her. \"I will make you one promise right now. I will never push you into sex. Don't get me wrong. I will fuck you. So long and hard your body is going to cry in its sleep for me,\" he intoned with a smile as he stroked her hair back, \"but I will never move us to that. Understand? When you're ready to try, you are going to have to ask.\n\n\"Now, I might touch you,\" he mused as the hand that had been fingering her hair slid down her jaw and neck, the tips of two fingers gliding over her skin, creating a burn in her stomach as they went. \"I may kiss you,\" he added as he dipped down to run his lips over the smooth skin of her neck, his tongue snaking out to taste her just a little. Her skin prickled under the erotic scratch of his stubbled jaw juxtaposed against his tongue's velvety smoothness. \"I may even make you come,\" he said as his leg, which had been atop hers, slid to fall between her thighs and press at the juncture of her body. He pressed it up into her and felt something hot in his belly when her eyes closed and her bottom lip quivered. \"But I am not going to fuck you until you beg. Okay? So relax and enjoy.\" And then his mouth was smooth over hers, like a thousand pleading caresses.\n\nShe could taste pizza and beer on his tongue, coupling his flavor for a new experience. And as he slid his tongue sensuously against hers, she felt his stray hand draw a slow and winding path down her front, creeping lower and lower over her chest. She squealed in surprise when a fingertip grazed over her nipple, making it hard as a tiny, aching pebble. Once at attention, his fingers traced all the contours of her breast, applying varying amounts of pressure, coming close and circling around the sharp nub, but never touching it again.\n\nAlessa was past near-discomfort, she was in full-blown ache, and as her mouth was still occupied by his, she could only direct him as she wanted by twisting her body into his touch. And when he still did nothing to ease the ache, she boldly pressed herself up into his hand demanding his firmer touch. \"Mm, something you needed, Sweetheart?\" he teased in a deepened voice that thrilled her to the pit of her stomach. He didn't wait for her answer, but continued kissing her.\n\n\"You're making me hurt,\" she whispered through his kiss. \n\n\"Am I?\"\n\n\"Yes, stop playing with me,\" she managed to instruct a little more firmly. Never, with all the stories she had read or written, had she felt this aroused. There was nothing as blissful as the real touch and warmth and taste and sound of another person, and she knew she had been a fool to ever think all this desire and pleasure was a product of mass delusion. \n\nShe placed her hand over his, pressing it firmly into her breast, squeezing it. The ache became sharp, satisfied and intensified all at once. She hissed at the pleasure before allowing Denny to kiss her more ravenously. \n\n\"Oh, is this what you needed?\" he teased in a husked voice. \"Why didn't you just tell me, Sweetheart? I'd be more than willing to make you happy. How's this?\" he asked as his grip tightened before he twisted and kneaded. \n\nShe whimpered into his mouth, the pleasure of his firm touch shooting straight into her sex, now flooding with all the blood from her brain. \"So good,\" she whispered, still pushing up against him. Her thighs had momentarily parted to allow his thigh to fit even more tightly against her sex before they squeezed together to hold him securely in place. \n\nDenny's fingers drew up the fabric of her night shirt until his hand lay atop the warm, soft flesh encased in a black satin bra. \"Why didn't you take this off?\" he murmured, pulling away to look down at her doubtlessly magnificent chest for the first time. \n\nQuickly, her hand reached up to grab the bunched shirt to pull it down and hide herself, but he stopped her, not allowing her to hide from him. Enough space existed between her head and the arm rest, that he was able to take both her arms and pull them to rest above her head. He held them in place with one hand so the other was free to caress her skin as he wished. Alessa tugged only minimally, only enough to feel the strength in the grip of the one arm, and felt herself light up.\n\nWhen his fingers trailed between her breasts, she twisted slightly, as if to move him off. He looked up at her questioning. \"What's the matter, Sweetheart?\"\n\nShe stared at him pensively, her face burning from the flush of arousal and embarrassment he had caused. She swallowed, but couldn't answer. \"Afraid?\" he asked. She nodded slowly, as if she knew she shouldn't be, but couldn't help it all the same. \"Can you try to trust me? Can you let me make you feel good?\" \n\nHer stomach cramped with intense arousal just at his question, let alone what he would actually do to make her feel good. Again, she slowly nodded apprehensively, and controlled her body to lie still beneath him.\n\nMuch to her consternation, his eyes held a wicked gleam as he lifted two fingers to her mouth and placed them on her lips. She opened her mouth slowly, afraid of his intent. His fingers slid slowly in and he pressed against her tongue, stroking it sensuously as he might do with his tongue when he kissed her. Her body responded mindlessly, needing no thoughts to follow his lead. And as she closed her lips around those two digits, she suckled a little. The surprising action caused his hips to jerk forward into her crotch, which in turn made her moan around his fingers.\n\nWhen Denny was sure his fingers were wet enough, he pulled them slowly free, wetting her bottom lip as they went. His hand was talented enough to find her breast and the silky material covering it without breaking eye contact with her. Holding her gaze, he peeled down the fabric and placed those two wet fingers over her nipple. He smiled victoriously when she took a deep breath as her eyes slid shut and her head rolled back so she could arch against him like a sensuous goddess.\n\nHe allowed his gaze to wander down to her chest and felt a throb in his penis at the sight of her pink areole and taut little nipple. Suddenly his mouth was watering and he leaned down. She must have felt his movement because she looked back down at him, watching her rising chest and the small space between her skin and his face. And then his tongue slid slowly forward to lathe the little bud that seemed to strain up to meet him. \n\nThe sensation was like a delicious itch crawling deep inside of her, forcing her chest to rise higher to reach him. The scene was too erotic to watch and so she dropped her head back, allowing him, for the moment, complete control of her body. He continued to lick and nibble the delicate tissue. And then she felt his sharp front teeth gingerly bite just the thinnest layer of her skin at the underside of her nipple, and then directly at the very top, a sharp painful pleasure that caused her to cry out. Before she could respond, he had engulfed the whole of her areole in his mouth and licked and sucked, pulling that thread all the way from the nub of her sex, through her body, and out her breast. Her hands were fists, causing her nails to bite into her palm, the pain counterpointing the pleasure exploding from her chest.\n\nAs he suckled and licked her supple breast, Denny realized he was moving against her, rubbing his thigh into her core as he pressed his own arousal into her hip. He either needed to stop the maddening foreplay to regroup or he needed to do something about at least one of their situations.\n\n\"Alessa, Sweetheart, will you let me touch you?\" \n\nHer head lolled to the side before her eyes fluttered open. She finally looked at him, processing his request. \"I thought you were touching me,\" she asked dazed.\n\nHe loved her husky voice when she was aroused. He chuckled morosely. \"No, love, I mean, let me touch you here,\" he corrected, his hand sliding down between them to cup her mound. Again she drew in another sharp breath at not only the discomfort of someone's hands on her sex, but at the exquisite sensation it produced. \"Let me make you come,\" he whispered, his eyes pleading.\n\nShe gave a half-jerk of her head, as if she were about to refuse, but stopped, her concern-filled eyes searching his. \"I-I don't know. I don't know if I'm ready for that.\"\n\nHe swallowed, his body pulsating with aching desire. \"I understand, but if that's the case, then I think maybe we should stop for a while. I want you too damn much; I have a feeling I'm about to embarrass myself,\" he informed her with a self-deprecating grin. \"Fuck,\" he groaned with a chuckle of misery as he sat up from her, planting his elbows on his knees as he rubbed his face, the desire still too thick in his blood. \"Come on, why don't you go freshen up in the bathroom and I'll get us started on those root beer floats. That's assuming you like root beer. I also have Coke.\"\n\nThe transition had happened so fast she was still laying on the couch panting, mildly disoriented and eternally bereft. Maybe she had said the wrong thing, because at that moment, no amount of ice cream could replace her need for one good orgasm. Somehow she managed to find her voice, looking up at him before she tugged down her tank top and swung herself to sit up. \"No, root beer is fine.\" She stood but wobbled. Thankfully, his hands grabbed her shoulders, keeping her upright. \"Thank you,\" she said in a whisper, feeling drunk as she walked to nearest bathroom. She missed watching him walk to the kitchen, rather stiff with a cowboy's gait, his own erection making the task painful.",
        "She stood breathing heavily over the sink, staring at her flushed face, wondering what she was afraid of when his touch made her feel greater than anything else she had ever experienced. Much to her private embarrassment, she cleaned herself of the copious amounts of liquid arousal their kissing session had created.\n\nWhile Alessa regrouped in the bathroom, Denny stood in the open door of the freezer, allowing the ice burn to cool his boiling body. It was going to be a long weekend.\n\n*******\n\n\"Huh, and is that a common theme, do you find?\"\n\n\"What is that?\" Alessa asked as she crunched on her popcorn and chocolate covered raisins. After she had returned from the bathroom, they had made floats together, the air filled with the unresolved sexual tension. Bbut Denny had done his best to make her smile with his teasing manner. They then settled on the couch where they had for the last three hours watched one of Alessa's favorite Korean shows. They had eventually moved on to popcorn and chocolates, though he noticed she still grabbed only the smallest amount. As they wouldn't be able to watch all the episodes that night, Alessa was enumerating the many trials the main heroine would go through in order to support the man she loved, and Denny had begun to question its similarity to other shows she watched.\n\n\"You know, how the main character is very self-sacrificing with a quiet strength that doesn't reveal itself in the face of hardships.\"\n\nAlessa cocked her head. \"I suppose, yeah, that does happen a lot, in various forms. Which makes sense though, right? The honor and dignity and yet at the same time the humbleness.\"\n\nDenny nodded in agreement, quietly wondering about her attraction to such characters. It was nearing midnight when Denny suggest a change in entertainment.\n\n\"What did you have in mind?\"\n\n\"Like I said, I have some games we could play.\"\n\nShe eyed him speculatively. She opened her mouth to say something he guessed would be of the objecting nature, and raised an eyebrow at her in warning, silently reminding her about her agreement to not be so argumentative.\n\n\"Okay, what games?\"\n\n\"Well I have that block tower game where you remove a piece at a time and set it on top without knocking the tower over. Or cards; we could play poker,\" he suggested.\n\nShe lifted an eyebrow at him. She thought he had said they were adult games, but those didn't seem too bad. \"Okay, how about the tower game.\" \n\nDenny gave a wolfish half grin. \"Good choice.\" He hopped up to get it and instructed they should sit around his coffee table. She settled on one of the large floor pillows, watching him as he curiously continued grinning like that cat with the cream. \n\n\"So this one is...altered,\" he began explaining as he kneeled across from her, pulling the blocks in the tower form carefully from the box. When it was all set up, he took a top block off and showed her the handwritten instructions on the block. \"I took the time to write on quite a few of them. Not all of them, but a lot, special instructions for the player to complete.\"\n\nAlessa sat up straighter, preparing for the worst.\n\n\"As you can read on this one, 'Give your opponent a one-minute kiss on the body part of your choice' you have to fulfill the written instructions. Some are fairly easy, like confess something, while others...require more and are therefore more challenging. Got it?\"\n\nHe could see her expression, on the edge of fear and excitement. One beat. Then two. \"Okay, I'll try. Penalty for not completing?\" \n\nHe shrugged, \"I guess you could just be declared the instant loser, but where's the fun in that? Why not push yourself to the edge?\" That wolfish grin was back and she could feel her stomach dropping and her nerves firing up.\n\nAnother nod. \"Okay, I promise to complete whichever one I draw.\"\n\n\"That's my girl,\" he praised, and then offered to go first. She watched him intently, a hidden smile tightening the corners of her mouth at the bubbles she felt from hearing him praise her.\n\nThe first he drew had nothing written on it, but the first she drew did. She wondered vaguely if he somehow knew which was which, but doubted he would cheat. She narrowed her eyes as she recalled how he had switched her contract, but still read the tile, vowing she would perform whatever was written there. \n\n\"Remove a piece of your opponent's clothing,\" she read aloud, trying to suppress an embarrassed smile.\n\nDenny chuckled and sat back, allowing her easy access to his body. With a sigh, she stood and walked over to his side. She eyed him just a moment before saying, 'Okay, take off your shirt.\"\n\n\"Well, now if you read that correctly, I think you are supposed to remove the article of clothing, not me.\"\n\nShe was really fighting the smile now. \"Fine,\" she huffed and kneeled down next to him. She wrinkled her nose at his smirk, knowing how much he was enjoying her misery. She reached for the bottom of his tee and pulled up. He was cooperative, at least, holding his arms up so she could pull it over his head. But to do the job properly, she had to reach around him more, moving her closer, and when the material cleared past his head, she was face to face with him, her breath catching as a result.\n\nThen she blinked and cleared her throat. \"There,\" she said, resuming her position on the other side of the table. He was still smirking, but not quite as much as before, and he leaned forward to take his turn. A few more for both of them with nothing, and then he pulled one with the black scrawl.\n\n\"Nibble your opponent's ear,\" he read, causing Alessa's stomach to drop in excitement.\n\n\"Just one?\" she asked without thinking, only to blush when he chuckled at her. \n\n\"Oh, I can give you more if you ask,\" he replied with a devilish smile and then he was on his hands and knees, stalking around the table. She thought if he had been a jungle cat she would have been in dubious trouble. And then he was beside her, his hot breath cascading down the side of her neck, his mouth hovering above her. As she sat still, she was alight with nerves, her skin anticipating his lips on her like a memory in reverse. And then there was just the lightest whisper of his lips at the base of her neck, and then they were sliding up and up to the very sensitive spot on the backside of her ear. She was certain she felt a scrape of his teeth against her before his lips kissed her ear lobe, his warm breath flooding inside, heating her head. His kisses turned to biting suckles, sending ribbons of dancing electricity up her spine to shatter on her scalp. And then one sharp nip at the very tip of her ear lobe.\n\nHe pulled away and she nearly fell over leaning into him. She righted herself before she made too big of an embarrassment of herself. She cleared her throat again. \n\nAlessa felt she should say something. \"Thank you,\" was all her dazzled little mind could come up with. He chuckled, amused, and then placed a quick peck on the curve of her jaw.\n\n\"Welcome,\" he said before returning to his side.\n\nWhen she reached forward for a new tile, she saw how badly her hand was shaking, an obvious side effect of his teasing kisses. At first she was about to raise objection of unfair advantage by what he had done to her, but then she realized, the handicap could go both ways, if she was willing to put herself into it enough to win.\n\nShe took a deep breath to steady herself and drew the next block. It had nothing, and then neither did his, but on her next turn her stomach leapt when she saw writing. She smiled ruefully at him until she read what was there.\n\n\"Choose to give or receive a three-minute lap dance from your opponent,\" she murmured distraught. That was perhaps a little more risqu\u00e9 than she had been prepared to be in order to win. But then she looked up at Denny who was smirking yet again. Big meanie didn't think she could do it. \"Fine,\" she said with a challenge and a determined set of her chin. \"Sit up there on that chair,\" she instructed.\n\nDenny's smirk faded a little, but didn't lose that hungry edge. He did as she instructed, sitting on a wide post-modern arm chair adjacent to the couch. He leaned back, stretching out to make room on his lap for her. She stood and walked slowly to him, instantly feeling herself about to balk. Sitting relaxed in confident repose, his bared body was a little intimidating, defined with lust-inducing muscles.\n\n\"Close your eyes,\" she said.\n\nHe lifted an eyebrow in question, as if to challenge that that wasn't part of the rules of the tile she had drawn. \"If you want this lap dance, then you'll do as I say. You can't watch. Close your eyes.\"\n\nDenny wanted to argue that part of the eroticism of a lap dance was to watch the body writhe sensually on top of him, but he figured this was as good as a beginning as he could hope for. Reluctantly, he closed his eyes and waited to feel her settle on him. He did hear her mutter, \"This is going to be the worst lap dance ever,\" before her weight settled gingerly on his lap.\n\nFor a moment all was quiet and still, but he did nothing to urge her along, knowing she would do better at her own pace. And then she leaned back against him, her back to his bare chest. He felt the luxurious weight of her hair against his skin, and held a moan from the pleasure of it. He felt her gather it up, as if moving it all out of her way over a shoulder. He could tell her face was turned to his as her cheek was against his chest and couldn't stop the impulse to incline his face to her. Then he felt her hands lay atop his on the arm rest. There was a sound like clearing her throat and then a soft exhalation of air.\n\nAnd then she began to move.\n\nIt was small and disjointed at first as she found the movements and then the pressure and pace that made it less awkward. She shifted a little, taking off some of her weight, and when she did so, he felt his quickly springing erection readjust to tent in his pants. And then her firm bottom was pressing against it.\n\nHe felt her reaction to his stiffened state, a fractured pause and then a slow and deliberate grind against him, her hips rolling back and forth with purpose and determination. He didn't bother stopping the groan even as he did control his hips from pressing back into her. Her breath was slowly building, either from the exertion of her performance or her own building arousal, or both. He could feel her back arch off him as her hips angled forward, no doubt positioning to grind her own pleasure-seeking sex perfectly against his crotch. Her face was nuzzling into his chest as best as she could manage from her angle, and when he felt her lips graze the underside of his jaw, he instinctually sought her mouth with his. But he was disappointed to only feel her breath as she moved just out of reach. And with one more hard press, she shoved herself off his lap.\n\nHe growled in frustration and opened his eyes. Her back was to him as she quickly scurried to the other side of the table. She was clearing her throat and winding her hair over her shoulder as if to order her appearance. She wiped under her eyes before she looked up at him.\n\n\"Your turn,\" she said in a forced cheeriness.\n\nDenny was breathing a little hard from the most unprofessional and yet the best lap dance he had ever had. He sat a moment longer to regain what control he could, shocked at her ability to override her doubtless embarrassment so she could dance erotically against him.\n\n\"I won't bother telling you how well you did,\" he intoned in a hoarse voice.\n\n\"Yes, I think I can see all the evidence I need,\" she quipped eyeing the bulge in his pants. He chuckled.\n\n\"Touch\u00e9.\" He resumed his seat, if a little affectedly, and resumed the game. \"Feed your opponent a glass of wine from your mouth,\" he read, and then his eyes moved challengingly to hers.\n\nShe flushed as she watched him stand and go to the kitchen, returning not a minute later with a glass of deep burgundy. She eyed him.\n\n\"I don't know about this,\" she began, not certain if that sounded sexy or gross.\n\nHe raised an eyebrow. \"You promised to do everything.\"\n\n\"Yeah, everything on my tile, not on yours,\" she countered legalistically. But then after another long stare, she surrendered. \"Fine. How do you want to do this?\"\n\nHe only smiled as he sat next to her, resting on one hand and bending his outside leg up to rest the other arm holding the glass. \"Lean back,\" he commanded gently. And she did, resting against the chaise at the end of the couch behind her. It was the perfect distance for her head to fall back in repose and low enough for him to reach over her. He leaned forward, brushing his mouth against hers.\n\n\"You don't have any wine in your mouth,\" she whispered, somehow feeling as though the real challenge of the game was not to succumb to his seduction.\n\nHe shushed her, rubbing his lips over hers until they parted. \"Don't move,\" he whispered, bringing the glass to his mouth and taking a drink or two. Then taking a small amount in his mouth, he leaned over her, her eyes nearly slumberous as they watched him. Again, their lips touched gently, hers parted under the lightest of pressure from his, and slowly, carefully, Denny cracked his lips so the now-warm libation could slip from his mouth to hers. It wasn't the same as if she were taking a sip, more like a general wetting of her mouth and her tongue stroked the excess fluid away. And then his lips left hers, only to return again. \n\nWith the pattern and their mutual competencies now established, she opened her mouth to allow his lips to rub tenderly over hers and then part to slip her a little more of the liquid. After another passing of the fluid, his lips and tongue lingered to enjoy the flavor of the wine and her mouth. Over and over it was that he would take in the wine only to pass it to her, and mix the sharing with slow kisses and strokes of their tongues. With the last of the wine gone, Denny reluctantly disengaged himself from his sultry opponent and returned to his side of the table.\n\n\"Your turn.\" If the previous exchanges had left her rattled and anxious for more and escape, his last kiss had left her drowsed and seduced. Her eyes were changed, slanted and dangerous. \n\n\"So it is,\" she murmured, staring at him. As the tower was becoming filled with holes, she prodded and pushed gingerly until one slipped out of place. \"Name one place you would be willing to receive oral satisfaction in public.\" She blinked. And then giggled. She looked up at him before placing her tile at the top of the tower. She was smiling slyly. \"Hmm,\" she mused, making a big production of thinking about it. \"In a private theatre box during a performance of Swan Lake during the death scene.\"\n\nDenny was smiling and broke out into a full chuckle. \"That's quite specific, Sweetheart.\"\n\nShe shrugged a shoulder and looked down at the game. \"What can I say? The music is very...climactic?\" She smiled at her cleverness. \n\nDenny full out laughed. \"Yes, that it is. Okay, my turn.\" \n\nHe drew nothing, and then for his next two turns he drew only blank tiles, as did she on one turn. But then her next turn she maneuvered a tile out leaving the tower to stand precariously on only a cross-intersection of two tiles. She looked down to read her tile and then slid her eyes slowly up to his.\n\nHe wondered which one she drew as her face was instantly flushed and she looked quite frightened.\n\n\"Make either yourself or your opponent come,\" she breathed quietly.\n\nAny humor that may have been on Denny's face melted as he realized the incredible discomfort she must have been feeling. He was instantly moved to declare she didn't have to complete the task if it was too much, only having written it in his wildest hopes that somehow they might be further along by that point. But before he could say anything, she reached a trembling hand out to place the tile at the top of the tower. It was a move with unquestionable meaning.\n\nChallenge accepted.\n\nHer face was solemn when she looked at him. \"Will you sit on the chair again?\" she requested in a shaky voice.\n\nDenny couldn't move, his already half-hardened body instantly swelling to full status in those few short seconds that passed as they stared at each other. The edge of fear that had first been present in her expression had eroded away to mere solemnity, calm and cool. She waited expectantly as the air slowly returned to his lungs.\n\n\"If that is what you want,\" he managed to say, not wanting her to back out, not wanting to force her and not wanting to move until he felt strength return to him.\n\n\"I agreed to not only keep an open mind, but to do everything, didn't I? Well, I think I should. And,\" she hesitated before finishing with determination, \"I want to.\"\n\nHe had no thoughts left in his head, so simply nodded once and stood to slip back onto the chair. Again, neither moved as she mentally collected herself, the enormity of what she was about to do settling hard and fast in the pit of her stomach. And then, in the spirit of the game, she slowly slinked on hands and knees over to him, mustering as much allure as she could, though it all felt like a mockery.\n\nShe stopped in front of him, gazing up into his face, somewhat pleased, somewhat uncertain at the rather intense and decidedly not-cocky expression on his face.\n\n\"I've never done this,\" she admitted. \"I mean, I touched my boyfriend's...\"\n\n\"Penis,\" he supplied.\n\n\"Yes-\"\n\n\"Or shaft.\" She opened her mouth to speak, but he cut her off again. \"Or erection, or dick.\" He was staring into her blinking, flustered gaze. He slowly said, \"Cock,\" allowing the word to roll off his tongue.\n\n\"Yes! That's fine. Penis will work. Anyway, I touched his penis, but I don't think we got far, at least, not far enough or often enough to really have learned anything,\" she rambled looking around, suddenly without her false bravado.\n\nDenny leaned down so his face was just inches from hers, drawing her attention to him. \"Trust me, you can't do it wrong.\" He leaned in just a millimeter more, and she leaned forward for his kiss. His lips lingered there, his gaze drifting down to her mouth, and then he sat back, waiting.\n\nShe blinked. Alessa reached her hands forward and then stopped, looking up at him questioningly. \"Should I...\" but he merely raised his eyebrows, as if challenging. A clear indication if ever she'd had one. Slowly her hands reached for the waist of his pajama pants. Even as he was, she could see the large ridge in his pants indicative of his fully aroused state.\n\nHer fingertips grazed the skin of his abdomen. He felt warm, she noted distractedly. The furthest edge of her fingers caught the fabric and unhurriedly pulled them down his body. Alessa could feel his erection begin to bunch the fabric as she neared his groin. Any second, she was going to have to pull his pants away from his body so his penis could spring free. But that moment would be a point of no return, a vision she couldn't unsee, an action she couldn't undo. \n\nDenny's breathing was changing, she realized, becoming shallower, more rapid. Though the embarrassment was heavy, her eyes flicked up to his, and as they gazed at one another, she slowly pulled the waistband away from his body. There was movement within his pants, and when he gave a small undulation of his body, she knew his erection was visible. A moment of hesitancy as she gathered courage and then her eyes trailed down his chest, over the ripples of his stomach, and before she reached his lap, there stood his manhood, hard and smooth and utterly impressive.\n\nShe didn't realize she stopped breathing until she let out a gust of air only to inhale deeply. Her eyes flew to his. \"I suppose this is where I touch you, right?\" she asked rhetorically, her gaze falling back to his groin. \n\nAlessa had nothing to say, none of the clich\u00e9d comments of how surprisingly big he was or beautiful it was or...anything, as all thoughts had dissolved from her brain leaving only impulse and instinct behind. She placed her hands on his knees, and then slid her right hand forward on his thigh. Her reach was cautious, jilted with pauses and starts. Her hand opened around him, and closed partially, as if mimicking in ghostly fashion what she should have been doing, what she wanted to do.",
        "What he needed her to do.\n\n\"Come, huh?\" she murmured thoughtlessly, wondering about producing that final end. And then her hand closed completely over him mid-shaft.\n\nDenny's noticeably inhaled at her firm grasp, but he made no other noises or movements. And then she gave a preliminary squeeze, testing the weight and girth and heat and give. \n\nShe instantly loved the feel of his dick. She took notice of its smoothness and her fingers just barely touched the tip of her thumb. Alessa move tentatively down and then up, feeling the hard silk glide under touch. She squeezed at various positions along his shaft, paying attention to his reactions to each specific caress. \n\nIn languid licks of flame, Denny relaxed his anxious body under the care of her learning hand, allowing her to explore and play as she willed. If she wanted guidance, he would give it, but until she sought direction, he would simply enjoy her touch. \n\nHe drew in a sharp breath when she finally braved touching the distended and purpled tip that was already leaking. He watched tortured as she curiously stroked her thumb in it and then firmly spread the sticky liquid around the head. She glanced up at his breathy reaction, a little uncertain in her expression, so he gave her what he meant to be a reassuring smile, though Alessa thought he looked as if her were in pain.\n\n\"Okay?\" she asked.\n\n\"Not by half,\" he groaned.\n\nShe looked worried. \"I'm sorry,\" she apologized. \"It's just that I've never done this. Am I hurting you?\"\n\nHis laugh was rough and humorless. \"Only completely. But don't you dare stop,\" he warned.\n\n\"It hurts before it feels better,\" Alessa concluded, remembering how he had made her breast ache with just his teasing caresses. She felt emboldened to know he needed her as she had needed him. And then she recalled with a bit of playful spite how he had taunted her about asking for what she wanted.\n\n\"Something like that,\" he breathed, watching the fire catching in her eyes.\n\n\"And you want me to make you feel better?\" Her hand, which had been tight around him gradually loosened until just her fingertips were skimming up and down his length. \"Was there something particular you needed me to do? Or will anything work?\" she teased, her head cocking to the side, her eyes sultry and tinged with challenge.\n\nHe narrowed his gaze at her. \"You're so fucking cute, do you know that?\" he mocked, recognizing he should be thankful she was touching him at all, even if it was torture.\n\n\"Am I? And why is that?\" she demurred, continuing her light caresses. Suddenly free from the awkwardness that had been present not ten seconds before, Alessa dropped her gaze to study him rather dispassionately. She let the weirdness run through her before she simply accepted with little emotion that this was what Denny's penis looked like. She trailed a nail up the length, starting at the point his shaft and scrotum met until she rounded atop the bulbous, shiny head. And there was the small hole in the middle, slit and stretched. Her nail dipped carelessly into it, and his hips lurched forward with a hiss on his breath.\n\n\"Fuck,\" he panted, opening his eyes to look down at her wide-eye surprise. \n\nAnd then she giggled, as if she'd heard a dirty joke. \"Sorry,\" she laughed. \"Did that hurt?\"\n\n\"You'd better play nice, Sweetheart. You don't wanna wind me up too much,\" he warned with a near-growl.\n\nShe only smiled deviously at him. \"I don't know; aren't you supposed to wind toys up?\"\n\nHe chuckled hoarsely. She thought it was the sexiest sound ever.\n\n\"As much as I hate to hurry this along, I think you're supposed to be following the instructions on the block,\" he pointed out, his balls aching to empty themselves. \n\nHer mocking face grew somber, and a serious consideration fell over her. \"I've really never done this,\" she whispered again, her hand gaining back the strength it had before.\n\nHe placed his own large hand over her more delicate one. Her eyes fluttered up to his. \"Let me show you,\" he asked, and then slowly slid their hands up and then down his shaft. He gave pressure at various points, showing her to grip and control him. Eventually, she no longer needed his guidance as she was quickly moving him to blissful release.\n\nAt one point, he made a grimace and when she looked up at him, he muttered something about needing moisture. And then an erotic vision flashed in her mind and her hand stilled. Again looking at him, Denny watched as she removed her hand and slowly brought her hand to her mouth. Two fingers, much in imitation of the scene on the couch, slid into her mouth. Denny's mouth sat agape as he watched her suck them, working them in her moist cavern until she was able to pull them out. They glistened with her saliva, and with a cautious hand, she reached back for him.\n\nHe groaned.\n\nAnd then her hand slipped more easily up and down, her grip sliding with ease and purpose. As Denny's breathing increased, Alessa gained in rigor and even sat taller against his legs. Her left hand joined to help squeeze his shaft before finding its way to the hot and lumpy sac at the base. She squeezed with wonder, feeling the unique sensation of his soft flesh there. \n\n\"Fuck, Sweetheart,\" Denny panted, watching her heavy, entranced expression. She looked up at him with those big blue eyes and he reached forward to stroke her smooth cheek. \"You're doing so good,\" he whispered with labored breath.\n\n\"Are you going to come? Am I making you come?\" she asked, completely absorbed in her task and his response. \n\n\"Oh, Sweetheart, fuck. Yes,\" he groaned. Alessa watched completely fascinated by his pained expression, his narrowed eyes and furrowed brow and bottom lip between his teeth. His head dropped back and his breathing increased. She could feel it, feel the change, the tightening. Such strange, new sensations.\n\n\"I'm going to come, maybe you want...\"\n\nBut he couldn't finish as his breath rushed fully out only to be gasped painfully in. \"Alessa, Sweetheart,\" Denny warned looking down at her beautiful face that was set with determination.\n\n\"I want to see you come, Denny,\" she whispered, needing it for him almost as much as he needed it for himself.\n\nThe spasm was there immediately, tightening the muscles of his abdomen, causing his hips to jerk up and the tissue of his scrotum to clench as his shaft released shot after shot of liquid, all accompanied by a furious growl from deep in his chest. Alessa's hands continued milking him through the last of his release, and in anticipation of his climax, she had leaned to the side out of the way, but wasn't able to completely dodge all of the discharged semen as some of it splashed her shoulder bared by the tank top. Breathing heavily from the intensity of the scene she'd not only witnessed but actually participated in, Alessa reached up to her hair that was still down around her shoulders and felt the quickly cooling gooey liquid.\n\nIt should have been gross to be covered in his ejaculate, but that wasn't what she felt in that moment as she brought her hand down to study the substance. \"You got me,\" she whispered as he continued panting.\n\nDenny was about to apologize as his bleary eyes opened and looked down at her, but stopped when he saw the lust-induces daze of her expression. He slipped the waistband of his pants over his deflating genitals, and taking a deep breath, reached for her hand.\n\n\"Come on; let's get you cleaned up.\" He took a paper towel left over from the pizza and wiped his sticky, white mess from the floor, before leading her to his bathroom where he leaned her against the counter and retrieved a washcloth. He studied her in the mirror, watching for any change of attitude she might undergo, and while he saw signs of uncertainty, her flushed face still looked rather lovely with sensual interest.\n\nHe murmured something soothing as he wiped the evidence of his orgasm from the strands of her dark hair and then the skin of her shoulder before tossing the rag in the laundry. \"Okay?\" he murmured, fingering her hair away from her face. Her eyes closed at his touch, leaning into his hand. He couldn't resist.\n\nShe stiffened only a moment before relaxing into his kiss, molding her lips perfectly to his. When he pulled away slightly, her eyes fluttered open. \"My turn,\" he whispered, causing her to blink in confusion. \"Come on,\" and took her by the hand leading her back to the game.\n\nAlessa exhaled at the arousal still coursing through her body, needing release just as much as he had experienced. Could she let him? She shuddered at the thought, and quickly suppressed it.\n\nThey again sat opposite one another, Denny's personal release doing nothing but building the tension between them. They only stared at each other a moment before Denny carefully drew a tile, and for a second, she thought it would be over as the perforated tower teetered precariously, but somehow it managed to hold fast. The tile had writing on it; she could see it from where she sat.\n\n\"Lick whip cream off your opponent's body part of choice,\" he read and looked up for her reaction. Too overcome with the intensity of his gaze and the exciting promise the instructions held, Alessa looked away.\n\nShe could feel her face heat almost painfully when he stood and walked to her. Uncertain of what he intended, she looked up questioningly. He simply held his hand out to her, dragging her up and along to the kitchen.\n\nAlessa stood, uncomfortable, as he went to the refrigerator and pulled out a silver canister that she had seen at her coffee shop. It was the expensive sort that instantly turned heavy cream into frothy foam, and when he turned to her, she was semi-relieved that his expression wasn't playful or teasing, somehow thankful that he wasn't mocking her discomfort, but accepting that this was difficult for her. He stood leaning against the counter, and she could read the command in his expression.\n\nShe took the three steps between them, closing the gap until they were nearly touching. She waited to hear what he wanted, preparing herself to agree no matter the anxiety it caused. Denny turned slightly to place the canister on the counter behind him, before turning to her. A gentle, but firm hand in her hair, he presented her face to his mouth and claimed her lips with a passionate kiss.\n\nIt wasn't what she had expected, but she was momentarily relieved to simply give into the request that was equally pleasurable to her. Denny knew how to kiss, she thought fleetingly, quickly seized up by the sweetness of his finesse. His mouth parted her lips and his searching tongue slipped sinuously against hers, stroking it and causing a pleasure wave to speed down her spine. Her hands were around his shoulders as she opened herself to him, realizing that kissing him was no longer about tolerating him. She loved it. She welcomed it. She wanted it.\n\nShe needed it.\n\nA startled cry escaped her lips when his arms, which were around her waist, tightened and turned her while simultaneously lifting her up. Her bottom found the countertop though he never stopped kissing her. The hand that had been gentle in her hair tightened enough to control her head, pulling it back so his mouth could attack the flesh of her exposed neck. Shivers raced up her scalp and down her back. And then his lips were back on hers, kissing her with bites and suckles and licks.\n\n\"Alessa,\" he said as his hand at her back snaked under the bottom of her tank and found the sensitive skin of her lower back. It wound around to her abdomen and quickly ascended toward her chest. She felt the arousal of her sex surge again in anticipation of his grasp upon her aching breast. But it didn't come, only the teasing, taunting caresses all around, tickling and alighting her on fire.\n\nHis harsh breath was in her ear as he nibbled quite hungrily. \"I want this shirt off,\" he told her, but made no move to remove it himself. She heard him and understood what he wanted, but it took some moments before she could separate herself enough from him to give his request any amount of serious thought.\n\n\"Take it off for me, please,\" he asked, still massaging her scalp with the one hand while the other trailed maddening circles on her stomach. It was too much.\n\nAnd it wasn't enough.\n\nHe had driven her quickly insane, and suddenly she ached for more, ached beyond the confines of her comfort level, and though her frightened little mind wiggled for her to stop it, she knew she didn't want to; she knew she couldn't stop, not here, not with so much left unsatisfied.\n\nTrembling, her fingers found the hem of her shirt, and with a deep inhalation, she lifted it above her head, catching her hair around one shoulder as she pulled it clear. Her hands held the rolled material on her lap, her arms encroaching on the sides of her chest as she fought the desperation to hide herself.\n\nDenny's intensity never dwindled, but it was coupled with a caring turn of his eyes that seemed like a soothing stroke down her spine. His hands touched either shoulder, trailing calming fingers down her arms until they reached her hands and continued seamlessly to remove her shirt from her. It left her arms relaxed to her sides, though her stomach clenched nervously. She wanted his touch, but she was afraid of it, as well as his roving, hungry eyes on her exposed flesh.\n\nAgain his hands were at her shoulders, but this time his fingers caught the straps of her black bra and pulled them off her shoulders to hang inelegantly at the top of her arms. It took all of her power to stifle a moan as one hand trailed the top edge of a cup, making her feel as though flames licked her skin. \n\n\"Take this off for me?\" he asked gently again as his hand trailed down between her breasts and down her quivering stomach. She slowly did as bid, reaching behind her to unclasp it, but was incapable of removing it completely. However, as he had already slid the straps down, the weight of the bra eventually pulled it free and clear of her chest.\n\nThey stared into one another's eyes as her breasts were finally fully exposed. She watched the slow slide of his gaze down her face, over her parted lips, and down her throat to take in her breasts. It was strange, she realized as she felt her skin flush pink; she knew she was beautiful, but never felt as beautiful as she did with Denny's palpable approval. Desire glowed in his eyes, and she felt a curious purpose because he approved of her.\n\nAnd then he gazed back up into her eyes, checking the state of her emotions. \"Ready?\" he asked.\n\nShe swallowed nervously, but nodded, a look of serious preparation on her face. Denny nodded, too, and then picked up the cold can of cream. He readied the trigger and pointed the nozzle at one hardened nipple. And then he squeezed.\n\nAlessa squeaked out in surprise at the intensely cold foam rapidly covering her nipple, paining and arousing it all at the same time. \"Steady,\" he murmured encouragingly, and then turned the can to the other breast. It was just as cold the second time, but she was at least a little prepared, even if the discomfort was the same.\n\nSetting the can down, Denny reached up to brush her hair back. \"Cold?\" he asked gently. She nodded quickly. \"Painful?\" Again she nodded. \"Want me to make it better?\" he murmured, and before she could agree, his head was dipping and his tongue was flicking.\n\nWithin seconds the cream was gone from one areole, and then engulfed in his hot, hungry mouth, suckling hard, intensifying the pained ache that had already existed. Alessa's hand flew to his hair, threading her fingers through and grasping tightly as her head fell back and her chest thrust forward, needing him to crush the sharp ache away.\n\nEventually, he moved to the other nipple, drawing sharp pleasure from deep inside her to make the turgid tip throb desperately. He even nipped it with his teeth, causing her to moan and move her pelvis forward. For a moment, Denny stood his ground, allowing her lower body to use him as a humping post, even contributing a thrust or two of his own to hitch her arousal even higher. But after several minutes of making love to her breasts, his once hungry mouth left her chest to give her a chaste kiss.\n\nBefore Alessa had time to orient herself, he was handing her back the gray tank top, but kept her black bra for himself. \"Your turn,\" he informed her. He was greatly rewarded to see despondency mar her features. She was clearly disappointed. Good; he didn't know how much more he could take himself. He had never put himself through so much torture in order to seduce anyone before; it was taking a considerable amount of perseverance, a resolve to match even the most stalwart explorers of the Royal Geographical Society.\n\nHe stepped away from her, giving her space to slide down off the counter. He could see her trembling when she looked up at him, an uncomfortable question in her expression. He reached out a hand to tuck her hair behind her ear and then leaned down for one more kiss.\n\nAlessa was bereft that he had stopped his attention to her breasts, and so when his mouth touched hers, she quickly melted into him, her hands sliding to his shoulders as she drove her tongue forward seeking his. Denny was surprised by her ardor, but quickly recognized her growing desire. He decided to provoke her passion even more in hopes it would serve his own purposes. He temporarily gave her what she craved, stroking his tongue against hers, caressing her back and buttocks. When he felt her smash herself against him, he decided it was enough, and pulled away. An innocent kiss to the tip of her nose and then he was out of her reach and walking from the kitchen. He smiled when he heard her exasperated huff.\n\nDenny was already sitting at his side of the coffee table when she arrived. She was bristled and agitated and no longer knew if she wanted to play this game. But it was her turn, and so with a shaking hand, she reached to pluck a tile free. Unfortunately, her coordination was adequately disturbed and the tower could not withstand her clumsy attempt at dislodging only one piece. It fell with a loud tumbling crash on the glass.\n\nDenny laughed and declared himself the winner.\n\n\"As the winner, I get to decide the next activity, and as it is nearing one-thirty, I choose bed.\" He grinned like the Cheshire cat, toothy and full of mischief.\n\nAlessa admitted she was tired, but was wary of his intent. \"Do I get my own bed?\"\n\n\"Of course not,\" he replied with an incredulous smile. \"I like sleeping next to you,\" he confessed. \"And after all, we've already slept together, so it shouldn't matter.\" He stood and went to the kitchen. She could hear him get something from the fridge and then the sound of pouring liquid. Denny emerged with a large glass of water. \"Probably should hydrate after all the alcohol,\" he suggested, taking three large gulps himself before handing it off to her.\n\nAs she sat there drinking, she watched him walk about the space turning off lamps as he went. When they were submerge in almost complete blackness, he was back standing in front of her. She could just see his hand held out for her, and took it with mild reluctance. \n\nThough she had already been in his bedroom when she changed her clothes, entering it holding his hand with the intent of going to bed-all while frustratingly aroused-made her feel as though she were being led to a torturous doom. She couldn't remember the last time she was in such dire need of sexual release, let alone when she was stranded and unable to give it to herself. But that was out of the question with Denny present.\n\nOr was it.\n\nThe stomach-flipping thought entered her lust-addled brain before she could stifle it. And with it now floating through her mind, she was suddenly stuck on it and only on it.\n\nDenny had turned and was smiling quizzically at her intense expression as she chewed her thumb nail. He had noticed the habit whenever she was working out a great problem in their meetings. He wondered what she could be calculating now. ",
        "\"Something the matter?\" he asked, slipping his hand up to hers to draw it from her mouth. She blinked as if he startled her from thought.\n\nAlessa quickly shook her head, almost desperate to convince him. She walked to the same side of the bed she had slept on when they shared the hotel bed. He smiled to himself and slowly walked to his own side, pleased that she unconsciously accepted their situation. He cleared his throat as she began pulling back the bed covers, causing her to pause.\n\n\"What?\" she asked with a raised eyebrow.\n\n\"To sleep in my bed, you have to be naked.\"\n\nThe blankets fell from her hand as she stood erect with wide eyes. \"Then I choose your guest room,\" she briskly informed him.\n\nHe simply shook his head denying her.\n\nThey were silent as they stared across his large bed at each other. \"Will you be naked?\" she asked with an edge to her voice.\n\nHe nodded twice. \n\nDenny could see her ire rising, her jaw clenching in frustrating. \"Fine,\" she relented tersely. \"But I want the lights off. And I keep my underwear on. Non-negotiable,\" she stated firmly.\n\nHe narrowed his eyes at her with a daring smile, and then nodded in compromise. \"Very well,\" and then reached to the lamp to do as asked. In the black of the room, with only his body silhouetted by the gray floor to ceiling windows behind him, Alessa quickly stripped off her pajamas and slid in between the sheets. She watched his impressive figure unhurriedly push down his pajama pants and get in the bed next to her.\n\nFor one long minute, she lay unmoving, afraid to give into the itch in her body, afraid to make her presence in his bed a noticeable reality. But Denny was far from forgetting her, no matter how she might wish for it. \n\n\"Do you remember what I said the first night we slept together?\" he asked quietly, breaking into her tense thoughts.\n\nShe blinked in the darkness, trying to remember exactly to what he referred. And then something erotically frightening did pop into her mind. \"If you think I'm letting you spoon me while we are naked, you are crazy.\" She heard him give a humorous chortle. \n\n\"What's the matter? Afraid?\"\n\nShe took a breath to lambast him, but closed her mouth as she decided, yes, she was frightened. She would want his touch, but be too afraid to experience it. She would be a paradox in his arms. Always fighting what she needed.\n\nBut why fight it at all, that traitorous voice asked again, making her once more question the purpose of her continued resistance. After all, the pleasure of sex wasn't a deception; Denny had more than proven her adolescent beliefs were just lies she told herself to cope with the disappointment. She wanted him, needed it, she realized. And once again she was back to the very same trail of thought that led her to ask for Denny's help to live the life she wanted. \n\nAs she trudged through her polarized thoughts, she felt a single caress from between her shoulder blades run the length of her spine, stopping at the edge of her underwear.\n\n\"That's it, isn't it?\" he asked softly. \"You're afraid.\" He didn't need to see her to know she nodded. \"That you'll be disappointed? Like before?\"\n\nThis time, she very clearly answered, \"No.\"\n\nThe long, slow swipe up her spine. Alessa shivered at the sparkling bliss of his touch.\n\n\"Then what?\" he asked patiently.\n\nA deep sigh was all he heard a moment before she turned over in the bed to face him, an empty expanse the length of his arm separating them. While she remained silent, Denny's hand, which had traced sensuous lines down her back, now cupped her cheek, his thumb softly brushing back and forth. \"Afraid to tell me?\"\n\nAgain she shook her head. \"No, it's just scary, like a roller coaster ride. You know you want it, it'll be fun, but so scary teetering at the top.\"\n\nHe smiled softly. \"I never thought of it that way.\"\n\n\"It's strange, doing this, being sexually active when I'd gone so long thinking I could get away with never needing it. I guess it's just scary to let someone touch me like you want to touch me. Like I want you to touch me,\" she admitted on a whisper.\n\nDenny felt his groin tighten at her quiet confession. He wanted to cuddle her so hard at that moment. \"Trust me?\" he asked softly. It was several moments before she nodded against his cupped hand. \"C'mere,\" he guided, his hand slipping to her shoulder and around to her back to gently pull her closer.\n\nAlessa edged her body nearer to him, though she left enough space that they didn't touch. His hand was combing through her hair, a soothing action that made her breathe deeply and close her eyes. She never wanted it to stop.\n\n\"This is what you want, right?\"\n\n\"Yes,\" she whispered.\n\n\"Then you can't just let this happen to you, you can't be a passive participant. It's action that matters,\" he explained as he continued his relaxing caresses.\n\n\"I understand.\"\n\n\"Good,\" he murmured as he cupped her face once more and leaned in to kiss her. She placed her hand over his as if to guard herself, but his kiss was as soothing as his stroking touch and soon she was melting. And then boiling. \n\nThe arousal that had been humming through her body was quickly stoked again. For a time, they just lay on their sides kissing, Denny more aware than ever that he couldn't push her, but only stimulate her to respond, to seek and beg and take. As his kisses stirred her passion, Alessa became restless, moving here and there, blinding seeking more stimulation. Following her lead, Denny's hand left her face and began a tantalizing path down her neck and shoulders. Several times he fought the impulse to hold her roughly, turn her, push her. But he knew the mistake it would be, and so restrained himself until he was nearly distracted with it.\n\nWhen Alessa's hands stroked his neck and seemed to tug on his shoulders, her body angling as if to roll over to her back, Denny followed her as long as she continued to pull. While continuing his kisses, his hands slid down her arms to lace his fingers with hers. Gingerly, so as not to frighten her, he shifted their arms until her hands were held above her head and his long, lean body was stretched on top.\n\nAlessa's moan as she pressed her bare chest up against his was all the proof he needed that she was enjoying it as much as he was. He could feel the hardened pebble of one breast and moved himself in a slow, gentle fashion atop her to further fuel the fire between them.\n\nAngled as he was half on top of her, his hardening shaft became pressed against her thigh, causing her drowning brain to catch onto an anchor of thought. Denny opened his eyes when she pulled from his kiss panting. \n\nShe had a few faulty starts as she tried to voice just exactly what she wanted. \"I want you to...give me an orgasm. But only with your hands. I'm-I'm not ready for sex. Yet,\" she admitted. Her eyes were adjusted enough to the dark to see his faint smile.\n\n\"Of course, whatever you want. Like I've said before, I can give you anything you want,\" and then he placed his lips against hers rubbing them soothingly back and forth, not quite a kiss, just a caress with his mouth. \"Any way you want,\" he added. Her lips fell open to welcome his tongue.\n\nWith each passing moment, with each fearfully given concession, Denny's desire to give her the greatest pleasures of her body grew and solidified. Damn his own need, he was hell-bent on destroying her in bed. Even without his dick.\n\nWith that determination firmly rooted in his brain, he resumed the heady kisses of before, using his lips and stroking tongue to coax moan after moan from her. What had begun as apprehension in her stomach melted away to bubbling, swirling excitement as his hands started caressing their way from hers, down the length of her tender underarms to the sides of her chest and along her stomach.\n\nWherever his hands went, her skin lit up, causing her to writhe against him. Eventually, his wandering, teasing fingertips found her breasts, drawing maddening circles on her flesh, but never touching the aching center. She whimpered when his finger came excruciatingly close to her nipple but skirted around it. \"Denny, stop being so cruel,\" she scolded against his mouth as she lifted her chest to his torturing hand.\n\nHe chuckled. \"Cruel? Sweetheart, don't you know torture is half the pleasure?\" And then he pinched the straining nub causing her to cry out at the painfully sharp pleasure. He tugged and squeezed and pressed on her sensitive breast, causing the building of something deep inside of her. While she recognized she wouldn't orgasm from only her breast being so wonderfully played with, she could feel the pleasure it created was a different layer to an orgasm, an added dimension that she didn't have with clitoral stimulation alone.\n\nJust when she thought the pleasure was too intense, becoming intolerably painful, his hand moved away to glide over her rib cage, down the smooth planes of her stomach, the sensitive curve from her hip down to her groin. Taking his time so she submerged herself in the pleasure at a speed she could handle, Denny paused at the boundary of her underwear, gliding his fingertips back and forth along the demarcation line. It wasn't until her hips actually lifted up to his provoking touch that he smiled against her lips and skimmed down the top of her panty-clad mound. \n\nThe fabric under his fingers was satiny edged in lace, and given the delicate smoothness of the fabric, he could tell her mound was likely trimmed short. He groaned as his imagination created an image of hope. His touch was nothing more than gentle introductory caresses with the tips of his fingers, as he might absent-mindedly stroke a kitten. And for the first few moments, it was enough as Alessa could no longer return his kisses as the entirety of her mind was focused on those five points of sensation gliding over the most intimate part of her body.\n\n\"S'okay,\" he murmured against her, hoping to entice her to rejoin their kiss. At length, Alessa was able to adjust to the new sensation of another's hand upon her sex and was able to return his languorous kiss. He could feel the apprehension rise, however, when his fingers increased the gentle pressure and more precisely glided down the length of her crotch, hitting her clitoris and stroking along her lower lips. Her breath came in a pace, but she continued kissing him back. She even held him around the shoulder, pressing his chest into hers.\n\nGiven the thin state of her underwear, Denny found great satisfaction in the dampness he could feel seeping through as he rubbed her sex, gently masturbating her. Though his initial touches had been met with unease, her hips were now slowly rolling in time to his arousing touch. \n\n\"You're the fucking sexiest thing I've ever known,\" he confessed as his mouth left hers to drop to her ear. Instantly, her sex became flooded with arousal, and where her panties had merely been damp before, they were now sopping wet, so much so that they were beginning to make the slightest of noise. And as she was fully lubricated, her fully plumped folds parted with the small pressure he had been supplying.\n\nNow dipped between them, with only the satiny fabric between his fingers and her body, Denny could easily make the rigid little nub at the apex, and when he strummed over it, she gasped and her hips jerked. He was kissing her neck as he chuckled. \"Find something you like?\" he asked with a voice roughened by lust.\n\nHer voice was shaky and husky. \"Oh, fuck yes.\" \n\nHe brought his mouth to hers again. \"Then let's see if we can do something with it.\" And then his tongue was in her mouth, and the hand upon her hot and wet core began moving more determinedly, repeatedly stroking over the nub, first up and down then side to side. He stopped to press or pinch before continuing on with the delirious stroking. Their kissing became more frantic as he worked her toward the edge. She couldn't keep her hips still as her pelvis worked in frenzied time with him. She could feel it building, his stroking turning her body into an electrostatic generator. \n\nAnd then she was there, the orgasm an electric ball of power ready to explode. Though Alessa had the flashing feeling that she was at the pinnacle of the roller coaster ride, with a rush of fear for the sensation about to come, she couldn't stop the plummeting descent of the instantaneous orgasm that arrived madly screaming, clenching her body with its prevailing pull. As she climaxed, she tightly clutched the back of his neck, lifting herself up to him and crying out in a powerful scream.\n\nDenny was more than satisfied to capture her agonizingly blissful wail with his own mouth, his hand continuing its stimulating fast strokes that forced the last of her electrified responses. And as the orgasmic twitches and groans gradually died, his hand slowed, until his touch resumed it prior soft and tender strokes.\n\nDown from the mindless high, general sensations and thoughts of reality began settling throughout her like leaves fallen from the tree. With them came something she hadn't anticipated.\n\nRelief.\n\nSoul-cleansing, life-giving, heart-rending, empowering, pure, inescapable relief. It had finally fucking happened. True, it wasn't technically intercourse, but it was a beautiful, undeniable, glorious sexual fulfillment at the hands of another. \n\n\"Shit, Sweetheart, why are you crying,\" Denny asked alarm when she suddenly burst into tears. He pulled his hand from between her thighs to hug her close, rocking her as best he could at that angle. When he pulled back from her to brush the hair from her eyes and the tears from her face, he was surprised when she kissed him. Nearly attacked him. Her crying didn't subside, but the joy she felt was evident enough to put him at momentary ease.\n\nAnd then she was giggling. Alessa lay back down and wiped the tears from her face, her nose now snotty. And through it all she giggled.\n\n\"I'm sorry,\" she laughed at last. He had a lighthearted chuckle, though he was still confused as hell. \"It's just...I don't know.\"\n\n\"You weren't disappointed,\" he concluded, finally catching on. And realizing by her monumental relief the trepidation she must have felt. \n\nStill crying, still smiling, still sniffling, she shook her head. Despite the darkness, he could see her beaming smile. Her body was shaking from the orgasm and the strenuous emotion she was experiencing. Smiling back at her, he pulled her into his arms.  \n\n\"Then I'm happy for you,\" he offered, placing kisses along her damp face. She turned to him, presenting her face for worship, glowing in the adulation. And when his lips found hers at last, she didn't suppress any excited response, but was honest in her eagerness.\n\nUnsurprisingly, their happy, post-orgasm kisses eventually morphed into a more heated, more sensual mating of the tongues, and though she had just been happily satisfied, Alessa began moving against him once again, her body now hungry for more. Denny's hands were roving again and eventually moved down her body to the edge of her panties. Again they grazed her sensitive skin of her lower stomach at the edge of the lace. \n\nAnd then they slipped under.\n\nAlessa sucked in a deep breath as she felt his fingers move past her last layer of protection, a residual nervous underlying the aroused excitement his deft touch provoked. At first, the fingers merely stroked back and forth under the band, not bothering to slide farther down. It then seemed his fingers were venturing towards the side of hip and away from her sex. She was momentarily confused until she felt him catch the material and slide his hand down the exterior of her hip.\n\nHe was taking her underwear off.\n\n\"Please?\" he murmured in her ear.\n\nShe hedged, only making an uncertain noise. \n\n\"No sex, I promise, but I want to touch you. All of you. Skin to skin. Nothing in between,\" he seduced softly. She shuddered, but slowly lifted her hips so he could slide her panties off. Alessa had expected him to take them completely off, but he left them below her knees. The feeling was immediately risqu\u00e9, almost dirty even. And then he lifted her outside leg to bend up and then gently shoved it out so her legs made a figure four, effectively opening her sex to his easy perusal. \n\nDenny could feel her deep, quivering inhalation, but her hands stayed fast on his shoulders and she didn't attempt to wiggle away. He replaced his hand on her lower stomach, only his fingertips gliding over her silky skin. Once more he stroked over the ticklish skin just over her groin and felt it jitter under his passing fingers. As expected, her found the hair covering her mound trimmed short so it was silkier than if it had been left otherwise.\n\nAlessa closed her eyes as she felt his caress on her exposed mound. As good as the first time, but frightening once again. Her stomach tightened in anticipation as his fingers moved lower.\n\n\"Fuck,\" Denny hissed in elation as his fingers at last caressed her plumped lips that were not only hairless, but liberally smeared in slick arousal, his head dropping to rest in the crook of her neck as he fought to contain a forceful surge of desire. He could feel his own precum leaking from the aching head of his manhood, and was lost a moment in agony. It was the smoothest flesh he had ever felt.\n\nAlessa's face burned in the dark, but she forced her gaze back to him when he at last lifted his head. Denny propped himself up on his other elbow so he could watch her dimly-lit face as he explored her thoroughly. He took his time, gliding his fingers down the length of her slit. He held them between his finger and thumb, pulling gently, testing the give and texture. He watched her eyes as she took a deeper breath at the new sensation of his fingers parting her.\n\nHe stroked back up to the top of her folds, familiarizing himself with the feel of the sensitive nub now unclothed and bare to his marauding fingers. And though she felt a tad overly sensitive after her previous orgasm, his touch was so masterful she couldn't stop her rolling hips. He had a feeling she wasn't even aware how perfectly she responded to him. When her breathing began to come with quicker and quicker puffs, he eased off his drive to send her over again, and instead decided to discover other hidden places.\n\nShe growled in pain when he stopped, but said nothing, knowing he would take her where she needed, even if the route was tormenting. Alessa bit her bottom lip when she felt the end of his middle finger circle the opening of her canal. She took a deep breath as it slowly penetrated her, stroking lovingly as it went. There was a small twinge of pain as it stretched inside, and she arched her hips gingerly in search of relief from the slight discomfort.\n\nWhen Denny's finger was as deep as possible, he held it still, understanding by the tremendous tightness surrounding it that she needed a moment to adjust. It didn't take her long before she started twitching her hips, seemingly encouraging him along. \"Okay?\" he asked, leaning down to kiss her tenderly. She moaned a yes, and began to return his kiss more enthusiastically. \n\nDenny began sliding his one finger in and out of her, pressing in places, testing for sensitivity, taking note when she squeaked or moaned. Eventually he tried a second finger, his own sex organ pulsating at how exquisitely tight she was. Again, he could sense her discomfort, and took his time to go slowly, stretching his fingers out to open her wider. \n\nAlessa was gasping against him, the struggle to accommodate his thick fingers as well as the consistent rising of yet another climax taking its toll on her control. When he first touched her, she had to consciously force herself to trust that his touch would bring her to her release, accept that she was no longer in control of the pleasure of her body. But his adroit touch, awakening sensations that she had never before felt by another hand, had seduced her body into mindless, capitulating responses. And after her first orgasm, she knew he could give her more than she had ever suspected she needed.",
        "In his gentle, stimulating exploration of her wetness, he found the secret spot that even she had never touched. It was a deep pressure, a building fire under the surface of her skin. It was duller than the sensations that had caused her first orgasm or even when she masturbated, but it was deeper, richer, a thrumming bass to the sharper melody. Alessa began moaning in earnest as he stroked it firmly, her hands clawing at his shoulders.\n\nDenny could tell by the clenching of her body that was nearing the end yet again, and so angled his hand so the meat of his palm smashed her clit while he continued to stroke in and out of her with his two fingers. Alessa leant up to kiss him, her mouth desperate for gratification. He answered her seeking mouth with his thrusting tongue, kissing her fervently.\n\nHer hips were humping against his hand enthusiastically, grinding herself against his hand, feeling for the first time the intense connection between the inside of her sex and the outside. \"Come, Sweetheart, you can do it, come on my hand,\" he coaxed, feeling the fluttering of her slick inner walls. \n\nAnd then she did, crying out as if the pained moan was torn from her chest. Her leg curled up to catch against his bottom, crushing herself against him as she climaxed intensely. \"That's it, baby. You're such a good girl, so fucking hot when you come for me,\" he murmured in a lust-drunk voice as he trailed kissed down her face. He was still pumping his two fingers in her, his palm still pressed against the nub under her folds. And it soon became painful, forcing her to grasp his wrist to hold still against her as her thighs squeezed his hand tight.\n\n\"Oh, fuck, Denny,\" she moaned with her eyes screwed shut. \"So good. Can't take it anymore,\" and then she was panting, her swollen and used sex now aching in delirium. Her mind swam and her body buzzed. It felt odd when he removed his hand from between her legs, but she was too mindless to think much about it.\n\nGathered in his arms, she turned so her naked body pressed against his, her head resting on an arm cradling her. Her hands were gathered between them, laying on his chest, her fingers slowly stroking the light hair there. And eventually, as her conscious mind returned, she became aware of one thing.\n\n\"What about you?\" she murmured.\n\n\"Hm?\" he asked as his chin rested against the top of her head. \n\nShe undulated her hips against him, pressing her thigh into his very hard shaft. He groaned in pain. \"You're hard as a rock.\"\n\n\"Doesn't matter. Right now's about you.\"\n\n\"No, right now is about what it's like to be in a relationship. You can't leave someone miserable when you can do something about it,\" she argued, once again rubbing her body against his.\n\nHe gripped her hips painfully. \"And what do you intend to do about it?\" he growled. \"I don't hope I'll get to actually fuck you,\" he chuckled grimly.\n\nShe didn't answer, but trailed her own hands down his body. Denny hissed when she grasped onto his erection. Her touch at first was tentative but soon grew bolder, squeezing and stroking.\n\n\"Wait,\" he whispered and then placed his hand back at her tender sex. She sucked in a surprised breath as his two fingers slid inside her flooded cavern. Finally, he slowly pulled them free, and soaked as they were, he placed his hand around his shaft, smearing her come over it. Alessa shivered at the intimacy of coating his manhood with her own moisture, before reaching back for him. She bit her lip and smiled at the dirty thrill of touching his slickened body and grew more and more eager in her quest to give him as powerful an orgasm as he had her.\n\nAs they were on their sides facing each other, her hands barely fit between them as she stroked him, but he was satisfied when she drew her top leg over his hip. He was kissing her again, with his tongue thrusting in time with her confident strokes. Denny thrust his pelvis into her with a hand on her hip, the mock-fucking positioning turning him on immensely.\n\nHe was whispering to her, telling her how amazing she was, how she made him feel. And his words made her glow. \"Sweetheart, I'm so close. Fuck,\" he moaned, feeling it swell in his scrotum. \"Make me come, Sweetheart. Make me come all over you.\"\n\n\"Do it. I want to see it. I want to feel it.\" And then, his hands grasping her tightly to himself, his hips giving a powerful thrust against her forcing his shaft to slide through her fists, Denny came for the second time that night, his body breaking forth like an erupting dam.\n\nAlessa was breathing almost as heavily as he was as she felt warm, wet clumps of semen splash on her forearms and then stomach and breast. He was panting in her neck as his mind spun deliriously around in a whirlpool of sexual bliss. Eventually, it faded and he was able to return to a dreamy reality in which he held the most desirable woman in his arms. \n\nHe rolled them until he lay over her, his hand finding hers again to loop their hands together. He trailed long, loving kisses down her face until his lips found her mouth and moved lazily over it. \"And how are you?\" he asked at last, his voice tired from the late hour and the intense excursion. \n\nShe was silent only a second. \"I'm good. I'm great.\"\n\n\"Not disappointed?\" he chuckled.\n\n\"I am many things right now. Disappointed isn't one of them.\""
    ],
    "authorname": "titania123",
    "tags": [
        "romance",
        "lawyers",
        "make out",
        "masturbation",
        "orgasm",
        "whip cream"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/trivial-pursuits-ch-14"
}