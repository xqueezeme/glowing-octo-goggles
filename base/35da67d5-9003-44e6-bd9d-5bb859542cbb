{
    "title": "College Visit Ch. 04: The Night Begins",
    "pages": [
        "The sexual ice is broken...now it's time for the hotel room!\n\n***\n\nFortunately for me, the drive to my hotel in Kendall Square was short and uneventful. I was happily exhausted from the amazing blowjob Lexi had given me in the parking garage, and I couldn't wait to get her back to my room!\n\nAs we drove, Lexi tucked her feet up and turned toward me. One hand rested on my shoulder the whole time, idly caressing the back of my neck (which I love). The other hand lay on my thigh, occasionally brushing my cock and keeping me in a constant state of semi-arousal.\n\nTo make things better, we had moved far beyond the emotional rollercoaster of the afternoon and evening. Things with Lexi were now on a firmly sexual footing, and she teased me mercilessly as I drove across the river.\n\n\"So what are you going to do with me once you get me alone?\" she asked with a smirk.\n\nMy mind swirled with possibilities. \"Oh, my God-I can't even begin to tell you!\" I croaked.\n\n\"Are you going to fuck my mouth again?\" Somewhere during that blowjob, her shyness had vanished entirely!\n\n\"Anything you want, Lexi...anything!\"\n\n\"That's good, because I want you to do everything you've ever thought of!\"\n\nHer hand moved up and gave my cock a firm squeeze for emphasis. Fortunately, we were close to the Marriott at that point-otherwise, I would have had to pull over and show her some of what I had in mind! \n\nI pulled into the parking garage and unbuckled my seatbelt. Turning toward the beautiful young woman beside me, I pushed the button on hers as well. She leaned forward obligingly and I put my arm around her, pulling her close and kissing her soft lips. My free hand rose of its own accord and cupped the fullness of her sweater-covered breast. She moaned happily and arched her back into my caress.\n\nWith a smile, Lexi pulled back for a moment and looked at me with a raised eyebrow.\n\n\"What is it with you and parking garages?\" she laughed. \"Some kind of fetish?\"\n\n\"Just a coincidence,\" I assured her. \"Any time I get you alone, I just want to grab you and it keeps happening in parking spots!\"\n\n\"And coffee shops, and bars, and aquariums, and skyscrapers, and public squares...\"\n\n\"Okay-I confess. I just want to grab you wherever we are! Are you happy?\"\n\nHer mockery faded into a happy little smile and a soft kiss on my lips. \"Very happy.\"\n\n\"So would you like to come up and see what other places we can find?\" I asked.\n\n\"I'm all yours.\"\n\nMy heart beat faster at the thought of all she was offering. \"Same here. Let's go!\" I urged.\n\nBreaking our embrace, I got out and went to the trunk to grab my overnight bag. She pulled her backpack from the back seat and met me behind the car. Once again, she grabbed my arm with both hands and we walked quickly toward the hotel entrance. The lobby was warmly lit and we crossed the tiles and bands of carpet to the front desk.\n\n\"Can I help you?\" \n\nI gave my last name and told them I had reserved a room overlooking the river. In just a few minutes, I had signed the digital receipt and accepted the folder paper sleeve containing the room key. Lexi stood by me quietly, but smiled brightly when the clerk thanked me and told us to enjoy our stay.\n\nAs we crossed the lobby to the elevators, Lexi was still quiet, and she kept glancing at me.\n\n\"What's up?\" I asked as we waited for the car to arrive.\n\n\"I don't know-it's hard to explain...\" she said haltingly.\n\n\"Is something wrong?\" I asked gently. \"Are you having second thoughts about this?\"\n\n\"Oh, God no!\" she chirped, sounding more like her usual self.\n\nThe elevator dinged and the doors slid open. Lexi tugged me inside, pushed the \"12\" button, and let the doors close before she answered. She also stepped close to me and laid her head on my chest, muffling her voice somewhat.\n\n\"I know it's stupid, but we walked in and you did all the check-in stuff and everyone was so nice and no one said anything about me being here with you...you just signed and paid and totally knew what to do.\"\n\n\"I've been in a lot of hotels, Lex!\" I protested. \"Is that a problem?\"\n\n\"Oh, no! Actually...\" she trailed off as the doors opened.\n\n\"Actually what?\" I asked with a laugh as I shouldered my bag and held the door for her.\n\n\"Actually, it made me really horny for you! Can I tell you something?\"\n\n\"Of course,\" I told her with a wolfish grin.\n\n\"My pussy is SO wet right now!\" she chirped excitedly.\n\nWith that, she was off down the hallway. I followed rapidly, glancing at the numbered signs, but she was on the right track. She stopped outside the proper door and turned to wait for me. I pulled the sleeve from my pocket and waved it across the sensor. With an echoing click, the door unlocked. Flashing me a grin, Lexi slipped in front of me, opened the door, and crossed the room quickly. Her bag and jacket landed on one of the chairs as she passed the desk and she went right to the window and pulled the curtains wide open.\n\nI followed at a more normal pace, dropping my overnight bag and jacket on the luggage rack. The door clicked shut behind me and I stopped in the middle of the room. Lexi's arms were spread wide on the glass, and the bright glow of the city illuminated her hair. Although she was backlit, there was enough light for me to spend a moment absorbing how lucky I was. There before me was a petite 20-year old, her ass beckoning me, and she was in my hotel room ready to do whatever we could think of together. How the hell had this happened?\n\nNot wanting to waste any more time, I crossed the carpet to stand behind her. My arms went around her waist and my chin came to rest on her shoulder. She leaned back against me, sighing happily. This was not the time for contentment, though. As my cock pressed into her from behind, I slid one hand up to hold her firm young breast. The other traveled lower, moving from her hip to the front of her jeans. My palm pressed firmly against her mound and she shifted slightly, opening her legs a little to allow me better access. When she did this, I curled my fingers down and felt once again the heat radiating from her pussy.\n\n\"Oh, fuck!\" she groaned as my fingers rubbed her pussy lips together. She ground her ass more firmly back against me for a moment and then retreated. Quickly and without disrupting my caresses, she raised one foot and pushed her boot off, then switched legs and did the other. That dropped her height by about an inch, and I had to pull her closer and lean a little further to reach the spots I was most interested in. Her hands went back to the glass as I kissed the side of her neck and continued to play with her erogenous zones, moving from one breast to the other and squeezing her entire pussy rhythmically.\n\nAfter another minute of this, Lexi needed more. She pushed back off the window and turned within my grasp. My lips found hers and she kissed me frantically, her tongue driving past my lips to toy with mine. Her hands, meanwhile, fumbled at her waist. Quickly she unbuttoned and unzipped her jeans and pushed them below her hips. She couldn't get them any lower without breaking our kiss, which she seemed reluctant to do. Instead, she straightened up and her hands went to the hem of her sweater. This time, she had to pull her lips away from mine for a moment as she whipped her sweater off over her head-she did this and then threw herself back into my arms, crushing her bra-clad breasts against my chest. \n\nOur tongues re-engaged, and my hands went immediately to her ass. I grabbed two handfuls of her delicious derriere, marveling at its marble-smooth texture and firmness. Her panties, however, were in the way of my enjoyment, and her jeans were in the way of getting those off, so I reluctantly broke our kiss to deal with the problem. Sinking to one knee, I moved my hands to the waist of her jeans and as I slid them down, I kissed the soft, warm skin of her stomach. She wrapped her arms around my head and played with my hair and my hands and my lips moved lower. When her jeans reached her ankles, I kissed her mound and her hips rocked forward urgently. I tugged her pants off one foot, and she lifted it compliantly. When she lifted the other one, though, I threw the jeans aside and grabbed her leg behind the knee while it was still bent. Instead of letting it down, I lifted it firmly onto my shoulder. This opened her legs wider and curled her hips forward. My kissed now fell directly on her pussy, and I found that her panties were soaked before I got there. The smell was intoxicating-fresh and spice and sexy as hell-and I couldn't wait to taste her!\n\nLexi apparently had the same idea. Her fingers darted down and pulled her panties to one side, exposing her well-groomed mound and her perfectly pink pussy to my hungry gaze.\n\n\"Oh my God, please...\" she moaned. \"Please!\"\n\nWith a smile on my face, I hoisted her leg a little higher and sank my tongue between her folds. She groaned deeply as I lapped her from bottom to top, brushing past her clit to start again from the bottom. My hands were locked on her ass again, pulling her against me and she held tightly to my head. She was groaning with desire, and I was licking and sucking every inch of her that I could reach, lost in the slick, tangy taste. Again and again I pushed my tongue deeply inside her, then backed off to suck on each crenellated lip before giving her a long, broad lap to gather every drop of her that I could manage. \n\nIn just a minute or two, Lexi was close to the edge. Her thighs twitched and her hips were rocking against my probing tongue. I heard her breathing in short gasps above me. Now, I told myself, it was time to make her explode. In response to her unspoken urging, I turned my attention to her clit, sucking hard and flicking the hood repeatedly with the tip of my tongue. That drew a yelp from her and she rammed her hips harder against me, holding my head tightly to keep me there. Her abdominal muscles were quivering with tension as I kept up my merciless assault on her most sensitive spot.\n\nFinally, the dam burst. I heard a wailing series of \"Yes...Yes...Yessssss!\" crescendoing above me and I pursed my lips tighter, sucking as hard as I could and mashing my tongue directly down onto her pulsing clit. Suddenly, her body froze and I felt her pussy throbbing wildly against my chin. I eased off my oral attack and simply held her in place while shudders shook her body. Her hips rocked frantically, her back arched, and her leg muscles vibrated with pleasurable tension as her orgasm washed over her again and again.\n\nWhen the pace began to slow, I held her firmly still, supporting her with my hands. Gently, I lapped again from bottom to top, collecting her juices and helping extend the pleasure she was feeling. Knowing how sensitive she was just then, I stopped short of her clit and simply savored the feel of her body and the satisfying thrill of making her cum so hard.\n\nAfter several minutes, she began to relax. Her leg slipped off my shoulder and she sank down to kneel in front of me. My arms went around her back and I held her close while my lips sought hers again. With a deep sigh, she kissed me softly and deeply, her eyes fully closed and a blissful smile tugging at the corners of her mouth. Playfully, she sucked on my lip and then kissed all around my mouth; I sensed she was exploring her own taste and enjoying it. \n\nAt last she stopped and pulled back to look at me. She was radiantly happy-flushed cheeks and chest, sparkling eyes, and a satisfied smile greeted me as I returned her gaze.\n\n\"That,\" she murmured breathlessly, \"was fucking a-mazing!\"\n\n\"Good,\" I told her with a smile. \"You made me feel that way before, and now it was your turn!\"\n\nShe grinned and kissed me again.\n\n\"Besides,\" I interrupted, \"I have been waiting all fucking day to taste you!\"\n\n\"I hope I lived up to your expectations!\" she said with a familiar smirk.\n\n\"Better than I imagined,\" I assured her.\n\n\"Same here,\" she sighed\n\nOur lips came together again and we held each other tightly while the city glowed outside."
    ],
    "authorname": "outdoorhorny",
    "tags": [
        "mf",
        "older male",
        "oral",
        "younger female",
        "oral sex",
        "mature"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/college-visit-ch-04-the-night-begins"
}