{
    "title": "Mira Ch. 06",
    "pages": [
        "A gentle breeze sighed as it swept through the branches of the trees surrounding the clearing. Rillan never could decide if the empty clearing late at night was peaceful or ominous. He waited in the shadows of the cave mouth until he was positive no one was watching. Slinking through the shadows he made his way to the stone basin where letters were left for him. Cold acceptance was all he felt as he saw the parchment, gleaming white reflecting moonlight in the darkness.\n\nI knew it would happen, he told himself. The past few months have been more dream than reality anyway. He didn't know if the annoyance he felt was with himself or with the druids. Without looking at it he pocketed the letter and gathered the supplies that had been left. Arms full of bags of food he trudged through the caves. Normally he would take the food in to Mira's store room, but he didn't want to face her just yet. Dumping the supplies in a storage room off the main hallway, Rillan headed for his rooms. \n\nA sweet cheerful melody called to him as he passed the door to Mira's room. She played for him often lately. Usually the sound reached into him, drawing a long absent smile from his lips. Now it only served to remind him that this happiness was fleeting. He closed the main door to his rooms behind himself. Upon reaching his bedroom, Rillan reluctantly pulled the letter from his pocket. Sitting down in a large chair next to the fireplace, he held the letter in his hand, staring at it. \n\nA long moment passed while he contemplated the ramifications of not taking the assignment. In all the years I've done this, no woman has ever affected me to this extent. Rillan growled at himself. This is my job. He turned the letter over with intent. A red wax seal held the letter closed. He barely glanced at it as he broke it and opened the folded parchment.\n\n\"Tiberius Caelius Novanus,\" he read aloud. Rillan didn't know the man. He had been underground too long to know the current leaders. This was yet another point of contention in his mind. He was torn between being blissfully unaware of who he killed and keeping tabs on current events if only to keep the druids honest in their targets. The only problem with the later was the guilt he felt when he knew of the families the men he killed left behind.\n\nRipping the parchment into several pieces he stood and tossed it into the fireplace. He rarely lit the fire, preferring the darkness in his rooms. This was one of the few exceptions. He always burned the parchment that bore the names of his victims. Flames leaped up from the old coals in the grating. Slowly the flames danced higher, licking at the wood until the paper lying on the top of the pile caught fire. Rillan watched the paper burn, the red seal melting to run like blood into the tinder. \n\nAs the fire blazed in the hearth Rillan returned to his chair, considering how he would prepare Mira for what was to come. There's always the chance that it won't take long and it won't be too bloody. The possibility exists that I'll return here with my mind intact. Rillian could count on one hand the number of times that happened. He drummed his fingers on the arm of the chair, while the fire burned on. This was inevitable. I knew that the assignment would come. But so soon? The fates couldn't have given me a year or two with her as she is, he thought. \n\nRillan couldn't stop thinking about all the time he spent with her since he gave her Elizabeth's room. It started with helping her move the things she wanted to the room. After that she offered to play some music for him. Within days he found that he was rarely without her. At first he believed it was only the dark loneliness of his well furnished tomb that brought her to him so often. When she began making it clear that she liked sleeping in his bed or having him in hers, he began to wonder if she truly felt something for him aside from fear. He had yet to have that conversation with her. For the moment he was happy in his oblivion. The last of the flames shrank into the coals and even the glowing embers were fading. Forcing himself to bottle his upset, Rillan composed himself, took his heavy cloak from the chest at the end of his bed and left his rooms. \n\nOn the way to Mira's rooms he stopped in the large main room at the end of the hall to collect his sword. Lifting the weapon, Rillan examined it as he contemplated the number of heads the blade had severed from bodies. I suppose there is some comfort in the idea that the blood is on the sword and not my hands. He collected his sheath from the weapons rack and thrust the weapon into the soft, supple leather, hearing the familiar thwack as the hilt stopped against the lip of the sheath. Clearing his mind of all thought he strode out of the room and down the hall.\n\nHe only briefly knocked on the door before letting himself into her room and walking down the short hallway toward her bedchamber. Fresh night air greeted him as he opened her door. He smiled and shook his head. She never closes it. Remembering what he was there for, the smile fell from his face. Mira lay asleep in her bed. There were times with women before her that he didn't bother to warn them or say when he was leaving. He shoved the thought out of his mind. She deserved better than that.\n\nMoonlight puddle on the bed around her head and shoulders. She had moved the bed beneath the shaft so that she could stare up at the sky. The soft white glow exaggerated her pale skin. She looks to be a spirit or fey. Rillan reached out and stroked her cheek gently. \"Mira, I need to speak with you.\"\n\nThere was just enough volume and insistence in his voice to wake her. Mira stretched happily, the blankets falling away to show that she was naked in bed. She smiled up at him sleepily. \"I had resigned myself to sleeping alone tonight.\"\n\nHe eyed her skeptically, staring at her bare breasts. His hand trailed down the side of her neck, along her chest, and skimmed teasingly over her nipple. \"Do you always sleep naked when you believe you'll be sleeping alone?\" \n\nThe stoic tone in his voice told Mira that something was wrong. \"What is it?\"\n\nRefusing to think any more about the situation, Rillan sat down on the edge of Mira's bed. His voice hard and forceful, he stared unwavering into Mira's eyes. \"I won't be staying tonight. I need to feed and then I leave on assignment.\"\n\nUnconsciously Mira pull the blanket to cover herself. A chill went through her body at the image summoned up in her mind when he mentioned feeding. No matter how much I love the man, I think I'll forever fear the demon. \"Alright,\" she said meekly. \"Do you know when you'll return?\"\n\n\"No. Be prepared for the possibility of something worse than the first time I used you.\"\n\nSomething about the way he phrased it made Mira cringe. \"Okay,\" she said, overcome with grim acceptance. \n\nRillan watched her staring at and clinging to the blanket. Anger and frustration with himself took hold of him. In a sudden rush, his eyes sunk into his head, black as night. The skin of his face seemed to pull tight to his skull, making his mouthful of dagger sharp fangs appear lipless and larger, protruding from his head. \n\nMira suppressed her scream, as she shrank back from Rillan. Usually the room was pitch black and she only had to submit to rough hands in the dark, then pain that caused her to black out. The moonlight on his face was more than she could handle. As Rillan moved in to take her, she fainted. The vampire cared little for whether his prey was conscious or not. Tearing the blanket from her breast, Rillan descended on her with fiendish pleasure. Biting down viciously on her collar, he reveled in the feel of warm blood, thick and sweet, spraying into his mouth with each heartbeat. Clawed hands wrapped around her upper arms tight enough to pierce the skin and leave bruises to form in the morning. \n\nHe needed very little blood this time. After he took his fill, the vampire stood, leaving Mira lying across the bed awkwardly bent over. He walked toward the shaft in the ceiling, staring out at the moon. The vampire didn't even spare a glance back at the crumpled form in the bed. Leaping up into the shaft as if the movement was second nature, Rillan was a blur of dark movement, crawling spider-like along the stone walls, casting a shadow over Mira, until he slunk over the crest of the shaft into the night.\n\nMira woke, hunched over in bed, with an ache burning in her back and hip. Sunlight beamed in through the open shaft, onto the bed. Lifting her face toward the light she let the warmth seep into her skin. Images of her last moments with Rillan flashed through her mind. Ignoring them, she wonder how long she was out and when Rillan would return. His words haunted her. The last thing she wanted was another awakening like that first one.\n\nSighing, Mira pushed the blankets back and stood, stretching her sore body. She looked up and out the shaft again, grateful that he allowed her to have the luxury of being able to see the sky. With that thought in mind Mira set to work preparing the room for the misery she anticipated. She moved the chamber pot closer to the bed, made sure the pitcher had fresh water, and she began preparing stew with the intent of keeping it going until the ordeal was over. \n\nThe moon slipping down beneath the horizon would have told Rillan that it was time to find shelter for the day, if he hadn't felt the sun sneaking up behind him. His path, carefully planned, took more than a week to reach Noviodunum. As fast as he traveled, the dawn always forced him into hiding, impeding his progress. \n\nSmall stone and timber round houses, cared for and watched by the druids, served as way stations, strategically placed in his path to the city. He traveled this path so many times over the years he could have done it in his sleep. Rillan walked through the door just as the sun peeked over the tree line. He closed it securely behind himself and then made his way to the straw filled mattress on the floor. He didn't even bother to light the fire. He knew he wouldn't need it. Periodically, over the years he had lit the fire as a pleasant distraction. The last few trips, however, he had taken to sleeping from the time he walked in until he had to leave. He spent less time thinking that way.\n\nRillan felt as though he just closed his eyes, when he sat up on the bed and noticed that there was no light filtering through the cracks in the old build's roof or corners. He took a moment to stretch and yawn before slinking out the door into the night. \n\nThe first few nights went the same as every other assignment. Sleeping through the day and moving with the night wind as soon as the sun vanished from view. Two days from the city, just as the first light of the day began to color the sky Rillan came to that used to be his stopping point. The round house foundation remains were long cold and the surrounding forest was silent. Rillan guessed that the burning took place days before if not longer.\n\nWalking around the pile of ash and stone that used to be his shelter, Rillan found no sign of who had burned it or why. It may be possible that someone in power in Noviodunum knows I'm coming. If the caretaker had gotten away from this then we would have known that the place was burned. So either he's dead or captive. Rillan looked to the lightening sky. I wonder how much he told them and if the safe houses closer to the city are destroyed as well.\n\n Accepting the possibility that there may be no more shelter between himself and Noviodunum, Rillan pulled the hood on his cloak up and pulled the heavy wool around his shoulders, careful to obscure as much skin as possible from the oncoming light. It wouldn't kill him, but it would be painful and completely drain him before he even reached his target.\n\nRillan kept to the shadows as much as possible. Travel was slow going. He didn't want to get into town with obvious burns on his face or hands. Most people wouldn't know what he was. Still they may think he carried some disease. That would make getting a room at the inn nearly impossible.\n\nThe sound of horse hooves pounding through the dirt prompted Rillan to take to the trees. Hiding in the branches of a tall oak, he watched several uniformed men on horseback charge through the woods. He couldn't help his suspicion, considering he wasn't traveling on a trail of any kind. When the horses disappeared into the trees, Rillan climbed down again. \n\nRisking exposure to the sun he chose to speed his travel. Something isn't right, he thought. He contemplated the circumstances of the assassinations he had performed over the past few years. They were all political, by his understanding. That could mean attempted retribution for any of the factions that may have been affected by the death of a leader. I suppose there has to be someone in Noviodunum intelligent enough to draw a connection between the assassinations and the druid nations. As intelligent as the elders are, I can't imagine that no one has noticed over the hundreds of years that I've been doing this that the people who die are the ones who lobby for northern assimilation and movement.\n\nNear nightfall he came to the remains of the next round house in his path. As he knelt to examine some ashen footprints in the underbrush, shuffling from nearby bushed caught his attention. Darkness was descending on the decimated clearing. Knowing that he was already seen, Rillan stood and pushed the hood of his cloak back. Rillan's eyes bled to black and sunk into his skull. His senses sharpened and the sound of a rapidly beating heart called to him. Turning toward the sound, Rillan cocked his head and peered menacingly directly at the source of the sound. Shallow breathing quickened in the darkness. \n\n\"I can smell your fear,\" Rillan hissed at the hidden prey.\n\nSuddenly a flurry of movement burst from the bushes and a human form scrambled into the trees, running for his life. With the callous nature of any hunter pursuing his prey, Rillan followed with practiced ease. In a matter of moments he was behind the figure. Savage clawed hands grabbed a flailing body and slammed it into a nearby tree. His head hit the tree with a sickening thud. \n\n\"Give me a reason not to drain your life and leave you as carrion for the wolves,\" Rillan sneered, in a deadly undertone, through a mouthful of daggers. The demon didn't register that the form he menaced was only barely a young man. \n\nThe boy whimpered an inaudible response, as the vampire drew closer. Wide eyed with terror, staring into black, lifeless sockets where eyes should have been, the only thing the boy could manage to say was, \"please.\" \n\nThe distinct foul odor of urine assailed Rillan's senses and caused a pause. Somewhere, far off in the black of the forest a desperate voice called out, \"Briac! Briac! Where are you boy?\"\n\nReality swept in and the vampire retreated. When Rillan looked at the boy again he was unconscious and had peed himself. Rillan laid the boy down on the ground and stared at him with sympathy. The fates have blessed you with great luck child, Rillan thought, realizing that he was more on edge than he had thought. \n\nTurning toward the concerned calls in the darkness Rillan decided to chance that the boy and whoever was looking for him were not a threat to him. He had some questions that they may be able to answer, and he wanted to know why they were this far from the city at dusk. \"He's here,\" Rillan called out in answer to the increasingly frantic cries.\n\n\"Where,\" the voice returned.\n\n\"Here. Follow my voice.\"\n\nMinutes later a short, barrel-chested man in roughly made brown breeches and vest came into sight through the trees. \"Thank the fates,\" he breathed heavily when he saw the boy lying on the ground. He brushed past Rillan and knelt next to the Briac. \"Do you know what happened here, stranger?\"\n\n\"He appears to have fainted,\" Rillan responded sympathetically as the man examined the boy. \"I believe he hit his head. I think I frightened him. He ran.\"\n\nThe man looked up at Rillan momentarily. \"He has always been skittish.\" The man paused and wrinkled his nose as he noticed the urine stained pants. \"I told him not to wander off.\" He stood up and offered a hand to Rillan in greeting. \"Well met, my friend. I thank you for your help. I never would have found him if you hadn't called out. I'm Brian. The lump on the ground is my son Briac.\"\n\nRillan nodded and clasped the man's wrist. \"Rillan. Please don't thank me. He would have found his way back to you himself, if I hadn't scared the wits out of him.\"\n\n\"The fool deserved it. I told him to stay close. The wood is dangerous these days. My camp isn't much, but you're welcome to share it if you wish. Safety in numbers.\" The man released Rillan's wrist and bent to pick up the boy. He lifted Briac easily and threw him over his shoulder to take him back to his camp.\n\n\"I appreciate the offer, but I have a long way to go yet.\" \n\n\"You're traveling at night?\"\n\n\"I've never had trouble with it before,\" Rillan replied, as they walked toward Brian's camp. \"I'm not from this area. Can you tell me why you speak so ominously and yet are in the forest yourself.\"\n\nBrian gave Rillan a sidelong suspicious look. \"You haven't heard about the upheaval in Noviodunum?\"\n\nRillan sighed heavily. \"No.\"\n\nThere was a long pause as Brian debated how much he should say to a complete stranger he found standing over his son's unconscious body in the forest at night. He was starting wonder if Rillan had more to do with Briac's condition than he had originally thought. Clearing his throat he decided on some common knowledge information that couldn't get him into too much trouble if this guy was one of Tiberius' men. \"A new militant faction has come to power. The new senate is bent on fortification of the current holdings. There have been some attacks from barbarians to the east. But more than that, they're recruiting for the army.\"\n\nSuddenly Rillan understood why the man and his son were in the forest a day's hard travel from the city. \"Recruiting?\"\n\nBrian stopped walking and faced Rillan as if to answer a challenge, a hard angry look in his eyes.\n\nRillan held up his hands and shook his head. \"I'm nothing to do with the army, friend. Honestly, do I look like I belong in the army?\"\n\nBrian really looked at Rillan for the first time. His clothing was a bit old fashioned, but well made. To Brian's mind, Rillan looked a bit out of place. It's almost as though someone plucked him from a 100 years ago and set him down in the forest. Still, at least he wears breeches and not a toga or kilt. \"No. I guess not.\" Brian backed down and started walking toward camp again. \n\n\"So are the burned houses part of the recruiting process,\" Rillan asked. If it's wide scale then it may not have anything to do with me. \n\n \"I wouldn't put it past them to burn houses. They don't like being told 'no,' and they like making examples of people.\"\n\nRillan nodded contemplatively. \"And what of the settlements to the north?\"\n\n\"I've seen several groups of men marched into town in chains. Pressed into service. I guess Tiberius is desperate enough for soldiers that he's collecting men from the northern communities. Keeps them in the army under threat of harm to the women and children left behind.\"\n\nRillan had fallen victim to a similar recruiting method in his youth. Anger boiled in him. At least I know that this target deserves it. \"If Tiberius is taken out of power, who takes up where he left off?\"\n\nBrian paused again and shot Rillan a measuring look. \"Could be anyone in the senate. One tyrant is about the same as the next.\"\n\n\"I guess it's too much to hope that he might be replaced by a good man,\" Rillan said, staring off into the darkness. As the men emerged from the tree line, Rillan spotted a small pile of gathered sticks and branches alongside two small packs.",
        "Brian bent to set Briac on the ground. \"Whether or not a man is good is relative to the next and what he wants and believes,\" Brian said. \"There are plenty of men in the senate who believe Tiberius to be the savior of the nation.\" Brian pulled a pack over to where he was crouching and took a thin blanket out of it. \"I suppose if you take into consideration that the eastern border would be overrun by now without the men Tiberius has pressed into service, you might say that Tiberius is only doing what is necessary.\" \n\nLooking up from Briac's limp form, Brian found that he was completely alone. There was no trace of Rillan anywhere. Quickly, he piled the sticks and branches together. \"Spirits,\" he whispered fearfully, as he hurriedly lit the campfire, staring into the trees, uncertain if Rillan had been real or an image of his imagination.\n\n<p align=\"center\">* * * *\n\nNoviodunum streets at night were mostly abandoned. A few women draped in loose colorful sarongs stood near the main doors of a brothel next door to the largest of the inns on the main street. Candlelight shone in all the windows and sounds of drinking and debauchery wafted out the windows and filled the street in front of the buildings.\n\nRillan noted the new buildings and streets in the town since the last time he was there. Each time he ventured into this godforsaken city it was larger, louder, and more depraved. Still, even with the expansion of the city, the inner streets were the same. Keeping to the shadows, he worked his way through the newer alleyways, into the older streets and toward the homes of the senators. \n\nTonight was for scouting. Rillan established a routine long ago. He walked the streets near the senators' housing, reminding himself of the location of various landmarks. Then he returned to the large inn he passed on the way into town to get a room. \n\nUpon entering the inn Rillan realized that he could count on one hand the number of men in breeches in the main room. There was an obvious distinction and segregation. The men wearing breeches and shirts sat together at a table in one corner of the main room. Judging by the clean look of their boots and the white of their shirts, Rillan figured that they were probably fairly wealthy. They sat quietly conversing. \n\nThe men in togas and kilts boisterously circulated throughout the room. A good number of them were accompanied by scantily clad women. A virtual orgy was starting at the far end of the large long table in the center of the room. A couple fair skinned women, sitting on either knee of a soldier wearing a battered but ornate breastplate and pauldrons were being undressed by soldiers standing to either side of the one seated. One of the men was groping the woman he was undressing. His hand roughly squeezed her breast and lifted it toward his face as he leaned down to wrap his mouth around the woman's nipple. \n\nRillan turned away in disgust, looking for the innkeeper. As if on cue, a fat, greasy, bare-chested man in a dirty toga waddled up to Rillan, eyeing him up and down with distaste. His eyes finally lingered on the gold clasp affixing Rillan's cloak. Suddenly, the man's demeanor shifted and he appeared much friendlier. \"Can I be of service to you, barbarian?\"\n\nRillan smiled at the condescending tone in the man's voice. Barbarian?  Rillan scoffed openly. \"How much for a room for the week,\" Rillan replied, in a hard intimidating tone.\n\nThe greasy innkeeper shifted uncomfortably and answered with more respect. \"One sestertius for the week.\"\n\nReaching into his purse Rillan pulled out two silver coins. \"I'm not to be disturbed,\" he said, placing the two coins in the man's grubby hand.\n\nTurning them over in his hand the innkeeper examined the old coins. The senator's head was turned the wrong way. He looked questioningly at Rillan, held one coin to his mouth and bit down. Silver is silver. \"As you like it,\" the man said, once he was satisfied with the authenticity of the money. He waved a hand, signaling a girl to join them. The girl's round, brown eyes reminded him of Mira, but spoke of the south, while her narrow face was distinctly of the druid nations. She smiled warmly at Rillan. \"Arial, take this man to a room. Make sure he has everything he requires.\"\n\nThe irony of that statement, Rillan thought as he followed the pretty girl. She led him out a door in the back of the main room into a poorly kempt courtyard open to the sky. It was surrounded on all sides by columns propping up an overhang forming a peristyle. Beyond the columns were numerous doors, most of which were closed. Rillan could hear the distinct sounds of rough sex coming from behind various doors. They walked through the center of the courtyard, around a water filled basin, and past the columns directly across from the main building. Choosing a door that was slightly ajar Arial stepped into the small room ahead of Rillan. There was only an unmade bed in the small room. It smelled of rancid wine, urine, and other things that Rillan didn't even want to contemplate. Even knowing that his nose was more sensitive than humans, he wondered at a person's ability to sleep in this.\n\n\"You come to be used to it,\" Arial said softly, when she noticed the look on Rillan's face.\n\nHe faced her and shook his head sympathetically. \"It's enough to make me think sleeping in the stables would be more pleasant. No one should have to grow used to it.\"\n\nA sad expression came over her face. \"Some have no alternative.\" Arial suddenly snapped back to being sweet and comely, as if she remembered that she should be smiling at the wealthy man in front of her. She stepped up to Rillan and ran a gentle hand across the bulge in the front of his pants. \"Is there anything else you require? Dinner? Wine? Company?\" Arial's experienced fingers traced along Rillan's rapidly growing shaft.\n\nThis was the first time he had thought of sex since he left Mira. He hated the way he parted with her. Arial's attention made him acutely aware of how used to sleeping with a woman he had become. Sighing, he took hold of Arial's wrist, brought her hand to his mouth and kissed her softly on her palm. Staring into her eyes, Rillan could see a hopeful glimmer. \"I'm afraid that I'll not be needing company this night Arial.\" Disappointment clouded her pretty brown eyes. You'd not be so upset if you truly knew me, sweet one.\n\n\"I guess I should go to the other guests then,\" she said regretfully. \n\nAt that Rillan realized what that would mean. Pulling another sestertius out of his purse, he placed it in her hand before releasing her wrist. \"Have this night to yourself.\"\n\nArial stared in wonder at the coin, speechless. She shoved the coin into a hidden pocket in her sarong, as if someone would see it and try to take it. \n\nThe grateful smile on her face was more than Rillan could handle. He decided to change the subject before she started talking. \"Tell me who a man speaks with if he wants to know the goings on of the senate.\"\n\n\"That depends,\" Arial said. Her innocent demeanor seemed to melt from her, the sweet innocent stare she perfected belied more than Rillan could have guessed. \"What kind of goings on are you interested in.\"\n\n\"I want to find out what a senator does all day.\"\n\n\"That makes no sense. Anyone could tell you that the senators attended meetings all day. You must be wanting something more specific than that.\"\n\nRillan reached into his purse again and pulled out a denarius. He held it up in front of Arial, watching her eyes focus on the coin. \"I guess I am looking for some fairly specific information. And I don't want anyone to know that I'm looking for it.\"\n\nArial nodded, staring past the shining golden coin to Rillan's face, the innocence now completely gone from her features. \"What do you want to know,\" she said quietly, reaching for the coin.\n\nRillan let her get her hand around it, but didn't release it. \"I need someone who can tell me what Tiberius Caelius Novanus does day and night. Who he's with. Where he goes.\"\n\n\"You need a member of his personal staff. It's not as if that information is secret. If you waited around outside his gates you would see him come and go.\" Arial sounded almost disappointed that he question hadn't been more interesting. \"He leads a fairly public life.\"\n\nDuring the day, he thought. Sometimes I hate the sun. More and more often of late. \"I don't want to be seen watching him.\" Rillan started to take the coin out of her hand. \"If you can't help me&mdash;\"\n\n\"I know just the person you need,\" Arial said quickly and snatched the coin out of his hand.\n\n\"Bring him here tomorrow night,\" Rillan said dismissively and started to move so that Arial could leave the room.\n\nShowing no intention of leaving, Arial's eyes focused contemplatively on Rillan. \"It's not often that I do this for someone who hasn't paid and demanded it,\" she whispered.\n\nConfusion was replaced with uncertain regret, as Rillan watched Arial drop to her knees in front of him. She managed to untie his breeches, pull his limp member from his pants and wrap her lips around it, before he knew what was happening. Either I'm getting slow or my guard was far too low with this one. \"Arial,\" he hissed, trying to find the right words to stop her without insulting her. His cock, betraying him, responded enthusiastically to Arial's touch.\n\nWith the thought process of a philosopher examining the intricate differences between two flowers, he found himself contemplating the differences between Mira's na&iuml;ve hands and Arial's practiced fingers. Arial's tongue swirled around the head of his cock, tracing the ridge. Her small hands gripped his shaft tightly and stroked the length slowly. \n\nPulling her mouth from him, Airal licked the tip a couple times as she stroked it. \"You're so cold,\" she whispered. \n\nRillan took advantage of her having released him from her mouth. \"Arial.\" He reached under her chin and made her look at him. \"I have someone. I need you to stop this.\"\n\nDisappointment filled her eyes, but she released his member from her grip and sat back on her heels. She watched him rearrange himself and tie his breeches securely in place. \"You are an unusual man,\" she said softly. \"And whoever she is, I envy her.\" With that Arial quickly got to her feet and disappeared through the door, before Rillan could say anything.\n\n********************\n\nThanks for reading. Chapter 7 is on its way and I'm going to get back to Leader of the Pack as soon as this one is finished. So for everyone who's been wondering, yes there will be more!\n\nTake a second and vote if you would&hellip; or make a comment. Feedback is good too&hellip; :D\n\nsecretme"
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "druid",
        "assassin"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-06"
}