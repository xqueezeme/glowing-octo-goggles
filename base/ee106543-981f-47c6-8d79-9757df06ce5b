{
    "title": "The Vengeful Tide Ch. 21",
    "pages": [
        "Hello everyone!\n\nReal quick, I know this is the first time I've directly made any comment, but I felt it was just worth saying. I just wanted to say thank you to all of who you have not only commented, but who have been enjoying The Vengeful Tide so far. I understand I'm not the best writer out there, far from it in fact. However, it makes me feel very thankful that I can entertain so many people. I only hope I can continue to make this tale of a pirates, revenge, ladies, magic, and treasure a wonderful read for all of you!\n\nAnyway, I just wanted to make a note on something from a previous chapter. If you see errors in spelling from Eric speaking to An'raie, then those are on purpose. An'raie speaks a very old dialect and Eric, though he knows it, can't properly return it properly with his tongue. That's all. Thank you!\n\n- WttW\n\nxxxxxxxxxxxxxx\n\nAs I expected, Raven's Shadow looked at me with confusion written across their faces. The group of seven looked at each other. Clearly, they didn't expect such a statement from me. I suppose they wouldn't since I hardly spent any time with them on this journey. The group usually kept to themselves.\n\n\"What do you mean by that?\" Brant asked.\n\n\"It be exactly what it sounds like,\" I returned while I hiked my thumb back to the island. \"You lot are gonna journey with me through the rest of the island, and I'm gonna make ya one of the best adventurer groups in all of D'orn.\"\n\n\"Yeah, we heard you the first time. Still doesn't explain shit,\" Gurok, the monk, replied with folded arms.\n\n\"Gurok's attitude aside. I'm inclined to agree, Captain. What did you mean by that?\" Racaell, the gun-sorcerer, asked.\n\nI stared back at the island, my eyes zoomed in on the structure which laid in the distance. I then turned back to the group. \"Tell me, has your group ever heard of a beast named \u1ef2rm\u00efndle?\" I asked.\n\nThey looked at each other again. Brant sighed. \"No, captain. We haven't. How will this thing we've never heard of make us famous?\" he asked.\n\n\"Aye, now let me ask you. Have you ever hunted a frost troll?\" I asked.\n\nTruon suddenly laughed. \"Are you fucking serious? Even a shit adventurer group can hunt a frost troll. They litter the frozen lands of Hamndal. Are you mocking us?\" Truon asked.\n\nMy smile dipped a bit, but I just turned around and headed back to my room. \"Well then, if you lot have hunted a frost troll before then you'll have no problems. Make sure you're ready to go when I'm back,\" I said as I disappeared into my quarters. Oh, they were going to learn just how different \u1ef2rm\u00efndle was from some simple frost troll.\n\nAs I entered my quarters, I quickly took the time to enchant the bullets in my pistols and prepared a few extra materials. I fed my bladed eel some messed up scrab and collected the metal it produced at the bottom of its bowl.\n\nI also remembered the jar full of spirits I collected from that cove that my First Mate, Quartermaster, and I had discovered. I spent about five to ten minutes enchanting the jar, hoping that my mana would provide the spirits an adequate place to settle until they grew and became self-sufficient. One day they might even become Lesser Spirits, a step above their minor status.\n\nOnce I was done, I reappeared outside. I chuckled when I saw the men under Alteria's command doing push-ups while she observed. I also noticed my mother, Ellen, Raven's Shadow, and Aesteal standing on the second island's sandy shores. They all waited for me. I was prepared to join them, but I stopped.\n\nI turned around. I walked below the deck again. I pushed open Nz'ia and Boreli's door. As I suspected, the former sat in the middle of the room with his eyes closed, mediating quietly. The latter was on his bed, looking at a book of some kind.\n\nI marched over to Astell and grabbed him. He gasped as he fell off the bed and onto the floor. \"You're coming with me too,\" I said.\n\nThe young man sighed as I pulled him to his feet. \"And I was just at the good part,\" he replied before I pushed him out the door.\n\nI thought to offer some sort of comment on what he meant, but I didn't. It pissed me off that I'd been a little tolerating of the fucker as of late. Oh, I still fucking hated him but Astell always had a natural charm that made one like him. The fact that he could use that on me and not even realize it annoyed me all the more.\n\n\"Shut up and move,\" I replied as I took him above deck.\n\n\"Aye aye, captain,\" he saluted pitifully. My lips curved further downwards, but I restrained my anger. Of course, I could kill Boreli now and rid myself of the anger I felt towards him, but that was much too easy. I wanted them all together when I crushed them for what they did to me!\n\nWe jumped from the deck and onto the sandy shores. My mother noticed Boreli and frowned. \"Why is he here?\" she asked evenly. I still wasn't sure why my mother showed disdain for Astell, but I wouldn't complain.\n\nAesteal was a different story. Despite her calm demeanor, her aura wasn't so pleasant to Boreli's presence. Ever since I confided in the elf about my past... or future I guess, she remained critical of Astell. She stayed professional, working with him if ever their responsibilities aligned. No surprise why. Betrayal was a heavy sin paid in blood for elves.\n\n\"Well, mother, we might need bait,\" I said.\n\n\"Bait?!\" Astell questioned while I patted his back.\n\n\"Aye. Have faith in your legs. You've been running away most of your life I bet,\" I said with a grin while he chuckled nervously.\n\nRaven's Shadow chuckled at his misery, but I quickly brought everyone together. Soon we all disappeared into the island's overgrowth. We made our path towards the building near the island's mountain.\n\n\"Alright Captain, all jokes aside, just what type of frost troll should we be prepared for? Clearly, it's something mighty if even you can't deal with it. I've never heard of a beast called \u1ef2rm\u00efndle. So what is this beast that will make us famous?\" Brant asked.\n\nWith that question being asked, I regaled everyone with tales of \u1ef2rm\u00efndle and the Alchemist. As one might expect, the longer my story went on the more unsure Raven's Shadow got. Even Aesteal couldn't resist adding in her bits about what happened to us. My mother and Ellen weren't so shocked since I'd told this story to them already, but they listened with apt attention.\n\n\"And you want us to try and subdue this beast?\" Daen asked.\n\n\"Not try. We're gonna take it down. That fucker's body and club are a trove of materials I look forward to harvesting and selling. Just his body can recoup the losses from the first island,\" I answered back. Almost immediately, I saw the lips on Sothshore's face curve upwards. Ever the businesswoman my Quartermaster was.\n\n\"And besides making your pockets deeper, what else do you get outta this? You're not just gonna give us the head of a mythical beast. You've got something in mind. Spill it,\" said Rieth, the Forsaken Priest. I noticed her tone was rowdier than I thought.\n\nI turned back and looked at her with disapproval. \"Fix the tone, lass. Else I might fix it for you,\" I warned. She stared back at me defiantly.\n\nI took a moment to assess her. She seemed about three or four inches shorter than Ellen. A patch laid over her right eye while her hair wrapped itself in a ponytail. A black cloak hid her form from me, but I made out a few curves from the way it hugged her.\n\nI faced forward. As we walked, I pushed a bunch of overgrown leaves out of my way. \"I want you lot to be my personal adventurer's group,\" I finally said after arranging my thoughts a little bit.\n\n\"Your personal adventurer group? What, you want us to become part of your crew?\" Hannath asked. I quickly took another turn from the path we should have been going. We made our way back to the cave where my mother, Ellen, and I found the ten rings created by the alchemist.\n\nAs our trekked through the hot jungles, the birds in our ears, trembling leaves in our faces, I answered her question. \"Not exactly. Adventurers can't become pirates. I've no doubts the Guild Association would revoke your group and you'd become part of the bounty board. Even now, your group being here skirts the line very thinly since this is meant to be a treasure discovery quest for ya, and not a pirate's voyage. It was actually good that I made you seven stay below deck when I struck C'ula. No one there would have seen you,\" I said as we all continued to walk.\n\n\"Well, if you understand that much then, pray tell to Ghunlair, what do you want? We're just a C-rank adventurer's group anyway\" the melodic voice of Hannath asked.\n\n\"Though adventurers are mainly recognized and ordained by the Guild Association, they are free to lend their services to houses, clans, and institutions which cover their costs for expeditions. There are some S-rank adventurer groups employed by the Mages Guild and the Alchemist Association. There are one or two A-rank adventurer groups employed under Lady Knight's empire. It all be in the name of prestige. That's why I'll ask you to be one of the adventurer groups personal to Ellen under my ship. She's fucking good at what she does under both the sun and the moon. Ain't no one gonna question why she's got one, especially not a group like yours,\" I said.\n\nI saw Brant out of the corner of my eye thinking on this proposal slowly. As Hannath just said, they were just a C-rank adventurer group. However, they'd easily be promoted once they returned with that damn rug's head. I wouldn't be surprised if they got offers quickly. A beast like \u1ef2rm\u00efndle would shake up the entire world.\n\n\"You just said adventurers can't participate in illegal work. What good would that do us?\" Truon asked.\n\n\"Ya won't be dealing in illegal work. Look, don't read too much into this shit now. We'll hash out the details once we actually get off these floating rocks of magic,\" I replied as we entered the clearing to the cove my mother, Ellen, and I found.\n\nOnce we were there, I faced the others. \"We're making a detour for a moment. All of you take a dip in this pool for about half an hour. The water's been enriched by the natural spirits that surround it. It'll increase your mana reserves,\" I said.\n\n\"A mana pool,\" Hannath stated as she looked at the numerous spirits circulating around the area.\n\n\"It be much more than that lass, but for now take a bath in it. You especially Aesteal. \u1ef2rm\u00efndle will require much to be confronted. Mother, Ellen, you're with me\" I said as we turned back into the forest to give the others some privacy.\n\nBefore I figured we were far enough away, I noticed Aesteal right behind us. When questioned, she answered, \"When an elf takes a Bonded, only that person should see them fully uncovered.\"\n\nThe honesty and sincerity in her eyes moved me so that I actually couldn't tell her she'd shown her body intimately to my other lovers on this voyage. Though, I supposed she more meant to the opposite sex. If that were indeed the case, then my salty heart was touched by her words.\n\nThe four of us went over some plans and I quickly spoke to my mother and Ellen of what happened to Maeloson. Someone else was clearly on the island aside from us. They somehow captured my male elf. Unfortunately, I couldn't say much for Diane, Goron, Liara, or the goons I lent her. They left through the teleportation array at the bottom of the island. Most likely it took them to the third island, but that was about all I knew.\n\n\"Alright. So clearly we're going after the Witch and her fucking entourage, but what are we gonna do about the ship? Can't expect the damn thing to follow us through this magic portal of yours,\" Ellen said.\n\nAye, that too was an issue that I'd need to take care of. Fortunately, I had just the thing for it.\n\n\"That can be taken care of. In the meantime, we'll start collecting the shit on the second island. I investigated the structure before Maeloson launched his arrow at me. I can guide us through there quickly. We'll divide the spoils found there between the four of us,\" I said.\n\nOnce the three agreed, we waited for the seven members of Raven's Shadow to exit the pool. When we saw them again, I could tell they were much stronger. No doubt they could as well. They kept looking at their bodies like they couldn't fathom the changes which happened to them.\n\nOf them all, I kept staring at the forsaken mage. Her mana grew in vast quantities when compared to her other group members. She easily had more than I did, but she did this magic shit for much longer than me so that wasn't much of an accomplishment. Still, there was something about her that unnerved me. What the hell was a Forsaken Priest?\n\n\"Thy concerns are well-founded. I have heard this title a select number of times within my own life cycle. Tales of this title claim that these men and women hath forsaken the ways of the spirits and the gods. Cursed be their steps to walk between the realm of destruction and life. The source of their magic comes not from the gods, nor spirits, but from such realms which lay beyond this world.\"\n\nI heard An'raie's voice speak to my mind. Unlike the last time I spoke with her, her voice was notably lighter, devoid of so much anger and dissatisfaction. In favor of our new relationship, I didn't point this out. That said, I think she knew anyway since we were connected so closely.\n\n\"Forsaken by the gods and the original spirits? What the fuck would she do to piss them off?\" I asked within my mind as well.\n\n\"'Tis unfortunate that I cannot ascertain the reason. The gods be a temperamental bunch and the Spirits wander the realm aimlessly. Her body is rejected by even the most vile manifestations of conjured magic. In fact, thine own aura feels quite similar to hers,\" the Lonely Wail stated which surprised me.\n\nThis woman, Reith, occupied my thoughts for a little bit for possible theories. It was possible that she, and those like her, were involved in whatever happened after I died that caused the end of D'orn. An'raie asked me some questions on this, but I unfortunately had no answers to give. I told her what the Liara of my future told me. Apparently, my death was the catalyst that sparked the world's destruction. All I had was guesswork.\n\nSuddenly, the conversation between An'raie and myself was cut off when I felt the shocking pressure of circulating mana. Our entire group took note of this as well, and I saw Aesteal was gone. She must have gone into the pool while I was distracted. I figured it was her because her aura didn't just wrap around mine. It utterly drowned mine in a sea of unexpected unity and satisfaction.\n\nMaeloson told me once that I would learn what it meant to be bonded to someone like Aesteal. Even before now, I understood she wasn't a normal elf. By the code of her Fgg'rial Order, she was one of its best warriors. When we laid together, she told me what she hoped her father and mother would be like, never having the honor herself. Her origins shouldn't have roused my curiosity, but they did. What, if they were even alive, would her parents think if they saw the woman she was now?\n\nAfter half an hour, Aesteal returned and she'd clearly grown in mana. As always, elves already had high reserves of mana, now hers were even beyond that. There seemed to be no end to what I felt.\n\nOnce I was allowed to pick my mouth off the ground, I quickly returned to the pool. I unsealed a very large oval tube jar from one of the scrolls that contained the innumerable treasure. \"D'xiu: Asqie,\" I chanted.\n\nThe pond's water level decreased by half as the water flew into the air and down into the ube jar. Once I'd gotten enough, I placed a large lid on the jar and resealed it back into my scroll. I then returned to the others. With my business concluded, we continued on our trek towards the island's building in the mountains.\n\nUnfortunately, it took longer than I would have liked because my alchemist nature got the better of me. I collected a lot of materials that were around to either the annoyance or humor of my companions. I blame this on Liara's memories. She turned me to the alchemist way and since I discovered a few of her secrets, I couldn't pass them up. Then that got me into a talk with An'raie about alchemy which was a whole other thing to ensnare my mind from my walk.\n\nFinally, we arrived at the large building my mother pointed out to me back when I was on the third island. It oddly looked like the building in the frozen tundra of \u1ef2rm\u00efndle's kingdom, a castle with many dark windows and regal drapes hanging from the side of its body.\n\nAs we stepped closer, I could feel An'raie getting angrier. Her rage felt like my soul was being forced to walk through a sea of molten lava.\n\n\"No pleasant memories?\" I asked.\n\n\"None that I dare deem so anymore,\" she growled out.\n\nWe cautiously entered the open fields. As we pushed past the trees, I noticed four obelisk structures situated in front of the castle. Each of them was expertly constructed in some sort of square-like formation. Even after the passing of so many centuries, the magic within them hadn't degraded. If anything, I could feel something ominous with them.\n\n\"Thy feeling is correct. Those obelisks were constructed using the Soulstones of Sechreth. Dare thee not touch them. That betrayer worked on them many moons. He hoped to use them to gain access to the Skerienth Realm,\" An'raie told me.\n\nI frowned. \"The Realm that was said to contain the gateway to the Soul of the Phoenix? The birthplace of the original firebird?\" I asked.\n\n\"Indeed. That you understand such an ancient world is no less intriguing. His pursuits met their untimely demise, but not without his best efforts. Yet, I dare not fathom what his intentions were. He never shared such a secret with me. The Skerienth Realm was such a realm of pure fire that when one enters they are turned to dust the moment the eyes cast themselves upon it,\" she replied.\n\nI nodded. \"Aye, it was rumored that within that realm, there resides the ashes of the original phoenix. It be rumored that to bury oneself in its ashes was to live eternally, forever reborn by fire with a new life should one be extinguished,\" I said in thought.\n\n\"Thou art indeed a strange man. Best keep your group away from those obelisks. Touch one and thy soul shall be stored inside it along with the souls of the other thousands of failed experiments that the Betrayer used to fuel his methods,\" she said.\n\nEager to not have such a fate befall my companions, I warned them against touching the obelisks. Thankfully, they all listened and we continued towards the castle. With An'raie's guidance, I dispelled the traps around the area. Interestingly, they weren't as deadly as the one on the first island. There were a couple of mythic blasts, shots of lightning, and some arrows of fire, but nothing that one would truly expect from a legendary alchemist.\n\n\"Thee would hardly have to expect much. The Betrayer was a researcher, mad only in his quest for more knowledge. It probably never occurred to him that one day that knowledge might be sought out and his treasures claimed,\" the Loney Wail said.\n\nI frowned. \"If that be the case, then what naed has he of guardians on eaach island?\" I asked, my speech messing up as I tried to speak in her tongue.\n\n\"Thine understanding of guardians is misaligned. He trapped us to each island. I see that you felled Th'am, the Maddened Root. 'Tis expected that he would trap us to each island when we either opposed him as Th'am did, or got cast aside as I did when he was bored. 'Twas a life of servitude enough to make the wails of the dead go mad,\" she responded.\n\nThe memories of An'raie seemed to grow more wild along with her anger, so I decided to leave her alone to settle down. I kicked the doors. They swung open with a mighty crash as we stepped inside. I coughed when the dust filled my lungs. However, I was quick to notice that it wasn't only dust that I inhaled. I also inhaled some illusion mist. It was a type of magic that mixed with substances to create illusions. It was hard to smell when combined with other aromas, just like the fucking aroma of old, uncleaned shit.",
        "I quickly dispelled the illusions from my mother and Ellen before they could fully take hold of their minds. Aesteal removed her own illusions and the Forsaken Priest of Raven's Shadow removed her group's. As expected, the illusions weren't too difficult to break with the increased mana of all those around.\n\n\"Alright, watch yer backs. Just because there's no traps here, that doesn't mean there ain't dangerous shit. Who knows what that fucker made while he was on this island. Come on, we're headed to the first place,\" I said.\n\n\"And that would be?\" Daen asked.\n\n\"His treasure room,\" I said, my lips curving upwards.\n\nMy group walked down an open hall to the left. Like the building on the first island, it was lined with numerous armored statues. Each held an iron spear in its gloved hand. The carpet was lined with beautiful embroidery and I planned to collect it once we returned.\n\nGiven that I spent the better part of two nights ago searching the area, I navigated it pretty well. I told the group when asked, for it was definitely better than telling them I'd been here in another life. That said, it did seem odd to me that despite the minor changes to the island, the structure of certain buildings remained the same. Even this one was still as I remembered it, with all its horrors intact.\n\nWe came to the end of the hallway and walked down a series of steps. I noticed that every ten steps the magical pressure in the stairway grew stronger.\n\n\"These steps were laced with magic from the Z\u1d8fkrae Stone. 'Twas a particular stone found near the core of the world by a sorcerer long before the betrayer. So concentrated is the magical gravity there that even ocsollium stones, said to be unminable, can be crushed to dust. With magic, that stoned dust collected itself together and forged new stone, harder than even adamanium. To step on one is to experience just a small percentage of the core of the world,\" An'raie answered.\n\nMy mouth thinned. Fuck, if I could somehow acquire those stones, that could also turn in a huge profit, or I could just keep them for myself as well. While there might not be anyone in D'orn who could forge them, perhaps I'd find someone with the capability in other realms.\n\nI marked the stones down on a piece of paper as we walked so that I wouldn't forget them. As I wrote, Ellen nudged my arm. \"So what makes this treasure trove more valuable than the other shit we'd have found digging through the sands or the other pieces of ground?\" she asked.\n\nI smirked. \"Remember that the alchemist was a legendary figure even before Delverhold. When he left his kingdom, he took every single piece of wealth with him. Not many know this, but the alchemist was also one who could refine gold as well. Not only that but it was rumored he could combine treasures. It was thought that he successfully forged a precious jewel from a ruby and a sapphire. He combined diamonds and gold, crafted weapons forged in fine silver and every precious metal under the sun. In fact, it was rumored that the old bastard ran away from his country not to practice knowledge, but because the nations grew greedy for his talents. No offense to my crew, but I imagine one of our Draegnar bastards would sell these things for a dozen barrels of booze,\" I commented truthfully.\n\nI doubted anyone would fault me for the logic. Befitting of its messed up moral compass, the island of Draegnar wasn't home to the smartest individuals. Still, though I would take the best treasures, I still kept my word. Whatever the crew found on the island away from my sight was theirs to claim. If they wished to turn their shitty lives around for something better then I sure as hell wasn't gonna stop them. I was sure that's why most of them even came on this voyage anyway.\n\nWhen we finally made it to the bottom floor, everyone took a moment to catch their breath from the pressure of the stones. Once we were rested, we entered a long, stone corridor. Before we went too far, I turned to one of the walls. There was a deep concentration of magic behind this part of the stone wall.\n\nI touched the wall with my hand. A magical sealing array appeared on it. I grunted as I pushed my mana into it. The seal began to quickly unwind. I could feel An'raie supplement my mana with her own. If the alchemist placed any traps in the array like he did in the tower on the first island, then they were quickly destroyed. I heard the Lonely Wail speak the tongue of a long lost nation as the locks within the array broke apart.\n\nAfter two minutes of ceaseless magic work, our group was finally rewarded with a door. It appeared right where the wall was. As one expected, it was large enough for anyone the size of a tall man to go through.\n\nWhen I opened the door, I smirked as my eyes shined at the man-sized hills of gold coins, spilled open treasure boxes, wonderful looking statues of gods and goddesses and glorious paintings of kingdoms long gone. Beneath the hundreds of torches that lined the walls of a space which seemed to defy all logic, the gold and precious stones in the room gleamed in our eyes.\n\n\"By the Serpents of Gilfor,\" Hannath said.\n\nI took a step forward. Everyone followed after me. We all stared at the numerous treasures which lined the large room. \"Welcome to the first treasure room of the Alchemist of Delverhold,\" I announced as the others stared in wonder of where I had led them.\n\nI turned to my mother and Ellen. Both ladies stared at the wealth in front of them with stunned eyes. I wondered if either had ever seen so much gold in one place. I certainly wondered what my mother thought when she saw the splendor of Delverhold in this one room.\n\nI took both ladies into my arms and pulled their ears close to my lips. \"Did I not tell you both? I shall show you both wonders and riches beyond your wildest dreams. When people stare upon you, they will desire what I give you. They will seethe with jealousy. You both shall become mighty queens of the sea, fit to sail and plunder whatever your heart fancies. Go ahead, partake of it, for it is yours now,\" I whispered.\n\nLike she was in a trance, Ellen stepped forward and stared down at the small mountain of coins. She dug her hands into one of the piles and pulled out a fistful of gold coins. It clattered to the ground with a glorious jingle like a stuffed money pouch.\n\n\"It's real. It's fucking real,\" she murmured to herself even though I heard it.\n\nI suddenly felt a hand on my cheek. My head was turned and my lips were captured in a glorious kiss by my mother. Her forwardness threw me off for a moment, but it wasn't long before I quickly kissed her back. When I looked at her, I saw the hot tears brush down her face. When was the last time my stubborn mother cried in front of me? I don't think I've ever seen the sight before now.\n\nOnce we separated, I pushed her towards the pile. Soon, she walked to another pile and worked on that one. I then turned to others.\n\n\"What are you gawk fucks standing around for? Take your spoils,\" I said.\n\nThe adventurer group stared at me and then stared at the spoils. \"GOLD!\" Truon suddenly shouted.\n\n\"Truon, wait!\" Brant hollered as the Rogue dashed for a pile of coins and tried to jump into it.\n\nI placed my head in my hands while Aesteal laughed as his head crashed into a wall full of gold, his ass sticking in the air to only add to his embarrassment. Aye, many men do that the first time they see such treasure. I probably wasn't any different when I saw my first pile.\n\nTruon groaned as I pulled himself out. \"I guess noble fuckers don't dive into their piles of coin after all,\" He chuckled painfully as he rubbed his neck.\n\n\"Probably because nobles aren't stupid enough to try, Truon,\" Racaell said as she pinched her nose in irritation. Truon laughed as he gave his group an apology. Nevertheless, they all walked together and enjoyed the gold as much as my mother and Ellen.\n\nI noticed that Aesteal didn't join them. \"Not gonna partake as well?\" I asked.\n\nMy bonded elf rubbed her arm. \"To pursue and place faith in monetary gains is to pursue one's own greed, destruction, and self-indulgence. Though it shines bright, it offers no warmth, yet men and women kill each other sometimes for its guiding light. Will I have need of it?\" she asked.\n\nI smiled. \"Aye, you'll need it, Aesteal. You'll need a lot of it. It might sound rich coming from a pirate, but there be a reason we're a greedy bunch. It ain't for the gold itself. It's for the freedom it brings,\" I said.\n\nShe looked at me. \"Aye, money ain't gonna mean you got a happy life, but it sure makes it fucking easier than not. Keep it should you need it for it shall be the legacy of those who follow you. Why do ya think we continue to collect treasures? I ain't just for ourselves, it's for the fuckers who try to steal it from us when we're gone. A Pirate's Line of Succession if you will. Besides, you're gonna fucking need it. A lot of it,\" I said.\n\n\"Why is that?\" she asked.\n\nShe stiffened when I smacked her ass and made her jump. \"So many questions. Just go and immerse yourself. I grant you this opportunity now. Believe me, you'll regret it if you don't take it,\" I replied.\n\nShe looked at me before she joined my mother in collecting the gold in the room as well.\n\n\"What about me?\" came the voice which made me snarl. I turned and noticed Boreli standing by the door.\n\nI sucked my teeth. \"Just fucking go before I change my mind,\" I grumbled.\n\n\"You're the boss!\" he exclaimed before he ran to his own pile.\n\nI leaned against the wall as I watched everyone work. \"Thou does understand that what thou desires is hard to complete, yes? There are not many upon thine world of D'orn, or even within other realms, who can do what thou wishest,\" An'raie said to me.\n\nI grinned. \"Wor'ry not. I know a man that will help me, ashuming the fukcer stays where I think he is,\" I replied.\n\n\"And why is thou not finding solace in the piles of gold as well?\" An'raie asked.\n\nI chuckled. \"There shall always be gold and treasures, An'raie. Yet, I must taake in this sight. Look, my mother smiles like the woman I always wished. She laughs as Aesteal fumbles with precious trinkets. Ellen, the riches gleam in her eye as she calculates their worth. She's a prideful bitch, but her smile is a grand treasure as well. I knew how much stress I put on her before this whole voyage started. Though she was a cunt most of my life, I knew how hard she worked and prospered. Sometimes, I wondered if she ever prospered so much that she felt no joy in it anymore. I bet I can see it now,\" I answered.\n\nI noticed An'raie remain quiet after that. I continued to watch them. Aye, their satisfied smiles were a treasure to me. Something told me I'd better keep this to myself. Who knew what those lasses would do if they found out.\n\nWe all stayed in the treasure room for about an hour. I divvied up the treasure piles. Raven's Shadow was given three piles. Ellen, my mother, and Aesteal were individually given four piles. I got five piles. Boreli got maybe one or two piles. I didn't care. I'd have given him none if I truly desired.\n\nTo remain fair, I questioned An'raie if this was alright. Though I had known about this place, it still felt appropriate to hopefully reward her for her contributions.\n\n\"I need not gold, much less the Betrayer's gold. The fulfillment of our agreement shall suffice,\" she answered before I agreed.\n\nOnce everything was sorted, I brought everyone together. \"Alright, don't go spending your shit every which way. You'll need some of it for later. Also before we leave, there's a place we need to secure,\" I told them.\n\nWe walked out of the treasure room and back into the hallway. This time, we didn't stop for anything. No matter how many tomes or vials filled with materials there were, I conveniently dismissed them all as I guided the group further and further down flights of stairs.\n\nThe further we went down, the darker it got. It got so dark, Riela and I had to cast some light orbs to see where we were going. Thankfully, we managed without more concerns. We exited a long hallway and found ourselves in the room I was in when Maeloson shot me. This was the room with the magic array that would take us to the third island.\n\n\"Never did I imagine that mine eyes would settle upon this room again. The smell of necromancy fills the air. 'Tis odd. The magic aura of the alchemist permeates the air around thee, but I don't remember it being distorted. 'Tis a mangled mess of conflicting vile magics mine spirit has not known for many years. I sense the Realm of Hades, Hgnril, and The Circle of Poa'l,\" she said.\n\nI frowned. None of those were good things as far as I knew. To deal with those realms was to deal with highly malevolent forces. \"Aye, the Realm of Hgnril was known as the Realm of Illusion. Its spirits could overtake a weak person's mind and bend them to the will of another strong enough to summon it. Could thae Alchemist do that?\"\n\n\"Indeed. 'Twas mere child's play for someone like him. He could summon thirty to fifty of the spirits if he so wished. So powerful were these spirits in Illusion magic that just one could make an entire town full of its own people murder themselves in one night. I've seen him work with a few of them,\" An'raie responded.\n\nMy frown deepened. I turned around. \"Secure the area. The entire crew's gonna be down here eventually. In a few days we're gonna head to the third island. Ya best be prepared,\" I said.\n\nAesteal quickly saluted and grabbed a few of the warriors from Raven's Shadow to help clear the area.\n\nMeanwhile, An'raie and I worked together to craft a few magic arrays around the room. Though neither of us sensed anything, it was possible the person who went through the portal placed some traps in case they were followed. We arranged the arrays to counter anything to be done. I was a bit surprised that An'raie and I had such a natural unity. Usually soulbonding was a dangerous craft because souls are often incompatible with each other. Ours seemed to meld pretty well. Not perfectly, but... fairly well.\n\nAs I worked, the magical incantations flowing from my mouth, my mother and Ellen came beside me. \"So if this is the room to get to the next island, then why isn't your fancy portal activated?\" Ellen asked.\n\nI finished my incantations and lowered my arms. I'd rather not do these chants while distracted. \"Probably because of the mana load. The portal shuts down after every use. Depending on how much of it you use, it can be down for three days or even five years. Since we'll be taking a crew of nearly a hundred people, then it's likely that this damn thing ain't ever coming back,\" I replied.\n\n\"And what about this spirit you've got tied to your soul? Isn't she supposed to be tied down to this island? What happens to you when it sinks?\" my mother asked.\n\nI smiled. I admit the concern of my mother was touching. \"Worry not, mother. An'raie and I are temporarily soulbound. Soulbound magic overturns curse magic depending on the type of curse casted. The one put on An'raie won't affect her nor me as long as we remain this way. Though we'll have to honor our deal soon. If we stay this way too long, we might be soulbound even after death,\" I smiled.\n\nCuriously, An'raie was still silent despite what I assumed was a fate she'd rather not share with a man. I figured she was just focusing on the spells and incantations we were working on, but something told me that wasn't it. Perhaps it was the way her soul resonated with mine that informed me this wasn't the case. We were, literally, as close as two beings could be so it wasn't like we could perfectly hide our thoughts from each other.\n\n\"That's not funny, Eric,\" my mother said before I kissed the top of her head.\n\n\"I'll be fine, Mother. It be a Captain's promise!\" I told her.\n\n\"Aye, fine...\"\n\nI don't think she was as convinced as I hoped she would be, but she didn't push the matter. Instead, my mother and Ellen left me to my work with An'raie until we were finished. The latter kicked Boreli down a hallway with her. By the time we were done, the underground structure turned into a safe haven for my crew to go without concerns.\n\nOnce that was done, I took a brief rest at the center of the room. I stared at the portal's magic matrix. A tiny crystal laid in its center, so tightly embedded that nothing short of breaking the seal would remove it. I gave the others free reign to do as they pleased. Most of the Raven's Shadow group walked back through the halls. No doubt they were gonna explore what we'd missed on the way down here.\n\nWhile my body recovered, I decided to delve into the furthest reaches of my mind. It seemed An'raie was calling for me. Usually, this couldn't happen for a person alone, but when two minds connected together, a space was formed to allow them contact. To put it simply, it was a mind realm for two people.\n\nI stood in the darkness, waiting for An'raie to appear. When she finally showed herself, I could immediately tell she looked different. She still wore that pure white, almost ghostly dress that covered her legs. However, she was notably less wrinkled. Her unusually long neck wasn't there. Her head connected to her shoulders just like any normal woman's would. A piece of her long hair covered the left side of her eye, but I wondered if it even mattered.\n\nAround both her eyes was some sort of eye cloth, restricting her from seeing me. Nevertheless, she stepped forward as if she could gaze upon me without obstruction. She was notably much taller than any woman I've known. She easily towered over me. I stared up at her.\n\n\"Were ya always this tall?\" I asked.\n\n\"'Tis the Mark of Ho\u0256 embedded upon thine soul. Magic from the Ancient Days has not been studied before. 'Tis such pure magic that it conquered some of my own necromancy spells. My thoughts cannot ascertain why such a form was chosen for me. 'Tis possible thine thoughts and mine thoughts connected and the Mark of Ho\u0256 made such a matter possible. However, it seems I am indeed capable of changing the appearance of mine form upon this plane while we communicate,\" she said.\n\nI watched her neck grow long as she wrapped it around me. I'll admit this did unnerve me, especially with the way her binded eyes stared at me. That said, her skin seemed so smooth to my eyes. In an odd way, she was very pleasing. If the Alchemist ever was attracted to this spirit lady, then I could probably see why. Rid of her curse, she was a beautiful woman.\n\nAn'raie retracted her neck back until it turned back to what would be normal for a human. \"Now then, what hast thou beckoned to me for? 'Tis best thee practice thine own magic to handle the strain of spells should we meet the Betrayer,\" she replied.\n\nI frowned. \"I didn't call for ya, lass. You called me,\" I replied.\n\nShe frowned as well. \"'Twas not I. Though I have agreed to this deal of thous, I still dare not think highly of your kind. Granted, thine thoughts in regards to mine appearance are flatteringly detestable,\" she replied.\n\nFlatteringly detestable? I wasn't sure how both of those words together made any kind of sense, but I wasn't about to argue with The Lonely Wail. That said, if she didn't beckon for me to come here, and I didn't call for her, then why were we both here?\n\n\"I do believe I can answer that for you, my dear captain.\"\n\nI widened my eyes. Never could I mistake that voice that moved through my body like a warm breeze. I looked behind An'raie. She turned around and the both of us looked at Liara. She stood behind us, but it was clear her body wasn't actually here. Just like when I met with the Liara of my time before she vanished, this one was surrounded by an ephemeral light. It seemed to be fading with each moment.\n\n\"Liara!\" I exclaimed.\n\nThe Witch of Draegnar smiled before she turned to my... guest. \"'Tis wonderful to see you in better spirits since we've separated, dear Captain. I see you've managed to keep yourself in good company. To think I would see you again, An'raie. It has been quite a few centuries,\" Ilzahold said while An'raie frowned.",
        "\"'Tis a few centuries too short, Witch of the Scaled Mountains. Sun days rise and moon nights fall, but whispers of thine deeds resound throughout the world of D'orn. Even now, the war between thee and the Drake King, \u1e28ga\u1ec5nkual, still showed their effects when I last held freedom. Now, mine gaze falls upon this man-spawn. His body and soul have been painted with the Mark of Ho\u0256. What hast thou been up to grant such favor to this man-spawn?\" the Lonely Wail asked.\n\nLiara chuckled and her eyes fell on me. \"'Tis not known to me. I've merely become invested in the future of this captain. Who doesn't appear to be as young as I assumed,\" Ilzahold said with a knowing smirk that I returned. Well, it wasn't like I didn't expect this to happen.\n\n\"Aye, perhaps. Anyway, the two may reminisce another time. Liara, where have you ended up? Though I know you to be powerful, the isles cannot be countered by you alone. Is there any way you can link yourself to me? We're not alone on the island,\" I said.\n\nI felt something was wrong when Liara's smile slowly faltered. \"Indeed. I've sensed the dangers circulating around the island. 'Tis the likes of which I've not seen for nearly 700 years. There is a powerful presence here, one that calls strongly even to me. I find it most odd. I'm aware of its control. I've easily broken free of it over a hundred times, and yet my steps led me through the veil. I thank thee, dear captain. 'Tis because of you that I have finally gained even greater wisdom and meaning than before. I shall delve deeper.\"\n\nI growled. A sense of foreboding filled me for I knew what was happening to Liara. It was why I wished for her and Th'am to not meet. That same dreaded feeling from before, I was feeling it now.\n\nTo be honest, I knew what Liara was feeling, but I didn't know exactly what it was called. If she was experiencing what I thought she was experiencing then it was clear she was on the fifth and final island.\n\nThe Fifth Island didn't have a physical guardian like the other four islands had. Instead, it had what I referred to as 'Saenthr\u017e\u015b venve Magunius Alchaeme' or The Last Will of the Alchemist. I remembered this because when we bored the fifth island, that was when the last vestiges of my crew's will was tested.\n\nThe Last Will of the Alchemist was as its name spoke. When we landed on the island, some of us thought we heard voices talking to us, whispering to us, enticing us almost. Day or night, awake or sleeping, we all heard its constant voice. Like a nagging gnat it only spoke one word, \"Continue.\"\n\nIt pestered us day and night. It's voice was sweet like honey, and more pleasing than the body of a woman. However, it was so insistent, so needy, so demanding that it drove one of my mates utterly insane. He ran away from us and deeper into the fifth island. It was only when he left did the voice stop. When we saw him again, he was little more than a ravenous beast. Saliva dripped down from his mouth as he wrote complex formulas, concocted numerous potions, and forged fancy ornaments. All our attempts to stop him were met with angry snarls that he must... continue!\n\nWhen we tried to interrupt him, he charged on us like a maddened lion. One of my mates shot him in the end and he fell to the ground dead. Aye, the last guardian upon the Lost Isles of Delverhold was the fragment of the Alchemist himself. The closer and closer one got to the center of the island, the stronger the voice got. It made me wonder how close Liara was that not even she would be immune to its effects. This was the woman who had even managed to walk through the Graendrin Realm, better known as the Realm of Illusion.\n\nSome tales stated that before the Alchemist could use the Elixir of Eternal Youth, one of the great spirits, Hashvael, smote the vial. A curse on any who drink its flavor to try and remove themselves from the power of the Fates. When the Alchemist drank it, his body was taken into the realm of Haganthar. However, before he was taken, he casted a spell, separating and mixing a fragment of his consciousness to the very core of the fifth island. It could not be seen, but it could be heard in tiny whispers of great power, leading people towards the seal which kept the body of the Alchemist trapped.\n\nWhen the voice invaded the mind, it seeped a bit into the person's consciousness until they were overcome with the desire to continue the Alchemist's work. They would continue and work until their bones turned to dust or until the voice could get the captive to release the Alchemist's from the Circles of Haganthar.\n\nAfter we laid the man to rest, we all grabbed what we could and left rather than delve deeper. Aye, perhaps my own way of conquering Delverhold... was simply surviving it.\n\nI must have had some odd expression on my face because Liara smiled. \"Worry not, dear captain. I shall remain as safe as I can. 'Tis not the first time I've been in perilous circumstances. However, I am with you now because I desire a favor. I must ask that you... take care of my guard. I shall be sending her to your ship,\" Liara said.\n\nI frowned. \"And why can't you come as well?\"\n\n\"I only have enough mana to save this one,\" Liara said.\n\nShock filled me.\n\nBefore I could even ask her what she meant, she was gone. An'raie and I stood in the vast. A thousand questions moved through my mind. What did she mean she only had enough mana to save Diane? The Witch had, arguably, the highest mana pool of any mortal in D'orn or The Realms. The only time she'd been forced to use mana so excessively was during the fourth trial back in the seas. What on the fifth island could make Liara expend that much mana?\n\n\"As expected of She Who Understands The Tongues of Ten Thousand Spirits, she was capable of repelling the Betrayer's voice. 'Tis not such a thing that even the grandest mage in my time was capable of doing. To break control of the Betrayer's voice would require deep focus and a touch of divine sense. 'Tis no wonder she'd run out of mana, especially if she were not doing it for only herself,\" An'raie replied.\n\nI bit my lower lip, but I felt no pain. Never in my life did I think I'd have to worry about Liara's safety. Yet, I forced myself to calm down. The witch had been in situations like this before. Hell, I imagine there are things she'd done that I shall never comprehend across my mortal life, but what was she worth without mana to defend herself?\n\n\"Thou carest for the Sacred Witch. Quite strange for a pirate to care for anything.\"\n\nI ignored An'raie's comment and cursed. How quickly could I make it to the fifth island? I couldn't afford to lose someone the caliber of Liara. That said, even in my memories she hadn't died when she rediscovered the sunken islands of Delverhold. Granted, this wasn't exactly that same situation.\n\nAdditionally, I needed this treasure. Sure, this was a massive swell to my ego as a pirate, but this treasure would have its own uses, uses that I couldn't afford to ignore. There were too many spells to ignore and too much coin to pass up. Then, there was that fucker who took Maeloson. I had no idea where they were.\n\nFuck, why was Delverhold even more difficult than my previous life? Nothing like this happened before.\n\nAfter a moment, I turned to An'raie. \"Are the portaels the only waey to the islands?\" I asked.\n\n\"If thee didn't know the answer, thee wouldn't have bothered to ask. That said, mine answer would have been yes had mine eyes not see thine memories of the first island. I believe thou worries too much, however. Even if she be without mana, the Sacred Witch hath garnered many artifacts through her life. She shall not be defenseless against the whims of the island for too long,\" An'raie answered.\n\nAye, it was that 'too long' part which concerned me. How long was too long?\n\nUnfortunately, my thoughts got me nowhere. I opened my eyes and stood to my feet. When I located my mother, Ellen, and Aesteal, I brought them together. \"We're heading back to the ship,\" I said.\n\nWhile I spent some time drawing and writing the teleportation array, my mother quickly took note of my frantic pace. \"What's going on?\" she asked.\n\n\"Liara's on the fifth island most likely. She teleported Diane to my ship with the last of her mana. I want to know what's going on. Maybe Diane will have some insight for us. Apparently, the witch is also running low on mana. It'll be difficult for her to survive on Delverhold alone without it. We'll return here later,\" I said as I finished drawing the teleportation array.\n\nOnce that was done, I placed my hand on the ground. \"\u1e24i\u1ecf,\" I chanted. Ellen, Aesteal, my mother, and I were suddenly enveloped in a bright light as we were taken away from the portal room.\n\nIn an instant, we appeared on the array in the middle of my quarters. As soon as we did, we heard a thunderous explosion that gently rocked the waves beneath the ship. The stuff around my room clattered about as my knees buckled. I absently heard my mother and Aesteal scream as they hit the wall. Ellen fell on my bed and cursed.\n\n\"What the fuck was that?\" Ellen asked.\n\n\"''Tis the realm of sixth-tier magic. The smell of the arcane litters the area. Thou shouldest make haste,\" An'raie told me as I jumped to my feet.\n\nI quickly bashed through the door of my room and I stared out onto the second island. Utterly shocked, I watched what I could only describe as panic and chaos. Green flames danced around the shores of the second island like a raging firestorm. I heard the cries of my crew members as fire spells and lightning spells were released from the elemental scrolls I'd given them. The sounds of gunfire and flying arrows moved through the air.\n\nI briefly turned to the deck of my ship. Its wood had been destroyed somewhat. A few of my crewmates laid across the ground unconscious. Numerous wounds and burn marks laid on their bodies. However, thankfully, I saw not the Spirit of Death upon them.\n\n\"Mother, take care of the people here and watch the ship. We're gonna figure out what the fuck's going on,\" I said over the loud explosions in the sandy beaches.\n\n\"Right, but be fucking careful!\" she exclaimed as she started helping the downed men and women on the deck of the ship.\n\nMeanwhile, I touched Aesteal's back. \"Lieviara,\" I casted as she floated into the air. I then casted it on myself as I swept Ellen off her feet. We flew towards the island in a hurry. Thankfully, he didn't take long to get there before I heard Nz'ia roar.\n\n\"D'hagal fagirminal qwesihevire! Hatharaaagh!\" The Xhaluter screamed as another blast of green fire flew into the air. More reckless shouting and explosions of fire, water, and lightning raged over the shoreline.\n\n\"Fuck. I can't see shit down there!\" Ellen said with her hands wrapped around my neck.\n\n\"Aesteal, clear the area of the beach. I wanna see who the fuck's attacking us,\" I commanded.\n\nNot even wasting any time, my female elf nodded. She grabbed an arrow and pulled the string of her bow back. \"Ou\u1e41h\u1e4f: Araien,\" Aesteal said as she fired her arrow.\n\nI watched the spirits of the wind circle around that arrow as it disappeared into the sandy dust. Then, the beaches ruptured in a violent gust of wind, pushing away the cloudy dust and the people fighting.\n\nAs the battle dispersed, my eyes widened. I saw Diane on one side of the beacher with my crew on the other. Though I was confused, I didn't have to be for very long. I saw Burnwood unlike I'd ever seen her before. Her eyes glowed with green fire. A putrid, dark green special crown adorned her head. Her pistols and her jacket were lined with green fire like those of a race of undead skeleton.\n\n\"Captain!\"\n\nPeople shouted for me as they waved to me. I saw Nz'ia and Alteria covered in bruises and burns. They both held their weapons up, staring between Diane and myself.\n\nWas this what Liara meant when she told me to take care of her guard? The bitch looked just like Maeloson did before he attacked me. No, maybe that's wrong. She looked even worse than he did. While the male elf was under the influence of whatever was controlling him, Diane looked like she'd been bathed in the stuff a hundred times over.\n\n\"'Tis the Flames of Raganthor. Raganthor was said to be a vile man-spawn that crafted lifelike puppets. He controlled them through threads made from his life essence and a special craft of soulfire. His mastery of puppets became so profound, he could use it upon the bodies of mortal men and women. So great was he that he even managed to control a demigod. Having lost his power, he was burned alive in a boiling sea of fire. However that fire turned as green as his darkened soul. Now, those who adorn the crowning flames of Raganthor shall be his slaves until they wither away or until the spell is broken. 'Twas a preferred spell of the Betrayer,\" An'raie said.\n\n\"And how should I break it?\"\n\n\"'Tis not known to me. Such a spell transcends even my understanding.\"\n\n\"I don't think she appreciated your fucking archery!\" Ellen said which got my attention.\n\nI turned back and I noticed Diane pointed her pistol at us. Then, I felt the mystic energies of this world, and those beyond, swirl around her. Just like with my pistols, I saw a green array appear in front of one of the pistols. Acting quickly, I grabbed my own flintlock and pointed it at Burnwood. An orange array appeared in front of mine.\n\n\"G\u018cv\u1d8f\u1d86 Fae.\"\n\n\"Feira: \u00c0shv\u1ec5n.\"\n\nDiane and I both fired our guns. Our bullets crashed through our individual arrays. Like the sound of cracked glass, they shattered into pieces before everyone stood in awe as a mighty roar ruptured the sandy shores. From mine, an orange tiger of mighty flames bellowed and charged for hers. From hers, a serpent as green as perfect jade hissed.\n\nThe collision of both magics was tremendous. I had to keep myself steady just to keep Ellen and myself from being blown back by the sheer force of the spells. \"By the Spirits!\" I absently heard from Aesteal.\n\nUnfortunately, whether by Liara's knowledge or An'raie's, I knew my spell would get overrun. Ellen, Aesteal, and I watched as the green flames of Diane's weapon magic overpowered mine and slowly made its way towards us. I was ready to move us away, but that proved unnecessary.\n\nLike the spirit that she was, I watched An'raie, in a sort of transparent form, exit from my body. She then gently touched my gun. \"\u1ef0r\u00ebkan: Azu\u0211\u01e1,\" She chanted.\n\nAs the green flames came closer and closer to us, suddenly another array formed in front of my gun. This one was a royal blue color like fine sapphire. The array shattered and Diane widened her eyes as a stream of blue flames expelled from my pistol. They mixed with my orange ones and effortlessly pushed her green flames back until they overcame her in their entirety. The blue flames bashed against the trees and grassy fields like a wave of water against the docks of a city.\n\n\"Wnid'eva,\" Aesteal chanted as she crafted three arrows of wind and fired them into the sea of blue flames. The fires explode in a grand display of enhanced magic that would make anyone marvel at its destructiveness.\n\n\"Holy shit!\" Ellen said while I sighed.\n\nHoly shit, indeed.\n\n\"Pray thee to not let those flames touch you. For ye shall too become part of Raganthor's army,\" An'raie said to me which made me curse. Well, that was fuckin' comforting.\n\nAs the flames danced, I flew Ellen down to the others. She quickly let go of me while Aesteal joined us.\n\n\"What the hell happened?\" I asked.\n\nAlteria quickly appeared before me. \"We were hoping you would know. We felt the ship shake and Nz'ia went crazy. He grabbed his spear and headed for your quarters. Your gunner walked out of the door and then started shooting at everyone. We tried to calm her down at first, but... that sort of went out the window when she blew Nz'ia from the ship to the island. We've been trying to subdue her for the past five minutes,\" the knight reported to me.\n\nI frowned. That was definitely around the time Liara told me that she was sending Diane to me. That certainly raised some questions about why Liara would send her guard to me. Was Diane like this before Illzahold sent her to me? If she was, then why couldn't Liara stop her?\n\nMaybe, or maybe Liara didn't want to stop her. Did she want me to do it? Just how the hell would I be able to do that?\n\n\"Here she comes, Sir,\" Aesteal warned me. She raised her dragon bow while the others tensed. I turned back to the sea of azure flames.\n\nWithin that intense inferno, I saw the figure of Diane stand. As expected of the Flames of Raganthor. Not only did they grant her the ability to wield sixth-tier magic, but they formed a natural barrier around her body against magic spells. She walked out of the flames with barely a burn mark on her.\n\n\"Got any fucking orders for us, Sir?!\" Ellen asked.\n\nDiane grabbed one of her pistols. I smirked. When was the last time I ever got into a full bout with Burnwood? It was enough to get the blood pumping.\n\nI touched Nz'ia's shoulder. \"Those who stand before me shall either submit or be destroyed, Ellen,\" I said as I then touched Aesteal's shoulder.\n\n\"S\u00e6\u0144,\" I chanted.\n\nI then turned back to the others. \"The rest of you go back to the ship! Those flames corrupt anyone who touches them. Put down anyone ya can't restrain!\" I ordered.\n\n\"Aye, Captain!\" they said as they ran back to the boats. I then turned to Ellen and placed a map in her hands.\n\n\"Follow this route back to the cavern area. Go there with the Hilvir warriors. Prepare it for our return. I might need it,\" I said.\n\n\"For what?\" Sothshore questioned. I chuckled as I watched Diane get angrier and angrier.\n\n\"Something very stupid,\" I told her.\n\nShe stared at me before she clenched the map. She snarled. \"You fuckin' leave me to rot on this island, and I'll riddle your damn corpse with every bullet in my pistol!\" she warned as she turned around.\n\n\"You fuckers get your asses in gear! We're heading out!\" She commanded. She then led the Hilvir warriors into the forests. Before long, they all disappeared. I then turned back to Diane.\n\n\"Aesteal, cover Nz'ia, Alteria, and me. I'd rather return Liara's Guard uninjured, but she ain't some soft babe. She's not gonna hold back on us,\" I remarked.\n\n\"Understood, Sir,\" she answered.\n\n\"'Tis a very ambitious plan that thou pursues. As mine eyes hath seen, thou hast never wielded the powers of Ho\u0256 before. To try now would be unwise,\" An'raie said to me.\n\nI chuckled. \"If wise decisions were all the world ran on, then there'd be no fun in experimentation,\" I replied. The Lonely Wail didn't reply to me. I turned to Alteria.\n\nBefore I could even give more orders, Burnwood was already in front of me, her gun right in my face. I barely had the time to pull my head to the side before she pulled the trigger. A surge of green fire flew past me and into the air. I guess I kept her waiting a little too long.\n\nAs I moved back, Nz'ia swung the length of his spear into Diane's chest. Rather than pain, she roared at him before he lifted her off her feet. His sharp, beast-like claws scratched her face with such force that she fell back a couple of feet.\n\nI then saw Alteria make her move. As one would expect of a knight, she charged for Burnwood without fear. She swung her blade left, right, up, and down. However, Diane used both her pistols to block these attacks. The clash of steel against steel rang over the shores of the beaches. When they clashed again, Diane opened her mouth.\n\nThe Balamar knight gasped as she dodged a spray of green flames from Burnwood's lips.\n\n\"Anr\u1ec5,\" I chanted with my right hand extended. I also felt An'raie's magic within me.\n\n\"H\u1ebfran: Mas'verdiexin,\" She chanted as well.\n\nFrom the forest's trees, roots laced with ice fire sprouted from the ground. Diane saw them coming. She quickly tried to counteract them, but Aesteal wouldn't allow her to do so. She pulled back an arrow and fired it. When it struck the sand, the ground beneath it ruptured up with numerous stone pills.",
        "Burnwood was thrown off balance as the vines wrapped around her. She writhed and struggled as the ice flames rose over her. It seemed these did some damage because she screamed in pain. No surprise why. Those types of flames didn't attack the body. They attacked the aura of the person. Unless Diane, or whatever was controlling her, had an aura defense, there was no way of preventing that type of damage. While I wasn't emotionless to her torment, I knew it wouldn't kill her.\n\nHad An'raie and I poured our full strength into taking Burnwood down, without caring whether she lived or died, we could floor her right now. However, I enjoy this lass. I'd not allow Hades to have rule over her any time soon.\n\nSuddenly, Diane teleported out of the vines and ice fire. She floated in the air. She pointed her guns at us. Around her, about fifty arcane arrays appeared. From them, glowing green skulls, not unlike the spell An'raie used against me a few days ago, appeared. Their bones cackled before they were fired upon us.\n\nNz'ia clenched his spear. I hastened his movements. He then threw the long weapon through the air. Aesteal fired a wind arrow that sailed right next to the spear, allowing it to travel faster with great penetrating power. It broke through one, two, three, four, five, ten skulls before it made its way to Liara's possessed guard.\n\nDiane effortlessly dodged both the spear and the arrow. Both sailed past her, but I felt the magic within me move again.\n\n\"Troen o mouqium.\"\n\nA blue portal appeared in front of the spear. It flew into it and the portal quickly vanished. To Burnwood's surprise, it appeared right in front of her. The spear came out and crashed into her chest. Whatever magic was protecting her, I'm glad it was. Had that hit her body, she might have been blown to pieces.\n\nAs she fell out of the air, she grabbed one of her guns and fired it. The green magic matrix around it cracked. A dragon's breath of flames came over us again.\n\nAlteria and Nz'ia moved behind me along with Aesteal. My hands glowed with dark purple arcane energy. \"Nvebrievi anu \u1e92sheyi,\" I spoke as various runes appeared around those who fought alongside me.\n\nThe skulls and the green flames crashed against my barrier and their force was utterly astonishing. My shoes dug into the sand and even that wasn't enough to stop me from being pushed back. Fearful that I might have to put more mana into the spell, I stilled when Alteria pushed her hand on top of mine.\n\n\"\u1e6c\u011b,\" She said.\n\nSuddenly, my barrier glowed with powers of light magic. It repelled the green flames. All while this was done, Aesteal gasped as she fired elemental arrow after arrow. I could tell Diane was getting rather annoyed by our advances because the flames around her got hotter.\n\nThe black-haired woman then grabbed her other pistol. For once, we noticed this next array wasn't green. It was red, the exact color of blood. She pulled the trigger.\n\nAlmost instantly, we all nearly fell to our knees as a feeling of insurmountable pressure tried to push us down. I groaned as I felt my legs buckle. It was like a massive boulder just crashed on my back.\n\nAn'raie hummed. \"Tis to be expected of the Sacred Witch's guard, she is quite powerful for having no experience in the mystic arts. To even dare use a fifth-tier gravity spell,\" An'raie said.\n\nDespite the pain, I chuckled. \"Aye, she's a talented bitch,\" I replied.\n\n\"Indeed. However, a mind-controlled host can only go so far wielding so many spells. Tu ve humaenium,\" An'raie chanted.\n\nTwo portals appeared besides Diane. We watched as countless ghouls surrounded her. They grabbed her arms and legs. She struggled against them, but so many quickly overwhelmed her. Her green flames fired off my spell and into the forests, burning down anything they could reach for miles. I could even hear the sound of the waters all the way on the other part of the island rupturing.\n\nBurnwood fell into the sea and the pressure on all of us stopped. Aesteal pulled back her bow as we heard the sound of lightning. She fired a lightning arrow into the air over the spot where Diane fell. Once it reached high in the sky, it shattered creating an elven lightning matrix. Then thousands of lightning arrows rained down into the open waters, shocking and killing anything that might be in them.\n\n\"'Twill not be enough to subdue her,\" An'raie warned.\n\nShe didn't have to tell me that. I already knew because... I could feel the magic beneath the sea swirling around angrily. As the lightning arrows rained down, I saw the sky darken. Hundreds of elemental arrays appeared in the sky. Aesteal gawked and Alteria widened her eyes.\n\n\"N'k thuru hal val din na...\" Nz'ia clenched his spear and I grabbed my rapier. Aye, there was no point in conserving mana anymore. It's cold touch stimulated my soul.\n\nA wall of Raganthor's flames exploded out of the sea as we heard Diane scream, but it was not like a scream I'd ever heard. It was an otherworldly scream filled with the language of demons and devils. She slowly rose out of the water, the green flames surrounding her like a noble delicate robe of royalty. From the arrays - lightning, fire, ice, wind, molten earth rained down as if Zeus, Poseidon, and Hades tried to smite us down.\n\nI was concerned when I saw some of the blasts hit the magic barrier around the ship. They even sailed off to various parts of the island. We watched Burnwood scream her lungs out as even her black hair started to turn green with an abnormal length to it. Waves crashed against my ship and the shoreline.\n\nLiara, I swore by the damn Plagues of Haol, you were gonna fucking owe me for this.\n\nAn'raie, Alteria, and I placed up a barrier and even that took some work to constantly repair between the three of us. As expected of the magic used by the man that all gods and spirits condemned. How the Alchemist even harnessed such a thing was beyond me. To think this was being done by someone who had no magic experience.\n\n\"Ellen, are you fucking done?!\" I asked, a bit of impatience seeping into my voice through the mind spell I was using.\n\n\"We just fucking finished! If you're gonna do something, I suggest you do it now before the damn island breaks apart!\" she replied.\n\nThat was the best news I'd heard all day. \"Good! Then clear the area, you're not gonna wanna be around!\" I warned.\n\n\"Already gone! Don't need to tell me twice!\" she said before I broke the spell.\n\nI turned around just in time to see the magic in our barrier fade away. Unfortunately, I couldn't hold my surprise because Nz'ia was suddenly punched in the stomach. He coughed as he was propelled through three trees.\n\n\"UGH!\" I turned around and noticed Diane then had Alteria by her neck. She lifted the Balamar knight high into the air. Aesteal tried what she could, but her arrows didn't even get close to Burnwood before they were knocked away.\n\n\"If thou carest about either of those women, thou should hurry. I sense the magic of the Qliqil, a ninth-tier spell. If she completes that, her mana will be drained and she will die. The knight shall also die,\" An'raie warned.\n\nI nodded. It was a surprise Diane could even fire sixth-tier spells so constantly. Clearly, she wasn't a normal woman to do such a thing. \"Aye, then we best make sure that doesn't happen!\" I said as I held up my hand. I zoomed in on Diane's form.\n\n\"T\u012b,\" I casted out.\n\nSuddenly, the arrays stopped. The sky returned to normal and the show of elements ceased. Diane released Alteria's throat and slowly floated her down. The Balamar knight gasped as she clutched her throat.\n\n\"What? What happened? Why'd she stop?\" Aesteal asked as Alteria moved away from the woman who'd almost killed her. I noticed that the green flames still remained despite the successful spell I just used.\n\nI panted. My steps staggered. \"Sir? Sir, what's wrong?\" Aesteal asked.\n\n\"Worry not. 'Tis a difficult spell he's used. Thee should hurry. I cannot hold this woman for long and effects of the spell continue on him even now,\" Diane spoke to Aesteal's surprise.\n\n\"You're An'raie, the second guardian,\" she stated which Diane nodded. Aesteal then turned back to me. I held up my hand, I could already see my fingertips turning to stone.\n\nBecause my soul was tied to An'raie, who had possessed Diane for the time being, all the effects she'd suffer from would be transferred to me as well. Hell, I clearly underestimated just how powerful An'raie was. It was only because of her that this fate befalling me didn't spread faster.\n\n\"Aye. Introduce yourselves later. Aesteal, we gotta get to the pond from before. Help me get there,\" I said.\n\nThough concerned, Aesteal grabbed my arm and pulled me up. She then held my arm over my shoulder and led us through the thick forests. We pushed tree branches and vines out of our way.\n\nThe others quickly followed behind us. I tried hard to focus on what was in front of me. It helped distract me from the numbing pain of my body turning to stone. It seemed that was a side effect of the Raganthor's Flames. If one tried to suppress them inadequately, then the flames' mystic properties could turn the target to burning stone. Even now, I felt a hot tingle on the tips of my stoned fingers.\n\n\"Are we allowed an explanation of what's going on now?\" Alteria asked with Nz'ia close behind her.\n\nI steadied my breaths. I didn't know how An'raie could stand this pain. She seemed like she wasn't even affected in the slightest. I could only curse my young body not being used to the strain of such powerful magic.\n\nOnce I was confident I wouldn't pass out, I then began the lengthy explanation of what was going on to Aesteal, Alteria, and Nz'ia. My elf already knew some pieces of this, but I made sure to express what was happening to the knight and the Xhaluter. I also told them all just what I was about to do. If all went well, I'd free Diane from the flames which controlled her. If all didn't go well, I ordered them all to dispose of her as quickly as possible.\n\nBy the time we reached the pond, my entire right arm was encased in stone. I could feel a bit of my toes turning numb as well. An'raie wasn't looking so good either. I could feel her ghostly mana dwindling as she tried to keep the spell in place.\n\nThankfully, we made it through the trees and finally came upon the magical matrix written into the ground. As expected of the warriors led under Aesteal and Maeloson, their handwriting was impeccable.\n\nA large matrix covered the entire open field just before the pond, the same field where I taught Ellen and my mother their first spells.\n\n\"We should make haste. The flames grow unstable,\" An'raie said through Diane's lips.\n\nDIdn't need to tell me twice.\n\nI pointed Aesteal to the center of the matrix. She took me there and I sat down. \"Please be careful. I shall pray to Reshei're that you succeed,\" my Bonded said before she pulled away. Ah, Reshei're, the elven spirit of noble pursuits and righteous conquest, or something like that. I wasn't sure why her words put me at ease, but they definitely did.\n\nI turned to An'raie. \"Aye, let's proceed,\" I said. She agreed and moved Burnwood to the center of the circle as well. She sat the Guard of Liara down. \"'Tis best to be prepared, man-spawn. I shall release her from mine grip. She'll be overcome at a moment's notice. Art thou prepared?\" she asked.\n\nI stared back at the others behind me. As I expected, they all were prepared. Aesteal had her bow drawn, Alteria held her blade, Nz'ia had his spear, and the Hilvir men and women sat in the trees, their bows at the ready.\n\nI faced An'raie. \"Aye.\"\n\nWith a nod, she held out Diane's hand to mine. I took one more calming breath and placed my hand to hers. Instantly, all the sounds around me were voided. Through An'raie, Burnwood and I joined together. In this state, her mind would be too preoccupied in maintaining our shared mindspace for the Flames of Raganthor to act. Of course, if I failed, she'd overpower me and we'd be right back to square one.\n\nSuddenly, all the sounds around me left. When I opened my eyes, I stared into an endless sea of darkness. No matter where I looked, whether up or down, left or right, there was absolutely nothing around me.\n\nIt was rather odd. I've been in mind realms before. Hell, An'raie and I were in one with Liara this same day, but I never felt anything like this. I felt hot. It was like the sun was beating on my back from working in the Coal Mines of Fqwazh'ret.\n\nI screamed out, but I felt the void mute my voice. Aside from hearing the thoughts in my head, which seemed to reverberate through this space which I controlled, my tongue must have been snatched from me.\n\nUnexpectedly, I didn't see Diane anywhere. She should have appeared right next to me. I also didn't see An'raie. It wouldn't bode well for me if something happened to her while I was in here. That said, considering I still had my consciousness, I didn't think my soul had been collected just yet. Well, I wasn't gonna get the liberty of just sitting on my ass waiting for Burnwood to come find me. That wouldn't be good.\n\nSo, I started walking through the void in front of me. I cared not about which way I went. A mind realm like this held no direction of where to and not to go to. It was all a bunch of connected nonsense between Diane and myself.\n\nI was a bit surprised to find that this shared realm wasn't burning with the Flames of Raganthor. Mind realms usually took the shape of the current state of two people's minds. An'raie and myself had no specific thoughts about each other so our realm was rather bland and void. For someone like Diane who'd been taken over by such an aggressive spell, I imagined I'd see a lot more chaos around this realm. Apparently, that wasn't the case.\n\nI wasn't sure how long I walked for. It could have been a few seconds, a few minutes, a few hours, or even a few days. My sense of time had lost itself almost immediately. All I knew was that I should keep walking. Where I was walking to I also had no idea. How does one map the void of a mind realm anyway?\n\n\"Weak!\"\n\nFinally, within my travels. I heard a voice through the void of darkness around me. By its rather rough, yet feminine tone, I knew who it was. I tried to call out to Diane, but my voice was once again taken by this darkness around me. Yet, her voice was clear in my ears and sent a shiver down to the very depths of my crusty soul.\n\nPerhaps it was Diane's madness, perhaps it was our shared realm, perhaps we were both just fucking crazy, but I felt a deep sense of dissatisfaction. Mighty dreams unfulfilled, desires unsatisfied, wishes... ungranted, and from them I sensed a well of anger and hate.\n\nI noticed something in the distance. As I got closer, I saw it was the body of a man. I couldn't see his face. Even when I bent down to turn him over, all I saw was the void covering him. What I could make out however was how badly his body had been messed up. The fucker had been in some type of brawl. A busted elbow, a dislocated shoulder, a broken collarbone, I wondered if the fucker got hit by a damn mace.\n\nI stood up and kept walking.\n\n\"All weak! Every. Single. Last. One!\"\n\nDiane's voice spoke to me again. Well, I wondered if she was speaking to herself and I had just so happened to be in the area. All I knew was that the more I walked, the more bodies came before me. Some were women, most were men, others... of supernatural origin, all laid around the ground like a battlefield of corpses. I must have passed over five hundred bodies, maybe even more. Not that I should brag, but if this was Diane's kill count, then at least I could lord my own over her.\n\nIt wasn't long before I noticed a door in front of me. It wasn't a spectacular door. It was the type of door you'd see in front of a shoddy tavern. It was made of wood, filled with dagger marks, and bullet holes. There was a little design on the door, the imprint of a rose.\n\nI grabbed the door handle and opened the door. When I passed through it, my entire world changed. The void which had been my walking place for so long suddenly removed itself. In its place was a tavern filled to the brim with men and women. Boisterous laughter filled its walls.\n\n\"Hahahahaahahahahahar! Another shot of ale! Three thousand gold to me! Keep up the good luck! I gots a lot riding on your fucking asses! Who's next?!\"\n\nSomeone shouted through the masses. For some reason, I heard this voice louder than all the others. It was a man's voice. I wasn't sure why I could hear him clearly over all the others, especially since everyone here was drunk off their fucking asses. So drunk were they that a man actually spilled an entire pint of ale on a woman and she laughed as he did.\n\nTaking another look at the people, I noticed they all seemed to be facing in one direction. It was almost as if they were watching some shitty performance, opera stand, or what have you. I would have tried to make my way through the crowd, but it was too dense. I had not my pistols nor my blade to make a way through so I settled for climbing a stairwell.\n\n\"Fuck! Double or nothing! I'll make back what I lost! I still can't believe what I'm seeing!\" someone shouted.\n\n\"She actually took down Single Palm Gord'e! Before that she crushed De'me of the Swallow. By the ancient ones!\"\n\n\"Put me down for sixteen thousand on the girl!\"\n\n\"Hahahaahahaha! Don't regret it when you lose! I got twenty thousand on the next guy! She won't last forever!\"\n\n\"Sounds like your wife!\"\n\n\"Yayaayayayaa! Don't I know it!\"\n\n\"I got the girl for thirty thousand!\"\n\nSo much money being gambled away, I started to have an idea what this was about. My thoughts were confirmed when I made it to the top of the stairs and onto the second floor. There weren't so many people on this floor and I had a perfect view of the activities below me. When I looked down, I saw a young girl. She couldn't have been older than seven or eight. Her body was laden with bruises. She had a bruised left eye, a bunch of bleeding claw marks around her cheek, arms, and legs. A stream of blood fell from her busted lip. She held up her fists and she stared at the man in front of her.\n\nThis man was another adult. He was strong, evidenced by the numerous muscles lining his form. He stared at the little girl with a cruel smirk. He spoke not a word. Neither did the girl. Instead, she looked to the right.\n\nI followed her gaze and my eyes landed on some bastard with a cut over his left eye. His build was a bit different from the man she was facing, but he was muscular as well. The man she looked at nodded. I then watched her fight. As I watched her, my eyes got bigger and bigger.\n\nThe little girl took down her opponents with sheer ruthlessness. Men who'd trained in so many warrior styles, women who honed their skills with the blade, whether beastkin or not, this little girl... humbled them all.\n\n\"All weak!\"\n\nI heard that voice again. Precious coin was thrown at the girl's feet while the man she'd looked to prior to her first battle collected them all. He laughed and laughed as he patted her shoulder. However, as she walked away with the man, I could see the glare in that little girl's eyes.\n\n\"Diane! Diane! Diane! Diane! Diane!\" the crowd of people cheered as the man led her out the door.\n\nMy eyes widened. That little girl was Diane? I was surprised because, aside from her bout with Ellen, the woman didn't fistfight too much. I'd always assumed she'd been born with a damn flintlock in her hand. I sometimes joked to myself that I swore the milk she suckled on from her mother's teat tasted like blasting powder. I had not known she fought in illegal underground rings.\n\nAye, within any nation, the sport of making a child fight in rings like this was abolished hundreds, if not thousands of years ago. I'd never seen it, but clearly the practice hadn't died away.",
        "I pushed some people out of the way and made my way back through the door I came in. I pushed open the door and nearly fell when I found myself in a more... extravagant setting, one befitting nobles and fancy coats. Each of them wore those shitty opera masks for whatever reason that I didn't care to know about.\n\nNevertheless, I followed their gaze and I noticed what I could only describe as some type of gladiator's pit. In it was Diane, about four or five years older from when I saw her as a little girl. She brushed some blood from the side of her lip, her torn clothes revealed her rather formidable physique.\n\nI watched as Diane's next opponent came into the ring. He seemed like a flashy character. He constantly finger-gunned the crowd while swirling one of his disc blades through his finger. I noticed Burnwood's expression grow nasty as she panted heavily.\n\nShe stared at one of the watching booths. I followed her eyes and I noticed the same man from before that collected money from the tavern when she was little. Notably, he had a much more unkempt beard. His firm physique had turned rotten. His belly stuck out more than before. It seemed no one else noticed him.\n\nThe man raised his hand and then... he pointed his thumb downwards. I saw Diane's sneer with animalistic anger. She clenched her fists. The aura around her changed. She stared back at her opponent. Burnwood looked angrier than I'd ever seen her before. It was only when the man charged at her that I suddenly got an idea of what was said to her.\n\nThrow the fight.\n\nHer opponent slammed his fist into her mouth which whipped her head back. The young teen's legs staggered, but she did not fall. Even if I didn't hear anything, I moved my lips to whistle. That punch had some force behind it. However, I was stunned when I saw Diane's eyes. Her face summed up one word to me.\n\nBored.\n\nDiane Burnwood was bored. The raging fire that was her fighting spirit had been doused by the balcony man's order. I took notice of her mistakes. She fought with aggression, but her punches started going wide. Her kick held no power. She blocked lazily. Yet, no matter how many times she was socked in the face, Diane just stared out like a soulless husk devoid of pain, pleasure, happiness, or even anger.\n\n\"Within all the realms, justice is achieved by strength. Evil is achieved by strength. Fame is achieved by strength. Why shall I bend my knee to the weak?! His punches are no more annoying than a buzzing fly in the eyes. I...\"\n\nDiane's voice echoed around me, yet only I could hear it. I watched her opponent toy with her, humiliate her, and verbally shame her before the crowd. His disc blades slashed at her form barely leaving her dignity intact. He then reared his head back and bashed her in the face, finally bringing her down.\n\nBurnwood fell back but it was clear to me, even as the man declared himself the victor, that she only looked up at the ceiling. I wondered what her thoughts were, but I could hazard a guess. I could guess because I saw the dissatisfaction etched into her face. I saw an animal forced to keep its teeth and claws in a muzzle. I saw a blade forced back into its sheath never to have its steel tested against another.\n\nAs Diane got older and older she fought and fought, but she always threw her final fights at the balcony man's behest. I have seen many pitiful circumstances, but there was something about Burnwood's that seemed to resonate with me. To me, Burnwood was that unstoppable, sassy slut of a woman that I enjoyed. A fierce tongue and fiercer attitude, she had that fire, confidence, and ruthlessness that spoke to my pirate's heart. I had trouble considering this caged animal as the strong, deadly woman I'd known.\n\nHowever, that time soon came. When I saw Diane get beaten for what seemed like the hundredth time by another opponent, I saw a fire burst in her eyes. As her opponent celebrated, I saw her fists clench. Soon, to the shock of everyone, she got up and screamed. She punched her opponent so hard, with such viciousness that her fist blew through their stomach and out their back.\n\n\"Guuuuagh!\" The person groaned as they coughed up blood. Nobles and fancy people screamed as Diane tore the person's head clean off. As the body dropped to the ground, soldiers appeared and surrounded the woman of eighteen years.\n\nWith spears and blades, whips and chains, they charged at her. However, Diane was not to be deterred. She'd been denied for much too long. Her soul cried for a fight worthy of her battle prowess. Her body craved the adrenaline of battle and struggles. She wanted someone to match her strength. She wanted... to feel alive!\n\nPeople, and even I, stared in shock as Burnwood stood over a hill of corpses, blood soaked her skin like a fine garment. Had I not known her, I would have assumed she was a Xhaluter for it was only from them that I'd seen such ferocity and aggression. She stared at the body of a man she impaled with a spear.\n\n\"Who else fucking wants some?!\" She hollered into the crowd, an anticipating smile on her face. Unfortunately, her smile faded when she saw that no one would challenge her, no one would face her, no one... would understand her. Instead, they all looked at her as some have looked at me.\n\nA demon, a monster, a hellish creature wearing the skin of a human being, and a child of Ares, meant to war against anyone and everyone around them. Instead, she looked up at them as if being silently judged by a court filled with rulers and councilmen. Despite her show of strength, she awaited her verdict... like a fucking criminal.\n\nShe turned her eyes to the man on the balcony. I did as well, but we were both shocked to find he was gone. I immediately understood. He either ran away to leave her to her fate, or he discarded her for not listening to his orders to throw her battle.\n\n\"She must be a child of Ares. Such rage,\" I heard someone speak. Others began to murmur to each other while Burnwood watched. She glared at them all. Even if her voice around our mind realm didn't speak, I already knew what she was saying.\n\n\"Weak! Everyone's fucking weak!\"\n\nThe scenes changed again. I saw the world through Diane's eyes for a time. She'd been a soldier for a time under the Kingdom of Shafier. She mowed down armies and platoons, uncaring of the damage she caused. She just kept fighting and fighting, no one able to best her or challenge her, no one to give her the thrill she wanted.\n\n\"F-Fuck! Slow down! Nnnnnnngh! Oooooh fuck I'm gonna cum!\" a man said as Diane rode him, her body now of twenty or so years of age. She panted and grunted as she jumped up and down on the man's cock with rapid movements. They were so strong, I could hear the underside of the bed crash against the floor.\n\n\"Mmmmmmmmngh! Come on! Stay with me! You can do it! I-I'm gonna cum soon too!\" she spoke, sweat pouring down her face. However, it wasn't long before the man roared as he pumped a load of cum into Diane's pussy. He fell down exhausted, his face in eternal bliss while Burnwood frowned.\n\n\"Why did you fucking cum? I wasn't done yet!\" She growled.\n\n\"Hehehe... sorry about that. I'll make it up to you,\" he answered.\n\n\"You can make it up to me by getting fucking hard again!\" She exclaimed, her legendary temper showing itself.\n\n\"Men ain't designed that way, lass. Gonna have to give me a couple hours for that,\" he replied back, laughing as he did so. I noticed Diane wasn't laughing with him. She just stared at him. No, that was wrong. She glared murderously at him.\n\nWeak.\n\nIt didn't matter if it was in battle or in bed, no man or woman could make her feel the rush of strength that a warrior like her craved. She'd been in countless fighting rings, done battle with man-eating beasts, fucked many men and women, and fought in numerous wars and skirmishes, but... she was left unfulfilled.\n\nI was finally taken to Diane when she was about twenty-two or twenty-three. She laughed as she downed another man in another fight ring. Precious coin showed over her, she laughed as she made her way to the bartender and ordered a tankard full of whatever they served.\n\nIt was then that I noticed a woman in a hood seated next to Diane. I raised an eyebrow. All I could see of the woman was her red lips curved up in a smile. A cloak hid the rest of her body from everyone.\n\n\"Impressive strength. You must be quite formidable,\" the woman said.\n\nI instantly noticed the voice was that of Liara. Only she could have such a voice like the purest honey for the ears.\n\n\"Yeah, thanks. Ain't nothing impressive. Everyone else is just too weak. That's all I've ever met... weaklings,\" Diane replied bitterly as she chugged on her ale before she slammed the tankard on the table.\n\n\"'Tis not surprising. Perhaps you feel you're strong because all you've fought are weaklings. Perhaps, you're an alpha among the weak dogs,\" Liara replied.\n\nSuddenly, the whole tavern stopped. Given what I know of Liara, I knew there was some reason she goaded Burnwood like this. Perhaps this was around the time that Diane would become a part of Liara's group.\n\nI understood what Liara was getting at. I was sure that's why I felt so similar to Diane. I was strong because of how many people I'd beaten, yet all I'd beaten were probably nowhere near what the world of D'orn and all the realms had to offer. Without a doubt I'd crushed kingdoms and sunk empires. I'd faced powerful forces one might think a myth, but... was that all the world could challenge me with? I think Diane had the same thoughts. Then, there always comes one person, or persons, that tear you down from your own built pedestal and force you to rise once again... or remain sunken like trash.\n\nDiane slammed the table and stared at Liara. \"Look here, sweetcakes, I ain't some gthoric shitbitch that won't fuck you up just because ya dress nice! If you don't wanna end up like the rest of the cocksuckers I've put down then how about you finish your drink and get the fuck out,\" she replied angrily.\n\nLiara didn't respond. Instead, she just picked up her wooden mug and drank from it. For one as sophisticated as Liara, I never fancied her as much of a drinker. Even if I looked through her memories, she never did this before that I can tell. I can only fathom that she did this for a reason as well.\n\nOnce Liara was done with her drink, I suddenly chuckled. My lips curved upwards.\n\nDiane had her head turned at the time so there was no way she would have seen Liara enter the fighting pit. \"Very well, do show me how you've put the rest of these 'cocksuckers', as you call them, down. Do make haste, Ms. Burnwood. I am a very busy woman,\" Ilzahold replied.\n\n\"Is she fucking crazy?!\"\n\n\"She's gonna get killed!\"\n\n\"Bet'cha the lass racked up some debt and chose to slit her own throat with the knife. I'd rather take the blade than Diane. At least one of 'em be quick!\"\n\nI shook my head at these comments from the patrons of this tavern. That said, perhaps I should fault them. Not many knew of an existence like Liara. She was a woman who defied all manner of sense that the world structured itself around.\n\nDiane snarled. She finished her drink and stood up. \"Your funeral.\"\n\nBurnwood entered the ring. \"Feel free to take off your hood. You're gonna need it to see my fist knock you out,\" the would-be gunslinger spoke.\n\n\"Dare thee to make me.\"\n\nI was thankful no one could hear me, or see me, because I laughed uproariously when I saw the scowl on Burnwood's skin. As always, Liara had a special way of getting under the skin of others. Her mystic ways and special tongue could confuse even the grandest teacher of magic and law.\n\n\"Oh, I'll make you alright!\" Diane scowled as she held up her fists, ready to take Liara's head clean off.\n\nThe patrons got excited.\n\n\"I got three hundred on Diane!\"\n\n\"Forty-Five Thousand!\"\n\n\"A hundred thousand!\"\n\nI shook my head. So much coin. So much precious coin before and I couldn't get it! Of course, the hindsight was before me that had I been my younger self, I would have probably bet on Diane too. However, knowing what I know now, I couldn't say otherwise.\n\nDiane charged at Liara.\n\nThe patrons watched and I watched. It was odd. I knew the outcome, but I never thought I'd see something like it. The cheering of the patrons for Burnwood to win slowly died away. She blew her fist forward, but Liara smacked it away like a human might flick a fly away. Diane swung again, but Liara merely danced out of the way.\n\nFrom my watching of her life, I'd known Diane had fought many different types of people. She'd encountered heavy hitters, swift blader users, weapon masters, and even magic users, but she couldn't stand before the wall that was Liara. I felt sorry for her.\n\n\"Why? Why can't I fucking hit her?! I can't make sense of her movements! Who the fuck is this bitch?! Why don't you fall like everyone else?!\"\n\nDiane's thoughts resonated with me as she swung, kicked, clawed, and even tried a few bites. All of them were worthless before the might of the Timeless Witch. Diane couldn't understand... how someone couldn't fall when she put in her absolute best.\n\n\"My my, such aggression. Indeed, the people you felled must have truly been weak, especially since they couldn't overcome a weak woman such as thee,\" Liara taunted.\n\nToo angry at her plight, Burnwood fell for it like a sucker at a C'ula merchant stall. She pulled her fist back. \"If you're so damn tough then why don't ya say shit after I punch you in the fucking face!\" The would-be gunslinger screamed as she threw her fist out.\n\nLiara didn't move. Instead, her smile widened beneath her hood. \"Very well.\"\n\nIlzahold held up her hand and caught Diane's blow with it. The sound of the blow rang through the tavern. Everyone watching was stunned into silence. Even Diane herself couldn't comprehend what she was looking at. As soon as her blow was caught, I saw the flames of battle expel from the short-haired woman's body.\n\nI think I blinked because I noticed Liara now had her hand on Diane's shoulder. Then, with so little strength, she gently pushed the warrior down into the sand. Burnwood fell before she could even stop herself. Her eyes wide, I knew what she was thinking.\n\nWeak.\n\nLiara stepped out of the ring as people made way for her. \"If thee wishes to know true strength, I shall wait for thee,\" the witch said before she walked out the door.\n\nI don't know how much time passed as I watched Diane sit there in the sand, but eventually she stood up. She spoke not a word to anyone. Instead, she walked out the tavern and stood before Liara.\n\nBefore I could hear the conversation between them, I was taken away again. I watched Diane become the Guard of The Witch of Draegnar. Burnwood fought not with her fists, but with two guns granted to her from her service. She met Goron, she stayed by Liara's side. Diane traveled to realms, empires, and kingdoms fraught with danger, enough to test her might. Most she won, but some... she lost. Others, she could only be a spectator to the glorious strength that was Ilzahold. In her mind, Liara was the strongest existence she'd ever known and it stayed that way until...\n\n\"Well, I'm used to meeting bastards and bitches, but not too many bilge rats. If that old sea cretin let you through, then I suppose you were referred here. I've never seen your face before. You look like a first-timer to me. Just so you know, this isn't the place to get your cannons off.\"\n\nI stood in the room, staring at myself and my mother as we spoke with Diane in The Root. I frowned and looked myself over. \"By dog shit, when be the last time I feasted on a good leg of mutton? Was I always that skinny?\" I thought with a chuckle.\n\nAye, Diane met me, Eric Drakclaw, the betrayed captain on the first steps to recover the life that was taken from him. I could hear her thoughts easily. I was in over my head. I'd be overtaken like all the rest. I'd lose myself in Liara's strength and fall faster, if not harder, than she did.\n\nHow shocked and stupefied she was when Goron told her that Liara had been in her quarters for hours, casting spells and communing with spirits, all in order to find out about me. I could feel the shock in her mind. Me, a weakling brat, had piqued the interest of Liara Ilzahold.\n\n\"Tch, it won't last.\"\n\nThat was what she thought, but it did last. Time and again, I usurped Diane's thoughts of me. When I delivered her the Lindengar antique pistol, when I became a Draegnar Shark Hunter, when I grabbed a ship and set sail, when Liara told her of what she's seen when I returned with Saviara's body, all her expectations of me were falling one after the other. I was a challenge to her very way of thinking. She couldn't take it.\n\n\"Lady Liara, you can't be fucking serious!\" Diane growled while Liara frowned.\n\n\"'Tis quite the serious manner, Diane. You've disrespected the dear captain and this voyage holds much more weight for me than you can consider. Long have I sought the Isles of Delverhold for my personal growth. The arcane energies within me swirled about at the mere mention of their name. This young man is worth more than even I had anticipated. You are to show him respect. Much can be lost should you not,\" Liara replied.\n\nI could feel Diane's rage swirling around her. It was like her life hadn't changed. Once again, she was forced to bow her head and concede her dignity at the cost of the weak. It probably didn't help that I knew just the way to piss her off. It also led to her... throwing the fight between herself and Ellen. Whether from fear of Liara's wrath or what I'd think, she went down which resulted in Ellen's victory. Somehow, I knew Sothshore wouldn't enjoy that.\n\nIt was only when I defeated the ships of Callamum that her eyes went wide. She gawked when she saw my feats. Her world came crashing down upon the realization that I was not only stronger than her, but I might be Liara's equal. Hell, I was surprised she even toyed with the idea that I might be even stronger than the Witch of Draegnar. Well, I doubt I was that, but the thought was nice for my ego.\n\nThen I think her anger accumulated into the bursting pleasure of pain when I fucked her for the first time.\n\n\"This pain! I'm being fucking humiliated by this... mmmmm... motherfucker, but why? Why does it feel so fucking good?! Nnnnnhgh, f-fuck!\"\n\nHer thoughts moaned to me as I watched her lost in the deliriousness of her submissiveness to me. The further we got to the island as our time passed she warred with herself about what she had done. She enjoyed being beneath my touch, the touch of someone she once deemed weak. As I continued to view her memories, I suddenly stopped.\n\nI didn't need to look anymore. A sudden realization filled my mind. I knew why she had been controlled. I knew why Liara asked me to take care of her guard. I knew why... how to free her. Whether I could do it or not was another matter, but I had quite a bit to lose if I didn't.\n\nI walked out the door from Diane's memories and was brought back into the void. I stared at the darkness around me and sighed. So, she'd allowed herself to fall into the embrace of the Flames of Raganthor because of me.\n\nI suppose I can thank Liara's intellect in helping me piece this little... mystery together. I imagine Diane and Liara must have found each other. While they were walking upon the fifth island, the guard found the best time to speak with the one she was charged to protect. I imagine Ilzahold must have said something that pissed Burnwood off something fierce.\n\nI wasn't sure what it was. It could have been a number of things from the first time the Witch and I had sex to the Mark of Ho\u0256. Unfortunately, I didn't know. What I did know, or assumed, was that Diane hadn't taken it well. I shouldn't have been Liara's equal. Not only was Liara stronger than her, a goal she set for herself, but now I surpassed her without confrontation. She was just another on the steps behind us. I wasn't sure how high Liara was on the pedestal of hers, but I knew I must have been close for the Flames of Raganthor to take Burnwood over.",
        "Her answer was simple.\n\nBecome strong enough. Become strong enough to wipe away the distance between her, myself, and Liara. With the Flames of Rangathor alongside her, she could reassert herself as the second behind Liara. Then, maybe even once Ilzahold herself achieved whatever power she wanted from Delverhold, she'd challenge her too for the honor, pride, and dignity she must have lost when they first fought.\n\nThat was Diane Burnwood, a warrior woman starved for battle. I actually wondered why she never bothered to fight Nz'ia. Surely, he could have given her the battle she craved, but perhaps it was because he was too weak from when we'd found him. Not that a weak Xhaluter was anything to scoff at, but I wondered why she'd never gone to him.\n\nI stood up, clarity forming within me. Something mystic touched the soul of my own mind. Whatever trapped my throat from speaking had been burned away.\n\n\"You must think me a naive brat, Diane. You think me unused to vengeance, thirst for power, glory, and the fame of battle,\" My voice said, ringing through the void around me. I wasn't sure why, but I felt warm inside. I felt something powerful from within me.\n\n\"Don't fucking kid yourself, Burnwood. I too have felt the sting of defeat. I have seen the splendors of the world and felt the harsh stairs that many climb for their own glory. However, unlike you, I live me own life with freedom and adventure. The seas are my conquest and my trials. Enemy ships are my targets. Gold and riches be mine to plunder, and I take as I wish! Dare you need me to prove it? Fine, even if I didn't have my powers I wouldn't use them on you. A worthless bitch who would allow herself to be controlled, to have her destiny at the whims of another, be unfit for me to use them! Can you even pride yourself as a guard to the most powerful sorceress in all the realms if this be your solution? I don't remember desiring such a weakling to board my ship upon this voyage's conclusion! You ain't a warrior, Burnwood. You be just a sniveling piece of dog shit that even cowards wouldn't piss on!\" I hollered with all my strength.\n\nWith the mana available to me, I constructed for Diane a glorious arena fit for a warrior from the memories of my past life. I gave her what she desired, a crowd of people loud enough to puncture eardrums, a pit of sand with blood soaked at every corner. Hundreds of fallen blades, spears, shields, and armor pieces littered the ground. For a glory-starved bitch like Burnwood, there could be no greater spectacle. I then finished by making an entrance into the pit.\n\nImpressed with my work, I sat in the sand, the crowd aggravatingly loud in my ears. All I had to do now... was wait.\n\nSince my perception of time was pretty fucked up, I couldn't tell how long I waited but when I opened my eyes, Diane stood in front of me. Her eyes glowed with green fire and the cracks of her skin pulsating like emerald shards.\n\nShe stared at me, unmoving, unwavering, and unflinching. She neither raised her hand or spoke any spell against me. All I saw was her anger, her unease, and her frustration. I stood up and faced her. I think she waited for my next words, for those would dictate if she threw her punches at me or another spell.\n\nSurprisingly, I was allowed to grab Burnwood's head. I then pushed her forehead to mine. \"Aye, I see it in your eyes, Diane. You be a mighty conqueror. You've the will, the battle prowess, the instincts of a young Xhaluter. Dare I actually think you might have been born from one. Aye, you've got a mighty Xhaluter's heart with no one to sate the raging inferno within it. I failed to realize that. For that, I shall take responsibility. I shall prove to you that I be worthy to stand by your master, Liara. I shall sail her to the grandest edges of D'orn and beyond. I shall bring you glorious battles which will sate your hunger for blood and glory. Beneath the sail of Eric Drakclaw, you shall be known as a warrior so great that even Ares shall seethe with jealousy!\" I said, my voice soft. I could feel Diane tremble.\n\nI smiled. \"Aye, if ya think me a liar then I dare ya to put me to the test. I shall bet you in what you pride yourself on and that shall be your confidence that to submit to me shall not be your greatest weakness, but shall lead to your greatest strength. People such as us, we know what we are. Shall you use a spell to bring me down, or shall you test your might against mine?\" I asked.\n\nI then pulled myself back. I turned my back to Diane and walked to the other side of the arena. She didn't attack me once. The crowd roared at us while I took off my shirt, my captain's coat, and any other weapons I had on me. I was left in just my pants.\n\nHad any other pirate captain judged me, they'd think me stupid. We pirates don't honor duels. We don't see the pride in fairplay. We won't fight ya on your terms. However, while that was true for my enemies, it was not for Diane. I had long dreamt of having Burnwood above my ship and within my sheets. To prove to her that I needed not my pirate ways to deal with her was necessary. To people like Diane, swords, magic, supernatural powers were all nice, but they didn't prove strength.\n\nLiara was strong to her because... she had easily beaten her without the need of magic. I would need to do the same thing. With that, maybe Diane and I would have a greater understanding of what we were to each other.\n\nMy smile widened when Burnwood, almost against the will of the spell that bound her, reached for her black coat. Her arms stuttered and stiffened in some areas. Her fingers grabbed the fabric and pulled it off. Her coat dropped to the sandy arena. She grabbed her pistols in her holsters. Shakingly, she dropped them down.\n\nI drank in her luscious, muscular form. Many might not appreciate it, but I did. She was a strong, powerful woman. Tenacious and unyielding, stubborn and crass, I adored her. Soon, she was left in a short shirt and pants. One exposed her delicious body and the other her wonderfully sculpted legs.\n\nAgainst the roar of the crowd, I motioned for Diane to come to me. The green flames in her eyes raged. She took up her fists. I took up mine. The sand on our feet, we waited until... someone bashed a gong with a hammer.\n\nAs soon as its ringing moved over the arena, Diane charged at me. She charged so fast I saw a cloud of sand and dust behind her.\n\nShe appeared in front of me. With all her pent up aggression, she fired her fist at me. To be honest, I don't know how I dodged it. I just turned my head to the side and her fist, like a bullet, boomed next to me. Aye, as expected of Diane. She was a woman who loved to fucking fight. How had I not known that in my previous life?\n\nI stepped back, but Diane was right on top of me again. She swung and swung, but her strikes were not without rhyme or reason. I could see the way her soulless eyes watched every motion of my body, never allowing me to correct myself that I might strike her back. As one fist drew back, the other was going forward ready to knock my unconscious.\n\nUnfortunately Diane, I might not have been in the gladiator settings that you've been in, but I ain't no slouch!\n\nAs Diane flew her fist out, I slipped in the sand. My body fell back, but I pushed my hand on the sand and slammed my foot into Burnwood's stomach. She groaned in pain, but as expected of her, she didn't stop her onslaught. She moved my foot to the side and socked me right across the face.\n\nI tell you, the pain was immense. I don't remember the last time I nearly got cold-cocked so hard. I felt like I'd nearly pass out then and there. My legs buckled, but I didn't fall. I chuckled and spat a load of blood from my mouth. Diane glared at me and I glared back.\n\nI swiftly turned and punched her in the face as well. The Guard of Liara staggered back in some odd form of shock. She rubbed her cheek. \"Ya got one good hit on me and ya stop? You must have lost yer edge!\" I said as I punched her again.\n\nDiane's head whipped to the side before I grabbed her arm and flung her over my arm. She crashed into the hard sand, a gasp expelling from her lips. As I pinned her down, I huffed. \"As much as I enjoy being on top of you, I think you best find your nerve! We ain't leaving until you're satisfied,\" I said.\n\nNow my gaze might have been a little blurry from the blow I'd been given, but I could have sworn I saw the scowl on Diane's face turn into a smile. She quickly placed her head down and then slammed it into my face. With the space I'd given her from the way I staggered back, I crushed when she kneed me right in my stomach.\n\nI fell back, but then it wasn't long before Burnwood grabbed my head and bashed it into her knee. My vision grew dazed. She then buried her fist in my gut before her other knocked in the face again. My ears rang with the loud cheers of the crowd. A thousand sensations moved through me as I felt my bones crunch and break.\n\nAye, Diane was strong. She was very strong.\n\nWhen Diane threw another punch at me, I grabbed her fist and chuckled. Yes, keep fighting Burnwood. Put me to the test that I can take what you offer. Put me to the test that I can sate you burning desires for combat. Put me to the test that I shall show you even greater fields of battle.\n\nBurnwood screamed as I twisted her arm, but she used that moment to grab a hold of my neck. I tumbled us forward and crashed her back against a stone pillar. Diane continued to hold onto me. She snarled in my ear and tightened her hold against my throat. The blood rushed through my body.\n\n\"Eric! Eric! Eric! Eric! Eric!\"\n\n\"Diane! Diane! Diane! Diane! Diane!\"\n\nThe crowd cheered over and over before I swung my elbow behind me and hit Diane across her face. I heard her cough violently, yet she still didn't release me. I just didn't understand where this hold's power came from. My breath became short. If this continued, I imagined I'd pass out in the fields of sand.\n\nSeeing as I couldn't allow that to happen, I grabbed one of the stone pillars and began an arduous climb. Burnwood and I must have looked like a damn gorilla with its baby on its back until we reached the top. I couldn't keep myself steady because the gunwoman was too heavy. Instead, I did what I could and jumped off backwards.\n\nI think I heard Burnwood gasp, but it was too late as we slammed into the ground. Her back crashed into the sand while my body crashed into her torso.\n\n\"Gah!\" Diane groaned before she released me.\n\nI rolled away from her and stood up, struggling as I did so. I fell down and chuckled. Liara, the fucking things I was gonna do to her when all of this was over...\n\nI wiped some dust and dirt from my face. I absently felt a trail of blood from the side of my lip. I brushed it away. I should be thankful all of this occurred in our minds cause... I lost quite a few teeth here.\n\nWhen I watched Diane begin to stand up, I stilled. When she looked at me, I saw the green flames of Raganthor in only one of her eyes. Her other was the same fierce expression I'd known. The flames within it had dissipated.\n\nI assume hours rolled back. Diane slammed her fist into my stomach before she threw a right hook across my face. I snarled as I punched her across the face. We tried blows left and right. My lip had been cut and busted open. I lost the sight in one of my eyes while Diane's had a bruised black eye, but I couldn't mistake the wide smile on her face, that thrill... for combat. Her one eye that wasn't messed up had a fire, a joy within it that I couldn't help but reciprocate.\n\nSlowly, so very slowly, as we fought, I saw the green flames, the cracks on her skin begin to repair themselves. The Flames of Raganthor almost became an afterthought as our minds added our loss to time by making the setting around set. The sun turned into the moon. Candle lamps were lit all around us. The cheering crowd never ceased, in fact they got even louder.\n\nI kneed Diane in her stomach. Burnwood planted her foot in my torso. I kicked her in her chin. She cracked one of my ribs.\n\n\"It's ending. No, not yet! I don't want to end it like this! I want to keep going! I want to keep fighting! Please, let me fucking fight!\"\n\nI heard Diane's thoughts as if they were my own. She stumbled forward, the cheerful smile and anticipation glued to her face like it'd been a part of her for her whole life. I chuckled. Oh, don't you worry Diane. You and I were going to fight. We were going to fight until Ares and Athena took notice of our struggle.\n\nI snapped my fingers. Suddenly, Diane and I were fine. We were both without injury. No busted lips, no cracked ribs, no soreness, no pain anywhere. It all might have just been a dream to us from before. After all, we weren't really hurting each other. All of this pain, there was a point to it all.\n\nBurnwood looked at me in shock. I smiled. \"If you'd like to give up then throw in the towel now, Diane. You and I, we be in for the long haul,\" I told her.\n\nShe looked at me. For the first time in my life, I saw a tear fall down the side of her face. I think she noticed it too because she quickly tried to hide it. \"Good. I always wanted to break your conceited ass into pieces,\" she said as she slammed her fist into her palm.\n\nI smirked. That was the first time she'd spoken back to me. I huffed. \"'Tis good to see you back in the right state of mind, Diane,\" I returned to her.\n\n\"Yeah, good to fucking be back,\" she said befroe she charged at me and I at her.\n\nLet me tell ya, I don't know how long we fought for. The sun and moon changed places so many times and we'd reset our broken bodies in so many ways I sometimes wondered if our minds might cope with such pain. However, I kept going. I endured for Diane. She'd never had that fight that just kept on fighting. She never had that fire that just kept on burning.\n\nI can only assume days passed as we beat the ever living shit out of each other. Each punch, Diane's smile only got bigger. Mine did as well. We kept fighting and fighting. As we dropped to our knees with the moon in the sky once again, we laughed. I could feel the warmth spread through Diane's mind as the last vestiges of the Flames of Raganthor expelled from her.\n\n\"Of course, it had to be this damn piece of shit that would grant me the fun I've wanted for so damn long. Lady Liara, maybe... this is what you saw that I fucking didn't.\"\n\nI heard this from Diane before she limped towards me. One of her arms was broken, but the other she held up with vast strength. When she appeared in front of me, she clenched her fist. I clenched my own. We cocked them back and bashed each other across the face. My head whipped to the side. My legs trembled and I fell to my knees, but Diane did as well.\n\nShe looked at me. I looked at her. She tightened another fist. I laughed. Sheesh, how much fucking fighting could she take?\n\nI was prepared to reset us again, but... her hand then bruised cheek. I can't say my face must have looked too desirable at this moment. Neither did hers, but there was something in the way she looked at me with respect, admiration, and confidence that made me realize she'd given up. After days and days of fighting, Diane Burnwood didn't want to fight anymore.\n\n\"I fucking hate you so damn much,\" she said.\n\n\"I know,\" I returned.\n\nSlowly, the arena settled away. The cheering crowd, the stadium, the bloodied sands, forgotten weapons, and stone pillars became no more. Burnwood and I leaned against each other in the black void. Our bruised faces and bodies repaired themselves immediately without pain.\n\n\"My father was a pit fighter in the lands of Evir. Bastard met some nice bitch and fucked her up. He wanted a boy, but he got me. The bitch who gave birth to me died from the strain. He wanted a boy so he could teach him the ways of the Pit. When he saw me, all he saw was a prim, proper shit that was probably only good to be married off and make money. Still, he taught me to fight anyway. Fucker told me magic and swords, arrows and spears, they ain't shit. The only true strength is with the blow of fists. To prove to the son of a bitch that I could take it, I went through twenty rounds in the Pits. Got my ass kicked, but dished out thrice the same. He said he'd teach me to fight provided I follow all his instructions,\" Diane said as she leaned on the floor, staring at the ceiling.\n\n\"Win fights, fight more, fight more, throw fight for money. That seemed to be how my fucking life went. He'd train me to fight and turn our profits into booze, bitches, and more training areas. Whenever people bet on me I always threw to the fan favorite. It got to that point until... I got tired of throwing fights, wondering why I was the one blessed with the power to fight but must hold back for others until I lost my damn mind. I beat the shit out of everyone and, when my high was done... so was my shitstain of a father. He left without a single word and I've never seen his wrinkly old carcass since. Yet, I never stopped fighting, questioning why I had to suffer when I was the fucking strong one until Lady Liara bested me with just one arm. Then, you came as well with your ungodly powers and other shit. What the fuck could I say? I hadn't fought you so I knew not what strength you had behind those of the sea. I suppose now I do,\" she laughed out while I listened.\n\nI sighed. \"The world ain't just dictated by strength behind fists, Diane. Force only gets ya so far until people think you nothing more than a rabid beast. Well there are some strengths people got that others ain't got. You definitely ain't got the strength for politics and the stiff background of nobles,\" I snickered out.\n\nBurnwood grunted. \"Aye, your strength just needs someone to direct it at,\" I returned.\n\n\"You think I can't direct it myself?\"\n\n\"Would you have gone with Liara if you could?\"\n\nAh, she didn't reply to that one.\n\n\"So what now?\" Diane asked.\n\n\"I find you your next fight and the many thereafter,\" I said as I pulled her into my arms. Surprisingly, she didn't fight me this time. Instead, she leaned into me.\n\n\"You're not fucking nineteen, are you?\" she asked.\n\nI smiled. \"How could you tell?\"\n\n\"Call it a fucking hunch,\" she returned before the magic used to sustain this realm was finished. Usually, it wouldn't take such magic to do this, but with how long we'd been fighting it wasn't a surprise.\n\nI opened my eyes. The sound of the birds, waterfall, and wind in the trees told me that I was back in the world of the living. I barely watched Diane remove her hand from mine and fall over in the array Ellen and the others had drawn.\n\n\"It seems thou hast succeeded,\" An'raie said to me as I saw Aesteal and the others running towards me.\n\n\"Aye, that I have. Now, if ya don't mind, I'll just... lay here a moment,\" I said before I passed out from the mental blow I'd just taken. The last thing I heard was Aesteal calling to me.\n\nWhen I opened my eyes again, I noticed it was night time. I was also in my bed. I leaned up and yawned. I quenched my thirst with a pitcher of water. I sighed and stared at the ceiling. So, The Alchemist even used the Flames of Raganthor in his research. I knew I was dealing with a madman, one even grander than myself, but clearly I didn't realize just how mad.\n\nAnyway, I slipped out of bed and walked over to my desk. It'd be time to head back into the third island. There, I'd make sure to not be caught unaware like last time.\n\nI spent some time writing in my journal making plans for the next island. Strangely, An'raie was silent, but I assumed it was from her expenditure of mana. Either way, I wasn't going to overlook the peace in my quarters for now.\n\nAs the time rolled by, I collected some of the materials from my bladed eel and continued to create a most stable environment for the spirits which I had collected. Additionally, I'd have to work on the ship before we entered the portal. Tonight would be the last time we'd be on the ship until we escaped the Isles of Delverhold. We'd also have to take some type repairing the ship of the damages caused to it by Diane. I was rather thankful that the barrier kept some of her blows off my mother and the crew.",
        "Suddenly, there came a knock on my door. I placed down my quill and turned around.\n\n\"Enter,\" I said.\n\nThe door opened and in came Diane. She walked down the steps and further into my room. I eyed her and the way she came in. Her hands were stuffed in her coat pockets until she made her way to me.\n\n\"What are you doing up so late? I figured you'd be out until tomorrow,\" I said.\n\nBurnwood opened her mouth and then closed it. She looked around my room before she looked down at the ground. I noticed her absently kicking the floor. \"Can... May I take a seat?\" she asked.\n\n\"Ya don't need my permission to sit in a chair, Diane. There's one by the table,\" I replied, wondering about this strange demeanor of hers. I'd never known this gunslinger warrior to be so melancholy.\n\n\"I didn't mean in the damn chair,\" Diane said before she grabbed the arm rests of my chair and turned me to her. She then sat on my lap beneath the glow of a candle. Her warm bottom on my thighs, I look up at her, understanding moving through me.\n\n\"So... this is what it's like,\" she commented to herself while I smiled.\n\n\"What brought this on?\" I asked.\n\nBurnwood didn't respond. Instead, she sighed. She turned her head away from me. \"Thank you... for saving me. That bitch, Ellen, told me I caused a bit of a problem while I was under the control of the flames. Fucker won't let me live it down. Anyway, I just wanted to say that,\" she replied.\n\nMy smile widened. Due to my size, she was a little heavy, but that was appealing in its own way. I shifted us a moment. I then cupped her chin and turned her head to me. I stared into her eyes. \"You're sure that be all you wanted?\" I asked.\n\nI watched her lip quiver. Her warm hand touched the tiny hairs on my arms. \"I didn't lose that fight! You fell down before I did,\" she replied which got me to chuckle.\n\nMy hand moved from her chin to the side of her face. \"And how do you figure that?\" I asked.\n\n\"Shut up and kiss me dammit,\" Diane breathed out. Despite the way her tone sounded, I heard no fire or steel in her voice. Instead, I heard a steadily rising desire deep within her.\n\nI pulled her down to me. \"Is that what ya say to the man who risked his life to save you?\" I asked playfully.\n\nLiara's guard sat in silence for a moment before she sighed. \"Please kiss me, Sir,\" she answered, her forehead against mine. I smirked.\n\n\"Better,\" I said as I grabbed the back of her head and gently pushed her lips to mine.\n\nWe both sighed. I enjoyed this simple kiss more than I thought I would. Gone were most of Burnwood's aggressive tendencies in our times like this. Instead, she wrapped her arms around my neck and fully faced me. She accepted my lewd actions towards her as we made out beneath the light of a small candle.\n\nDiane toyed with my hair while our kiss deepened. Her lips against mine, her body gyrating to mine, we enjoyed ourselves. \"Mmmmmm,\" the gunslinger moaned as she grabbed one of my hands and placed it on her waist. I moved my hands up and down, her body was wonderfully sculpted. I could feel the tiny muscles around her frame from her years as a pit fighter.\n\nHer hot breath tickled my skin, her hands touched and massaged the sides of my face, the same sides she'd punched into oblivion just a few hours prior. Another of her hands rubbed under my shirt, feeling my chest. The coolness of my quarters only made her touch that much more stimulating.\n\nI pulled her body closer to mine. So close was she that her breasts pushed against my chest. Her stomach met mine, but we never stopped kissing. Her tongue pierced my lips and swirled around with mine. However, there was no combat or urge to dominate here. We were two tired warriors taking a break from the war we had against each other. Yet, more than that, I could feel Diane's willing submission to me. Unlike the other times I saw her having sex, this was the most gentleness I'd ever felt from her. I didn't dislike it.\n\n\"Hnnnnnn,\" Diane groaned I think when she felt my cock rise up to a part of her thigh. She rubbed her leg against it tenderly.\n\nWe separated for just a moment. Diane grabbed the folds of my shirt and lifted it over my head. She tossed my shirt to the side and I pulled her jacket off. She threw that away and she lifted up her arms to allow me to pull off her shirt. Her breasts flopped in front of me before we pushed our lips together again.\n\n\"Haaaaa... Mmmmmmngh!\" we panted together. Our hands busily explored each other as if we were doing this for the very first time. I traced her noticeable abs with my finger. That got a squirm out of her, but she too wasn't idle. She roamed my body, warming me up with her not-so delicate fingers. Her leg continued to arouse me by rubbing up against my erection.\n\nFinally, I moved my left hand up her body and touched her left breast. \"Nnnnnnh,\" she shivered, but she continued with what she was doing. I rolled her bountiful treasure in my hands. My hand kneaded it and warmed it. Her nipples pushed against my palm.\n\nNext, it was my turn to shiver when her hands found my erection over my pants. She teased it by rubbing her palm over it. All this we did to ourselves while we kissed. How I enjoyed her taste of salt, sweat, and gunpowder.\n\nWe parted with a wet smack of our lips. We then kissed once more. I wanted to say something to her, but somehow I think we both didn't need words. I stared at her succulent teats and latched onto one. \"Oooooooh fucking shit!\" she cried as she threw her head back. Her arms cradled my head while I worked her other breast with my free hands.\n\nIn gentle circles, I rolled her breasts around. Her hips got even faster. She squirmed under my touch. My teeth nibbled on her sensitive tips. \"Hnnnnnngh! Yesssss! Ooooooo fuck yessssss! That feels so good!\" she complimented, pulling my head deeper into her flesh.\n\nI rotated to her other breast, giving that one the same attention as the other. She writhed and wriggled. Her hand over her mouth to try and prevent her from being too loud. Perhaps she feared she might wake up the crew with her sounds. I was almost tempted to let her, but I figured they'd been through enough for now.\n\n\"Mmmmnnnngh!\" she huffed when I brought both breasts together and licked both tips. I swirled them against my lips and tongue, expertly exciting her as she wished. While we weren't loud per se, it wouldn't be hard for someone to figure out what was going on if they were close enough to my door.\n\nAfter some time, the chair was beginning to feel too uncomfortable. So, I picked Diane up. Aye, she was heavy, but I persisted. I carried her to my bed and we fell there. I leaned on top of her while she stared at me. \"There's still one last fight I'd like to have with you,\" she suddenly said.\n\nI smirked. \"I'll be happy to indulge ya,\" I said as I kissed her again. She wrapped her arms around my neck while her legs locked around my neck. This pushed my pants against her own. My cock brushed against the leather protecting her cunt. We both stiffened. Diane laughed.\n\n\"Can't believe I got fucked by this thing already. No wonder Ellen walks out here like a monkey with a broken leg,\" she smirked. I chuckled back as I touched her cheek.\n\n\"You'll be the same,\" I told her before I moved back to her breasts. As I pleased these fine orbs before me, I felt Diane shift a little bit before I noticed the buckle of my belt had come undone. She hummed in pleasure while she threw my belt to the floor. She then pulled down my pants, freeing my cock to the open air.\n\nThe dark-haired woman then wasted no time and grabbed my shaft. \"It's so damn big. Surprised you don't leave fucking potholes in your sluts,\" she moaned as she stroked my cock. Seas, her hands felt wonderful. There was a type of strength in her grip that aroused me separate from my mother, Ellen, Aesteal, and even Liara. It was a grip that brought something hard yet soft at the same time. I couldn't properly describe it.\n\nBurnwood continued to stroke me to full mast as we swapped spit. I rolled over to the side to allow her to breath, but we never parted from each other. She just kept stroking me faster and faster while licking the tip of my lips. I groaned into her mouth, but I wasn't one to take this lying down.\n\nShe smiled and sighed when my hand slipped into her hands and came into contact with her pussy. As I expected, it wasn't soaked, but it was getting there. The vibrating inferno in her nether regions drove me wild like a hot desert plain.\n\nWe separated our lips and swung ourselves. She was on top of me, her body glowing from the candle on my desk. She touched my chest with her finger and groaned. \"Maybe... I didn't want to see it before, but I see why Lady Liara might find interest in you. A piece of shit like you does bring the best adventures,\" she spoke.\n\nI grinned. \"That I do,\" I told her.\n\nShe then grabbed her pants and took them off, all without even unzipping or unbuttoning them. She threw them to the floor leaving her just as naked as I was. She then turned around and faced my cock. How I enjoyed her hot breath. Nothing could compare to it.\n\nWell, let me retract that. There was one thing that compared to her breath. I grabbed her ass and held her pussy to my face. Aye, there was one thing.\n\n\"Let's see if you can lick a cunt as well as you can talk smack!\" she said and the wind was quickly sucked out of my lungs when she engulfed my cock down to my balls.\n\nNot one to lose out, I brought her pussy down on my face, but unlike what she was expecting, I didn't go for it. Instead, I liked the crevice of her ass. \"Nooooaoaaahahhh! Fuck! Ooooooo gooooods! You're fuckin' nasty!\" she wailed, but she certainly didn't stop me. In fact, she grinded her body against mine even harder.\n\nMy tongue slathered her rosebud with hard licks before she started sucking my cock once again. I wasn't sure why I constantly do this to Diane, but I knew that when I met her, one of the things I absolutely adored about her was this ass of hers. I could pleasure it forever if she wanted.\n\n\"MmmmMmmngh! Hnnnnngh! Waaaauuuu!\" she groaned, her tongue wrapping around my cock while she bobbed her head. Her teeth gently scraped the upper side of my cock. I didn't mind much.\n\nOnce her ass was perfectly lubed up, I jabbed my tongue inside her hole. \"Ghhhhhhhghnnngh! Oooooooh fuck my ass! Yes! Ooooooo dammit! How the fuck do you do that?\" she asked as she licked the top of my cock. I hissed as her tongue pierced my cock's hole just a moment before she continued with her sucking.\n\n\"Nasty acts for a nasty bitch,\" I commented before I shoved three fingers inside her cunt. Fuck, I wondered if even Helios might be burned alive from the wave of heat emanating from inside it. Her cunt clenched against my fingers as I stabbed them in and out. I continued to tongue her asshole, turning her into a writhing mess of nerves and released pleasure that made my bed shake.\n\n\"Ooooooooh yesssss! Ssssssssssssssh! Fuck yesss! Lick my asss! Finger fuck my cunt! Mmmmmmmn!\" she spoke out. She deepthroated my cock which sent sparks through the nerves to my brain. Her tits rubbed my pelvis while her hands fondled my balls. It was an absolutely wonderful feeling. Her lips around my dick felt like a damn hard sucking whirlpool, trying to bring my mighty mast down into their sinking depths.\n\nMeanwhile, her ass kept clenching against my tongue. My fingers in her cunt were no different. I could feel the sticky juices trapping them together as some spilled out over my chest like tiny droplets of rain. Her pussy made gushing sounds pleasant to the ears. However, I couldn't enjoy its sounds for long because I suddenly groaned and shove my hips upwards into Diane's mouth.\n\n\"Fuuuuck!\" I groaned as I shot ropes of cum into her waiting mouth. I was a bit surprised as she sucked the cum out of me vigorously. I didn't expect that orgasm. Liara was the only one who'd gotten a surprise orgasm out of me. Diane hadn't even been able to do that when I had first been with her. Clearly, she must have been holding out on me.\n\n\"Mmmmm, I'll admit. Your cum doesn't taste that bad,\" she complimented.\n\n\"Aye, then allow me to return the favor,\" I insisted as I doubled my efforts. Diane leaned back and sat on my face, humping her hips over me as I kept my arms around her legs.\n\n\"Oooooooh yes! Fuck yeah! Lick my cunt! Finger my ass! Dammiiiiit! Hoooooooooauuu! Khuuuuuuuu!\" she hissed when my thumb rubbed her clit in vigorous motions. She rode me faster and faster until she bit her lip and cursed before she came over my face. I had absolutely no problem devouring the drink presented to me. I'd done it before after all.\n\nShe leaned forward and sighed before she slipped off of me. She landed on the bed, sweat falling down her face. As she caught her breath, I smiled. Before she could brace herself, I moved between her legs and lodged my cock inside her. Diane's eyes shot open. Before she could yelp, I pinned her arms to the bed and kissed her.\n\n\"Mmmmmmmmmnmggggh! Yeeeeeshuuuu!\" she said as my tongue danced with hers. My cock in her sheath. Her tight walls wrapped around me like an iron, velvet vice. Her legs locked around my hips.\n\nOur lips smacked apart. \"Fuck, you just came! How are you so damn hard?\" she asked.\n\n\"A hard cock for a hard body like yours!\" I replied before I withdrew my hips and slammed them back in. Diane sighed in contentment. Her eyes closed as she grabbed my head and held it down. I think somewhere along the line we forgot that this was some \"fight\" for us, but we didn't bother with the charade any longer. This woman who wanted to shoot me, and I who wanted to fuck her, had come to our own understanding.\n\nIf this was a fuck, then it sure didn't feel like it. I didn't pound into Diane relentlessly. No, we were slow, deliberate, wonderful to each other. I never took Burnwood for the... affectionate type. However, when I looked back on her brief sex history, I noticed she'd never had the chance to enjoy such affections. Neither did I until recently, and I admit that it was a nice feeling. Perhaps on some weird, oddly emotional level, I desired to grant her that too.\n\nI moved my cock out and pushed it back in. \"Mmmmmm! Nhuuaaaaaah. Damn your cock feels so good! So fucking strong!\" she sighed, massaging it with various strokes and caresses of her sleek walls. Her hands roamed my body, the soft creaks of the bed a pleasant sound to the ears.\n\nI bent my head down and gently toyed with Burnwood's tits again. Her soles on my ass, her hands on my shoulders, feeling my chest, I could see she enjoyed what we were doing. I was sure that if she did decide to sail beneath my flag, then there would be plenty of fun times for herself and I.\n\nAfter a moment, we flipped. She laid on top of me and guided my cock back into her cunt. \"Fuuuuuuuck! Mmmmmmm! My turn to fuck you like you fucked me,\" she said and began bouncing her hips on top of me. The gunslinger pinched her nipples as I watched my cock appear and disappear into her warm, slick, female cavern. She rode me so hard that I felt myself dig into my mattress. Somehow, neither of us got tired.\n\nNext, I was slamming into her as she grabbed the edges of the bed. My balls smacked against her ass. I pulled on one of her arms while her head was buried into my pillow. \"Hhaaaa... haaaa... ooooooh... shiiiiit... goooooooood!\" she groaned and cursed before she leaned back and took my lips again. We swirled our tongues together.\n\n\"Yes! Fuck me with that hard, strong cock! Fuck me so hard everyone's gonna see me walk weird! Nnnnnnnh! Yes, just like that! Fuck yesssssss!\" she panted as I lifted up her leg and placed it on my shoulder. She vigorously rubbed her clit with her fingers. I couldn't help myself. I kissed her again.\n\nDon't ask me why, but kissing Diane brought me some type of otherworldly pleasure that I just couldn't ignore. Maybe it was our former history from my time, maybe it was the fact that we weren't this compatible before, maybe it was the familiarity I found with her when I walked through her memories. Either way, I was sure I'd be kissing her a lot more. She didn't seem to mind.\n\nIn fact, I think she enjoyed this more than I did. \"NnnnnghhhhhhH!\" Diane groaned before she came again all over my cock.\n\n...Aye, I think she enjoyed it more than I did.\n\nFinally, we settled back into our old position. My hips got faster this time. My climax was coming. Diane could feel it. I could feel the way her walls continued strangling me. The wet smacks of skin against skin came. The beads of sweat fell down the side of my face. \"Hnnnnngh! Yes! Damn right! Cum all over me! Paint my damn body in your fucking cum!\" she ordered, lost in her own euphoria.\n\nI pumped into her a few more times before I quickly withdrew and groaned as I fired my load over her tits, chest, and face. I must have been more pent up than I thought because more came out than I realized. When I fell next to Burnwood, I watched her rub her tits a little bit before she scooped up the cum and swallowed it. Once she was done, she smirked.\n\n\"Tapped out now, are ya?\" she asked, more like panted.\n\nI smirked. \"Not until I fill that cunt of yours!\" I told her.\n\nA quick reinvigoration spell and Burnwood groaned as I drove my cock into her again. As my crew rested through the night, Diane and I continued our battle. More orgasms flew between us as I filled her cunt with my cum while she soaked my cock in her womanly brews.\n\nMy ship rested on the waves of the Isles of Delverhold as we fucked ourselves into exhaustion."
    ],
    "authorname": "WordsToTheWise",
    "tags": [
        "slow fuck",
        "fantasy",
        "pirates",
        "magic",
        "pussy licking",
        "orgasm",
        "kissing",
        "fucking",
        "deepthroat",
        "rimjob"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-vengeful-tide-ch-21"
}