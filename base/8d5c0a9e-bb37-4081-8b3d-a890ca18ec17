{
    "title": "Aunt Matilda to the Rescue",
    "pages": [
        "Author's note: I was in a quandary as to what category to use for this one - apologies in advance if anyone feels misled.\n\n*****\n\nIn this otherwise dismal start to summer, Dick finally saw a tiny bit of happiness. His 'Aunt Matilda' was due for a visit. She wasn't really his aunt, of course - she only had one living relative, her niece Sara. But his mom, Jean, had been married to Matilda's brother, so they were sisters-in-law, sort of like family.\n\nWhy was this summer an especially dismal one? His father's death had thrown the family into disarray. Even now, over a year later, it seemed like medical bills were still popping up, draining their resources. His mother had tried to keep his dad's business going, but it had slid into the red, and had to be closed. Because of the financial situation, he wasn't going to be able to attend the college where he'd expected to get his four year degree after all. He'd completed two years of community college, and had his Associate's degree, but it looked like his education would now be put on hold, as he sought employment.\n\nHis mom now cried incessantly, and was being forced to declare bankruptcy. To top it off, Dick's girl friend dumped him almost a month ago. Is it any wonder that in his depression, he just wanted to stay in his room and watch porn and play video games? \n\n'Aunt' Matilda was a wealthy woman, Dick knew, and he wondered why his mom never told her about how they were getting so heavily into debt. Personal pride? Not wanting to ask an in-law for a handout? He didn't know how, but apparently the bankruptcy somehow came to Aunt Matilda's attention. And she was flying in for a visit, to help - all the way from France. And his mom seemed on board with Aunt Matilda's preliminary suggestion that they should sell the house and find a more modest one. It was true that he and his mom didn't need all this space, and the cost of the upkeep, but he'd miss things like the tennis court and the swimming pool.\n\nAs Dick drove to the airport to meet her plane on Thursday, he remembered what she'd looked like when she'd visited them over two years ago, when he was nineteen. That dark hair of hers, stylishly coiffed, and her dark, compelling eyes. She'd smiled a lot with those luscious lips of hers. But what had caught his nineteen-year-old mind's focus were her magnificent breasts. How they moved each time she inhaled. In the last two years, those mental images were often helpful when he jacked off. He smiled. At some moments, he even imagined he could smell that mysterious delicate scent that signaled 'Aunt Matilda' to his consciousness.\n\nHe hurried to the arrivals section of the air terminal. And there she was! Her eyes widened, her lips curled into a wonderful smile, and her arms opened, welcoming him into a big hug. \"There you are, my lovely Dick!\" she gushed, not only embracing him, but kissing both his cheeks. \"My, how you've grown!\"\n\nBlushing, Dick hoped she wasn't speaking about what had suddenly grown in his pants! Here he was, being pressed against her gorgeous breasts, and her unique scent was flooding his nostrils as her lips smooched each of his cheeks with enthusiasm. \"It's wonderful to see you too, Aunt Matilda,\" he choked out, trying not to press his now swollen manhood against her by turning his hips slightly. She'd insisted on him calling her 'Aunt' so he stuck to protocol. \"Let me get your bag,\" he continued, moving from her embrace and lifting the suitcase to cover his groin. She packed lightly, because she had wardrobes in each of her homes.\n\nAunt Matilda grasped his elbow and virtually snuggled against Dick's free side as they chatted on their walk to his car. He was acutely conscious of the firm tit being pressed against his arm as they walked, and he was really glad for the suitcase in his hand, even if carrying it crosswise in front of him might look strange. After holding the car door open to help her get seated, he hurried to the trunk, placed her suitcase inside, and used the cover afforded by its raised lid to ease the position of his stiffie. \n\nAunt Matilda lightly asked Dick questions on their drive home, filling in some details about Jean's situation, as well as his own. By the time they arrived at his house, she was completely up to date. She and Jean greeted each other warmly, and Dick was pleased to see the beginnings of a sparkle in his mother's eyes.\n\nThere was no need for Aunt Matilda to offer her sister-in-law condolences about her widowed status - that had been done when Dick's father had died. Therefore, she focused on the current situation, with a mind sharp as a laser beam. Jean had a love of, and a longing for, a teaching position. She already had an M.A. Degree - she just needed to fulfill the certification requirements. There was a University quite near Aunt Matilda's house that offered a 'crash course' that could furnish that need. Quickly, it was decided that Jean would move into Aunt Matilda's house, to make attendance at classes simpler, while Aunt Matilda would stay here with Dick. The two of them would get the house ready for sale, with the help of a Realtor - a close personal friend of Matilda's.\n\nFeeling better than she'd felt in a long time, Jean went into the kitchen, and, with help of Matilda, fixed them all a delicious dinner. \n\nAs Aunt Matilda sat at the dinner table, Dick literally couldn't keep his eyes off of her. His aunt was wearing a strapless sun dress that threatened to slide forward and down, baring her breasts. And to make matters worse, she met his every furtive glance with knowing smirks, and intense eye contact. She referred to him as 'Richard' when speaking to his mother about him, about how he'd grown. She asked her sister-in-law some outrageously personal questions about Richard's girlfriends and experiences, as if testing her knowledge about her son's sexual development. Poor Dick felt like he was going to cum in his pants. But what really upset and befuddled him was the fact that his mom seemed to be enjoying Aunt Matilda's flirtatious antics too, perhaps happy that her sister-in-law was bringing her son out of his recent funk.\n\nWhen they'd finished eating, Dick excused himself immediately, hoping that neither his mom nor Aunt Matilda noticed the bulge in his pants as he got up to leave the table. Back in his room, Dick could hear the two women talking and talking into the wee hours of the morning. He couldn't make out what they were saying, but it made his heart swell with happiness to hear his mother's laughter again. Thinking about Aunt Matilda made a different part of his anatomy swell, though. His hand went to his cock as his mind pulled up one of his favorite fantasies: tit-fucking Aunt Matilda. He cranked out an incredible load before falling into a very deep sleep.\n\nFRIDAY\n\nAbout noon the next day, Richard finally woke up. Glancing out of his bedroom window, he spied Aunt Matilda, in the skimpiest bikini he'd ever seen, sunbathing by the pool. She noticed his face at his window.\n\n\"Get yourself something to eat and then get your ass out here, young man,\" she called out, her voice tinged with amusement. \"Your mother didn't want to disturb your sleep, so late this morning, she headed out for my house, leaving me in charge. You've got a lot of work to do if we're ever going to get this house ready to be put on the market.\"\n\nPulling on a T-shirt and shorts, Dick wolfed down some breakfast, and hustled out to the pool.\n\n\"That was quite prompt of you,\" Aunt Matilda praised, shading her eyes from the sun. \"I'm expecting a friend of mine and her daughter to come by early next week to look at the place. She's the Real Estate agent I mentioned. When I told her about your mom's financial circumstances she agreed to forgo her commission, as a personal favor to me. After all, I send a lot of quality business her way.\"\n\nAunt Matilda made sure she had Dick's attention, and continued, \"Since she's not going to be earning a commission on this house, I told her that you'll put on a little show for the two of them - I hope you don't mind.\" She grinned. \"You can take that bewildered look off your face. Before your mom left, she showed me your secret trove of CFNM magazines, so don't pretend you don't know what I'm talking about.\"\n\nDick was dumbfounded. He had no idea that his mother knew he had those magazines, dealing with images of Clothed Females and Nude Males. His face turned scarlet, realizing that not only did his mother know about his secret fetish - she'd shared the information with Aunt Matilda. And both women were apparently taking this knowledge in stride. Neither of them berated him as a pervert or deranged.\n\nAunt Matilda handed him a piece of paper from the table next to her. \"Here's a list of things you can start on. But, before you begin, I need you to put some tanning oil on your Auntie's back and bottom.\"\n\nDick just stood there, thunderstruck, as Matilda turned over on her tummy and unhooked her top and pulled down her thong. His mind was reeling, trying to regain his mental bearings.\n\n\"I hate tan lines, Dicky, my boy, so make sure to do a thorough job on my back and particularly on my bottom.\"\n\nSwallowing so repetitively that his Adam's Apple bounced up and down in his neck, Dick poured the oil into his palm, and began rubbing it into the smooth, warm skin of her back. As his hands slid to the sides of her mid-torso, his fingertips brushed the base edges of her breasts, which were bulging sideways under the pressure of her upper body. He jerked his hands as if his fingertips had touched a flame, returning them to the center of her back. But Aunt Matilda made no comment about the contact.\n\nFinally, he'd reached the swelling of her tanned buttocks. At a loss as to what was permissible, and what was not, he oiled the tops and sides of her buttocks, avoiding the central vertical fissure, and the more intimate under-slopes. \n\n\"I said all of it, young man,\" she gently chastised him. \"I don't want unevenness in my butt crack, or the underside. Cover every bit of it. Don't be shy. Lift and push things until you get all of it. That's an order,\" she added with a trace of humor.\n\nSubconsciously letting his tongue poke out of the corner of his lip as he concentrated, Dick pressed her left butt cheek sideways and worked oil down into the valley between her cheeks. He shivered slightly as his fingertip grazed its way across her tight, puckered ass hole, his cock thrumming to life inside his shorts. He then oiled the undersides of her butt cheeks, lifting the firm tissues upwards with his palms as his fingers moved the oil into the spaces where her buttocks became her thighs. During one such pass, he could swear his fingertips must've brushed against and along her labia, but his aunt again made no comment. His dick threatened to punch a hole in his shorts at that point.\n\n\"How's that, Auntie?\" he asked with a quavering voice.\n\n\"Wonderful,\" she murmured. \"Keep an eye on your watch as you work, please. I should probably turn over in a half hour or so.\"\n\n\"Oh my god!\" he thought furiously. \"She's going to turn face up like this?\" After a moment's consideration, he realized that she could oil her front by herself, so she only wanted him to remind her to turn. He walked away, shamefaced that he'd imagined she'd want him to oil her tits and cunt. Walking was painful, until he slid his hand inside his shorts to adjust the placement of his throbbing cock. Aunt Matilda sure could get him riled up.\n\nThe first item on the list was to sweep the tennis court, and remove the debris that had built up along its fence. That task took him slightly over thirty minutes. He planned to tap his aunt on her shoulder, in case she was drowsing, so he washed his hands before approaching her.\n\nAs he tapped, he whispered, \"Auntie, time to turn over. You asked me to remind you.\"\n\nHer muffled, sleepy voice replied, \"That's right. I did. Thank you, dear.\" And, without securing her bikini top, or pulling up her bottoms, she began rolling over. Dick gasped, and quickly turned away, even though he didn't want to do it.\n\nFrom behind him, he heard Aunt Matilda say, \"What's wrong? Is my old body that hideous? You can't oil me if you've got your back turned to me.\"\n\n\"I was just giving you time to fix your bathing suit, Auntie,\" he explained.\n\n\"It's fixed now,\" she assured him. \"I like the way you put the oil on, so get busy.\"\n\nHe turned back toward her, and his eyes almost popped out of their sockets! She'd discarded her bikini entirely! \"Auntie... you're... you're...\" he gulped.\n\n\"I'm nude now, yes,\" she finished for him. \"Oh for heaven's sake, Dicky! Don't tell me you haven't ever seen female breasts before.\"\n\nHis vision focused on those very items, watching them rise and fall with her breath. \"Y... y... yes, I have,\" he stammered. \"But never yours, Auntie.\"\n\n\"And have you ever seen a pussy, or is this your first time?\" she asked.\n\nThe mention of that portion of her anatomy drew his eyes to the place where her thighs joined. Her labia were clearly in evidence, since her thighs were slightly parted. \"W... w... well,\" he said, his voice cracking with a mixture of excitement and embarrassment, \"yes, but never this clearly,\" he admitted. Indeed, his girlfriends had only let him have a glimpse, in dim rooms, up until this point of his life.\n\nNot mentioning the huge tent that Dick's cock was pitching in his shorts, Aunt Matilda said, \"OK, then. We don't seem to have a problem. There's the oil,\" she added, pointing.\n\nDick couldn't believe what he was about to do. In a half daze, he poured the tanning oil into his palm, worked it between his hands, and started rubbing it smoothly onto her tits. They seemed even bigger than he'd imagined, and were flawless and felt wonderful under his hands. Her perky nipples rose up and stroked his palms each time they went by. \"What... what more do you want me to do, Auntie?\" he asked.\n\nShe smiled. \"My tummy, pussy, and upper thighs, please.\" As if it were the most natural thing in the world.\n\nHis hands explored her taut belly, feeling the muscles ripple under his touch. He skipped over her mound and labia, oiling her thighs, uncertain as to how to do the section in between. Finally, he asked with a squeaky voice, \"Should I avoid your... your... pubic hair, Auntie?\"\n\n\"No dear, the oil is fine there as well. It helps to keep the hairs softened. Go ahead.\"\n\nDick slid his oily fingers through the finely trimmed patch of black pubic hair. Easing his way downward, he could barely believe it when his fingers ultimately skimmed along the soft, delicate folds of his aunt's pussy lips. His heart was hammering so hard and fast that he feared he was going to faint.\n\nAunt Matilda spoke softly, \"Thank you, dear. What are you going to do next?\"\n\nDick's heart seemed to climb into his throat, choking him. \"Next?\" his mind screamed. \"What does she mean?\" He seemed to have no air in his lungs to answer. He struggled to take a breath and gasped out, \"Next?\"\n\nHis aunt suppressed a giggle, since his emotions were so transparent. She took mercy on him. \"Next on your list, dear,\" she clarified.\n\n\"Oh, the list!\" he almost shouted in relief. \"Ummm, cleaning the pool skimmers, I guess, Auntie. And pruning the dead branches out of the trees.\"\n\nShe looked knowingly at his crotch, and stated, \"That sounds like a good use of your time. Maybe you can even take a dip in the water and cool off.\"\n\nHe blushed, assuming she was indirectly telling him that cold water might control his raging hard-on. He rushed off to that next task. His aunt watched him shuffle away awkwardly, and smiled. It was going to be fun playing with him, but to make his fetish dreams come true, she knew she'd have to enlist the aid of some trusted friends. After sunning her front for about half an hour, she went inside, showered, and dressed.\n\nNot long after, Dick came in, looking hot and sweaty. \"Oh my,\" his aunt muttered. \"We can't have you looking like that. Give me those sweaty clothes, since I plan to start a load of laundry. It's essential to have empty clothes hampers and clean clothes folded neatly away in drawers.\"\n\n\"OK, Auntie. I'll go to my room, change, and bring you these,\" Dick replied.\n\n\"I said nothing about your room, Dicky. Give me those clothes, here and now,\" she intoned in a manner that would brook no argument.\n\n\"But Auntie...\" he started to say.\n\n\"No arguments, young man. I told you I know about your CFNM desires. You're about to experience that for real,\" she stated. \"Get nude, now.\" She held out her hand, waiting.\n\nReluctantly, Dick pulled his soiled T-shirt up and off. He unbuckled and lowered his shorts, stepping out of them. The bending and twisting of his torso as he did this proved his undoing. His rampant cock found the vertical opening in the front of his boxers, and sprang free, poking out of the hole. Dick felt a frisson of mortification as his randiness was thus revealed. But Aunt Matilda made no comment other than, \"Underwear, too, please.\" Sheepishly, he stripped off the boxers and stood fully nude, holding his hands over his erection.\n\n\"Dicky,\" his aunt sighed. \"This isn't going to work if you're going to hide yourself like that. Put your hands at your sides. From what I just saw, you've got nothing to be ashamed about. Remember, I'm going to be clothed, and you're going to be nude. Understand?\"\n\nDick nodded slowly, and slowly let his hands go to his sides. \"Yes, Auntie. I understand.\" He couldn't believe that his CFNM fantasies might become reality. Maybe this was one of his 'wet dreams' and he'd wake up soon.\n\n\"I have to go purchase some storage boxes. While I'm gone, take a quick rinse off shower, and then start cleaning the kitchen surfaces. The cabinet doors, the walls, and the floor should be cleaned until they sparkle. Oh, and one more thing. No playing with yourself, just because you're going to be nude. You'll only cum if and when I tell you that it's permitted. Got that?\"\n\nDick's eyes bulged again. His aunt was talking about masturbation, specifically his, and forbidding it! After he'd seen all her body, and touched her in places he'd never dreamed of ever being able to touch. And now she was telling him that jacking off was forbidden. This could be agony, rather than ecstasy. She was waiting for his answer, so he said, \"Yes Auntie.\" He hoped his will power would stay strong.\n\nLater, he heard her car pulling up to the house. He'd finished the kitchen cabinets, and they were looking pretty amazing, if he said so himself. He was working on the walls, planning to do the floor last. His cock had managed to calm down somewhat during her absence. It was bobbing up and down gently against his ball sack as he vigorously scrubbed the wall with arm and torso movements. As the door opened, he proudly called over his shoulder, \"How's it looking, Auntie?\"\n\nA woman's voice answered, \"I'm not your auntie, but from where I'm standing, it's looking pretty good.\"\n\nShocked, Dick spun around to see a pretty blonde woman staring at his nude body and smirking. Aunt Matilda was walking in behind the stranger. \"I see you've met my Dicky, Felicity,\" she said.\n\n\"We haven't been formally introduced, Matilda, but he makes quite a first impression,\" her friend said.\n\n\"Let me fix that,\" Matilda said to her. \"Felicity, this is Richard, or Dick. Richard, this is my good friend Felicity.\"\n\nFelicity said, \"Very nice to meet you, Dick.\"\n\nDick expected that the shock of being naked in the presence of any strange woman would make his cock wilt like a cut flower deprived of water. To his amazement, the opposite occurred. His cock began to rise, slowly engorging as he saw the two women staring at him. His cheeks were a delicate pink as he smiled shyly, replying, \"Very happy to meet you, Ma'am.\"\n\nFelicity looked directly at his lengthening cock. \"I believe you, Dick. That's becoming quite evident, isn't it Matilda?\" she giggled.",
        "\"Indeed it is,\" Matilda agreed. Dick's cheeks turned a bit redder, but his cock was now firmly erect. \"You can continue with what you're doing, Dicky. I'm pleased you didn't try to hide yourself. I'll make us all a nice cup of tea.\"\n\nHe'd finished with the walls, and Matilda had him sit at the table with them as they sipped their tea and chatted. On the one hand, it felt quite bizarre, him sitting naked with two fully clothed woman, one on either side of him. But on the other hand, this was like a dream come true.\n\nWhen tea time was over, Dick got busy mopping the floor as the women kept their places at the table, chatting and lifting their feet when necessary. Some spots on the floor were more stubborn, and Dick had to get on his hands and knees to scrub at them. At such times, if his back was to the women, they had a view of his ass and balls. If he was sideways in relation to them, his cock poked out under his torso, jiggling with his body motions. It seemed as if the conversation between the women lagged at such moments, but it could have been his imagination. Any time he thought he felt their eyes on him, he blushed, but it was a happy blush.\n\nWhen he'd finished, Aunt Matilda praised his work. \"You've done a great job in this kitchen, Dicky. It looks brand new. This floor is now so clean, we could eat off it.\" Addressing Felicity, she said, \"I think he's earned a little reward. Do you agree?\"\n\n\"If it's what we discussed in the car on the way over here, I sure do,\" Felicity responded.\n\n\"Very well. Dicky, place yourself flat on the floor on your back. Felicity is going to do some queening with you,\" Aunt Matilda informed him.\n\nDick was not sure what that meant, but if it involved some sort of interaction with the lovely blond woman, he couldn't think of any objections. As he got down on the floor, he saw Felicity's hands go up under her skirt, and then come down again, dragging her panties down and off. His cock stiffened even more at the sight of those panties, and the thought that her pussy must now be bare.\n\nFelicity stood near Dick's head, facing his feet, and lifted her skirt as she knelt down, placing her knees near his shoulders. As she descended, he had a magnificent view of her pussy coming toward his face. \"Start licking, tonguing and sucking, Dicky,\" he heard Aunt Matilda say. Her voice was slightly muffled, since Felicity's thighs were so close to his ears. But he got the message, along with the one that followed. \"Your job is to make her cum.\"\n\nDarkness enveloped his eyes as Felicity let her skirt drape down again. As he inhaled, his nostrils were flooded with the aroma of an obviously aroused woman. His tongue came out of his mouth and encountered her salty slit. He plowed his tongue deeply along the slit until it found her hot, wet hole, and slithered up inside her. He began eating her with abandon, delighting in her taste, and the act of servicing her. Her cunt became his entire world, and he explored that world blindly with the sensors on his tongue. First drops of pussy juices formed, then a tiny trickle, then more and more fluids as Felicity rocked slowly on his face, offering different angles until she found the exact one she needed.\n\nSounds muffled as they were, he was still aware of her moans as they gradually increased in volume and frequency. He pulled his tongue tip briefly free of her tunnel, and flipped it over her clit and pee hole. She shrieked. He plunged it up into her cunt as far as it would go, and felt her begin to vibrate. He was just asking himself mentally, \"Is she going to cum?\" when her thighs pressed against the sides of his head, clenching him in place as her pussy spat her cum juices on his face! She ground herself against his lips as the orgasm claimed her body.\n\nDick kept eating her cunt, and drinking her fluids under the dark tent of her skirt, when he felt a hand grasp his cock. The sudden sensation was so exquisite that he almost choked on the cunt juice in his throat. The hand started a pumping action. Was it Felicity's hand? She was leaning over, so if she'd braced her torso with one hand, her other one could be free. Was it Aunt Matilda's hand? She could be sitting by his hips, jacking him off. Did he really care whose hand it was? No. He just didn't want it to stop.\n\nAnother hand touched his privates. This hand went to his ball sack - lifting, kneading, urging it to tighten and launch his seed. One hand pumping his cock shaft hard and fast now. Another hand playing with his balls. The taste of Felicity's juices still streaming into his mouth. Her scent everywhere. It was more than he could bear. His cock erupted, joyfully ejaculating his semen skyward. He felt it warmly splashing on his belly. He was pumped and fondled until the spurts died away. The hands were removed, and Dick panted into Felicity's pussy, catching his breath.\n\nWhen Felicity finally stood up, and Dick was again able to see, Aunt Matilda was sitting at the kitchen table, smiling at him. There was no evidence that she'd been anywhere near him, but in his heart, he felt that one of those hands had been hers. Felicity calmly put her panties back on.\n\nAunt Matilda broke the silence. \"Head for the bathroom, Dicky, so you can shower off all that cum. Be careful not to let it drip on the floor as you go. Felicity and I will follow. We want to watch you clean up.\" \n\nDick had to press his semi-limp cock up against the pool of cum on his belly, and then cup his hands around the cock head and the semen. He awkwardly rolled onto his side, up to his knees, and onto his feet as the women observed his actions. They followed as he walked quickly to the bathroom, holding the mess against him. He stepped into the shower tub, and Aunt Matilda adjusted the water temperature, before switching it to the overhead cascade.\n\nAs the water rushed over his body, Dick experienced the thrilling humiliation of washing his naked body as two fully clothed women stared at him. Careful not to be caught in the spray, the women even moved very close, and, taking the soap, lathered his privates. Felicity soaped and washed his belly and cock until they must've been squeaky clean. Dick was blissfully mortified as Aunt Matilda soaped her hand and insisted on cleaning the region of his ass hole, both externally and internally. When her finger was deep inside him, it nudged something that was so sensitive that he actually let out a 'yip' sound and jerked. He looked at her questioningly.\n\n\"Oh, that thing I just touched is your prostate gland, Dicky. Before this weekend is through, I'll show you how I can drain it.\" She grinned with anticipation. \"But for now, you can dry off and go rest up. Felicity is going to help me de-clutter the closets, the mantels, and some of the table surfaces.\"\n\n\"After I dry off, should I get dressed, Auntie?\" Dick asked.\n\n\"If you get cold, come and tell me, and I'll decide,\" she answered. \"Otherwise, I want you fully nude at all times.\" Felicity actually giggled when she heard Matilda say that.\n\nWhen Dick came downstairs, after his nap, he was amazed at the transformation in the rooms. Surfaces were visible, with the various small framed photos, trinkets, and knick-knacks removed from them. The rooms looked more spacious and inviting. \"This looks wonderful, Auntie,\" he told her, when he found her carefully folding laundry, and arranging it in dresser drawers.\n\n\"Thank you. It's all part of getting the place ready, dear,\" she related. Smiling, she stopped what she was doing and gave him a warm hug. Dick's breath seemed to catch as she pressed her clothed body against his naked one. Placing her hands on his shoulders, she looked him in the eye and asked, \"How did you feel when you found Felicity looking at you, and seeing you nude?\"\n\nDick licked his lips to moisten them, and answered, \"I was momentarily shocked, since that'd never happened to me before. But after that moment, when she didn't scream or hide her eyes, or run from the room... I... I... found it exciting, Auntie. I was very turned on.\"\n\n\"And sitting at the table with us? And scrubbing the floor on all fours?\" she asked.\n\n\"It was a bit weird, being the only person naked in the room. But whenever I thought about either of you looking at my body on display, my heart raced, and I had trouble catching my breath, I was so happy and aroused,\" he answered.\n\nAunt Matilda arched one brow and said, \"I take it you had no issue with Felicity sitting on your face, like a queen on her throne. Nor did you have a problem eating her pussy like you did.\"\n\n\"No, Auntie... except...\" he murmured.\n\n\"Except what, dear?\"\n\nDick's face and neck turned crimson as he blurted out, \"Except I wish it'd been you sitting on my face, Auntie.\"\n\nShe stroked his jaw fondly. \"That may still happen. Our time together isn't over - not by a long shot. Are there any other fantasies you've been having about me?\" she asked, grinning mischievously. \"You better fess up and tell me. Otherwise they may never come true.\"\n\nDick swallowed hard, trying to wet his suddenly bone dry throat. \"I... I...\" He couldn't believe he was going to tell her this. \"I've dreamed about... ummm... tit-fucking you, Auntie.\" The last part of his sentence was barely said above the level of a whisper, as if it was delicate and fragile, and saying it louder might shatter it.\n\nAunt Matilda didn't look shocked, or angry. Her laughter was warm and accepting. She placed her hands at the outsides of her tits and pressed inward in illustration as she said, \"You mean you want to put your cock between these two as I wrap them around it, and start pumping?\"\n\nSpeechless, he nodded.\n\n\"Well, if you're very good, and we get a lot of work done getting the house ready, that might be a nice reward... for both of us.\" She winked, and his heart skipped a beat. \"I'll let you in on some aspects of my life that are unfamiliar to you, Dicky. In France, I'm actually in charge of a CFNM group, which is why I'm so comfortable with this lifestyle. I'm also a professional masturbatrix, well regarded among my peers.\"\n\nDicky looked confused. \"What's a masturbatrix?\"\n\n\"I assume you know what a dominatrix is?\" He nodded. \"Good. A masturbatrix is a dominatrix that specializes in the masturbation of their partner or client. If she's good at it, she can keep the person at the brink of orgasm for hours. We call that 'edging' the person.\"\n\nDicky whistled a long, low note. \"Wow! Hours?\" She nodded. \"That sounds like it could be agonizing, Auntie.\"\n\n\"Perhaps,\" she agreed. \"But such sweet agony. Edging can be blissful. And that bliss... lasting hours, rather than the opposite - a quick ejaculation, and the bliss is gone.\" She took a moment of quiet reflection, then continued, \"Dicky, your fantasy involved CFNM situations, and you seem to be handling having that fantasy become a reality quite well, so I think we can move it up a notch. Let me make some phone calls, while you go out and weed the flower beds - we need to prepare them for fresh plantings.\" Dick headed outside, eager to get the house ready and perhaps receive that reward Matilda mentioned.\n\nHis aunt cooked them both a delicious, healthy dinner, complete with lots of a refreshing smoothie. Dick really needed the calories and the fluids, due to his strenuous efforts that day. After dinner, he kissed his aunt good night, and fell into bed, asleep as soon as his head touched the pillow. Subconsciously, he knew he needed to rest, because Auntie said that the next two days would probably be the busiest weekend he'd ever known.\n\nSATURDAY\n\nThe next morning, Dick was awakened by the sound of a truck pulling up to the house and unloading. He got up, peed, and washed his face to help himself become alert. Since he was still nude, following Auntie's orders, he crept downstairs and peeked out of the windows to try to see what was happening. By this time, the truck was pulling away, and Aunt Matilda was striding back into the house, smiling. \"Good morning, Dicky. I hope you're hungry, because I have breakfast all ready.\"\n\nAs they ate, Dick asked, \"What was the truck doing?\"\n\n\"Unloading things we need,\" she answered. \"Flats of flowers, lots of mulch, cleaning supplies, some paint, a bit of lumber - things like that. Oh yes, I also rented a carpet steamer.\"\n\nDick mentally groaned, thinking about all that upcoming work. His face must've signaled his dismay, because Aunt Matilda chuckled, flashing him a warm, reassuring smile. But before she could speak, they heard some cars driving up to the house.\n\n\"Ah, our reinforcements have arrived!\" Aunt Matilda laughed. \"Let's go greet them.\" Since they were going out in front of the house, she had Dick don a pair of shorts.\n\nThey went outside. There were two cars, with six people emerging. Dick recognized Felicity, holding hands with a young man, walking toward them. \"Matilda, Dick... this is William, but you can call him Bill.\" Bill looked to be a little older than Dick, and a little more muscular.\n\nThe other four people had a similar pattern - an older woman, leading a younger man. To Dick's eyes, all the women were gorgeous, not only in body form and manner of dress, but also because they seemed very self assured, and radiated confidence and control. The young men seemed pleasant, and deferential to the woman paired with them. After greetings were exchanged, Matilda led everyone into the back yard.\n\nAt some silent signal, the young men disrobed completely. Dick was caught off-guard by this action, and stood, shifting from one foot to the other. \"You too, dear,\" Aunt Matilda murmured into his ear.\n\n\"Oh my god,\" Dick thought. \"This is actually an entire CFNM group!\" He peeled off his shorts, not actually making eye contact with the watching women. If he'd looked, he might've noticed that they were all checking out each other's young men. He couldn't ignore them for long, though, because 'checking them out' also involved touch. The women were running their hands over the now nude men, checking out chests, backs, butts, and legs. They even lifted cocks and balls into their hands, kneading what they were holding, and chatting about how wonderful these things felt.\n\nThe young men were grinning, some looking a little shy, others holding themselves boldly on display. Cocks were responding to these attentions, elongating, and starting to lift into erection. Dick was scanning the scene, with all the well-dressed women, mingling with the nude men. It was like the pages in his magazines had come to life! And he was part of it! He looked at Aunt Matilda, who was watching his reaction, and mouthed the words 'thank you' very clearly. She laughed merrily and mouthed back 'you're welcome' with a dazzling smile.\n\nGetting things organized, Aunt Matilda started assigning tasks. Soon, nude young men were in action, one mowing the lawn, one trimming hedges, and one spreading mulch. She had Dick fetch a tall ladder, and assigned him the task of washing the upper windows. Naked, he ascended the ladder, and leaned out to work. One of the clothed women was always present at the bottom of the ladder, steadying it for him. As she looked up to watch him work, he couldn't help but imagine what a view they were getting of his crotch and swollen manhood. He blushed and grinned, and the time passed quickly.\n\nHedges and lawn done, the three other men all turned to planting flowers and spreading mulch, even around the front of the house, since it was set back from the street so far that there was little chance that anyone driving by would see them. Aunt Matilda took Dick into the kitchen, and gave him the job of serving the women refreshments on a large silver tray. What made this task very kinky was that she told him to hold the tray low down by his waist, with his ball sack resting on its surface, and his rampant cock on full display.\n\nAs he served the refreshments, like as not the woman involved would give his cock and/or balls a gentle caress before picking up the food and drink. When the tray was empty except for his cock and balls, Aunt Matilda had him visit each woman a second time. It was as if he was serving them his manhood, and his heart was thumping hard and fast in his chest, because now the women handled his cock and balls with more intent. Two of them even leaned over the tray and took the head of his cock in their mouth, sucking at his dribbling precum.\n\nFelicity spoke up. \"What do you think, Matilda? Should we put Dicky on the platform, while the other young men have their refreshments?\"\n\n\"Excellent suggestion, Felicity,\" Matilda agreed. Before sitting them down with their refreshments, Matilda had Bill and another nude male - Mason - set up two step ladders, with a plank threaded between their steps at about chest height. This plank had a 5\" to 6\" diameter hole in it. She had Dick climb up and lie face down on the plank, with his cock and balls dangling through the hole. If Dick felt weird with his manhood poking through that hole, he felt even more weird when Aunt Matilda had him place his hands in the small of his back, so she could zip-tie his wrists together.\n\nHelpless, Dick turned his head to watch the women approach one by one and duck out of his sight under the plank. They might've been out of sight, but he knew exactly where they were, because they were playing with his very vulnerable and available sexual equipment. Everyone was watching, women and men alike, as the women amused themselves. \n\nDick had no way to predict what sensations they would create. His cock and balls were licked, scratched, slapped, sucked, twisted, pumped, and nibbled on. For the next hour or so, Dick learned the blissful agony of edging. Aunt Matilda saw to his nourishment, feeding him bites of a sandwich, and letting him sip through a long straw. It was a strange new experience for Dick indeed - eating and drinking with his hands tied behind him and women taking turns playing with his dangling equipment. His cock drooled out a lot of precum, but he wasn't taken to orgasm.\n\nAfter Aunt Matilda released him from the board, there was a pool party, since the outside work was completed. The women all got naked so they could catch some sun, and of course their young men had to thoroughly cover their lush forms with tanning oil, making sure that every square inch was covered. The men then were told to go swimming, because the women relished seeing their trim, nude bodies slicing through the water. The men knew they were on display, and even the cool water didn't diminish their ardor - all swam with erections.\n\n\"Everyone swim on your backs for a moment,\" Aunt Matilda called out. As the men swam by, she remarked, \"Doesn't that look like a fleet of submarines with fleshy periscopes?\" The rest of the women laughed politely, but she did have a point. After the pool party, everyone dressed and left, promising to return the next morning for more work, fun, and games.\n\nAfter dinner, Dick had gotten so used to being nude around Aunt Matilda that his cock finally calmed down. She was quite pleased to see him limp, because she produced a cock cage, and locked his deflated member inside it. Her actions in handling him did cause some stimulation, but as his cock tried to swell, the cage prevented it. \"You'll sleep in this tonight, dear,\" she told him. \"I want all your fluids to be at their peak tomorrow.\" He fell asleep wondering what was in store for him.\n\nSUNDAY\n\nTwo cars came up the driveway soon after Dick and Aunt Matilda finished their breakfast. The six people streamed into the house, and the young men again stripped. Dick was still wearing his cock cage, and quickly became the center of attention. He blushed and blushed. It was one thing to be naked when three other guys were also naked. It was a completely different experience being the only naked man whose cock was caged.\n\nBefore the work began, Aunt Matilda announced, \"I've decided we'll have one of our special drawings today.\" She held up a small key. \"The winner gets the use of this key. I've put your names in this hat, which I'll now shake. I think it only fitting that Dicky draw the name.\" The women smiled and nodded their agreement. ",
        "Dick reached blindly into the hat as his aunt held it higher than his face. He felt slips of paper inside it, and grabbed one. He pulled it out, and read it, saying, \"The name on this paper is Zoe.\"\n\nThe vivacious auburn-haired woman clapped her hands and cried out, \"Yayy! That's me! I won!\" She accepted the key from Matilda as if she'd won an Oscar. She beckoned Dick with her finger, saying, \"Come here Dicky, you sweet boy.\"\n\nAs he stepped in front of her, all eyes in the room watched as she used the key to unlock the cock cage and remove it. Her warm hand closed around the shrunken cock, completely hiding it from sight. Dick sighed, both from having the cage removed, and from the lovely feel of that hand engulfing his cock. Blood started entering it, and its tumescence grew as Zoe held it. Soon the head of his cock was poking out of her palm, next to her little finger.\n\n\"Now that you've won the use of his cock, what do you plan to do with it?\" Matilda asked her.\n\nHearing that, Dick sucked in a breath, as his heart accelerated. \"This lovely woman has won the 'use' of my cock? Oh fuck!\" he thought. His mind reeled happily at ideas of what she might do.\n\nZoe was tapping her lip with the index finger of her free hand while she pondered. Her hand wrapped around his cock was slowly pumping its shaft. Finally, she gave a brief, tinkling laugh. \"I know!\" She let go of his cock. \"Go fetch a towel, Dicky,\" she commanded. He left quickly to do her bidding, wondering why she wanted a towel, but figuring he'd learn soon enough. While he was gone, Zoe slipped off her shoes, and tucked them out of the way beside her chair.\n\nWhen Dick handed her the towel she'd requested, she spread it out on the floor beneath her feet. \"Dicky dear,\" she began, \"the skin on my feet seems awfully dry.\" She displayed her feet, which Dick felt, at that moment, were the most gorgeous feet he'd ever seen. \"I'd like you to anoint them with your special lotion, and then rub it all in,\" Zoe explained. She grinned into his shocked expression.\n\nDick was torn. She was obviously telling him to masturbate. To jack off onto her feet. With six other people watching the two of them. His mind might've been wrestling with this dilemma, but his cock was turgid and thrumming, as if it had a mind of its own.\n\nZoe smiled and added, \"Maybe you need a little more incentive, Dicky.\" With that, she tugged down the top of her dress and scooped one of her breasts free. That luscious globe of flesh drew Dick's eyes like a magnet. Her darkened areola was crinkled with desire, thrusting her nipple forward into full erection. Her breast seemed to vibrate gently with each pulse of her heart.\n\nEyes fastened on Zoe's display, Dick grabbed his cock, ignoring everyone else in the room, and started pumping. His pent-up load began churning inside his groin, aching for release. Playfully, Zoe flipped her fingers at the underside of her breast, making it jiggle and wobble. Dick groaned loudly in response. His glans was so swollen that onlookers were breathing faster and faster as they watched, focused on that slit in its head, were precum was emerging and streaming along the lower surface of the shaft. \n\nDick was now bucking his hips, simulating the act of penetration. He glanced down to aim his cock at her feet, then looked into her smiling face, seeing her nodding encouragement. When his gaze returned to her naked tit, it felt like some switch was thrown in his depths. He came. His cock erupted, spewing its white, sticky load all over her feet. People heard Zoe gasp as she felt the hot fluid strike her body. Dick kept pumping, until he could no longer shoot any more semen.\n\nSweat was streaming into his eyes as, mindful of her command, he reached out to Zoe's feet and started rubbing his ejaculate into her soft, supple skin. All around the room, eyes were gleaming, watching him. He worked his seminal fluid into her skin from her ankles to her toes, covering both the tops and soles of her feet. He even pressed fluids into the tiny spaces between her delicate toes. It became obvious that he'd lost himself in the worship of those feet. Aunt Matilda smiled her approval.\n\nZoe asked Matilda, \"May I put this cock cage on my boy for a while?\" At Matilda's nod of permission, Zoe said, \"Come here, Martin.\" Martin stood in front of her, with his hands submissively behind his back as she did something with her hand, and perhaps her fingernails, that made him wince, and his cock deflated in response. Zoe stuffed his dwindling cock into the cage, and locked it. Martin flushed with shame at being singled out for this, and being scrutinized so closely. It was a good thing he craved being humiliated by his Mistress, because she was very good at finding ways to do it.\n\nDick was allowed to rest after that, cuddled by the four women, as two of the young men began moving furniture around, and Martin worked the carpet steamer, his caged sexual equipment glittering in the room lights, swinging forward and back with his arm movements. After that was done, all four guys, Dick included, bent over and spread their ass cheeks in front of their clothed partner, who then inserted a butt plug. This was a new experience for Dick, but apparently not for the other three men. Martin briefly became the center of attention, because Zoe had brought an inflatable butt plug. She showed the other women how large it was capable of inflating. Deflating it again, she shoved it up his ass, and inflated it fully, making him grunt and cry out, followed by his general moaning, groaning, and panting.\n\nStill wearing their butt plugs, one of them was assigned the task of using paint to touch up small areas of window sills, while another cleaned all the mirrors in the house. Martin had to use a plane to fix a sticky door jam, observed by two of the women, who loved hearing his groans with every movement of his body. Dick's cock had recovered and again stiffened, so Aunt Matilda approached him with two feather dusters. She put one into his hand, but the other one she attached to his erection with a couple of wide rubber bands. Aunt Matilda said, \"Dicky, dust the various surfaces and shelves. Do the higher ones with your hand duster, but we want to see you dusting the lower surfaces by flicking that duster on your cock back and forth over them.\"\n\nDick turned red with thrilled humiliation as the women laughed each time he pivoted his hips, waggling his cock side to side to dust things waist high and lower. They followed him around, watching as he gradually got the hang of it, and was soon dusting with greater expertise. The rubber bands helped keep his cock nice and rigid the entire time.\n\nMatilda did a quick tour of the house, checking things off her checklist, and reported that all the work was complete. She thanked the women for the use of their young men, and the young men for their efforts, letting each one kiss the breast that she bared for them. It was certainly time for refreshments now. This time the clothed women sat at the dining table, and their nude young men sat on the floor next to their leg. It was quite a sight, especially because the women pulled up their skirt on that side, baring their body from foot to hip. Dick was a little shocked that none of the women seemed to be wearing panties, based on the amount of flesh on display. The guys were permitted, even encouraged, to rub their cheeks on the exposed thigh, and give tender kisses to the bare skin.\n\nAbout one half hour after eating, people had to use the toilet, as is often the case. The women had to remove the butt plugs from their submissives, of course. Martin actually shrieked as Zoe pulled it free before deflating it! The women also took that opportunity to give their guys cleaning enemas after they'd defecated. Matilda had informed them of her plans for the afternoon, and the males having clean colons was important. When everyone was clean and washed, they reassembled out on the back lawn.\n\nThe men were placed on their hands and knees, with their head and shoulders down on the soft, warm grass, and their asses held up high. Dick was 'up front' - sort of where a teacher's desk would be if it were a classroom, and sideways to the rest of the classroom. The other three men were also sideways, placed more in the position of where student seats would be. This was an appropriate arrangement, because Aunt Matilda was going to give instructions on prostate draining to the other women.\n\nAll the women turned out to be right-handed, so they each snapped a latex glove onto that hand. Matilda distributed a water-based lubricant, explaining, \"You shouldn't use oil-based lubricants with latex gloves, since oil can break down the latex. Now, liberally apply the lube to their ass hole, and also to your index finger. As you do so, start working the lube in through their anal rings - the more lube, the better. Gentlemen, relax those ass holes as much as you can. It'll feel much better if you do. They're already stretched out somewhat from the butt plugs, which is why you wore them this morning.\"\n\nThe immediate vicinity was soon filled with the sounds of grunts, sighs, and gasps as the fingers entered the uplifted rectums. The women were watching Matilda, and mimicking her actions. She then told them, \"See how I'm curving my finger forward toward his cock, as I press it deeper into his butt hole? If you feel carefully, you'll find the prostate. It feels sort of like a ripe plum - firm, but also a bit squishy. When you find that, carefully press and rub on it.\"\n\nZoe's partner Martin yipped suddenly. \"A little less pressure, Zoe,\" Matilda advised. \"It doesn't take much pressure to start milking it. Just a repetition of strokes.\" She suspected that Zoe actually enjoyed tormenting Martin as much as he enjoyed being tormented. They seemed well matched. \n\nMatilda looked beneath Dick. \"Oooo! See? See that stream of fluid oozing from his dick? It's usually more gelatinous than precum and creamy looking, as you can see. It usually stays as a string, rather than dripping. And notice we don't have to stimulate their cocks to get it flowing. The cocks could be caged, and we could still drain their prostates. I see all of you have the knack, because all four cocks are now drooling. Congratulations! Now keep up that gentle finger action, because we're going to try to give them prostate orgasms. Don't expect them to ejaculate during this. This is kind of a 'dry' orgasm for the males. Make sure they know to tell you when they're cumming.\" \n\nThe flow of prostate fluids diminished. Dick was feeling a very strange sensation, originating between his scrotum and his anus, but deep. It started like a spark of energy, and then built, and built, until there was an internal globe of energy that demanded release! \"Oh fuck, Auntie! I'm cumming!\" he groaned, and his body shook, but there was no massive spurt from his cock. Smiling, his aunt kept her finger in motion, and minutes later, Dick cried out, \"Oh my god! Again! I'm cumming again! Eeeeee!\" Once again, his body shook in orgasm, without a spate of ejaculate. \n\nAuntie gently slipped her finger out, saying, \"Rest now, Dicky. You can roll onto your back, if you'd like.\" She went around to the other women, coaching and instructing. Ultimately, all the males except Martin had orgasms like Dick had experienced. Zoe was determined to try again in the near future, but for now, she placed Martin on his back, and slapped his cock, while Matilda massaged his ball sack. Remarkably, the slapping did the trick. Martin's reddened cock shot a nice load of his semen onto his chest. He wore that load proudly as the men pulled on shorts, and followed the women to the cars for their departure. \n\nMONDAY\n\nThe Realtor woman, Beth, and her daughter Janet weren't due until Tuesday, and all the house preparations were finished, so Aunt Matilda declared that today, Monday, was a vacation day. She and Dick spent the day naked together, and most of it outdoors. They went skinny-dipping in the pool, and frolicked innocently in its cool waters. When they got out, Dick was called upon to towel Auntie dry before drying himself. Then he carefully, lovingly, and thoroughly covered her everywhere with the tanning oil. To his delight, she oiled him just as thoroughly, which resulted in him achieving a throbbing erection.\n\nThis gave his aunt a chance to demonstrate her abilities as a masturbatrix. She brought Dick to the brink of orgasm, using mainly her hands, but her mouth and feet also came into play. She skillfully kept him at the brink, easing off judiciously, and then bringing him close again - for hours. Dick experienced first hand the delightful agony of that sensation of almost cumming... almost cumming... almost cumming. He thought he'd go out of his mind if he didn't cum, and yet, he also actually didn't want to cum at all - he wanted the sensations to go on and on.\n\nAuntie broke off this demonstration because they'd sunned long enough, and it was time to eat lunch. Dick's erection doggedly refused to go away. As he sat at the table, more than once he felt the head of his dick bumping its underside. Aunt Matilda grinned at him knowingly, between bites of her food. Dick blushed with happiness, just from being in her presence. Since she was unclothed, her lovely tits were fully on display, which was another dream come true for him.\n\nAfter lunch, Aunt Matilda demanded that they take a nap. Dick wasn't thrilled with the idea, until he learned that she meant napping together. They stretched out on his bed, with her arm around him as he snuggled against her side, embracing her. His head was actually pillowed on her breast, and he wondered if he'd ever be able to nod off, with the feel of that soft, warm globe against his cheek, and her scent in his nostrils. But sleep he did, tuckered out from all he'd been through.\n\nAn hour or two later, Dick awakened from a hazy, confusing, but definitely erotic and sexy dream. The reason for that dream became apparent, because his aunt was once again teasing his manhood into a rampant erection. He turned his head slightly to kiss her breast in gratitude, and ended up moaning in a muffled fashion into her flesh. She had magical hands - he was sure of it.\n\n\"OK, my dear,\" Aunt Matilda said softly. \"Get up and come with me.\" She led him back outside to sit together in a patch of grass shaded by a tall tree. She'd brought along a bottle of the same lubricant she'd used during his prostate massage. Pouring some into her hand, she spread it into the valley between her tits, until the skin there gleamed wetly. \"It's time for your reward, Dicky. With all that hard work, you've earned it.\"\n\nDick's eyelids flew up so hard that they disappeared and his eyes now looked like they were bulging from their sockets. \"You mean...\" he gasped out, and swallowed hard.\n\n\"Yes, dear. Straddle me, and give me a really good tit-fucking,\" she whispered erotically.\n\nShe rested back on the grass as he knelt on either side of her chest and angled his hips so that his cock rested along her breastbone. Obligingly, she pressed the sides of her tit flesh until her nipples were only a couple of inches apart, and his cock was fully engulfed. Barely believing that this was actually happening, Dick began moving his hips forward and back with tiny thrusts, feeling his cock sliding in the silky sleeve her tits had formed. It felt completely different than fucking a pussy. He began fucking harder and faster, with the head of his dick peeking out of the top of her tit tunnel, near her neck.\n\nAunt Matilda tipped her chin down enough to give Dick's cock head several kisses, each time it thrust into view. Tipping her head back, so she could smile up at him, she said, \"This is your reward, Dicky. So you can do this at your own pace, either cumming fast, or making it last.\"\n\nHe got the subtle hint. He'd dreamed about this for so long that now that it was happening, he didn't want to hurry it. He slowed the speed of his thrusts, but still used long strokes. Aunt Matilda made approving sounds of 'ooo' and 'ahh' as he found a steady rhythm. He looked down at his beautiful aunt, noting the radiant expression on her face. She was enjoying this. Her perky, roseate nipples had risen up high and proud, pressed upward by their darker encircling areolae, which were crinkled with desire. He felt his ball sack, heavy with his seed, rubbing gently on her upper belly and chest as he pumped his hips. The warm summer air washed over their exposed flesh, caressing their entire bodies.\n\nIt was perfect. Better than Dick had imagined.\n\nThen Aunt Matilda made it even better, by asking, \"When you cum, Dicky, do you want to aim your load into my mouth? I'd love to taste it, but if you'd rather spray it on my face or tits, it's your choice, dear.\"\n\nThe extreme lewdness of hearing her ask that question, and make that statement, pushed him past the point of no return. \"Please open your mouth, Auntie!\" he cried out. \"I'm gonna cum!\" He gave several final strokes between the warm pillows of her pressing tits, and then plowed his dick forward, with its head less than an inch from her now open mouth. He groaned with delight as jet after jet of his creamy cum shot from his dick and disappeared into her mouth. She extended her tongue as the spurts lessened, catching the final dribbles on it. \n\nTipping her head to be certain that Dick had a clear view of the inside of her mouth, filled with his semen, Aunt Matilda then closed her lips. She swished the fluid back and forth several times, getting a thorough taste of it, and then swallowed. She showed Dick her empty mouth, and then grinned. \"Was your reward worth it, my dear?\" she asked.\n\nSpeechless with joy, Dick bent down and kissed her on her lips passionately, conveying his love and admiration for her. She kissed him back tenderly, and opened her mouth slightly, to let him taste himself - a gustatory confirmation that her mouth had been filled with his seed.\n\nAfter such an interesting day, Aunt Matilda didn't feel like cooking, so they dressed and went out to dinner. In that dim restaurant lighting, she had Dick sit next to her at a table whose bench was backed against the wall. The sparkling white tablecloth draped over their laps, so, during dinner, Aunt Matilda reached over, opened Dick's pants, and freed his cock. The innocent expression on her elegant face as she surreptitiously played with him was priceless. By the time dessert arrived, Dick was about to peak, so his aunt wrapped his cock in the edge of the tablecloth, and let him spew into that. When his cock stopped jerking and rippling, she wiped it with the tablecloth, and tucked it back into his pants. Dick wondered what someone would think when they removed the tablecloth. Would it still be wet? Would it still smell as strongly as now? The tangy scent of semen is unmistakable, and the air around them seemed filled with that scent.\n\nThere was no hue and cry as they paid and left, however. Dick made a mental note to not visit that same restaurant for a long time, just in case. They arrived home, uneventfully. Rather sleepy, Dick kissed his aunt good night and collapsed into his bed. Wearing clothes now seemed almost foreign to him, so he groggily yanked them off and tossed them aside.\n\nTUESDAY\n\nDick arrived at the breakfast table freshly showered, with his hair still damp. He'd toweled off, but not dressed, waiting to see what Aunt Matilda might desire him to do. She desired for him to eat a nutritious breakfast, and then rest on one of the pool chairs.\n\nLater, he was half dozing when he heard his aunt speak, \"Beth, Janet... this is my nephew, Dick.\" After a brief pause, she said, \"Dick, please say hello to Beth, and her daughter Janet.\" This shocked Dick fully awake! He hadn't even heard their car drive up! His face turned a light shade of scarlet as his hands moved to hide his cock and balls, as he stood up.",
        "\"Dick, dear, it's no use to hide things. They've both already seen everything you have. We've been standing here for five minutes, looking at you, before I spoke,\" his aunt informed him.\n\nSheepishly, he removed his hands and looked at the two women, both blondes with golden highlights in their hair. The mother, Beth, had hazel eyes, and her daughter, Janet, had piercing blue eyes. Janet looked to be only a year of two younger than he was. Unbidden, his cock stirred as he tried to steal a quick look at their bodies.\n\nBeth laughed. \"I see what you mean, Matilda. If you keep a man naked, he can't conceal his interest very well, can he?\" She was obviously staring at his traitorous, slowly elongating cock.\n\n\"It's fun to watch it grow, isn't it, Mom?\" Janet asked, giggling. She was wearing only a thin T-shirt and a very short skirt, so the hardening of her nipples was quite as obvious as the engorgement of his cock, in his opinion.\n\n\"Almost as much fun as playing with it, sweetie,\" her mother agreed.\n\nDick immediately had the mental image of either or both of them playing with his cock, and he felt it harden until it felt like a steel rod sprouting from his pubic hair.\n\nAunt Matilda told him, \"I'm going to take Beth on a house walk-through, so she can help plan the sale. I also need to set up the 'little show' I promised them. Meanwhile, Dicky, fetch two tennis racquets and take Janet over to the tennis court. The two of you can play until Beth and I are through.\"\n\n\"P... p... play tennis naked, Auntie?\" Dick queried, stammering and blushing.\n\n\"Of course not,\" she replied with a grin. \"Put on tennis shoes.\" The two visitors laughed gaily, hearing that.\n\nDick soon learned that trying to play tennis with an unsecured erection created a handicap. If he stooped and shifted side to side rapidly, preparing to leap quickly in either direction, his swollen penis demonstrated inertia, lagging behind his movements, throwing him off balance. If he bounced up and down, his cock continued bobbing up and down, long after he'd stopped. And as he ran, often as not his ball sack got caught and tugged painfully between his muscular thighs.\n\nOn the other hand, Janet's game seemed 'off' as well, since she had bouts of laughter and giggles, watching the antics being performed by Dick's sexual equipment. Needless to say, they actually had a lot of fun, especially when Janet complained that she was getting too hot and made a show of removing her panties and tossing them aside. After that, if her skirt flew up, he got a flash of her pussy. As if that wasn't enough, sometimes between serves Janet would lift the hem of her T-shirt, flapping it to cool her torso, 'accidentally' flipping it high enough to give him a glimpse of her tits.\n\n\"OK, Dick. We're ready. Come over to the house,\" Aunt Matilda called out.\n\nAs Dick and Janet reached Aunt Matilda, she gave them fluffy towels to wipe away their sweat. Dick watched her make a beckoning sign to the house, and two naked men emerged. They looked comfortable being naked around clothed women, so Dick assumed they were familiar with the CFNM scene, too.\n\n\"I borrowed these two men from their Dominants, for the purpose of our show, Beth. We're going to have a cum shooting contest, for distance. I'll be using Dicky, of course. You and Janet can choose between these two young men. You can make them cum by any means that you wish.\"\n\nThe naked men displayed huge smiles, since it was clear that the contest involved them 'getting their rocks off' which was always a joy. Both of the women were gorgeous, so cumming for them would be especially enjoyable. They stood up straight, hands behind their backs, even pressing their hips forward, to better display their equipment.\n\n\"It's nice of you to provide a male for each of us,\" Beth chuckled. \"It seems fitting that you didn't introduce them by name, emphasizing that they're just playthings for this contest. And we can get them off any way we choose, you say. Hmmm.\" She inspected both guys, running her hands over their muscles, lifting their ball sacks, and hefting their cocks. She seemed somewhat attracted to the dark-haired one, but she said, \"Janet, I'll let you pick first.\"\n\nJanet moved in close, bringing her face so near their cocks when she inspected them that in spite of the warm day, they could clearly feel her warm breath each time she exhaled. Their cocks stiffened even more, feeling those erotic puffs of air. Perhaps that was her intent. She spent all her examination time only judging their genitalia. For some reason, she also spread their ass cheeks, and gently scratched their anal rings with her fingernail, watching their reaction. Finally she lightly slapped the ass of the sandy-haired man, saying, \"I choose this one.\"\n\nBeth looked pleased, since she was left with the dark-haired one anyway.\n\nAunt Matilda said, \"Beth, you can go first. I've drawn a chalk line on the cement walkway around the edge of the pool. It should be easiest to have the contest there, both for the measuring and for clean-up afterward. Here's a tape measure we can use.\" She noticed Janet was biting her lip, apparently wanting to ask something. \"Yes, dear? What is it?\" Matilda asked her.\n\nJanet looked slightly abashed to be asking this but she giggled and replied, \"Can I measure their dicks before we start?\"\n\n\"Sure. I don't think they'll mind,\" Matilda replied, grinning, as she handed Janet the tape measure. She was fairly certain that Janet just wanted the chance to fondle all three cocks. The young girl made a great show of laying the tape along the top of each cock, pressing and holding its end firmly against the place where the cock sprouted from his pelvis. Then she curled her fingers underneath its shaft, and placed her thumb onto the tape, and slowly dragged her hand from the cock base to its very tip. The women paid no attention to the actual measurements - each cock was at least seven inches long anyway - what they enjoyed seeing was that each time Janet did this, the cock in question oozed out a clear drop of precum. The guys were primed for the contest.\n\nBeth took hold of the dark-haired guy's cock and pulled him to the chalk line, getting him so his toes just touched it. \"Right here?\" she asked Matilda, who nodded. \"I guess I'm a traditionalist,\" she laughed, and started pumping the cock she was holding. \"Nothing fancy. I'll just jack him off.\"\n\nShe pumped and pumped. The naked man planted his hands on his ass cheeks, and pushed his hips forward, his cock poking out even more. Beth changed hands, pumped harder for a while, then changed hands again. The guy was shaking and puffing. He groaned out a sound that resembled the word 'almost' so Beth angled his cock up at about a 45 degree angle just as it spurted. His seed floated through the air, and splatted on the paving in front of him.\n\nMatilda and Janet measured the farthest splotch, and recorded 8' 3\" as the maximum distance. \"Not bad, Mom,\" Janet said, with just the tiniest smidgen of condescension in her voice, as Dick was sent to wipe away the semen with paper towels.\n\nBeth laughed. \"You sound pretty cocky, daughter. Pun intended. You think you can do better?\"\n\n\"We were told we could get our guy off any way we wished, so I do have a plan,\" Janet agreed. \"I'm going to try something one of my boyfriends taught me.\" She reached into her purse, and pulled out a small bullet vibrator. Wetting it with her saliva, she had her assigned submissive bend over and spread his ass cheeks slightly. Jacking his cock to distract him, she deftly inserted the tip of the vibrator deep into his ass hole. \"This should buzz his prostate gland nicely,\" she explained. \"That's part of the trick.\"\n\nShe led him over to the chalk line, but had him stand with his thighs apart. Next, she sat down on the pavement, entering the space between his thighs from the front, so her face ended up about an inch from his manhood. \"Someone will have to let me know when's he's shot his load,\" she told Matilda and her mom. \"I won't be able to see much like this.\" She blindly switch on the vibrator, and started slowly moving it in and out of his ass hole. Meanwhile her other hand grasped his dick, which was practically laying on top of her head, and squeezed and fondled it. Finally, she mashed her lips against his ball sack, sucking in a testicle and humming, while her tongue darted out and licked, prodded and pressed the space between his scrotum and his anus.\n\nThe other two women watched, mouths agape, as Janet worked her magic. Back arched, the guy's hands flew up to his head as he groaned loudly, his sounds competing with the hum in Janet's throat and the buzz of the vibrator that was tickling his prostate. Soon his neck, chest, and armpits were trickling with sweat, as his muscles bunched and contracted from the intensity of the stimulation. Without warning, his cock spat a glob of semen, then another, and another - each time his body jerked. His final release of fluid merely dribbled down the back of Janet's head.\n\n\"I think you can tell he's had his climax, Janet,\" Matilda chuckled. \"That was very impressive.\"\n\nThe daughter came out from under the guy's crotch, easing the vibrator out of his ass. \"It gives me a crick in my neck, so I hope it was worth it,\" she mock complained. She watched as Matilda and her mom stretched out the tape.\n\n\"That flew 9' 8\" - you're in the lead, you cocky little bitch,\" Beth told her, good-naturedly.\n\n\"Let's see if I can beat that,\" Matilda stated. \"Dicky, once you've wiped the landing area clean, come over here. It's our turn.\"\n\nFinishing his cleaning job, Dick stepped up to the chalk line. His aunt sat down on the pavement, facing him from the side. She reached into her purse, and pulled out an electric toothbrush. Ignoring the gasps of disbelief coming from the other women, she told him, \"Dicky, it's very important that we communicate for this. You'll have to tell me when you're getting that feeling that you're about to cum. Understand?\" He nodded. \"Good. Stand with your feet slightly apart.\"\n\nOnce Dick was positioned, his aunt first made a ring between her thumb and index finger, using them to encircle the root of his scrotal sac. She pulled down as far as she could, stretching his balls down away from his torso.\n\n\"Oh, I see,\" Beth breathed. \"You're using the technique that prevents premature ejaculation.\"\n\n\"Yes, I am,\" Matilda agreed. \"And the bristles on this toothbrush are very soft.\" She switched it on, and its head began vibrating like crazy! But she didn't touch the bristle side to him at first. She pressed the back of its head against the underside of his cock from its head to its base, across his ball sack, and then back up his cock to its head again. She kept buzzing her way up and down the underside of his cock, and also across his scrotum, pulled taut by her fingers.\n\nThe moment he felt that intense stimulation, Dick wanted to go up onto his tiptoes, but couldn't, since his aunt was virtually pinning him to the ground via her tug on his testicles. He gasped out, \"Oh my god... oh my god... that's...\" before he ran out of words, and concentrated on breathing. After only a few minutes of this treatment, he told his aunt, \"I need to cum, Auntie! I feel it! I'm straining inside, and my muscles are rippling, but I can't spurt!\"\n\nShe smiled knowingly. \"Let the feeling build even more, dear.\" She continued running her vibrating wand the length of his cock, stopping now and then to press it right over the sensitive slit in his swollen glans.\n\n\"Ohhhh, fuck! Fuck, fuck, fuck! I need to cum! Please let me cum!\" he moaned. Beth and Janet watched, spellbound by this scenario. They could tell the Dick's testicles were straining upward trying to approach his groin, but being doggedly held down by Matilda's hand. \n\nDick was now uttering incoherent syllables, and just went it seemed he'd go out of his mind, his aunt swiveled the toothbrush head, bristles up, and extended two fingers forward from the hand holding it. Her fingers went out over the top of his cock crown, where the glans meets the shaft. She pushed down, so the cock was now pointing toward the ground at about a 30 degree downward angle. This also pressed the maddening, vibrating soft bristles directly on his cock's frenulum - its most sensitive part. \n\nDick began to shriek as the overwhelming stimulation raced through his body. At that precise moment, his aunt not only released his balls - she pressed then up against his crotch. His cock immediately began spewing a stream of semen, the first blast still pointing downward toward the pavement - so much was spewing that it looked somewhat like he was pissing his cum. But his aunt also released his cock crown, and re-positioned the toothbrush head to the skin between his balls and anus. Dick's cock sprang skyward, whipping the semen stream into an upward arc. The white rope of his emission was flung high... and far! It hit the pavement with a heavy 'plop' sound, and danced on the warm surface.\n\nDick was hyperventilating, standing on wobbly knees as his aunt switched off the toothbrush, and Janet and Beth stretched out the tape measure. \"Holy shit!\" Janet cried out. \"The farthest glop is here at 12' 11\" - that's amazing! Everyone went inside for refreshments as they chatted merrily about what a fun competition that turned out to be.\n\nIn summary, Beth felt well compensated by that 'show' and managed to get the asking price for the house in a short period of time. Jean got her degree, a nice job, and a lovely, much more manageable house. Dick got three of his fantasies to come true: tit-fucking Aunt Matilda, taking part in CFNM activities, and getting a loan from his aunt so he could attend college. When he asked how he could repay the loan, she chucked him under the chin, got a salacious look in her eye, and told him they'd work something out. Janet got a date with Dick, because she wanted to find out what it felt like for that cock of his to blast off when it was inside her. And before heading back to France, Aunt Matilda muttered something to Jean and Dick about teaching her real niece Sara about the CFNM life style, and 'borrowing' Dick for that instruction. Both Jean and her son grinned their approval."
    ],
    "authorname": "mollycactus",
    "tags": [
        "college",
        "cfnm",
        "older woman",
        "cum",
        "cunnilingus",
        "male masturbation",
        "younger man",
        "vibrator",
        "outdoors",
        "nude"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/aunt-matilda-to-the-rescue"
}