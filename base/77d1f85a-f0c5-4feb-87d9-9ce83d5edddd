{
    "title": "Devonny Ch. 11",
    "pages": [
        "**Thank you to all my readers for your patience! I just finished up finals and have a couple weeks off before summer session for my MA starts. Wedding planning is also progressing though I feel the stress my make my head explode. Here's the next chapter for Devonny.It's a bit shorter than anticipated but it was the best point to split the chapters. I'm already at work on the next! Also sorry, I disabled anonymous email feedback. I had an asshat emailing me telling me that I suck and should stop writing because I don't care about my fans which is totally false. I love to write but unfortunately it has to come after school, work and my fianc\u00e9 (who is all kinds of encouraging). \n\nLOVE you all!\" \n\nXXkisskiss\n\nDusky** \n\n*\n\nDevonny smiled and nodded courteously in the Madison gardens, accepting congratulations and best wishes on behalf of her brother. \n\nPhillip Madison had announced the betrothal of his daughter Elizabeth Lillian Madison to Prince Michael Adams. It was going to be the wedding of the season most likely and the excitement was near palpable. \n\nThe Madison garden was beautiful in high summer and vibrant with blooms and greenery. The air was sweet and fragrant. It was the perfect setting for such an announcement. The Madison's guests milled about dressed in their summer finery; the men discarding their cravats for collars and bows, the women in expensive white linen mull. \n\nDevonny tilted her parasol against the sun's rays. Her own linen mull gown was embellished by white cotton embroidery and handmade linen bobbin laces. A wide buttery yellow sash was the only color of her dress and featured a large bow, the ends trailing down the back of the gown. \n\n\"And then there was one.\" Teddy Edmondson came to stand beside her, his lips quirking into a bemused smile. \n\nDevonny glanced at him, amused but nonplussed. \"One what?\" \n\nTeddy grinned. \"One captivating Adams sibling ripe for the plucking.\" \n\nDevonny smirked at his observation and Teddy handed her a crystal punch glass. \n\n\"So what do you think?\" Teddy queried, gazing about. \n\n\"Of?\" Devonny ventured, brows lifting in question. \n\n\"Of all this?\" Teddy gestured to the garden around them and all its finely dressed occupants. \"Compared to the nunnery, I mean.\" \n\nDevonny couldn't help the twist of her lips at the mention of \"the nunnery.\" \n\n\"It is almost...\" she searched for a word. \"Surreal.\" She smiled wanly. \"I can hardly believe any of it is truly real. It's like a dream\" \n\nTeddy chuckled at that. \"Well don't believe all of it,\" he admonished. \"More like a nightmare,\" he grumbled under his breath. \n\nDevonny gazed at him soberly. \"Why always so forlorn, Mister Edmondson?\" she asked. \"Surely you know you lead a charmed and incredibly privileged life?\" \n\nTeddy grimaced. \"Yes, surrounded by all the trappings of a gilded cage.\"\n\nDevonny lifted an ebony brow. \"Many would be eternally grateful for such trappings,\" she said chided. \n\nGrimacing once more, Teddy withdrew a flask from his finely cut jacket and deftly poured the contents into his punch cup. Afterwards, he swished the liquid around the cup and took a tentative. He took a tentative sip and winced at the taste before shrugging and slipping the flask back into his pocket. \n\n\"You're beginning to sound like my father, Teddy mused \"Speaking of which....\" He nodded to an older spectacled gentleman who was eyeing him with a mild frown upon his dignified countenance. \n\nTeddy gave her shoulder a gentle nudge. \"Smile, Devonny.\"\n\nDevonny smiled tightly and inclined her head in distant greeting. \n\nTeddy chuckled, giving her another light nudge. \"Now you've done it.\" \n\n\"Done what?\" \n\n\"Now he'll be badgering me incessantly about you and wanting to know when I might make things more permanent and ask for your hand in marriage.\" He glanced at her distressed expression in delight. \"Not to worry I know how to handle him.\" He looked thoughtful of a sudden. \"You see, I don't speak to many of the women at length. My father most likely sees our regular discourse as a spark of interest.\" \n\nDevonny's brows lifted. \"And is he correct? Why are you speaking to me?\" \n\nTeddy smiled a genuine smile at her. \"Because you're new. You're interesting. You're not a twit. And it seems as though you could care less whether I wished to marry you or not.\" \n\nDevonny returned his smile, shaking her head. \"Your poor father.\" \n\n***\n\nDevonny trailed her fingertips over the velvety petals of the flowering rose bush in the gardens behind Kedleston hall. Teddy Edmondson's words the day before were not easy to shake. \n\n\"And then there was one,\" she murmured absently. \n\nFor some reason it bothered her now. Truly, she had always been alone\u2014for as long as she could remember. Her entire life had been a state of perpetual lonesomeness that she accepted. It pained her little. But that seemed to have changed since she arrived at the Davenport household. Moira and Miles had taken her under their wings. Prince and Elijah had become immediate friends to her. And Gabriel...Gabriel was likely the reason that the idea of being alone bothered her so.\n\nShe heaved a sigh. Time. Time and distance were likely the only remedy. \n\n\"Devonny.\" \n\nDevonny froze at the sound of her name on the object of her musing's lips. She turned to see him standing mere feet from her. She had been so preoccupied by her own thoughts she hadn't noticed his hesitant approach. \n\nShe turned to him smiling rigidly \"Gabriel,\" she said his name smoothly. \"Was there something I could do for you?\"\n\nGabriel grimaced inwardly. She was ever reminding him of her place and his. He perused her calico clad form beneath the parasol that shielded her face from the sun. He cleared his throat. \"I simply wanted to inquire about Prince's engagement to Elizabeth Madison and the celebration at the Madison's. I had thought that we should have a small celebration here as well\u2014not just to celebrate the betrothal but Prince's many accomplishments with his stables and the construction of his home. \n\nDevonny twirled the parasol thoughtfully. \"I think that it would be quite nice for Prince to be able to celebrate with all the people that care for him.\"\n\n\"Good,\" Gabriel nodded. \"I shall see to it.\" He shifted, running his hand over the blooms on one of the rosebushes she had so reverently been perusing. \"And I wanted to apologize,\" he said fixing her with his unwavering emerald gaze. \"Again\u2014for the other night in the kitchen.\" He looked sheepish and shook his head. \"I don't know what's wrong with me. It's as though I lose all sense with you.\" \n\nAt those words, she averted her gaze and trained it on the cobblestones beneath her white kid boots. \n\nWhen she said nothing, he stepped closer. Her soft honey colored eyes lifted to his and she took a deliberate step back from him. \n\n\"Gabriel,\" her voice was low. \"We can't keep doing this. It's not good for either of us.\" She lifted her chin. \"And as such, I cannot stay here. Surely, you see that. You must. Surely, you know\u2014as well as I\u2014that things can't continue this way.\" \n\nGabriel stiffened, tightness and discomfort spreading through his chest. \"And where would you go? Who would watch over you?\" \n\nDevonny gave a delicate shrug of her shoulders, feigning nonchalance. \"I am not a child, Gabriel, and I shall have to learn to look after myself one day, especially if I do not marry and have a husband to do so.\" \n\nGabriel's dark brows knitted together as his gaze searched her face. \"And what of Rochard?\" \n\nHer lips thinned, her expression growing somber. \"I can't let him control my life, Gabriel. If I let him dictate every decision I make, I would be letting him win. I won't let him win.\" \n\n\"When will you go?\" \n\nShe smiled a faint sad smile. \"Not until the end of the season at least. I shall have to see how things progress.\" She met his intent gaze. \"But we know that this,\" she gestured between the two of them. \"Has to stop. I shouldn't be here.\" She blinked rapidly, clearing her vision of tears. \"It hurts too much.\" \n\nGabriel stared at her. It was the first inclination she'd ever given him that she felt just as tormented as he did. \"Devonny\u2014\" \n\n\"No.\" She shook her head vigorously and took another step away from him. \"Please,\" she said so softly, he barely heard her. \"Just let it be.\" \n\n\"Devonny?\" Prince was there beside them suddenly. His gaze switched anxiously between Devonny and his friend. \"Am I interrupting something?\" \n\nGabriel said nothing. A muscle in his finely sculpted jaw ticked tensely. \n\nDevonny smiled brightly. \"Of course not. What is it?\"\n\nPrince quirked a skeptical brow at the two of them in response but shrugged and directed himself to Devonny. \"Teddy Edmondson has come by with me. I thought perhaps you might like to see him.\"\n\nSurprise flickered over her features. \"Of course.\" She glanced at Gabriel and then back to Prince. \n\n\"He's in the stables with Bernardo stabling his mount,\" Prince supplied\n\n\"I'll meet him there then,\" she said softly, avoiding Gabriel's heated gaze as she dropped a slight curtsey and went in search of Teddy. \n\nShe found him with Bernardo, stabling a magnificent caramel colored Polish Bay. He grinned, seeing her and clapped Bernardo on the shoulder as he came toward her. \n\nHe was dressed in a rather fine riding jacket and tall black boots displaying a high shine. He swept the top hat from his head and tucked it into his arm while he tugged off his right glove. \"Madamoiselle Adams.\" He swept and elegant bow when she slipped her hand into his. \n\nShe returned his greeting with a similarly elaborate curtsey. \"Monsieur Edmondson.\" She gestured to the stable entryway with an exaggerated sweep of her hand. \"Shall we?\" \n\n\"Of course,\" Teddy tucked her hand into the crook of his arm. \n\nDevonny rolled her eyes dramatically and aimed a backward grin Bernardo who winked back at her in amusement as the pair headed toward the gardens. \n\n***\n\n\"What are you doing?\" Prince asked as he entered the study. Gabriel stood at the window. It was a loaded question, he knew. \n\nGabriel watched Devonny stroll around the gardens with the young, handsome, and wealthy Theodore Edmondson. They made quite the striking couple: both young, beautiful, and charming. The Edmondsons were well known, even among his set. They were the wealthiest gen du couleur in all the counties. Devonny would be well taken care of and she would no longer be a servant girl subject to Rochard's whims. \n\nHe watched her throw back her head with laughter as Teddy Edmondson leaned close and grinned at her. \n\nHis guts twisted. He'd never seen such unbridled laughter from her, never more than a faint wisp of a smile. \n\n\"Gabe.\" Prince's voice shook him from his thoughts and he took a long sip from his glass of bourbon. \n\nPrince sighed and crossed his arms over his chest, settling a somber look upon his friend. \"What are you doing with her, Gabe?\" \n\nGabriel frowned, taking another long draught. \"With whom?\" He coughed as the sharp bitterness of the spirit caught in his throat. \n\nPrince lifted a brow. Gabriel Davenport hid his emotions better than any man he knew but undoubtedly he knew him well enough to know when he was troubled\u2014and Gabriel had been naught but deeply troubled from the moment Devonny Clarke set foot in Davenport House. \n\n\"Of whom do you speak?\" Gabriel queried dryly. \n\nPrince shook his head and met Gabriel's gaze steadily. \"You know exactly what I mean.\" He jerked his head toward the window. \"And you know who I mean.\" \n\n\"I'm not doing anything,\" Gabriel replied smoothly. He smiled a drawn smile. \"And I have no intention of doing anything.\" \n\nPrince eyed him skeptically. He believed in Gabriel unconditionally. Gabriel was an honest and honorable man like his father. He didn't doubt that. It was the brief flicker of torment he caught in Gabriel's eyes that worried him. He hesitated, mulling over his next words\n\ncarefully. \"Do you love her?\"\n\nGabriel snorted, ready to deny it but then he shrugged and returned his friend's gaze. \"I care for her very much,\" he said carefully. \n\nPrince nodded, seeming to consider this. \n\nGabriel frowned, swishing the amber spirits around the glass. \"She intends to leave. Did you know that?\" \n\nPrince's ebony brows quirked at this but he lifted his shoulders in a shrug. \"Surely you did not expect her to remain with us forever?\"\n\nGabriel winced, swearing under his breath. It had not occurred to him until then that his time would be so short. \n\n***\n\n\"To Prince!\" Gabriel lifted his glass, a wide grin splitting his face. It was a rare smile from him and it made Devonny's heart stutter in her chest at the sight of it. \n\n\"And to his lovely betrothed,\" Elijah put in, raising his glass as well. \n\n\"To Prince and Elizabeth!\" Moira beamed. \n\n\"To Prince and Elizabeth!\" They all echoed. \n\nThey had gathered in the parlor following an extraordinary evening meal. The Davenports, the Madisons, Moira, Miles, Sadie, Ursula, Bernardo and Devonny had all gathered for an elaborate small intimate meal in celebration. \n\nNow they gathered in the parlor, drinks in hand. The mood was jovial and light-hearted. Truly, it was a evening among friends and family. \n\n\"And now, it's my turn.\" Prince stepped into the center of the room. \"To my bride,\" he looked to Elizabeth, radiant in a pale blue gown who beamed back at him. \"You have made me the most happy man in the world.\" He inhaled deeply, \"And to my family...\" His gaze traveled over Miles and Moira and he winked at Devonny before his gaze settled upon Gabriel and Elijah. \"Your father was the kindest most righteous man I have ever known. And your mother\u2014she was all grace, beauty, and good heartedness. I was sorry to lose them. But were it not you two\u2014their sons who possess the same fine qualities\u2014I would not have found the success I have, and undoubtedly would have never had the opportunity to meet my future bride.\" He grinned and raised his wine glass. \"To the Davenports, those here and those here in spirit.\"\n\n\"To the Davenports,\" they repeated. \n\nBernardo opened a leather case at his feet and drew forth a small violin. Moira and Ursula clapped in delight and while Prince, Elijah and Gabriel moved to push aside the furniture, clearing a space in the center of the room. \n\nBernardo set the violin to his chin and Elijah grabbed Devonny's hand pulling her to the center where Prince and Elizabeth stood. Gabriel paired with Moira, Mr. and Mrs. Madison with one another, while Miles, Ursula while Sadie took a sat to watch. \n\nLaughter filled the room as Bernardo started to play a quadrille. Devonny turned and made a small curtsey to Elijah and then turned once more to curtsey to Prince who was at her right. \n\nShe moved gracefully through the steps, a brilliant smile upon her face despite her unease. Gabriel was across from her with Moira and she would undoubtedly find herself in close proximity. She brushed by Elizabeth who giggled, her skirts swishing around her as the dancers made their elaborate turns and circles. \n\nDevonny glided forward, slipping her palm into Gabriel's hand as they slid past each other. Her breast brushed his arm causing her stomach to drop. Her gaze flew to his as they traded respective spots and halted waiting the next turn. His were intent on her, bright and heated. The women moved in a swirl of skirts to form a small inner circle while the men formed a larger outer circle. The circles moved in opposite directions before they halted before their respective partners. \n\nDevonny halted back in front of Elijah who grinned and winked at her. The dancers moved apart and whirled only to switch partners once more and Devonny found herself on Gabriel Davenport's arm. Muscle flexed beneath her fingertip and familiar heat swelled in her belly when his hands closed around her waist as he whirled her around, his emerald gaze trained on her flushed upturned face. \n\nShe was then passed off to Prince who looked so incredibly happy that he might burst and had trouble keeping his eyes off his gloriously beaming betrothed. \n\nBernardo continued to stroke the strings of the violin into beautiful strains as the pairs continued dancing, putting her in regular physical contact with Gabriel. Each touch made her heart ache, discomfiting warmth blooming in her chest and staining her cheeks. His expression was intent when he came to her, unsmiling though his eyes were lit with amusement. It made her lightheaded. \n\nShe stumbled in her steps, falling against him. He righted her smoothly, one corner of his mouth lifting. \"Are you alright?\" he murmured. \n\nShe nodded as he delivered her back into Elijah's arms. Elijah lifted his brows at her slightly dazed expression. She smiled faintly at him in return. \n\nHours later, Miles and Moira had headed to bed while Ursula, Sadie and Bernardo had all retreated to their respective rooms. Devonny stood on the steps outside the main door between Gabriel and Elijah as Prince handed Elizabeth into the Madison's barouche. Waving at Elizabeth in farewell, Devonny turned and lifted her hem to reenter the house. \n\n\"Your dancing has much improved,\" Eli complimented, falling into step beside her. \n\nDevonny smiled. \"Why, thank you. I had a wonderful tutor.\" She inclined her head. \"Goodnight, Eli.\" \n\nElijah leaned in and pressed a kiss to her temple. \"Goodnight, Devonny.\" \n\nHe watched as she headed down the hall and turned the corner out of sight. \n\n\"And you dare speak of impropriety to me?\" Gabriel growled behind him. \n\nElijah turned to his brother smoothly, his expression the very picture of inocence. \"Pardon?\" \n\nGabriel scowled at him. \"You accuse me of plotting to sully her reputation\u2014of plotting to confuse her and bend her to my will--and yet I find you kissing her goodnight when dare you speak to me of impropriety. And don't think I haven't seen the way you look at her.\" \n\nElijah glared at him. \"You are jealous.\" \n\nGabriel let out a bark of laughter. \"Jealous?\" \n\n\"Yes,\" Elijah hissed, taking a step toward his brother whose hands curled into fists. \"She would never allow you so near.\" Elijah smiled coolly. \"She would never allow you to press your lips to her lovely golden flesh in so casual a manner.\" He watched Gabriel's face suffuse with color and rage but he continued. \"And her lips,\" he sighed, \"are like live velvet petals in their wondrous softness\u2014\" \n\nGabriel seized him in a move faster than the eye could follow, grasping the lapels of his jacket and propelled him backward into the wall rattling the heavy gilded frames that hung there. He seethed with fury, his face close to his brother's. \"If you have touched her\u2014\" \n\nA coy smile curved on Elijah's lips. \"She has never once objected to my touch.\" \n\nGabriel paled, the blood seeming to drain from his face as he abruptly as he stepped back. \"What have I done to hurt you so? Why is it that you torment me, brother?\" \n\nElijah smiled tightly as he straightened his jacket with delicate attention. \"I love you, Gabe, more than anything in this world. You think I don't understand how you feel but I do,\" he said softly. \"I know what it's like to love someone who is deemed entirely unsuitable.\" He lifted his cerulean gaze to clash with Gabriel's. \"And I know what it is like to have that person taken from you.\" \n\nGabriel stared at his brother in disbelief. He swallowed thickly, guilt swelled in his chest. He pushed the sentiment away. His voice was low and expressionless. \"Is that what you intend; to take her away from me? Out of spite? For revenge?\" \n\nElijah gave a light shrug though his eyes remained steady on Gabriel. \"That is her choice. Not mine.\" He clicked his heels together, gave a slight mocking bow and departed, leaving Gabriel alone with his thoughts. \n\n***\n\nDevonny frowned at her bedroom door which had so recently been knocked upon with a bit more force than necessary. She had little doubt who it was. There was but one person who came to her door at inopportune hours of the night. He had already apologized once today. What could he possibly want now?",
        "She slipped her dressing gown over her night dress and wrenched the door open. \"Yes?\" \n\nGabriel Davenport stood there looking incredibly pale though his eyes glittered strangely. A shock of dark hair fell over his brow. He stepped into her room, at once lifting his hand to trail the back of his fingers over her cheek. \n\n\"Is it true?\" His voice was no louder than a whisper. \n\nDevonny searched his pallid faceand cocked her head quizzically. \"Is what true, Gabriel?\" she asked in wonder. Her brow furrowed. \"What's wrong?\"\n\nGabriel took her chin between his thumb and his forefinger. \"He said that you had allowed him to touch you...to kiss you.\" \n\nEye widening, Devonny took and unsteady step back from him. Her breath left her. The air in the room was charged. \"Who said this thing?\"\n\n\"Elijah.\" Gabriel's intent gaze tracked her movements. \"Is it true?\" His voice was silky and low though wrath seemed to simmer below the surface. \n\nDevonny opened her mouth to deny it but she halted. Yes, Elijah had always been overtly familiar with her and she had not protested beyond stepping out of his grasp when he exceeded his bounds. And he had kissed her. She thought back to that faint brush of his lips against hers, intended to shock her out of her sadness. \n\nGabriel watched the emotions flicker over her soft features. But she did not deny it when she lifted her eyes to his. His chest tightened. \n\nHer eyes grew wet and she trembled slightly. He was angry with her but he did not care to see her cry. \"Devonny\u2014\"\n\nUnexpectedly she darted around him and raced from the room. \n\n\"Devonny!\" He stood frozen as he watched her gown whip around her ankles as she fled in a swish of white gown and mantle, bare feet carrying her away. \n\nShe tore down the hall toward the opposite wing of the house. Her blood seemed to pound in her ears as she was overcome by anger and emotion. Before she knew what she was doing she flung open the door to Elijah's apartment. \n\nElijah bolted upright in bed at the sudden intrusion, the sheets and mantle puddling around his bare torso. He pushed his hair out of his eyes to see Devonny standing, trembling at the foot of his bed. \n\nShe spoke through clenched teeth, her hands balled into tiny fists. \"How dare you!\" \n\nElijah slipped from the bed, careful to wrap the sheet around his lower half as he did so. \"Devonny\u2014\" he began.\n\n\"NO!\" She shouted, cutting him off. She skirted away from him when he reached for her. She shook her head vehemently. \"I asked you to keep me out of your games and your plans to hurt your brother. I BEGGED you!\" She continued backing away from him, mirroring his movements when he would have edged closer. \"You promised me it would never get so far\u2014that you would never jeopardize my position here.\" \n\nElijah's expression was pained. \"Please, Devonny. I lost my head. I don't know what I was thinking.\" \n\nHer gaze grew distant as her face saddened. \"What must you think of me?\" Her eyes shot to his. \"Did you think that because you buy me pretty things, that I would allow you to use me?\" \n\nHis shoulders slumped. \"Of course not.\"\n\nA strange giggle bubble up from her throat. \"How silly of me.\" She laughed but tears slipped beyond her lashes. \"Nothing comes without its price. Is that what you meant by your small touches, by that kiss? Were you hoping to get me into bed as payment for all your generosity?\" \n\nElijah's eyes widened at her accusation. \"No.\" \n\nDevonny smiled a disturbingly vacant smile. \"To think...I had thought that because you spoke to me as an equal\u2014treated me like one\u2014that you actually thought of me as one.\" She shook her head. \"How could I have been so stupid?\" she murmured for to herself than to him as she turned to go. \n\n\"Wait, please!\" his hand closed around her wrist. \n\nA resounding crack filled the room and Elijah and Devonny stared at one another, his hand still closed around her wrist. She had slapped him. She blinked rapidly in disbelief of her own actions. Good Lord. She had hit him. \n\nElijah stared at her in utter shock as she paled. \n\n\"I'm sorry,\" she rushed out. \"I should not have...I'm sorry.\" She tugged frantically at his grasp only to have him enclose her other wrist and drag her against him as he trapped her hands against the flesh of his bare chest. His heart thudded at a brisk pace beneath her palms as his chest rose and fell. \n\n\"Devonny,\" he ducked his head to meet her gaze when she would not look at him. He sighed when he caught her eyes. There was such pain in those amber depths and he was the cause. His voice was soft, wounded. \"I'm sorry. I deserve that. I'm sorry.\" \n\nGabriel cleared his throat behind them, causing Elijah to release her abruptly. \n\nWhen Devonny turned to him, her flushed golden cheeks were streaked with tears. She stepped swiftly away from Elijah, her eyes darting between the two men. She wrapped her arms around herself as thought to ward them off. \n\nHer voice was strong though it wavered with emotion and anger when she spoke. \"Am I some plaything to the two of you? To use in your games when the mood strikes?\"She lifted her chin in defiance, eyes flashing. \"I am in your employ, your servant though you seem loath to call me such. I will clean up after you, cook your meals, launder your linens, mend your clothes...but I will NOT let you treat me so. I will not be subject to your whims and petty rivalry.\" She swallowed thickly. I cannot bear any more of it.\" \n\n\"Excuse me,\" she mumbled, brushing by Gabriel on her way from the room. It took every fiber of his being not to go after her. He wanted nothing more than to take her in his arms and beg her forgiveness. \n\nInstead, he met his brother's troubled gaze. \n\nElijah pinched the bridge of his nose in frustration. \"What a bloody mess.\" \n\n\"What you said wasn't true was it?\" Gabriel ground out. \n\nElijah glanced at him. \"Not in the way I phrased it. No,\" he sighed. \n\nAnd without a word, Gabriel turned on his heel and strode from the room, slamming the door so hard it seemed to rattle the entire room. \n\nDevonny raced down the hall back to her room, stopping short when she saw Moira there in her dressing gown, a long grey braid peaking from beneith her mob cap. \n\nMoira stopped mid-stride in her pacing when she saw Devonny in the doorway. \"Are you alright, child?\" she asked, wringing her hands. \n\nDevonny's face crumpled and she dissolved into tears as Moira's arms closed around her. \n\n***\n\nGabriel found that it was all but impossible to catch Devonny alone over the next few weeks. She had abandoned her walks in the gardens. She no longer lingered in the stables talking to Orion and the other horses in hushed tones as she slipped them apples and carrots from the kitchen. Even they seemed to miss her presence. \n\nShe was ever in the kitchens helping Ursula with the meals or helping Sadie launder the bedding or mend clothing. The only break in her routine came when Theodore Edmondson would call. She would allow him to accompany her on short walks or on a ride about the property. Teddy Edmondson was the only one for whom her somber fa\u00e7ade seemed to crack. \n\nBut she did not look well. She looked drawn and tired. It seemed as though every bit of spark that she possessed had gone out of her. \n\nIt was killing him. \n\nElijah had taken to showering her with elaborate gifts , all of which had been surreptitiously been returned to his quarters at some point. \n\nGabriel was ever watchful for an opportunity to speak to her but none ever came. He wanted to avoid arousing the interest of the rest of the household but it looked as though it could not be helped. \n\nHe strode into the kitchens that were bustling with activity in preparation for the evening's dinner party and multitude of guests. The kitchen was filled with people he'd brought in from the village to help in the work. He spotted Devonny amidst the chaos attempting to slip outside in the commotion. \n\n\"Devonny.\" His voice boomed over the milieu halting all activity. \n\nThey all turned to him with wide eyed looks. All except Devonny who froze, her delicate shoulders hunching. \n\n\"I would speak to you now, please,\" he said and her honey colored eyes grew round. \n\nDefiance flickered in her gaze and for a moment he thought she would refuse him. But she seemed to think better of it. He allowed her to pass before him as she shot him a glare. He nodded to the staff, watching in mild shock. \"Please continue,\" he nodded and departed, but not before Moira who was overseeing everything fixed him with a warning look. He smiled thinly at her in reassurance. \n\nDevonny awaited him in the main hall, her expression apprehensive. \n\n\"To the study if you please,\" he motioned for her to continue ahead of him. \n\nGabriel inhaled deeply as he followed her. He would fix this. He had much to tell her. "
    ],
    "authorname": "theDuskyGirl",
    "tags": [
        "romance novella",
        "victorian",
        "historical",
        "historical romance",
        "victorian romance",
        "london",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/devonny-ch-11"
}