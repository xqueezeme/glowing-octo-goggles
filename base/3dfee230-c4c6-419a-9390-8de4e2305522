{
    "title": "Lost Empire Ch. 42",
    "pages": [
        "Ship # - ship name - Prime\n\n0001 - Tempro\n\n0003 - Conner - Thomas\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship) - Derrick\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste\n\n0908 - Tara - Mara\n\n0999 - Zan\n\n1000 - Sherry\n\n_________________\n\nDuke Risen's eyes went wide as he read the report from the spy he'd planted in Tauntoff's court. The bastard fake to the throne of the Empire had more lives and luck than he could believe. Pacing he knew that the man was going to come after him next. Smiling the Duke thought it was time to bring out the REALLY big guns. Let the bastard do anything after he blew those ships away! Laughing the Duke started to shout orders.\n\nGreeson groaned as he looked around the med bay. So many hurt, too many dead he was still finding it hard to believe that all of them had been proud to serve under him. Then there was what the Emperor had said that he understood. Plus the fact that the man thought he'd done a good job! Grimacing when he felt the needle slide into his arm he guessed he'd have to wait.\n\nMara had been released from med bay not long after everyone had left for the planet. Going to her room she sat and listened to the reports of the battle as they came in. It was a few hours later as she made her way to the med bay a look of worry on her face. She'd heard the reports of the five that were dead. More than a third were injured some severely. When the A.I. of the ship wouldn't reveal any of the names she grew even more worried.\n\nAs she rounded a corner she saw the Colonel that had been training Greeson. Almost at a run she quickly gained on him.\n\n\"Colonel!? Colonel!\" She shouted as she overtook him. As he turned she saw that he'd been injured. \"Why aren't you in the med bay?\" He might have more years on her but they were of the same rank, so she felt she could demand.\n\n\"I will be soon young lady, at the moment there are more seriously injured in there.\" Dempsy told the worried woman.\n\n\"I heard that five were lost, well over a third were badly injured. So yours isn't that bad I take it? Funny but the odd angle you arm is at suggests that you might be in pain. Apparently though, you aren't.\" A surprised Mara said.\n\n\"No, I am trained in pressure points. Certain spots on the body can be pressed to stop or numb pain. It can mean the difference between life and death. If there is no pain, then the one who is injured won't lose consciousness. As you know slipping into a coma isn't always the easiest thing to come back from.\" Dempsy told her.\n\nSighing a moment she was about to ask when Dempsy continued. \"Yes young one, he is still alive though I am afraid that he may be here a few days. He is very courageous; he sacrificed quite a bit to ensure that an evil was extinguished. An evil I am afraid I helped to make.\" Here Dempsy hung his head. His master had said that after she was gone he would still have to live with her death. He just didn't think it was going to be this hard.\n\nMara could see that something was tearing the older man up inside. Reaching out she put her arms around a startled Dempsy. \"It is always hard to lose someone, even the worry stays with you. Losing father was hard on me but his life inspired me to do and be more.\" Releasing him she stepped back, \"Father always said you were like a rock, unfeeling. I'm so glad that he was wrong.\" With that she turned and headed into the med bay leaving a startled and shocked Dempsy standing in the hallway.\n\nSince he was considered one of the badly injured Greeson was made to sit while he was examined. After the medication was injected into his arm he sat back and waited. It seemed only a few minutes later that Mara strolled into the med bay looking around. Locking her eyes on him she quickly came to his side.\n\n\"I was scared you were among the dead.\" She whispered as she gingerly touched the sling that his arm was in. \"I'm very pleased to see that you are still alive.\"\n\nGreeson nodded though was quiet a few more moments. \"I just feel bad that they died. I still think I could have done more to save them. I...\"\n\nMara reached up and locked her lips on Greeson's effectively shutting him up. \"You listen to me right now!\" Mara said as soon as they both came up for air. \"This is a risk that is always there in a war, remember this is a war. As I heard the Emperor told you more would have been lost had you not had them pull back when you did. Now stop this self doubt, or you're going to have me to fight next! Believe me I won't lose!\"\n\nGreeson threw his one good hand up in surrender, looking at her closer. Then he nodded his head yes, he had no doubt she would win! Sighing Greeson nodded, \"Everyone has been telling me I was a great commander. They died because of me Mara. Me!\"\n\nGreeson's face was suddenly rocked from the slap that Mara delivered. \"This is to stop this instant! If you ever wish to see me again it stops here and now. Don't you dare make light of this! They died believing in you and you only! Don't you dare disgrace their memory feeling that you killed them!\"\n\nGreeson rubbed his face looking at Mara in astonishment, well that and the fact she'd knocked him on his ass! \"Damn it Mara! I am not about to make light of what they did. To me, they are the heroes, not me. I just did my duty, that's all.\"\n\nMara looked as if she were about to slap the taste out of Greeson's mouth again with her hands on her hips. \"Yes that's it!\" She said looking up. \"Did you ever think that they considered themselves to be the same exact thing? That perhaps you were a hero to them?\"\n\nGreeson blinked a few times as he took this new information in. He was a hero to them? \"No,\" Greeson said in a whisper. \"I never thought that they might consider themselves as the same thing.\" Looking up suddenly Greeson kissed Mara, as well as he could with one arm. \"Thank you, I see it now, truly I do!\"\n\nMara smirked a second, then told him, \"I have to go. Another briefing or something. I was told that the Emperor wished to see me. I'm afraid he might punish me for what I did. I don't know, I hope it isn't bad news.\" Kissing Greeson she skipped out of the room.\n\nA ranger in the next bed caught his attention. \"You are so lucky sir.\"\n\n\"Me? How do you figure that?\" Greeson asked.\n\n\"With a girlfriend like that you get a relationship and training all in one!\" A slow smile started to spread across his face as he then started to laugh with the young ranger.\n\n\"You might be right there, you just might be right!\" Greeson said as he thought of everything that had happened over the last few months. Nodding his head more the young ranger was right he was far luckier than he had at first thought.\n\n_______________________________________\n\nMary was still unsure as she watched over both Kimison and Rayburn. They both seemed to be going through the motions with work. In reality Kimison hadn't achieved a thing since the day that Rayburn had left. There was also the fact that neither of the men had eaten in the last few days. Now she was really starting to worry. She knew that it was only a matter of time before they passed out from lack of food.\n\nIt was almost as if an electric surge had occurred within her system as a new plan began to form. Yes! It could work though she'd have to see what the Emperor had to say about it. Appearing near the Emperor and Empress, Mary voiced her concerns about both of the men.\n\n\"I knew that they were stubborn to a fault I saw that while they were working on me. I didn't think that they were so stubborn that they might actually starve themselves to death! Derrick we have to do something!\" Shelby told him.\n\nDerrick sat for a while deep in thought trying to see a way out of this situation. As Shelby and Mary both had said even he hadn't foreseen both of them being so pig headed. Derrick hadn't thought that they'd rather starve than admit that they were wrong. Shaking his head he sat for a while longer when suddenly a plan started to take root.\n\n\"Alright Mary, here's what I think that you ought to do. Do not in any way, shape or form let them know what is going on or we might be back at the same spot.\" Derrick told her as he started to outlay what he'd thought of only moments ago.\n\nMary's mouth was hanging open as she listened to what he wanted her to do. It did seem a bit extreme though Shelby was nodding her agreement the whole time. Half an hour later they were finished as Derrick told her that he wanted her to implement the plan immediately. Nodding her assent she left appearing back with both of the men as they continued to pretend they were working.\n\nIt was the next day that Kimison started to feel light headed. Shaking his head he tried to continue on feeling weaker and weaker. Finally he took a step toward his bed rack watching as the world spun and he went down. Shaking her head she really didn't like this idea though the Emperor assured her it was about the only way.\n\nAppearing in the work space that Rayburn was in Mary started to act like the Emperor had told her to. \"Sergeant Rayburn?\" Mary started sounding a little afraid.\n\nThe tone of her voice snapped his head up as he saw that Mary was wearing a worried expression. \"I'm here Mary is something wrong?\"\n\n\"I know that you transferred here but you are the closest at the moment. The Emperor won't be able to send anyone as they are still recovering after the battle on the Earl's planet.\" Mary said as she bit her lip as the emperor had suggested.\n\n\"What's going on Mary?\" Rayburn asked Mary didn't get emotional unless something was seriously wrong.\n\n\"I know you didn't want to hear about him but ... Never mind Sergeant I am sure it will be fine.\" Mary said as she turned her head a more worried look on her face.\n\nNow Rayburn was really starting to get worried. \"Tell me Mary, what in the hell is going on?\"\n\n\"I always monitor you, Corporal Kimison and the Emperor and Empress. It's just that...\" Here Mary stopped again biting her lip.\n\n\"For god's sake spit it the hell out Mary!\" Rayburn said a flash of irritation in his voice.\n\n\"Well it's just that Kimison has stopped responding to Tempro and me. I checked on him and he appears to be asleep on the deck. His vitals are low so I thought he was just a sleep. Then I tried to wake him and nothing. I am just worried neither Tempro nor myself can get him awake. Neither of us can transport him to the med bay from where he is. As I said you are the only one that is available though, you requested to not be near him.\"\n\nMary turned away again as she let Rayburn think about it. \"So you think he is asleep? Knowing him he drank last night.\"\n\n\"I'm sure Sergeant, I'm sorry I bothered you.\" Mary said as she turned to go.\n\n\"Wait!\" Rayburn shouted as Mary stopped. \"Just how low were his vitals? May I see please?\"\n\nMary nodded as a screen appeared in front of him. Rayburn quickly scanned through the readings then his head snapped up. \"Mary! These readings aren't low they're dangerously low! I am seeming severe dehydration. Lack of protein and several other minerals! Take me to where he is Mary!\" Rayburn told her.\n\n\"Sir! You requested to not be near him. I cannot go against your request!\" Mary protested.\n\n\"Mary take me to him! If we wait too long he'll be dead then we both will have a problem!\" Rayburn shouted.\n\nMary nodded as she flashed Rayburn into the passageway near where Kimison was, running he was soon pulling the man to the med-bay.\n\n\"You idiot,\" Rayburn shouted at Kimison. \"Are you trying to kill yourself?\"\n\nOpening his eyes a moment Kimison looked with shock at Rayburn. \"Damn I must be near dead if I am seeing your ugly puss!\" Kimison breathed out.\n\n\"Not yet but it appears that you are trying to get there as fast as possible!\" Rayburn said with a grimace as Kimison tried to sit up only to fall back.\n\n\"Damn this sucks!\" Kimison said as he fought to keep his eyes open. \"You are finally here and I'm dreaming the whole thing!\"\n\n\"You won't think that after I kick your ass you little shit!\" Rayburn said threatening.\n\n\"Damn, this sounds almost real,\" Kimison said then sighed his eyes closing.\n\nRayburn shook his head as started the bio-bed with Kimison in it. \"You stupid, stupid son of a bitch!\" Rayburn said then felt his own legs start to shake. It was in that moment that he realized he hadn't eaten in the last few days himself! Dropping into the seat in the galley a few moments later he attacked his food with a gusto he hadn't known he had.\n\nOnboard Shelby Derrick and live Shelby both nodded, when Mary appeared. \"I told you it would work.\" Derrick told her pointing to the screen as she was shaking her head.\n\n\"Yes Sire I can see that. May I make a request for in the future?\" Mary tentatively asked.\n\n\"Of course Mary, you know you can ask me anything. I may not always have an answer for you but you can still ask.\" Derrick told her.\n\n\"I know that this was for the health and welfare of both of them. I find that the telling of false hoods in order to manipulate, causes several malfunctions in my logic and emotion circuits. They are quite brilliant, please Sire, please do not ask me to do that again. My son also seems to have a strain on his emotional circuits from all this.\" Mary asked an almost pleading tone to her voice.\n\nSighing Derrick and Shelby nodded, \"I am sorry Mary, I know your circuits aren't as open as your daughter Shelby's are. I could modulate for you, adjust if you wish.\"\n\nMary seemed to be deep in thought a moment then shook her head no. \"That wouldn't be a good idea sire. Not with the death virus that is still in my systems, though I appreciate all you have done so far. Had it not been for you I feel that I would have ceased to function long before now.\"\n\nDerrick nodded, \"Once it is destroyed I wish to revisit this topic.\"\n\n\"Of course Sire, though I am just as happy as I am now as I would be after.\" Mary said.\n\nHolo-Shebly appeared looking at her mother wide eyed. \"I think you are mistaken mother! The freeing up of the emotion circuits offers such freedom!\"\n\nMary could only nod as she stared at Holo-Shelby.\n\n_________________________________\n\nIt was several days later when Derrick cut short his visit to Earl Tauntoff's planet. It had been far more enjoyable than any he'd visited; he and Shelby had already made plans to revisit soon.\n\nThey had taken a few days to allow everyone to heal; now Derrick felt it was time. Taking Shelby aside he had to ask her before he did anything. \"We are going after that bastard. I have had Mary scanning his planet for the last few days. The ass has been rolling out a lot of heavy machinery, possibly weapons.\"\n\n\"Alright I understand all the dangers.\" She told him, \"Derrick just where are you going with this?\"\n\nSighing he knew this next part wasn't going to sit well with her, hell it didn't with him. \"Mary isn't that sure if even the new enhancements will be enough. The bastard has power sources comparable to Mary's. I don't want both of us on the same ship, just in case.\"\n\nShelby's eyes got wide; \"NO! My place is beside you damn it! Don't you dare separate us!\"\n\n\"I don't want to Shelby, I feel it is necessary. If the Empire loses one of it will be bad but not impossible. Both of us? That would end everything real damn quick; no I want us on different ships. Besides Shelby has the strongest shields.\" Derrick told a now upset Empress Shelby.\n\nWith a huge sigh Empress Shelby bowed, she could see the logic in what he'd said. \"You are my Emperor Derrick, I will obey, I won't like it but will obey. Just know this oh Emperor of mine!\" Shelby said shaking a finger in his face. \"You get killed or injured? It won't be an alien race or your enemies you'll have to worry about! Your wife will be the first to kick your ass when she brings you back!\"\n\nDerrick was nodding the whole time then his eyes flew wide. Wife! He looked at Empress Shelby as she stormed off he'd only just started to think of her as his partner, fellow ruler. Nothing in his mind had even occurred to him that she was his wife now also! He grimaced as he could still here her grumbling as she moved off. Shaking his head he knew though it was for their own good, there was going to be hell to pay later!\n\n____________________________\n\nThe next day all twelve ships flashed in near Duke Risen's planet. Immediately a signal was received.\n\n\"This is planetary control to the large force approaching the planet of the powerful Duke Risen. Break off your approach or be destroyed!\" A voice from the planet said.\n\n\"This is Emperor O'Toma, we are here to apprehend the criminal Risen! Lower your...\" Derrick started.\n\n\"We recognize no Emperor as there has not been one for over two hundred years. We therefore suspect that your claims are false. Cease and desist any and all movement toward this planet! Continue on your present course and we be forced to retaliate with deadly force!\" Interrupted the voice from the planet.\n\n\"I suggest you lower your shield or be fired on by a superior force!\" Derrick shouted.\n\n\"This is the last warning, stop your encroachment or be fired on and destroyed!\" The voice shouted back.\n\n\"Shelby? Are you reading anything that can penetrate your shields?\" Derrick asked.\n\n\"No Derrick though I am reading a strange power coming from near the Duke's palace.\" Holo-Shelby advised him.\n\nDerrick nodded as all twelve ships were still advancing. Suddenly Tempro appeared. \"Sire! You all have to leave I am reading the build up Chronoton energy! Dangerous levels! Sire you have to...\" Derrick blinked as Tempro suddenly faded.\n\nDerrick was immediately ordering all ships to retreat when a dark blue beam shot out from the planet. Derrick ordered Shelby to block as much as she could as the others were retreating.\n\n\"Derrick!\" Shelby was screaming above the myriad of alarms that were going off. \"Energy reading off the charts! The shields aren't going to stop it!\"\n\nSuddenly everything outside the ship went dark as Shelby started to shake violently. \"Shelby! What is it?\" Derrick yelled.\n\n\"I am reading a huge wave of Chronoton energy! Unable to hold position!\" Shelby yelled. \"I'm sorry Derrick I...\" Then she was silent as the ship went dark.\n\nEmpress Shelby screamed as she saw the beam strike her counterpart, then just as suddenly Shelby was gone! \"NO! Fire everything at the planet!\" The Empress was ordering as the remaining eleven ships opened fire.\n\n____________________________\n\nIt seemed like forever maybe longer Derrick wasn't sure when the shaking stopped, then the lights came up. Looking out it appeared that they were floating adrift in space.\n\n\"Shelby where in the hell are we?\" Derrick asked. Waiting Derrick started to worry when he received no answer. Looking around he didn't see any damage, he had to look at her circuits. Prying open the panel was far harder than he had thought it might be. Looking in he saw that almost all of it was dark. Quickly running through the plans of the ship, Derrick finally decided he needed to start with the core.\n\nCrawling into the space it was confining and tight though he finally made it. Standing before a small screen in an open space in the machinery he saw a welcome sight. Typing he asked. {Are you alright Shelby?}\n\n{Oh Derrick! I am so far, I retreated all the way back to my life box. The Chronoton energy would have wiped all my circuits had I not. I am afraid that there is much damage. I cannot re-emerge 'til it is partially repaired.}Shelby typed back.\n\n{Alright tell me what to do if I can get you started then your self repair can take over.}Derrick sent back to her. Shaking his head he knew this was going to take time. Retreating to get tools Derrick sat to rest finding he was far more tired than he thought.\n\nFor the next several hours after a quick nap, Derrick was crawling through out the systems finding a few more access panels. These would come in handy the next few days Derrick thought after three hours. He'd just replace a whole circuit board when he heard a low whine. Smiling he thought, well maybe now she can finally re-emerge.",
        "Derrick donned a breathing mask as he opened the access panel. Nodding as he stepped out he could see that there was more power than before. Sighing he had a long walk as he was near the rear end of Shelby it had taken him three and a half hours to get this far. Derrick nodded as he developed a new respect for just how large Shelby's systems were.\n\nFifteen minutes later Derrick walked into the command deck. Sitting he pulled a typing board in front of him. {Shelby? I replaced all that you said and a few that I saw might fail. Are you able to re-emerge?}\n\n{Yes I have already started to reintegrate myself into the system. As of yet I only have partial control on non-essential systems. Ah! There I think I have regained environmental control. Thank you Derrick a few of the extra you replaced have helped. I am almost to the re-gen commands.}\n\nIt grew quiet for a few moments as Derrick laid back. It had been a trying day. Where were the others? He was sure that they were clear when he and Shelby had blocked the beam. Derrick guessed he'd fallen asleep as he was jerked awake by a voice.\n\n\"Derrick? Are you injured? I now have control of well over half the ship. Do you need to go to med-bay? Oh dear!\" Derrick heard Shelby say.\n\n\"Shelby? What's wrong? Where are you?\" A perplexed Derrick asked.\n\n\"I'm sorry Derrick that system is still off line. I was surprised I am receiving transmissions on the high frequency channels that we ships use.\" Shelby said, her mouth hanging open.\n\nDerrick nodded that was to be expected the others were looking for them. Then he noticed that Shelby was still standing there with her mouth hanging open. \"Shelby? What's wrong? Are the others damaged?\" Derrick asked.\n\n\"No,\" Shelby said in a whisper. \"It's ... it's Emperor Gregor! Derrick! We are a thousand years in the past! I remember this speech; it was a week before all of us were launched! They're all here Derrick all my children!\"\n\nDerrick could only stare straight ahead, a thousand years? Then he shook his head, figures he thought."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-42"
}