{
    "title": "The Gentlemen's Panty Club",
    "pages": [
        "Chapter 1\n\nMy name is Edward Joseph Mason, and I am the fourth male in my family to be christened with this distinguished name, as my father, grandfather and great grandfather were also named Edward Joseph; but ever since I was a small boy, everyone in my family and circle of friends has referred to me by the moniker, Joey. \n\nMy family has lived in Northern California for six generations and is considered to be solid member of the upper class society of the great city of San Francisco. One of the advantages of being in the Mason family is that it guarantees that the males are afforded automatic entrance into the oldest and most prestigious gentlemen's club in The City, the Excelsior Club, which was established in 1852. \n\nLet me start by explaining what a gentlemen's club is, and how it functions. A gentlemen's club is a members-only private club set up by, and for, upper class men. The Clubs are owned by their members, and not by an individual or corporate body. A number of clubs are characterized by their members' interest in politics, literature, the arts or some other pursuit. \n\nGentleman's clubs are private places where men can relax and create friendships with other men. The clubs are, in effect, \"second homes,\" where men can socialize with colleagues and friends, play parlor games, and enjoy a fine meal.\n\nI am very proud of my membership in the Excelsior Club, as it has provided me opportunities to meet San Francisco's most highly respected men of influence and power. But what I am even more proud of is my membership in a smaller but very exclusive sub group of Excelsior Club members. We are a club within the Excelsior Club, and we share a common interest that sets us apart from the main club membership... we enjoy wearing women's panties. We call ourselves, The Gentlemen's Panty Club.\n\nI am currently thirty-five years of age, and have been wearing \"women's unmentionables\" daily for approximately fifteen years, and I've come to realize and enthusiastically accept the fact that I have an undeniable panty fetish. This did not happen over night, but developed over a period of many years. \n\nChapter 2\n\nMy first memory of panties was when I was five years old. My best childhood friend was a cute little blonde girl named Edith Chatsworth, who lived in the large manor house across the street from us. Edith was one year older than me, and liked to brag about how she was more \"grown up\" than me, as I was \"just a baby\", and she knew much more than me. Our mothers were best friends, as they attended the same Episcopalian church, and were members of the same country club. \n\nOne hot summer afternoon Edith and her mother came over to my house for an afternoon swim in our pool. They, of course, had their own swimming pool, but our mothers had more fun when we children used the same pool. It gave them a chance to share an afternoon cocktail, as they watched their little darlings frolic in the water. \n\nAt midafternoon my mother told us it was time to get out and take a quick shower in the pool house, to get all the \"nasty chlorine\" off of us. Edith took my hand and led me to the bathroom. We stripped off our bathing suits and hopped into the warm shower, which felt wonderful. Our mothers watched us from a short distance, and after a too short amount of time told us it was time to get out of the shower and get dressed, so we could go out for ice cream. I ran to my mother, who wrapped a fluffy bath towel around me and dried my hair. Edith's mother did the same with her. \n\n\u00ac\n\nAfter we were dry our mothers handed us a change of clothes to put on. I stepped into my white cotton boy briefs. Then my mother helped me put on my Spiderman t-shirt and my blue denim shorts. While my mother ran a comb through my damp hair, I had an opportunity to watch Edith dress. The first thing that I took notice of was Edith's underwear, which looked a lot different from mine. Hers were quite colorful, and much more interesting than my underwear, as they were a pretty light pink color with cute little kittens on them. \n\nI was curious about the difference. I looked up at my mother's face and asked, \"Mommy, how come Edith's underwear looks different than mine? I mean, her underwear is very pretty, don't you think? And mine, is just plain white.\"\n\nShe thought for a few seconds, and smiled back at me, \"Well Joey, Edith is wearing girl's panties, which can be any color and have any pattern that you can imagine. Boy's underwear is usually just one color, as they don't care about how their underwear looks, only that it feels comfortable wearing them.\"\n\nI thought about what my mother said for a few seconds. I looked closely at Edith's pretty panties, and then I remembered my plain white boy's briefs. I didn't understand why I couldn't wear pretty underwear too.\n\nAgain I looked up at my mother's beautiful face, \"Mommy, I want to wear girl's underwear too. Can I wear pretty panties Mommy... please?\"\n\nMother looked over at Edith's mother, and then shrugged her shoulders. Edith's mother had placed one hand over her mouth, and she appeared to be trying to stifle a laugh. A few seconds later they both started giggling, and then Edith joined in as well. I felt my cheeks getting very warm. This was the first time in my life that I remember being terribly embarrassed. Can you imagine how it feels being humiliated by your own mother? I wanted to cry, but I did not want to be seen acting like a baby, so I covered my face with both of my hands.\n\nAfter a short time the laughter stopped, and my mother pulled my hands away from my face. She was kneeling on the floor in front of me and looking into my eyes.\n\n\"It's ok, Joey, if you want to wear pretty panties, but I think you should ask your father first. He's not going to his club after work tonight, so you can ask him about wearing panties while we're eating dinner. Cook is making your father's favorite, Beef Wellington, so I know he'll be in a good mood.\"\n\nThe caring look of tenderness in my mother's face reassured me, and I immediately felt much better.\n\n\"OK, Mommy, I'll ask him tonight. Do you think he'll say yes? Oh... I do hope he'll let me wear pretty panties!\"\n\nMother just looked back at me and smiled. \n\n\"Your father is a very important man in San Francisco society, and as such, he's a conservative man in most matters, but he can also be flexible, at times. I think he might make some accommodation for you.\"\n\nThen my mother hugged me and kissed me on my cheek. \"You really are a sweet boy, Joey, and I want you to always remember that.\"\n\nI nodded my head, \"I will Mommy.\"\n\nThat evening we enjoyed the delicious dinner that Cook had prepared for us, and my mother and father shared the events of their day. I waited patiently for Daddy to ask about my day. Before desert was brought to the table my father turned his attention to me.\n\n\"Well Joseph, your mother tells me you have something important to ask me.\"\n\nHe looked directly at me, but he seemed relaxed, and to be in a receptive mood as he waited for me to begin.\n\nI picked up my napkin and wiped my mouth, thinking about how to begin my petition.\n\n\"Well Daddy...um... Edith and I swam in the pool today, and afterwards we showered off the \"nasty chlorine.\" We started to get dressed, and I couldn't help noticing that her underwear was much more interesting than mine, and I thought they were very pretty. Mommy told me that's because a girl's panties can be any color or pattern, but boy's underwear is only white, and not pretty. I don't think that's fair, Daddy, and I would like your permission to wear panties like Edith.\"\n\nMy father looked calmly into my eyes for a few seconds, and then he looked over at my mother. My mother smiled back at him, but did not speak. He turned his attention back to me.\n\n\"Well Joseph, that's very brave of you to be so honest, and you're to be commended for that.\"\n\nMy father looked down at his napkin, and I could tell he was composing his thoughts.\n\n\"Your request is unusual, Joseph, but I don't see any harm in you having one pair of panties that you can wear only in this house, and you won't tell anyone about this. When you go to school, or anywhere else, you will wear normal boy's underwear. When you're older you'll discover that other people will make fun of you if they know you're wearing girl's underwear, and for your own good, I do not want that to happen. Do you understand?\"\n\n\"I do Daddy. Thank you!\"\n\n\"You're quite welcome, son. I suspect you'll lose interest in this business soon enough.\"\n\nThe next day Mother bought a pair of pink panties for me, and they were similar to Edith's, but instead of cute little kittens they had colorful flowers on them. The material was different than my boy's underwear, and felt very nice on my skin. I enjoyed wearing them immensely.\n\nThe following week Edith and her mother came over to my house, as Mother had invited Julia, Edith's mother, to have an afternoon cocktail with her, while Edith and I played quietly upstairs. When Edith and I were in my bedroom, I closed the door and looked over at her.\n\n\"Edith, I have something to tell you, but you have to promise to keep it secret, ok?\"\n\nMy friend gave me a puzzled look, \"Sure Joey, you can always trust me. What's your big secret?\"\n\nI walked over to the head of my bed, reached under my pillow and pulled out my pink panties with the flower pattern. I held them up proudly in front of her, \"I get to wear pretty panties just like you do. Daddy said I can't wear them outside of this house, and I can't tell anyone about this, so you must promise not to tell. Ok Edith?\"\n\nShe grabbed my panties from my hand and looked at them carefully.\n\n\"Wow Joey, they're very pretty panties indeed. So you like wearing them?\"\n\n\"I do Edith. I think they look very nice on me, and they make me happy wearing them. Do you think that's strange Edith?\"\n\n\"Well, it is somewhat unusual, but if it gives you joy, I don't see anything wrong with you wearing them, Joey. But I do think your father is very wise in not letting you wear them out in public, and that you should not tell anyone about it. The kids at school can be very cruel, especially the girls, about making fun of anyone who's different from them. They would tease and torment you without end if they discovered your secret.\" \n\nEdith handed my panties back to me, and then she did something that took me by surprise... she leaned over and kissed me on the cheek! \n\n\"I think you're a very sweet boy Joey, and I fancy you very much. Perhaps we'll marry some day!\"\n\nI looked at Edith and my cheeks felt warm. \n\n\"Oh Edith, I do not want to marry... ever. Why would I want to do that?\"\n\nAt that she giggled, \"Oh Joey, you're such a baby sometimes.\"\n\nAs it turned out, my father's prediction about me wearing women's underwear was correct, and after a few months I lost interest in wearing my pretty pink panties, but my interest did return a few years later.\n\nChapter 3\n\nI don't recall anything of particular interest during my first four years of grammar school regarding girl's underwear. OK, occasionally, a girl would sit comfortably, open her legs, and accidentally show her panties, and I enjoyed these accidents very much. I tried to act casual when looking at her panties, but sometimes, something would come over me, and I would blatantly stare. I could not help myself! I think panties must have some special power over me. Looking at her underwear made me feel funny.\n\nI do recall one occasion when I was in fifth grade that reignited my interest in panties greatly. I was twelve years old. There was a very pretty little girl with curly red hair, named Bridgett O'Brien, who enrolled at the start of the school year. On the first day of school she sat at the desk next to mine, introduced herself, and gave me a warm smile. I liked her from the start, and I thought she was very nice. \n\nAfter a few weeks I became good friends with Bridgett. She came up behind me at morning recess one day, and tapped me on the shoulder.\n\n\"Hi Joey, I have a question to ask you, and please don't laugh at me, ok?\"\n\nI looked at her closely, wondering what in the world she wanted to ask me. She looked at her feet for a few seconds, and then she looked me in the eye. \n\n\"Joey, would you be my boyfriend?\" \n\nI was puzzled by her question. I had no idea what \"being her boyfriend\" meant I was supposed to do!\n\n\"Uh, ok, I guess, but what exactly does a boyfriend do?\"\n\nBridgett thought for a second, \"Um, I'm not really sure, but I'll ask my friend Melanie, and we'll get back to you, ok Joey?\"\n\n\"Sure Bridgett.\"\n\nLater that day at lunch, Bridgett came up to me again.\n\n\"Ok Joey, here's what a boyfriend does. First, you hold my hand and walk me to the cafeteria at lunchtime. Then, after school you carry my books, and walk me home. The last thing you have to do is protect my honor.\"\n\nShe smiled at me, and seemed very pleased with herself. I wondered about the \"honor\" requirement.\n\n\"What exactly does that mean... protect your honor?\"\n\n\"I think it means you have fight any boy who tries to steal it.\"\n\nWell, that didn't sound too difficult, seeing as how I'd never been in a fight before. I decided that if it pleased Bridgett, then it was a simple enough task for me to be her boyfriend.\n\n\"Ok Bridgett, I'll be your boyfriend!\"\n\n\"Oh thank you Joey!\"\n\nThen she threw her arms around me and gave me a big hug.\n\nAfter that day I was spending more time with Bridget, and I got to know her better. I thought she was a very nice person, and I enjoyed spending time with her. Once, she told me that she had four brothers and four sisters, and that her family had emigrated from Ireland, and they were strict Catholics. Later that evening, I told my mother I had a new girl friend named Bridgett, and what I had learned about her. When I was done my mother had a sour look on her face, and I could tell she was not happy.\n\n\"Joey, I want you to leave that girl alone, and do NOT talk to her. Do you understand Joey?\"\n\n\"Yes Mommy, I understand you perfectly, but why can't I talk to Bridgett? I mean... I really like talking to Bridgett.\"\n\nI heard her mumbling to herself under her breath, \"What is it with those Catholics, and having so many retched brats? Fucking animals... like rabbits!\" and then she left the room.\n\nThe next day I deliberately ignored Bridgett when she greeted me, and when I looked over at her a few minutes later, I could tell she was mad at me. An hour later our teacher was called to the school office regarding something urgent. When my teacher left the classroom, Bridgett turned around in her desk and was facing me. She reached down with her hands and pulled the hem of her skirt above her knees. When she saw she had my attention, she slowly opened her legs revealing her white cotton panties to me. She looked directly into my eyes. I felt paralyzed with fear and excitement at the same time. My eyes wandered down, and then fixed on her crotch. Five seconds later Bridgett snapped her legs shut, and then she smiled at me. I'm sure my face clearly revealed my look of disappointment. I tried to focus my attention on the textbook on top of my desk, but a minute later I looked back at Bridgett. Again she was facing me, and again her legs were parted, and I had a clear view of her white panties. Again I felt paralyzed and I was unable to avert my eyes! And again, five seconds later she closed her legs, but this time she whispered something to Melanie Johnson, the girl sitting in front of her, and both of them began to laugh. I felt my cheeks getting hot, and I wanted to run from the room, but right at that moment my teacher returned to the classroom. She heard the girls laughing and walked over to investigate.\n\n\"So Melanie... would you like to tell me, why you're laughing, in my classroom?\n\n\"I'm sorry Miss Turner. Joey did something that made us laugh.\"\n\n\"And what was he doing that was so funny Bridgett?\"\n\nBefore Bridgett could respond Melanie blurted, \"We caught him staring at Bridgett's panties. I mean, he couldn't take his eyes off of her. It's like he was struck dumb or something. I don't know why, but that struck us as being hilarious.\"\n\nMy teacher's face was stern, and she looked me in the eye, \"Is this true Joey? Were you, or were you not, staring at Bridgett's panties?\"\n\nI felt the tears forming in my eyes, and I felt terribly ashamed of myself.\n\n\"I did stare at her Miss Turner. I know I shouldn't have, but I just couldn't help it!\"\n\nMy teacher thought for a few seconds, \"You will go to the principal's office immediately, and you will tell Mrs. Prickly what you've done. She will decide a suitable punishment for your disgraceful behavior.\"\n\nOne hour later my parents were sitting next to me in the principal's office, and Mrs. Prickly was talking to them about my \"panty problem.\"\n\nWhen we were driving home no one spoke for ten minutes. I was terrified. Then my father cleared his throat and began, \"Well Joseph, I thought your interest in panties had subsided years ago, but apparently that's not true. Do you still think about girl's underwear a lot?\"\n\n\"Yes Dad. I don't know why, but I just can't help myself. Is there something wrong with me Dad?\"\n\nMy father looked over at me and smiled.\n\n\"No Joseph, there's nothing wrong with you. You're getting older, and it's natural for you to be thinking about girls, and how they're different from boys, and one of those differences is their underwear. When your principal called, I thought you'd done something much worse, like sassing your teacher, or getting into a fight with another boy.\"\n\nAs we were driving past a shopping mall my father spoke, \"Joseph, would you like it if your mother bought some panties for you? Like I said before, you could only wear them at home.\"\n\nI thought about this for a minute. I looked at my father and he seemed relaxed and calm. \n\n\"No, thank you Dad. I think I need to wear ordinary boy's underwear, and the less I think about girl's panties the better off I'll be. I don't want to get into trouble at school ever again!\"\n\nThe next day at school Edith approached me in the cafeteria.\n\n\"Joey, I heard about what happened to you yesterday, from some of the girls in your class. They're spreading rumors about you, saying that you have a \"panty problem,\" and they're saying you're a \"perv.\"\n\nI looked at Edith's face, and I could see she was concerned about me. I felt tears forming in my eyes.\n\n\"Oh Edith! I don't know how to explain what happened. I think they're might be something queer about me. I don't understand why I like to look at panties so much!\"\n\nEdit put her face close to mine, and then whispered in my ear, \"It's ok. I'll talk to the girls that are saying these awful things, and I'll put a stop to this nonsense, but you have to promise me that what happened yesterday will never happen again! Ok Joey?\"\n\n\"I promise Edith.\"\n\nEdith smiled back at me.\n\n\"You're a sweet boy, Joey\" and then she kissed my cheek.\n\n\"Thank you Edith. You're my best friend in the whole world!\"\n\nChapter 4\n\nWhen I was in seventh grade I experienced another \"panty moment,\" that I still remember like it happened only yesterday. Edith's mother had called one afternoon in the spring, and invited me and my mother over for a visit, which meant the adults would share an afternoon cocktail, while the children entertained themselves quietly upstairs. Edith escorted me up to her bedroom. When we were inside she closed her bedroom door. I took a seat at a small study desk that Edith used when doing her homework. Usually Edith wore a t-shirt and blues jeans, or shorts, after school, but today she was wearing a crisp white blouse and a gingham skirt with the hem one inch above her knees. Something looked different about her, but I couldn't put my finger on what it was. Edith stood three feet in front of me. She seemed to be waiting for me to say something. I just looked back at her, and I was puzzled by her behavior.",
        "Finally she spoke, \"Joey, do you notice anything different about me?\" \n\nShe had a look of anticipation on her face. She moved her torso from side to side and smiled at me. I looked at her from head to toe, trying to determine what was different. When I looked at her chest I spotted two rounded areas that I didn't remember being there before.\n\n\"Edith, what is that? You didn't have those before!\" as I pointed at her chest.\n\nShe looked back at me and giggled, \"Very good Joey. You noticed that my tits are coming in!\"\n\nShe unbuttoned her blouse and opened it for me to see her chest. Proudly she announced, \"I'm wearing a training bra! Isn't that wonderful Joey? I'm not a little girl anymore, and I'm becoming a beautiful woman! Mommy says I'll have \"big tits\" just like hers. She also said that boys will like my big tits, and they'll want to touch them, and look at them. Isn't that great Joey?\"\n\nI was dumfounded. What could I say?\n\n\"Well Edith, I can see you're very proud of your tits, and I'm glad for you. But can we still be friends? That's really what's most important to me.\" \n\nShe looked into my eyes, \"You're such a sweet boy Joey. Of course we can still be friends. You're going to be my husband some day, remember?\" Then she looked down at her bra.\n\n\"Do you think my training bra is pretty? Oh, I almost forgot. Mother also bought me matching panties.\" \n\nThen she pulled her skirt up above her waist. Her panties were the same light blue color as her training bra, and the two garments captured my attention for a full minute.\n\n\"Yes Edith. I think your bra and panties are very pretty, and they look very nice on you.\"\n\n\"Oh I'm so glad you like them Joey! You aren't embarrassed that I showed them to you?\"\n\nI had a big grin on my face and I was openly staring at her light blue knickers. I couldn't avert my eyes, even though I knew I was not acting like a proper young boy should.\n\n\"No I'm not embarrassed at all, Edith, and thank you for sharing them with me. They're lovely.\"\n\nThough I think I was talking normally, I still couldn't avert my eyes from Edith's knickers. \n\nAfter a few seconds of awkward silence, Edith said in a somewhat stern voice, \"Joey, can you look at my face when you're talking to me?\"\n\nShe caught me.\n\n\"I'm sorry Edith. Sometimes I can't help myself. You know I've always had an attraction for panties since I was a small boy. They make me feel funny.\"\n\n\"I know you have a strong attraction for girl's underwear, and I'm ok with that. But you need to be more discrete around other girls. They won't think it's cute like I do.\"\n\n\"Thank you for your advice Edith. I know you're trying to help. You're like a big sister who watches out for me.\"\n\nShe laughed at that. \"You're a sweet boy Joey.\"\n\nEdith walked over to the mahogany dresser in front of her bed, and looked at herself in the large mirror that was attached to the wall above her dresser. She opened the top drawer and looked at the contents.\n\n\"I just thought of something that might help you. Whenever we're in my bedroom, you have my permission to open my dresser and look at my panties. Do you think you would like to do that Joey?\"\n\nI didn't know what to say to her. I was so grateful. Her kindness touched me down to my soul!\n\n\"Oh Edith... really? I do hope you're not teasing me?\"\n\n\"No Joey, I'm not teasing. I know it makes you happy.\"\n\n\"Thank you Edith! You're the best girl in the whole world. I guess maybe we should marry someday!\"\n\nDuring my seventh and eighth grade years, Edith would invite me over after school whenever she had some new panties to show me, and this would happen about twice a year, typically right after Christmas, or the day after her birthday, which was in the middle of July. As she got older I noticed that her taste in panties changed. As a young girl she wore cotton briefs, but after she started wearing her proper brassieres instead of her training bra, she started wearing bikini style panties, and a few of them even had some nice lace trim, that I thought looked very feminine and pretty indeed.\n\nChapter 5\n\nMy studies became more challenging when I started high school, which was good for me, because it kept my mind on other important things, and not thinking about women's underpants all the time. But what I vividly remember about that time was that I enjoyed going to our school sporting events, especially the events where the cheerleaders performed. I dearly loved to watch the cheerleaders doing their routines. For me it was exciting when a cute cheerleader would kick her leg high into the air, and showing her pretty briefs underneath her short skirt. I knew she wasn't really showing me her panties, but that didn't matter to me, as they looked very similar, and the effect on me was the same. Looking at them made me feel funny. At this time I also became a fan of ladies ice-skating, women's gymnastics and ballet. I liked it when the woman would spread her legs apart, showing the thin material that covered her \"female parts.\n\nChapter 6 \n\nAt the end of summer before I left for college, I experienced another \"panty moment,\" that affected me for the rest of my life. At the time I was nineteen years old.\n\nI had enrolled at a prestigious university in Massachusetts, over three thousand miles away. My parents were very proud of me, and decided to throw a huge going away party for me, and all of my relatives, and friends of the family were invited to attend. I estimated there were over two hundred guests invited. The party started at noon, and continued until sunset. Of course, not all of the guests were there at the same time. Edith arrived around six pm, accompanied by Julia, her mother, and Harold, her father, who was a federal district court judge, and as such he was considered to be a powerful man in San Francisco society. Harold and my father were both long time members of the Excelsior Club.\n\nMy mother was the first to spot the Chatsworth's arrival. Accompanied by my parents, I walked over to greet them. \n\nMother spoke first, \"Hello Julia. I'm so glad you could come.\"\n\nShe gave Julia a hug, while Edith's father and my father shook hands.\n\n\"Hello Edward, this must be an exciting time for you, watching your Joey going off to college?\"\n\n\"Yes Harold, I'm very proud of my son. Soon he'll be a grown man, ready to join me in running my company. Actually, watching him grow up is making me start to feel my age.\"\n\nI approached Edith and gave her a kiss on the cheek.\n\n\"Thank you for coming to my party Edith. It means a lot to me.\"\n\nShe smiled back at me, \"Wow Joey! Look at you, all grown up and going out into the world. I think you look very handsome!\"\n\nI stepped back and took a good look at Edith. This was the first time I'd seen her in over a year, as she'd been attending a private university in Bristol, England. She'd changed a lot, and looked much more mature and grown up to me. She was wearing a stylish red party dress that showed off her womanly figure. I remembered the time when we were young and she predicted that she would have \"big tits just like her mother,\" and thankfully her prediction had come true. Her bosom was stunning, and I liked this new Edith very much indeed. \n\nEdith's parents both turned their attention to me. Her mother gave me a warm hug, pressing her ample breasts against my chest, and they felt very nice.\n\n\"Hello Joey dear. Congratulations in getting into that fancy college. I just know you'll have a marvelous time there. You're very good looking Joey. I'll bet the girls will be all over you, and you won't have any time to study!\"\n\nI smiled back at her, and I could feel my cheeks getting a little warm.\n\n\"Thank you Julia. I don't know about the girls bothering me, but I do hope you're right.\"\n\nWe all chuckled at that. Edith's father spoke next.\n\n\"Well Joey. You're a grown man now. I expect to hear good things about you. Work hard, and I'm sure you'll be a success just like all the men in the Mason family.\"\n\n\"Thank you Judge Chatsworth. I appreciate that.\"\n\nEdith grabbed my arm, \"Ok, I'm taking Joey away now. I haven't talked to him in ages, and I want to catch up.\" \n\nShe looked towards her parents, \"Would it be ok if Joey and I had one glass of wine to celebrate? After all, I did turn twenty-one last month.\"\n\nThe men remained silent, but Edith's mother answered her, \"That's fine dear, but don't keep Joey to yourself too long. There are other guests who want to wish him well.\"\n\n\"I won't, and thanks Mom. I'll bring him back soon, I promise.\"\n\nEdith grabbed my arm, turned around and pulled me after her. We walked out to the backyard where two refreshment tables were set up. One table was covered with serving trays of tasty hors d'oeuvres, and the other table had an assortment of wine glasses at the front of the table and full bottles of wine at the back. A serving person stood behind the table, and was opening wine bottles and filling the glasses. Edith examined the trays of hors d'oeuvres first. \n\nOne of the trays was empty and she asked the server, \"This one must have been very good. Can I ask what we missed?\"\n\nThe server looked at the tray and frowned.\n\n\"Yes Miss, I'm afraid the crab puffs disappeared quickly. I heard they were quite delicious. If you don't mind waiting here for a bit, I'll go back to the kitchen to see if there are any more available. It won't take me long.\"\n\nShe gave the server a friendly smile, \"Oh, that's very nice of you. We'll wait right here.\"\n\nThe server nodded his head and started walking in the direction of the kitchen. When he was out of sight Edith picked up two wine glasses and handed them to me. Then she grabbed a full open bottle of California chardonnay and said, \"Ok Joey, let's go someplace private where we can talk.\"\n\nI grinned at her, \"You're a bad influence on me Edith.\"\n\nShe looked back at me and laughed, \"Don't be such a pussy Joey!\"\n\nI thought for a second, \"Wow, you have changed.\" \n\nThen I replied, \"I know where we can be alone. The pool house should be vacant.\"\n\nI held her hand and led her in the direction of the pool house. After we entered, I locked the front door behind us, and led her into the guest bedroom. There were two straight back chairs and a small round table in one corner of the room, and I set the two wine glasses down on the table, and Edith put the bottle of wine next to them. I sat at the edge of the large king size bed, and Edith pulled out one of the chairs and sat down facing me. We each had a large glass of wine.\n\nEdith spoke first, \"Finally we're alone! I hate large parties and having to make small talk with strangers. It's so fucking boring, don't you think Joey?\"\n\nI'd never heard Edith use course language before, and I thought that university life had changed her in a way that her parents would not approve of. Proper ladies were not supposed to talk like that. She seemed very self-confidant. I thought, \"Edith is a very strong woman now, and strong women are exciting! I'll bet she's not shy when she makes love.\" \n\nShe proceeded to tell me about her adventures in England, and what university life was like, while we had another glass of wine. She also told me about the men she had dated, even providing some intimate details. I was fascinated by what she was telling me. \n\n\"I liked my last boyfriend, Andrew, very much. He was a good kisser.\"\n\nThen she got a serious look on her face, \"Are you a good kisser Joey?\"\n\nHer question took me by surprise, and I was at a loss as to find a suitable answer. \n\nFinally I spoke, \"I really don't know Edith. I've kissed girls on the cheek, or a quick peck on the lips, but never a real kiss.\"\n\n\"Oh that's too bad, but I know there will be lots of girls at your college who'll want to kiss you.\"\n\nThen she said, \"Stand up Joey. I want to take a good look at you, now that you're a grownup young man.\"\n\nI did as she instructed and stood three feet in front of her. She looked at me closely from head to toe. Then she had me turn around, and she spent another full minute looking at my backside.\n\n\"You can face me now, Joey. I want to be the first girl to give you a real kiss. Would you like that Joey? After all, we are going to marry some day.\" \n\nAgain she surprised me, but I knew I wanted to kiss her. I looked at Edith and grinned.\n\nShe smiled back at me; \"I'm going to take that for a yes.\"\n\nThen she got up off the chair and approached me. She through her arms around my neck, tilted her face up to mine, and closed her eyes. I pursed my lips and gently leaned into her until our lips touched. I heard her say \"Hmm\" which I took to mean I should continue kissing her. She pulled my head into her, and pressed her lips firmly onto mine. I liked this feeling very much, and I was starting to feel warm. Her lips parted and she touched the tip of her tongue to the front of my lips. Following her lead, I parted my lips. The tips of our tongues touched, and I felt a spark. A few seconds later, her tongue was all the way in my mouth, probing me. I felt my penis stiffening, and it felt nice... more than nice. I'd never felt so alive before, and I knew I wanted this feeling to go on forever.\n\nAfter another minute of kissing, Edith pulled away from me about two feet. She looked into my eyes and smiled, and then her eyes moved downward, and I knew she was looking at my groin, checking to see if I was showing through my trousers. I knew my penis was fully erect, and I wondered if that might upset Edith. With her hands she pushed me back onto the bed, and then she sat back down in the chair facing me.\n\n\"That was a very nice kiss Joey! I think you'll do well with the girls at your college.\"\n\n\"Oh Edith, please don't tease me. I don't know anything about girls. The only girl I've ever really cared about is you, you know.\"\n\nShe didn't say anything for a few seconds, and I could tell she was thinking about what I'd said.\n\n\"Joey, do you still have an attraction for girl's panties?\"\n\n\"I do Edith, very much so.\"\n\n\"I thought so. I want to give you something so you'll remember me.\"\n\nThen she pulled the hem of her party dress up past her knees and opened her legs. Her panties were made of a thin material that was very transparent. If it weren't for the cotton gusset I would have had a very clear view of her genitalia. Even so, I could see the top portion of her vagina.\n\nAgain she looked at my crotch, and she could very plainly see my excitement. She was so confident. She stood up directly in front of me with her dress pulled right up. Then she smiled at me as she put her hands on her hips and deliberately stood with her legs spread wide apart.\n\n\" You can look at me all you want Joey. I like the way you look at me, and how needful you seem.\"\n\nEdith Chatsworth had complete control over me, and she knew it. She mesmerized me. \n\n\"Oh Edith! Thank you for understanding!\"\n\nI openly stared at her panties for two full minutes, and I noticed the crotch of her panties looked very wet. \n\nI looked at her, \"Edith, did you have an accident?\"\n\nShe gave me a puzzled look, \"What do you mean Joey? I don't understand what you're asking me.\"\n\n\"Well, um... it looks like you've peed in your panties.\"\n\nEdith covered her mouth with her hand and started giggling.\n\n\"No Joey, I didn't pee on myself. When women are sexually aroused, their vaginas get wet, so the man can easily slide his penis inside of her. You didn't know that?\"\n\nI started to blush, and I felt very embarrassed, but her legs were still open, and her white panties were still available for my viewing. I got up off the bed and knelt on the floor in front of Edith. She pulled the hem of her party dress up past her hips, and spread her legs open as far as possible. She put her hands on my cheeks and pulled my face up to look at her.\n\n\"Joey, do you like looking at me?\"\n\n\"I do Edith. I love looking at your pretty panties so closely. I can smell you Edith, and I love your womanly smell very much!\"\n\nShe laughed, and then she reached down with her hand and pulled her panty gusset to the side, showing me her beautiful moist pussy.\n\n\"That's very good, Joey. Here, take a good look at me, and then I want you to taste my cunt!\" \n\nEdith grabbed the hair at the back of my head and shoved my face into her twat. I stuck my tongue out and licked her lustily. She tasted so nice... she smelled so wonderful... I was in heaven, and I never wanted to be anywhere else! I was lost!\n\nEdith allowed me to explore her with my tongue... licking her... nibbling her... probing her... and inhaling her scent. I could hear her moaning softly, and I knew she loved what I was doing to her body.\n\nTen minutes later Edith's was taking quick shallow breaths. She placed her hands on the back of my head and shoved my face into her as hard as she could, and it was becoming difficult for me to breathe. But a few seconds later she arched her back and yelled out, \"Fuck yes Joey! Fuck yes!\" \n\nHer whole body began to quiver. This lasted for about ten seconds and then, finally... she relaxed.\n\nI looked up at her face, \"Are you alright Edith? Did something just happen to you?\"\n\nShe looked back at me and grinned, \"Oh Joey, I just had a wonderful orgasm. Thank you!\"\n\n\"Oh, um... um... I don't know what I'm supposed to say. Um... you're welcome?\"\n\nShe helped me to get up off the floor, and then she pushed me back onto the edge of the bed.\n\n\"Now it's your turn, Sir\"\n\nShe reached down with her hands, unbuckled my belt, and pulled my zipper down. Then she grabbed the waistband of my trousers and underwear, and pulled them down to my ankles. She pushed me back to the center the king size bed, and then sat over me with her knees on either side of my hips.\n\nShe looked mischievously at me, \"You're going to fucking like this, Mister. Have you ever had your cock sucked, Joey?\"\n\nI squeeked, \"No, but I know I really want it! Oh Edith... please suck me!\"\n\nWith that, she moved down on my body so her mouth was directly above my erect penis. She opened her mouth and placed it over the head of my cock, and then proceeded to lick it with the tip of her tongue. The sensations coming from my penis were so exciting to me. Then it dawned on me, Edith Chatsworth was giving me my first blowjob! My mind began to spin with the excitement! \n\nShe took about half of me into her mouth, and then she started sucking me. She moved her mouth up and down on me, and each time she went down she took a little more of me inside of her, and a minute later she had my entire erect penis inside of her mouth! \n\nI was in heaven! This continued for another minute, and then Edith pulled her mouth off of me. She sat back up, and got off of me. \n\nShe looked at me, \"Joey darling, I want you to get on top of me, and then I want you to give me all of your cum. I want you to spunk on my face!\"\n\nWhen she said this I panicked. \"Edith, I don't know about that. I'm ashamed to tell you this, but I've never masturbated before. I'm not sure what I should do!\"\n\nShe gave me a warm smile, \"You don't need to worry about it Joey. I can make a man spunk any time I want!\"\n\nShe got up off of the bed, took my shoes and socks off, and then pulled my trousers and underwear off. She stretched out on her back beside me on the bed. She held my hand for a minute and then guided me up on top of her, so my knees were straddling her chest, and the head my penis was above her mouth. She wrapped both of her hands around my shaft, and started stroking me up and down. At first her grip was light, and she moved her hands slowly. The sensations in my penis were amazing and I knew what I was feeling was pure lust for her. When I started moaning she gripped me more firmly, and the pace of her strokes doubled. \n\nI looked into her eyes, and I felt so close to her. This was the most intimate thing I'd ever done.\n\n\"Are you getting close Joey?\"",
        "I was breathing very hard and I couldn't answer her. I nodded my head. \n\n\"Now Joey. Give me your cum! I want all of it!\"\n\nShe stuck out her tongue and placed it directly under the knob of my rock hard cock, and then closed her eyes.\n\nThis sight pushed me off of an emotional cliff. I felt my body doing strange and wonderful things that I had no control over. Electrical pulses, starting at my anus, traveled up my penis to the head, and I watched as a long strand of thick white liquid spurted out of me and landed on Edith's beautiful face. Then there were three more spurts, after which her entire face was coated with my creamy spunk. \n\nI let myself relax for a few seconds, and then looked at her. \n\nShe smiled back at me, \"Did you like that Joey?\"\n\n\"Oh God Edith. That was amazing. I never knew anything could be so wonderful!\"\n\n\"You're a sweet man Joey, but I'd like to wash my face now.\"\n\nI got off of her, held out my hand, and helped her to stand up. She gave me a kiss on my lips, and then went into the bathroom. I could feel some of my semen on my lips, and I wiped it off with the back of my hand. A few minutes later Edith returned. She'd adjusted her hair and makeup, and she looked gorgeous. \n\nShe smiled at me and held out her hand, \"Here Joey, I have a gift for you to remember me while you're away at school.\"\n\nI extended my hand towards hers, and she dropped her moist panties into my palm. I held them up with both of my hands, so the crotch was hanging down. Then I brought the crotch up to my nose and inhaled deeply the intoxicating smell of Edith's pussy. \n\nI looked into her eyes, \"Thank you Edith. I love my gift!\"\n\nAt that moment I made an important decision. I was madly in love with Edith Chatsworth, and I was going to marry her as soon as I graduated from that \"fancy college\" in Massachusetts. \n\nChapter 7\n\nThe future that I had planned with Edith Chatsworth was destroyed six months later, when I received this email, from the one true love of my life:\n\nHello Joey,\n\nI hope you're alone and sitting down when you read this, because I know this will be a shock for you, and I'm very sorry about this. \n\nYou are the sweetest person I have ever known Joey.\n\nI've met a man in England, and I have fallen in love with him. I don't really know how it happened, but it did, and there's nothing I can do about it. At this point my emotions are in control of me, and the decisions I choose to make for my future. \n\nHis name is Jonathan Shepherd, and he has asked me to marry him. I'm sorry I have to tell you this Joey, but I have accepted his proposal. His family lives about an hours drive north of San Francisco, in Calistoga, and that's where we're going to have the wedding. His family owns a famous winery called Chateau Shepherd, and the ceremony will be held at the winery. \n\nI expect you and your family will receive an invitation, and I would like you to be there, if it's not too hurtful for you. If you can't be there, I will certainly understand.\n\nI wish you the best,\n\nEdith \n\nChapter 8\n\nThe following year, I experienced another \"panty moment\". I was twenty-one years old. I had flown home for my two-week spring break from college. I hadn't seen my parents in seven months, and although we spoke on the phone every few weeks, and sent texts to each other every other day, I was still looking forward to seeing them face-to-face. Although my relationship with my father was not close, I still had great respect for him, and I very much enjoyed conversing with him when we found a topic that was of some interest to both of us. For example, we were both fans of the San Francisco Forty-niners football team. My father enjoyed the physical contact and strategy of the game, while I enjoyed watching the \"Gold Rush\" cheerleaders with their sexy outfits and high leg kicks. I also enjoyed spending time with my mother, because of her steadfast support and unconditional love. She made me feel safe when I was with her.\n\nOne Tuesday afternoon, I decided to get a head start on one of the novels that I knew I would be required to read in my English Literature class, that I would be taking next quarter. I opened the book and read for two hours, and then my eyes became tired. I thought it was time for a break, and I decided to head downstairs to the kitchen to get a snack. As I was walking down the hallway, I went past my parent's bedroom. My mother was in her room, pulling dirty clothes out of the laundry hamper.\n\n\"Oh hi Mother. Do you need any help with the laundry?\"\n\n\"That's sweet of you to offer Joey, and yes, I could use your help. I'm supposed to meet Julia Chatsworth in twenty minutes for lunch downtown. If I leave right now, I'll only be a few minutes late. Just separate the whites from the colored clothes. Please start the whites on the hottest temperature setting, and after the wash cycle is done, you can throw them in the dryer. I should be back when they're dry to start the colors.\"\n\nThen she smiled warmly at me, \"Do you think you can handle that Joey?\"\n\nI chuckled, \"Yes Mother, I got it. I think a smart college man like me can figure out how to do one load of laundry.\"\n\nI took her arm and directed her toward the doorway, \"So go already! I got this.\"\n\nShe kissed me on the cheek, and as she headed out the door I couldn't help admiring her firm round ass. I knew I shouldn't be looking at my mother like that, but I couldn't help myself, as she's a very beautiful woman with a fantastic bum. I wondered what it would be like to open her bottom and lick her \"back there.\"\n\nInstead of pulling one item of clothing out of the laundry hamper at a time, I picked up the hamper and dumped the contents out onto my parents king size bed. In about two minutes time I had the whites and the colors separated into two piles. I gathered up the whites in my arms and headed down to the laundry room. I dumped the whites into the machine, threw in a cup of detergent, set the water temperature to \"Hot,\" and started the \"Normal\" wash cycle. \n\nThen I went to the kitchen to find something to eat. I grabbed an unopened bag of potato chips, popped the cap off a cold bottle of beer, and walked back upstairs. I stopped at my parent's bedroom and looked at the pile of colored laundry. I placed the bag of chips and the beer on a nightstand, which was on my mother's side of the bed. The drawer of the nightstand was not shut all the way. I reached down, meaning to shut it, but then I decided it might be interesting to see what my mother had in her nightstand. I pulled the drawer open and looked at the contents. I was surprised by what I saw. Well, shocked might be a more accurate description. Her drawer was full of strange objects, and when I picked a few of them up to examine them, I came to the conclusion that my mother's nightstand drawer was full of sex toys! \n\nI had visited a few online sex shops, and I recognized most of her toys. She had several types of vibrators. The one that first caught my attention was the classic \"rabbit pearl\" vibrator. There were also some silicone dildos of various sizes and colors, one of them was much larger than the others, and was twelve inches long and at least three inches in diameter, a \"horse cock!\" There were butt plugs and anal beads, as well as some cock rings and testicle stretchers. There were four pairs of handcuffs, and two blindfolds, as well as several bottles of general-purpose personal lubricant and some anal lube. At the bottom of the drawer I found six wooden clothes pins, and I wondered what my parents did with them. I spent about a half hour picking up each object and inspecting it closely. Even though my mother is an attractive woman, I never thought of my mother as being a sexual woman, and I was pleased to see that she liked sex, and was not afraid to be adventurous in her bedroom. It made me appreciate her even more. It made me happy to think that she wasn't afraid to try new things, and have some excitement in her life, and the life of my father! Then it dawned on me... my father was also adventurous! Holy shit! My mind was spinning.\n\nIn my mind I started to imagine what my parents might be doing in their bedroom at night. I wondered which one of them would be in control, and who would willingly do what they were told. My father made all the important decisions in my family, and his word was law. What if the opposite were true when they made love? What if Mother was the boss? I remembered my last encounter with Edith Chatsworth, and how she had controlled me with her will, and how she mesmerized me with her moist panties. \n\nI replaced my mother's toys and shut the nightstand drawer. Then I turned my attention to the pile of colored laundry on the bed. What caught my eye first was a pretty brassier. My mother has very big tits, and over the years I've noticed many men admire my mother's ample bosom when she wasn't aware. I was proud to have such an attractive woman for my mother. In the past I'd wondered about my mother's breasts and what size they were. I picked up the bra, looking for the tag, which would tell me this information. The bra size was 38D. Wow, Mom has huge knockers! Then I noticed a pair of nylon panties that matched the bra. I picked them up and unraveled them, so I could get a good look at them. I thought they were very pretty panties indeed. The material was very soft and I rubbed it on my cheek. Yes, very nice indeed! I looked at the cotton-lined crotch and noticed some light stains. I brought the gusset up to my nose and inhaled deeply. Definitely, the smell of a woman! Yes, there was a slight scent of urine, but something else was the more dominant smell. The musky smell of pussy! So nice! I felt my penis beginning to grow. \n\nIn my mind I wondered what it would feel like to wear my mother's panties and brassier. I decided now was the time to find out. I stripped off my clothes and stepped into my mother's nylon panties. Then I put on her matching bra. I closed the bedroom door, because I knew there was a full-length mirror on the back of it. I admired myself in the mirror. Her underwear looked quite lovely on me, and I could feel my cock stirring. \n\nIt was so very erotic. My thoughts were running wild on me. I was twenty-one years old and my mother was in her middle forties. She had always been a wonderful Mom to me, and so I wondered what she would think if she saw me wearing her underwear. I went through an imaginary conversation with her in my mind.\n\n\"Mommy, I have my prick inside your lovely silky panties.\"\n\n\"That's wonderful, Joey. Can you feel Mommy's hairs?\"\n\n\"Yes Mommy! I love the feel of your hairs on my prick. Are you angry with me?\"\n\nI closed my eyes and continued my fantasy. My Mommy lovingly cupped her hand under my testicles.\n\n\"Tell me Joey, do you like Mommy doing this to you? It's important that no one else knows\" \n\n\"Oh Mommy, it's so wonderful. I won't tell anyone... you're so nice.\"\n\n\"That's good, Joey. Mommy will let you wear her panties and bras to cover your tiny breasts.\"\n\n\"Oh Mommy, I want that so much! Will I have nice titties?\"\n\n\"Mommy will give you some tablets and my little girl will have nice big tits for Mommy.\"\n\nI opened my eyes, and I was feeling very bubbly. I thought about jacking off right then and there, but after some consideration, I decided to delay this for a bit.\n\nI grabbed the chips and beer, and headed back to my bedroom. After I finished my snack, I thought about reading some more, but I decided I was on vacation, and a little \"me\" time was more appropriate. I put on some light rock music on my iPod. I got into my bed, and pulled up the covers over me. In a few minutes I was warm and cozy, and ready to have some fun. I reached down with my hand and started to gently rub my penis, which was already erect. I stripped off my mother's panties and put them over my face, with the gusset under my nose. I was very aroused, and I started thinking about Edith, and when she gave me my first blowjob. Soon I was feeling very frisky, and I pulled my covers off of me so I could see my penis while I stroked it. I wrapped the panties around my cock and closed my eyes, thinking about Edith pulling her panty gusset aside and showing me her wet cunt.\n\nI started to moan, \"Oh Edith! I love you so much! Your cunt is so beautiful Edith. Oh Edith darling, please let me spunk on you again!\" \n\nJust as I was getting ready to explode, I heard my mother's voice. \n\n\"Hi Joey, did you get the laundry done like I asked?\"\n\nI opened my eyes, and there was my mother looking back at me. Immediately I pulled my covers up to hide my nakedness from her. I rolled over and faced my bedroom wall, and I felt horribly ashamed of myself. I felt like I was going to cry. \n\n\"Please go away Mother. I'd like to be alone now.\"\n\nI expected to hear my bedroom door close as she left me alone, but instead, I heard her sit down on the corner of my bed.\n\n\"Joey, I think we need to talk. Please turn over and look at me.\"\n\nFor a few seconds I tried to ignore her, to pretend that I hadn't heard her. She put her hand on my hip.\n\n\"Come on Joey. We really need to talk about this.\"\n\nI realized she wasn't going to relent, so I rolled over onto my back and looked up at her.\n\n\"Mother, can't we just pretend this didn't happen?\"\n\nShe smiled at me, \"No Joey, we can't do that. I know what I saw, and I saw you masturbating.\" \n\nI turned my face to the wall, feeling more ashamed than ever.\n\nShe was speaking so calmly to me. \n\n\"You shouldn't have any secrets from me, Joey. Don't forget, Dear, I am your mother.\" \n\nI just kept quiet, and then, she dropped her bombshell. \n\n\"I've been watching you from the hallway Joey, for the last twenty minutes.\"\n\nI gasped, \"Oh no! Twenty minutes?\n\n\"Yes, Joey. I saw you put on my panties and my brassiere, and when you put my used panties to your face.\"\n\n\"Oh my God, Mother. You saw me do that?\"\n\n\"Yes, Joey. Did you like sniffing my dirty panties?\"\n\nI felt so ashamed.\n\n\"I'm so sorry Mother. I promise, I won't do that again!\"\n\nHer tone changed; she was much softer now as she said, \"No, don't be sorry Joey. Lots of young men like playing with their mother's underwear and using them to masturbate. You didn't do anything wrong! It's very normal for men to relieve themselves, and many women like to do it too. You shouldn't be embarrassed at all. In fact, I would be more concerned about you if you didn't do it.\" \n\nI turned over and looked at her for a few seconds, trying to gauge if she was being sincere. She looked back at me calmly, and I could tell she wasn't upset with me. I felt so relieved.\n\n\"Thank you Mother. That makes me feel better. I'm kind of new to all of this.\"\n\n\"I know darling. Sex is a beautiful thing. It's what brings us closer to our spouses and friends, and that's truly wonderful, Joey.\"\n\nI thought about how much I loved my mother, and then I remembered the sex toys in her nightstand.\n\n\"May I ask you a question about sex Mother?\"\n\n\"Of course dear.\"\n\n\"When I was sorting the laundry, I looked inside your nightstand drawer, and...\"\n\nI waited to see her reaction. She seemed relaxed and calm.\n\n\" And what, Joey?\"\n\n\"Do you use those things in your nightstand drawer to relieve yourself?\"\n\nWithout any hesitation she answered me, \"Yes I do Joey. I also use them with your father. He's a healthy man with a strong sex drive, and he needs his relief too. I love your father very much, and I will do anything he asks of me to make him happy.\"\n\n\"I'm glad Mother. He's a lucky man to have you as his wife.\"\n\nI could see tears forming in her eyes. We sat quietly for a few seconds. Finally Mother spoke.\n\n\"Were those my dirty panties I saw wrapped around your penis Joey?\"\n\nWhat could I say? She saw what she saw, and denial was useless.\n\n\"Yes Mother, I was using your panties to wank. Are you angry with me?\"\n\nShe rubbed my cheek with her hand.\n\n\"No Joey. I feel flattered that you like my panties and bra, and I'll let you in on a little secret, your father likes jacking off using my panties too!\"\n\nI was shocked!\n\n\"Really Mother? Wow, that's certainly surprising!\"\n\n\"Well Joey, maybe I shouldn't have told you. Your father has several interests in that area, that could be considered somewhat unusual.\"\n\nI thought about asking her to elaborate on my father's \"interests,\" but before I could speak up, my mother grabbed the edge of my blankets, and slowly pulled them off of me. She ran her index finger over one of my bra cups.\n\n\"You look cute in my bra Joey!\"\n\n\"Really Mother? You don't think I'm being foolish?\"\n\n\"Not at all. What you're doing is unusual, but it's not uncommon. Many men enjoy wearing women's underwear, as it gives them pleasure, and really, what harm does it do?\"\n\nShe looked at the panties that were covering my penis. She grabbed her panties and then held them up with both hands. She looked at them for a few seconds, and I could see she was thinking.\n\n\"So I'm assuming you still have a fetish for women's panties?\"\n\nI knew I had a \"panty problem,\" but I never considered the idea that this could be a fetish. My eyes were fixed on her panties she was still holding up.\n\n\"I hadn't thought of it that way, but I suppose it must be true. Am I a freak Mother?\"\n\n\"She chuckled, \"Not at all Joey, you simply like women's panties. Most men like women's lingerie, but they aren't so needful about it as you are, and women like wearing it as well. It makes us feel sexy and nice.\"\n\nI was still staring at her panties, and I could feel my penis starting to swell. Then she stood up and looked down at my cock.\n\nShe watched my penis growing for about twenty seconds, and she didn't say a word. She seemed quite interested in watching.\n\nFinally she spoke, \"Would you like me to show you my panties Joey?\"\n\nI looked into her eyes, wondering what I should say. Her eyes were still fixed on my cock.\n\n\"Yes please, Mother. Show me!\"\n\nMy answer got her attention, and she looked back at me. She nodded her head, and then pulled the hem of her dress up to her waist. My eyes locked on her black lace panties. I heard myself moan softly. I looked down at my cock, and now I was rock hard, the head had turned a light purple color, and a drop of clear liquid seeped from the slit.\n\nMy mother stuck her thumbs into the waistband of her knickers, pulled them down to her knees, and let them drop to the floor. She stepped out of her panties, and then reached down and picked them up. She draped the moist gusset of her panties over the head of my cock.\n\n\"I'm going to leave you alone now Joey. I think you should continue what you were doing before I startled you.\"\n\nShe walked towards my bedroom door. As she was exiting she stopped and turned around to face me.\n\n\"I want you to know something Joey. You can use my panties, clean or dirty, anytime you want.\" \n\nMy amazing mother closed the door behind her as she left my bedroom.\n\nChapter 9 \n\nI slept in the next day, enjoying what was left of my spring break to the fullest. Around ten am, I started feeling hungry, and I went to the kitchen to make myself some breakfast. Cook was off today, my father was at work, and I knew my mother was attending a meeting regarding a charity event that was to be held at her country club. I poured myself a cup of coffee, sat down at the kitchen table, intending to read the morning newspaper. There was a small vase of colorful flowers on the table, and a plain white envelope was leaning against it. I saw the single word \"Joey\" written on the front of the envelope in my mother's handwriting. I picked it up and opened it. There was a simple card that said \"Thank You!\" on the front, and a gift card for Victoria's Secret, in the amount of two hundred dollars. I opened the thank you card and read it:\n\nDearest Joey,\n\nI want you to know I very much enjoyed our conversation yesterday regarding your fetish. It was nice to clear the air. You are a sweet man Joey!",
        "I firmly believe you need to accept your fetish, and make it a positive part of your life. There are many men who have the same feelings about panties that you do, and although it may not be \"normal,\" it's not unusual! Your father has \"unusual\" needs too, and I will encourage him to share this information with you in the future. \n\nI've enclosed a gift card for you to buy yourself some panties. You are an adult now, and you should decide which undergarments you choose to wear. I'll be home around three o'clock this afternoon, and if you want, I would be happy to go with you to the Victoria's Secret store at the mall to help you shop for panties.\n\nI love you!\n\nMom\n\nI looked at the gift card. I thought, \"Ok I can go to their web site to buy panties, but wouldn't it be better if I went with Mother to the local store? After all, I know nothing about women's sizes, and it would also be interesting to hear Mother's opinions.\"\n\nAt three o'clock she returned home. I was sitting at the kitchen table when she came in.\n\n\"Hi Mother, thank you for the gift card. I accept your offer to go with me to the Victoria's Secret store. Frankly, I think I need your help.\"\n\nShe looked at me and gave me a warm smile, \"Sure Joey. Let me freshen up and we can go in ten minutes, ok dear?\"\n\n\"That sounds good Mom. I can't wait. I'm going to get the prettiest and most feminine panties in the store! This is going to be so much fun!\"\n\nMother had her arm through mine as we entered the lingerie store. It was a large store, and I estimated that there were a dozen customers when we entered, and all of them were young women. We marched straight over to the panty section, and started browsing through the merchandise. Soon my mother and I developed a shopping system. She would pick up something that looked possible and hold it up for me to inspect. If I smiled at her, she would put it in our shopping basket. If not, it went back on the shelf. As regards to sizes, my mother explained that men need more material in front, whilst women need more in the back. For the briefs and hipsters, my mother picked the \"large\" size, for bikinis and thongs she picked \"extra large,\" and for G-strings she selected \"XX\" size. In about thirty minutes time, we had selected twenty-five pairs of beautiful sexy women's knickers. We walked up to the checkout counter, and there was an attractive young women working behind the counter, whom my mother immediately recognized.\n\n\"Oh hi Melanie. I heard you were promoted to store manager. Congratulations! You certainly know the merchandise, and you have excellent customer relations skills!\"\n\n\"Thank you for your kind words, Mrs. Mason. It's nice to see you again.\"\n\n\"Please, call me Beverly. I think we've known each other long enough to be on a first name basis. I'd like to introduce you to my son, Joey. This is the first time he's shopped for panties, and I offered to be his advisor.\"\n\n\"That's very thoughtful of you, Beverly.\"\n\nMelanie turned her attention to me. She extended her hand, \"It's nice to meet you Joey. It's always nice when we have a new gentleman customer. This may surprise you, but it's true, fifteen percent of our customers are men who enjoy wearing women's panties!\"\n\nI shook her hand. \"That's very interesting. I had no idea.\"\n\nHer smile waned for a bit, and then her eyes got wider.\n\n\"Say, wait a second! I thought you looked familiar. We were in fifth grade together! Don't you remember me? I'm Melanie Johnson, and I sat in front of Bridgett, remember?\" \n\nI looked back at her. Yeah, it was Melanie, all right. She was an adult now, and a very attractive woman indeed, but seeing her face reminded me of that horrible day, when I was sent to the principal's office for staring at Bridgett O'Brien's underpants.\n\n\"Nice to see you again, Melanie.\" \n\nMy mother placed the pile of panties on the counter and Melanie began to ring them up. She picked up one particularly colorful panty and held it open with both hands. \n\n\"So Joey, I don't know if you'd be interested or not, but we have a very pretty bra that matches this panty. You get a discount if you buy the bra and panties as a set.\"\n\nI looked to my mother for her advice. She gave me a nod.\n\n\"Um... sure Melanie. I'll take it!\"\n\n\"That's super. Do you know your bra size Joey?\"\n\n\"Sorry, I'm new to this.\"\n\n\"Oh, that's ok. Give me a sec, and I'll measure you.\"\n\nShe walked out from behind the counter and pulled a tape measure out of her skirt pocket. \n\n\"Can you hold up you arms for me please Joey?\"\n\n\"Sure Melanie.\"\n\nI did as instructed and she wrapped the tape measure around my chest.\n\n\"Ok let's see here. Your chest is thirty-nine inches around. I'll get you a thirty-nine A.\" \n\nShe headed over to where the bras were, and returned a minute later with a very pretty bra that matched my panties.\n\n\"So would you like some silk stockings and suspenders too?\"\n\n\"Um... gee... I don't know.\"\n\nI looked over at Mother. She smiled back at me and then she looked at Melanie.\n\n\"Yes, thank you Melanie. We'll take them. You're a very good sales person dear. I'll bet you could sell ice makers to Eskimos!\"\n\nMelanie laughed at my mother's joke, \"Good one Beverly! Actually, it's very easy selling to my gentlemen customers. I think subconsciously they want the whole package, they just need a woman to suggest it.\"\n\nMy purchases filled one large shopping bag, and when Melanie announced the total I handed her my gift card.\n\nShe smiled back at me, \"Thank you Joey!\"\n\nShe looked at my gift card, and then she looked back at me. \n\n\"You may not be aware of this, but when you spend two hundred dollars in a year, you automatically become a member of our VIP club. As a matter of fact, your father has been a VIP club member for years. Members receive special discounts, and once a year we have a private party, where members get to see new items before they're announced to the general public. There's also a private fashion show where our sales staff model the newest lingerie. I personally get a thrill from walking in front of my gentlemen customers wearing just high heels, a push up bra and a skimpy pair of panties. I like it when they stare at me, like I'm the most beautiful woman in the world. I also like to think about their cocks getting stiff from looking at me. It's quite a boost for my ego, and it's fun being naughty once in a while, don't you think? Oh, there's also wine and hors d'oeuvres, and a jazz quartet. It's really a lot of fun.\"\n\nI smiled back at her, \"Sounds very nice.\"\n\nAs we were driving home I thought to myself, \"Joey, you and Dad have another common interest, besides the Forty-niners football team! We both like wearing sexy women's panties!\"\n\nChapter 10\n\nDuring each of my summer breaks from college, I returned home and worked at my father's company, Mason Industries. It was already decided that after I earned my Bachelor's degree in Business Management, I would assist my father in running his company. While working summers, I would tail my father throughout his day, watching what he did, and learning how the business operated.\n\nNow I was twenty-four years of age, recently graduated from that \"fancy college back east,\" and ready to start my career. I was told which day I was supposed to start, where my reserved parking spot was, and that I would meet my father in his office at nine am, sharp.\n\nEven though I knew this path was determined for me on the day I was born, I was still nervous about starting this new phase of my life. My biggest fear was \"not being up to the job,\" and embarrassing my father and myself. \n\nI arrived fifteen minutes early at my father's executive suite, which was on the penthouse floor of a luxurious high-rise office building in the heart of the San Francisco financial district. I sat in the waiting area alone, as his executive assistant was not at her desk yet. I checked the time on my cell phone, and at exactly nine am, I knocked on my father's office door. I heard his voice on the other side of the door.\n\n\"Come in.\"\n\nI straightened my necktie, ran a hand through my hair, took a deep breadth, and entered. My father was seated behind his large desk in an oversize black leather executive's chair. There were three visitor's chairs in front of his desk. The middle chair was empty, but sitting in the chair to the right was my mother, and seated in the chair on the left was a young woman, wearing a stylish burgundy colored business suit. She had bright red hair that was tied back in a ponytail, and she was facing my father. My father stood up, looked at me and smiled.\n\n\"Good morning Joseph. Thank you for being punctual.\"\n\nHe looked in the direction of the red haired woman.\n\n\"I'd like you to meet my executive assistant, Miss O'Brien.\"\n\nThe woman stood up and turned around to face me. I looked her in the eye and smiled.\n\n\"I'm pleased to meet you, Miss O'Brien.\"\n\nAt that she chuckled, \"Oh we've met before Joey. You were my first boyfriend!\"\n\nI thought, \"Holy shit! It's Bridgett from fifth grade!\" I was at a complete loss for what I should say to her.\n\nShe extended her hand and I shook it clumsily.\n\n\"Hi Bridgett. Long time no see. How've you been?\"\n\n\"I'm super, and as you can see, I've changed somewhat since the last time we saw each other, which I think was probably eight grade graduation!\"\n\nI took a few seconds to look at Bridgett from head to toe. My first impression was that she was fucking gorgeous. Her womanly figure was exquisite, like they described in olden times, \"she was built like a brick shit house!\" In case you're wondering, that's a good thing. She had perfect features on her face, and her warm smile captivated me. I think I developed a crush on her right then.\n\nThere were a few seconds of silence and then my mother spoke.\n\n\"Good morning Joey. Your father and I have been waiting for this day for a long time. Then she leaned over and gave me a kiss on the cheek.\n\n\"Take a seat Joseph. We have some paperwork to attend to.\" \n\nI sat down in the middle chair. In front of my father was a tan manila file folder. He pushed the folder over to me.\n\n\"I need your signature on the bottom of the first five papers. After you sign, your mother and Miss O'Brien will initial where you've signed, and then they'll sign their names on the last page. In case you're wondering, they're here as legal witnesses that you've signed these documents of your free will.\n\nA few minutes later the signing was done. My father closed the file folder, and then placed it inside his briefcase. He looked at me and smiled.\n\n\"Congratulations Joseph! You now own forty-nine percent of Mason Industries. I retain fifty-one percent ownership for now. After I pass, you will be the sole owner. You will act as my right hand man, and in situations where I am absent or unavailable for whatever reason, you are the president of this company, and your decisions will carry the same weight and authority as mine.\"\n\n\"Do you have any questions?\"\n\n\"No Sir.\"\n\n\"I'm fifty-one years old Joseph, and I'll retire in four years. At that time, you'll take over for me as president of the company. I want to retire while I'm still young enough, and healthy enough, to enjoy my life and my wealth. I want to take your mother traveling all over the world, spoil her, and give her anything she desires. I want to give her a life that makes her feel young again... in her mind... in her soul... in her body! My father looked at my mother and winked at her! I couldn't believe it! My father was flirting with my mother! Then my father addressed the group.\n\n\"Well, we're done for now.\"\n\nHe stood up, indicating that the meeting was over. The rest of us stood as well.\n\nHe walked around his desk, approached me, and extended his hand. We shook hands for a few seconds, and then, for the first time in my life, my father hugged me!\n\n\"I know you'll make me proud son!\"\n\nHe had a grin on his face, and I can't be certain, but I think he had a few tears forming in his eyes!\n\n\"Bridgett will give you a tour of our headquarters, and then escort you to your new office. You need to get intimately acquainted with her. You'll soon learn to appreciate the value of a competent executive assistant. I can't tell you how many times she's stopped me from making stupid decisions. Her people skills are outstanding, and she knows our company almost as well as I do.\"\n\nI looked over at Bridgett. She seemed pleased with my father's praise. \n\nShe looked me in the eye, \"Follow me, Joey. Or would you prefer to be addressed as Mr. Mason?\"\n\nI looked into her beautiful eyes, \"When we're with other members of the company, I would like to be called Joseph, but when it's just the two us I'd like you to call me Joey.\"\n\nShe smiled back me.\n\n\"You got it Joey. Let's go!\"\n\nBridgett took me on a tour our building, introducing me to every manager and upper level executive we met. She gave me the details of each person's job responsibilities, their background, and pertinent information about the members of their families; births, deaths, divorces, illnesses, etc. The tour lasted about two hours. I tried to pay close attention to everything Bridgett told me, as I knew it would be of great value in my position as vice president of Mason Industries. When the tour was over she escorted me to my office. It was twelve o'clock, and I wondered whether we would be having lunch soon. I took my seat behind an expensive and large executive's desk. On the desk in front of me there was a black three-inch thick leather binder. \n\nI picked it up and held it. The binder weighed at least five pounds.\n\nI looked up at her, \"What's this Bridgett?\"\n\nShe smiled back at me.\n\n\"That's your homework Joey. It's the standard operating procedures for the company. You need to read it from cover to cover, and understand the contents. I'll leave you alone so you can get to it straight away. I'll have a sandwich and a green salad sent up from the cafeteria.\n\nFor the remainder of the afternoon I concentrated diligently on my homework. \n\nChapter 11\n\nAt five pm, I heard a knock on my door, but before I could respond, Bridgett walked in and sat down in the visitor's chair in front of my desk.\n\n\"Ok, I think you've had enough information thrown at you for one day. Don't you agree Joey?\"\n\nI closed the binder, and rubbed my eyes with the palms of my hands. I felt exhausted.\n\n\"Yes Miss O'Brien, I totally agree with you.\"\n\nI remembered how much I cared for her before the \"panty incident\" in fifth grade. Besides Edith, she was the only girl that ever talked to me, or was ever nice to me, and I really liked her back then.\n\nShe grinned at me, \"Your next homework assignment is to take your executive assistant out for a drink. There's a Marriott Hotel across the street that has an awesome Happy Hour.\"\n\n\"That's excellent. I could use a big vodka martini right now!\"\n\nWe grabbed out coats and headed towards the elevators.\n\nFifteen minutes later we were sitting at a corner booth in the hotel bar. When the cocktail waitress arrived, Bridgett ordered a Cosmopolitan, and I ordered an Absolute martini with a twist. After our drinks were delivered Bridgett took a large gulp of her Cosmo.\n\n\"God I needed that. It's not easy breaking in a new vice president!\"\n\n\"I tried very hard to make a good impression today Bridgett. I really did!\"\n\nShe put her hand on top of mine and squeezed it.\n\n\"I know you did, and you did great. I'll get you up to speed in no time at all!\"\n\n\"I want you to know, I very much appreciate your help Bridgett.\"\n\nWe sat quietly for a while, enjoying our drinks, and winding down from work.\n\nAll of a sudden, Bridgett started giggling.\n\n\"I just remembered that time in school when you couldn't stop looking at my underwear. That was so funny! Do you remember that Joey?\"\n\nI looked back at her, thinking about how to answer her.\n\n\"Yes, I do remember that day, Bridgett, and in all honesty, that memory is horrible for me, but... I did learn something important about myself from that experience.\"\n\nShe finished the last of her drink.\n\n\"That was delicious. I'm going to have another. Will you be joining me?\"\n\n\"Sure, why not.\"\n\nI raised my hand to get the waitress's attention. She smiled back at me and called out, \"Another round?\" I nodded my head. A few minutes later she returned with our drinks and removed our empties.\n\nWe sipped our drinks for a bit, and then Bridgett looked me in the eye.\n\n\"So Joey, what was the important thing that you learned about yourself on that horrible day in fifth grade?\"\n\nI looked back at her. Her face was relaxed, and she waited patiently for my response. I thought for a few seconds, trying to decide whether to share my secret with her. I remembered that my father had instructed me to get \"intimately acquainted\" with her. I decided to be truthful with her.\n\n\"Ok Miss O'Brien, I have a secret to tell you, and I'm assuming a competent executive assistant knows how to guard privileged information?\"\n\nNow I had her full attention. She gave me a mischievous smile.\n\n\"Absolutely Sir!\"\n\n\"Well Bridgett. Ever since I was a small boy I've been intrigued by women's underwear. I like looking at it, I like touching it, I like thinking about it, and I love to wear sexy women's panties! I've been wearing them every day for the last two years, and what I learned on that day in fifth grade is that I have a panty fetish!\"\n\nBridgett stared back at me. Then she gulped down the rest of her drink, \"No kidding? Are you wearing them right now?\"\n\n\"I am. Would you like to see?\"\n\n\"Yeah sure, what the hell.\"\n\nI unzipped my trousers and opened my fly, exposing some bright red silk material for her to view. She looked for a few seconds, and then looked up at my face and giggled,\n\n\"You have expensive taste in underwear sir... I like it!\"\n\n\"Do you think any less of me now?\"\n\nShe rubbed my cheek with her open hand and smiled back at me.\n\n\"Not at all Joey. I think it's wonderful that you've found something that gives you pleasure. I also think it's sexy as hell! In fact, I think you're making me a little juicy right now!\"\n\nThat shocked me, but it also excited me. I felt my penis starting to stir. \n\nI thought to myself, \"We're going to make a great team.\"\n\n\"Would you like to see at my panties, Sir?\"\n\n\"Yes I would, Bridgett.\"\n\nShe rotated her legs towards me, pulled her skirt above her knees, and opened her legs a little, just enough to give me a panty peek, while at the same time she looked over at the entrance to the lounge like she recognized someone.\n\nAfter about thirty seconds she closed her legs and turned her attention back to me.\n\n\"Can I tell you something about women Joey?\"\n\nBy now I had an erection that felt quite lovely.\n\n\"Sure Bridgett.\"\n\n\"A lot of us get turned on by accidentally showing our underwear in public to a man. Of course, this has to be accidental, and proper decorum must be maintained. For me, I get a feeling of power over the man. Out of the corner of my eye I'll catch him slyly looking between my legs, like I don't know what he's doing. I try to show as much as possible without attracting too much attention. I love thinking about a horny man drooling over my panties, with his cock getting hard under his slacks!\"\n\nI was shocked by her words!\n\n\"Wow Bridgett! That's amazing! I had no idea. I always thought women were so prim and proper, never entertaining thoughts like that.\" \n\nShe placed the palm of her hand over the tent in my slacks, and began rubbing me slowly. \n\n\"Can I tell something else Joey?\"\n\nThe temperature in the lounge felt like it had gone up ten degrees.\n\n\"Of course.\"\n\nShe brought her other hand down to my crotch. Now she was rubbing my throbbing cock with both palms.\n\n\"I like you a lot Joey. In fact, I know I have a crush on you!\"\n\nI was starting to get the feeling that I might orgasm in my pants, so I pulled her hands up onto the table.",
        "\"I'm attracted to you too, Bridgett. I think you're a beautiful sexy woman, but do you think it's wise for us to date? I mean, I am your supervisor.\"\n\n\"I considered that already. It will take me one year to train you to be a competent company president, and during that year we won't date. But after that, you'll find me a good position as a project manager working under another department head, so technically I won't be working directly under you, and then it would be ok for us to date. Will that work for you Joey?\"\n\nI considered her proposal, and it seemed very sensible to me. Besides, I knew I couldn't deny my feelings for her.\n\n\"Yes Bridgett, that works for me.\"\n\nThen I smiled at her, leaned in and gave her a quick kiss on the lips.\n\nChapter 12\n\nI'd been working at Mason Industries for six months, and so far, I was progressing nicely, and my father seemed happy with my work. I assumed more responsibility for the day to day running of the company, and my father began to trust me. He also seemed more relaxed at work lately, and he would often leave as early as four pm, and go straight to the Excelsior Club for a libation with friends.\n\nBridgett proved to be invaluable to me, as she knew much more than I did about the company, and about the employees. \n\nI remember one staff meeting in particular where she proved her worth to me. It was three weeks before the start of the fiscal year, and I had called an important meeting of all the department heads to discuss their budgets for the coming year. Bridgett warned me that this yearly meeting could be quite challenging, sometimes even stressful. Each manager would give a presentation in which they would forecast their department's revenues and expenses. They would also make requests for additional resources, which always translated into more money, and their justifications. At the end of their presentation, the others present could ask probing questions of the presenter. What made this situation stressful was the other managers were competing for the same resources, which are limited. In effect, they were each trying to protect the people who worked under them.\n\nThe meeting was held Friday afternoon, and started at one pm, and finally ended six long hours later. I listened carefully to twelve presentations, and the follow up questions from the attendees. Bridgett sat next to me at the conference table, taking the meeting notes on her laptop computer. By the end my mind felt like mush! I was expected to announce my decisions on the budget by Monday morning at nine am.\n\nI sat behind my desk with the hard copies of the budget presentations in front of me. I felt overwhelmed. Bridget had excused herself to use the restroom, and when she returned fifteen minutes later, she had two water glasses in one hand, and a bottle of Johnny Walker Red Label scotch in her other hand. \n\n\"I'll bet you could use a little liquid courage right now!\"\n\n\"Thank you Bridgett! You know me pretty well now, huh?\"\n\n\"Yeah, I can read you like a book Joey.\"\n\nShe removed the cap from the bottle and poured two fingers of the amber colored liquid into each glass. She handed me my glass, and sat down in the visitor's chair in front of me. She lifted her glass in the air.\n\n\"Cheers!\"\n\nWe each took a sip of scotch, and then sat quietly for a minute.\n\n\"Bridgett, what should I do about the budget? I have no damn confidence in myself right now. I don't know what the hell I'm doing!\"\n\nShe finished her drink in one gulp. \n\nShe gave me a serious look.\n\n\"First, you're going to finish your drink... now!\"\n\nI did as she commanded. When my glass was empty, she poured us another round.\n\n\"You've had a hard day Joey, and your mind is not real sharp right now. You're going to sit here with me, and relax for a bit. Then you're going to take the presentations home with you and read them over tomorrow. On Sunday, you should be thinking clearly, and you'll make your decisions on the budget. If you want, I can come to your place Sunday afternoon to help you. How does that sound?\"\n\nThat was exactly what I was hoping she'd say! I smiled back at her.\n\n\"I think that's a great plan. I like it!\"\n\nWe continued sipping our drinks, and then Bridgett poured us a third round.\n\nShe chuckled, \"Last one for the road, Mr. Vice President!\"\n\nWe clinked our glasses together and downed our drinks. I was feeling much more relaxed by now, and I felt better about myself. \n\nShe looked back at me and grinned. Then she slowly, deliberately, reached down with her hands and grabbed the hem of her skirt. \n\nI thought to myself, \"Oh Bridgett, you know me so well, and what I need right now!\"\n\nMy eyes fixed on her hands, but she didn't move them for about fifteen seconds. She had fully captured my attention, as I anticipated her next move.\n\nShe pulled the hem of her skirt halfway up her thighs and continued smiling at me, as she very slowly opened her legs, exposing her red nylon panties to me. They were trimmed in black lace around the bottom and top. I thought they looked quite beautiful.\n\n\"Do you like what you see, Sir?\"\n\nI squeaked, \"Oh God yes!\"\n\nShe looked so confident. Then she stood up and walked around to my side of the desk. She looked down at the bulge in my trousers, and firmly rubbed it with the palm of her hand.\n\n\"I love that your prick is hard for me. What do you say about that, Joey? Do you want to pull it out for me?\"\n\n\"Yes Bridgett, I want to pull it out so you can look at it.\"\n\n\"I want to see your fucking hard cock, Joey... right now!\"\n\nShe sat down on top of my desk facing me with her legs spread apart. I stood up and unzipped my trousers, letting my cock and balls hang out of the opening. She leaned over so her face was about a foot away from my crotch, and then she examined me closely. She lifted my penis up so she could inspect my testicles, and then she grabbed my scrotum with her thumb and index fingers, and pulled my balls to the left, and then to the right. That was the first time a woman had touched my testicles, and it felt nice... very nice indeed. Then she licked the surface of my balls with the flat surface of her tongue, another truly amazing feeling for me. She licked my sack for a minute, and then moved up to my shaft, licking the whole surface of it. Finally she put my cock in her mouth, and began sucking and licking me enthusiastically. I was in heaven, as this lasted for about a minute. She pulled her mouth off of me and stood up, and then she kissed me hard on my mouth. She turned around and got up on my desk, on her hands and knees.\n\n\"I want you to fuck me Joey!\"\n\nI pulled the hem of her skirt up onto her back, pulled the gusset of her panties to the side, and placed the head of my cock against her slit. I pushed my hips forward, sliding my knob inside of her soaking wet cunt. I began thrusting into her... again and again... and again. She reached down with one hand and began furiously rubbing her clit with her fingers. \n\n\"Yes Joey! Yes, yes, yes! Fuck me harder!\"\n\nThen she arched her back and moaned, \"Yes, you mother fucker! Fuck me!\"\n\nI felt the muscles in her vagina clamp down on my cock, and I felt my anus tightening. I pushed inside of her, and exploded. I felt my cock throbbing inside of her as I squirted my gooey spunk up into her hot wet cunt. \n\nI yelled out, \"Oh fuck Bridget!\"\n\nMy legs began to tremble. I pulled out of her and sat back down on my chair. She was still on my desk with her crotch pointed towards me. She had her eyes closed and a big grin on her face. A large glob of thick white cum dripped slowly out of her slit, and landed on the surface of my desk. I pulled a handkerchief from my suit jacket pocket and wiped the jizz off my desk, and then I wiped her pussy. I pulled her panties back in place, and pulled her skirt down.\n\nShe looked back at me, \"Thank you for your help, Mister Mason. You're very thoughtful.\"\n\n\"You're very welcome Miss O'Brien... any time!\"\n\nChapter 13\n\nA year later my life could not be more perfect. I was very confident in my abilities, and as it turned out, I was a very good executive! I honed my political skills to an expert level. I was able to analyze complex issues quickly, and make strategic decisions. My father only came in to the office two days a month, which afforded him a large amount of free time, that he occupied by spending more time at the Excelsior club with his gentlemen friends, and spending much more time with my mother. They seemed to get along very well together. They teased each other and laughed, and my mother often used her feminine charms to flirt with him. I was happy for my parents. They had a good life together, that they seemed to be enjoying.\n\nAs we had planned, when Bridgett determined that I could do my job proficiently, she transferred to a new position as a project manager, working in the marketing division of the company. Now we were free to date openly, and this made us very happy. I was simply in love with Bridgett O'Brien, and I think she felt the same about me.\n\nI was twenty-six years old, and I had the world by the balls!\n\nOne Saturday in July, my parents had invited me over for an evening barbeque to be held in their back yard. I asked if I could invite Bridgett, and they enthusiastically agreed, as both of them liked her immensely. There were many times that they had dropped not so subtle hints that I should propose to her.\n\nAs my father counseled me, \"A man in your position needs a suitable wife. It's expected. You can't be seen traipsing around San Francisco with a different woman every week. It's not seemly!\"\n\nMy father's advice seemed sound, and I truly was in love with Bridgett. I proposed marriage to her the next day, and she accepted!\n\nThe day was unseasonably hot, approaching one hundred degrees Fahrenheit. I decided that this would be a good day to grab my bathing suit and head over to my parent's house early to use their swimming pool. I called Bridgett to see if she could join me.\n\n\"Hello dear, it's so damn hot today. I thought it would be nice to go over to my parent's house a little early and take a swim. Would you like that Bridge?\"\n\nThen I heard a loud sneeze from the phone, and she began coughing uncontrollably. A little while later she replied.\n\n\"I'm sorry Joey. I seem to be coming down with something. I have to cancel our dinner plans.\"\n\nI was disappointed, but I was sympathetic to her condition.\n\n\"I'm sorry you're not feeling well sweetheart, but I understand.\"\n\n\"Thanks Joey. Give my love to your parents. I feel really shitty, so I'm going back to bed.\"\n\n\"Ok Bridge. Feel better and I'll talk to you soon.\"\n\nOh well, shit happens. I put on my bathing suit and a pair of khaki shorts over them. I threw on my favorite golf shirt and stepped into a pair of sandals, and then grabbed my wallet and keys, and headed out the door. I carried a small bag with my change of clothes for dinner.\n\nWhen I arrived at my parent's house, I let myself in with my house key. I made a quick tour of the downstairs and backyard, searching for my folks, but I didn't find them. Then I heard muffled voices coming from upstairs. I headed up the stairway to let them know I'd arrived early, and that I would be using the pool. When I was about ten feet from their bedroom door I heard my parent's voices, but something unusual was taking place, as they were not speaking in their normal tone of voice. My father was talking like a child in a higher pitched voice.\n\n\"I'm sorry Mommy. I've been very naughty.\"\n\nMy mother sounded peeved. \n\nI was amazed, and aroused, when I heard Mother say, \"Daddy has been a naughty girl again. Haven't you!\"\n\n\"Yes Mommy. I couldn't help it. I'm sorry Mommy.\"\n\n\"You've been wearing my dirty panties again, haven't you Edward, or should I call you Edwina?\"\n\n\"Yes Mommy. Your dirty panties excite me. I like to hold them over my face and sniff your panty gusset.\"\n\n\"I can see that, dear Edwina. You're wearing my bra and stockings too, and your frilly dress is very becoming on you. You want to be a girl don't you Edwina?\"\n\nI got even more aroused when I heard my father reply pathetically, \"Yes Mommy, I want to be a girl!\"\n\nI knew I was invading their privacy, but I couldn't help myself. I had to get close enough to see what they were doing. As quietly as possible I approached their doorway. The door was open half way, and I saw my parents in the full-length mirror on the back of the door, and what I saw was quite shocking to me.\n\nMy father was on top of their king size bed, and he was supporting himself on his elbows and knees. His bottom was in the air and was facing me. He was wearing a pink summer dress that had a red polka dot pattern on it. The hem of the dress had been lifted up and was on top of his back. He was also wearing black thigh high silk stockings and women's black high heel shoes, and white thong panties. On his head he was wearing a woman's blonde wig. His feet and hands had handcuffs locked on them, and the cuffs were secured to the four bedposts with lengths of nylon rope. He had a blindfold covering his eyes. I stared at my father for about a minute, taking in this strange scene.\n\nThen I turned my attention to my mother. She was wearing black leather high heel boots that came up to her knees, and nothing else! Well that's not quite accurate. She was wearing her strap on harness with the black horse cock dildo in it. Her dark hair was pulled back in a ponytail. My mother was standing on one side of the bed, rubbing and squeezing my father's bum cheeks with both of her hands. I watched as she reached in and pulled the thong to one side, releasing my father's genitals. His erect penis was pointing down, and I watched closely as a few drops of clear liquid seeped from the slit opening on the head of his cock.\n\n\"How should I punish you Edwina? Should I spank your bottom until it's pink and hot?\"\n\n\"Oh Mommy, please don't hurt me. I'll be a good girl for you. I promise I'll be good!\"\n\n\"It's too late for that Edwina. You've been very bad, and you must suffer the consequences.\"\n\nMy mother gave my father's bottom a hard slap with her hand.\n\nI heard my father whisper, \"Yes Mommy! Oh... yesssss!\" \n\nI thought to myself, \"Yes Mother! Do it again!\"\n\nI couldn't believe my eyes. My parents were engaging in kinky sex, and they both appeared to be enjoying themselves immensely! By now my cock was rock hard. I stuck my hand down the front of my bathing suit, rubbing the frenulum with the palm of my hand. The clothing I had on was too confining, so I unzipped my shorts, let them drop to the floor, and kicked them aside with one foot. I stuck my thumbs into the waistband of my bathing suit and pulled it down to my knees. I stared at my mother's big beautiful tits while I stroked myself with my hand wrapped firmly around my shaft. \n\nI watched intently as my mother pulled the white thong down to my father's knees, and then slapped his butt cheeks five times on the left side, and then five more times on the right side, and each time she spanked him, she applied more force. After the final slap his ass was a nice pink color. I looked over at his face, and he had a big smile. He seemed to be enjoying his punishment immensely!\n\nMy mother had a fire in her eyes! She walked over to my father's face and pulled off the blindfold.\n\n\"I'm not done with you dear. Oh no, no, no.\"\n\n\"Oh God, Mommy. What do you intend to do to me?\"\n\nShe reached down with her hand and shook the horse cock in front of his face.\n\n\"Oh Edwina, I'm sure you know what this is?\"\n\n\"Yes Mommy. It's your strap on cock, the really big one!\"\n\n\"That's right Edwina. It's my big fleshy piggy with the big rubber knob, and it's going straight up your bum!\"\n\n\"I'm excited Mommy, but so afraid.\"\n\n\"It's nice that you're afraid Edwina. You are my little panty girl, and Piggy is going up your sweet bottom.\"\n\nMother opened her nightstand drawer, pulled out the bottle of anal lube, and walked back behind my father. She squirted a generous amount of the slippery liquid onto my father's anus, and onto the knob of the horse cock dildo. Then she took hold of Piggy with both hands and slowly pushed it inside of him. \n\nI heard my father moan pathetically, \"Oh Mommy, that's feels so nice... you're filling me right up.\"\n\nAs she fucked him in the ass she said, \"I know you're frightened Edwina, but from now on you are going to be fucked regularly by me, and my friends.\"\n\n\"Your friends? But, I am your husband, and I will be so humiliated.\"\n\n\"That's lovely, Edwina. We want you humiliated. I'm going to ask Julia Chatsworth to fuck you next, or maybe I'll ask her daughter, Edith. Wouldn't that be fun? Getting fucked in the ass by the neighbor girl whom you've known since she was a child?\" \n\nAll my life Edith had been very respectful to my father, but in the past I had fantasized as to how Edith might behave with him. I'd heard through Mother that her marriage had failed, she was extremely bitter about the experience, and that she'd moved back into her parent's house. She's announced that she would have nothing more to do with men, as they had always betrayed and abused her. She found fantasy roleplaying with her girlfriends was more satisfying. \n\nShe told her parents, \"Fantasy squishies are probably better for women than real things with men, as we can imagine any scenario we like and it never fails.\"\n\nShe'd been spending a lot of time with Julia, her mother. She and her mother were very disrespectful to Edith's father. It had never occurred to me that she might be fucking her father. Actually, seeing how my mother was treating my father at the moment, it seemed quite possible that the ex \"love of my life\" could fuck my father in his bum hole. It seemed such a bizarre and outrageous idea! It was quite erotic.\n\nAll this time I'd been stroking my cock, and I felt like I was getting close to bursting. When I heard my mother say Edith would fuck my father it was too much. I closed my eyes and thought, \"Oh no!\"\n\nWhen I opened my eyes and looked in the mirror I got a big surprise. My mother was staring back at me. I watched as her eyes moved from my face and then down to my hard cock. She looked at me for about ten seconds, and then she smiled.\n\n\"Hello dear. I didn't hear you come in. I hope this isn't awkward for you?\"\n\nI was dumfounded. She laughed at my inability to speak.\n\nMy father called out, \"What's happening? Is someone here with us Mommy? Is Julia here already?\"\n\n\"Joey is here, and he was watching me peg you.\"\n\n\"I'm so embarrassed Mommy!\"\n\nMy mother looked back at me through the mirror. She waved her hand, indicating I should come into the bedroom. I nodded, pulled up my swim trunks, and walked in.\n\n\"You're early Joey.\"\n\n\"I'm sorry Mother. I should have called first.\"\n\n\"Yes, you should have. That was not good manners.\"\n\nShe walked over to the head of the bed and then knelt on the floor facing me.\n\n\"Come here Joey.\"\n\nI did as instructed and stood in front of her. She reached out with hers hands, and slowly pulled my swim trunks down to my ankles. My stiff penis was sticking straight out, pointing at my mother's beautiful face.\n\n\"Your cock is much nicer than your father's Joey. It's much thicker. I like your big fat cock in my face, Joey.\"\n\nShe reached out a hand and began rubbing the fat knob with the palm of her hand.\n\nI liked what she was doing to me. Yes, very much indeed. Then I heard my father whimpering.\n\n\"Mommy, I'm so ashamed!\"\n\nMy mother didn't take her eyes off of my privates, but she replied sternly.\n\n\"Shut the fuck up Edwina!\"\n\nI heard my father starting to cry pathetically.\n\nThen Mother stretched out on the floor on her back. She looked in my eyes and smiled at me.\n\n\"I want you to fuck my tits Joey, now! And I want you to give me a pearl necklace.\"\n\nI felt helpless to refuse her.",
        "\"Yes Mommy.\"\n\nI knew what she meant. I'd read a lot of erotic stories on the Internet, and that the term meant she wanted me to spunk on her throat. I straddled her body and then I knelt down on the floor, with my knees on either side of her hips. I moved my body forward so my penis was between her breasts. She grabbed her boobs with both hands and wrapped her tits around my hard fat cock. I began to move my hips forward, pushing my cock up between her tits until she could see the head, and then back down again. I repeated this motion, again, and again, and again, and with each thrust I pushed the head of my cock closer and closer to my mother's mouth. I was hoping she would stick out her tongue so I could spunk on it, but she just kept looking at the slit on the head of my cock, waiting for the white cream to squirt out.\n\nMy mind began to spin. I knew what I was doing was so wrong, but I wanted it. I needed to come! Every nerve in my body needed it! I closed my eyes and pushed my hips all the way forward. My prostate began to spasm. For a few seconds it felt like I'd lost consciousness. I opened my eyes and looked down at my mother's face.\n\n\"That was perfect Joey. Thank you for my pearl necklace.\"\n\nI looked down at her throat, which was covered with my white sticky cream. I had no idea what to say to her. I was shocked at what had just happened. I couldn't believe that I'd just titty-fucked my own mother!\n\nI stammered, \"I'm so sorry Mother. Can you ever forgive me?\"\n\nShe chuckled, \"Forgive you for what, Joey? For doing what I asked you to do? For doing what I wanted?\"\n\n\"I don't understand you Mother. Wasn't it a bad thing?\"\n\n\"No, what we just did was a good thing Joey. It made you happy, and it made me happy, and it made your father happy as well. You need to grow up and accept the fact that you're a sexual being... that it's an important part of you, and it's a good thing. You need to grow a pair of balls like your father. He knows what he wants, and he's not afraid to ask for it. In my opinion he's a real man. He's not afraid to show his emotions, to share how he feels, and share his most intimate thoughts with me, and I love him for that, because it allows me the freedom to do the same with him.\"\n\n\"But Mother, aren't you afraid that someone will find out what we did? I mean, don't you think it would destroy us?\"\n\nMy mother thought about this for a few seconds before responding.\n\n\"I'm not going to tell, and I can guarantee you that your father won't tell. So Joey, who are you going to tell that you spunked on your mother?\"\n\nI thought about her question. What she said made perfect sense to me. As long as we kept this our secret, who was being harmed? Absolutely no one!\n\n\"So will this happen again Mother?\"\n\n\"That's up to you Joey. But I want you to know one thing. In this room, I'm in charge. What I want... I get!\"\n\nI looked at her. From the look she was giving me I knew what she said was the truth, and I totally accepted it. I looked at her and smiled.\n\n\"Yes Mother.\"\n\n\"I think you should pull up your bathing suit and go for a nice swim in the pool. Your father has not had his orgasm yet, and I need to care of his needs. Be a good boy and run along Joey. We'll join you in an hour or so by the pool.\"\n\n\"Yes of course Mother, whatever you say.\"\n\nI nodded my head, pulled up my swim trunks, and walked out the bedroom door.\n\nChapter 14\n\nI walked out to the pool and dove in, head first. The cool water invigorated me instantly, and I proceeded to swim laps across the length of my parent's swimming pool. I swam hard for about thirty minutes, after which I got out, and stretched out on one of the reclining lounge chairs. The warm sun soon dried my skin, and I felt relaxed and calm. A little while later I heard the screen door to the kitchen open, and I saw my father walking towards me. He was wearing his swimsuit, sandals and a terrycloth bathrobe that was not tied. He had a serving tray in his hands, and on it there were two martini glasses and a tall martini shaker.\n\nHe set the tray down on the table next to me. He filled the two glasses, picked up one for himself, and indicated with a nod of his head for me to pick up the other. We sipped our drinks quietly for a few minutes.\n\n\"How are you getting on Joseph? I know that must have been a shock to you, seeing your mother penetrating me, so intimately.\"\n\nI looked back him, pondering how in the world to respond. \n\n\"Do you do that often, Dad? I mean, is she always the one in charge?\"\n\nHe smiled back at me,\n\n\"Yes, it's what we both want. Hopefully, you'll understand some day.\"\n\n\"Ok, help me to understand Dad... please!\"\n\nHe collected his thoughts for a few minutes, while we continued to sip our drinks.\n\n\"Well Joseph, I think after you've assumed control of our company for a few years, this will make more sense to you. You'll be the chief executive officer, and as such you'll be responsible for ensuring that the company is successful, and makes a good profit. Our employees depend on us to make good business decisions, so that they can continue to have their jobs, and are able to support their families. A man is expected to provide for his family, and a woman is expected to manage the home and the children. It's a great burden knowing so many good people depend on me. Sometimes I don't know if I can manage it, always having to make the right decisions, which affect the lives of so many people! When I'm on my own time I don't want to make any decisions! I want someone else to be in charge, so when your mother and I make love, I am so grateful to her, that she is the one in charge, the one who decides what we do. It's such a relief for me, being dominated by your mother!\"\n\n\"I think I understand how you feel Dad, but what does Mother get from this arrangement?\"\n\nMy father sipped his martini, and gathered his thoughts.\n\n\"Think about it for a minute Joseph, and what it's like being a woman in this society. She's expected to be nice, and pretty, and defer to her husband. What if she's smarter and more talented than her husband? Can you imagine how frustrating that might be for her? What if, once in a while, she gets to make all the decisions, to be in charge, to be responsible for something important?\"\n\n\"I think I understand now. So both of you are happy with this?\"\n\n\"Yes son, it works very well for both of us. I think we're very happy!\"\n\nI thought about how I had just come on Mother's big tits, and how my father whimpered while I was doing it to her.\n\n\"But doesn't the humiliation bother you Dad? I fucked her tits, for Christ's sake!\"\n\n\"I know this is hard to understand right now. Yes, I felt humiliated, very much so, but I also felt aroused at the same time, watching your big fat cock squirt all over her! It's great fun for me to watch that. You know?\"\n\nWe finished our drinks, and then my father refilled our glasses. He picked up mine and handed it to me.\n\n\"Before we talk in greater detail Joseph, I want to understand more about you. I need you to be totally honest with me.\"\n\n\"Of course, Dad. I'll tell you anything you want to know.\"\n\nHe looked pleased and then asked, \"What do you think of your mother Joey?\"\n\nI sensed from the way he used my name he was being more intimate.\n\nI was honest, \"I love Mother very much Dad, and have always respected her. She's a lovely woman.\"\n\nHe nodded \"I know all that Joey, but what do you think of her tits?\"\n\nI gasped at his question, but remembered my promise to be honest.\n\n\"Her tits? I like her tits Dad. She has nice big tits.\"\n\n\"Yes, I agree. She does have big tits, Joey. Her nipples are exquisite!\"\n\nI nodded. He pulled out a picture of my mother and showed it to me.\n\nHe carried on, \"She has large nipples, Joey, and she likes having her nipples sucked.\"\n\nI was getting aroused now, and I knew what he wanted me to say. \n\n\"I like them Dad.\"\n\n\"Would you like to suck her nipples Joey?\"\n\nI reached down to my crotch and adjusted my growing penis.\n\n\"Yes Dad, I would like to suck Mother's nipples.\"\n\nHe seemed satisfied with my response, and he changed the subject.\n\n\"I have something important to discuss with you. Since you'll be taking over the company in the near future. I think it's time for you to join the Excelsior Club. For a man of your position in society it's expected, besides which, it will allow you to make the acquaintance of the most powerful men in San Francisco.\"\n\n\"Alright Dad. I'm assuming you'll sponsor me?\"\n\n\"Yes son, your membership is a given.\"\n\nWe continued sipping our martinis for a few minutes without further conversation. I thought about what I had learned from Melanie at the Victoria Secret store about my father, the fact that he also had a panty fetish. I decided to broach the subject with him.\n\n\"The manager at Victoria's Secret, told me that you're a VIP club member, and that you like wearing panties as much as I do.\"\n\nHe had a calm look on his face and smiled back at me.\n\n\"That's right son, I love wearing women's underwear. That's why I allowed you to have your own pair of panties when you were a young boy. I had similar feelings when I was growing up.\" \n\n\"Why didn't you tell me?\"\n\nHe thought for a few seconds.\n\n\"I suppose I wanted to be sure that your feelings weren't temporary. I needed to be sure that you have a real fetish. From what your mother has told me, and given your history I've come to the conclusion that you have a true fetish for women's panties. Congratulations son! I think that's a wonderful thing!\"\n\n\"Really Dad?\"\n\n\"Absolutely! It will bring you a great amount of joy. So, I want to share something that will help you, but you cannot tell another soul what I'm about to divulge to you. You must keep this a secret, for your own good, and for the continued success of Mason Industries. If this information became public knowledge, it would destroy our company. Do you understand?\"\n\nI looked at my father's face. He was dead serious.\n\n\"I do Dad. I promise, I won't tell anyone.\"\n\n\"Very well, there is a select group of Excelsior Club members who have formed their own secret club. It is a smaller club within the Excelsior Club. The members of this club share a common interest. They all have a strong panty fetish! This select group is called the Gentlemen's Panty Club, and the members include some of the most important men in San Francisco. I can't give you any names, but they are attorneys, university presidents, judges, politicians, clerics, company executives, famous actors and opera stars, law enforcement officers, professors, and doctors, all of them highly respected men of this community.\"\n\n\"Ok, so why does this have to be a secret? It's not like they're criminals.\"\n\n\"The reason is that if the public knew about the existence of this club, and what happens at club meetings, the club member's careers would be destroyed, and their families would be hurt as well.\"\n\n\"Why would their family members be hurt? \"\n\n\"I'll tell you why, because all of the member's wives, and many of their adult daughters know about their underwear fetish and support them in this. They also know about their membership in the club, and these women provide a vital service to the panty club.\"\n\n\"What service do they provide?\"\n\n\"In order to guarantee that club members do not reveal the existence of the club, candidates for membership must go through an initiation. The potential club member is required to do something extremely embarrassing, and the initiation is videotaped. Only women and the candidate are present at the initiation, and the women decide what he has to do.\"\n\nI considered my father's words for a few seconds.\n\n\"What happens if the candidate fails to complete the initiation? Could he be reconsidered at a later date?\"\n\n\"No Joey. There is only one chance to succeed, so it's important for the prospective club member to be committed to completing the initiation.\"\n\n\"I see. So you think I would like being in the panty club?\"\n\nHe looked me in the eye and chuckled, \"Trust me Joey... you want this!\"\n\nI took about ten seconds for me to make my decision.\n\n\"Ok Dad, I'll do whatever it takes to get into the Gentlemen's Panty Club!\" \n\nChapter 15\n\nAbout a month after that talk with my father by the swimming pool, I was officially invited to become a member in good standing of the Excelsior Club, and about two weeks after that I received an email, sent to me by mistress.norma@gent_pant_club.org. \n\nThe subject line caught my attention, \"Your initiation ceremony has been scheduled.\" \n\nThe body of the message said:\n\nGreetings Mister Mason,\n\nI am pleased to inform you that your application to the Gentlemen's Panty Club has been reviewed by the selection committee, and has been approved. \n\nCongratulations on your conditional admission to this very exclusive club! \n\nYour initiation ceremony will take place this Saturday evening, and will begin promptly at 9:00 pm. There is a short preparation period for the ceremony, and you are required to arrive at the Excelsior Club no later than 8:30 pm. I will meet you at the entrance foyer, and I will explain the protocol to you at that time. The ceremony will last no longer than one hour. \n\nAgain, please accept my congratulations!\n\nVery truly yours,\n\nMistress Norma\n\nPresident\n\nThe Gentlemen's Panty Club\n\nI read that short email three times to make sure I understood what it implied. My membership would become a reality on the condition that I successfully completed the initiation. I had only one chance to successfully complete it.\n\nI picked up my cell phone and sent a text message to my father.\n\n\"Hi Dad, just got accepted into the GPC...initiation is Saturday... so excited! Who is Mistress Norma?\"\n\nTen minutes later my phoned pinged with his reply.\n\n\"Norma Roberts... wife of the mayor of San Francisco!\"\n\nI thought, \"Oh shit!\"\n\nThe mayor's wife was a celebrity in San Francisco and had quite a reputation. Her family, the Garrets, was one of the first to settle in San Francisco during the California gold rush. Her ancestors owned several general stores, and they made their fortune selling equipment, clothing and food to the newly arrived hoards of gold hunters and fortune seekers. Before she married her current husband, the mayor, she had a slew of wealthy playboy boyfriends and three husbands. All of her previous marriages lasted less than one year, as she stated \"she easily got bored with it.\" It was also rumored that she had \"very friendly\" relationships with other women. When asked about this by a reporter for the San Francisco Chronicle newspaper she stated, \"Men sometimes fail to come up to the mark.\"\n\nAll week I was nervous. Over the last few weeks my father had provided more details about the Panty Club. What happened during their meetings could be described as: erotic, disturbing, outrageous, perverted, mind blowing, life altering, and I knew deep down in my heart that this was what I wanted, to be with other men who shared my life long fetish for women's panties. Passing the initiation became my top priority. I had to complete it successfully! \n\nI had no idea what I would be required to do at the initiation ceremony, but I did know that it would be something extremely degrading and humiliating for me, and that the ceremony would be recorded. The purpose of the initiation was two fold. The first was to demonstrate that I was highly motivated and committed to the spirit of the club. The second was to insure that I would never disclose the existence of the club; it's membership, or what happens at the club meetings to anyone outside of the club. This was for my own safety as well as the safety of the club members and their families. Many of the members' wives, sisters, mothers and daughters participated in the club meetings, and they were also in charge of the initiations of prospective new members.\n\nFinally the day of my initiation arrived. My parents had called me that afternoon and offered words of encouragement. I also got a text message from Bridgett, my fianc\u00e9.\n\n\"Good luck tonight darling. I love you!\"\n\nI arrived at the Excelsior Club promptly at 8:30pm. As I entered the reception area I spotted a mature woman who was looking at me and smiling coquettishly, about ten feet away. She was wearing a sexy black leather skirt which fit snugly around her shapely round bottom, with the hem six inches above her knees, and a white long sleeve white satin blouse that clung to her ample breasts. The top buttons were undone, revealing an impressive amount of cleavage. I judged her age to be around mid sixties, and she looked very beautiful and sexy to me, and I wondered what it would be like to fuck those huge tits of hers, or shove my cock up inside of her, or fuck her round bottom. \n\nI walked up to her and she extended her hand for me to shake.\n\n\"I presume you are Edward Joseph Mason the fourth?\"\n\n\"Yes Mistress Norma,\" I gave her my most charming smile, \" but I prefer to be called Joey.\"\n\n\"Very well, Joey.\"\n\nShe took a few moments to look at me from head to toe. She seemed satisfied and said, \"If you'll follow me, I'll escort you to a room where you can change into the required clothing for the initiation ceremony.\"\n\nShe turned around and walked confidently down a hallway. I stared at her shapely bottom as she walked away from me. She had a great ass! It was plump and round, and it wiggled when she walked.\n\nI followed her to a large meeting room. At the far end of the room was a stage that was about fifteen feet long and ten feet wide. The surface of the stage was about six inches higher than the floor of the room. In the center of the stage in front was a small circular table. On the table there was a new unopened bottle of personal lubricant and a pink nine-inch long vibrator. There was one row of straight back chairs in front of the stage. I counted six chairs, which were about two feet away from the front of the stage.\n\nMistress Norma walked around the right side of the stage where there was a door, which she opened and walked through. I followed her into a small office, which had a simple business desk. She sat in a chair behind the desk. There was another chair if front of the desk, which I sat in.\n\n\"Let me explain the details of your initiation, and then I'll answer any questions you have. Ok Joey?\"\n\n\"Yes Mistress Norma.\"\n\nShe chuckled, \"For your information, during regular Panty Club business I expect to be addressed as Madame President. Since you are not a full member of the club yet, it's acceptable for you to call me Mistress.\"\n\n\"I see. Thank you for explaining the rules to me Mistress.\"\n\n\"Ok, let's get you into your initiation clothing.\"\n\nShe opened the main desk drawer and pulled out a little girl's frilly pink party dress. She reached in again and pulled out a pair of pink thigh high stockings and suspender belt, a push up bra, white lace gloves, and some cute little pink panties that were trimmed with white lace. There was also a pink hair ribbon with a bow, and a pair of girl's white patent leather shoes.\n\n\"Take off your clothes Joey, and put these on.\"\n\nI thought about what she'd asked me to do. Yeah, it was humiliating... it was embarrassing... and it would suck! I fully expected it.\n\nI could feel my face starting to blush as I asked, \"Can you please give me some privacy while I change Mistress?\"\n\nShe looked me in the eye and laughed, \"I could, but I don't want to. I want to watch you, Joey, while you become a pretty girly for me.\"\n\n\"But I'll be so ashamed.\"\n\n\"That's good Little Joey. That's exactly how I want you to feel... ashamed... humiliated... and helpless!\"\n\nThere was no point in resisting. I stood up and two minutes later I was standing in front of her, completely naked. I held my hands in front of my genitals, which had shrunk and were quite small, so it was easy for me to hide them from her. I felt so embarrassed about my tiny cock and shriveled up testicles, but Mistress Norma seemed to be enjoying my predicament. She smiled at me mischievously, her face was flushed, and she was breathing perceptibly harder.",
        "\"Put your hands on top of your head, Little Joey, so I can get a good look at your privates.\"\n\nI did what she asked. I knew by now my face was bright red. She looked intently at me from head to toe. With her hand she motioned for me to turn around so she could look at my backside. I nodded and rotated my body around for her. After a few seconds she said, \"Ok Joey, you can put your girly clothes on, now.\"\n\nA few minutes later I was transformed into a pretty panty girl! There was a full-length mirror on one of the walls, and I looked at myself. At first I was shocked, but upon closer inspection I started liking the way I looked! A strange feeling came over me, but it was a nice feeling. I felt so feminine and pretty!\n\nMistress Norma smiled.\n\n\"Yes Joey, I really think you're a very pretty little girly.\"\n\nI squeeked, \"Thank you Mistress Norma. I feel all bubbly and nice.\"\n\nShe smiled at me again. I thought she was breathing deeply as she asked, \"Where do you feel bubbly, Joey?\"\n\nI was embarrassed but muttered, \"Sort of down below, Mistress.\"\n\nShe smiled as she led me on, \"Do you mean you're bubbly up in your pink dress, and inside you pretty pink panties?\"\n\n\"Yes Mistress.\"\n\n\"So what you mean, Joey, is that dressing up as a girl has made your cock big?\"\n\nI blushed, \"Yes Mistress. It's big and hard.\"\n\n\"That's marvelous Joey. I think you'll do very well indeed.\"\n\nAs she spoke she reached forward and thrust her hand between my legs. She didn't put here hand up my dress. She simply caressed my penis through the silky pink material. I groaned in excitement.\n\nShe got a serious look on her face.\n\n\"For your initiation you will masturbate with a pair of panties wrapped around your penis. You will have successfully completed the initiation when you ejaculate. There will be five women in the audience watching you, and during the entire ceremony two women will be on the stage with you, making a video of you. One woman will capture the entire scene from a distance of about six feet, while the other woman will be much closer, and will focus on your cock, to capture the moment when you cum, with your white cream spurting out of your slit.\"\n\nI thought, \"Wow, that's so outrageous, but also so fucking erotic!\"\n\nI usually masturbate two or three times a week, so I was feeling confident.\n\nI chuckled, \"Ok, I can do that. In fact, if I close my eyes and fantasize, I can spurt in about ten minutes.\"\n\nShe laughed at me.\n\n\"Sorry Joey. You're not allowed to cum until all of the women in the audience agree to let you cum. What that means is, each woman needs to 'happen' at least once if she wants it, some may decide they don't care, before you get to have your 'happening'. Each woman will raise her hand when she gives consent for you to cum. I will keep track, and I will tell you when it's ok for you to spunk for us. Also, for the first twenty-five minutes the women can give you instructions, and you will comply with those instructions without hesitation. Do you understand the rules Joey?\"\n\nThis was a surprise. I wasn't sure about stroking for half an hour and not coming. Too long a time and my prick would get sore and start to hurt, and if that happened I'd be screwed. I wouldn't be able to cum, no matter how much I wanted to. \n\n\"I have a question Mistress.\"\n\n\"What is it Joey?\"\n\n\"You said the ceremony would last no longer than one hour. Is there a deadline on when I am allowed to cum?\"\n\n\"That's very perceptive of you, Mister Mason. The answer is yes. If the ladies have not given you permission after thirty minutes, I will grant you permission to cum.\"\n\nI thought, \"Ok, this could be challenging, but I can manage those constraints.\"\n\nI heard a ring tone coming from her cell phone. She picked it up and looked.\n\n\"The ladies are waiting for us. Are you ready Joey?\"\n\nI looked her in the eye. \"I'm ready Mistress Norma. Let's go.\"\n\nShe gave me a warm smile, \"Good luck, Joey!\"\n\nI followed her into the meeting room. I was feeling very positive when we entered the room, but when I surveyed the attendees sitting in that front row of chairs I was stunned.\n\nSitting in the first chair on the left was... Bridgett O'Brien, my fianc\u00e9!\n\nSitting next to her was Edith Chatsworth, the woman who crushed my heart!\n\nSitting in the third chair was Edith's mother, Julia Chatsworth!\n\nSitting in the next two chairs were two attractive middle age women whom I didn't recognize, and sitting in last chair was... my mother!!\n\nI was shocked to see my mother there. She was dressed nicely in a smart skirt and white blouse. She didn't say anything, but smiled encouragement.\n\nMistress Norma took my arm and escorted me onto the stage. \n\n\"Alright, I think we're ready to begin. For those of you who don't know the candidate, this is Mister Mason, but he prefers to be called Joey. I have explained the rules of the initiation, and he has agreed to follow them.\"\n\nShe looked over at Bridgett and Edith.\n\n\"Mistress Bridgett will capture the video of the entire scene, and Mistress Edith will shoot the close ups. Ladies, please remove your clothing and join us on the stage.\"\n\nTwo minutes later Bridgett and Edith were both naked and walked up onto the stage. They each had a video camera in their hands. Bridgett looked at me and smiled. She took her position at one side of the stage, about six feet away from me. Edith looked at me, but her expression was blank. She leaned forward, grabbed the elastic waistband of my pink panties and yanked them down to my knees. Then she aimed her camera at my genitals. Mistress Norma sat in one of the empty chairs, and addressed the audience.\n\n\"Who would like to let Joey use their panties?\"\n\nOne of the women that I didn't know stood up and smiled at me. She looked to be in her early forties, and was very nice looking. \n\n\"I am Mistress Molly, and this is my good friend Mistress Rita. We'd like to offer you our panties to wank with, Joey.\"\n\n\"Thank you Mistress. I appreciate your help.\"\n\nShe sat back down. She looked at her friend Rita, and then they both started to giggle. At the same time the women pulled the hems of their skirts up to mid thigh, and then they opened their legs, giving me a full view of their panties. First my eyes fixed on Molly's crotch. She was wearing simple white cotton knickers which I always had an attraction to, and the gusset appeared to be damp. I looked her in the eye and grinned.\n\nShe smiled back \"Do you want my knickers, Joey?\"\n\nI was really excited now, and I muttered, \"Yes please Mistress.\"\n\nShe smiled again and looked at my mother, who smiled back at her.\n\nThen she said, \"I've had them on all day, Joey. They're a bit niffy. They have been right up my cunt!\" \n\nI groaned.\n\nShe lifted her hips off the seat of her chair, and then slowly eased her panties down to her ankles. She reached down to retrieve her underwear and then threw them up to me. I caught them with one hand, and then held them to my nose, taking in her scent. I felt my penis stirring. \n\nShe spoke to my mother \"He likes smelling my panties Mrs. Mason.\" \n\nMy mother nodded.\n\nI turned my attention to Mistress Rita. She had pulled her gusset to the side revealing her hairy cunt to me. It was lovely to look at. Molly reached over with one hand and started rubbing her friend's clitoris with her fingers. I couldn't help thinking that she must have done this to her friend many times. Rita simply looked down so lovingly at her friend.\n\nMolly pleasured her friend for about a minute, and then she knelt down on the floor and pulled Rita's panties down. Again she tossed them to me on the stage. They were made of a pink lacey material that was very pretty and feminine. I wrapped the pink material around my stiffening cock and started moving my hand up and down on my shaft, while I continued sniffing Molly's knickers. I closed my eyes and concentrated on the pleasant sensations.\n\nRita closed her eyes and started to moan softly. Molly shoved two fingers inside of her friend's wet vagina.\n\n\"Yes my dear, that feels so nice. You're making me feel quite squishy.\"\n\nMolly stared at me while she continued fingering her friend, \"We like the idea of us undressing you and making you wank for us. Take your panties off Joey, and let us look at you closely.\"\n\nI replied, \"Yes of course, Mistress.\"\n\nBy now my penis was poking out of the top of my pinky panties and was rampant.\n\nMolly smiled at my mother saying, \"Your son obviously likes being a little girly, Mrs. Mason\" \n\nMy mother simply nodded.\n\nMy little pink panties dropped to the floor, and I stepped out of them. I walked to the front edge of the stage directly in front of Molly and Rita. The ladies approached the stage. Molly stood beside me with her arm around the back of my thighs. Rita stood in front of me watching, while Molly grabbed my cock. I was rock hard. Mary started stroking me, hard and fast, but all the time she watched my face.\n\n\"What are you thinking right now, Joey?\"\n\nI squeeked, \"Spunking on your face Molly!\"\n\nRita reached in and squeezed my testicles.\n\n\"What about now, Joey?\"\n\nI thought for a few seconds before replying. Molly was distracting me greatly.\n\n\"I'd like to watch you and Molly squishing each other, while I sit in the corner wanking my prick.\"\n\nMistress Norma called out, \"Ladies, that might be too much stimulation for our panty girl. He's not allowed to cum yet. Please take your seats.\"\n\nMolly released her grip on my penis and gave me a passionate kiss. Rita released my balls and rubbed her palm sensuously under my scrotum, and then they both sat down in their chairs. They pulled their skirts up and masturbated, while continuing to watch me pleasuring myself using their panties.\n\nAbout a minute later they both began to moan with pleasure, and then each woman raised her hand in the air, indicating to Mistress Norma that they had \"happened\" and they gave their permission for me to cum. \n\nI looked over at the other women. Mother and Julia were sitting naked, with their clothes piled up around their feet. Mother was pulling on Julia's nipples. Julia was flicking her clit and smiling at me. I continued to stroke with Rita's pink panties wrapped around my cock, and with the crotch of Molly's cotton panties under my nose. Everyone was very serious now, and the only sounds were heavy breathing, and the squishing sounds coming from all of us. Julia closed her eyes and her body began to tremble. A few moments later she raised her hand in the air, signifying her \"happening.\" Then my mother smiled at me and raised her hand in the air, giving me her permission. As far as I could tell she did not \"happen\" and was just trying to help me.\n\nMistress Norma looked at her watch, and then announced, \"We are twenty minutes into the initiation, and the ladies of the audience are in agreement. You can ejaculate whenever you're ready Joey.\"\n\nShe smiled at me, \"In fact, we're looking forward to it!\"\n\nI moved the panties up and down on my shaft. At the beginning I was stroking slowly; up and down my hand traveled the length of my cock. After a couple of minutes I increased the strength of my grip and I doubled the pace. My cock felt like a bar of steel... it was so hard, but it was also starting to hurt. I knew I had to cum soon.\n\nI looked over at Bridgett. She held her camera in one hand pointed in my direction, and she was furiously rubbing her clit with her other hand. She was moaning. \n\nI turned my attention to Edith. Her camera was aimed at my penis, and her eyes were fixed on it. She had a sour look on her face.\n\n\"What's the matter with your prick Joey? Is it getting chafed and sore? You poor baby!\"\n\nHer attitude pissed me off. She obviously wanted me to fail my initiation.\n\n\"I'll show you Edith, you bloody bitch!\"\n\nI picked up the bottle of lube from the table and squirted a generous amount of the slippery liquid onto my cock. Then I grabbed the vibrator, turned it on to the highest speed, and placed the tip against the most sensitive spot of my penis, just below the head. I closed my eyes and concentrated on the tingling sensations that traveled up my shaft. The feelings were marvelous, but something was off. I was getting close, but not quite close enough to \"happen.\" \n\nI was starting to lose confidence when I heard my sweet mother's voice, \"Would you like to spunk on Mommy's face Joey?\"\n\nI opened my eyes. Mother was standing in front of me. She had a fire in her eyes, and a lecherous grin.\n\nI squeeked, \"Yes I would Mommy!\"\n\nShe stretched out on her back with her head between my legs and her feet pointed at the audience.\n\n\"Kneel down Joey.\"\n\n\"Yes Mommy.\"\n\nI did as she instructed. Her face was directly underneath the head of my penis. She reached up with one hand and started tickling my scrotum with her long fingernails. It felt so lovely. She reached down with her other hand and started to rub her clitoris with her fingers. My head was spinning. There was so much adrenaline running though my blood I felt like I was stoned. Then to my surprise, Julia Chatsworth got up and knelt on the floor between my mother's legs, and stuck two fingers inside of my mother's pussy. She moved her fingers in and out, slowly at first, and soon after she was fingering her as fast as she could. Slurpee squishing sounds came from my mother's wet cunt. That's what did it for me, pushing me beyond my limit. I started to moan loudly. \n\n\"Oh fuck Mommy. I'm so close!\"\n\nEdith moved her camera in for the close up shot.\n\n\"This is all for you Mommy! FUCK!\n\nI felt my prostate begin to spasm, and my anus clench shut. I looked down at my cock, and a six-inch strand of white cum squirted out the slit, landing on her beautiful face. I closed my eyes and my prostate spasmed five more times. For a brief moment I thought I was going to faint, but that feeling soon passed. I opened my eyes and looked down at the amazing woman who is my mother. She was looking back at me with a warm smile on her face, and a twinkle in her eyes.\n\n\"That's exactly what I wanted Joey. My face is drenched in your cum, and I want you to know I loved every second of it! That was the most exciting experience I've ever had in my entire life! Thank you darling!\"\n\nThen it dawned on me... I had passed the initiation thanks to my mother. I felt so grateful to her. I felt like crying. I knelt down on the floor beside her, and carefully wiped my semen off of her face with Molly's white cotton panties. I moved my face towards her and kissed her cheek. Then my mother surprised me one more time. Using both hands she pushed her big breasts together so that her nipples touched. She looked me in the eye.\n\n\"Suck Mommy's nipples Joey. Mommy needs it.\"\n\nI remembered my conversation with my father by the pool, and what he told me about my mother. I smiled back at her, \"Of course Mommy. Your panty girl needs it too.\"\n\nI brought my mouth down to her chest, and licked her nipples with the flat surface of my tongue.\n\nShe whispered, \"Yes Joey... yessss!\"\n\nMistress Norma announced, \"Joey has successfully completed his initiation. Ladies, put your hands together and let's all welcome him into The Gentlemen's Panty Club!\"\n\nThe ladies in the audience started clapping, and then they all started to cheer for me!\n\n\"JOE...EY!, JOE...EY!, JOE...EY!...\""
    ],
    "authorname": "joefelton",
    "tags": [
        "pantyboy",
        "taboo",
        "incest",
        "titfucks his mother",
        "sissy",
        "panties",
        "pegging",
        "masturbation",
        "facial",
        "ejaculation"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-gentlemens-panty-club"
}