{
    "title": "Killing Me Softly",
    "pages": [
        "This is my 150<sup>th</sup> submission. I began writing it in July and have read it through at least twenty five times, trying to catch errors or make adjustments. Hopefully I've succeeded in catching most of the mistakes. I realize it could be in IR as well as romance. I chose IR since it is about a black lady and a well hung white man. The story is told by the woman as a reminiscence.\n\n* * * * *\n\nSitting in my easy chair next to the man snoozing, the same man who had spent 25 minutes the night before tenderly taking me over the edge numerous times, I smiled, thinking of where I had once been in comparison to where I was now. How at one time being afraid of a long-term commitment meant I would hook up with some guy three or four times a year. That all ended the day I met a most unlikely man in a most unlikely setting. What made it so unlikely is that I was a black professional woman who had only dated black men. Nickle size snowflakes have begun to fall as I watch the snowstorm make its way across the lake toward our house. In another hour the brunt of the storm would hit, making a change from soft and gentle to a full on storm. It made me think back to how my life made a paradigm shift at a bar almost twenty years ago. Following are my thoughts.\n\n**********\n\nI scanned the room from the bar stool only to be sorely disappointed. It was eight o'clock on a Friday night, I thought there would be more people. I'm not well acquainted with bars and nightclubs but I was surprised there weren't more guys trying to hit on me. I'm a 39-year-old lady of color, my body is still solid, my facial features are soft and inviting. From my point of view I considered myself well dressed, mercy me, I even went all out and wore the sexy silk panties I'd ordered from Paris a year ago. That, along with my transparent lace bra and lace topped stay ups, made me feel as though I should be inviting.\n\nMy hair of soft ringlets flows just beneath my shoulders, I have just the right amount of cleavage showing, and the mid-thigh pleated skirt enhances my long legs. A look I'm anything but comfy in, being in the medical profession my everyday work attire is far more subdued. I'm used to scrubs and smocks and comfortable footwear, not the three-inch heels I happened to be sporting at the moment. I work as an audiologist at a regional hospital in an area that is not heavily populated, the size of our city is less than ten thousand.\n\nMy career was my boyfriend in the beginning, it absorbed every waking moment of my day, it wasn't until three or four years ago that I realized life was slipping away. I wasn't looking for a mister right to sweep me off my feet and have a dozen kids. No, I was looking for a physical encounter with a man of my choosing, nothing long term, nothing meaningful, simply a fun time in the sack for a weekend. The internet has made that a simple task, and I say task because I vet every guy I intend to meet. They have to be a professional of some sort, college educated, they must be clean, as in disease free, handsome, gainfully employed and share the same philosophy that I do, a weekend of fun and nothing more. So far, they have all been black men.\n\nI've been in Albuquerque for a conference, now called symposiums, for four days, I have two nights before I fly home Sunday. The conference met all my expectations, it was interesting and provided me with answers to questions I hadn't yet asked. There was but one final detail before returning home, I was determined to get laid by someone worthy of my body.\n\nAs stated before, I remain celibate for the most part, I can go months without sex, but when the urge arises, I go far from home. It's typically a flight to New Orleans, or Atlanta, or maybe Dallas if I'm feeling real adventurous. I take the time to vet my potential lover online and then by phone, the rules are simple, we both prove we are disease free, they wear a condom, I don't do rough or anal, it's a one or two night stand at the most. There will be no 'falling in love', we are both professionals walking into an encounter with our eyes wide open.\n\nTo be honest I usually liked the two or three time a year weekend getaway. I was a different person during these excursions, not in a slutty way, more in a way that let me relax enough to say what I wanted and do what I wanted instead of what was expected where I lived and worked. The guy I was expecting to meet for the upcoming weekend had texted two hours earlier to say he was a no-show, at least he texted and didn't just leave me hanging. I thought, 'too bad for you buddy', I am one horny girl and somehow, some way, I'm going to find someone I could trust to fill my needs. I'm tall enough at five foot ten that I was able to scan the room without standing. Where are the guys, I was asking myself, I mean the cute ones with some substance to their being? Someone I wouldn't be ashamed to walk out with arm in arm.\n\nTo my left the seat is empty, in the seat next to that is a tall black guy who thinks he's hot and is not. His tacky three-hundred-dollar suit is my first clue, my second clue is he keeps wanting to buy me drinks. It was strike three when the idiot made a circle with his left thumb and forefinger, then moved his right index finger in and out with a shit eating grin on his face. I extended my left hand in a closed fashion and slowly raised my middle finger. He was one of those guys who I'm sure lives by the creed, \"If you can't dazzle them with your brilliance, baffle them with your bullshit.\" It was easy to see he was all bullshit.\n\nThen there's Buford beer gut to my far right. He's an older white guy with a shitty comb over and worn-out suit. Obviously a frequent flyer for whatever crappy company trying to sell something, anything, in hopes of receiving a commission check at the end of the month. He's been perving me for a good fifteen minutes, undressing me with his eyes as though I was going to drop to my knees and suck his withered, shriveled cock.\n\nIt wasn't long before mister 'Hey baby, why you here alone?' sat on the stool to my right. Another black guy, average height, an obvious gym rat, shaved head, halfway stylish clothes, a toothy grin and the manners of a cave man. He no more than sat down when I felt his hand on my knee. I politely removed it, he immediately put it back. As I was again moving said unwanted advancements from my body the dolt got close to my face.\n\n\"I know you're looking for some hard black cock to ride. The hunt is over sugar, I'm your man. I got all you can handle baby.\"\n\nWhat is it about guys who think if they talk dirty or act like a serial rapist that a woman will somehow acquiesce to their stupid behavior? What has happened to guys taking their time and being tender? Hmm, I think it was destroyed by Tinder, but I digress.\n\nMoving his hand I held on to it as I spoke. \"Listen asshole, I'm not looking for a hard black cock as you so crudely put it. You're just another guy who thinks five inches is ten. Go sell that shit to one of those white girls in the corner booth. Move your fuckin hand or I start screaming.\"\n\nHe parted in the fashion I envisioned he might, with a look of disdain he spoke loud enough for others to hear, \"Fuck you bitch.\"\n\nFlipping a guy off and using the word fuck in any form or fashion was something I only did away from home. Being down and dirty felt good under the right circumstances, it had carried over into the bedroom a few times in the past. Most of the guys I'd encountered couldn't handle dirty talk during sex. It either put their ego into an overstimulated state thinking they were some kind of super stud, or it made them feel like they were losing control of the situation. The few who took it in stride and added to the role play made it fun and exciting.\n\nThinking about him telling me to fuck off and deciding not to I thought to myself, \"Well wasn't that sweet?\" He had broadcast his IQ and probably his sperm count to the entire room. I was about ready to pull up stakes and go find another watering hole when a guy sat next to me on the left. A white guy who looked to be in his early to mid-forties, looking at me he smiled and nodded, then ordered a house tap. He was a bit taller than me, probably five foot eleven or there about.\n\nI liked the fact that he was dressed up and not down, in a short sleeve dress shirt open at the collar, it looked to be the quality of a Christian Dior or a Perry Ellis, had he worn a coat and tie he'd have been dressed for a gala affair. His slacks were of the same quality, perhaps a Greg Peters or equivalent, it was the brown leather basket weave loafers that made the biggest impression. Those were two-hundred-dollar shoes on his feet, combined with a seventy-dollar shirt and hundred plus dollar slacks, I added two and two together and got 5. He was obviously a professional and if he played his cards right, I'd have him buried as deep in my overly needy pussy as possible before the night was through. If I was lucky, several times.\n\nNot wanting to stare I watched him in the mirror if I thought he wasn't looking. He had a full head of hair with a tinge of grey here and there, it was obvious when he smiled that he had all his teeth. He didn't slurp his beer and he wasn't constantly trying to look down my blouse. I found it interesting that there was no room in the sleeves, his solid biceps filled them entirely. On the inside of his left forearm was a small tattoo that read, \"Sweet Melissa, 2012\". I looked for other tatts and saw none. A brochure with a bunch of balloons on it lay open on the bar in front of him, when he looked up and at me I made my move. It was time to soar with the eagles, or crash and burn.\n\n\"Hi, my name is Rebecca, most people call me Reba.\"\n\nHe extended his hand gently shaking mine, not soft like a dead fish, a firm handshake, but meant for a lady's hand. You know, firm enough to let you know he's a man without crushing your fingers. With my dainty brown hand in his I marveled at how much bigger his hands were than mine. When I looked up I was mesmerized by his dazzling blue eyes, it was as if they were dancing and twinkling in the light. Letting go of his hand I shifted sideways again allowing my stocking clad legs to lead the way. The swish of silk as I crossed my legs was audible and caused him to look down, after gazing long enough to know my legs were shapely, he moved his gaze to my eyes. Not my boobs, my eyes, I liked him already.\n\n\"Hi to you too. I'm Bob, most people call me, (pause and a toothy grin) Bob.\"\n\nMy mind was whirling, go big or go home baby, I told myself. \"Let me guess. Divorced, or unattached and married to your job.\"\n\nHe laughed softly, again the twinkling eyes, they seemed to worm their way to the very core of my being. Adjusting on the stool so we were facing one another he answered.\n\n\"Point number one, widower, point number two, correct, workaholic. And you? What brought you to this particular barstool?\"\n\nHe didn't look old enough to be a widower, I felt like a shithead for asking the way I had.\n\n\"I'm sorry about your wife. Was it sudden?\"\n\nHis expression displayed nothing but sadness, the twinkle in his eyes became momentarily dull, then his composure returned.\n\n\"Wrong place, wrong time. She was a pharmacist working the evening shift, a pair of gangbangers high on coke walked in demanding money. When she told them she didn't have access to the safe the little bastards beat and then shot her. I spent the night with her in ICU and held her in my arms as life left her body the next afternoon. The two idiots got 25 to life.\"\n\nI was fighting back tears, \"Is that what the tatt is for? Your wife's death?\"\n\n\"Yeah, she died in 2012, I never want to live long enough that I forget, thus, the year and her name. You didn't answer my question. What brought you to this bar?\"\n\nI laughed softly, \"Probably because it's the most convenient. I'm here for the symposium being hosted in this hotel and thought it would be better to drink here than somewhere I had to find my way back from. I'm an audiologist, what is it you do?\"\n\n\"No shit? My goodness, I never sat next to a doctor at a bar before. Forgive me, but I need to ask. What is a talented attractive woman like you doing in this yuppy watering hole? You should be out on the town at some swanky place.\"\n\nI chuckled, little did he know, then looked up, \"I don't want swanky. Occupation does not determine whether a guy is a dick or not. If he's a dick, then it doesn't matter what his occupation is, he's still a dick. I don't need what they call an upwardly mobile attitude or lifestyle. I'm a small-town girl from southern Alabama, I tend to gravitate toward the simpler things in life. By the way, my doctorate is in Audiology, though I've had medical training, I'm not a physician in any sense of the word. Back to you Bob, you didn't tell me what you do.\"\n\nHe knocked back the remaining inch of beer in his glass and signaled for another. Looking at my empty martini glass he raised his eyebrows.\n\nI smiled, \"Sure. Why not, the night is young.\"\n\nHe began his answer with a question. \"What do I do? Well I can assure you it is nowhere as impressive or demanding as your job. You help people every day, I just show up and work.\"\n\nI tapped his arm, \"You're deflecting Bob. Quit fartin around and tell me what you do.\"\n\n\"Okay, okay. As I said it's nowhere as exciting as what you do. I travel around the world building water towers. You know, the big ball or two in the sky over nearly every community, I'm one of the guys who builds them. I spend most of my days hanging from a harness or on a suspended platform welding. Depending on the size of the tower, the crew I work with is usually at the site anywhere from three to six months.\"\n\nI was completely caught off guard by his answer. I was expecting a lawyer, or something along those lines, I had never considered such a thing. You drive through a town with the name written on the side of a water tower, or a big smiley face, but you don't stop and think about the fact that somebody had to build that thing piece by piece from the bottom up. I had been so sure he was some sort of what is commonly referred to as a professional based on his dress, little did I know. He was certainly a professional, just not in a field most people ever considered.\n\n\"You mean, like, hanging there? How tall are those things?\" I asked.\n\nHe didn't hesitate, \"How tall? Let me put it this way, high enough you'd never survive a fall. The height depends on the location and local terrain. Average height is around 180 feet. I've never seen it but there's supposed to be one somewhere around 220 feet in New Jersey.\"\n\nI chuckled, \"I couldn't do that. An eight-footstep ladder gives me the chills. Heights and me don't get along. Isn't it scary?\"\n\nHe smiled, \"It takes some getting used to trusting what holds you up. We're always tethered, and if we aren't suspended on rope harness, we work off temporary platforms, to which we're also tethered. I will admit, it's hard on your body, I'm getting toward the end of my career doing this. Most guys are out by mid-forties, I'm determined to see 50 before I call it quits.\"\n\nI needed to know, \"How old are you Bob?\"\n\nHe looked at me for what seemed like a long time before answering. \"I'm 47. Which will likely scare you away. Though I went to college for an engineering degree you're way out my league Reba, as much as I'd like to know you better, that probably won't happen. And since you're asking, how old are you?\"\n\n\"I'm 39, and why would I be scared away?\" I asked.\n\nHe took a long swig, stared at the mirror a minute and responded, \"It should be obvious. You're a highly educated specialist and I'm a guy who travels around the world building water towers. You're black, I'm white, a lot of people want to stay within their given culture, to top it off I'm sometimes gone for months at a time. Yeah, I like to dress nice when I'm not on the job, but that's only once in a while.\n\nNah, might be better if we just say we had a pleasant conversation and go our own ways.\"\n\nI found myself wondering, \"If you have a degree in engineering why are you working as a welder on water towers?\"\n\nHe laughed, \"I knew you'd ask that question. The simple answer is because I can't sit at a desk and do nothing. Not that engineers sit around doing nothing, I simply need to be hands on, I apply my engineering skills in the field, not an office.\"\n\nJust then another guy walked behind me, putting his hand on my waist, attempting to wrangle me away from speaking with Bob. Yes, he was black and in a nice suit. It was obvious by the way the guy behaved he wanted in my pants, the more I moved his hand away the more he persisted, and the more agitated I became. I finally looked at Bob and mouthed 'help'. Bob slid off his stool stepping between me and the horny toad.\n\n\"Listen buddy, she said she isn't interested. You need to take no for an answer.\"\n\nWhat happened next was as embarrassing for me as it was disastrous for the guy. He went all ghetto, puffing his chest out, grabbing his crotch, making all kind of foolish movements with his arms. I was embarrassed for my race, why did he have to act like some sort of thug? I recall thinking, no wonder the stereotypes exist. Leaning forward close to Bob's face he sneered.\n\n\"Ima fuck you up motha fucka.\"\n\nI thought, 'there ya go, impress him with your inability to speak properly. You might be dressed well, but in your case buddy, clothes don't make the man.'\n\nAs he raised his hand making a clenched fist Bob grabbed it in the palm of his hand and began to squeeze, at the same time he began bending the guy's wrist back. As in opposite its normal rotation. The look of terror on the idiot's face was priceless, Bob had him on one knee nearly in tears. Bending over he spoke softly.\n\n\"Apologize to the lady and then make yourself scarce.\"\n\nThe guy mumbled some noncoherent shit in my direction and tried to stand, Bob continued to squeeze bringing the guy back to his knees.\n\n\"Now say it like you mean it or I break your wrist. Your choice asshole.\"\n\nWith a tear running down his cheek he begged my forgiveness. I accepted his apology, Bob released the guy's hand and as he stood Bob spoke loud enough that others could hear.\n\n\"Better get on home, I think I hear your mom calling.\"\n\nWith my hand over the upper part of my chest I was laughing so hard I nearly peed my pants.\n\n\"Holy cow Bob. I thought shit was gonna hit the fan. Thank you for taking care of that without a fight.\"\n\nHe grinned, \"I know you aren't supposed to refer to a black guy as a boy, but with guys like him, you have to face the truth of the saying, \"boys will be boys\" and let it go.\"\n\nI slid from my stool, put my hands on either side of his face and kissed him tenderly. He touched his lips with his fingers and whispered, \"Thank you.\"\n\nIt was time to come clean with him, \"I need to be truthful with you Bob, but not here in the bar. Come sit with me in the lobby.\"\n\nAs he sat next to me on the couch I took his hand. \"Bob, I'm a thousand miles from home, I leave Sunday morning, I have no one waiting for me when I return and the reason I was in the bar tonight was to get laid. I only do this when I'm away, otherwise I'm basically celibate unless I go to another city for a weekend. I embrace the whole \"don't shit where you eat\" philosophy and avoid relationships where I live. On top of that, my work schedule is so hectic I couldn't sustain a relationship if I wanted to.\"\n\nHis reaction blew me away, I was not ready for what he said.\n\n\"Well, then I'd better get out of the way so you can get down to business. Hey, it was fun talking with you. Maybe I'll see you again before you leave.\"\n\nAs he started to stand I grabbed his hand and yanked him back next to me.\n\nStaring at him I asked, \"Are you really that dimwitted, or is this some sort of game for you?\"",
        "He looked perplexed, not a put on perplexed, a truly unaware perplexed.\n\n\"Bob, you're the one I want to go to bed with. Not the cheap suited wannabe player, or the beer belly slob, or the dips who think because they're black that I'll somehow jump at their command. No Bob, you're polite, educated, and one of the most tender men I've met in a long time. It's you I want in my bed. Now, can we stop messing around?\"\n\nHis face said it all, the sparkle was back in his eyes, his grin had me in a tizzy as my nether region began to reach a boiling point. I leaned to him, put my hand at the back of his neck and drew his lips to mine. There's something about older men who've learned from a woman before you, those lessons seem to carry forward, somewhere along the line a woman had taught him how to kiss. I was so glad I wasn't standing, my legs felt like they were made of jelly. The kiss was soft, sensuous, not rushed, it was titillating and earth moving. No mashing of teeth or an open-mouthed slobber fest, just good old fashioned tender kissing with a light exploration of each other's tongue.\n\nBreaking the kiss I took a deep breath and let out a 'phew', followed by, \"Damn you're a good kisser. I have a few questions. Have you ever been with a black girl before?\"\n\nHe nodded, \"Absolutely. Next?\"\n\n\"Do you like oral? And if you do, does it matter if I'm natural?\"\n\nThere was that grin again, \"I love oral, I prefer natural. I want my woman to look like a woman and not a ten-year-old. Did I pass the test?\"\n\n\"Not just yet Bob. I normally vet the guy before I bed him. You look like a decent guy, are you clean? By that, no std's or stuff like that? And I generally insist on using a condom, but the itch in my belly tells me I should take you bareback. Are you still on board?\"\n\nHe chuckled, \"Let's start with number one, I have never had a disease or STD of any sort. As for a condom, I agree, bareback it is. I have a question as well.\"\n\nI moved closer to hear his almost whisper, \"Are you gonna want anal? Cuz I don't much like it. I'm just sayin.\"\n\nAs I stood pulling him up I turned and in full stride tugged him along to the elevator I answered his question. \"I don't do anal either, you're safe Bob.\" Our laughter filled the lobby.\n\nWith us being the only ones in the lift he took me in his arms kissing me tenderly, sliding his tongue gently across my lips. As I opened my mouth he softly played with my tongue, again, not forceful or hurried.\n\nI immediately thought of the old Pointer Sisters song, 'a lover with a slow hand, not someone who comes and goes in a heated rush', yes that was him. Reaching between us my fingers fluttered over his semi-erect cock, it felt bigger than anything I'd touched before, I was sure I'd enjoy every inch of it. With another six floors to go he had time to pull my groin tight to his and raise my skirt in the back. His hand slid up the silk stocking to the lace top and then to the bottom of my ass cheek.\n\nCupping it he squeezed softly, I was so glad I'd brought along the silk panties I was wearing. They were a waist high panty, so many guys want micro-bikinis or a thong, what kind of panties I had on didn't faze him a bit. His hands were gently rubbing my butt when we felt the elevator stopping. He patted my butt twice, dropped my skirt, turned me away from him and stood behind, his hand on my waist. As the door opened an older couple was waiting, they stepped back and let us pass, the older lady said just loud enough for us to hear.\n\n\"Have fun kids.\"\n\nI thought to myself, kids? Then I realized to someone in their 80's we probably looked like kids. As we approached room 912 he stopped.\n\nPlacing my arms around his neck and pushing my pussy into him I cooed, \"I want it in my bed, and I want it as many times as possible. I don't care if it leaves me sore, I can recover on the long flight home.\"\n\nHe nodded, \"Where are you then?\"\n\nI giggled, \"916. Wanna play doctor with me?\"\n\nThe hall light danced off the deep blue of his eyes. \"Only if I get to examine you with my magic wand.\"\n\nI flushed and looked into his eyes, \"I'm going to insist that you examine me numerous times before morning. Doctors' orders.\"\n\nIn the room I closed the door and pinned him to it, reaching up for more kisses. Once more I found myself reflecting on the way he kissed, it took me to an entirely new level. It was so tender and meaningful, not hurried or overly zealous. There are times for frantic contact and spontaneity, this moment wasn't one of those. His hands were on my butt softly caressing, then a soft squeeze before slipping his hand under my skirt, as he lifted it I felt his fingers slide beneath the elastic of my panties onto my bare bottom.\n\nThose huge calloused hands should have been abrasive on my delicate skin, to my surprise they were gentle and caring. Sure, they were hard working hands, but on my skin he was so soft and intimate. As we slowly moved into the room he continued kissing me while reaching for the top button of my blouse, there was no hurry whatsoever. Taking his time he opened each button and then kissed the flesh that had been exposed. It quickly occurred to me that I was in the hands of an accomplished lover, not some skin hound. With the last two buttons open he tugged the blouse from my skirt and knelt kissing my tummy, tonguing my navel as his hands slowly explored my breasts through the bra.\n\nHe continued his kisses on my tummy, moving downward, when he met the waistband of my skirt he let go of my breasts, lifted my skirt and kissed my pussy through the sheer silk panties. Looking up, his eyes danced, his lips spread at the corners into a wide smile, those eyes, those damned eyes, so fucking erotic to me. With his nose in the middle of my bush he took in a deep breath through the fabric, after kissing my mound he stood. When I reached for the button and zipper of my skirt he slapped my hand, like you would a child, softly, just enough to gain their attention.\n\nLooking into my eyes he kissed me, \"You're mine tonight Reba. Mine alone, and I like to unwrap gifts by myself. Relax and let me love you.\"\n\nA gift, he referred to me as a gift, this guy was pushing all the right buttons at all the right times. I was ready to be his wanton whore as soon as he wanted me that way. Then it dawned on me, I had never been to bed with anyone but black guys.\n\nI almost panicked, \"Bob. I've never been with a white man before.\"\n\nHe chuckled, \"You'll be fine, we're just like any other guy. I'll have to make the most of it and convert you to my white cock. I hope you weren't kidding about taking care of this steamy pussy more than once because I feel like I could go two or three times tonight. I don't know why but my libido works overtime when I'm with a black girl. Did I tell you my Melissa was dark skinned? She was from Tobago.\"\n\nHis comments caused me concern. \"Do you sleep with women in every country?\"\n\n\"Nope, since Melissa passed six years ago I've only been with three. All short term, one in India, man she was a hot little thing. One in Brazil, that was a waste of two days, and then one in Canada. She was pretty good, taught me a new position. Maybe we'll have time to do it later.\"\n\nI was genuinely concerned, I didn't want to be with a cheater, \"Did you cheat on Melissa when you were gone so much?\"\n\n\"Oh hell no. We didn't marry until later than most, she was only 35 when she died, we'd been together six years. Nope, we took our vows seriously, neither of us strayed even though there were opportunities thrown at us. She was mine and I was hers. I didn't touch another woman until she'd been gone more than three years.\"\n\nMy skirt lay in a puddle at my feet, his hands were behind me deftly opening my bra. I've found that men tend to fumble and bumble trying to open a bra, not him, it was open in a flash. He held the front in place while he slipped the straps over my arms, as he let the bra drop he immediately cupped my breasts as though he were supporting them. Slowly, with finger tips so soft they tickled instead of caressed, he circled each nipple, widening the circle with each rotation until my entire breast was encapsulated in his palms. Those deep blue eyes staring into mine.\n\nWithout another sound he bent sucking a nipple into his mouth and sliding his hand inside my panties, stopping when his fingers reached my bush. Raising his hand up slightly he slid all four fingers through the pubic hair and firmly cupped me. My pudenda were swollen with desire, gooey, and eager to have the panties stripped away. I wanted his fingers, his tongue and his cock to make my body convulse as I screamed in ecstasy. It felt hot between my legs, the intensity of my lust couldn't be more than body temperature, and yet I felt like my pussy was on fire. His fingers found the heat of my wanton desires and slipped inside.\n\nI grabbed his head and held it tight to my breast, he pulled back and planted his mouth on mine. Not only could he kiss, he knew when to kiss. The guys I had been with before wouldn't have kissed me, they'd have gone for the homerun immediately. Not Bob, with his lips melting into mine his hand was back on my breast, moving from one to the other, molding them, caressing, rolling and lightly tugging the nipples. I always thought my C cups were more than enough for any man, and yet they fit within his hand, my god he knew how to use me. Dropping his hand back to my nether region he slipped a finger inside me, then a second, I was so wet they met with almost zero resistance.\n\nI was whimpering into his mouth as my hips slowly undulated in rhythm with the exploration of his fingers. With two fingers inside me only to the second knuckle he broke our kiss, hooked his thumbs in the waist of my panties and slid them to my ankles, I leaned against his shoulder and stepped out of them. His hands slid up the silkiness of my stockings on the back of my thighs, when they reached the edge of my butt cheeks he opened my legs a few inches. With deft precision his tongue glided through the labia headed for the magic marble sized love button, he hadn't yet touched it with his tongue, and I was already approaching blast off.\n\nLooking into my eyes he smiled, \"You taste lovely Reba, what a wonderfully fragrant pussy. Soft, delicate and yet there's the right amount of muskiness to drive a man insane. I could dine here all night.\"\n\nHe took one last lick and stood. \"Stand by the bed, you can undress me now. Be careful when you take my underwear off. It hurts when the head gets caught in the elastic and forces it down.\"\n\nI'd felt him through his slacks, the size alone made my head swim, it felt long, solid and wide. I had never felt a cock that size before. Having had to study human anatomy as part of my doctorate I knew that only about three percent of all men worldwide had a dick of 8\" or more. I was smiling to myself as I undressed him slowly in much the same fashion as he'd undressed me. Could it be, I wondered, was I going to be thoroughly fucked by a two or three percenter?\n\nI slowly unbuttoned his shirt, kissing along the way, running my fingers back and forth through the hair on his chest thinking to myself, \"damn I love a guy with a hairy chest\". With his shirt off I sat and went to work on the belt buckle, I had it open, the button on the slacks open and the zipper down. Taking a side in each hand I pulled downward, when they hit the floor he stepped out of them.\n\nWith his pants off I was eye level with the biggest cock I'd ever seen, the fact that it was on a white guy blew the much touted big black cock theory straight out the window. I was giggling quietly, never in my wildest dreams. I blinked twice realizing his dick poked above the elastic of the waistband. The bulbous head of his cut cock looked almost purple there was so much blood coursing through it. I pulled the front of his underwear out and then down, his cock twitched and surged slightly from side to side.\n\nThe veins along the sides stood out, the urethra running along the bottom looked like it could dispense massive amounts of semen. Looking down grinning at me he started showing off by flexing the muscles of his cock making it move up and down. I could no longer resist and kissed the tip, licking away the lubricant that had been seeping from him. Looking up I opened my mouth slightly, allowing my teeth to barely graze the skin of his cock as I inhaled as much as possible before the gag reflex took over. Pulling back I sat looking up and asked.\n\n\"Can you reach my phone, it's next to your right arm. Mmm, take a picture of my dark lips wrapped around your white cock while I look at you. I want this to look at when I bring myself off at home, and I want pictures of you stuffing your big cock into my brown pussy. Tonight is going to be soooo good.\"\n\nHe snapped a few pics with me looking up and a few with me concentrating on stuffing as much of his cock into my mouth as possible. At one point he put his hands on the sides of my head holding it in place while he slowly and deeply fucked my mouth, I was thankful he didn't try to jam it down my throat as others had in the past. I was so turned on by that I determined I wanted him to fuck my face to completion at least once before we parted company. I had an instantly satisfying vision of him fucking my mouth, shooting a load of cum down my throat. I don't deep throat and there was no way I was going to get his full 8\" in my mouth, but I wouldn't mind him fucking my face with the five\" my mouth was comfortable with.\n\nI wasn't sure how to determine the thickness and diameter, I knew it was much bigger around than the ring bologna my mom served me as a kid. The thickness was all my jaws wanted to endure, I was sure it would stretch my pussy to full capacity when we reached that point. I could feel the head begin to swell and started humming, mm-hmm, mmm-hmm when he pulled my head away.\n\n\"This goes in your sweet pussy Reba. You can suck me dry later, but now it's time for you to move so I can lay back. I want your pussy on my face.\"\n\nI was so damned excited. A man who likes to eat pussy, and not only eat pussy, he wants me to put mine on his mouth while I sit on his chest. My dreams were coming true.\n\n\"Bob, I get a bit raunchy when I'm close to cumming. Just so you know.\"\n\nHe laughed, \"Good, because I get rather demanding toward the end. Your pussy is mine and I intend to use it.\"\n\nI had seen a woman sitting on a guys face in a porn vid once and wanted it so bad, unfortunately only two of the previous guys I'd been with would eat me. It was always a hurried flurry of tongue lapping, no tease, no technique and neither was going to have a cunt sitting on his face. It was always disappointing even though I would climax... sort of. It was never a heart pounding out of your chest, sheet grabbing, tit pulling, loss of breath orgasm that sends you into outer space.\n\nBut this, this was going to be different, excitement was on his face, my body was pulsing with anticipation. With my knees over his shoulders he placed his hands on my hips and guided me forward until the contrasting pink of my inner labia surrounded by the brown outer lips was directly above his mouth. The warmth of his breath on the labia made me shiver as more girl cream flowed from my body. When his tongue swiped from bottom to top, stopping on my clit which he circled with his tongue, my body exploded.\n\nNo way was I going to be able to hold anything back, he owned me, and he knew it. The extensive foreplay of teasing, kissing, sucking my tits and playing with my pussy had me at the point where I was damned near delirious. Considering what was about to happen, combined with all the foreplay, I couldn't resist grinding my pussy against his mouth. With his fingers he opened the labia and let his upper teeth graze across my clit. Another wave of delight spread through my body, I was convulsing, my hands gripped the headboard so tightly the knuckles were white.\n\nAs awareness began to return I realized he was tongue fucking my vagina as deep as he could go, his head changed angles and he was once again attacking my clit with his stiff pointy tongue. This time he found my favorite spot and stayed there until I let out a scream that would wake the dead. I couldn't believe how tight my stomach muscles had become, my hips were pulsing back and forth on their own, I felt wave after wave of orgasm flood my body until I could take no more.\n\nPushing away I laughed and said, \"No more, oh my god, no more. You're gonna kill me with that tongue.\"\n\nThen I laughed to myself, he'd already destroyed every stereotype I'd had of white men, what next? I scooted back straddling his stomach, my leaky pussy dribbling onto his taught abdomen, girl juices were now on his torso as well as his face. His chin and cheeks were shiny, glistening in the light of the bedside lamp. I hovered over him with my arms extended, when he opened his mouth wide I knew what to do, lowering my breast into his mouth was one of the sexiest things I had ever watched. My hard dark brown nipple being drawn in by his soft pink lips. No other man had ever done something like that before. How I wished I'd grabbed the phone for a picture.\n\nAfter he'd sucked both tits I scooted down beside him, when I kissed him I tasted myself for the first time. It wasn't revolting, in fact it made me feel sexier, he was right, my pussy did have an earthy scent. I would never again wonder if I smelled okay during sex. With my head cradled into the crook of his neck and my hand sliding through the chest hair I stretched upward for a side kiss.\n\n\"That was wonderful Bob. I've wanted that to happen for years, now I know why. Damn, you took me places I didn't know existed. Can I ride you the first time? You're so damned big, it'll give me time to get used to you, your cock is huge. I love how you don't talk about it. I've been with guys that talk about the black anaconda in their pants only to have an average looking five or six inch dick emerge. Not that I mind an average sized dick, but don't try and tell me it's a monster.\"\n\nWhile I lay against him recovering he tenderly played with my breast, gently cupping, running his fingers in a fluttering fashion across the nipple and trailing down to my abdomen, then back up. Sliding his hand down his fingers lay flat on my mons, slithering them into my bush and then staying still, simply cupping me. Every few minutes he would softly lift his hand so the hair would drift between his fingers. It was what I had dreamed of when I thought about being loved, not screwed, loved. My body was on fire as I moved my body in position, with one leg up over his abdomen, one hand on his chest and the other aiming his cock at my pussy I hesitated a moment. I thought about the old Roberta Frost song, \"Killing me softly with his song\", only tonight he was killing me softly with his gentle loving ways.\n\nI was cognizant of the fact that my body would need time to adjust, there was no way he could simply slam it home. Having your cervix hit with a stiff cock is not erotic, it's painful. Being above him I positioned the tip of his cock at the entrance to my leaking desperate to be filled pussy. Rubbing it back and forth a few times to lubricate I let go and began pushing down. I felt it opening the outer and inner labia as the thickness of his cock began to push forward, I gasped as the head popped through. My labia felt as though they were stretched to the max, I stopped while leaning forward to take the pressure off without taking his cock from inside me. What precious little I'd managed to get inside I wasn't about to let slip out.\n\nMy arms were extended as we looked between us, his hands were on my chest, I loved that my 34C's fit within his palms nicely. I took a deep breath and pushed back, another inch went inside, I pulled back and then pushed down again with another inch inside. I kept this up allowing my body to adjust and accept the massive intrusion of my most intimate place. I smiled as I watched the labia hug the shaft of his cock, as though they were meant to be wrapped around his dick. I would stroke and slow down, then stroke a bit more, slowly, taking a little at a time, he wasn't impatient or making me feel less than adequate because it was taking time.",
        "After what seemed like an eternity of delicate rocking back and forth and short stroking, I could feel my ass touch his thighs, I sat upright and wiggled, it was like I wanted the last morsel of meat he had to offer. I pointed toward my phone on the nightstand, handing it to me I took a picture of our contrasting colors along with a close up frontal view of my pubic hair solidly meshed with his. I gave it to Bob and told him that I wanted a picture of him going in and out of my pussy.\n\nSlowly sliding up and down his meatpole he snapped a half dozen pics, what he did next was surprising and probably what I had subconsciously wanted all along, he put the phone in video mode. My breasts were swinging back and forth, he would grab them with his finger tips and pull slightly, making me tingle all through my body, destination, my pussy. When I dipped to kiss him the ringlets of my hair cascaded downward alongside our faces, it was though we were in a tunnel. The labia were hugging his shaft tightly as the plum like head spread me open with every stroke, and though I wasn't yet riding him full stroke there was a lather of white girl juice around the base of his cock.\n\nOnce my vagina had adjusted allowing him to fully penetrate me without discomfort, I rode him like a bucking bronc. Sometimes up and down, sometimes grinding my clit into his pelvic bone, sometimes rocking back and forth, with my camera he captured every second of my enjoyment, I grinned knowing not only did the video show our bodies, it would clearly show the ecstasy on my face.\n\nI had cum twice by the time his cock began to swell. I love the feeling of a man's cock getting bigger inside me, I love the feel of sperm hitting my cervix as he ejaculates, the feel of cum dribbling around his cock and out of me. His cock was widening, the head swelling, just as I felt semen being forced through the urethra headed for an explosion from the end of his massive cock and against my cervix, a powerful orgasm hit me like a tidal wave. I grabbed my breasts and squeezed, then pulled the nipples until they hurt. I sat straight up as pulse after pulse of semen flooded my insides. Between the euphoria of my orgasm and the sensation of his semen splashing inside I lost track of where I was or what I was doing. My eyes rolled back and I flopped forward across his chest.\n\nSeconds later I began to stir, I felt so safe, so secure, so ultimately satisfied as he held me tight, with his finger he lifted my chin and kissed me. I could still feel his cock twitching inside me, I wanted more but I was too exhausted to do anything about it. I don't know if I blacked out or fell asleep for a moment, when I came back to reality I was on my side, my leg was across his and my pussy dripping onto his thigh. He was gently stroking my hair and singing. I know it sounds silly and hokey, but he was singing My Girl, dammit this man knew which buttons to push at exactly the right moment. I told myself it wouldn't happen, but I wanted this guy, forever.\n\nAs I recovered I noticed he was barely breathing hard, I'd never been with a man who had that kind of stamina. I found myself thinking, at 47 his job must keep him physically fit. He was stroking my hair, running his fingers through the wide ringlets, then stopped and looked down at me.\n\n\"Did you say you were going home Sunday?\" He asked and I nodded. \"Did you realize this weekend is the start of the annual hot air balloon festival. That's why I'm here, I come to Albuquerque every year when I'm close enough to get here. I finished a job in a small town outside Santa Fe last week, I decided to wait. Watching all the balloons float upward at sunrise is a sight you never forget. Why don't you come with me in the morning? We'll make the most of tonight and get up early. There'll be plenty of time to enjoy one another tomorrow when we get back.\"\n\nI scooted back pulling the sheet up over my body which was chilling rapidly without his body heat to keep me warm.\n\n\"Hand me my phone.\"\n\nHe gave me a funny look. \"Who are you going to call at ten o'clock?\"\n\n\"My sister, we do it all the time. Hi, Gwen? Oops, sorry, yeah call me back when he's through. Enjoy.\"\n\nI was laughing to myself when he asked, \"What was that about?\"\n\nWhich only made me laugh more, \"Hubby is busy dining at the Y, she'll call me when he's done. Those two are a couple of screwing machines, I'm amazed they only have four kids.\"\n\nHe had a smirk on his face, \"Yeah, but why did you call her? Certainly not to get a report on their bedroom activities.\"\n\n\"She owns a travel company, she's my travel agent. I'm gonna get my flight changed to Monday so I can stay here with you.\"\n\nHe looked sad, \"But my flight leaves late Sunday afternoon. I have to be in a small town in Ohio by Monday night. I'm so sorry.\"\n\nI'd made up my mind, I was going to be with him every minute possible until he had to leave.\n\n\"Okay, then I'll get her to change my flight as close to yours as possible. What airline are you on?\"\n\nHe pondered a moment, \"Um, Delta. There's no direct flight, I have a short layover in Atlanta of all places. It seems like there would be a more direct route but not with Delta, and the company I work for has some sort of deal with Delta if we all fly their airline. Domestic and overseas.\"\n\nI was beaming inside. \"Great, I'll see if Gwen can get me on the same flight, we can fly together until Atlanta. I have to catch a flight from there to Tampa anyway. Who knows, maybe we can join the mile high club?\"\n\nHe scoffed, \"That shit can get you arrested if they catch you. You're better off covering with a blanket and playing with each other.\"\n\nI smiled at him, \"Promise?\"\n\nBy the time I was done on the phone with my sister, who by the way not only got us on the same flight but upgraded us to first class, her gift to us, I was ready for mores. After taking a pee and washing away some of our mess I was ready for round two. I wanted it from behind but wasn't sure I could accommodate his monster.\n\nHe'd washed while I was on the phone, when I walked from the bathroom he looked up smiling, I noticed that his cock was beginning to harden. I loved what this man was doing to me, to think he was getting a hardon just watching me parade my naked body across the room made me start to get wet. Another first, no other guy had ever gotten hard for round two without stimulation of some sort. He was sitting with his back against the headboard, his legs open enough that his scrotum hung on the sheets like a pair of plums. It was no wonder my pussy was still leaking after I'd peed and had pushed out as much as possible.\n\nI knelt on the bed leaning toward him, he didn't grab at me or move to caress me, he gently took my face in his hands and kissed me. How did this man know kissing, good affectionate kissing, made me feel like there was a river between my legs. I could feel the warm slick potion coat my labia, I knew without looking that the few pubic hairs along the edges were certainly dripping with my lustful secretions. Lying between his legs with my body against his chest I looked up.\n\n\"Can I have it from behind? I think I can take it if you start slow. I love it doggy, it goes so deep, but that's my concern, I barely took all of you when I was on top.\"\n\nHe soothed my face with his fingers as they danced lightly across my skin. His soft deep voice was soothing.\n\n\"You'll be able to take it, after all, babies come through the same channel. I know it's different during childbirth, but I'm pretty sure it's meant to stretch. I'll go slow so your insides can adjust, I read where a vagina will do that. By the time we cum together you'll be taking every bit of me... and loving it.\"\n\nI backed away and lay down, \"Will you lick me again? It'll drive me to the point where all I wanna do is fuck.\"\n\nCrawling between my legs he slid his hands under my thighs wrapping them around and grasping my hips. He pulled my body to his face, looked up and whispered.\n\n\"Lift pussy into my mouth.\"\n\nI pushed my hips upward and felt his kisses along the labia, the inside of my thighs right where the leg ended and the pudenda began, then he nuzzled in my bush before lowering his mouth directly onto my cunt. He wasted no time seizing my enlarged clit between his lips and sucked it as he licked on the very bottom, there he was at my hot spot again, the first time hadn't been a fluke.\n\nI was falling off the edge of the earth and could care less if anyone caught me or not. My hips were bucking into his face, my butt was off the mattress and I could hear long deep moans. It was like I was outside my body watching this woman go through a body spasming orgasm. Wave after wave had ravished my body in that minute or more to the point that I couldn't endure the sensitivity any longer. I pushed him away and clamped my thighs shut as my body shuddered, it was then that I realized my left hand was on my breast squeezing and tugging. I knew from past experience I only did that when I had enjoyed a massive climax.\n\nOnce I'd caught my breath I sat up and told him to let me get him wet. He smiled back at me.\n\n\"I think you're wet enough for both of us. Hands and knees little girl, it's time for another examination.\"\n\nI turned with my ass in the air, wiggling it back and forth. When I felt him slide the tip through the gooey thickness that coated my labia I looked back at him.\n\n\"Give me that firehose, fuck me silly. You'll know when I can take all of it, my body will tell you.\"\n\nHaving been sufficiently stretched earlier and with ample natural lubrication he pressed forward. I felt the tip open me as he pushed inside, the head went through with little discomfort, I was inwardly pleased that I could take him easier this time. He was in me three or four inches when I began pushing back to gently meet his forward movement, I was feeling comfortable and pushed back hard only to feel pain and let out a yip. His movements stopped as he grasped my hips.\n\n\"Did I hurt you Reba? I'm sorry, I was trying to go slow.\"\n\nI reached back to put my hand on his as he held me in place, \"It wasn't you, it was me. I knew I was close to being able to take all of you and got greedy. Go ahead, I don't want this to end.\"\n\nWith a slow steady rhythm we continued, my body was relaxing, adjusting, and ready for more, I was pushing back into him without discomfort. Almost as though he was reading my mind he placed the palm of his hand on the lower part of my back just above my butt and pressed down slightly. I felt my back arch pushing my pussy more in line with his cock and my legs instinctively opened another inch or more. I groaned and moaned.\n\n\"Oh fuck me deep Bobby, own my pussy, oh my god you're so good for me. Fuck her like you own her, wreck me baby. Make my pussy useless to any other cock.\"\n\nAs he was slamming into me I whimpered a few times which brought a slap on my ass, then his deep gravelly voice.\n\n\"Shut up cunt, take it like a woman.\"\n\nOooo, he'd upped the game, I replied, \"Then stop holding back and fuck me like a mad man.\"\n\nHow long he pounded against my body I have no idea, most intercourse lasts from twelve to thirty minutes, I was not cognizant of time. I knew one thing and one thing only, I didn't always climax from vaginal stimulation, but this man, I'd been over the cliff so many times my body felt exhausted. I cried out.\n\n\"Are you almost there? My pussy can't take much more. Cum in me Bob, please, cum in me.\"\n\nHis rhythm slowed slightly and I felt the mattress move, looking back he had lifted one leg placing his foot flat on the bed, then the other in the same manner. He was squatted over me, I felt his fingertips on the small of my back for balance and then the longest, deepest, most filling stroke of cock I'd ever encountered. I thought the son of a bitch was in my throat he was so deep. Beyond his fingertips on my back there was nothing touching but my pussy wrapped around his dick. Inside I was doing my happy dance, I had finally taken every bit of him without pain or discomfort. I could hear him grunting and telling me to get ready.\n\n\"Get your ass up, up higher. Mm, good girl, this is for you.\"\n\nHis abdomen slapped against my ass, his hands gripped my sides and held me in place as what seemed like ropes of semen splashed against my cervix. In the past I hadn't always felt the man ejaculate, there was no mistaking it with Bob. My vaginal walls were working overtime, squeezing, sucking the last remnant of life from his cock, my body felt lifeless. Pulling away from him I flopped forward while he sat back on his haunches, breathing hard and sounding like an old steam engine, hissing through his teeth, groaning from deep within, his body would shudder every ten or fifteen seconds.\n\nSweat was running down his face, droplets of sweat were throughout the hair of his chest, his breaths were deep, I watched his chest rise and fall. The muscles would tighten, then relax, then tighten once more. I found myself thinking, 'how the hell did I luck out and find this lovely specimen of the male gender on a whim?' I giggled quietly as I thought about how fortunate I was to have had the other guy cancel. As I'd thought at the bar, 'too bad for him.'\n\nWe slid under the covers at 11:37 after a quick shower, my body was sated and worn out, I was ready for sleep. We'd be up at 5:30 to see the balloon's rise at the break of day, somewhere around 6:30. I was glad I'd brought along one pair of jeans and a light sweater along with my favorite sloppy sneakers. I would use one of his long sleeve work shirts as a light jacket in the early morning air. I awoke just after 4 to a sensation I'd never experienced before, his cock sliding in and out of me. Slow, gentle, deep, as I opened my eyes I had a smile on my face.\n\n\"Bob, I've never been fucked as a wake up call before. I love this, let me have all of it, it won't take me long to cum this morning.\"\n\nHe grunted and spoke, \"Good, because I already feel my balls stirring.\"\n\nI laughed, \"Then you'd better put that thing in gear and fuck the shit out of me.\"\n\nWhich he did, we didn't last more than fifteen minutes but it was enough to put us back to sleep for another twenty minutes. He'd gone to his room for clothes and as we were getting dressed he asked if he could pick my underwear. I thought, what the hell, he'd already been inside me numerous times, if that's his kink, go for it. I laid out my clean undies on the bed and to my surprise he picked out a pair of light yellow boy shorts with tiny blue butterflies and a simple white bra with zero padding, nor was it a molded bra. It consisted of a light cotton material that supported me and nothing more.\n\nHe didn't go for slut or sexy, it was like he knew I wanted to be comfy as we trudged around the festival. When I slipped the sweater over my head he lifted his hands to my breasts and gently molded them to fit his hands whispering in my ear.\n\n\"Nice tits lady.\" Followed by another of his barn burner kisses. The festival was fun, however our bodies were beginning to show the effects of last night's fuck-a-thon. We found a food stand just after eleven, had some fresh taco's, an absolutely delicious sopapilla and a much needed drink. As we walked from the food truck I held his arm tight and looked into his dazzling eyes, he smiled and gave me a peck on the lips.\n\n\"Bob? Can we go back to the hotel? I think I need another examination. I really like that thing you did last night standing above me. It was so deep, so satisfying, I think I need more of that.\"\n\nSteering us toward the parking lot he grinned at me, \"That was the position the girl in Canada taught me, I love it because it's nothing but cock and pussy. How about ankles on shoulders? Should we try that?\"\n\nI hugged his arm tighter as my body shivered with delight. \"I love it like that, with a cock like yours I'll love it even more. You'll need to go slow though, like last night, okay?\"\n\nHe moved his arm, put it around my waist, then dropped it and patted my butt.\n\n\"Okay, we'll start slow, but as soon as you've adjusted I'm gonna fuck you like a ten dollar whore.\"\n\nSnuggling into him I smiled and giggled, \"Promise.\"\n\nAs we walked through the door to my room he grabbed me, kissed me hard and growled. \"Get naked, I can't wait any longer.\" I started to protest when he slapped my ass. \"Get those clothes off Reba and bend over the back of the couch.\"\n\nHe stripped at the same pace I did, I had my hands on the back of the couch, my body was bent over with my ass pushed back and my legs open eagerly awaiting his magic meat pole. I sensed his body close when I felt his hand on my hip while he slid the tip of his cock through the wetness between my legs. As he positioned the head at the entrance to my vagina I pushed back impaling myself on him. He was about halfway in when I repeated my action.\n\nHe stayed motionless, his hands on my hips, it was me doing the fucking and I loved it, as he got ready to take over I felt the grip on my hips increase and then his long, fat shaft moving deeply in one long stroke. I hadn't yet taken him all the way, that ended immediately, his cock slid in me with a minimum of resistance, I was taking every inch he had without discomfort. Increasing his rhythm and level of thrust he was pounding my ass like it was the last fuck of his life, my tits were swinging, I was pushing my ass back as hard as possible, and then it began.\n\nWarmth was starting to flood my body, I could feel him swelling while the imminent orgasm I knew was going to overtake me rushed to the most sensitive nerve endings in my body, my pussy. He let out a loud grunt, then hissed through his teeth as he pumped rope after rope of baby juice deep inside me. My orgasm began the moment I felt his semen being thrust through the urethra headed for my cervix. I was convulsing and pumping my ass against him, and yet I was somehow aware of his climax. I'd never paid attention to a man's climax previously. His breathing, or shall I say lack thereof, the noises he made, the intensity of jamming his body as tight to mine as humanly possible, the groans, the 'oh fuck' and the feel of his seed splashing within.\n\nAs he softened he scooped me in his arms and laid me on the bed telling me not to move. From the bathroom he returned with a warm washcloth and began to clean me, gently wiping away the residue of our frantic fuck in a soothing manner. Before he was finished he bent and kissed my pussy along with a small lick. Looking up he grinned.\n\n\"I love your cunt. I wish it were mine forever.\"\n\nI watched as he stood at the sink washing his cock and scrotum with soap and water, then drying and turning toward me. His cock moved back and forth in a sideways fashion as he walked to me, I found myself thinking, 'that's a lot of meat Reba, did you really take every inch of it?' Then I smiled, yes, yes I did take every inch of it, and it was mine to use as I wished for another day. I woke him the next morning sucking his dick. When he was sufficiently as awake as he was hard I told him to stand next to the bed. I put his cock back in my mouth and bobbed a few times before pulling back.\n\n\"I want you to fuck my face like you did the other night, but I want you to cum in my mouth this time. I want to feel it hit the back of my throat before I swallow.\"\n\nI've given a blow job or two to completion in the past and found it fairly easy to absorb and swallow what they had to offer. I was therefore caught off guard when the first burst hit with such volume and force that I snapped my head back. I kept my lips tight around the shaft, I was choking and sputtering, when the third spurt happened, I opened my mouth and let it dribble onto my breasts. Holy shit, no wonder my pussy leaked for hours after we'd been finished. I remembered using the phrase 'firehose cock' the night before, little did I know at the time how close to the truth that was.",
        "He had me sit on his face after we showered, it was the most luxurious way to start the day. I'd graduated from guys who didn't like to, or wouldn't eat me, to a man that couldn't seem to lick my pussy enough. I somehow had to make this work between us, I didn't want this to be a once and done weekend like the others. I wanted this one to last. After boarding our plane and settling in he asked the stewardess for a blanket, there was only one other couple in first class and they were two seats ahead of us. As she handed the blanket to Bob she leaned so her face was between us.\n\n\"Wait until we're in the air and leveled off.\"\n\nWe'd been in the air about twenty minutes when I excused myself to the restroom, as I sat upon my return I put my hand in his palm, my warm damp panties were all he needed to get things in motion. I'd purposely worn a dress for the flight, he took full advantage of it by getting me off not once but twice with his fingers. I returned the favor with a slow hand job, one that filled the hand towel I had in my flight bag. We had approximately an hour layover waiting for our connecting flights so we spent it together at my gate.\n\n\"Bob, yesterday you said you wished I was yours forever. Do you remember?\"\n\nHe smirked, \"I think I said I wished your cunt was mine forever, but seeing as how it's attached to you, I think it's safe to say I wouldn't mind being with you forever. The trouble is, you have your job and I have, both miles and miles apart.\"\n\nI needed to let him know my heart, he was killing me softly with his love and I didn't want that to end, even if it wasn't everyday.\n\n\"Bob, I'd really like this to continue if at all possible. I know my getaway weekends prior have always been once and done, but I want more this time. You're kind, loving, gentle and so attentive of my needs. I also like the fact that you screwed me into the mattress when I needed to be thrown on the bed and fucked senseless. I know you have to be gone for a few months, but can we get together then?\"\n\n\"I'd like that Reba, but if we're gonna do that I want to be the only one you're in bed with. I don't want to share you.\"\n\nI gently caressed his face with my fingers and kissed him. \"That sounds perfect, I don't need to have sex all the time, although I think I would if you were constantly around. I like the idea of throwing myself back into my work without wondering where the next hook up will be, in a few months we can be together again and fuck like rabbits.\"\n\nHe laughed, \"I like the way you think.\"\n\nWe had tears in our eyes as we parted, my flight was before his, we promised to stay in touch. Three days after parting my phone pinged with a text alert. We spent the next twenty minutes texting. By the weekend we were on the phone every night. I loved listening to him as he described his day, it sounded so interesting, something to grasp onto that was him and him only. By the end of the month we were a pair of hornified lust buckets ready to fuck over the phone. We didn't make being apart more than a month when we set up plans to meet in Atlanta and spend the weekend in a Marriot suite.\n\nThat weekend was more intense than our first one in New Mexico. We only left the room to have dinner Saturday evening, other than that it was room service and coitus in every position we could imagine. When we parted Sunday I was glad the weekend was over, my body ached and I'm only 39, he sighed when I squeezed him goodbye.\n\n\"Oof babe, be careful. You wear me out girl, and I love it.\"\n\nOver the next few months we reached a comfortable stage where we would call or text every third or fourth day and at least once on the weekend. If he was in the states we still got together once a month, with my sister always searching for airfare deals it worked out great. Considering we both had high paying jobs money was never an issue. Thus was our life from that point forward, I spent a week with him in Mexico and again in Hawaii. If he was going to be abroad for more than a four months he would always fly home for a week in the middle.\n\nFor my 41<sup>st</sup> birthday we took a trip to Europe, he wanted to see distant family in Belgium that he'd never met. We were staying at the Hilton in Amsterdam our last night so we could catch our flight home the next day. To my surprise he told me to get dolled up, we were going to dinner. The restaurant was only a few blocks from the Hilton so we decided to walk, after the meal as we were headed back he pulled me into a little sidewalk caf\u00e9 for coffee and some local pastry everyone ranted about. And they were correct, it was delicious. Sitting in the evening breeze he took my hand, looked at me with those dazzling blue eyes and said.\n\n\"I have a surprise for you.\"\n\nMy heart was beating a mile a minute, \"What, what's the surprise?\"\n\nHe looked past me a second and then focused his gaze on me, \"I'm going to quit building towers in three months. I'll be a few months shy of fifty like I wanted, but it's more than I want any more Reba. It's too hard on my body, and, I don't like being away from you.\"\n\nMy mind was in overload.\n\n\"Do you mean we will be together all the time? Can we do that? I mean, I have my job and we've never been together long term. How do we know it will work?\"\n\nHe smiled, those damned blue eyes searching deep into my sole one more time.\n\n\"Here's what I know Reba. We're good together, I don't want to be with anyone but you. Have I given you a reason to think I might not love you as much if we're together as I do when we're a thousand miles apart?\" I shook my head. \"Then why would you think that now? I don't need to be some alpha male bullshit, I know who I am, what I've accomplished and other than you, I have no one to impress.\"\n\nMy mind was spinning, \"Where will you live? Will you come and be with me? Are we gonna get married? Oh Bob, I have so many questions.\"\n\nHe didn't say anything for a minute or two, then stood, dropped a hundred on the table, signaled to the waiter and took my hand. As we walked I pulled a little to stop him.\n\n\"Bob, you left a hundred dollars, the bill only came to seventeen.\"\n\nSlipping his arm around my waist he kissed me. \"It's okay beautiful, it's okay. As for the rest, yes, I would like to live with you. I have an old family estate in Northern Wisconsin I haven't seen in over three years, it's rented to a distant cousin. In time I would like to completely remodel the place and someday retire there. It sits on thirty six acres along a 1000 acre lake. I have over three hundred feet of shoreline. We could go there and visit some time, you might like it.\"\n\nI stopped and made sure he was looking into my eyes. \"Bob, I'll go with you anywhere except hell. I've never known love like you show me, I'm your girl and you're my guy. We're in this together, how soon do we leave?\"\n\nHe laughed, \"Oh honey, we aren't leaving any time soon. I want at least six months to a year with you, I can cook, I love puttering and fixing around the house. If you'll show me how I'll even do laundry, I know how to do mine, but I think ladies do theirs different. I want to know your ways, everything about you, I want to hear about how your day has gone, what the week ahead looks like. I want to be the one you show up with at your work related parties and other gatherings. Baby, if we do this you're stuck with me.\"\n\n\"You said six months to a year. What does that mean?\"\n\n\"It means I'm not going anywhere. Maybe after a year I'll take a trip to the lake house, better yet, you can come with me. If it's somewhere you absolutely hate we'll stay in Alabama where you're comfortable. I don't need to be there, I need to be with you.\"\n\nAnd that is exactly what we did. When Bob retired from building towers he moved in with me, my home is a four bedroom ranch on an acre lot. There was plenty to do with yard work and all the little repairs a woman ignores until she's forced to hire someone. Most days I would walk through the garage entry door into the kitchen and be greeted by the smell of something delicious. I let him do laundry other than my dainties, they were his to take off my body and ravage me with his oversized cock, but there was no way I was going to let him wash them. He'd been with me just shy of six months when I had an overwhelming need to ask something.\n\n\"Bob, don't you ever feel emasculated by doing all these domestic things?\"\n\nHe scoffed, \"Why would I feel emasculated? Nobody cut my balls off. These are all things that need to be done and I don't mind doing them. I still work out every other day to maintain muscle mass and strength, we live together, why shouldn't I kick in? You work ten or twelve hours a day, I do yard work and keep the house ship shape, seems to me it's an even trade. By the way, if any of those pussy doctors you're around very day want to start making noises that I'm some sort of sissy, send them my way. I'll break their fuckin neck, nobody, and I mean nobody, is gonna mess with my woman.\"\n\nMy heart swooned, \"Thanks honey, I just needed to know. And there have been a few of the younger doctors making foolish remarks, I think we should go to happy hour together this Friday, they'll all be there.\"\n\nHe beamed, \"Oh, I have a job interview next week. A local fabrication shop wants to hire me as a consultant on large welding jobs. Probably wouldn't be more than eight or ten days a month, but it's something to help me not feel \"emasculated\" he said with finger quotes. Emasculated, what a pile of shit. I think we need to play doctor more often if that's what you're gonna think.\"\n\n\"My gosh Bob, you have me walking funny at least twice a week as it is. I'm not sure I can take that firehose more than four times a week. Congrats on the interview though.\"\n\nFriday night at happy hour was what I will describe as interesting. I was at the local hospital watering hole before Bob arrived. I didn't normally attend these functions which seemed to have people focusing on me inordinately, especially two of the younger doctors. One was black, the other East Indian and full of themselves. It appeared as though their mission for the evening was to get next to me. I'd been there about fifteen minutes, I'd been fending off their crude remarks and failing attempts at flirting when in walked my loving hunk of man.\n\nHe had never been to any function prior, walking toward me he soon became the focus of everyone's attention. When he reached me he pushed one of the doctors aside, pulled me into his arms and kissed me deep. Pulling back he smiled.\n\n\"Hello beautiful. You boys can run along now, I hear your mom calling.\"\n\nThe east Indian guy foolishly made some stupid remark about an old man, Bob simply looked at him and stated. \"You sure you wanna go to the hospital tonight, as a patient?\"\n\nOver the next hour I introduced my lover and boyfriend to those that mattered. It was also an opportunity to tell any other leches to maintain their distance in the future. Bob got the job, it got him out of the house and while between his life savings and mine we didn't need money, it was something we squirreled away for, well whatever. In June we both received an unexpected surprise. Bob's cousin would be moving out as of July first and the conglomerate that bought our local hospital was going to eliminate my audiology department. On my last day at the hospital Bob and I sat on the couch after supper, I looked up and spoke.\n\nI think we need to make a trip to Wisconsin, I've never been there and I want to see the cabin.\"\n\nHe pushed me back with a smile, \"Reba, it's no cabin. It's a home with three bedrooms, two and a half baths, an attached three car garage, two outbuildings and one hundred feet of sandy beach. It was built in the late seventies and needs to be upgraded, but it's no cabin.\"\n\nI slugged his chest and grinned, \"Since you put it like that. When are we going?\"\n\n\"I need to let Tim and his family move out over the next two weeks. We'll head that way on July first. There'll be a big parade and craft fair in town for the fourth, I think you'll enjoy that.\"\n\nLong story short we had a blast over the fourth of July, then spent the summer remodeling and upgrading the house. New kitchen, upgraded bathroom fixtures, a walk in shower for the master bedroom, replacing the sliding patio doors with French doors. We upgraded the electrical, changed out all the doors and windows, replaced the heating/cooling system, the well pump and had the septic pumped even though it was functioning as it should. I wasn't sure why we needed air, until late-August when the heat combined with high humidity made it feel like you were breathing through a blanket.\n\nWe sold my home and made the decision I wasn't going to look for work in WI. We were set financially and planned to grow old where we were. As I write this the storm has made its across the lake, it's like a wall of snow. Bob's awake now, we're settled in the great room watching the snow blow horizontally as the wind picks up. The house is warm and draft free, there will be a foot of more by morning. Just one more reason to stay in bed a bit longer and start the day with me on my back with Bob's dick buried balls deep within. Now that we're in the later years of life sex isn't as often as days gone by, but it's still as fulfilling as it ever was. Though we never had children, we seem to be enough for each other.\n\nI marvel that at the age of 67 Bob can still get an erection watching me dry off after a shower and put panties on. When that happens, they usually don't stay on very long, but then that's part of the reason I make sure he's watching. He still dines at the Y every time we make love. Unless it's a knock down drag out fuck fest, then he skips that, wastes no time in burying his cock deep, typically from behind. Skirt or housedress over my back, panties around one ankle, me gripping the back of the sofa and him slamming hard enough to make my tits swing.\n\nHe's spent the better part of twenty years killing me softly with his love, I've not regretted a single day."
    ],
    "authorname": "R410a",
    "tags": [
        "lover",
        "tit sucking",
        "oral sex",
        "blowjob",
        "pussy eating"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/killing-me-softly-7"
}