{
    "title": "Home for Horny Monsters Ch. 55",
    "pages": [
        "Hi all! Here it is, the next chapter of HFHM!\n\nNew reader? Start at the beginning, I've packed in quite a bit of plot and you will be super confused. But maybe that's your kink, so by all means, stroke away.\n\nReturning reader? Wonderful, now that you're here, the party can continue! Where last we left off, Mike had accidentally discovered a pair of faces inside of the Underworld that many of you weren't expecting and I left you on a cliffhanger. Well, the wait is over, let's get this show on the road.\n\nOnce again, thanks for all your support. Don't forget to follow me, rate my stories, and click on my bio to see when I plan to post the next chapter. I'm doing my best to get these out, and I love hearing about how you enjoy them.\n\nAnyway, enough from me, let's all get on the bus and head to...\n\nPurgatory\n\nThe gray skies of the Underworld did little to improve Mike's mood, and the occasional wail from the house made his stomach sour. Yet he sat quietly as Yuki told Amymone about how she had escaped from her tower.\n\n\"...and after we sent the Society packing, Mike forgave me for trying to kill him.\" Her tale done, Yuki put her hands in her lap. \"And so I live in the house again. It's really weird that nobody remembers me, but I'm hoping to try and rebuild those relationships. It's frustrating, and more than a little lonely, but I'll get there.\"\n\n\"Wow.\" Amymone was sitting on the ground with her legs pulled beneath her and her chin on her knees. \"That's incredible, I'm so happy that you survived.\"\n\n\"So what about you?\" Yuki waved her hand around to indicate the Underworld. \"I'm more than a little surprised to see you here. I figured you were dead.\"\n\nAmymone's laugh sounded almost like a bark. \"Okay, well, after you disappeared, things started getting dark around the house. For the most part, Emily was the same, only she claimed that you had gone away on an important mission. But then I heard rumors from the others about your disappearance and started to wonder if she had left you behind in the world on the other side of my tree. Granted, we couldn't help but believe her stories, but eventually some of the stuff she did spoke volumes more than the lies she fed us.\"\n\n\"Like what?\" Mike had been quiet, allowing the two of them to catch up, but now he was curious.\n\n\"She became obsessed with unlocking the magic in the house. That was something that hadn't been an issue before. She was also becoming borderline abusive with a couple of the girls in the house, and poor Tink was constantly getting yelled at for little things. It was textbook personality disorder type stuff, and I saw the writing on the wall long before the others. A dryad can never leave her tree, so unlike Naia, I was never able to go inside the house. Well, sometimes Emily would do something on a Monday that would have everybody upset, but then by Wednesday or Thursday, they would have all forgotten about it. She found out how to tamper with memories somehow, and I suspect she was using the geas to do so.\"\n\nHe shook his head and sighed. \"I have my theories, but they don't change what happened.\"\n\n\"Yeah, well, for the longest time, she claimed that she was trying to track you down.\" She pointed to Yuki. \"Told everyone that you had been attacked or whatever. Became obsessed with some old key she found, would disappear into the Library for days. She even started perusing the books down in the Vault, and we all know that's a huge no-no, but we thought it was to help you, so nobody said anything.\"\n\n\"There are books in the Vault?\" Mike tried to remember if he had seen some on his last trip there, but couldn't picture any.\n\n\"There are supposed to be. Dangerous ones. Anyway, she started asking me uncomfortable questions about my tree. She could use a tree to walk to another one, and had done some trick to open a portal in my tree that went somewhere new.\"\n\nHe nodded. \"I'm familiar with this.\"\n\n\"Well, one day, a pair of centaurs came through from the other side. They wanted access to the greenhouse, and Emily was so freaked out by the fact that they had just come on over that she didn't ever notice that only one of them went home.\"\n\nZel. Mike thought about how the centaur had originally come to the house. It had been through Amymone's tree.\n\n\"And so she chopped it down?\"\n\n\"Oh, and she was insidious about it, too. Blocked off part of the spring so Naia was stuck in the house and told everyone it was movie night. Sent Abella into the greenhouse to check on Sweet Pea because she'd been acting funny recently. Emily popped right on out and started chopping away. I couldn't even stop her. She used some sort of spell to trap me in place. Told me all about how she was going to have Tink make a lovely wardrobe out my tree while clearly out of her fucking mind.\"\n\n\"I'm really sorry.\" Mike hung his head and took a deep breath. \"That must have been awful.\"\n\n\"Watching yourself be murdered? Yeah, it was.\" She shook her head, her long hair shifting along oaken shoulders. \"Anyway, you don't read plenty of mystery novels without knowing what's about to go down. Long before she killed me, I actually pulled the heart wood out of my tree and hid it. Think of it like the magical core. Over time, my tree would die without it, but Emily was out there with her axe long before my leaves had even wilted.\"\n\n\"Is that why you're here?\" Yuki asked.\n\n\"Yep. My heart wood can go dormant for almost a decade before it needs to be properly planted. I figured Emily was nearing the end of her lifespan and had my fingers crossed that a new Caretaker would arrive and find it. In the meantime, I'm stuck here, waiting to be born anew.\"\n\n\"Where did you hide your heart wood?\" Mike asked.\n\nAmymone smirked. \"It's hard to hide something when you can't go away from your tree, and I was afraid that Emily would find out and demand to know where it was. So I gave it to the one person who would never say a word.\"\n\nMike and Yuki looked at each other, then back at her.\n\n\"Who?\" Mike asked.\n\nAmymone's grin faltered when she realized that they weren't going to guess. \"Why, Sweet Pea, of course! The mandragora can't talk, and since I can talk to plants, I had her take my heart wood into the greenhouse and hide it with instructions to give it to the new Caretaker.\"\n\n\"Oh.\" Mike frowned. \"Um, Sweet Pea is...gone. She did this thing where she ate a witch, turned her into a plant, and then had me impregnate her or something prior to wandering off to parts unknown. As far as I know, Sweet Pea is...gone.\"\n\nAmymone's face darkened, and thin lines formed in the bark of her skin. \"Oh, please tell me you aren't making this up.\"\n\n\"I'm not. I wish I was. But if you have any idea where Sweet Pea hid it, then I could have the centaurs keep their eyes out for it.\"\n\n\"It's true, an entire herd of them live in the greenhouse now!\" Yuki took Amymone's hand in her own. \"Don't give up hope!\"\n\n\"Oh, I gave up hope a long time ago.\" The dryad groaned and slumped back on the dry ground beneath her, limbs outstretched. \"Never thought Sweet Pea would need to be pollinated so soon. Damn.\"\n\n\"I'm really sorry.\" Mike didn't know what else to say. \"What does your heart wood look like?\"\n\n\"It's literally a piece of wood from the middle of my tree.\" She stared at the sky, her eyes unblinking. \"When I gave it to Sweet Pea, I made it look just like the wood from the jungle, in case it ever got spotted. I very much regret my decision now. I should have just buried it on the other side of the yard.\"\n\nMike said nothing while Yuki tried to comfort her friend. His eyes kept traveling up to the house itself, and he would sometimes see Emily's face vanish from sight.\n\n\"What is this place?\" he asked. \"I mean, why is there a copy of the house here?\"\n\n\"Hmm?\" Amymone looked up at him. \"Oh, right. You're looking at the house when it's asleep. When the Caretaker dies, the home slumbers and goes somewhere else. Rather than leave a giant hole in the ground, this house replaces it. That way, if someone breaks in or attempts to do harm, the real home is protected and this place acts as a decoy.\"\n\n\"How do you know all this? Don't you sleep when the home does?\"\n\n\"Nope.\" She grinned. \"Naia and I take care of the house while it sleeps. She is tied to the fountain, and me to my...well, anyway, when the house falls asleep, the occupants are carried with it, and Naia stays behind to wait for the new Caretaker. Once she bonds with him or her, this place comes here once more. I actually got stuck here when I died, and when the home slept, I got to haunt the real world for a little bit. Oh, that reminds me!\" She turned to Yuki. \"Jenny escaped the Vault before the house fell asleep, so she's probably roaming around and causing trouble. Might want to be a priority when you get back.\"\n\n\"Already taken care of,\" Mike told her. \"We're on good terms now.\"\n\n\"Seriously?\" Amymone looked at him in awe. \"This guy is the real deal, isn't he?\"\n\n\"Most days,\" Yuki said with a smile.\n\n\"Jenny did try to kill me, first,\" Mike added. \"It's kind of a theme.\"\n\nEmily's wailing pierced the air, and everyone winced.\n\n\"So I get why you're here,\" Mike said. \"But why is she up there?\"\n\n\"No idea. That cunt showed up a couple years back and never comes out of her room.\" Amymone scowled. \"Some days, she'll just stare at me for hours. I have no idea what that's about, and she seems to be putting on a special show for you two, because she's all about her Cecilia impression today.\"\n\nCecilia. Mike realized that plenty of time had passed, and it was about time they got going. \"So, do you have any ideas how we can get back?\" he asked. \"That Cerberus wasn't very friendly at all.\"\n\n\"I've had no problem with it, but I'm supposed to be here. You, however, are not. Hell's guardian is actually one of several three-headed dogs in charge of making sure souls don't just traverse the spiritual plane. It's not just about Hell, but anywhere connected to here. I suspect that you are on the Cerberus shit-list as long as you are wandering around out there. So no, I don't know how you can avoid it.\" The dryad chewed her lip for a moment, then looked up at the window. \"However...she might.\"\n\nMike looked back up at the bedroom window, then back at Yuki. \"Can I tell you how much I hate this?\"\n\n\"You can tell me about it, but...\" Yuki summoned a spear of ice. \"I'm about to go up there and find out what happens if you try to kill something that is already dead.\"\n\nHe nodded, then looked back at the window. The idea of talking to Emily gave him a serious case of the creeps, because he had no idea what she might be capable of. So far, other than wailing in agony, she had done nothing else, but he had learned long ago that he should never assume weakness in anyone or thing he encountered.\n\n\"Let's go together.\" He walked toward the back door and opened it. Yuki walked inside, leaving a frosty trail of pawprints on the floor. She held her spear of ice in one hand and a handful of tarot cards in the other.\n\n\"Hold up,\" he said when they were at the stairs. \"She seems content upstairs. I want to do a quick check down here, just to make sure there isn't anything lying in wait that can trap us.\"\n\nShe nodded, and gave the stairs a dirty look before they did a sweep of the bottom floor.\n\nThe house was different. There were rooms that didn't exist in his version of the home, and he wasn't at all surprised that he only remembered them now that he was here in the Underworld. Memories of his first day in the home with Beth giving him a tour of the house came back to him, and he couldn't help but smile. He had had no idea what he had gotten into, and it was weird to think that he had actually been walking through this place, only to have the real house swap out on him.\n\nChecking the basement was the most nerve wracking. It was dark, and he was convinced something would leap out at them. The only thing that made him jump was the occasional moan that came from above, and when they finally got around to the stairs, he had Yuki take the lead.\n\nOnce on the second floor, they checked out the other rooms first. There were extra rooms here, too, and he even recognized some of the creepy dolls that had been there before. He stood for a moment in Beth's room, then tried to open the passageway to the Labyrinth in her closet.\n\nThe process failed. He looked over at Yuki and smiled. \"This place is as ordinary as the day I moved in. It's kind of weird, actually experiencing it again as if it's the first time. This room is the same, but look out here.\" He took her in the hall and showed her the other rooms. \"This one is yours, but there's an extra one next to it. And I guess this is where our mystery door is now, right?\" He opened the door to reveal an ordinary bedroom. \"I remember them now. I haven't thought about any of these rooms since that very first night. So now I wonder if this means those rooms exist and are locked away, or if this is just an old house that my home is modeled after.\"\n\n\"Mm-hmm.\" She wasn't paying any attention to him. Her eyes and ears were focused on the master bedroom. From behind the door, they could hear the sound of a woman crying.\n\nMike shivered. \"Okay, well...guess it's time to rip the band-aid off.\" He walked down the hall and was about to turn the knob when Yuki shoved him aside.\n\n\"Me, first.\" Her green eyes were now glowing with energy, as she shoved the door open and stepped inside.\n\nThe first thing Mike noticed was how cold it was. He thought it may have been Yuki's magic, but this was a different kind of cold that felt like the energy was being drained from him. Once they were both inside, there was no sign of Emily.\n\n\"Where are you?\" Yuki growled, and the hair along her arms and neck stood up. \"I know you're in here, Emily. You may as well come out where we can see you.\"\n\nThe curtains fluttered about as if caught in a breeze, and Mike noticed that there was a nasty stain on the wooden floor approximately where Emily had died in the real world. It occurred to him that they had never gotten a chance to clean up the stain and replace the wood beneath it.\n\nIt also occurred to him that no light seemed to reflect off of the stain. It was just a pool of blackness that sucked the light out of the room.\n\nYuki sniffed the air and then growled, revealing a pair of nasty fangs.\n\n\"What is it?\" Mike asked, and then noticed the shadow that was forming along the opposite wall. On his shoulder, he heard Daisy buzzing angrily, and the little fairy popped out and hovered before him.\n\nThe shadow stretched and distorted, then Emily stepped through the wall. It was as if she was being transmitted through an old tube television, only the reception was shit, because her image had a bad case of rolling static. After flickering for a few seconds, she settled into place, and her feet hit the floor. Most of the color had been leached from her body with but a few highlights of color scattered along her ethereal form.\n\nHowever, the thing he really couldn't take his eyes off of was the giant hole where her right eye should have been. Cylindrical in shape, it went all the way through and allowed him to see the wall behind her. There was no gore\u2014her insides were just more static that flickered about as if she was full of flies.\n\n\"Um\u2014\" he began, but she opened her mouth and let out a shriek that modulated through several frequencies before she exploded.\n\nMike grabbed Daisy, and Yuki grabbed Mike's other hand and pulled him out of the room, but when they made it into the hall, they were now standing in the office.\n\nEmily sat in an ornate wooden chair and held a book in one hand and a pear in the other. She took a bite of the pear and used her pinky to sweep the juice off of her chin back into her mouth.\n\n\"What is this?\" Mike asked. His voice sounded odd, like it was coming from somewhere else. He let go of Daisy, and she resumed her perch on his collar.\n\n\"A memory.\" Yuki held onto his hand and pulled him closer to Emily. She swung her icicle like a club, and it passed harmlessly through Emily's head, but her body flickered like a candle's flame for just a moment.\n\n\"But why?\"\n\nYuki looked back at him, her lips curled into a sneer. \"Gee, I don't know. Let me check my So You've Encountered Your Dead Ex in Purgatory, Now What? manual and I'll get back to you.\"\n\nMike debated sharing his idea for a chapter title, but thought better of it. \"If it makes you feel any better, I'm not detecting any danger.\"\n\nHer ears twitched, and she swung the icicle again. Nothing changed. \"It doesn't,\" she added.\n\nHe shrugged and watched. A couple of minutes passed, and just before he was about to speak again, a large, black book fell onto the desk. It looked like the book was bound in leather, and there was a closed eye on the front.\n\nMike swore he saw the eye open for a moment.\n\nEmily jumped out of her seat, then reached down to pick it up. She surveyed the room, and then there was a crash out in the living room.\n\n\"Emily?\" It was Yuki's voice, but it was coming from inside the house. \"Jenny got out of the Vault again!\n\n\"Shit.\" Emily ran out of the room, leaving the book behind on the desk.\n\nMike was about to follow, but the room filled with smoke, then cleared.\n\nThey were now outside at the edge of the fountain, and Emily was busy looking at the book. Naia was singing to a small flock of birds that were bathing in her fountain, and Amymone was across from Emily on the ground, her nose buried in a book of her own.\n\nA spectral hand appeared on Emily's shoulder. It was made of shadows, and when it squeezed, she sat up straight and looked around.\n\n\"Everything okay?\" Amymone didn't even look up from her book.\n\n\"Yeah, just a cold chill up my spine is all.\" She closed the book and looked into the sky. Her blonde curls draped over her back and shoulders and caught the sun's light, creating the illusion that she was surrounded in a golden aura. \"Say, Amy, I was wondering something.\"\n\n\"Wait.\" Amymone held up one finger while she finished the page she was on. At the end of her fingertip, a large maple leaf uncurled itself, and she tucked it into the book to mark her place. \"Okay, what's up?\"\n\n\"You ever wonder where a portal from your tree would go?\" Emily looked over at the large oak tree that was about twenty feet from the edge of the fountain. \"Only special trees can be used as portals, and once they are linked, it's permanent. But your tree can be any type of tree, right? So, you could probably become a portal tree.\"\n\n\"And?\"\n\n\"It's probably nothing, but...now I wonder. You and your tree are the same entity, in a way, which means your tree is sentient. It was just a weird idea I had, that maybe your tree could be used to open a portal to somewhere else, like the greenhouse. A place that's been folded away from the world.\"\n\nAmymone bit her lip in contemplation, her dark eyes looking up as if she was trying to access files buried deep inside of her brain. \"Huh. You know, I'm not sure. I mean, based on how the tree portals work, the logic makes sense, but you would need to have a pretty clear image of where you were going.\"\n\n\"I see.\" Emily opened the journal once more to look at a picture of a tower that had been drawn inside of it with great detail. \"Interesting.\"\n\nYuki's hand was now crushing Mike's. Rather than chastise her, he placed his free hand on her wrist and gave it a squeeze.\n\n\"Just memories,\" he reminded her.\n\n\"But why?\" Her voice had an edge to it, so he pulled his hand free of hers and wrapped his arm around her. She was cold to the touch, but he held her anyway.\n\n\"She's a restless spirit. She's trying to show us something.\" He really hoped it was important, and that they weren't just headed to a sticky end. The smoke rolled through again, and he took a deep breath of anticipation. Whereas the memories might be painful for Yuki, he was already getting some answers to questions he didn't know that he had.",
        "Emily appeared before them, standing in a room he recognized. It was the hidden room in the tower, and a dark figure hovered in the middle of the room. It was the shadow man, and he was holding his hand out to her.\n\n\"She will die, you know? They all will die, but the fox means something more to you, doesn't she?\" The shadow's form was frayed along the edges, as if a single errant thread might cause him to unravel. \"I'm offering you experience and knowledge for such a small price.\"\n\n\"I'm not sure.\" Emily's arms were crossed. \"It's a piece of my soul. What will happen to it?\"\n\n\"It will be very safe with me, I assure you. It won't even hurt. It'll be a part of you that you don't even realize is missing.\" A grin spread across the shadow, which created an opening in his head like a comical stick figure. \"As of now, you are destined to fade from this world, never having advanced to the next stage of the game. You are one of the last players, which means you have a chance to win it.\"\n\n\"I want to know more about this game. I keep having these weird dreams about it, but they never make any sense.\"\n\nThe shadow nodded. \"Every Caretaker's journey is different, and some of them never once heed the call. And should you win, then you could be looking at the ultimate prize: immortality. Centuries to spend with your beloved, maybe even the power necessary to extend her lifespan as well.\"\n\n\"Immortality comes at a price. That's one of the first rules of magic.\" Emily had stiffened up, withdrawing from the shadow.\n\n\"That is correct. However, this game pre-dates the rules of magic. It creates a loophole, as you would call it.\"\n\nEmily bit her lip, then looked at the stairs behind her. Mike imagined that she was picturing Yuki, asleep on their bed and blissfully unaware of what was about to happen next.\n\n\"I can feel your love for her. It is a warmth that I crave for myself, but will never know unless you pay the price.\" The shadow's tone had shifted, and he was now pleading. \"One small piece is all it will take, and you can have forever with her if you want.\"\n\n\"I... I...\" While Emily debated her response, Mike felt Yuki tighten her grip on him. He squeezed her back, causing a sob to break free.\n\n\"I accept.\" Emily held out her hand, and the shadow took it, and a dark tone played that caused ripples to spread across the scene, changing it so that they were now in the Library. Emily was by herself, and was frantically pulling books down from the shelves.\n\n\"No, I will not. I will not!\" She was shouting at nobody that could be seen, and then her face twisted up and her eyes turned black.\n\n\"But if you don't, you will never be able to save her or the others.\" She was speaking again, but her voice was different now, deeper and more threatening. \"She would want you to have it, to use its magic to complete your spell.\"\n\n\"No!\" Emily shrieked and grabbed at her face, her hands curled up. It looked like she was about to claw her own eyes out. \"I can't do that to her! I've already left her in that tower for so many years, I...\"\n\nHer face twisted, and her eyes were dark once again. \"What is a few years compared to eternity? All things can be forgiven in time.\"\n\n\"I won't, I\u2014\"\n\n\"Emily?\" It was Sofia. She came around the corner of the stacks. \"Were you talking to someone?\"\n\n\"Just...just myself.\" She turned around, and Mike saw the black fade from her eyes. \"Did you find anything about the rat king?\"\n\nSofia held out a book. \"Yeah, so strange thing really, the rat king is...\"\n\nThis memory faded as well, and now Emily stood in the hallway of the second floor. Around her, the rats were cowering in fear as she twitched and spasmed, and one of her hands opened up, allowing a shimmering emerald to fall out of it.\n\n\"Why...what was I...\" When she looked up, Mike saw that only one of her eyes was black now, and when she spoke next, only the corners of her mouth moved.\n\n\"You just did big magic, didn't you?\" This time, the bad voice was even stronger. \"I sensed that you did something, hid something perhaps. What have you done to us?\"\n\n\"Get...get out of my head!\" She slammed her forehead into the wall, causing plaster to fall and the rats to flee, though a braver one scooped up the emerald on its way past. \"Get out of my head!\"\n\nHer scream shattered the room, and now they were back in the master bedroom. Emily hovered before them, and she was looking now at Yuki.\n\nI'm sorry. Emily spoke using sign language, and the fact that Mike understood it perfectly was an equal surprise. He felt Daisy shift by his ear, and he remembered the spark that had passed between them during the incident in the tub.\n\nInteresting, he thought.\n\nYuki let out a choked cry and ran from the room, and Mike was about to follow when he heard a whisper in his ear.\n\n\"Wait.\" It was Emily, and he turned around to see that she was floating only a foot away from him. For a moment, her form was stable, as if her connection was finally strong enough to come through. I need to tell you something, she signed.\n\n\"Um...\" He wasn't sure if he should try to call Yuki back, but he still didn't have that sick feeling in his stomach that came when he was in danger. \"Make it quick, I guess. But if you can pick just one method of talking, that would freak me out less.\"\n\nThis is more efficient. Easier to concentrate and the madness will return. Don't trust the shadow.\n\n\"Oh, don't worry. That bastard is plenty pissed at me because I refuse to buy what he is selling.\"\n\nEmily let out a silent sigh, then signed some more.\n\nI needed her to see.\n\n\"Yeah, well, we saw plenty. Why are you still here, Emily? Why haven't you moved on?\"\n\nCan't move on without the rest of my soul. She pointed to the gap in her head, and he frowned, doing his best not to shudder. The shadow still has it, locked in his castle.\n\nShe hung her head now, but her hands kept moving. I thought I was trying to get her back. When I forgot her, all I could focus on was getting my soul back, but I was about to die. I tried to extend my lifespan, but only made things worse. It turned out he was in control all along.\n\nHe had so many questions for her, but he already knew the one he wanted to ask the most. \"What is the great game? I heard him mention it.\"\n\nA game created by the Architect. When he built the homes, he hid the same prize inside of each of them, and it was a game that has been played for centuries. Nobody knows the rules, and nobody has ever won. Confusion is supposed to be part of the puzzle.\n\n\"Why does the shadow want your soul?\"\n\nHe needs it to survive. He's like you and I, a player in the game. When he died, he was able to hang on somehow using soul magic, and he needed my soul to subsist, to keep playing the game. It gave him access to the house via my body, and toward the end, he was controlling me all day.\n\nMike opened his mouth to ask something else, but Emily flickered. The temperature in the room was warming, and he noticed how tired she looked. Tendrils of darkness were crawling in through the slats, and she turned toward them in pained resignation.\n\nThe madness is coming, she said. One more thing to show you.\n\n\"I...\"\n\nThe room swirled with black clouds, and when they fell apart, he was standing in his room once more. Emily stood in front of her mirror, and her eyes were completely black. In the mirror, Emily's eyes were blue, and her face was pleading.\n\n\"The naga is up to something. She should have been finished with the key months ago.\" Shadow Emily clenched a fist, causing the knuckles to pop.\n\nEmily shook her head, then pleaded with her hands.\n\n\"I suspect that you have done something else. This body feels like you wore it recently. If it wasn't for your mortal need for sleep, I could just wear you around all day.\" Shadow Emily paced before the mirror. \"This form will not live much longer, and I need results. The others have been long suspicious, and I suspect my memory spells are wearing thin on them.\"\n\nEmily silently stomped her feet and shook her head again, her curls falling along her shoulders.\n\nShadow Emily grinned, then moved close to the mirror. \"If not for the unique abilities of your little cat burglar, I wouldn't have been able to formulate the magic necessary to alter memories. Such a unique talent wasted, but nobody even noticed when I altered the house last month. I can move from room to room, undetected, and because I am not the true Caretaker, all I have to do is make sure you don't see it happen is to stuff you away in the Black Place, and let the geas do the rest of the work for me.\"\n\nEmily was mad now, and she placed her hands against the glass, her fingertips turning white from the pressure.\n\n\"I wonder...\" Shadow Emily's face stretched into a grin. \"I wonder what would happen if I killed one of them? Do you think I could get away with it? Maybe the gargoyle? Or that nasty little goblin?\"\n\nEmily was now frantic, and she was clawing at the glass.\n\n\"Oh, I know. I could use my magic and cave in part of the nymph's spring. She's been asking some rather uncomfortable questions recently, and it would be a shame if I forced you to watch.\"\n\nEmily was silently shouting 'No!' behind the glass.\n\n\"Then tell me what you did!\" Shadow Emily pressed her hands to the reflection, right on top of Emily's. \"Tell me what you did or I kill the nymph!\n\nEmily's face scrunched up with resolve, and the glass between their hands glowed bright yellow.\n\n\"Are you seriously trying to take your body back?\" Shadow Emily laughed, but Emily's face scrunched up in concentration. As Shadow Emily kept laughing, Emily's hands slid through the glass and merged with the shadow's arms, as if they were being worn like gloves. The laughter stopped as Emily used those hands to strangle her own body.\n\nThe gasps became whispers, and dark veins sprouted along Shadow Emily's face. Inky black tears fell from her eyes as Emily kept squeezing, and after several minutes, her body went limp.\n\nEmily gave her a push, and her body slumped to the floor. Shadows fled, and the mirror image stepped outside of the glass, looking down at her own corpse with satisfaction.\n\nOutside the room, the air filled with the song of a banshee. Emily took a step away from her own corpse and was almost out of the room when she grabbed at her temples in pain. Darkness streamed into the room like water and forming into claws that grabbed at her face and pulled. The hands whipped about, and then turned toward Mike.\n\n\"Shit!\" Mike stumbled backward and fell into the wall as the vision burst.\n\nEmily shook on the bed as the darkness enveloped her, crawling into the hole in her head. The room was now full of whispers that he couldn't decipher, and she turned into static once more and, with a final shriek, burst.\n\nHe ran out of the room and down the stairs to where Yuki was waiting. Without saying a word, he dragged her outside and didn't stop until they were at the edge of the fountain. Gasping for air, he looked up to see Amymone looking at them.\n\n\"Told you she was a cunt.\"\n\nAs if to punctuate the dryad's point, Emily's shrill scream resonated over the courtyard, and Mike covered his ears in the hopes of drowning it out.\n\nAs the echoes faded, he shook his head. Like everything else in his life, this was far more complicated than it had at first seemed.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nBeth sat on the front porch, going over the documents one more time. In front of her, Sulyvahn was meticulously culling some dead roses from the bushes, whistling quietly to himself.\n\nMike's Will had been fairly easy to write, but she couldn't help but worry that she had missed something. All it would take is a missing signature, or even an unfortunate typo, and a lawyer with the financial backing of the Society would be all over it.\n\nIt also hadn't helped that Marco had been weird about it. While she had been able to draft the documents, it created a weird legal issue to write a Will for her employer and leave half of everything to herself. She had called her former coworker up and had him come over to properly notarize everything and act as a third party to prevent any accusations of legal malfeasance.\n\nShe had vastly underestimated Marco's suspicion of Mike. Before Mike's departure, they had done the signing in the front yard, surrounded by centaurs that Marco couldn't see. What should have been a relatively straight forward meeting had become a debacle.\n\n\"You all right, luv?\" Sulyvahn had paused to look at her, scissors in one hand and a dying rose in the other.\n\n\"Yeah, just thinking.\" She had wanted Marco's help in going over her own documents as a second set of eyes. Instead, he acted hostile toward Mike the whole time, and Beth couldn't figure out why Mike hadn't noticed\u2014until he told her that Death had been doing a running commentary of the proceedings over his shoulder.\n\nMarco, mistaking Mike's attitude as condescension, had become even more agitated when Dana arrived looking (rightfully) half-dead. In the end, Beth had had to tell Marco to shut the fuck up and notarize their documents or she would tell his boss about his unprofessional behavior. Seething, Marco had rushed them through the process, then stormed off once they were done.\n\n\"Ye be looking more lost than anything, darlin'.\" Sulyvahn found a suitable rose bud and tucked it behind her ear, brushing a strand of hair out of her face. \"Maybe we could be going fer a\u2014\"\n\nThe front door slammed and Lily came outside.\n\n\"Oh, there you are! I've been looking for you for hours now.\" She sat next to Beth and crossed her legs, then tossed her hair over one shoulder. \"I had a question about who gets me when daddy dies.\"\n\nSulyvahn laughed. \"It ain't been hours, ye scandalous harlot. I saw ye moping about on the roof just a wee bit ago.\"\n\nLily stared daggers at Sulyvahn. \"Are you still here? Shouldn't you be hanging around a cemetery giving handjobs to lost souls or something?\"\n\n\"Whoa, hey.\" Beth set her paperwork down. \"That's no way to talk to each other.\"\n\n\"Oh, I dinna mind. The temptress has a harsh tongue, but it bothers me none at all.\" Sulyvahn picked another rose and held it out to Lily. \"It's just banter, nothing personal, don't ye know.\"\n\nLily eyed the rose suspiciously, then took it. She gave it a sniff, then tucked it into her blouse so that the bud rested just above her cleavage.\n\n\"There, see?\" Sulyvahn smiled. \"Now I be having have something pretty to look at instead of that thing ye call a face.\"\n\n\"Suly!\" Beth looked at Lily, afraid of how she would react.\n\nThe succubus looked down at the rose, then back at the dullahan. She raised her hand to the rose as if she was going to crush it, then set her hand back down. After a few seconds, a smile crossed her face.\n\n\"Okay, I like this one. Yes, I was up on the roof earlier, but I wasn't moping. Mostly I was just enjoying the weather, but the real reason I came down was that Mike just went through the gate, so I thought I would come down and make conversation because...\" Her lips curled up, and she looked around, then pulled money out of her pocket and handed it to Beth.\n\n\"What's this?\" Beth asked.\n\n\"A retainer. For attorney-client privileges, so you don't go blabbing my secrets or something.\"\n\n\"You don't need that, you can just talk to me.\" Beth pushed the money back. \"Besides, I'm not that kind of lawyer.\"\n\nShe was about to open her mouth again, but Sulyvahn was grinning.\n\n\"Oh, I'm not worried about you,\" Lily said to him. \"If you do something I don't like, I'll rip your head off and shove it up your ass.\"\n\n\"And I'm believing that ye would, bless yer black little heart.\" He chuckled and took a step back. \"There be other roses that need tending, so I will be leaving you two to yer business. It's me self wishing ye be having a grand afternoon, ladies.\"\n\nOnce Sulyvahn had picked up his bucket and left, Lily turned her attention back to Beth. \"I'm worried about him.\"\n\nIt wasn't the directness of the statement that hit hardest. After all, Lily was rarely subtle about anything. Instead, it was that brief moment when Lily's eyes had shimmered with moisture, as if she was holding back tears. But as far as Beth knew, succubi didn't cry.\n\nAt least not on purpose, anyway.\n\n\"Is it because he went to the Underworld?\" Beth asked.\n\n\"Ugh, that, too. No, it's that stupid cunt of a queen. When he finds her, you know she's not going to just give him what he wants. Even Cecilia doesn't want him to come, that's how dangerous she is.\"\n\n\"Wait, Cecilia? How do you know what Cecilia wants?\"\n\n\"She's been bouncing around in his dreams. She can't see me, she only has eyes for him, but sometimes I hear what she's saying.\" Lily's head transformed into Cecilia's. \"Stay away, Mike, she's going to hurt you, don't come for me, I'll be fine.\"\n\nIt was spooky hearing Cecilia's voice after so long, and Beth shivered.\n\n\"Have you told Mike?\"\n\nLily laughed. \"Do you think he would listen?\"\n\n\"Good point.\" Beth looked out into the yard. \"So, what could we do to help? He won't let anyone go with him, at least not into the faerie realm.\"\n\n\"Well, about that ten dollars...\" Lily grinned. \"The faerie queen made a deal with the builder, or Architect, or whatever we're calling him. She couldn't kill Romeo without violating the deal, and I imagine that the deal itself has to be on paper somewhere, right?\"\n\n\"You want me to try and find it, don't you.\"\n\nLily nodded. \"If anyone can find a loophole in her own deal, it would be you. Maybe it's something that can help him, or at least keep him from being turned into a toad or something.\" She stood and offered a hand. \"Unless you'd rather go over that thing for a tenth time.\"\n\nBeth laughed dryly. \"So you have been watching me.\"\n\n\"Maybe.\" Lily motioned her hand at Beth. \"And I think I know a good person to start with. C'mon, let's go.\"\n\nLily led Beth into the house, but she stopped in the hallway.\n\n\"Hold up, let me get these put away.\" She held up the papers.\n\n\"I'll be out back.\" Lily walked toward the back door and Beth went into the office. Despite being used as research central, Mike had kept it pretty neat. She walked to the desk and opened up her designated drawer and filed the paperwork inside.\n\nShe was startled when she heard a loud thump, then looked up to see that a book had landed on the desk. Nobody else was in the room, and she picked it up.\n\n\"Death, did you do that?\" She wondered if the grim reaper was currently using the office. On more than one occasion, she had walked through him, but only knew this from the sudden chill in the air. \"I'm about to leave, I'm just dropping something off.\"\n\nShe set the book on the desk and was almost to the door when it hit the ground. Puzzled, she looked back and saw the pages flipping by themselves, eventually coming to a stop. Was Death trying to tell her something?\n\nCrouching down, she picked up the book and read the page.\n\n\"Samhain,\" she read aloud. \"A celebration of the dead.\" Curious, she turned the pages and scanned through the document. The gears of her brain turned and her mouth dropped open.\n\nWhile Mike had been so busy trying to figure out how to get to the Underworld, he hadn't considered what to do once he got there. Now, looking at the text before her, she felt a sense of triumph. At the start of Samhain, the veil between Earth and the other side would be at its thinnest, and the spirits of the dead would cross over, along with all manner of fae.\n\nCould he use this to find the fae realm? It would be like swimming up a river, but if the Underworld really was a central hub...",
        "Excited, she tucked the book under one arm and headed for the backyard. Once outside, she saw that Tink and some rats were busy uncoiling a large portion of wire, using a pair of large planters to help lay it out straight. Naia was in her fountain talking to Lily, and Abella was standing at the back of the yard, staring through the open gate.\n\n\"What the fuck were you doing?\" Lily curled her lip in disapproval, and Beth held up the book.\n\n\"I think I found something, but it can wait.\"\n\n\"I don't think it matters. Naia doesn't know anything about a contract.\" Lily lowered her voice dramatically when she spoke next. \"This surprised nobody.\"\n\n\"Be nice. Naia, are you sure you don't remember any sort of contract with the faerie queen? Maybe a golden scroll, like the one Mike has, or mention of sending a banshee to watch over the family.\"\n\nNaia shook her head. \"I'm really sorry, but I don't. Maybe Sofia would know, or someone else, but important documents and water don't tend to mix well.\"\n\n\"Annoying, but fair.\" Lily grabbed Beth's hand. \"C'mon, let's go see what old One-Eyed Winona has to say.\"\n\nBeth was about to turn away when she heard Naia gasp. Tink dropped her tools and froze in place, startling the rats that were helping her. Over by the gate, Abella turned to look over her shoulder, her stone features wide in surprise.\n\nThe nymph had gone deathly still, her mouth opening and closing like a fish as she gasped for air.\n\n\"Lily, what's happening to them?\"\n\n\"I don't know.\" The succubus spun about, her horns appearing over her head, but there was no enemy to be seen.\n\nTink let out a shriek of anger and picked up the hammer closest to her and threw it into the side of the house, where it busted through the siding and stuck. Abella's face turned somber and she turned back to the gate to resume her vigil. Naia, on the other hand, was turning translucent, ripples going up and down her body as her form wavered.\n\n\"Naia, please, what's going on?\"\n\nNaia looked at Beth, her lips twitching. A single tear ran down her cheek.\n\n\"She...she was my sister. How could I forget my sister?\" Her eyes met Beth's, and her body became translucent. \"Oh, Emily, how could you?\"\n\nNaia fell to her knees and clutched the side of the fountain, which was now overflowing onto the ground in time with her tears. Beth set the book somewhere dry and then stepped into the fountain, doing her best to comfort the nymph.\n\nAnd, much to her surprise, so did Lily.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nKisa sat on the edge of the roof, her legs dangling over the side. She had been up here for most of the day now, listening to an mp3 player that Tink had scrounged up for her.\n\nThe electricity on her floor was out due to repairs, and she had discovered a perfectly lovely spot on the roof to stretch her legs and soak up some sun. The music on the mp3 player wasn't anything great, but it would do for now.\n\nEver since Tink had given her the record player, she had found a purpose other than lounging about, a reason to live, to breathe. In between songs, she could recall memories of the old man who had helped her. His face was a constant presence during her moments of peace, and while it bothered her that she couldn't remember who she was, it bothered her even more that she couldn't remember him.\n\nBut she did remember that he had taught her how to dance. It was something he had learned from his home country, and it was what he had taught at the rec center. It was her hope that maybe dancing would help her to reconnect with the past, to give her the answers she so desperately craved. Whoever she used to be may be gone, but the person she was when she danced still existed.\n\nOf course, her peace had been interrupted when Death had come up to watch her. The spooky specter was content to sip his tea and watch, and when she asked him if there was somewhere else he could be, Death had explained that he and Mike had engaged in a long chat about personal space after some important meeting.\n\nOnce she explained to him that dancing was also private (sometimes), Death had pulled a children's book from the depths of his robe and was busy looking through the alphabet, but he did not leave. Happy that he would at least keep to himself, she had danced some more, albeit not as enthusiastically as before.\n\nThe events of the house were like a foreign entity to her. The urge to dance called to her from the moment she woke to the moment she slept, and other than a couple of check-ins with Tink, she was perfectly fine being the ever-elusive feline of the house. She needed to work through so much of her own drama first, that she felt like this approach was perfectly fine.\n\nHowever, her mp3 player had died almost twenty minutes ago, and she was deliberately leaving her earbuds in and pretending to be listening to music so that she wouldn't have to talk to Death.\n\nThe earbuds didn't quite fit her ears correctly, so the sound of Tink's shout followed by something slamming into the house was perfectly audible. Crouching down, she crossed the roof on all fours and looked into the backyard.\n\nNaia was crying in the fountain, and Beth and Lily were busy trying to console her. Curious, she leaned over the edge for a closer look, but movement in the yard caught her eye.\n\nWhen she turned her head, she saw a dark figure move past Abella and then disappear through the gate in the backyard and vanish in between the trees. It was a man, but that was about all she could tell. A growl escaped her lips, and she kept her eyes on the spot where he had disappeared.\n\n\"I say, this is a bit dramatic, is it not?\" Death had crouched down right by her side, and she startled, then nearly fell. Her scrabbling claws caught the roof in time to keep her from falling free.\n\n\"You nearly killed me just now!\" She told him through gritted teeth.\n\n\"False. I nearly collected you. There's a difference.\" He held up the children's book to show her a picture of an X-Ray next to the letter X. \"I am struggling with this letter, because I don't know if I am looking at a picture of bones or a portrait of myself. Would you assist me?\"\n\nRolling her eyes in exasperation, she was about to tell him no, but realized that if she didn't help him, he was likely to go downstairs and ask someone who could see him for help. She figured that now wasn't the best time, so turned her attention toward him.\n\n\"Here, let me show you.\" She took the book from him and led him away from the ledge, Naia's cries vanishing on the breeze. \"Have you ever heard the term, 'X marks the spot'?\"\n\nDeath stopped in his tracks, a giant smile on his face. \"Did you just make a map analogy? I love maps!\"\n\nKisa sighed in exasperation.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nMike sat and chatted with Amymone while Yuki sat in the corner of the yard on a chair made of ice. After coming outside, the kitsune had announced that she needed some time to think and process what she had seen, so he had left her alone.\n\nAmymone was curious how everyone in the house was doing, so Mike answered her questions as best as he could. When the conversation about the others became thin, she asked him questions about book series that she had been reading and if he knew how they had ended.\n\nUnfortunately, he did not. He had never been much of a reader for a bunch of reasons, and she was visibly disappointed when he couldn't tell her anything about the books. Still, she seemed happy to chat with him about anything and everything, and it was only after he checked the time on his phone that he decided he may need to move things forward.\n\nHe excused himself and walked across the yard to where Yuki sat. She was on her throne with Daisy on her shoulder, and she was wistfully looking at something in her hands.\n\n\"Hey.\" He put his hands in his pockets and waited. If his phone was correct, evening was well on its way, and he had no idea if this place had nocturnal cycles as well, or if it stayed the same. It also occurred to him that he should have asked Amymone about it, because it would have given them something with actual substance to talk about. \"What are you looking at?\"\n\nYuki lifted her hand and flipped the object over. It was a tarot card with a man and a woman standing apart from each other, and the word LOVERS was written on the bottom.\n\n\"When I made this, I had it in my head that I would use it on Emily.\" She turned the card around so she could see it once more, and then rubbed her eyes with her free hand. \"I had this weird fantasy that I would use it on her, make her fall in love with me once again, and then leave her ass in another dimension to pine over me.\"\n\nMike nodded. \"I guess that's only fair.\"\n\nShe groaned, and leaned forward in her chair. \"That's probably a lie, though. I was so angry and full of rage, that's what I wanted to happen. But knowing me, I may have used it and just pretended like all was forgiven, at least until the next time she pissed me off. It's hard to say. I was a different person in the tower, after all.\"\n\nShe meant it literally and figuratively. Emily had taken some of Yuki's magic by removing her eye, and when Mike had put it back, most of Yuki's rage had left her.\n\n\"So it makes someone fall in love with you? Seems kind of...\" He tried to think of the best word for it, but couldn't. Trying to talk ethics with a three-hundred-year-old fox spirit who had a broken heart wasn't a battle he thought he could win. \"Powerful,\" he finished.\n\n\"Indeed. The magic is much like the card, so it's interpretive.\" She spun the card between her fingers and tucked it in her sleeve like a magic trick. \"It's meant to seek out feelings related to love. Things like passion, loyalty, even friendship. Then it amplifies them, and overrides negative emotions.\"\n\n\"So it doesn't just make them super horny or anything?\" He felt the phantom itch of mandragora pollen in his collar and scratched it.\n\n\"No, nothing like that. Not that it matters, because I don't feel like making anyone fall in love with me. What could easily be the most powerful card in this deck ended up being a giant waste of my time.\"\n\n\"Well, maybe not. You never know, right?\" Realizing he had no evidence to back this up and that he was only saying it to make her feel better, he changed the subject. \"So, I spoke with Amymone for a bit, and learned that she has absolutely no idea how to deal with our dog problem. You don't happen to have a card in there that makes you super strong, do you? Cause apparently Hercules choked the shit out of one until it passed out, and I'm not even sure how to go about doing that to something with three heads.\"\n\n\"You're lucky this one doesn't have more than that.\" She pulled her cards out and fanned through them. \"I don't know, I might be able to get creative, but I wasted so many of my good cards trying to smash you into paste.\"\n\n\"Must not have been that good,\" he told her with a grin. \"Because I assure you that I am quite smashable.\"\n\nShe narrowed her eyes at him. \"Was that...did you seriously just make a joke about your sex life?\"\n\n\"According to the others, my skill set is primarily getting real lucky or fucking my way out of trouble.\" He shrugged, then took a seat on the ground. \"Figured I would work on not needing to do either, but apparently I'm always going to be in over my head on every problem. For example, did you expect a three-headed hellfire-breathing dog today? Because it wasn't on my Bingo card.\"\n\n\"How about running into your dead ex who gave away a part of her soul to protect you, only to ruin your life?\" Yuki slumped in her chair. \"On the one hand, I'm glad to know that it wasn't something I did. But on the other hand, she royally fucked everything up, and she did so in my name. Everything that happened was because of me.\"\n\n\"No, absolutely not true.\" Mike scooted closer and took her hand in his. \"My mom used to get blackout drunk all the damn time and blame me for the dumbest things as a kid. How she treated me was the reason we kept getting bounced from place to place, and I was convinced for so many years that I was the problem. After several years of therapy, I was finally able to accept that her actions were not a reflection of me, and the same goes for you, Yuki. I know we don't have the full story yet, and most likely never will, but whatever she thought she knew was coming, she should have trusted you and the others with it and seen if you were up to the task.\"\n\n\"Hindsight is twenty-twenty.\" She blew an errant hair off of her face, then sighed. \"For example, we shouldn't have come to the Underworld now that we know that Fido has a hard-on for eating people who shouldn't be here.\"\n\n\"I should have brought dog treats or something.\" He stood and brushed the dirt off his pants. \"I'm thinking our best option is to run. I can tell if we are running toward or away from danger, and I'm guessing that the reason we ended up here is because our route home was cutoff. That damn dog can't come in, so we should find out if it wandered off first. If not, let's cut across to the other side and get a good head start.\"\n\n\"And then what?\"\n\n\"Follow my gut.\" He patted his belly, giving her a grin. \"It will take us home or somewhere equally safe. That's the hope, anyway.\"\n\n\"Ugh.\" She stood and tilted her head from side to side, then stretched. \"Running seems like a stupid choice, but it's the only one we have\u2014unless we want to try and send Daisy out. I don't know that she could even find her way back. At least you're a good runner. I was a bit surprised, to be honest.\"\n\n\"Yeah, that's a recent thing.\" He followed her to the back of the house, and they stood just outside the open gate. The woods were still filled with an ominous mist, but they were quiet.\n\nThey sent Daisy on a quick perimeter sweep. When the fairy returned, she informed them that there was no sign of the hellhound, and Mike hoped that meant that it had wandered off. With tentative steps into the mysterious wilderness, he felt no sense of incoming danger, and chanced a quick look back at the house.\n\nUp in the window, Emily appeared briefly, her hand against the glass.\n\n\"Let's go,\" he said, then moved forward with purpose. Yuki kept up with no problem, and once they were far enough away, they stopped in between a pair of large trees to get their bearings.\n\nMike closed his eyes and thought of home first, and then Naia. He was part of the house, and even her, and he wondered if he could use that to guide him. It reminded him of the time Lily had tried to kill him in the Dreamscape, and his magical bond with the nymph had saved him then, so why not now?\n\nHe concentrated on Naia, and felt a sense of sadness overcome him. Had something happened at home? The world around him was eerily quiet, and he could almost picture her fountain in his mind. Except it wasn't just her that he saw. It was Lily, too, and Tink, and even Abella. They were all clustered together by the fountain, around Naia, their voices like faint whispers in the wind.\n\nThe sensation was little more than a tickle, but he felt it somewhere to the right and turned.\n\n\"This way,\" he said, and moved forward. Yuki followed him for a while, and then took point, her eyes scanning the mists. Dark figures wandered about as if lost, and the few times he came close enough to make out any detail, they simply vanished from sight.\n\n\"They are damned,\" Yuki told him, her nose wrinkled. \"I can hear them calling to each other, but nobody answers. It's a bit unsettling.\"\n\n\"Then let's get out of here so you don't have to hear it.\" They continued onward for what felt like hours, and the tickle became an itch, right between his eyes. They said nothing, which helped Mike concentrate on home, and the itch was becoming a pressure in his chest now, as if his heart was being tugged on by strings.\n\n\"I think we're getting\u2014\" he started, but then a cold feeling descended on his gut, and he saw the dark shapes in the fog disperse and vanish.\n\nSomewhere in the mist, heavy footsteps crunched on leaves, and the sudden intake of air through the beasts many nostrils was like nails down a chalkboard.\n\nMike pulled out his phone. Yuki put her hand on his shoulder, and when he looked at her, he saw the fear in her eyes.\n\nSetting an alarm for sixty seconds, he looked around the forest, trying to track where the sniffing was coming from.\n\n\"What are you doing?\" whispered Yuki.\n\n\"Buying us some time,\" he whispered back. \"The alarm will go off and draw it in.\"\n\n\"Oh.\" Yuki pulled a card from her sleeve and took his phone. \"Here, hold on.\"\n\nShe blew on the tarot card and it hovered in the air. She put the phone on top and then summoned tiny little ice clamps to hold it in place. Mike pushed the start button and watched as the card and his phone zipped away into the woods. He wondered if insurance would cover loss in the Underworld, but figured he would just order another one. Hopefully Quetzalli hadn't fried out his computer since he left, because that's where the most recent backup of his phone was.\n\nThe sniffing came closer, and the blazing eyes of the Cerberus twinkled in the mist like stars. It was coming closer, and he and Yuki hid behind the trees to buy themselves a few more seconds.\n\nThe distant tones of his alarm echoed through the mist, and Cerberus charged toward it, kicking up dirt and leaves that splashed against the trees they were hiding behind. They both waited until it was some distance away, and then broke into a run.\n\nWhat started as a jog soon turned into a sprint, and he was surprised how easy it was to breathe. Yuki turned into a fox and ran by his side, her tails twirling about as if they propelled her. Somewhere in the distance, he heard the growling of Cerberus, followed by the snapping of teeth.\n\nThe phone went silent.\n\nThe sensation of home was even closer now, and the trees seemed to be spreading apart. However, the sound of heavy paws behind them grew louder, and he took a look over his shoulder to see a pair of eyes glowing in the mist. Cerberus was on their trail once more, and it was going to be a race to the finish.\n\nYuki started zigzagging behind him, leaving a frosty trail that sprouted into low ice walls punctuated with spikes. He heard Cerberus crash into them and roar, which caused him to grit his teeth. The damn thing was fast, and he suspected that his luck was about to run out.\n\nHis heart pounded in his chest, fueled by terror. He realized now that the sound of paws was no longer behind them, but off to the side. It occurred to him that they were primarily running a straight line, and it looked like Cerberus had caught on.\n\nGlowing eyes appeared in the mist to his left, and a giant ball of fire formed beneath them. Unable to dodge, he dropped and slid. A jet of fire carved its way through the trees where his head had been, and he managed to stumble back to his feet in time to leap forward and dodge another blast.\n\nYuki formed a massive ice wall between him and Cerberus. Another blast of fire melted a clean hole through it, and was followed by a thick, shaggy head. Massive teeth were the only thing Mike's brain processed, and he bolted forward.\n\nCerberus roared and crashed through the ice wall, sending chunks of it everywhere. A large piece caught Mike in the small of his back, and he let out a gasp of pain before falling to the ground. He rolled to his feet, and suddenly Yuki appeared between him and Cerberus.\n\n\"Go!\" She shouted, then fanned out her tarot cards with one hand and summoned up a volley of ice. All three heads were now focused on her, and their jaws opened wide to reveal fire that swirled and danced among their teeth.\n\nMike tackled her from behind, causing the concentrated fire blasts to tear the forest apart above them. Her ice magic spiraled outward, sending icicles in every direction, and her tarot cards fluttered about like falling leaves. The smell of burning hair filled the air, and when he rolled off of her, he saw that a giant chunk of her hair had been melted away.",
        "Cerberus was on top of them now, and the center head opened wide above them.\n\nMike screamed in anger, and the banshee's cry caused the Cerberus to back up in confusion and whimper. It pawed at multiple sets of ears, then shook its head and stumbled about.\n\nYuki held her own ears as he screamed again, but the effect had already diminished. Cerberus charged forward and head butted both of them, knocking them away from each other. Mike fought to clear the branches and leaves from his face and was shocked to see three very angry heads above him.\n\nAs he opened his mouth to scream once more, a heavy paw pinned him in place, and he let out a high pitched squeal instead. Unable to breathe, he turned his face away from the sharp claws in front of him, and saw Yuki struggling to her feet. She was searching the ground, her hands frantically overturning leaves.\n\n\"Keep running,\" he gasped, then tried to push himself free. The Cerberus was crushing him, and his mind went to everybody at the house, flipping between each of them and then finally settling on Cecilia.\n\nShe wasn't even going to be there to help him cross over. Angry, he continued to fight, but all he could smell was sulfur and dog breath.\n\nDaisy fluttered out of his collar and danced around, trying to distract the heads. With a snort, Cerberus blew the fairy away, and she tumbled into the leaves.\n\nA large icicle slammed into the head on the left, and then a volley of razor sharp swords crossed the muzzle of the head in the middle. The head on the left opened its jaws wide and fired a jet of flame in Yuki's direction, and she dove to the side and threw a handful of tarot cards at Cerberus.\n\nIn the explosion of magic that ensued, Mike closed his eyes and looked away from the torrent of wind, fire, earth and rain that cascaded down around him. He felt a jolt like an electric shock, and the massive weight on his chest diminished, but didn't leave. A storm formed, and over the howling of the forest, he wrapped his arms around Cerberus' paw and tried to push it off of him.\n\nUnable to catch his breath, he couldn't get enough leverage to lift the paw free, and he moved his hands around in an attempt to get a good grip on it. The paw no longer felt right, and he wondered if the mighty beast had been toppled, which would allow him to squirm free and run.\n\n\"Chikuso!\" This came from Yuki, and he turned his head toward her and opened his eyes, but his vision was obscured by hair. He could just make out her prone form, green eyes wide with alarm.\n\nHe wiggled his toes real quick, suddenly afraid that maybe he had been smashed or ripped in half, but she wasn't looking at him, but just above.\n\nThe weight on his torso shifted, and what he thought was a paw used a pair of arms to push away from him. Stunned, his mind ran through all the possibilities as he found himself looking once more into the six, fiery eyes of the Cerberus, only now the beast was in the form of a young woman with three heads. Unruly hair blocked his view of what the rest of her looked like.\n\nThey were looking down at him with confusion and uncertainty, and he looked to Yuki for any sort of explanation.\n\n\"It was the Lovers card,\" she groaned, her hand on her side. \"I was throwing minor arcana at it and that one got mixed in.\"\n\n\"But what does that mean?\" he asked, then looked back up at Cerberus. Cerberus was wearing a black leather dress, and all three necks were adorned with a black and red collar bedazzled with spikes.\n\n\"We...are...Cerberus.\" When Cerberus spoke, each head took a turn, which made him wonder if they were of one mind or just thought alike. He saw that the head on the left had a nasty cut on her cheek, and the one in the middle had a set of scratches across the bridge of her nose.\n\n\"Um...Yuki, what do I do?\"\n\n\"The card is meant to make someone fall in love,\" she explained. \"But I don't know what that means to a Cerberus.\"\n\n\"We...are...Cerberus!\" They were looking down at Mike expectedly, but he wouldn't classify it as friendly. It was almost angry.\n\n\"Hi Cerberus, I'm Mike.\" He held up a hand and waved.\n\n\"Mike is...new master...to Cerberus?\" They didn't look convinced, and the head on the right was now sniffing him.\n\nYuki groaned again, and when he looked over at her, he saw that she was using ice magic on a burn on her side. Her robes had been burnt, and he could see ruined flesh beneath.\n\n\"You okay?\" he asked.\n\n\"Hellfire just missed me,\" she explained through gritted teeth. \"It'll heal, but I need a bit. Mike, her tail isn't wagging, you'd better figure this out quick.\"\n\nHe looked back at Cerberus and nodded.\n\n\"Yeah, sure, I am absolutely your new master.\" He smiled, then wondered if smiling would seem too threatening. Was showing teeth to a dog okay? Was Cerberus even technically a dog now?\n\nAll three heads were sniffing him now, and he saw that Cerberus still had ears like a dog, sharp pointed ones that stood at attention. Their skin tone was similar to his own when he spent too much time in the sun (which was almost never), and he held still as they gave him a once over.\n\n\"Master smells,\" each head began.\n\n\"Of human,\" finished the first head with a growl.\n\n\"Of demon,\" said the second head with a grin.\n\n\"Of the fae,\" finished the third head with a snarl.\n\nWell that answered his question about individuality. He took a deep breath and put his hand on the center head's forehead. She smiled and leaned into it, letting him scratch her ears.\n\n\"Cerberus forbids...passage to mortals,\" said the first and third head.\n\n\"I am no mere mortal, Cerberus.\" Mike kept petting the center head, trying to keep her happy. He wasn't sure who controlled what, but this one seemed to like him. When she looked at him, her eyes were no longer red, but an ominous black. The others, however, still had fire in their eyes.\n\n\"Humans are forbidden,\" said the first head, and he felt the hand on that side of Cerberus dig claws into his shoulder.\n\n\"Fae are forbidden,\" said the third head, and the other hand reached for his throat. He looked at the center head. If he drew an invisible line separating Cerberus into three parts, maybe there was something he could do to get the upper hand after all.\n\n\"Yuki?\" He looked over at the kitsune, who was lying on her back against a log. \"Is that tail wagging?\"\n\n\"Ye...yeah.\" She was taking deep breaths and digging through some of her cards. \"Why?\"\n\nMike grinned and moved his hand down the center head's cheek.\n\nHe didn't have the strength of Hercules. Strangling such a beast would still be impossible, even as she was right now. However, he had something even better, and while the Cerberus was under the effects of the Lovers card, he was finally going to be able to play to his strengths.\n\n\"You're a good girl, aren't you?\" he asked, and he stared deep into her eyes, willing his magic to life.\n\n\"We are not...\" said the first head.\n\n\"A good girl,\" said the third head.\n\nThe middle head ignored the others, her adoring eyes now locked on his face. She opened her mouth and panted, and he traced his thumb and finger around her lips and then slid the tip of his finger inside her mouth.\n\nNaia's magic rumbled inside of him, bouncing around as if ready to escape, and it told him exactly what he needed to know about the mythical beast and what they needed.\n\n\"Suck it,\" he told her, and the middle head complied. His magic was now streaming from his finger into her mouth, and her eyes widened in surprise.\n\nThe first head curled her lips into a snarl, but then her face went slack as the fire went out of her eyes.\n\n\"Master...not human,\" she said, then sniffed him again. She relaxed her hold on his shoulder and he used his other hand to pet her head and rub her ears as well.\n\n\"That's right, Cerberus. I used to be human, but not anymore.\" The center head was letting out cute little squeaks while she sucked on his finger, and Mike moved his hand along the first head's cheek.\n\n\"Be careful about what you say,\" Yuki warned. \"I'm willing to bet that Cerberus can tell if you are lying.\"\n\n\"I don't need to lie to Cerberus, because she's a very, very, very good girl.\" He looked over at the third head and smiled. He could see uncertainty in her eyes, and the hand that had been trying to squeeze his neck had relaxed. \"In fact, I would like to get a better look at you. Would you\u2014\"\n\nHe felt a flash of cold run through his body, and he listened and went silent. Cerberus waited expectantly, and Naia's magic filled him in a moment later. Cerberus was a being of three minds with the personality of a dog. A request would likely not be obeyed, and would break the spell.\n\nA command from her master? Now that was a different story altogether.\n\n\"Cerberus? Sit.\"\n\nCerberus sat, causing her weight to shift off of him and between his legs, and his finger popped free of her mouth. He scooted free, making sure to keep eyes on each of the heads. One and two seemed thoroughly enchanted with him, but three was still uncertain. He stood and brushed some leaves off himself before placing his hand once more on the center head.\n\nShe was the key to his plan, and he let his magic flow over her. He could see Cerberus much better now. She wore a dark leather dress that clung to her skin, and her arms and legs were streaked with dark fur that matched her hair.\n\nMatched his hair. He touched it and realized that it was the same color as his own. Had the Lovers card tried to match him to Cerberus? It was an interesting conversation for another time. Her dress was short, allowing her thick, hairy tail to wag on the ground. She was on her knees with her legs apart, and he caught just a hint of dark panties beneath her skirt.\n\nThe middle head sighed, and Cerberus shifted on the ground. Already a damp spot was forming in the middle of her panties, and he grinned. If the middle head was connected to the tail, it made sense that she would have been the fastest path to her libido. He had never had a dog while growing up, but he knew enough about how pack hierarchies worked, and it was time to assert some dominance.\n\n\"Cerberus is a good girl,\" he told them, and placed his hand on top of the third head. Her red eyes faded to black, and she gazed up at him in wonder.\n\nDue to having three heads, Cerberus had a very wide torso that narrowed down to a normal sized waist and very thick thighs. However, with so much room across her chest, he was not surprised to see that she actually had three ample breasts that strained against the leather fabric of her dress.\n\n\"Yuki, how long do you think she'll be transformed like this?\" If he was going to take this creature of Hell, he was going to have to go all the way.\n\n\"I'm not a fucking magic eight ball,\" she replied with a growl. At the sound of her growl, all three of Cerberus' heads turned to look at her with a growl of their own.\n\n\"No, bad girl,\" Mike told them, and they looked back at him in embarrassment. \"That's Yuki, and she is my friend.\"\n\n\"Yuki is...master's friend...so Yuki is Cerberus'...friend.\"\n\n\"That's always gonna freak me out,\" Yuki muttered from the sidelines.\n\n\"Yeah, well, it's about to get a lot freakier.\" He unzipped his pants and pulled them down, and his semi-rigid cock fell free. Cerberus gazed at it in awe, though the middle head was also panting. Convinced that he commanded their full attention, he let the magic do its work, and his cock rose to its full length. He moved close, the tip of his cock now almost touching the middle head's nose. She was drooling now, and he continued to caress and pet the other two heads.\n\n\"Suck it.\"\n\nThe middle head opened her mouth wide, revealing a wicked pair of canines and a long tongue. She took just the head of his cock into her mouth, and he helped guide the other two heads in. Cerberus' shoulders folded in as the heads on the side tried to meet in the middle, their tongues now licking the length of his shaft.\n\nThree mouths on his cock was a surreal experience, and he alternated which heads he was petting as Cerberus continued to blow him. The middle head moaned, and his cock popped free of her mouth, and the first head took its place. Now with two heads on the same side of his dick, they fought to get in and comply with his command.\n\nHis magic was now crawling all over Cerberus, and each breast was now adorned with a very stiff nipple that strained against the thick fabric suppressing it. The hellhound was letting out tiny gasps and moans, and he leaned back to see that one hand was now frantically rubbing at their crotch through soaking wet panties.\n\nGood, he thought. \"Pull down the top of your dress, Cerberus.\"\n\nThey complied, revealing three breasts. The ones on the outside were round and larger than the one in the middle. Streaks of fur adorned the sides, and he reached down to pinch one of the nipples.\n\nThe corresponding head gasped and lost her place on his cock. They pushed each other aside until all three of them were sucking on him once more, and he put his hands back on their heads and started switching between them. He gave each head a solid minute or two to suck on his cock, and then would pull out and go to another, leaving the first head to whimper and growl until she could reconnect. It was no longer just his magic functioning either\u2014he could sense some sort of residual magic from the use of the tarot card, and his bond with Cerberus was strengthening.\n\nAs much fun as it was to have three women fighting over his cock, and to see long strings of saliva keep them all connected, he knew that if he was going to establish himself as the alpha, he needed to take this much further.\n\n\"Enough.\" He pulled his cock away, and Cerberus's faces became desperate, and they reached for him with eager hands. \"Turn around,\" he told them.\n\nThey obeyed. Cerberus spun around and lifted their ass in the air. It was a nice, thick ass to go with her big thighs, and when he flipped her skirt up over her cheeks, her tail wagged in anticipation.\n\nHe didn't even bother pulling down her panties. Once he was on his knees, he shoved them to the side and pressed his cock against the tight lips of her pussy and eased himself in.\n\nCerberus let out a cascade of yips and growls as he penetrated her with some difficulty. Once he was fully inside, he held still and listened as all three heads growled at the same time, a sound that resonated in his head. They wiggled their hips back and forth, and the growls transformed into moans and whimpers.\n\nHe put his hands on her ass and started fucking her, slow at first. It was an amazing sensation, hearing the pleasure of a woman in triplicate. While the middle head obviously had the best connection to the genitals, the others clearly felt everything he did, and he had to grab her tail and tuck it under one arm to keep it from hitting him in the face.\n\n\"Cerberus is...a good girl...for master.\" When Cerberus spoke, her voices were now punctuated by tiny cries of delight. His magic was now crawling over her, and disappearing in her fur and hair. Her dark fur was lightening to a shade of gray in places, and all three heads moaned as he grabbed her by the breasts and leaned back, causing her to sit on his cock.\n\nThe cries of ecstasy scattered through the forest as he played with all three of her breasts. Cerberus was now masturbating furiously with both hands, and he felt the charge build between them both as his magic bounced around inside them, stirring her into a frenzy.\n\nThe inner walls of their vagina clenched against him, and all three heads howled at the same time when they came. Her back went rigid, which caused him to tip over backwards. Cerberus leaned forward, and his cock popped free.\n\n\"Oh no you don't,\" he muttered, then sat up and grabbed their hips from behind and slid himself back inside. Cerberus groaned, and he grabbed the side heads by the hair as he fucked her frantically. He was so close to coming and he needed to be inside her when he did.\n\nWhen he fired a thick rope of cum inside of the hellhound, his magic went with it, bouncing around inside of Cerberus. This time when the hellhound came, the center head barked and then let loose a ball of fire nearly two feet wide that immolated a nearby tree.\n\n\"Oh, sweet Jesus,\" Mike muttered, then felt his magic re-enter his body. He groaned as his balls suddenly felt heavy, and he pulled out of Cerberus. A thick glob of his cum fell out of her just before her panties slid back over, and he rolled her onto her back. \"No fire on master, okay?\"\n\nAll three heads nodded, and he sat down on her belly and squeezed her breasts with his hands, his hard dick resting on her breasts.\n\n\"Who does Cerberus belong to?\" he asked while pinching their nipples.\n\n\"We belong...to you...master.\"\n\n\"That's right, you do.\" He slid his dick between two of her boobs. \"Press them together,\" he commanded.\n\nThey obeyed, and he tit-fucked her at a good pace, his cum and theirs acting as lubrication. The nearest two heads stuck out their tongues and licked at the head of his cock every time it poked through, and when the third head started to whimper, he moved his cock over to the other cleavage and slid it in between them. Now the first head was moaning in frustration, sticking out her tongue and just barely touching the tip of his cock. He continued to alternate, and the pressure built inside of him, the magic sizzling across his belly and along his pubes.\n\nWhen he came again, it was in thick, shimmering torrents that coated all three of Cerberus' heads. They eagerly lapped it up, licking their fingers and each other's cheeks to swallow it.\n\n\"I just marked my territory. You belong to me now.\" He told them, hoping that it would suffice. With a groan, he sat back to admire the view. When they were sufficiently clean, Cerberus leaned forward and threw her arms around him.\n\n\"Cerberus loves master,\" they declared at the same time, tipping him over. He could see their tail wagging over their shoulder, and he let out a sigh of relief and pet each head.\n\n\"Cerberus is a good girl, isn't she?\" He kissed each of them on the forehead.\n\nAt his side, Yuki cackled, then let out a groan. \"You're right, that was weird. Now see if she knows how to get home, would you? I could really use a nice, cool bath.\"\n\nDaisy was now sitting on Yuki's head, and she scowled at Cerberus.\n\nTell that bitch to stay away from me, she signed. Or I'll rip her fucking ears off.\n\n\"How about it, Cerberus? Do you know the way to the mortal realm?\" He scratched several ears.\n\n\"Cerberus knows!\" They stood and adjusted the top of their dress so that they were adequately covered then turned around, sniffing the air.\n\nInvoluntarily, Mike sniffed as well. His senses were flooded with the smell of dry earth and dead leaves, and it caused him to sneeze.\n\n\"This...way...master,\" they said, and then Cerberus burst into dark smoke and reformed into a giant three-headed dog. They paused to give him a playful lick which drenched his face, and then trotted through the mist until they were barely visible.\n\nCerberus turned around and waited. Mike helped Yuki to her feet, then paused to pick up a few tarot cards that were lying around. When he handed them to Yuki, he looked at Cerberus and a grin blossomed across his face. He opened his mouth to speak, but Yuki covered it with her hand.\n\n\"Please. I already know you're going to ask if we can keep her, and you already know that I'm going to groan and roll my eyes at you, so let's skip ahead, shall we?\"\n\nHe snorted and started walking toward Cerberus. \"Fine. I just hope she's house-trained.\"\n\nYuki groaned.\n\n<center>\ud83d\udc3a\ud83d\udc3a\ud83d\udc3a</center>\n\n Hi all, I hope you enjoyed this chapter! Sorry it was a bit longer than the others, I'm sure you will forgive me. Some big revelations, an unexpected monster, and some more Yuki-Mike bonding is always a good time.",
        "As always, don't forget to favorite, rate, or leave a comment. I do read all of them (eventually), and I love reading letters from you. Real life has me busy, but I will be doing my best to stick with the release schedule in my bio (which isn't an exact science).\n\nI hope you and your family are well. Be good to each other, and I will see you next time!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "cerberus",
        "dog girl with a tail",
        "harem",
        "licking",
        "monstergirls",
        "tit fucking a demon with three boobs",
        "ultimate doggy style",
        "obedience"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-55"
}