{
    "title": "Sammy Meets the NZ Guy",
    "pages": [
        "All of my writing is fiction and the stories and characters are all products of my imagination. They were created for my fun and, hopefully, your enjoyment. Some of the events in the stories are not particularly condoned nor encouraged by the author but are there to create and enhance the story of the imaginary characters and their lives. Comments are always encouraged and carefully reviewed. Enjoy!\n\n***\n\nThis story picks up on a character from one of my other stories, New Neighbors, and tracks a little of her adventure. She is Sammy, the sister of Andy from that story.\n\n*****\n\nAndy thought he was probably the happiest man in the world right now, having Melissa, actually his next door neighbor, as his girlfriend. She fit the picture he had always had in his mind of the perfect woman, both physically, mentally and spiritually. She was wonderful. And the best part was that the feeling was mutual.\n\nHis sister, Sammy, had been probing him to let her meet Melissa and he decided that maybe it was time for that to happen. He loved his sister dearly, but she could be a rather loose cannon at times and he was always wary when they were together. Yet, he had sensed from the very first, when he had told Sammy about Melissa, that she was happy for him and might not submit him to the torment and torture that she was so adept at. So, with just a tiny touch of trepidation, he dialed her up on his cell phone and asked her to stop by that evening to meet Melissa.\n\n\"Oh my gosh, I'd love to do that. What time?\" bubbled through the speaker on the phone. He had to smile at that response.\n\nWhen he told Melissa about it, when she got home from work, she probed and debated about what to wear and how could she make the best impression on his sister and on and on until he was nearly overwhelmed, not imagining that this simple meeting could be such a momentous event.\n\n\"I can tell you she'll have on very short shorts, some kind of a tight top something and either flip-flops or 3\" heel sandals, depending on how she feels. Probably a pony tail and some makeup, left over from her dressing for work. So, don't worry too much about it.\"\n\nSomehow Melissa didn't look convinced. She wanted to make a good impression and, since she knew that Andy and his sister were very close, she also wanted Sammy to like her. She sighed and looked at him. \"I don't know,\" she mumbled.\n\n\"Listen, you go to your house and dress however will make you feel good about yourself. Crap, you're a freaking cum laude. What to wear shouldn't be that big a deal.\" Of course, he had enough sense to realize that it was a big deal for most females, and quite a few males that he knew as well.\n\n\"Okay,\" she answered, smiling, and headed out the front door and across the yard to her house.\n\nThirty minutes later she was back, dressed in a pair of yellow shorts and matching yellow sleeveless blouse that nicely highlighted her tan and hid the tan lines from the sports bra she wore when she ran and rode her bicycle, training for the triathlon that was coming up sooner than she wanted it to. She had on a pair of leather sandals rather than the flip-flops she usually wore when she was just being casual.\n\n\"Stop looking at me like that,\" she said, grinning. \"You'd think you've never seen me before.\"\n\n\"Do you really want me to stop looking at you like that?\"\n\n\"No,\" she said softly. \"You better never stop because it would break my heart.\"\n\n\"That will never happen,\" he added, giving her a huge hug. Then his head snapped back. \"You smell wonderful. What the heck is that?\"\n\nAfter a giggle she replied, \"Some perfume I got for Christmas from my mom a few year ago. Never had an occasion to wear it before.\"\n\n\"Wait,\" he chided. \"You can wear perfume for my sister but not for me?\"\n\n\"I didn't need perfume to get you, you were easy,\" she shot back, winking at him.\n\nHe started for her but she was too quick and zipped around the back of the couch, him in hot pursuit. They darted and dashed but the chase ended when he banged his head on the light hanging from the ceiling in the dining room. She ran to him and kissed his head. \n\n\"Being 6'-4\" isn't always an advantage is it,\" she pouted to him, kissing his head again. They were cut short by the sound of a car squealing into his driveway. He pulled Melissa to the big living room window so she could watch Sammy's grand entrance. Actually, her name wasn't Sammy, it was Samantha, and Andy's name was really Anderson. But, to most of the world, at least the one outside their mother's existence, they were Sammy and Andy.\n\nSammy's red Acura had stopped and they could see her using the mirror in the sun visor to primp, something which surprised Andy a little. Then the door opened and she uncoiled her 5\"-10\" frame from the seat and stepped out. Andy felt a punch on his shoulder.\n\n\"Look how she's dressed,\" Melissa said, an exasperated tone to her voice,\" and remember what you told me. Oh crap,\" but it was too late now. Sammy had on a fairly short skirt with a flowered print, a bright green sleeveless blouse, and little pale green shoes with 1\" heels. She waved as she headed for the front door and, unusual for her since she'd seen them there, she knocked. Andy wondered who this familiar stranger was as he opened the door. Sammy gave him a big hug and the usual kiss on the cheek which he returned, actually happy to see his sister and be able to introduce her to Melissa. But, before he could do anything she turned and threw open her arms.\n\n\"You must be Melissa,\" she beamed, giving her a huge hug. \"I've heard so much about you I feel like I've known you forever.\" Andy knew that wasn't quite true but also knew that Sammy wasn't shy about helping out his relationship. \"I'm Sammy, the dreaded older sister who constantly embarrasses her little brother.\" She grinned at Andy.\n\n\"I'm so happy to meet you,\" Melissa was finally able to say. \"And likewise, Andy has told me so much about you that you seem like my sister too.\" Again, not quite true but Andy couldn't help but beam with pride at her response. Melissa was very awed by Sammy's look, the green blouse highlighting the green eyes and emphasizing the very ample bosom it hid. With the shoes, she was nearly six feet tall which was emphasized by the very long and shapely legs that extended from the bottom of the flowered skirt, and she stood very straight, obvious proud of her height.\n\n\"Plus,\" Sammy added, giving Melissa a knowing look, \"I've never seen my brother happier than he's been since you moved in.\" Now Melissa's cheeks reddened a little. \"Don't you blush,\" Sammy continued. \"I've been hoping he'd meet someone that would just swoop him away and,\" she paused, looking Melissa up and down, \"you look exactly as I knew his very special girl would look.\"\n\nThe red in Melissa's cheeks only deepened. Sammy put her hands on Melissa's cheeks. \"And that color in those cheeks tells me you're exactly what he's always wanted . . . and needed too.\" She gave Melissa another big hug.\n\n\"Umm, I warned you a little didn't I,\" Andy said, laughing.\n\n\"Oh, shut up, Andy. You know I always tell the truth.\"\n\n\"Yeah, right. How truthful is this way you're dressed today? It got me in big trouble you know.\"\n\n\"You never get a second chance to make a first impression.\" She winked at Melissa.\n\nThey sat and talked for quite a while, Sammy asking a lot of very astute questions, but questions whose answers she felt would make Melissa more appealing to Andy. It wasn't really needed but he loved his sister for doing it. And Melissa was totally taken with Sammy. Really, she was so much like Andy that it would be hard not to like her.\n\n\"When you going to take her to meet mother?\" she asked, a sinister look on her face.\n\n\"It'll happen eventually, but eventually is a long way off right now. Meeting mother is kind of like the triathlon you're doing,\" he said, looking over at Melissa. \"It takes a lot of long and hard preparation.\"\n\nSammy laughed. \"Well said. Triathlon, huh.\" She just smiled a knowing smile. It certainly fit. Then quickly she jumped up and said, \"I should be going.\" Another big hug and this time a kiss on the cheek for Melissa. \"You're a keeper for sure,\" she added, then a hug and kiss for Andy.\n\nAs she was going out the door Andy called after her, \"Take it easy backing out. I'm getting black marks on the new driveway.\" She waved over her shoulder, climbed in and started the engine. He heard it rev up as the tires squealed to the accompaniment of white smoke as she zoomed out into the street. Then she pulled away and was gone.\n\n\"My sister,\" he grumbled to Melissa's delightful laugh.\n\nSammy smiled all the way to her house, happy for her brother's happiness. And, a little jealous as well since she wanted something like that for herself. She was 26 now, not ancient but she was actually anxious to get started with her next life. Not that she was dissatisfied with the life she was living now. In fact, she knew that tons of girls would trade places with her in a second. It was just that she had a picture in her mind of how her life should progress, each step fairly clearly defined, and she was just anxious to get to the next step, the next phase or whatever it could be called.\n\nShe was home though and pulled into the driveway, the circular driveway that also branched around to the back of the house to where the two-car garage was hidden from view. The house was a beautiful log house, partially a graduation gift from her grandma, like Andy's, but different in that she had begged and cajoled her father into adding money to it so she could get the house she really wanted, this one. It was located in a beautiful section of town, partially wooded and hilly, and was the log house she had dreamed about from her earliest years. It had four bedrooms and three and a half bathrooms, a lot for a single girl but she didn't plan to be single forever. She actually loved history and had been tempted by some of the old, historic homes in the city but, she also loved the outdoors and the quiet sounds of the woods at night, so she went with her heart and got this house. It was on four acres of land, 200 feet across the front and about three football fields of depth that stretched up the hill behind the house where she loved to walk and often just sit, leaning against a tree and watching the birds and other animals playing around her.\n\nNow she went inside, through the kitchen and into the great room whose ceiling soared three stories over her head and nearly took her breath away each time she passed through it. Up the stairs to her bedroom, its ceiling only two stories high where she changed from the clothes she had worn to meet Melissa into an old pair of shorts and a Hilton Head t-shirt along with some flip-flops. Back down the steps and through the great room, grabbing her guitar as she went and out the front door to the wrap-around porch. She stopped there, looking around with a big smile on her face as she certainly loved where she lived.\n\nShe sat down on the edge of the porch, her legs stretching down the front steps, and strummed a C chord on the guitar. She loved her Gretsch guitar. She had found it at an old music store she had stopped into randomly. A 1934 model, the wood having mellowed over its 80 plus year life, the tone mellowing along with the wood producing a tone she found restful and soothing. She loved music as well, as long as it was really music. When out with her friends she enjoyed their music generally, even some rap if the words were clever and original. But, here, alone with her guitar, it was different. Maybe it was the love of history that gave a clue for she loved 70's folk and classic country and western things. Nothing was more relaxing or fulfilling that to sit on the porch or steps playing her guitar and singing some of those songs as loud as she wanted for all the neighbors were far enough away that she wouldn't be bothering any of them.\n\nA couple of chords and she began to sing,\n\nOh, I'll twine with my mangels and waving black hair\n\nWith the roses so red and the lilies so fair\n\nWhat was that? She could hear harmony. Was she going crazy. She kept singing. As she sang the next two lines she could still hear the harmony.\n\nThen she saw him, standing at the bottom of her driveway, arms outstretched and beautiful tenor voice echoing through the trees and off the hills, wonderfully accompanying her strong alto. Now she waved for him to come closer and join her, amazed that he would know the words to this old Carter family favorite.\n\nWhen I woke from my dreaming my idol was clay\n\nAll portion of love had all flown away\n\nAs he got closer she could see his short-cut blond hair, even the deep blue eyes, and could see that he probably matched her brother's 6'-4\" inch frame. Plus, he was smiling, a broad and warm smile with white teeth sparkling in the warm light of the evening sun. And that voice, so clear and resonant. She stopped strumming and returned his smile.\n\n\"Keep playing and singing,\" he said, only she heard, \"Keep plying and singing,\" and she was instantly fascinated by that voice. And, she remembered something from some of her classmates in college.\n\n\"Say bedroom,\" she prompted.\n\nHe smiled broadly, and said, \"bedroom,\" and this time she heard \"beedroom.\"\n\nNow smiling even broader she said, \"I can't believe someone from New Zealand can know the words to Wildwood Flower.\"\n\nIn return he laughed warmly back to her. \"And I can't believe that you picked up so quickly that I'm from New Zealand,\" only, of course, it didn't all sound like she knew it was spelled.\n\n\"A classmate in college, so I got used to hearing it. But still, the words to the song. That's what surprised me so.\"\n\n\"I've been here four years now and I like those songs and the words are easy to remember as are many of those melodies.\"\n\nShe began strumming again, then started singing.\n\nIf you miss the train I'm on, you will know that I am gone\n\nYou can hear the whistle blow a hundred miles\n\nAt the second line he joined her in perfect harmony, so beautiful that she kind of tingled all over, those deep blue smiling eyes seeming to swallow her so completely she was almost having trouble remembering the words she knew so well. They sang all three verses, then she just stared at him for long seconds.\n\n\"I can tell from that look on your face that you're wondering who the blazes I am and where the bloody hell did I come from.\" More of that huge smile.\n\n\"That sums it up pretty well, I think.\"\n\nHe stuck out his hand. \"Malcolm O'Sullivan,\" he said. She replied, \"Sammy Whitworth,\" not wanting to fool with the more formal Samantha, and as she stuck out her own hand she was surprised as he grasped her hand between his thumb and forefinger and turned it, kissing the back.\n\n\"M'lady,\" he said very gently, \"it's indeed a pleasure to meet you.\"\n\nShe took a quick breath to recover from her surprise and did nothing to pull her hand away from his which, to her relief, was making no effort to release hers.\n\n\"I live a ways up the road there,\" he said, gesturing with his other hand, and I was just walking when I heard your beautiful voice drawing me toward it and, when I heard the song you were singing, I just couldn't resist, so I joined in, hoping you wouldn't mind.\" He still held on to her hand.\n\n\"Have you lived here long,\" she asked since she certainly didn't remember ever seeing him before and she certainly would not have forgotten that.\n\n\"A month, perhaps. Not long.\" That smile again. That and him still holding her hand was beginning to make her knees a little weak, so, she needed to take care of that.\n\n\"Come up here and sit down,\" she said, gesturing to the big wrap-around porch.\n\n\"Ah,\" he said, not resisting at all. \"That sounds fine to me.\" The porch had several comfortable rocking chairs and a swing and it was wide enough that that it moved perpendicular to the house rather than parallel. So, she gestured toward the swing with a questioning look and he responded by pulling on her hand toward that swing. That was fine with her as they would be sitting closer together. The swing had very comfortable seat and back pads and a pillow at each end. As they sat down he released her hand and she tucked her long legs under her, leaning back again the pillow and the arm. That way, she thought, she could look at him. Thankfully he sat down at the other end, leaning much as she had with his arm up on the back of the swing, looking back at her.\n\n\"You'll have to do the work,\" she said, laughing and pointing at her legs tucked under her. He gave a huge push with one foot and the swing moved back several feet, Sammy holding on to keep from falling out, and then it swung forward.\n\n\"That should last for a while, aye.\" She had gotten used to the accent and different words of her Kiwi friend from college and she had actually found it a little annoying. But, hearing it from Malcolm's lips was entirely different and entirely fascinating.\n\nWhat was going on here? She'd just met him and, could that be her heart pounding that she felt? She shook her head, not sure what was happening since it had never really happened before.\n\n\"Everything okay?\" he asked, a concerned look on his face.\n\n\"Sorry,\" she stammered, \"I was just thinking about something and yes, everything is fine.\"\n\n\"A beautiful house you have here,\" he remarked throwing his arm up to take in the entire house.\n\nShould she tell him? Sometimes she was a little ashamed and other times she was very proud. Right now she wasn't sure just what she was, but she said it anyway. \"It was a gift from my grandmother for my graduation from college.\"\n\nHe turned his head slowly to face her, his eyebrows raised. \"I think I got 200 dollars New Zealand for my graduation which is about 150 dollars US.\" \n\nHe was smiling but her cheeks reddened a little anyway. She had made the wrong choice she decided and wasn't quite sure what to say in reply, but he was quicker than she was.\n\n\"I'm so sorry,\" he said, leaning forward toward her. \"Now I've made you blush and that wasn't my intention at all. You're a very lucky lady to get this house and you must have a wonderful grandmother.\" He reached out and took her hand and patted it gently. \"Again, I'm sorry. I also have a wonderful grandmother, actually had a wonderful grandmother,\" he added, looking off over her shoulder.\n\n\"Now it's my turn to be sorry,\" she said softly, reaching out and taking his hand in both of hers. \"I can't imagine what it will be like when I lose mine.\"\n\n\"No, I bet not because I certainly couldn't have imagined.\" Then he sat up and took a deep breath. \"But, we move on don't we. Life moves from one phase to another and we move with it.\"\n\nGreat minds, she thought. What a coincidence that he would say that. Now she was facing another dilemma, one she was creating herself but, never-the-less . . . The decision made she said, \"Would you like to see the house?\"\n\nAn excited look came on his face. \"I'd love that for sure,\" he responded, his voice fairly dancing with newfound excitement.\n\nWell, at least she had made the right decision this time. She uncoiled and stood up, bravely reaching out and taking his hand to lead him inside.\n\nMalcolm let his hand be held, but he was also holding hers, and enjoying it. What a weird coincidence that he had decided to take a walk just as she had decided to sit on the porch and sing. And, what a coincidence that she was singing those songs. It couldn't have been better if he had planned it. She was quite a dish, he thought, particularly those green eyes and, she was tall - he liked tall women. And, it was obvious, the way her eyes sparkled, that she found him pleasing as well. Who knows, he thought. Could turn into something nice given some time for each to decipher what the other was about. He certainly didn't believe in love at first sight but attraction at first sight happened all the time. And that's where he was, following those swinging hips in the old shorts into this house he was totally curious to explore. On the way in she grabbed her guitar.",
        "Once through the front door, he just stood there, mouth open, looking up at the ceiling three stories above. He shook his head. \"That's amazing,\" he said softly, as she put the guitar in the stand.\n\n\"I love it, she replied. \"In the middle of the day, with the sun shining through the windows, it's beautiful.\" The windows on the front of the house were about one story tall each, two panels high and six panels wide so that it seemed the whole wall was windows. The furniture was mostly wood, as you might expect in a log house, with patterned rugs here and there to cover the hardwood floors. The walls were logs and huge log beams stretched from here to there. A giant stone fireplace filled much of one end of the room, the stones on the inside showing the black of much use. There were potted trees, three or four of them around the room making the inside look like the outside. On the walls were lights, each containing what looked like four candles but were, of course, electric bulbs.\n\nHe tugged her hand and looked at her. \"This is beautiful,\" he said, looking around again, then back at her, \"but I would have pictured you as a 10th floor condo with exposed beams and pipes, lots of steel and black and white.\"\n\n\"You would have been very wrong,\" she laughed back at him.\n\n\"I would have indeed.\"\n\nShe showed him the kitchen, the dining room with the long and very beautiful hand-crafted cedar table with matching benches and chairs, the utility room with washer and dryer and furnace, not her favorite room at all, and then led him to the steps to go upstairs.\n\n\"I really love this part,\" she said as they went up a wooden set of stairs that emptied onto a balcony that stretched the width of the house and had several doors leading from it. She stopped walking and began gesturing as she talked, her voice very animated as she described the house to him. There are four bedrooms up her,\" she began. \"Right here, at this end is a large guest room with its own bathroom. On the far end is my room, with its own bathroom as well, of course. In between those are two smaller guest rooms with a Jack and Jill bathroom.\" She could see immediately he was puzzled.\n\nJack and Jill?\" he questioned.\n\nShe had to smile at that. \"Yes, there's a bathroom between the two rooms with a door from each of them into it. They share that bathroom. Don't they have those in New Zealand.?\"\n\n\"I don't know but if they do, I don't know about it. Why is it called Jack and Jill?\"\n\n\"I don't know,\" she shrugged. \"But Jack and Jill were two kids that shared things and lots of times the bathroom is between two kids rooms and they share.\"\n\n\"Sounds reasonable to me. The bedrooms share a bathroom.\" She loved that bedrooms sounded like \"beedrooms\" when he said it.\n\nThey went down the hall to her room and she opened the door and gestured, but he just leaned in and nodded but didn't step across the threshold. She was tempted to pull him in but she did respect his reluctance to be alone with her in her bedroom.\n\n\"I love my four-poster bed,\" she ventured.\n\n\"Very beautiful, indeed.\" He responded.\n\n\"And,\" she continued, pointing upward, \"above the two little bedrooms is a storage area since there's no basement.\"\n\n\"Quite nice,\" was his thoughtful response and, noting his slight discomfort and also wanting to do something else she led him back down the stairs, grabbed her guitar and seated herself in the middle of the couch. \"Ah, more singing - wonderful,\" he added as he slid one of the chairs opposite her and sat down. \"And what shall it be?\" She began playing and then singing and he quickly joined her with that wonderful tenor harmony again.\n\nAlmost heaven, West Virginia\n\nBlue ridge mountains, Shenandoah river\n\nThey finished the song and she couldn't help but smile. \"How does someone in New Zealand learn all the words to these songs?\"\n\n\"Well, first of all they don't learn them all, but they know the song and, with someone else singing, it's easy to follow along quickly. And, the harmonies are fairly simple which helps.\" Now he smiled broadly at her. \"It's d\u00e9j\u00e0 vu, you know. When I was in school at home, a young lady moved there to go to school as well, and she was from Tennessee and played a guitar and we sang together a lot, even in programs and shows at the school.\" His eyes drifted off and his face changed completely, a look of sadness masking the expression of happiness he had just had. She didn't say anything and in a moment he continued. \"She was killed in a horrible auto accident on the way to my apartment to practice some music for a little show we were going to put on for one of the homes for the elderly.\"\n\nFrom the tortured look he had, she was sure she had more than a singing partner for him. Instinctively she reached out and took his hand in both of hers. She gently rubbed as she sought to comfort him. He had a very far-away look in his eyes as he turned to her, leaned in and gently kissed her. She didn't move, very much enjoying the tender kiss from this near stranger. Then he blinked and jerked backward, looking away. \"I'm so sorry,\" he said softly, but didn't pull his hand away.\n\n\"For a moment, I was someone else wasn't I?\" she responded, \"and don't be sorry.\"\n\nNow he turned slowly to look at her. \"Her name was Katherine. She was very lovely.\"\n\nShe wasn't at all sure why she did it but she leaned toward him and kissed him back, the same soft and gentle way he had kissed her. He smiled warmly at her and added, \"Let's sing some more.\"\n\nSo, they sang for an hour, mostly soft and gentle songs, some very sad ones as well. They fought their way through Patsy Cline's I Fall to Pieces and Hank Williams Jr.'s I'm So Lonesome I Could Cry, struggling a little with some of the words but the melodies and harmonies being sharp and clear.\n\nFinally she said, \"Do you sing other things than these?\" to which she got a huge smile in reply. He reached out and took her guitar and also took a deep breath.\n\n\"You heard my name,\" he said, \"so I'll sing to you.\" He began picking notes, a beautiful accompaniment and quickly she knew what was coming. In that gentle and gorgeous tenor voice he began so sing, his eyes never leaving hers.\n\nIf you ever go across the sea to Ireland, \n\nthen maybe at the closing of your day, \n\nShe knew that song so well, who didn't and, although she had never been to Ireland, she had seen enough and heard enough about it to know that those who were related to it had deep feeling for the country and its heritage. She was totally entranced as the magical union of his voice and the words seemed to carry her off to that far-away place she'd never been. He sang through the second and third and then the fourth verses, the picking of the notes highlighting his voice and the words as well. Then she could see him take another deep breath as he started the final verse.\n\nAnd if there's going to be a life here after, \n\nShe could see the emotion in his face as well as in his voice as those words, obviously dear to him swept over her and the last two lines were sung, very softly.\n\nI will ask my God to let me make my Heaven, \n\nIn that dear land across the Irish sea.\n\nAs the last verse ended, there were two tears making their way down his cheeks. \"Katherine O'Brien, she was, and I pray she's in that land across the Irish sea.\" Sammy bent across the guitar and kissed each of those tears away. She didn't care right then if she was Sammy or Katherine, she only knew that he was Malcolm and he was hurting and there was some reason, some karma that had brought him down her street this very night.\n\nNow she took the guitar and laid it on the couch, then grabbed his hand and headed for the front door, him following her lead without a word of question or protest. She went around the house and started up the long hill and into the woods, leading him around trees and bushes, climbing even higher. The house was gone from view and there was only greenery and sounds, sounds that she loved and wanted to share with him. They had gone perhaps 100 yards up the hill when they came to a flat area, a little glade. There was a bench, and animal feeders of every kind there, and grass and even some flowers peeking out around the bushes. She sat down and pulled him down beside her, just looking around and listening. He intuitively followed her lead and did the same.\n\nShe talked to the Cardinals high in the trees, chirping out their plaintive song, and even some early crickets that seemed to herald her coming to join them. They sat and listened for 15 minutes when suddenly she put her hand on his leg and a finger to her lips. She couldn't believe they were this lucky as, coming down from higher on the hill was a beautiful doe, heading for the corn that was almost always in the feeder there. They sat motionless, enthralled by its presence. It seemed to look right at them several times but never seemed frightened or spooked. After several minutes it drifted away, moving slowly back up the hill.\n\n\"Beautiful,\" he whispered softly in her ear. And when she looked at him, he was looking at her and not the deer. Her mind was moving swiftly now but she tried her best to slow it down. It was already an emotional evening and she wasn't quite sure what was happening even though she had never felt so comfortable with someone as quickly as she had with Malcolm. She passed it off as the music, but wasn't sure she really believed that.\n\nShe was beautiful, he thought to himself, but that was only one part of her. Even with Katherine he had never realized how intimate that just two people, singing together and harmonizing could be. But with her it was. She wasn't Katherine, no one else could be. But, she was Sammy, and he tried to guess what her given name might be. She loved things he loved and she shared them with him, and with only knowing him a couple of hours. A strange connection seemed to be there. He loved those green eyes and the way they looked at him and she hadn't seemed to mind when his mind had wandered away and he had kissed her. In fact, she had kissed him back, twice, one for each tear. He did feel warm inside, the first he had felt that way for over four years, since Katherine had died and he had left New Zealand. He enjoyed that feeling - he enjoyed her just being close by him.\n\nIt was getting dark and getting down the hill in the dark would be a challenge so they stumbled their way down in the dwindling dusk and were finally at the front porch. \"I do need to go,' he said and she thought she noticed a resigned sadness in his voice. But, he just looked at her for long seconds and she could feel her breathing begin to change. They, very gently, he put both hands on her cheeks and kissed her, not a long and passionate kiss, but just as warm and tender a kiss as she could imagine. Then he backed away and smiled and, even in the dark, she could see his blue eyes sparkling. \"But, we'll sing together again, and soon.\" \n\nShe watched him moving down the driveway, then away up the street until the darkness swallowed him completely. She realized she was trembling slightly and blamed the evening chill, even though it was still warm. She thought she might have very pleasant dreams tonight.\n\nShe left work at the regular time the next day and wondered if this would be the day they would sing together again, even though it was only the next day. And, she was lamenting her stupidity as she only knew his name and had no phone or email numbers if she should want to contact him. And, he had none of those for her either, she was dependent on him finding her, and she hated that. It just wasn't her nature.\n\nBut, when she pulled into the driveway her heart skipped a beat as he was sitting there on the steps, waiting for her. She rolled down the car window. \"Hi\" was all she could think to say although there were much more and inappropriate words bouncing around in her brain.\n\n\"Hi,\" was his quick reply as he looked from one end of the car to the other. \"Very nice,\" he said, gesturing. \"Whatever you do, you must do it very well, aye.\"\n\nShe grinned. \"What I do, I think I do well, but what I did best was chose my parents carefully.\"\n\nHe looked puzzled for just an instant, then knew exactly what she meant. \n\n\"Let me put the car in the garage and I'll be right back.\" She zipped around and parked the car and then hurried back to the porch. Cautiously, she took his hand and he didn't resist at all. \"Come inside while I change,\" she said, leading him to the front door and then inside after she had unlocked it.\n\n\"You trust me to be alone with you in your house while you change your clothes?\" \n\nShe had to smile. \"Should I trust you,\" she asked, still holding his hand.\n\nHe watched those green eyes and wondered if he could be trusted. Yet he knew that he could because he would do nothing to hurt her. Unless, of course, she didn't want him to act like he was trusted, didn't want him to be a good man. He couldn't think like that - he'd only known her a day, or maybe a lifetime. \"Yes, you should.\" And, of course, she knew she could.\n\nShe went upstairs and changed into some very short shorts and a very tight tank top. She checked herself in the mirror and decided she was appropriately seductive and went back downstairs, nearly drowning in the look he gave her. No comment, but his face certainly gave away his feelings and she felt very warm inside.\n\nThey talked, and sang some, then talked some more until she finally said, \"I have to run to the mall to pick up a couple of things. I won't be gone very long.\"\n\nTo her delight he replied, \"May I go along with you?\" Soon they were in the Acura, talking some but mostly just being together. She had to watch her driving but she was pretty sure his eyes never left her. She parked in the big lot and as they went inside the mall he took her hand, much to her delight. She felt a little like a teenager but she didn't care. It was fun and she had never really experienced anything like what she was feeling now. She stopped in the drug store to pick up some lip balm and a couple of other things including some clips for the pony tail she often wore. Then, as they were walking along they heard music, what sounded like an electronic keyboard of some sort and, as they turned the corner by the ice cream shop, there it was. Sure enough, an electronic keyboard being played very beautifully by a man with sunglasses who, she assumed, must be blind. There was a little box beside him and she saw it had some money in it, tips from his appreciative listeners.\n\nOne song ended and the next began and she immediately recognized it. From the look on Malcolm's face she could see that he recognized it too. She saw his mouth open and he began to sing the familiar words and melody.\n\nNighttime sharpens, heightens each sensation\n\nDarkness stirs and wakes imagination\n\nIt was Andrew Lloyd Weber's magical song. The Music of the Night, from Phantom of the Opera and her eyes widened as Malcolm continued singing. It was magnificent and the sound filled the mall from one end to the other. The volume was astounding and she could see people beginning to gather around in large groups. She watched as he sang effortlessly with the emotion and passion of the song clearly on his face and ringing from all the walls in his voice. The man at the keyboard was smiling broadly as his hands flew over the keys. She had heard him sing several times now, but never like this and she had a new appreciation of his compassion and caring. He could have totally overwhelmed her voice, but he hadn't. His had merged with hers, almost as equals and she felt like her heart might burst. Then the music softened and the last plaintive last lines were sung.\n\nYou alone can make my song take flight\n\nHelp me make the music of the night.\n\nThere were a few seconds of silence and then loud applause broke out, to the reddening cheeks of Malcolm who nodded his thanks to the crowd, most of whom were now lined up and were dropping money in the box. She saw ones and some fives and a few tens dropped in the box. She was happy for the keyboard player.\n\n\"Thank you, man,\" the keyboard player said, turning his head toward Malcolm. \"That was unbelievable. And, I can hear money dropping in my box and I need to share it with you.\"\n\n\"No way,\" Malcolm quickly retorted. \"I was just walking along here with my girl and heard you playing and couldn't resist joining in. I just enjoyed the singing. And good luck to you the rest of the day.\" He reached out and took the blind man's hand and shook it to more very sincere thank you's.\n\nAll she heard was \"my girl\" except as they were walking across the parking lot toward her car and he sang softly, so only she could hear,\n\nYou alone can make my song take flight\n\nHelp me make the music of the night\n\nThen they were at the car and inside and she drove to her house. She put the car in the garage and they walked around to the front and sat on the steps.\n\nOut of nowhere he said, \"I love your voice when you sing.\"\n\nHere was this guy whose voice overwhelmed an entire mall saying he loved her little voice, that she was not ashamed of by far, but was nothing at all compared to his. \n\nHe noted the strange look on her face. \"I mean it,\" he said. It's rich and warm and pure and all of the emotion and passion and pathos wrapped up in a song is grasped by your voice and comes out with it to be shared with everyone. It's a rare gift.\"\n\nLooking at him, she could see he was sincere and she tingled a little hearing him say it. And, hearing him say that, she appreciated even more now the way he sang with her, their voices melded together, neither seeking to take away from the other. It was something she was already treasuring about him. They talked more, about singing, about their lives and families, about anything that came into one or the others mind.\n\nBut, he stood up, telling her he had to be off and she bit her lip, not wanting him to go. Once more he took her face in both hands, kissing her so gently and warmly that she nearly couldn't stand it. And, as before, she watched him move down the driveway, a final wave and he disappeared into the darkness.\n\nNow she debated with herself. She weighed the pros cons and her own desires. It wouldn't be stalking she decided if she just googled him to see if there was anything about him online. Quickly, once the decision was made, she went to her computer, signed in, went to google and began to enter. She typed m-a-l-c-o-l-m o-'-'s-u-l-l-i-v-a-n n-e-w z-e-a-l-a-n-d and hit enter. Right at the top of the page that came up she saw the headline, O'Sullivan to leave for United States. She read the first line of the article which was dated about four years ago. Malcolm O'Sullivan, the young and brilliant lead tenor of the Christchurch Symphony Chorus and Opera Company is leaving New Zealand to spend some time in the United States. Sources aren't sure why he is leaving although some have suggested it might be related to the untimely accidental death of a close friend. She read more but it just told about some roles he had played and sung, nothing more about him. The other things there were much the same but there was nothing new about his time in the US. The words brilliant lead tenor kept resonating in her head as she shut down the computer. If he was nothing else, he was certainly that. But, what else was he? He had called her his girl so was he her guy? She sighed.\n\nNow two weeks had passed and they had spent nearly every evening together and the weekends as well. They often sang and more often talked, and very often just walked or sat together in her little glade above her house, listening to the birds and watching for the animals that ventured by.\n\nMalcolm was captivated beyond measure, but was so afraid that caution seemed to overwhelm his every wish and desire. He wanted her but was afraid. He knew she wanted him, but he was afraid of that for her as well. One minute, as he stared at those green eyes he wanted to grab her and kiss her so hard she'd never recover and the next minute he was nearly terrified of holding her hand. But, when they sang together, it was heaven for him. It was an intimate joining as their voices blended together and a shadowing of his restraint as he held his voice in check to match hers, much as he held himself in check over his desire for her.",
        "It was Saturday and they had taken a long walk together, he holding her hand as always and, since they were away from people, they sang together, and laughed together, and talked together and just reveled in their being together. When they stopped for a moment to watch two squirrels playing together and chasing each other, then stopping and stalking each other for a moment, then wild running, up and down a tree, out on the branches, they knew it had to be a male and female. When he had her trapped she would leap to another branch, him right behind as they raced down the tree and around in the leaves and grass and then were gone, into another tree, only the sounds of their scampering still there.\n\nSuddenly, Sammy couldn't stand it any longer. She didn't care about anything except this moment, standing there holding hands with Malcolm and gently she released his hand and, mirroring what he did each evening, she took his face in her hands and kissed him, gently at first, as he always kissed her, then moving her lips against his, and finally sliding her tongue against his lips, pressing there seeking entry, then pressing even harder as he seemed to be resisting. But, she was determined, sensing his fear and, with a sudden groan, his mouth opened and their tongues danced and probed and wrestled as he opened himself to her in every way, the fear banished, the hesitation thrown to the summer air that surrounded them. \n\nIt was all or nothing for him and the nothing had lost as his arms went around her and he groaned as he squeezed her with nearly all the pent up wanting that the past four years had created. And standing there in the middle of that road, he wanted her, nothing more and nothing less. No opera, no symphony, no singing career, just her. \n\nTheir faces pulled apart and their eyes locked, the unsaid seen very clearly there as he glanced around, then put his arm around her and nearly dragged her away, back toward her house as she quickly held onto him and they walked quickly, arms around each other's waist. At the house, she started for the door but he pulled her away, heading around the corner and started up the hill. She understood and led the way as he followed close behind. At the little glade the birds were singing. Now totally alone they kissed again, the same passionate kiss they had shared on the road. Then, still kissing, he began unbuttoning her blouse, very carefully each button until at last it swung open and he slid it off her shoulders. Lips locked together and eyes wide open, blue against green and green against blue, he reached behind her and unclasped her bra, again sliding it off her shoulders and dropping it to the ground.\n\nNow it was her turn to help as she slid her shorts down and kicked them off, followed by the panties. She was naked but he hadn't seen her yet. Their faces still together, they were both breathing hard as she now unbuttoned his shirt and slide it off and he, as she had done, slipped off both pair of his pants at once. They were both naked but unseen and he couldn't wait another second.as he stepped backward and gazed at her. Maybe it was his passion filled brain, but he didn't think so, that had magnified her perfection to something beyond perfection. She reached up and undid her pony tail, shaking her head so the dark hair flowed down over her shoulders, the suntanned shoulders that led downward to the white breast, glistening in the sunlight, the nipples a dark pink and very hard and erect, rounded nubs centered on the perfectly proportioned areola, dark and so inviting.\n\nHe tore his eyes away from those breasts to trace across the tanned belly, flat and smooth until there was another strip of white and a small and very dark patch of muff that tantalized him almost beyond his endurance. Then those long, very long legs he had seen before, but never quite this way.\n\nHe was not muscular, but still fit, a wonderfully proportioned body, very pale as he obviously didn't spend a lot of time in the sun. The few times she had actually had sex, she had been very interested in evaluating her partners erection as to length, thickness, curve, and color but somehow, this time, it was different. Her only interest was in that it was his, and soon to be hers she was sure. And that's all she wanted.\n\nHe could hardly breathe, just standing there looking at her. And she, almost reading his mind, lay down on the soft grass of the glade and held her arms out to him. He lay down almost on top of her as she spread her legs to make room for him and his elbows held most of his weight as again they kissed to soft sounds from each. He wanted to touch and kiss ever bit of her, every part of her skin, her hair, her everything. He began with her neck which smelled of the cologne she had used that morning, its odor familiar but more intense now than before. He kissed her shoulder, then down her arm to her hand, turning it over to nuzzle the palm against his face, then kissed his way back up to the tanned and soft skin of her neck again. Quickly he moved to her breast, as soft and velvety as anything he had ever felt before. The taste of it was exquisite as his mouth quickly found that nipple and closed on it, his lips pulling on it gently as she suddenly arched her back to press it against his face.\n\nThe other nipple was next with the same reaction from her as his hand moved to the one not being teased with his mouth and he squeezed as it completely filled his hand, firm yet soft, pliant to his touch. \n\nNext he kissed her stomach and it seemed to be quivering under his touch, then his tongue probed her navel then lower across her belly. As his mouth slid lower he could feel her hands on his head and, most of all, he could hear the wonderful sounds of her breathing and those low moans that mingled with the chirping of the cardinals, the sounds of some crickets and the other birds that seemed to be celebrating what was happening right before them. He rubbed his nose against that curly hair as his tongue found a certain dampness that he savored. He felt her legs spreading ever so slightly more, then even wider as his tongue began to probe. His hands slid over her hips, then down and under the two soft and now cool cheeks and he lifted them, pressing her against his face and the tongue that had now slipped inside her. He felt her helping as she lifted her hips even more. Her legs were spread far enough now that she was wide open to his tongue and anything else that might have need to enter there. The tongue went a little higher, pressing its way under that hood and now he felt her jerk as a gasp escaped her lips.\n\nHis tongue rhythmically probed and found that precious nub where so much pleasure hid, back and forth it moved to the matching movement of her hips\n\nShe thought she might die at any moment, her body unable to endure the ecstatic pleasure it was feeling as he touched and kissed her all over. She couldn't think and was thankful her body was just responding instinctively to his touches. As she felt her orgasm approaching she could only give in to it, let it overtake and overwhelm her and send her where she'd never quite been before. It was there now, trying to push her over the top and she fought it, wanting this feeling of him totally possessing her to last forever. But, she couldn't last as she cried out, her body vibrating as overwhelming sensations filled her completely as she lost all control, allowing her body to have its way with her. She felt the jerking, was aware of the sound of her voice but it was almost like it was someone else as she was totally submerged in her own passion. It seemed like an hour but, at last, it was slowing. She could hear her raspy breathing, feel her chest heaving as her hips settled back into his firm and controlling hands.\n\nSlowly she opened her eyes and he was looking at her and her thoughts were torn again. She wanted to do to him what he had just done to her but, more than that, she wanted him, wanted him to take her completely. And, the look on her face told him that very clearly, the smoky heat of those green eyes pleading with him to take her. So, he gently slid up along her body, their faces inches apart as he lifted himself gently above her and her hands guided him, their eyes still locked together until she groaned as he slipped inside that warm and very wet place and her eyes closed momentarily until he stopped against her mons and they reopened. He began to move gently, slowly out and slowly back in, savoring the feel of her and wanting that feeling to last. But that was not to be as, instinctively and seemingly out of his control, the movements quickened. As their voices had melded in wonderful harmonies, now their bodies were joined in another kind of harmony. Each could feel the other's breath on their faces as each heard little sounds escaping from throats and lips, sounds that only made him thrust faster and faster and made her move her hips harder and harder in time with his until she could see his eyes slowly closing and could sense his body tensing as now it was his turn let out a loud and long groan as he erupted inside of her, time after time, and then time after time again.\n\nBoth were quietly aware that they had stopped moving and she watched as his eyes slowly opened again and met hers. They stayed that way for long minutes, neither wanting to interrupt the contentment that each was feeling. Then he slid his arms around her neck and rolled over, pulling her on top of him. She licked his lips, then raised up so he could look down and see her breasts. She moved from side to side so that her nipples were rubbing on his chest. If they could have gotten any harder, they would have with that. But, it wasn't her nipples that she wanted to get harder right now as she felt something happening inside of her, and she smiled at him. Gently her hips began to move and as they did, he could see her breasts bouncing a little and that view was entrancing and was producing the desired result. She giggled gently as she totally enjoyed now what she could do to him. But, she had to decide what to do next. She knew what she wanted to do but, unfortunately, she couldn't do both at once.\n\nShe was moving those hips and rubbing his chest with her nipples and he could feel himself coming back to life inside her. He watched her face and somehow knew what she was thinking. He was more than content with her right where she was and he would be happy to save the other for another time. He reached out and grasped her breasts to her big smile, then pushed so she was sitting up, straddling him. He put his hands on her hips and began to move his own ever so gently. \n\n\"Do they have cowgirls in New Zealand?\" she asked as she began to move herself, sliding up and down on him.\n\n\"They may,\" he groaned out, \"but there are none like this, like you.\"\n\n\"How is this?\" she teased as she moved. \"Is this good or should I do it like this?\" and she began to roll her hips as well as moving up and down. He drew in a deep breath unable to take his eyes of her body, the afternoon sun making her gleam, the light sheen of perspiration that covered her body causing that sheen being beyond his most outrageous fantasies. Her hands were on his chest as she moved back and forth and up and down until suddenly she stopped, saying teasingly, between gasps, \"Should I keep going?\" His answer was to move his hand around her arm and down across his belly until he felt that curly hair of her muff, then through that into that wet place where her pleasure center was hiding, and rubbing there until her eyes closed half way and she had no choice but to begin moving again, only this time with more intensity than before and more little moans, her fingers digging into his ribs. They matched movements and sounds as she quickly knew she couldn't last much longer as her hips slapped against his and she could see his eyes closing and the thought of what was happening to him was enough to send her over the edge as a loud and long, \"ohhhhhh,\" rattled out of her throat joined by his equally long and loud, \"ahhhhhhhhhh,\" as he exploded inside her again, thrusting against her with each explosion with that wonderful love canal of hers squeezing him over and over with each jerk of her hips.\n\nSlowly she settled down, she collapsing on his chest and him putting his arms around her to hold her tight against him. Both were wishing this moment could last forever for neither had ever felt like this before. At last she raised her head and looked at him, as he kissed her nose. She slowly stood up and held her hand out and helped him to stand. She was so beautiful, standing there naked in the sunlight. She bent and picked up her clothes and he did the same, slipping on her shorts and shirt but holding the underthings in her hand, he doing the same thing. Their unoccupied hands joined and they walked down the path through the woods until they were rounding the house.\n\nThe loud noise they heard was Andy's Porsche Boxster pulling up the driveway and sliding to a stop.\n\nAndy and Melissa jumped out to see Sammy and Malcolm coming around the corner of the house, hair tousled, faces flushed and underwear in hand. Andy lowered his head, questioningly raised his eyebrows, noticing Malcolm's cheeks reddening slightly but Sammy only smiling back at him.\n\n\"Malcolm, this is my brother, Andy, and his special lady, Melissa. Guys, this is Malcolm.\n\nBoth Andy and Melissa knew, from the look on her face and the way she looked at Malcolm, that nothing more needed to be said right then."
    ],
    "authorname": "PickFiction",
    "tags": [
        "erotic coupling"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/sammy-meets-the-nz-guy"
}