{
    "title": "Head Above Water Pt. 03",
    "pages": [
        "Author's Note:\n\nMy humblest thanks to everyone who has been reading this story, and a warm welcome to new readers. This story spent a long time sitting in the hard drive of my old laptop. I want to thank my team for bringing it back to life: Melanie R. for her insurance advice, Dr. K. Wright for answering all of my medical questions, and my fantastic betas: Laura, Spyauth, sbrooks103x, and BarryJames1952. The last three are writers on this site. Check out their work if you enjoy a good story. \n\nTo Renascence readers, the last chapter is still being written. Thank you for your emails, messages, and comments encouraging me to write it. It's in the works!\n\nHope you all enjoy this installment. \n\nCheers!\n\nNora\n\n*****\n\nWes slept like the dead.\n\nHe made no noise, didn't move\u2014hell, his eyelids didn't even flutter while he dreamed. His heartbeat, the soft rise and fall of his chest and the warmth of his breath on my hair were the only things that hinted that he was still alive. I lay there on his chest for a long time, listening to his heartbeat, listening to the language that his body spoke, the sounds that filled me with warmth because just hours ago that heart had worked in overdrive, quickening from taking and giving pleasure. \n\nI had no idea what time it was. I hated being up before noon, but out of habit most days I woke up at five. It made me a grouchy little gremlin, but coffee usually helped. Right now I was feeling very much like that grouchy little gremlin. Fuck, I needed to get some coffee. And check in with work. And freshen up. And a bunch of other things. I can never go back to sleep after waking up anyway. \n\nI untangled myself from Wes, wincing because my entire body was sore. I could barely sit up and get my legs to the edge of the bed. Jesus fucking Christ. He'd been rougher than I'd thought. \n\n\"Mm, don't,\" said a muffled voice, thick with sleep. \n\nI felt a strong, warm hand close around my wrist, stopping me before I could get out of bed. \n\nI guess sleeping like the dead and being a light sleeper operated on two separate sides of his brain. \n\n\"I thought you were asleep.\"\n\n\"I am. Do you need to go to the bathroom?\" he asked without opening his eyes. \n\n\"No.\"\n\n\"Then get back here.\"\n\n\"I need to check my emails.\"\n\n\"You won't be able to walk. Don't bother. C'mere,\" he said, tugging me back. \n\n\"What makes you think I won't be able to walk?\"\n\n\"Because I made sure of it. Now get over here before you wake me.\"\n\n\"You are awake.\"\n\n\"I'm not. On-call forces you to...\" he yawned, not even bothering to finish the sentence. \n\nI bit my lip. I technically could get by without checking in until noon. If it was past seven then there were at least twelve supervisors on the floor by now, and all of them were senior agents that I'd promoted and personally trained. They'd be able to hold the fort down.\n\n\"Don't make me say it again.\"\n\nHe lifted the covers and I crawled back in. He was a real psycho. What kind of a person could hold a conversation in their sleep? It made me think about every single doctor's appointment I'd ever been to, wondering if those doctors also had this weird little superpower. Was it something they all just picked up in residency? Or was Wes just really a psycho? I was willing to bet it was the latter. \n\nI'd thought that I'd never be able to fall back asleep. Wes (even in his fucking sleep) seemed to sense it. He took me into his arms and stroked my back. It gave my sore muscles some relief, so much so that I closed my eyes in contentment and... \n\n\u2014\n\nThe smell of coffee could probably wake me from my grave. I rolled over in the soft sheets, my face turning in the direction of the delicious waft. I could almost feel my body tensing from the withdrawal. I needed professional help.\n\n\"Good morning.\"\n\nI opened one eye, squinting because it was way too fucking bright. \n\n\"Says who?\" I grumbled. \n\n\"Says me. Do you want some coffee or not?\"\n\n\"Help me up before it gets cold. I can't move.\"\n\n\"You're such a baby.\" Wes laughed as he slipped an arm under me and sat me up, supporting me against his chest. I don't think I really knew what was happening when he put a mug in my hands. I only know that I practically inhaled the coffee. \n\n\"Mmm.\"\n\n\"Adorable.\"\n\n\"Shut up.\"\n\nHe rubbed my shoulders while I began to wake up, and holy hell I was sore.\n\n\"You monster. You broke all my bones.\"\n\n\"Did I?\" He ran his hands down my naked body until I had to slap him away from touching the places that would definitely lead to inviting more soreness. \n\n\"I was just checking for injuries,\" he said innocently. \n\n\"Well, you're a terrible doctor if you can't see that I'm injured.\"\n\n\"Are you in pain?\" He sounded so serious that it made me want to laugh. \n\n\"Yes, doctor. It's just terrible. I may need morphine.\"\n\n\"Just to make things clear, I'm never writing you a prescription.\"\n\n\"Killjoy. I thought I was gonna get all the perks. I did sleep with you after all.\"\n\n\"I can't treat you if you ever get sick, but I can probably find out what's wrong. If it's bad enough I'll find someone to get a second opinion and they can write you a prescription.\"\n\nI laughed. Jesus, he was so serious about this. \n\n\"Why wouldn't you write me one?\" \n\n\"Because it's unethical.\"\n\n\"You know what's unethical? Letting your fuck buddy suffer.\"\n\n\"You are not my fuck buddy.\"\n\n\"What am I then?\"\n\n\"I can't believe we're having this conversation. I thought it was obvious.\"\n\n\"It's too early. I don't know what the hell you're talking about. Give it to me straight, doc.\"\n\n\"Let's not put a label on it.\"\n\n\"Done.\"\n\n\"I want us to be exclusive though.\"\n\nI looked up, having the rare opportunity to give him a shit-eating grin.\n\n\"Sounds like you want to be my boyfriend.\"\n\n\"That sounds so juvenile. Isn't there another word for it for adults?\"\n\n\"There is. It's called marriage.\"\n\nHe checked his watch. \n\n\"We could probably squeeze in a trip to the courthouse today.\"\n\n\"Ah ha ha,\" I said sarcastically. \"Shut up and let me enjoy my coffee.\"\n\nHe chuckled, pressing his lips to my temple. The feelings that churned in my belly were unimaginable. I leaned back against him, sipping coffee and smiling like an idiot. Just a week ago I was sitting miserably in my office, dealing with David from Underwriting breathing heavily through the phone receiver. I'd spent all morning walking the Floor with my walkie-talkie, mouthing off to people that probably didn't deserve it while everyone in the entire department was muttering \"Dragon Lady\" under their breaths. I couldn't remember if I was drinking shit coffee or if I was sipping the good stuff from 7 Leaves that one of the supervisors had picked up on a coffee run. Was it a styrofoam aftertaste or was it black coffee with sea salt foam? I don't even know. \n\nI just know I'm here now, that none of that matters, that I took a chance, that Wes wants me. Exclusive, haha. What even was that? A week ago I wouldn't have known. \n\nBut now I do. \n\n\"Hungry?\" he asked when I passed him my empty mug. \n\nHaving your brains fucked out typically makes you ravenous. \n\n\"I'm starving.\"\n\n\"What do you want to eat?\"\n\n\"What do you have?\"\n\n\"Leftover lasagna, avocados, and a fridge full of healthy food that you probably won't like.\"\n\n\"Gross.\"\n\n\"I'll go pick up something for you.\"\n\n\"You don't have to do that.\"\n\n\"I want to.\"\n\n\"I want to get out of this apartment. I don't want to sit around in bed all day.\"\n\n\"I kind of like having you naked in my bed.\"\n\n\"Shut up. Help me up.\"\n\nWes helped me up and made me do some stupid stretches that made me feel like I was on an old 90s fitness video. I was still naked, my cheeks reddening when I caught the hungry look in Wes's eyes. \n\n\"Please stop,\" I said, laughing. \"I can't do these anymore. I feel like I'm Richard Simmons' girlfriend.\"\n\n\"You can't have two boyfriends at the same time. You're forgetting that we're supposed to be exclusive.\"\n\nI rolled my eyes. \n\n\"Will you bring me my clothes from the living room?\"\n\n\"Your clothes are in the wash.\"\n\n\"I have a duffel bag downstairs with a change of clothes.\"\n\n\"You can't have it.\"\n\n\"Why the hell not?\"\n\n\"Because I don't want you in those clothes.\"\n\n\"What am I supposed to wear?\" I asked in mock bitterness.\n\n\"Something of mine,\" he said. He went to his walk-in closet (fancy pants) and returned with a t-shirt and boxers. \n\n\"I can't wear that out in public. At least let me wear a bra.\"\n\n\"We'll go drive-thru. And the shirt will be big on you. It'll be too loose for anybody to tell that you have incredible knockers.\"\n\n\"You're disgusting.\"\n\nHe grinned. \n\n\"Here,\" he said. He helped me into his clothes, and surprisingly the stupid stretches had worked. I was feeling like I could actually move now.\n\n\"I look like I'm wearing a circus tent,\" I said, looking down. \n\n\"Are you calling me fat?\"\n\nI raised an eyebrow. This guy had a runner's body. There wasn't a fat thing about him. \n\n\"I'm calling you gargantuan. Tall. Wide-shouldered. Whatever tickles your fancy. \"\n\n\"So... fat.\"\n\n\"Now you're just fishing.\"\n\n\"What can I say? I'm a narcissist. I need to be praised.\"\n\n\"Wouldn't surprise me. What time is it?\"\n\n\"Almost ten.\"\n\n\"Great. Taco Bell. Let's go.\"\n\n\"How about Chipotle instead?\"\n\n\"Stop dictating my eating habits. Maybe I don't want the healthier option.\"\n\n\"They have really good guacamole.\"\n\n\"You know too much about me. Stop using it against me.\"\n\n\"I'm not using it against you. Empty calories will just make you feel like shit later.\"\n\n\"Stop doctoring me, you health nut. I'm considering revoking your boyfriend card now.\"\n\n\"I'm considering kicking your ass.\"\n\n\"Domestic violence already. I like it.\"\n\nHe laughed. \n\n\"If you really want Taco Bell then fine, we'll go to Taco Bell.\"\n\n\"I'm kinda feeling Chipotle now. The guac is calling to me.\"\n\n\"You're impossible.\"\n\nThe stretches actually had helped a lot. I was able to make it down the stairs without dying. Wes hovered over me like he was some parent with a video camera recording my first steps. I wasn't used to someone... caring.\n\n\u2014\n\nThe Chipotle was less than five minutes away. The area was so beautiful that I wondered why the hell I didn't live here, but then again a one and a half hour drive to work would probably kill me. The 91 and then the 55 in the morning. What a nightmare. \n\n\"Why did you choose to live here?\" I asked.\n\n\"The rent is cheap and it's only twelve miles to work.\"\n\n\"No, it's not. I write policies for this zip code. Even the renter's insurance policies are through the roof.\"\n\n\"There was a fire at my complex a few years before I moved there. No one wants to live there, hence cheap rent. The apartments by the hospital are more expensive, actually.\"\n\n\"So you got lucky.\"\n\n\"I got lucky in many ways,\" he said, glancing at me. \n\nI don't think I was ever going to truly understand what this guy saw in me. He was cheesy as hell, but I liked it. \n\n\"I'm not going inside in this,\" I said when we'd parked in front of the Chipotle. A circus tent and a pair of boxers. No thanks.\n\n\"You don't have to. Text me your order.\"\n\n\"You gonna let me pay?\"\n\n\"You already know the answer to that question.\"\n\n\"I'm too hungry to argue with you. I'll get you back. Maybe like a ridiculously expensive Christmas present.\"\n\n\"I'll break up with you before Christmas and we'll get back together after the new year.\"\n\n\"Get out.\"\n\n\"I'll be right back,\" he said with a grin. \"It's gonna have to be a burrito bowl though. No burritos.\"\n\n\"Gross. I don't want a salad.\"\n\n\"It's the same thing without the tortilla.\"\n\n\"I want the tortilla.\"\n\n\"I'll order a tortilla on the side then.\"\n\n\"I don't see how that makes a difference.\"\n\n\"It might. Text me your order.\"\n\nWhite cilantro rice, black beans, steak, corn salsa, sour cream, hot salsa, cheese, lettuce, and extra extra extra guac. Simple order if it wasn't for the fact that it was going to be a damn salad. I texted all that to him, including the part about it being a damn salad. \n\nHe didn't answer. Asshole. \n\nHe was in and out of there in ten minutes. I guess there's no rush this early in the morning. I'll give you one guess of what he brought for a drink because I know you'll only need the one: \n\nWater. \n\n\"You're just going to have to feed me again in a few hours. Salads don't fill me up.\"\n\n\"So I'll feed you again in a couple of hours. Eat your burrito bowl. I don't want to eat alone.\"\n\nI popped off the lid and tried to look more annoyed than I actually was. It wasn't a bad salad because it was literally everything that I got in my burritos. And he did get me a tortilla on the side as promised.\n\n\"Do you have to check in with your work? I know today was probably a workday for you. Sorry to keep you from it.\"\n\n\"It's okay. I haven't taken a personal day in a long time. I'll just check the call stats and answer a few emails if I have to, but otherwise my supervisors should be able to hold things down for a day,\" I said, grabbing my phone. \n\n\"Call stats? For the call center?\"\n\n\"Yeah. I check the stats remotely. They go over our hold times and transfers and after-call work and things like that. There's a quota for all of that. I monitor it pretty closely because it's the most important aspect of our jobs, second only to servicing the customers of course. I keep a lot of supervisors, probably more than I should, so I can break up the agents into smaller teams to boost efficiency. They get a lot more personal assistance and guidance from their supervisors that way.\"\n\n\"I'm starting to see what kind of boss you are.\"\n\n\"Yeah, a mean one.\"\n\n\"That's my favorite thing about you,\" he said. We shared a smile. \n\nI was logging in remotely through my phone, flipping through the bullshit authorizations until I found the call stats. \n\n\"What the fuck?\" I dropped my fork. \n\n\"What? You okay?\" Wes asked, sitting up. \n\n\"The hold times are through the fucking roof. I need to call in and see what the hell is going on. Do you mind?\"\n\n\"Nope. This should be entertaining.\"\n\nThe odds of the supervisors being at their desks were extremely low. I knew they were probably running around losing their fucking minds, hoping to God that I wasn't about to walk in through the doors. I called the main department line for the secretary. She was usually at her desk\u2014that was her fucking job. \n\n\"This is Darlene.\"\n\n\"I'm going to kill you.\"\n\n\"Celine?\"\n\n\"Why didn't you call me?\"\n\n\"Um\u2014\"\n\n\"You knew I'd find out eventually.\"\n\n\"They told me not to tell you.\"\n\n\"Who told you?\"\n\n\"The supervisors.\"\n\n\"They don't have the authority to do that.\"\n\n\"I didn't know.\"\n\n\"Yes, you did. Now get me a supervisor before I come down there and fire you.\"\n\n\"Right away.\"\n\nI didn't even bother picking up my fork again. I'd completely lost my appetite. Why the hell would the hold times be five times below goal? That made no sense. We hardly ever went below goal; the worst we'd ever been was six percent below goal. This was five hundred percent in the negatives. This was a fucking nightmare. There were so many precautions, so many procedures and backdoors to prevent all of this. How was it possible to fuck up this badly within three hours of opening? \n\n\"I'll never get over how hot you are when you do that,\" Wes said, pulling me out of my thoughts. \n\n\"You should plug your ears. You're not going to want to hear this. It'll change your whole perception of me.\"\n\n\"You're acting like I've never seen you dehumanize an employee before,\" he said, grinning. God, he liked it. \n\nI'd been listening to the hold music for so long that I'd already heard it looping four times. It was just pissing me off. I was considering driving down there and bursting in through the doors wearing Wes's boxers and oversized shirt. They already think I'm crazy anyways. \n\n\"This is Paul.\"\n\nFucking seriously? Paul doesn't know shit about shit. He wouldn't know how to handle this.\n\n\"Not you, Paul. Get me somebody else.\"\n\n\"I can handle this, Celine. Tell me what to do.\"\n\n\"No, you can't. Get me Lisa.\"\n\n\"On it.\"\n\n\"And I better not hear that annoying hold music for more than three minutes.\"\n\n\"I'll get Lisa.\"\n\nWes was enjoying this a little too much. He'd even put his fork down to give all his attention to my meltdown. \n\n\"I feel like I should have some popcorn for this,\" he said. \"This is the most entertaining thing I've witnessed in a long time.\"\n\n\"Glad to hear that the end of my career amuses you so much.\"\n\n\"This won't end your career.\"\n\n\"No, but I'll have to answer for it. It's my fault I promoted fucking idiots.\"\n\n\"I'm sure they're not idiots. Maybe it's just something complex that they don't know how to handle.\"\n\n\"I could've forgiven that if they'd just called me. These stats have been plummeting for the last three hours.\"\n\n\"Oh, then definitely fire them. Fire them all.\"\n\nMy laugh was hollow and dry, but it was still a laugh. \n\nWes took my salad out of my lap and turned it onto my tortilla with meticulous care, his fingers holding down the sides, wrapping them up. \n\n\"What are you doing?\"\n\n\"Making you a burrito to make you feel better.\"\n\nThat was about the nicest thing anyone had ever done for me. All he'd done was turned my salad into a burrito, but the sentiment meant so much to me. I was used to my emotions being in overdrive in situations like this. They were always the bad emotions, the ones controlled by unhappiness and bitterness. It was the person I needed to be to be successful at my job. I had to be ruthless. But I'd also had to sacrifice a lot. \n\nLike my humanity.\n\nBut here was Wes, handing me my humanity back in a burrito. He could tell I was touched. He brushed my cheek with his thumb. It was a gesture I'd never understood before. Why did people do that? But I was understanding it now. It was innocent. Affectionate. Like just a tiny little touch was still more than enough.\n\n\"This is Lisa.\"\n\n\"I should fire you,\" I said, forgetting everything about humanity the second I heard her voice. She was responsible for this. Jesus Christ, she better have a good explanation.\n\n\"I'm so sorry. I've been dealing with this all morning.\"\n\n\"You should have called me.\"\n\n\"You never take any time off. I didn't want to call you and bother you.\"\n\n\"You not calling me is bothering me. Tell me what's going on.\"\n\n\"Portal is down again. Customer Service and Insurance systems are completely at a standstill.\"\n\n\"Great. What are you doing to rectify that?\"\n\n\"I'm on hold with IT. They're working on it.\"\n\n\"And what's happening to all the calls?\"\n\n\"They're on hold.\"\n\n\"Jesus fucking Christ, Lisa. You'll run us into the ground. You're my senior supervisor. We're not paying you to sit around on your ass waiting on IT to keep the department running every time Portal crashes. We just went over this the other night. What the hell is wrong with you?\"\n\nAh, there goes my temper. I'm known as the Dragon Lady for a reason.\n\n\"I didn't know what else to do.\"\n\n\"I trained you for this. You should know exactly what to do. Get a pen and paper and jot this down.\"\n\n\"Portal's never been down this long before.\"\n\n\"You should still be able to think on your feet and figure this out. It's a simple fix. Got that pen and paper?\"\n\n\"Yeah.\"\n\n\"We just went over this the other night, but I'll go over it again. Pay attention to every word I say because I'll be thorough. If Insurance and Customer Service are down then so is Claims. Same system. The adjusters won't be able to keep up with this volume. We're too backed up. Route all new claims calls to Customer Service. Hand out the manual claims sheets. They're easy to fill out. Just answer the questions and fill in the blanks. Darlene will have a copy. Get all bull-pen agents off the phones and have them make copies, scan and email the claims sheets to adjusters before the end of the day. Absolutely zero, and listen to me Lisa, zero bull-pen agents are to be on the phones. Keeping up so far?\"",
        "\"Yup.\" I could hear her breathing heavily. I didn't care. I couldn't believe I was having to explain these basic fucking things to her. She should know this. \n\n\"Okay, let's deal with billing now. Roadside Assistance, Accounting and Retention Team are all capable of charging cards. You should already know they don't run on Portal. Transfer to them for payments. I'll send out a mass email. Branches run on Portal too, but you can still send customers down there if they want to pay manually or with cash. Still keeping up?\"\n\nSeriously, another basic fucking thing. Does our department not spend all day transferring calls? Why the hell am I even having to explain this to her? I knew Lisa. I'd promoted her. She could do this job, but this morning she froze. There was no other explanation. \n\n\"Yes, Celine. Gotcha.\" \n\n\"Gather the senior agents, anyone who's been with the company for longer than five years, and pull an emergency meeting. Instruct them all to run the old terminal INS system for all policy amendments and have all insurance amendment calls routed to them. I'll email you my key code so you can override and have policy amendments approved as soon as possible. This is a huge deal, Lisa. Don't abuse this power. I'm giving you authorization to make these approvals on my behalf. Make sure they're all correct before you approve them.\"\n\nI wished she would have called me three hours ago and asked me about this herself. I would have given her my key code. It was the obvious thing to do. But the fact of the matter was, it wasn't obvious to her at all. I was starting to question what the hell kind of farm animal circus show I'd hired. \n\n\"Got it.\"\n\n\"I don't want the rest of the insurance agents sitting on their asses. Have them handle the transfers and answer every single call. Make sure they're taking some of the load for those claims calls. Have the claims processed immediately, no callbacks. Offer callbacks in Customer Service and Insurance where you can and make sure you return each of those calls before the end of the workday. No discounts, just apologies. I'll handle those myself. I know I'm going to have complaints so log them and leave them on my desk. Give a three to five business day turnaround. If any complaints are regarding policy cancellation then give that precedence and give them a forty-eight-hour turnaround. Some of those cancellations will be regarding driver's records or failed home inspections. Just get those over to Underwriting. I'll email David to let him know what to expect.\"\n\n\"Okay. Anything else?\"\n\n\"Call Texas and New Mexico. They have some agents licensed to service California policy holders every other weekend. Talk to the site managers. Ask if they can lend us some of those agents, but their answer may be no if their volume is too high. That's fine too. Worth a try. I'll email them to get them up to speed, but I don't know how often they check their emails so call them. Darlene will have their numbers.\"\n\nShe wouldn't have known this. I would have been able to tell her if she'd called me three fucking hours ago, though.\n\n\"Call Texas and New Mexico. Got it.\"\n\n\"Do I need to come down there?\"\n\n\"No, no,\" she said immediately. I'd probably make their lives a living hell in person. \n\n\"Alright, last few things. Hang up on IT, they don't understand the meaning of the word 'prompt'. Three hours on hold, Jesus Christ. Send a supervisor down there to handle this personally. And delegate, Lisa. Don't do this all by yourself. Figure out which task is best suited for which supervisor. I want you on those amendment approvals through INS. I'm not going to be repeating any of this so pull the recording of this call after you set the tasks to make sure you haven't missed anything.\"\n\n\"I don't think we have enough agents on the floor to handle this volume. We've been backed up for hours.\"\n\nThe one useful thing that's come out of her mouth. Just the one. \n\n\"Yeah, you're right. Have Scheduling call agents who have worked less than six days in the last eight to see if they'll pick up a shift. There should also be a few Customer Service agents in licensing classes for Insurance. Pull them out for the day and get them on the Customer Service lines. I'll authorize overtime. Twelve hours total for anyone that wants to stay. That's time and a half. Ignore all meal waivers today. Make sure everyone takes their breaks and keep those lunches within that five-hour mark. There are a lot of agents to keep up with. Call in every supervisor that's off. Call the evenings in early. You are all responsible for your agents. If I get hit with a single labor law violation fine, I'll hold each and every one of you personally responsible. And order pizza for the department. Put it on the company card. I don't want them eating at their desks between calls though. Have them take their lunches off the Floor.\"\n\nNow this was all me talking. These were my orders. She wouldn't have been able to authorize any of this without my approval. Still, if only she'd called instead of sitting around for IT and hoping I wouldn't notice, then I might've had the opportunity to save us from that five hundred percent plummet. Fucking hell. \n\n\"I'll do that. Thank you for being so in-depth. I don't know what I would have done otherwise.\"\n\n\"This is why you should have called me. Lesson learned?\"\n\n\"Yes.\"\n\n\"I think that just about covers all of it. I know you know how other departments work on other systems. I know you know which ones are capable of handling billing. I know you know that the old terminal systems are still capable of making policy amendments, and I know you know we have senior agents that know how to use it. I know you know what cancellations should be routed to Underwriting. You really need to learn to think on your feet. I take all this into consideration when reviewing promotions and transfers. Don't let me down. And delegate.\"\n\n\"I'm so sorry, Celine. I just didn't\u2014\"\n\n\"Don't be sorry. Fix this. Call me in half an hour with an update. Give me good news and I won't come in.\"\n\n\"Okay, Celine. I'll call you in half an hour.\"\n\n\"I'm watching these stats.\"\n\nI heard her sigh. \n\n\"I know.\"\n\n\"I'm counting on you.\"\n\n\"I won't let you down.\"\n\n\"That's what I like to hear. Keep your head up. You can do this.\"\n\n\"Thanks, Celine. I'll call you soon.\"\n\nI put my face in my hands and groaned. One day. I'd just like one day where I can go without being ass-deep in work. It was unbelievable how much hand-holding I had to do just to keep things running smoothly. Even after all those management courses (which was fucking generous of me considering that they could have that under their belt for advancement opportunities in the future) they were still fucking up. And what the hell was the deal with them telling Darlene not to call me? And what the hell was her deal for listening to them?\n\n\"That was a lot.\"\n\nI looked up. \n\n\"What?\"\n\n\"It just sounded like you knew everything there was to know. It comes naturally to you, but I don't think it's like that for other people. I heard you tell your employee that it was a 'simple fix' but none of that sounded simple to me. You should cut them some slack. You're a superhero. They're just human.\"\n\n\"The thing is, Lisa does know these things. She knows all about how the other departments work and what systems they run on. The fact that she didn't know where to transfer calls was mind-boggling. That's basic agent knowledge. They transfer calls all day. And the fact that she didn't even remember one of our own systems can still pick up some of the workload just\u2014I don't know. I think I went pretty easy on her considering how massively she fucked up.\"\n\n\"Maybe she just froze.\"\n\n\"I can't ever afford to freeze and neither can she. I should have gotten a call three hours ago notifying me of the situation, asking for overtime authorizations and overrides for policy amendment changes.\"\n\n\"You know I don't know half these terms you're using.\"\n\nI laughed. \n\n\"Sorry, this whole thing probably made no sense to you.\"\n\n\"That's okay. I liked listening. I had no idea how much went into your job. I can see why they pay you so much.\"\n\n\"You have no idea how much they pay me. It could be peanuts for all you know.\"\n\n\"Peanuts don't buy a Tesla Model S.\"\n\n\"It's a lease.\"\n\n\"Same thing.\"\n\n\"Actually\u2014\"\n\n\"Shut up, insurance lady. Eat your burrito. I went through a lot of trouble to make it for you.\"\n\n\"You wouldn't have had to go through any trouble if you'd just ordered a burrito to begin with.\"\n\nWes rolled his eyes. \n\n\"Unbelievable.\"\n\n\"I'm kidding.\" \n\nI slid my legs under me on the seat and leaned over, taking Wes by his shirt, tugging him close. \n\n\"How can I ever thank you?\" I asked. \n\nWes put his bowl on the dash, grabbed me by the hips and slid me right onto his lap. \n\n\"I can think of a couple ideas,\" he said. \n\nI straddled him. \n\n\"I mean, if we get arrested for public indecency then it's all your fault.\"\n\n\"I don't care,\" he said huskily, sliding his hands under my (or his?) shirt, warming me by his touch, making me sigh and lean into him. \n\nWe were pretty lucky the shirt was so baggy on me. His hands went to all the places they definitely shouldn't in a public setting; on my breasts, his thumbs flicking, his fingers pinching, cupping and squeezing\u2014driving me wild. My knees began to quake from the pleasure, heat pooling between my legs, making me want him so so so bad.\n\n\"Please, let's get out of here,\" I begged. \n\n\"Shh. I'm enjoying this.\"\n\nHe pulled me close, kissing my neck, his mouth wet, hot, nipping, sucking; doing all the things that made me feel faint. \n\n\"Wes,\" I gasped. \"Wes, please.\"\n\n\"You get so polite when you're turned on,\" he said, smiling against my neck.\n\n\"What are you talking about?\" I asked, shivering as he kissed down my throat. \n\n\"All the 'please this' 'please that',\" he said. \n\n\"I guess I'm just a lowly beggar woman then.\"\n\n\"I'll give you anything you want. You don't have to beg,\" he said.\n\n\"And yet I do.\"\n\n\"Maybe you're just submissive in bed. It would make sense since you're so dominant outside of it.\"\n\n\"Are you trying to analyze me, Mr-Not-A-Psychiatrist?\"\n\n\"Might be.\" \n\n\"You're under-qualified for the job.\"\n\n\"Do you ever stop talking?\"\n\n\"Shut me up if it bothers you so much.\"\n\n\"I think I'll take you home first,\" he said, starting up the engine. \"But I won't shut you up. I'll make you scream.\"\n\n\u2014\n\nWe didn't make it to his apartment. \n\nStill in the car, parked in his dark garage, I shimmied out of his boxers and straddled him again, biting my lip when I felt his stiff erection between us, straining against the fabric of his sweatpants. \n\n\"Celine,\" he said, hands coming to rest on my waist. He ground his hips upwards, making me gasp from the sudden mind-numbing pleasure. I was so wet that I left a streak on his sweatpants, slick and ready for him. \n\n\"You're perfect,\" he said, lifting his shirt up my body, exposing my breasts. \"So perfect.\"\n\nI rolled my hips when he took one of my nipples in his mouth, my fingers finding their way into his dark hair, gripping him tight, bringing his head down closer. His mouth was hot and wet, his teeth sinking softly on my nipple, sending a jolt down my body, right to my pussy, making me so fucking wet that I creamed myself. He tortured me with his mouth, switching from one nipple to the other, rolling his tongue, using his teeth, sucking and licking and making me moan so suddenly and so loudly that my cheeks reddened in embarrassment. \n\n\"Adorable,\" he said, looking up at me. \n\n\"I need you,\" I said, reaching for the waistband of his pants. \n\n\"I know you do,\" he said hoarsely, helping me roll his waistband down until his cock sprang free. He didn't say anything, didn't give me any warning whatsoever, lifting me by the hips, his big tanned hands spanning my caramel skin, lining his cock up with my pussy, his eyes burning dark as I finally sank down onto him. He was rock hard, throbbing inside of me, thick and long. \n\nHe kissed my shoulder, looking up at me with those darkened eyes, making my heart stop. It was like all the water of the last twenty-eight years was rushing inside of me, hooking me by the ankles and pulling me down, down, down into the ocean of his eyes, sinking me underwater for just one terrifying second. \n\n\"You're safe with me,\" Wes said softly\u2014and my head rose above water. \n\nHe was gazing into me, into my center, into my soul, connecting with me on another level, venturing where no man had ever been before. He kissed me, rough yet slow, drawing a ragged breath whenever I moaned, biting down on my lip when my pussy fluttered. We weren't even going fast, weren't even as hurried as I thought we'd be, and yet I was close. Really close.\n\n\"You need to come, don't you?\" he said, twisting one of my arms behind my back. I looked at him, confused, about to open my mouth and ask what he was doing, but then he was holding me in place, suddenly snapping his hips up, pounding into me, knocking the last of the air out of my lungs. \n\n\"Please,\" I begged. He punished my body, fucking me like I'd hurt him and he wanted to hurt me back. I fucking loved it, loved the pain, loved the passion, loved the way he made my pussy squeeze tighter and tighter. Close. So close. \n\nHe moved my hips back and forth, pounding into me at different angles until I stiffened. \n\n\"Oh god, please!\" I cried. \n\n\"Right there, huh?\" He jerked upwards, sharply hitting that sensitive spot again and again.\n\n\"YES!\" I'd never been a screamer, yet here I was. I don't know what I said after that, only that whatever incoherent babbling that left my mouth was enough to inspire Wes to fuck me raw, hitting my g-spot so roughly that within just a few seconds, I cried as I came. \n\n\"Oh, fuck,\" Wes rasped, fucking me through my orgasm, refusing to stop. I sobbed, coming and coming and coming, my entire body trembling when Wes finally slowed. I felt his cock thicken inside of me, jerking and pulsing as he came, groaning into my ear, making my pussy flutter from the sound alone. Ugh, he was so fucking hot. \n\nWe didn't say anything for a while, just breathed heavily, our chests rising and falling. Wes's forehead touched mine, his pupils blown wide, his gaze like fire, burning my skin. We studied each other, blinking slow, like time had been paused, like all that remained in this world was the two of us, Bonnie and Clyde, two fucked-up people with crazy lives, gunning down anyone who got in our way with words, harsh words, protecting ourselves from the world. \n\nAnd so I kissed him, his lips tasting like Nirvana, like happiness and euphoria and paradise and heaven all rolled into one chest-aching feeling. My eyes pricked with tears as he took my face in his hands, his fingers slipping into my hair, kissing back so tenderly that I felt it in my center, right where the little girl inside of me resided\u2014the girl stunted by the abuse, by the pain that had been inflicted by the foster parents she should have been able to trust. That little girl was always there, in the back of my mind, crying herself to sleep every night, jumping at the tiniest unfamiliar touch, and drowning in all the feelings, so deep that sometimes it felt as if she'd died. \n\nWes could've asked me why tears were suddenly running down my cheeks, but there was something special about this guy. He seemed to sense my feelings, seemed to sense that I needed the sanctuary of silence, that I wanted nothing more than to be kissed until all of my worries could be forgotten. \n\nSo there we stayed, in his car in the dark garage, kissing away all of my pain. \n\n\u2014\n\n\"Celine, I swear I've been trying to call you for the last hour,\" Lisa said, sounding scared out of her goddamn mind.\n\n\"It's okay, it wasn't your fault that I was busy,\" I said, pulling Wes's boxers back up over my hips. \"Give me an update.\"\n\n\"Portal is back up. I'm monitoring the hold time stats. We're going back up. Still below goal, but as long as we can keep up with the volume for the rest of the month, we might get close to getting out of the red. I did the math and everything. Right now, I'm personally handling the amendment approvals and some of the urgent complaint calls. I\u2014Honestly Celine, I don't know how you do it.\"\n\n\"The same way you just did,\" I said with a smile, hoping she'd hear it. \"I think the department would have gone up in flames without you, Lisa. I'm proud of you for your hard work today.\"\n\n\"Thanks, Celine,\" Lisa said, and I could hear her smile too. \"Want me to keep you updated today?\"\n\n\"No need,\" I said. \"I trust that you've got this.\"\n\n\"I do.\"\n\n\"I'll just check the stats periodically. Keep doing what you're doing.\"\n\nWes slid me back onto his lap as I ended the call. He hooked a lock of my hair behind my ear, his gaze soft and adoring, smiling at me even though I hadn't said or done anything. He was just a happy person by default. I'd never been much of a smiler, but I found myself smiling around him. A lot. \n\n\"We should go inside and finish our lunch,\" I said. \n\n\"Sure,\" he said, but neither of us moved. Instead, I found myself kissing him again, taking in the scent of his intoxicating aftershave, opening my mouth, letting him slide his tongue along mine, tasting each other. We made out like a couple of teenagers, smiling against each other's mouths when we both realized that he was hard again. \n\n\"Come on,\" he said, opening the car door. \"Let's get out of here before I destroy your body.\"\n\nI reached over, closed the door, and let him destroy it. \n\n\u2014\n\nWe spent the afternoon together, passing the time with laughs, genuine laughs, talking about everything and nothing, sitting cross-legged on the floor of his living room, playing chess. I'd never been very good, and I was pretty sure Wes had suspected as much because he was going extremely easy on me. \n\n\"You're cheating,\" I said. \n\n\"Cheating how? I'm not even winning!\"\n\n\"You're doing it on purpose. That's cheating.\"\n\n\"You and I have very different definitions of that word, Celie.\"\n\n\"Ugh, don't call me that.\"\n\nHe moved his knight, immediately threatening my king. The knight and king had been in those positions for quite some time. I realized that he'd purposefully been holding back. \n\n\"Cheater!\"\n\n\"Check,\" he said, chuckling. \n\n\"I fucked up,\" I said, looking over the board. \n\n\"Make your move, Dragon Lady.\"\n\nI moved my king one square to the right. \n\n\"Checkmate,\" Wes said, the corners of his mouth twitching. He wanted to laugh at me. Of all the directions I could have moved, I picked the one direction that put me in his bishop's path with nowhere else to go. I was an idiot. \n\n\"You already had a checkmate,\" I pointed out.\n\n\"You could have gone left. Too late now.\"\n\n\"You could have ended this game a long time ago.\"\n\n\"Where's the fun in that? Plus, your concentration face is pretty cute.\"\n\n\"Me, cute?\" I said, rolling my eyes.\n\nWes frowned. \"I've been meaning to talk to you about that.\"\n\n\"About what?\"\n\n\"I highly doubt that you think you're less than average in the looks department. I know you know, Celine. I don't understand why you're in denial.\"\n\n\"I'm not in denial,\" I said uncomfortably. \n\n\"Then what is it? Why do you always react that way when I compliment you on how you look?\"\n\n\"I don't want to talk about it.\"\n\nWes sighed and ran a hand through his hair. \n\n\"That's not gonna work for me,\" he said. \"We have to communicate. That's how relationships work.\"\n\n\"Don't try and tell me how a relationship works. I thought we were supposed to respect each other's boundaries. You're crossing mine.\"\n\n\"By telling you that you're cute? That you're beautiful?\"\n\nI got up, but Wes caught me by the wrist.",
        "\"Don't go,\" he said pleadingly. \"Let's at least talk about this.\"\n\n\"There's nothing to talk about. Just don't talk about how I look. That's literally the only thing I've asked of you, Wes.\"\n\n\"That's an absurd request to ask of your boyfriend.\"\n\n\"Maybe you shouldn't be my boyfriend if it's so hard for you to understand.\"\n\nWes tugged me back down, pushed away the chessboard with his free hand and then pulled me into his arms. \n\nHe took my hand and placed it over his heart. \"I get that you're mean, but that one hurt.\"\n\nI felt the thud of his heartbeat beneath my palm. He was vulnerable, looking at me with those dark blue eyes, reading me and my emotions. I felt a surge of affection for him, and with it followed my shame. \n\n\"I'm sorry, that was harsh.\"\n\n\"Don't be sorry,\" Wes said. \"Look, in my profession, information, or lack thereof, can often be the difference between life and death. As a doctor, I've become used to needing to know everything. Except, in this instance, I don't need to know. Your business is your own. I'm the one who should be sorry, Celine.\"\n\nSo that was why he was so pushy. When it came to small lives, every little detail mattered, every little fact, every little truth. Out of habit, Wes had become a pushy person, needing to know everything, even the things that were too personal to share. \n\nBut you could always share things with your doctor, couldn't you? Doctors could be trusted. \n\n\"I was four years old when my parents died in an airplane crash. It was a freak accident on a small plane. I don't even remember them,\" I said, my throat going thick. \"For the first five years of being in the system, I had the belief that I would find my new forever family. I wanted to be adopted so bad. I used to pray every night and then cry myself to sleep, begging whatever powers there were in the universe to grant me my prayers.\"\n\nWes listened quietly, his gaze soft. \n\n\"When I turned sixteen, I was sent to go live with a couple in Anaheim. They were absolutely garbage human beings. There were five other foster kids in their house. We were nothing more than government checks to them. \n\n\"I had this problem back then. I could only eat alone in the bathroom, or I wouldn't eat at all. I was sent to therapy, and it turned out that I didn't like eating around other people because I was used to having my food taken away\u2014thanks to one of the foster homes I'd lived in briefly when I was six. I started hiding my food and eating it away from everyone else after that, and the habit just sort of... stuck.\n\n\"On my eighteenth birthday, I didn't get a party, no cake, no presents, nothing. My social worker was coming to pick me up the next morning, so I wasn't expecting much. You can imagine my surprise when my foster parents brought home pizza. They didn't care that it was my birthday. I think it had just been a coincidence, but to me, that was the best birthday gift I could have ever received because I\u2014I fucking loved pizza,\" I said, laughing with a sniffle. \"Still do.\"\n\nWes kissed my temple, saying nothing with his mouth, but through his eyes, I could see that he was trying to say that he understood my pain, that he knew I was about to tell him something that could very well break his heart. \n\n\"Anyway, I, of course, snuck a slice of pizza into the bathroom. Just a single slice. I'd only eaten half of it when the bathroom door banged open, and there stood my foster dad. \n\n\"He looked really angry, calling me a worthless piece of shit, going on about how disgusting I was for eating in the bathroom again. He walked over, stuck a finger down my throat and made me throw up my dinner into the toilet. I cried for hours. I thought my foster dad felt sorry when he told me I could sleep on the couch and stay up late watching tv. I genuinely thought that he was trying to make it up to me, but...\"\n\nI stopped, unable to continue. \n\n\"He raped you that night, didn't he?\" \n\nI nodded, tears streaming down my face. \n\n\"The whole time he kept saying how beautiful I was.\"\n\n\"That's sick,\" Wes said, his entire body stiff, the muscles of his arms rippling as he tightened his hold of me. Time seemed to stand still, all the seconds blurring, coming to a stop as Wes and I tried to make sense of the world out there, of the terrible people who existed out in broad daylight, going about their lives after committing unspeakable acts. \n\n\"So you see, being plain is my shield,\" I said. \"It's never been about whether or not I knew that I was beautiful.\"\n\n\"Celine Gutierrez,\" Wes said, taking my face in his hands. \"You are more than what you think you are.\"\n\n\"Yeah?\" I said, laughing a hollow, humorless laugh. \"What am I then?\"\n\n\"Beautiful,\" he said, making my heart hurt. \"Your beauty does not belong to him. It does not belong to tragedy. It does not belong to pain. It belongs to you.\"\n\n\"It still hurts to hear it,\" I said, my lips trembling. Wes kissed me, his mouth familiar and comforting, soothing me before he pulled away. \n\n\"We'll work on it,\" he said. He stroked my hair as I snuggled into his arms, relying on him for support. I'd never done that before. It should have scared the shit out of me, but instead, I found myself letting my guard down, becoming just as vulnerable as the man who wore his heart so unapologetically on his sleeve: Wes. \n\nI'd never told anyone these things before, not even Addie or Rita. I'd carried my pain like a dark secret in the center of my chest, keeping it to myself so that no one else would have to witness my shame and humiliation. I hated being pitied more than anything. I'd spent a lifetime being pitied as the poor orphan girl. \n\nBut Wes was right. I was more than what I thought I was. \n\n\"How do you just get all of my secrets out of me?\" I asked, offering him a small, watery smile. \n\n\"It's very simple, Dion. I ask. You answer. That's typically how questions work,\" he said with the goofiest smile I'd ever seen on a person.\n\nAnd I laughed and laughed and laughed, so hard that Wes couldn't help but laugh with me, holding me as we fell over on the floor together, lying there like a couple of idiots in the middle of his living room. We laughed even after it wasn't funny anymore\u2014and I guess there was something funny about laughing without anything funny happening, so we laughed some more.\n\nWe laughed until it hurt to laugh, then we kissed, then we got undressed, and then... dot, dot, dot.\n\n\u2014\n\nI woke up with a jerk in the darkness, terror spiking through my veins. I couldn't recognize my surroundings. \n\n\"Celie, baby, it's okay,\" I heard Wes say. I realized I was in his bed, but he wasn't beside me. I squinted my eyes in the dark room, looking around. \n\n\"I'm headed to work,\" he said, walking over to me from across the room. He was dressed in his hospital scrubs. \n\n\"It's two in the morning,\" I said, checking his alarm clock. \n\n\"I know,\" he said, lifting the covers and sliding in next to me. He gathered me into his arms. \n\n\"Why are you leaving so early?\"\n\n\"My shift starts at three AM, babe. I wish I didn't have to go, but my patients...\"\n\n\"It's okay,\" I said, leaning my head against his chest, listening for his heartbeat again. I loved the sound of it, how powerful and strong it was. It reminded me that Wes was real, alive, not just a figment of my imagination. \n\n\"Go back to sleep,\" he said, rubbing my back. \"I'll be home around four in the afternoon.\"\n\n\"You can't honestly expect me to stay alone at your apartment all day,\" I mumbled sleepily, yawning and stretching out like a cat. \n\nHe kissed the top of my head. \"It would be nice to come home to you.\"\n\n\"You can,\" I said. \"Come to my place after you get off work. I live ten minutes from CHOC. It'd be more convenient for you, I think.\"\n\n\"Anywhere I can find you is convenient for me.\"\n\n\"Wes.\"\n\n\"Celine.\"\n\n\"Kiss me.\"\n\n\"I think I will.\"\n\nAnd he did.\n\n\u2014\n\nI slipped out of my shoes by the front of my door, placing them carefully on one of the rungs of the shoe rack bench that I'd bought from IKEA and built one drunken evening with a glass of red wine and Lana Del Rey playing in the background. \n\n\"Blue jeans, white shirt, walked into the room you know you made my eyes burn.\"\n\nI hummed the song as I placed my keys on the counter and made myself some coffee. It was a bold Italian dark roast, and it was fucking euphoric. It was almost scalding, but I practically gulped it down. I was drinking down my long drive from Wes's apartment. On regular days, it was a twenty-minute drive, but with the 91 traffic backed up, it had taken pretty much double the time. \n\nI casually checked the call center stats from my couch, stretching out and plopping my feet on the coffee table. Everything was looking good today. The call center was above goal. Lisa was off today, but Bethany was there as her stand-in. She was a little on the chatty side, but Bethany was a good worker and had prior managerial experience. I would have given her the senior supervisor position, but she hadn't even been a supervisor at the time. She'd been an agent, hungry as me, hungry as that kid Ralph, just waiting for her chance. I'd promoted her six months ago, and already her team had some of the highest numbers.\n\nI decided to call her and check in. \n\n\"Thank you for calling, can I please put you on a brief hold?\"\n\n\"Absolutely not,\" I said. \n\n\"Oh, Celine! I didn't realize it was you.\"\n\n\"Surprise,\" I said without any enthusiasm. \n\nBethany laughed. \n\n\"Another one of those mornings, huh?\" she guessed. \n\n\"I'm just barely having my morning coffee.\"\n\n\"Oh, dear,\" Bethany said sympathetically. \"And it's already ten. What a tragedy.\"\n\n\"Shut up. Give me the morning report.\"\n\n\"Stats are looking good, but you already know that. We've had six calls escalated to the Complaint Line, but they were all related to yesterday's hold times. Supervisors have been on it, reviewing those accounts to see if there's anything we can do to lower their premiums. No discounts or anything, just a review to see if they qualify for an existing offer. I was today-years-old when I found out that we offer discounts to credentialed teachers.\"\n\n\"And doctors, nurses and lawyers.\"\n\n\"Lawyers?\"\n\n\"According to the California Department of Insurance, yes, lawyers.\"\n\n\"I didn't know that... I should call my brother-in-law. He's a lawyer.\"\n\n\"He'll qualify for a discount from any insurance company that put in the amendment request to the CDI.\"\n\n\"He's insured with us.\"\n\n\"Well, call him up then, I guess. There's nothing else I need to know?\"\n\n\"Nothing, doll. It's a slow morning.\"\n\n\"Don't call me that.\"\n\n\"Yes, boss,\" Bethany said with a laugh. \n\nAfter the call I vacuumed, dusted, did some laundry, showered and then settled onto the couch to start Grey's Anatomy on my tv. Wes had said it was an insult to surgeons everywhere, but I was sure there had to be some accuracies in the show. I was curious about Wes's life. \n\nI was hooked after one episode, but I was also tired from the chores. I think I made it through three episodes before I finally drifted off.\n\n\u2014\n\nKnocking on my door woke me up. I felt groggy, not fully registering what was happening until there was another knock on my door. I checked my watch. It was a quarter past four. \n\nWes!\n\n\"I'm so sorry, I fell aslee\u2014\" I was saying as I opened the door, but I didn't get the chance to finish. Wes kissed me, walking me backwards into my apartment, kicking the door closed behind him. I'd grown accustomed to his soft, pliant lips, kissing him back fervently, making him smile against my mouth. He tasted like peppermint gum and charity, like he was a gift Fate had given me. \n\n\"This is going to sound crazy,\" Wes said, pulling back. His eyes were intense, locking onto mine, looking at me like he was seeing me for the first time in years. \n\n\"What is?\" I asked. \n\n\"I think I'm falling for you, Celine,\" Wes said, wrapping his arms around me like he was afraid that I was going to make a run for it. \"I can't eat, I can't sleep, I can barely think straight. All I think about is you.\"\n\n\"You've only known me one week.\"\n\n\"You don't feel it?\"\n\nBreaking News: I actually blushed. \n\n\"You do,\" he said, grinning. \n\n\"Shut up.\"\n\n\"You're falling for me.\"\n\n\"I'm not.\"\n\nWes spun me around, pulled me against his body and put his hand over my heart. I felt his chin come to rest on my shoulder. He was feeling the quickened thud of my heartbeat under his palm. \n\n\"You are,\" he said softly. I felt a shiver run through my spine from the sound of his voice, deep and low. \n\n\"So what if I am?\" \n\nWes turned me back around to face him. He peered past my shoulder, looking at something in my living room. \n\n\"If you're falling for me then promise me one thing,\" he said. \n\n\"What's that?\"\n\n\"That you'll never watch Grey's Anatomy ever again.\"\n\nI laughed so hard that I snorted. Wes grinned at my reaction. \n\n\"Celine Gutierrez, I think this is going to be the start of a beautiful friendship.\"\n\n\"Please don't tell me you're quoting Casablanca.\"\n\n\"Here's to lookin' at you, kid.\"\n\n\"Shut up.\"\n\n\"Yes, ma'am.\"\n\n\u2014\n\nThe day had bled into nightfall, purple and blue streaks in the sky, melted from the moonlight. It was a full moon tonight, brightening the night, casting the world in its glow, expanding to include Wes. He slept there in my bed, the moonlight bathing his tanned skin through the window, making him look almost ethereal. \n\nI leaned against the doorway and crossed my arms, smiling as I watched him sleep. It had barely been three weeks since he'd first set foot into my apartment, and it already felt like he'd made his home here.\n\nOut of convenience, most days Wes would come straight to my apartment after his shifts at the hospital. I'd given him a key, and he used it often enough to warrant me making room for him in my closet. Some of his hospital scrubs hung there, along with his t-shirts and in my drawer were a few pairs of his jeans and boxers. He had a toothbrush, shampoo and a shaving kit in my bathroom. \n\nIt was almost like we lived together. We'd known each other a month. A month. Everything was moving fast, but Wes always grinned when I pointed it out, saying, \"What do I always tell you, Celie? Fast is our speed.\"\n\nUgh, don't call me that, I found myself thinking. \n\nI walked over and gently brushed his hair back from his face with my fingers. He didn't stir, but I hadn't expected him to; he still slept like the dead. It took me a moment, but I realized that I'd just been affectionate without being prompted. It scared me a little. \n\nI decided to go make some dinner if only to get out of that room and escape the reality of my feelings. Foster kids know not to get their hopes up. People don't actually want you, even when they say they do, even when they promise. I had no business getting close to anyone, and yet...\n\nMaybe a delicious salad would make me feel better. I was halfway through cutting up romaine hearts when I felt someone embrace me from behind. I looked over my shoulder and found a sleepy-looking Wes. He kissed my cheek. \n\n\"Go back to bed.\"\n\nHe shook his head, making me sigh and put down the knife. I turned around and melted into his embrace. Ugh, why was he so warm and comforting? I normally would've run from this type of situation. I didn't do the whole relationship thing. My worst fear was co-dependency. \n\nAnd yet here I was, leaning my head against his chest, listening to the thump of his heartbeat. It was a rhythm that could've matched my own heartbeat. \n\n\"How do you feel about kids?\" he asked me randomly. \n\nI leaned back to look at his face. \"I don't really like them much,\" I said.\n\n\"Then you must be on birth control.\"\n\n\"I am.\"\n\n\"You never clarified, so I wasn't sure.\"\n\n\"You came inside me even though you weren't sure?\"\n\n\"Nothing would please me more than tying you down with my baby.\"\n\n\"Wes.\"\n\n\"I'm kidding,\" he said, laughing. \"I figured you were on the pill.\"\n\n\"You're not funny.\"\n\n\"That's what you keep telling me,\" he said, grinning. \"So, do you ever want kids?\"\n\n\"No, never,\" I said, sudden fear washing over me. I'd been hoping to put off this conversation for as long as possible. This typically tended to be the deal-breaker talk.\n\n\"Good,\" he said. \"I don't either.\"\n\nWhat?\n\n\"I-I thought you said you liked kids,\" I stammered. He couldn't be serious.\n\n\"I like them, yeah. One could even say that I love them,\" he said. \"But I'm a surgeon, Celine. I don't have time for a family. I wouldn't want to be the kind of father that's never around for his kids. That's just not me.\"\n\n\"That's a relief,\" I said, sighing. \"I thought we were about to break up.\"\n\n\"You can't get rid of me that easily,\" he said. \"If I'd wanted them, I would've given up kids for you.\"\n\nI rolled my eyes. \n\n\"You're so full of shit, Wes.\"\n\n\"I'd even give up marriage.\"\n\n\"Good, because I don't want one of those either.\"\n\nWes stilled, his smile fading. \n\n\"I'm sorry babe, but we're going to have to break up. That's a deal-breaker.\"\n\n\"Oh, shut up,\" I said, catching the twitch of a smile on his lips. I ducked under his arm and made my way to the fridge, pulling it open to search for the salad dressing. Wes watched me from where he stood, crossing his arms over his chest and looking at me like I'd plucked him the moon. \n\nI tossed the salad, and Wes got us some bowls and forks. We ate together in the kitchen, standing there and talking about our day, about the call center and the hospital, and you'd be surprised how similar it all was. High-stress environments with difficult people and difficult situations. That's what we dealt with.\n\nWhen Wes leaned over and stole a cherry tomato from my bowl with his fork, I flinched, but the feeling passed almost instantly. Ten years ago I would've cowered or snapped, depending on my mood. I used to be familiar with hunger. People taking food from me? I'd been familiar with that, too. \n\nBut it wasn't ten years ago. It was now. \n\nI stole a crouton from his bowl, making him laugh. I'd never in my entire life taken food from anyone. I'd never been close enough to anyone to feel comfortable to do it. Somehow, in the strangest way, I felt liberated. \n\nI felt free\u2014because of a crouton. \n\n\"What's so funny?\" Wes asked, watching me in that way that he did, like I was the most fascinating person in the world. \n\n\"I stole your crouton.\"\n\n\"And that's funny to you? Stealing is a serious crime, Celine.\"\n\n\"You stole my tomato first!\"\n\n\"An eye for an eye makes the whole world blind,\" he said.\n\n\"I'm going to retaliate whether you like it or not,\" I said placing my bowl on the counter. I reached for his bowl, pulling it out of his hand and setting it down on the counter beside mine. \n\n\"Hey\u2014\" he began, but I cut him off. \n\n\"Shut up,\" I said, wrapping my arms around his neck. I pulled him down, my mouth meeting his moments later, and it was fire. His lips made my skin burn, like it was a scarlet fever, red and hot, making my blood pump in my veins, making me delirious. I clutched at him, my fingers closing around his shirt as he picked me up and carried me to the bedroom.\n\n\"My turn to retaliate,\" Wes said, undressing me quickly. I helped him take off his shirt as he undid his belt. We met on the sheets, our naked bodies touching skin to skin, and the temperature in the room rose by several degrees. \n\n\"If this is what stealing a tomato leads to, I'll have to start stealing your food more often,\" Wes said, laughing when I tried shoving him off of me. He descended down, his lips meeting my neck, kissing up my throat. \n\n\"I'll steal everything from you,\" he said huskily. \"Most importantly, your heart.\"\n\n\"Impossible,\" I said with a smirk. \"I don't have one.\"\n\n\"But you do,\" he said, placing his hand over my chest. \"Right here, beneath your sternum, just a little to the left, lies your heart. I can feel it beating strong. You're a fighter, Celine.\"",
        "His words rendered me speechless. The venom on my tongue dissolved; for once in my life, I didn't have anything to say. I didn't know how to piece together what I was feeling into words. All I could do was accept him and invite him into my body. \n\nAnd so I spread my legs and let him fill all my emptiness.\n\n\u2014\n\nA week later, I saw Wes cry for the first time. \n\nIt was late, almost ten at night as I was finally getting home. I unlocked the door, swinging it open and carrying in the groceries I'd bought after getting off work. I settled the bags on the kitchen counter and flipped on the lights, jumping when I caught sight of a figure sitting at the end of the bar. \n\n\"Wes?\"\n\nHe had his head down, but he lifted it, along with a glass of clear amber liquid. His eyes were bloodshot red. \n\n\"What happened?\" I asked, cutting across the room. He smelled strongly of alcohol. \n\n\"Nothing new,\" he said, putting down the glass. \"I lost a patient on a solo surgery.\"\n\nMy heart caught in my throat. His patients were all children. A child had died. It was devastatingly tragic news that I almost wished he hadn't shared with me.\n\n\"That's awful,\" I said, unsure of what to do or say. \"I'm so sorry.\"\n\nHe glanced at me, and I had to look away. I'd never witnessed a man this vulnerable before.\n\n\"Do you want to talk about it?\" I asked gently. \n\n\"Physician-patient confidentiality,\" he said. \"I can't. I want to, but I can't.\"\n\n\"I won't need a name to understand what happened.\"\n\n\"I suppose not,\" he mused. \n\nI cautiously took a step closer, and he sensed what I was about to do, opening his arms and inviting me into his embrace. I wrapped my arms around him, resting my head on his shoulder, breathing in the scent of his cologne and that distinctly alcoholic smell that reminded me vaguely of drunken foster parents. I didn't associate Wes with those people, though. He was only human; they were monsters.\n\n\"Talk to me, Wes,\" I said in a quiet voice. \n\n\"Five-year-old female, cholecystectomy, cause of death: pulmonary aspiration. It's not like I've never lost a patient before, but this one was completely preventable. I'm angry with myself, Celine. I suspected, but I brushed it off.\"\n\n\"Suspected what?\"\n\n\"That her parents had fed her when they weren't supposed to,\" he said almost acidly. \"It was a simple elective surgery, I did everything by the book. I explicitly instructed her parents not to give her anything to eat or drink twelve hours before the procedure, but they felt bad about letting her go hungry. She had cornflakes and chocolate milk three hours before surgery. They lied to my fucking face. The reason you're not supposed to have any food or drink before surgery is because general anesthesia temporarily stops all reflexes, including the gag reflex. There's a risk of vomiting if you have food in your belly during surgery. Guess what happens when you throw up without a gag reflex? It has a chance of entering your lungs and causing you to suffocate and die before the surgical team even knows what's going on. I\u2014fuck, I should have known. Those parents looked so sketchy\u2014\"\n\n\"Whoa, stop right there,\" I said, taking his face in my hands. \"Look at me, Wes.\" He did. \"This was not your fault, you got me?\"\n\n\"It's my job to save these kids, Celine.\"\n\n\"You're not God. You can't control everything. You couldn't control those stupid parents, and now they'll spend the rest of their lives regretting it. This is a tragedy, but it's not a tragedy brought upon by your actions.\"\n\nWes blinked and looked away. His eyes were brimming with tears. This had really hurt him. \n\n\"I'm\u2014I'm disappointed in myself, Celine,\" he said shakily. \"No, not disappointed. Pissed. I'm fucking pissed that I didn't follow my gut feeling. I knew something was off. I just knew.\"\n\n\"You can't do this to yourself,\" I said. \"This wasn't your fault, Wes. You have to see that.\"\n\n\"Her death was preventable, Celine. All I had to do was remove her gallbladder. I do cholecystectomies all of the time. Laparoscopic gallbladder removal surgery is safe. It's one of the safest surgeries you can have. And yet she died on my table.\"\n\n\"You said yourself that you did everything by the book. If you had to redo the surgery again, wouldn't you have done everything the same way? What happened was outside of your control.\"\n\n\"If only I'd pressed them,\" he said, sounding agonized. \"If only I'd fought for that little girl.\"\n\n\"No, Wes,\" I said. \"You did what you could. You did everything right. You're not responsible for the actions of dishonest people.\"\n\nHe met my eye, and I saw tears in the corners of his eyes. I wiped them away with the pads of my thumbs. \n\n\"It takes a very special kind of person to do the work that you do,\" I said gently. \"You sacrifice your sanity to help those kids. Out of all the paths you could've taken, you chose a difficult one and stuck to it because it felt right to you\u2014and it was right, Wes. The world is a cruel and fucked up place, but you are doing something good, something meaningful, making a difference. The world needs people like you, so don't you shut down on us now.\"\n\nWes was quiet for a moment, mulling over my words, and then he spoke.\n\n\"Where have you been all my life, Celine?\"\n\n\"Right here,\" I said, placing my hand over his heart. I'd never done something so outrageous, never displayed my feelings so openly before. I cared about Wes. I wanted him to know it, especially now that he was so vulnerable, baring his soul to me. \n\n\"The world needs people like you too,\" Wes said, looking at me with softened eyes. \"You have a heart of gold, babe.\"\n\n\"You're the only one who thinks that.\"\n\n\"Fuck everyone,\" he said. \"They're blind.\"\n\nI laughed. \n\n\"What the hell do you even see in me, Wes?\"\n\nWes took my face in his hands, cupping my cheeks with those steady, warm hands. \n\n\"Everything,\" he said softly. \"I see everything.\"\n\nNow my eyes were pricking with tears. He was so forward, so overwhelmingly direct, breaking through the walls I'd spent years building. It was absolutely terrifying, and yet I was drawn to him like a moth to a flame. \n\n\"Kiss me, Wes.\"\n\n\"As many times as you ask me to.\"\n\nThen he kissed me tenderly, and this time, we kissed away his pain instead of mine.\n\n\u2014\n\n\"What do you dream of, Celine?\" \n\nIt was sunset at Balboa Pier. I was leaning over the rail, looking down at the crashing waves as Wes held me, his hold tightening with each passing second. I was probably leaning over a bit too far. I eased back onto the balls of my feet and found that I couldn't meet his gaze. \n\n\"Drowning.\"\n\n\"In water?\"\n\n\"Yes, but more. Sometimes it feels like I'm drowning in everything.\"\n\nWes was quiet for a moment. He pulled me closer, until I laid my head on his chest and listened to the language of his heart, to that thumping that reminded me that he was real, he was here, and he was mine. It had been four months since we'd met\u2014four beautiful months of laughter, petty arguments, make-up sex, cuddles on the couch, stealing food off each others' plates, and dates like these, exploring outside of our busy lives, enjoying all the little things that gave us all the big feelings. \n\n\"I used to feel like I was stuck inside of a burning house,\" Wes said. \"While you were drowning, I was burning.\"\n\n\"How did you overcome it?\"\n\n\"I didn't,\" he said. \"It was you. You doused the fire.\"\n\nI knew what he was going to say before he said it. I felt it in my bones. \n\n\"I'm in love with you, Celine.\"\n\nMy eyes watered. I turned back toward the railing, gripping it with both hands, taking in the fresh air, trying to breathe in peace and breathe out the panic. I was twenty-eight-years-old and this was the first time anyone had fallen in love with me. \n\n\"Did I spook you?\" Wes asked gently. \"I know it's too soon.\"\n\nI shook my head. \n\n\"No,\" I said. \"I just\u2014this is the first time I've heard anyone say those words.\"\n\n\"It's my first time speaking them,\" Wes said. \n\nI looked over my shoulder, finally meeting his eyes. They were hopeful, wide and unafraid. \n\n\"You've never been in love before?\" I asked.\n\n\"Not until I met you. Pretty lame, considering I went thirty-one\u2014thirty-two years without falling in love even once.\"\n\n\"What was stopping you? Weren't there other girlfriends before me?\"\n\n\"They weren't you.\"\n\nI laughed despite myself. \"You didn't even know I existed.\"\n\n\"Of course I knew,\" he said. \"I was always searching for you.\"\n\n\"You were not.\"\n\n\"Why do you have to always challenge everything I say?\"\n\n\"It's in my nature.\"\n\n\"Well, it's in my nature to put up with it, I guess,\" he said, smiling wide. \n\nI reached up and brushed his black hair back from his forehead with my fingers. \n\n\"Shut up,\" I said. \n\n\"How about I change the subject instead? Tell me about your other dreams now. What are your goals? What do you wish for?\"\n\n\"I want to be on the board of directors at the company.\"\n\n\"You'll get there,\" he said immediately, hardly even thinking about it. \"I know you will. That's a very achievable dream.\"\n\n\"I'll have to go to college and get at least a bachelor's first,\" I said nervously. I'd never actually told him that I hadn't gone to college.\n\nWes looked unfazed. \"Another achievable dream. We'll sit down later and formulate a plan. You can do it, Celine.\"\n\n\"Okay,\" I said, smiling. \"And what about you? What's your dream?\"\n\n\"To get into the Pediatric Surgery Training Program at John Hopkins to complete my fellowship.\"\n\n\"What's a fellowship?\" I asked.\n\n\"It's what comes after residency, consider it additional training. It's only for about two years. It would be my last step before taking the specialty boards.\"\n\n\"And that's the exam you take to become a fully qualified surgeon?\"\n\n\"Correct,\" he said. \"A fellowship should properly prepare me.\"\n\nI nodded. \"Where exactly is John Hopkins?\"\n\n\"It's in Maryland, so if you're up for it, we might have to try our hand at the long-distance thing,\" he said. \"If you're not, I'll take a fellowship at CHOC. I'm pretty sure I'll get it, whereas with John Hopkins, it's more of a shot in the dark. I have no idea whether or not I'll be selected.\"\n\n\"Don't be ridiculous,\" I said, shocked. \"I won't allow you to give up your dream for me. You'll get into the program and you'll go. End of discussion.\"\n\n\"You have a lot of faith in me.\"\n\n\"That's what girlfriends do.\"\n\n\"On this level? It's what wives do.\"\n\n\"Wes, don't you dare propose to me.\"\n\nHe made a motion to get down on one knee and I elbowed him in the stomach. He laughed and straightened up. \n\n\"Relax, babe,\" he said. \"I won't ever ask you to do something that you don't want to do. If you change your mind and decide you'd like to be my wife then you'll have to propose.\"\n\n\"Pigs will fly before that happens.\"\n\n\"I look forward to watching them flit across the sky.\"\n\n\"Goddamnit, Wes,\" I said, laughing. \"Stop making a joke out of everything.\"\n\n\"Your laughter is my drug,\" he said. \"I'm addicted.\"\n\n\"Why can't you be addicted to something normal like cocaine?\"\n\n\"Substance abuse isn't a joke.\"\n\n\"You made a joke first.\"\n\n\"That is entirely beside the point. Focus, babe. Repeat after me: 'Drugs are harmful chemicals that change the way a body thinks and works and should not be made light of.'\"\n\n\"Fuck off.\"\n\n\"There's my Dragon Lady,\" he said, grinning. I observed the curve of his mouth, still floored that there was someone in this world who found me endearing. I liked the way his smile brightened up his entire face, like he was made of sunshine and all good things. \n\nWes took my hand and led me down the pier as the sky darkened. We walked down to the sand, wetting our feet, holding our shoes in our hands, kicking and splashing ice-cold water at each other. He led me to the nearby unoccupied lifeguard tower. We sat on the steps, me one step below him so he could wrap his arms around me from behind. I leaned back against him, and that's when it hit me. \n\nWes loved me. \n\nI couldn't say it back. I didn't know how to love someone, didn't know how to even recognize the signs. I certainly liked Wes, way more than I liked anyone else in the world, and that was really saying something. \n\nSo maybe I couldn't tell him that I loved him, but I kissed him instead, using my lips to translate just how much I liked him. \n\nAnd for now, it would have to be enough.\n\n\u2014\n\nI was down in the training building, which we called our University, even though it didn't give out a degree of any sort. There was a certificate of completion issued for finishing a course on member services, insurance, or claims. The classes were almost always ongoing, as we also trained agents from across Southern California that worked in the branches. Overall, it was a busy building with many classrooms. \n\nThere was a claims class I'd scheduled, and today would be their first day. I wanted to drop by and encourage the new students. \n\n\"Fancy meeting you here.\"\n\nI turned around. It was Addie. \n\n\"What are you doing down here?\" I asked, checking my watch. \n\n\"I'm on my lunch break. I was visiting one of the instructors,\" she said, turning a little pink. It made me suspicious. \n\n\"Why?\"\n\n\"Oh, no reason,\" she said quickly.\n\n\"You do realize that the instructors are all part of HR. You can't be friends with them. It's against company policy.\"\n\n\"Don't worry,\" she said, fidgeting where she stood. \"It's nothing like that, Celine.\"\n\n\"You're a terrible liar.\"\n\nAt that moment, a door down the hall burst open and one of the instructors skidded out, looking in all directions until he caught sight of Addie.\n\n\"Honey, I\u2014\" And then he caught sight of me.\n\n\"'Honey,'\" I repeated, crossing my arms and giving Addie a look. \n\n\"Busted,\" she said, sighing. Her face had turned several shades of red. \n\nI glanced at the instructor, wondering if he had anything to say, but he didn't appear to have any words. He walked over out of concern for Addie. I wasn't stupid. These two were definitely dating. \n\n\"Celine, this is Ryan Irving... my boyfriend,\" Addie said, sounding appropriately ashamed. We were supposed to be best friends, but she hadn't shared this with me. However, I couldn't exactly blame her. She wasn't allowed to date this guy, and I was supposed to be the one to enforce this rule. \n\nI sighed. \n\n\"Before you rat us out, just know that he makes me very happy,\" she said, and reached over to take Ryan Irving's hand. \"But I'm prepared to face the consequences. I understand that you have to do your job. Just know you won't have my face to look forward to every morning if I get fired.\"\n\n\"If you want to keep your jobs then you'll have to disclose this relationship to HR officially,\" I said. \"I'll talk to your manager, Mr. Irving. I could probably arrange for signed statements and no talk of termination.\"\n\n\"Please, call me Ryan,\" he said, sounding relieved. \n\n\"You'd do that?\" Addie asked hopefully. \n\n\"Are you serious? Addie, you're my best friend. Of course I wouldn't let you get fired. I'm one of the most powerful people in this company. I think I'm owed some special favors\u2014like not having my people terminated without my consent.\"\n\n\"Ryan isn't one of your people,\" she said in a small voice. \n\n\"I will protect him as best as I can.\"\n\nAddie smiled brightly, her green eyes twinkling under the fluorescent lighting. There was a time when I wouldn't have done this, wouldn't have stood for any rule-breaking whatsoever. \n\n\"You've changed,\" Addie said, practically reading my mind. \"I think I know who to really thank.\"\n\nI couldn't help but smile. Addie had met Wes a few weeks ago. They'd clicked instantly and were already Facebook friends. I thought it was kind of adorable. Adorable. I couldn't remember the last time I'd even thought of that word on my own. \n\n\"You can thank him later. He has his interview with John Hopkins this morning.\"\n\n\"Oh crap, I forgot to wish him good luck!\"\n\nRyan stood there awkwardly as we chatted. I noticed that he was a pretty average guy, very unlike the kind of guys Addie usually went for. Those guys really knew how to break her heart. I wondered if Ryan was going to be the one to treat her like the queen she was. \n\n\"So how long has this been going on?\" I said, motioning to the two of them. \n\n\"Almost as long as you've been dating Wes,\" Addie admitted. \"We met in the parking lot. I didn't know he was HR, I swear. He thought I was management because I'd parked in your spot on your day off again. He asked me out and I found out on our date. I almost walked out of there, but he just made me feel so warm and fuzzy, Celine. I couldn't do it.\"\n\n\"I thought I told you to stop parking in my spot.\"\n\n\"That's what you heard?\" Addie said, scandalized.\n\nRyan chuckled and cleared his throat. I saw her hold of his hand tighten, giving him a squeeze in warning. Everyone was so damn scared of me. I wasn't the same uptight person anymore. Hell, I even let my hair down at work now. \n\n\"I'm happy for you, Addie,\" I said, giving her a genuine, warm smile. Months ago I wouldn't have known how to do that, how to smile. Wes had taught me a lot of things, and most importantly had been the way he'd shown me that it was easy to be happy, and even easier to share that happiness. \n\nI was on cloud nine this morning. \n\nAfter I wrapped up my conversation with Addie and Ryan, I ventured deeper into the building to locate the training class. I found them all sitting in their chairs with wide eyes, a little surprised to be finding their boss's boss's boss greeting them so warmly. I knew I had a reputation. After all, I was still Dragon Lady when I had to be. \n\nBut these days, I've been wondering:\n\nDid I really have to be?\n\n\u2014\n\nWes called me immediately after his interview. \n\n\"How did it go?\" I asked. \n\n\"Hard to say,\" he said, but he didn't sound down. \"I answered all the questions truthfully.\"\n\n\"I don't know if that's a good thing.\"\n\nHe laughed.\n\n\"You may be right. The interviewer said he'd interviewed over 10,000 people in the last 20 years and asked me what was so special about me.\"\n\n\"What'd you say?\"\n\n\"I told him that there was nothing special about me. I'm just human.\"\n\n\"Oh, Wes, you didn't.\"\n\n\"I want to earn this by being who I am,\" he said. \"I'm not one of those narcissistic surgeons with an inflated head. I think that says a lot about me. I'm hoping I'm what they're looking for, but if I'm not then it's best for both parties. I don't want to be somewhere that I don't fit in.\"\n\n\"Well, you definitely fit in at CHOC so the back-up is always there.\"\n\n\"Yeah,\" Wes said. \"You're damn right about that. I can't even begin to explain how hard I've had to work to get where I am right now. I really want to make a difference, Celine.\"\n\n\"I know, Wes,\" I said, wishing I was there to hug him. \"You've already made a difference. You've saved countless lives.\"\n\n\"You've been my rock these last couple of months. I would've been a mess today if it weren't for you.\"\n\n\"What did I do?\"\n\n\"I had your face in my mind. I want to do you proud, babe. It calms my nerves to think about your smile.\"\n\n\"You taught me how to do that, you know.\"\n\n\"Do what?\" he asked. \n\n\"Smile.\"\n\n\u2014\n\nThe twinkling Christmas lights made the room glow in fuzzy reds and greens, the cozy comforter keeping us warm, the fireplace downstairs crackling as our hands linked in the darkness, interlocking all of the secrets of our souls, connecting us. His touch was electric, fraying all of my nerves, making me feel alive, so goddamn alive. \n\n\"I love you,\" Wes said, kissing my hands. \n\nI know. \n\nI kissed him, letting go of those strong, stable hands to take him by the face, inviting him for a taste by parting my lips. He slid his tongue along mine, his breath quickening, groaning when I moaned. I kissed him to translate the feelings I felt because I couldn't say them, couldn't admit that I didn't know how to love, didn't know what it meant. 'I like you very much' wasn't going to cut it. ",
        "We made love in his warm bed, clutching one another, speaking no words because the feelings did all the talking. \n\nI love you, he said with his eyes. \n\nI'm confused, I said with mine. \n\nWhen the clock struck midnight, he kissed me so deeply that I lost all sense of the world around me. \n\n\"Happy New Year, baby,\" he whispered in the darkness. \n\nI smiled and wrapped my arms around his neck, my naked body flush against his, radiating heat and fire. In that moment, it felt that nothing could ever go wrong, that no one could ever take this away from us. \n\nI was wrong."
    ],
    "authorname": "norafares",
    "tags": [
        "doctor",
        "falling in love",
        "first love",
        "love",
        "romance",
        "romantic comedy",
        "romcom",
        "strong female lead"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/head-above-water-pt-03"
}