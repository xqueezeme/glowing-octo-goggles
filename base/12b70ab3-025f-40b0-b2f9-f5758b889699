{
    "title": "Abby and the CEO Ch. 04",
    "pages": [
        "CHAPTER 4: THE CEO\n\nThe day after the late night with Mr. Cornell had a few of us preoccupied with close review of the project and verification of what I had identified as an issue. I managed to convince Mr. Cornell the night before not to put too much fault on Steve, assuring him that this experience would be seared into his memory. Instead of using it to make an example, to use it as a lesson for him. Sara did talk to him privately, however. Steve came to me after his meeting with Sara and told me he owe me big time. I told him it was what teammates and friends do. I wondered if a talk like that while naked would ever feel comfortable. I hoped not.\n\nShortly after that, Ms. Benson called and asked to see me. Of course, that meant my going to see her which I did.\n\nAfter rapping on her door frame, \"You wanted me, ma'am?\" I wasn't sure if she wanted to talk to me or...\n\n\"Ah, yes, Abby. You spent quite a bit of time with Joe last night from the sounds of it. What exactly did you talk about besides the project?\"\n\n\"Ma'am?\"\n\n\"Something must have happened. Joe Cornell is a brilliant man but he is awkward with small talk even with people he knows. It's just not his thing.\" I just looked at her trying to indicate I wasn't volunteering anything that might have been shared between Mr. Cornell and me. \"Abby...\" She threw her hands up. \"You know what he did? He stood there, right where you are now, and asked me how I was doing. When I started talking about this project and that project, he shook his head and said, and I quote, 'No, Pam, how are YOU doing?'\" She looked at me, then laughed. \"Okay... I respect that about you, Abby. You stuck up for Steve today and you're going to hold in confidence what you guys talked about. Whatever it was, Abby, he listens to you.\"\n\nIt was almost a week later, early enough in the day that I hadn't had my second cup of coffee and I stood to go to the break room when I noticed Mr. Cornell hanging around his doorway. As I wound my way through the desks to the opposite side of the main room, I say him moving along the back in the same direction. He stopped briefly at one of the Director offices, said something there and continued, arriving at the break room with his own mug as I was pouring into my own.\n\n\"If you're pouring, Abby.\"\n\nI smiled, remembering the comment Ms. Benson made about his small talk. After I filled his mug, he looked around the empty room and indicated with his mug to a table furthest from the door.\n\n\"How are you doing today, sir?\"\n\n\"Fine... fine... no, good. Abby, I wanted to talk to you but not in my office. I didn't want people... to talk.\"\n\n\"It's okay for me to be in your office, sir.\"\n\nHe shook his head. \"No, not really. The separation between our positions is too much for us to be having a meeting without Sara or Pam there. Then, if it's sex... well... you know I don't go into the main group for that. No, people would talk. You don't need that.\"\n\nI asked him what I could do for him, then. He said he tried what I recommended, to just stop in at his staff offices occasionally. His face beamed. \"I did it, Abby. It was great, thank you.\"\n\nI laughed. \"You know, sir, you blew Ms. Benson's mind. She didn't know what to think after you left.\"\n\nHe laughed, then look at me seriously. \"She just shared that with you, right?\" I nodded and he shook his head. \"People respond to you, dear. You have a way with people.\"\n\nI laughed harder. \"Yeah, it's called sex. I've fucked, sucked, or eaten every person on the floor I think.\n\nHe argued with me, then seriously asked, \"What should I do next?\"\n\nSeriously, I thought. How did the newest person on the floor become his confidant and counselor? It's not like he's asking for anything deep, so... \"What you're doing is good, sir. I know you aren't the outgoing, small-talk schmoozer, so take small steps. Treat this like anything else, right. Set goals you can manage and continue in steps to achieve what you want.\" He nodded and looked intently at me. Right, what's next? \"Be satisfied with your staff, gain some confidence. Those are the people you are most comfortable with. Speaking of... why did you go to Ms. Benson?\" He looked embarrassed. Oh, I thought, he fucks her. File that away and to compare notes. \"Next step, I think, include the Directors.\" He nodded and stood, thanking me.\n\nHe took a step, then turned. \"Abby... I need to know something. It has to be honestly.\" I nodded. \"The other night... in my office... was that okay?\"\n\nI stood, eased his mind by looking at the door, stepping up to him so we were inches apart. \"Sir, the other night was very, VERY okay.\"\n\nHe smiled. This was the man who started all this. How? He said, \"I would like...\"\n\nI took his hand and placed it on my bare breast, \"I would like that, too.\"\n\n* * * *\n\nThree weeks later a meeting of the Vice Presidents and Directors was called by Joe Cornell. The conference room was almost not large enough to handle all the titles assembled in one place. Additional chairs had to be brought into the room and the rest of the office was a buzz with speculation of what the meeting might mean. Five people appeared at my desk, all looking very concerned and serious. Mary rolled her chair over to listen. Everybody... EVERYBODY... was on edge.\n\n\"Abby, what's happening in there?\" I assured them I wouldn't know. Hey, I thought, I'm the newest one here. Standing before me were five of the most senior of the group. I still found myself blinking at the sight of two naked women calmly standing in front of me with dressed men next to them. \"Can't you find out? Talk to Sara. She talks to you.\" I sagged in my chair. The speculation ranged from the office being broken up, or the naked and sex policy being eliminated, all the way to layoffs.\n\nI pushed my chair back from the desk and sighed. This is what happens when everyone trusts you. Okay, that can't be a bad thing. I pointed at the group, \"Stay here.\" I tried to be firm.\n\nOf course, they didn't. As I rapped on the opening to Sara's cubicle, I saw them gathered about 15 feet away but now the group had tripled. Of course, Sara insisted she didn't have any better idea. And, I believe her. That wasn't going to ease the anxiety, though.\n\n* * * *\n\n\"First off, let me say that I can't imagine what this meeting is doing to the people out there.\" Joe Cornell pointed beyond the glass wall of the conference room. \"That being said, I want to keep this short, give some direction, and break this up without a prolonged concern for them. When we leave I want everyone smiling and relaxed. There really is no reason for us not to be. Okay?\"\n\nOne of the Vice Presidents inserted, \"Joe, a few of us have commented... wherever you are getting direction to do what you're doing... we think it's great.\"\n\nHe smiled but collapsed into the head chair. \"Thanks, but frankly, it's exhausting. Going outside myself is....\"\n\nAround the room came, \"Exhausting?\" The whole room laughed and that caught the attention of those not in the room even if they couldn't hear what was said.\n\n\"I've decided to have a personal assistant.\" A 'It's about time' came back to him and the group agreed. \"I want to spend more time in the office. I promised Samantha. I'm going to pull back, still mix it up with Operations but leave you young people to deal with customers and suppliers. I'll be support whenever needed but it's time. The company is getting too big and I have too much respect for all of you. You deserve to take bigger roles and rewards.\"\n\nHe paused, then, \"What I need is advice on who. I know we have a lot of very good people out there. Is it filled there? Should it be filled from outside? Dan, as HR, I want you to run point on this but I want this group to have some kind of consensus because I won't be the only one working closely with this person.\"\n\n\"Are you sure this needs a lot of discussion, Joe?\"\n\nHe nodded. \"Yes. I don't want this messed up by playing favorites. I know everyone has PA's they like better than others but I want one I can work with and all of you can work with. Working for me, working with all of you, maybe being between you and me... this could be stress producing. I want a strong person who can work across the board.\"\n\n* * * *\n\nWhen the meeting broke up and the conference emptied, we were still at Sara cubicle. She looked at me and shrugged, That was quick. Just then, her phone rang. \"Yes, Pam.\" Sara looked at me. \"Of course, I'll be right there.\"\n\nShe hung up and manager phones began ringing around the office. We all looked over the desks at Ms. Benson's office.\n\nI was back at my desk when Sara appear and called the group together for an informal meeting around her which happened to be around Mary and me. \"Well,\" she started, \"all the speculation was way off. There is nothing negative. In fact, for someone it is a positive opportunity. It was announced that Mr. Cornell is going to hire a Personal Assistant for himself. As you all know, he is still the only Director and above without his own. This will obviously be a big opportunity. So, anyone who wants to put their name in to be considered, please let me know privately. We've seen similar situations before, right? A senior person loses their PA and it can start a chain reaction of PA's moving up. Whether that happens this time just remember, it would still result in an open PA position somewhere.\" She looked at her group. \"I am really proud to work with every one of you. I wouldn't want to lose any of you but the loss in our group would be a gain for one of you and you should take it if you can.\"\n\nI was standing under the shower, my arms braced against the wall as the hot water cascaded over me. Arms came around me and hugged me while cupping my breasts. This brought her under the shower, too. \"How was your day?\" Sara asked.\n\nI turned around in her arms and kissed her on the lips. \"Good. Like most all of them are. A good job, good fucks, and great Manager.\" I looked over her shoulder and the changing area looked deserted. Not too surprising, I was often one of the last out.\n\nShe moved some hair off my face and looked into my eyes. \"I haven't seen your intention to apply for the position. Why not?\"\n\n\"Sara, I've been here... what?... like five and a half months? I have no business being on that list. Not that I wouldn't like to try or that I don't think I could do it. You know me.\"\n\nShe laughed, \"I do know you and that is why I am wondering why you haven't put your name in.\"\n\nI shook my head. \"And I don't want you putting it in, either.\"\n\nShe held up her hands in resignation. Then, she stepped up to me so we were touching. \"How about if I wash your breasts, then? Maybe more?\" I put my arms around her neck and kissed her hard. I think I am turning more and more bi.\n\n* * * *\n\nDan, the HR Director, had met separately with groups and individuals of senior management to minimize attention. He was finding a consensus and he wasn't surprised by it except for one thing: the consensus was on a person whose name had not been submitted for consideration. They had eliminated any outside consideration quickly. Person after person and group after group came back with the same name. They all agreed it would be unusual given some details but all equally agreed the choice was still over-riding. Dan insisted on presenting three candidates and having formal interviews. The ultimate choice was up to Joe Cornell and the process had to be upheld. He received two more candidates, both well respected.\n\nHe knocked on Pam Benson's door jam and found her on the phone. She waved him in and he took a chair opposite her. When she put the phone down, he jumped into it, \"You realize her name is not on the list?\"\n\nShe nodded. \"I've talked to Sara. She's an unusual young woman. I think that is one of her charms, right? She feels she is too young, too inexperienced. Still, she doesn't question herself, her own abilities or confidence in what she can do when given the chance; she just is concerned about appearances given the experience and seniority of others in the group.\"\n\n\"Which is part of her appeal.\"\n\n\"Exactly. She made Sara promise not to put her name in for consideration.\" She leaned back and gazed at him. She watched him looking back at her. She caught his eyes pass over her breasts and wondered briefly how many such male and female meeting didn't include a sexual overtone. They were regular partners in the office and she knew from experience that it was how it eventually settled into a normality. The exposure became more of a general tease while the actual sex tended to sort itself toward preferred partners. \"What are you going to do?\"\n\n\"I have an idea. We have to agree not to let Joe know, though.\"\n\n* * * *\n\nIt was announced that three candidates had been narrowed down. The process would include interviews over the next few days in private. The process would be in confidence of all active participants with a decision hopefully coming from Mr. Cornell after his interview with each. The names, as part of the confidentiality, were not provided. Speculation again rose to thinking the process would be outside the office if it were truly private.\n\nMary rolled her chair close to me, \"I still don't understand why you didn't put your name in. You'd be great in that role and everyone respects you even if you don't have as much seniority.\"\n\nI just shook my head, my focus on my monitor. I couldn't have the conversation, again. It will be a relief for the decision to be made and the office settle back to what it was. Whatever position opened up as a result would cause much less fuss. I would love working directly with Mr. Cornell. He has been careful with me but it is clear he responds to the talks we have. Everyone remarks how he has changed in reaching out to people, even those of us in the big room. I put ear buds into my ears and tried to tune out everything but my projects.\n\nA couple days later and the room was still buzzing. Two PA's had been spotted going to the elevator and presumably downstairs, one a woman who naturally had to get dressed. Nobody was surprised by the two. Questions swirled around the third, though. Nobody had noticed a third but the prevailing opinion was that he or she may just have been more careful.\n\nI had subconsciously noticed the office clearing out when Sara appeared in front of my desk. \"What's keeping you late this time?\"\n\nI smiled. It was always something. I told her and she challenged that that project wasn't due for quite a while. \"Yeah, well... we had a conversation and the regional guys think we might be able to influence the process if we got in there early with a strong presentation. It might influence how they consider the formal proposals. I can see how I'm essentially using the same information just in modified form so it's not double effort.\" She thanked me. She didn't say it but she'd said it often enough. Not many might put themselves into such extra work but... I sagged back in my chair and watched her leave. She didn't shower. I had already had a quick shower in the afternoon to clean cum off my breasts and stomach after a mini-bukkake. The demand on me hadn't slacked much while being included more by the senior managers, too.\n\nI was interrupted a couple more times by higher-ups concerned about the time I spend in the office. I assured them I was fine and almost done which was true. They were all familiar with my hours, of course, and sometimes I felt their concern was almost a way of feeling better about leaving me there alone. I typed the email and attached the document and pressed send. I cleaned off my desk, slipped my heels back on, and stood to leave.\n\n\"Abby?\"\n\nI was surprised by the sound. I had believed I was the only one still on the floor. I wasn't surprised by the voice, though. He held two glasses of amber fluid. \"How about a drink before you go. It looks like you could use it.\"\n\nI smiled. Funny how those few words from his voice comforted me and eased away some tension. I dropped my purse and bag on my desk and weaved my way to him. As I got closer, \"You know, sir, I bet every woman here carries an extra bag with makeup, maybe special shampoo and conditioner, bushes, etc. It would be nice if the stalls had a small locker.\"\n\nHe handed me one of the glasses, \"I'll have someone look into it, Abby.\"\n\nI collapsed on the couch. He took a chair on the other side of the coffee table. I saw him looking at my legs, my breasts, my legs, and back to my breasts before settling on my face. I smiled at him. In a normal office, such action could be offensive. It was almost expected here. I was wearing nude stocking with lace tops with dark 4\" heels to match the skirt hanging outside. I uncrossed my legs and too slowly parted them before recrossing. He realized what had happened was on purpose and he chuckled.\n\n\"You tease me.\" I smiled. It was obvious we like each other. It was equally obvious we could relax and be ourselves when we were alone. It wasn't why I worked late but I had suspected it was a part of why he sometimes stayed late.\n\nWe talked. He asked about the projects I was working on, especially interested in the strategy currently being tried. I asked about his travel.\n\n\"Don't worry, Abby. I said I would pull back and I am. I'm still traveling but this trip starts with an operational issue in New Jersey, then stopping off at a potential customer. AND...\" before I could inject a concern about him doing sales, \"and, I will only be a figure-head support. The sales team will be the lead.\"\n\n\"I'm proud of you, sir. Is that appropriate for me to say? Maybe not...\"\n\nHe laughed, \"You... Abby... Samantha has tried to get me to slow down, hand off some of what I do for a while. Others have tried. Hell, I even hired someone to counsel me for a while. Your soft encouragement and guidance in things around the office showed me how they fit with how I wanted to adjust other aspects. My dear wife thinks you have to be an angel sent to guide me.\"\n\n\"Angel? I don't think my actions around here are very angelic.\" I watched him and he watched me. I could feel my nipples harden and I could see his eyes focus on them. \"Sir... your wife...?\"\n\n\"I keep nothing from my wife, dear. She knows about all this. It's an interesting story, actually how it got started. But, she knows about every time.\"\n\nI put my empty glass on the table and rose. He turned his chair for more room. The most senior man and the newest woman. I knelt in front of his chair as he pushed his slacks and underwear from under his hips. I took hold of his wonderful cock and licked it up and down. I felt it stir, beginning to expand and thicken. I continued to lick until I finally took the head between my lips and sucked, twirled my tongue around the head, licked around the head, then plunged my mouth down over the hardening cock. In two motions, I took the head into the opening of my throat, a little further and a little further until I had to pull back. Gasping, some saliva leaking from the corners of my mouth, \"You're so big. I don't know if I'll ever do it.\"\n\n\"Practice.\" It sounded encouraging and I was certainly willing, more than willing, eager to have this cock and him. The reality, though, was he would soon have a PA and the smart bet seemed to be it would be a woman. And, she would be in this position. But right now it was me. Privately. Secretly. Alone in the office to share.\n\nI gave up on practice, though. I wanted him inside. I might still get chances after, but this moment felt more urgent. Change was coming for him. Change we had talked about, encouraged. Change his wife encouraged. Having him again felt imperative.\n\nI looked up, his cock in my hand. I stroked it as I rose on my knees to kiss him. He used his hands to encourage me up. He pried off his shoes and stepped out of his pants, then guided me to his desk and pressed me down over it. I felt his cock move up and down over my wet slit. His actions felt as needy as I felt. He moved his cock to my hole, it sank in slightly, then he grabbed my waist and plunged deeply inside with the initial thrust. I cried out. My body reacted instantly with shivering and quaking. The next thrust bumped my cervix and I almost orgasmed. God, what the mind can do.",
        "He leaned over me to grasp a swinging breast and stroke my clit. I came quickly, my legs shaking, my chest dropping to the desktop and relying on his arm wrapped around my waist to hold me up. He pulled abruptly out and turned me around, pressing me back to the desk and onto the top. He pulled my ass to the edge and thrust back into my pussy, hitting my cervix again, my pussy soaked and slick with my orgasmic juices. He fucked me hard, urgent, and needy. He pulled my feet around his waist and I complied with locking my ankles. He then placed my arms around his neck and began pulling back and up. I hung on to him with his cock buried deep. I would admit to being impressed as he stood upright, gravity pulling me down over his cock until my clit pressed into his pelvic bone.\n\nHis hands went under my ass and began lifting and dropping me on his cock. He managed it for minutes and I didn't even notice him moving us to the side of the office until I felt my bare back pressed against the glass of his office wall. He pressed me against it as he rammed his cock up into me and I began shivering, again. I felt him respond to it, too. He pressed firmly and deeply, his cock pulsing inside as my pussy began clenching spasmodically around his cock. I orgasmed the second time the moment I felt his cock spew its cum into my clenching, grasping pussy. I wrapped my shaking body around him, legs and arms squeezing tightly as my body shook and quaked, both of us grunting and moaning, murmuring and gasping.\n\nHe walked us to the couch where he managed to rest us on our sides. There was no rush to separate. I so enjoyed the feeling of his long cock slowly soften and recede inside me until only a few inches still remained inside, staying that way until one of us moved in a way that it slipped out. This wasn't anything like the fucks during the day. They had an element of rushing. These times had none of that.\n\nI kissed him softly on the lips. I was trying very hard not to move too much. I did not want to lose his cock head still just inside me. I gazed into his eyes and smiled, \"Your wife is a very lucky woman.\"\n\nHe pulled his head back to look at me better. The movement almost slipped him out but I clenched my muscles trying to hold onto him. \"My wife,\" he responded, \"wants very much to meet you.\"\n\nI was shocked by the comment and my reaction did cause him to slip out. He just smiled.\n\n* * * *\n\nNothing was learned about the pending hiring of the Personal Assistant for Mr. Cornell. The delay kept the office buzzing with speculation even to the extent that the sex slowed down. Weird how the sex in the office could just as easily be affected by rumor and speculation. I refused to be the go-between to Sara. I was convinced she had no more knowledge than the rest of us and she wasn't going to go to Ms. Benson.\n\nI had my own speculation to deal with. Mr. Cornell's comment about his wife wanting to meet me wasn't as idle a comment as I put it off to. Two days after that comment, Friday, I was invited to their house for dinner. She really did want to meet me. All forms of doubts and fears flooded my mind to the point where, for the first time, I was having significant issues with concentration at work and that included both work and sex.\n\nI left right at 5:00 that night, skipped the shower and surprised everyone by those two things. I rushed home to my little apartment, stripped as I walked to the bedroom and went straight into the shower. I spent a lot of time in front of the sink and mirror doing both hair and makeup. I stopped at one point with the realization I was spending more effort getting ready to meet Mrs. Cornell than I bothered with at the office where makeup was about all I had to wear. I had fussed a lot about what to wear. If she knew, which she did, about the nudity at the office, would it be expected to wear something erotic and revealing? Or the opposite? I settled basically in-between: a mid-thigh skirt, thigh-highs, bikini pantie, matching lace bra, and white short-sleeved buttoned blouse. Checking myself in the mirror, I opened several button and added a string of fake pearls.\n\nShe greeted me at the front door with a hug that was disarming. Mr. Cornell stood behind her with a big welcoming smile. She was dressed in a nice form-fitting sleeveless dress that was also mid-thigh and a plunging front that show-cased her C-cup cleavage and trim body. He was more casual than I normally see him but still in dress slacks and a light blue, long-sleeved dress shirt but without tie or jacket.\n\nI was five minutes early and it was a good thing. Dinner was ready and we sat down to eat in their formal dining room immediately. Perhaps it was a kind of wifely test for this woman she had been hearing her husband go on about. Was his understanding of his wife's interest in her misplaced? Was this a less than cordial invitation?\n\nThose fears were quickly put to rest, however. Dinner was easy and relaxed. The conversation swirled around each of us, little bits of personal information divulged about families, schools, and pastimes. When she asked me directly about what it felt like in the office, I tensed. She chuckled at my physical response. Mr. Cornell sat at one end of the rectangular table while Mrs. Cornell and I sat across from each other next him.\n\n\"I know all about the office, my dear. What I am asking is from your perspective, one of the women in the group of the employees, as it were. What is it really like to be naked, or essentially so, among clothed men? What is it really like to become engaged in sex publicly in front of co-workers at almost any time during the day? And, what is it like that, despite all that, you have a real job to perform?\"\n\nMr. Cornell wasn't kidding. She really did know all about it. What she didn't know was what the office felt like, especially from a woman's perspective. He went quiet as she and I took over the conversation, me trying to describe it coyly and she pulling and pushing for more detailed, explicit responses. Soon, I was describing my first day of exposure, my teasing with the butt-plug, and the near gang bang that ensued. She was gape mouthed but not in a horrified way. Rather, the feeling I got from her was one of wonder, maybe even of yearning. No, she was at perfect peace with what was happening in her husband's office. While we talked through some of the details, she stretched her hand out to Mr. Cornell and he took it in his. I watched it all peripherally and saw the clasping, intertwining of fingers, the soft smiles shared. This night wasn't about testing or challenging or intimidation of the woman from the office. There was something else at play here and I had to trust it would become known at the right time.\n\nI assisted Mrs. Cornell with the plates and serving dishes while Mr. Cornell was sent off in search of another bottle of wine. She turned to me as soon as he disappeared out the kitchen entry.\n\n\"I want to thank you, Abby. My husband is brilliant but like most brilliant people there is a side of him that is not. As you have seen, that is in how he relates to others comfortably. He can be incredibly awkward. It was the force of his will that got this company started and the strength of his being that he pulled the company into becoming what it is. But it is too big for him to try to do everything. He understands now that he needs to let others do what they are good at and free him up to do what he is good at... and somethings he isn't yet good at but is incredibly important to him. He wants to excite people working there to be as excited about it as he is.\n\n\"Abby, we've gone to professionals, spent a lot of money to get the suggestions and advice for him to move forward in dealing with people. He comes home from trips thoroughly exhausted because taking the responsibility of interacting with customers, clients, and suppliers is just not his strong suit. He's a doer, not a talker. But, you dear, you've already empowered him. So, I thank you.\"\n\nI started to object but she held up her hand.\n\n\"You don't think you did anything. I get it. I think that who you are is a reason why he responds to you. From what I have learned about you, yes I have pried through some people at the office, you don't relate to others with an agenda or motive. You're open. You are who you are. He responded to that. He didn't feel a need to pretend or hide.\"\n\n\"Thank you, ma'am. I'm just not sure...\"\n\n\"I wanted a moment to talk to you so I have to hurry. Joe made the decision to have a Personal Assistant in part at my encouragement but also from his staff, too. They are supportive of his wish to pull back. It increases their responsibility and challenge but gives them the opportunities of success and gratification... probably reward, too. He has a problem with the selection. His staff came to a conclusion of one person for him. Without hearing it, he insisted on a formal three candidate interview process. All are very good candidates. For any other executive, any of them would be good. Joe is different, though. He isn't like the other polished executives. He knows it, they know it.\"\n\n\"Has he interviewed them all?\"\n\nShe looked intently back, \"He has. He has interviewed them, studied their resumes, talked to associates or those they report to. He's made his decision. There really was little doubt when he saw the names but tried to keep an open mind through the interviews.\" He interviewed all three. Who is the third candidate then?\n\n\"So, if he's made up his mind, what's his problem?\"\n\n\"He knows but there is something that is out of his control to make the decision he desires.\" She stared into my eyes. \"And, you, can help him. You're the only one, I think who can help him get what he wants.\"\n\nI shrugged. I had no idea what I could do to help that someone with real power in the company couldn't do easier. \"Anything. Whatever I can. Ma'am, I'd do anything for your husband.\"\n\n\"Anything?\"\n\nI shrugged and nodded. \"Anything that isn't illegal.\" She chuckled and assured me it wasn't illegal. \"What?\"\n\n\"When he offers, accept.\"\n\n\"Ladies,\" Mr. Cornell came through the entry. \"I couldn't find the same wine but this one should be about the same.\" She took it from him and volunteered to open it and bring clean glasses. \"Okay... yeah... uhmm... Abby, that gives us a moment. There is something I'd like to talk to you about.\" I looked back at her but she had turned her back, intentionally I was sure so there would be no further eye contact.\n\nHe led me into the living room. A funny thought came to me. I had been with him for hours tonight and all of it dressed. I hadn't ever been with him except when I was naked. He stopped next to a chair and I stopped next to another. I had a feeling about this and figured something to steady me might be good.\n\n\"Abby, you know I've been looking for someone to be a Personal Assistant for me. I think you can understand, maybe better than a lot of people, how much I want that person to be someone I could truly communicate with, who I could truly be comfortable with, and who I could truly trust.\" I nodded, not knowing anything to say.\n\n\"I received the recommendation from my staff, from Dan on an HR perspective, and the Directors. They all agreed. I interviewed the candidates.\"\n\n\"Three candidates, sir?\"\n\n\"Yes, three. I know what my decision is, Abby.\" He looked at me awkwardly. \"Abby, you undoubtedly had good reasons for not putting your name in for consideration. I don't know what those reasons were but I hope it wasn't that you didn't think you could work with me or wanted to work with me.\" I shook my head vigorously. \"Good. Good. Abby, I want you. Ohh... that came out wrong. I mean, I want you to be my Personal Assistant. I want to ask you to please keep an open mind this weekend and consider that. I want us to work together. Can you do that? Keep an open mind this weekend?\"\n\n\"No.\" It just it blurted out.\n\nHe looked surprised, shocked. From behind me came, \"WHAT?!?\"\n\nI turned to find Mrs. Cornell. She must have been standing just outside listening. She came in with the wine and three glasses she set on the coffee table. She stood next to him and put a comforting arm around his waist.\n\nI was a bit stunned myself. I knew what was going to happen. She essentially told me. Still... I stammered out, \"Sir, you said you interviewed all three candidates. You didn't interview me.\"\n\nHe smiled, perhaps still hoping there was an opening. \"I did, just not a formal one. Two night ago, Abby. I stayed around until you started clearing your desk. I called you over for a drink. We talked, remember? About a lot of things. I interviewed you.\"\n\nI shook my head. \"Sir, I can't keep an open mind about this over the weekend. Ever since that first night... the one I thought I found a problem and you came in late from the airport. You asked me why I was there so late. Sir... you talk about not relating to people but you related to me. You listened. You listened as I explained and together we worked back through the information. Then, you saw it, too. We worked out a plan to deal with it for the next day. That night... it is etched in my memory forever. Then, you opened up to me and asked my thoughts. You listened again. You acted.\"\n\nI saw him squeeze his wife. \"I did what you said, too. And it worked.\"\n\n\"I know! I was... so proud of you. You gambled on my simple suggestion.\" I looked directly at Mrs. Cornell. \"From that moment, I would do anything for him.\"\n\nShe squeezed him but spoke to me. \"But you didn't want to work for him? I don't understand.\"\n\n\"I ached to spend even moments with him. He made me feel so... worthwhile, significant. I knew of his concern of intimidation of power. When I worked late and saw the light on in his office, I wondered... hoped... he was still there. Maybe we could talk, again. It was literally an ache. But there was a reality check. I thought I would be laughed at. Why was someone with five or six months of experience putting herself with much more qualified candidates? It was my insecurity.\"\n\nHe asked, \"What are you saying, Abby?\"\n\n\"Sir, I won't keep an open mind this weekend because I am saying 'yes' now.\"\n\nShe crushed me in an embrace and called out, \"Joe, honey, get some of that good whiskey of yours. We're going to celebrate.\"\n\nI eased back slightly, \"Oh... wait... I've already had wine and I have to drive and...\"\n\nShe pulled me back into her embrace. \"No, you don't. We have a lot of getting acquainted to do so plan on spending the night.\"\n\nI looked over her shoulder. He was pouring three glasses of Gentleman Jack. He glanced at me with a smile and shrug that seemed to say it would be easier just to go with it.\n\nWe drank the first one pretty quickly and it burned going down. I shook my head as it sent a fog into my brain and a warmth washing over me. I watched him pour more and I giggled. She said, \"Abby, I want to see a lot more of you.\" I smiled and said something like that would be nice. \"No, dear, now. Now I want to see more of you.\"\n\nShe put her glass down and reached behind her back and pulled the zipper of her dress down. I looked at her, then at him. He had an expectant look on his face.\n\n\"Don't look at him, Abby. You've fucked him, already. It's my turn now. You want to be his assistant and lover? You get both of us. Can you do that? Take care of both of us?\"\n\nDamn, this was becoming a lot more than I expected. But, yes. I had no question. All those women in the office... yes. I began unbuttoning my blouse as I stepped up to her, leaned forward and moved my lips to catch hers. She moved her hands to lower the zipper completely as I finished unbuttoning my blouse. I shrugged the blouse off as she dropped her dress to her feet. I went straight for my bra. I unclasped it and shrugged it off, freeing my large breasts. She stopped as she was stepping from the dress pooled at her feet.\n\n\"Oh, God... Joe mentioned these.\" Her hands cupped underneath and lifted them as her thumbs rubbed the nipples. She bent over and sucked on a nipple and switched to the other as I loosened my skirt and pushed it over my hips to my feet. I reached for her own bra as she sucked. Her bra fell to the floor and she joined my gasping when I began fondling her breasts. I noticed some movement, looked, and found Mr. Cornell turning one of the chairs to more comfortably watch. He noticed me looking, held up his refilled glass in a salute, and smiled.\n\nWe parted but only enough to push panties to the floor. We were both standing in thigh-highs and heels looking lustily at each other. Mr. Cornell took action by leading us to the couch, sitting us pressed against each other and handing us refreshed drinks. He then moved to a chair facing us. He lifted his glass to us.\n\n\"This couldn't have gone any better. Not only do I have the PA of my desires but I have the two ladies in my life naked. My dear, have I mentioned that our Abby here has quite the reputation in the office for giving other women orgasms?\"\n\nI slipped my hand onto her stocking covered thigh and slid it to the inside. She looked at her husband and he nodded. She uncrossed her legs and my hand slid up the inside of her thigh to her pussy... her quite wet pussy. She gasped and slid down on the seat. I pulled her leg over mine and ran fingers up and down over her slit. I plunged a finger into her hole and she moaned delightfully.\n\n\"Do it Abby. I want to see her in her first girl-girl orgasm.\"\n\nHer first. How long ago was it that I had my first such encounter? The interview, of course. I took her glass from her hand and placed both on the side table. I went to my knees in front of her, parted her legs wider, pulled her hips to the edge of the couch and kissed my way up the inside of her leg. My lips and tongue making initial contact on her pussy brought another gasp. I placed my lips over her clit and sucked. Her moan was clear. I glanced up to find Mr. Cornell now sitting next to her, holding her hand and fondling a breast. I forced her knees up to open her to my mouth. I kissed, sucked, chewed, and probed with my tongue.\n\nAs her moans grew, I insert first two fingers but quickly added another. I sawed the fingers in and out of her pussy, the sound of fingers plunging in and out of her wetness provided a delightfully obscene sound to mix with groans, moans, and nonsensical murmurings. Her hips lifted off the couch, her hand gripping his hands hard. She professed her love to him between wild sounding moans even as she was being pleasured by another woman. I curled my fingers moving in and out, striking and stroking her g-spot, thumbing her clit, then sucking and nipping at her clit. Her orgasm was spectacular. Her body went rigid about six inches off the couch with my mouth, fingers, and tongue still working her. When she collapsed, she shook and shivered for minutes as my tongue provide more gentle contact in the aftermath and continuing after-orgasms.\n\nThat began the night."
    ],
    "authorname": "ikeman48",
    "tags": [
        "exhibitionism",
        "office",
        "bi",
        "bisexual",
        "group",
        "group sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/abby-and-the-ceo-ch-04"
}