{
    "title": "Eye of the Beholder",
    "pages": [
        "*Author's Note: Growing up ugly isn't easy. I know that firsthand. I also know what it's like to go through a complete transformation. The way people relate to you in the world of before and after is unbelievable. Same person, completely different reactions. Girls who used to nearly run to the other side of the hallway in high school to avoid even the possibility of me saying 'hello' to them were suddenly inviting me to parties, dances, and to 'just hang out' or...whatever.\n\nDuring my transformational period, I had the biggest crush on a girl named Vera. I wore braces on my horribly protruding teeth, and was still maybe 40 points overweight. Vera was a girl almost no attractive guy would have considered pretty let alone beautiful. Even most average guys would have thought, \"Yeah. Okay. Maybe.\" \n\nBut I thought she was very pretty in spite of her black glasses, teeth that were straight but ever-so-slightly protruding in front, and a chest that hadn't blossomed even at the age of 18. She was sweet, kind, thoughtful, and someone I wanted to kiss so badly it hurt.\n\nLooking back, I can't help but wonder what life with Vera might have been like. This is one possibility. \n\n******\n\n\"I know you're hurting, but I'd give my right arm to have a wife as beautiful as Sarah,\" his younger brother told him.\n\n\"I had her, and yet here I am still single and living alone.\"\n\n\"Yeah, but you gotta admit she was hot as hell.\"\n\n\"Would you stop with the sophomoric commentary? Please?\"\n\n\"Listen, you're my best friend, bro. I'm not trying to give you a hard time or make you any more miserable than you already are. I'm just pointing out a fact.\"\n\nJustin and Joel Anderson had been best friends...and also brothers...all their lives. Justin was 37 and two years older than his little brother who was actually slightly taller and heavier than Justin.\n\nThis was the way they supported each other. They didn't do deep, 'how does this make you feel' kinds of talks. They tended to use sarcasm and even dark humor to help each other get through whatever was bothering them at the time.\n\nLately, it was the way Justin's girlfriend, Sarah, had bailed on him. If it hadn't been so painful, it would've been funny. Funny as in right out of some Lifetime Movie funny.\n\nSarah had always been a handful. She was beautiful and knew it. Keeping her happy was nearly impossible, though Justin had nearly made it his life's mission to do so. And yet no matter how much he gave or how hard he tried, or how much money he spent, it was never enough.\n\nAnd then one day Sarah informed him she'd met someone. Someone from Italy. Someone tall, dark, and handsome. As Justin sat there listening to her say the words, it sounded like someone reading from a movie script. Until she said she was leaving with him when he returned Rome in two weeks. She did tell Jason how sorry she was and how much she really liked him, but that didn't stop her from leaving with Sergio, or whatever his name was.\n\nThat had been nearly two months ago, and Justin was still hurting. Of course, he'd never say that, but he didn't need to. Joel knew. He always knew. And when Joel was 'sucking wind', Justin also knew. \n\nBoth brothers were very attractive guys and always had been. They looked a lot like the twins on a show called The Property Brothers, although they weren't 6'5\" like the stars of that show were. But they did have that really great, dark, thick hair, the athletic body, the great smile, and at 6'2\" and 6'1\", respectively, they were both also taller than average.\n\nBeing attractive had always been a blessing, and both brothers had never doubted that. At least not until Sarah Carpenter, a woman at least Justin's equal in terms of looks, had so casually abandoned him. The kicker was that he was seriously thinking about proposing to her in the near future. Never married, Justin was finally ready to settle down and start a family, making the blow to his ego that much worse.\n\nHe and Joel owned a small contracting business together, and things were going gangbusters at work. So were things with Sarah until Flavio, or whatever his name was, had stolen her right out from under him.\n\nSo, also for the first time, Justin began seriously questioning whether being a very attractive guy was really a benefit or more of a curse. In the past, when he'd had zero interest in anything beyond hooking up, it had been an unequivocal advantage. But as soon as he started thinking about something longer-term, he couldn't help but wonder if it wasn't quite so advantageous as he'd always assumed.\n\n\"Dude, it has nothing to do with how hot you are. It has everything to do with the chick. Sarah was a stuck-up bitch. She was all about Sarah, 24/7. I tried to warn you, but you wouldn't listen,\" Joel told him.\n\n\"Yeah, you're probably right. But damn she was hot! And even hotter in bed,\" Justin added, having 'switched places' with his brother. \n\nJoel smiled then told his brother, \"I can't believe I'm saying this, but maybe sex isn't everything.\"\n\nJustin would have normally said something sarcastic in reply, but because, for the first time in his life, he really did want to have a family, he didn't.\n\n\"I can't believe I'm saying this, but...you might be right.\"\n\n\"As usual,\" Joel quipped.\n\nJustin thought for a moment then shook his head and said, \"I don't know, man. Maybe it isn't just Sarah.\"\n\n\"No, it was. Trust me, bro.\"\n\nJustin looked at his younger brother, who was often right, and decided he was right. He had to be. It was Sarah. Selfish Sarah. Yeah, that was all it was.\n\nIt didn't take Justin long to find another woman he and his brother thought was just as attractive as Sarah, and one who seemed to be a whole lot less self-centered. Why, then, did it feel like he was expending just as much energy to keep her happy and getting just as little in return as he had with Selfish Sarah? And it was that question he kept asking himself as the days wore on\u2014literally\u2014with this new woman.\n\nWhen he mentioned it to Joel, his little brother surprised him by saying, \"I get it now. I understand what you mean. It's like you're having to pull teeth or something, you know? When all you want is sex, it's no big deal. You just take 'em home, scrog the shit out of 'em, then say 'goodbye' on the way out. But as soon as you get serious, they start sucking the life out of you. Makes me glad I'm not anywhere close to wanting to settle down myself.\"\n\n\"Your time's coming, though. And if the way we tend to see the world the same way is any indication, I'd give you maybe two more years until 'the urge' hits you, too,\" Justin told him.\n\n\"Gee, thanks, buddy. Did you know 'buddy' was only half a word for guys like you?\"\n\nJustin laughed at the reference to him being a 'buddy...fucker' which wasn't true, at all. But that was the way they talked, only it was usually much worse.\n\n\"So I'm thinking about calling this whole thing off,\" Justin said.\n\n\"I don't blame you. I'd jump ship, too.\"\n\n\"And then what? If Sarah was the problem before, what is it this time?\"\n\n\"Maybe you just hit the reverse jackpot. You know, two losers in a row. It's possible.\"\n\n\"Yeah. You're right. It is possible. But what if...what if the problem really is with them? What's the common thread? Why are both of them so damn hard to make happy?\"\n\n\"Hell, I don't know. Maybe it's just the way women our age are, you know? Maybe they think that's what a serious relationship is supposed to be like. They look gorgeous for us, put out in bed just enough to keep us hangin' on, then expect the world in return.\"\n\n\"So the world they live in is one where we give and give and they just take and take?\"\n\nJoel shrugged and says, \"Beats the hell outta me, bro. I'm not the one lookin' to settle down, remember? I'm just throwin' shit against the wall. If somethin' sticks, you're free to use it.\"\n\nJustin didn't respond so Joel asked him a serious question.\n\n\"Have you run this by Dad?\"\n\n\"What? No. Why would I do that?\"\n\n\"Um, because he and Mom have been happily married for nearly 40 years maybe?\" Joel told him.\n\n\"Okay. Good point.\"\n\nJoel slapped his big brother on the shoulder then said, \"Couldn't hurt, right?\"\n\nJustin called things off with this second beautiful woman two days later then gave his dad a call the following morning around 11:45am and asked, \"Hey, Dad? You got a few minutes? Mind if I stop by and bend your ear for a while?\"\n\nHis dad laughed then said, \"I'm retired. I've always got a few minutes. And you know you don't need to call first.\"\n\n\"I know. I just wanted to make sure you'd be around the house.\"\n\n\"Sounds serious. Everything okay?\" his dad asked.\n\n\"Yeah. Sure. Everything's fine. Mostly, anyway. I'm just kinda hoping you can provide some perspective, you know?\"\n\n\"I'll give it my best shot,\" his dad promised.\n\n\"I'll be there in a few minutes then,\" Justin told him before hanging up and letting Joel know he was taking an extra hour for lunch and why.\n\n\"Good man. If Dad doesn't have the answer, there probably isn't one.\"\n\nJustin walked in just after noon and gave his mom a hug and a kiss before sitting down with his father.\n\nThe fact that he was just in time for lunch was an added benefit for both him and his mom, who loved making things for her boys. She brought him and her husband a couple of thick sandwiches then told them she'd let them talk.\n\n\"So what's going on, Justin?\" his dad asked before taking a bite of the toasted pastrami and cheese sandwich on rye he loved so much.\n\n\"I need some advice, Dad.\"\n\n\"Okay. Shoot.\"\n\nJustin laid out the problem the best he could while his dad listened carefully as he continued to eat. When he was finished, Justin picked up his sandwich and chomped on it while his dad offered his take on things.\n\n\"Did you ever hear the old country song Lookin' for Love in All the Wrong Places?\" was the first thing his dad said.\n\n\"Yeah, sure. I don't know it, but I've heard of it,\" Justin said as he chewed. \"You made us listen to that...stuff...the whole time we were growing up.\"\n\nHis dad chuckled knowing he was the only country music lover in the family.\n\n\"Well, that's the problem for most people. They spend their time looking for love in all the wrong places.\"\n\n\"How so?\"\n\n\"You understand that love and sex aren't synonymous, right?\"\n\n\"I uh, I think I just recently figured that out,\" his elder son admitted the way a child who learns the hard way his parent was right tends to do.\n\n\"Then don't get them confused when you start looking for love, son. I won't ask, but something tells me you've had plenty of sex. But you must not have experienced love yet or we wouldn't be talking.\"\n\nJustin just shook his head as he marveled at how wise his dad was. The same man he thought didn't know his ass from his elbow when he was a teenager was now a frikkin' genius.\n\n\"So how do I find love? And please don't tell me it doesn't include sex,\" he said to his father.\n\nHis dad laughed then tried to explain.\n\n\"There are all kinds of 'push-pulls' in we human beings, Justin. We crave intimacy but also want solitude. We want to work hard and do well, but we also need to play. As in relaxing. Watching or playing a game. Going skiing. Taking the dog for a walk. Then you have the issue of putting a man with his own wants and needs together with a woman who has hers. The potential for conflict is everywhere.\"\n\n\"You're not exactly helping, Dad. I'm looking for solutions not problems.\"\n\n\"Before you can find answers you have to know what the problems are, right?\" his dad said with a smile. \"Only then can you work on the solutions.\"\n\n\"Can you maybe boil this down for me into something simple I can take away? I'm not dumb. I just don't do the whole 'analysis thing' too well.\"\n\n\"How about this? Assuming you're the kind of guy who's willing to give as much as he hopes to take, and I believe you are, then maybe try looking for someone who'll be thrilled to give. No offense, but Sarah was a taker. I saw that from the first time you brought her home. Everything was about her. There can't be an 'us' with a woman like that, son. Now I'm not saying you can't find it with a girl that pretty. It just makes it a whole helluva lot harder.\"\n\n\"So...go ugly early?\" Justin asked, taking a stab at trying to boil it down for himself.\n\n\"Uh-uh. Not ugly. Remember, you'll be looking at this girl the rest of your life. So if you don't find her attractive, it'll never work. Or you'll at least have the deck stacked way against you. But if you can find someone you think is attractive, but most men don't, and assuming she's a willing giver, too, then you've hit the jackpot. Other obvious character flaws aside.\"\n\n\"Character flaws?\" Justin asked as he finished the last bite.\n\nHis dad wanted to ask if he'd paid attention growing up but didn't.\n\n\"Yes. Is she a liar? Does she have a sneaky side? Is she so unsure of herself that she lacks confidence to the point where you'll spend all her time trying to reassure her? That kind of woman will probably never cheat, but listening to her beg for constant reassurance will wear you down. To a nub.\"\n\n\"I'm still waiting for the takeaway line, Dad,\" Justin said as he gulped down half the glass of milk.\n\n\"Okay. Here's the bottom line. Find a really nice, very sweet girl no one else has noticed. Again, she's gotta be attractive\u2014to you\u2014but not one that's gonna turn every head in the room everywhere she goes, and especially not one like Sarah who'll look back\u2014and flirt\u2014with them.\"\n\n\"So...she's gotta be beautiful\u2014to me.\"\n\n\"Exactly. Remember, son\u2014beauty is in the eye of the beholder. If you find a good, decent girl you think is pretty in a way only you can see, she'll walk on hot coals to make you happy. But again, if you 'go ugly early', you'll wake up one morning and wonder what the hell you've done to yourself. You'll regret it and that won't work. But if you choose wisely, that woman will make you the happiest man on earth.\"\n\n\"Why can't she be all those things and gorgeous?\" he asked.\n\nHis dad sighed then explained why\u2014again.\n\n\"She can. But the prettier you need her to be, the harder it gets because you won't have that kind of power in the relationship.\"\n\n\"Power?\"\n\n\"Yes. Looks are one of many different dynamics in a relationship, and the better-looking person almost always has power. Not like a dictator. But it's human nature. You're asking about beauty because we're driven to want that. We all do. But unlike you, most people have to realize early on that gorgeous women are out of their league. So they stop looking for 'nines' or 'tens' and look for 'sixes' or 'sevens'. If a guy who's a 'seven' can find his perfect 'five', he's in like Flint. For you, you look for that 'six' or 'seven' that you think is cute as hell, but not gorgeous, and go for it.\"\n\n\"Vera Carson,\" Justin said out of the blue.\n\n\"Who?\"\n\n\"A girl in my class growing up. She was the only girl I ever had a thing for who wasn't gorgeous.\"\n\n\"I don't remember her,\" his dad said.\n\n\"No. You never met her. But she was so pretty to me. I remember telling someone that one time, and the guy dogged me so bad I had to lie and say I was just jokin' around.\"\n\n\"You didn't have to lie,\" his dad reminded him. \"But I understand what you mean. At that age, peer pressure is everything. After that you'd have never asked her out because you weren't equipped to deal with the kinds of things the other guys would have said. But you're not a kid anymore, Justin.\"\n\n\"It's weird, but she was so...plain...and yet I really liked her.\"\n\nHe made sure his mom wasn't listening in then said quietly, \"She was flat as a board, wore glasses, and skinny as a toothpick. But those eyes of hers just killed me. And she'd smile at me all the time. And damn near every time she did, I got a woody.\"\n\n\"Lemme guess. She was smart, too.\"\n\n\"Yeah. How'd you know?\"\n\n\"It just makes sense.\"\n\nNow it was his dad's turn to lean in close and talk quietly.\n\n\"A girl like that can oftentimes fool you when it comes to...you know...\"\n\n\"Sex?\" Justin said a little too loudly.\n\n\"Keep it down, would you?\" his dad said as he looked over his shoulder. \"Your mom's no prude, but that's just something we don't discuss around here.\"\n\n\"Thanks, Dad. Because the last thing I ever want to hear about is my mom and dad doing the bad nasty.\"\n\nHis dad smiled an evil smile then said even more quietly, \"I can assure you she's very good at being n...\"\n\n\"Dad!\" Justin said as he raised up in his chair and held up a hand that said 'please stop right now'!\n\n\"Okay. Sorry. But...well, it's the truth. I chose well. What else can I say?\"\n\n\"Not much, I hope,\" Justin said as he gave his dad the eye then smiled.\n\n\"So this is the secret? This 'eye of the beholder' thing?\" Justin asked.\n\n\"Yes, all other things being equal. It just takes a whole lot of stress out of the relationship from having to constantly do things to make her happy or 'proving your love for her'. Again, you might find that in a girl as pretty as Sarah, but...\"\n\n\"But the odds are against it.\"\n\n\"In a big way. Getting all of that in one woman is like picking one lucky number on a roulette wheel and the ball landing on it. What I'm suggesting doesn't guarantee happiness, but it increases the odds exponentially. Like being able to bet only on Red or Black and hitting it big.\"\n\n\"Hmmm. I don't know, Dad. But I will say it makes sense. You've definitely given me something to think about.\"\n\n\"Keep your eye out for your new...what was her name?\"\n\n\"Vera.\"\n\n\"Right. Keep your eye peeled for the Vera of 2018. She's out there, and if a guy like you treats her right, well, you're in like Flint,\" his dad said, using the same line one more time.\n\nJason remembered something from that movie made back in 1967 that he'd watched with his dad way back when. One of them was that the star, James Coburn, was a former secret-service agent where the agency he worked for was abbreviated Z.O.W.I.E for 'The Zonal Organization for World Intelligence Espionage'.\n\nJason shook his head then said, \"In like Flint. Zowie, Dad. Zowie.\"\n\nHis father got it immediately and laughed. Then he got serious.\n\n\"Choosing your wife is quite possibly the most important decision you'll ever make. I joke about 'choosing wisely' like the guy said in The Holy Grail movie. But choosing wisely largely determines how happy your marriage will be, and if you choose someone based on looks\u2014someone like Sarah\u2014you're in for a long, miserable ride, my friend.\"\n\n\"Yeah, I really dodged a bullet there, didn't I?\" Jason mused.\n\n\"Find your Vera, son. Then hold on tight and enjoy the ride.\"\n\nJason's mom came back in just then and said, \"Did you get enough to eat, honey?\"\n\n\"I did, Mom. In more ways than one.\"\n\nHe hugged his mom and kissed her goodbye before leaving, and also thanked his dad, who walked out to the car with him.\n\n\"Good luck, son.\"\n\n\"Thanks, Dad. It's just so amazing how smart you got from the time I was 14 until I turned 21 or so. And you keep getting smarter every year I'm alive.\"\n\nHis dad laughed, slapped him on the shoulder then waved goodbye.\n\nOn the way back to work, Justin kept thinking about the things his dad had just shared with him, and he couldn't help but wonder if maybe there really was a 2018 model of Vera Carson. And then he wondered about the real thing. Could she possibly still be single? If so, what did she look like some 20+ years later? Would she still be...beautiful to him? \n\nHe'd lost track of her, just like most of his graduating class the day after commencement. A quick look at the odds told him the real Vera couldn't possibly still be single, but there had to be a quite a few like her he could choose from. If he could find them. \n\nThat created a small amount of anxiety as he'd never once thought about how to find or attract any girl or woman who wasn't in the '8.5 - 10' range. Where would he even look? How would he go about meeting women like that? Would they have trust issues wondering if he was sincere simply because he was considered a really attractive guy?",
        "That, too, was something brand new; something he'd never once thought about. The closest thing he could find to use as an analogy was the way he felt about Sarah when they went somewhere. He was constantly watching other guys, all of whom were looking at her, for those she might have smiled at or flirted with. It wasn't the same thing, but it was a kind of insecurity, and all he knew was he hated that feeling.\n\nBut Justin learned something important in that brief ride back to work. He would have to be completely open and honest to allow this new Vera to be able to trust him. The thought of her feeling that way everywhere they went bothered him and was unacceptable.\n\nOver the next three months, Justin found that old habits really are hard to break. In that time, in spite of what he thought were serious intentions to change, he racked up a dozen or so new hook ups but not one relationship, let alone with a girl like Vera.\n\nAnother month passed, and two weeks before Justin turned 38, Joel let him know their office manager was quitting.\n\n\"No. Don't even tell me that,\" his older brother said.\n\n\"I'm serious. She just got engaged, and her fianc\u00e9 lives in California,\" Joel told him.\n\n\"California. That's not near Italy, is it?\" Justin quipped.\n\n\"Um...no, but some say it is its own country now,\" Joel said back in his typically sarcastic style.\n\n\"Shit. How much notice is she giving?\"\n\n\"Thirty days.\"\n\n\"That's better than two weeks, right?\" Justin asked rhetorically.\n\n\"I'll start advertising the job online. Can you check with that agency in Seattle that trains and hires the kind of person we need?\"\n\n\"Person? You mean as in a man or a woman? You can't seriously be thinking about bringing a guy in here.\"\n\nJoel just shook his head.\n\n\"No, I'm not thinking of bringing a guy in here. Excuse the hell outta me for saying 'person'. Sheesh.\"\n\nJustin had never even considered that a guy...a man...might be as good or better than a woman. But it just didn't seem to fit no matter how hard he tried to look at the practical side of it. He didn't think he was a sexist, and yet he had to admit he really, really wanted another attractive\u2014and talented\u2014woman to work in the office.\n\nIt took a few days to get any traction, but their feelers got several hits by the end of the week. Now it was up the brothers to make time for interviews, something neither of them enjoyed. They like working with their hands, and they were both very good at it. They enjoyed fixing and building things, not sitting in an office asking questions. But it had to be done, so they set aside an hour a day for a week to interview the first five candidates after screening over fifty resumes then whittling them down to just five.\n\nThe first woman was named Candy Hale, and the brothers both laughed and said, \"Sweet!\" at the same time when their outgoing office manager told them Candy was waiting.\n\nCandy was maybe 45, a bit on the heavy side, but otherwise highly qualified and very experienced. Hiring her on the spot would have been a no-brainer but because they'd already scheduled the other interviews, they decided to follow through with them.\n\n\"Besides, it would be nice to find a woman like Candy who was also\u2014eye candy, right?\" Joel said after they finished the interview.\n\nJustin laughed out of habit, but he realized things like that weren't as funny to him anymore as they'd once been. And for the first time in many days, he remembered the talk he and his dad had had.\n\nThe following day they interviewed another older woman. She was slightly more attractive, but not nearly as qualified and had only one year of experience. They thanked her for her time, and let her know they'd get back to her.\n\nIt was the third candidate that turned Justin's world on its head.\n\n\"Taylor Donovan is here to see you,\" their office manager said as she peeked into the office.\n\nBoth men stood up to shake her hand, welcome her, and ask her to have a seat.\n\nJoel paid little mind to her personal appearance, but Justin was unable to stop staring. \n\nTaylor was maybe 5'6\" and no more than 100 pounds\u2014if that. She was not only very thin she wore black-framed glasses, and had no visible signs of growth in the chest area. Her dark hair was clean and straight, but certainly wasn't silky or anything close to sexy. Were she to style it, it had potential, but she wore it straight and it was a plain as she was.\n\nShe sat down, pulled her knees together, sat up straight and tall, and smiled.\n\nTaylor's smile was nervous but also genuine. Her teeth were almost perfectly straight but by no means perfect. The resemblance to Vera was so uncanny it caught Justin off guard to the point he was having trouble focusing.\n\nHe heard Joel say, \"Justin?\" then felt a nudge in the ribs.\n\n\"What? Sorry,\" he said as he finally stopped staring at the woman sitting in front of them.\n\n\"I was just telling Taylor how glad we are to have her stop by and that we're looking forward to talking with her.\"\n\n\"Right. Yes. Yes, we are,\" he said as he looked back over at her.\n\nThe innocent way she looked at him and the obvious nervousness were somehow...scintillating. He fumbled with her file, took a look at it to refresh his memory then began the interview.\n\n\"Ms. Donovan, I see her you recently graduated from the University of Washington.\"\n\n\"Oh, yes. I finished up in June and have been looking for work since,\" she said with a smile Justin found...charming.\n\n\"Um...since you have a college degree, what is it that interests you in working in a small office like this?\" he asked.\n\n\"My family\u2014my parents\u2014live here, and I really don't want to leave the local area, so I was hoping to find employment nearby. My parents have used your company, and told me they were very satisfied with your work. So when I learned of the opening, I thought it would be an excellent opportunity for me.\"\n\nJustin sort of nodded while tilting his head then asked, \"I see you have no experience with any kind of office management. What makes you think you could do the job?\"\n\nIt wasn't a challenging question. It was one that simply needed to be asked.\n\nTaylor provided a sound, reasonable answer, then he turned it over to Joel to ask more technical questions about the software programs they ran to manage their business, and Taylor's responses were very impressive.\n\nThey thanked her, too, then discussed her qualifications after she left.\n\n\"She's not much to look at, but I like her,\" Joel said.\n\n\"I don't think so,\" Justin said almost immediately.\n\n\"You don't think she's a plain Jane or you don't think she's qualified?\"\n\nJustin hadn't shared any details of his talk with their dad, and he didn't feel like getting into right then and there with his brother.\n\n\"She's not ugly,\" Justin said hoping that would satisfy his brother.\n\n\"I didn't say she was ugly, dude. I said she isn't much to look at. She's got that...mousy look, you know? It's almost clich\u00e9 to say it, but she looks like she belongs in an office. Or maybe a library.\"\n\n\"Yeah. Maybe so,\" Justin said absentmindedly. \"Let me think about it, okay?\"\n\n\"Yeah, sure. We still have a couple more people...women...to see, so let's let this play out.\"\n\nBy the end of the week, they'd narrowed it down to Taylor and Candy, with Candy being the more experienced of the two with Taylor having the advantage in terms of computer skills and overall education.\n\n\"So? What's the verdict?\" Joel asked. \"I'd be okay with either one, so you make the call.\"\n\nJustin hadn't been able to stop thinking about the lithe, young woman and wanted to have Taylor right there in front of him every day, and yet he knew Candy was the more qualified of the two. She'd lived there all her life, her family was there, and she wasn't going anywhere. Taylor, on the other hand, was young and even though she said she wanted to be near her family, that could change. She could meet someone from say...Italy...and be gone, and stability was very important. Their current office manager had been with them since day one, and the idea of someone leaving in a year or so wasn't a pleasant thought.\n\n\"I say we go with Candy,\" Justin told his brother.\n\nJoel laughed, said, \"Sweet!\" again, then high-fived his brother.\n\n\"Just don't say that\u2014or Candy Cane or Candy Land or anything else\u2014when she's here, okay?\"\n\nJoel laughed again then said, \"You wanna call her and give her the good news?\"\n\n\"No, you take care of that. I'm gonna let Vera know she was our runner-up.\"\n\n\"Vera? Who the hell is Vera?\" Joel said, giving his brother a puzzled look.\n\n\"Vera? No. I meant...Taylor. I'll give her a call and let her know it was close.\"\n\n\"Yeah. Good idea,\" Joel said, having already forgotten about the Freudian slip. He had no idea who Vera was or that his brother had ever had a thing for her, so it wouldn't have mattered anyway.\n\nJustin waited until close to 10am before calling the number Taylor gave as her primary point of contact. It rang twice before he heard her answer.\n\n\"This is Taylor,\" she said rather than 'hello'.\n\n\"Taylor. Good morning. This is Justin from...\"\n\n\"Yes. Good morning. How are you, sir?\" she asked pleasantly.\n\n\"I'm doing very well,\" he told her trying to sound just as cheerful.\n\nJustin knew she was aware of why he was calling so when she didn't reply, he understood she was waiting for him to speak.\n\n\"First of all, both my brother and I were very impressed with you during the interview.\"\n\n\"Thank you,\" she said quietly sensing there was a 'but' coming.\n\n\"We also had another candidate we liked very much.\"\n\n\"Oh, okay,\" Taylor said just as quietly.\n\n\"She has many years of experience running an office, and we felt like she was the better choice.\"\n\n\"I see.\"\n\n\"We'd have loved to have you, Taylor. We know you'd have done a really good job for us.\"\n\nWhen she didn't respond, Justin wasn't sure what else to tell her so trying to be lighthearted he said, \"It would have been nice having such an attractive young woman on our team, and if anything comes open, we hope you'll keep us in mind.\"\n\nBefore he finished speaking, he knew there was nothing else that could come open unless Taylor was to become a licensed contractor.\n\nHer reply surprised and even stung a little.\n\n\"Sir? I did my very best. I took the interview seriously and would have loved to work for you. But just because you and your brother are model-handsome doesn't mean you can make fun of me because I'm not. I'm well aware in not exactly an attractive girl, but I do my best to look professional. Reminding me that I'm not exactly in your league is just very unfair of you. I'm old enough not to be hurt by it anymore, but it's still an issue I struggle with, so please try and keep in mind we're not all created equal. At least not where appearance is concerned.\"\n\nJustin was so taken aback, he was speechless. Taylor had come across as thoughtful and well-spoken but never wordy. But the tongue lashing he'd just received had been lengthy and detailed. In his mind, it was undeserved because he'd meant nothing close to the way she'd taken it. However, judging by her quiet lambasting, Justin needed to at least try and make this right.\n\n\"Taylor?\" he began. \"I believe we have some kind of disconnect.\"\n\n\"I agree,\" she said. \"I should have only been considered on my qualifications. But if the way I look cost me the job, then yes, something is very wrong.\"\n\nJustin was so lost he wasn't sure how to proceed. He knew he had to say something. He just wasn't sure what to say.\n\n\"Taylor? Would you please give me the chance to talk to you in person? I feel like we're two blind men describing the same elephant from different ends.\"\n\nJustin wasn't politically correct, but he'd lived in the Seattle area long enough to know that a very large percentage of the people there were. \n\nFearing she might take offense at the reference to being blind he added, \"And I mean no disrespect to the visually impaired.\"\n\n\"I really don't see any reason for us to meet, Mr. Anderson. I believe you've already explained things quite well.\"\n\nExasperated, Justin said, \"I want you to know I not only didn't mean any disrespect\u2014I meant what I said.\"\n\n\"Now you're just being patronizing,\" she said.\n\nJustin couldn't tell if she was angry or hurt, but it was obvious he was still upset.\n\n\"Taylor? Please let me at least try and explain myself. I'd very much like to sit down over coffee or even lunch and try and straighten this all out. Would you please at least let me do that?\"\n\nThere was silence for several seconds before she said, \"I suppose it's possible I overreacted. If so, then perhaps I owe you an apology, Mr. Anderson.\"\n\n\"No. Not at all,\" he said feeling relieved. \"But I'd feel much better if we could spend even just a few minutes together. I think it's important for you to hear it from me directly. The phone is better than email, but some things just need to be handled face to face. So would you at least let me buy you a cup of coffee and try and pull my big foot out of my even bigger mouth?\"\n\nHis tone of voice must have helped, because hers changed, too.\n\n\"If you really feel like that's necessary, then...okay. I'd be willing to sit down with you and talk,\" she told him.\n\n\"I don't know your schedule, but I'm able to take some time during lunch to meet with you. If you haven't eaten, I'd be more than happy to buy you lunch,\" he told her.\n\n\"Well, I don't really have anything planned, but I'm not exactly dressed to go out. I'm anything but professional-looking right now,\" she explained.\n\n\"That's fine. It doesn't matter to me what you wear. I just want you to know I'm not the kind of person you think I am.\"\n\nHe sat there shaking his head trying to figure out how a simple phone call had gone so far afield.\n\n\"I suppose it doesn't really make any difference,\" she said in a way that made him wonder what that meant. Maybe she was one of those women his dad referenced who are terminally insecure. If that was the case, it would be very hard to get beyond that.\n\n\"I only meant my interest isn't in your clothes. It's in fixing this,\" he said no longer sure what it was he was trying to fix.\n\n\"Well, I...I suppose that would be okay,\" she said with some hesitancy. \"As long as it's some place simple.\"\n\n\"I have your address from your resume. If you're at home, there's a Jack in the Box not too far from there. Would that work for you?\"\n\n\"Oh, sure. I know exactly where that is. I actually used to work there when I was in high school,\" she told him.\n\n\"And is noon okay?\"\n\n\"Um...sure,\" Taylor told him. \"I can meet you there at twelve.\"\n\n\"Great. And thank you for giving the opportunity to redeem myself.\"\n\n\"As I said, perhaps I'm the one needing to do the redeeming.\"\n\nJustin said very pleasantly, \"Either way, I'll see you there at twelve o'clock.\"\n\n\"Okay. I'll be there,\" she said almost sweetly.\n\n\"What the hell was that all about?\" Joel asked. \n\nHis call to Candy had lasted less than thirty seconds while his big brother had been on the phone for a several minutes.\n\n\"How long does it take to say, 'Sorry. Better luck next time'?\" Joel kidded.\n\n\"I'm actually gonna go sit down with her. We had a kind of misunderstanding, and I want to try and work it out.\"\n\n\"What kind of misunderstanding? Did you tell her she got the job or something?\" his brother asked trying to figure out what Justin meant.\n\n\"No. Nothing like that. I think I might have said something to offend her.\"\n\n\"Yeah, so? You'll never see her again, right? So what's the big deal?\"\n\n\"She seems like a really nice girl. I don't want her thinking we're a couple of assho...jerks,\" Justin said.\n\n\"Yeah, well we kind of are,\" Joel said with a laugh.\n\n\"I guess, but maybe I'm tired of being one.\"\n\n\"Hey, it's your time. Do whatever you like with it, bro,\" his brother said, unwilling to keep beating what he thought was a dead horse, and Justin was glad to let it go.\n\nHe got up at a quarter 'til twelve and told Joel he was headed out.\n\nHis brother shook his head again then said, \"If she was hot\u2014or even cute\u2014I wouldn't expect you back for a couple of hours. But since she's not...\"\n\nHe looked at Justin then said, \"Tell me again why you're doing this?\"\n\n\"I'll be back in a while,\" was all Joel got in response.\n\nAs he headed for the Jack in the Box, Justin was doing his best to try and forget about the misunderstanding and found himself looking forward to sitting down with Taylor. He couldn't help but think if he could enjoy spending time with her, there might really be hope to find his modern-day version of Vera. It almost certainly wouldn't be Taylor, but she could prove very valuable in his future search.\n\nHe pulled in right at noon, hopped out, and headed inside. As he walked up, he saw her standing just inside the first set of glass doors, obviously waiting for him.\n\nShe'd told him the truth about not looking professional. She was wearing a pair of jeans and a simple green blouse. Her hair was pulled back into a ponytail, and once he opened the doors he could see she was wearing a bit of mascara under her glasses, the only makeup on her face.\n\nEven so, Justin thought she looked great and smiled when their eyes met.\n\n\"Hi, Taylor,\" he said. \"Thank you for agreeing to meet with me.\"\n\n\"I felt I owed you at least that much since I may have been the one to cause all of this,\" she told him.\n\n\"How about we hold off on assessing blame for now and get something to eat?\" he suggested as he opened the inner door for him.\n\n\"Oh, thank you,\" she said as she kind of bent down then walked through first.\n\n\"You're welcome,\" he told her as he caught up. \n\n\"So...what can you recommend?\" he asked as he nodded at the menu behind the counter.\n\n\"Well, you could run while there's still time,\" she said with a smile.\n\nJustin laughed and smiled at her, too.\n\n\"I like your sense of humor,\" he told her.\n\nHer smile brightened before she said, \"I wasn't kidding. I used to work here, remember?\"\n\nJustin laughed again and found himself enjoying her company already.\n\n\"Well, we could go somewhere nicer,\" he told her just as he remembered her previous comment. \"Unless, of course, you'd rather not.\"\n\n\"No, this is fine,\" she said. \"I'm really not dressed for it, and I'm sure you wouldn't want to...you know...get caught at a decent place with the likes of me.\"\n\nJustin stopped walking and turned to face her but not in a confrontational way.\n\n\"I would be very proud to be...seen...with a woman as pretty as you are...anywhere,\" he told her quietly and sincerely.\n\n\"I'm sorry, I don't mean to be rude, but guys like you aren't seen with girls like me. Unless it's business, of course, and as I said, I'm not professionally dressed.\"\n\nShe wasn't being rude. She was being honest. Taylor was very aware of how things worked. Guys like Justin dated girls who were extremely hot and sexy\u2014not girls who looked like her. She wasn't offended. She just 'knew the deal'.\n\n\"Maybe we have more to talk about than either one of us thought,\" Justin said with a smile as he looked right at her.\n\n\"I don't understand,\" Taylor said with a look that told him she truly didn't.\n\n\"Come on. Let me take you someplace nicer that isn't...fancy. Is that a reasonable compromise?\" he asked with yet another smile.\n\n\"Now I really don't understand,\" she said as she tried to hold his stare.\n\n\"Give me a chance to help you understand, okay? It's my treat, and if you find me to be truly reprehensible, I'll bring you back here and you'll never have to see me again.\"\n\n\"You want me to ride with you?\" she asked, her eyebrows raised high in disbelief.\n\n\"Sure. You're welcome to follow me if you'd like, but it would seem a lot simpler if we rode together. Your call,\" he said keeping the smile going.\n\n\"Well, I know you own a business, and my parents know who I'm meeting, so I suppose that would be okay,\" she said rather tentatively.",
        "\"Great! Then let's go get some real food,\" Justin said as he nodded back the other way.\n\nHe opened both doors for her then opened the door of his truck, too.\n\n\"I can't remember the last time a man opened a door for me,\" she said right after thanking him.\n\nHe laughed then told her, \"Well, I can't ever remember letting a woman open a door for herself!\"\n\nTaylor finally laughed, and Justin thought to himself she was more than attractive enough. In fact, she had a kind of girlish charm about her that he found quite appealing, and was now very interested in getting to know her better.\n\nOnce they got out on an actual road, he said, \"I'm very sorry if I offended you this morning. I certainly didn't mean to.\"\n\nHe glanced over at her and saw her glance at him then look away.\n\n\"No. Now that I think I about it, I can tell I was just being defensive. I hope you don't think I'm...well...I'm sure you must think I'm a...flake. Or worse.\"\n\nShe shyly glanced his way again, and when they made eye contact, Justin smiled.\n\n\"No, not at all. I'm still not sure what I said, but I don't think anything even close to that.\"\n\n\"Well, thank you, Mr. Anderson. I suppose I just assumed you were...\"\n\nShe hesitated then said, \"This sounds so terrible.\"\n\n\"No. Go ahead. I probably deserve it,\" he said with a big old smile.\n\nTaylor laughed again then said, \"Thank you for making me feel so at ease. I was really dreading this, to be honest.\"\n\n\"I'm glad,\" Justin said as he waited for her to explain.\n\n\"Anyway, when you mentioned not having an attractive girl around the office, I automatically took that to mean you realized I'm not exactly attractive and were using it as an insincere throwaway line. I know now I completely overreacted and I apologize.\"\n\n\"No. Please don't,\" Justin told her. \"I get it now that you explained how my comment made you feel. But I'm the one who's sorry, Taylor. I had no intention of making you feel bad.\"\n\nHe paused then said, \"I was just being honest.\"\n\nWhen he glanced over at her again as the rode along, he saw her roll her eyes.\n\n\"You don't have to pretend, Mr. Anderson. My overreaction aside, I'm really not sensitive about my looks. We're all born with them to varying degrees, and I'm perfectly content with who I am and how I look.\"\n\n\"Taylor? Would you please call me Justin?\" he said, hoping to derail her from what sounded like putting herself down.\n\n\"Oh, sure. I'm sorry. I just can't help thinking of you as my employer. Or my ex-possible employer. Or whatever that would be.\"\n\nShe smiled again, and Justin felt much better. They were getting close to the restaurant he wanted to take her to, but he had at least one more thing to say before they sat down to eat.\n\n\"I don't want to sound overly dramatic or anything, but it's really important you believe me when I tell you I find you attractive, Taylor.\"\n\nShe didn't roll her eyes this time, but she did raise an eyebrow.\n\n\"I'm pretty good at assessing other people's character, and I'm convinced you're an honest man, but what you just said doesn't fit with anything I've ever experienced. However, I will take you at your word and just thank you for being so kind.\"\n\nNot sure if he should press the issue, Justin only added, \"I wasn't being kind, Taylor. Or at least I wasn't just being kind. I meant that very sincerely.\"\n\nShe glanced at him again just before he turned into the parking lot and smiled sweetly and thanked him again.\n\nThen she said, \"Oh, in case you didn't know it, you're a very handsome man...Justin.\"\n\nHe smiled but didn't say anything other than, \"I hope this place is a little better than Crack in the Jack.\"\n\nTaylor laughed louder than he'd heard, which wasn't loud at all, and said, \"I haven't heard it called that in years. But that's what we all called it.\"\n\n\"As far as fast food goes, it's as good as any other. I wouldn't want to eat there every day, but it isn't...awful,\" he told her.\n\nHe looked over and saw her smiling then said, \"Okay. It is pretty awful, isn't it?\"\n\n\"Oh, yes,\" Taylor said. \"It's pretty awful.\"\n\n\"And this is more than nice enough,\" she said referring to his choice for lunch.\n\nShe started to open her door when he held up a hand and said, \"Oh, no. That's my job.\"\n\nShe pulled her hand away and said with a smile, \"I'm very sorry. I didn't realize that.\"\n\nHe ran around, opened her door, then bowed at the waist.\n\n\"Ma'am!\" he said as he raised up and offered her his hand.\n\nShe was light as a feather and straight as a board, and yet Justin found himself somewhat aroused just by the touch of her hand. He didn't want to let go but realized that really was too much too soon.\n\nInstead, he smiled and held out his elbow. Taylor looked at him so he nodded to tell her, \"Go ahead,\" and she did.\n\n\"I wish I'd worn something nicer,\" she said as they walked inside. \n\nIt wasn't a high-end restaurant, and other women were wearing jeans, but Taylor would have at least liked to have worn a nicer pair of pants and a prettier blouse or even a dress. But Justin didn't seem to mind at all, so again, she trusted that he meant what he said.\n\nA very pretty girl, who was the hostess, recognized him and said hello immediately.\n\n\"Hi, Justin! Long time no see,\" she said while looking only at him. Justin had completely forgotten she worked there and was visibly uncomfortable.\n\n\"Hey, Avery,\" he said back weakly. \"Yeah, it's been crazy busy lately.\"\n\nHe noticed she hadn't noticed Taylor and said, \"Avery, this is my friend, Taylor. Taylor, this Avery, and old...acquaintance.\"\n\nThere was an uneasy exchange of 'pleasantries' leading Taylor to wonder if she might be more than just an 'acquaintance' as the girl was very pretty and roughly her age. She learned long ago not to be jealous of other people as jealousy, like anger, was a wasted emotion. Neither solved anything and only made the people who wallowed in them miserable. If she had been more than a friend, it was none of her business. Besides, this was nothing but a quasi-business lunch, and she would never see Justin\u2014or Avery\u2014again.\n\nAvery seated them and let them know their server would be right with them.\n\n\"She's very pretty,\" Taylor remarked.\n\n\"Avery? Oh, sure. I guess,\" he said nonchalantly.\n\n\"You see, when you're as attractive as you are, beautiful women are no big deal. But trust me, she's very beautiful.\"\n\nJustin picked up a menu, looked right at Taylor, then said, \"Okay, but I prefer my present company just the same.\"\n\nTaylor wrinkled up her face a little as she tilted her head in doubt but didn't say anything in response.\n\n\"So...what's good here?\" she said trying to steal his line from Jack in the Box.\n\n\"Pretty much everything,\" Justin said. \"I love their catfish.\"\n\n\"Seriously? Is catfish even edible?\" Taylor asked, her face slightly more wrinkled up this time.\n\n\"Oh, it's delicious,\" he told her. \"Are you brave enough to try it?\"\n\n\"Well...I was willing to eat a fish sandwich at Crack in the Jack, so...\"\n\nJustin laughed a hearty laugh just as their server, a women a little older than Justin, walked up.\n\n\"What can I get you two?\" she asked pleasantly.\n\nJustin raised an eyebrow at Taylor and she told him, \"Okay.\"\n\n\"Two orders of catfish with hush puppies and slaw and...\"\n\n\"Is iced tea okay?\"\n\n\"Sure. That's perfect,\" Taylor told him.\n\n\"Two iced teas. Coming right up,\" the woman told them.\n\nJustin leaned closer then whispered, \"She has to run out and catch them first, so it could be a while.\"\n\nTaylor tilted her head and tried not to laugh, but she couldn't help it.\n\n\"You're ridiculous!\" she told him with a smile.\n\n\"Well, as long as you're not upset with me, I can accept that,\" he told her as he smiled back.\n\n\"No. Not at all,\" she said very sweetly. \"And this is very nice, Justin. Thank you for bringing me here.\"\n\n\"Thank you for giving me a chance,\" he told her sincerely.\n\n\"A chance. Ha!\" she said trying to be funny.\n\n\"What?\" Justin asked.\n\nTaylor saw the look of confusion and tried to explain.\n\n\"I was just joking around. You know, using the word 'chance' as though I actually had a chance with a guy like you.\"\n\nShe saw the way he was looking at her then said, \"I'm doing it again, aren't I?\"\n\n\"I believe you are,\" he told her. \"And I say your chances are actually quite good.\"\n\nThe way he said it, along with the way he looked at her, caused something to happen deep inside her. She was still quite certain there was less than no chance of anything ever happening with a guy like that, but her body reacted very strongly\u2014and very pleasantly\u2014to what he said.\n\nFeeling like he'd said all he dare say for now, Justin steered them away from anything connected to the topic they'd been discussing.\n\n\"So tell me some more about yourself, Taylor. I barely got to ask you anything about yourself during the interview. I understand you're from around here, but is this where you were born and raised?\"\n\nFor the next 45 minutes or so, the two of them had a very pleasant conversation about growing up there, going to the same high school\u2014just fourteen or so years apart\u2014and then what they'd done since high school.\n\nJustin had been gone a little more than hour, but it seemed like he'd just sat down when he got a text from Joel asking if he needed him to call to pry him away from the 'stick chick'.\n\n\"Sorry, it's my idiot brother,\" he said hoping she couldn't see the screen of his phone.\n\n\"No, I'm good. I'm actually enjoying myself,\" he texted back.\n\n\"Is everything okay?\" Taylor asked.\n\n\"Sure. I just need to get back to work. We've got a new project we're starting this afternoon, I kind of lost track of time.\"\n\nThat part was true. It just had nothing to do with the nature of the text.\n\n\"Yeah. Me, too. Just not the work part,\" she said very sweetly, referring to how quickly their time together had passed and hoping she joke about having not been hired. \"And the catfish was surprisingly good. Thank for suggesting it, and thank you for taking me to lunch.\"\n\n\"You're very welcome, he told her. \n\nThen, without warning, he looked right at her and said, \"I'd really like to do this again sometime, Taylor.\"\n\nShe did a quick shake of her head indicating she must have misheard.\n\n\"You what?\" she asked, sure she really had missed something.\n\n\"I'd like to see again,\" he told her.\n\n\"I...I don't understand,\" she said even as brain tried to make sense of it.\n\n\"I've had more fun with you than I've had in a very long time, and I was hoping we might be able to do something together again. Anything, really. I just like spending time with you,\" he told her with such sincerity her body reacted the same way it had earlier.\n\n\"You're really serious, aren't you?\" she asked trying not to let her overflowing incredulity show.\n\n\"Yes. Very,\" he told her in a matter-of-fact kind of way. \"Why wouldn't I be?\"\n\n\"I don't know. I guess it just doesn't make any sense. That's all.\"\n\n\"And why doesn't it make sense?\" Justin asked. \"Is it because I'm so much older than you?\"\n\n\"Oh. I...I hadn't even thought about that,\" Taylor told him truthfully. \n\n\"Then what is it that doesn't make sense?\" \n\n\"Justin. Come on. You're you and I'm...me,\" she said hoping he'd get it.\n\n\"Now that doesn't make any sense,\" he told her.\n\nTaylor looked down for a moment, then looked around until she saw Avery. She knew Justin saw her look before she turned back toward him and said, \"Guys like you belong with women who look like Avery. Not...me.\"\n\n\"Says who?\" he asked.\n\n\"Says...life. Says the universe. Says...everyone.\"\n\nJustin got quiet then said, \"Not everyone. I don't say that.\"\n\n\"You really want to go out with me?\" she asked still not believing what she was hearing.\n\n\"Yes. I really do. Why is that so hard for you to accept?\" he asked her.\n\nTaylor sat there for a few seconds trying to process everything before finally believing\u2014or at least maybe hoping\u2014he was being sincere.\n\n\"Well if that's true. If you really do want to go out with me then I...I think I'd like that,\" she said, very concerned he might really be kidding or setting her up for something terrible. She'd had that happen before with a very good-looking guy, and it had been downright awful.\n\n\"Great. Then...I'll call you, okay?\" he said as he motioned for their server so he could pay for the meal.\n\nTaylor's heart was pounding in her chest, and her brain was on the verge of short circuiting. She'd never wanted for boyfriends or dates, but she'd never even dreamed of going out with anyone who looked anything like Justin Anderson. It was one of those unwritten rules and doing so violated every law of nature she'd ever heard of. And yet here he was asking her out in a way that told her he really wanted to spend time with her.\n\nShe wasn't aware she'd been sitting there just staring at him for several seconds after he told her he'd call her. She again shook her head, but this time it a kind of 'let me wake up here' type of shake.\n\n\"Sorry. Um...yes. Okay. That sounds really nice,\" she finally said, still not fully able to accept that this guy, this...gorgeous man...could possibly be interested in her. And yet, unless he was the best con artist she'd ever met...he certainly seemed to be.\n\nAs they rode back to the 'Crack in the Jack' where Taylor had parked her car, they continued to make small talk, and Justin found himself feeling things he'd never felt before. It still hadn't hit him that his dad had 'nailed it', but that was the last thing on his mind as he realized how much he was enjoying himself. Not the way he normally did but in some new, different, almost-exciting way he'd never experienced before.\n\nWere she anyone else, he'd have already suggested they go back to his place\u2014or hers\u2014and if the past was any indication of the present, she'd have agreed. In a couple of hours it would be all over, and he'd be hard pressed to recall her name a couple of days later.\n\nBut Taylor was unlike any girl he'd ever been with, and from his point of view, he hadn't actually been with her. And that led him to another first which was the realization he had no interest in being with her like that. At least not yet. It was so new and even refreshing to spend time with a woman he wasn't going to sleep with, and yet that's exactly what was happening.\n\n\"Am I boring you?\" he heard her ask in a polite way that had no hint of an accusation.\n\n\"No, not at all,\" he said, unaware he hadn't heard a word she'd said for over a minute.\n\n\"It's okay. I certainly understand,\" she said. There was no self-pity. It was just a statement of fact\u2014at least from her perspective.\n\n\"You are definitely not boring me, Taylor,\" he told her as he looked over and smiled at her. \"I guess I was just kind of lost in thought.\"\n\n\"Oh, right. You have that big project coming up,\" she said, assuming that must be it.\n\nJustin smiled again then told her, \"No, it isn't that at all.\"\n\nHe saw her quickly look his way, then turn away just as quickly.\n\n\"I was just sitting here thinking about how pleasant it is talking to you and just being with you.\"\n\nHe smiled one more time then said, \"Even if I temporarily zoned out and made you feel like I wasn't having one of the best times I can ever remember. Which I am, by the way.\"\n\nHe saw a kind of pained expression on her face and asked if everything was okay or if he'd just said something to offend her.\n\n\"No. Not at all,\" she told him. \"It's just...well, my heart loves hearing the things you've been saying, Justin. But my brain is having a very hard time accepting them.\"\n\n\"And it's not because I'm 37,\" he said as a statement but which was meant as a question.\n\n\"Oh, my gosh. You're...37?\" she asked, her eyes wide open with surprise.\n\n\"For a few more weeks anyway,\" he said, still smiling, but concerned that might be a deal breaker. Hiding his insecurity he asked, \"Did I just scare you away?\"\n\n\"Well, no. Not really,\" she said, as she fumbled for the right words. \"I knew you were older than me, but I thought you were more like...30 or so.\"\n\n\"No, sorry. That ship has sailed,\" he told her.\n\nHe could see something was still troubling her so he asked what it was.\n\n\"It isn't the age, Justin. It's...it's the whole...disparity thing.\"\n\n\"The disparity thing?\" he asked. Being the far-better looking of the two, he couldn't relate, let alone understand, the level of insecurity Taylor was feeling because of the huge disparity in their looks.\n\nShe looked over at him then tried to explain.\n\n\"I hate when guys 'rate' girls. You know, on the 1-10 scale. But girls do it, too, so all I can say is I don't. But were I rate you, you'd be a 10. To me, anyway. And as I said, I'm very comfortable with who I am, but I'm...maybe a 6. And 10s don't date 6s. Ever. It just doesn't happen.\"\n\nBecause he was driving, Justin couldn't keep looking at her, but he did glance over several times. He let her talk without interruption, and even when she finished he wasn't sure what to say.\n\nSo with raised eyebrows, Taylor said, \"Does that make sense?\"\n\nAnd that's when he remembered what his dad told him. \n\n\"Taylor, please never forget that beauty really is in the eye of the beholder. And to my eyes, you are much more than some meaningless number.\"\n\nShe hadn't stopped looking him the entire time, and she was again watching very carefully as he spoke.\n\n\"There are so many things about you that make you beautiful to me. And since this is just me talking to you, what else or who else's opinions matter? I think you're beautiful, so isn't that enough?\"\n\nHer heart was racing again, and she had a sick feeling in her stomach as she continued trying to understand how this could possibly be happening to her. Not usually at a lack for words, and intelligent, meaningful words at that, she just blurted out what came to mind.\n\n\"You mean like my body that looks like it belongs to a boy? The one with no butt and no boobs and no curves? Or maybe my plain face or my average hair or my...\"\n\nThey were turning into the restaurant, and Justin whipped into the parking lot, found the first open spot he saw, stopped, and turned off the engine. It happened so fast, it startled her, and Taylor stopped talking.\n\nHe leaned over and when she looked at him, he kept leaning and kissed her on the lips. Softly and only for a couple of seconds, but he did kiss her.\n\n\"Why...why did you do that?\" Taylor asked, her voice barely above a whisper.\n\n\"Because I like your...boy body, and your flat butt and your non-boobs, and your...amazing, very-pretty face.\"\n\nHe kissed her again for less than a second then said, \"Okay?\"\n\nTaylor sat there frozen in fear, excitement, dread, and hope all rolled into one as she croaked a one-word reply: \"Okay.\"\n\nHe reached over and touched her face then asked, \"Do you believe me now?\"\n\n\"I...I want to,\" she told him, as her entire body trembled. \"It might take me some time, though. I mean, it's not like...the disparity...isn't real.\"\n\n\"That's fair,\" Justin told her with a smile, his face still very close to hers. \"I just want you to know that I've lost track of how many Averys there've been in my life. And none of them\u2014not one\u2014has ever made me feel the way you make me feel, Taylor. Okay?\"\n\nHer eyes were moving so fast between his Justin couldn't look at them. He closed his then pulled back slightly then heard her say, \"I can only imagine how many there have been. What I can't imagine is how I could possibly be so...different.\"\n\nHe moved closer again then said, \"Well, you are. And you're different in the best possible way. Different as in...special. You're very special to me, Taylor.\"\n\nShe blinked several times, then feeling slightly more in control, said, \"Justin? I've never lacked self-confidence before, and I don't want you to think I'm some insecure little girl. It's just that I've always 'stayed in my lane' and been quite happy there. And now you come along and tell me I belong in the fast lane, and that contradicts everything life has ever told me; every social cue that's ever been sent my way says otherwise. So do you see why this is so difficult for me?\"",
        "He smiled at her then said, \"I don't care about lanes or how fast we go, Taylor. I just want you with me for the ride. And you can have all the time you need, okay?\"\n\nThe way he spoke and the way he looked at her when he spoke them was like...it was like a benevolent kind of acid eating through years of social conditioning. It was melting away the 'certain knowledge' that girls like her never ended up with boys like Justin. She knew those barriers were still there, but to use a Star Trek analogy, it was as though her 'shields were buckling'. For now, they were holding, but they'd been badly damaged.\n\nAll she could manage in terms of a reply was another very quiet, \"Yes. Okay.\"\n\nThis time, when Justin leaned over to kiss her, Taylor kissed him back, and as she did she was very aware it was the most amazing and delicious kiss of her life. She'd been kissed many times by quite a few different guys, but all of them combined had never made her feel like this.\n\nWhen it ended, her body was still trembling, but her confidence had started to return, and for now, at least, she was ready to at least try and believe this incredibly-handsome man really did find her attractive. She couldn't say the word 'beautiful', even to herself, but she could allow herself to accept that somehow, in some strange, as-of-yet-inexplicable way, he really did find her attractive.\n\nHe went around and opened her door then walked her to her car.\n\nBefore she could thank him for lunch and a wonderful time, he took her hands and said, \"I'm so glad you gave me the chance to explain myself.\"\n\nShe smiled back at him then told him, \"I'm glad I misunderstood you.\"\n\n\"So may I see you again?\"\n\n\"Yes. I'd like that very much,\" she told him as she slid her arms around his neck, having forgotten they were outside in public view. She was suddenly so afraid he'd be embarrassed that she pulled her arms down immediately.\n\nJustin only smiled then pulled them back up around his neck. \n\nOnce they were in place he said, \"There. That's much better.\"\n\nHe stood there just looking into her face and thinking to himself, \"I found her. I found my Vera Carson, and her name is Taylor Donovan.\"\n\nHe put a hand on her cheek then kissed her softly again before saying very quietly, \"I'll call you this evening, okay?\"\n\nTaylor smiled then nodded and said, \"That's very okay.\"\n\nHe helped her get in then waited for her to drive away. As she did he stood there watching and waving and thinking, \"Dad? You really are the smartest man I know.\"\n\nWhen he got back to work, Joel was getting ready to head out.\n\n\"What the hell, dude? Did she spin a web and snare you or something? I thought it was gonna be ten minutes over a cup of coffee, but you were gone well over an hour. Is everything okay?\"\n\nJustin smiled then said, \"Yeah. Everything is just fine.\"\n\n\"So she gets it, right? We're done with her and she can move on.\"\n\n\"I'm not sure she gets it\u2014yet,\" he said, causing Joel to turn his way and give him a 'what-the-fuck' kind of look.\n\n\"What the hell does that mean?\" his younger brother asked with an edge.\n\n\"It means...it means...Dad is a frikkin' genius.\"\n\n\"Did you get drunk during lunch?\" Joel asked with a shake of his head. \"You sure as hell aren't making a lick of sense.\"\n\n\"No, I don't suppose I am,\" Justin agreed.\n\n\"Whatever. Just grab your gear and let's get ready to roll.\"\n\nJustin only smiled, causing Joel to shake his head again, then picked up the things he needed and got ready to head out to their new job site.\n\nHe didn't make any serious mistakes, but Justin wasn't with it all afternoon. On the way home Joel said, \"I'm worried about you, bro. Is everything okay? Seriously.\"\n\n\"You sure you wanna know?\"\n\n\"Yeah. Of course. I'm not just your brother, I'm your business partner and your best friend. So, hell yeah. Lay it on me.\"\n\n\"I think I really like her, man.\"\n\n\"What? Like who?\" Joel asked. He had no idea what Justin was talking about. They hadn't been talking about girls so Joel really was lost.\n\n\"Taylor.\"\n\n\"Who the hell is...\"\n\nJoel looked over at Justin then said, \"No. No way. Stick chick? The skinny little thing with no boobs and no ass? That Taylor?\"\n\n\"Yeah. That Taylor.\"\n\n\"Oh, wow. You gotta help me out here, bro. I've known you all your life, remember? You do not hook up with\u2014Taylors. Ever. So what's really going on?\"\n\n\"I'm not talking about hooking up, Joel.\"\n\nJustin only used his brother's name when he was either hugely pissed off or very serious. He wasn't angry, so that left only one option.\n\n\"You're not kiddin' around, are you?\" Joel realized as he asked.\n\n\"No. I'm dead serious. She's like...she's...really different, you know? She's...special. She's really...I don't know. Amazing, maybe?\"\n\nJoel shook his head then ran his hand through his thick hair and said, \"I don't think any doctors are still at work, so maybe we should head for the ER. You know, just to be safe.\"\n\nJustin kind of laughed then said, \"No. I don't need to see a doctor. I just need to see Taylor.\"\n\n\"Okay, she's not like...ugly. But she's just so damn...plain. I just flat don't get it. And when I say flat, I'm not talking about, you know...\"\n\nJustin smiled then pulled out his trump card again.\n\n\"Remember, man, beauty is in the eye of the beholder. And to me...she's pretty damn beautiful.\"\n\nJoel stared at his brother to make sure he wasn't BS-ing him and his facial expression told him he really was dead serious.\n\n\"Jesus. No shit?\"\n\n\"No. No shit,\" Justin told him. \"I really, really like this girl. I know it doesn't make any sense, but...if you make me, I'll say it.\"\n\n\"Oh, no. Do not say it. I'm not kiddin', man. Do not say that!\" Joel warned him.\n\nBoth of them hated the saying, but Justin was gonna trot it out anyway.\n\n\"It is what it is, bro.\"\n\n\"You did not just say that! What the hell is wrong with you? Stick Chick and now that?\"\n\n\"Her name is Taylor, okay?\" his brother said sternly but not in a mean way.\n\n\"Okay. Fine. Her name is Taylor. Got it. That's cool. I get it. Well, I actually don't get it, but...okay.\"\n\nJoel sat there in stunned disbelief for a while then said, \"So you really like her, huh?\"\n\n\"Yeah, I do,\" his brother said. \"A lot.\"\n\n\"Then I'll knock off the cheap shit.\"\n\nThere was another pause before Joel asked one more question.\n\n\"Is this like...you seriously like her? As in...you might marry her someday like her?\"\n\n\"I don't know about that, but yeah, it's serious. Well, not serious from the standpoint of really knowing each other, but I'm serious about getting to know her. So, who knows, right?\"\n\n\"Wow. I think I might be a little bit afraid right now,\" Joel said without looking at his brother.\n\n\"Afraid? Of what?\"\n\n\"Of catching whatever you've got. I mean, if this can happen to you, the sanest, most rational guy I know, then no one is safe. Not even me, the most irrational, impulsive guy on earth.\"\n\nJustin finally laughed then said, \"I wanna ask her to have dinner with Mom and Dad this weekend. Is that cool with you?\"\n\nNow knowing his brother wasn't joking around, and resigned to the fact his brother had a thing for Stick...Taylor...all he could do was give his okay. Not that Justin needed it.\n\n\"Yeah. Sure. That's fine,\" Joel said with as much sincerity as he could muster up.\n\n\"Great. That means a lot, bro.\"\n\n\"Hey, I don't have to understand everything. I just have to accept it, right?\"\n\nJustin didn't answer the question, but he did laugh. \n\n\"Come on. Let's get outta here. I've got somebody I want to call.\"\n\nJoel gave his brother 'the look' one last time then slapped him on the shoulder and said, \"All right. Let's roll.\"\n\nJustin showered and changed as quickly as he could, popped something in the microwave, then grabbed his phone. He smiled when he saw her name and number then realized his heart was beating a little faster than normal. It wasn't pounding or anything, but just the thought of talking to her was causing the increase.\n\nShe answered on the second ring and said, \"Justin?\"\n\n\"Taylor. Hi. Yeah, it's me. How are you?\"\n\n\"I'm good,\" she told him knowing 'well' was the proper response. Unless, of course, she was a saint who's mission was to 'do good' in the world.\n\n\"I couldn't wait to get off work so I could talk to you,\" he told her.\n\n\"I'm glad you called. I was looking forward to it,\" she told him in that sweet voice he already liked so much.\n\n\"Hey, listen. Before I forget, I was wondering if you'd like to have dinner this weekend. With me and my family. You know, Mom, Dad, and Joel.\"\n\n\"Oh, wow. That's...that's pretty...intense,\" she said with some trepidation.\n\n\"No, my parents are the most easy-going, laid back people you'll ever meet. And you already know Joel.\"\n\nHe paused then said, \"And I'm so sorry about that. Knowing my brother, that is.\"\n\nTaylor laughed in spite of the knot in her stomach.\n\n\"He's not so bad,\" she said sort of offering a weak defense of his more gregarious brother.\n\n\"Yeah. Well, I'm kinda stuck with him. And you will be, too, if...you know...you and I have something here.\"\n\n\"Do we?\" she asked. It wasn't that insecure voice he'd heard at the restaurant. It was a simple, direct question.\n\n\"I hope so,\" he said sincerely. \"I will say you're only the second girl...woman...I've ever invited to have dinner with my family. So, yeah, I hope we do.\"\n\n\"I...I hope so, too,\" she told him. \"And yes, I'll have dinner with your family. I'll be extremely nervous and self-conscious, but I'll do that. But I would like you to meet my parents when you come to pick me up. Is that fair?\"\n\n\"It's more than fair. And don't be nervous around my parents, Taylor. They'll love you. I promise.\"\n\n\"Are they as gorgeous as you and your brother?\" she asked with a hint of insecurity showing through.\n\n\"I can't really say. I don't look at them that like that. But I do think my mom is beautiful and my dad's the greatest thing since sliced bread.\"\n\nTaylor laughed politely then told him, \"I haven't heard that one in years.\"\n\n\"Oh, speaking of sayings, if you ever want to send Joel into orbit, just tell him, \"It is what it is'.\"\n\nThis time Taylor laughed a genuine laugh.\n\n\"I'll remember that. Anything else I should know?\"\n\n\"Just that I can't wait to see you again.\"\n\nThe microwave beeped, and Taylor heard it.\n\n\"Is that dinner?\"\n\n\"Unfortunately, yes. I tend to just nuke something because I'm too tired to go out, and I'm a lousy cook. That's another reason I enjoy going to my parents' house for dinner once a week.\"\n\n\"You need a girlfriend who can cook,\" Taylor said playfully.\n\nThere was a pause before Taylor felt brave enough to say, \"Like me.\"\n\n\"You can cook?\"\n\n\"I do all right,\" she told him. The truth was she was a very good cook having learned from her mom who was downright excellent in the kitchen.\n\n\"Hmmm. I don't want to take advantage, but I think I see dinner at my place in the near future.\"\n\nFeeling even bolder Taylor said, \"You can take advantage if you'd like to.\"\n\nJustin's heart rate was definitely up, but Taylor's was racing. She'd just given up and given in and completely surrendered. If this handsome man really liked her as much as he said, then she was willing to trust him. She was well aware she could still get badly hurt, but her gut told her that wouldn't happen, so she felt secure enough to open up and try being a little bit playful. Justin loved it and kidded back.\n\n\"I may just do that. Take advantage of you, that is,\" he said in a way that didn't sound crass.\n\n\"I think I'd like that, too\" she told him. He could tell she was smiling. \"Oh, if you need to eat now, I'll let you go.\"\n\n\"I do need to eat, but I don't want to let you go,\" he told her. \"If you can stand to listen to me chewing and slurping, I'd like to keep talking.\"\n\n\"I suppose I could manage,\" she said very sweetly after a small laugh.\n\n\"Great. Let me just get this out and on a plate, okay?\"\n\nAnother hour passed that seemed like minutes as they got better acquainted. Justin learned Taylor's parents were both teachers and that going to college was never a question. She'd majored in English and literature with the knowledge it would be hard to find a job\u2014other than teaching\u2014that paid what college graduates typically expected to be paid. \n\nUnlike many of her peers, Taylor understood that a degree meant very little unless it was in a marketable field like engineering or nursing. But in her family, education meant graduating from college, so she'd dutifully gone and done quite well. The biggest and most pleasant surprise came when Taylor answered his question about her biggest dream.\n\n\"I know it isn't popular to say these days, especially for someone my age, but more than anything I want to have a family of my own.\"\n\n\"As in a husband and children?\" Justin asked, as though there was any other kind for a straight, single girl like Taylor.\n\n\"That's it,\" she said sweetly.\n\n\"How many kids?\" he asked, now very interested.\n\n\"Two maybe? I suppose I'd be okay with one or even three, but two seems about right.\"\n\nHe learned she was an only child and had often wished she had a sister to play with or even a brother as long as they got along.\n\n\"I suppose sisters fight like cats and dogs, though, so maybe it was for the best,\" she told him.\n\n\"Well, I can assure you brothers do. Joel and I are best friends, but we were arguing or fighting or wrestling all the time growing up.\"\n\n\"I can see that,\" Taylor said loving the way he was sharing with her.\n\nIt was then that Justin realized that was exactly what he was doing and told her so.\n\n\"It's funny, but I've never, ever shared any of this with any other woman.\"\n\n\"I'm glad you chose me then,\" she said very sweetly.\n\n\"Yeah. And it was very worth waiting for,\" he told her. \n\nHe laughed then said, \"I've never talked on the phone with a girl, either. At least not since high school, and even then it was just to decide when to get together.\"\n\n\"Lucky me,\" she said in a way that told him she felt lucky. And the truth was, she did.\n\nTaylor had always been marriage-minded, and regularly looked through bridal magazines, and had her future wedding mostly planned out. However, she'd heard enough 'Bridezilla' stories to ensure she stayed flexible to avoid driving her future husband (and everyone else around her) crazy by insisting on too many 'must haves'.\n\nThey talked for another half hour before finally agreeing to let each other go.\n\n\"Good luck with your project tomorrow,\" Taylor told him just before they hung up.\n\n\"Thank you. I'm surprised you remembered,\" he said.\n\n\"I pretty much remember everything you've told me,\" she let him know. It wasn't one of those comments that made him feel she was clinging to him for life, but it did tell him she was very interested.\n\n\"Same here. This is another first for me in that I really care about what you say and like.\"\n\nHe paused, chuckled then said, \"Wow. That just made me sound like a first-rate ass, didn't it?\"\n\n\"No. I don't think so,\" she replied. \"I think you were just being honest, and I took it as a compliment.\"\n\n\"Well, that's how I meant it, Taylor,\" he told her sincerely.\n\n\"Oh. What should I wear? I don't want to be over- or under-dressed when I meet your parents,\" she let him know.\n\n\"Honestly? They won't care. And neither will I. Just wear something you're comfortable in and that'll be fine. It's supposed to be chilly so maybe a sweater?\"\n\n\"I love sweaters, but they don't exactly love me,\" she told him.\n\n\"You know what? I'm gonna make it my mission in life to get you to understand I like you just the way you are. I like your figure. I think you'd look great in a sweater. Or a dress. Or pants or...anything else, for that matter.\"\n\n\"It's just that I can't really...fill them out, you know?\" she said as though he wasn't getting it.\n\n\"You'd still look very pretty, Taylor,\" he assured her. \"Just wear whatever you like. Really.\"\n\n\"I...I'd rather wear something you like,\" she finally admitted. \"I was kind of hinting around hoping you might give me some kind of idea.\"\n\n\"Surprise me, okay?\"\n\n\"Okay,\" she said, relieved to know it really didn't matter to him.\n\n\"Can I call you again tomorrow?\" he asked.\n\n\"Of course. You can call anytime, Justin. As often as you like.\"\n\n\"You can call me, too, Taylor. Anytime.\"\n\n\"K,\" she said so sweetly it caused his already-swelling member to turn to stone.\n\nMany girls had gotten him hard before. But no one but Taylor had done so by just talking.\n\n\"Bye,\" she said.\n\n\"Bye...beautiful,\" he told her.\n\nWhen she hung up, Taylor felt like her heart might explode with happiness. She truly felt like she was living in a very real, modern-day fairy tale where the handsome prince had had a spell cast on him so that he could only see her as beautiful. She still couldn't accept that he thought she was physically attractive, but she'd tried all her life to be a beautiful person from the inside out. Was it possible all of that effort was finally paying off? Or was it just an illusion that would wear off once the charming prince realized she wasn't Cinderella?\n\nTaylor had only been with three guys. One of them in high school and two in college. She hadn't had a boyfriend\u2014or sex\u2014in just under a year. She had no idea how many girls her age 'took things into their own hands' as it were, but she often relied on 'letting her fingers do the walking' as her only form of relief.\n\nThat night, she lay there imagining herself saying 'I do' to Justin as the capstone of her dream wedding. She barely made it to the imagined vows before her body erupted in the most violent-but-pleasant orgasm she'd ever had. When it ended, she fell asleep moments later feeling happier than she'd ever been before.\n\nIt was a little after midnight when Justin finally laid down. He was trying to remember the last time he'd gone this long without having sex and decided that was in 2011 when he was down with the flu for an entire week. And for the first time in his adult life, he wasn't looking. He was also wondering when the last time was that he'd 'choked his chicken' and he honestly couldn't remember. He'd had no need to as he'd always had a steady stream of attractive women to do the real thing with.\n\nBut this night he lay there imaging a life with this amazing younger woman who was nothing like any other woman he'd ever met. He was even more surprised when he realized where his hand was and what it was doing. And yet he could no more stop it than he could stop himself from thinking about her. \n\nThe funny thing was he wasn't imagining having sex with Taylor. He was imaging her sitting across from him at dinner at his parents' house, smiling at him as they all got to know her. He laughed out loud in bed when he imagined her in a very pretty sweater that had virtually no 'bumps or lumps' yet finding her sexy as hell. And just as he did, Mount Vesuvius blew its top unloading a ton of baby batter.\n\nHe, too, fell asleep moments later feeling something he'd never felt before. He was too tired and too content to try and figure it out, but he knew it was the most pleasant feeling he'd ever had, and the feeling wasn't the massive explosion he'd just experienced.\n\nWhen he woke up, he reached for his phone out of habit and smiled when he saw a text from her.\n\n\"Good morning! I just wanted to say 'hi' and wish you a wonderful day.\"\n\nThere was a PS then the rest of her text.\n\n\"Oh. I had a very pleasant dream about you last night.\"\n\nThere were a couple of hearts and a smiley face, and Justin realized he was smiling.\n\nHe lay there and texted her back.\n\n\"You just made my day! And what a coincidence. I had a dream about you, too.\"\n\nHe didn't add the hearts even though he thought about it. He did add some smiley faces then hit 'send'.\n\nWhen he got out of the shower there was another text from Taylor.",
        "\"I could bring you lunch today if you'd like. Just let me know and I'll swing by your job site.\" More smiley faces followed.\n\nHe sent her the address and told her, \"I think you may be too good to be true. I believe the word my dad uses for girls like you is 'a keeper'.\"\n\nHe put a couple more smiley faces in then sent it to her.\n\n\"Okay. I'll have something delicious for you\u2014and your brother!\" it said. There was an emoji of a chicken and some vegetables, and that, too, made him smile.\n\n\"I can't wait,\" he typed. Then he added, \"Just be careful with Joel. If you feed him, he may follow you home.\"\n\nWhen Taylor read it, her heart really did hurt, but in the best way possible.\n\n\"Oh, okay,\" she wrote. \"I guess I was hoping maybe his big brother might do that.\"\n\nHearts and smiley faces followed.\n\n\"You never know,\" he texted back then added, \"See you around noon.\"\n\nTaylor knew exactly what she wanted to make and set about getting it ready as soon as she got out of the shower.\n\n\"What's going on?\" her mom asked.\n\n\"You remember the guy I told you about?\" she asked her mom.\n\n\"Honey, you've done nothing but talk about him since the interview. How could I not remember?\" her mom teased. \"Are you making something for him? Can I help?\"\n\nShe and her mom made a full meal that would feed both of the brothers and several other grown men. There was baked lemon chicken and rosemary potatoes with slices of onion and lemons over a bed of angel hair pasta for the main course. And while her mom worked on the main course, Taylor started on dessert\u2014a carrot cake cheesecake. \n\nShortly before she left, she brewed up some strong coffee and put in a thermos along with some mugs. As she and her mom put it all together, it was quite literally a picnic basket complete with a checkered tablecloth.\n\nStill a little too paranoid to wear what Justin had hinted around about, Taylor chose a very pretty, plain-white blouse and a pair of black pants. She wore a black cardigan sweater with it as it was fairly chilly.\n\nMostly she'd concentrated on her hair and makeup, and even her mom said, \"Wow. You must really like this guy. You look very pretty, honey! I love your hair like that, by the way.\"\n\n\"Thanks, Mom, and yes, I...I kind of do.\"\n\n\"I'm very happy for you. Maybe we could meet him one of these days?\"\n\nShe hadn't told her mom she'd been invited to dinner at his parents' house already, but she did say she'd mention it to him, even though she already had.\n\n\"Well, have fun!\" her mom told her after helping her daughter load everything up.\n\nTaylor wound through the maze of cars and trucks at the job site, then spotted Justin. She parked the car and got out and found him again. He was wearing a white helmet and when she got a full look at him her body had that same reaction yet again. She walked closer but waited for him to finish talking to someone before saying hello.\n\nJust as he turned toward her, she saw Joel walk up to him then say, \"Holy shit. Is that Taylor?\"\n\nThe only thing that was really different was that she'd styled her hair and wore more makeup than either of them had seen before, but she did look different\u2014and in a good way.\n\n\"Yes. Yes it is,\" she heard Justin say as he smiled at her then headed toward her.\n\nTaylor was hoping and almost praying he would kiss her as they got closer to each other.\n\n\"Wow. You see. I told you you were beautiful,\" he said, still smiling at her.\n\nHe looked at his hands to make sure they were clean before putting one on each of her shoulders then leaning down and kissing her softly. Taylor feared her body might betray her and do what it had a little over twelve hours ago when their lips met.\n\n\"It's just the hair and makeup,\" she said quietly when their lips parted. \"But thank you.\"\n\nJoel was standing next to his brother and cleared his throat loudly.\n\n\"Oh. Sorry. This jerk...er...this guy is my brother Joel, whom I'm sure you remember.\"\n\n\"Of course,\" Taylor said with a big smile.\n\nJoel didn't check his hands. He just put his arms around her and hugged her.\n\n\"Okay. Now I get it,\" he said with a smile of his own as he pulled away.\n\nHe saw Taylor's puzzled look then said, \"My brother is kind of...gaga...for you.\"\n\n\"Well, the feeling is kind of mutual,\" Taylor said happily. \"I brought lunch. Is anyone hungry?\"\n\n\"Hungry? I passed 'hungry' two hours ago,\" Joel said. \"Let's eat!\"\n\nJustin put his arm around Taylor as the three of them walked to her car and told her, \"What my little brother means is, 'Thank you for making lunch and bringing it to us'.\"\n\nHe looked at Joel who did a shoulder shrug that said, \"Okay. Sure. Whatever. Where's the food?\"\n\nWhen she opened the car door, the smell alone caused a stir.\n\n\"Oh, man. That smells delicious!\" Joel said.\n\n\"Here. Let me get that for you,\" Justin said as he saw her trying to lift the huge basket out of the car. \"It's the least I can do since you went to all this trouble. And it does smell great.\"\n\n\"Oh, it was no trouble,\" she told him even though they'd spent several hours getting it ready.\n\n\"Come on. We have a small, portable table right over there,\" Justin said as he nodded in the direction they needed to go.\n\nWhen Taylor began laying it out, the look on Joel's face made her laugh.\n\n\"Someone really is hungry, huh?\" she said with a laugh.\n\n\"Starving is more like it,\" he said as he reached for something.\n\nJustin swatted his hand away and said, \"Didn't Mom teach you anything growing up?\"\n\nJoel pulled his hand back and apologized then waited for Taylor to serve him.\n\n\"Wow. Real silverware, too,\" Joel said.\n\n\"It's just flatware, but it isn't plastic,\" she told him.\n\nJoel had no idea what the difference was. He just said, \"Now can I eat?\"\n\nTaylor laughed and said, \"Yes. Now you may eat.\"\n\nHe cut off a large hunk of chicken and as soon as it hit his taste buds, Joel said, \"Oh, my God! This is freakin' fantastic!\"\n\n\"My brother says he really likes the chicken,\" Justin told her with a smile of his own.\n\n\"I'm glad. There's plenty here,\" she told him as she handed him a plate then made one for herself with less than a third of what she'd given them.\n\n\"So that's how you stay so skinny,\" Joel mindlessly said as he chewed on a huge bite of chicken and potato.\n\nJustin gave him a look which Taylor saw. Normally, she'd have been very self-conscious, but even that didn't bother her.\n\nJoel swallowed his food, then stopped smiling and said, \"I'm sorry, Taylor. That didn't come out the way I meant it.\"\n\nShe smiled happily then told him, \"No. No offense taken.\"\n\nShe smiled at Justin then said, \"I am what I am, right?\"\n\nJoel was already wolfing down another huge bite and laughed with his mouth full.\n\n\"Hey, it's Popeye!\" he said as he chewed.\n\n\"Um...I'd say I'm more Olive Oyl,\" Taylor said playing along and not minding the comparison to the real Stick Chick at all.\n\nJustin finished a bite then said, \"You really do look pretty, Taylor.\"\n\n\"Thank you,\" she said, unable to stop smiling. \n\nShe hadn't taken a bite yet, and she realized that even though she hadn't eaten since having a piece of toast for breakfast, she wasn't hungry. Watching the brothers eat and just being with Justin was more than enough.\n\n\"Taylor's coming over for dinner this weekend,\" Justin said.\n\n\"Oh, right. Yeah, that's great. Mom and Dad are gonna love you,\" he told her.\n\n\"My mom asked if you might like to have dinner with us sometime,\" she said to Justin as she realized not inviting Joel was rude. \n\n\"You, too, of course, Joel,\" she added.\n\n\"No, hold on. We want to make a good impression on your parents, right?\" Justin said very seriously.\n\nTaylor tried not to laugh as Joel, who had another very large mouthful of food said, \"Hey! What the hell. I'm sitting right here, dude.\"\n\nWhen Justin smiled at her, she had to cover her mouth as she couldn't help laughing.\n\n\"Sorry! I didn't mean to laugh,\" she told Joel.\n\n\"No. My brother's right. If you want to have any kind of chance they'll like him, you don't want me anywhere around.\"\n\n\"I don't think that's true,\" Taylor said with a sweet smile.\n\n\"No. It's true,\" Justin said immediately. \"Trust me.\"\n\nJoel already had yet another big bite in his mouth when Justin said, \"He's like a human vacuum cleaner. Just watch him.\"\n\nHe stopped, held up a hand, then said, \"On second thought...do not watch my brother eat. No one should have to ever see that.\" \n\n\"What?\" Joel said loudly, a half-chewed hunk of chicken in his mouth.\n\nBy the time they needed to get back to work, Joel's impression of Taylor had completely changed. She hadn't gotten any more beautiful, but she was so pleasant and so friendly he found her to be a lot more attractive than he had before.\n\n\"I was really wrong about her, bro,\" he said after she left. \"She's...she's all right.\"\n\n\"Yeah. She's very all right,\" Justin said.\n\n\"And she can cook! Man, can she cook!\" Joel said, who'd wiped out two slices of carrot cheesecake after bashing nearly half of the main course himself. Taylor had never seen any human being eat so much food before in her life. Just watching him was entertaining in and of itself.\n\nOn Thursday Justin finally remembered to stop by and let his parents know he was bringing someone over to dinner on Sunday. Both of them just stood there and stared.\n\n\"You mean...a girl?\" his mom said afraid to sound hopeful.\n\n\"Yeah. A girl,\" he replied. \n\n\"A girl you...like?\" she asked, her mood lightening.\n\n\"Yes. Her name is Taylor, and I really like her a lot.\"\n\n\"David? Did you hear what our son just said?\" she asked her husband.\n\n\"I did. I'm still not sure I heard him correctly, but I did hear him say something about dinner and a girl.\"\n\n\"Dad. You and Mom are gonna love her. She's really amazing.\"\n\n\"Well, she must be if you're bringing her here to meet us,\" his dad replied.\n\n\"I think so,\" Justin said.\n\nHe paused then said, \"I uh, I took your advice.\"\n\n\"My advice?\"\n\n\"Yeah. You know, about finding a girl who's beautiful\u2014to me?\"\n\n\"Ah, yes. Okay. So it worked then,\" his dad said.\n\n\"It did. Like a charm.\"\n\n\"What advice is this?\" his mom asked.\n\n\"It's between Justin and me, Claire.\"\n\n\"Oh. Guy advice. Well, as long as you like her and are bringing her home. Oh, do you know what she likes?\"\n\nJustin wasn't really sure but promised to ask her then call.\n\n\"Well, I can't wait to meet her,\" his mom said. \"I don't think you've brought a girl home since...\"\n\nShe almost said 'Sarah' but stopped.\n\nSeeing her discomfort, David jumped in. \n\n\"You're forgetting the homecoming thing his senior year,\" her husband reminded her.\n\n\"But that didn't count. She got so drunk I had to bring her here,\" Justin reminded them.\n\n\"I know. I'm just stating it for the record,\" his dad said with a smile. \"I'm looking forward to meeting this new girl of yours, too.\"\n\n\"She's um...she's a little younger than me, okay?\"\n\nKnowing their son's reputation but being used to pretending it didn't exist, his mom carefully asked, \"I see. And how much younger are we talking about?\"\n\nShe expected an age so young it would make having her there untenable. When he told her she was a college graduate, his mom didn't ask for her specific age and breathed a sigh of relief. \n\n\"Well, that's very nice, honey. Nice and smart is a very good combination.\"\n\nJustin laughed then said, \"She's both of those things and a whole lot more.\"\n\n\"Sounds serious,\" his dad said.\n\n\"We only really met a little while ago, but I gotta tell you, she's...she's really captured my heart.\"\n\nNeither of them had ever heard anything close to that from either of their boys. David looked at Claire who looked back and smiled.\n\n\"Uh, oh. Your mom's already expecting a grandchild,\" his dad said.\n\n\"I'm doing no such thing!\" she said defensively even though that was exactly what she was thinking. Having boys in their mid-30s who'd really even hinted around about settling down caused her a certain amount of anxiety. She was 65 and her husband was 68, and they'd love nothing more than a grandchild\u2014or two.\n\n\"It's okay, Mom. It's too early to tell, but she's the first girl I've ever even thought about like that. Other than you-know-who.\"\n\nHe looked right at his mom then told her, \"But that doesn't mean we're getting married.\"\n\nHe paused, smiled, then said, \"Anytime too soon.\"\n\nBoth of his parents laughed, his mom hugged him so hard it hurt, and his dad shook his hand and said, \"I can't wait to meet this girl. You really have my curiosity peaked.\"\n\n\"All I can say, Dad, is she's...beautiful to me.\"\n\n\"Okay. That's all that matters, right?\" his dad said as he walked him outside.\n\n\"We'll see you Sunday, then,\" David said as Justin got in his truck.\n\n\"You will,\" he said. \"And tell Mom I won't forget to call her.\"\n\nThey waved as Justin backed out, and he couldn't wait to call Taylor and ask.\n\n\"I like pretty much anything except for liver and onions. Other than that...\"\n\n\"We don't eat that at our house,\" he told her. \n\n\"Then anything is fine. Really,\" she assured him.\n\n\"My parents can't wait to meet you.\"\n\n\"I'm looking forward to it, too.\"\n\n\"Hey, I don't think I can wait until Sunday to see you again. Could we maybe get together tomorrow evening?\"\n\n\"Yes. Of course. Just let me know when, okay?\" she said happily.\n\n\"Taylor?\" he said.\n\n\"Yes?\"\n\n\"I...I really like you.\"\n\nShe smiled as that feeling washed over again before saying, \"I really like you, too, Justin. A lot.\"\n\n\"I'll call you again this evening, okay?\"\n\n\"I hope so,\" she said. \n\n\"Talk to you then, sweetie,\" he said in the gentlest voice Taylor had ever heard.\n\nShe was so surprised and so pleased hearing his first endearment, she couldn't speak. The phone went dead, and she sat there staring at it, unable to stop smiling. And there it went again. That wonderful, delicious feeling the sound of his voice caused radiated throughout her body.\n\nShe'd thought she was in love once during her sophomore year of college. However, it turned out the guy she'd fallen for was falling in and out of other girls' beds. That feeling, while it lasted, had been very nice. But Taylor had never felt anything like this before. It made her wonder if this was what the so-called heroin rush was like. If so, she finally understood how and why people got so badly hooked on the drug.\n\nShe smiled again and thought to herself how Justin Anderson was her drug of choice. When she thought of 'mainlining' him, it made her giggle for the first time in years, and yet she was so happy she didn't care.\n\nJustin took her to see a movie the following evening and spent the afternoon with her on Saturday after working until around one o'clock. When he went to pick her up, they'd already agreed Taylor would introduce her to her parents, Joseph and Elizabeth Donovan.\n\nThey were the first parents of a girl he'd met since the night of his senior prom. He wasn't nervous, per se, but he really had no idea what to expect. Taylor had assured him, just as he'd assured her, that they'd love him. Even so, he knew the age difference might give them real cause for concern. It never crossed his mind they might wonder why a guy like him was dating a girl like Taylor.\n\nHer mother practically fawned all over him after being introduced, but her father was a little more circumspect. He was cordial, but after a a minute of polite chit chat, asked if he could talk to him alone.\n\n\"Justin, I trust my daughter's judgment, and she is, of course, a grown woman who can make her own choices. But she is my daughter so I want to make sure you have her best interests at heart. She'll be very unhappy I wanted to talk to you, but if I don't, it'll eat at me so...I will.\"\n\n\"No, please go ahead, sir. I appreciate that you care enough to take me aside. So, please go right ahead and ask me anything you like.\"\n\n\"Two things. Taylor tells us you're nearly 15 years older than her. I don't suppose that's a tremendously important issue, but it is a concern.\"\n\nHe stared right at Justin then said, \"My biggest concern is how a guy like you\u2014a guy who could and probably has...dated...many beautiful girls\u2014is so interested in my daughter. Mind you, I think Taylor is beautiful, but let's be honest here. There's beautiful and then there's...beautiful. Tell me directly, Justin. How do you feel about Taylor? And please don't pull any punches.\"\n\nSome guys might have been offended at being asked. Many of those might have even said so. Justin was not only not offended, he was grateful to share his feelings with her dad.\n\nJustin had no idea Taylor had come to find them, and stopped just outside and listened.\n\n\"Sir, I have...dated...a lot of girls, and Taylor knows that. But she also knows that I've never met anyone\u2014ever\u2014who makes me feel the way she does. And I'll also tell you she's expressed the same concerns about what she feels is some big disparity in our looks. But Mr. Donovan? I think your daughter is perhaps the most beautiful girl I've even gone out with, and that beauty comes from every part of her being. If that sounds flowery or hokey or insincere, all I can do is tell you that's exactly how I feel about her.\"\n\nHe never took his eyes off of the younger man as he spoke, and by the time he finished speaking, Joseph Donovan was satisfied.\n\n\"I appreciate your candor, Justin. I've always been a good judge of character, and it'a obvious you really care about my little girl.\"\n\nHe stuck out his hand and said, \"Thank you for letting me get that off my chest.\"\n\nJustin shook and it then told him, \"I'm probably going to be even tougher on any future boyfriend should I be fortunate enough to have a daughter one day myself.\"\n\nJoseph smiled, slapped him on the shoulder then said, \"Having a daughter changes you. It changes you for the better, and if you ever do have one, you'll understand.\"\n\nThey were standing just inside their home office, and when they came out, it was obvious Taylor had overheard their conversation.\n\n\"Hmmm. Looks like someone was eavesdropping,\" Joseph said with a smile.\n\n\"I have to admit I was a little concerned about you giving Justin the third degree, Dad,\" she said to him even as she smiled at Justin.\n\n\"Well, a dad has to do what a dad has to do, right?\" he told her. \"But having done it, I can tell you I like this young man. A lot. So...go have fun. Just not too much fun, okay?\" \n\nHer dad winked at her then shook Justin's hand again before walking them both out. On the way, his wife gave him another hug and also told her daughter to have a nice time.\n\n\"It was so good meeting you, Justin!\" she told him with the biggest smile Taylor had ever seen.\n\n\"You, too, Elizabeth,\" he told her after being told to call her by her first name.\n\nAfter he opened Taylor's door then sat down to start up the truck, she told him, \"I heard what you told my dad.\"\n\n\"Oh. I hope it was all good,\" he said knowing it had been.\n\n\"Oh, yes. I was very good.\"\n\nShe smiled at him then quickly added, \"Sweetheart.\"\n\nHe smiled back then leaned over and kissed her.\n\n\"Are you trying to make me fall in love with you or something?\" he asked quietly.\n\nShe smiled happily then said, \"Maybe\" in a way that made him want to tell her he loved her. He knew it was way too soon, but then again, he'd never felt anything even close to this before, and whatever 'it' was, he thought it had to be at least something close to love.\n\nIt was maybe 65 degrees, not bad at all for that time of year in Pacific Northwest, and Justin asked Taylor if she'd like to go bike riding and she told him that sounded wonderful. There were several places that rented bikes in the area, and there were bicycle trails everywhere.\n\nThey spent a couple of hours tooling around Greenlake Park. They stopped here and there to look at whatever caught their interest and as soon as their bikes were on kickstands, they held hands or walked arm in arm. They'd look, talk, then invariably turn and kiss each other before getting back on the bikes.",
        "Justin took her to dinner at a modest restaurant afterward, and as they talked, he had to seriously ask himself whether or not he really was in love with her. Every minute he spent with Taylor only increased his belief that he was, as there was never a moment when he didn't absolutely enjoy being with her.\n\nAs they ate, he was staring at her and not really listening.\n\n\"Justin?\" he heard her say.\n\n\"Sorry. I was just sitting here staring at you.\"\n\n\"Well, speaking of that, I was thinking about getting contact lenses.\"\n\n\"What? Why? Why would you do that?\" he asked gently.\n\n\"I don't know. Wouldn't you think I was prettier without the glasses?\" she asked with genuine concern.\n\nHe reached over and took her hand then said, \"You look perfect to me\u2014honey.\"\n\nWhen he finished his sentence with 'honey' that feeling flooded over her yet again.\n\nShe felt her eyes welling up with tears even as she smiled bravely and asked him, \"Are you trying to make me fall in love with you?\"\n\nHe knew he should say, \"Maybe\" just as playfully as she had, but he couldn't. Instead he told her, \"Yes. I...think I am.\"\n\nHe saw a tear fall from her left eye first and then the right. He picked up a napkin and reached across and gently dried her cheeks.\n\n\"Then...it's definitely working,\" she told him before adding, \"sweetheart\", again.\n\n\"Taylor? If you want contacts that's fine. But I love the way you look right now, and I see no reason to change that\u2014unless it's important to you. If it is, then I'll support whatever you want to do. But please don't ever think you need to for me, okay?\"\n\nJustin saw another tear fall as she said, \"It's definitely working.\"\n\nHe stood up, leaned across the table, and kissed her. \n\nAs he slowly pulled away, he told her, \"I'm glad. That makes me very happy.\"\n\nWhen he came to pick her up on Sunday, both Joseph and Elizabeth welcomed him like he was already a part of the family. Taylor had shared some of what happened on their date and told her parents, \"I think I'm falling in love with him.\"\n\nHer mom nearly cried and her dad hugged her saying, \"You've got a really great guy there, honey.\"\n\n\"Yes. Yes, I do, don't I?\" she said as she, too, teared up again.\n\nJustin hadn't paid any attention to what she was wearing, but when they got in his truck she asked, \"Is this okay?\"\n\nShe was wearing a very pretty black sweater with a cute, white blouse underneath. The long sleeves ended in French cuffs and gold cuff links. Her hair was as pretty as it had been the day she brought him lunch, and Justin thought she was gorgeous. She wore a short, black skirt with it and a pair of three-inch black heels that gave her a more sophisticated look than he'd seen before.\n\n\"It's more than okay, honey. It's perfect.\"\n\nHe leaned over to kiss her then said, \"Just like you.\"\n\n\"I just always feel a little self-conscious in anything that's, you know, form-fitting because it highlights what isn't there. Maybe one day a little...augmentation...might be in order, you know?\"\n\nHe turned the engine off, turned to look at her then said, \"I love your body, Taylor. I love it just the way it looks. If you want bigger boobs, then just like contact lenses, that's okay. But please don't change anything about you for me. Ever. Okay?\"\n\nHe reached over and touched her face then said, \"Will you promise me you won't?\"\n\nHe saw her eyes glistening again as she nodded and said, \"Yes. I promise.\"\n\nHe smiled at her then without thinking said, \"I'm glad, because I love you just the way you are, sweetheart.\"\n\nShe blinked several times then in almost a whisper said, \"You...you love me...or you love the way I am?\"\n\nHe placed his palm on her cheek then with a smile said, \"Both. I love you just the way you and...I love you, Taylor.\"\n\nA tear fell as she said, \"I love you, too, Justin. I love you so much.\"\n\nHe kissed her softly and held her for several seconds as she rested her head in the crook of his neck.\n\n\"Come on. We need to get going, okay?\"\n\n\"Can you hold me for just a little while longer?\" she asked very quietly.\n\n\"I can hold you for as long as you like, honey,\" he told her.\n\nAs she put her tiny arm around his neck and held him back she said, \"I never even allowed myself to dream, let alone think, I'd ever meet someone like you. And now that I have, it feels like I'm living in a dream of some kind, you know?\"\n\nHe pulled away just far enough so he could look at her then brushed her hair back and said, \"I do know. I really, really do because that's how I feel, as well.\"\n\nHe kissed her again then said, \"Are you ready yet?\"\n\nShe nodded and smiled then told him, \"Yes. I'm ready. I'm a little nervous, but I am ready.\"\n\nThe welcome Taylor got was even more inviting than the one Justin had just received on his second visit. Justin's mom was beside herself at having her son finally bring someone home to meet her.\n\nClaire told her she looked beautiful the moment they met, and it was obvious it was said sincerely. David said told her she looked very pretty, and for the first time since she'd met Justin, she was able to believe it. She knew she wasn't beautiful, but she felt secure believing she was beautiful to them, and more importantly, to Justin, the man she already knew she was in love with.\n\nHis parents, and even Joel, saw the way they looked at each other the entire afternoon and into the early evening. It was so obvious they were in love, even a blind man could have seen it.\n\nThey all talked openly and almost non-stop, and Taylor felt like she was with family the entire time.\n\nJust before they left, Justin went to use the bathroom and nearly bumped into his dad who'd had the same idea.\n\n\"So what do you think, Dad?\" he asked.\n\n\"I think you done good, son. That's what I think.\"\n\n\"Yeah, me, too,\" Justin told him. \"And I think she's beautiful, too. Inside and out.\"\n\nHis dad smiled then said, \"I won't argue that. But remember, as long as she's beautiful to you, nothing else matters.\"\n\nJustin laughed quietly then said, \"You were right. Beauty really is in the eye of the beholder.\"\n\nHis dad smiled at him then said, \"I'm proud of you, Justin.\"\n\n\"Thanks, Dad,\" he said before the two men spontaneously hugged one another. That hadn't happened for a very long time, but between Justin's gratitude and his father's pride, it did happen, and it felt absolutely right.\n\nBoth David and Claire hugged Taylor goodbye and told her how much they enjoyed getting to know her.\n\n\"Please come back often,\" Claire told her.\n\n\"Yes. Anytime,\" David said. \"You don't need Justin to be with you, either. You're welcome to stop by whenever you like, okay?\"\n\nJoel surprised her more than anyone else when he told her goodbye.\n\nHe hugged her, kissed her on the cheek then said, \"Justin and I kid around all the time. But I've never seen him act like this before. You know, since he met you. I can't speak for my big brother, but I know he thinks you're the best thing that ever happened to him and truth be told? I couldn't agree more.\"\n\nWhen his parents both said, \"Here, here!\" she felt herself tearing up yet again and told Joel she felt the same way about him and their family.\n\nShe thanked them again, wished them all goodnight, then took Justin's hand as they headed out to his truck.\n\nThis time, once they were inside, Taylor turned to him and said, \"Justin? You...you don't have to take me home right now...unless you'd like to.\"\n\nHe looked over at her and asked, \"Are you sure, sweetie? I'm in no hurry. I'll wait as long as it takes.\"\n\n\"I'm sure,\" she told him. \n\nShe smiled then said, \"I'm very sure.\"\n\nJustin's place was a typical bachelor pad. It was a spartan, no-frills kind place in need of a woman's touch. But tonight, the only touch Taylor cared about was Justin's.\n\nWhen he closed the bedroom door, she put her arms around him and told him again, \"I love you, Justin Anderson.\"\n\nHe held her tiny body close, smiled, then said, \"I love you, too, Taylor Donovan.\"\n\nShe kissed him then began unbuttoning his shirt. She smiled up at him then said, \"Then please...love me.\"\n\nThey slowly undressed each other, and at every step of the way, Justin told her how beautiful he thought she was. He'd hooked up with a couple of girls who wore glasses, and a few who were very 'light upstair's. But he'd never been with a woman was both and who didn't really have a figure to speak of. \n\nTaylor's body really was more like a boy's than a woman's, and yet Justin couldn't stop thinking about how much he loved her or how much he wanted her. It didn't matter that her breasts were little more than large, round areoles with very hard nipples in the middle. He didn't care there were virtually no curves anywhere. He even insisted she keep her glasses on when she said she wanted to be able to see every bit of him when he made love to her, but would be glad to take them off.\n\nNone of that mattered because, to him, Taylor was the most beautiful woman he'd ever seen, and the only woman he'd ever loved.\n\nAs he held himself above her while they made love, Taylor was so happy she was on the verge of crying again as she tried to take all of him in, and not just the part of him that was actually in her. Yes, that part was thick and long and...amazing. But what truly amazed her was that this man\u2014this beautiful, gorgeous man\u2014who'd made her feel like she was the most beautiful woman on earth, was here, making love to her and telling her how much he loved her.\n\nIt really was like living in a dream; the most amazing and wonderful dream of her life. But it wasn't a dream. Justin did love her, and he did think she was the most beautiful woman on earth.\n\nThey made love two more times that night, and when he asked her to stay with him, she happily agreed. The next morning, she made breakfast for him then offered herself as dessert, knowing he wanted her as badly as she wanted him.\n\nNo one asked any questions at her house when he dropped her off at around 10am, or at work when he showed up just before noon. Her parents only smiled and told her how much they liked Justin while Joel only smiled that 'knowing' smile of his.\n\nA month later, Justin asked Taylor to move in with him, and without a moment's hesitation she said 'yes'. He let her know she could do anything she liked to make it more of a home, and Taylor took him up on his offer. But each time she thought about making changes, she asked him for his opinion. Even when he told her over and over again, \"It doesn't matter, honey. If you like it, I'll like it, too,\" she continued to share her ideas with him, because what mattered to him mattered to her.\n\nWhen she mentioned how she still needed to find a job, Justin told her he'd support whatever it was she wanted to do, but let her know she didn't have to work. \n\nShe put her arms around him and said with a smile, \"So you want me to stay home and make delicious meals for you all day then make love to you all night?\"\n\n\"I think I could stand that,\" he told her trying to sound very serious.\n\n\"But wouldn't it be nice to have some extra money?\" she asked finally being serious.\n\n\"I make more than enough to support us, honey,\" he told her.\n\nShe knew that was true, but said, \"But as your live-in girlfriend, I think I should be contributing in more ways than just keeping you happy.\"\n\nJustin loved her even more when she was so playful like this and told her so.\n\n\"I am mostly teasing, but not about the live-in girlfriend part,\" she said being serious.\n\nHe pulled in close then said, \"Then let's change that.\"\n\n\"And how would we do that?\" she asked, wondering what he had up his sleeve.\n\nHe stepped back then reached, not into his sleeve, but into his back pocket, and pulled out a small box he'd put there earlier that evening intending to ask her later on. But this was the perfect time, and he was about to let the moment pass.\n\nTaylor's hands flew up to cover her mouth as he knelt on one knee while opening the box.\n\n\"Marry me, honey. I love living with you as my girlfriend, but I want you to be my wife. I love you more than life itself, and I want to start a family with you. So, Taylor Donovan...will you? Will you marry me?\" he asked with imploring eyes.\n\nTaylor was crying openly and nodding her head as she tried to speak and held out her left hand.\n\n\"Yes! Yes, I will marry you, Justin. A thousand times...yes!\"\n\nHe slid the ring on her very thin finger then stood up, lifted her chin, and kissed her softly.\n\n\"I love you, Taylor,\" he told her.\n\n\"And I love you, Justin,\" she said back as tears continued to fall.\n\nWhen he married her just three months later at a rustic old chapel, Taylor's father was thrilled for his daughter and also secretly happy that her dream wedding was so much less than she'd always talked about. It was scaled back because she realized all of those other things weren't the dream. The dream was the gorgeous man she loved with all her heart.\n\nAs Justin stood at the altar with her, he glanced over at his father who smiled, nodded, and winked. When he looked back at the pencil-thin woman in white standing in front of him, the pretty woman in the black glasses who made him feel like no other ever had, he fully understood the wisdom of his father's words.\n\nBeauty truly was in the eye of the beholder, and Taylor Anderson was the most loving, beautiful woman he'd ever known. Were it not for that sage advice, he had no doubt he'd have never seen the beauty he'd found in the face of his amazing and yes...beautiful wife.\n\nNor would he ever have known the joy of having a daughter of his own less than a year later when Taylor gave birth to a healthy baby girl they named Bethany Claire to capture most of the names of the other most important women in their lives.\n\nWhen Justin, Joel, and the rest of both families went to visit Taylor in the hospital for the first time after the birth of her daughter, David watched his son holding his little girl and told him again, \"You done good, son.\"\n\nHe thanked his father then told his father-in-law he was right.\n\n\"Having a daughter does change your life.\"\n\nHe, too, winked at his son-in-law who sat next to Taylor as he held Bethany with one arm. He put the other around his wife and told her how much he loved her.\n\nHe smiled at his dad and said to him as he looked down at his beautiful daughter and then his wife, \"You were so right, Dad. But today I'd say, 'Beauty is in the arms of the holder'.\"\n\nNo one else was paying any attention to anyone or anything but the bundle of joy in Justin's arms, but his dad understood. And as Justin sat there surrounded by everything that mattered to him, he did, too."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/eye-of-the-beholder-4"
}