{
    "title": "A 'B' or not a 'B'",
    "pages": [
        "She is the least appealing girl I know, not that she's ugly or anything, she's just ... sour-looking, that's the only word for her, sour \u2014 she appears sour about everything, not that I know her very well, even though she's been around for most of my life. She has this small round mouth that she always puckers and purses like you do when you're tut-tutting or when you bite into a lemon. I've always thought the pinched lips make her look one part angry, one part anal but, like I say, I don't know her very well. \n\n\"Oh, just take the fucking thing off.\"\n\nShe slouches against the back of the couch with that puckered look of hers and it looks like she isn't going to budge ... but she does because no one disobeys Hardy.\n\nHardy is down to her panties now and they are just about to come off.\n\nAt first I didn't know why they asked me along. Just like pucker-puss, I've never been a part of the group. How could I be? I've never slapped a puck or tossed a baseball or punted a football, not with any success. I'm a geek, pasty white, skinny and gangly. But I'm a smart geek. Unlike Pucker I figured it out right away. I am here with The Beautiful People because I am part of their entertainment. Pucker is supposed to be the other part.\n\nOK. When you're as far out of the in-crowd as I am you have few aspirations. But I'm not about to be going along here to get along. I've decided to go along because I'm pretty sure I will never ever get another chance like this for the rest of my life and I don't really care how it turns out. I just want to get everything I can out of it. That's why I stay. \n\nAt first, I thought I was asked here for the usual reason: he wanted me to fix a computer problem or something. But that was before their clothes started coming off. Hey, what did I have to lose? I take my shirt off soon after they do and my pants and underwear and it doesn't matter a tick to me that I look like a dweeb when I'm buck naked, a dweeb with a hard-on, which, I notice, is a head taller than those of the two football studs, Biff and Buck as I think of them, aka John Mason and Billy McLean.\n\nTo be fair I measured Biff's only a split second before Marion Yara swallowed it. And I mean swallowed. How she did that I have no idea. The laws of physics say you can't put something that size into some place that small without it going somewhere and where that had to be seemed far to painful to contemplate. Anyway, Biff's glance tells me I'd better not spend too much time trying to figure this out so I turn away and try a surreptitious, drive-by glance at Buck who has his face buried deep between Hardy Wiley's legs. But I am forced to quickly move on from them, too. \"She's yours,\" says the naturally bitchy Hardy, taking her fingers off her breast long enough to jerk a thumb towards pucker lips.\n\nSo here I am in an entirely unpredicted, curiously kinky predicament for which I have no experience. But, while I've never given even a flicker of thought to group sex I am a great believer in the old adage: 'in for a penny in for a pound.' \n\nI am on my knees, naked, my hard-on throbbing when I turn and look up at the most unappealing girl I have ever known and she is staring down on me with a pursed grimace that, if I'm reading it right, is saying something like: if you so much as touch me I'm going to kick the living shit out of you. And I don't doubt she could do it. Pucker is about three inches shorter than me but a hell of a lot more robust and solid.\n\nSo I don't touch her. Instead, I sit back on my heels and take the opportunity to study her, well, not her, I've seen all I ever want of her, I study the slightly pink bra that seems to iron-clad the breasts which I've been watching develop since she was, maybe, 13. I am surprised that she doesn't have nipples, at least any discernible nipples and I am surprised by the butterfly-like embroidery between the two mountainous cups. A butterfly is way too dainty a symbol for her, too feminine. Her mother must have bought the thing for her.\n\n\"Take her pants off, fuckhead.\"\n\nBiff has a way with words, not that he has ever really spoken to me before. And, like with Hardy, his voice tends to stir people to action. I sit up and slowly shuffle forward noticing that she isn't looking at me, she is looking slightly away from me, meaning to me that she isn't going to defend herself, she is resigned to her fate.\n\nAnd she doesn't defend herself. When I reach for the button on her jeans she is as still as a statue but as I accidentally brushed my fingers across her belly I know she is a whole lot warmer. \n\nThe button is one thing, the zipper is an entirely more advanced level of invasion. I look up at her. Hey, I admit it, I've always been a little afraid of Pucker so I'm not surprised that my fingers are trembling a bit. She is still looking away, still giving me a little implied consent but it isn't enough: I am only going to do this if she wants me to do it \u2014 I've never given a shit about Biff and Buck and Hardy and Yara. They couldn't make me do anything I don't want to do ... well, except spend countless hours working on their computers. So I just hang there for a bit with my fingers pinching that little pull thing.\n\nThe pursing, pouting mouth doesn't change, it's the eyes that change. When they look into mine there seems to be a slight flicker of approval, nothing you could take to court or anything but it seems to be there so I take it tooth by tooth, slowly, terrifyingly slowly because I'm always half-expecting a right hook to land on the weakest part of my jaw. But it isn't coming so I carry on doing something I have always wanted to do: I am in the process of taking off a woman's clothes. Too bad they happened to be on Marta Glock.\n\nDid she know what this little party was supposed to be about? Did she come here dress for it? Maybe. Her panties are the same light pink as her bra \u2014 they are a set, and everyone knows that girls only wear sets on special occasions. \n\nShe's starting to rise. I am about to back away, well, admit it, I'm about to flee, but then I realize she is only rising up on her left elbow, it is pressing deep into the padded arm of the chair so her buns are coming off the couch. I pull down on her pants, hard, they are really tight, it's a struggle but she pushes a bit as I pull and we finally get them off, well, down far enough so she can sit down again. And then the real work begins.\n\nOK, so I'm not too good at it, I've never done it before. If you pull one leg too far it makes the other harder to get off. Once I figure that out it's easier and it's easier still the lower on the leg they are so eventually they slide off. But she doesn't look pleased: she has the same sullen look she's had since the get-go, well, since I've known her. Trouble is, she's also looking pretty sexy, what with her big chest, lovely white belly and her nice pink panties.\n\nBut Marta Glock is a cold, cold fish. I don't know what the others are doing behind me but they are making a hell of a racket. Does she care? Not a bit. She never once looks at them, never even peeks. Instead, when she isn't almost scowling at me she is fixed on the middle distance, which, near as I can figure, is dull grey carpet.\n\nScrew it. I've taken in every inch of her fabulous bra, now I'm going to take a few moments to study her wonderfully sexy panties and I don't much care if I'm a little too obvious about it \u2014 I'll get out of this what I can. Why not? Opportunity knocks once, right?\n\nBut in a couple of minutes I've almost had my fill. I love the unbelievable femininity of her panties: the narrow waistband that bites into her flesh; the sexy sheen of the material; the wonderful rounding of her hips, but that's about all the variables there are because she's clamping her legs shut. So, pretty soon I exhaust all potential and I think, screw it, and I take my prick in my hand meaning to stroke it a few times and be done with it when her legs begin to open, slowly at first, so slowly that it's almost imperceptible but then she opens them faster, more noticeably and I let myself go and I look up at her. \n\nShe's wearing the same puckered pout she always wears but the eyes behind the oblong framed glasses seem a bit glazed, almost dreamy and her body is much more supple now, more relaxed, more alive. She is feminine and sexy. This thought kind of shocks me. Pucker puss has desires.\n\nHer legs are open now. I can see the fabulous contour of her mound and there's a wet spot about the size of a quarter and tuffs of her hair are poking from the elastics pinching her legs. She wants me to see this, she has opened herself to me, not to them, she has never once looked at them. Only I am here. It stuns me a little when this enters my head. Pucker pout wants me to be looking at her.\n\nMy head is swimming while my cock is throbbing. This is the closest I've ever been to sex. I'm so still I'm almost catatonic but just for a minute then I lean in and boldly press my face into her fabulously soft belly and when I do I can feel her fingers run through my hair and I can feel her sag, her knees press my arms to my sides. I can hear her moan.\n\nAnd I can feel the audience behind me.\n\nNot here. Not now. Not with them.\n\nI pull away, grab her shirt and pants from the floor and throw them to her, then I gather up my own clothes and quickly put them on. \"Thanks, guys,\" I say, cheerfully getting to my feet. I reach down, she is lying on the couch, pulling on her pants. When she finishes she takes my hand and I pull her to her feet where she zips up, slips on her shoes and puts on her shirt. We leave to cold stares without another word.\n\nHer hand is in mine when we reach the street; I don't know why. And I don't know why I say what I say, except that I'm unbelievably horny. \"Do you want to finish what we started?\" \n\n\"Yes,\" she says, through her usual pout.\n\nShe seems anything but convincing. \"Do you really?\" I press.\n\n\"Do you?\" Her eyes are searching mine.\n\n\"Ya,\" I said, instinctively, as if it's a no-brainer, which, the way I'm feeling, it is.\n\n\"Ya?\" She's still looking hard into my eyes. \"You've never once looked at me. You've never once talked to me. You've never once shown any interest in me.\" \n\n\"Ditto,\" I say, not really getting her point.\n\nShe harrumphs. \"If I had you'd still be running.\"\n\nThat's when it dawns on me. \"You're interested?\" This has never occurred to me.\n\nAn awkward silence between two awkward people. \"Really interested, Mike. Have been for years.\" Her severe pout is even more pinched. \"I'm desperately interested.\"\n\n\"You're kidding me, right?\" This absolutely shocks me. \"In me?\" No girl has ever been interested in me.\n\n\"My parents are away.\"\n\nI've never thought much about girls, only when I jack-off. Why would I? They've always been a totally negative experience to me, except for my mum, of course. Anyway, I don't know any girls very well, and don't pretend to understand them. \n\nWe start walking and I ask what I have been turning over in my head. \"Would you have let me ... screw you back there?\" \n\nShe's looking at the street like she looked at the carpet back in the house. \"If you tried it would have meant you didn't have any respect for me. So no.\"\n\nI glance over at her and chuckle at the memory. \"You took it pretty far.\"\n\n\"Me?\" She shoots a glance at me. \"YOU took it pretty far.\"\n\nI chuckle again and find myself saying, \"You've got a pretty nifty body on you.\"\n\nShe's back staring at the sidewalk. \"I wanted you to see it, not them.\" \n\nI have no idea what she means by this and don't pursue it, instead, I try to find out what she's thinking. \"So what does the next step mean, I mean, if we go back to your house?\"\n\nShe isn't losing focus on the sidewalk. \"What do you want it to mean?\"\n\nI'm thinking this is pretty obvious. \"I want to see you. I want to have sex with you.\"\n\nShe shrugs. \"OK. I'll give you that ... but I want you to know who's giving it to you. This isn't about sex for me, Mike. This is about you and me.\"\n\nI get a warning bell clanging in my head. \"What do you mean 'you and me?'\"\n\n\"Us.\" \n\nThis sounds to me like a dirty word. \"Us? What? You're expecting ... a commitment or something?\"\n\n\"No, no. You can fuck me and move on.\" She says this as if we'd be trying out a new game. \"No, I'm just telling you that I'm not that type. I'll use my body to try to get you, and I'll use everything else I have, too but I just need you to know that I want you.\" She throws a punch at my shoulder, the first playful thing I've ever seen Ms Pouty Puss do. \"But hey,\" she adds, \"don't let that influence you.\"\n\nI'm looking at her through the window as I buy the condoms. She has dark brown hair that falls straight to her shoulders and frames an oval face, like her glasses, with a high forehead and a slightly upturned nose that somehow over-powers her mouth which is scrunched in her usual puckering pout. When I walk out with the bag I reach for her hand in some atavistically instinctive way and she effortlessly takes it as if we've been holding hands for years. Why Not? We're heading for a fuck.\n\n\"Did you know I was coming ... to that party?\" I say, after a few strides. I couldn't figure out why we were both there.\n\nShe doesn't answer me right away but she eventually explains. \"Hardy owed me one. I suggested it. It was my idea. They jumped at it. They probably thought of us as a side show and it was going to be the only chance for those guys to see me naked.\"\n\nIt isn't easy making sense out of this and it isn't easy walking with a girl's hand in yours. \"You knew they have those group fucks?\"\n\nShe definitely shrugs this time. \"Everyone knows.\"\n\nI didn't, but I am just now understanding what she is getting at. \"You got them to invite me there so I could see you naked? So you could get me interested in you? Is that it?\"\n\nIt sounds a bit like a snicker and shrugs and I think I feel a little squeeze from her hand. \"What can I say?\"\n\nSomehow I'm impressed with this. \"Took a lot of courage.\"\n\nShe's still staring at the pavement, still holding my hand like it's an entirely natural thing to do. \"I looked on it that it was no worse than wearing a bathing suit to the beach. I was never going to get naked in front of them.\"\n\n\"So I was never going to see you naked. You expected me to pull you out of there then head for your house?\"\n\nShe stays quiet and watches the pavement pass by.\n\nI remember my observation about her underwear. \"Do you always wear a matching set of underwear?\"\n\nShe gives my hand a little jerk and I detect, more than see, her smile. \"Just when I'm trying to land you.\"\n\nThis all seems like it's out of some cheap novel, a novel I'm having a hard time placing myself in. \"What would have happened back there if I went for it? Started ripping off your clothes?\"\n\nShe answers immediately, obviously she has thought this part through. \"Then you wouldn't have been the guy I thought you are and I'd probably have slugged you.\"\n\n\"Lucky me.\"\n\n\"No,\" she squeezes my hand again, \"lucky me.\"\n\nI drop her hand when we got near her street and we walk in silence, more quickly now. When we get through the door I follow her up the stairs, down a hallway and into her room. \n\n\"The moment of truth,\" she says, turning to me. \n\n\"Or lust,\" I say, expressing my honesty. But I'm really, really confused. \"Is this really so important to you?\"\n\nHer hands are down at her sides now and she's looking not very confident and a little vulnerable. I've never seen her look this way. I feel a little pity for her. \"Vitally important, ya.\"\n\nGod, we're on entirely different wave lengths. \"Why?\" I say, noticing my own exasperation.\n\n\"Because you're the one for me, Mike. You're exactly the man I want ... I know I have to work hard to get you but I plan to, you just have to give me a chance.\"\n\n\"But why me?\" She isn't making any sense.\n\nShe laughs, but it's nerves, I can easily see that. \"Let me count the ways.\" Then she seems to get a bit bolder. \"Why I want you shouldn't matter to you, only to me. What should matter to you is what I can bring to you. I'm smart, Mike, but then you know that. I'm determined and sensible, but you know that, too. And, obviously, you know I'm not particularly attractive. Too bad for me. What you don't know is that I'll do anything I can to get you and when I do I'll be unbelievably supportive and loyal to you; I'll always be a hard worker; I'll be fun and I'll always be your best friend. But most of all, you have to know that no one will ever love you as much as I'm going to,\" she pointed to her bed, \"in there and everywhere else.\"\n\nI've always been a calm and cool guy, good under pressure, unflappable. \"Do you know me so well?\" I shake my head. \"I don't think so. You sure don't know me well enough to love me.\"\n\nHer laugh has a lot of joy in it and there's a lot of relief, too, as if she has said what she has wanted to say and the worst is over. \"Don't you worry about me, Mike. I'm a big girl in more ways than one. I know who I love and why. We're not here to deal with me, we're here to deal with you. Worry about yourself.\"\n\n\"Fine,\" I say, feeling a little like I'm back with Biff and Buck, and vowing to make the most of a gift opportunity. I take a step back. I can feel her watching me as I look around her room. At first I do it passively, I just absently look at her things, then I try to get her going a bit by poking around, re-arranging some knick-nacks on her dresser, then I open her closet, start opening her drawers a bit, just like I'm sleuthing the place out. But she isn't a bit bothered; I see in the mirror she has the same pouty look but there's a hint of a smile on it and in her eyes. \"So if I'm such a hot property where are all the pictures of me?\"\n\n\"On my computer,\" she says, matter-of-factly, her eyes never leaving me.\n\n\"Can I see them?\"\n\n\"Sure, eventually.\" The smile grows on her pout, a kind of mischievous smile and I have no idea what's going on here.\n\nBut I'm getting tired of always being off-balance; I want to gain some control over the play \u2014 because that's what it feels like, so I try to shock her. \"If you know me so well do you know about my fetishes?\"\n\n\"No.\" She has the same smile, a little more mocking now, I can see it in the mirror.\n\n\"Do YOU have any?\" I'm eyeing her.\n\nWhen she shrugs I can't help but focus on her nifty chest. \"I sure hope so.\"\n\nI'm trying to be really casual but I'm trying to be a little off-putting, too. Yes, I'd really like to get laid but, at the same time, I'd like to scare her away, too. I'm confused, to say the least. There is a hamper beside her dresser. There is a pair of her underwear crumpled on the top. \"I have this panty fetish, I go online all the time.\"\n\nShe's still looking at my reflection in the mirror. \"Top drawer, left or, if you prefer, belt level, just beneath my jeans ... but then you know that.\" There is no doubt about the mocking now, it's glistening in her eyes. And the pouty mouth is grinning.\n\nI should feel a bit silly but I don't. It doesn't seem like I can do anything wrong here. \"So what makes you think this can work?\"\n\nThe humour is gone in an instant. She is deadly serious now. All business. \"Three reasons. One, I want it really, really badly; you have no idea. Two, I have a whole lot to offer you. I think I'm the best deal you're ever going to get. Three, I'm smart and I'm hoping I'm smart enough to pull this off ... the hardest part is to convince you to give me a chance.\" \n\nSmart? That's not the way I've been reading it. \"How smart was it to use Biff's place as a rendezvous?\"\n\n\"It worked, didn't it?\" She waits a moment for this to sink in. \"I wanted you to see me naked, or near naked. I wanted you to see what's on offer here, physically. How else was I supposed to do that? Call you? Wait for you to stumble into my bedroom? Invade yours. Invite you to a Turkish bath? Jump out nude on a trail? Email you pics of me? Hardly. If I so much as hinted at a move in your direction you'd have started running and you know it.\"",
        "I open her panty drawer and poke through it. I'm trying to piss her off. I'm hornier than hell but I'm wary, too, I want to get some idea of what this is all really about before I do what I came for. But it's starting to get a little weird and way too complex \u2014 there's something going on here that's not fitting into any data base I have ever known. I'm just about to beg off. I'm thinking of asking her for a date just as an excuse to get out of there, but she butts in. \"I have a theory, do you want to hear it? It'll take a little time.\"\n\n\"Sure,\" I said, walking over and flopping on her bed, stretching out. \"Fire away.\" I fold my hands behind my head and wait, not caring if she notices my hard-on.\n\nShe sits down on her computer chair and wheels it closer to the bed and puts her feet up, and totally relaxes, the first time she's relaxed since we got here. \"If a really beautiful girl and I are out hitch-hiking, she will get a ride way faster than me ... every time. Right?\"\n\nNot going to work. \"Be objective, Marta. You're not going to get me to admit you're not beautiful.\"\n\n\"OK, but you take my point.\"\n\nI shrug, non-commitally.\n\n\"That beautiful girl is treated beautifully all the time, so much so that she begins to believe she's beautiful, right? I mean beautiful in all situations. It stand to reason: keep on being told you're beautiful, get all that positive feedback, in all those different situations, all those cars screeching to a halt, and you begin to believe it ... pretty much all of the time.\"\n\nI shrugged. Nothing terribly original here, I thought she's supposed to be smarter than this \u2014 she is almost always first in her class.\n\n\"So think about this same thing a different way. What if you've got a deep scar slashing down the side of your face and that scar gives you a perpetual grimace. People will think you're angry, annoyed, mad at the world, right? I mean that's what a grimace means. And you know what? Here's my theory: just like with the beautiful girl, if people perceive you a certain way then, because of the constant feed-back, that's the way you begin to approach the world, that's the way you become. The guy with the scowling scar will eventually begin to scowl. It's like a self-fulfilling prophecy written on his face. He might not be a scowler at all, he might be the happiest guy in the world, but because he looks a certain way that's the way he'll be treated \u2014 that's what people expect, so over time, that's what he delivers because perception is reality, Mike and it's a whole lot easier giving people what they want then trying to change their minds.\"\n\n\"And your point is?\"\n\n\"That's obvious, isn't it? I have a kind of scowl. I was born with it. Everyone thinks I'm a pissed-off librarian-in-the-making, they always have and that's the way they've treated me. And I've kind of become that way, I've kind of fulfilled their expectations of me, of their wishes for me, but it's not me, Mike, not at all. I'm somebody entirely different than that and I want to start becoming the person I really am.\" She gently kicks me on the thigh. \"Here's where you come in. The me I want to be is full of love ... for you, as it turns out and she's full of fun and adventure and a lot of other great things. But I'll never be able to express myself alone. I know that. I'm way to easy to type-cast. That's why I want you. Because I love you, sure, but I also want you for the credibility you will give me. I want to be your partner because that will change everything for me. I will be seen, and more importantly, I will see myself as part of a loving couple getting on with life. The scowl won't be gone but with you on my arm nobody's going to much notice.\" \n\nI was studying her face while she was talking. Her pinched and pouty mouth does make her look like a pissed-off librarian, it always has. Maybe she isn't, maybe everyone has her wrong but the love part is really well hidden. I don't see that at all. \"You love me. You know that?\"\n\nShe stretched her pout into a smile. \"Have since grade 8.\"\n\n\"Kept it a secret.\"\n\nShe nods. \"Until now.\"\n\n\"The bottled-up kind of love then.\" I'm teasing because I don't know how else to handle this.\n\n\"The cap had to come off.\"\n\n\"And what do you want me to do about it?\"\n\nShe kicks me again as if trying to wake me up. \"Fuck me and fall in love with me.\" She totally relaxes in the chair, slumping down, crossing her feet. \"I saw a quiz last week. It's what got me thinking; it's what started all of this.\" She folds her hands on her lap. \"The question was: When does a relationship become a commitment? Here were the four choices: A. When a couple becomes exclusive; B. When a couple becomes sexually intimate; C. When a couple decides to live together; D. When the couple becomes married? What's your answer?\"\n\n\"I haven't got one.\" I was trying to digest the question and the answers. \"I've never thought about it.\"\n\n\"Well think.\" For the first time she's showing a little impatience.\n\n\"That's unfair. You've had days to think about it. Anyway, I don't think I would have an answer, I don't know anything about that kind of stuff.\"\n\n\"No?\" She can lift her eyebrows well above the top rim of her glasses.\n\n\"No.\"\n\nShe smiles and uncrosses her legs to kick me again. \"You're wrong.\"\n\nI don't know how she knows this and I don't care. It's getting a little uncomfortable in here. I hate being confused, I hate back-peddling all the time and I hate feeling stupid. But there is something about her that's getting to me a little bit, and it isn't just the vicious body she wants me to get busy on. How many girls tell you they love you? It's never happened to me before and I wouldn't be shocked if it never happened again. And, I'm thinking, maybe I'm having a hard time with this because I'm one of the people she was talking about when she talked about the scar and the scowl: geeks don't tend to see themselves as love-interests because no one else does either. But enough thinking. \"Look, you're 21 years old; you're going to be a nurse in 2 years; you've lived just a fraction of your life; you're going to meet hordes of people; you're going to grow into an entirely different woman while society changes all around you. What makes you think I'm the only one for you? I just don't get that.\"\n\nShe is ready for this, I can tell. This is the softball she's been waiting for. She sits forward a bit as if she is about to say something profound. \"I'm not the type to fall in love, Mike \u2014 that's the last thing I want to do. But I do want to BE in love ... with you. For me, there's no falling; it's a decision. I've thought it through a thousand times. You're what I want, you're the guy I want to work hard for all my life. I'm not a romantic. Maybe I've become the way I look, a stern pragmatist ... but I just happen to be a stern pragmatist who is brimming over with love ... for you. That's a fact, Mike. Accept it.\"\n\n\"Not falling in love. Deciding on love.\" I am trying to work through the difference, which I think I got.\n\n\"A decision I'm ready, willing and able to make. Ya. I want you.\"\n\nI eye her cooly, surprised that I'm taking her seriously. \"What if I'm not prepared to make that decision?\"\n\nShe shrugs. \"Then I lose because I don't think you'll ever fall in love with me. You have to decide you want to love me.\"\n\n\"So I'm supposed to do that here and now? Is it that easy?\"\n\nShe leans forward even further, a bit combatively I think. \"I know you, Mike, I've watched you for years. Ya, that's all it will take. You won't make that decision unless you're sure it will work. But that decision is obviously entirely up to you. I've made mine. All I'm doing here is trying to convince you that my half of the deal is totally genuine, that I'm totally into it. Obviously, you have to decide for yourself, but I don't want you to have any doubts about me. None.\"\n\n\"You know me?\" She keeps saying this.\n\n\"Yep.\" She sits back and looks at me defiantly.\n\nThis just occurs to me. \"Wanna take a test?\"\n\n\"Sure.\" Her eyes flash with confidence.\n\nI wait for a moment to get her undivided attention. \"Your quiz. Would I pick A., B., C. or D?\"\n\n\"Oh, you bastard,\" she whispers, then she smiles and kicks me yet again. \"Crafty, Mike, you've always been crafty.\" \n\n\"You were trying to trick me, weren't you. That's what this is about?\"\n\nShe flicks her fingers at me dismissively. \"Hardly tricking you.\"\n\n\"You had me down as a B, didn't you? You're thinking, one fuck and, bam, I've got the guy for life. He'll never flee: he's too honest, too honourable, too much of a gentleman.\"\n\nShe doesn't say anything. She has the good grace not to deny it. But she does squirm a bit and she rubs her shoe against my leg. And she does smile.\n\nI've been on my side, facing her with my head propped up in my hand. I fall on my back and look at the ceiling glad that she is letting me think. But I can't think, not really. I'm too horny for that, physically, but I'm turned-on, too: my head is swirling at the same speed that my cock is throbbing. I reached out and when I undo the bow on her left shoe her eyes widen and a smile blossoms from her pouty pucker. \"Are you prepared to risk it?\" I ask.\n\nShe knows exactly what I mean. She's looking straight into my eyes. There's a tenseness there but I can see some confidence, too. \"Am I prepared to bet my body that you're a B?\"\n\n\"Ya.\" I'm playing with the lace, waiting for her answer.\n\n\"Ya, I am.\" The confidence is gone. She looks somehow smaller, more vulnerable.\n\nI undo the lace. \"You were really sexy back there, you know. You don't know how close I was to losing it.\" I can see her chest is heaving but she isn't saying anything. I take off her shoe, dropping it on the floor and I start in on her sock. \"Actually, I thought of you once while I was masturbating ...\"\n\nHer hands are down by her sides, they appear rigid, the knuckles on her left hand look white. \"I think of you all the time ...\"\n\n\"It was a power thing.\" I am taking my time with the sock. \"You were really pissed off at someone for something that day and later I imagined you ... sort of in my power.\" I drop the sock and lean forward and take her big toe in my mouth and I can feel her stiffen when I suck on it and I slide my hand up her leg as far as the jeans will allow. \"I've never done anything to a woman before, I've just read about it.\" I watch her face as I suck her other toes. \"I loved looking at you on that couch. It got to be an unbelievable turn-on.\"\n\nHer arms are stretching as tight as they can, she is pushing her shoulders up to her ears. \"I want to see you, Mike. Would you take your clothes off?\"\n\nI suck on her toes some more, maybe for a minute, long slurping sucks and I work my tongue between them. I feel more naughty than anything, like I'm doing something to her that has never been done to her before, something a little outrageous. I'm surprised how much I like doing it. \"Promise not to move?\"\n\n\"God, Mike.\"\n\n\"Promise?\"\n\nWhen she nods I lean back and quickly strip then I turn towards her on my side, with my stiff prick in my hand. \"What do you think?\"\n\n\"I think you have six more items to take off me.\" She wiggles her shoe.\n\nI take her other shoe off quickly but linger with her sock which, when I have it off, I lay on my back and dangle over my nose. \"You smell nice, Marta. I remember your skin when I pushed my face into your belly. I remember the smell and the feel of it.\"\n\n\"Come on, Mike.\"\n\nI turn back to her, dropping the sock. She looks like she's in pain. I lean forward and lightly bite all her toes, licking between them. \"Do you like to get licked?\"\n\n\"God ...\" She has her eyes closed, she is somewhere else.\n\n\"Do you?\" I suck and bite three toes at once. \n\nShe is rigid, she's holding her breath, then she sighs and says, \"I've never been with a guy, you know that.\"\n\n\"Do I?\" Yes, I guess I do, not that I have ever thought about it, or her, for that matter, except for that one time when I was flogging and I wanted to ... I'm not sure what I wanted, maybe just to dominate her, just for a minute. I pull back a little and study her foot, the first foot I have ever really looked at, including my own. She has some nail polish on her toenails but it's more chipped away than anything, but, even so, she has pretty attractive feet. Well, they aren't ugly.\n\nI go back to kissing and sucking her toes and running my hand up the inside of her pant leg to squeeze her calf. \"I've always had this thing about sex,\" I say, \"because of my parents. They don't have sex in front of me or anything, obviously, but it's really easy to see they love to touch each other, they're always doing that, not in their private places but ... Anyway, I love the way they treat each other and I've always wanted to be like them someday, to find someone I love to touch. They're so happy with each other. I don't think of it as sex, that's what Biff and Buck were doing back at the house, and there's a lot to be said for that, don't get me wrong, but I really want to be able to touch someone and that someone really has to want to touch me.\"\n\n\"You won't let me.\" She's in full pout; her eyes are out of focus.\n\n\"But do you know what I mean?\"\n\n\"Intimacy.\" She says the word like she's talking to an idiot. \"Of course I know what you mean. It's what I dream about all the time. Intimacy with you.\"\n\n\"Like this?\" I am still licking and biting.\n\nShe shifts a bit. I can get my hand a little higher up her pant leg. \"Only the way I imagine it, you're in the chair and I'm touching you.\"\n\nI take her by the leg and as I pull the chair towards the bed I pull myself onto her legs so my head is just past her knees. When I wrap my arms around her and grasp the top of her buns she puts both hands in my hair and starts to massage my scalp. It feels so great I could easily just stay there until she grew tired of it but I'm way too horny for that; I rest for about a minute before I start pulling myself upwards with my face still pressing into the gap between her legs; she's pulling on my jaw and sliding down so my face soon lands in her lap. It's hot and soft and damp there and it smells. I nuzzle hard into her and she helps me, pushing me down while thrusting up and I kiss her jeans and lick them, trying to find some taste. But I can't resist any longer. I rub my prick against her ankle, just a few times and it comes shooting from within me like an erupting volcano, it charges through me in an instant and I pump out a gallon of the stuff as I thrash myself against her boney ankle.\n\nThen it's over. I can feel my prick shrinking in a pool of the cream. I can feel my chest heaving against her boney knees. I can feel her body as rigid as that statue, pressing against me while her hands squeeze my head into her lap.\n\nI don't want her to move, to do anything, to say anything. I want to just lie there for a minute and think about what the pouty pucker is thinking? Is she mad? Is she disgusted? Do I care? Her leg moves slightly and I can feel my half hard-on shift in its sauce. I know she is uncomfortable, she has to be but she holds me there, allowing me to recover. Do I want to run? Do I want to stay? I'm confused. I've never felt this way. But when I nuzzle further into her damp and smelly jeans I know I haven't had enough.\n\nHer hand is on my back now, rubbing it gently, reassuringly. I can feel her relaxing, she seems softer now, more comfortable. \"I had no idea I could ever love you this much, Mike. I had no idea I had this much love in me.\"\n\nI adore the weakening feeling after a great orgasm. \"Do you love me enough to get me onto that bed and yourself in beside me without altering this mood?\" I mumble the words into the damp fragrance of her jeans.\n\nShe hesitates for a moment before moving with surprising dexterity. She is a strong girl who is little challenged by dragging a wimp like me, dolly-like, onto his back. She is just tucking in beside me when I remember the deposit I've left on her leg. I make to get up but she pins me down. \"I want to clean you,\" I protest.\n\n\"I may never clean that off, Mike. God, that was just so unbelievable.\" The puckering pout looking down on me doesn't, for the first time, look so pursed in displeasure. Her mouth now looks ready to be kissed. I pull her down as I move away and she is suddenly on her back looking up at me, wide-eyed and breathless. \"I thought you might leave,\" she says, stroking my face.\n\nI bend down and lick her lips then I lick all around them before gently placing mine on hers and she nibbles at me, moaning all the time. I let her do this for awhile then I pull away and look down on her. \"So you think I'm a B, eh? One fuck and I'm here for life?\"\n\n\"You're a B,\" she says, with utter confidence.\n\n\"So what does that splash on your leg mean?\"\n\nShe smiles her pout away. \"That's just foreplay, Mike. Alas, it doesn't count.\"\n\n\"And slap and tickle?\"\n\n\"Mere exploration, checking out the goods. No fuck \u2014 it doesn't count, either.\"\n\n\"Licking, sucking, probing?\" I put my hand under her shirt and feel the softness of her belly.\n\n\"Inspection only: prudent: caveat emptor.\"\n\n\"Oral, anal?\"\n\n\"You'd be just kicking the tires, Mike.\"\n\n\"Masturbation, bondage?\"\n\n\"A test drive, little more.\"\n\n\"Swinging?\"\n\n\"Merely sharing.\"\n\n\"Sadomasochism?\"\n\n\"Inevitable, Mike ... if you are to say 'no' to me.\"\n\nBut I don't feel like saying no to her. Not yet. The way I figure it, one more orgasm would cool me off, another would make me cold and if I can hang around for a third I'd be so sexually sober I could easily strut on out of her life forever. I reach over and pull her head towards me then I lie there and take it, take the tongue lashing that brings me perilously close to my next big hurdle.\n\nShe is panting when she rolls away. She falls on her back and looks at the ceiling. \"God, Mike, this is way better than I ever imagined. Way, way better. I expected more fumbling, not just you, me, too, more awkwardness, more hesitation, more difficulty ... connecting. I didn't expect your noises, I hoped for them, but I couldn't imagine what they would sound like.\" She looks over at me and her pucker grows into another smile. \"We can do this, Mike. We're good at it.\" Then she arches up. \"I've got to get out of these.\"\n\nI watch her unbutton and unzip her jeans. \"Don't take your panties off.\" \n\nShe doesn't, she just kicks away her jeans and sits up, quickly undoing and throwing away her bra. She turns to face me and holds her breasts in her hands. \"You like these, Mike, at least you've always really liked them when I'm ... conjuring you. You've made it so I don't mind lugging them around any more.\"\n\nThey are big and soft and white and comfortable-looking. But, somehow, they don't suit her. They are too generous, too sexy, too feminine for the girl I've watched growing up. She has really big dark circles and really long, really stiff-looking nipples. \"What would I do with them ... when you were conjuring me?\" She is sitting with her legs crossed so I can easy see the huge wet spot between her legs. She doesn't care. I reach out and gently touch the wetness.\n\nShe flinches then smiles. \"What do you do with them? Suck, bite, squeeze them, put your cock between them, rub them against you ... but mainly you just wanted them to be there for you when we were alone, like without the bra. You never let me wear a bra in our house.\" She drops her breasts and caresses the back of my hand as I run my fingers around her wetness.\n\n\"And you were OK with that?\" I have a long way to go before I can understand this girl. But I'm trying and that really surprises me.\n\n\"OK with it? Sure, I was OK with it. Are you kidding?\"\n\n\"Do you have bras where you can see your nipples poking out?\" I don't like that the pink bra hid them.\n\nShe leans back on her arms, entirely comfortable with me looking at her breasts and playing with her wet spot. \"A bag of them, Mike but I don't like wearing them because people stare so much.\" I can feel her pressing a little against my fingers. \"But I won't care about that if I can pull this off. I won't care about that if I'm with you. I'll probably love it. I'll be proud of it, proud of them.\"",
        "I don't know how long I can last and I don't know if I'll flee after my next orgasm so I pull my fingers from her wet panties and get to something that has been really bothering me. \"One of the big knocks on marriage is that the men tend to get lazy, the women tend to get fat, the sex tends to get boring and life tends to get predictable. Why would you want that?\"\n\nShe is still leaning back on her arms, her wonderfully sexy breasts spill over her ribs, her stiff nipples point south but her eyes are focused on me, intently. \"I wouldn't. I'd like to be like your mother, the way you described her and I'd like to be like mine. She's not fat, she's not lazy and she's anything but boring.\"\n\nI pull back a little and deliberately study her, looking for the big picture. She lets me, she just leans back on those arms with her eyes staring into mine, her mouth pinched in concentration. I took in every nook and cranny I can find, I take my time and she doesn't move a muscle. \"So I don't have to sell myself to you? Is that the way it goes? You're entirely sold on me. It's just you who has to be won over? All I've got to do is decide if I want you.\"\n\nShe still isn't moving. \"Yep. That's the last step in the process.\"\n\n\"And, according to you, I'm a B so we fuck and it's 'til death do we part.'\"\n\n\"Preeeecisely,\" she smiles.\n\n\"That's weird.\" Weird that she would admit her strategy.\n\n\"Why?\" She sits up and reaches for my hand. \"I'm ready to settle down and so are you. You've only got three years before you graduate and you're going to have to work like hell to do that ... and work like hell at the beginning of your career. I'll be there to look after you, you'll be there to look after me. I'm not the fuck around type, Mike and nor are you. So let's not fuck around. Let's just be together. I'm not pushing for marriage now, that can happen in the future but we should be with each other now.\"\n\n\"So, you're thinking let's just fuck and get it over with.\"\n\nShe smiles. \"Good idea.\"\n\nI study her hand in mine. It's a strange sight; it's kind of erotic, but it just doesn't look like it belongs there. \"I may not be the fuck around type, Marta, you're right. But I am the honest type. Do you know what I've decided?\"\n\nThe pinched pucker is clearly a grimace now. She pulls her hand from mine. She expects the worst, that couldn't be more obvious. \"I'd hoped for a little more thought on this, Mike, a little more time, a little more consideration ... experimentation before a decision. Are you sure you want to rush into that?\"\n\nI've never been a prick. I have to tell her the truth. \"I decided an orgasm ago that I might be three orgasms away from leaving.\"\n\nPain is unmistakably in her eyes. \"So, obviously, none of them will be in me.\"\n\nI feel like a shit. \"No.\" \n\nHer shoulders sink, she puts her hands in her lap; she is staring at them. \"What happened after that first orgasm, Mike, the one on my leg?\"\n\n\"I decided to stick around for another.\"\n\nShe looks up briefly, tears are welling in her eyes. She quickly looks down at her hands. \"Stick around for another,\" she repeats, then I can see her make a decision. She looks up at me. \"OK, let's find out what happens after that one.\" When she springs to her knees and moves toward my half-stiff dink I try to roll away. \"Don't,\" she demands, angrily pressing her hands against my hips. \"I'm going to give this everything I've got so you just lie there and take it.\" She takes my prick and is about to put it in her mouth. \"And remember,\" she kisses it, \"the woman doing this is the one woman on this entire fucking planet who will do absolutely anything to get you.\" She takes me in her mouth and gives me a tentative suck, then she pulls away, sits up straight so I can get the full impact of her breasts, then she goes back on me but turns sideways so I can see them bounce and sway as she gives me everything she has.\n\nI warn her when it's coming (after pathetically few sucks) but she stays with it and keeps at it until it's all out of me and I start to shrink. Then she sits up, sits back on her heels and looks down on me, more defiantly than anything. The pursed mouth that puckers so sourly is perilously close to a scowl. It's the mouth that only seconds before had been sucking me; the mouth that has told me all those masturbatory fantasies she has about me; the mouth that has told me, even convinced me, how much she loves me; the mouth that has kissed me lovingly. That mouth. The one I've always hated.\n\n\"You have beautiful breasts, Marta.\" I am trying to be nice, but it's true, she does. \"I can see why I didn't want you to wear a bra.\"\n\n\"And why I have to wear one.\" Her nipples are unbelievably long and stiff. \"Verdict?\"\n\nI ignore her question. \"Sometimes I wear my mother's panties and I fantasize about being with her. I have one of those pocket rocket things which I sometimes use in my ass when I masturbate. I'm not a homosexual but I have fantasized about being with a man, a really, really gay man. I know I would want my wife to want to be with a lesbian. Sexually, I want to be as adventurous as I can be. But you're right, I'm no cheater.\"\n\nShe doesn't flinch. \"Trying to scare me off?\"\n\n\"Telling it like it is. Warning you.\"\n\nHer eyes grow wider. \"So I'm still in play?\"\n\n\"Do you still want to be?\" She's as tenacious as a pit bull, but slightly better looking.\n\nShe falls down beside me and drops her arm and leg over me. \"You don't understand, do you? This isn't an elective for me, you are an imperative. I want us to start living, start planning, start exploring together. That last orgasm has to be in me. What do I have to do to get it?\"\n\nI have no doubt she means this. She is utterly convincing and I haven't a clue why she cares. I push her arm and leg off me and sit up and when I have my fingers on the waistband of her panties, she makes it easy for me to peel them off.\n\nShe peers up at me with a look I've never seen before. \"Put them on, Mike. That will excite me.\"\n\nI have them in my hand; they are so wet they are almost heavy. I bring them up and press the wetness against my face, breathing in the pungent scent. \"Really?\"\n\n\"Put them on.\" When I do she presses her palm against me and smiles. \"Intimacy has many expressions, Mike. I want to find them all in you and I want you to find them in me. Here's one.\" She lies back with her legs bent and open. She brings my leg over her and she pulls me up until we're facing each others sex. \"I like to smell myself when I masturbate.\"\n\nI slowly lower myself, my cock and my face and we both start licking together. I don't know if you can call it beautiful, I have nothing to compare it to but it sure stuns me and not just because it's the first one I've ever seen, not just up close and personal, I mean at all, live at least. But it isn't that. It's the way she offers it to me, like, here, take it, it's for you, it's for nobody else. It's so honest and innocent and sincere, that's the way I take it and I know right then that this intimacy kind of changes things, that her offering me herself like that kind of changes things. \n\nAnd something else changes things, too. She is thrusting at me and she is screaming so loud I can feel the vibrations on my prick through her wet panties and there is a sudden gush that becomes like a long rooster tail of cum, flooding into my face like a fountain. The whole thing is like one gi-normous multi-media turn-on: the smell, taste, touch, the sounds, the flood, the energy of her driving pussy and the unbelievably femininity of it all: the breasts beating on my belly, my fingers digging into her ass, her hot, wet, smelly pussy smothering my face and then my cum explodes into her panties which are still pressing her face. It's an orgy of wet sensations that is so intoxicating I have to push her away for relief.\n\nBut I don't get much. Her lips are suddenly on mine and she is squeezing my neck like she wanted to strangle me ... but I don't care. I am completely and utterly spent.\n\nAnd I don't care when she lets me go. I don't care when she pulls me into her so my head is on her breast. I don't care when she wipes away cum from my face and the sweat from my brow. I am entirely fucked.\n\n\"I'm holding you tight so you don't run,\" she whispers.\n\n\"I couldn't run if I tried,\" I murmur, my lips brushing a nipple that's as tough as leather.\n\n\"You'll recover.\"\n\n\"Ya,\" I say, as I drop off into never-never land.\n\n\n\n\n\nIt is the sudden movement that must have awakened me: her sitting on the bed.\n\n\"Coffee?\" She points to the cup on the side table.\n\n\"How long was I out?\" I am still feeling groggy.\n\n\"Two hours, give or take.\"\n\n\"Two hours!\" I look around for a clock for confirmation. \"Was I drugged?\"\n\n\"I phoned your mother and told her you are staying here for supper. Just in case.\"\n\n\"In case of what?\"\n\n\"In case you will. We still have an unresolved ...\" she fishes for a word, \"issue.\"\n\n\"Whether or not I'm going to spend the rest of my life with you. That issue?\"\n\n\"Well, ya, looked on your way, sure, but looked on my way it's all about whether or not I'm going to get the boot.\"\n\n\"Implying that if you don't get the boot we're just going to continue on in perpetuity.\"\n\nShe bends down and kisses me lightly on the lips, then smiles.\n\nI kiss her back and can already feel a hard-on growing in her sticky panties. I struggle out of them, not easy with her leaning on me, and I drop them on the floor, surprised that I'm not the least bit embarrassed. \"I'm not the type to impetuously commit to something I've never thought about, just because somebody else wants it for me.\"\n\n\"Well, ya, but we're way beyond that now.\" She kisses me again. \"This is no longer a case of just me wanting you. You're wanting me now, too.\" When she kisses me again I'm wondering what she's talking about. \"There are just a few loose ends for me to tidy up. We know we're great in bed together and we're going to get better. I've showed you I can look after you. I'm just about to show you I'm a great cook. You know I can plan and organize: I've got our life together all mapped out ...\"\n\n\"And you've proven you can lie.\"\n\n\"Lie?\" She looks down on me, surprised.\n\nI almost laugh at her confusion: finally, she is as confused as I've been from the start. \"When's the last time you sniffed your panties when you masturbated. That was bullshit.\" It was the first thing I thought of when I woke up.\n\nShe giggles nervously and becomes defensive. \"I've done it before, not for awhile, but I've done it.\"\n\n\"'Could do' isn't quite the same as 'want to do.'\"\n\n\"Picky, picky, picky.\"\n\n\"Ya, well I don't appreciate you doing things just to please me.\" That really does bothers me.\n\n\"Get used to it, Mike\" She smiles. \n\nI'm really getting to like her smile. \"I'm serious.\"\n\nShe stands up. \"So am I. Do you want a shower or a bath?\"\n\n\"Do you have any wine?\"\n\n\"Gallons of it.\"\n\n\n\n\n\nI knew when I slipped into the hot water that it is going to be increasingly difficult to extricate myself from Marta Glock's life. Then, when I take the glass from her, I am pretty sure I'll have to stay for at least one extra orgasm. She has changed the long, heavy brown t-shirt she had been wearing to a very light white one that stops just short of the tips of her short and curlys and it shows the contours of bra-less breasts to perfection.\n\n\"You're pulling out all the stops,\" I say, eyeing her chest.\n\nShe smiles, mischievously, her mouth not nearly so pouty as I once thought it. \"The stops are the only thing I'm going to pull out.\"\n\n\"We're not there, Marta.\" I'm trying to nudge her onto the track that I'm on, but it doesn't seem to be working. In fact, she seems already to have us at her destination.\n\n\"No, eh?\" She closes the toilet seat and sits on it, sipping her wine.\n\nI look up at her and say what I've been thinking about for a while. \"Since when did you become so horny. That's not the Marta Glock anyone knows ... anyone that I know of.\"\n\n\"And you're known as a swordsman?\" She smiles. \n\nI laugh. \"Touche.\"\n\nBut she doesn't laugh, she is now deeply pensive, her lips purse in total concentration. \"So do you want to know how I see this unfolding?\" She reads me and quickly adds, \"ya, assuming the last orgasm is in me and you're a B.\" But I could tell that her thinking has already moved way beyond that niggling little detail. \"We get a place between the two school ... I know where ...\"\n\n\"And how to pay for it?\" My summer job won't even cover the next term.\n\n\"Ya, I've got that covered ... and the furniture, I can scrounge all we need. We'll be close enough so we don't need a car and we'll be close enough to our parents so we'll get all the support we need \u2014 to handle those difficult moments when you misunderstand me.\"\n\n\"When I misunderstand you?\"\n\n\"You know what I mean. There are bound to be a few rocky bits.\"\n\n\"When you go crying to mummy ...\"\n\n\"Or you do, yes.\"\n\nI can see she entirely serious about that and that she is thinking through the next step of her plans so I take the time to take a good swallow from my glass and form the question. \"So, who do you suppose would be wearing the pants in this little family?\" \n\nShe looks at me and smiles, a smile that I'm learning gives her an entirely different look, something more generous, more compassionate, more understanding. \"We both will, Mike, the pants and the panties.\"\n\nI laugh, not feeling at all slighted, she never makes me feel slighted. \"And I should accept that?\"\n\nHer face darkens. \"Should you accept equality?\"\n\n\"Ah,\" I say, sinking further into the water.\n\nShe leans forward now and fills my glass. I use the moment to cup some water on her chest so I can see a nipple. This she laughs at, then she smiles, something she has been doing a lot of ever since she decided that I'm putty. \"Do you have even the slightest sense of how happy we are going to be together, Mike?\"\n\nNow, I try to throw some water on her fantasies. \"I'm not there, Marta, not nearly there.\"\n\n\"Oh, pfffff, of course you are.\" I don't know how this irrational confidence started but it seems to be taking hold of her.\n\n\"What do you know that I don't?\" I just can't see what she is seeing. \n\nShe puts her glass down and quickly stands up. \"Be right back.\"\n\nAnd she is, with a book which she hands me, then she places the half-full wine bottle on the edge of the tub. \"I'll leave you alone to read that. Dinner is in about a half hour or so. I'll call.\" She leaves.\n\nIt isn't a book at all, it's a diary and it starts on her 18th birthday, just over three years ago.\n\nShe has beautiful penmanship, really lovely, she has obviously worked hard on it. And she is a beautiful writer. She effortlessly expresses herself in flowing phrases entirely devoid of flourish and doubt. And she avoids all sentiment, she's as pragmatic on paper as she appears in all her poutish concentration.\n\nThe diary has nothing to do with dates or events and everything to do with recurring themes: her family, her studies, her looks, her ambitions ... and me. Observations about me are peppered throughout the prose in no coherent order. Still, together they build a profile that seems pretty accurate. There is no mention of love in the pages. About me, at least, it's like she's building a case where she can justify inviting me into her life. There's not much about sex in there, either, not that I could find, no events, thoughts, speculations, nothing that could give me any insight into her. She does mention masturbation a few times and I'm front and centre there but there's nothing really sexy, just reports. In fact, not much has happened in her life, remarkably little, about the same as has happened in mine. Everything so far is like she has been preparing for an exam, in fact, she uses that very metaphor, prepping and cramming, but for what? That answer is on the last page. Yesterday. Preparing for the 'flight.'\n\nWhen I put it down after a half hour, having just skimmed most of it, I can't figure out why she'd show it to me. It doesn't say much, just that she has taken her life seriously, really tried, really wrestled with some big themes, loved and respected her parents, gained a measure of spirituality through reading philosophy and tracked a seemingly dispassionate interest in me. Big deal. Why bother showing it to me?\n\nShe answers the question over a very tasty chicken dish which I've powered through, and a second bottle of wine, mercifully, because our glasses are empty.\n\nI reach for the bottle but she gets there first. \"Because I wanted you to know who you could have.\" She pours about an inch of wine into my glass. \"I don't want to be too dramatic about this but as far as I've seen that's about as much effort as most girls put into building their life \u2014 the Hardys and the Marions.\" She nods the bottle toward the quarter-full glass. \"Not a lot of preparation for another thousand months of living.\" Now, she fills my glass ... to the brim. \"That's the effort I've put into my life so far. Sure, you can argue that I've needed to make that effort because I've had a lot less going for me. And that might be true. But who would you rather have beside you in the struggles of the next thousand months?\"\n\nShe looks at me but I can see she doesn't expect an answer, not yet.\n\n\"I've decided to go off on my own, to start living as an adult. I've put in lots of effort to prepare myself, I've got lots of discipline, constructive habits, solid underpinning. I've got a great moral compass, lots of work experience, a useful database of information. I'm ready, Mike. I'm ready to take off. And I'm unbelievably excited about it. Trouble is, I need you to come with me. I've wanted that since forever.\"\n\nThis is her pitch? It seems a little thin to me. \"A few hours ago you were going to fuck me into my future, now it's all about ... what? Teaming up with ... competence and the protestant work ethic?\"\n\nShe laughs, genuinely, perhaps she's now understanding my confusion. \"Think of it as fucking competence.\" We laugh together then she sits back, sips her wine and looks me in the eyes. \"Look, I know I'm no beauty but I think I've got a lot to offer and I'm giving you first right of refusal.\"\n\n\"But why all the pressure for an instant decision? I don't get that.\"\n\n\"Because if I hook you now, you'll be hooked. If I let you get away, you'll probably wiggle away forever.\"\n\nI snicker. \"From fowl to fish.\"\n\n\"Fish to fowl?\" she obviously doesn't understand me.\n\n\"You take flight, I just wiggle away.\"\n\nShe smiles. \"But it's true, isn't it?\"\n\n\"I haven't given a moment's thought to hooking or being hooked by a woman. Not a nanosecond.\"\n\n\"Until today.\"\n\n\"Until today.\"\n\n\"So now you have. And?\"\n\n\"And ... I've had more ... action, more fun, more whatever you want to call it this afternoon than I've had in my entire life. So what? It doesn't mean that if I fuck you I'm going to marry you.\"\n\n\"Who said it did?\"\n\n\"You did.\"\n\n\"No, I said you wouldn't fuck me unless you planned to spend the rest of your life with me.\"\n\n\"Same difference.\"\n\n\"No it isn't, it's an entirely different motivation.\"\n\nI wave her away. \"Semantics.\"\n\nShe smiles. \"Fine. Have me and we'll see. That's all I've been saying.\"\n\nMy glass is half empty again which might explain why I don't quite get her argument ... but I suspect she is manipulating me. \"You can cook,\" I say, eyeing my empty plate.\n\n\"I think I've been pretty impressive all day.\"\n\nI put both elbows on the table, look at her and let her words sink in. \"You have, yes, in everything you've done. Including confuse me.\"\n\n\"Oh, I don't know about that. You know precisely what I want.\"\n\n\"Yes, I just don't know why.\"\n\nShe leans forward and fills my glass ... to the brim. \"That's why,\" she tilts the bottle towards my glass. \"You've made as much effort in your life as I have in mine, plus you're kind of hot, in your own way. I decided a long time ago that I want you.\"",
        "\"I have a hard-on again.\"\n\nShe smiles brightly. \"I'm glad.\"\n\n\"What did you mean when you said we wouldn't have to worry about rent?\"\n\n\"I said I'd have it covered and I would.\"\n\nHer manner has changed. \"You think I'm sold, don't you?\" I don't know what I've said or done but I can tell that this is getting perilously close to a done deal, at least as far as she is concerned.\n\n\"I do, yes.\"\n\n\"Because?\"\n\n\"Because you know I'm the best offer you'll ever get and you're as ready to get out there as I am.\"\n\nInstead of taking a drink I drum my fingers on the table. \"I'm tottering on the edge here, you know that.\"\n\nShe nods with a smile. \"It's looking like it.\"\n\n\"You've got a wicked body on you.\"\n\nShe shakes more than shrugs. \"It's available.\"\n\n\"You've got some nice breasts over there.\"\n\n\"A couple of them,\" which she shakes.\n\n\"I liked it down there, you know, I liked it a lot.\"\n\n\"There felt pretty good about it, too.\"\n\n\"Tasted great.\"\n\n\"Great to be tasted.\"\n\n\"Panties?\"\n\n\"Anyway you want them, any time.\"\n\n\"Computer Club on Wednesday nights?\"\n\n\"I'll be encouraging.\"\n\n\"I was lying about all that kinky stuff.\"\n\n\"Pity.\" She smiles. \n\nMy fingers are still drumming when I say, \"You know how women change their minds and it's called a female prerogative or intuition or something?\" She nods. \"There doesn't seem to be a male equivalent to that, do you know what I mean?\"\n\n\"Rules are rules, Mike.\"\n\nI remember the little patch of clear cotton around her nipple when I splashed water on her. For some reason this inspires a question. \"What if I find out you're lying to me, that you're not the person you're pretending to be?\"\n\n\"Walking papers, Mike. You'll have just cause to walk.\"\n\nI could hear my fingers still drumming. \"When is this flight supposed to begin?\"\n\n\"Upon coitus.\"\n\nThe drumming stops. It takes a moment for the word to sink in. \"What? After the fuck ... I just don't leave?\"\n\n\"We'll have lots to do and we'll be doing it together so, ya, you'll be staying here.\"\n\n\"What about your parents?\"\n\n\"They'll be ecstatic, Mike. Trust me.\"\n\nI start drumming again. If anything my fingers are noisier now and the tendons are starting to hurt. \"So I call my parents tonight and break the news to them?\"\n\n\"Or we can do it tomorrow, together.\"\n\nI can feel myself sinking, helplessly sinking. \"Am I doing this because I want to get laid? Can you help me with that? Is that what this is about for me?\"\n\n\"You're smarter than that, Mike. You're doing it because it makes sense.\"\n\n\"Makes sense to hook up with a girl I barely know just because we have sex?\"\n\n\"Because she's told you in a thousand different ways how much she loves you and wants to be with you ... and that she will spend the rest of her life trying to make you happy. That girl.\"\n\nI'm still drumming the table as fast as I can. My nerves are shot. I think she's right. I was thinking in the bath: what would it feel like tomorrow if I ran. It hit me. It felt like I'd be living in a great big empty hole. \"But I WILL get laid?\"\n\n\"Thoroughly.\"\n\n\"As opposed to screwed.\"\n\n\"You'll never get screwed by me.\"\n\nI let a silence develop, not so I could think, I've done all I'm going to do of that. It's all about instinct now. It's what Biff and Buck would call gut check time. \"You've a few sides to you, don't you. You're interesting. You're sexy. You're smart. You know how to play me. How to use your body. You've got it all figured out.\"\n\n\"Eye on the prize.\" She smiles, she can sense the close, I know she can.\n\n\"And the prize is?\"\n\n\"That we live fabulously happy, fabulously interesting lives together.\"\n\nThe drumming had stopped, I only know that because it starts again. \"I don't know myself very well, Marta. I'm not the introspective type. I'm not much of a thinker, I'm more of a doer.\" I hesitate because I want her to understand me perfectly. \"I actually have no idea whether I'm an A, B, C or D. None. No idea at all. I could be any of them.'\n\n'You're a B, Mike.\"\n\nI shrug, still drumming. \"Maybe, but I don't know that.\"\n\n\"I do.\"\n\n\"OK.\" I threw my napkin on the table and get to my feet. \"I'm in, pending coital access, but you're taking a big chance here. You may be right, I may be a B, but I may not be, too. I'm just saying that I don't know myself well enough to predict the outcome, I want you to know that ... you need to know that because I'm not going to take advantage of you.\"\n\n\"Got it.\" She quickly gets to her feet and as she walks out of the dining room she heads for the stairs and is three steps ahead of me when I say, \"So, I'm going to get that?\" She has on the white t-shirt that doesn't quite cover her cheeks.\n\n\"What?\" She stops and looks back at me.\n\n\"That ass.\" I point, as if I need to.\n\nShe snickers. \"And I thought it was all about tits and pussy.\" She snickers again. \"That's what mum said when I started developing. 'It's all about the tits and pussy, sweets so if you don't learn to deal with it you'll be in deep, deep do-do.' That was The Talk, the full extent of it.\"\n\n\"You're kidding?\" My talk went on for months, it's still going on.\n\n\"Wait until you meet her. It'll all make sense to you.\" She turns on the step, I can see the tops of her thighs and her pubic hair. \"Actually, she's great. My dad's great, too but they're both definitely a little weird.\"\n\nShe looks unbelievably sexy there on that step. I don't just see the pinched and puckered lips all the time any more. Now, I'm seeing her sense of humour, her determination, her efforts to please me and her body which she's treating like I own it. \n\n\"I've told you mum's going to be ecstatic about you. I haven't told you why.\" She turns around giving me some ass. \"Come on, I'll show you.\"\n\nShe hurries up the stairs so fast I lose focus, then I follow her down the corridor to the end and into a mammoth bedroom. Marta is at a dresser pulling out the top drawer. \"This is all you need to know about mum.\" She takes a fist full of panties out and drops them on the dresser top. \"And this.\" She does the same thing after opening the bra drawer. \"And this.\" She reaches to the back of the panty drawer and comes out with two vibrator things. \"Mum's the horniest woman in this city, I don't have any doubt about that. She can't wait for you.\"\n\nI absently pick up a pair of the panties holding them up to the light, fascinated by how sheer they are.\n\nMarta watches unperturbed. \"I've always been a huge disappointment to her because I've never once brought home a guy for her to drool over. Never once. No guy has been found creeping out of my bedroom at four in the morning. Never any cum on my panties ... well, before today. No hickeys on my neck, no missing bras, ripped panties, no pictures or letters or emails. Nothing. Now,\" she laughs, and punches me on the chest, \"she's going to get to live a little.\"\n\nI'm really surprised about this panty thing. They're really getting to me. I never used to give a shit about panties, now I'm wearing them, or wanting to. \"Maybe we could take a pair ...\"\n\nShe looks a me curiously. \"God, you really are into those things, aren't you?\"\n\n\"Look at them? Jeez.\"\n\n\"Sure, take them, take all you want but I've got bags of it in my room. She's been buying me this stuff for years.\"\n\nI snickered remembering her earlier on Biff's couch. \n\n\"What's so funny?\"\n\n\"I knew you weren't the type to buy a bra with a butterfly on it.\"\n\n\"What butterfly?\"\n\n\"That bra you had on today ...\"\n\n\"She didn't buy me that bra,\" Marta holds up one of her mother's dainty lacy things. \"This is what she's all about. She'd never buy me a bra that was too thick to show my nipples. I bought that one myself and there sure as hell isn't a butterfly on it.\"\n\n\"Ya, there is.\" I snicker again. Finally, I feel a tiny sense of power.\n\nBut my gain is Marta's loss. She's a bit pissed when she jams the vibrators back in the drawer and then all the underwear. \"Come on, I'll prove it.\" \n\nShe doesn't mind that the drawers are half open and things are hanging out. She leaves as fast as she arrived and when I get to her bedroom she is holding up her mammoth garment with a surprisingly curious look on her face. \"Jeez, I owe you an apology. I never saw it.\"\n\n\"Hard to from your perspective.\" For some reason I am feeling entirely liberated now, I feel like I don't have a care in the world, maybe because I'm a little pissed and I may be about to give my life over to someone I barely know. I jump into the air and land on her bed flat on my back. I turn on my side but she isn't there. \"Hey!\"\n\n\"Just a minute,\" she says from behind a door.\n\nI take off my pants and underwear and wrestle myself out of my shirt. I'm going to get laid!\n\nShe's standing there framed by the door. Talk about tits and pussy. She's wearing a perfectly sheer bra and panties; her nipples are stiff against the fabric, her black bush barely hidden. She's stunning. I'm speechless.\n\n\"Say something. Mike, I'm kind of ... out there.\"\n\n\"God, I'll say.\" I get over to her in a hurry and just stand in front of her and touch her bra, touch it like it's an entirely foreign object, which it is. Then I remember the mirror I saw behind the door when I was poking around. I open the door and I stand behind her while I position her in front of the mirror.\n\n\"I hate that thing.\" Her pouting mouth is clearly making her point. \"My mother put it there.\"\n\n\"She was doing me a favour.\" She's a little uncomfortable but I don't care, I stand behind her and watch my fingers play on the slick fabric over the deep swells of her breasts. I trace the dark circles and tease the stiff nipples then I'm running my fingers along the edges, along her skin. I move her in closer to the mirror so I can more easily see her nipples which are now really sticking out. \"They're unbelievable, Marta.\" I kiss her neck, suck on it, then, as I get down on my knees, I run my palms around her side and belly as I shuffle over so I'm in the frame.\n\nShe is looking through the mirror at my hard-on. \"God, Mike is that going to fit in me?\"\n\nI've got a good one but nothing special. \"If John Mason's can fit down Marion Yara's throat this can fit into you. Think Darwin.\"\n\n\"Her throat!\" She looks stunned.\n\n\"Must have been. I don't know where else it could have gone.\" I turn her so I can look at her. I know for sure now that I have a serious panty fetish. It's the way they hold her; hint at hiding her; bite into her flesh; cling to her curves; cover her mound. It's the material and, I don't know, maybe it's the forbidden aspect to them, what they're hiding and that they're supposed to be hidden. Like I said before, I've never given women's underwear a first thought, never mind a second but that was before all this, before a girl got down to them and then offered them to me and now, well, I'm thinking they're my first fetish and the way they're making me feel, I'm hoping for a lot more of them. I touch her nicely swelling mound with the backs of my fingers and lightly travel into her gullies. \"Open up you legs, Marta,\" I ask, noticing that my voice is a little hoarse. \n\n\"Jesus, you're a horny little thing, aren't you?\" There is fun in her voice, she doesn't mean it as an insult.\n\nI look up at her and see that her eyes are gleaming. \"Man, I'm really into this, Marta, I'm just really loving this.\" My fingers have found their way under her elastic and I can feel her hair against my skin. I lean forward and kiss her mound then I bring my right hand between her legs and press my fingers into her anus, then into the wet spot at her opening.\"\n\n\"God, Mike, I'm just so there.\"\n\nI quickly spin her towards the bed. She's out of her panties when she flops down and I swipe them off the floor as I press my mouth into her wet, hairy pussy. She's already screaming when I wrap her panties around my prick and I drink her cum as I shoot into the soft sexy fabric still hot from her body.\n\nNow I'm feeling like I do after 14 straight hours of programming. I'm whacked. I rest for a minute with my face still on her, still breathing in that intoxicating smell. When she begins to move I stop her. \"Stay there, OK? I want to look at you.\" I get up, get a pillow and put it under her head, then I get back on my knees on the floor again. Her legs are dangling over the side. I bend down real close so I can see her. \"Do you know the names of this stuff?\" I gently pinch a fold of skin.\n\n\"They're the outer and inner lips.\"\n\n\"Do you know what they're supposed to do?\"\n\nShe was a little stiff but she begins to relax and she hooks the ankle that once had my come on it behind my neck. \"You know, when I had all this figured out I was expecting this part to be a lot different, like, honestly, Mike, I thought I'd be directing you to where you're supposed to go; I expected you'd give me a few ... like, jabs and voila, we'd be at a new beginning. You were never supposed to be some kind of Don Juan lothario. Jesus, Mike, neck, earlobes, feet \u2014 toes for God's sake and then all the rest of it and we haven't even had sex yet!\" \n\nI couldn't resist licking her.\n\n\"I've been on the edge ever since you first touched me, Mike, that fabulous place where my whole body trembles just waiting for your fingers, or your lips or your mouth, even your breath or your words \u2014 they can all send me tumbling. And I've tumbled but I'd have fallen off that fabulous edge a dozen times if you hadn't kept me up there just tottering. God, Mike.\"\n\nI touch her clitoris which is a little stiff. Then I start to rub it gently, in little circles. It gets harder and she starts to pant. I look up. She is smiling at me, I think I can see the love she's been talking about. Then she drops her head back and her panting becomes noisier. A trickle of fluid flows from her down into her anus which is puckered and kind of pulsating. She starts to shiver, her breasts flop against her ribs, she thrusts her pussy up to me. \"Oh, Mike, Oh Mike, Oh, Mike ...\" I rub her thigh and watch her. This intimacy astonishes me.\n\nShe trembles spastically for a good three minutes then sinks into the bed. She says it to the ceiling. \"God, do you know how good you are at this?\"\n\nI feel good about this, it's a bit of a compliment. I kiss her a few times on the pussy, which is very wet now then I carefully peel her open and look inside. I can see her clitoris clearly now and what I guess is where she pees from and I can see where I'm supposed to fit but I'm getting hard again so I get up and get the bag on the table and I fish out the little pack and I sit down beside her and open it. \"I'd better do this when I first get hard or I won't last a minute.\"\n\nShe takes the condom from me, gets to her knees and tells me to lie down. She has her mouth puckered as she tears open the package and places the condom on my head and rolls it on. She's all concentration but I'm looking at her tits which are hanging down and actually getting in her way. \"I'll lower myself onto you, OK? You're going to break something called a hymen and I'm not sure how much it's supposed to hurt.\"\n\n\"Hurt?\" \n\n\"First time, they'll be a bit of blood but it's no big deal \u2014 it's been done something like 10 billion times before.\"\n\nShe's all concentration again. She lifts her leg over me, places me at her opening and when she looks down on me her pinched pucker blossoms into her wide warm smile. \"You just can't image how much I hope you're a B, Mike. Like I just want you so fucking much I'm going to be just devastated if this doesn't work.\"\n\nI can feel myself enter her narrow opening and slide along her tight, slippery walls. She flinches but just for a second then she presses down again and I slide slowly into the centre of her until I can feel her bone press against mine and I can go no further. \"Don't move, OK?\" I whisper. \"Let's just stay like this for a few minutes, let me feel what it's like to be in you.\"\n\nShe stays perfect still for a few seconds then she leans down and wraps her arms around my neck and nibbles on my lips. I nibble back and press my fingers into her back, sort of semi-hard because I want to force her breasts harder into me. I go to the small of her back, too and to her bum.\n\nShe has her face in my neck now, she is licking and sucking me. \"Mike?\"\n\nI can feel the beginning of an orgasm deep inside me. I clench my butt cheeks to try to keep it there. \"Ya?\"\n\n\"If you don't try your very best to be a B I'm going to go over to your house and smash your floppy disk, your motherboard and your gigabytes, OK? I going to be so fucking mad that you aren't trying to make this work that I'm going to be lashing out. Just so you know. And I'm coming, Mike.\" she is panting now. \"God, I think I'm going to explode.\"\n\nI'm coming, too, so instinctively I thrust up at her, about as hard as I can with all her weight on me, I keep thrusting right through the pulsating thunderbolt that's shooting through me and even for awhile after because her screaming in my ear doesn't stop, she is going longer than me, so I just keep at it until her cries turn to moans and then diminish to whimpers and she almost melts into me, feeling as light and empty on me as I'm feeling inside.\n\nI hoped she would just lay on me like this for awhile, even go to sleep there so I could feel her skin on me; her breath on my shoulder; her breasts sealed to my chest; her thighs hot against mine; her pussy pressing into me; her mouth pouting against my neck. But in a few seconds she rolls off me and edges over to the side of the mattress, as far away from me as she can. She curls into a ball and she lies like that for maybe a minute. Then I hear her voice, which is really weak. \"Well? Are you?\"\n\nI don't understand any of this. Why she rolled away from me like that. Why she broke the intimacy: why I can't feel her melting into me; can't feel us melding together; can't feel us fused by our hot mingling sweat. I feel lost and empty. \"Am I what?\"\n\n\"Are you a B?\"\n\n\n\n\n\nAh, yes, that again. I peel off my condom, slide down to the end of the bed and head downstairs where I throw the condom in the garbage, pick up the half bottle of wine and two glasses and hurry back up. She hasn't moved.\n\nI scramble onto the bed, pour two glasses and hand one to her. She slowly takes it with my encouraging words, \"How many times do we lose our virginity?\"\n\nThis pulls her out of her funk. She sits up and shuffles over to lie back against the headboard, her wonderful breasts swelling onto her pooching belly. She's in full pout, her puckering lips pursed in concentration. \"I love you, Mike. I want you so badly I can hardly stand it.\"\n\nI can't think and it's not just because I've finally gotten laid. It's because I can have her. I can take her. I can just say OK and those tits are mine, that pussy is mine and those eyes behind the oval glasses can be yearning for me for the rest of my life.\n\nI finish off my wine, put the glass on the side table, lie down with my head on her lap and reach up with both hands for her left breast. She bends forward so I can take the nipple in my mouth. I can't think, but as I suck I try to. I try to image, as I did before, the next day without her and the next week, a week without her, without the pout turning to that smile, without that body demanding me to touch it, without her words convincing me I am loved and wanted and desired. You just don't turn away from this. But you can't make a rational decision with a hard-on.\n\nI pulled her down and for the first time give myself to her with a passion that comes from deep inside of me. She has given herself to me, announced her undying love for me, had convinced me utterly and I don't know if it's appreciation for this, surrender or requited love but I kissed her passionately with everything I've got and we roll and moan until we can bare it no longer and we touch each other to instant orgasms.",
        "The smell of coffee wakes me up. She is standing beside the bed in the full light of late morning looking down on me. She's wearing a neglige that conceals nothing, I can easily see her heavy breasts and the black triangle between her legs. And I can see that the pout is a smile, a warm, teasing smile. \"Your mother called this morning. She noticed you hadn't come home, She was wondering if you're all right.\"\n\nThis astonished me. \"How did she know to call here?\"\n\n\"I gave her my full name last night when I told her you were staying for dinner. There's only one Glock in the book.\" She sat down and kissed me on the forehead. \"I told her I hoped to meet her later today. And I do.\"\n\nShe hadn't taken her foot off the pedal. \"You do, ah?\"\n\n\"When we go to your place to pick up some of your things. My parents get home tomorrow and I want you to be living here when they do.\"\n\nI sit up, scraping my hard-on against the sheets. \"This is way too fast, Marta. Way too fast. Let's just take our time. If this is right, we'll know it soon enough.\"\n\n\"No,\" her eyes became fierce, her mouth the ugliest of pouts. \"If I don't get you now, I never will. You'll go back to shunning me as you did before.\"\n\n\"No I won't.\"\n\n\"I'm not going to risk it. I'm moving out on my own. But I'm not going to live alone. If it can't be you I'll have to find someone else, where I don't now, but I'll sure as hell look.\" She abruptly stood up. \"Get up. I want to show you something.\"\n\nWhat she wanted to show me was the place she had picked out on the top floor of an old house, just across from a park with bike trails going north and south, north to my school a mere 10 minutes away and south to hers, 15 minutes away.\n\nWe stood across the street from the place as she explained in detail the layout we would occupy in two weeks. In the meantime, I would live with her. There was no smiling through any of this; it was all said through her pouting determination. \n\nAnd there was deathly quiet in the cafe as we waited for our coffee and bagel until I said, \"So it's take it or leave it. Take you or leave you.\"\n\nHer face scrunched in curiosity. \"No, of course it isn't. There isn't a choice. You're going to take me because I'm the best deal you're ever going to get and you know it. No, you're going to decide here and now what I've already decided. You're never going to fall in love with me so you're going to have to decide right now to love me and you're going to make a commitment to work like hell in future to make our relationship the best fucking relationship on the planet.\"\n\n\"So we're going to go my house and I'm going to say to my parents 'this is Marta, I live with her now.'\"\n\n\"Yes, that's precisely what I want \u2014 precisely what I think is best for you.\"\n\nIt got quiet again. But I wasn't doing any thinking. She had done it all and I was pretty sure would do it all in the future. Marty Glock. 24 hours ago I thought she was the biggest wussie I had ever known. Now? She's the most exciting woman I could imagine. \n\nI looked over at her as I sipped my coffee. She was rigid; she thought she had everything riding on this moment, it was plain to see. And it was plain to see that she had chucked the thick butterfly bra for the flimsies: her nipples strained at her light shirt. I smiled. \"I watched you last night while you were sleeping. Every time I moved a little away from you you reached out for me and moved in. I tried to image what it would be like with you a week, a month, a year, a decade from now and I always saw you reaching out for me, trying to get close to me. I fell in love with that. And I fell in love with you.\"\n\nShe physically sagged. \"Do you mean it?\"\n\n\"I want you, Marta, I want you like you want me.\"\n\nShe abruptly stood up. \"We're going to your place to pick up your things. Then we're going home.\"\n\nI've never thought long and hard about my life, only thought about it in brief, fleeting snippets. But, even so, I've drawn some conclusions about my future.\n\nFirst, I always knew I would be married; when? I had no idea, but I definitely saw myself hooked up ... like my parents. And hooked up with a serious woman who was practical, unaffected, determined and, because of all that, she would make the decisions. I knew that; I'm just not the type to take charge. I also knew she wouldn't be very good looking; why would she be? I'm not. And I knew I would be devoted to her. That's just my mental make-up; I saw it every day in my house; I've always been thrilled that my parents love each other so much. They are unbelievable role models. But that Marta Glock would be the life-long companion I sought was beyond absurd.\n\nExcept that the Marta Glock I sort of thought I knew was anything but the woman who was squeezing my arm against her breasts as we bussed to my house. How, in less than 24 hours, had I made this mammoth mental adjustment was beyond me but I had fallen for her and it wasn't just because of her tits and the sex. The love business was the big one. How many women will profess, convincingly, their love for me? How many will be as sharp as she is? How many will be as determined? How many will be as much fun? Fun? Ya, I've been having a ball with Marta Glock this past 20 hours. I'm not sure why but she lured me in with as much ease as she did with rapidity. I think I wanted to start out on my own as much as she does and I think I was equally loath to do it alone. Actually, as we shuddered along the street I was giddy. I couldn't wait to tell my parents. I was leaving the nest with Marta Glock and I've never been so excited.\n\n\"Are you sure you want that?\" That's all my totally stunned mother said when I told her and my dad that Marta Glock and I were moving to a flat in a couple of weeks and in the meantime I would be staying with her at her parent's place.\n\nWhen I assured her it was I was shocked to realize that it was suddenly a done deal. What could they say? We forbid it? I'm an adult; I'm just now acting like one.\n\nAnd there wasn't a moment's stand-off. At the very instant of awkward dead air Marta, who had so far done little more than stand there, spoke up. \"We want you to come to dinner at our place two weeks from now ... to see the place and to meet my parents.\" What could they do? They agreed and we went upstairs to move me out of a house I had lived in for 22 years.\n\nMy mum made nervous small talk as she and my dad drove us and my bags to Marta's place. I pretended I wasn't scared shitless. This was a big step, I wasn't kidding myself. I was making it in one hell of a hurry ... and on blind faith for a woman I used to think disdainfully of as Puckerlips. My decision was either wonderfully inspired or blindingly stupid.\n\nMy parents did their best not to create a scene at the hand-over but my mum had tears in her eyes. I pretended not to notice but Marta made no such effort. The moment after I hugged my mum goodbye Marta moved in and wrapped her arms around her. \"Don't worry, Mrs. Larson. I love your son and I'm going to take very, very good care of him.\"\n\nI knew Marta made a lousy first impression; she would with anyone: those pucker lips just aren't attractive; she looks anal, like a tight ass. But her confidence can get to you. When she pulled away from my mum and gave her a reassuring smile I could see mum was looking at Marta through new, if more teary, eyes.\n\nAnd Marta read me easy enough. The moment we had the bags inside she came into my arms and whispered, \"Don't worry. You made the best decision of your life. I'm going to prove it to you every moment we're together. Come on.\"\n\nIt's pathetic that I needed that re-assurance but it was no surprise that I followed her dutifully up the stairs and when I did I instinctively knew I would always be following Marta Glock.\n\nShe waited for me beside the bed. It wasn't awkward uncertainty, I knew that. She waited for me because she wanted me to make the first move. To take ownership. The girl is smart.\n\nI put my hands on her neck as if I was about to strangle her then I moved in and kissed her lightly on her puckered lips while holding her away. I felt weak and dizzy, my body seemed to be almost floating. In fact, I wanted to push her onto the bed and ravish her but I wanted most to show her that I had arrived to where she was, that I was totally into this, that I wanted her as badly as she wanted me, physically, yes, but cerebrally, too. And I wanted to be gentle, that was a new-found instinct, I will be a gentle lover, I hope considerate, but insistent.\n\nI licked her lips and nose, I kissed her cheeks and eyes, all the time holding her in place. Then I sucked on her, on her bottom lip, her nose, her eyes while I heard little noises escape her, and me. I could feel her yearning, her body was quaking wanted mine but I continued to hold her back while I left trails of my spit all around her face.\n\nShe seemed to be panting when my fingers went down to start on the top button. I took my time knowing that if I could hang on a little long I, we, would have thundering orgasms.\n\nWhen I parted her shirt I studied her bra. Her breasts were straining at the gossamer thin material, her nipples like towering atolls in a pale yellow sea. I kissed around the skin above the bra then licked on the material, pushing my face insistently into it. Then I sat down on the bed and undid her pants and slowly pushed them down so she could step out of them.\n\nI was surprised at how alluring I found her belly. I had thoroughly rubbed my face on it before and did so again now, feeling the softness, smelling her skin, knowing when I travelled down her hands would be on my head guiding me, encouraging me. But not this time.\n\n\"Mike, please,\" she whispered, trying to push away from me\n\n\n\n\n\nWhen I gripped her cheeks and bragged my face down onto her panties I could feel her stiffen and hear her moan. She was as ready as I was so I pulled her panties down and let her fall over me onto the bed. I quickly got up and stripped off my clothes as she took off her bra. Then I was on her.\n\nIt was different now than before. Then I, we, were exploring, experimenting, trying to find ways to connect. Right from the beginning she seemed desperate to get me while I was fascinated by the newness of it all. Her desperation was gone now, but my fascination had only intensified. As I crawled between her open legs, as I settled in between her welcoming arms, I knew I was no longer with a woman who was frantically chasing me; I was about to enter a woman I had 'decided' to catch, to commit to, to take as my own. I was conscious of that as I took my stiff prick and placed it at her opening. I was conscious that I had made a lifelong commitment to her and the love that was flowing from me fused us together.\n\nShe was squeezing me almost painfully when, seconds later, it thundered through me to empty into her and instantly I went from a coil of sexual tension to a spent force that nearly passed out on her soft hot body. She was little better. I could feel her whole body sag as her cries turned to moans; I could feel her tight grip on me loosen and her legs which had been pounding up against me from feet pressed into the bed at my hips, collapse beside me. We had truly fucked for the first time in a frantic moment of unbridled passion. We were now one, I could feel it.\n\nI rolled off her and cuddled in close beside her, my hand on her belly my leg over hers. The love I was feeling for her at that precise moment was honest, connecting love, not just lust. The hand that was caressing her belly and now going up to her breast was exploring a woman I felt I owned, just as I wanted to be owned.\n\nHer hand covered mine and pressed it into her flesh as she turned and kissed me with her puckered lips which now, strangely, I found alluring, cute. Her lips stayed on me and nibbled as I tightly gripped the fat of her breast. \n\n\"Does that hurt?\" She hadn't flinched.\n\nShe pulled away and smiled. \"No, you can be as rough as you want with them.\"\n\nI squeezed harder pushing the fat up higher until her nipple touched her chin. \"Do you ever suck them? While you masturbate?\"\n\nShe didn't flinch from the question. \"I lick them sometimes.\" She licked her nipple now, then she added, \"it doesn't do much for me, nothing like when you lick and suck them.\" Then she added with a smile, \"I like to play with other places, though. Do you?\"\n\nI didn't get what she meant. \"Other places?\"\n\n\"Do you ever finger your bum?\"\n\n\"My bum? Like squeeze it?\"\n\n\"Tickle it, put your finger in it.\"\n\n\"Your ass!\"\n\nShe smiled at my reaction and kissed me. \"I'll show you. It's great.\" She sat up and opened the drawer on her night table and took out a tube. \"Get up on your hands and knees.\"\n\nWarily, I did. I didn't know what she was going to do but I trusted her absolutely.\n\nShe got behind me and I could feel a cool liquid, a gel trickle into my bum, then her finger was there gently working the stuff down. I clenched instinctively but she laughed. \"You'll love this, I promise.\"\n\nShe pushed open my legs a little then her finger touched my asshole and I understood what she was going to do. \"Are you sure about this?\"\n\n\"Positive,\" she chuckled and she sat down and took my half stiff cock in her hand and gently pressed down on my hole.\n\nShe was very slow about it, slowly jerking me off as she slowly pressed into me and kissed along my back. It was like I didn't know if I was coming or going, the sensations kind of competed with each other, the jerking, the pressing, even the kissing. Then her finger broke through into me and I could hear a long, lovely moan escape as I sunk my head onto the bed.\n\nShe was licking and sucking hard on my back as she increased the tempo of her finger probe and her jerking. Instantly, I could feel myself start to build and I didn't want to. \"Slowly. OK? Please.\" She slowed and the two sensations, at my penis and anus, gradually radiated out until they fused into one. I had sunk into the mattress when the volcano erupted deep inside of me and she thrashed at me as she bit at my back until I collapsed on the bed, now wet with my cum.\n\nShe was gone in an instant and I was almost out when she was back, her hands rubbing my back. \"Well?\"\n\nIt seemed to take all my strength to turn over. When I did I looked up at her smiling down at me. \"God, Marta, that was fucking amazing.\" \n\nShe bent down and kissed me on the lips, then all over the face before pulling back. \"Will you do it to me?\"\n\n\"Sure,\" I said, without enthusiasm. I just wanted to sleep. \n\nBut that's the last thing she wanted. She handed me the tube and as I slowly sat up she scrambled over into the middle of the bed and got on all fours, her wonderful breasts almost touching the sheets.\n\nI don't know what I expected out of my sex life. Probably just more time with my hand and my imagination. I never expected a big bosomed, totally willing playmate who encouraged me to try things with my body that I didn't know you could do. Never mind with hers. But her ass was out there now, my pieced of ass as I was coming to think of it, and as I squirted the gel between her cheeks and let my fingers slowly worked the stuff between them it seemed almost natural, as if I was cupping her breast, or sliding my fingers between her legs \u2014 her body was mine and I had every right to any access. It was a fabulous feeling.\n\nAnd it was to her, too. Instantly, she started to moan in encouragement and to shimmer her bottom to more enjoy the sensation. Then her pulled a pillow in, two of them, and sank her upper body on them. \"God, I love you Mike, I love totally surrendering to you.\" And the moans came back.\n\nI pressed through after about a minute of careful pressing, then wasn't sure what to do. Was I supposed to rim the wall, the sphincter muscles as I recalled, or was I to probe deeper or was I to simulate fucking, I had no idea. She seemed to have done them all to me, but I couldn't really remember.\n\n\"Put another finger in, Mike.\"\n\nAnother? The one barely fit. \"Are you sure?\"\n\n\"Ya,\" she said dreamily, \"It'll fit, I've a dildo down there.\"\n\nI took my finger out and when I did was surprised to see that her asshole didn't clamp shut, it kept the same hole that my finger made. I squirted some more gel into it and gently went back to it, this time with two fingers, but very carefully, very slowly and I was very conscious of her reaction. Which was louder moans and I could feel that she had brought her fingers up to her pussy and she was touching herself.\n\nThe two fingers proved easier to go in then the one. I was amazed. And amazed at her reaction. She was to ally slumped onto the bed, her legs barely keeping her ass in the air. She was totally into it and it gave me more and more confidence and more and more joy that I could be bringing her this much pleasure.\n\nAnd then she said it. And I froze. \"Put it in me, Mike.\"\n\n\"What?\" No. \"What?\"\n\n\"Your guy. Put it in me. Quick.\"\n\nI had heard of this, of course, but never thought about, never imagined for a second that I would ever actually do it. But in a second or two I was doing it, inspired by the urgency in her voice. She wanted me in her, now and the two finger opening was big enough for me to do it. I complied, quickly \u2014 discovering I like kink as much as the next guy.\n\nI went in slowly. It was a tight fit but I eased myself in as she pressed insistently back against me. When I broke through I was struck by an entirely new sensation: the sphincter muscle tightened around my cock like the ring of muscles it is \u2014 an entirely new feeling but the greater sensation I was feeling was Marta's absolute vulnerability and her astonishing joy at me ramming into her ass. \n\nShe was crying out now, almost screaming, you could have heard her in the kitchen. And she was fingering herself frantically. It took awhile; I was surprised, it took so long that I, so recently spent, could fully recharge and I beat her to the O, or it may have been a tie. But we collapsed together in perfect symmetry and we started laughing as if on cue and we hugged each other through our shaking peels of laughter until she insisted we take a bath.\n\nGood idea.\n\nThe intimacy of intercourse is one thing, bum fucking is quite another. As she lay back against me in the tub, my hands kneading breasts that I had literally fallen in love with, I was hers and she was mine. Totally. That's the way I felt: nothing could ever separate us: the casual duality of romance was gone. We were now a Oneness: we will become more than the sum of us. My excitement by the prospects was almost orgasmic.\n\nI don't know what she was thinking. She was caressing my hands as I caressed her breasts, her head was resting on my chest, I could feel my slight stiffy against the small of her back. I thought of the girl at Biff's, and the one here in the tub with me. Same person; two different people. But I knew that wasn't true. She probably hadn't changed at all. It was me who had changed. One, I had got in touch with my sexuality and I now felt much more together as a person. Two, with her at my said I finally gave some thought to my future. But three was the biggy. She inspired me: I finally took a close look at who I am and what I need. I couldn't go through life alone, I just wasn't responsible enough, I lack ambition, drive, competitiveness. I knew I needed her and once realizing that, I knew I wanted her\n\nAt this very moment I am over-flowing with confidence. I am no longer in it alone. I'm in it with Marta fucking Glock for crissake. I am the happiest guy alive.\n\n\"Come on,\" she said after we towelled each other off. She took me by the hand and walked me down the hall ... to her parent's room. \"I've always wanted to do this,\" she said, leaping onto the bed. Then she as quickly jumped off and went over to her mother's dresser which was still spilling out underwear. \"Which do you want?\" She was sorting through the mess of panties. When she looked over at me she chuckled at my hard-on. \"How bout these?\" She held up a skinny pair that were almost transparent.",
        "I came over, encouraged by her enthusiasm. \"I like the bigger ones, the ones that go up higher.\"\n\n\"Grannies? Really? She may not have any.\" She rummaged through them until she found a pair, white. Then she searched through until she found a white bra that seemed much bigger than most others.\n\n\"Will it fit?\" I couldn't imagine her getting in to just any bra.\n\n\"We're the same size, or close. You'll see.\" Then she jumped back on the bed, pulled on the panties then quickly did up the bra. \"Now, let's make love, Mike. Let me show you how much I love you.\"\n\n\n\nI don't know if I was more amazed or shocked. When I came into her, our, bedroom the next morning after showering Marta was standing nervously in the middle of the room in jeans and a thin green short sleeve top hugging her fantastic breasts with a low enough neck to show a considerable stretch of cleavage -- very un-Marta. I grinned. After a moment she did, too.\n\n\n\nMy life got back to a semblance of reality as I took the bus to school. And that reality was all positive. I loved my classes, loved what and how much I was learning about the fabulous prospects of computing. And I found for the first time in my life I was a very good student, usually heading the class. So learning was an absolute pleasure and so were the sessions after class with three friends as we worked on our 'secret project,' building apps. But this part of the day could be time consuming, often lasting from four to late into the night.\n\nI knew they were coming today so I made a special effort to get 'home' by 6:30. Even so, I was late. When I rang the bell Mrs. Glock answered with a cheerful if questioning smile. What do you say, \"Hi, I'm Mike. I live here now?\"\n\nMarta quickly stepped in and introduced me to both her parents and followed a somewhat awkward pause by announcing, \"Mike and I live together now. We'll live here for the next two weeks then we're going to move into an apartment on Frobisher Street.\"\n\nI could feel the instant chill. I had not gone over well. What do you do? I chose to almost literally hide behind Marta who acted as if the tropical bliss of the reunion had been unsullied by my presence.\n\nI shut up and observed. First and most obvious, Gloria is the inspiration for her daughter's new sartorial expression: they were wearing similar tops, with strikingly similar cleavages and strikingly obvious abundances. Fred, the father, seemed like a mellow, quick to smile kind of guy who may well be the willing lackey of two strong-willed females. The two parents appeared barely in their 40's; they were obviously glad to be home; they clearly adored their daughter and, even if they were apparently irritated by my presence, they were polite about it.\n\nThey had been in the Bahamas for two week on a much need break for Fred. Gloria gave an enthusiastic de-brief over a quickly prepared supper and a few glasses of wine. I was politely ignored by the parents but Marta was holding some part of me all the time she didn't have both knife and fork in her hands.\n\nWe went up to bed early which was great because I wanted to talk to Marta about a re-think on my staying over until the move. I didn't get it out. She attacked me the moment we got into the room and we flew at each other to make up for the long interruption of the celibate day.\n\nTwo hours later there was a knock on the door. \"Can I come in?\"\n\nMy balls froze but Marta calmly pulled the sheet up on the covers-strewn bed and said, \"Sure.\"\n\nGloria Glock is a beautiful woman with a fabulous body, now barely concealed in a grey neglige. When she came in she didn't look around, didn't inspect me, cowering under the sheet. She came in and she sat down and looked anxiously at her daughter. \"I had you when I was 18 for a reason. I wanted to still be young when you grew up because I wanted us to be friends, I wanted us to be together, to do things together before you got married and started your own family. But we haven't been friends, not really. You hid in your room, dressed like you hated yourself and sneered at the world. You're not doing that any more. Now you've grown up. And now you tell me you're moving out. Why Marta? There's no reason for you to leave. You have everything your need here. I don't want you to go. Please. Don't.\"\n\nMarta reached out and took her mother's hand. \"I've got to go some time, mum.\"\n\n\"Yes, of course, but not now, after you graduate ... a year after you graduate.\" Then she turned to me. \"Don't take her away from me, Mike. Please, don't do that.\" There were tears in her eyes. I felt like a complete prick.\n\n\"He's not taking me mum, I want my own place, we want our own place. We're starting our life together; it only makes sense.\"\n\n\"Don't. Please. Only another two or three years. It's way too soon for you to go.\"\n\nWas it me or her moving out that was the real issue? I couldn't tell but it was easy to see that Marta was feeling her mother's obvious angst. As was I, with a quick (and shameful) glance at a wonderful breast nicely sagging behind the thin neglige. Marta caught my glance as she looked at me. \"What do you say? Can you live here?\" She waited for my decision.\n\nMy own mother didn't make such a fuss when I told her I was leaving but her pain was pretty much the same ... and I'm a guy. This mother clearly did not want to lose her daughter, especially to some unknown jerk she couldn't trust. \"I'll be happy with you wherever I am,\" I said, neutrally, but truthfully.\n\nThis perked Gloria up enormously. It seemed she was under the impression that whatever I decided carried some weight. \"We'll do over the basement,\" she said, with excitement, \"put in a suite. You two will have all the room you want.\"\n\nMarta hesitated, then reached for my arm. When she did the sheet fell away and she pulled my arm against her naked breast as she continued to think. \"Done,\" she said after a few moment's thought then she lit up.\n\nGloria all but lost it. She threw herself across the bed at me, grappled me into her arms and kissed me fiercely on the edge of my mouth. Then she was in her daughter's arms and they both hugged and giggled for a moment before Gloria sprang to her feet, leaned over the bed and brought the cover up on us. \"I'll leave you alone. Sorry to bother you. I'm really excited to get to know you, Mike. It's obvious you make Marts really really happy.\" Then she and her flowing neglige were gone.\n\nAfter the door closed Marta said nothing for a full minute, then she turned and moved into me and held me. I cuddled as I had done countless times with her during the day.\n\nThe plans were carefully explained the next day at dinner. The basement would be converted into the promised suite, the rough drawings had already been made ... and looked really neat. And I would start to learn how to drive ... \"it's ridiculous to take the bus; takes too much time.\" She said Fred would start me off. Those plans were the short term. Long range planning included our graduating and our buying a house (in the neighbourhood) and, within a few years, our starting a family. I wasn't much consulted during this discussion, which didn't involve Fred either but he took me into his den after dinner.\n\n\"You'll always get your own way if you just shut up and listen. Basically, what they're trying to do is make our lives as productive as they can but as comfortable as possible. It has worked for me for 23 years and it will work for you. They're smarter than we are, they're more thoughtful and they are a hell of a lot more caring. I've had it made since the day I met Gloria and you may not know it yet but the day Marta chose you was the luckiest day of your life.\" He laughed. \"And I'm not just talking about the breasts.\"\n\nLater that night after the friction burns on my skin started to cool off and I was about to nod into another form of bliss, I thought about the Marta Glock who had been looking down on me from Biff's couch, the Marta Glock with the pouting mouth and the sour disposition, the Marta Glock I had known from afar for most of my student life and I wondered whatever happened to her. \n\nI pushed my face into the offered breasts, those fabulously soft mammies that hang so wonderfully in the gossamer thin bras that excite and entice me so much ... on both the residents. And I pressed back at her wonderfully responsive pussy that was snuggling wet into my lucky thigh, and I wished the old Marta well. This one, the one I cling to all night ... and all day, I think of as my reward: I'm a good guy: I always knew I was going to marry the only girl I'd fuck. \n\nHey, I'm a B. She has always known it and now, so do I! "
    ],
    "authorname": "tarkatony",
    "tags": [
        "fetish",
        "panties",
        "virgin",
        "love",
        "group",
        "fun"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-b-or-not-a-b"
}