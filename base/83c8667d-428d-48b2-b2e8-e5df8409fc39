{
    "title": "My Exception is You Ch. 05",
    "pages": [
        "***All characters are 18+ years old***\n\nMy apologies for the length of this one - even if it isn't, it feels longer than the other chapters. But honestly, I had so much fun writing it. And I got invested in the progression of the story. I couldn't find a place to stop for the longest time.\n\nI hope you all enjoy!\n\n========================================================================\n\nBy Wednesday I was beyond frustrated. Clay was making good on a few promises: he kept out of the showers when I was in them, he was giving me space when we were around each other, and he hadn't talked to me since Sunday. However his one promise, the one that caused all of my anger in the first place, has yet to be addressed by him.\n\nI was standing by the edge of the field watching practice team A run through some offensive drills as I sipped my water. A throat clear caught my attention and I glanced over, pursing my lips as Devon flagged me over. I meandered past the few teammates between us. As soon as I made it over he threw his arm over my shoulder and pulled me close to him.\n\n\"Look runt, Jake and I have been talking about how down in the dumps you seem lately. What happened?\" he was not one to beat around the bush apparently. I took a deep breath and sighed, pursing my lips as I watched Zack and Clay jogging across the field.\n\n\"Minor complications,\" I offered halfheartedly and he sighed, his arm locking around my neck as he pulled me closer. \"Dev man come on!\" I whined, trying to push away from him as he grabbed my hair.\n\n\"You can't fool me. Some shit went down. Now fess up!\" he insisted and I yanked away with a heavy sigh, crossing my arms as he stared at me with smug determination. He glanced around and then slapped my shoulder. \"Walk with me,\" he gestured to the track and I dropped my arms, walking along with him as I fiddled with my water bottle. As soon as we made some distance between us and the rest of the team I took a deep breath.\n\n\"We went on a date Sunday. Everything was going fine, the best it's been between us since we wanted to start trying this,\" I offered, studying him as he nodded. He seemed more comfortable with this than Jake was. I cleared my throat, feeling a bit uncomfortable myself as I glanced at the field. My eyes met Clay's from across the field, my ears feeling hot as he slowed down to a near stop. Our eyes were locked for a moment before another player bumped into him.\n\n\"Get your head in the game Clay!\" coach called out and I tore myself away from his gaze, glancing at Devon. He seemed amused to say the least.\n\n\"Seems like things are still fine between you. He's been unable to keep his eyes off you most days,\" he started and my chest tightened. \"Relax. I only notice it because I know. Honestly, if you hadn't made it obvious when I asked I'd probably think he's just worried about you. You know as a captain or whatever?\" he offered and I scoffed, crossing my arms.\n\n\"Hardly! That's the problem,\" I glanced at Devon, stopping abruptly. \"He hasn't done shit to help me as a captain or a friend. Let alone my boyfriend,\" I dropped my voice, glancing around warily. We both glanced at each other before Devon turned to continue walking slowly.\n\n\"I'm not going to say I understand, because truthfully I don't. All I know is, from where I'm sitting? It looks like the two of you are pretty caught up in whatever is going on. Good or bad, there's some intense stuff between you two,\" he started and I nodded slowly, crossing my arms as I stared at the dirt under my feet.\n\n\"It feels that way most of the time. But the back and forth between being together and not being together?\" I shook my head, studying Devon. He hesitated and pursed his lips, shoving his hands into his pockets.\n\n\"Well if it doesn't seem worth it, then move on. It's not like he's the only other gay guy in the whole world who could make you happy. And if you're really bi, you have a plethora of women out there too!\" he laughed lightly and I couldn't help but smile.\n\n\"Don't give me the plenty of fish speech Devon,\" I chuckled a bit, feeling a fraction better than I did a minute ago.\n\n\"You really like him, huh?\" he nudged me and I exhaled sharply, blushing as I couldn't help but nod.\n\n\"Even though I'm mad at him I still want to see him, to get to talk to him. It's kind of torturous not texting anymore,\" I admitted finally, feeling a weight lift off me as I studied the field some more.\n\n\"So what happened exactly?\" he pressed and I took a deep breath.\n\n\"Zack and some other teammates caught us in the middle of our first date,\" I started, Devon grabbing my arm and stopping me.\n\n\"Hold up, what?\" he demanded and I nodded, feeling nervous as Devon's eyes narrowed. \"So the team knows?\" he pressed and I sighed, shaking my head.\n\n\"Clay played it off as being a worried captain. Because of the shit that went down he wanted to try and make me feel better. That's what he told them. Zack accused him of being gay, like you and I,\" I offered and that made Devon laugh, shaking his head.\n\n\"What a fucking moron,\" he muttered and I shrugged. \"So what? Clay's playing the I'm a straight ally angle?\" he offered and I shook my head.\n\n\"He said I was weird and gross for being gay,\" I grumbled, my face getting hot as my anger started to bubble up to the surface. Devon was silent. \"Which was rich coming from the guy who couldn't get enough of my ass just that morning!\" I blurted out, a bit louder than I intended. I gasped, covering my mouth as I looked around. Thankfully none of the team heard me. Except Devon.\n\n\"You fucked him already?\" he teased, a dubious grin on his face as he pinched my nose. \"You nasty little fucker. You're a bi-bottom bitch?\" he pressed and I scoffed, slapping his hand away.\n\n\"He asked. Doesn't mean I wouldn't top him,\" I crossed my arms, Devon seeming overly amused with the idea of that.\n\n\"That's like a Chihuahua trying to get it on with a German Shephard!\" he laughed at my expense and I rolled my eyes.\n\n\"I am not that small compared to him!\" I insisted, but it was kind of true. He was taller and more built than me. But that didn't mean I couldn't want him like that either. Who cares about size? If a dick in my ass felt that good, then he might like it too!\n\n\"Relax Scrappy, I'm just messing with you. Give yourself time, right? Get over the shock and anger and really think about it,\" he offered and I nodded. Coach called out for team B and we detoured to the field to run our offensive plays for practice. Once practice ended Devon walked with me toward the athletic building, scrolling through his phone as we walked in silence.\n\n\"Bruno!\" I glanced back, confused as I saw Zack waving me down. He was hanging back with a few of the guys from the arcade and Clay.\n\n\"Want me to go with you?\" Devon offered quietly and I hesitated, glancing at him.\n\n\"Kind of, but I don't think that would help me at all,\" I shrugged and he nodded. \"Wait here?\" I offered and he smirked.\n\n\"Hurry back to me sweetie,\" he teased, blowing me a kiss as I walked off. I rolled my eyes, hurrying past the team to the group. I hesitated a few steps away, clutching the strap of my bag as Clay studied me.\n\n\"What's up?\" I demanded hesitantly. Zack glanced at the other guys and then Clay slapped his shoulder. He sighed, grimacing as he glanced at me.\n\n\"I uh, I wanted to say sorry I guess?\" he offered. It sounded insincere as hell, but I was surprised those words actually came out of his mouth.\n\n\"Sorry?\" I clarified, glaring at Clay.\n\n\"Yeah,\" Zack shrugged and I crossed my arms.\n\n\"Why all of a sudden?\" I demanded, feeling skeptical. Something wasn't sitting right with me. The other guys looked uneasy as they studied Zack.\n\n\"Just 'cause ok?\" Zack insisted, pushing past me. I faltered, my bag hitting my ass as I swung from his force. He walked up the stairs toward the door, Devon gesturing to him with a confused face. I shrugged and turned back to the other guys.\n\n\"Honestly Bruno, most of the team is pretty ok with you being bi or whatever. It's just hard 'cause if we upset Zack and he quits or doesn't play well,\" one of the teammates started and I scoffed, smirking maliciously as I pushed my hair back. I ignored the urge to lash out, shrugging away my frustration as I licked my teeth. A sarcastic chuckle did escape though, but the guys looked sympathetic.\n\n\"No I get it, let the sophomore secondary striker suffer. He's more replaceable by the time we could get to playoffs right?\" I offered. They all looked plagued with some degree of guilt. \"Whatever. If you don't have problems with it, why encourage his behavior? Or act like you agree?\" I asked, staring Clay down boldly.\n\n\"Sometimes it's easier to just not do anything,\" Clay offered and I couldn't help but roll my eyes. \"He apologized, isn't that a good start?\" he pressed and I shrugged. Something still wasn't sitting right with me.\n\n\"I want to get my gay shower out of the way so all you straight guys can shower safely,\" I muttered flippantly, waving my hand as I walked up the stairs toward Devon. He noticed the shift in my mood and shoved his hands into his pockets as he whistled quietly. We made it to the showers and I got undressed, wrapping my towel around my waist as I was about to get in the showers. I hesitated, hearing Zack's voice. The last thing I wanted was another confrontation. I was about to walk away when the topic caught my attention.\n\n\"Clay and coach warned me if I keep my guard up around the team homo then I could get a title IX investigation or something opened up on me. That gay perv seems like the kind of guy who would do that just to continue all his nasty shit,\" he continued and a rage consumed me. Clay didn't even tell him he was in the wrong? He just, saved him?\n\n\"Don't you feel a bit harsh Zack? Bruno is only bi anyway. He might not even be that into guys,\" who was that? I couldn't quite place the voice. I didn't hang out with too many of the people on the team. Not that I didn't enjoy them, but I preferred to just keep to my small group of friends.\n\n\"Damn Ty, you sympathizing with the queer too? You sound like Devon, or how Clay tried to act like it was ok at the arcade? We all know Clay is just doing his job as team captain. If he didn't have that responsibility I'm sure he'd feel the same way I do,\" Zack insisted and I scoffed.\n\n\"I don't know man. Everyone on the team seems to really not care. Bruno doesn't seem any different. He's actually been acting more normal than you have,\" Tyler offered and I smiled. I knew it would blow over.\n\n\"Having fun?\" Devon's voice shocked me and I jerked, gasping as my hand clutched my chest.\n\n\"Shit don't sneak up on me like that!\" I slapped his chest and he chuckled, brushing past me into the showers. I followed, ignoring Zack and Tyler on the other side. I hung my towel up, turning the water on when things got loud by the lockers.\n\n\"Party at Clay's place this weekend!\" someone called into the showers and my heart dropped. What the hell was he up to?\n\n\"Hell yes! Bruno we're going,\" Devon decided for me. Before I could argue I heard a laugh.\n\n\"There might be too many women there for his taste,\" Zack called out and I glanced back, noticing him walking out in his towel. \"Or do you still like women too?\" he shook his head, Tyler glaring at his back before he sighed and glanced at me apologetically.\n\n\"Don't let him get to you,\" Tyler breathed and I smirked.\n\n\"Honestly, it just sounds like he's overcompensating,\" I offered and Zack froze at the door, glaring at me.\n\n\"You sayin' I'm gay too?\" he demanded.\n\n\"Zack chill!\" Clay called out and I snickered, pleased I could get under his skin so easily.\n\n\"Whatever man,\" Zack left and I sighed, feeling smug and satisfied. Devon and I met up with Jake for dinner. I was thankful the two of them really went out of their way the past few days to make me feel better.\n\n\"So this party, can I come?\" Jake demanded and Devon shrugged.\n\n\"I feel like it's a plus one situation, so if you want to be Sweetie's date,\" Devon gestured to me and Jake grinned wickedly, gasping as he pressed his hands to his cheeks.\n\n\"Oh gosh, it'd be my dream!\" he laughed and Devon did too. I rolled my eyes, but couldn't help but laugh as well.\n\n\"You want to be my hot, buff boyfriend for a day?\" I challenged, raising my eyebrow as I took a bite of my mac 'n cheese. He smiled, slamming his drink down into the table.\n\n\"If you call me hot and buff all day, I'll be whatever you want,\" he laughed and Devon nodded. \"Seriously though, get me in that party,\" he pressed and I glanced at Devon warily.\n\n\"Why?\" I asked and he shrugged.\n\n\"Want to keep my eye on you?\" he offered and I rolled my eyes. \"Alright fine, I want to see this Clay fucker and what he's all about!\" he insisted and I sighed heavily. \"I won't start shit I promise,\" he crossed his heart and held his hand out. I crossed mine too and grabbed his hand, both of us spitting into our hands.\n\n\"That's fucking disgusting,\" Devon threw napkins at us and I chuckled.\n\n\"We spit swear on everything that's important. Been that way since we were kids,\" I shrugged and Jake nodded.\n\n\"Gross,\" Devon chuckled and I smirked. \"I'm thinking about inviting someone myself,\" he started, piquing Jake's interest. I just sat back, fading in and out of the conversation as they chatted about Devon's lady of interest. My phone vibrated and I glanced at it seeing a message from Clay. I frowned, opening it.\n\nMsg: can we talk?\n\nI took a deep breath and glanced at Devon and Jake who both were staring at me curiously. \"I'm going to head out. Catch you two later,\" I snuck away before they could interrogate me. It was like having two older brothers I never asked for. When I got out of the dining hall I called him.\n\n\"Bruno!\" he sounded shocked and excited.\n\n\"What happened to one week of space?\" I demanded and he sighed.\n\n\"Just meet me by the soccer field, ok? We won't go anywhere I just want to talk,\" he pressed and I hesitated, glancing off toward the athletic building. I shook my head, walking over there anyway as the voice in my head told me not to.\n\n\"Just a conversation,\" I insisted. \"I'm on my way,\" I hung up, shoving my phone into my pocket. I got to the stairs, jogging down as I studied the field. I saw Clay pacing by a bench piled with his stuff. A weird excitement filled me as I neared him. It was these emotions that reminded me why I wanted space. Because I knew being near him would make me want to forgive him too easily. \"I'm here,\" I called out and he turned on his heel, glancing over his shoulder with a warm smile.\n\n\"Thanks for coming,\" he breathed and I shrugged. He glanced around and then went to hug me. I pushed my hand on his chest, shaking my head.\n\n\"Just to talk. You promised,\" I sighed and he frowned, grabbing my wrist as his forehead wrinkled.\n\n\"I told you I'd fix the Zack thing,\" he started and I bit my lip, trying not to be too frustrated as I laughed. \"What?\" he demanded and I pulled my hand away, crossing my arms.\n\n\"You threatened him. Sounds like you did your research too. How'd you get coach in on it?\" I challenged and he looked away, crossing his arms as he pursed his lips.\n\n\"How'd you find out?\" he asked, his eyes shifting as he studied me. I took a deep breath and exhaled through my nose dropping my arms.\n\n\"Doesn't matter. The goal wasn't to get Zack off my case. The goal was to get you to admit to everyone you support people like me, or us?\" I offered with a smirk and he sighed.\n\n\"Why does that matter?\" he pressed and I shook my head.\n\n\"I heard Zack in the shower. He said if you weren't captain or if title IX didn't exist you and half the team would be acting the way he was,\" I breathed and he scoffed. \"See! That's been my point this whole fucking time!\" I jammed my finger into his chest. \"Problem is I'm positive the team doesn't care. It's only Zack. If you just grew a fucking spine and told him to cut his stupid homophobic shit, he'd be entirely outnumbered!\" my voice started to raise and I worked on controlling my anger as I collected myself.\n\n\"I had to start somewhere Bruno! And I feel like appealing toward Zack's ego and self-preservation was a faster route than trying to unify the team immediately. Zack giving up will help this whole thing blow over too. What's so wrong with playing the best cards I have?\" he challenged and I hesitated. Was I being too petty about how he went about it? He did something he said he never likes, which was addressing conflict and taking an opposing stance. It would be in his best interest to just sit back and let things casually blow over. But instead he took action for my sake.\n\n\"Fine I'll credit you for going out of your way to confront Zack. Whether or not I like your method, at least you tried,\" I grumbled with a weak shrug, conceding a bit and he smiled.\n\n\"And coach, because he shouldn't condone it. That's an even worse Title IX offense,\" he admitted and I sighed. \"I can't appeal to the better judgment that isn't there Bruno. I'm doing what I can with what I got. And I'll talk to the teammates over the next few days too,\" he insisted and I felt a warmth in my heart as he studied me. There was a plea, an unwavering desperation about him, as if he was on the edge of his seat waiting for my approval.\n\n\"Why do I matter so much to you anyway? Wouldn't it be easier for you to date someone with less expectations?\" I started and he sighed, shoving his hands into his pockets.\n\n\"Because I am honestly tired of empty relationships. I'm also tired of not accepting who I am. It feels so lonely and depressing living like this,\" his voice sounded broken.\n\n\"You're also living a big lie,\" I added snarkily and he actually laughed. It sounded broken and pathetic, but he looked a bit happy too.\n\n\"I want to fix that eventually too. Just have to grow the fucking spine I guess?\" he offered, a jab at me. It made me cringe as I hugged myself.\n\n\"I'm sorry for sayi-\"\n\n\"Don't be. You're not wrong. I told you Bruno, that's one of the things I like most about you. Since you joined the team last year I've been fond of you,\" he mumbled and I felt a lump in my throat. \"I'm proud of myself for never showing it. But it makes me wonder how oblivious you are. Considering I never went out of my way to help anyone else unless they asked. But I approached you every time,\" he laughed then, my cheeks hot as I gripped my arms tightly.\n\n\"Are you serious?\" I demanded and he nodded, biting his lip as he smiled warmly. His eyes studied me then. It felt like he was undressing me and I shuffled uncomfortably.\n\n\"I avoided showering with you at all costs because I didn't need that kind of fuel to my fire. Especially because until your drunken confession I was convinced you were straight,\" he stepped closer to me, his eyes locked onto mine. \"But you are just my type Bruno, in every way,\" there were only a few inches between our bodies.\n\n\"You don't get to do this,\" I choked out, blinking as I pulled away from his stare. He chuckled, his hand brushing against my stomach. From afar it probably looked like a casual gesture. But feeling him touch me again had me weak in my knees.\n\n\"I'm guessing there is no chance you'd come back with me to my place?\" he whispered and I swallowed hard, glancing at him out of the corner of my eyes. His eyes were running up my body, his tongue pressed between his teeth as a lustful smile stretched his lips apart.\n\n\"You have no shame,\" I scoffed and he laughed.\n\n\"This is your fault. I've never been this into anyone before. But I told you that already,\" he turned away, grabbing his stuff. He stepped up against me, his hand on my lower back as he let his lips hover over my ear. \"You change your mind, you can call or text me anytime. Just say the word Bruno, and I'm yours,\" he whispered, his hand sliding down as he walked past. His touch disappeared before he made it to my ass, but the fiery tingles remained as my heart raced.",
        "\"The fucking nerve!\" I turned on my heel, astonished as he was already halfway up the stairs. \"Asshole!\" I called out and he threw his hand up, walking away. But I couldn't stop from smiling as I headed back toward my dorm. Clay had so many layers. He was a tease, an ass, easily angered, jealous, and super playful. And for whatever reason I got to see all of those sides of him. I felt special in a way. And even though some of his choices irritated me I couldn't ignore how much I liked him.\n\nThe more normal he seemed the more infatuated I became with him. Like all of the imperfect pieces became his best parts. His insecurities, his vulnerable moments, the times I got to experience all of him were all the reasons I was really falling deeper into this. \"It might be too late for me,\" I sighed as I crawled into my bed to do some homework.\n\n***\n\nI was proud of myself for not caving all week. Clay was making it hard though. Every practice since Wednesday he wore his shorter running shorts over compression shorts, his thighs and ass looking amazing. And he always made a fuss about being too hot, taking his shirt off or flashing his body as often as possible. It was torture but I was loving the lustful tension between us.\n\nZack wasn't an issue either. Sure he'd let a comment or two slip, but I paid no mind. Especially because Tyler seemed to be joining Devon's homo-loving team. Anyone else and I'm sure it wouldn't have mattered but Tyler was Zack's closest friend on the team. Everyone knew that. So I was shocked when he started hanging out with Devon and I at practice.\n\n\"So you're going to the party tonight, right?\" Tyler asked, Devon studying him curiously.\n\n\"I planned on it. I'm bringing this super-hot, buff guy too,\" I boasted loudly, Devon laughing. Clay glanced over at us, his eyes narrowing.\n\n\"Your boyfriend?\" Tyler asked, other teammates shuffling as they acted like they weren't listening.\n\n\"I'm sure he wishes. No he's my best friend and my roommate. He loves a good party and I have no other date so,\" I shrugged and Tyler nodded.\n\n\"He was upset he wasn't your type,\" Devon reminded me and I laughed lightly.\n\n\"Most guys aren't my type. To be honest I've only ever liked one guy my whole life,\" I mumbled, eying Clay's legs and ass again. I couldn't help myself he looked amazing. \"Calling myself bi feels a bit inaccurate but,\" I let the thought hang there, glancing at Tyler who smirked.\n\n\"Was it more recent?\" he asked and I hesitated.\n\n\"Recent?\" I countered and he shrugged.\n\n\"College? High school?\" he explained.\n\n\"Ah, college definitely,\" I chuckled. \"Most guys at my high school were tools or pricks, or both,\" I couldn't help but smile as I bit my lip. \"Although the guy I'm interested in is a prick too, so,\" I watched Clay's body tense, almost like he was a bit prickled by the comment. I was having too much fun with this.\n\n\"A prick like Devon? Or a prick like Zack?\" Tyler laughed as Devon slapped the back of his head.\n\n\"Neither. He's in a category all his own,\" I mused, my eyes burning holes into the back of his head. Clay shuffled, his hands on his hips as he shifted his weight. I could see his hips and back, loving how firm his body looked. \"And although I do really like his personality, his looks were what caught my eye first,\" I offered absentmindedly.\n\n\"Huh,\" Tyler glanced at Devon who studied me with an amused grin. \"Does Devon know who he is?\" he asked.\n\n\"It's a secret,\" I smiled.\n\n\"Mysterious,\" Tyler chuckled and I shrugged. Practice ended soon enough and I opted to just head back to my dorm to shower and get homework done before this party. Jake had the same plan after his weightlifting, Devon planning to meet up with us for dinner before heading over. Luckily I had enough homework to keep me distracted. My jitters didn't kick in until after we finished eating dinner. The fact I couldn't distract myself as we walked toward his house was my undoing.\n\n\"Earth to Bruno!\" Devon tugged on my hair and I grimaced, pushing his hand away. \"You've been spacing out since dinner,\" he joked, Jake rubbing the back of my neck roughly.\n\n\"You look great Homo,\" he insisted and I sighed heavily. \"He might risk outing himself for a piece of this ass tonight!\" Jake slapped my ass and I punched his side. He laughed, stumbling away when Devon grabbed hold of me.\n\n\"His ass looks like a chick's I swear!\" he insisted, Jake laughing and nodding at my expense.\n\n\"He has a nice body. For a regular guy anyway,\" he shrugged and I rolled my eyes.\n\n\"I don't want to be this beefy,\" I squeezed his peck and he smiled proudly as we walked up to the house. The music was already going, people in the house. It looked like half the soccer team was already here, along with a slew of other people I didn't recognize. I did notice some players from the girl's team too. Devon and Jake carted me toward the alcohol almost immediately though.\n\nI was grateful for not having time to go wandering around looking for Clay. And soon enough the three of us were in the thick of the party, enjoying the booze and the music. I didn't always like parties, but it felt like a nice escape from my own thoughts. I could drown out my worries with alcohol, and put my energy into dancing and talking. It felt like the perfect time. A few drinks in and I was definitely feeling the alcohol. That was the only problem, out of the three of us I could drink about half as much as they could. Being leaner and smaller coupled with hardly drinking left me as a light weight.\n\nAs more people joined the party the area designated for dancing ended up more packed than before. Eventually one girl ended up dancing against me. At first it was because there wasn't enough room, but halfway through the second song she was committed to dancing with just me. The alcohol was taking over, my mind hazy as the heat of the room and my starved cock were being stimulated. Her ass felt nice against me and she was cute enough.\n\nI was working with a slight chub, my arm resting on her shoulder as I worked my body against hers more suggestively. I chugged the rest of my drink, dropping the cup as my other arm wrapped around her waist. We were just swaying to the beat, other bodies brushing and bumping into us as well. The third song was ending, my body content with just being close to another person when I felt a hand grip my shoulder.\n\n\"Get off my girlfriend!\" a guy snapped and I stumbled back, glancing over my shoulder to see a guy who looked like a combination of Jake and Clay. He was tall and buff, not in a chiseled way but more in like a solid brutish way.\n\n\"Babe we were just dancing! He's gay!\" she insisted, patting my chest nervously. I felt my forehead wrinkle, studying the few people around us.\n\n\"I mean, bi technically! But I am dating a guy,\" I chuckled, feeling a bit groggy because of the alcohol. \"Look man, she's not even my type,\" I insisted, trying to settle the situation.\n\n\"Bull shit! I saw you feeling her up! Think I'm dumb or some shit? That I'd buy you're gay?\" he shoved me back and I stumbled, people spacing out a bit. I caught my balance, wishing I was more sober as I stared at this guy who was obviously eager to pick a fight.\n\n\"I really wish I could prove it to you,\" I laughed, shoving my hands into my pockets. \"But my boyfriend isn't here,\" I shrugged.\n\n\"What do you mean sweetie?\" Devon's voice rang out, his arm sliding over my shoulder. I cringed, unable to prevent myself from retching and laughing at the thought. \"Oh come on! It could have been believable! I would have even kissed you,\" he joked, helping hold my drunk ass up.\n\n\"I'd probably throw up at that point!\" Jake chimed in, leaning on the wall next to us. The guy glanced at him, seeming a bit shocked. \"Tank, that's my roommate. Just last weekend he had a guy in his bed. Trust me, he's not interested in your girl,\" he breathed. Tank? What a fitting name.\n\n\"Football jock guy?\" I asked Jake, thumbing toward the massive tree of a man. The girl giggled, snuggling up to him as he glared at me.\n\n\"Shut the fuck up Bruno before he bashes your face in!\" Jake warned and I sighed.\n\n\"Look I'm fucking drunk,\" I grumbled, wobbling as I tried to stand. \"You know how stupid I am when I'm drunk,\" I insisted and Devon chuckled.\n\n\"A fucking lightweight is what you are. I'd take you to your dorm but I don't think you could even walk,\" he mused. I almost said I could stay here, but caught that thought before it slipped out.\n\n\"I can walk,\" I insisted, nearly falling over when Devon caught me again.\n\n\"Bruno you don't look so good. Why don't you just stay here?\" Clay's voice sounded and my heart dropped. I glanced up, seeing him studying me with a blank face. A lot of people were watching us at this point.\n\n\"You sure about that captain? Wouldn't want any nasty rumors about this queer staying at your place,\" I started and he sighed, rolling his eyes as he took me from Devon.\n\n\"What an annoying little runt,\" Tank muttered and I glanced back at him with a cocky grin.\n\n\"I could still whoop your ass. I'm scrappy not scrawny,\" I mused and Clay squeezed me close.\n\n\"Are you out of your fucking mind?\" he muttered angrily and I laughed.\n\n\"Oh come on, I'm just trying to have a little fun,\" I insisted, feeling wobbly and light headed. \"Tell me this party hasn't been fun!\" I pressed as he helped me upstairs. We got into his room, the door shutting behind us. Everything was quieter, my mind painfully dizzy as he sat me down on the bed.\n\n\"Watching you dry hump a chick for the past half hour hasn't been my idea of fun,\" he grumbled, easing me onto my side.\n\n\"Yeah well it was a tight dance floor. One thing led to another. I didn't even get a boner though,\" I muttered, feeling sleepy.\n\n\"You didn't?\" he asked, his voice drifting off. I heard water running in the distance as I adjusted, getting more comfortable.\n\n\"Nope, just a little chub. But that's because I'm an ass guy. It just felt nice having an ass,\" I yawned, feeling something cool and wet on my face. \"Having an ass on my dick again,\" I muttered, finishing the thought.\n\n\"Have you thought about my ass?\" he asked softly and I hummed, smiling stupidly as I bit my lip.\n\n\"I'll never tell,\" I breathed, feeling my shoes pulling off. I felt his hands tug at my belt and chuckled. \"Mmm, frisky! It hasn't been a full week yet,\" I teased and he sighed, unable to help but laugh.\n\n\"You know you're making this very hard on me. The last time you were even remotely drunk you made out with me for a solid hour. And that was before we established our feelings for each other,\" Clay's voice was so soft.\n\n\"Well I'm in the mood to fuck, not be fucked,\" I grumbled, pressing my hand to my crotch as I humped it pointedly. \"So let that kill your mood,\" I yawned again, undoing my pants and pushing them off halfway. I pouted, fidgeting as my limbs felt limp and heavy.\n\n\"You're useless when you're drunk,\" he laughed, his hands working my pants and socks off.\n\n\"Yeah well, I blame you!\" I wiggled and adjusted as he pulled the blanket up.\n\n\"Why?\" he sounded amused.\n\n\"I haven't been able to stop thinking about you. I'm supposed to be mad at you, but not talking or hanging out has been torture. I wanted a distraction. So alcohol it was,\" I flopped my hand, grumbling as I rolled over and the cool thing fell off my face. I felt him lean over me, putting it back on my forehead.\n\n\"I'm glad I wasn't the only one losing sleep this past week,\" his voice was so soft and soothing. His lips touched my cheek and then he laughed once. \"And if you do dream about my ass just tell me,\" he whispered, disappearing then. I heard his door latch, my heart racing as my sober brain fought my drunk brain to process everything that just happened.\n\n\"What an asshole,\" I grumbled, getting comfy. A few deep breaths of his familiar scent on his pillow and blanket and soon enough I was dead asleep.\n\nA bright light and warmth had me blinking like crazy as I groaned. My head was pounding and I felt a bit dizzy as I tried to sit up. That's when I felt a weight on my stomach.\n\n\"Clay?\" I rubbed my eyes, remembering that I had crashed in his bed. I heard a gentle snore and squinted next to me. Clay was over the blanket, his arm and leg on me as he breathed deeply.\n\nI pursed my lips and reached out to pinch his mouth closed. He grumbled, his face wrinkling as he swatted at my arm. I did it again, amused with how cute he was being.\n\n\"Get off me,\" I flicked his nose then and he exhaled, his eyes blinking open as he rubbed his face.\n\n\"Did you just hit me?\" he muttered, his voice croaky as he rubbed his face.\n\n\"Hit is a strong word. I flicked your nose,\" I corrected. He sighed, pushing up off the bed. He groaned, standing up and sliding his shirt off. He pushed his pants down, stark naked as he went to the bathroom.\n\nI blushed, covering my mouth as I bit my lip. He looked half asleep still. I sat up slowly, pushing my hair back when I heard the toilet flush. He walked back out, his eyes nearly closed as he crawled under the covers.\n\nMy heart was racing as I stared at his back and shoulders. He was on his stomach, his arms hugging his pillow under his head. Why did he have to be so attractive? I pushed the blankets off me, the fabric sliding down his back invitingly. If only I didn't get so wasted I would have been ok to get back to my dorm. Instead of lying in his bed with him again. I went to crawl off the bed when his hand grabbed my leg.\n\n\"Where you going?\" he muttered and I sighed, sitting by his hips as he glanced back at me.\n\n\"Clay, what are we even doing?\" I demanded quietly, tucking my knees up by my chest as I leaned onto them. \"Like if you're never coming out of the closet, what's the point? Obviously the hardest part for me is not being close to you when I want to be,\" I started and he sighed, closing his eyes as he let me go.\n\n\"I said I wasn't going to come out of the closet for you, not that I was never going to be out,\" he corrected quietly and my stomach knotted up. \"But it's going to be on my terms, and for me. I'm not going to out myself to make someone else's life happier or easier,\" he studied me then, his eyes piercing.\n\n\"Right, but what if I slip up?\" I asked quietly, thinking back to how I almost did when I was drunk. He pursed his lips and then sighed heavily.\n\n\"Well the biggest concern for me is my family finding out. At least before I get to tell them myself. Other than that,\" he shrugged and I pursed my lips. \"This may sound fucked up but I'm kind of glad you outted yourself to the team. It's given me a chance to see how I might want to handle it,\" he muttered randomly and I sighed.\n\n\"Glad my tribulations are a great learning experience for you,\" I rolled my eyes, about to get up when he pushed up off the bed. He grabbed my waist, holding me down as he stared at me intently.\n\n\"Bruno. I really am sorry. I didn't expect you to be so open about your sexuality so I wasn't anticipating-\"\n\n\"I got mad not just because I was offended for myself. I confessed to being bi because I knew you didn't want to be out. But I wanted Zack and the team to understand how hurt you could be by their statements. Even if it was through me. In fact most of my anger hasn't even been because Zack likes to pick on me. It's because I know that what he says and how he thinks is the main reason you won't come out,\" I explained finally, sighing heavily as I finally got that off my chest.\n\n\"So you outted yourself for my benefit?\" he demanded, his eyebrows wrinkling as he studied me. \"Why would you do that?\"\n\n\"Because I like you! And after we talked about everything I felt like the right thing to do. I would never sit by and listen to someone say shit like that. Especially if it's about someone I care about,\" I crossed my arms, pressing my lips together as we stared at each other.\n\n\"So you're upset because I haven't been doing the same for you,\" he mumbled and I nodded. \"Because you did it for me,\" he continued and I shrugged.\n\n\"It's never been about outing yourself. But-\"\n\n\"You want me to grow a pair,\" he chuckled reaching up to slid his hand into my hair. He held the back of my head, leaning toward me with a cute smile. \"Noted. And I'm working on it. So are we still giving each other space?\" he whispered, his nose almost brushing mine as his other hand pressed on my thigh. His thumb was so close to rubbing my cock, his palm hot as it cupped my thigh.\n\n\"Is this what space looks like to you?\" I reached up grabbing a handful of his hair. He smiled, closing his eyes as I pulled his head back slightly. \"Because you slept in the same bed as me, stripped down naked in front of me, and this is the second time you've come on to me like this,\" I grumbled and he bit his lip, looking coy and smug.\n\n\"I can't help myself with you Bruno. The way your body reacts, how nice it feels under my hands, against my lips,\" his hand pushed up into my shirt as the other ran down over my chest. His legs slid under the blanket as he adjusted, his one arm sliding around me as he gripped my other thigh. My hands rested on his shoulders, gripping them roughly as I felt my body get hot.\n\n\"Clay!\" I clawed at his shoulders when his hand slid up from under the collar of my shirt, gripping the back of my neck as he leaned into me.\n\n\"Just say the word Bruno, and I'm yours,\" he whispered, his lips brushing against my neck and ear. He was so close and yet he hadn't done much of anything. He was avoiding all of my favorite spots, being a damn tease just to set me off.\n\n\"You can't just try and fuck me every time I'm upset with you,\" I argued weakly, my heart racing as his lips started trailing up and down my neck. His breath was hot, his lips soft as they tickled me.\n\n\"Upset or not, I just want to fuck you. This isn't about you accepting my apology. This is me being greedy,\" he knocked me down, his body over mine. I gasped, shocked by his aggression. Both his hands were pushing my shirt up then, a sexy smile plastered on his face as he watched. \"You look so delicious, like milk chocolate,\" he whispered, leaning down. He licked up my stomach, kissing and nipping at me occasionally as he pushed my shirt up to my armpits. \"God your nipples look so sexy too,\" he whispered. I felt his togue and lips capture my right nipple, my mind a haze of lust as he sucked and kissed at it.\n\n\"This isn't fair!\" I panted, pushing on his shoulders weakly as my cock started to twitch and throb with excitement.\n\n\"Life's not fucking fair. But it doesn't mean we shouldn't have a good time living it,\" he chuckled, switching to the other one. His hands slid up my sides, urging my back to arch slightly as he continued to suck and kiss at my chest. \"I'll stop if you want me to,\" he offered suddenly, my body trembling with excitement as he studied me.\n\n\"You spend all week trying to seduce me, to convince me to give in to you, and now that you have me in your bed you're offering to stop?\" I demanded with a laugh, shaking my head. \"Unfuckingbelievable!\" I grumbled and he chuckled, kissing down my stomach.\n\n\"Can I make it up to you?\" he offered, his hands gripping my briefs. I grabbed his hair and bit my lip.\n\n\"Do I get to decide how you do that?\" I muttered, reaching down to rub my thumb against his lips. He closed his eyes, licking and sucking at it. My cock trembled with excitement, my brain consumed with the image of him swallowing my dick.\n\n\"Whatever you want,\" he huffed and I smiled. I pushed his face into my crotch and he groaned, his lips and tongue teasing my balls and shaft through my briefs. I groaned, my legs parting excitedly. My free hand pushed my briefs down, my body in control as pleasure and lust consumed me. His hands helped work my briefs off and with a soft moan and slurp he had my cock in his mouth.\n\n\"Oh fuck!\" I inhaled, gripping his hair as my hips lurched eagerly. His mouth was hot, the pressure of his lips and tongue working wonders on my shaft and tip. \"Where the hell did you learn to suck dick like this?\" I demanded, a bit jealous that other guys might have received this kind of pleasure.",
        "\"I just love sucking dick,\" his voice was gruff as his hand jerked my shaft roughly. \"It helps that you're really sensitive. It's like your body was made for gay sex,\" he teased and I blushed, smirking at the thought. My neck tensed, my teeth clenching as he slid my length into his throat. Both my hands gripped his head, my feet pressing into the mattress as I thrusted into his mouth.\n\n\"Fuck, I want to cum!\" I panted and he groaned, his hands clawing at my thighs as I fucked his sexy face. I could feel his tongue sliding and swirling around my tip, eliciting a moan every time I pulled out. It was maddening and I could feel my balls clenching as I bucked and thrusted faster. \"Shit! Clay!\" I groaned, my cock stiff and throbbing as it slid between his lips and along his tongue. As soon as I was about to blow my load and pushed away from me. I trembled, reaching down to grip my balls and stroke my shaft.\n\n\"Wait, don't cum yet!\" he grabbed my hands and I whimpered, panting and burning with need.\n\n\"I need to fucking cum!\" I whined, this pre-ejaculation feeling was overwhelming. My body was burning and tingling from head to toe, my stomach tense and my balls uncomfortably swollen.\n\n\"You said you wanted my ass right?\" he demanded and I whimpered, biting my lip.\n\n\"You can't edge me like this then offer me your fucking ass!\" I reached down and grabbed his hair, pushing him down onto the bed. \"Finish what you started!\" I groaned, climbing on top of him. His eyes were wide as I held his hair, shoving my dick against his lips. He closed his eyes after a moment and took it. I fell over onto my hand, holding his head as I rolled my hips eagerly. His hands groped my ass, his mouth so amazing and skilled. Without warning he shoved his fingers into my ass, massaging at it diligently. I could tell he was looking for my magic spot.\n\nI slowed down, letting him take over a bit as my chest tightened and back burned. He started sucking on his own, bobbing his head as I supported it with my hand. And then it happened. My hand gripped the bed, my back arching as I threw my head back and cried out. All of my muscles tensed as he found my prostate. I felt my dick slide against his tongue and rub the back of his throat, my eyes almost crossing as I shuddered with pleasure. That was it. My balls erupted, my hand gripping his head as I jerked and trembled against him. When I finally stopped, my body relaxing I rolled off of him collapsing onto the bed.\n\n\"Holy shit,\" I gasped, panting as I rubbed my face. I felt the bed shift but didn't have enough energy to see what he was doing. At least until he grabbed my legs and pushed them apart. \"What are you-\"\n\n\"I fucking need you Bruno,\" Clay huffed, his face flushed. His cock was twitching, looking swollen and angry as he opened a lube bottle. My heart was pounding in my chest, excitement and fear consuming me. He was going to be an animal. I could just tell based on how he was breathing, by the look in his eyes as he poured the lube onto my taint and his fingers.\n\n\"Don't be too rough!\" I gasped when his fingers shoved their way inside of me. He worked them around, sliding them in and out as he worked to ease and stretch my ass out. I felt more pain than anything, trying to breathe through it.\n\n\"That's three fingers,\" he moaned as I shuddered, clawing at the bed. \"God I can't wait anymore,\" he yanked his hand away. I whimpered, feeling empty and relieved all at once. His hand touched my thigh and I looked down in time to see him shoving his raging cock between my legs. There was no build up, as soon as he felt my asshole give he lunged all the way in.\n\n\"Haaaa!\" I cried out, my eyes watering a bit as I tensed up. My back was on fire, my ass throbbing and stretching painfully. He pressed his body into mine, his hands running up my body roughly. He pushed my shirt off me, his lips descending onto mine. He wrapped his arms around me, his body hot and tense as he held himself deep inside of me.\n\n\"I'm sorry. I know it hurts,\" he whispered, kissing along my neck as I gasped for air. It was hard to breathe, my body felt like it was being torn in half. \"I didn't mean to,\" he insisted and I could only moan in response. \"I'll pull out,\" he went to move and I wrapped my arms around him, tensing up as my ass screamed in pain.\n\n\"Don't fucking move,\" I panted and he sighed, holding me tightly. I could only shiver and pant as my body relaxed. He adjusted, studying me with a worried face.\n\n\"Bruno are you ok?\" he looked so concerned, but his dick was still scalding hot and painfully hard buried deep in my ass.\n\n\"Fuck, I don't know,\" I could hear the tremor in my voice. He sighed, biting his lip as he glanced down between us.\n\n\"Let me pull out,\" he insisted. I shook my head, grabbing his arms. He sighed and went to say something else when I pulled him close. My lips silenced his and we both moaned. Our tongues touched and his body relaxed instantly, his stomach pressing against mine as he held onto me. We kissed passionately, his lips and tongue devouring mine. I felt a wave of comfort and relief wash over me as my mouth slid and pressed against his. \"Fuck,\" he shuddered, rolling his hips. I winced, my ass burning but it was bearable now that I was relaxing. My arms wrapped around his shoulders, my fingers gripping his hair as I kissed him again. He groaned, his legs sliding and adjusting as he started rolling and thrusting his body into mine.\n\n\"God,\" I gasped, his face against mine as we both panted. I felt his mouth against mine as he grunted, thrusting into me. My body was on fire, my legs falling off his hips as I felt all my muscles melt little by little. He started running one hand down my body to my leg, caressing me as he worked his dick in and out of my ass. We were so close, no space between our bodies as we kissed and moaned. It was amazing.\n\nAnd then his hands gripped my ass, his body rolling as we switched. He pulled me on top of him, sitting up slowly as I tucked my legs under myself. My body trembled as he pushed into my ass, my weight pressing me down further onto his cock. His hands ran all over my body, groping and massaging me as we kissed. I gasped, slumping into him when his hands grabbed my hips and pushed me all the way down onto him.\n\n\"So deep,\" I panted, my hands clawing at his back as he pulled my hips up and then pushed them down again. It was all so new and overwhelming. I gathered myself enough to push on his chest. He fell back into the bed, my body pressing into his. We kissed, his hands running all over my body as he started thrusting up into me.\n\n\"I feel so good,\" he moaned, his eyes half open as he pushed into my ass. We both moaned, trembling as he clawed at my ass.\n\n\"Me too, I feel good too,\" I panted and he bit his lip, his face contorting as he thrusted up into me. I cried out, pressing my face into his to catch my breath.\n\n\"Kiss me,\" he moaned, his mouth brushing against mine. I obeyed, my tongue eager to feel his as our bodies wiggled and rolled around for pleasure. This was the most intense experienced I had ever had with another person. It felt mesmerizing, hot, unfathomably amazing as our bodies curved and rubbed together. There seemed to be no end in sight as we rolled around the bed, making out and tangling our limbs together as lust consumed us. It wasn't until he pulled out and pushed me over onto my stomach that I knew he was close.\n\nHe grabbed my ass, working his way in. He laid down, rolling us onto our sides as his arms wrapped around me. I turned my head back, kissing him desperately as he started teasing my nipples and stroking my dick.\n\n\"So hard,\" he moaned, his thumb teasing my tip. I groaned, reaching back and grabbing his hip as he thrusted into me. \"I want to watch you cum,\" he insisted and I pressed my ass back into him in response. He started thrusting roughly, his lips and teeth on my ear as he stroked my dick. It was overwhelming, feeling this much pleasure from both directions had my body in overdrive. My mind was going haywire as this lustful haze consumed me.\n\n\"Oh fuck, deeper please!\" I begged and he groaned, tucking his arm up under my leg. He adjusted, almost straddling my other leg as he worked himself into me violently. Our mouths were glued together, my hand on my dick now as I jerked off desperately. He shifted and thrusted and I gasped, squeezing my shaft as a delicious wave of pleasure crashed through me. \"God, right there!\" I groaned, looking down to see his body on mine. He looked so sexy, shining with sweat and flushed with the same burning desires I was feeling. I felt his lips on mine, my eyes closing as we kissed.\n\n\"Shit, I'm gonna cum,\" he panted, going even faster.\n\n\"Oh fuuu, hnnn, f-f-faster!\" I begged and he groaned, pushing up off me entirely. He grabbed my leg and hip, frantically thrusting and pounding away at my ass. It was painful but it felt fucking incredible. I felt myself getting close, panting as I yanked my dick violently. \"Don't stop!\" I begged and he bit his lip, his face twisting as he kept going. \"Clay I'm gonna, oh fuck, so close!\" I insisted. He was panting, his hands clawing at me as he thrusted even faster.\n\n\"I'm gonna cum! Bruno I have to-\"\n\n\"Cum in my ass!\" I demanded, not wanting to be left on the edge again. He almost growled, slamming into me violently. I exploded all over myself and his blanket, massaging my balls and groaning as ripples of pleasure and satisfaction rolled through my body.\n\n\"Fuck!\" he groaned, huffing and trembling as his hips lurched erratically against my ass. He hunched over, both of us slumping and panting for air. He swallowed hard, gasping heavily as his eyes opened. \"Bruno,\" he whispered and I sighed, reaching down to push on his hips. He bit his lip, easing himself out of me. We both trembled, his body falling to the bed next to me as we continued to pant. \"That was amazing,\" he breathed finally and I smiled, laughing then as I covered my face. \"What?\" he laughed too and I bit my lip, smiling at him as I let my hands rest on my stomach.\n\n\"Maybe you can just fuck everything better,\" I teased and he laughed, throwing his arm over his face. It took us a minute to catch our breath but when we finally did he rolled onto his side. He put his hand on mine, stroking them with his thumb as he studied me. \"What?\" I grabbed his hand, steadying it as he sighed.\n\n\"You're making me think it's all worth it. Something this good, it doesn't happen all the time,\" he started and I scoffed. \"I don't just mean the sex Bruno,\" he insisted and I hesitated. \"Besides I've been told I'm good in bed, but it's never felt like this for me either,\" he admitted, pulling away to lie on his back.\n\n\"Is this good?\" I asked softly and he smiled.\n\n\"It's amazing. Great. Unbelievable. A part of me wants to brag to the world how lucky I feel. You're being so damn patient and understanding. The more we talk, the more you explain yourself, the worse I feel as a person,\" he started and I sighed.\n\n\"Well I felt like you were a great person. I still think you are. I just think you have some issues you need to work out,\" I admitted and he nodded slowly, staring at the ceiling thoughtfully.\n\n\"Can I have a retry on that date? And this time,\" he hesitated, glancing at me. \"No matter who is around I want to treat you like my boyfriend,\" he breathed and my heart thumped painfully.\n\n\"You don't have to-\"\n\n\"I want to. At least I feel like it now,\" he shrugged and I smirked.\n\n\"That means you can change your mind once we're out?\" I clarified and he sighed.\n\n\"I don't want to, but it might happen. Just know my intention is to be your boyfriend. Ok?\" he pressed and I hesitated.\n\n\"Won't it just end up like last weekend then?\" I countered, sitting up slowly as doubt crept its way back in. He sighed and sat up too.\n\n\"What's it going to take?\" he asked softly and I pursed my lips. He kissed me then and I sighed, kissing him back happily.\n\n\"One regular date. No fake straight Clay allowed,\" I challenged and he looked nervous, his forehead wrinkled as he studied my face. \"We can go somewhere other students won't go. Or at least the soccer team to start with. Whatever it takes for me to get one full day of Clay, my gay boyfriend,\" I insisted, grabbing his hair and kissing him. He groaned when my tongue teased his lips, his arm wrapping around me as we kissed enthusiastically.\n\n\"How can I say no to that?\" he grumbled and I smiled.\n\n\"And then after our date, I want to take you up on your offer,\" I mused. He raised his eyebrow quizzically and I bit my tongue, feeling giddy.\n\n\"I want my turn to have my way with you,\" I nudged him and he actually blushed, clearing his throat as a cute smile tugged at his lips.\n\n\"Uh, ok, it's a deal,\" he breathed, kissing me again before getting up. \"Shower?\" he held his hand out and I smiled, taking it.\n\n\"Shower,\" I agreed, stupidly excited now."
    ],
    "authorname": "CateredContentQueen",
    "tags": [],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/my-exception-is-you-ch-05"
}