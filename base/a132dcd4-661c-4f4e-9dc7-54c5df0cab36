{
    "title": "Sera Ch. 13",
    "pages": [
        "Steven\n\nOnce away from Kitten and in my room, I downed the rest of the whiskey, about a half pint I figured, enough to keep my parasite in the driver's seat. Leaning against my kitchenette counter, I remembered how it wasn't that long ago that I didn't even like the taste of alcohol. Less than five minutes later, I was in the shower with a cold beer and other things on my mind.\n\n\"Oh my fuck, you used Martina and Lacey every which way but Sunday.\"\n\n\"I figured I'd let them do Sunday with each other.\"\n\n\"I couldn't believe Kitten.\"\n\n\"Why? She's just like we are.\"\n\n\"I know, that's what I couldn't believe.\"\n\nLook, you might wanna start thinking about that. What you used to see as extreme is pretty realistic for us, given our sex drive and what we like.\"\n\n\"What you like.\"\n\n\"You liked watching her get ganged as much as I did.\"\n\n\"Fuck... I hope she's okay with it once she sobers up.\"\n\n\"I got a feeling she will be one way or another.\"\n\n\"How's that?\"\n\n\"Just a hunch. You know, she's more mine than yours when she's drinking.\"\n\n\"That's stupid.\"\n\n\"Not at all. If both you and Kitten quit drinking, you and all your almighty morals and inhibitions would be back in charge, same as her. Neither of you would know what to do with each other because the real attraction is between me and your other cousin. See?\"\n\n\" ... Yes...\"\n\n\"In fact, you two would probably never even see each other again over what happened at the hotel.\"\n\n\" ... So, what's your fuckin' point?\" I asked myself.\n\n\"Nothing, I'm just saying.\"\n\n\"Well, I'm just saying, shut up.\"\n\n\"What's your problem? Thanks to me, we got both Mum and Kitten dealt with. I'd think you'd be happy, but if you're just gonna bitch about it, allow me to point out that it took me less than twelve hours to do it after it took you... how many days to do exactly nothing?\"\n\n\"If you think either Mum or Kitten are dealt with, you'd best think again.\"\n\n\"Tell me it isn't two giant strides in the right direction,\" my parasite challenged in reply. \"Furthermore, I've satisfied Ashleigh's demands. Kitten is now aware of her nature, and now our long lost and mysterious aunt no longer has any excuse for keeping us in the dark about what she knows. If I were you, I'd be expecting another family meeting soon.\"\n\n\" ... I'll give you that.\"\n\n\"Damned right.\"\n\n\"Just keep in mind that sometimes giant strides come at a cost,\" I grimly reminded. \"In particular, I'm wondering how long it'll be before Kitten finds out how she got kick-started, then puts two and two together to figure out how it could have happened to me.\"\n\n\"Let Ashleigh explain it.\"\n\n\"That won't change her reaction.\"\n\n\"Look, you need to accept that sometimes there's just nothing you can do and have some faith that you'll be able to deal and that things will work out. Trust me, alright?\"\n\n\"Can we just go to bed?\" I wearily sighed.\n\n\"I wanna stay in here a little longer. So nice and warm.\"\n\n\"Just till the beer's gone, then bed.\"\n\n\"Deal.\"\n\nI said no more about it, thinking instead of a new and uncertain future with Kitten. The four of us. Six, if you count Mum. Good god.\n\nThis was more or less the thought in mind when I distractedly walked into my bedroom after I'd dried off, towel wrapped around my waist and screaming, \"Baaaaaa-fuuuuuckk!!\" when I was greeted by the unexpected sight of Kitten in my bed. Stanley the cat, who'd been curled up between her tits as she pet him, bolted in a frenzied panic as she jumped a foot and screamed in return. This is when I realized that, in fact, it wasn't Kitten, but Sheila, causing me to yell again.\n\n\"What the fuck!?\" I begged when we were done, holding on to the doorframe as she lay with her hand covering her eyes, chest heaving with the fright I'd given her.\n\nOnce she was over it, she explained in a patient, level voice, \"I thought I'd surprise you.\"\n\n\"Wh- Well, how'd you even get in?\" I demanded, trying to catch my breath.\n\n\"I picked the lock and, oh my god, you're as paranoid as your mother!\"\n\n\"Picked-? ... Jesus, what do you mean you picked my lock? Who... who does that?\"\n\n\"I do. And how else was I going to get in after you locked it?\"\n\nAt this, she removed her hand from her eyes and looked at me as though I ought to know better. Sitting up, the sheets fell away to reveal the low cut, skimpy white lace nightie she wore. 'She looked awesome' was a blinding understatement, even with her black eye, but to break into my apartment? Really?\n\n\"O-kay,\" I allowed as she reached for a glass of white wine on my nightstand. \"So, what's happening?\"\n\n\"Nothing, I just thought we'd hang out and talk about the meeting. Where've you been anyway?\"\n\nDropping to a seat on the foot of the bed with my back to her, I wondered what Kitten would think if she knew about this little visit as I rubbed my eyes and replied, \"Out proving a point. What's been going on here? Apart from you breaking into my apartment, I mean.\"\n\n\"Oh, stop it, I didn't even snoop around. I like you, remember? (Giggle!)\"\n\n\"Oh boy.\"\n\n\"Like I said, I just wanted to hang out and chat. And... maybe some sex?\"\n\n\"Just because Ashleigh told Mum and Kitten that was okay doesn't totally mean it's okay, y'know.\"\n\n\"As far as I'm concerned, it was okay before she said that. Hell, if Kathy can have you, I sure as hell can. I still can't believe what a hypocritical bitch she's being.\"\n\n\"How do you feel about Kitten?\"\n\n\"You mean since the fight, or the meeting?\" Sheila asked.\n\nI turned around, putting my feet up to sit Indian style on the bed as I answered, \"Both. You two seemed to get pretty friendly.\"\n\n\"Don't mistake that for anything it isn't, kid. I'm a sexual deviant and so is she, that's it. As for the fight, I won.\"\n\n\"She told me you said you'd make me forget all about her.\"\n\n\" ... Uh, well I kinda did say that,\" she admitted with a quiet, sorry smile of deceptive innocence. \"I was only trying to get her going,\"\n\n\"Well... I'm getting closer to her. Quite close, actually.\"\n\n\"Oh. Mind sharing?\"\n\n\"She'd probably get mad.\"\n\n\"No way! You're not gonna tell me?\"\n\n\"You know there's this thing between me and her, Sheila. It's serious.\"\n\n\"But- Okay, I can't understand how you can be so serious about that little freak, but yes, I know you two have a thing. That doesn't mean you can't tell me, does it?\"\n\n\"I'd feel like I was telling tales out of school.\"\n\n\"I've told you about my exploits,\" she pointed out.\n\n\"Look, this is pretty crazy stuff, she probably wouldn't wa-\"\n\n\"Oooh, if it's crazy, you have to tell me,\" she said, getting out from under the covers.\n\nShe was grinning as she crawled towards me, the hem of her nightie as short as the neckline was low. She stopped on her knees in front of me so I could look right down the top of it, then gave me a kiss.\n\n\"Tell me.\"\n\n\"Sheila, c'mon, I-\"\n\n\"(Smerp)\"\n\n\"Oh my god, this won't change my-\"\n\n\"(Smooch)\"\n\nShe hardened me in seconds, chuckling at the sudden tent pole under the towel. I tried to stop her hand, but it was too late.\n\n\"Ohh, yesss,\" she breathed, gripping my now throbbing meat and pulling the towel away with her other hand.\n\nI didn't even try to stop her from going down on me. She licked and sucked, not like she did during the meeting, but in a quicker, lighter fashion that was meant to tease, promising more upon co-operation. Being in a position to personally vouch for what more was available, I decided to co-operate.\n\n&nbsp;\n\nKitten\n\nGina was there waiting for me, but that was no surprise. Standing just inside my foyer, I recalled how Stevie had told her to forget the events in the library and to go wait for me in my apartment. She was asleep on my couch, still dressed only in her bra and panties and looked quite peaceful, staying that way as I tread quietly to my kitchenette. Mr. Sparkles intercepted me there with a mewl that I quieted with a bowl of milk and a petting.\n\nMaking myself a stiff drink, I grabbed him and headed for my balcony with a careful eye on Gina until I slipped out the crack I made with the sliding door behind the floor length drapes. Soon settled in with my chair tipped, feet on the railing and Mr. Sparkles in my lap, I was alone in the fog with my thoughts.\n\nAt first, they whirled in my head, disjointed facts, data chips of claims and experiences that had no connection until, one by one, they started to touch down, forming an overall picture I could get my senses around.\n\nThe first bit of mental data that I got plugged in was the fact that this parasite that Stevie had told me about was no joke and no hoax. It was every bit as real as the events at the hotel that proved it so, and that I had it. All Burchells had it.\n\nThe next data I had to plug in was that there were two people inside of me. This, I had trouble with, especially the fact that, as I sat there, this parasite was the one in charge, the actual 'I' that I speak of here. It was confusing, frightening, yet I knew it was true on some instinctual level that I'd been feeling since that orgasm that Auntie Ashleigh and I had shared...\n\n\"OMG...\" I hissed in the fog. \"That's when it... started. I felt different ever since then.\"\n\nMy jaw sagged as I zeroed my parasitic ability down to that event, remembering how I swooned when I looked into her eyes.\n\n\"It was her. Auntie Ashleigh and that orgasm.\"\n\n\"This is crazy,\" I whispered in reply.\n\n\"You know it isn't.\"\n\n\"I... I wish I could talk to Daddy right now.\"\n\n\" ... Daddy would never understand.\"\n\nMy thoughts began to whirl again before that different quality in myself, the parasite that Auntie Ashleigh had awakened, brought order again with a confidence and understanding born of me, but which I never knew I possessed.\n\n\"Things have changed. This is what Auntie Ashleigh meant when she said we face a crossroads.\"\n\n\"Thanks to her.\"\n\n\"No. You know better than that. You weren't happy in Langley and you didn't see that changing. Now you know why you weren't happy, why you were so different in all your little ways... Now you know who Sheila really was.\"\n\nI didn't want to answer to that.\n\n\"And let's not forget Stevie. He's ours and we're going to have him, no matter what. I say we team up with him, but I want to hear the rest of what he knows, 'cause I know he's still holding stuff back.\"\n\n\"But, what are we going to do about Gina?\" I fretted.\n\n\"Well... let's not forget a certain latent charisma.\"\n\n\"We should get him to help us with her, or maybe Auntie Ashleigh or Auntie Kathleen.\"\n\n\"Maybe. Then again, maybe we should just deal with our own business. Wouldn't you say that Gina is our own business?\"\n\n\"Well, yeah. But what about Daddy and... everything?\"\n\n\"Trust me.\"\n\n&nbsp;\n\nSteven\n\n\"And so,\" I sighed, closing the story for my wide eyed audience, \"there they are, licking my cum off each other's face while I'm trying to stand straight, cause it was one of those real good ones, ya know?\"\n\n\"Yes.\"\n\n\"I look off to my right and the rest of them are still taking turns at kitten, banging the shit out of her and she's wailing to beat the band, just loving it and keeping me totally hard. A couple minutes later, I've got everyone closed up and I'm getting her up off the table, dressed and back to her senses so we can get the fuck outta there.\"\n\nShe was quiet for a bit, but finally said, \"Oh, wow. Oh my god... Has Kathy ever done anything like this?\"\n\n\"Oh yeah.\"\n\n\"Oh my god. Um... tell me more about this ability.\"\n\n\"Sheila, c'mon, it's late.\"\n\n\"What are you doing tomorrow that you need your rest so badly?\" she teased.\n\n\"Oh, god, I just went through all this with Kitten and-\"\n\nSo, go through it again with me!\"\n\n\"But I just wanna go to bed. Just suck me and let me go to bed, okay?\"\n\n\"Nope. You tell me what I wanna know, then I suck you.\n\n\" ... Wait till I get a beer,\" I dismally gave in.\n\n\"No, I'll get it for you,\" she said, bounding off the bed with a smile and the energy of any teen. \"Stay here, I'll be right back.\"\n\nShe returned with two beer, one for each of us and handed me one before getting settled on the bed across from me, sitting Indian style.\n\n\"No panties, Aunt Sheila?\" I asked, checking out the moist and ready pussy my cock ached for.\n\nShe smiled teasingly and answered, \"You're a big boy, I'm sure you can take it.\"\n\nI sighed, gave her a smile and began relating to her what I knew of the parasite, telling her everything I told kitten with the extra content of being kick started by sex with Mum included but, as with Kitten's version, subtracting the part about how Mum had killed Marie. It wasn't too detailed, given the hour, but it was enough to inform her of what was going on with the rest of her family, particularly at the family meeting we'd just had. When I finished, she was silent for a while, probably adding it all up to her own experiences before she finally spoke.\n\n\"I wonder why I can't do it,\" she asked herself as much as me.\n\n\"I don't know, but you're also invulnerable to it.\"\n\n\"I wasn't when I was a kid. Those memories of the things she made us do are partly responsible for the questions I began asking, the reason I ended up at that nursing home in Saint John looking for answers from Mum.\"\n\n\"Don't ask me,\" I told her, holding up my hands, \"It's like I told Kitten, I don't have all the answers, just a head start on getting them. Now that Kitten's been brought up to speed, I imagine Ashleigh will be filling us in where she can.\"\n\n\"Why didn't you tell me this stuff before?\"\n\n\"Because telling you this down in the cave, or while ambling about the house wasn't exactly the private setting I'd have preferred.\n\n\"I suppose. Did you tell Kitten about you and your Mum getting down each other's pants?\"\n\n\"Fuck, no.\"\n\n\"You should have, she'd probably enjoy hearing about it.\"\n\n\"She'll figure it out sooner or later anyway.\"\n\n\"Well, she'll still want details. I want details.\"\n\n\"I know you do,\" I said with a smile.\n\n\"Tell me something.\"\n\n\"Sheila,\" I groaned.\n\n\"Tell meeee!\"\n\n\"(Sigh!) ... We once had a sixty-nine in front of our landlord in order to pay the rent.\"\n\n\"Ooooh... I'd love to see you two getting dirty with one another. Does she suck cock like me?\"\n\n\"Don't ever tell her I told you, but you're better.\"\n\nShe loved this and gave me a wet, affectionate kiss, grabbing my cock again to show her gratitude.\n\n\"But yeah, she's damned good.\"\n\n\"I bet she just loves all that cum you spill all over those bit fuckin' titties, huh?\"\n\nI laughed a little, looking away as she brought up something else.\n\n\"As I've said, I've been aware of this attraction between you and Kitten, and I understand how you say it's reinforced through this parasite, but there's something you should know about her.\"\n\n\"What's that?\"\n\n\"She's like me. More than she'd care to admit. No matter her innocence, it's just a matter of time for her, and your little romp at the hotel proves it.\"\n\nI couldn't reply to this, knowing it was true, accepting the fact that I was going to end up with a woman who would have no inhibitions or limitations. Of course, while my parasite was in charge, it was a lot easier to accept things like that, wasn't it? As long as he was in charge, I'd be encouraging it.\n\n\"Have you two had sex yet?\"\n\n\"No. And...\"\n\n\"And what?\"\n\n\"I feel like I gotta be careful with you until that happens. It'd be like letting her down if things went too far between us before she and I get the chance.\"\n\n\"Sooo... out of respect for her, you're waiting to fuck her first, then her mother?\"\n\n\"I don't mean it to sound like th-\"\n\nHer laughter cut me off. I sighed, rolled my eyes with a smile and waited for her to stop before saying, \"I know it's fucked, but this is a fucked up family. When the holes turn square, it sooner or later becomes pointless to keep using the round peg, no matter what you end up fucking with it.\"\n\n\"How profound.\"\n\n\"Thanks.\"\n\n\"No, I'm serious, it is. But look, don't worry about it, okay? I'm not offended, just impatient, especially now that Ashleigh told them about us.\"\n\n\"What do you mean?\"\n\n\"Uh, you were at the meeting; what part of 'open season on Steven' did you not understand?\"\n\nI grabbed her crotch and squeezed gently, making her inhale with a pleasured sound as her eyes closed.\n\n\"Yeah, Mum likes that too.\"\n\n\"Ohhh... yesss...\"\n\n\"I've been rethinking a few things lately,\" I told her, \"my sex life being one of them.\"\n\n\"Ohh!\"\n\n\"Kitten will end up being my wife- I know that even if my other side won't accept it- yet that didn't stop either one of us from enjoying what happened last night.\"\n\n\"Uff-f- Oh!\"\n\n\"And, since I've already fucked my own mother, I sure as hell have no problem fucking you, other than the one that it creates between Kitten and I.\"\n\n\"Ooooh! Squi- squeeze mu-! ... Uhh-hh!\"\n\n\"So, while Ashleigh declares open season on me, just know that, from my perspective, it's open season on all four of you as well.\"\n\n\"Oooh, fuuuck!\"\n\nSuddenly slipping two fingers up inside her, my thumb began rubbing her erected clitoris while I said, \"So, rest assured that I will fuck you, but in my own time.\"\n\nShe came, both her little hands on my forearm as she bucked and moaned. The strange, submissive expression in her eyes was unexpected, though I'd have been surprised if I'd seen anything else in them right then. It was in keeping with the rest of her expression when I forced her down on me.\n\n&nbsp;\n\nKitten\n\nI woke up in my bed again, this time remembering how I got there. Gina had roused me from sleep out on the balcony as the sky began lightening up in the east. We both sleepily went inside, curling up with one another without a word.\n\nLying there in the morning, the next thing I remembered was the strange heritage that had been explained and proven to me in the hotel lounge. Then I remembered my so-called behaviour there. These memories ushered in a notation of how distressingly sober I was along with the most awful suspicions of how Daddy would look at me if he knew what I'd done.\n\n\"Oh my god,\" I said aloud in shock, waking Gina.\n\n\"Mmmm... mornin' slutty...\"\n\nI couldn't answer, but managed a pasted smile, closing my eyes so as not to accidently catch her in my Jedi spell.\n\n\"Your breath is horrible,\" she informed me, yawning afterward. \"Where were you last night, anyway?\"\n\nTurning on my back, I sighed, \"Out with Stevie.\"\n\n\" ... Out?\" she asked with that old concern in her tone, my mind shrilling behind my calm eyelids.\n\n\"To a bar.\"\n\n\"Really?\" she asked doubtfully. \"He's not even old enough to get in, is he?\"\n\n\"He's got a fake ID. Smutty?\"\n\n\"Yes?\"\n\n\"Umm... did you enjoy our game of pool last night?\"\n\n\"Yes. Did you?\"\n\n\"Uh huh. Who won?\"\n\n\" ... I don't remember. Actually, I don't remember coming back here, either.\"\n\n\"You had a lot to drink,\" I misinformed.\n\n\"Yeah... I must have.\"\n\n\"We both did.\"\n\nMinutes later, standing in the bathroom, I gaped at the used up looking mess that was me. I was ashamed, yet awestruck that I'd sunk to such a depth, miffy moistening at the memory of how it felt when they pulled my pants down and away. Noticing a large clot of dried cum in my hair, my eyes widened as I wondered how Gina missed it in bed. I stripped out of my rumpled clothing, grimacing about the loss of my top and panties as miffy got wetter, and got into the shower before Gina could wake up and smell the sex.\n\nAs soon as I stepped under the hot spray, it activated a layer of filth, turning it to a slimy film under my hands that eventually washed away. I was so ashamed of myself when I masturbated to the memory of Kenny pushing his cock into my mouth, actually flushing in the shower while trying to keep my vocals down during my orgasm.\n\nAnd I had no idea what I was going to say to Gina. I had no idea how I'd ever even eat breakfast with her, let alone converse with her. My trip to the bathroom had been a reason to get away from her so I could try to deal in the small comfort of privacy, but I knew I'd need more time than what I could possibly take in the shower. Regardless of this, every single grooming operation I could think of had been carefully and thoroughly carried out before I left that bathroom, and my reward was Gina's absence.",
        "It was just past noon and the remaining clouds of fog I'd noticed outside my bedroom window when I got up were burning off as the sun prepared for an indefinite assault upon the land and all its inhabitants. I pulled the curtains from the sliding balcony door, moving that large plate of glass aside to let the air in. Standing there naked, the breeze coming into my apartment felt great as it cooled bare miffy, but I wanted a drink and I had to get on with my hair and makeup.\n\nA quick trip to the kitchenette preceded my return to the bathroom with a tall, strong glass of vodka and milk. I took my time with my makeup, suspecting that Gina had gone to her apartment to get ready, then maybe down to the kitchen for our brunch.\n\nThis turned out to indeed be the case. I was finished with my face and just getting on my hair when I heard someone come through my foyer. Sure enough, it was Gina with our breakfast and, now that I'd had a chance to get some vodka down my throat, the guilty memories of all the strange cocks that had also been down there recently didn't sting so much. Yes, I dealt quite well as we ate in the bathroom while I continued at my hair. Gina seemed her usual self again as we spoke of nothing in particular before eventually turning to the night before.\n\n\"So, Steven's got a fake ID?\"\n\n\"As I understand, everybody his age does these days.\"\n\n\"He's only three years younger than you.\"\n\nI shrugged with a little smile, holding my curling iron in one hand while loading my fork with hash browns with the other.\n\n\"So, did you two... you know?\"\n\nI'd been keeping my eyes away from hers all morning, learning the techniques that Stevie mentioned, and now I looked her between the eyes in the mirror, seeing her expression. She'd been like this the day before, acting like everything was fine, but a new awareness now picked up on it. She was patronizing me, allowing me to feel comfortable and talkative with her open attitude.\n\nAt the same time, I took note of her attire, remembering that I'd told her to be more liberal in her choice of clothing. She wore a pair of khaki shorts that looked like they came out of Martha Stewart's suitcase, but they did look nice on her and at least they weren't slacks. A bright yellow, short sleeved blouse was left open at the neck, but still buttoned far enough to be called decent. She wore her hair up in a carefree, cool do that kept it off of her neck and chose a pair of tan deck shoes that she'd owned since forever.\n\nI took my eyes away, all this having passed through my mind in an instant, replying, \"If I said that something did happen between us... what would you most want to hear?\"\n\nAs I'd planned, this knocked her off balance, but my laugh only revealed naughty innocence as I settled her double edged worries with a white lie.\n\n\"No, smutty. Me and Stevie never did anything with each other.\"\n\n\" ... (Ahem) Well, what did you do at this bar?\"\n\n\"We talked and stuff. He told me some Burchell family secrets.\"\n\n\"Oh? Any juicy stuff you can share?\"\n\n\"Ummm... Apparently, our grandmother was a very unpleasant person to be around.\"\n\n\"You told me.\"\n\n\"What I told you was told to me by Auntie Kathleen. What Stevie told me was... detailed.\"\n\n\"In what way?\"\n\n\"She used to lock Auntie Kathleen and Sheila in their dark basement for hours on end when they were little, asking them through the door if the monsters had eaten their arms yet.\"\n\n\"Oh my god.\"\n\n\"Really, eh? She also had this demented game where she'd hold a pillow over their faces...\"\n\n\"Holy shit,\" Gina expressed in a low voice, her fork paused in its rise to her pretty mouth. \"That'd explain Sheila's behaviour. So, what ever happened to the crazy bitch?\"\n\n\"Stevie told me she had a heart attack and died,\" I answered. \"Sounds like good riddance, yet I'd wish I had the chance to meet her.\"\n\n\"I'd say the five of you are enough.\"\n\nShe said it lightly, meaning absolutely nothing by it just before filling her mouth with deep fried, diced potato, a simple dish that I knew she was incapable of preparing. Her deceptive attitude was beginning to piss me off and little comments like that, no matter how innocently meant, didn't go over well.\n\n\"Gina?\"\n\nShe looked at me with an encouraging smile and I asked, \"Do you think I've changed since I've been here?\"\n\nShe hesitated, her expression saying so much more than any lie could have, silently screaming an overwhelming, \"YES!\"\n\n\"Uh, you've been different, yeah.\"\n\n\"In what way?\"\n\n\"I don't know. You seem more... You have a different look.\"\n\n\"What do you mean? You're usually a lot more specific than this,\" I countered, rolling the curling iron along my hair to my scalp before reaching for my fork again.\n\n\"Well, it's just that I have noticed a change in you over the last few days or so. You almost seem like a different person sometimes.\"\n\n\"That's silly.\"\n\n\"No. It's in the eyes, like with the rest of your family. Why do you ask, anyway?\"\n\n\"Because you've been treating me differently lately.\"\n\n\"I have?\" she asked, immediately defensive.\n\n\"Yes.\"\n\n\"Well, I wanted to talk to you about it, to ask you if anything was wrong, and... I've been quite concerned about your drinking. I noticed that they drink a lot and you've been drinking a whole lot since we've been here.\"\n\n\"What are you saying?\"\n\n\"Just that... you might want to slow down... you know,\" she diplomatically suggested. \"I don't mean to be a downer, but I'm wondering if all that vodka isn't the reason for why you've been acting so... unlike yourself lately. Like them. Maybe you should just slow down a bit, because you know how you are, right?\"\n\nI didn't reply, having had enough alcohol already to allow me to see things differently as I cleaned my plate.\n\n\"Slutty?\" she prodded.\n\nRepositioning the curling iron, I forced a thoughtful expression to cover my frown until I could force a polite smile to replace that. I straightened in my chair, sticking out my naked chest in a subtle gesture that put her eyes squarely on mine in the mirror.\n\n&nbsp;\n\nSteven\n\nIncredibly, Sheila swallowed every drop of my ejaculation, stroking while she guzzled it all down with her eyes closed, a feat she was quite proud of as she left me with an accomplished smile. I finally got to bed, not cracking my eyes again until twelve-thirty by the bedside clock. The fog was burning off for what looked like a scorcher and I was so sober I almost imploded when I remembered what all happened at the hotel lounge.\n\n\"Oh my fuck. Oh my... fuck...\"\n\n\"Don't panic.\"\n\n\"Oh my fuck!\"\n\nMinutes later, I was cursing the empty whiskey bottle and reaching for the vodka, half hard at the memory of Lacey eating Martina's pussy, the other four men taking turns at Kitten.\n\n\"Fuck, what is wrong with me?\"\n\nI didn't seem to have any answers for that one. I downed some of the vile, clear fluid and began pacing the floor nervously, taking more from the bottle and finally being calmed a little by it and my oldest friend.\n\n\"You've got to stop looking at yourself like other people.\"\n\n\"Shut up.\"\n\n\"Did you honestly think that a life with Kitten will be any less fucked up than a life with Mum?\"\n\n\"You're the one who let's this shit happen. I never would have allowed any of that.\"\n\n\"You're still not getting it. Sheila accepted what she is long ago, and that's why she's so well adjusted about it. Mum's slowly accepting that she's the same way, and now so is Kitten. You have to as well.\"\n\n\"But this shit only happens when you're in charge, I tried pointing out again. \"And, in case you hadn't noticed, Kitten had a lot to drink last night. Stop and think about what she might be feeling right now, sober as hell and wondering 'what the fuck?'\"\n\n\"I told you she'll be okay, but if you're that worried about it, the best thing we could do for her when we see her later is to tell her it's okay.\"\n\nI was about to take another gulp of the vodka, looking for a way out of my guilt, but that would leave my parasite in control again, wouldn't it?\n\n\"Christ!\" I hissed before taking the heaviest drink I could manage without spewing it back up again.\n\nThe matter was settled by the time my parasite left the apartment and, at that point, even I was feeling just well enough to go deal with Ashleigh.\n\n&nbsp;\n\nKitten\n\nI lingered in Gina's mind, feeling her personality before I reset my curling iron and addressed her blank stare.\n\n\"From now on, you'll answer questions directly and honestly.\"\n\n\"Of course,\" she assured.\n\n\"And you'll always do what I tell you, no matter how you feel about it.\"\n\n\"I'll always do what you tell me.\"\n\nI couldn't help but be astounded. I mean, it was really that easy, wasn't it?\n\n\"Gina, how do you feel about me?\"\n\n\"I love you.\"\n\n\"Do you trust me?\"\n\n\" ... Yes. Most of the time.\"\n\n\"When do you not trust me?\"\n\n\"When you're in a position to do something that's not good for you.\"\n\n\"Is that all?\"\n\n\"Uhh, sometimes I get the feeling...\"\n\n\"You get what feeling?\" I prodded.\n\n\"Uhh, like I don't know who you are anymore.\"\n\n\"Really?\"\n\n\"Yes.\"\n\n\"Like when?\"\n\n\"When we argued at home and a few times since we've been here.\"\n\n\" ... Are you afraid of me?\"\n\n\"A little.\"\n\nThis surprised me, more that I'd even ask the question than her answer, and I didn't know quite what to say next as I once again reset the curling iron.\n\n\"Gina...\"\n\n\"Yes?\"\n\n\"Have you been plotting against me?\"\n\n\"No.\"\n\n\"But you haven't been completely straight forward when we speak lately.\"\n\n\"I'm trying to better understand what's going on in your head.\"\n\n\"Why?\"\n\n\"Because I worry about you.\"\n\n\"Why?\"\n\n\"Because I love you.\"\n\n\"I love you too, smutty.\"\n\nShe smiled happily about this, making it hard to be displeased with her, but I had to make sure of something just the same.\n\n\"Um, from now on, just be open with me, alright? Say what you mean and mean what you say. If I don't like it, I'll have you stop. Understand?\"\n\n\"Okay,\" she readily agreed, still smiling. \"You look so nice.\"\n\n\"You look very nice too, but your clothes are still pretty stuffy and boring. We'll work on that later.\"\n\nHer smile was overshadowed by worry and she asked, \"What do you mean?\"\n\n\"Well... I've just been thinking lately, is all.\"\n\n\"About what?\"\n\n\"Stuff. Never mind, smutty.\"\n\nHer worry seemed to turn to light confusion as I watched her in the mirror, resetting my curling iron and finishing my vodka. It was so exciting, knowing that she was under my complete control, understanding that the reason for her standing there was only because I hadn't told her to move yet.\n\n\"Refill, please. Tall glass like this one, half and half vodka and milk.\"\n\n\"That's disgusting,\" she frowned as she took the drink, turning to go do my bidding. \"And you really shouldn't be drinking like that.\"\n\n\"You have one too.\"\n\n\"I really shouldn't, but I'm going to have one too,\" she immediately told me in the same admonishing tone, making me laugh aloud. When she returned with both glasses, her worry was gone, replaced with a curious smile and a question.\n\n\"What was so funny?\"\n\n\"You.\"\n\n\"I'm funny?\" she asked, handing me my beverage.\n\n\"Yeah. Well, not really but... it's complicated. Thanks for the drink, by the way.\"\n\n\"You're welcome. Slutty, I think we should hang out today. We haven't been seeing much of each other and I'm concerned. And I miss you.\"\n\nThis was awesome. She was being totally up front with me and, so far, her obedience was absolute. I was filled with warm and cuddly feelings for her, wishing she knew how much more I loved her when she was like this.\n\n\"Unfortunately, I have to go find Stevie after I leave here, and after that I have to talk to his mummy, and then Auntie Ashleigh. Believe me, I'd love to spend some more time with you today, but this is pretty important family stuff. I hope you understand.\"\n\nShe was obviously disappointed, but she nodded as her eyes fell.\n\n\"Awww, smutty!\" I laughed, eliciting a little smile from her. \"Alright, we'll hang out, but if we meet up with family, you'll probably have to excuse us while we talk, okay?\"\n\n\"Okay.\"\n\n\"And you have to change.\"\n\n\"Really?\"\n\n\"Oh, yeah. From now on, you're going to be dressing a lot different. Y'know something else?\"\n\n\"What?\"\n\n\"I think you and me are going to be getting along a lot better from here on.\"\n\n&nbsp;\n\nSteven\n\n\"Done,\" I reported, dropping into the chair opposite Ashleigh's desk.\n\n\"What's done?\"\n\n\"I brought Kitten up to speed.\"\n\n\"Ohhh,\" she said, interestedly leaning forward. \"How'd that go?\"\n\n\"Since she was already kick started, I naturally assumed she knew what she was doing when I walked in on her, Gina and one of your staff members.\"\n\n\"This sounds juicy.\"\n\n\"It would have been if I didn't put a stop to it. She had Gina stripped down to her underwear with your staff member's dick in her hand.\"\n\n\"So, why'd you put a stop to that?\"\n\n\"Because Gina was spelled, and it was definitely Kitten who did it. Turns out Kitten knew there was something wrong with Gina, had figured out that she'd do whatever she was told and was playing around with her, unaware that she'd actually spelled her.\"\n\n\"Again, why'd you put a stop to it? I told you to leave that alone.\"\n\n\"No. I won't see Gina get hurt.\"\n\nShe said nothing as I went on with the story, but her expression clearly conveyed how she felt about my answer.\n\n\"Anyway, Thinking Mum already clued her in to what we Burchells are really all about, I went ahead and started talking to her about it, soon finding otherwise. That's when I got that she didn't have a clue, so I took her out and explained it.\"\n\n\"Explained it?\"\n\n\"I knew I'd have to put my money where my mouth was, despite what was going on with her and Gina, so I had to go out to get access to some, uhhh... unwitting subjects. Didn't I?\"\n\n\"I wish you'd told me before you did that.\"\n\n\"Well, now you know how it feels. So, I took her to a restaurant, spelled the waitress and told her the basics. I was going to get more into it with her once we got back here, but she had other ideas and, next thing ya know, we're in a dark little hotel lounge with six unwitting subjects.\"\n\n\"What happened?\" she asked, even less happy now with my flippant remark about how it felt to be kept in the dark, but also more interested.\n\n\"We spelled all of them. Had a little party, closed them up and left. Most importantly to you, I gave her the outlines.\"\n\n\"What outlines?\"\n\n\"Most everything I know about our family legacy, how I found out and what can happen to innocent people for being too close to us. Obviously, I left out the part about me and Mum fucking and how that was what kick started me, not to mention her rather bloody history.\"\n\n\"I should say. It's not like she won't find out these things sooner or later, but she and your mother have become very close and I wouldn't want to see that ruined because of bad timing.\"\n\n\"Or a loose railing.\"\n\n\"Excuse me?\"\n\n\"Nothing. You'll also be happy to know that I've encouraged her to stay here in a roundabout way.\"\n\n\"Oh?\"\n\n\"Like I said, I told her about how some people can get hurt on account of us, and I let her know in no uncertain terms that Gina and this boyfriend back home are vulnerable to it.\"\n\n\"Yes, the boyfriend back home... Tell me, have you two slept together yet?\"\n\n\"No.\"\n\n\"I thought you said you had a party.\"\n\n\"Yeah. Well, I guess we're still courting. The Burchell way.\"\n\n\"Uh huh. Well, what happened at this party?\"\n\n\"We had some fun. Just not with each other.\"\n\n\" ... Maybe you'd like to go on up to my apartments after this. I could have her located and sent to you.\"\n\n\"Why your apartments?\"\n\n\"Consider it an offer on my part to help make yours and Kitten's first time... memorable.\"\n\nLooking her directly in the eye, I had to respect her for not putting the Jedi spell on me, but I also saw something in those sparkling dark depths. It was something that told me that accepting her offer to host mine and Kitten's next date mightn't be good for me.\n\n\"I'll think I'll pass.\"\n\n\"Smart boy. You seem to have that quiet way, like Dad did, but once you're comfortable, you have a very mouthy and disrespectful attitude, learned straight from your mother.\"\n\n\"When I start planning fatal accidents, then you can worry about what I'm learning straight from my mother,\" I sighed. \"So, what's next? I'm assuming you're going to be calling another family meeting soon?\"\n\n\"Pretty soon,\" she said in a restrained tone. \"Speaking of your mother, I haven't seen or heard from her all morning; where is she?\"\n\n\"I don't know, I just got up. Did you try her apartment?\"\n\n\"No. I haven't been looking for her, I'm just saying she hasn't been around. Usually, she's out and about and, if I don't see her, I can usually hear her. Little bitch.\"\n\n\"We had a discussion last night,\" I said. \"She might still be tied to the bed for all I know, but I'd assumed she could get out of that.\"\n\n\"Tied to the bed?\"\n\n\"She pissed me off, so I sorted her out.\"\n\n\"Well, finally! I was wondering how much longer you were going to let her push you around. What'd you do?\"\n\n\"Stuff. I forgot to ask her about Kitten, though.\"\n\n\"Come on up and visit me sometime, sweetie pie. You can stay in my guest room and I'll show you some stuff.\"\n\nAs I was getting up to go, I had to give her a smile. I still didn't completely trust her, but I just couldn't help liking her as I dodged the second invitation.\n\n\"Why don't we just invite you sometime instead?\"\n\n\"You chicken,\" she accused with a sly smile. \"Kitten would take me up on that offer.\"\n\nI laughed, was about to give comment over my shoulder as I moved for the door, but I stopped so fast I almost upended. Turning around, I fixed her with a deadly serious look as she gazed back with an innocent, encouraging smile.\n\n\"Something else I can do for you, sweetie pie?\"\n\n\" ... You... You did it. That's why you didn't care that Mum kick started Kitten, because it wasn't Mum, but you! What the fuck, Ashleigh!?\" I demanded.\n\n\"It had to happen sooner or later, and the sooner the better. Since it wasn't very likely that Sheila would be doing it, who better but me as the head of the family to open her beautiful eyes?\"\n\n\"Well, thanks so god-damned much for telling me! And why didn't you just go ahead and bring her up to speed!?\"\n\n\"Because I wanted you to deal with her.\"\n\n\"Why!?\"\n\n\"The same reason I wanted you to stand up to your mother. I wanted you to take command like Dad couldn't. You're no good to any of us if you can't and, had I told you what to do, it would have defeated the purpose, wouldn't it?\"\n\n\"That is so retarded!\"\n\n\"No it isn't. You need to learn to trust yourself more.\"\n\n\"I really don't like how you operate, Aunt Ashleigh. Not at all.\"\n\n\"Everything I do is for the overall and eventual betterment of this family. That includes you and, once we all get together again, we can start talking as a family. All of yours and everyone else's questions will soon be answered, and then you'll see things differently because there won't be any need for the cloaks and daggers. I promise. All you have to do is help me convince Kitten and your mother to give Sheila a chance, and be with Kitten through this change in her life, the both of you loving and learning together like you should be.\"\n\n\"How fuckin' romantic. What about Mum?\"\n\n\" ... Tell her to be open to me, I suppose. For the most part, just being able to sit down and talk about it as a family is the biggest thing we can do for her right now. Oh, stop looking at me like that!\"\n\n&nbsp;\n\nKitten\n\nI'd decided to wear my favourite under bust vest, a smart gray one with a pleated, matching skirt and one of Gina's black cammies. I didn't bother with stockings and threw on my ball breakers, thinking that maybe it was time to expand my shoe horizons.",
        "\"Like my outfit?\" I asked.\n\n\"Yes,\" Gina admitted. \"It's a bit saucy for wearing out, though. I can kind of see right down that cammie.\"\n\n\"That's why I'm not wearing a bra,\" I replied, taking a drink.\n\n\"Oh my god, slutty. Do you really think that's wise?\n\n\"Just wait till you see what you're wearing. (Giggle)\"\n\nShe came back in wearing it fifteen minutes later. My hair finally finished, I had to hand it to myself as I looked in the mirror. It wasn't often that I put that much time and effort into my makeup and hair lately, but I'd done a pretty good job.\n\n\"This one?\" she asked, looking down at the tight, short sleeved, pink pullover with a buttoned V-neck.\n\n\"Yeah. Get rid of your bra.\"\n\n\"Oh, but... Well, alright.\" She doubtfully agreed.\"\n\nWhen she was finished, her perky boobies were perfectly outlined in the close fitting top, and I instructed further, \"Unbutton it. All five of them.\"\n\n\"But slutty... Oh, alright,\" she sighed, unbuttoning them for me.\n\n\"Now, those awful shorts.\"\n\nStarting with the top button, she asked, \"What should I change into?\"\n\n\"Nothing.\"\n\n\"Uh?\"\n\n\"Just take them off.\"\n\n\"But... won't I need my shorts?\"\n\n\"No.\"\n\n\"This shirt is a bit long, but I don't think it's that long.\"\n\n\"We'll see.\"\n\n\"Well... okay. But this doesn't seem like a very good idea,\" she informed, pushing her shorts down her hips.\n\n\"I don't care.\"\n\nI finished off my drink, grinning at her as she tried to pull her top down to cover her bum. I stared at her sexy black panties, watching her worried expression over the limited success she was having with her top. She couldn't completely cover her bum, but managed to cover herself in front, almost exposing her boobies by stretching her top down far enough to do so. When she let go, it immediately rode up.\n\n\"Oh my god, slutty. Everybody will see my panties right through this,\" she fretted.\n\n\"Maybe you should get rid of them too.\"\n\n\"Oh god, please no.\" she almost plead while unconsciously tugging down on her top. \"This top is so short...\"\n\n\"(Giggle!) I know. Put on these pumps and let's get going, we'll think about your panties later.\"\n\n\"Oh my god,\" she fretted again as she stepped into the black, open toed, four inch heels. \"Do you know how these will make me look in this top?\"\n\n\"Yeah. Hurry up.\"\n\n\"But, we look like a couple of little tramps,\" she worried.\n\nI only giggled, watching as she checked out her adorable little nipples. When she adjusted her boobies, I felt miffy starting to heat up.\n\n\"You and this fascination you have with dressing me in pinks and yellows,\" she complained.\n\n\"I keep telling you, you look great in pinks and yellows. Especially pink. C'mon, I wanna get going.\"\n\n\"This really goes against my better judgment.\" She told me seriously.\n\n\"Whatever, let's go.\n\nI loved it. Watching her eyes dart, her face flushed with embarrassment turned me on more and more as we walked to the opposite wing and, when we ran across a staff member, I just couldn't resist.\n\n\"Excuse me,\" I hailed.\n\n\"Yes, Ms. Burchell?\" the suited pretty boy in his late twenties asked.\n\nI answered him by pulling my skirt up to show him my white cotton undies with the red hearts and lace edging.\n\n\"Slutty!\"\n\n\"Do you like my panties?\"\n\n\"Very nice, Ms. Burchell,\" he replied with a sincere smile.\n\n\"Smutty, show him yours.\"\n\n\"Uh-! But-\"\n\n\"Do it.\"\n\n\" ... Oh my god...\" she whispered as she pulled her top up over her hips.\n\nShe was right about what those shoes did for her, alright and I giggled as I stared along with the staff member.\n\n\"Look at that sexy gap between her legs,\" I noted, reaching across and giving it a rub with my finger.\n\n\"Slutty!\"\n\n\"(Giggle!) Touch it...\" I told him.\n\nI removed my hand and his took its place, causing Gina to inhale sharply, looking down in disbelief as she held the so-called dress aloft for him. However, there was no mistaking the excitement in her features, her little gasps of affront not entirely pure, any more than my intentions.\n\n\"Ohh! Ohhh-hh, Kat...\"\n\n\"Spread your feet, sweetie pie. Oh yeah... more. (Giggle)\"\n\nShe jerked to his hand, looking at me with the most exciting expression on her face while she just let it happen, and that's when I made up my mind.\n\n\"Take her panties off.\"\n\n\"Oh, K-kat... I don't know ab- a-! ohh, nooooo...\"\n\nShe watched them being pulled down her slim hips, exposing her dark pubic hair before he pulled them right to her ankles. Almost as an afterthought, she quickly pulled her dress down, looking at us both as though wondering if we'd seen anything.\n\n\"Thank you,\" I told the staff member.\n\nHe smiled at me and left, hardon bobbing in his pants as we both watched him, Gina in a mild state of shock while I tried not to laugh.\n\n\"Can- can I pull my panties up now?\"\n\n\"No, sweetie pie. Leave them here.\"\n\nShe stepped out of them and got walking with me again, looking back to where they lay on the floor behind us in doubt a couple times while pulling down on her dress again.\n\n\"Are you sure I shouldn't have my panties?\"\n\n\"Gina... The thing is that there's a good chance at least one cock is going to find its way up that little dress, and I don't want your panties in the way. Get it, baby?\"\n\n\" ... Oh....\"\n\n&nbsp;\n\nSteven\n\nShe exited her apartment wearing a black string bikini, rainbow flip-flops and a red towel over one shoulder while I was calling at Kitten's door. With a quick smile, my luscious little aunt ducked back inside her apartment while I waited. Getting no answer, I turned and walked down the corridor until I came to her door, still opened with her standing just inside the threshold with the smile that Kitten and Mum had warned me about.\n\n\"Not home?\" she asked.\n\n\"No,\" I answered without being able to help smiling back.\n\n\"Her loss is my gain. C'mon in.\"\n\nI could only laugh a bit, pretty sure she was joking since she knew how I felt about her estranged daughter.\n\n\"Seriously, c'mon in. Take your pants off.\"\n\nI almost did.\n\n\"I can't,\" I told her instead.\n\n\"Because you're saving yourself for her. Do you know how absurd that is?\"\n\n\"It's not absurd at all.\"\n\n\"You two little sluts just went out and fucked a bunch of strangers in front of each other!\"\n\n\"We're not sluts,\" I refuted, feeling a little offended at that.\n\n\"Oh god, you really are just like your mother. Fine, what are you doing?\"\n\n\"Nothing now.\"\n\n\"Yeah, you're telling me, kid. I was on my way down to the pool and, since I obviously have nothing better to do with you, I guess I still am,\" she sarcastically answered, stepping back out into the hall and closing her door.\n\n\"Want some company?\"\n\n\"I don't know. Can I at least come to your apartment with you and watch you get changed?\"\n\n\"Oh my god, Sheila.\"\n\n\"What?\" she asked, following me there.\n\nI shook my head and laughed, this inviting a hard slap on the ass and a short laugh of her own, but she mostly behaved herself while I got changed and during the walk down to the pool.\n\n\"I really have to hand it to Kathy,\" she said, looking at the trunks her sister had bought for me earlier that summer. \"She might be a hypocrite, but she sure as hell has style.\"\n\nI rolled my eyes and flumped down on one of the loungers, watching Monique approach. Sheila followed my gaze and stared at the red sling wearing, dark, French beauty.\n\n\"Good afternoon, Sir, Ma'am,\" she greeted in accented English. \"May I please help you?\"\n\n\"Oh my god, you're fuckin' gorgeous,\" Sheila told her.\n\nMonique could only smile at this compliment, and when Sheila boldly uncovered her ample, bouncy breasts, she only kept on doing that. Even when Sheila's hand went down the low riding crotch of the sling, Monique twitched, but only smiled politely. A minute later, I shook my head again as Sheila forced the younger woman down on the lounger beside mine with a naughty giggle. She was all over her and it wasn't long before Monique was responding in kind, the both of them making out right in front of me like they were long lost lovers.\n\n\"Jeeez, Sheila. ... Leave a little for someone else, huh?\"\n\nLetting Monique's bare nipple out of her mouth with a slurp, she sleazed, \"Get your cock out and join us, kid.\"\n\n\"You never quit, do you?\" I laughed.\n\n\"Nope.\"\n\n\"Uh huh,\" I said with a knowing smile as I got up again, \"I'm taking a swim. I'd like a double whiskey and water with ice if she ever gets the chance.\"\n\nSheila took her super horny fun time while I did several lazy laps, taking breaks to watch them every so often and staying hard the whole time. She certainly had her own way of making that happen, but so did the other women in the family. Shortly after a frenetic, squawking orgasm for Sheila, I watched as Monique spread sun-block over my now topless aunt's body.\n\n\"I love your tits, Aunt Sheila.\"\n\n\"Thank you,\" she returned, all smiles.\n\n\"You look like the triple X Elf Queen,\" I told her from the water at the edge of the pool.\n\n\"What's that mean?\" she demanded with a smile. \"Is that some kind of comment on my height?\"\n\n\"Would you prefer to be the Munchkin Queen?\" I dared with a smile.\n\n\"Shut up!\" She told me, looking at Monique and laughing. \"Do you hear that little puke? I should punch him right in the neck!\"\n\nMonique laughed along with her, but offered no comment. Sheila fixed her challenging smile on me as I got out of the water, but only watched my midsection as I approached my lounger.\n\n\"Take them off,\" she said.\n\n\"What? No!\"\n\n\"Don't be a candy-ass!\"\n\n\"I'm not a candy-ass, I told you that me and-\"\n\n\"Oh god, yes, yes, yes! I promise I won't ruin you for your precious Kitten, just take your fuckin' trunks off!\"\n\n\"Alright!\"\n\nSeconds later, she was smiling at the hardon lying against my belly.\n\n\"Monique, honey, you'd better make sure that doesn't get sunburned. (Giggle)\"\n\n\"Oh, very funny,\" I said with a wry smile.\n\n\"Well, it will. Don't be stupid, tell Monique to put some sun block on you.\"\n\n\"I was going to.\"\n\n\"No you weren't. Monique, would you please spread some sunblock on my stubborn nephew? And don't forget his cock.\"\n\n\"Yes, Miss Burchell,\" Monique replied, getting started with an eager grin as I shook my head at Sheila.\n\n\" ... You're weirdly like Mum, but not.\"\n\n\"Ha! Well, we were tight once, you know?\"\n\n\"Yeah.\"\n\n\" ... Crazy fuckin' girl. Did she tell you she had a pair of brass knuckles?\"\n\n\"Mum? No, but I can't say it surprises me.\"\n\n\"It's true. She used them to sucker-punch the guys that fucked me. She couldn't make me limit myself to at least one at a time, so she tried to make the prospect of fucking me something the guys in the neighborhood didn't want any part of. God, I used to get so mad at her when she'd do that shit.\"\n\n\"Didn't she get into trouble?\" I asked. \"That's a serious assault charge.\"\n\n\"She'd threaten them with telling the cops it was rape. Everybody knew we stuck together and that she ultimately called the shots between us, so what else were the guys going to think? I hated it because it was always consentual and they didn't deserve that shit. Plus, they wouldn't fuck me anymore.\"\n\n\"She loved you.\"\n\n\"I know.\"\n\n\"She still does.\"\n\n\"I know that, too. Too bad she also wants to beat my face in now.\"\n\n\"If she really wanted to do that, she'd have done it by now.\"\n\n\"Normally, I'd agree,\" she sighed.\n\n\"So, what's different now?\"\n\n\"Nothing. This is Kathy we're talking about. She's been known to bide her time.\"\n\n\"I'm still picturing Mum running around with brass knuckles and assaulting people.\"\n\n\"Well, back then, she was actually pretty quiet a lot of the time and people would mistake her for being shy, but that wasn't the case at all. She just liked to study people, especially while they were otherwise engaged, like while talking to me. Half the time, I'm sure she was plotting their possible downfall, should the need arise.\"\n\n\"She told me she wanted to kill Marie.\"\n\n\"Yup. And she would have failed.\"\n\n\"You think?\"\n\n\"I know. Your mother can be an evil little bitch in ways you can't imagine, but she doesn't compare to what mine was. Mum was a lot more dangerous than even Kathy knew.\"\n\nDuring a pause, she watched Monique's hands as they came ever closer to my hardness, suddenly coming out with, \"I have this attraction to her. I always have, but now it's different.\"\n\n\"Really?\"\n\n\"Mmm. ... It's a bit like what you've described between you and Kitten, but... I wonder if she feels it?\"\n\n\"You have to elaborate,\" I said, my mind coming up with all sorts of interesting imagery.\n\n\"Heh. Well, I just really want to be with her. In her arms, she in mine. With our pussies grinding and those big titties... her lovely eyes...\"\n\n\"You should warm up and see if she feels the same way,\" I advised.\n\n\"Yeah, right,\" she laughed.\n\n\"I've got a hunch she does.\"\n\n\"Why?\"\n\n\"I just du- uuhhh. Oh god, Monique. Don't forget my balls, okay?\" "
    ],
    "authorname": "Ameaner",
    "tags": [
        "incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sera-ch-13"
}