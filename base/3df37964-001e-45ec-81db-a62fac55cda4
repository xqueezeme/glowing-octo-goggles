{
    "title": "Alex's Gifts Ch. 02",
    "pages": [
        "New author here, feedback is welcomed and appreciated.\n\nThis is the second chapter of a much longer story that will span multiple categories. Fair warning, the bulk of it will end up under Incest/Taboo due to themes that will be introduced in the next couple of chapters.\n\nI have at least another twenty chapters in various states of completion, and more planned. If anyone would like to assist with editing, I'm more than willing to accept help.\n\nThanks & Enjoy.\n\n~~~~~~~~~~~~~~\n\nBursting in the Bathroom\n\nAlex shook off the final remnants of his deep sleep and contemplated what the new day would bring. It was Sunday and Lily's friends were probably still around. He assumed they would be leaving after breakfast and hoped to avoid any awkward encounters. But he felt a difference, an excitement, like he wanted to be around the girls again and wasn't as scared of what might happen. It was strange, uncharacteristic. He chalked it up to the lingering effects of what Carrie had done to him on the couch the night before.\n\nAlex definitely needed to see Ben. Carrie suggested that she played some part in his friend's change of plans that left him in a room full of beautiful girls intent on exposing themselves. He could only hope his buddy's night was as eventful as his own.\n\nBladder close to bursting, Alex rose wearing only his boxers. He was still coming down from a massive case of morning wood but figured he'd be able to make it around the corner to his bathroom undisturbed. He was wrong.\n\nThe door was open so he charged right through, intent on relieving pressure. Nobody ever used his bathroom, it was an unwritten rule of the house. So he was suitably surprised when Sam let out a squeal and quickly wrapped herself in a towel. Alex saw a flash of red lace and white skin. It wasn't much, but it was enough to send a little extra blood in the wrong direction. Alex saw Sam stare at the prominent tent in his boxers.\n\n\"Oh shit, I'm sorry, I didn't think anyone would be in here,\" Alex said, looking quite agitated and embarrassed.\n\n\"Oh, hi Alex, it's ok, you just startled me a little bit.\"\n\n\"I'll let you finish up, sorry again for barging in,\" Alex said quickly with his eyes on the floor, intent on relieving the pressure in his bladder.\n\n\"No wait, I want to ask you something,\" Sam said hurriedly, shifting her weight side to side anxiously.\n\n\"What's up,\" Alex replied as he met her eyes.\n\nSam blushed and looked down. \"Did you enjoy our little show last night?\"\n\nAlex was caught off guard. He stammered, \"Y..y..yes, I did.\"\n\n\"Good, I thought you would. Carrie had the idea but everyone was excited to join in. Except for Lily, of course, we didn't want to go there.\" She paused and smiled at Alex, \"You know, I think you're pretty cute.\"\n\n\"Th..th..thanks,\" Alex managed to say as he looked up at Sam.\n\n\"Shut the door, I have something to show you,\" she said softly.\n\nEven though his bladder was screaming, Alex did as he was told. If last night taught him anything, it was to do what the pretty girl said.\n\nAlex shut the bathroom door and turned just in time to see Sam drop her towel. Holding out her arms she asked, \"Well, what do you think?\" with a big grin, naked except for a pair of red lace boy short panties.\n\n\"Uhh, wow Sam,\" Alex mumbled. He instinctively focused on the front of her panties and delighted at how the fabric hugged her little curves. He perked up when the feelings from before returned. With newfound confidence, he asked, \"Can I see the rest? I mean I was halfway there last night.\"\n\nSam chuckled. \"Why not,\" she shrugged. With a flash, her hip-hugging panties were on the floor.\n\nAlex took a moment to soak in Sam's naked body. Her breasts were barely pronounced, capped with small dark nipples that stood at attention. Her hips and legs were narrow but shapely, and he could see daylight between them just below the twin arches nestled in her center. He enjoyed how Sam's shallow curves fit so well with her tall lithe body. She was shaved except for a very narrow strip of trimmed hair that marched up her front. Alex liked this very much.\n\n\"Uhh, wow,\" was the best he could muster once again.\n\nSam turned around and showed her best feature, the tightest bubble butt Alex had ever seen. He'd spent more than one night alone wondering what it would look like in the flesh. He was speechless. Sam then bent at the waist and gave him a very explicit view of her backside. Her thin pink petals parted slightly and he could clearly see the entrance of her tunnel as the limber brunette placed her palms on the tile floor. Alex wanted to touch, but he was too bewildered to make a move. \n\nSam stood up straight and turned back around. One look of Alex's dumbstruck face was all she needed. \"I take it you like what you see. Good, I like what I'm seeing too,\" she said, motioning to his rising underwear. Alex's bladder roared, the combination of having to pee and a growing erection had him on his tippy toes.\n\n\"Uhh, sorry, I really need to go,\" Alex winced and doubled over. He hopped in urgency which caused his cock to flop and bounce right out of his boxers. He grabbed it tightly, partly in an attempt to hide it from Sam, but mostly to stem the unrelenting pressure pushing on his insides.\n\n\"Oh, sorry!\" Sam said. \"Hey, do you mind if I try something I've always wanted to do?\" she added inquisitively.\n\n\"Sure, whatever, just move out of the way,\" Alex said hurriedly, his situation reaching a critical level. He stepped quickly to the toilet and dropped his boxers, no longer worried about hiding himself. He stood with his dick in hand pointed down at the toilet but found his pulsing erection made it difficult to start the flow.\n\nSam was in awe of Alex's size. It was definitely bigger than the few she'd seen and way thicker. She stepped carefully behind him as he struggled to start, intent on what she was about to try. She reached an arm around Alex's waist and cradled his shaft. Alex flinched but was entirely too focused on relieving the pressure to object. He dropped his hand and let Sam take full control.\n\nWhen the flow started he was in heaven. The combination of release and having yet another gorgeous girl handling his cock was almost too much. Alex stopped paying attention to where he was pointed, he just closed his eyes and let go.\n\n\"Oh shit,\" Sam exclaimed as she sent the initial surge spraying off the edge of the bowl. She quickly corrected his course, aiming more towards the center. \"Neat!\" she squeaked as the heavy stream of liquid crash into the bowl. \n\n\"You're getting an advanced lesson,\" Alex gasped. \"Going when I'm like this is not ideal.\" Although he did admit it was much easier and more enjoyable with a third hand. With both of his free he could rest against the wall over the toilet. He spread his legs, leaned over, and arched his back to steepen the downward angle, letting gravity and Sam do the rest.\n\nSam started moving her hand along his shaft, making sure it stayed pointed into the bowl. She was surprised by the force of the flow coursing under her fingertips. Carefully creeping up and down his length, she lightly brushed his balls with her pinky finger. She wanted nothing more than to wrap her hand around his tip and squeeze but didn't dare disrupt the stream surging out of it.\n\nAlex was acutely aware of Sam's meanderings as she took half a step forward and pressed her naked body onto his. He could feel prickles along his backside as her trimmed hairs brushed against him. She leaned into him tightly until he could sense the heat between her legs. It was a peaceful feeling, like he was being gently cradled in multiple places.\n\nAs the stream began to slow to a trickle Sam dared to slide her hand up to the head of Alex's length. She felt warm wetness as she ran her fingers around his glans. Alex twitched in pleasure.\n\nSam never felt a guy from this direction before. This must be what it feels like when he jerks off, she thought. From behind she reached her free hand between Alex's spread legs and grasped his balls gently, her wrist resting in the heat behind them. She stepped back slightly and caressed Alex's smooth backside while slowly stroking his cock with the other. She dared dive deeper and licked a finger, sliding it down his lower spine and into his crevice.\n\nAlex flinched when Sam's narrow finger traveled into his cleft. He held steady as her grip on his shaft tightened while the final spurts of his stream hit the back of the bowl. He shuddered and felt immense relief, a serene relaxation fell over him as Sam continued to move her hands along his body.\n\n\"Wow, that was a lot!\" Sam said in a low voice. Alex could only nod. She'd never had this level of control over a boy's body before, it was exciting and educational. Tempting Alex's limits, Sam slid her slippery finger further down his crack. Once she hit the center of his warmth she pushed slightly.\n\nAlex lifted his head and let out a short yelp. Sam continued pushing and slid her middle finger into his tight ring. Her other hand picked up the pace, stroking the length of his dripping shaft and curling around his slick head. She slowly worked her slim finger to the second knuckle and then gently pulled it back out of him.\n\nFor the second time in as many minutes, Alex released a pent-up flow into the toilet. Sam felt his first spasm and quickly pushed her finger back into his heat as he relaxed between contractions. She felt him clench and then saw a thick milky rope shoot from the tip of his cock. Wave after wave, Sam sensed Alex's shaft twitch and his tight ring squeeze her finger. Fascinating, she thought.\n\nFinally, he let out a long sigh and moved to stand up straight. Sam stepped back and waited for him to turn around.\n\nWhat the fuck is going on? Alex thought. Twice in two days. This can't be real. It's certainly not innocent either. What Carrie did with his spunk, what Sam just did with her finger. Yesterday the best he hoped for was to be left alone in his office so he could jack off to Japanese panty porn. Something had changed.\n\nHe turned to face the naked Sam and grinned. \"That was amazing. Thanks.\"\n\nSam smiled sheepishly, \"No problem, I'm sorry if I startled you. I had a few things I wanted to try.\" \n\nBefore Alex could respond she jumped to the sink and washed her hands. Alex again admired her tight round ass, and how it jiggled stiffly as she bounced across the bathroom. She finished cleaning her hands and picked her towel up off the floor. \"Consider us even for barging into my bathroom.\" With a curt nod, she wrapped the towel quickly under her armpits and pranced out of the room.\n\nAlex shut the door and sat on the toilet, head in hands. He needed to take a shower. He needed to talk to Ben. He needed to understand what the hell was happening. There's no way this was reality. He stood and stepped into the shower and tried to let the water wash away his confusion. Sam had never been so direct. His own actions startled him, too. Nothing was making sense.\n\nWhen Alex eventually stepped out of the shower, he noticed Sam's red lace panties on the floor. He quickly picked them up and pulled the gusset to his face. Inhaling deeply, he let out another long sigh as her scent filled his mind.\n\nAlex dried off and bolted across the hall to his bedroom. He stashed Sam's panties in an empty shoebox under his bed and got dressed. He checked his phone and confirmed Ben didn't try to reach him while he was indisposed. No word had come from his waylaid friend and he started to worry.\n\nAfter taking another fifteen minutes to try and clear his head, Alex checked his email and tidied up his room. The smell of bacon cooking downstairs filled his room and his stomach rumbled. Now or never, he thought, as he headed for the stairs. He was no longer fearful of another encounter with his sister's friends, but he was still wary of what they might do to him. With Lily still in the house, the potential for extreme embarrassment was dangerously high. He couldn't afford to get on her bad side again, she was notoriously short-tempered these days.\n\nAt the bottom of the stairs, Alex noted the aftermath of last night's festivities had been cleaned up. Blankets and pillows were put away and the couch was back in its normal spot. The pack of scantily clad girls had shrunk. His sisters Lily and Casey were in the kitchen, along with Carrie and the twins, Becky and Fiona. Casey was standing in front of the stove, she turned and said, \"Morning Alex, breakfast will be ready in a minute.\"\n\n\"Heya squirt,\" said Lily. Carrie snickered at her choice of words. She was dressed in hip-hugging jeans and a tight t-shirt. Her curly red hair was a bit of a mess but Alex found her irresistible nonetheless. The other three girls were still in their outfits from last night. He could almost see past the top of Fiona's thigh as she sat perched high on a stool sitting at the raised bar in the kitchen. He shifted his gaze towards Becky and he wondered if she ever put her panties back on.\n\n\"Morning,\" Alex responded flatly, and shot a glare Lily's way. He wasn't in the mood for her shenanigans this early in the morning. Plus he just got done messing around with two of her closest friends. He wouldn't play that card, but it gave him a feeling of superiority. He knew something she didn't; something he imagined would cause her no end of grief if discovered.\n\nAlex smiled at the redhead, \"Hi Carrie,\" he said. \"Fiona, Becky, good morning,\" he added, nodding at the pair of blondes.\n\n\"Hey Alex, sleep ok?\" Carrie asked.\n\n\"It took a while to get tired, but once I went down I was out like a light,\" he said. Carrie smiled knowingly and left it at that.\n\n\"Must have been the movie,\" Becky teased. \"All those beautiful women running around with barely any clothes on. You must have been all worked up, poor thing.\" Fiona giggled then glanced warily at Lily.\n\nImages of Becky's panty-clad ass and bare puss ran through Alex's mind. Followed by flashes of her pink folds, wet and slick and stuffed with Sam's fingers. He began to stiffen and moved urgently to a seat at the kitchen island across from the two busty blondes.\n\n\"Uhh yeah, that might have been it,\" he said sheepishly. \"Where's Sam? And Natalie?\" He didn't get a chance to say goodbye to Sam after she bolted out of the upstairs bathroom. And he was especially looking forward to basking in Natalie's exotic beauty again.\n\n\"Sam practically sprinted out of here before you came down. Natalie and Lynn left a half hour ago,\" Carrie said. \n\nDid she know what happened upstairs? He doubted it but would put nothing past Carrie after last night.\n\nCasey served a breakfast of scrambled eggs, toast, and bacon. Alex devoured his plate, famished after his morning exercises with Sam. He kept running through the scene in his head. Him, propped against the wall over the toilet, in ecstasy as his strained bladder emptied into the bowl. Sam nestled behind him, hand around his hard shaft. Her other hand sliding down his backside. He never imagined he'd enjoy where she stuck her finger. He didn't think girls would want to go there, but what did he know? Alex's understanding of the opposite sex had been shattered in the past twelve hours. He strained against his thin gym shorts but was safely hidden under the table, once again trapped in a room full of beautiful women by his temperamental prick.\n\nAfter they'd finished eating Casey began cleaning up the dirty dishes. She turned to Alex and said, \"I talked to a friend who works at the YMCA on Friday. She said the pool is looking to hire a couple new lifeguards, I thought it sounded like something you'd be interested in. At least it would get you out of the house and away from your desk,\" she said smiling.\n\nCasey was a year younger than Alex, less than a week from high school graduation. He absolutely doted on her, she could do no wrong in his eyes. Her complexion was light, lips full, with mousy brown hair that just touched her shoulders. She was petite, under five feet tall, and her lithe body was well toned with feminine muscles. She was a gymnast and a darned good one. With their mother gone traveling so often now, Casey slid naturally into the role of keeper of the house and seemed to take pleasure in the added responsibilities. Her bright demeanor and joyful attitude never failed to cheer Alex up, unlike their older sister. \n\n\"That sounds like a great idea. Have any more details?\" he asked enthusiastically.\n\n\"All I know is training starts a week from tomorrow. I'll figure out who you should call for more info,\" Casey said.\n\n\"Thanks, Case,\" he said smiling at her, already feeling better about the day.\n\n\"I suppose I should head home,\" said Carrie. \"Goodbye everyone, and thank you for the wonderful evening.\" She turned and smiled at Alex as she finished the sentence. He wanted to get up and give her a hug and smell her strawberry sweetness, but he knew the chub in his shorts would betray him.\n\nA chorus of goodbyes came from the kitchen as Lily walked over and wrapped her arms around her best friend. Alex watched in surprise as Carrie's hand slid down the back of Lily's pajama bottoms and squeezed. She winked at him over his sister's shoulder, out of view of the other girls. Another private show courtesy of the enticing redhead. Now it'd be at least another ten minutes until he could get up.\n\nLily announced she was going to take a shower upstairs while Casey was busy doing dishes and tidying up the kitchen. That left him alone and seated across the bar from Becky and Fiona, neither of whom appeared to be in any rush to get up. There's no way he'd escape unnoticed by the two stunning blondes, he wagered they were hoping he'd try anyway.\n\n\"I'm sure you two get asked this all the time, but are you twins?\" Alex inquired, figuring he might as well attempt a little small talk.\n\n\"Yep!\" replied Becky perkily.\n\n\"Fraternal,\" added Fiona.\n\n\"So we look more like sisters, but we're the same age,\" Becky said. Alex couldn't see many differences between them, but his attention was focused on certain specific characteristics. They both had straight blonde hair, styled the same, and full pouty lips. Alex guessed Fiona was a little taller, but not by much. Their most impressive features were covered by the loose fitting nightshirts they both wore. He saw them moving around last night, obviously free of additional support, and he knew they had to be massive. \n\nFiona immediately noticed Alex's gaze wander. She turned and whispered to her sister who responded with a nod and a wicked grin. \n\nAlex was oblivious, lost in the thought of what lay beneath those two cotton shirts. Then suddenly he found out. In unison, Becky and Fiona lifted their nightshirts to their necks and exposed their glorious tits to the open air. Alex's jaw dropped, and the twins giggled, causing their ample bosoms to twitch and bounce in delight. He took several moments to visually explore the four prodigious mounds. \n\nNeither girl's breasts had any amount of sag, surprising for their size, but not their age. Fiona's were definitely larger. Big round teardrops that arched dramatically from her chest into two perky cones. She had large pale areolas and nearly invisible nipples. Alex was intrigued. He shifted his gaze to Becky. Her breasts were identical in proportions to Fiona's, albeit a tad smaller. He noticed a couple beauty marks scattered across her skin and then spotted another significant difference between the two. Where Fiona's nipples were nearly imperceptible, Becky's stiffened into prominent gumdrop-sized points circled by small brown areolas.\n\nAlex broke his gaze and frantically glanced around for Casey, again fearful that his perverted fun would be discovered. Becky and Fiona lowered their shirts and Fiona said, \"Don't worry, I saw her go outside. We have you all to ourselves.\" She grinned playfully. ",
        "Becky grabbed her breasts through her shirt and squeezed them together, rolling her thumbs and index fingers over their stiffened crowns. \"Did you find the gift I left for you yet?\" she asked with a foxy smile.\n\n\"Uhh, what gift?\" Alex stammered.\n\n\"Silly boy,\" Becky said while shaking her head. \"I know you noticed I was missing something last night.\"\n\nHer panties! They must still be in the bathroom.\n\n\"You're such a slut, Becky,\" Fiona said in a low voice.\n\n\"Maybe I am, but so are you!\" Becky countered. The two girls started giggling, their matching full lips quivering seductively.\n\n\"I have an idea,\" Becky said. \"Fiona, why don't you take Alex on a little treasure hunt. I'll stay here in case someone comes looking for you.\"\n\nTreasure hunt! Here we go again with their games, though Alex. But the chance of finding Becky's hidden panties was enough motivation for him to risk it.\n\nFiona's eyes widened in excitement. \"Great idea! Alex, let's go!\" she said as she stood quickly and spun towards the bathroom hallway. Her shirt lifted as she twirled and Alex caught another glimpse of the white panties stretched tightly across her ass. He reached under the table and down his pants and pulled his stiffness under the waistband of his shorts. It was a futile gesture, he knew the weight of his prick would eventually win out over the frail elastic band.\n\nAlex stood up but stayed slightly hunched over, trying to keep his aching cock at an angle that wouldn't immediately pop out of his shorts. He shuffled past a giggling Becky and was rewarded with a slap on his butt. He jumped, his shorts almost immediately losing the battle, and then continued awkwardly after Fiona into the bathroom. She closed the door behind him and grinned. \"Ok Alex, let's see what you can find!\"\n\nThe only place the panties could be hidden was under the sink. Alex checked the top drawers first but found nothing. He then switched to the bottom cabinets, pushing aside first aid kits and bottles of various cleaning and bathing supplies. Down on his hands and knees, he stuck his head deep into the darkness. A hand slid softly down his back, then it pulled away and landed with a whack against his upturned backside. Alex yelped and banged his head hard against the wooden underside of the cabinet. What is with these girls and my ass? he pondered while grimacing in pain.\n\nFinally, he spotted Becky's black cotton panties balled up in the farthest corner. He grabbed them triumphantly and stood quickly. Too quickly. The waistband let loose and Alex's rigidity slipped down into his shorts, now pointing vulgarly in Fiona's direction. He rubbed his sore head and admired his prize, so distracted that he was not the first to realize what had happened.\n\nFiona let out a little gasp and brought her hand to her mouth. \"My goodness Alex, I had no idea. I can't believe you've kept that monster hidden.\" With her free hand, Fiona reached out and wrapped her hand around the end of his bulge. She tugged briefly, pulling the slick polyester fabric along his rippling hardness.\n\nAlex hopped in surprise but quickly surrendered to Fiona's exploration. Turning his attention back to his prize, he could see pale smudges in the gusset as he pulled the black panties up to his face and inhaled. The scent was still very strong, Becky must have been quite excited before she took them off last night. He breathed in bitter earthy scents as he spread the fabric across his face, enjoying how soft it was.\n\nFiona watched Alex while he played with her sister's dirty panties. She continued weakly stroking him over his slick shorts but was becoming more interested in how he was handling the spoils of their short treasure hunt. \"Wow, you really like that, don't you?\"\n\nAlex was lost in space, unable to stop his depravity. He nodded vigorously towards Fiona with the cotton panties now half stuffed in his mouth and spread around his nose.\n\n\"Wouldn't you rather handle a pair that is still being worn?\" she asked as she used her free hand to lift her shirt above her waist. \"Go on, take a good look,\" she said encouragingly.\n\nAlex shifted his focus to Fiona as she stepped back towards the door so he could admire her full form. Her thighs were rounded, not to the extent of Carrie's, but more filled out than Sam. Her white panties rode perfectly along her hip bones and contoured down through the creases between her upper thighs and hips. His eyes followed that line to her mounded center where he could see wavy light colored hairs poking out from beneath the seams. It seemed that unlike her sister, Fiona preferred to keep herself in a more natural state.\n\nThe outline of her sex was apparent under the tight cotton stretched between her legs. He needed to touch her, to slid his hand down her front and cup her warmth. But he was still too uneasy. Even with everything that happened to him in the past day, he still couldn't bring himself to lay his hands on her feminine form.\n\nSuddenly weak in the knees, Alex took a couple steps away from Fiona and sat carefully on the edge of the bathtub. The bump on his head and his near thirty-minute erection proved too much for his trembling legs. He needed to do something about it, hoping Fiona might oblige. She stepped forward, first making sure the door was locked, and then sauntered across the bathroom until her hips were less than a foot from Alex's face. She slowly lifted her shirt again and tied it in a knot above her waist, giving him permission to continue his admiration.\n\n\"You can touch, just be gentle,\" she purred. She reached for his hands in his lap and placed them on her hips over the waistband of her white panties. Fiona felt her own excitement growing at his attention, slippery wetness spread between her legs as she squirmed lightly under his touch.\n\nAlex couldn't believe his luck for the hundredth time. He was about to live out one of his most intimate fantasies. From his seated position his face was looking directly between Fiona's thighs, so close he could smell her scent. He slid his hands down her backside, gently squeezing and rolling silky smooth flesh with his palms. He curled his fingers and dug longingly into Fiona's abyss through her cotton panties, feeling the warmth coming from its depths. His focus shifted to the front; using an index finger, Alex gently traced the narrow elastic band around her waist.\n\nFiona jumped from his touch, \"That tickles,\" she said excitedly. \"But don't stop!\"\n\nAlex moved both of his hands to her hips and dropped onto the seams that circled her thighs. He traced both lines down and in, pressing a little harder to avoid causing Fiona to spring from his touch. He traversed Fiona's mound and felt soft hairs poking out from under the seams. Farther still his fingers traveled until they started to push into the narrow hills of her sex.\n\nFiona shuddered and moaned as Alex pinched her clit between her lips. God he is driving me crazy, she thought. She didn't expect to get so turned on just by showing her friend's little brother her tits and underwear. Granted, he was far from little. She yearned to see his massive cock and slowly began hatching a plan in her mind.\n\nAlex traced his fingers towards the gusset of Fiona's panties and into new territory. She widened her stance, giving him easier access to the treasure between her legs. Alex placed his hand through her gap, cupping her mound and pressing his fingers up and into the damp fabric covering her pussy. His fantasy had become reality. \n\nFiona mewled and Alex felt her lean into his hand, encouraging more pressure. He flexed his fingers and pressed into her cotton-covered folds, not entirely sure where he was going. But he'd seen enough porn, and it didn't take an expert to follow where the heat and moisture were coming from. He slid his hand back and forth several times, rubbing the length of her damp cleft. He stopped with his hand almost entirely between her legs and pressed his palm against her sensitive button.\n\nFiona couldn't believe she'd been brought close to climax so quickly. It usually took a little more than light petting over her clothes. She clamped her legs around Alex's hand and moved her hips in a circle, forcing his fingers into her wetness and grinding his palm against her throbbing nub.\n\nOnce Fiona took control Alex knew she was working herself to climax. But he had one more thing he wanted to do first. He forcefully pulled his hand from between her clenched legs, causing her panties to bunch and loosen in front, giving him a momentary peek at her unshaven mound. The smell was intoxicating.\n\nFiona grunted with indignation, but Alex quickly recovered. He placed both hands firmly on her backside and pulled her half a step closer. He wanted to be in that smell, to taste it, and cover his face with it. Just like he did with Becky's panties, but this would be so much better.\n\nAlex leaned forward and touched his nose to the light cotton fabric covering her small hill. He dropped down until he could reach no further and inhaled. He was delirious, and he wanted more. Fiona spread her legs farther to give him more room to work. Alex pressed his nose into her clit and turned his head side to side slowly, rocking her swollen button across her pelvis. He stuck out his tongue and licked the damp fabric, sampling the busty blonde's erotic nectar.\n\nFiona began thrusting against Alex's face, doing her best not to scream out in pleasure. She felt a trail of moisture trickle down the inside of her thigh, a sure sign she was close to release.\n\nAlex held on for dear life, face firmly planted between the blonde's gyrating hips. He worked his head up and down, lapping at her panties and continuing to press his nose into the fleshy folds at the top of her pussy. Fiona suddenly stopped moving and tensed her legs around Alex's head. He pressed as hard as he could while she reached her peak, following as she thrashed and convulsed, his face wet with her womanly secretions. It was the first time he'd given a girl an orgasm. He tasted it, smelled it, reveled in it.\n\n\"Oh my god,\" Fiona exclaimed as the final throes of her orgasm washed over her. \"Where did you learn to do that?\"\n\nAlex sat up straight, satisfied that he did well. \"Uh, nowhere. I just did what I wanted to do.\"\n\nFiona couldn't believe it, Alex was four years younger than anyone she'd dated and he just rocked her with one of the best orgasms she'd ever had. And she hadn't even taken her underwear off! \"Well, my boy, whatever you do, keep doing that,\" she said in a husky voice. Fiona bent down close to Alex and kissed him full on the mouth. She tasted herself on his lips and broke into a smile once she pulled away from his sopping maw.\n\nFiona stood up straight and her focus shifted to the thing poking into her leg. Alex was still in a daze, his face covered in her fluids. He kept licking around his mouth, lost in the taste and smell of the tall blonde. He was brought to attention when she turned away and bent to reach into the bathroom cabinet, giving him a view of her soaked panties from behind. They were partly transparent now. Alex could clearly see the outline of her swollen lips arching out from the between her legs, split by a crease caused when the white cotton of her panties pulled into her. She reached into the cabinet and retrieved a bottle. Alex couldn't tell what it was, but he was surely about to find out.\n\nReturning to face Alex, Fiona untied her shirt and lifted it over her head, swinging her large breasts above his head. She gripped Alex's arms and directed his hands to her bosom. He tentatively kneaded the soft spongy flesh, unsure how sensitive she was. Passing his fingers gently across her pointed crowns, he carefully located her small nipples at the center.\n\nFiona set the bottle down on the edge of the bathtub and dropped to her knees, Alex's hands followed, never losing contact. She grasped and stroked its length over his slippery polyester pants and noticed drops of wetness on the fabric. Surely some of it was hers, but she suspected Alex had been leaking for quite a while. It's time to take care of this poor boy, she thought and grabbed the elastic waistband of his shorts with both hands. \n\n\"Up!\" Fiona demanded. Alex quickly obliged, maintaining his grip on Fiona while she worked his shorts and underwear to the ground. As if gasping for air, his rock hard cock sprang to life pointed directly at Fiona's face. It bobbed several times, basking in its newfound freedom. \"My, my,\" he heard Fiona say breathlessly as she grabbed the bottle while Alex continued to massage her breasts, exploring how the mounds of soft skin responded to pressure from different angles.\n\nFiona spread a healthy amount of baby oil into her hand and then held the bottle out for Alex. He seemed confused, or at least unwilling to release his grip on her chest. Fiona was insistent and he dropped one hand and clasped the bottle. Fiona rubbed her lubricated hands together briskly and then placed both on his thick shaft.\n\n\"Ohhh...\" Alex moaned. In part from understanding what was in the bottle, but mostly from the thrilling sensations that Fiona sent through his body. She stroked him slowly, avoiding the most sensitive part, knowing he wouldn't last long. Oil dripped off his balls as Fiona cupped and fondled them, rolling his dangling purse in one hand and continuing to caress his length with the other.\n\nAlex's eyes rolled back in his head. He'd never felt anything so good. Baby oil! Yet another surprise. Lost in sensation, it took several moments for him to come back to reality. He still had a hand on Fiona, and in his other was the bottle of oil. A light bulb switched on in his sex-addled brain and he immediately began pouring it across Fiona's protruding chest.\n\n\"That's it, you're a quick learner,\" she smiled while fondling him. She wasn't getting into a rhythm, just exploring, running her fingers along all sides, feeling the veins and ridges of Alex's cock. She couldn't remember ever handling a prick this magnificent. Longer, maybe, but that girth! It made her ache.\n\nAlex set the bottle down, satisfied that he adequately covered Fiona's breasts with oil. He started spreading it evenly across her soft skin. He bounced her breasts side to side, pushed them together, ran his hands between them, and then circled each slowly until he held Fiona's tiny pale nipples in his fingers.\n\nFiona gasped as Alex explored her pale skin. She was self-conscious about how her areola and nipples looked. She'd rather be like her sister; small, dark, and pointed. The way Alex was focusing on them made her feel good, he obviously didn't mind; time to put her plan into action. \n\nFiona placed her oily hands on Alex's wrists. She firmly pushed them away from her and scooched forward until the flared tip of his cock was pressing into her breastbone. Alex spread his legs and allowed her to close the remaining gap between their bodies.\n\n\"Relax,\" she whispered. \"I'll take it from here.\" With that, she grabbed the sides of her colossal swells and wrapped them around his shaft, enveloping it completely.\n\nAlex was in awe as Fiona slowly worked her breasts up and down. He could feel her tiny hard nipples brushing his sack as it dangled over the side of his bathtub perch. His head lolled back and he again became lost in the moment, doubting he'd ever find anything softer to slip into.\n\nFiona looked up at Alex, intent on seeing whether he was enjoying her treatment. She'd never done this before, but always wanted to, she had the requisite equipment after all. Alex was obviously in outer space, his head rolling loosely across his shoulders, eyes closed. Fiona was pleased and looked down at the tip of Alex's cock nestled in her cleavage, glistening with oil. Peekaboo, she thought and giggled silently. With her chin on her chest, she rocked back and forth, pulling his hardness through her soft valley. Each downstroke brought her face closer to his flared knob until it was less than an inch from her lips. She continued, picking up the pace, shaking her breasts up and down his thick cock.\n\nAlex groaned and lifted slightly off the edge of the bathtub, telling FIona what was about to happen. On the final pass she dropped farther and pulled him into her mouth. Alex immediately sensed the change and looked down. Fiona's pouty lips were wrapped around his dick! He felt a slight movement as her tongue reached out and flicked across his tender tip. Alex immediately let loose, pumping several jets into Fiona's mouth, coating her tongue and cheeks. He moaned and quivered, nearly slipping off his oily perch as he emptied into her hot mouth.\n\nFiona let go with a slurping kiss and rose up to meet Alex face to face. Her lips immediately found his and unlike their first kiss, this one was full-throated. Her tongue immediately sought entrance into his mouth. He obliged and was surprised as his tongue twisted through her lips and came in contact with a new taste. Not unpleasant, slightly salty, but certainly different than what he sampled between Fiona's legs. She hadn't swallowed yet! His tongue continued to slide through Fiona's mouth, swapping fluids back and forth. After several more moments of chasing his cum between their tongues, Fiona broke off contact and swallowed.\n\nThe both grinned ear to ear. \"Thanks,\" she said first. \"What you did made me want to try something new. I hope you liked it.\"\n\n\"Oh, Fiona, that was amazing,\" he said dreamily.\n\n\"Good!\" she said, standing up. Fiona grabbed her bunched shirt off the ground and pulled it back over her head. She turned for the door as Alex finished making himself decent. As she touched the handle she paused and turned to Alex. \"I think you deserve these, add them to your collection,\" she said as she lifted her shirt and stuck her thumbs under her panties. She bent lithly and pulled the wet cotton briefs down past her knees. \n\nAlex stared down the drooping neck of her nightshirt and watched while her two glistening breasts swung to and fro as she danced off her panties. She tossed the damp underwear across the room and he eagerly snatched them from the air and brought them to his face. She chuckled and shook her head at his perversion and then spun to open the bathroom door. \n\nAlex caught one fleeting glimpse of her light colored bush and shapely ass as her nightshirt twirled to her waist. His head swam in the clouds, unwilling to come back to earth. Why couldn't his sister have a birthday party every day?"
    ],
    "authorname": "MagnusRhodes",
    "tags": [
        "panties",
        "big breasts",
        "anal fingering",
        "handjob",
        "peeing",
        "titty fuck",
        "cum swallowing",
        "blonde",
        "big cock",
        "cunnilingus"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/alexs-gifts-ch-02"
}