{
    "title": "Arabian Nights Ch. 05",
    "pages": [
        "\"Ow!\" I wince, pulling away from him and hissing slightly. \"*Jesus*.\"\n\nZane just chuckles, holding himself behind me. \"Since when are you Christian?\" he teases.\n\n\"Shut up,\" I grunt through gritted teeth, looking back at him. I'm bent over the bathroom sink, naked, with Zane using a pair of tweezers to pull a tick off of my ass -- a motherfucking *tick*. \"This is so fucking stupid,\" I mutter to myself. Somehow this is more embarrassing than when Zane got a splinter through his shorts.\n\n\"Chill out,\" he tells me, the smirk in his voice irritatingly apparent. \"It's not a big deal.\"\n\n\"If I get Lyme, it's your fucking fault,\" I fire back. He was the one who initiated sex during our little picnic yesterday. That meadow is the only place I could have possibly gotten a tick a few inches from my goddamn asshole.\n\n\"You're not gonna get Lyme,\" he assures me before giving one more sharp pull. I grunt before he stands up behind me and pats my ass. \"Got him,\" he says, wrapping up the tick in a piece of toilet paper, smushing it between his fingers, and then flushing it down the toilet. Then he sets the tweezers on the counter before smiling at me. \"Wanna check me for ticks?\" he adds with a sly little grin.\n\nI just push my hands into his bare chest, causing him to laugh. He quickly grabs my wrists, though, tugging me into him and pressing his lips against mine. I kiss him back, but barely -- and when he starts pinning me against the counter, I stop him. \"Mmm. Zane,\" I mutter, turning my head away from him. \"I'm not in the mood anymore.\"\n\nHe laughs. \"You don't have to be so embarrassed.\"\n\n\"I'm not embarrassed,\" I tell him, though that's only somewhat true. \"It's just... super unsexy.\" Zane and I were in the middle of some afternoon foreplay, kissing and grinding and undressing slowly. Once we were naked, I sucked him off for a few minutes and then got on top of him. I worked my cock against his while his hands roamed my backside, and he spent ample time on my ass. That's when he noticed the tick.\n\n\"Shame,\" Zane says. \"I have a huge parasite fetish.\"\n\n\"God, you're so annoying,\" I mutter, and he laughs, kissing me again -- but he respectfully keeps it short.\n\n\"C'mon,\" he says. \"I'll make you food. That always cheers you up.\"\n\nI try not to smile, but the way he looks at me makes my lips betray my attempt. I laugh slightly before following him out of the bathroom, dodging his efforts to swat at my hand after I give his ass a good slap. We stay naked as Zane whips up a quick stir fry and I put together a small salad with the remaining spinach we have left over in the fridge. Zane looks oddly sexy when he cooks, especially after he donned an apron with nothing on underneath. I sit at the table with my freshly-prepared salad, grinning at the sight of him.\n\n\"Is it weird that I'd fuck you in that?\" I comment.\n\nHe chuckles as he pushes chicken and vegetables around in the stir fry sauce. \"That could be kinda hot,\" he says, grinning back at me as he pulls the pan off the stove and brings it over to the table, pushing food onto each of our plates. \"I don't do food in the bedroom, though. Sorry.\"\n\n\"I support that lack of kink,\" I say with a little smile, thanking him as he fills up my plate. I watch him as he brings the now-empty stir fry pan to the sink, rinses it off, hangs up his apron, and rejoins me at the kitchen table, naked and hungry.\n\n\"How is it?\" he asks as he sits down, licking his lips after seeing me take a bite.\n\n\"Good,\" I say, mouth full of broccoli and bell peppers. Zane has a particular style when it comes to stir-fry. It always tastes like home to me. \"So,\" I say, wiping my lips with the back of my hand, \"Baba called me.\"\n\nHe glances at me as he adds balsamic to his salad. \"Yeah?\"\n\n\"Yup. Wants to know 'if and when' you're gonna talk to Seth.\"\n\n\"Ugh,\" he groans, setting the dressing down with a little more force. \"Can we not talk about my father right now?\"\n\n\"We're going to have to eventually,\" I say. Seth hasn't reached out to Zane yet, either. Rashida says he refuses to even talk *about* Zane, seeming to prefer pretending his son doesn't exist. But it's been quite a number of weeks. How much longer can this stalemate last?\n\n\"Or,\" Zane says, stuffing his mouth with a forkful of spinach, \"we could just never speak to him again.\"\n\n\"Zane,\" I say, giving him a look.\n\n\"Oh, come on. No one would miss him.\"\n\n\"Don't say that,\" I mutter, but is that far from the truth? I know *I'm* not particularly close with Zane's father, but still, he's practically family. I know he means a lot to Zane whether or not he likes to admit it. It'd be all too easy to just write him off, and all to easy to regret it. \"Be serious for a second.\"\n\n\"What if I am?\" he asks me, looking irritatingly sure of himself. \"What if I'm fine with being disowned?\"\n\n\"That doesn't make it right,\" I tell him, giving him as steely a glance as I can.\n\n\"Let him be wrong.\"\n\n\"What about your mother?\"\n\n\"What about her?\" he snaps, clearly exasperated by the conversation topic. I must look surprised, because he reels it back in, shaking his head to calm himself. \"You're right. I'm sorry.\" He sighs, running his fingers through his hair as he picks at his food. \"I'll think about it.\"\n\n\"I'm not trying to attack you, here,\" I tell him.\n\n\"I know, Khalid.\" He grumbles a bit, and I hope I didn't kill the mood by bringing up his father. But this affects more than just their relationship. Then: \"Do you think Baba G will ever tell my father?\" he asks, looking at me. \"Or *you*, for that matter?\"\n\nI smile. \"I don't have to tell him,\" I say, standing up to grab a glass of water. \"I still like girls, remember?\"\n\nHe sneers at me. \"Fuckin' cheater,\" he mutters, grabbing me around the waist before I can walk away. \"I'm gonna drag you down with me,\" he says, and I laugh, trying to get out of his grip. But he has a good hold on me.\n\nI just grab his chin and tilt his face towards mine. \"I fuckin' dare you,\" I tell him, leaning down and kissing him deeply. My lips on his distracts him enough for him to slacken his grip on me, and I grin and quickly slip out of his reach.\n\nHe grunts slightly, looking me up and down as I laugh and head to the cabinets to grab myself a glass. Just as I'm filling it up from the tap, I hear Zane speaking. \"You know,\" he starts to say, \"there is *one* thing that would convince me to talk to my father.\"\n\n\"Oh yeah?\"\n\n\"Yeah,\" he says, and I can almost feel his eyes on my backside without having to turn around. \"You could let me tap that pretty ass of yours.\"\n\nEven though he's playing around, I feel my face get warm, and I quickly turn around so that my ass is not completely presented to him. \"Fuck off.\"\n\n\"What?\" he says with a cheeky grin, chewing slowly on his food. \"I know you'd like it.\"\n\nThe thing is, he's right. I *would* like it. In a weird way, though, that kind of scares me. Ever since that first time Zane made me cum with his fingers inside me, we've been including a lot of that in our play (even sharing one of Zane's vibrators), to the point where I've started specifically asking for it. Now I rarely cum without a finger in my ass. But a whole cock? *Zane's* cock? As intimidating as his size may be, that's not what worries me. What worries me is how much I'll fucking love it. I can already imagine that sensation so vividly that sometimes I give myself hard-ons at inappropriate times of the day. I know my reservations are problematic, since I'd consider it embarrassing, or emasculating, or a sharp jab to my pride. Once I undo that thinking, though...\n\n\"So, you'd talk to your father if I agreed to let you fuck me?\" I ask. \n\nHe shrugs, grinning.\n\nMy instinct is to say no. I've been avoiding the temptation to say yes for a while now. He's only ever flat-out asked me once prior to this, and I didn't give him a clear answer. He just told me to think about it and left it at that. But maybe this is a good opportunity to kill two birds with one stone: I could throw away my inhibitions, and Zane could, at the very least, get closure. I bite my lip a bit, wondering if this is the kind of decision I want to be making. \n\n\"Shake on it,\" I say, offering my hand out.\n\nHe raises a thick eyebrow. \"You're gonna make me walk all the way over there?\"\n\nI roll my eyes before rejoining him at the table, sitting in my seat and extending my hand again. \"Shake on it,\" I repeat.\n\nHe looks amused, eyes switching from my outstretched hand to my face. \"You know I wasn't serious, right?\"\n\n\"Well, I am,\" I tell him. \n\n\"Khalid--\"\n\n\"I'll give it up if you swallow your pride and at least *try* to fix this.\"\n\nHe stares at me for a long time before taking my hand between both of his. \"I'll talk to him,\" he says, gently pushing my hand back towards me, \"but you don't have to do that.\"\n\n\"I want to.\"\n\n\"Well, I don't want you to,\" he says, smiling slightly. \"I don't want your cherry to be a bargaining chip. I want to fuck you when and *only* when you want me to.\"\n\nMy heart swells a bit. Again and again, Zane casually displays his ethics, his well-meaning soul, his warm nature. I've never felt pressured by him. If I say \"no\" to something, he takes it at face-value and doesn't fight me on it, regardless of what he may want to do -- which I could learn from. I think that's what I appreciate about our dynamic the most: there's no pressure to perform or act a certain way. I can just be myself with him, the self that he already knows and loves. I don't know why that notion affects me so much, but I can physically feel something shift in my core. I love him. I *love* him. \n\n\"What if I don't ever want to?\" I ask, half-teasing, half-curious to know the answer.\n\nHe just shrugs. \"Then I'll have ripped fuckin' fingers,\" he says with a grin, wiggling his fingers teasingly in front of my face. Immediately, I start cracking up. Zane shares the laughter with me, but little does he know that I've already decided that his patience is to be rewarded -- soon.\n\n~ ~ ~\n\nAt the sound of us entering his home, Baba meets us in his living room with his typical radiant smile before roping me into a loving embrace. \"Oh, my son,\" he says theatrically, hugging me tightly. \"It's been years since I've seen you.\"\n\nI snort in his ear. \"Don't be so dramatic, Baba,\" I mutter, laughing. I usually see him every week, but between work and my relationship with Zane, it's been closer to two weeks since we last had time together. \n\n\"Visit me more often and I wouldn't be,\" he says, pulling back. \"Let me get a good look at you,\" he adds as he takes my face in his palms and studies my face as if for an inspection.\n\nI grin slightly. \"Do I pass?\" I tease.\n\nHe just rolls his eyes and pats my cheek in response to my \"insubordination\" before moving away, glancing towards Zane. \"Teach him to love his father,\" he mutters playfully. \"And to eat more.\"\n\nZane laughs. \"I make sure he's fed pretty often,\" he says coyly, grinning at me as he leans down to accept Baba's hug. I scowl at him, which only makes him chuckle.\n\n\"Well, clearly you are not feeding him enough,\" Baba says, pulling back with a genuine smile. I just rub my palm across my face, shaking my head.\n\n\"Anyway,\" I cut in, wanting to stop this discreet double entendre before it gets even more out of hand, \"are you almost ready to go?\" I ask Baba. \"We're gonna be late.\"\n\n\"Yes, yes,\" he says, waving me off. \"I just need the koshari.\" And with that, he rushes off to the kitchen.\n\nI glance at Zane, looking him over. \"Did you leave the wine in the car?\" I ask.\n\nHe looks at me before closing his eyes and rubbing his forehead. \"Shit.\"\n\nI groan. \"Don't tell me--\"\n\n\"It's at the apartment.\"\n\nI shake my head. Zane's forgetfulness strikes again. Maybe *he's* Baba's son. \"Forget about it,\" I say. \"It's fine.\" But in reality, it makes me more nervous than I already am. The wine (a terrible Chablis) was supposed to be a peace offering to Seth. Zane finally feels ready (or, at least, as ready as he'll ever be) to face his father. But we're being bold by doing a surprise attack. Baba was invited for dinner, and by extension, so was I. However, Seth doesn't know that his son is making an appearance, and his favorite brand of wine would have at least somewhat assuaged his inevitable outrage.\n\nBaba comes out of the kitchen with a lidded tray in hand, nodding at the two of us. \"Ready?\"\n\nAnd so, the three of us make the short walk over to Zane's childhood home. In order to distract ourselves from the growing tension, I ask my father about his latest boyfriend, Raul, and it pleases me to see him try not to smile too much. \"Things are good,\" he says, but I can tell by his expression that things are, at the very least, *very* good. I'm happy he met someone that he's sticking it out with for longer than a couple weeks. Baba deserves the world and then some.\n\nBut that joy fizzles out a bit when we get to the house. Standing under Seth's grand porch brings out a collective nervousness in the three of us, with Baba fidgeting with the tray, Zane biting his nails, and my leg twitching uncontrollably. I'm not a believer, but I may or may not be sending prayers up to the heavens right now.\n\nRashida answers the door after Baba rings the doorbell, and we're all momentarily relieved. She smiles at us -- but is particularly excited to see me and Zane. \"Boys!\" she says, stepping forward to hug each of us individually. \"My goodness, what a surprise! How have you two been?\"\n\nZane and I both glance at each other. No one knows that we're dating yet. We decided to wait for our little trial month to pass before we made any official announcement to Baba or Rashida. \"We're pretty good,\" I say vaguely.\n\n\"That is good to hear,\" she says brightly, holding her hands together. \"Oh, I am so happy you--\" But then she stops, her smile faltering a bit -- and I'm sure I know why: she hears Seth in the other room, asking if it's my father at the door, and was probably reminded of the tense situation. Now she looks just as nervous as the rest of us, but I'm sure it's difficult for her in a way us men couldn't understand. She has to somehow straddle this fence if she wants a relationship with both her husband *and* her son.\n\nSeth shouts again when no one responds. \"Gamal?!\"\n\n\"I'm here, sahbi,\" Baba says, and Rashida steps aside to let my father in.\n\nRashida drops her voice when it's just us two boys left on the porch. \"Are you sure this is... the right time?\" she asks warily.\n\n\"When would be the right time?\" Zane asks, and his mother doesn't have the answer to that question. \"You don't know how much it took me to bring myself here. If I don't face him now, I never will.\"\n\nRashida seems to be searching for words, maybe a compromise or even an escape from this situation. But in the end, she sighs and steps aside, gesturing for us to enter her home. Here goes.\n\nWe step into the foyer. I don't even give myself a chance to be put off by the glittering chandelier hanging above us, or the oversized portrait of some ancient pharaoh hanging before us in its extravagant frame, or the lush, incalculably expensive rugs that lead the way to different parts of the house. Seth's borderline-profligacy that usually irks me isn't even a thought in my head, because I'm focused on the threat at hand: the beast himself, lounging in his den.\n\nI'm about to follow Rashida into the living room when Zane suddenly grabs my arm. When I turn, I study his face. He looks like he's going to be sick, giving me a pleading sort of look. In response, I smile warmly and touch his side to tell him that I'm here for him, and that seems to be enough.\n\nWe enter the living room quietly enough for Seth, who's in the middle of laughing about something on the television that he's showing Baba, to not notice us right away. Not until he looks over Baba's shoulder does he see our tall forms standing in the archway -- and then, silence. The quiet seems to stretch on forever, and both Baba, Rashida, and I switch eye contact with each other as we all wonder who's going to draw their sword first.\n\nSeth sounds calm when he speaks, but he's evidently seething. \"What are you doing here?\" he murmurs.\n\n\"This is my home,\" Zane says, and it's with such confidence that I can't help but be proud.\n\nSeth growls threateningly. \"Your *home*?\"\n\n\"Yes,\" Zane says.\n\nSeth sneers a bit. \"You revoked that privilege the night you disrespected me, boy.\"\n\n\"By being honest?\" Zane demands.\n\n\"By being an abomination!\" Seth yells, completely losing his cool. Up until this point, the conversation was at a level tone, but all of a sudden, things explode. Even I wince, but Zane actually steps forward, shouting back at his father. I keep a hand on Zane's shirt to keep him from getting too close to Seth. I don't need him accidentally tempting his father into yet another physical altercation, because this verbal argument is harsh enough. They just yell over each other so loudly that I only catch snippets of each debate, like \"What kind of father are you?\" and \"You're no son of mine!\" Words like \"shallow\", \"disgusting\", and \"disappointing\" are spit out, but half the time, I miss who's spitting where.\n\nJust as I'm thinking up a way to diffuse this nonsensical situation, Baba steps forward and does something completely out of his character: he yells. He clenches his teeth before shouting \"Enough!\"\n\nAll of us pause as Baba, looking particularly angry, looks back and forth between his best friend and my best friend. Then, his eyes settle on Seth. \"Gamal?\" Seth asks, confused.\n\n\"He is your *son*!\" Baba says furiously. \"How *dare* you treat him this way!\"\n\nSeth blinks, momentarily stunned by Baba chastising him before he gets angry and defensive again. \"He's no son of mi--\"\n\n\"Yes he is, you ignorant fool,\" Baba says, and Rashida holds her hand over her mouth. It'd be almost comical if Baba weren't so genuinely angry. His face is flushed. Maybe he just can't take the arguing anymore. \"And I'm your friend, am I not?\"\n\n\"I-- Yes, of course,\" Seth says, blinking, \"but I don't see why--\"\n\n\"I'm gay,\" Baba admits, and now it's my turn to gasp. \"Are you going to disown me too, brother?\"\n\nThe tension now is almost worse than when Seth laid eyes on his son. Zane's father clearly doesn't know what to think, how to respond, because he stares at Baba open-mouthed and wide-eyed. Finally, after several seconds, he speaks. \"No you're not,\" he says, in denial.\n\n\"Yes I am,\" Baba says confidently. I don't think I've ever admired him more than in this moment, coming to Zane's defense by standing up to his friend. But I'm nervous. I even step forward, positioning myself so that I'm ready to physically defend my father in case Seth decides to start swinging.\n\nBut suddenly, Seth softens, his shoulders slacking as the tension leaves his body. \"Tell me it's not true,\" he murmurs.\n\nBaba seems to calm down seeing Seth lower his defense a bit. \"It *is* true,\" he says calmly. \"I always have been.\"\n\n\"All this time?\" Seth asks. \"And you never told me?\"\n\n\"How could I?\" Baba murmurs gently.\n\nWe all wait for him to get defensive again, to say something problematic -- but after another long pause, Seth simply falls to the couch and begins crying. I stare in shock. Even Zane doesn't know what to do, and we both just stand there as Seth puts his hands against his eyes and cries. \"What have I done?\" he murmurs.\n\nIt's evident that none of us are sure what to make of this statement. Still, both Rashida and Baba move to sit beside Seth, his wife going as far as putting a comforting arm around him. Zane and I just look at each other, stunned and confused. I'm the one who gestures for us to leave the room. There's no point in us standing around awkwardly.\n\nWe escape to the kitchen, both taking breathers away from the situation. \"Wow,\" I murmur softly.\n\n\"Yeah,\" Zane says, grimacing slightly as he glances back at the living room. \"What just happened?\"",
        "I shrug slightly. \"I don't think I've ever seen your father cry,\" I say.\n\n\"Neither have I,\" Zane says slowly, scratching the side of his head. Then he looks at me. \"I... didn't expect your father to... do what he did, either,\" he says.\n\n\"Yeah,\" I mutter, looking at the counter. Baba just came out. After years of keeping that part of himself hidden from his best friend, someone he considers family, he decided to unleash it. I doubt it was a result of anything but impulse, and the desire to step forward for someone he practically sees as his second son. That surge of pride I felt initially has only gotten stronger. Shit, Baba.\n\nNow it's finally all out in the open, the truth laid bare. What about my own truth, though? Baba's selfless act has got me reflecting. I glance over at Zane, who's lost in thought, biting his fingernails and staring at the floor. What are we doing? Who are we kidding with this silly \"trial period\" bullshit? Who am *I* kidding? I have to be honest with myself, be truthful in what I want -- and that includes whom I want, and how I want them.\n\n\"Fuck the month,\" I blurt out.\n\nHe looks up at me in confusion, pulling his fingers from his mouth. \"Huh?\"\n\n\"Fuck the month,\" I repeat.\n\nHe blinks. \"What are you talking about?\"\n\n\"I'm talking about... you know... us,\" I say, gesturing between us. \"Seeing Baba... I just...\" I shrug, sighing and laughing simultaneously. \"There's no use keeping things hidden anymore.\" I look at him hard and hold his gaze. \"So, fuck the month.\"\n\nHe stares for a moment before starting to smile. \"What are you saying?\"\n\n\"I'm saying,\" I tell him, slowly speaking as I walk over to him, \"I'm done with this stupid trial period. I want this. For... for real.\"\n\nZane's mouth splits into a wider grin, his expression a hybrid between amused and loving. \"C'mere,\" he says, reaching forward and grabbing my shirt. Smiling, I meet him halfway as he tugs me closer to him and plant my lips on his. We stay like that for several moments, just standing in his parents' kitchen, arms around each other, lips pressed firmly together. Then, when we pull apart, Zane just smiles while I laugh gently to myself. \"What's so funny?\" he asks.\n\nI shrug. \"I don't know. I just... A few months ago, I would have never expected something like this to happen.\"\n\n\"You falling in love with a guy?\" he asks teasingly.\n\nI just smile. \"Me falling in love with *you*.\"\n\nHe grins a little more before he grips my shirt with a wide, excited smile stretched across his face. Slowly, he leans in and kisses my lips and then moves to my neck. \"Fuck, I wish we were alone right now,\" he whispers.\n\nI laugh, pushing back against him. \"Reel it in, big guy.\"\n\nHe just laughs. \"Fine,\" he says, nibbling on my neck before he pulls back, looking sweet and gentle as he rubs my sides. \"Thank you for telling me that.\"\n\n\"Should we tell everyone?\" I ask. Suddenly, I have a burst of inspiration to not only \"come out,\" but to show off my relationship. I want everyone to know how good I have it.\n\nBut Zane just laughs. \"Maybe we should wait...\" he says, clearly amused. \"This is a lot for one night already.\"\n\nI chuckle, nodding. \"Fair.\"\n\nHe reaches around, rubbing the small of my back from under my shirt. \"But soon,\" he says, lightly dragging his nails down my back. \"I promise.\"\n\nIt takes quite a while for Seth to compose himself. We only get an update from Rashida when she joins us in the kitchen to resume cooking dinner, and she tells us that Seth and Baba are having a \"long conversation\" -- which means we are not to interrupt. Giving them space, we stay in the kitchen with Zane's mother, helping her if she requires our assistance. Otherwise, we just sit at the table idly, silently wondering how this night will play out.\n\nSoon, dinner is ready, and a few minutes later, Baba and a pensive Seth come out into the dining room and join the three of us. Needless to say, there's an awkward bit of tension initially. We pass food around in complete silence, with Rashida only breaking it to ask if any of us want water.\n\nEventually, though, before Seth begins eating, he pauses, takes a breath, and then looks towards his son. \"I'm sorry,\" he says gently.\n\nThe sincerity in his voice even catches *me* off-guard, and we all pause, glancing at Zane for his response. He just stares at his father in surprise for a few moments before giving Seth a small smile and a subsequent, affirming nod.\n\nAlmost instantaneously, there's a lighter air in the room. Both Baba and Rashida allow themselves to smile, and Baba, who pats his friend's arm in a proud sort of way, initiates conversation with the whole table. Seth doesn't speak his usual amount. It's clear that he's still embarrassed, or ashamed, or whatever he's feeling. But it's a start. We're on the right path here, and we're heading in the right direction.\n\n~ ~ ~\n\nZane retires to his room when we get back to the apartment, so I use this opportunity to take a thorough shower -- thorough enough to have a little foreplay with myself. My heart starts racing just from the self-stretching and anticipation, but at the same time, I feel surprisingly calm. It feels right, to give myself to Zane as much as he's given himself to me. After the moment we shared in his kitchen, it seems like the logical but organic next step.\n\nI step out of the shower, quickly drying myself off. Instead of getting dressed, though, I wrap a towel around my waist and leave my clothes on the bathroom floor. Slowly, I make my way towards Zane's room.\n\nHis bedroom door is half-open, and I knock lightly as I peek inside and see him resting on his bed with his phone in his hand, presumably texting. He glances at me, eyes me up and down, and smiles. \"Hey,\" he says. Then, when I step into his room, shut his door, and drop the towel to my ankles, he grins a bit more. \"Well, *hey*,\" he says, adding a sexier tone to his voice. He tosses his phone to the side before sitting up, licking his lips.\n\n\"Hey yourself,\" I say with a smile, stepping away from the towel and joining Zane in bed. As I climb up and straddle his lap, he runs his hands up my thighs and rests them on my hips. \"How you feelin'?\"\n\n\"Pretty damn good, now,\" he says with a playful growl, and I laugh.\n\n\"In general, I mean.\"\n\nHe smiles a little more seriously. \"I'm still... shocked,\" he says, letting out a small laugh. \"I wonder what my father and your father talked about before dinner.\"\n\n\"Yeah, me too,\" I say. Zane and I left before Baba did, so we didn't get the inside scoop from him. It was most likely just a deep heart-to-heart, the first stepping stone on Seth's path to not just tolerance but acceptance. He was quick to write off his son, but his best friend, someone he considers a brother? Two people is too many to lose. \"Clearly it worked, whatever it was,\" I say.\n\n\"Yeah, I guess so,\" Zane murmurs, smiling gently. Then he laughs. \"Though I'm not sure he's really ready for... us,\" he adds, giving my hips a squeeze.\n\n\"Maybe you're right,\" I say with a chuckle. \"I was just getting excited.\"\n\n\"Well, I appreciate the excitement,\" he says, beckoning me lower with his finger. I grin, answering his call and leaning down to kiss his lips. Back and forth we go, wet lips smacking against each other repeatedly as I grip his shirt. I feel his hands arms snake around me more, comfortably tightening around me -- but there's an imbalance here. He's clothed, and I'm not.\n\n\"Why are you still dressed?\" I ask against his lips.\n\nHe just grins. \"Undress me then,\" he says invitingly.\n\nDon't mind if I do. I sit up in his lap, reaching under me to tug at the hem of his shirt and start pulling it off of him. He sits up and lifts his arms for me, allowing me to strip him. However, before I can even toss the shirt to the side, he wraps his arms around me and pins me on my back. I laugh as he settles between my legs, kissing my neck. \"Suave,\" I murmur.\n\n\"I prefer Pantene,\" he teases, getting another few chuckles out of me as he moves across my collarbone.\n\n\"You're not funny,\" I mutter. \"I hope you know that.\"\n\n\"Be nice or I won't make you cum,\" he says, and that shuts me up immediately. He just grins as he kisses down my body, inhaling my body wash as he travels lower. In anticipation of his mouth, my cock starts twitching to life, thickening against my thigh as his scruff tickles just above my groin.\n\nGently, he guides my semi into his mouth and engulfs me in his inviting warmth. I feel chills on my thighs as my cock responds to his touch, my blood flowing steadily as I get stiffer. I hear Zane humming more the harder I get, and once I'm at my most erect and most sensitive, I feel my hips start to raise. His hands hold onto my hip tenderly, not to stop me, but to encourage me. At his behest, I start to move in gentle strides, groaning as Zane welcomes me into his throat over and over again. I could melt right here.\n\nHe pulls off briefly for air, panting slightly and letting my cock flop back against my stomach, wet and hot and stiff. \"Fuck, I love your dick,\" he murmurs before lifting me back to his lips and taking me deep -- balls-deep. I grunt, swearing when his mouth and throat completely envelopes me. How is he so good at this? How can he so effortlessly swallow me whole, with an expression that reads as \"leisure\" rather than \"hard-at-work\"?\n\nHe slowly slides up to the head of my cock, giving the very tip an insistent press of his tongue before popping off with a lick of his lips. Without even looking up at me, he moves lower. He kisses over my smooth balls, nuzzling into them for a moment. Slowly, I feel his lips move closer to my taint, and in response to his tongue gliding so sensually against that erogenous zone of mine, I lift my legs a bit -- and that's all the signal he needs.\n\nHis tongue swiftly moves lower, and I gasp out when he touches my hole. He circles my entrance with tender movements before starting to drag his tongue slowly and completely over the most sensitive place on my body. I feel my toes curling before I will my body to relax, even as electric pleasure makes my skin vibrate and my heart race and my cock spit out driblets of precum. Just as Zane's tongue slips into me, I reach down and grip myself, wrapping a sure fist around my hard-on and working that natural lube into my shaft. It feels incredible -- and it also makes me hungry, makes me want a go at *Zane's* ass. I'd happily return the favor if I weren't so focused on his tongue or had a specific plan in mind when I walked in here. That's much more of a dire need right now.\n\nAfter a few minutes, Zane pulls his lips away just a few inches so that he can spit directly on my hole. I feel his warm saliva trickling down towards the bed before his finger scoops it up and rubs it tenderly around my pucker.\n\n\"Where's the lube?\" I ask.\n\nZane chuckles. \"Craving fingers, huh?\" he asks, pulling away. He grabs his bottle of lube from the top of his nightstand.\n\n\"Take your pants off,\" I say instead of answering his question.\n\nHe doesn't think much of it. \"Yes sir,\" he says with a chuckle, tossing the bottle towards me before sliding off the bed and undressing in front of me. He makes quick work of his jeans first, letting me ogle him in his snug boxer briefs before he pulls his underwear off and lets his cock swing free. It's in a thick, semi-hard state, hanging lowly, looking intimidating already. All I'm thinking is, \"Shit. That's going inside me.\"\n\nI wait until he starts climbing in bed to strike. As soon as he lifts his knee to the edge of the mattress, I sit up, grab the back of his head, and kiss him. He hums, quickly moving his hands to my waist even as I maneuver him towards the middle of the bed. I want him on his back, and to break the kiss, I push a hand into the center of his chest until he falls back with a surprised but mildly amused expression on his face.\n\nI watch as his eyebrows raise higher and higher as I straddle his hips, my ass firmly planted in his lap. \"Wha-- What are you doing?\" he asks.\n\nIgnoring him, I pop the cap on the lube and pour some into my palm. Then, I lift myself up, reach under me with my coated hand, and transfer all that lube to Zane's cock. He grunts a bit as I start massaging his semi, and I smile as I feel it hardening in my grip. \n\n\"You're not fucking with me, are you?\" he asks.\n\nI just grin, getting him to full-mast. \"I mean, kinda.\"\n\nHe stares at me for a moment before the double entendre clicks, and he chuckles a bit before putting his hands on my thighs. \"You don't have to do this, Khalid. I told you that.\"\n\n\"I want to,\" I tell him, pouring a little more lube onto my fingers to apply to myself. \"You saying *you* don't want to?\"\n\nHe snorts. \"Fuckin' fuck yeah, I want to,\" he says, and I burst out laughing.\n\n\"Then sit back and shut up,\" I tell him, and he grins before sitting up, kissing me flat on the mouth, and then lying back down. He puts his hands behind his head like he's lounging out, a soft smirk on his face.\n\nI swallow thickly once we're both good and slick, the nervousness trying to creep in on me. I just breathe in deeply, avoiding eye contact with Zane. I need to focus on the task at hand, on what I'm about to do. Time to make fantasy a reality. Time to throw my inhibitions out the fucking window.\n\nI lift myself up, hold his cock up straight, line it up with my hole, and then carefully start to lower myself onto him. My mouth opens when I feel the head of his cock push into my hole, stretching me out wider than I had mentally prepared myself for. \n\n\"Breathe,\" Zane tells me.\n\n\"I know,\" I snap, even though I'm only just now realizing I'd been holding my breath. I inhale deeply and exhale more so, so heavily that I'd feel hollow if not for Zane's manhood inching its way into my body. It's intense. The lower I sink down, the more I feel overfilled, stretched too wide, completely and strangely exposed... But I fucking love it. I'm not surprised either. I've spent weeks fantasizing about this very moment, these very feelings, and it's both tougher and more beautiful than I even imagined. \n\nI take a little more of him at a time, doing my best to relax and just barely bounce up and down on him. I'm testing out the feeling as I go. Every time I take a little more of his cock, I, for a brief moment of fear, feel like I've hit my limit. But I persist. I take him. I make him take me.\n\n\"Doing okay?\"\n\nZane's voice comes to me in the depths of my focus, and I open my eyes to look down at him. He's still lying down as if he's just kicking back and watching a film. \"Yeah,\" I murmur, nodding.\n\n\"How's it feel?\"\n\nI laugh shortly. How's it feel? It's damn near indescribable. The pain, the pleasure, the sheer intensity of it, the comfortable discomfort, the fullness of his cock, how alive and connected to him I feel... But I don't have time for words now, so I only have one word for him: \"Good.\"\n\n\"I figured. You're rock fucking hard.\"\n\nI look down and sure enough, my cock, stiff as a board, keeps tapping his lower stomach whenever I move down, leaving a small pool of precum on his skin. \"Shut up,\" I grunt.\n\nZane smiles tenderly before he lifts himself up until we're face-to-face as I stay seated in his lap. He wraps his arms around me, brushing his lips against mine. \"You feel fucking incredible, Khalid.\"\n\nAs if my body weren't hot to begin with, I feel my face flush with a gentle warmth. When he was lying down, I couldn't totally read his expression, but up close, Zane's half-lidded eyes look dazed, aware, comfortable, pleased, and happy. I just rest my hands on his shoulders, grateful for the support as I situate myself firmly in his lap.\n\nBoth of us moan simultaneously, him from hitting my depths, and me from feeling him explore me more than I thought was possible. It's fucking wild. Then, he kisses me once, twice, three times before I have my hands in his hair while we make out. It's all about patience. We're going slow and steady, really feeling each other out, heating each other up, making each other feel as good as two lovers can.\n\nSlowly, Zane starts to lean forward. I hold onto him tightly as he keeps a firm grip on my body while lying me down on my back. I grunt a bit when his cock slips from my hole, feeling irrationally empty. It's not right. I need him back inside of me. He doesn't make me wait long, though. He rolls me slightly onto my side, lifting one of my legs over his shoulder and straddling my other leg. I feel his cock, wet and hot, slide up my inner thigh before nudging against my hole, and he reaches down to grip himself before guiding its way home.\n\nAgain, we groan simultaneously once he's burrowing his way into me. He keeps a gentle pace, rocking his hips back and forth, taking my virginity in the sweetest manner. He hugs my leg, kissing my calf as his body gyrates with perfect, practiced fluidity. I've said it before and I'll say it again: he looks like a fucking god, all appropriate muscle dusted with dark hair and ever-so-slightly shining with sweat. His face shifts between relaxed and focused, giving himself into the feelings, eyes often fluttering closed when he's really feeling it, me, us. He's beautiful -- and he's mine.\n\nI continue stroking myself double-time, finding myself light of breath. Between his manhood gliding against my prostate and my fist wrapped tightly around my member, I'm in delirium. I feel my orgasm (an orgasm I know is sure to be nothing less than incredible) building -- and fast.\n\n\"Zane--\" I groan, but he can sense it somehow.\n\n\"I know,\" he says. \"Me, too.\"\n\n\"Yeah?\"\n\n\"Mhm.\" He grunts a bit, picking his pace up just a hair before sighing heavily. \"Where do you--?\"\n\n\"In me.\"\n\nHe looks down at me, licking his lips. \"Yeah?\"\n\n\"Yes.\" I give him a sure look before I close my eyes, focusing on my own impending climax now. I tune in to my other senses: the smell of sex in the room, the sound of Zane's quiet but satisfied moans and our wet lovemaking, and of course, the physical feeling of being overwhelmed and overcome by sexual fulfilment. My orgasm boils in the pit of me before, suddenly, the cum shoots up my shaft and spurts out of the tip in ropes that feel thick and hot. If my eyes weren't closed already, the intensity and force of which I cum would be blinding. I clench my eyes shut, barely cognizant of my load splattering across my torso, let alone Zane, who's just starting to cum. Somehow, I hear him grunt out and clutch onto me more tightly. As he starts to unload, he pushes his cock in a little deeper and sighs in relief. I can barely catch my breath enough to open my eyes and see Zane through the throes of his orgasm, so I just pant and lie there and let him fill me.\n\nI sigh heavily after what feels like minutes of us just breathing, connected. I slowly open my eyes, rubbing them slightly before I look down at the mess I made of myself. Then, I peek up at Zane. He grins before he starts chuckling. \"What?\" I ask, smiling.\n\n\"Nothing,\" he says, kissing my calf again.\n\nI laugh, too, for no particular reason other than his joy being infections. Gently, I nudge his ear with my foot. \"Wanna get the fuck off my leg, then?\" I ask. He grins before slowly pulling out of me. I whimper on the back-stroke, practically moaning out before I'm chuckling to myself as he slides away from my legs and lets me roll onto my stomach. I expel another heavy breath, shaking my head. \"That was wild.\"\n\nZane lies down next to me, resting on his side and getting close enough for me to still feel the heat of his body. \"You surprised me today.\"\n\nI look over at him, arching my eyebrows. \"Yeah?\"\n\nHe nods. \"First, there was that little moment in the kitchen. Then, you show up naked in my doorway ready to bottom?\" He grins, stroking my arm with his fingertips. \"It's like my birthday came early.\"\n\nI chuckle, reaching over to poke his stomach affectionately. \"Happy early birthday, then,\" I murmur, smiling at him.",
        "He slides his fingers up to my head before combing them through my hair -- as if I didn't feel so holistically soothed already. I hum in response, any residual post-fuck tension leaving my body, especially when he leans in to kiss my brow. \"I love you,\" he says, with all the tenderness in the world.\n\nI feel like my body dissolves when he tells me that. Those three little words come out with intention, meaning, a depth we haven't reached before. It feels raw, and it feels real, and I welcome it with the brightest smile I have to offer. Gazing over at him, I almost laugh just to shake off a bit of that over-positive energy before feeling those words so easily escape my lips: \"I love you, too.\"\n\n \n"
    ],
    "authorname": "ruetheben",
    "tags": [
        "gay romance",
        "romance",
        "coming out",
        "family",
        "young",
        "love"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/arabian-nights-ch-05"
}