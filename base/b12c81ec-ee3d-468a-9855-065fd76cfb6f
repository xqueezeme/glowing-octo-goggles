{
    "title": "Lust at First Sight Bk. 01 Pt. 03",
    "pages": [
        "Authors note.\n\nWhat a year 2020 was. I can't say this year has started off any better. But we can only go forward. I'll keep this short and let you get into the action.\n\nThank you all for being patient with me. And thank you for the emails showing your support for myself and my family throughout the later part of last year. I hope you all had a good Christmas and New year.\n\nPeace out. Stay safe.<br ><br >Darth_Aussie.\n\nP.S Harem sisters part 17 isn't far behind.\n\n \n\nChapter 11\n\n \n\nMy heart raced as I took the empty seat across the table from Amanda. I had been expecting this conversation ever since the night we kissed. The fact that she had seemed so chill the day after made me believe she hadn't remembered our drunken make-out session on the steps to my flat. Or that it didn't bother her. But the tremble in her hands, the tone of her voice, and the look of freshly wiped away tears on her cheeks told me otherwise.\n\n\"Amanda...\" I started to say, but she cut me off.\n\n\"I'm sorry Nick.\"\n\nI stared blankly at the black-haired beauty sitting across from me as he refused to make eye contact.\n\n\"What do you have to be sorry about?\" I asked.\n\n\"What I did was wrong. I have a boyfriend and I shouldn't have kissed you,\" she said. \"And...you're my brother.\"\n\n\"It's as much my fault as it is yours,\" I replied, trying to calm her down. \"I kissed you back.\"\n\n\"But you're our guest here,\" she pleaded. \"I shouldn't have put you in a position like that. I can't imagine how difficult this must be for you. Coming to a new country and trying to fit in with sisters you never knew you had.\"\n\n\"It can't be easy for any of us,\" I reached over and took her hand in mine. Thankfully, she didn't pull away. \"This isn't exactly a normal situation.\"\n\n\"It's not the same for us. We knew you existed. Somewhere,\" she said, squeezing my hand a little. \"I knew I had a brother out there and I couldn't wait to meet him one day. I just didn't expect...\"\n\nMy heart thumped heavily in my chest at her words. I wanted nothing more than to take this beautiful woman in my arms and console her. But I guessed that might make things worse considering the current topic of conversation. Several seconds of silence passed.\n\n\"Didn't expect what?\" I asked, almost in a whisper.\n\n\"You,\" she said, finally meeting my eyes. \"I'm so messed up.\"\n\n\"You're not messed up,\" I said reassuringly.\n\n\"Really?\" she almost laughed. \"You look just like Dad. That alone should put you in the 'off-limits' section of men. But instead I go falling for you the second I see you.\"\n\nI wasn't sure how to respond to her admittance of how she felt. The moment I saw Amanda it felt like I'd met my soulmate. She was everything I ever dreamed of in a woman. Only she had to be my half-sister. I had developed similar feelings for my other siblings during my short time in Australia. But nothing could top the heart-stopping image of Amanda that day.\n\n\"I feel the same way,\" I said softly. \"Since the first time I saw you. I don't know what it is. But...you're special.\"\n\nI had averted my gaze as I spoke\u2014not game enough to meet her eyes\u2014but when I looked up, our eyes locked. Her beautiful blue orbs gazed into mine for what felt like an eternity. Fresh tears threatened to disturb her beautiful eyes as we lost ourselves in the moment.\n\nI loved this woman. There was no denying it.\n\n\"We can't.\"\n\nThe words hit home like a cricket ball to the nuts. I felt my stomach drop as her hand left mine. I sat frozen in mind and body as I watched my perfect woman rise to her feet and take a step away from the small table.\n\n\"I'm sorry, Nick. But...we can't,\" she repeated as if she were trying to convince herself. \"Dinner will be ready shortly.\"\n\nI watched in silence as she turned to leave. I begged whatever gods there were to make her look back, just once. But not once did she even hint at glancing over her shoulder. I screamed at myself to get to my feet and go after her. But somehow, I knew that would be the wrong move to make. It could make things worse. Not that I was sure that could happen right now.\n\nI chain-smoked another two cigarettes before finally mustering the courage to head down to the house. Dinner would be served by now, and I had to face the music. I was determined to not let the issues between Amanda and myself affect the rest of the family.\n\nDinner was challenging. Both Amanda and I did out best to keep things as normal as possible. The last thing that this family needed was a rift because of us. Mel gave me a few curious looks before shifting her gaze back to Amanda. She knew something had happened and would probably question me about it sooner rather than later. The petite, white-haired girl scared me a little with how protective she was of her sisters. She was also the only one who knew the entire story. But she was also the only one I could think of to talk to about the shitstorm I had created.\n\nErica spent most of the meal eye-fucking the shit out of me from across the table. The dribble of sauce on her chin was most definitely left there on purpose until I looked her way. When she licked it off with a practiced lap of her enticing tongue, blood shot to my penis immediately.\n\nThroughout the entire dinner, sweet Emily was oblivious to everything. She chatted with the entire table about the day we had spent together and what she was looking forward to\u2014and not\u2014about going back to university. She flashed me a few smiles when our eyes met, and I tried my best to act as normal as possible.\n\nI excused myself as soon as I was done eating\u2014not even bothering to offer to help clean up\u2014and retreated to the small sanctuary of my flat. At least here I could clear my head and think about what I should do next.\n\nThe logical solution for me was to try and find a place of my own so I could distance myself from my sisters and the roiling emotions I felt for them. I sat on my couch as the TV ran in the background, sorting through my thoughts. Maybe Amanda was right. I knew I loved her, and I could tell she felt the same way about me. But it wasn't right. Nothing I was doing with my newfound sisters was right. There were plenty of girls out there for me to meet, date and fuck. Why did I have to get such a hard-on for the ones that I'm not supposed to? It could be the allure of something forbidden. But that had never really appealed to me in the past. I was so wrapped up in my own thoughts, I didn't hear the door open.\n\n\"Hey, Nick. Are you okay?\"\n\nI turned my head to see Emily standing in the open door. Once again, she seemed to be wearing nothing but an oversized t-shirt.\n\n\"Not really,\" I sighed.\n\n\"Can I do anything to help?\" she asked, closing the door and sliding over to sit beside me.\n\n\"Probably not,\" I replied.\n\n\"Well. I can try,\" she smiled, then kissed me on the cheek.\n\nEmily's arms wrapped around me and I felt her t-shirt clad body slide up against mine. The feel of her body was intoxicating, and I wanted to drink her in until I passed out from the sheer pleasure of being in her presence.\n\n\"I can't wait to sleep next to you again,\" she said in a soft whisper. \"You make me feel safe.\"\n\nI knew Emily wasn't trying to be seductive\u2014it just wasn't in her character\u2014but damn was she giving Erica a run for her money. I was rock hard in seconds, and I wanted nothing more than to tear that useless t-shirt away and explore her naked body. I wanted...no, I needed to kiss, touch and lick every part of her body. I wanted to enter her as I heard my name upon her lips.\n\nI was losing control of the situation. Amanda was right, I couldn't do this. Especially with Emily.\n\nWith more willpower than I thought I could ever possess, I gently pried Emily's arms from around me and put a healthy distance between us.\n\n\"I'm sorry, Em. We have to stop,\" I said, unable to meet her eyes.\n\n\"But...\" she replied softly. \"We aren't doing anything wrong.\"\n\nMy heart stopped at the hurt in her voice. But I stood my ground. \"I'm your older brother. I'm actually the eldest in the family. I shouldn't be taking advantage of you like this.\"\n\nI waited several moments before being able to lift my eyes and look at the most innocent of my siblings. She was kneeling on the couch, her hands folded in her lap, hanging her head.\n\n\"I understand,\" she replied softly. \"I'm sorry.\"\n\nEmily jumped to her feet and dashed for the front door. I thought I heard a muffled sob as she ripped the door open and darted out into the night. The screen door slammed shut behind her, and I was suddenly left feeling like I'd been given a back massage by a herd of cattle in a pasture full of shit.\n\n\"Fuck me,\" I whispered to myself, then shut the TV off and headed for bed.\n\nI must have been lying in bed for nearly an hour before I heard the front door open again. I started to wonder if maybe Emily had come back to yell at me for being an asshole, or maybe Amanda had come to change her mind. A lot of good that would do now that I'd just crushed Emily's feelings. Then I remembered Erica.\n\nThe last place I wanted to be when the seductive vixen found me was lying in bed. I highly doubted I could control myself if she sauntered in here and climbed into bed with me. I quickly pulled a pair of shorts and a t-shirt on before making my way to the living room. What I saw made me wish I were still waiting in bed for my sister's late-night visit.\n\nErica stood in my living room wearing a black crop-top that looked to be several sizes too small, and a tiny G-string that looped over her wide hips. Her thin waist, flat stomach and smooth legs looked incredibly enticing. But it was the subtle purse of her lips and smouldering look in her blue eyes that could make a eunuch hard. A small leather choker with a single silver ring encircled her flawlessly smooth throat and completed her minimalistic outfit.\n\nI knew what I needed to do. But I wasn't happy about it one bit.\n\n\"I've been waiting all day for this,\" Erica said, sauntering over to me.\n\nI stood in a trance as I watched her gracefully cross the short distance between us. One leg in-front of the other as her hips swayed with an exaggeration of her movements. Erica stopped less than a metre away from me and ran her hands up her thighs, over her hips and along her stomach until they reached her heavy breasts. She was quite obviously not wearing a bra, and I nearly burst a hole in my shorts when she gave her tits a firm squeeze.\n\n\"Erica...\" I started to say, but she spoke over me.\n\n\"I bet your hands feel much better,\" she cooed, running her hands along her body. \"You can do whatever you want to me, Nick.\"\n\nI was fighting a losing battle with my own willpower. I was so horny that I just wanted to forget that this wet dream made flesh was related to me and spend the whole night exploring her body and fucking her senseless. I knew it would be amazing. Erica knew it too. But there would be consequences. Amanda had already planted the seed of doubt, and Emily had already been hurt by my refusal for something as simple as sharing a bed. It would be cruel to take Erica to bed after having done that to her.\n\n\"We can't do this,\" I said with a heavy sigh. \"I'd like you to leave so I can get some sleep.\"\n\nThe look of shock was plain on the gorgeous woman's face. She had come up here expecting a night of mind-blowing sex\u2014after earlier today, I couldn't fault her for it\u2014and now I was turning her away. This would make it the third time she'd come to me in the night, only to find me with another girl in my bed the first two times. I can't imagine what she must be feeling right now.\n\n\"But...\" she stammered. \"Earlier you said. . .\"\n\n\"I know what I said,\" I closed my eyes, summoning the willpower to follow through. \"But we can't do this. I'm your brother. We shouldn't have even toyed with the idea of sleeping together.\"\n\nThere was a deafening stretch of silence as I waited for an outburst from Erica. She was easily the most outspoken of my siblings, and I was expecting her to yell, curse and maybe even throw something at me. She wasn't accustomed to being rejected.\n\n\"I understand,\" she said softly.\n\nI had to process her reply for a moment before I fully registered what she had said. Her tone was quiet, and her words were dejected. I still had my eyes closed\u2014not trusting myself to look at her right now\u2014so I opened them slowly to see the once confident goddess of a woman standing with her arms crossed over her chest and her body drawn in. She was no longer displaying herself to me.\n\n\"Erica...\" I started to say.\n\n\"No,\" she snapped with a little of her venom. \"Nick...just shut up.\"\n\nThere were tears in her eyes now. She looked to have been holding them back, but she could only hold them for so long. The perfectly applied eyeliner now had small rivulets running down her cheeks, and I could see the hurt and rejection in her eyes.\n\n\"I didn't know this meant so much to you,\" I said, taking a step towards her.\n\n\"Because I'm just some dumb slut?\" she snapped in reply.\n\n\"No,\" I said, placing a hand on her shoulder. \"I didn't mean it like that.\"\n\n\"It doesn't matter,\" she shifted uncomfortably, but didn't move away from my touch. \"Guys only want me for one thing anyway. It's just a strange feeling to be dumped before the sex.\"\n\n\"I'm doing this before we make a mistake,\" I said, not touching on the subject of how she usually dates and dumps guys. There may be more to that story. But it wasn't important now.\n\n\"Would it be so bad?\" she said, looking me in the eyes. \"We could keep it a secret.\"\n\n\"Could you imagine trying to keep something like that from the rest of the family?\" I answered.\n\n\"I wouldn't be able to,\" Erica sighed heavily.\n\nI pulled her into a hug, and her arms encircled my waist as she buried her face into my chest. I ignored the feel of her body against mine well enough\u2014the mood really had been killed\u2014and just focused on comforting my sister.\n\n\"Can I stay with you tonight?\" she asked with a muffled voice.\n\n\"I'm not sure that's a good idea,\" I replied, although it did sound nice.\n\n\"Let me get changed and it'll be easier,\" she said, wiping her cheeks.\n\nI pushed Erica out to look her in the eyes. I saw the real girl behind the make-up, expensive clothes and bitchy attitude. I saw my sister for the first time. And I felt my heartbeat quicken for her.\n\n\"It isn't the clothes you wear. Or don't wear. You'd look amazing in a potato sack,\" I laughed.\n\n\"I'll have you know, I can totally rock a potato sack,\" Erica replied with a small smile. \"It's about how you modify it.\"\n\n\"Noted. But it isn't what you wear or how you wear it. It's what's up here,\" I tapped on her temple gentle. \"That makes you who you are and irresistible to me.\"\n\n\"Are you sure you don't want me to blow you?\" Erica asked with a serious look. \"Because that's about the nicest thing a guy has ever said to me and I think it deserves a reward.\"\n\nI couldn't help but chuckle at her\u2014what I hoped\u2014inappropriate timing for humour. Or maybe it was appropriate. We both seemed to find it funny and it had lightened the mood.\n\n\"I'll have to pass,\" I shook my head. \"But thank you.\"\n\n\"Your loss,\" Erica shrugged.\n\nI was glad to see her back to her normal self. Well...at least as normal as she could be. My family had some issues, but I loved them.\n\n\"Sooooo?\" Erica asked after a minute had passed. \"Can I stay with you? I could really use the company.\"\n\nI mulled it over for half a minute as I weighed the risks and consequences of sharing a bed with Erica. I was somewhat sure I could keep my hands to myself during the night\u2014I was quite tired already\u2014and it was just two adults sharing a bed. I'd sent Emily away earlier for wanting the same thing, so I kind of felt bad about considering letting Erica stay. But we'd both gone a lot further in the short time I'd been here. Cutting it off so abruptly with Emily was a good way to stop it from getting any worse before I could end it. Maybe something as simple as sharing a bed might help put the brakes on whatever this was between Erica and myself.\n\n\"Okay,\" I nodded. \"But you have to get changed.\"\n\n\"I thought you said it wasn't what I wore?\" she asked with a raised eyebrow.\n\n\"It isn't,\" I smiled, shaking my head. \"But that definitely won't help me sleep.\"\n\n\"Okay,\" Erica grinned. \"But you have to keep your shirt on too. If you go topless, so do I.\"\n\n\"Deal,\" I nodded.\n\nI tore my eyes away as Erica left through the front door to go and change. Trying to fight the image in my head of our naked bodies entwined in my bed during the middle of the night. Maybe a cold shower was a good idea before bed.\n\nKnowing I didn't have much time before Erica would return, I stripped off and jumped in the shower, leaving the water on cold. I shivered my way through a quick scrub down and was out of the shower in record time. The icy water had done the job of cooling my blood, but it had also banished any vestiges of sleep from my mind.\n\n\"Better than a perpetual boner,\" I muttered to myself as I dressed.\n\nErica was just re-entering my flat as I left the bathroom. Her hair was tied into a neat ponytail and she had changed into baggy black t-shirt and grey sweatpants. Her figure was concealed by her new outfit, but nothing could banish her natural beauty.\n\n\"Ready for bed?\" she smiled.\n\n\"Yeah,\" I nodded.\n\nIt took us a few minutes to get situated on the large bed, so we were both comfortable. I opted to sleep with my back to Erica to minimize the chances of any hanky-panky in the middle of the night. We had agreed to just share the bed, but I had a feeling her libido was playing up just as much as mine was and I didn't think it would take much to rip away the flimsy barrier of restraint.\n\nThis was such a bad idea.\n\n\"Nick?\" Erica spoke softly in the darkness.\n\n\"Yeah?\"\n\n\"Thank you.\"\n\nEven with our backs to each other, I could feel the warmth of her body. I felt frustrated that I couldn't feel her skin and frustrated at myself for feeling that. Sleep came, but it was a long time of staring into the darkness.\n\nI wasn't sure how long I had slept for\u2014I had no idea what time it was when we went to bed, let alone when I actually fell asleep\u2014but it was still dark outside when my eyes flickered open. A quick glance out the window showed a sliver of sunlight on the horizon as the dark sky slowly began to brighten into early morning.\n\nBack home, I would often wake with the rising sun and get a jump on my tasks for the day. Since coming to Australia, I had become lazy. Sleeping in and laying about the house most of the time. I hadn't been here for even a week, yet I felt like I could be doing so much more with my time. Maybe the reason I was trying to fuck my family members daily was because I was cooped up in the house. I needed to release some stress and energy.\n\nErica was still fast asleep\u2014snoring softly\u2014so I was able to slip out of bed easily without waking her. She lay sprawled on her back, the covers kicked off. Her oversized shirt had ridden up her stomach, and her sweatpants had slid down her hips. The combination left me with a sight that nearly broke my resistance once more. Her shirt had bunched up under her breasts, giving me a peek at the swell of her under-boob that teased her perfection. Along with an unobstructed viewing of her smooth figure, right down to the top of her visibly hairless mound. By the looks of it, Erica hadn't worn any underwear.\n\nI let my eyes drink her in for a minute before tearing them away. I had seen her in far less\u2014even in the nude\u2014so I wasn't sure why this was so appealing to me. Feeling frustrated once more, I quickly changed into a pair of shorts and a fresh t-shirt before I pulled on my running shoes\u2014grabbed my wallet and keys\u2014and quietly left my flat to go for a morning run.",
        "Early morning runs were a rarity back home. It was far colder in the mornings and a lot of my jobs had me starting at stupid-o-clock in the morning. But I always tried to get out for a quick run at every chance I could. There was no better way to wake yourself up and get ready for the day ahead.\n\nI kept my route simple. I didn't know my way around the area too well and I didn't want to get lost. I hadn't charged my phone again since yesterday, so I had left it at home. I wasn't glued to my phone like my sisters seemed to be. But it would be embarrassing to get lost with no way of alerting them. The GPS would have been handy too.\n\nI stuck to what looked like the main road once I left our neighbourhood\u2014memorizing the street signs as I went\u2014and kept up a decent pace. Before long I was sweating heavily as the morning sun rose higher and higher above the horizon. It was still early morning, but we had just entered the Australian summer and I could really feel the difference.\n\nI jogged on for about an hour\u2014slowing to a walk periodically\u2014before I realized I was actually near the small shopping centre in the suburb. It wasn't anything more than a supermarket, hairdresser and butcher with a few caf\u00e9s, takeaways and specialty shops scattered about. And the gym. Lifting some weights might be a good way to get my mind off my supercharged libido and my desire to stick my dick in my sisters.\n\nThe gym was mostly empty\u2014which was my preference\u2014with only a few early-birds running on treadmills and working at the machines. I was plenty warmed up from my morning run, so I grabbed a bottle of water from the vending machine, a fresh towel from the ones supplied, and started some serious lifting.\n\nLuckily, the tightness and pain in my muscles from my last session were mostly gone. Emily had done a great job with her massage, but I was still conscious about overdoing it again, so I stuck to working arms and a bit of legs. I never skipped a leg day, but I always went easier on my legs. Couldn't run if you couldn't feel your legs.\n\nI spent about another forty minutes in the weight section as I lost myself in the repetition of the exercise. I was finally able to clear my mind of the whirlwind of emotions and feelings regarding my siblings. I knew I'd have to go home and confront them again\u2014even though I wasn't looking forward to it\u2014but for now I was able to forget it.\n\n\"You're here early.\"\n\nI had stopped to take a rest on one of the weight benches when I heard the familiar voice. I turned to see Sarah\u2014the gym manager\u2014smiling at me. She was dressed in a pair of blue and grey yoga pants and matching sports bra. Her tanned and toned stomach was at my eye level. Which was I taking full advantage of.\n\n\"Yeah. I went for a run and came here by accident,\" I said, wiping sweat from my brow. \"Figured I may as well get a work-out in.\"\n\n\"And here I was thinking you came by to see me,\" Sarah said with a wink.\n\n\"Sorry to disappoint,\" I smirked. \"But that doesn't mean it's not good to see you.\"\n\n\"Better,\" she grinned. \"You all done for your session?\"\n\n\"Yeah. I was just about to shower and then head back home,\" I replied.\n\n\"Well...my place is across the road, and my shower is far better,\" Sarah said, the glint in her eyes leaving no question as to her intentions.\n\n\"I guess I could always do with more cardio,\" I chuckled. \"Don't you need to do your workout though?\"\n\nSarah looked like she had just arrived. Her hair was nearly tied back, her skin was devoid of perspiration and her gym towel was still neatly folded.\n\n\"I was hoping you'd give me a hand with that too,\" she smiled as her eyes roamed my body.\n\n\"Well. Lead the way.\"\n\nI had thought early on that I needed to get laid to get my sisters out of my system. That hadn't seemed to work, but maybe I just needed to try more. Surely if I had a steady supply of sex, I could function around the house without wanting to ravish one of my siblings at any given moment. I didn't know if it would work or not, but I was happy enough to perform this test. Sarah seemed like a more than willing partner. And I could always hit up Jen for a booty call.\n\nI let my eyes feast on Sarah's figure as I followed her out of the gym, barely noticing the short trip across the road to the town houses where she lived.\n\nChapter 12\n\n \n\nSarah lived in a small one-bedroom townhouse off the main road that passed by the small shopping district. The interior of her flat was neat, cosy and well looked after. The kitchen and living room were divided by a short kitchen counter. A sliding glass door led out onto a small balcony with a table and chair set up.\n\n\"Nice place,\" I said, looking around the living room.\n\n\"It's a shit hole.\" Sarah shrugged. \"But it's mine.\"\n\n\"My place is smaller,\" I chuckled.\n\n\"Don't you live in a big house with your sisters?\" Sarah asked, cocking her head to the side.\n\n\"I do.\" I nodded. \"But I'm in the flat out back.\"\n\n\"At least you have privacy.\" she said.\n\n\"It's a luxury in a house full of women.\" I laughed.\n\n\"I can imagine.\" Sarah laughed with me. \"Bathroom is through that way.\"\n\nSarah directed me to the single door at one end of the living room. Inside the small\u2014green tiled\u2014bathroom was a lowered section with a showerhead and a curtain for privacy, a toilet, and a simple basin and bench.\n\n\"Cosy,\" I said.\n\n\"It does the job.\" Sarah shrugged, then slapped me on the ass. \"Now clean up, Stud.\"\n\nI smiled at Sarah's forwardness and stripped out of my clothes without even closing the door. If she wanted to take a peek, who was I to deny her that? It wasn't like she'd see anything she hadn't seen before. Or wouldn't see soon enough.\n\nI scrubbed myself down as quickly as I could and dried off in a hurry. I knew what I was here for, so I didn't even bother getting dressed again. I just wrapped the towel around my waist and sauntered out of the bathroom. To where Sarah was sitting on her couch, completely naked. The blonde, athletic goddess had positioned herself so that I couldn't miss her when I came out of the bathroom. Her legs were parted as she rubbed at herself with one hand and toyed with her nipples with the other.\n\n\"I've done my warm-ups,\" she winked.\n\nI drank her naked body in for several seconds before I whipped my towel off and crossed the room. My dick guided me to her like it was made from iron, and Sarah's pussy was a strong earth magnet.\n\n\"I was hoping we could have some more fun again soon,\" Sarah giggled as I reached her.\n\n\"So was I,\" I grinned, dropping to my knees before her.\n\nI gently moved Sarah's hand aside as I wrapped my arms around her thighs, draping her legs over my shoulders. Her vagina was smooth and slick with her own juices already, and I took a moment to inhale her intoxicating aroma before diving right in. And dive in I did.\n\nI wasted no time as I ran my tongue along the folds of her vagina. She tasted as good as she smelled, and I soon found myself salivating at the mere thought of drinking her in once more. Sarah too was moaning in pleasure as I assaulted her nether regions like a starving dog in a bowl of chum. I avoided her clit for quite some time, edging closer to her love button a few times and backing off when I saw her back arch. Her fingers ran through my hair as I frenched her pussy and I could hear the frustration in her moans as I passed over her clit time and time again.\n\nThen I clamped down and started working.\n\nAs soon as my lips closed over Sarah's sensitive nub, she started thrashing. Her thighs clamped down around my head\u2014and powerful thighs they were\u2014threatening to tear my head from my shoulders. A death I would have willingly submitted to.\n\nSarah's fingers pulled painfully at my hair as her climax hit, but I didn't complain. I kept lapping at her clit as my hands roamed over her hips, up her stomach and cupped her heavy breasts. I pinched her nipples as her back arched and she let out an ear-shattering scream that was muffled by the magnificent feeling of her warm thighs against my ears. Her hips bucked and gyrated against my face for nearly a full minute before she finally started to come down from her climax.\n\n\"Holy shit,\" she moaned as her legs loosened their vice-like grip on my head.\n\n\"That was quite intense,\" I chuckled, wiping my face with the back of my hand.\n\n\"You're telling me,\" Sarah all but moaned.\n\nI pulled away from Sarah's legs and ran my eyes over her athletic frame. Sweat glistened along her abdominals and beaded down her chest, between her breasts. A huge grin was plastered to her gorgeous face as she gazed at me with lust-filled eyes.\n\n\"Now gimme that big dick of yours,\" she demanded.\n\nNever one to deny a beautiful woman\u2014especially one who was naked before me\u2014I rose to my feet and gripped the base of my cock, giving myself a few half-hearted strokes. Sarah shot up immediately. Her hands went to my thighs as she perched herself on the edge of the couch cushion. Her lips found the tip of me penis quickly, and I felt her tongue working its wonders along my glans. Sarah's mouth was warm, wet and very inviting. I held the base of my cock still as I let her work me over. Enjoying the feel of her hand's on my thighs as she trailed them up and down, and even around to grab my ass.\n\n\"I'm starting to think you enjoy doing this,\" I said with a groan.\n\n\"With a cock this nice,\" she replied, running her tongue up the underside of my shaft. \"What girl wouldn't?\"\n\nI was feeling incredibly horny already. The night spent with Erica, the sexual tension in a house full of attractive women and eating her delicious pussy had me primed and ready for a mighty climax. It would be a little embarrassing to cum so quickly with the sexy blonde. But I knew I could easily go for another round, maybe even a few more. I had to wear myself out somehow.\n\nSarah spat a glob of saliva on the tip of my penis before she began working it into my shaft with both hands. I released my own hold on my cock and took her head in both hands as I guided her mouth back to my erection. Sarah obliged eagerly and began working my dick into her mouth and down her throat with gusto. After only a few seconds, I felt the tightness of her throat constrict around my shaft as she took me to the base, her nose pressing into my pelvis.\n\n\"Holy shit!\" I groaned.\n\nSarah moaned something in response. When I looked down, I nearly busted my load at the sight of her eyes looking up at me as she buried my cock deep in her throat. After several seconds passed, she extracted my erection from its warm confines and coughed a little. Saliva dribbled over her bottom lip and splatted between her large breasts to mingle with the sweat of our activities, giving me a wonderful idea.\n\nWithout a word, I lowered my stance and moved closer to Sarah. Her hands ran down my thighs as she opened her legs wide to let me in. It only took her a few seconds to see what I wanted, and a huge grin spread across her face.\n\nI nestled my slick erection between her breasts, and Sarah welcomed me by pressing a hand to each side, trapping by cock between her impressive fun-bags. The softness of her breasts enveloped my dick as I slowly began sliding back and forth. I placed my hand to her shoulder to give myself better leverage before I started pumping my hips faster. The warmth of her skin and slickness of my cock made for an otherworldly experience. But when her tongue came into play, I nearly lost it right there.\n\nAs my cock passed between her glorious mounds, Sarah opened her mouth and flicked the tip of my penis with her tongue, teasingly. After several moments of amazing tit-fucking, I felt her lips clamp down around my cock. She couldn't get much inside her mouth, but she worked well with what she had. I stopped my motions and moaned in pleasure, only to moan once more as Sarah started sliding her breasts up and down my shaft again. Taking control. She shifted her breasts in a way that massaged my cock with each pass, stopping every few passes to take my tip between her lips. I could feel my seed building up and getting ready to paint her face like a drunken master artist.\n\nMy climax sat in the base of my balls waiting to be released. Usually when it came to this point, I would be painting whatever was in front of me like a careless first day apprentice. But it just wasn't coming this time. The frustration I felt as I wanted to explode onto this gorgeous woman's face\u2014but couldn't\u2014was really getting to me. I closed my eyes and tried to focus on chasing my climax.\n\nAn image of Erica flashed in my mind. She was in the exact position Sarah was. Her naked body was covered in droplets of water that cascaded down her flawless skin. Her long black hair clung to her body as the spray of water washed over her. She was in the shower, and my cock was between her tits instead of Sarah's. Erica looked at me, her lips parted in a silent moan as her eyes bore into mine.\n\nThen it hit me.\n\n\"Oh shit!\" I groaned as my climax rushed forward.\n\n\"That's it,\" Sarah cooed, just as the first rope of cum burst forth.\n\nI ran my fingers through her hair and gripped tightly as my climax hit. My legs began shaking and my hips bucked of their own accord. I locked eyes with the gorgeous blonde before me as the first strand of seed burst forth, laying to rest along her perfect neck and over her chin. Sarah tilted her face down and opened her mouth, catching the next few spurts straight on her tongue before she clamped her mouth over the tip of my convulsing penis. Her cheeks drew in as she suctioned my dick like a professional vacuum and began draining me with an audible moan that sent vibrations down my shaft that I felt resonate in my balls. Encouraging another half dozen spouts out of my testicles and into her greedy mouth. Her throat flexed again and again as she swallowed everything I gave her, and I saw my cock pulsing and throbbing as it continued to act as a conduit between our bodies. Finally, my cock stopped spasming and Sarah released her lip-lock on my dick and began languidly licking at the tip of my cock and down my shaft to take each of my drained testicles into her mouth.\n\nOnly after it all passed did I realise I had been pulling her hair quite hard, so I loosened my grip.\n\n\"Sorry,\" I apologised.\n\n\"Never be sorry for that,\" Sarah winked. \"You ready to go again?\"\n\nMy dick was still hard enough to hammer nails, but I did need a minute to collect myself. Sarah had obviously recharged from her first orgasm of the morning and was all but humping my leg with arousal. This might just be what I needed to get my mind off my very fuckable sisters. Although, the fact that I had to imagine Erica to get off was truly unsettling. It was like a repeat of the night I'd spent fucking Jen. Nothing I did had gotten me as close to blowing my load as when I thought about one\u2014or more\u2014of my sisters.\n\n\"Let's do it,\" I smirked.\n\nSarah grinned like a maniac at my words, then let out a playful giggle as I reached down and wrapped my fingers around her thighs, just under her knees. Sarah took my lead as I lifted her legs, sliding herself down on the couch so that her back was now on the cushion. When her legs were against her chest and her knees nearly around her ears, she wrapped her arms around her thighs to keep her legs spread and her vagina open to me. I stood back and admired her for a few moments, absenting stroking my dick. The blonde fitness instructor was obviously flexible, showing not a hint of pain or discomfort in being folded almost double at the waist. She just bore into me with her lust-filled eyes and licked her lips when she dropped her gaze to my erection. I was ready for her, and she was more than ready for me.\n\nThe height of the couch was difficult to work with, but after only a few seconds, I had adjusted myself into a comfortable crouch so I could enter her. I slid into her easily, and I heard her loud moan as I hilted myself deep inside her. Sarah's head rolled back, and her mewls of pleasure increased in volume and quantity as I slowly dragged my dick out of her tight pussy before sliding back in painstakingly slow. After the dozenth time, I felt her pussy flutter around my dick, and she let out a gasp of pleasure. Her thighs trembled and her toes curled as I felt her vagina tighten around me. She was so tight I couldn't pull out of her.\n\n\"More,\" Sarah panted. \"I need more.\"\n\n\"What's the magic word?\" I winked, slowly withdrawing my dick from her slick tunnel.\n\n\"Fucking now,\" she groaned in frustration. \"Fu\u2014.\"\n\nI cut her off by slamming myself into her again. I leaned over the sexy blonde and placed an arm either side of her body, holding her legs to her chest with my arms. Sarah let go of her own thighs and chose to wrap her fingers around my biceps. Then I started pounding the gym manager.\n\nThe noises Sarah made almost sounded like she was being brutally murdered, and I worried for a moment that her neighbours might call the cops. But I guessed if they could hear the distinct slapping of naked bodies and her screams of pleasure, they could probably hear her cursing like a sailor, telling me to fuck her like a dirty whore.\n\nAnd fuck her like a dirty whore I did.\n\nI didn't bother toying with other positions as I got my second helping of cardio today. I just kept pounding her into the couch like an animal. The couch creaked and slid across the floor as I relentlessly fucked the gorgeous blonde and I had to place one foot on the cushion beside Sarah to avoid accidentally tipping the couch over with the force of our rutting. But this just gave me even more leverage to plough her cunt. And plough away I did.\n\nI hadn't really been keeping track of time, but I'd estimated we'd been at it for a solid twenty minutes by now. I was no three-pump chump and I enjoyed taking my time with women. But I had been going at Sarah quite hard since the start, and I didn't feel like I was any closer to my second orgasm than I was when I started. Usually I'd have had to slow down and switch it up by now. Sarah had hardly stopped her cursing and moans of pleasure, but after what must have been her eighth or ninth orgasm, she went limp. A stupid, satisfied grin plastered to her pretty face as I continued to plunge her vagina like a butter-churn.\n\nI was growing frustrated once more and thought about just stopping. Did guys fake orgasms too? Could I even sell that lie? We were fucking bare-back and I'm sure she'd realise I hadn't climaxed when my cum wasn't leaking out of her. But I just didn't see any way out of it. My muscles were starting to cramp, and I doubted Sarah had much left in her. As it was, I didn't know if she was going to be able to walk for a few days after this.\n\nThen I decided to go for it. I decided to test a theory. Let's try three for three.\n\nI thought about Erica in my room last night. Emily curled up beside me in my bed. Mel sitting by the pooling in her bikini. And Amanda as she climbed onto my lap and our tongues danced.\n\nI grabbed a fistful of Sarah's hair and leaned over her body, pressing her face into the crook of my neck. I closed my eyes and let the images of my sisters roll through my mind. The sound of their voices, the feel of their skin and the scent of their shampoo. Each as intoxicating as the other. I felt it now.\n\nI let out an almighty groan of pleasure as my climax hit me like a freight coming off its rails. It was spectacular and horrendous at the same time. I held onto the images of my siblings as I slammed into Sarah and dumped a massive load into her. My climax must have triggered something in the blonde woman, because she let out another scream of pleasure as I filled her womb to near bursting.\n\nWe lay in the same position for what must have been ten minutes at least. My dick was still hard, but he felt drained. Sarah and I panted heavily as we caught our breath and slowed our racing hearts. Both of us were covered in sweat and our hair was matted and spread across our naked skin. We looked like a hot mess. But damn did we look satisfied.",
        "\"Holy shit,\" Sarah said as I slipped out of her and collapsed on the couch beside her.\n\n\"Yeah,\" I said, still breathing heavily.\n\n\"I think I need to call in sick,\" Sarah added, sitting up and stretching her muscles. \"I'm not going to be walking right for a few days.\"\n\n\"Sorry,\" I chuckled. More than a little proud of myself.\n\n\"I'll take a few days off if it means getting fucked like that again,\" she laughed. \"I have no idea what got into you near the end.\"\n\n\"Pent up frustration,\" I shrugged.\n\n\"Well. I'll be happy to help you release it when I can,\" she smiled.\n\n\"When you can?\" I asked, a little curious as to her choice of words.\n\n\"Yeah,\" Sarah sighed, collapsing back and nestling into me again. \"I should probably tell you that I'm not exactly single.\"\n\n\"You have a boyfriend?\" I asked. Not surprised, as she was a super-babe and could pull any guy. Just a little put-off by her cheating on someone with me.\n\n\"No,\" she shook her head. \"I'm married. But we are kind of separated.\"\n\n\"Kind of?\" I asked.\n\n<br >\"Well. I told him I wanted a break. He said we'd talk about it when he got back from his business trip,\" she explained.\n\n\"I see,\" I replied, a little shocked by the news.\n\n\"I really am sorry. I wanted to tell you, but I was worried you'd turn me down, and I really needed this,\" Sarah said softly. \"Our sex life has been lacking a lot lately and I just thought if I got it out of my system then maybe we could sort it out.\"\n\n\"Do you still think that?\" I asked.\n\n\"I don't know,\" Sarah sighed. \"Do you hate me?\"\n\nI thought about her dilemma for a few moments. On one hand, she was cheating on her husband\u2014which was a shitty thing to do. But it seemed like there were issues in their marriage that he needed to see to also. If all she needed was a good fuck a few times a week, surely her husband could fulfill that need for her. She was a young, healthy woman after all. Not to mention insanely attractive. She had gone about it the wrong way, but I couldn't bring myself to dislike her, let-alone hate her. Plus, I did get to have some great sex.\n\n\"Nah,\" I said, pulling her into a hug. \"Not at all.\"\n\n\"Thanks, Nick,\" she giggled. \"I was hoping you'd understand.\"\n\n\"I don't agree with your choices,\" I added. \"But I'll respect your decision to make them and I'll keep your secret.\"\n\n\"Thank you for being so understanding,\" she grinned and kissed me on the cheek. \"Want me to suck you off as a thank you?\"\n\n\"I'm good thanks,\" I chuckled. \"I don't think he could take much more right now.\"\n\n\"That's fair,\" she smiled. \"Maybe we can do this again? If that's okay with you.\"\n\nI thought about the consequences of continuing to sleep with a married woman. We'd already done the deed, but I had been in the dark about her relationship. I could easily play the 'plausible deniability' card if ever confronted with an angry husband. But if I continued to sleep with Sarah, it would be with the full knowledge that I was fucking the shit out of someone else's wife. The thought of someone I was married to fucking another man made me angry as all hell. But then again, I'd be fucking her if she needed it. I knew I was just trying to justify my actions and make myself okay with banging a married woman. I needed an outlet from all the sexual tension that built up daily around the house. There was always Jen. But I genuinely liked Sarah much more than the stuck-up goth princess.\n\n\"Let's just play it by ear for now,\" I replied. \"I need to have a think about everything you've told me.\"\n\n\"I understand,\" she smiled. \"Thank you, Nick.\"\n\nDespite my words of non-commitment. We made out on the couch for another ten minutes before we finally made it to the shower. Sarah was able to walk, although she was a little wobbly on her feet. We set about washing one-another and spent more time making out under the hot spray of water before we were finally dried, dressed, and finally able to keep our hands to ourselves. She was married. But I just kept telling myself that if he didn't want to fuck her, I would.\n\n\"Do you need a ride home?\" Sarah asked, drying her hair with a thick blue towel.\n\n\"That would be great,\" I replied. \"I'm more than a little tired.\"\n\n\"I bet,\" she winked. \"A ride home is the least I can do for you.\"\n\nTen minutes later I was giving Sarah a quick kiss goodbye before turning to the front door. It was still morning and I wondered which of my sisters were awake. Surely Amanda would be up and about, Emily too. I hadn't really patched things up with either of them, so this could turn into a very awkward morning. Maybe I could sneak around the back and up to my flat without seeing anyone. Anyone who was already up probably thought I was still in bed anyway. Unless one of them had come to check on me. It wouldn't be out of character for Emily to come up early to see me, but after last night I highly doubted my brunette sister wanted to see me, let alone talk to me. I really needed to patch things up with her. I hated myself for the look on her face when she ran off last night.\n\nI had been struggling with myself over the incident with Emily all morning. Had I been too firm with her? Or was it just right to put an end to something wrong? Was it even all that wrong? Nothing felt as right as when I held one of my siblings, or even thought about them. There must have been a reason I couldn't get my rocks off unless I was thinking about one of them.\n\nI knew I loved them. I would die for any of them without hesitation. I would protect them and look out for them. But did that mean I needed to protect them from myself?\n\nI was still struggling with my own thoughts when I made it around to the backyard through the side gate. I was so torn as to what I should do. I felt the pull of my siblings even now. I wanted nothing more than to taste Amanda's lips again. To hold Emily in my arms. To feel Erica's body against mine. To see Mel's gorgeous smile.\n\nThoughts of Mel being included in my sexual fantasies weren't normal. Sure, she was sexy and beautiful. Just like her sisters. But I hadn't felt the immediate pull from the platinum blonde as I had the others. Mel was scarily intelligent and perceptive. She had a cool demeanour that made it hard to tell what she was thinking. But there was something there now.\n\nIt was her I imagined as I climaxed with Sarah. It was Mel that writhed beneath me as I pumped her like an animal in heat. It was Mel's voice I heard moaning my name.\n\nAnd I was as hard as a flagpole once more.\n\n\"Good morning, Nick.\"\n\nI snapped my head to the side to see Mel sitting by the pool. She smiled at me from under a black, wide-brimmed hat as she lowered a thick book she was reading. Her smile made my heart skip a beat.\n\nMy platinum haired sister...was completely naked.\n\nChapter 13\n\n \n\nI stood there like a kangaroo in the headlights as Mel smiled at me, the black hat the only stitch she wore. Her flawless, pale skin looked soft and supple. Her small, perky breasts were almost non-existent as she reclined on the chair. Her small pink nipples stood erect with little rings pierced through each. I let my eyes trail down her tiny waist, over her slim hips and down her slender legs. Eventually I made it back to her gorgeous face and expected a scowl to be marking her pretty face. But Mel simply smiled at me. Which did make sense. She was the one who knew everything that was going on around here. It was only logical that I found her to be incredibly attractive too.\n\nIt was just strange to see her so exposed. When it was only this morning that I thought about her while I fucked another woman.\n\n\"Hey Mel,\" I said after clearing my throat. \"I didn't know you would be out here.\"\n\n\"That's okay,\" she placed her book down on the table beside her and folded her hands over her stomach. Leaving her breasts bare. \"Sometimes I like to just relax out here like this. It's so refreshing.\"\n\n\"Yeah,\" I said. \"I bet it is. Just don't get sunburnt.\"\n\n\"I won't,\" she smiled, and pointed to the large umbrella that shaded her. \"I work hard to keep my skin so soft.\"\n\nMy dick was threatening to burst out of my shorts like the Hulk. And like the angry green monster, he wanted to smash something. Only his target was my very naked, and very arousing sister that sat across the pool from me.\n\n\"I need to go,\" I blurted out, then tore my eyes away from Mel before bee-lining it up the driveway and to my flat.\n\n\"Okay,\" Mel called out cheerily. \"I'll come get you when breakfast is ready.\"\n\nI contemplated just locking my door and hiding in my flat all day. I had just fucked like an animal earlier this morning and I was already feeling the effects of muscle fatigue from that and the workout I went through. But my body\u2014and more importantly, my dick\u2014was screaming at me to stick it to Mel. But I knew that was a bad idea. Just because she was naked it didn't mean she wanted me to fuck her. This has been her home for far longer than it has been mine. If my sisters wanted to strut around the house in their underwear, or swim topless at night and lay out by the pool in their birthday suits. They were allowed to.\n\nI'd just have to nut-up and deal with it. Surely I'd become desensitized to it in time. It had only been a few days. Although, I was fifty-fifty on whether I wanted to become desensitized to my gorgeous siblings or not.\n\nOnce I made it inside, I headed straight for the bathroom to have a cold shower. I had already cleaned myself up from my activities with Sarah earlier, but I desperately needed to get my arousal under control. It wasn't even midday yet and I was already in trouble of having my entire day derailed by my attraction to my siblings.\n\nI shivered through a quick, icy cold shower for a few minutes which had the desired effect on my erection. With that sorted, maybe I would be able to think a little clearer. I just hoped Mel decided to put some clothes on before I saw her again.\n\nI had just dried myself off and pulled on a fresh pair of shorts and a t-shirt when I heard a knock at my door. The knock itself meant it wasn't Erica\u2014and that it was also too early for my seductress of a sibling\u2014since she was fond of just letting herself in. Then I wondered where she for a moment. When I left this morning, she had been snoozing in my bed still. Maybe she was in the house getting ready for the day. I doubted Emily had forgiven me for last night and Amanda was probably avoiding until things weren't so awkward between us. So, that left Mel. She did say she was coming to get me for breakfast after all.\n\nI approached the door and mentally prepared myself for the encounter. Part of me hoping my platinum blonde sister was still naked, whilst berating myself for wanting to ogle her body once more. She did have a nice figure and her skin looked super soft.\n\n\"Hey,\" I greeted Mel as I opened the door.\n\nMel was clothed this time. The black tube top over her small but firm breasts and shawl wrapped around her narrow hips only seemed to accentuate her smooth legs. The shawl rode low on her hips, showing her hip bones and hinting at the coveted prize between her thighs. Her skin had a light sheen to it, like she'd just finished rubbing herself down. And I immediately began to wonder how it would feel to have my hands on her body, rubbing the coconut scented oil into her alabaster skin.\n\n\"Hey Nick,\" Mel smiled. \"Sorry about earlier.\"\n\n\"It's okay,\" I shrugged. \"Sorry for staring. I really didn't mean to.\"\n\n\"Would you have done the same if it were any of the others?\" she asked, tilting her head as she studied me.\n\n\"Well...I would try not to,\" I replied, rubbing the back of my neck.\n\n\"Why?\" she asked, seeming genuinely confused.\n\n\"Because it's wrong,\" I explained. \"You're my sisters.\"\n\n\"Half-sisters,\" Mel added. \"And we haven't grown up around you. So, there are no familiar bonds from childhood.\"\n\n\"What do you mean?\" I asked. \"It shouldn't matter.\"\n\n\"But it does,\" Mel smiled. \"Tell me something, Nick. Have you been with any women since you came to Australia?\"\n\n\"Yeah. You know I have,\" I replied.\n\n\"How many?\" she asked.\n\n\"Two,\" I replied truthfully. It wasn't like I was trying to keep Sarah a secret.\n\n\"So...you're not starved for sexual gratification. Yet you still lust after your own siblings,\" she said, sounding like she was lecturing a student.\n\n\"Yeah,\" I replied, not sure where she was going with this.\n\n\"Did you have girlfriends back in England?\" she asked.\n\n\"A few,\" I said. \"Where is this going?\"\n\n\"Well,\" she said, beginning to walk circles around me as she seemed to think. \"I've been thinking about your predicament ever since you got here. You were obviously enamoured with all of us. At first, I thought it might have been caused by a sheltered life and a late arrival to puberty. Or just being too busy for girls back home and potentially inexperienced sexually.\"\n\n\"You've been thinking about this since day one?\" I asked. \"How did you even know?\"\n\n\"But I think it is something more,\" Mel added, ignoring my question. \"Tell me, Nick. Have you ever heard of the term; genetic sexual attraction?\"\n\n\"Can't say I have,\" I shrugged.\n\n\"Well. It's a phenomenon that's unproven,\" she continued. \"But it's thought that strong blood-related relatives that meet as adults feel a strong sexual attraction to one-another. I haven't really looked into the studies too much. But from the small sample size in the house currently. It seems to be accurate.\"\n\n\"Wait,\" I placed a hand on her shoulder to stop her pacing. \"Are you saying that the only reason I'm feeling like this towards you all is because of some fucked-up scientific thing.\"\n\n\"You and us,\" she replied.\n\n\"Us? As in you too?\" I asked.\n\n\"Of course, dear brother. I find you incredibly attractive,\" Mel smiled. \"That's what prompted my studies into incest relationships. You'd be surprised how common it can be and just how many people have a fetish for it.\"\n\n\"People have a fetish for incest?\" I asked.\n\n\"Yes,\" Mel nodded. \"It's quite popular.\"\n\n\"Well. You really do learn something new every day,\" I shrugged.\n\n\"I enjoy learning,\" she smiled. \"On that note. I'd like to keep asking you questions. If that's okay with you?\"\n\n\"Yeah,\" I nodded. \"I've got nothing to hide.\"\n\nThis might have been the break I needed with Mel. She knew about the situations with each of our sisters and seemed to look at it with a completely scientific mind. She had admitted to being attracted to me but hadn't made any move towards me yet. Hopefully we could sort through the mess going on in my head and set things right around the house.\n\n\"Good,\" she smiled once more. \"When was the last time you had sex?\"\n\n\"Coming straight out with the big guns,\" I chuckled.\n\n\"I just want to get as much data as possible,\" she replied.\n\n\"This morning,\" I replied. \"About an hour ago.\"\n\n\"Well...that was unexpected,\" she blinked in surprise. \"Don't tell me who.\"\n\nIt was strange seeing Mel's normally calm and controlled facial features in surprise. And even stranger to hear the hint of jealousy in her tone. She covered it quickly though and continued with her questions.\n\n\"What was your level of arousal after seeing me this morning?\" she asked.\n\n\"My level of arousal?\" I asked. Unsure how to answer the question.\n\n\"Yes,\" she replied sharply. \"Was it higher, lower. Or about the same as when you had sex earlier.\"\n\nI thought about the question for a few moments. Unsure how to really gauge my 'level of arousal'. It was either boner-city or not boner-city. But I did feel my urges and resolve falter far quicker when I was admiring Mel earlier.\n\n\"More,\" I said with a sigh. Feeling a little shitty for Sarah. She was a super babe and great to fuck. It didn't feel fair to her.\n\nMel studied me for a few moments after I replied, then nodded. \"What about the night you had sex with Jen?\"\n\n\"What about it?\" I asked.\n\n\"Did you feel more aroused then?\" she asked.\n\nI thought about the night I'd fucked Jen after the party. I felt some similarities between having sex with the stuck-up goth girl and the blonde fitness trainer. At first, I thought I just wasn't that interested in Jen apart from her body. Maybe I'd had too much to drink or maybe I was tired. I had had a hard time climaxing when I fucked Jen and it was definitely one of my more athletic sexual encounters. I actually enjoyed Sarah's company. She was down to earth and fun to hang out with. But the sex felt the same. And with each woman, I had to think about one of my sisters to finally get off. I hadn't wanted to admit that part. Even to myself. But it was probably something Mel should know if we were going to figure this out.\n\n\"It was about the same as this morning,\" I said. \"But there's more to it.\"\n\n\"Oh?\" Mel said, raising a perfectly plucked eyebrow. \"Do tell.\"\n\n\"When I was with Jen. I had a hard time...climaxing,\" I sighed the last word out. \"Same with...this morning.\"\n\n\"I see,\" Mel tapped her finger against her full lips as she thought. \"What eventually helped?\"\n\nI decided to just come clean with Mel about everything. She really didn't seem to give a shit what was going on. And I needed someone to talk to about this.\n\n\"Erica came to my room the night I was with Jen,\" I admitted. \"When I saw her, I instantly felt a change.\"\n\n\"Interesting,\" Mel gasped. \"What happened?\"\n\n\"Erica...started touching herself as she watched,\" I continued. \"It turned me on so much that I just kept watching her as I fucked Jen. I didn't even look down at the other girl. Even as I came.\"\n\n\"Your orgasm was triggered by our sister,\" Mel said, more to herself. \"And this morning?\"\n\n\"Same situation. But this time I just thought about...one of you,\" I said.\n\n\"Which one? Was it Erica again?\" Mel asked excitedly. \"Or was it Amanda?\"\n\n\"It was you,\" I sighed.\n\n\"Me?\" she asked in surprise.\n\n\"Yeah. I'm sorry.\"\n\nI waited a few moments for her to get mad at using her for my own spank bank. But she didn't. When my eyes met hers again. She was smiling.\n\n\"I'm flattered,\" she grinned. \"Out of all of us, you thought about me.\"\n\n\"You're not mad?\" I asked.\n\n\"Nick,\" Mel sighed. \"How many times do I have to tell you that none of this bothers me. I find you attractive. You find me attractive. I'm simply interested in finding out the why. Besides. It isn't like I haven't gotten off thinking about you since you came home.\"\n\n\"You have?\" I asked, thinking I might have heard her wrong.\n\n\"Yeah,\" she shrugged. \"Seems to be the same for you.\"\n\n\"So...what do we do about it?\" I asked.\n\n\"I have an idea,\" she said.\n\nBefore I could ask Mel what her idea was. She pulled the knot tied at her hip that held the shawl up, and the thin garment slipped down her long legs to pool around her feet. It was then I found out she wasn't wearing anything under it. Her tube top came next, and she stood before me as naked as she was earlier. Her small, pierced nipples standing at attention. Begging for me lips to taste them.\n\n\"What are you doing?\" I asked, fighting to keep my eyes off her naked body.\n\n\"Experimenting,\" she smiled. \"You should get naked to.\"\n\n\"I'm not getting naked with you,\" I shot back. \"We shouldn't be doing this.\"\n\nMel took a step closer to me, and I backed up. But I had been standing too close to the couch, and I bumped into it in my retreat. I had nowhere to go as Mel stepped into my personal space. The cold shower from early had been burned away by my arousal at having Mel so close. Now she was naked, my dick was out for a party.\n\n\"I want to see if it is different with you,\" she said, tracing my erection through my shorts with her fingers. \"Because it is terribly frustrating trying to not think about you.\"\n\n\"Mel,\" I gasped as I felt her fingers. \"We can't have sex.\"\n\n\"I know,\" she shrugged. \"But sex isn't the only way to gain sexual gratification.\"\n\nI wanted to tell her to stop as her hand caressed my penis through my shorts. But I didn't. I wanted to get away from her so I could clear my head. I had hoped this encounter with my platinum haired sister might clear things up for me. But it only seemed to be making it worse. And I lacked the willpower to stop her.",
        "\"Can you take off your shirt?\" Mel asked. \"I like looking at you without your shirt on.\"\n\nI nodded, in a bit of a daze, then removed my shirt. Mel's fingers trailed along the waistband of my shorts before sliding them inside. I gasped with pleasure as soon as I felt her digits touch the skin of my shaft. And I found myself helping her as she tugged on my shorts. Next thing I knew, I was as naked as she was. And her hand was wrapped around my shaft.\n\n\"We should stop this,\" I gasped as my hips bucked involuntarily.\n\n\"We probably should,\" Mel mused. \"But I'm interested to see the results.\"\n\nMel's other hand joined the party, and soon she was working my shaft with expert twisting motions as she stared into my eyes. The heat from her naked body was almost unbearable, but at the same time I wanted to pull her in closer. Take in the entirety of her warmth against my skin. I wanted to devour her.\n\nMy body acted almost as if it had a mind of its own. It was like I was watching someone move my arms as I placed my hands on her hips and pulled her against me. She left one hand on my erection as it became trapped between our bodies, letting her free hand slide up my arm to grip my bicep. Her skin was incredibly soft. Her small breasts pressed into my chest and I took a long inhale of her scent. A mixture of female arousal, coconut oil and the faint scent of her sweat filled my nostrils and made my head spin with delight. I could easily drink from this well and drown with a smile on my face.\n\n\"Oh Nick!\" Mel gasped.\n\nMy right hand had found its way to her cute little ass and gave it a firm squeeze. I leaned back against the couch and let my sister melt into my chest as she continued to work my shaft as best as she could. I worked my hips in unison with her arm movements and was soon lost in the moment as I edged closer and closer to climax.\n\nI wanted to fuck Mel badly. But even at my level or arousal, I couldn't bring myself to do that. I was also afraid that if I stopped her right now, I might lose my nerve. But I wanted to make sure Mel enjoyed herself just as much as me.\n\nI gave her cute little ass another firm squeeze before sliding my hand between her cheeks, feeling my fingers glide over her dripping vagina. Mel sucked in a gasp of air as my hand cupped her sex and buried her face into my neck as I found her clit. I rubbed gently at the tiny cluster of nerves between her legs for a dozen seconds or so before sliding two of my fingers deep inside her. Mel moaned as I began to fuck her with my fingers, matching the speed of which she was working my shaft with her hand.\n\n\"Are you close?\" she whispered, kissing my neck.\n\n\"Yeah,\" I groaned.\n\n\"So am I.\"\n\nOur eyes locked once more, then a wave of pleasure shot through my groin and I felt the powerful surge of my orgasm come crashing into me. My hips bucked once more just as I felt Mel's body stiffen and her vagina clench around my fingers. Cum spewed forth from the tip of my cock, coating both Mel's stomach, and my own. I felt the wetness of her pussy triple as she let out a long, low moan of pleasure.\n\nWe stood like that for a few minutes. Our foreheads pressed together as out bodies tried to absorb the other's with how firmly we were pressed together. Then I felt Mel's hand slide down my shaft and gentle massage my balls. Causing another bout of sperm to rocket from my penis and cause a mess of our abdomens.\n\n\"Now that was intense,\" Mel said, breathing heavily.\n\n\"Yeah,\" I replied.\n\n\"You're still hard,\" she added, sliding her hand over my rock-hard shaft once more. \"Do you want to do some more...stuff?\"\n\n\"I really do,\" I said. \"But Mel...we shouldn't have even done this.\"\n\n\"Nonsense,\" she shook her head. \"Did you once have to think about someone else to get off?\"\n\n\"No,\" I replied honestly. \"All my thoughts were on you alone.\"\n\n\"Then we have our answer,\" she smiled sweetly.\n\n\"Answer?\" I asked.\n\n\"That you need us as much as we need you.\"\n\nA knock at my door broke the magical moment. And I was suddenly back in control of my own body.\n\n\"Nick,\" Amanda called out. \"Can we talk?\"\n\nMy heart slammed into my throat as I surveyed the scene before me. Mel's hand was still clutching my hard-as-nails erection, and we stood in my small living room in our birthday suits. There was so much evidence of what we'd just done, even a blind man could see the truth.\n\n\"The doors locked,\" Mel whispered.\n\n\"You locked it?\" I asked, stepping away from her and immediately regretting the loss of contact with her skin.\n\n\"Of course,\" she nodded. \"I didn't want anyone to disturb us.\"\n\n\"You planned this?\"\n\nMel gave me a wink, then collected her discarded clothing before heading in the direction of my bathroom. I lost myself for a moment as I watched her hips sway and my eyes locked into her pert ass. Then the knock at the door brought me to my senses. Just as Mel rounded the corner though, she flashed me a big smile over her shoulder.\n\n\"Coming,\" I called out, then grabbed my shorts and tugged them on.\n\nI had no decent way of cleaning myself up, so I quickly grabbed my shirt and wiped up the mess across my stomach before pitching the balled-up t-shirt across the room, hoping Amanda wouldn't see it. The smell of sweat and sex was still strong on me, and I quickly washed up in the kitchen sink before giving myself a quick spray with deodorant. Then answered the door.\n\n\"Hey,\" I said, greeting Amanda. \"Sorry, I was in the bedroom.\"\n\n\"That's okay,\" she said, a slightly confused and curious look on her face. \"Can I come in?\"\n\n\"Sure thing,\" I said, stepping aside to let her in. \"Is something wrong?\"\n\n\"Yes,\" she sighed. \"I wanted to apologise about the talk we had. I know I was a complete mess that night and I had so much on my mind. But I really shouldn't have sprung it on you like that.\"\n\n\"I understand why you did it though,\" I said, leaning against the wall opposite her.\n\n\"And that's what makes me feel even shittier about it,\" she sighed.\n\n\"It's okay. We can just pretend that kiss never happened and move forward. We can put that behind us and just continue getting to know each other,\" I said.\n\n\"Fucking hell you're too nice,\" she laughed, then wiped under her eyes as if she were about to cry. \"Just like Dad.\"\n\n\"There's such a thing as being too nice?\" I chuckled.\n\n\"Yes. It makes you impossible to be mad at. It was a trait that infuriated my mother when she and our dad had a fight,\" Amanda smiled. \"He would go to any lengths to make up with her and keep the peace. Even if she was wrong.\"\n\n\"Well,\" I said with a smirk. \"My mother was stubborn, so I'll have you know I'm nice, and stubborn. Let's see how that works out for you.\"\n\nAmanda let out a laugh that was music to my ears, and I saw all the tension leave her shoulders as she looked at me. Her eyes flicked down to my bare torso for a split second, then back to my eyes.\n\n\"Did you and Emily have a fight?\" she asked, out of the blue.\n\n\"Why do you say that?\" I asked.\n\n\"Emily is always smiling, like all the time. It's actually quite infuriating how cheerful that girl is sometimes,\" Amanda explained. \"Ever since you came home, it has been her constant mood. But last night and this morning she has been moping around the house.\"\n\n\"Yeah,\" I sighed, rubbing the back of my neck. \"That's kind of my fault.\"\n\n\"Because of what I said to you?\"\n\n\"Emily slept in my bed the other night,\" I admitted. \"Nothing happened. But we still shared a bed.\"\n\n\"I see,\" Amanda replied with a very neutral tone. \"The morning she made you breakfast?\"\n\n\"That's the one.\"\n\nAmanda went quiet for a few minutes, and I'd have given my left nut to know what she was thinking. Part of me thought she sounded a little jealous of her younger sister. But the other part of me thought she might be mad at me.\n\n\"Emily is a grown woman,\" she said after a few minutes of silence. \"She can make her own choices. As can you. I just want her to be happy.\"\n\n\"And me?\"\n\n\"What about you?\" she said.\n\n\"Do you want me to be happy?\" I asked.\n\n\"You're part of the family, Nick. Of course I want you to be happy.\"\n\nAmanda left without another word, and I was so caught up in repeating the interaction in my head again and again, that I forgot Mel was hiding in my bathroom. Until she slapped my ass that is.\n\nI turned to see Mel was now fully dressed. Well, as dressed as she was before. But that didn't hide how alluring her body was. I found my eyes devouring the exposed flesh of her tight stomach to the peak of her long, slender legs that flashed through the slit of her shawl. Knowing full well she was naked under the garment. The fear of being caught out by Amanda had helped ease the strain in my pants. But the sight of Mel\u2014and memory of her body\u2014had me back on the bullet-train to boner town again.\n\n\"Here I was thinking I'd get a show,\" Mel said with a huge smile.\n\n\"Show?\" I asked with confusion.\n\n\"You and 'Manda,\" Mel gestured to the door. \"You two would look great together.\"\n\n\"She has a boyfriend,\" I shook my head.\n\n\"And you're my brother,\" Mel shot back with a grin. \"But you were nearly wrist deep inside me only ten minutes ago while I jerked you off. We have made bigger scandals in this room already.\"\n\n\"Regardless of whether or not Amanda and I did anything,\" I said. \"Wouldn't you be upset that I went for one of your sisters?\"\n\n\"Our sisters,\" she corrected. \"No. You are their brother as much as you are mine. Also, I don't believe in monogamy. It's silly.\"\n\n\"Silly?\"\n\n\"Yeah,\" she nodded. \"Isn't it best for the strongest male in a tribe to have the women and breed the strongest offspring? Then that offspring can collect their own little harem and continue the process.\"\n\n\"You have one fucked up mind,\" I smiled and shook my head.\n\n\"I know,\" she grinned, then kissed me on the cheek. \"But you love me.\"\n\n\"I guess I have to,\" I laughed, getting a slap on the arm from my platinum haired sibling.\n\n\"By the way,\" Mel said, turning to face me, hands on her hips and a cheery smile. \"You better go make it up to Emily, and quickly. Otherwise I will remove that incredibly gorgeous penis from your body.\"\n\nI nodded\u2014unable to form a response to her graphic threat\u2014and watched as Mel smiled, and strode out of my flat. Her hips swaying with each step.\n\nChapter 14\n\n \n\nOnce I was finally alone, I dropped onto my couch with a heavy sigh.\n\n\"Fucking hell,\" I said to myself as I went over today's activities. And it wasn't even midday yet.\n\nThe rumbling of my stomach made me remember that breakfast was probably being served up by now. So, I headed down to the main house to get some food. And seek out Emily to apologise to her.\n\nI was kind of expecting Mel to be by the pool again to torment me with her naked body, but the backyard was completely empty. I heard voices coming from inside the house and guessed that my sisters were probably all up and about. Only then did I realize I was still shirtless and the half-assed effort of cleaning myself up earlier hadn't really worked. I still smelled of sex and cum. Rather than going back up to my flat to shower and change, I just dove into the pool to clean up. I let myself sink to the bottom and swam along the floor of the pool for a couple of metres before resurfacing near the steps, only to see a pair of legs by the pool's edge. I looked up the long, flawless legs to see Erica standing before me in a pair of black denim shorts and a loose tank top. By the way her bountiful breasts bounced, she wasn't wearing a bra.\n\n\"Good morning,\" I said, rising from the water.\n\n\"Good morning to you too,\" Erica said with a raised eyebrow. \"Early morning swim?\"\n\n\"I felt like a dip,\" I shrugged.\n\n\"I like getting wet in the morning too,\" Erica winked, then roamed my naked torso with her intense eyes.\n\n\"I bet,\" I laughed.\n\nThe relationship between Erica and I had definitely been a roller coaster ride. There was an obvious sexual attraction there from the get-go. At first, I thought she was simply teasing me to get a reaction from me, taunting me with the sin of flesh that I couldn't have. But, over the short time I'd been here I learned that she did indeed have feelings for me. As I did for her.\n\n\"You were gone when I got up this morning,\" Erica said.\n\n\"Yeah. I needed to clear my head, so I went for a run,\" I shrugged, choosing to keep the trip to the gym and Sarah's house to myself. Mel had seemed jealous when she heard that little bit of information. I didn't want to rub it in Erica's face just the day after I told her we couldn't become lovers.\n\n\"I figured as much,\" she shrugged. \"Let me know next time and I'll come with you.\"\n\n\"Sure,\" I nodded.\n\n\"Well let's go. Breakfast is ready,\" Erica nodded towards the back, sliding door to the house.\n\nI let Erica walk in front of me for obvious reasons. Her ass looked like it wanted to eat her shorts, and I admired the curve of her exposed flesh that peeked out below her tight shorts. Strangely enough though, I wasn't sporting a raging boner as I ogled her body. Sure, I was still aroused by her. She was one of the most beautiful women I had ever seen. But my mind was clear, and I was able to just enjoy the sight and presence of her without the teenager-like hormones dictating what they wanted me to do to the curvy goddess.\n\nMaybe Mel was onto something.\n\nI entered the kitchen behind Erica to see all of my siblings sitting around the small breakfast table. A huge spread of food was laid out, and it must have taken Amanda all morning to make it. My raven-haired oldest sister gave me a pleasant smile as I came in and gestured for me to take the seat beside her, which also put me next to Emily. The brunette twin didn't look my way though. And her outfit choice of baggy pyjama pants and a large band t-shirt spoke volumes of her mood this morning. Her usual bright smile and sparkling eyes were vacant now as she forked scrambled eggs into her mouth methodically.\n\nI did this to her. So, I would fix it.\n\nMel gave me an intense\u2014eyebrow arching\u2014look as I took the seat opposite her, beside Emily. Then she purposefully cut into a lone sausage on her plate. The fact she didn't really eat red meat meant she had been saving that sausage for a single purpose.\n\n\"Good morning everyone,\" I said, looking at my siblings.\n\nEveryone offered their greetings, even Emily. Although hers were more mumbled and she still didn't look my way. I got a purposeful look from each of my sisters, and I knew they wanted me to fix what had happened between Emily and me. Each of them knew something had happened, even if they didn't know exact details. I started eating as I mulled over what I should do as the conversation around the table started up. I mostly tuned my siblings out as I considered how to patch things up with Emily.\n\nAll Amanda wanted was for her sister to be happy. But did she suspect what me and Emily were on track to do? Even if I kept it as PG as possible, I could see it in Emily's gorgeous green eyes every time she looked at me.\n\nMel wanted me to make it up to her twin sister, and from the encounter we just had and the things she said about monogamy, her thoughts on how were quite simple. Although...Emily was a virgin. Erica had told me that when she warned me away from our younger sister. But I had a feeling that was more out of jealousy than anything. Especially not some aversion to us sleeping together because we were blood related.\n\nI started to really think about what I wanted and what I should do. Like...really think. Since I'd arrived here, I had been in a perpetual state of arousal that was either clouding my thoughts or made me think I was just horny and couldn't make a clear decision. But...Mel had helped, just as she said she would. I felt clear-headed and able to see the amazing women around me for who they were. It could be this genetic thing she spoke about, but it wasn't just their looks that made me love them.\n\n\"Emily,\" I turned to face my sister. \"Can we go somewhere to have a chat?\"\n\n\"Why?\" she replied, not looking up from her food.\n\n\"Please?\" I pleaded.\n\nShe finally looked at me, and I saw the sadness and hurt in her eyes immediately. It broke my heart to see those emotions, especially since it was because of me.\n\n\"Okay.\"\n\nI gave the others a quick glance, seeing a small smile of approval from Amanda. A look of curiosity from Erica. And a grin from Mel as she stabbed her knife into the uneaten sausage. The last was slightly unsettling.\n\nI followed Emily into the living room to the sound of soft conversation starting up once more from the kitchen. Emily turned to face me and was able to meet my eyes with hers. I had gone over what I needed to say to her again and again in my head. But nothing sounded right. I was never great with words and I was worried anything I said right now might sound false and empty.\n\nI took two steps closer to Emily to close the distance between us. Then I wrapped my arms around her in a big hug. She let out a surprised gasp as I pulled her against me, but then her arms squeezed tightly around me as she returned the embrace.\n\n\"I'm so sorry I pushed you away,\" I said, kissing the top of her head. \"I was confused and worried I was being a bad influence on you.\"\n\nEmily didn't reply, but she did press her face into the crook of my neck as she melted into my arms. We stood there in silence for a few minutes, just enjoying the feel of one-another. I loosened my hold on her when I felt her arms slide from around my back to rest on my hips, and we separated just enough for me to look into her beautiful green eyes.\n\n\"What changed your mind?\" she asked in a whisper.\n\n\"Mel may have threatened to castrate me,\" I laughed.\n\n\"Is that all,\" Emily giggled.\n\n\"No,\" I shook my head. \"She helped me realise how stupid I was for fighting against all this. I'm not accustomed to having sisters or a big family and I didn't know how to act. What we were doing was considered wrong by modern society and would be frowned upon. But I really don't care what others think. I just want you, Mel, Amanda and Erica to be happy.\"\n\n\"Mel was always the smart one,\" Emily smiled. \"So...what happens now?\"\n\n\"I don't know,\" I sighed, not wanting to reveal what had happened between her twin and I earlier. \"I know you have feelings for me\u2014as I do you\u2014but I'm not sure if I want to act upon them. All I know is I never want to hurt you again.\"\n\nEmily and I locked eyes for quite some time before she nodded, then gave me a small smile. \"I don't know what to do either. I know the way I feel about you isn't normal, but I can't help it. What do you say we just take it a day at a time?\"\n\n\"That sounds like a plan to me.\"\n\nI pulled Emily into another quick hug, but then she surprised me by kissing me on the lips. Instinctively I cupped her face with one hand as I returned her kiss. A kiss that was much more passionate than any we'd shared before. I felt her tongue slide into my mouth and meet my own as our bodies pressed tightly together. My fingers worked through the strands of her hair and clutched the back of her neck as our tongues wrestled for dominance for what must have been a solid five minutes. Finally, we came up for air, both of us breathing heavily and my dick riding up against her stomach.\n\n\"Sorry about that,\" I said, indicating to my crotch.\n\n\"It's okay,\" she smiled. \"It's a normal reaction. And a flattering one considering what I'm wearing.\"\n\nI pushed Emily out to arms-length and let my eyes roam over her baggy clothes. Then I gave my eyebrows a little wiggle. \"You'd look great in anything.\"\n\n\"Idiot,\" Emily rolled her eyes. But she smiled widely. \"Let's get back.\"\n\nEmily and I returned to a very quiet kitchen. Amanda, Erica and Mel all stared at us as we took our seats. Emily had a terrible poker face, and the wide smile plastered on her beautiful face was evidence that we'd made up. Amanda visibly relaxed and gave me a smile, then she frowned a little. Whilst Erica looked between me and our younger sister with a curious look. Mel just nodded at me, then stabbed the cut sausage for good measure.",
        "Conversation picked up once more, and Emily joined in with more enthusiasm this time. I kind of just ate my breakfast while I listened in and studied each of my sisters, wondering how I'd become so lucky and worrying about what the hell I was going to do next. Mel had given me a taste of what it felt like to be with her. And I guessed it would be a similar experience with each of them if she was right about this whole genetic thing. But did it make it right to bed my sisters if this were purely a scientific thing? It was like something out of our control. Then I realized how stunningly beautiful and amazing each of them were. It might be science, or it might be love.\n\nOnce done with breakfast, I helped Amanda clear the table and do the dishes as our younger siblings all departed to get ready for the day ahead. I had already done quite a lot this morning and had planned on just chilling out around the house. I'd have less free time soon enough when I started work.\n\n\"You know you don't have to help me,\" Amanda said, as we stood side-by-side at the kitchen sink.\n\n\"I know,\" I said. \"But I want to.\"\n\n\"So...\" Amanda said after a few minutes passed. \"You and Emily made up?\"\n\n\"We did,\" I said. \"Everything will be fine from now on.\"\n\nI had chosen to wash the dishes while Amanda dried and stacked. I could tell something was bothering her as we worked together, but I wanted her to tell me. Things had been a little touchy with my eldest sister and I didn't want to push any boundaries.\n\n\"What's going on with you and Emily?\" Amanda blurted out after a long stretch of silence.\n\n\"It was like what happened with us,\" I said without hesitation.\n\nAmanda stopped drying the plate she held and turned to stare at me. \"You kissed her?\"\n\n\"Yes,\" I nodded, drying my hands on a towel before facing her. \"The reason she was so upset was because I pushed her away after our talk.\"\n\n\"And now you're okay again?\" she asked hesitantly.\n\n\"Yes.\"\n\n\"Did you kiss her again today?\" she asked.\n\n\"Yes,\" I nodded.\n\nI still hadn't put a shirt on since coming down for breakfast, and I saw Amanda's eyes drop down to my chest quickly before meeting my eyes again. I didn't say anything as she stared at me with a slight flush to her cheeks. I decided I wasn't going to lie to any of my sisters about anything. That would only cause more problems later.\n\n\"Are you...\" Amanda paused and bit her lip before averting her eyes. \"Are you going to sleep with her?\"\n\n\"I don't know,\" I sighed. \"She slept in my bed, but nothing happened. I know what has happened so far is wrong, but I care about her. I just don't know if I can cross that line with her.\"\n\n\"What about with someone else?\" Amanda whispered so softly I almost didn't hear her.\n\nThe look in Amanda's eyes had my heart racing as we stood only inches apart. Her slightly parted lips were begging to be kissed and I could almost feel the heat emanating from body. Amanda edged closer to me, just a touch. So, I moved closer to her. I wanted to make sure she was in control. My hand came up to rest on her hip only a split second after she laid her hand flat against my chest. My dick pulsed and throbbed with sexual tension as he threatened to tear free of my shorts. I wanted to devour this woman and make her mine. I wanted to experience all her sights, scents and sounds as we made love. But there was still a twinge of doubt in my mind. A nagging voice telling me that there were plenty of women in the world. Why did I need to sully the relationship with all of my siblings?\n\nOur lips were a hair-breathed away from touching as the entire world faded from existence. Only Amanda existed, and only her feel, scent and presence mattered as our lips hovered before one another with a taste of low-hanging forbidden fruit.\n\nA knock at the front door shattered the fragile moment between us, and we both jumped away like we'd been holding a pan that had suddenly heated up to burning temperature. Amanda's cheeks were flushed, and her lips were still parted as I saw her eyes flicker down to my lips, then back to my eyes. Then she quickly darted away\u2014out of the kitchen\u2014to answer the door.\n\nI let out a heavy sigh as I turned back to the dishes. My heart was racing from the scenario, and I couldn't help but lick my lips with the anticipation of kissing Amanda again. Then, as if on queue to destroy my fantasy, Craig waltzed into the kitchen with Amanda in tow.\n\n\"Hey dude,\" he said with a nod.\n\nI hid my displeasure at seeing the Fabio clone, and gave him a courteous greeting before turning back to my washing.\n\n\"I wasn't expecting you,\" Amanda said as gave him a quick kiss. \"What's up?\"\n\n\"Nothing,\" he shrugged. \"I just wanted to come by and hang out. Do I need a reason to see my girl?\"\n\n\"No,\" Amanda said quickly. \"Not at all. I just wasn't expecting it. I'm kind of a mess right now and I need to tidy the house up.\"\n\n\"Seems Nick is being a good house-bitch,\" he gestured to me with a laugh. \"Why not relax and let him do it.\"\n\nI clenched my fists under the water and tried my best to ignore his comment. I knew guys like Craig back home. They always expected their girlfriends or wives to do absolutely everything for them around the home. Then expected sex each and every night just because she was 'His woman'.\n\n\"Amanda does such a great job around here,\" I said over my shoulder. \"It leaves little for me, or anyone else, to do.\"\n\nAmanda gave me a grateful smile. But Craig already seemed to have forgotten I was there. And I saw why a few seconds later.\n\nErica strode into the room from the direction of the stairs. She had changed from her shorts and loose top into a tight pair of black jeans and a black band t-shirt that hugged her chest and stretched over her fantastic breasts. Craig openly stared at her as she walked by without even acknowledging him. Then he did the same when Mel walked in wearing a black sleeveless turtleneck and a pair of incredibly tight, white shorts. I looked to Amanda to see her frowning at Craig. But she said nothing.\n\n\"Morning ladies,\" Craig smiled at my sisters.\n\nErica flipped him the bird over her shoulder before walking out the back door.\n\n\"Morning,\" Mel said, sliding past me to get to the coffee machine.\n\nThe island counter separated Craig and Amanda from where I was, and Mel must have known that. As she slid by me, her hand gave my ass a firm squeeze, causing me to nearly drop the ceramic plate I was holding. I quickly glanced over my shoulder to see Craig was finally looking at Amanda. But it looked like Amanda might have seen something with the quick glance she shot my way.\n\n\"Really?\" I asked Mel in a hushed whisper.\n\n\"It turns me on,\" she winked. \"You have no idea how wet I am right now.\"\n\n\"Not the time,\" I shot back.\n\n\"Practically swimming in my panties,\" she teased. \"If I wore any.\"\n\nMy dick jumped at her words, and I felt a spurt of pre-cum shoot from the tip of my penis. Why the fuck did Craig have to show up right now? Not only did he ruin the moment between Amanda and me, but now I couldn't even get Mel alone to help me with the sexual frustration I was feeling. Then I realized that I was suddenly very okay with having my sister help me that way. That hand job had been more intense than any sexual encounter I'd had since coming here. I wasn't sure I could go through with actually fucking her or any of my siblings. But I was eagerly awaiting the next bout of privacy I could attain with my platinum haired sister.\n\n\"I'm gonna head out for a bit,\" Mel said to the room. \"Anyone need anything?\"\n\n\"No, thanks. Do you need a lift?\" Amanda said. And Craig simply ogled Mel for a few seconds before shaking his head.\n\n\"Mandy is picking me up,\" Mel said, then stepped closer to me. \"Nick?\"\n\n\"I think I'll...\" I started to say, but my words cut off when I felt Mel's hand rubbing at my crotch. \"I'm fine.\"\n\n\"Okay,\" she said with a big smile.\n\nFor a dozen or so seconds, Mel fondled my dick through my shorts in such a casual way. She was leaning against the kitchen sink, facing Amanda and Craig\u2014whilst she kept her hand low and out of view as she squeezed my tormented dick. Then she released her hold and strode out of the kitchen like nothing happened.\n\n\"Nick?\"\n\nSuddenly, I realised I had zoned out. Amanda had asked me a question, but I just stood there with a now clean and dried plate like an idiot.\n\n\"Yeah?\" I asked, shaking my head slightly.\n\n\"We're heading out. Do you need anything?\" she asked.\n\n\"No. I'm fine,\" I smiled. \"You two have fun. I'm just gonna chill out around the house for the day.\"\n\n\"Okay,\" she nodded. \"Let's go Craig.\"\n\nCraig gave me a nod before wrapping an arm around Amanda's thin waist and immediately started talking about his band. Amanda looked over her shoulder just before they left my view. Our eyes met for a split second, and I saw a burning intensity on those eyes. And I had a feeling it wasn't for Craig's riveting conversational skills.\n\nI finished cleaning and stacking the morning dishes without incident. Mel came back down to say goodbye, and to blow me a kiss. But she refrained from any teasing. I'd have to find a way to get her back for that. She was smart though, and I had a feeling she was doing it to make me crack. Earlier this morning I was banking on Mel being the one to help me through this. Now I had to worry about her going out of her way to give me a perpetual boner. At least our little 'experiment' had helped clear my head, if only for a little while.\n\n\"You gonna get dressed? Or just strut around topless all day?\"\n\nI turned to see Erica stepping in through the back door. And was lucky I wasn't holding anything fragile. Because I would have dropped it when my jaw dropped open.\n\nErica had stripped out of her form fitting jeans and t-shirt she'd walked by in earlier. Now she wore a skimpy black two-piece bikini that seemed to be working overtime in trying to hold her impressive bust in. The tiny strings of her bikini bottom rose high and curve over her pronounced hips while the small patch of cloth between her legs was more of an idea than an actual garment. Her long hair looked freshly washed, dried and brushed. The streak of red down one side seemed to enhance the smouldering look in her eyes as she unabashedly stared at my naked chest. I had to remind myself to breathe, more than once.\n\n\"You're actually wearing less than I am,\" I chuckled. Surprised at how cool and collected I sounded.\n\n\"I don't hear you complaining,\" Erica winked, striding up to the fridge with an added swing to her steps.\n\n\"Not at all,\" I agreed.\n\nThe bout of sexual release I'd gained from Mel earlier had been exactly what the doctor had ordered. But she also fondled me less than fifteen minutes ago and my blood was pumping like crazy already. Add that to the tension between Amanda and myself\u2014plus the kiss from Emily earlier\u2014and now Erica flaunting herself so openly. I was ready to pound nails once more. Or better yet.\n\nErica.\n\n\"So, what are your plans for today, Stud?\" Erica said as she opened the fridge.\n\nShe must have thought to tease me some more, because she bent at the waist and took an abnormally long time to find what she was looking for. That was just fine by me. I moved to stand behind her and admired her flawless ass. The tiny string from her bikini bottom split her cheeks perfectly and I could see where her vagina was barely concealed by the all-but useless cloth. I untied the drawstrings on my shorts before I really knew what I was doing, then I had my dick out, stroking it while I admired Erica's plump behind.\n\n\"Not sure yet,\" I replied casually. Still stroking myself. \"What about you?\"\n\n\"I'm gonna go lay out by the pool for a bit,\" she replied. Still bent at the waist.\n\nErica probably thought I was dumbstruck by her ass\u2014and she was partially right\u2014but I also had Mel to thank for my current mindset. Before today, I was fighting my urges like a mad man. Only touching on them when my resolve broke down. Eventually, I would give in. But if I took charge, I could keep it from going too far. Well...anything with any of my beautiful siblings was going too far. But I didn't want to think about that right now.\n\n\"Maybe you could come an\u2014\" Erica started to say. I stepped up behind her and gave her juicy rump a firm slap.\n\n\"What the fuck!\" Erica jumped and spun around. It looked like she was about to say something. But then her eyes dropped to my exposed erection. And her jaw dropped. Similar to how I imagined I looked earlier.\n\nI took a step closer to Erica, backing her up against the now closed refrigerator. It shifted slightly as our combined body weight leaned against it. Erica opened her mouth to speak again, but I silenced her with a kiss. Our lips met and our tongues danced. Her hands were at my dick immediately, and mine grabbed her hips before running up her sides and down her back to cup her glorious ass.\n\nFootsteps on the stairs broke our make-out session, and I calmly stepped back so that my exposed lower-half was concealed by the kitchen counter before I pulled my shorts up. I stuffed my dick in my shorts as best I could, but anyone looking would easily see the flagpole standing at full mast. Erica looked flushed, glassy eyed and was still breathing heavily when Emily rounded the corner.\n\n\"Hey guys\" she said with a smile.\n\n\"Hey Em,\" I smiled back. \"What are you up to?\"\n\n\"Bout to go practice,\" she said. \"Wanna come?\"\n\n\"Maybe in a bit. I need to go get changed, then I'll come in.\"\n\n\"Awesome,\" Emily smiled, then bounded off to the garage.\n\nI turned my eyes back to Erica to see her still staring at me. She looked to have gotten herself under control mostly, but she bit her lip as soon as my eyes fell on her.\n\n\"Come here,\" I said, beckoning her over with my finger.\n\nShe did as I asked, and we kissed once more. This one was slower, less frantic and it allowed me to explore her body a little more with my hands.\n\n\"On your knees,\" I whispered when our kiss ended.\n\n\"I thought we weren't goi\u2014\" she started to say.\n\n\"Do you want me to change my mind?\" I smirked.\n\nErica shook her head\u2014bit her lip\u2014then sank to her knees before me. I knew we had things to talk about. Things to sort out and discuss before we took this too far. But right now, I needed to feel something from her. And I had the feeling she needed it to.\n\nI stripped my shorts down once more and nearly smacked Erica in the face with my dick. Her full lips split into a wide smile as my cock re-joined the party, and her hands immediately found my shaft and started to massage along my length.\n\nErica was a wizard with her hands and soon had me leaning my back against the kitchen counter as I supported my weight with my hands. Her fingers seemed to be perfectly sized for my shaft and her movements were expertly executed. But little did I know that she was toying with me.\n\nErica must have been waiting for the right moment. When I rolled my head back and closed my eyes\u2014moaning\u2014I felt her lips around the tip of my dick. The sensation sent a shiver of pleasure through my entire body and caused my hips to buck. Her tongue lashed out and assaulted the tip of me penis before she began licking up the underside of my shaft.\n\nMy eyes shot open and I looked down at my seductress of a sister and saw that she'd pulled her bikini top aside. Her marvellous breasts were now on display, and I could see her erect nipples standing to attention. Our eyes locked just as she sucked the tip of my penis between her lips once more and began sucking like she was trying to get the cream out of a sweet candy. Her tongue danced along my glans some more. Then I was done.\n\nI let out a loud moan as my fingers gripped the bench top painfully. The surge from my balls and up my shaft was incredibly fast, and powerful. I locked eyes with Erica just as I came and watched as her cheeks sucked in. Erica kept stroking my shaft with one hand as she massaged my balls with the other. Her tongue licked and lapped across my penis as I emptied load after load into her eagerly awaiting mouth. After a minute of spewing my cum into her mouth, my dick finally gave its final spurt. But my dear sister wasn't done yet.\n\nErica released her hold on my dick with her lips and started licking across the tip, down the sides and back up. Making sure I was nice and clean, and causing my cock to twitch a few times and spurt a small dribble of cum out, which she dutifully lapped up.\n\n\"Hurry up, Nick!\"\n\nI looked over my shoulder to see Emily poking her head out of the garage door. She flashed me a smile, then stuck her tongue out at me before ducking back inside. From the angle Erica and I were, there was no way she saw her older sister on her knees before me. Erica opened her mouth wide, then ran her tongue along my shaft once more, as if daring me to choose. Then she gave my dick a quick kiss and hopped to her foot.\n\n\"I needed that,\" she said with a smile.\n\n\"You're not the only one,\" I chuckled. \"But don't you need me to. . .?\"\n\n\"Already sorted,\" she winked, then brought two fingers up to my lips.\n\nThe scent was obvious. And I eagerly sucked her fingers into my mouth to get a taste of her. I didn't know when she had done it, but she had brought herself to orgasm while giving me one of the most mind-blowing blow jobs I had ever received.\n\n\"You taste good,\" I said.\n\n\"You should try it from the source next time,\" Erica winked. \"But now I have to go cool off. Go spend time with Emily.\"\n\n\"You okay with that now?\" I asked cautiously.\n\n\"She's my sister and I love her. I just want her to be happy,\" Erica smiled. \"Just...take it slow with her...if anything goes that far. Okay?\"\n\n\"I won't hurt her again,\" I said. \"But...what about us?\"\n\n\"Let's just enjoy ourselves dear brother,\" Erica patted my cheek and gave me a smile. \"Life's more fun that way.\"\n\nThen my sister\u2014who had just swallowed a huge load of mine\u2014gave me a quick kiss before sauntering off to the backyard and diving into the pool.\n\nChapter 15\n\n \n\n\"Hey Em,\" I said, stepping into the garage and closing the door behind me.\n\n\"Bout time,\" she grinned at me. \"Come on. Let's play.\"\n\nI crossed the carpeted garage floor to where the guitar rack was and picked out the same instrument I had used last time. I wanted to try out each of them, but I figured it would be best to ask Amanda's permission first. They were her guitars after all.\n\n\"You know you can try any of them out,\" Emily said, once I'd plugged into the amp beside her.\n\n\"This one's fine,\" I shrugged, taking my seat. \"I'd prefer to ask Amanda before I start touching her stuff.\"\n\n\"I'm sure she wouldn't mind,\" Emily smiled. \"But it's nice of you to be so thoughtful. Craig just comes in and acts like he owns the place.\"\n\n\"Comparing your brother to our sister's boyfriend is a little strange,\" I laughed.\n\n\"If you say so,\" Emily said in a mocking tone.\n\n\"Be quiet and play,\" I chuckled.\n\nWe spent the next couple of hours playing around with some songs we played last time, and even spent the better part of an hour piecing together some riffs into something mildly resembling a song. By the end, we had maybe two or three minutes of something that sounded quite promising and I already had lyric patterns running through my head whenever we played our original tune.\n\n\"Hey nerds.\"\n\nBoth Emily and I paused mid-way through our fledgling song when the door opened, and Erica stepped in. She had changed from her incredibly skimpy bathing suit and into a pair of workout shorts and a small crop top over her sports bra. As usual, her hair was a brush stroke away from perfection, and her body exuded sexuality like no other. But Emily was equally as beautiful sitting beside me, and I had been caught up in the music. This time however, I was able to keep myself from drooling over my ample chested sibling.",
        "Maybe Mel had been right with her theory after all. This time yesterday I would have been tenting my shorts and unable to focus on anything apart from the goddesses that surrounded me.\n\n\"That sounded really good,\" Erica said, walking over to the small riser that held her throne and kit. \"Mind if I join in?\"\n\n\"Hell yeah!\" Emily fist pumped and gave me an excited grin.\n\n\"It'll be great to have some beats to it,\" I nodded and returned Emily's smile, and tearing my eyes away from Erica's juicy ass.\n\n\"Try to keep up,\" Erica winked at me.\n\nTo say Erica was a talented drummer was an understatement. She did the usual drummer nonsense of warming up with an obnoxiously complicated and fast series of exercises that put any drummer back home to shame. Hell...I'd seen professional live touring bands that would have had a hard time keeping up with her. I was starting to think she might just be showing off for my sake.\n\nOnce our queen on her throne was done with her warmups, we launched into a mutually agreed song. I guessed that any song Emily knew, Erica would know too. She played a little faster than we had practiced earlier, but we soon hit our groove, and everything fell into place. This particular song we'd chosen didn't have much in the way of solos or leads\u2014which I was thankful for\u2014so I was able to focus on just keeping time and even went over the lyrics I could remember as we played. I had spied a few microphones stands and a decent looking PA system in the corner, but I wasn't confident enough to start belting anything out in front of my sisters just yet.\n\nAll through high school I had idolized lead singers and vocalists for bands, always wanting to be that guy at the front that the girls threw their panties to. It was harder than I first thought, and I wasn't that good. That was until my voice actually dropped.\n\nI was a late bloomer. Kind of short, scrawny and covered in bad acne, and my voice was squeaky. It wasn't until I left school to get a job and help my mother out with the bills that I hit my growth spurt and puberty kicked in. And boy was I glad it did. I started practicing my vocal skills a few years ago when my buddies and I talked about starting a band and found it marginally easier to perform. I still wasn't amazing, but I was confident I could half-ass it well enough with a band backing me to not sound completely terrible.\n\nI just had to work on my multi-tasking skills. Playing guitar and singing at the same time was a lot harder than it looked.\n\n\"Well...you're not too bad,\" Erica smirked at me once we'd stopped playing.\n\n\"He's great isn't he!\" Emily exclaimed.\n\n\"Now now, sister. Let's not give Nick a big head,\" she laughed as she stood from her drum stool.\n\nI let my eyes roam her body as she stretched her arms over her head. She had removed her crop top at some point, and I could see the beads of sweat rolling down her chest and between her ample breasts. Her skin was flushed from exertion, with a slight sheen of perspiration glistering along her tight stomach. The entire image made me think about other ways we could work up a sweat together.\n\nAnd I was in boner town once more.\n\n\"I haven't had much time to practice lately,\" I shrugged, standing to return the guitar. \"I'm still a little rusty.\"\n\n\"Guess that means we are going to have to practice more,\" Emily grinned. \"Maybe we can start a band?\"\n\n\"We've been trying to do that for years Em,\" Erica sighed.\n\n\"Yeeeeaah,\" Emily replied with a tilt of her head. \"But now we have Nick.\"\n\n\"What was the issue before?\" I asked.\n\n\"Amanda,\" they said in unison.\n\n\"She didn't want to?\"\n\n\"It's not that she didn't want to. But that she always had reason not to. The most recent reason is Craig,\" Erica explained.\n\n\"Is he stopping her?\" I asked.\n\n\"Not exactly,\" Emily said.\n\n\"Craig wants his little trophy girlfriend to show up to all his gigs and stand there looking pretty,\" Erica continued. \"The fact that he sucks as a musician doesn't even register to him. It's all about image to Craig. And that image is: guys play the music, and the girls fawn over them.\"\n\n\"That's very 1950's of him,\" I laughed.\n\n\"It's not exactly like that,\" Emily said.\n\n\"Not far from it,\" Erica cut in. \"Amanda would wipe the floor with his pretty face, and she knows it.\"\n\n\"Wait. Didn't you say she stopped because of your dad?\" I asked Emily.\n\n\"Our dad,\" she corrected. \"And yes, in a way. She played a bunch before her and Craig started dating. It always reminded her of Dad. Sometimes it made her happy, sometimes it made her sad.\"\n\n\"And when Craig saw how well she played, he was more than a little intimidated,\" Erica laughed. \"That was possibly the greatest moment of their relationship.\"\n\n\"So...she doesn't do it because Craig doesn't like it?\" I asked with a raised eyebrow.\n\n\"And uses Dad as an excuse,\" Erica finished my sentence. \"You're catching on quick.\"\n\n\"That's ridiculous,\" I said with a shake of my head.\n\n\"But it's different now,\" Emily said. \"I'm sure when she sees us all playing together, she'll come back again.\"\n\n\"Don't get your hopes up Em,\" Erica said. \"Manda is as stubborn as our mother.\"\n\nThe mention of their mother instantly soured the mood of the room. A mood that was already quite sour with the talk of Craig and his hang-ups. I never understood guys who felt threatened by women being in their field. I would have killed for a girlfriend back home that could play guitar. It would be something we could do together and bond over. I was feeling extremely lucky that I had a whole family now that I could play music with. It didn't matter that they were women. If anything, it made it better. Who didn't want this buffet of eye candy on display when playing music?\n\n\"Well I'm gonna go shower,\" Erica announced. \"This was fun. We should do it again soon.\"\n\n\"Sounds good to me,\" I nodded.\n\nI busied myself with coiling up the lead I was using while covertly admiring Erica's ass as it bounced away with the exaggerated sway of her hips that I'd grown to love, only to be busted by her as she looked over her shoulder and shot me wink before vanishing from sight.\n\n\"Hey! I got an idea!\"\n\nI turned to see Emily grinning at me like a fool. Her grin made my heart warm and I couldn't help but return her smile.\n\n\"What are we doing?\" I replied with every intention of fulfilling her wishes.\n\n\"Let's go for a ride!\"\n\n\"I'm in,\" I nodded.\n\nWe parted ways to go change for the ride. Shorts and a t-shirt weren't the best to go riding in. One accident and I'd be scraping parts of myself off the road with a spatula. I didn't have any riding gear. But my jeans, boots and leather jacket would have to do.\n\nTwenty minutes later I met back up with Emily in the garage and helped my sister uncover her bike and moved it around to the garage door. Emily clicked the remote mounted to the wall, and the garage door made its close ascent to reveal a beautiful sunny day. Not a cloud in the sky, with a soft breeze that felt nice on my face.\n\n\"Here,\" Emily said, handing me a thick jacket.\n\nI placed my own jacket over the closest guitar stand and took the bundle from Emily, holding it out in front of me. It was a thick riding jacket fitted with the protective padding and plates. It looked a little old, but almost exactly my size.\n\n\"It was Dad's,\" Emily said. \"It's a little old now. But it's the only one we have that will fit you.\"\n\n\"Thanks,\" I nodded. \"I'll make sure to look after it.\"\n\nI held back a tear as I thought about the man that had fathered me. The man that had looked for me and wanted to meet me. The man I had thought abandoned my mother and me. The man I had hated for my entire life. I would have given anything right now to meet him. But it wasn't possible.\n\nSuddenly, Emily's arms were around my waist and I felt her body press into mine. \"I'm sorry.\"\n\n\"Don't be,\" I whispered, rubbing her back. \"Thank you for letting me wear this.\"\n\nWe hugged in silence for a few minutes before separating. Emily wiped at her cheeks, and I pretended I didn't see her crying while I pulled the jacket on. It fit perfectly. Like it was tailored to me.\n\n\"I guess your dad and I were similar sizes,\" I said.\n\n\"Our dad,\" Emily corrected again. \"And yes. It's actually a little weird.\"\n\n\"Why do you say that?\" I asked.\n\n\"Well...none of us look exactly like either of our parents,\" Emily explained. \"Yeah, we share features, and you can easily tell we're family. But you...you're almost exactly like him. It was like you are made completely of our father's genes.\"\n\n\"With my mother's eyes,\" I smiled.\n\n\"She must have had beautiful eyes,\" Emily replied softly.\n\nOur eyes met for a brief moment, and I felt a sudden pull towards her. Instead, I focused\u2014something I would have thought impossible to do yesterday\u2014and gave her a smile before gesturing to her bike.\n\n\"You wanna take the helm?\" I asked.\n\n\"No,\" she shook her head. \"You can ride.\"\n\n\"I don't have a license though,\" I replied.\n\n\"Do you always do what's right?\" Emily asked, giving me a very Erica like smirk.\n\n\"Alright,\" I chuckled. \"Better hold on tight though.\"\n\n\"I wouldn't have it any other way.\"\n\nTen minutes later we were hitting the highway out of the small suburb that was now my home. And I was able to really open it up. Emily clung tightly to me as we raced along the empty highway. It felt nice having her body pressed against my back and her arms tightly wrapped around my waist. The noise of the bike and the helmets we wore made it all but impossible to talk while we rode, but Emily was still able to direct me to an exit ramp after another twenty minutes of riding.\n\nWe left the four-lane highway on a bending exit ramp that turned into a smooth two-lane road with countryside expanding in each direction as far as the eye could see. It was all commercial farmlands, but it was still beautiful. I continued taking Emily's directions until we were taking a series of hairpin turns that gradually increased in elevation. We took the turns together, leaning in unison as we slowly rose higher and higher until we reached the peak.\n\nA parking lot opened up ahead of us, and I guessed this was the place Emily wanted to take me to. I brought us to a stop at the far end of the parking lot, near a park bench, and shut the engine off before throwing the kickstand down and removing my helmet.\n\n\"That was amazing,\" Emily said, shaking her hair free.\n\n\"It did feel great to ride again,\" I nodded.\n\nEmily's hair always looked on the messy side. Her brown waves were wild and untamed compared to her siblings. But it was perfect.\n\n\"Come on,\" she grinned, and grabbed my hand as she all but dragged me off the bike. \"The view is amazing.\"\n\nWe carried our helmets up to the lookout point before placing them down on a nearby picnic table. Emily was right, the view from up here was gorgeous, especially with the setting sun.\n\n\"This place is amazing,\" I said, stepping up to the safety railing.\n\n\"Dad would bring us up here when we were little,\" Emily said, smiling fondly. \"Erica hated it. She is afraid of heights. But she never said no.\"\n\n\"I get the feeling Erica would do something that she was afraid of just to prove she wasn't afraid,\" I chuckled.\n\n\"That's pretty much it,\" Emily laughed. \"You already know us so well.\"\n\n\"It's hard to describe,\" I said, looking out over the countryside below. \"It's only been a few days. But it feels like I've always known you.\"\n\n\"The feeling's mutual,\" Emily replied.\n\nWe stood there watching the sun sink lower and lower behind the horizon, bathing the sky in a brilliant, fiery orange glow. As we stood there\u2014I had no idea when\u2014our fingers intertwined together as we held hands. Emily leaned her head against my shoulder as we simply enjoyed the silence of the lookout point.\n\n\"Nick,\" Emily said after the sun had reached the three-quarter mark of its descent.\n\n\"Yeah,\" I replied, turning to look at her.\n\n\"Can I ask you something?\"\n\n\"Anything at all,\" I nodded.\n\n\"Can I see your. . .?\" She dropped her gaze and bit her bottom lip as she trailed off.\n\n\"My wh\u2014\" I stopped mid-sentence as it clicked in my head what she wanted. \"I'm not sure that's a good idea.\"\n\n\"Mel saw it,\" she replied quickly.\n\n\"She told you?!\" I asked, a little shocked.\n\n\"Mel and I tell each other everything,\" Emily shrugged. \"I don't mind. She is prettier than me after all.\"\n\n\"Don't say that,\" I shook my head. \"Neither of you is prettier than the other.\"\n\n\"Then why is it okay for her and not me?\" she asked. \"We are both your sisters.\"\n\n\"It's hard to explain,\" I ran my hands through my hair. \"Mel kind of just went for it. I didn't really get a chance to say no.\"\n\n\"You didn't want to show Mel?\" Emily asked with a confused and worried look on her face.\n\n\"Not like that,\" I said quickly. \"But she took the charge, and it was all happening before I knew it. I don't regret it at all.\"\n\n\"You know I don't mind sharing with Mel,\" Emily shrugged. \"She's my sister and I love her. It would be wrong to lay claim to you when you're important to all of us.\"\n\n\"You say that now,\" I sighed. \"But how long will that last.\"\n\n\"You really don't understand the lengths I'd go to for any of our sisters, and them for me,\" Emily laughed. \"If they're happy. I'm happy.\"\n\n\"I keep hearing that,\" I sighed.\n\n\"It's because it's the truth,\" Emily nodded.\n\n\"Are you sure this is what you want?' I asked.\n\n\"One hundred percent,\" Emily said with a look of conviction and determination in her eyes.\n\n\"Okay,\" I nodded.\n\nI motioned for Emily to take a step back, and she did. I took a deep breath as I loosened the buckle on my belt and steeled myself for what was to come. The other situations with my sisters had been different. Heat of the moment. Sexual tension. But now, I was clear headed and thinking clearly. Yet I was about to go through with it.\n\nIn the few moments it took me to loosen my belt and unzip my jeans, I finally accepted the fact that I was in love with my sisters. Each and every one of them. It had been almost instantaneous, and I believe I knew the moment I saw each of them, but it was finally starting to sink in that it was real. And that the feelings were mutual for each of them.\n\nEmily in her exploration and curiosity. Mel with her open acceptance. Erica hiding behind flirtatious and seductive behaviour. And Amanda, choosing to push it aside. That actually hurt, because out of the entire household, I had hoped we could get along more than anyone. We were closest in age and seemed to have so much in common.\n\nSo much in common...even the way we pushed back against feelings we knew we shouldn't have. How I felt about Amanda denying what we both felt. That must have been how Emily and Erica felt when I rejected their advances.\n\nWell...not anymore.\n\nMy jeans were lowered, then came my boxer shorts. My dick was only starting to wake up and was still in that impressive stage of filling with blood but looking flaccid. The stage most guys wished their dicks looked all the time while soft. I watched Emily's eyes go wide and her mouth open slightly as she eyed my penis. I resisted the urge to jerk myself a few times to get hard, and just let nature take its course.\n\n\"Can I touch it?\" she asked tentatively.\n\n\"Go ahead,\" I nodded, fully accepting of the situation.\n\nEmily took a step closer, and slowly reached out. Her fingers trailed up the length of my shaft, causing my dick to jump. She mustn't have expected it, because she pulled her hand back slightly.\n\n\"Did that hurt?\" she asked quickly. \"I'm sorry if it hurt.\"\n\n\"It didn't hurt,\" I smiled. \"It actually felt good.\"\n\nOur eyes met, and I nodded to let her know it was okay to continue. This time, she didn't shy away when my cock twitched at her touch. My erection was getting stronger as her fingers traced lines along my shaft, until it was standing at full attention. Saluting the sky as it demanded attention.\n\n\"That's big,\" Emily giggled.\n\n\"How do you know?\" I asked with a raised eyebrow. \"You've never seen one before.\"\n\n\"No...but I have seen pictures,\" she said, wrapping her fingers around my shaft. \"And I've used toys before.\"\n\nI closed my eyes and let out a soft moan as Emily slid her hand up my length and ran her thumb over the tip of my penis. \"That's a welcome image.\"\n\n\"You'd like to see that?\" she asked, biting her bottom lip.\n\n\"Oh yeah,\" I groaned.\n\n\"Well...you showed me yours,\" Emily whispered. \"I guess it's only fair.\"\n\n\"Only if you're comfortable with doing it,\" I replied, then groaned in pleasure as a jolt of pleasure shot through my body.\n\nEmily nodded, then looked down at my cock with rapt attention. Her movements were slow and almost clumsy. It was obvious that she didn't have any experience with this kind of thing. But I found that to be just as arousing as Erica's expert hands and mouth.\n\nAfter a few minutes of letting Emily play with my penis, I cupped her face with my right hand and lifted her gaze to mine. Both of her hands were now working. She had become bolder as our eyes locked and she let her left-hand caress my balls as she slowly stroked my shaft with her right. Our faces drifted closer together and I could feel her warm breath on my face as I prepared to taste her soft lips once more.\n\nLights flashed by the carpark entrance, and the sound of a car's tires crunching over gravel caused me to look up quickly. The sun was mostly set now, but Emily and I were in a very precarious position. Luckily, if anyone was looking directly at us, they wouldn't see anything but Emily's back.\n\nWith a groan of annoyance, I gently pushed Emily away and stuffed my erection back into my jeans. It was far from comfortable, but I was hoping it would settle down in the next few minutes.\n\n\"We better head back,\" I said, giving her a quick kiss.\n\n\"Yeah,\" she nodded, then smiled. \"It's a shame.\"\n\nWe kept our hands to ourselves as we walked back to Emily's bike. The people in the car could be complete strangers. But it was better to keep up the fa\u00e7ade. Just in case someone recognized Emily. We weren't too far from the suburb where we lived, and this spot might be frequented by people who saw us every day. Although, no one exited the car, and I thought I saw two people in the front seat before whoever was in the passenger side ducked out of sight.\n\n\"At least someone's going to have a good time up here,\" I chuckled.\n\n\"What do you mean?\" Emily asked, pulling on her helmet.\n\nI placed a hand on my younger sibling's shoulder and directed her towards the car. It was hard to see in the fading light. But through the back window of the dark coloured sedan, I could just make out the movements that confirmed my suspicion.\n\n\"Oh my god!\" Emily exclaimed. \"They didn't even wait for us to leave.\"\n\n\"Maybe they've been holding off long enough,\" I shrugged.\n\n\"I know the feeling,\" Emily smiled.\n\n\"Let's get going,\" I said. \"Before you take advantage of me.\"\n\n\"You okay to ride in your condition?\" Emily asked, buckling on her helmet.\n\n\"Trust me,\" I said, pulling my own on. \"You don't want this jamming into your back the whole way home.\"\n\n\"Don't tempt me,\" she winked.\n\n\"Who are you and what did you do with my sweet Emily?\" I asked in mock outrage. \"You've been spending too much time around Erica.\"\n\n\"Or maybe I'm just letting you see the real me.\"\n\nI mounted up and waited for Emily to climb on behind me before firing the engine up. My erection was calming down now, and after a few minutes of taking the hairpin turns down the mountain, I was finally able to relax. Although, the feel of Emily clutching tightly to me made my heart race. My mind filled with images of her wearing nothing but the long t-shirt she wore to bed with me. Her smooth, pale legs and the feel of her skin against mine.\n\nAs for the ride out here, we didn't get to talk much. As a result, I started thinking over everything that had happened since I met my new family. And I was starting to accept things the way they were. It wasn't right, or moral. It would be difficult and exhausting keeping up this kind of secret.",
        "But...my sisters were worth it. Each and every one of them. Even if nothing happened between us. But I found myself becoming more and more okay with how things were progressing.\n\nI just needed to figure out what the hell was going on with Amanda and myself.\n\n \n"
    ],
    "authorname": "Darth_Aussie",
    "tags": [
        "big brother",
        "brother x sister",
        "deepthroat",
        "hand job",
        "harem",
        "incest",
        "little sister",
        "rough sex",
        "tit fuck",
        "twins"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lust-at-first-sight-bk-01-pt-03"
}