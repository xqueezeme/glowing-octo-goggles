{
    "title": "Improve Your Writing: Summary",
    "pages": [
        "I have written fiction for twenty-five years: published three novels and a collection of short and novella-length stories, as well as have a desk-full of novels and short stories in progress. Below I have summarized the questions aspiring authors ask me and my answers to them. Hope this helps you write better stories. \n\nPlot: All well written stories follow the simple, 3-act structure: Greek Tragedies to Shakespeare to Spielberg. \n\nAct 1: Beginning \n\nIntroduce the setting and time (solidly ground your reader so he knows where and when) \n\nIntroduce at least some of the characters (so your reader can begin emotional involvement with them.) \n\nThe precipitating incident (why start the story now?) Also use this to hint what the story is about. \n\nBegin action NOW! If you haven't done something interesting (the hook) by the third page (of a novel-length story) you've probably lost your reader. Shorter stories, even sooner. \n\nAct 2: Middle \n\nBuild the story \n\nTwo steps forward, one step back. Difficulty makes forward progress sweeter. \n\nYour readers want to see small victories and failures on your character's path to the big victory. \n\nBuild from small to more significant and important happenings. Build tension via failure. \n\nAct 3: End \n\nYour story's climax \n\nSummary &amp; wrap-up (if Romance, then end with Happily Ever After) \n\nMemory Dump \n\nDon't dump a lot of description in all at once, especially right at the beginning. \n\nSprinkle it in as your story proceeds. \n\nWhite space (makes your story easier on the eye and brain): \n\nVary sentence length and paragraph length. Keep sentence length to 24 words or less. \n\nUse dialogue to give the reader's brain a change of pace \n\nUse thoughts (internal dialogue) to give the reader's mind a rest from action \n\nIf you can't read it out loud a week later without stumbling, fix your stumbling block. \n\nLet the characters 'live and experience' what you want your reader to experience. Through your characters, let your readers live it, too. Don't just tell them! (The old adage: show, don't tell!) \n\nCharacter Development \n\nCharacters should grow, change, and develop as a result of what they do in your story. Else, why have the story at all? \n\nAll major characters, even your villains, must be someone the reader can become emotionally involved with (either good or bad). Enjoyment of reading comes from emotional attachment and involvement. Without this, the story will be flat, and if the reader does finish reading it, he/she will end up frustrated and dissatisfied. You don't want frustrated readers. \n\nCharacter Goals, Motivation, and Conflict (GMC). Each character must have all three. \n\nGoals: What does the character want? (It's best if goals are both surface and deep-rooted) \n\nExample: Main character, Joe, wants romance with Marcy (surface). Joe wants to reinforce his manhood image to himself and boost his ego. (deeper) \n\nMotivation: Why does he want what he wants? \n\nExample: Make him feel manly and 'worthy' of existence as a human being. \n\nConflict: Why can't he have it? \n\nExample: Marcy thinks he's a nerd, beneath her, and she won't give him the time of day. Not only that, she's been living with his best friend forever, and isn't about to change. \n\nYour story will now be about how Joe integrates these GMC's and succeeds, or accepts failure. Without goals, motivations, and conflict, your characters and story will be boring. \n\nCaution: Petty arguments are not conflict, nor are minor disagreements that could be solved by simple discussion. Conflict must be substantial, something worth fighting/struggling to overcome. \n\nPoint of View (POV) \n\nPoint of view means through whose eyes the reader experiences your story. \n\nIf 'Jerry' is your point of view character, the reader should experience the story (or that part of the story) through his senses, and only his senses. He knows only what he feels, hears, smells, says, tastes, and/or thinks. He does not know what anyone else thinks unless they tell him, or he infers it from something they do or say or show via their expressions. \n\nPOV should remain constant throughout any scene. To do otherwise disorients the reader and is quite annoying. (In professional jargon it's called 'head hopping.'). Anything that disorients the reader is prone to sending him away to some other writer/story. \n\nPOV should be changed only at chapter breaks or scene breaks. Not in the middle of scenes or paragraphs. Usually, it's easier at first if the whole story is written it one POV, but not always. \n\nWhen changing POV, make it obvious that the POV has changed and to whose POV it changed. Example: If Jerry was the POV character, and Sue is to be the new POV, then in the first sentence maybe say: Sue thought, Sue heard, Sue wished, Sue tasted, or whatever is appropriate to your story. Jerry would not have thought, wished, tasted or heard exactly what Sue did, so now we know we're in Sue's head instead of Jerry's. \n\nWhen you use one character as the Point of View, that is often referred to 'Close' or 'Deep' POV because the reader is close to that character. This POV has the advantage of putting the reader inside the character's head where it's easier to achieve the reader's emotional involvement with the character. (Which, as an author, is your primary goal, right?) \n\nOld fashioned stories will sometimes be written in another POV called 'Omniscient.' At best, this POV distances the reader from the characters. At worst, it ends up being an excuse for plain old, self-destructive 'head hopping.' With Omniscient POV the viewer stands far back and watches, sort of like a god, seeing all, knowing all, but really not caring all that much about the characters or what is happening to them. Not good for involving your reader with your story. \n\nHead hopping with POV problems is one of the greatest faults I've seen with stories from new authors. Do your best for your great story ideas &amp; plots. Control your POV's. \n\nVerb Tense \n\nVerb tense must remain constant throughout the story (except when contained within quoted dialogue, thoughts, letters, documents, etc.). If it's happening now, it stays now. If it happened sometime in the past, then it stays past. Don't mix them.  \n\nNote: Present tense tends to be fatiguing to read because it's very urgent. But if you need something urgent and it's short, (as within dialogue) then use it. But don't overdo it. \n\nPerson \n\nFirst person: The 'I/we' way of telling something. 'We went to the caf\u00e9, where I hit on the cashier again.' \n\nSecond person: The 'You' way of telling something. 'You go to a caf\u00e9, and there you hit on the cashier again.' Seldom works, so don't use it if you can avoid it. Mostly you see second person in cooking recipes: '(You) break three eggs, then (you) mix them with the milk and flour. (You) roll out 1/4\" thick and (you) cut into 1 inch squares.' Incidentally, much of this article is 2<sup>nd</sup> person because it is a case of giving directions (like a recipe). \n\nThird Person: The 'he/him/she/her/they/it/them' way of telling something. 'They went to the caf\u00e9 where he hit on the cashier for the hundredth time .' \n\nKeep the 'person' of your story constant. Don't wander off into mixing. Of course, it's okay, done properly, to mix within dialog and thoughts, just as it's no problem to mix tenses within dialogue and thoughts. But beware to do it right! \n\nSo there you have it. Hope all this helps you write better and earn more favorable reader response. Isn't Literotica fun? \n\nWrite On! \n\nChuck Lyons."
    ],
    "authorname": "GeneMajors",
    "tags": [
        "fiction",
        "writing",
        "author",
        "writing guide",
        "how to",
        "guide"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/improve-your-writing-summary"
}